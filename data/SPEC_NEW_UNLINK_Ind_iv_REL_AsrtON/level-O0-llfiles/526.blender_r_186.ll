; ModuleID = 'blender/source/blender/blenkernel/intern/mask.c'
source_filename = "blender/source/blender/blenkernel/intern/mask.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.anon.0 = type { %struct.ListBase, %struct.GHash* }
%struct.ListBase = type { i8*, i8* }
%struct.GHash = type opaque
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.MaskSpline = type { %struct.MaskSpline*, %struct.MaskSpline*, i16, i8, i8, i32, %struct.MaskSplinePoint*, %struct.MaskParent, %struct.MaskSplinePoint* }
%struct.MaskParent = type { i32, i32, %struct.ID*, [64 x i8], [64 x i8], [2 x float], [4 x [2 x float]] }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.MaskSplinePoint = type { %struct.BezTriple, i32, i32, %struct.MaskSplinePointUW*, %struct.MaskParent }
%struct.MaskSplinePointUW = type { float, float, i32 }
%struct.MaskLayer = type { %struct.MaskLayer*, %struct.MaskLayer*, [64 x i8], %struct.ListBase, %struct.ListBase, %struct.MaskSpline*, %struct.MaskSplinePoint*, float, i8, i8, i8, [7 x i8], i8, i8 }
%struct.Mask = type { %struct.ID, %struct.AnimData*, %struct.ListBase, i32, i32, i32, i32, i32, i32 }
%struct.AnimData = type opaque
%struct.MaskLayerShape = type { %struct.MaskLayerShape*, %struct.MaskLayerShape*, float*, i32, i32, i8, [7 x i8] }
%struct.MaskLayerShapeElem = type { [8 x float] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type opaque
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.ARegionType = type opaque
%struct.SpaceNode = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ID*, %struct.ID*, i16, i16, float, float, float, float, float, [2 x float], %struct.ListBase, %struct.bNodeTree*, %struct.bNodeTree*, [64 x i8], i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmTimer = type opaque
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type opaque
%struct.SpaceClip = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, float, float, float, float, %struct.MovieClipUser, %struct.MovieClip*, %struct.MovieClipScopes, i32, i16, i16, i32, [2 x float], float, float, i32, [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i32, i32, [2 x float], %struct.MaskSpaceInfo }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.MovieClipScopes = type { i16, i16, i32, i32, i32, %struct.MovieTrackingMarker, %struct.ImBuf*, %struct.ImBuf*, [2 x float], i16, i16, i32, %struct.MovieTrackingTrack*, %struct.MovieTrackingMarker*, [2 x float] }
%struct.MaskSpaceInfo = type { %struct.Mask*, i8, i8, i8, [5 x i8] }
%struct.SpaceImage = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.Image*, %struct.ImageUser, %struct.CurveMapping*, %struct.Scopes, %struct.Histogram, %struct.bGPdata*, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, float*, float*, float*, float*, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.SeqIterator = type { %struct.Sequence**, i32, i32, %struct.Sequence*, i32 }
%struct.NodeTreeIterStore = type { %struct.bNodeTree*, %struct.Scene*, %struct.Material*, %struct.Tex*, %struct.Lamp*, %struct.World*, %struct.FreestyleLineStyle* }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.Group = type opaque
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Lamp = type { %struct.ID, %struct.AnimData*, i16, i16, i32, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.CurveMapping*, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, [2 x i8], %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [4 x i8], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.FreestyleLineStyle = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, i32, float, i32, i32, i32, i32, float, float, float, float, float, i32, i16, i16, i16, i16, i16, i16, i32, i32, float, i16, i16, i16, [3 x i16], i16, i16, i16, i16, i16, i16, i32, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.MovieTrackingObject = type { %struct.MovieTrackingObject*, %struct.MovieTrackingObject*, [64 x i8], i32, float, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, i32, i32 }

@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@__func__.BKE_mask_layer_new = private unnamed_addr constant [19 x i8] c"BKE_mask_layer_new\00", align 1
@.str = private unnamed_addr constant [10 x i8] c"MaskLayer\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"new mask layer\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"new mask layer shape\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.3 = private unnamed_addr constant [16 x i8] c"new mask spline\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"new mask spline point\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.5 = private unnamed_addr constant [14 x i8] c"mask point uw\00", align 1
@MEM_reallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@__func__.BKE_mask_point_add_uw = private unnamed_addr constant [22 x i8] c"BKE_mask_point_add_uw\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"Mask\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.7 = private unnamed_addr constant [11 x i8] c"new spline\00", align 1
@__func__.BKE_mask_layer_shape_alloc = private unnamed_addr constant [27 x i8] c"BKE_mask_layer_shape_alloc\00", align 1
@MEM_allocN_len = external dso_local global i64 (i8*)*, align 8
@__func__.BKE_mask_spline_ensure_deform = private unnamed_addr constant [30 x i8] c"BKE_mask_spline_ensure_deform\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"%s: vert mismatch %d != %d (frame %d)\0A\00", align 1
@__func__.BKE_mask_layer_shape_from_mask = private unnamed_addr constant [31 x i8] c"BKE_mask_layer_shape_from_mask\00", align 1
@__func__.BKE_mask_layer_shape_to_mask = private unnamed_addr constant [29 x i8] c"BKE_mask_layer_shape_to_mask\00", align 1
@.str.9 = private unnamed_addr constant [50 x i8] c"%s: vert mismatch %d != %d != %d (frame %d - %d)\0A\00", align 1
@__func__.BKE_mask_layer_shape_to_mask_interp = private unnamed_addr constant [36 x i8] c"BKE_mask_layer_shape_to_mask_interp\00", align 1
@__func__.BKE_mask_layer_shape_changed_add = private unnamed_addr constant [33 x i8] c"BKE_mask_layer_shape_changed_add\00", align 1
@__func__.BKE_mask_layer_shape_changed_remove = private unnamed_addr constant [36 x i8] c"BKE_mask_layer_shape_changed_remove\00", align 1
@mask_clipboard = internal global %struct.anon.0 zeroinitializer, align 8, !dbg !0
@.str.10 = private unnamed_addr constant [23 x i8] c"mask clipboard ID hash\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"mask clipboard ID name\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BezTriple* @BKE_mask_spline_point_next_bezt(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %points_array, %struct.MaskSplinePoint* %point) #0 !dbg !2320 {
entry:
  %retval = alloca %struct.BezTriple*, align 8
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %points_array.addr = alloca %struct.MaskSplinePoint*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !2385, metadata !DIExpression()), !dbg !2386
  store %struct.MaskSplinePoint* %points_array, %struct.MaskSplinePoint** %points_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %points_array.addr, metadata !2387, metadata !DIExpression()), !dbg !2388
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !2389, metadata !DIExpression()), !dbg !2390
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2391
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array.addr, align 8, !dbg !2393
  %2 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2394
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %2, i32 0, i32 5, !dbg !2395
  %3 = load i32, i32* %tot_point, align 4, !dbg !2395
  %sub = sub nsw i32 %3, 1, !dbg !2396
  %idxprom = sext i32 %sub to i64, !dbg !2393
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %1, i64 %idxprom, !dbg !2393
  %cmp = icmp eq %struct.MaskSplinePoint* %0, %arrayidx, !dbg !2397
  br i1 %cmp, label %if.then, label %if.else3, !dbg !2398

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2399
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %4, i32 0, i32 2, !dbg !2402
  %5 = load i16, i16* %flag, align 8, !dbg !2402
  %conv = sext i16 %5 to i32, !dbg !2399
  %and = and i32 %conv, 2, !dbg !2403
  %tobool = icmp ne i32 %and, 0, !dbg !2403
  br i1 %tobool, label %if.then1, label %if.else, !dbg !2404

if.then1:                                         ; preds = %if.then
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array.addr, align 8, !dbg !2405
  %arrayidx2 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i64 0, !dbg !2405
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx2, i32 0, i32 0, !dbg !2407
  store %struct.BezTriple* %bezt, %struct.BezTriple** %retval, align 8, !dbg !2408
  br label %return, !dbg !2408

if.else:                                          ; preds = %if.then
  store %struct.BezTriple* null, %struct.BezTriple** %retval, align 8, !dbg !2409
  br label %return, !dbg !2409

if.else3:                                         ; preds = %entry
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2411
  %add.ptr = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %7, i64 1, !dbg !2413
  %bezt4 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %add.ptr, i32 0, i32 0, !dbg !2414
  store %struct.BezTriple* %bezt4, %struct.BezTriple** %retval, align 8, !dbg !2415
  br label %return, !dbg !2415

return:                                           ; preds = %if.else3, %if.else, %if.then1
  %8 = load %struct.BezTriple*, %struct.BezTriple** %retval, align 8, !dbg !2416
  ret %struct.BezTriple* %8, !dbg !2416
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskSplinePoint* @BKE_mask_spline_point_array(%struct.MaskSpline* %spline) #0 !dbg !2417 {
entry:
  %spline.addr = alloca %struct.MaskSpline*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !2421, metadata !DIExpression()), !dbg !2422
  %0 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2423
  %points_deform = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %0, i32 0, i32 8, !dbg !2424
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform, align 8, !dbg !2424
  %tobool = icmp ne %struct.MaskSplinePoint* %1, null, !dbg !2423
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2423

cond.true:                                        ; preds = %entry
  %2 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2425
  %points_deform1 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %2, i32 0, i32 8, !dbg !2426
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform1, align 8, !dbg !2426
  br label %cond.end, !dbg !2423

cond.false:                                       ; preds = %entry
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2427
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %4, i32 0, i32 6, !dbg !2428
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !2428
  br label %cond.end, !dbg !2423

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.MaskSplinePoint* [ %3, %cond.true ], [ %5, %cond.false ], !dbg !2423
  ret %struct.MaskSplinePoint* %cond, !dbg !2429
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskSplinePoint* @BKE_mask_spline_point_array_from_point(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %point_ref) #0 !dbg !2430 {
entry:
  %retval = alloca %struct.MaskSplinePoint*, align 8
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %point_ref.addr = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !2433, metadata !DIExpression()), !dbg !2434
  store %struct.MaskSplinePoint* %point_ref, %struct.MaskSplinePoint** %point_ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_ref.addr, metadata !2435, metadata !DIExpression()), !dbg !2436
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_ref.addr, align 8, !dbg !2437
  %1 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2439
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %1, i32 0, i32 6, !dbg !2440
  %2 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !2440
  %cmp = icmp uge %struct.MaskSplinePoint* %0, %2, !dbg !2441
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2442

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_ref.addr, align 8, !dbg !2443
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2444
  %points1 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %4, i32 0, i32 6, !dbg !2445
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points1, align 8, !dbg !2445
  %6 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2446
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %6, i32 0, i32 5, !dbg !2447
  %7 = load i32, i32* %tot_point, align 4, !dbg !2447
  %idxprom = sext i32 %7 to i64, !dbg !2444
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %5, i64 %idxprom, !dbg !2444
  %cmp2 = icmp ult %struct.MaskSplinePoint* %3, %arrayidx, !dbg !2448
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2449

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2450
  %points3 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %8, i32 0, i32 6, !dbg !2452
  %9 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points3, align 8, !dbg !2452
  store %struct.MaskSplinePoint* %9, %struct.MaskSplinePoint** %retval, align 8, !dbg !2453
  br label %return, !dbg !2453

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_ref.addr, align 8, !dbg !2454
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2456
  %points_deform = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %11, i32 0, i32 8, !dbg !2457
  %12 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform, align 8, !dbg !2457
  %cmp4 = icmp uge %struct.MaskSplinePoint* %10, %12, !dbg !2458
  br i1 %cmp4, label %land.lhs.true5, label %if.end13, !dbg !2459

land.lhs.true5:                                   ; preds = %if.end
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_ref.addr, align 8, !dbg !2460
  %14 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2461
  %points_deform6 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %14, i32 0, i32 8, !dbg !2462
  %15 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform6, align 8, !dbg !2462
  %16 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2463
  %tot_point7 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %16, i32 0, i32 5, !dbg !2464
  %17 = load i32, i32* %tot_point7, align 4, !dbg !2464
  %idxprom8 = sext i32 %17 to i64, !dbg !2461
  %arrayidx9 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %15, i64 %idxprom8, !dbg !2461
  %cmp10 = icmp ult %struct.MaskSplinePoint* %13, %arrayidx9, !dbg !2465
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !2466

if.then11:                                        ; preds = %land.lhs.true5
  %18 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2467
  %points_deform12 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %18, i32 0, i32 8, !dbg !2469
  %19 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform12, align 8, !dbg !2469
  store %struct.MaskSplinePoint* %19, %struct.MaskSplinePoint** %retval, align 8, !dbg !2470
  br label %return, !dbg !2470

if.end13:                                         ; preds = %land.lhs.true5, %if.end
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %retval, align 8, !dbg !2471
  br label %return, !dbg !2471

return:                                           ; preds = %if.end13, %if.then11, %if.then
  %20 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %retval, align 8, !dbg !2472
  ret %struct.MaskSplinePoint* %20, !dbg !2472
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskLayer* @BKE_mask_layer_new(%struct.Mask* %mask, i8* %name) #0 !dbg !2473 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  %name.addr = alloca i8*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !2495, metadata !DIExpression()), !dbg !2496
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2497, metadata !DIExpression()), !dbg !2498
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !2499, metadata !DIExpression()), !dbg !2502
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2503
  %call = call i8* %0(i64 144, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.BKE_mask_layer_new, i64 0, i64 0)), !dbg !2503
  %1 = bitcast i8* %call to %struct.MaskLayer*, !dbg !2503
  store %struct.MaskLayer* %1, %struct.MaskLayer** %masklay, align 8, !dbg !2502
  %2 = load i8*, i8** %name.addr, align 8, !dbg !2504
  %tobool = icmp ne i8* %2, null, !dbg !2504
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !2506

land.lhs.true:                                    ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !2507
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !2507
  %4 = load i8, i8* %arrayidx, align 1, !dbg !2507
  %conv = zext i8 %4 to i32, !dbg !2507
  %tobool1 = icmp ne i32 %conv, 0, !dbg !2507
  br i1 %tobool1, label %if.then, label %if.else, !dbg !2508

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2509
  %name2 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %5, i32 0, i32 2, !dbg !2510
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name2, i64 0, i64 0, !dbg !2509
  %6 = load i8*, i8** %name.addr, align 8, !dbg !2511
  %call3 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %6, i64 64), !dbg !2512
  br label %if.end, !dbg !2512

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2513
  %name4 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %7, i32 0, i32 2, !dbg !2514
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %name4, i64 0, i64 0, !dbg !2513
  %call6 = call i8* @strcpy(i8* %arraydecay5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #6, !dbg !2515
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2516
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %8, i32 0, i32 2, !dbg !2517
  %9 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2518
  %10 = bitcast %struct.MaskLayer* %9 to i8*, !dbg !2518
  call void @BLI_addtail(%struct.ListBase* %masklayers, i8* %10), !dbg !2519
  %11 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2520
  %12 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2521
  call void @BKE_mask_layer_unique_name(%struct.Mask* %11, %struct.MaskLayer* %12), !dbg !2522
  %13 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2523
  %masklay_tot = getelementptr inbounds %struct.Mask, %struct.Mask* %13, i32 0, i32 4, !dbg !2524
  %14 = load i32, i32* %masklay_tot, align 4, !dbg !2525
  %inc = add nsw i32 %14, 1, !dbg !2525
  store i32 %inc, i32* %masklay_tot, align 4, !dbg !2525
  %15 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2526
  %blend = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %15, i32 0, i32 8, !dbg !2527
  store i8 7, i8* %blend, align 4, !dbg !2528
  %16 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2529
  %alpha = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %16, i32 0, i32 7, !dbg !2530
  store float 1.000000e+00, float* %alpha, align 8, !dbg !2531
  %17 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2532
  %flag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %17, i32 0, i32 12, !dbg !2533
  store i8 -64, i8* %flag, align 2, !dbg !2534
  %18 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !2535
  ret %struct.MaskLayer* %18, !dbg !2536
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #3

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_unique_name(%struct.Mask* %mask, %struct.MaskLayer* %masklay) #0 !dbg !2537 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !2540, metadata !DIExpression()), !dbg !2541
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !2542, metadata !DIExpression()), !dbg !2543
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2544
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %0, i32 0, i32 2, !dbg !2545
  %1 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2546
  %2 = bitcast %struct.MaskLayer* %1 to i8*, !dbg !2546
  call void @BLI_uniquename(%struct.ListBase* %masklayers, i8* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8 zeroext 46, i32 16, i32 64), !dbg !2547
  ret void, !dbg !2548
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskLayer* @BKE_mask_layer_active(%struct.Mask* %mask) #0 !dbg !2549 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !2552, metadata !DIExpression()), !dbg !2553
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2554
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %0, i32 0, i32 2, !dbg !2555
  %1 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2556
  %masklay_act = getelementptr inbounds %struct.Mask, %struct.Mask* %1, i32 0, i32 3, !dbg !2557
  %2 = load i32, i32* %masklay_act, align 8, !dbg !2557
  %call = call i8* @BLI_findlink(%struct.ListBase* %masklayers, i32 %2), !dbg !2558
  %3 = bitcast i8* %call to %struct.MaskLayer*, !dbg !2558
  ret %struct.MaskLayer* %3, !dbg !2559
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_active_set(%struct.Mask* %mask, %struct.MaskLayer* %masklay) #0 !dbg !2560 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !2561, metadata !DIExpression()), !dbg !2562
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !2563, metadata !DIExpression()), !dbg !2564
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2565
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %0, i32 0, i32 2, !dbg !2566
  %1 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2567
  %2 = bitcast %struct.MaskLayer* %1 to i8*, !dbg !2567
  %call = call i32 @BLI_findindex(%struct.ListBase* %masklayers, i8* %2), !dbg !2568
  %3 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2569
  %masklay_act = getelementptr inbounds %struct.Mask, %struct.Mask* %3, i32 0, i32 3, !dbg !2570
  store i32 %call, i32* %masklay_act, align 8, !dbg !2571
  ret void, !dbg !2572
}

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_remove(%struct.Mask* %mask, %struct.MaskLayer* %masklay) #0 !dbg !2573 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !2574, metadata !DIExpression()), !dbg !2575
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !2576, metadata !DIExpression()), !dbg !2577
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2578
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %0, i32 0, i32 2, !dbg !2579
  %1 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2580
  %2 = bitcast %struct.MaskLayer* %1 to i8*, !dbg !2580
  call void @BLI_remlink(%struct.ListBase* %masklayers, i8* %2), !dbg !2581
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2582
  call void @BKE_mask_layer_free(%struct.MaskLayer* %3), !dbg !2583
  %4 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2584
  %masklay_tot = getelementptr inbounds %struct.Mask, %struct.Mask* %4, i32 0, i32 4, !dbg !2585
  %5 = load i32, i32* %masklay_tot, align 4, !dbg !2586
  %dec = add nsw i32 %5, -1, !dbg !2586
  store i32 %dec, i32* %masklay_tot, align 4, !dbg !2586
  %6 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2587
  %masklay_act = getelementptr inbounds %struct.Mask, %struct.Mask* %6, i32 0, i32 3, !dbg !2589
  %7 = load i32, i32* %masklay_act, align 8, !dbg !2589
  %8 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2590
  %masklay_tot1 = getelementptr inbounds %struct.Mask, %struct.Mask* %8, i32 0, i32 4, !dbg !2591
  %9 = load i32, i32* %masklay_tot1, align 4, !dbg !2591
  %cmp = icmp sge i32 %7, %9, !dbg !2592
  br i1 %cmp, label %if.then, label %if.end, !dbg !2593

if.then:                                          ; preds = %entry
  %10 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2594
  %masklay_tot2 = getelementptr inbounds %struct.Mask, %struct.Mask* %10, i32 0, i32 4, !dbg !2595
  %11 = load i32, i32* %masklay_tot2, align 4, !dbg !2595
  %sub = sub nsw i32 %11, 1, !dbg !2596
  %12 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !2597
  %masklay_act3 = getelementptr inbounds %struct.Mask, %struct.Mask* %12, i32 0, i32 3, !dbg !2598
  store i32 %sub, i32* %masklay_act3, align 8, !dbg !2599
  br label %if.end, !dbg !2597

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2600
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_free(%struct.MaskLayer* %masklay) #0 !dbg !2601 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !2604, metadata !DIExpression()), !dbg !2605
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2606
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %0, i32 0, i32 3, !dbg !2607
  call void @BKE_mask_spline_free_list(%struct.ListBase* %splines), !dbg !2608
  %1 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2609
  call void @BKE_mask_layer_free_shapes(%struct.MaskLayer* %1), !dbg !2610
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2611
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2612
  %4 = bitcast %struct.MaskLayer* %3 to i8*, !dbg !2612
  call void %2(i8* %4), !dbg !2611
  ret void, !dbg !2613
}

declare dso_local void @BLI_uniquename(%struct.ListBase*, i8*, i8*, i8 zeroext, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskLayer* @BKE_mask_layer_copy(%struct.MaskLayer* %masklay) #0 !dbg !2614 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %masklay_new = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %spline_new = alloca %struct.MaskSpline*, align 8
  %masklay_shape = alloca %struct.MaskLayerShape*, align 8
  %masklay_shape_new = alloca %struct.MaskLayerShape*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !2617, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay_new, metadata !2619, metadata !DIExpression()), !dbg !2620
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !2621, metadata !DIExpression()), !dbg !2622
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2623
  %call = call i8* %0(i64 144, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)), !dbg !2623
  %1 = bitcast i8* %call to %struct.MaskLayer*, !dbg !2623
  store %struct.MaskLayer* %1, %struct.MaskLayer** %masklay_new, align 8, !dbg !2624
  %2 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay_new, align 8, !dbg !2625
  %name = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %2, i32 0, i32 2, !dbg !2626
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !2625
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2627
  %name1 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 2, !dbg !2628
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %name1, i64 0, i64 0, !dbg !2627
  %call3 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay2, i64 64), !dbg !2629
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2630
  %alpha = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 7, !dbg !2631
  %5 = load float, float* %alpha, align 8, !dbg !2631
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay_new, align 8, !dbg !2632
  %alpha4 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 7, !dbg !2633
  store float %5, float* %alpha4, align 8, !dbg !2634
  %7 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2635
  %blend = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %7, i32 0, i32 8, !dbg !2636
  %8 = load i8, i8* %blend, align 4, !dbg !2636
  %9 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay_new, align 8, !dbg !2637
  %blend5 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %9, i32 0, i32 8, !dbg !2638
  store i8 %8, i8* %blend5, align 4, !dbg !2639
  %10 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2640
  %blend_flag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %10, i32 0, i32 9, !dbg !2641
  %11 = load i8, i8* %blend_flag, align 1, !dbg !2641
  %12 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay_new, align 8, !dbg !2642
  %blend_flag6 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %12, i32 0, i32 9, !dbg !2643
  store i8 %11, i8* %blend_flag6, align 1, !dbg !2644
  %13 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2645
  %flag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %13, i32 0, i32 12, !dbg !2646
  %14 = load i8, i8* %flag, align 2, !dbg !2646
  %15 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay_new, align 8, !dbg !2647
  %flag7 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %15, i32 0, i32 12, !dbg !2648
  store i8 %14, i8* %flag7, align 2, !dbg !2649
  %16 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2650
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %16, i32 0, i32 13, !dbg !2651
  %17 = load i8, i8* %restrictflag, align 1, !dbg !2651
  %18 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay_new, align 8, !dbg !2652
  %restrictflag8 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %18, i32 0, i32 13, !dbg !2653
  store i8 %17, i8* %restrictflag8, align 1, !dbg !2654
  %19 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2655
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %19, i32 0, i32 3, !dbg !2657
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !2658
  %20 = load i8*, i8** %first, align 8, !dbg !2658
  %21 = bitcast i8* %20 to %struct.MaskSpline*, !dbg !2655
  store %struct.MaskSpline* %21, %struct.MaskSpline** %spline, align 8, !dbg !2659
  br label %for.cond, !dbg !2660

for.cond:                                         ; preds = %for.inc, %entry
  %22 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2661
  %tobool = icmp ne %struct.MaskSpline* %22, null, !dbg !2663
  br i1 %tobool, label %for.body, label %for.end, !dbg !2663

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline_new, metadata !2664, metadata !DIExpression()), !dbg !2666
  %23 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2667
  %call9 = call %struct.MaskSpline* @BKE_mask_spline_copy(%struct.MaskSpline* %23), !dbg !2668
  store %struct.MaskSpline* %call9, %struct.MaskSpline** %spline_new, align 8, !dbg !2666
  %24 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay_new, align 8, !dbg !2669
  %splines10 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %24, i32 0, i32 3, !dbg !2670
  %25 = load %struct.MaskSpline*, %struct.MaskSpline** %spline_new, align 8, !dbg !2671
  %26 = bitcast %struct.MaskSpline* %25 to i8*, !dbg !2671
  call void @BLI_addtail(%struct.ListBase* %splines10, i8* %26), !dbg !2672
  br label %for.inc, !dbg !2673

for.inc:                                          ; preds = %for.body
  %27 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2674
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %27, i32 0, i32 0, !dbg !2675
  %28 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !2675
  store %struct.MaskSpline* %28, %struct.MaskSpline** %spline, align 8, !dbg !2676
  br label %for.cond, !dbg !2677, !llvm.loop !2678

for.end:                                          ; preds = %for.cond
  %29 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2680
  %splines_shapes = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %29, i32 0, i32 4, !dbg !2682
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes, i32 0, i32 0, !dbg !2683
  %30 = load i8*, i8** %first11, align 8, !dbg !2683
  %tobool12 = icmp ne i8* %30, null, !dbg !2680
  br i1 %tobool12, label %if.then, label %if.end, !dbg !2684

if.then:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape, metadata !2685, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape_new, metadata !2700, metadata !DIExpression()), !dbg !2701
  %31 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2702
  %splines_shapes13 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %31, i32 0, i32 4, !dbg !2704
  %first14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes13, i32 0, i32 0, !dbg !2705
  %32 = load i8*, i8** %first14, align 8, !dbg !2705
  %33 = bitcast i8* %32 to %struct.MaskLayerShape*, !dbg !2702
  store %struct.MaskLayerShape* %33, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !2706
  br label %for.cond15, !dbg !2707

for.cond15:                                       ; preds = %for.inc26, %if.then
  %34 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !2708
  %tobool16 = icmp ne %struct.MaskLayerShape* %34, null, !dbg !2710
  br i1 %tobool16, label %for.body17, label %for.end28, !dbg !2710

for.body17:                                       ; preds = %for.cond15
  %35 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2711
  %call18 = call i8* %35(i64 40, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0)), !dbg !2711
  %36 = bitcast i8* %call18 to %struct.MaskLayerShape*, !dbg !2711
  store %struct.MaskLayerShape* %36, %struct.MaskLayerShape** %masklay_shape_new, align 8, !dbg !2713
  %37 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !2714
  %38 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !2715
  %data = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %38, i32 0, i32 2, !dbg !2716
  %39 = load float*, float** %data, align 8, !dbg !2716
  %40 = bitcast float* %39 to i8*, !dbg !2715
  %call19 = call i8* %37(i8* %40), !dbg !2714
  %41 = bitcast i8* %call19 to float*, !dbg !2714
  %42 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_new, align 8, !dbg !2717
  %data20 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %42, i32 0, i32 2, !dbg !2718
  store float* %41, float** %data20, align 8, !dbg !2719
  %43 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !2720
  %tot_vert = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %43, i32 0, i32 3, !dbg !2721
  %44 = load i32, i32* %tot_vert, align 8, !dbg !2721
  %45 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_new, align 8, !dbg !2722
  %tot_vert21 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %45, i32 0, i32 3, !dbg !2723
  store i32 %44, i32* %tot_vert21, align 8, !dbg !2724
  %46 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !2725
  %flag22 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %46, i32 0, i32 5, !dbg !2726
  %47 = load i8, i8* %flag22, align 8, !dbg !2726
  %48 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_new, align 8, !dbg !2727
  %flag23 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %48, i32 0, i32 5, !dbg !2728
  store i8 %47, i8* %flag23, align 8, !dbg !2729
  %49 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !2730
  %frame = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %49, i32 0, i32 4, !dbg !2731
  %50 = load i32, i32* %frame, align 4, !dbg !2731
  %51 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_new, align 8, !dbg !2732
  %frame24 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %51, i32 0, i32 4, !dbg !2733
  store i32 %50, i32* %frame24, align 4, !dbg !2734
  %52 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay_new, align 8, !dbg !2735
  %splines_shapes25 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %52, i32 0, i32 4, !dbg !2736
  %53 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_new, align 8, !dbg !2737
  %54 = bitcast %struct.MaskLayerShape* %53 to i8*, !dbg !2737
  call void @BLI_addtail(%struct.ListBase* %splines_shapes25, i8* %54), !dbg !2738
  br label %for.inc26, !dbg !2739

for.inc26:                                        ; preds = %for.body17
  %55 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !2740
  %next27 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %55, i32 0, i32 0, !dbg !2741
  %56 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %next27, align 8, !dbg !2741
  store %struct.MaskLayerShape* %56, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !2742
  br label %for.cond15, !dbg !2743, !llvm.loop !2744

for.end28:                                        ; preds = %for.cond15
  br label %if.end, !dbg !2746

if.end:                                           ; preds = %for.end28, %for.end
  %57 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay_new, align 8, !dbg !2747
  ret %struct.MaskLayer* %57, !dbg !2748
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskSpline* @BKE_mask_spline_copy(%struct.MaskSpline* %spline) #0 !dbg !2749 {
entry:
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %nspline = alloca %struct.MaskSpline*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !2752, metadata !DIExpression()), !dbg !2753
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %nspline, metadata !2754, metadata !DIExpression()), !dbg !2755
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2756
  %call = call i8* %0(i64 224, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)), !dbg !2756
  %1 = bitcast i8* %call to %struct.MaskSpline*, !dbg !2756
  store %struct.MaskSpline* %1, %struct.MaskSpline** %nspline, align 8, !dbg !2755
  %2 = load %struct.MaskSpline*, %struct.MaskSpline** %nspline, align 8, !dbg !2757
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2758
  %4 = bitcast %struct.MaskSpline* %2 to i8*, !dbg !2759
  %5 = bitcast %struct.MaskSpline* %3 to i8*, !dbg !2759
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 224, i1 false), !dbg !2759
  %6 = load %struct.MaskSpline*, %struct.MaskSpline** %nspline, align 8, !dbg !2760
  %points_deform = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %6, i32 0, i32 8, !dbg !2761
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %points_deform, align 8, !dbg !2762
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2763
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %7, i32 0, i32 6, !dbg !2764
  %8 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !2764
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2765
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %9, i32 0, i32 5, !dbg !2766
  %10 = load i32, i32* %tot_point, align 4, !dbg !2766
  %call1 = call %struct.MaskSplinePoint* @mask_spline_points_copy(%struct.MaskSplinePoint* %8, i32 %10), !dbg !2767
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %nspline, align 8, !dbg !2768
  %points2 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %11, i32 0, i32 6, !dbg !2769
  store %struct.MaskSplinePoint* %call1, %struct.MaskSplinePoint** %points2, align 8, !dbg !2770
  %12 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2771
  %points_deform3 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %12, i32 0, i32 8, !dbg !2773
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform3, align 8, !dbg !2773
  %tobool = icmp ne %struct.MaskSplinePoint* %13, null, !dbg !2771
  br i1 %tobool, label %if.then, label %if.end, !dbg !2774

if.then:                                          ; preds = %entry
  %14 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2775
  %points_deform4 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %14, i32 0, i32 8, !dbg !2777
  %15 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform4, align 8, !dbg !2777
  %16 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2778
  %tot_point5 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %16, i32 0, i32 5, !dbg !2779
  %17 = load i32, i32* %tot_point5, align 4, !dbg !2779
  %call6 = call %struct.MaskSplinePoint* @mask_spline_points_copy(%struct.MaskSplinePoint* %15, i32 %17), !dbg !2780
  %18 = load %struct.MaskSpline*, %struct.MaskSpline** %nspline, align 8, !dbg !2781
  %points_deform7 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %18, i32 0, i32 8, !dbg !2782
  store %struct.MaskSplinePoint* %call6, %struct.MaskSplinePoint** %points_deform7, align 8, !dbg !2783
  br label %if.end, !dbg !2784

if.end:                                           ; preds = %if.then, %entry
  %19 = load %struct.MaskSpline*, %struct.MaskSpline** %nspline, align 8, !dbg !2785
  ret %struct.MaskSpline* %19, !dbg !2786
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_copy_list(%struct.ListBase* %masklayers_new, %struct.ListBase* %masklayers) #0 !dbg !2787 {
entry:
  %masklayers_new.addr = alloca %struct.ListBase*, align 8
  %masklayers.addr = alloca %struct.ListBase*, align 8
  %layer = alloca %struct.MaskLayer*, align 8
  %layer_new = alloca %struct.MaskLayer*, align 8
  store %struct.ListBase* %masklayers_new, %struct.ListBase** %masklayers_new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %masklayers_new.addr, metadata !2790, metadata !DIExpression()), !dbg !2791
  store %struct.ListBase* %masklayers, %struct.ListBase** %masklayers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %masklayers.addr, metadata !2792, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %layer, metadata !2794, metadata !DIExpression()), !dbg !2795
  %0 = load %struct.ListBase*, %struct.ListBase** %masklayers.addr, align 8, !dbg !2796
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !2798
  %1 = load i8*, i8** %first, align 8, !dbg !2798
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !2796
  store %struct.MaskLayer* %2, %struct.MaskLayer** %layer, align 8, !dbg !2799
  br label %for.cond, !dbg !2800

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !2801
  %tobool = icmp ne %struct.MaskLayer* %3, null, !dbg !2803
  br i1 %tobool, label %for.body, label %for.end, !dbg !2803

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %layer_new, metadata !2804, metadata !DIExpression()), !dbg !2806
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !2807
  %call = call %struct.MaskLayer* @BKE_mask_layer_copy(%struct.MaskLayer* %4), !dbg !2808
  store %struct.MaskLayer* %call, %struct.MaskLayer** %layer_new, align 8, !dbg !2806
  %5 = load %struct.ListBase*, %struct.ListBase** %masklayers_new.addr, align 8, !dbg !2809
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %layer_new, align 8, !dbg !2810
  %7 = bitcast %struct.MaskLayer* %6 to i8*, !dbg !2810
  call void @BLI_addtail(%struct.ListBase* %5, i8* %7), !dbg !2811
  br label %for.inc, !dbg !2812

for.inc:                                          ; preds = %for.body
  %8 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !2813
  %next = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %8, i32 0, i32 0, !dbg !2814
  %9 = load %struct.MaskLayer*, %struct.MaskLayer** %next, align 8, !dbg !2814
  store %struct.MaskLayer* %9, %struct.MaskLayer** %layer, align 8, !dbg !2815
  br label %for.cond, !dbg !2816, !llvm.loop !2817

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2819
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskSpline* @BKE_mask_spline_add(%struct.MaskLayer* %masklay) #0 !dbg !2820 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !2823, metadata !DIExpression()), !dbg !2824
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !2825, metadata !DIExpression()), !dbg !2826
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2827
  %call = call i8* %0(i64 224, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)), !dbg !2827
  %1 = bitcast i8* %call to %struct.MaskSpline*, !dbg !2827
  store %struct.MaskSpline* %1, %struct.MaskSpline** %spline, align 8, !dbg !2828
  %2 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !2829
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %2, i32 0, i32 3, !dbg !2830
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2831
  %4 = bitcast %struct.MaskSpline* %3 to i8*, !dbg !2831
  call void @BLI_addtail(%struct.ListBase* %splines, i8* %4), !dbg !2832
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2833
  %call1 = call i8* %5(i64 272, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0)), !dbg !2833
  %6 = bitcast i8* %call1 to %struct.MaskSplinePoint*, !dbg !2833
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2834
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %7, i32 0, i32 6, !dbg !2835
  store %struct.MaskSplinePoint* %6, %struct.MaskSplinePoint** %points, align 8, !dbg !2836
  %8 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2837
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %8, i32 0, i32 5, !dbg !2838
  store i32 1, i32* %tot_point, align 4, !dbg !2839
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2840
  %weight_interp = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %9, i32 0, i32 4, !dbg !2841
  store i8 2, i8* %weight_interp, align 1, !dbg !2842
  %10 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2843
  %parent = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %10, i32 0, i32 7, !dbg !2844
  call void @BKE_mask_parent_init(%struct.MaskParent* %parent), !dbg !2845
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !2846
  ret %struct.MaskSpline* %11, !dbg !2847
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_parent_init(%struct.MaskParent* %parent) #0 !dbg !2848 {
entry:
  %parent.addr = alloca %struct.MaskParent*, align 8
  store %struct.MaskParent* %parent, %struct.MaskParent** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %parent.addr, metadata !2852, metadata !DIExpression()), !dbg !2853
  %0 = load %struct.MaskParent*, %struct.MaskParent** %parent.addr, align 8, !dbg !2854
  %id_type = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %0, i32 0, i32 0, !dbg !2855
  store i32 17229, i32* %id_type, align 8, !dbg !2856
  ret void, !dbg !2857
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mask_spline_remove(%struct.MaskLayer* %mask_layer, %struct.MaskSpline* %spline) #0 !dbg !2858 {
entry:
  %retval = alloca i8, align 1
  %mask_layer.addr = alloca %struct.MaskLayer*, align 8
  %spline.addr = alloca %struct.MaskSpline*, align 8
  store %struct.MaskLayer* %mask_layer, %struct.MaskLayer** %mask_layer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer.addr, metadata !2861, metadata !DIExpression()), !dbg !2862
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !2863, metadata !DIExpression()), !dbg !2864
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer.addr, align 8, !dbg !2865
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %0, i32 0, i32 3, !dbg !2867
  %1 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2868
  %2 = bitcast %struct.MaskSpline* %1 to i8*, !dbg !2868
  %call = call zeroext i8 @BLI_remlink_safe(%struct.ListBase* %splines, i8* %2), !dbg !2869
  %conv = zext i8 %call to i32, !dbg !2869
  %cmp = icmp eq i32 %conv, 0, !dbg !2870
  br i1 %cmp, label %if.then, label %if.end, !dbg !2871

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !2872
  br label %return, !dbg !2872

if.end:                                           ; preds = %entry
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2874
  call void @BKE_mask_spline_free(%struct.MaskSpline* %3), !dbg !2875
  store i8 1, i8* %retval, align 1, !dbg !2876
  br label %return, !dbg !2876

return:                                           ; preds = %if.end, %if.then
  %4 = load i8, i8* %retval, align 1, !dbg !2877
  ret i8 %4, !dbg !2877
}

declare dso_local zeroext i8 @BLI_remlink_safe(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_spline_free(%struct.MaskSpline* %spline) #0 !dbg !2878 {
entry:
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %i = alloca i32, align 4
  %point = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !2881, metadata !DIExpression()), !dbg !2882
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2883, metadata !DIExpression()), !dbg !2884
  store i32 0, i32* %i, align 4, !dbg !2884
  store i32 0, i32* %i, align 4, !dbg !2885
  br label %for.cond, !dbg !2887

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !2888
  %1 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2890
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %1, i32 0, i32 5, !dbg !2891
  %2 = load i32, i32* %tot_point, align 4, !dbg !2891
  %cmp = icmp slt i32 %0, %2, !dbg !2892
  br i1 %cmp, label %for.body, label %for.end, !dbg !2893

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !2894, metadata !DIExpression()), !dbg !2896
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2897
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %3, i32 0, i32 6, !dbg !2898
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !2898
  %5 = load i32, i32* %i, align 4, !dbg !2899
  %idxprom = sext i32 %5 to i64, !dbg !2897
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %4, i64 %idxprom, !dbg !2897
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !2900
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !2901
  call void @BKE_mask_point_free(%struct.MaskSplinePoint* %6), !dbg !2902
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2903
  %points_deform = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %7, i32 0, i32 8, !dbg !2905
  %8 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform, align 8, !dbg !2905
  %tobool = icmp ne %struct.MaskSplinePoint* %8, null, !dbg !2903
  br i1 %tobool, label %if.then, label %if.end, !dbg !2906

if.then:                                          ; preds = %for.body
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2907
  %points_deform1 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %9, i32 0, i32 8, !dbg !2909
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform1, align 8, !dbg !2909
  %11 = load i32, i32* %i, align 4, !dbg !2910
  %idxprom2 = sext i32 %11 to i64, !dbg !2907
  %arrayidx3 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %10, i64 %idxprom2, !dbg !2907
  store %struct.MaskSplinePoint* %arrayidx3, %struct.MaskSplinePoint** %point, align 8, !dbg !2911
  %12 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !2912
  call void @BKE_mask_point_free(%struct.MaskSplinePoint* %12), !dbg !2913
  br label %if.end, !dbg !2914

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !2915

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !2916
  %inc = add nsw i32 %13, 1, !dbg !2916
  store i32 %inc, i32* %i, align 4, !dbg !2916
  br label %for.cond, !dbg !2917, !llvm.loop !2918

for.end:                                          ; preds = %for.cond
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2920
  %15 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2921
  %points4 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %15, i32 0, i32 6, !dbg !2922
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points4, align 8, !dbg !2922
  %17 = bitcast %struct.MaskSplinePoint* %16 to i8*, !dbg !2921
  call void %14(i8* %17), !dbg !2920
  %18 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2923
  %points_deform5 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %18, i32 0, i32 8, !dbg !2925
  %19 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform5, align 8, !dbg !2925
  %tobool6 = icmp ne %struct.MaskSplinePoint* %19, null, !dbg !2923
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !2926

if.then7:                                         ; preds = %for.end
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2927
  %21 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2929
  %points_deform8 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %21, i32 0, i32 8, !dbg !2930
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform8, align 8, !dbg !2930
  %23 = bitcast %struct.MaskSplinePoint* %22 to i8*, !dbg !2929
  call void %20(i8* %23), !dbg !2927
  br label %if.end9, !dbg !2931

if.end9:                                          ; preds = %if.then7, %for.end
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2932
  %25 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !2933
  %26 = bitcast %struct.MaskSpline* %25 to i8*, !dbg !2933
  call void %24(i8* %26), !dbg !2932
  ret void, !dbg !2934
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_point_direction_switch(%struct.MaskSplinePoint* %point) #0 !dbg !2935 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %tot_uw = alloca i32, align 4
  %tot_uw_half = alloca i32, align 4
  %i = alloca i32, align 4
  %co_tmp = alloca [2 x float], align 4
  %sw_ap = alloca i8, align 1
  %sw_ap22 = alloca i8, align 1
  %uw_a = alloca %struct.MaskSplinePointUW*, align 8
  %uw_b = alloca %struct.MaskSplinePointUW*, align 8
  %sw_ap34 = alloca %struct.MaskSplinePointUW, align 4
  %uw38 = alloca %struct.MaskSplinePointUW*, align 8
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !2938, metadata !DIExpression()), !dbg !2939
  call void @llvm.dbg.declare(metadata i32* %tot_uw, metadata !2940, metadata !DIExpression()), !dbg !2942
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2943
  %tot_uw1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 2, !dbg !2944
  %1 = load i32, i32* %tot_uw1, align 4, !dbg !2944
  store i32 %1, i32* %tot_uw, align 4, !dbg !2942
  call void @llvm.dbg.declare(metadata i32* %tot_uw_half, metadata !2945, metadata !DIExpression()), !dbg !2946
  %2 = load i32, i32* %tot_uw, align 4, !dbg !2947
  %div = sdiv i32 %2, 2, !dbg !2948
  store i32 %div, i32* %tot_uw_half, align 4, !dbg !2946
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2949, metadata !DIExpression()), !dbg !2950
  call void @llvm.dbg.declare(metadata [2 x float]* %co_tmp, metadata !2951, metadata !DIExpression()), !dbg !2952
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %co_tmp, i64 0, i64 0, !dbg !2953
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2954
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !2955
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 0, !dbg !2956
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !2954
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2954
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay2), !dbg !2957
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2958
  %bezt3 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %4, i32 0, i32 0, !dbg !2959
  %vec4 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt3, i32 0, i32 0, !dbg !2960
  %arrayidx5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec4, i64 0, i64 0, !dbg !2958
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !2958
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2961
  %bezt7 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %5, i32 0, i32 0, !dbg !2962
  %vec8 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt7, i32 0, i32 0, !dbg !2963
  %arrayidx9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec8, i64 0, i64 2, !dbg !2961
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !2961
  call void @copy_v2_v2(float* %arraydecay6, float* %arraydecay10), !dbg !2964
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2965
  %bezt11 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i32 0, i32 0, !dbg !2966
  %vec12 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt11, i32 0, i32 0, !dbg !2967
  %arrayidx13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec12, i64 0, i64 2, !dbg !2965
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !2965
  %arraydecay15 = getelementptr inbounds [2 x float], [2 x float]* %co_tmp, i64 0, i64 0, !dbg !2968
  call void @copy_v2_v2(float* %arraydecay14, float* %arraydecay15), !dbg !2969
  call void @llvm.dbg.declare(metadata i8* %sw_ap, metadata !2970, metadata !DIExpression()), !dbg !2972
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2972
  %bezt16 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %7, i32 0, i32 0, !dbg !2972
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt16, i32 0, i32 7, !dbg !2972
  %8 = load i8, i8* %f1, align 1, !dbg !2972
  store i8 %8, i8* %sw_ap, align 1, !dbg !2972
  %9 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2972
  %bezt17 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %9, i32 0, i32 0, !dbg !2972
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt17, i32 0, i32 9, !dbg !2972
  %10 = load i8, i8* %f3, align 1, !dbg !2972
  %11 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2972
  %bezt18 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %11, i32 0, i32 0, !dbg !2972
  %f119 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt18, i32 0, i32 7, !dbg !2972
  store i8 %10, i8* %f119, align 1, !dbg !2972
  %12 = load i8, i8* %sw_ap, align 1, !dbg !2972
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2972
  %bezt20 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %13, i32 0, i32 0, !dbg !2972
  %f321 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt20, i32 0, i32 9, !dbg !2972
  store i8 %12, i8* %f321, align 1, !dbg !2972
  call void @llvm.dbg.declare(metadata i8* %sw_ap22, metadata !2973, metadata !DIExpression()), !dbg !2975
  %14 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2975
  %bezt23 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %14, i32 0, i32 0, !dbg !2975
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt23, i32 0, i32 5, !dbg !2975
  %15 = load i8, i8* %h1, align 1, !dbg !2975
  store i8 %15, i8* %sw_ap22, align 1, !dbg !2975
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2975
  %bezt24 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %16, i32 0, i32 0, !dbg !2975
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt24, i32 0, i32 6, !dbg !2975
  %17 = load i8, i8* %h2, align 2, !dbg !2975
  %18 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2975
  %bezt25 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %18, i32 0, i32 0, !dbg !2975
  %h126 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt25, i32 0, i32 5, !dbg !2975
  store i8 %17, i8* %h126, align 1, !dbg !2975
  %19 = load i8, i8* %sw_ap22, align 1, !dbg !2975
  %20 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2975
  %bezt27 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %20, i32 0, i32 0, !dbg !2975
  %h228 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt27, i32 0, i32 6, !dbg !2975
  store i8 %19, i8* %h228, align 2, !dbg !2975
  %21 = load i32, i32* %tot_uw, align 4, !dbg !2976
  %cmp = icmp sgt i32 %21, 1, !dbg !2978
  br i1 %cmp, label %if.then, label %if.end, !dbg !2979

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !2980
  br label %for.cond, !dbg !2983

for.cond:                                         ; preds = %for.inc, %if.then
  %22 = load i32, i32* %i, align 4, !dbg !2984
  %23 = load i32, i32* %tot_uw_half, align 4, !dbg !2986
  %cmp29 = icmp slt i32 %22, %23, !dbg !2987
  br i1 %cmp29, label %for.body, label %for.end, !dbg !2988

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %uw_a, metadata !2989, metadata !DIExpression()), !dbg !2991
  %24 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2992
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %24, i32 0, i32 3, !dbg !2993
  %25 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !2993
  %26 = load i32, i32* %i, align 4, !dbg !2994
  %idxprom = sext i32 %26 to i64, !dbg !2992
  %arrayidx30 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %25, i64 %idxprom, !dbg !2992
  store %struct.MaskSplinePointUW* %arrayidx30, %struct.MaskSplinePointUW** %uw_a, align 8, !dbg !2991
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %uw_b, metadata !2995, metadata !DIExpression()), !dbg !2996
  %27 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !2997
  %uw31 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %27, i32 0, i32 3, !dbg !2998
  %28 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw31, align 8, !dbg !2998
  %29 = load i32, i32* %tot_uw, align 4, !dbg !2999
  %30 = load i32, i32* %i, align 4, !dbg !3000
  %add = add nsw i32 %30, 1, !dbg !3001
  %sub = sub nsw i32 %29, %add, !dbg !3002
  %idxprom32 = sext i32 %sub to i64, !dbg !2997
  %arrayidx33 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %28, i64 %idxprom32, !dbg !2997
  store %struct.MaskSplinePointUW* %arrayidx33, %struct.MaskSplinePointUW** %uw_b, align 8, !dbg !2996
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW* %sw_ap34, metadata !3003, metadata !DIExpression()), !dbg !3005
  %31 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw_a, align 8, !dbg !3005
  %32 = bitcast %struct.MaskSplinePointUW* %sw_ap34 to i8*, !dbg !3005
  %33 = bitcast %struct.MaskSplinePointUW* %31 to i8*, !dbg !3005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 12, i1 false), !dbg !3005
  %34 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw_a, align 8, !dbg !3005
  %35 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw_b, align 8, !dbg !3005
  %36 = bitcast %struct.MaskSplinePointUW* %34 to i8*, !dbg !3005
  %37 = bitcast %struct.MaskSplinePointUW* %35 to i8*, !dbg !3005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 12, i1 false), !dbg !3005
  %38 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw_b, align 8, !dbg !3005
  %39 = bitcast %struct.MaskSplinePointUW* %38 to i8*, !dbg !3005
  %40 = bitcast %struct.MaskSplinePointUW* %sw_ap34 to i8*, !dbg !3005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 12, i1 false), !dbg !3005
  br label %for.inc, !dbg !3006

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !3007
  %inc = add nsw i32 %41, 1, !dbg !3007
  store i32 %inc, i32* %i, align 4, !dbg !3007
  br label %for.cond, !dbg !3008, !llvm.loop !3009

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !3011

if.end:                                           ; preds = %for.end, %entry
  store i32 0, i32* %i, align 4, !dbg !3012
  br label %for.cond35, !dbg !3014

for.cond35:                                       ; preds = %for.inc44, %if.end
  %42 = load i32, i32* %i, align 4, !dbg !3015
  %43 = load i32, i32* %tot_uw, align 4, !dbg !3017
  %cmp36 = icmp slt i32 %42, %43, !dbg !3018
  br i1 %cmp36, label %for.body37, label %for.end46, !dbg !3019

for.body37:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %uw38, metadata !3020, metadata !DIExpression()), !dbg !3022
  %44 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3023
  %uw39 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %44, i32 0, i32 3, !dbg !3024
  %45 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw39, align 8, !dbg !3024
  %46 = load i32, i32* %i, align 4, !dbg !3025
  %idxprom40 = sext i32 %46 to i64, !dbg !3023
  %arrayidx41 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %45, i64 %idxprom40, !dbg !3023
  store %struct.MaskSplinePointUW* %arrayidx41, %struct.MaskSplinePointUW** %uw38, align 8, !dbg !3022
  %47 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw38, align 8, !dbg !3026
  %u = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %47, i32 0, i32 0, !dbg !3027
  %48 = load float, float* %u, align 4, !dbg !3027
  %sub42 = fsub float 1.000000e+00, %48, !dbg !3028
  %49 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw38, align 8, !dbg !3029
  %u43 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %49, i32 0, i32 0, !dbg !3030
  store float %sub42, float* %u43, align 4, !dbg !3031
  br label %for.inc44, !dbg !3032

for.inc44:                                        ; preds = %for.body37
  %50 = load i32, i32* %i, align 4, !dbg !3033
  %inc45 = add nsw i32 %50, 1, !dbg !3033
  store i32 %inc45, i32* %i, align 4, !dbg !3033
  br label %for.cond35, !dbg !3034, !llvm.loop !3035

for.end46:                                        ; preds = %for.cond35
  ret void, !dbg !3037
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !3038 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3044, metadata !DIExpression()), !dbg !3045
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3046, metadata !DIExpression()), !dbg !3047
  %0 = load float*, float** %a.addr, align 8, !dbg !3048
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3048
  %1 = load float, float* %arrayidx, align 4, !dbg !3048
  %2 = load float*, float** %r.addr, align 8, !dbg !3049
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3049
  store float %1, float* %arrayidx1, align 4, !dbg !3050
  %3 = load float*, float** %a.addr, align 8, !dbg !3051
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3051
  %4 = load float, float* %arrayidx2, align 4, !dbg !3051
  %5 = load float*, float** %r.addr, align 8, !dbg !3052
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3052
  store float %4, float* %arrayidx3, align 4, !dbg !3053
  ret void, !dbg !3054
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_spline_direction_switch(%struct.MaskLayer* %masklay, %struct.MaskSpline* %spline) #0 !dbg !3055 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %tot_point = alloca i32, align 4
  %tot_point_half = alloca i32, align 4
  %i = alloca i32, align 4
  %i_prev = alloca i32, align 4
  %point_a = alloca %struct.MaskSplinePoint*, align 8
  %point_b = alloca %struct.MaskSplinePoint*, align 8
  %sw_ap = alloca %struct.MaskSplinePoint, align 8
  %sw_ap13 = alloca %struct.MaskSplinePointUW*, align 8
  %sw_ap29 = alloca i32, align 4
  %masklay_shape = alloca %struct.MaskLayerShape*, align 8
  %spline_index = alloca i32, align 4
  %fp_arr = alloca %struct.MaskLayerShapeElem*, align 8
  %fp_a = alloca %struct.MaskLayerShapeElem*, align 8
  %fp_b = alloca %struct.MaskLayerShapeElem*, align 8
  %sw_ap65 = alloca %struct.MaskLayerShapeElem, align 4
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !3058, metadata !DIExpression()), !dbg !3059
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !3060, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.declare(metadata i32* %tot_point, metadata !3062, metadata !DIExpression()), !dbg !3063
  %0 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3064
  %tot_point1 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %0, i32 0, i32 5, !dbg !3065
  %1 = load i32, i32* %tot_point1, align 4, !dbg !3065
  store i32 %1, i32* %tot_point, align 4, !dbg !3063
  call void @llvm.dbg.declare(metadata i32* %tot_point_half, metadata !3066, metadata !DIExpression()), !dbg !3067
  %2 = load i32, i32* %tot_point, align 4, !dbg !3068
  %div = sdiv i32 %2, 2, !dbg !3069
  store i32 %div, i32* %tot_point_half, align 4, !dbg !3067
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3070, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.declare(metadata i32* %i_prev, metadata !3072, metadata !DIExpression()), !dbg !3073
  %3 = load i32, i32* %tot_point, align 4, !dbg !3074
  %cmp = icmp slt i32 %3, 2, !dbg !3076
  br i1 %cmp, label %if.then, label %if.end, !dbg !3077

if.then:                                          ; preds = %entry
  br label %if.end71, !dbg !3078

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !3080
  br label %for.cond, !dbg !3082

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !3083
  %5 = load i32, i32* %tot_point_half, align 4, !dbg !3085
  %cmp2 = icmp slt i32 %4, %5, !dbg !3086
  br i1 %cmp2, label %for.body, label %for.end, !dbg !3087

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_a, metadata !3088, metadata !DIExpression()), !dbg !3090
  %6 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3091
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %6, i32 0, i32 6, !dbg !3092
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !3092
  %8 = load i32, i32* %i, align 4, !dbg !3093
  %idxprom = sext i32 %8 to i64, !dbg !3091
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %7, i64 %idxprom, !dbg !3091
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point_a, align 8, !dbg !3090
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_b, metadata !3094, metadata !DIExpression()), !dbg !3095
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3096
  %points3 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %9, i32 0, i32 6, !dbg !3097
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points3, align 8, !dbg !3097
  %11 = load i32, i32* %tot_point, align 4, !dbg !3098
  %12 = load i32, i32* %i, align 4, !dbg !3099
  %add = add nsw i32 %12, 1, !dbg !3100
  %sub = sub nsw i32 %11, %add, !dbg !3101
  %idxprom4 = sext i32 %sub to i64, !dbg !3096
  %arrayidx5 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %10, i64 %idxprom4, !dbg !3096
  store %struct.MaskSplinePoint* %arrayidx5, %struct.MaskSplinePoint** %point_b, align 8, !dbg !3095
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint* %sw_ap, metadata !3102, metadata !DIExpression()), !dbg !3104
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_a, align 8, !dbg !3104
  %14 = bitcast %struct.MaskSplinePoint* %sw_ap to i8*, !dbg !3104
  %15 = bitcast %struct.MaskSplinePoint* %13 to i8*, !dbg !3104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 272, i1 false), !dbg !3104
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_a, align 8, !dbg !3104
  %17 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_b, align 8, !dbg !3104
  %18 = bitcast %struct.MaskSplinePoint* %16 to i8*, !dbg !3104
  %19 = bitcast %struct.MaskSplinePoint* %17 to i8*, !dbg !3104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 272, i1 false), !dbg !3104
  %20 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_b, align 8, !dbg !3104
  %21 = bitcast %struct.MaskSplinePoint* %20 to i8*, !dbg !3104
  %22 = bitcast %struct.MaskSplinePoint* %sw_ap to i8*, !dbg !3104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 272, i1 false), !dbg !3104
  br label %for.inc, !dbg !3105

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !3106
  %inc = add nsw i32 %23, 1, !dbg !3106
  store i32 %inc, i32* %i, align 4, !dbg !3106
  br label %for.cond, !dbg !3107, !llvm.loop !3108

for.end:                                          ; preds = %for.cond
  %24 = load i32, i32* %tot_point, align 4, !dbg !3110
  %sub6 = sub nsw i32 %24, 1, !dbg !3111
  store i32 %sub6, i32* %i_prev, align 4, !dbg !3112
  store i32 0, i32* %i, align 4, !dbg !3113
  br label %for.cond7, !dbg !3115

for.cond7:                                        ; preds = %for.inc45, %for.end
  %25 = load i32, i32* %i, align 4, !dbg !3116
  %26 = load i32, i32* %tot_point, align 4, !dbg !3118
  %cmp8 = icmp slt i32 %25, %26, !dbg !3119
  br i1 %cmp8, label %for.body9, label %for.end47, !dbg !3120

for.body9:                                        ; preds = %for.cond7
  %27 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3121
  %points10 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %27, i32 0, i32 6, !dbg !3123
  %28 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points10, align 8, !dbg !3123
  %29 = load i32, i32* %i, align 4, !dbg !3124
  %idxprom11 = sext i32 %29 to i64, !dbg !3121
  %arrayidx12 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %28, i64 %idxprom11, !dbg !3121
  call void @BKE_mask_point_direction_switch(%struct.MaskSplinePoint* %arrayidx12), !dbg !3125
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %sw_ap13, metadata !3126, metadata !DIExpression()), !dbg !3128
  %30 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3128
  %points14 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %30, i32 0, i32 6, !dbg !3128
  %31 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points14, align 8, !dbg !3128
  %32 = load i32, i32* %i, align 4, !dbg !3128
  %idxprom15 = sext i32 %32 to i64, !dbg !3128
  %arrayidx16 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %31, i64 %idxprom15, !dbg !3128
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx16, i32 0, i32 3, !dbg !3128
  %33 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !3128
  store %struct.MaskSplinePointUW* %33, %struct.MaskSplinePointUW** %sw_ap13, align 8, !dbg !3128
  %34 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3128
  %points17 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %34, i32 0, i32 6, !dbg !3128
  %35 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points17, align 8, !dbg !3128
  %36 = load i32, i32* %i_prev, align 4, !dbg !3128
  %idxprom18 = sext i32 %36 to i64, !dbg !3128
  %arrayidx19 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %35, i64 %idxprom18, !dbg !3128
  %uw20 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx19, i32 0, i32 3, !dbg !3128
  %37 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw20, align 8, !dbg !3128
  %38 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3128
  %points21 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %38, i32 0, i32 6, !dbg !3128
  %39 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points21, align 8, !dbg !3128
  %40 = load i32, i32* %i, align 4, !dbg !3128
  %idxprom22 = sext i32 %40 to i64, !dbg !3128
  %arrayidx23 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %39, i64 %idxprom22, !dbg !3128
  %uw24 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx23, i32 0, i32 3, !dbg !3128
  store %struct.MaskSplinePointUW* %37, %struct.MaskSplinePointUW** %uw24, align 8, !dbg !3128
  %41 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %sw_ap13, align 8, !dbg !3128
  %42 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3128
  %points25 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %42, i32 0, i32 6, !dbg !3128
  %43 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points25, align 8, !dbg !3128
  %44 = load i32, i32* %i_prev, align 4, !dbg !3128
  %idxprom26 = sext i32 %44 to i64, !dbg !3128
  %arrayidx27 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %43, i64 %idxprom26, !dbg !3128
  %uw28 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx27, i32 0, i32 3, !dbg !3128
  store %struct.MaskSplinePointUW* %41, %struct.MaskSplinePointUW** %uw28, align 8, !dbg !3128
  call void @llvm.dbg.declare(metadata i32* %sw_ap29, metadata !3129, metadata !DIExpression()), !dbg !3131
  %45 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3131
  %points30 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %45, i32 0, i32 6, !dbg !3131
  %46 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points30, align 8, !dbg !3131
  %47 = load i32, i32* %i, align 4, !dbg !3131
  %idxprom31 = sext i32 %47 to i64, !dbg !3131
  %arrayidx32 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %46, i64 %idxprom31, !dbg !3131
  %tot_uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx32, i32 0, i32 2, !dbg !3131
  %48 = load i32, i32* %tot_uw, align 4, !dbg !3131
  store i32 %48, i32* %sw_ap29, align 4, !dbg !3131
  %49 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3131
  %points33 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %49, i32 0, i32 6, !dbg !3131
  %50 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points33, align 8, !dbg !3131
  %51 = load i32, i32* %i_prev, align 4, !dbg !3131
  %idxprom34 = sext i32 %51 to i64, !dbg !3131
  %arrayidx35 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %50, i64 %idxprom34, !dbg !3131
  %tot_uw36 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx35, i32 0, i32 2, !dbg !3131
  %52 = load i32, i32* %tot_uw36, align 4, !dbg !3131
  %53 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3131
  %points37 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %53, i32 0, i32 6, !dbg !3131
  %54 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points37, align 8, !dbg !3131
  %55 = load i32, i32* %i, align 4, !dbg !3131
  %idxprom38 = sext i32 %55 to i64, !dbg !3131
  %arrayidx39 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %54, i64 %idxprom38, !dbg !3131
  %tot_uw40 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx39, i32 0, i32 2, !dbg !3131
  store i32 %52, i32* %tot_uw40, align 4, !dbg !3131
  %56 = load i32, i32* %sw_ap29, align 4, !dbg !3131
  %57 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3131
  %points41 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %57, i32 0, i32 6, !dbg !3131
  %58 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points41, align 8, !dbg !3131
  %59 = load i32, i32* %i_prev, align 4, !dbg !3131
  %idxprom42 = sext i32 %59 to i64, !dbg !3131
  %arrayidx43 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %58, i64 %idxprom42, !dbg !3131
  %tot_uw44 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx43, i32 0, i32 2, !dbg !3131
  store i32 %56, i32* %tot_uw44, align 4, !dbg !3131
  %60 = load i32, i32* %i, align 4, !dbg !3132
  store i32 %60, i32* %i_prev, align 4, !dbg !3133
  br label %for.inc45, !dbg !3134

for.inc45:                                        ; preds = %for.body9
  %61 = load i32, i32* %i, align 4, !dbg !3135
  %inc46 = add nsw i32 %61, 1, !dbg !3135
  store i32 %inc46, i32* %i, align 4, !dbg !3135
  br label %for.cond7, !dbg !3136, !llvm.loop !3137

for.end47:                                        ; preds = %for.cond7
  %62 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !3139
  %splines_shapes = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %62, i32 0, i32 4, !dbg !3141
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes, i32 0, i32 0, !dbg !3142
  %63 = load i8*, i8** %first, align 8, !dbg !3142
  %tobool = icmp ne i8* %63, null, !dbg !3139
  br i1 %tobool, label %if.then48, label %if.end71, !dbg !3143

if.then48:                                        ; preds = %for.end47
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape, metadata !3144, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.declare(metadata i32* %spline_index, metadata !3147, metadata !DIExpression()), !dbg !3148
  %64 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !3149
  %65 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3150
  %call = call i32 @BKE_mask_layer_shape_spline_to_index(%struct.MaskLayer* %64, %struct.MaskSpline* %65), !dbg !3151
  store i32 %call, i32* %spline_index, align 4, !dbg !3148
  %66 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !3152
  %splines_shapes49 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %66, i32 0, i32 4, !dbg !3154
  %first50 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes49, i32 0, i32 0, !dbg !3155
  %67 = load i8*, i8** %first50, align 8, !dbg !3155
  %68 = bitcast i8* %67 to %struct.MaskLayerShape*, !dbg !3152
  store %struct.MaskLayerShape* %68, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !3156
  br label %for.cond51, !dbg !3157

for.cond51:                                       ; preds = %for.inc69, %if.then48
  %69 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !3158
  %tobool52 = icmp ne %struct.MaskLayerShape* %69, null, !dbg !3160
  br i1 %tobool52, label %for.body53, label %for.end70, !dbg !3160

for.body53:                                       ; preds = %for.cond51
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShapeElem** %fp_arr, metadata !3161, metadata !DIExpression()), !dbg !3163
  %70 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !3164
  %data = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %70, i32 0, i32 2, !dbg !3165
  %71 = load float*, float** %data, align 8, !dbg !3165
  %72 = bitcast float* %71 to %struct.MaskLayerShapeElem*, !dbg !3166
  store %struct.MaskLayerShapeElem* %72, %struct.MaskLayerShapeElem** %fp_arr, align 8, !dbg !3163
  store i32 0, i32* %i, align 4, !dbg !3167
  br label %for.cond54, !dbg !3169

for.cond54:                                       ; preds = %for.inc66, %for.body53
  %73 = load i32, i32* %i, align 4, !dbg !3170
  %74 = load i32, i32* %tot_point_half, align 4, !dbg !3172
  %cmp55 = icmp slt i32 %73, %74, !dbg !3173
  br i1 %cmp55, label %for.body56, label %for.end68, !dbg !3174

for.body56:                                       ; preds = %for.cond54
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShapeElem** %fp_a, metadata !3175, metadata !DIExpression()), !dbg !3177
  %75 = load %struct.MaskLayerShapeElem*, %struct.MaskLayerShapeElem** %fp_arr, align 8, !dbg !3178
  %76 = load i32, i32* %spline_index, align 4, !dbg !3179
  %77 = load i32, i32* %i, align 4, !dbg !3180
  %add57 = add nsw i32 %76, %77, !dbg !3181
  %idxprom58 = sext i32 %add57 to i64, !dbg !3178
  %arrayidx59 = getelementptr inbounds %struct.MaskLayerShapeElem, %struct.MaskLayerShapeElem* %75, i64 %idxprom58, !dbg !3178
  store %struct.MaskLayerShapeElem* %arrayidx59, %struct.MaskLayerShapeElem** %fp_a, align 8, !dbg !3177
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShapeElem** %fp_b, metadata !3182, metadata !DIExpression()), !dbg !3183
  %78 = load %struct.MaskLayerShapeElem*, %struct.MaskLayerShapeElem** %fp_arr, align 8, !dbg !3184
  %79 = load i32, i32* %spline_index, align 4, !dbg !3185
  %80 = load i32, i32* %tot_point, align 4, !dbg !3186
  %81 = load i32, i32* %i, align 4, !dbg !3187
  %add60 = add nsw i32 %81, 1, !dbg !3188
  %sub61 = sub nsw i32 %80, %add60, !dbg !3189
  %add62 = add nsw i32 %79, %sub61, !dbg !3190
  %idxprom63 = sext i32 %add62 to i64, !dbg !3184
  %arrayidx64 = getelementptr inbounds %struct.MaskLayerShapeElem, %struct.MaskLayerShapeElem* %78, i64 %idxprom63, !dbg !3184
  store %struct.MaskLayerShapeElem* %arrayidx64, %struct.MaskLayerShapeElem** %fp_b, align 8, !dbg !3183
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShapeElem* %sw_ap65, metadata !3191, metadata !DIExpression()), !dbg !3193
  %82 = load %struct.MaskLayerShapeElem*, %struct.MaskLayerShapeElem** %fp_a, align 8, !dbg !3193
  %83 = bitcast %struct.MaskLayerShapeElem* %sw_ap65 to i8*, !dbg !3193
  %84 = bitcast %struct.MaskLayerShapeElem* %82 to i8*, !dbg !3193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 32, i1 false), !dbg !3193
  %85 = load %struct.MaskLayerShapeElem*, %struct.MaskLayerShapeElem** %fp_a, align 8, !dbg !3193
  %86 = load %struct.MaskLayerShapeElem*, %struct.MaskLayerShapeElem** %fp_b, align 8, !dbg !3193
  %87 = bitcast %struct.MaskLayerShapeElem* %85 to i8*, !dbg !3193
  %88 = bitcast %struct.MaskLayerShapeElem* %86 to i8*, !dbg !3193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 32, i1 false), !dbg !3193
  %89 = load %struct.MaskLayerShapeElem*, %struct.MaskLayerShapeElem** %fp_b, align 8, !dbg !3193
  %90 = bitcast %struct.MaskLayerShapeElem* %89 to i8*, !dbg !3193
  %91 = bitcast %struct.MaskLayerShapeElem* %sw_ap65 to i8*, !dbg !3193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 4 %91, i64 32, i1 false), !dbg !3193
  br label %for.inc66, !dbg !3194

for.inc66:                                        ; preds = %for.body56
  %92 = load i32, i32* %i, align 4, !dbg !3195
  %inc67 = add nsw i32 %92, 1, !dbg !3195
  store i32 %inc67, i32* %i, align 4, !dbg !3195
  br label %for.cond54, !dbg !3196, !llvm.loop !3197

for.end68:                                        ; preds = %for.cond54
  br label %for.inc69, !dbg !3199

for.inc69:                                        ; preds = %for.end68
  %93 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !3200
  %next = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %93, i32 0, i32 0, !dbg !3201
  %94 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %next, align 8, !dbg !3201
  store %struct.MaskLayerShape* %94, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !3202
  br label %for.cond51, !dbg !3203, !llvm.loop !3204

for.end70:                                        ; preds = %for.cond51
  br label %if.end71, !dbg !3206

if.end71:                                         ; preds = %if.then, %for.end70, %for.end47
  ret void, !dbg !3207
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_mask_layer_shape_spline_to_index(%struct.MaskLayer* %masklay, %struct.MaskSpline* %spline) #0 !dbg !3208 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %spline_iter = alloca %struct.MaskSpline*, align 8
  %i_abs = alloca i32, align 4
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !3211, metadata !DIExpression()), !dbg !3212
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !3213, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline_iter, metadata !3215, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.declare(metadata i32* %i_abs, metadata !3217, metadata !DIExpression()), !dbg !3218
  store i32 0, i32* %i_abs, align 4, !dbg !3218
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !3219
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %0, i32 0, i32 3, !dbg !3221
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !3222
  %1 = load i8*, i8** %first, align 8, !dbg !3222
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3219
  store %struct.MaskSpline* %2, %struct.MaskSpline** %spline_iter, align 8, !dbg !3223
  br label %for.cond, !dbg !3224

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline_iter, align 8, !dbg !3225
  %tobool = icmp ne %struct.MaskSpline* %3, null, !dbg !3225
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3227

land.rhs:                                         ; preds = %for.cond
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %spline_iter, align 8, !dbg !3228
  %5 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3229
  %cmp = icmp ne %struct.MaskSpline* %4, %5, !dbg !3230
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %6 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !3231
  br i1 %6, label %for.body, label %for.end, !dbg !3232

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !3233

for.inc:                                          ; preds = %for.body
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline_iter, align 8, !dbg !3235
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %7, i32 0, i32 5, !dbg !3236
  %8 = load i32, i32* %tot_point, align 4, !dbg !3236
  %9 = load i32, i32* %i_abs, align 4, !dbg !3237
  %add = add nsw i32 %9, %8, !dbg !3237
  store i32 %add, i32* %i_abs, align 4, !dbg !3237
  %10 = load %struct.MaskSpline*, %struct.MaskSpline** %spline_iter, align 8, !dbg !3238
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %10, i32 0, i32 0, !dbg !3239
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !3239
  store %struct.MaskSpline* %11, %struct.MaskSpline** %spline_iter, align 8, !dbg !3240
  br label %for.cond, !dbg !3241, !llvm.loop !3242

for.end:                                          ; preds = %land.end
  %12 = load i32, i32* %i_abs, align 4, !dbg !3244
  ret i32 %12, !dbg !3245
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @BKE_mask_spline_project_co(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %point, float %start_u, float* %co, i32 %sign) #0 !dbg !3246 {
entry:
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %start_u.addr = alloca float, align 4
  %co.addr = alloca float*, align 8
  %sign.addr = alloca i32, align 4
  %proj_eps = alloca float, align 4
  %proj_eps_sq = alloca float, align 4
  %N = alloca i32, align 4
  %u = alloca float, align 4
  %du = alloca float, align 4
  %u1 = alloca float, align 4
  %u2 = alloca float, align 4
  %ang = alloca float, align 4
  %n1 = alloca [2 x float], align 4
  %n2 = alloca [2 x float], align 4
  %co1 = alloca [2 x float], align 4
  %co2 = alloca [2 x float], align 4
  %v1 = alloca [2 x float], align 4
  %v2 = alloca [2 x float], align 4
  %ang1 = alloca float, align 4
  %ang2 = alloca float, align 4
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !3251, metadata !DIExpression()), !dbg !3252
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !3253, metadata !DIExpression()), !dbg !3254
  store float %start_u, float* %start_u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %start_u.addr, metadata !3255, metadata !DIExpression()), !dbg !3256
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !3257, metadata !DIExpression()), !dbg !3258
  store i32 %sign, i32* %sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.addr, metadata !3259, metadata !DIExpression()), !dbg !3260
  call void @llvm.dbg.declare(metadata float* %proj_eps, metadata !3261, metadata !DIExpression()), !dbg !3262
  store float 0x3F50624DE0000000, float* %proj_eps, align 4, !dbg !3262
  call void @llvm.dbg.declare(metadata float* %proj_eps_sq, metadata !3263, metadata !DIExpression()), !dbg !3264
  store float 0x3EB0C6F7C0000000, float* %proj_eps_sq, align 4, !dbg !3264
  call void @llvm.dbg.declare(metadata i32* %N, metadata !3265, metadata !DIExpression()), !dbg !3266
  store i32 1000, i32* %N, align 4, !dbg !3266
  call void @llvm.dbg.declare(metadata float* %u, metadata !3267, metadata !DIExpression()), !dbg !3268
  store float -1.000000e+00, float* %u, align 4, !dbg !3268
  call void @llvm.dbg.declare(metadata float* %du, metadata !3269, metadata !DIExpression()), !dbg !3270
  store float 0x3F50624DE0000000, float* %du, align 4, !dbg !3270
  call void @llvm.dbg.declare(metadata float* %u1, metadata !3271, metadata !DIExpression()), !dbg !3272
  %0 = load float, float* %start_u.addr, align 4, !dbg !3273
  store float %0, float* %u1, align 4, !dbg !3272
  call void @llvm.dbg.declare(metadata float* %u2, metadata !3274, metadata !DIExpression()), !dbg !3275
  %1 = load float, float* %start_u.addr, align 4, !dbg !3276
  store float %1, float* %u2, align 4, !dbg !3275
  call void @llvm.dbg.declare(metadata float* %ang, metadata !3277, metadata !DIExpression()), !dbg !3278
  store float -1.000000e+00, float* %ang, align 4, !dbg !3278
  br label %while.cond, !dbg !3279

while.cond:                                       ; preds = %if.end75, %entry
  %2 = load float, float* %u1, align 4, !dbg !3280
  %cmp = fcmp ogt float %2, 0.000000e+00, !dbg !3281
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3282

lor.rhs:                                          ; preds = %while.cond
  %3 = load float, float* %u2, align 4, !dbg !3283
  %cmp1 = fcmp olt float %3, 1.000000e+00, !dbg !3284
  br label %lor.end, !dbg !3282

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %4 = phi i1 [ true, %while.cond ], [ %cmp1, %lor.rhs ]
  br i1 %4, label %while.body, label %while.end, !dbg !3279

while.body:                                       ; preds = %lor.end
  call void @llvm.dbg.declare(metadata [2 x float]* %n1, metadata !3285, metadata !DIExpression()), !dbg !3287
  call void @llvm.dbg.declare(metadata [2 x float]* %n2, metadata !3288, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.declare(metadata [2 x float]* %co1, metadata !3290, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.declare(metadata [2 x float]* %co2, metadata !3292, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.declare(metadata [2 x float]* %v1, metadata !3294, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.declare(metadata [2 x float]* %v2, metadata !3296, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.declare(metadata float* %ang1, metadata !3298, metadata !DIExpression()), !dbg !3299
  call void @llvm.dbg.declare(metadata float* %ang2, metadata !3300, metadata !DIExpression()), !dbg !3301
  %5 = load float, float* %u1, align 4, !dbg !3302
  %cmp2 = fcmp oge float %5, 0.000000e+00, !dbg !3304
  br i1 %cmp2, label %if.then, label %if.end35, !dbg !3305

if.then:                                          ; preds = %while.body
  %6 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3306
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3308
  %8 = load float, float* %u1, align 4, !dbg !3309
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %co1, i64 0, i64 0, !dbg !3310
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %6, %struct.MaskSplinePoint* %7, float %8, float* %arraydecay), !dbg !3311
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3312
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3313
  %11 = load float, float* %u1, align 4, !dbg !3314
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %n1, i64 0, i64 0, !dbg !3315
  call void @BKE_mask_point_normal(%struct.MaskSpline* %9, %struct.MaskSplinePoint* %10, float %11, float* %arraydecay3), !dbg !3316
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3317
  %12 = load float*, float** %co.addr, align 8, !dbg !3318
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %co1, i64 0, i64 0, !dbg !3319
  call void @sub_v2_v2v2(float* %arraydecay4, float* %12, float* %arraydecay5), !dbg !3320
  %13 = load i32, i32* %sign.addr, align 4, !dbg !3321
  %cmp6 = icmp eq i32 %13, 0, !dbg !3323
  br i1 %cmp6, label %if.then18, label %lor.lhs.false, !dbg !3324

lor.lhs.false:                                    ; preds = %if.then
  %14 = load i32, i32* %sign.addr, align 4, !dbg !3325
  %cmp7 = icmp eq i32 %14, -1, !dbg !3326
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false11, !dbg !3327

land.lhs.true:                                    ; preds = %lor.lhs.false
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3328
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %n1, i64 0, i64 0, !dbg !3329
  %call = call float @dot_v2v2(float* %arraydecay8, float* %arraydecay9), !dbg !3330
  %cmp10 = fcmp ole float %call, 0.000000e+00, !dbg !3331
  br i1 %cmp10, label %if.then18, label %lor.lhs.false11, !dbg !3332

lor.lhs.false11:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %15 = load i32, i32* %sign.addr, align 4, !dbg !3333
  %cmp12 = icmp eq i32 %15, 1, !dbg !3334
  br i1 %cmp12, label %land.lhs.true13, label %if.end34, !dbg !3335

land.lhs.true13:                                  ; preds = %lor.lhs.false11
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3336
  %arraydecay15 = getelementptr inbounds [2 x float], [2 x float]* %n1, i64 0, i64 0, !dbg !3337
  %call16 = call float @dot_v2v2(float* %arraydecay14, float* %arraydecay15), !dbg !3338
  %cmp17 = fcmp oge float %call16, 0.000000e+00, !dbg !3339
  br i1 %cmp17, label %if.then18, label %if.end34, !dbg !3340

if.then18:                                        ; preds = %land.lhs.true13, %land.lhs.true, %if.then
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3341
  %call20 = call float @len_squared_v2(float* %arraydecay19), !dbg !3344
  %cmp21 = fcmp ogt float %call20, 0x3EB0C6F7C0000000, !dbg !3345
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !3346

if.then22:                                        ; preds = %if.then18
  %arraydecay23 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3347
  %arraydecay24 = getelementptr inbounds [2 x float], [2 x float]* %n1, i64 0, i64 0, !dbg !3349
  %call25 = call float @angle_v2v2(float* %arraydecay23, float* %arraydecay24), !dbg !3350
  store float %call25, float* %ang1, align 4, !dbg !3351
  %16 = load float, float* %ang1, align 4, !dbg !3352
  %cmp26 = fcmp ogt float %16, 0x3FF921FB60000000, !dbg !3354
  br i1 %cmp26, label %if.then27, label %if.end, !dbg !3355

if.then27:                                        ; preds = %if.then22
  %17 = load float, float* %ang1, align 4, !dbg !3356
  %sub = fsub float 0x400921FB60000000, %17, !dbg !3357
  store float %sub, float* %ang1, align 4, !dbg !3358
  br label %if.end, !dbg !3359

if.end:                                           ; preds = %if.then27, %if.then22
  %18 = load float, float* %ang, align 4, !dbg !3360
  %cmp28 = fcmp olt float %18, 0.000000e+00, !dbg !3362
  br i1 %cmp28, label %if.then31, label %lor.lhs.false29, !dbg !3363

lor.lhs.false29:                                  ; preds = %if.end
  %19 = load float, float* %ang1, align 4, !dbg !3364
  %20 = load float, float* %ang, align 4, !dbg !3365
  %cmp30 = fcmp olt float %19, %20, !dbg !3366
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !3367

if.then31:                                        ; preds = %lor.lhs.false29, %if.end
  %21 = load float, float* %ang1, align 4, !dbg !3368
  store float %21, float* %ang, align 4, !dbg !3370
  %22 = load float, float* %u1, align 4, !dbg !3371
  store float %22, float* %u, align 4, !dbg !3372
  br label %if.end32, !dbg !3373

if.end32:                                         ; preds = %if.then31, %lor.lhs.false29
  br label %if.end33, !dbg !3374

if.else:                                          ; preds = %if.then18
  %23 = load float, float* %u1, align 4, !dbg !3375
  store float %23, float* %u, align 4, !dbg !3377
  br label %while.end, !dbg !3378

if.end33:                                         ; preds = %if.end32
  br label %if.end34, !dbg !3379

if.end34:                                         ; preds = %if.end33, %land.lhs.true13, %lor.lhs.false11
  br label %if.end35, !dbg !3380

if.end35:                                         ; preds = %if.end34, %while.body
  %24 = load float, float* %u2, align 4, !dbg !3381
  %cmp36 = fcmp ole float %24, 1.000000e+00, !dbg !3383
  br i1 %cmp36, label %if.then37, label %if.end75, !dbg !3384

if.then37:                                        ; preds = %if.end35
  %25 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3385
  %26 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3387
  %27 = load float, float* %u2, align 4, !dbg !3388
  %arraydecay38 = getelementptr inbounds [2 x float], [2 x float]* %co2, i64 0, i64 0, !dbg !3389
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %25, %struct.MaskSplinePoint* %26, float %27, float* %arraydecay38), !dbg !3390
  %28 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3391
  %29 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3392
  %30 = load float, float* %u2, align 4, !dbg !3393
  %arraydecay39 = getelementptr inbounds [2 x float], [2 x float]* %n2, i64 0, i64 0, !dbg !3394
  call void @BKE_mask_point_normal(%struct.MaskSpline* %28, %struct.MaskSplinePoint* %29, float %30, float* %arraydecay39), !dbg !3395
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !3396
  %31 = load float*, float** %co.addr, align 8, !dbg !3397
  %arraydecay41 = getelementptr inbounds [2 x float], [2 x float]* %co2, i64 0, i64 0, !dbg !3398
  call void @sub_v2_v2v2(float* %arraydecay40, float* %31, float* %arraydecay41), !dbg !3399
  %32 = load i32, i32* %sign.addr, align 4, !dbg !3400
  %cmp42 = icmp eq i32 %32, 0, !dbg !3402
  br i1 %cmp42, label %if.then57, label %lor.lhs.false43, !dbg !3403

lor.lhs.false43:                                  ; preds = %if.then37
  %33 = load i32, i32* %sign.addr, align 4, !dbg !3404
  %cmp44 = icmp eq i32 %33, -1, !dbg !3405
  br i1 %cmp44, label %land.lhs.true45, label %lor.lhs.false50, !dbg !3406

land.lhs.true45:                                  ; preds = %lor.lhs.false43
  %arraydecay46 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !3407
  %arraydecay47 = getelementptr inbounds [2 x float], [2 x float]* %n2, i64 0, i64 0, !dbg !3408
  %call48 = call float @dot_v2v2(float* %arraydecay46, float* %arraydecay47), !dbg !3409
  %cmp49 = fcmp ole float %call48, 0.000000e+00, !dbg !3410
  br i1 %cmp49, label %if.then57, label %lor.lhs.false50, !dbg !3411

lor.lhs.false50:                                  ; preds = %land.lhs.true45, %lor.lhs.false43
  %34 = load i32, i32* %sign.addr, align 4, !dbg !3412
  %cmp51 = icmp eq i32 %34, 1, !dbg !3413
  br i1 %cmp51, label %land.lhs.true52, label %if.end74, !dbg !3414

land.lhs.true52:                                  ; preds = %lor.lhs.false50
  %arraydecay53 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !3415
  %arraydecay54 = getelementptr inbounds [2 x float], [2 x float]* %n2, i64 0, i64 0, !dbg !3416
  %call55 = call float @dot_v2v2(float* %arraydecay53, float* %arraydecay54), !dbg !3417
  %cmp56 = fcmp oge float %call55, 0.000000e+00, !dbg !3418
  br i1 %cmp56, label %if.then57, label %if.end74, !dbg !3419

if.then57:                                        ; preds = %land.lhs.true52, %land.lhs.true45, %if.then37
  %arraydecay58 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !3420
  %call59 = call float @len_squared_v2(float* %arraydecay58), !dbg !3423
  %cmp60 = fcmp ogt float %call59, 0x3EB0C6F7C0000000, !dbg !3424
  br i1 %cmp60, label %if.then61, label %if.else72, !dbg !3425

if.then61:                                        ; preds = %if.then57
  %arraydecay62 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !3426
  %arraydecay63 = getelementptr inbounds [2 x float], [2 x float]* %n2, i64 0, i64 0, !dbg !3428
  %call64 = call float @angle_v2v2(float* %arraydecay62, float* %arraydecay63), !dbg !3429
  store float %call64, float* %ang2, align 4, !dbg !3430
  %35 = load float, float* %ang2, align 4, !dbg !3431
  %cmp65 = fcmp ogt float %35, 0x3FF921FB60000000, !dbg !3433
  br i1 %cmp65, label %if.then66, label %if.end68, !dbg !3434

if.then66:                                        ; preds = %if.then61
  %36 = load float, float* %ang2, align 4, !dbg !3435
  %sub67 = fsub float 0x400921FB60000000, %36, !dbg !3436
  store float %sub67, float* %ang2, align 4, !dbg !3437
  br label %if.end68, !dbg !3438

if.end68:                                         ; preds = %if.then66, %if.then61
  %37 = load float, float* %ang2, align 4, !dbg !3439
  %38 = load float, float* %ang, align 4, !dbg !3441
  %cmp69 = fcmp olt float %37, %38, !dbg !3442
  br i1 %cmp69, label %if.then70, label %if.end71, !dbg !3443

if.then70:                                        ; preds = %if.end68
  %39 = load float, float* %ang2, align 4, !dbg !3444
  store float %39, float* %ang, align 4, !dbg !3446
  %40 = load float, float* %u2, align 4, !dbg !3447
  store float %40, float* %u, align 4, !dbg !3448
  br label %if.end71, !dbg !3449

if.end71:                                         ; preds = %if.then70, %if.end68
  br label %if.end73, !dbg !3450

if.else72:                                        ; preds = %if.then57
  %41 = load float, float* %u2, align 4, !dbg !3451
  store float %41, float* %u, align 4, !dbg !3453
  br label %while.end, !dbg !3454

if.end73:                                         ; preds = %if.end71
  br label %if.end74, !dbg !3455

if.end74:                                         ; preds = %if.end73, %land.lhs.true52, %lor.lhs.false50
  br label %if.end75, !dbg !3456

if.end75:                                         ; preds = %if.end74, %if.end35
  %42 = load float, float* %du, align 4, !dbg !3457
  %43 = load float, float* %u1, align 4, !dbg !3458
  %sub76 = fsub float %43, %42, !dbg !3458
  store float %sub76, float* %u1, align 4, !dbg !3458
  %44 = load float, float* %du, align 4, !dbg !3459
  %45 = load float, float* %u2, align 4, !dbg !3460
  %add = fadd float %45, %44, !dbg !3460
  store float %add, float* %u2, align 4, !dbg !3460
  br label %while.cond, !dbg !3279, !llvm.loop !3461

while.end:                                        ; preds = %if.else72, %if.else, %lor.end
  %46 = load float, float* %u, align 4, !dbg !3463
  ret float %46, !dbg !3464
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_point_segment_co(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %point, float %u, float* %co) #0 !dbg !3465 {
entry:
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %u.addr = alloca float, align 4
  %co.addr = alloca float*, align 8
  %points_array = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bezt_next = alloca %struct.BezTriple*, align 8
  %q0 = alloca [2 x float], align 4
  %q1 = alloca [2 x float], align 4
  %q2 = alloca [2 x float], align 4
  %r0 = alloca [2 x float], align 4
  %r1 = alloca [2 x float], align 4
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !3468, metadata !DIExpression()), !dbg !3469
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !3470, metadata !DIExpression()), !dbg !3471
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !3472, metadata !DIExpression()), !dbg !3473
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !3474, metadata !DIExpression()), !dbg !3475
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %points_array, metadata !3476, metadata !DIExpression()), !dbg !3477
  %0 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3478
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3479
  %call = call %struct.MaskSplinePoint* @BKE_mask_spline_point_array_from_point(%struct.MaskSpline* %0, %struct.MaskSplinePoint* %1), !dbg !3480
  store %struct.MaskSplinePoint* %call, %struct.MaskSplinePoint** %points_array, align 8, !dbg !3477
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3481, metadata !DIExpression()), !dbg !3483
  %2 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3484
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %2, i32 0, i32 0, !dbg !3485
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3483
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_next, metadata !3486, metadata !DIExpression()), !dbg !3487
  call void @llvm.dbg.declare(metadata [2 x float]* %q0, metadata !3488, metadata !DIExpression()), !dbg !3489
  call void @llvm.dbg.declare(metadata [2 x float]* %q1, metadata !3490, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.declare(metadata [2 x float]* %q2, metadata !3492, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.declare(metadata [2 x float]* %r0, metadata !3494, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.declare(metadata [2 x float]* %r1, metadata !3496, metadata !DIExpression()), !dbg !3497
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3498
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array, align 8, !dbg !3499
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3500
  %call2 = call %struct.BezTriple* @BKE_mask_spline_point_next_bezt(%struct.MaskSpline* %3, %struct.MaskSplinePoint* %4, %struct.MaskSplinePoint* %5), !dbg !3501
  store %struct.BezTriple* %call2, %struct.BezTriple** %bezt_next, align 8, !dbg !3502
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !3503
  %tobool = icmp ne %struct.BezTriple* %6, null, !dbg !3503
  br i1 %tobool, label %if.end, label %if.then, !dbg !3505

if.then:                                          ; preds = %entry
  %7 = load float*, float** %co.addr, align 8, !dbg !3506
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3508
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %8, i32 0, i32 0, !dbg !3509
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !3508
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3508
  call void @copy_v2_v2(float* %7, float* %arraydecay), !dbg !3510
  br label %return, !dbg !3511

if.end:                                           ; preds = %entry
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %q0, i64 0, i64 0, !dbg !3512
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3513
  %vec4 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i32 0, i32 0, !dbg !3514
  %arrayidx5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec4, i64 0, i64 1, !dbg !3513
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !3513
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3515
  %vec7 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i32 0, i32 0, !dbg !3516
  %arrayidx8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec7, i64 0, i64 2, !dbg !3515
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !3515
  %11 = load float, float* %u.addr, align 4, !dbg !3517
  call void @interp_v2_v2v2(float* %arraydecay3, float* %arraydecay6, float* %arraydecay9, float %11), !dbg !3518
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %q1, i64 0, i64 0, !dbg !3519
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3520
  %vec11 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %12, i32 0, i32 0, !dbg !3521
  %arrayidx12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec11, i64 0, i64 2, !dbg !3520
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !3520
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !3522
  %vec14 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 0, !dbg !3523
  %arrayidx15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec14, i64 0, i64 0, !dbg !3522
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !3522
  %14 = load float, float* %u.addr, align 4, !dbg !3524
  call void @interp_v2_v2v2(float* %arraydecay10, float* %arraydecay13, float* %arraydecay16, float %14), !dbg !3525
  %arraydecay17 = getelementptr inbounds [2 x float], [2 x float]* %q2, i64 0, i64 0, !dbg !3526
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !3527
  %vec18 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 0, !dbg !3528
  %arrayidx19 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec18, i64 0, i64 0, !dbg !3527
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 0, !dbg !3527
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !3529
  %vec21 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 0, !dbg !3530
  %arrayidx22 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec21, i64 0, i64 1, !dbg !3529
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 0, !dbg !3529
  %17 = load float, float* %u.addr, align 4, !dbg !3531
  call void @interp_v2_v2v2(float* %arraydecay17, float* %arraydecay20, float* %arraydecay23, float %17), !dbg !3532
  %arraydecay24 = getelementptr inbounds [2 x float], [2 x float]* %r0, i64 0, i64 0, !dbg !3533
  %arraydecay25 = getelementptr inbounds [2 x float], [2 x float]* %q0, i64 0, i64 0, !dbg !3534
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %q1, i64 0, i64 0, !dbg !3535
  %18 = load float, float* %u.addr, align 4, !dbg !3536
  call void @interp_v2_v2v2(float* %arraydecay24, float* %arraydecay25, float* %arraydecay26, float %18), !dbg !3537
  %arraydecay27 = getelementptr inbounds [2 x float], [2 x float]* %r1, i64 0, i64 0, !dbg !3538
  %arraydecay28 = getelementptr inbounds [2 x float], [2 x float]* %q1, i64 0, i64 0, !dbg !3539
  %arraydecay29 = getelementptr inbounds [2 x float], [2 x float]* %q2, i64 0, i64 0, !dbg !3540
  %19 = load float, float* %u.addr, align 4, !dbg !3541
  call void @interp_v2_v2v2(float* %arraydecay27, float* %arraydecay28, float* %arraydecay29, float %19), !dbg !3542
  %20 = load float*, float** %co.addr, align 8, !dbg !3543
  %arraydecay30 = getelementptr inbounds [2 x float], [2 x float]* %r0, i64 0, i64 0, !dbg !3544
  %arraydecay31 = getelementptr inbounds [2 x float], [2 x float]* %r1, i64 0, i64 0, !dbg !3545
  %21 = load float, float* %u.addr, align 4, !dbg !3546
  call void @interp_v2_v2v2(float* %20, float* %arraydecay30, float* %arraydecay31, float %21), !dbg !3547
  br label %return, !dbg !3548

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3548
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_point_normal(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %point, float %u, float* %n) #0 !dbg !3549 {
entry:
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %u.addr = alloca float, align 4
  %n.addr = alloca float*, align 8
  %point_prev = alloca %struct.MaskSplinePoint*, align 8
  %point_next = alloca %struct.MaskSplinePoint*, align 8
  %du = alloca float, align 4
  %co = alloca [2 x float], align 4
  %dir = alloca [2 x float], align 4
  %co11 = alloca [2 x float], align 4
  %dir12 = alloca [2 x float], align 4
  %prev_co = alloca [2 x float], align 4
  %next_co = alloca [2 x float], align 4
  %co23 = alloca [2 x float], align 4
  %dir1 = alloca [2 x float], align 4
  %dir2 = alloca [2 x float], align 4
  %dir24 = alloca [2 x float], align 4
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !3550, metadata !DIExpression()), !dbg !3551
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !3552, metadata !DIExpression()), !dbg !3553
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !3554, metadata !DIExpression()), !dbg !3555
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !3556, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_prev, metadata !3558, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_next, metadata !3560, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.declare(metadata float* %du, metadata !3562, metadata !DIExpression()), !dbg !3563
  store float 0x3FA99999A0000000, float* %du, align 4, !dbg !3563
  %0 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3564
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3565
  call void @BKE_mask_get_handle_point_adjacent(%struct.MaskSpline* %0, %struct.MaskSplinePoint* %1, %struct.MaskSplinePoint** %point_prev, %struct.MaskSplinePoint** %point_next), !dbg !3566
  %2 = load float, float* %u.addr, align 4, !dbg !3567
  %sub = fsub float %2, 0x3FA99999A0000000, !dbg !3569
  %cmp = fcmp olt float %sub, 0.000000e+00, !dbg !3570
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3571

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !3572
  %cmp1 = icmp eq %struct.MaskSplinePoint* %3, null, !dbg !3573
  br i1 %cmp1, label %if.then, label %if.else, !dbg !3574

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !3575, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.declare(metadata [2 x float]* %dir, metadata !3578, metadata !DIExpression()), !dbg !3579
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3580
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3581
  %6 = load float, float* %u.addr, align 4, !dbg !3582
  %add = fadd float %6, 0x3FA99999A0000000, !dbg !3583
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !3584
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %4, %struct.MaskSplinePoint* %5, float %add, float* %arraydecay), !dbg !3585
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %dir, i64 0, i64 0, !dbg !3586
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !3587
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3588
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %7, i32 0, i32 0, !dbg !3589
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 0, !dbg !3590
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !3588
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3588
  call void @sub_v2_v2v2(float* %arraydecay2, float* %arraydecay3, float* %arraydecay4), !dbg !3591
  %arraydecay5 = getelementptr inbounds [2 x float], [2 x float]* %dir, i64 0, i64 0, !dbg !3592
  %8 = load float*, float** %n.addr, align 8, !dbg !3593
  call void @orthogonal_direction_get(float* %arraydecay5, float* %8), !dbg !3594
  br label %if.end59, !dbg !3595

if.else:                                          ; preds = %land.lhs.true, %entry
  %9 = load float, float* %u.addr, align 4, !dbg !3596
  %add6 = fadd float %9, 0x3FA99999A0000000, !dbg !3598
  %cmp7 = fcmp ogt float %add6, 1.000000e+00, !dbg !3599
  br i1 %cmp7, label %land.lhs.true8, label %if.else22, !dbg !3600

land.lhs.true8:                                   ; preds = %if.else
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !3601
  %cmp9 = icmp eq %struct.MaskSplinePoint* %10, null, !dbg !3602
  br i1 %cmp9, label %if.then10, label %if.else22, !dbg !3603

if.then10:                                        ; preds = %land.lhs.true8
  call void @llvm.dbg.declare(metadata [2 x float]* %co11, metadata !3604, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.declare(metadata [2 x float]* %dir12, metadata !3607, metadata !DIExpression()), !dbg !3608
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3609
  %12 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3610
  %13 = load float, float* %u.addr, align 4, !dbg !3611
  %sub13 = fsub float %13, 0x3FA99999A0000000, !dbg !3612
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %co11, i64 0, i64 0, !dbg !3613
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %11, %struct.MaskSplinePoint* %12, float %sub13, float* %arraydecay14), !dbg !3614
  %arraydecay15 = getelementptr inbounds [2 x float], [2 x float]* %dir12, i64 0, i64 0, !dbg !3615
  %14 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3616
  %bezt16 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %14, i32 0, i32 0, !dbg !3617
  %vec17 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt16, i32 0, i32 0, !dbg !3618
  %arrayidx18 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec17, i64 0, i64 1, !dbg !3616
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !3616
  %arraydecay20 = getelementptr inbounds [2 x float], [2 x float]* %co11, i64 0, i64 0, !dbg !3619
  call void @sub_v2_v2v2(float* %arraydecay15, float* %arraydecay19, float* %arraydecay20), !dbg !3620
  %arraydecay21 = getelementptr inbounds [2 x float], [2 x float]* %dir12, i64 0, i64 0, !dbg !3621
  %15 = load float*, float** %n.addr, align 8, !dbg !3622
  call void @orthogonal_direction_get(float* %arraydecay21, float* %15), !dbg !3623
  br label %if.end58, !dbg !3624

if.else22:                                        ; preds = %land.lhs.true8, %if.else
  call void @llvm.dbg.declare(metadata [2 x float]* %prev_co, metadata !3625, metadata !DIExpression()), !dbg !3627
  call void @llvm.dbg.declare(metadata [2 x float]* %next_co, metadata !3628, metadata !DIExpression()), !dbg !3629
  call void @llvm.dbg.declare(metadata [2 x float]* %co23, metadata !3630, metadata !DIExpression()), !dbg !3631
  call void @llvm.dbg.declare(metadata [2 x float]* %dir1, metadata !3632, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.declare(metadata [2 x float]* %dir2, metadata !3634, metadata !DIExpression()), !dbg !3635
  call void @llvm.dbg.declare(metadata [2 x float]* %dir24, metadata !3636, metadata !DIExpression()), !dbg !3637
  %16 = load float, float* %u.addr, align 4, !dbg !3638
  %sub25 = fsub float %16, 0x3FA99999A0000000, !dbg !3640
  %cmp26 = fcmp olt float %sub25, 0.000000e+00, !dbg !3641
  br i1 %cmp26, label %if.then27, label %if.else31, !dbg !3642

if.then27:                                        ; preds = %if.else22
  %17 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3643
  %18 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !3645
  %19 = load float, float* %u.addr, align 4, !dbg !3646
  %sub28 = fsub float %19, 0x3FA99999A0000000, !dbg !3647
  %add29 = fadd float 1.000000e+00, %sub28, !dbg !3648
  %arraydecay30 = getelementptr inbounds [2 x float], [2 x float]* %prev_co, i64 0, i64 0, !dbg !3649
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %17, %struct.MaskSplinePoint* %18, float %add29, float* %arraydecay30), !dbg !3650
  br label %if.end, !dbg !3651

if.else31:                                        ; preds = %if.else22
  %20 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3652
  %21 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3654
  %22 = load float, float* %u.addr, align 4, !dbg !3655
  %sub32 = fsub float %22, 0x3FA99999A0000000, !dbg !3656
  %arraydecay33 = getelementptr inbounds [2 x float], [2 x float]* %prev_co, i64 0, i64 0, !dbg !3657
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %20, %struct.MaskSplinePoint* %21, float %sub32, float* %arraydecay33), !dbg !3658
  br label %if.end

if.end:                                           ; preds = %if.else31, %if.then27
  %23 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3659
  %24 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3660
  %25 = load float, float* %u.addr, align 4, !dbg !3661
  %arraydecay34 = getelementptr inbounds [2 x float], [2 x float]* %co23, i64 0, i64 0, !dbg !3662
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %23, %struct.MaskSplinePoint* %24, float %25, float* %arraydecay34), !dbg !3663
  %26 = load float, float* %u.addr, align 4, !dbg !3664
  %add35 = fadd float %26, 0x3FA99999A0000000, !dbg !3666
  %cmp36 = fcmp ogt float %add35, 1.000000e+00, !dbg !3667
  br i1 %cmp36, label %if.then37, label %if.else41, !dbg !3668

if.then37:                                        ; preds = %if.end
  %27 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3669
  %28 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !3671
  %29 = load float, float* %u.addr, align 4, !dbg !3672
  %add38 = fadd float %29, 0x3FA99999A0000000, !dbg !3673
  %sub39 = fsub float %add38, 1.000000e+00, !dbg !3674
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %next_co, i64 0, i64 0, !dbg !3675
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %27, %struct.MaskSplinePoint* %28, float %sub39, float* %arraydecay40), !dbg !3676
  br label %if.end44, !dbg !3677

if.else41:                                        ; preds = %if.end
  %30 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !3678
  %31 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3680
  %32 = load float, float* %u.addr, align 4, !dbg !3681
  %add42 = fadd float %32, 0x3FA99999A0000000, !dbg !3682
  %arraydecay43 = getelementptr inbounds [2 x float], [2 x float]* %next_co, i64 0, i64 0, !dbg !3683
  call void @BKE_mask_point_segment_co(%struct.MaskSpline* %30, %struct.MaskSplinePoint* %31, float %add42, float* %arraydecay43), !dbg !3684
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %if.then37
  %arraydecay45 = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !3685
  %arraydecay46 = getelementptr inbounds [2 x float], [2 x float]* %co23, i64 0, i64 0, !dbg !3686
  %arraydecay47 = getelementptr inbounds [2 x float], [2 x float]* %prev_co, i64 0, i64 0, !dbg !3687
  call void @sub_v2_v2v2(float* %arraydecay45, float* %arraydecay46, float* %arraydecay47), !dbg !3688
  %arraydecay48 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !3689
  %arraydecay49 = getelementptr inbounds [2 x float], [2 x float]* %next_co, i64 0, i64 0, !dbg !3690
  %arraydecay50 = getelementptr inbounds [2 x float], [2 x float]* %co23, i64 0, i64 0, !dbg !3691
  call void @sub_v2_v2v2(float* %arraydecay48, float* %arraydecay49, float* %arraydecay50), !dbg !3692
  %arraydecay51 = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !3693
  %call = call float @normalize_v2(float* %arraydecay51), !dbg !3694
  %arraydecay52 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !3695
  %call53 = call float @normalize_v2(float* %arraydecay52), !dbg !3696
  %arraydecay54 = getelementptr inbounds [2 x float], [2 x float]* %dir24, i64 0, i64 0, !dbg !3697
  %arraydecay55 = getelementptr inbounds [2 x float], [2 x float]* %dir1, i64 0, i64 0, !dbg !3698
  %arraydecay56 = getelementptr inbounds [2 x float], [2 x float]* %dir2, i64 0, i64 0, !dbg !3699
  call void @add_v2_v2v2(float* %arraydecay54, float* %arraydecay55, float* %arraydecay56), !dbg !3700
  %arraydecay57 = getelementptr inbounds [2 x float], [2 x float]* %dir24, i64 0, i64 0, !dbg !3701
  %33 = load float*, float** %n.addr, align 8, !dbg !3702
  call void @orthogonal_direction_get(float* %arraydecay57, float* %33), !dbg !3703
  br label %if.end58

if.end58:                                         ; preds = %if.end44, %if.then10
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then
  ret void, !dbg !3704
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !3705 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3708, metadata !DIExpression()), !dbg !3709
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3710, metadata !DIExpression()), !dbg !3711
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !3712, metadata !DIExpression()), !dbg !3713
  %0 = load float*, float** %a.addr, align 8, !dbg !3714
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3714
  %1 = load float, float* %arrayidx, align 4, !dbg !3714
  %2 = load float*, float** %b.addr, align 8, !dbg !3715
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3715
  %3 = load float, float* %arrayidx1, align 4, !dbg !3715
  %sub = fsub float %1, %3, !dbg !3716
  %4 = load float*, float** %r.addr, align 8, !dbg !3717
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !3717
  store float %sub, float* %arrayidx2, align 4, !dbg !3718
  %5 = load float*, float** %a.addr, align 8, !dbg !3719
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3719
  %6 = load float, float* %arrayidx3, align 4, !dbg !3719
  %7 = load float*, float** %b.addr, align 8, !dbg !3720
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !3720
  %8 = load float, float* %arrayidx4, align 4, !dbg !3720
  %sub5 = fsub float %6, %8, !dbg !3721
  %9 = load float*, float** %r.addr, align 8, !dbg !3722
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !3722
  store float %sub5, float* %arrayidx6, align 4, !dbg !3723
  ret void, !dbg !3724
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v2v2(float* %a, float* %b) #0 !dbg !3725 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3728, metadata !DIExpression()), !dbg !3729
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !3730, metadata !DIExpression()), !dbg !3731
  %0 = load float*, float** %a.addr, align 8, !dbg !3732
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3732
  %1 = load float, float* %arrayidx, align 4, !dbg !3732
  %2 = load float*, float** %b.addr, align 8, !dbg !3733
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3733
  %3 = load float, float* %arrayidx1, align 4, !dbg !3733
  %mul = fmul float %1, %3, !dbg !3734
  %4 = load float*, float** %a.addr, align 8, !dbg !3735
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !3735
  %5 = load float, float* %arrayidx2, align 4, !dbg !3735
  %6 = load float*, float** %b.addr, align 8, !dbg !3736
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !3736
  %7 = load float, float* %arrayidx3, align 4, !dbg !3736
  %mul4 = fmul float %5, %7, !dbg !3737
  %add = fadd float %mul, %mul4, !dbg !3738
  ret float %add, !dbg !3739
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2(float* %v) #0 !dbg !3740 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !3743, metadata !DIExpression()), !dbg !3744
  %0 = load float*, float** %v.addr, align 8, !dbg !3745
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3745
  %1 = load float, float* %arrayidx, align 4, !dbg !3745
  %2 = load float*, float** %v.addr, align 8, !dbg !3746
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3746
  %3 = load float, float* %arrayidx1, align 4, !dbg !3746
  %mul = fmul float %1, %3, !dbg !3747
  %4 = load float*, float** %v.addr, align 8, !dbg !3748
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !3748
  %5 = load float, float* %arrayidx2, align 4, !dbg !3748
  %6 = load float*, float** %v.addr, align 8, !dbg !3749
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !3749
  %7 = load float, float* %arrayidx3, align 4, !dbg !3749
  %mul4 = fmul float %5, %7, !dbg !3750
  %add = fadd float %mul, %mul4, !dbg !3751
  ret float %add, !dbg !3752
}

declare dso_local float @angle_v2v2(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_mask_point_handles_mode_get(%struct.MaskSplinePoint* %point) #0 !dbg !3753 {
entry:
  %retval = alloca i32, align 4
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !3757, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3759, metadata !DIExpression()), !dbg !3760
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3761
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 0, !dbg !3762
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3760
  %1 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3763
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %1, i32 0, i32 5, !dbg !3765
  %2 = load i8, i8* %h1, align 1, !dbg !3765
  %conv = zext i8 %2 to i32, !dbg !3763
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3766
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %3, i32 0, i32 6, !dbg !3767
  %4 = load i8, i8* %h2, align 2, !dbg !3767
  %conv2 = zext i8 %4 to i32, !dbg !3766
  %cmp = icmp eq i32 %conv, %conv2, !dbg !3768
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3769

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3770
  %h14 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %5, i32 0, i32 5, !dbg !3771
  %6 = load i8, i8* %h14, align 1, !dbg !3771
  %conv5 = zext i8 %6 to i32, !dbg !3770
  %cmp6 = icmp eq i32 %conv5, 3, !dbg !3772
  br i1 %cmp6, label %if.then, label %if.end, !dbg !3773

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !3774
  br label %return, !dbg !3774

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 2, i32* %retval, align 4, !dbg !3776
  br label %return, !dbg !3776

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !3777
  ret i32 %7, !dbg !3777
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_point_handle(%struct.MaskSplinePoint* %point, i32 %which_handle, float* %handle) #0 !dbg !3778 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %which_handle.addr = alloca i32, align 4
  %handle.addr = alloca float*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %vec = alloca [2 x float], align 4
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !3782, metadata !DIExpression()), !dbg !3783
  store i32 %which_handle, i32* %which_handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %which_handle.addr, metadata !3784, metadata !DIExpression()), !dbg !3785
  store float* %handle, float** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata float** %handle.addr, metadata !3786, metadata !DIExpression()), !dbg !3787
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3788, metadata !DIExpression()), !dbg !3789
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3790
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 0, !dbg !3791
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3789
  %1 = load i32, i32* %which_handle.addr, align 4, !dbg !3792
  %cmp = icmp eq i32 %1, 1, !dbg !3794
  br i1 %cmp, label %if.then, label %if.else, !dbg !3795

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x float]* %vec, metadata !3796, metadata !DIExpression()), !dbg !3798
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !3799
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3800
  %vec2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %2, i32 0, i32 0, !dbg !3801
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec2, i64 0, i64 0, !dbg !3800
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3800
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3802
  %vec4 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %3, i32 0, i32 0, !dbg !3803
  %arrayidx5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec4, i64 0, i64 1, !dbg !3802
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !3802
  call void @sub_v2_v2v2(float* %arraydecay, float* %arraydecay3, float* %arraydecay6), !dbg !3804
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3805
  %vec7 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 0, !dbg !3806
  %arrayidx8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec7, i64 0, i64 1, !dbg !3805
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !3805
  %5 = load float, float* %arrayidx9, align 4, !dbg !3805
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 1, !dbg !3807
  %6 = load float, float* %arrayidx10, align 4, !dbg !3807
  %add = fadd float %5, %6, !dbg !3808
  %7 = load float*, float** %handle.addr, align 8, !dbg !3809
  %arrayidx11 = getelementptr inbounds float, float* %7, i64 0, !dbg !3809
  store float %add, float* %arrayidx11, align 4, !dbg !3810
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3811
  %vec12 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %8, i32 0, i32 0, !dbg !3812
  %arrayidx13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec12, i64 0, i64 1, !dbg !3811
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 1, !dbg !3811
  %9 = load float, float* %arrayidx14, align 4, !dbg !3811
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !3813
  %10 = load float, float* %arrayidx15, align 4, !dbg !3813
  %sub = fsub float %9, %10, !dbg !3814
  %11 = load float*, float** %handle.addr, align 8, !dbg !3815
  %arrayidx16 = getelementptr inbounds float, float* %11, i64 1, !dbg !3815
  store float %sub, float* %arrayidx16, align 4, !dbg !3816
  br label %if.end30, !dbg !3817

if.else:                                          ; preds = %entry
  %12 = load i32, i32* %which_handle.addr, align 4, !dbg !3818
  %cmp17 = icmp eq i32 %12, 2, !dbg !3820
  br i1 %cmp17, label %if.then18, label %if.else22, !dbg !3821

if.then18:                                        ; preds = %if.else
  %13 = load float*, float** %handle.addr, align 8, !dbg !3822
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3824
  %vec19 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 0, i32 0, !dbg !3825
  %arrayidx20 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec19, i64 0, i64 0, !dbg !3824
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx20, i64 0, i64 0, !dbg !3824
  call void @copy_v2_v2(float* %13, float* %arraydecay21), !dbg !3826
  br label %if.end29, !dbg !3827

if.else22:                                        ; preds = %if.else
  %15 = load i32, i32* %which_handle.addr, align 4, !dbg !3828
  %cmp23 = icmp eq i32 %15, 3, !dbg !3830
  br i1 %cmp23, label %if.then24, label %if.else28, !dbg !3831

if.then24:                                        ; preds = %if.else22
  %16 = load float*, float** %handle.addr, align 8, !dbg !3832
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3834
  %vec25 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %17, i32 0, i32 0, !dbg !3835
  %arrayidx26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec25, i64 0, i64 2, !dbg !3834
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 0, !dbg !3834
  call void @copy_v2_v2(float* %16, float* %arraydecay27), !dbg !3836
  br label %if.end, !dbg !3837

if.else28:                                        ; preds = %if.else22
  br label %if.end

if.end:                                           ; preds = %if.else28, %if.then24
  br label %if.end29

if.end29:                                         ; preds = %if.end, %if.then18
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then
  ret void, !dbg !3838
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_point_set_handle(%struct.MaskSplinePoint* %point, i32 %which_handle, float* %loc, i8 zeroext %keep_direction, float* %orig_handle, [3 x float]* %orig_vec) #0 !dbg !3839 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %which_handle.addr = alloca i32, align 4
  %loc.addr = alloca float*, align 8
  %keep_direction.addr = alloca i8, align 1
  %orig_handle.addr = alloca float*, align 8
  %orig_vec.addr = alloca [3 x float]*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %v1 = alloca [2 x float], align 4
  %v2 = alloca [2 x float], align 4
  %vec = alloca [2 x float], align 4
  %len = alloca float, align 4
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !3843, metadata !DIExpression()), !dbg !3844
  store i32 %which_handle, i32* %which_handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %which_handle.addr, metadata !3845, metadata !DIExpression()), !dbg !3846
  store float* %loc, float** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %loc.addr, metadata !3847, metadata !DIExpression()), !dbg !3848
  store i8 %keep_direction, i8* %keep_direction.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %keep_direction.addr, metadata !3849, metadata !DIExpression()), !dbg !3850
  store float* %orig_handle, float** %orig_handle.addr, align 8
  call void @llvm.dbg.declare(metadata float** %orig_handle.addr, metadata !3851, metadata !DIExpression()), !dbg !3852
  store [3 x float]* %orig_vec, [3 x float]** %orig_vec.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %orig_vec.addr, metadata !3853, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3855, metadata !DIExpression()), !dbg !3856
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !3857
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 0, !dbg !3858
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3856
  %1 = load i32, i32* %which_handle.addr, align 4, !dbg !3859
  %cmp = icmp eq i32 %1, 1, !dbg !3861
  br i1 %cmp, label %if.then, label %if.else74, !dbg !3862

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x float]* %v1, metadata !3863, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.declare(metadata [2 x float]* %v2, metadata !3866, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.declare(metadata [2 x float]* %vec, metadata !3868, metadata !DIExpression()), !dbg !3869
  %2 = load i8, i8* %keep_direction.addr, align 1, !dbg !3870
  %tobool = icmp ne i8 %2, 0, !dbg !3870
  br i1 %tobool, label %if.then2, label %if.else50, !dbg !3872

if.then2:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3873
  %3 = load float*, float** %loc.addr, align 8, !dbg !3875
  %4 = load [3 x float]*, [3 x float]** %orig_vec.addr, align 8, !dbg !3876
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %4, i64 1, !dbg !3876
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3876
  call void @sub_v2_v2v2(float* %arraydecay, float* %3, float* %arraydecay3), !dbg !3877
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !3878
  %5 = load float*, float** %orig_handle.addr, align 8, !dbg !3879
  %6 = load [3 x float]*, [3 x float]** %orig_vec.addr, align 8, !dbg !3880
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %6, i64 1, !dbg !3880
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !3880
  call void @sub_v2_v2v2(float* %arraydecay4, float* %5, float* %arraydecay6), !dbg !3881
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !3882
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3883
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !3884
  call void @project_v2_v2v2(float* %arraydecay7, float* %arraydecay8, float* %arraydecay9), !dbg !3885
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !3886
  %arraydecay11 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !3888
  %call = call float @dot_v2v2(float* %arraydecay10, float* %arraydecay11), !dbg !3889
  %cmp12 = fcmp ogt float %call, 0.000000e+00, !dbg !3890
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !3891

if.then13:                                        ; preds = %if.then2
  call void @llvm.dbg.declare(metadata float* %len, metadata !3892, metadata !DIExpression()), !dbg !3894
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !3895
  %call15 = call float @len_v2(float* %arraydecay14), !dbg !3896
  store float %call15, float* %len, align 4, !dbg !3894
  %arraydecay16 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3897
  %7 = load [3 x float]*, [3 x float]** %orig_vec.addr, align 8, !dbg !3898
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %7, i64 0, !dbg !3898
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx17, i64 0, i64 0, !dbg !3898
  %8 = load [3 x float]*, [3 x float]** %orig_vec.addr, align 8, !dbg !3899
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 1, !dbg !3899
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 0, !dbg !3899
  call void @sub_v2_v2v2(float* %arraydecay16, float* %arraydecay18, float* %arraydecay20), !dbg !3900
  %arraydecay21 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3901
  %9 = load float, float* %len, align 4, !dbg !3902
  %arraydecay22 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3903
  %call23 = call float @len_v2(float* %arraydecay22), !dbg !3904
  %div = fdiv float %9, %call23, !dbg !3905
  call void @mul_v2_fl(float* %arraydecay21, float %div), !dbg !3906
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3907
  %vec24 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i32 0, i32 0, !dbg !3908
  %arrayidx25 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec24, i64 0, i64 0, !dbg !3907
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx25, i64 0, i64 0, !dbg !3907
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3909
  %vec27 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 0, !dbg !3910
  %arrayidx28 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec27, i64 0, i64 1, !dbg !3909
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx28, i64 0, i64 0, !dbg !3909
  %arraydecay30 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3911
  call void @add_v2_v2v2(float* %arraydecay26, float* %arraydecay29, float* %arraydecay30), !dbg !3912
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3913
  %vec31 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %12, i32 0, i32 0, !dbg !3914
  %arrayidx32 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec31, i64 0, i64 2, !dbg !3913
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx32, i64 0, i64 0, !dbg !3913
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3915
  %vec34 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 0, !dbg !3916
  %arrayidx35 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec34, i64 0, i64 1, !dbg !3915
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx35, i64 0, i64 0, !dbg !3915
  %arraydecay37 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3917
  call void @sub_v2_v2v2(float* %arraydecay33, float* %arraydecay36, float* %arraydecay37), !dbg !3918
  br label %if.end, !dbg !3919

if.else:                                          ; preds = %if.then2
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3920
  %vec38 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 0, i32 0, !dbg !3922
  %arrayidx39 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec38, i64 0, i64 0, !dbg !3920
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx39, i64 0, i64 0, !dbg !3920
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3923
  %vec41 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 0, !dbg !3924
  %arrayidx42 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec41, i64 0, i64 1, !dbg !3923
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 0, !dbg !3923
  call void @copy_v3_v3(float* %arraydecay40, float* %arraydecay43), !dbg !3925
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3926
  %vec44 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 0, !dbg !3927
  %arrayidx45 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec44, i64 0, i64 2, !dbg !3926
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx45, i64 0, i64 0, !dbg !3926
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3928
  %vec47 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %17, i32 0, i32 0, !dbg !3929
  %arrayidx48 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec47, i64 0, i64 1, !dbg !3928
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx48, i64 0, i64 0, !dbg !3928
  call void @copy_v3_v3(float* %arraydecay46, float* %arraydecay49), !dbg !3930
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  br label %if.end73, !dbg !3931

if.else50:                                        ; preds = %if.then
  %arraydecay51 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3932
  %18 = load float*, float** %loc.addr, align 8, !dbg !3934
  %19 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3935
  %vec52 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %19, i32 0, i32 0, !dbg !3936
  %arrayidx53 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec52, i64 0, i64 1, !dbg !3935
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx53, i64 0, i64 0, !dbg !3935
  call void @sub_v2_v2v2(float* %arraydecay51, float* %18, float* %arraydecay54), !dbg !3937
  %arrayidx55 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 1, !dbg !3938
  %20 = load float, float* %arrayidx55, align 4, !dbg !3938
  %fneg = fneg float %20, !dbg !3939
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !3940
  store float %fneg, float* %arrayidx56, align 4, !dbg !3941
  %arrayidx57 = getelementptr inbounds [2 x float], [2 x float]* %v1, i64 0, i64 0, !dbg !3942
  %21 = load float, float* %arrayidx57, align 4, !dbg !3942
  %arrayidx58 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 1, !dbg !3943
  store float %21, float* %arrayidx58, align 4, !dbg !3944
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3945
  %vec59 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 0, i32 0, !dbg !3946
  %arrayidx60 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec59, i64 0, i64 0, !dbg !3945
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx60, i64 0, i64 0, !dbg !3945
  %23 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3947
  %vec62 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %23, i32 0, i32 0, !dbg !3948
  %arrayidx63 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec62, i64 0, i64 1, !dbg !3947
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx63, i64 0, i64 0, !dbg !3947
  %arraydecay65 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !3949
  call void @add_v2_v2v2(float* %arraydecay61, float* %arraydecay64, float* %arraydecay65), !dbg !3950
  %24 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3951
  %vec66 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 0, !dbg !3952
  %arrayidx67 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec66, i64 0, i64 2, !dbg !3951
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx67, i64 0, i64 0, !dbg !3951
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3953
  %vec69 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 0, i32 0, !dbg !3954
  %arrayidx70 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec69, i64 0, i64 1, !dbg !3953
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx70, i64 0, i64 0, !dbg !3953
  %arraydecay72 = getelementptr inbounds [2 x float], [2 x float]* %v2, i64 0, i64 0, !dbg !3955
  call void @sub_v2_v2v2(float* %arraydecay68, float* %arraydecay71, float* %arraydecay72), !dbg !3956
  br label %if.end73

if.end73:                                         ; preds = %if.else50, %if.end
  br label %if.end89, !dbg !3957

if.else74:                                        ; preds = %entry
  %26 = load i32, i32* %which_handle.addr, align 4, !dbg !3958
  %cmp75 = icmp eq i32 %26, 2, !dbg !3960
  br i1 %cmp75, label %if.then76, label %if.else80, !dbg !3961

if.then76:                                        ; preds = %if.else74
  %27 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3962
  %vec77 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %27, i32 0, i32 0, !dbg !3964
  %arrayidx78 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec77, i64 0, i64 0, !dbg !3962
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx78, i64 0, i64 0, !dbg !3962
  %28 = load float*, float** %loc.addr, align 8, !dbg !3965
  call void @copy_v2_v2(float* %arraydecay79, float* %28), !dbg !3966
  br label %if.end88, !dbg !3967

if.else80:                                        ; preds = %if.else74
  %29 = load i32, i32* %which_handle.addr, align 4, !dbg !3968
  %cmp81 = icmp eq i32 %29, 3, !dbg !3970
  br i1 %cmp81, label %if.then82, label %if.else86, !dbg !3971

if.then82:                                        ; preds = %if.else80
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3972
  %vec83 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %30, i32 0, i32 0, !dbg !3974
  %arrayidx84 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec83, i64 0, i64 2, !dbg !3972
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx84, i64 0, i64 0, !dbg !3972
  %31 = load float*, float** %loc.addr, align 8, !dbg !3975
  call void @copy_v2_v2(float* %arraydecay85, float* %31), !dbg !3976
  br label %if.end87, !dbg !3977

if.else86:                                        ; preds = %if.else80
  br label %if.end87

if.end87:                                         ; preds = %if.else86, %if.then82
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then76
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end73
  ret void, !dbg !3978
}

declare dso_local void @project_v2_v2v2(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2(float* %v) #0 !dbg !3979 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !3980, metadata !DIExpression()), !dbg !3981
  %0 = load float*, float** %v.addr, align 8, !dbg !3982
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3982
  %1 = load float, float* %arrayidx, align 4, !dbg !3982
  %2 = load float*, float** %v.addr, align 8, !dbg !3983
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3983
  %3 = load float, float* %arrayidx1, align 4, !dbg !3983
  %mul = fmul float %1, %3, !dbg !3984
  %4 = load float*, float** %v.addr, align 8, !dbg !3985
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !3985
  %5 = load float, float* %arrayidx2, align 4, !dbg !3985
  %6 = load float*, float** %v.addr, align 8, !dbg !3986
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !3986
  %7 = load float, float* %arrayidx3, align 4, !dbg !3986
  %mul4 = fmul float %5, %7, !dbg !3987
  %add = fadd float %mul, %mul4, !dbg !3988
  %call = call float @sqrtf(float %add) #6, !dbg !3989
  ret float %call, !dbg !3990
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_fl(float* %r, float %f) #0 !dbg !3991 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3994, metadata !DIExpression()), !dbg !3995
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !3996, metadata !DIExpression()), !dbg !3997
  %0 = load float, float* %f.addr, align 4, !dbg !3998
  %1 = load float*, float** %r.addr, align 8, !dbg !3999
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !3999
  %2 = load float, float* %arrayidx, align 4, !dbg !4000
  %mul = fmul float %2, %0, !dbg !4000
  store float %mul, float* %arrayidx, align 4, !dbg !4000
  %3 = load float, float* %f.addr, align 4, !dbg !4001
  %4 = load float*, float** %r.addr, align 8, !dbg !4002
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !4002
  %5 = load float, float* %arrayidx1, align 4, !dbg !4003
  %mul2 = fmul float %5, %3, !dbg !4003
  store float %mul2, float* %arrayidx1, align 4, !dbg !4003
  ret void, !dbg !4004
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !4005 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4006, metadata !DIExpression()), !dbg !4007
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4008, metadata !DIExpression()), !dbg !4009
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !4010, metadata !DIExpression()), !dbg !4011
  %0 = load float*, float** %a.addr, align 8, !dbg !4012
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4012
  %1 = load float, float* %arrayidx, align 4, !dbg !4012
  %2 = load float*, float** %b.addr, align 8, !dbg !4013
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4013
  %3 = load float, float* %arrayidx1, align 4, !dbg !4013
  %add = fadd float %1, %3, !dbg !4014
  %4 = load float*, float** %r.addr, align 8, !dbg !4015
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !4015
  store float %add, float* %arrayidx2, align 4, !dbg !4016
  %5 = load float*, float** %a.addr, align 8, !dbg !4017
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4017
  %6 = load float, float* %arrayidx3, align 4, !dbg !4017
  %7 = load float*, float** %b.addr, align 8, !dbg !4018
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !4018
  %8 = load float, float* %arrayidx4, align 4, !dbg !4018
  %add5 = fadd float %6, %8, !dbg !4019
  %9 = load float*, float** %r.addr, align 8, !dbg !4020
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !4020
  store float %add5, float* %arrayidx6, align 4, !dbg !4021
  ret void, !dbg !4022
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !4023 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4024, metadata !DIExpression()), !dbg !4025
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4026, metadata !DIExpression()), !dbg !4027
  %0 = load float*, float** %a.addr, align 8, !dbg !4028
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4028
  %1 = load float, float* %arrayidx, align 4, !dbg !4028
  %2 = load float*, float** %r.addr, align 8, !dbg !4029
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4029
  store float %1, float* %arrayidx1, align 4, !dbg !4030
  %3 = load float*, float** %a.addr, align 8, !dbg !4031
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4031
  %4 = load float, float* %arrayidx2, align 4, !dbg !4031
  %5 = load float*, float** %r.addr, align 8, !dbg !4032
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4032
  store float %4, float* %arrayidx3, align 4, !dbg !4033
  %6 = load float*, float** %a.addr, align 8, !dbg !4034
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4034
  %7 = load float, float* %arrayidx4, align 4, !dbg !4034
  %8 = load float*, float** %r.addr, align 8, !dbg !4035
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4035
  store float %7, float* %arrayidx5, align 4, !dbg !4036
  ret void, !dbg !4037
}

declare dso_local void @interp_v2_v2v2(float*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_get_handle_point_adjacent(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %r_point_prev, %struct.MaskSplinePoint** %r_point_next) #0 !dbg !4038 {
entry:
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %r_point_prev.addr = alloca %struct.MaskSplinePoint**, align 8
  %r_point_next.addr = alloca %struct.MaskSplinePoint**, align 8
  %points_array = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !4042, metadata !DIExpression()), !dbg !4043
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !4044, metadata !DIExpression()), !dbg !4045
  store %struct.MaskSplinePoint** %r_point_prev, %struct.MaskSplinePoint*** %r_point_prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint*** %r_point_prev.addr, metadata !4046, metadata !DIExpression()), !dbg !4047
  store %struct.MaskSplinePoint** %r_point_next, %struct.MaskSplinePoint*** %r_point_next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint*** %r_point_next.addr, metadata !4048, metadata !DIExpression()), !dbg !4049
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %points_array, metadata !4050, metadata !DIExpression()), !dbg !4051
  %0 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !4052
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4053
  %call = call %struct.MaskSplinePoint* @BKE_mask_spline_point_array_from_point(%struct.MaskSpline* %0, %struct.MaskSplinePoint* %1), !dbg !4054
  store %struct.MaskSplinePoint* %call, %struct.MaskSplinePoint** %points_array, align 8, !dbg !4051
  %2 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !4055
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array, align 8, !dbg !4056
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4057
  %call1 = call %struct.MaskSplinePoint* @mask_spline_point_prev(%struct.MaskSpline* %2, %struct.MaskSplinePoint* %3, %struct.MaskSplinePoint* %4), !dbg !4058
  %5 = load %struct.MaskSplinePoint**, %struct.MaskSplinePoint*** %r_point_prev.addr, align 8, !dbg !4059
  store %struct.MaskSplinePoint* %call1, %struct.MaskSplinePoint** %5, align 8, !dbg !4060
  %6 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !4061
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array, align 8, !dbg !4062
  %8 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4063
  %call2 = call %struct.MaskSplinePoint* @mask_spline_point_next(%struct.MaskSpline* %6, %struct.MaskSplinePoint* %7, %struct.MaskSplinePoint* %8), !dbg !4064
  %9 = load %struct.MaskSplinePoint**, %struct.MaskSplinePoint*** %r_point_next.addr, align 8, !dbg !4065
  store %struct.MaskSplinePoint* %call2, %struct.MaskSplinePoint** %9, align 8, !dbg !4066
  ret void, !dbg !4067
}

; Function Attrs: noinline nounwind uwtable
define internal void @orthogonal_direction_get(float* %vec, float* %result) #0 !dbg !4068 {
entry:
  %vec.addr = alloca float*, align 8
  %result.addr = alloca float*, align 8
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !4071, metadata !DIExpression()), !dbg !4072
  store float* %result, float** %result.addr, align 8
  call void @llvm.dbg.declare(metadata float** %result.addr, metadata !4073, metadata !DIExpression()), !dbg !4074
  %0 = load float*, float** %vec.addr, align 8, !dbg !4075
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !4075
  %1 = load float, float* %arrayidx, align 4, !dbg !4075
  %fneg = fneg float %1, !dbg !4076
  %2 = load float*, float** %result.addr, align 8, !dbg !4077
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4077
  store float %fneg, float* %arrayidx1, align 4, !dbg !4078
  %3 = load float*, float** %vec.addr, align 8, !dbg !4079
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 0, !dbg !4079
  %4 = load float, float* %arrayidx2, align 4, !dbg !4079
  %5 = load float*, float** %result.addr, align 8, !dbg !4080
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4080
  store float %4, float* %arrayidx3, align 4, !dbg !4081
  %6 = load float*, float** %result.addr, align 8, !dbg !4082
  %call = call float @normalize_v2(float* %6), !dbg !4083
  ret void, !dbg !4084
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v2(float* %n) #0 !dbg !4085 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !4088, metadata !DIExpression()), !dbg !4089
  %0 = load float*, float** %n.addr, align 8, !dbg !4090
  %1 = load float*, float** %n.addr, align 8, !dbg !4091
  %call = call float @normalize_v2_v2(float* %0, float* %1), !dbg !4092
  ret float %call, !dbg !4093
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @BKE_mask_point_weight_scalar(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %point, float %u) #0 !dbg !4094 {
entry:
  %retval = alloca float, align 4
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %u.addr = alloca float, align 4
  %points_array = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bezt_next = alloca %struct.BezTriple*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !4097, metadata !DIExpression()), !dbg !4098
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !4099, metadata !DIExpression()), !dbg !4100
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !4101, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %points_array, metadata !4103, metadata !DIExpression()), !dbg !4104
  %0 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !4105
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4106
  %call = call %struct.MaskSplinePoint* @BKE_mask_spline_point_array_from_point(%struct.MaskSpline* %0, %struct.MaskSplinePoint* %1), !dbg !4107
  store %struct.MaskSplinePoint* %call, %struct.MaskSplinePoint** %points_array, align 8, !dbg !4104
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !4108, metadata !DIExpression()), !dbg !4109
  %2 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4110
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %2, i32 0, i32 0, !dbg !4111
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !4109
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_next, metadata !4112, metadata !DIExpression()), !dbg !4113
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !4114
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array, align 8, !dbg !4115
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4116
  %call2 = call %struct.BezTriple* @BKE_mask_spline_point_next_bezt(%struct.MaskSpline* %3, %struct.MaskSplinePoint* %4, %struct.MaskSplinePoint* %5), !dbg !4117
  store %struct.BezTriple* %call2, %struct.BezTriple** %bezt_next, align 8, !dbg !4118
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !4119
  %tobool = icmp ne %struct.BezTriple* %6, null, !dbg !4119
  br i1 %tobool, label %if.else, label %if.then, !dbg !4121

if.then:                                          ; preds = %entry
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4122
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %7, i32 0, i32 2, !dbg !4124
  %8 = load float, float* %weight, align 4, !dbg !4124
  store float %8, float* %retval, align 4, !dbg !4125
  br label %return, !dbg !4125

if.else:                                          ; preds = %entry
  %9 = load float, float* %u.addr, align 4, !dbg !4126
  %cmp = fcmp ole float %9, 0.000000e+00, !dbg !4128
  br i1 %cmp, label %if.then3, label %if.else5, !dbg !4129

if.then3:                                         ; preds = %if.else
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4130
  %weight4 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i32 0, i32 2, !dbg !4132
  %11 = load float, float* %weight4, align 4, !dbg !4132
  store float %11, float* %retval, align 4, !dbg !4133
  br label %return, !dbg !4133

if.else5:                                         ; preds = %if.else
  %12 = load float, float* %u.addr, align 4, !dbg !4134
  %cmp6 = fcmp oge float %12, 1.000000e+00, !dbg !4136
  br i1 %cmp6, label %if.then7, label %if.else9, !dbg !4137

if.then7:                                         ; preds = %if.else5
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !4138
  %weight8 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 2, !dbg !4140
  %14 = load float, float* %weight8, align 4, !dbg !4140
  store float %14, float* %retval, align 4, !dbg !4141
  br label %return, !dbg !4141

if.else9:                                         ; preds = %if.else5
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4142
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !4144
  %17 = load float, float* %u.addr, align 4, !dbg !4145
  %call10 = call float @mask_point_interp_weight(%struct.BezTriple* %15, %struct.BezTriple* %16, float %17), !dbg !4146
  store float %call10, float* %retval, align 4, !dbg !4147
  br label %return, !dbg !4147

return:                                           ; preds = %if.else9, %if.then7, %if.then3, %if.then
  %18 = load float, float* %retval, align 4, !dbg !4148
  ret float %18, !dbg !4148
}

; Function Attrs: noinline nounwind uwtable
define internal float @mask_point_interp_weight(%struct.BezTriple* %bezt, %struct.BezTriple* %bezt_next, float %u) #0 !dbg !4149 {
entry:
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %bezt_next.addr = alloca %struct.BezTriple*, align 8
  %u.addr = alloca float, align 4
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !4152, metadata !DIExpression()), !dbg !4153
  store %struct.BezTriple* %bezt_next, %struct.BezTriple** %bezt_next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_next.addr, metadata !4154, metadata !DIExpression()), !dbg !4155
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !4156, metadata !DIExpression()), !dbg !4157
  %0 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4158
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %0, i32 0, i32 2, !dbg !4159
  %1 = load float, float* %weight, align 4, !dbg !4159
  %2 = load float, float* %u.addr, align 4, !dbg !4160
  %sub = fsub float 1.000000e+00, %2, !dbg !4161
  %mul = fmul float %1, %sub, !dbg !4162
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next.addr, align 8, !dbg !4163
  %weight1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %3, i32 0, i32 2, !dbg !4164
  %4 = load float, float* %weight1, align 4, !dbg !4164
  %5 = load float, float* %u.addr, align 4, !dbg !4165
  %mul2 = fmul float %4, %5, !dbg !4166
  %add = fadd float %mul, %mul2, !dbg !4167
  ret float %add, !dbg !4168
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @BKE_mask_point_weight(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %point, float %u) #0 !dbg !4169 {
entry:
  %retval = alloca float, align 4
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %u.addr = alloca float, align 4
  %points_array = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bezt_next = alloca %struct.BezTriple*, align 8
  %cur_u = alloca float, align 4
  %cur_w = alloca float, align 4
  %next_u = alloca float, align 4
  %next_w = alloca float, align 4
  %fac = alloca float, align 4
  %i = alloca i32, align 4
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !4170, metadata !DIExpression()), !dbg !4171
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !4172, metadata !DIExpression()), !dbg !4173
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !4174, metadata !DIExpression()), !dbg !4175
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %points_array, metadata !4176, metadata !DIExpression()), !dbg !4177
  %0 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !4178
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4179
  %call = call %struct.MaskSplinePoint* @BKE_mask_spline_point_array_from_point(%struct.MaskSpline* %0, %struct.MaskSplinePoint* %1), !dbg !4180
  store %struct.MaskSplinePoint* %call, %struct.MaskSplinePoint** %points_array, align 8, !dbg !4177
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !4181, metadata !DIExpression()), !dbg !4182
  %2 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4183
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %2, i32 0, i32 0, !dbg !4184
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !4182
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_next, metadata !4185, metadata !DIExpression()), !dbg !4186
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !4187
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array, align 8, !dbg !4188
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4189
  %call2 = call %struct.BezTriple* @BKE_mask_spline_point_next_bezt(%struct.MaskSpline* %3, %struct.MaskSplinePoint* %4, %struct.MaskSplinePoint* %5), !dbg !4190
  store %struct.BezTriple* %call2, %struct.BezTriple** %bezt_next, align 8, !dbg !4191
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !4192
  %tobool = icmp ne %struct.BezTriple* %6, null, !dbg !4192
  br i1 %tobool, label %if.else, label %if.then, !dbg !4194

if.then:                                          ; preds = %entry
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4195
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %7, i32 0, i32 2, !dbg !4197
  %8 = load float, float* %weight, align 4, !dbg !4197
  store float %8, float* %retval, align 4, !dbg !4198
  br label %return, !dbg !4198

if.else:                                          ; preds = %entry
  %9 = load float, float* %u.addr, align 4, !dbg !4199
  %cmp = fcmp ole float %9, 0.000000e+00, !dbg !4201
  br i1 %cmp, label %if.then3, label %if.else5, !dbg !4202

if.then3:                                         ; preds = %if.else
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4203
  %weight4 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i32 0, i32 2, !dbg !4205
  %11 = load float, float* %weight4, align 4, !dbg !4205
  store float %11, float* %retval, align 4, !dbg !4206
  br label %return, !dbg !4206

if.else5:                                         ; preds = %if.else
  %12 = load float, float* %u.addr, align 4, !dbg !4207
  %cmp6 = fcmp oge float %12, 1.000000e+00, !dbg !4209
  br i1 %cmp6, label %if.then7, label %if.else9, !dbg !4210

if.then7:                                         ; preds = %if.else5
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !4211
  %weight8 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 2, !dbg !4213
  %14 = load float, float* %weight8, align 4, !dbg !4213
  store float %14, float* %retval, align 4, !dbg !4214
  br label %return, !dbg !4214

if.else9:                                         ; preds = %if.else5
  call void @llvm.dbg.declare(metadata float* %cur_u, metadata !4215, metadata !DIExpression()), !dbg !4217
  store float 0.000000e+00, float* %cur_u, align 4, !dbg !4217
  call void @llvm.dbg.declare(metadata float* %cur_w, metadata !4218, metadata !DIExpression()), !dbg !4219
  store float 0.000000e+00, float* %cur_w, align 4, !dbg !4219
  call void @llvm.dbg.declare(metadata float* %next_u, metadata !4220, metadata !DIExpression()), !dbg !4221
  store float 0.000000e+00, float* %next_u, align 4, !dbg !4221
  call void @llvm.dbg.declare(metadata float* %next_w, metadata !4222, metadata !DIExpression()), !dbg !4223
  store float 0.000000e+00, float* %next_w, align 4, !dbg !4223
  call void @llvm.dbg.declare(metadata float* %fac, metadata !4224, metadata !DIExpression()), !dbg !4225
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4226, metadata !DIExpression()), !dbg !4227
  store i32 0, i32* %i, align 4, !dbg !4228
  br label %for.cond, !dbg !4230

for.cond:                                         ; preds = %for.inc, %if.else9
  %15 = load i32, i32* %i, align 4, !dbg !4231
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4233
  %tot_uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %16, i32 0, i32 2, !dbg !4234
  %17 = load i32, i32* %tot_uw, align 4, !dbg !4234
  %cmp10 = icmp sle i32 %15, %17, !dbg !4235
  br i1 %cmp10, label %for.body, label %for.end, !dbg !4236

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !4237
  %cmp11 = icmp eq i32 %18, 0, !dbg !4240
  br i1 %cmp11, label %if.then12, label %if.else13, !dbg !4241

if.then12:                                        ; preds = %for.body
  store float 0.000000e+00, float* %cur_u, align 4, !dbg !4242
  store float 1.000000e+00, float* %cur_w, align 4, !dbg !4244
  br label %if.end, !dbg !4245

if.else13:                                        ; preds = %for.body
  %19 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4246
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %19, i32 0, i32 3, !dbg !4248
  %20 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !4248
  %21 = load i32, i32* %i, align 4, !dbg !4249
  %sub = sub nsw i32 %21, 1, !dbg !4250
  %idxprom = sext i32 %sub to i64, !dbg !4246
  %arrayidx = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %20, i64 %idxprom, !dbg !4246
  %u14 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx, i32 0, i32 0, !dbg !4251
  %22 = load float, float* %u14, align 4, !dbg !4251
  store float %22, float* %cur_u, align 4, !dbg !4252
  %23 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4253
  %uw15 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %23, i32 0, i32 3, !dbg !4254
  %24 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw15, align 8, !dbg !4254
  %25 = load i32, i32* %i, align 4, !dbg !4255
  %sub16 = sub nsw i32 %25, 1, !dbg !4256
  %idxprom17 = sext i32 %sub16 to i64, !dbg !4253
  %arrayidx18 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %24, i64 %idxprom17, !dbg !4253
  %w = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx18, i32 0, i32 1, !dbg !4257
  %26 = load float, float* %w, align 4, !dbg !4257
  store float %26, float* %cur_w, align 4, !dbg !4258
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then12
  %27 = load i32, i32* %i, align 4, !dbg !4259
  %28 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4261
  %tot_uw19 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %28, i32 0, i32 2, !dbg !4262
  %29 = load i32, i32* %tot_uw19, align 4, !dbg !4262
  %cmp20 = icmp eq i32 %27, %29, !dbg !4263
  br i1 %cmp20, label %if.then21, label %if.else22, !dbg !4264

if.then21:                                        ; preds = %if.end
  store float 1.000000e+00, float* %next_u, align 4, !dbg !4265
  store float 1.000000e+00, float* %next_w, align 4, !dbg !4267
  br label %if.end31, !dbg !4268

if.else22:                                        ; preds = %if.end
  %30 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4269
  %uw23 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %30, i32 0, i32 3, !dbg !4271
  %31 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw23, align 8, !dbg !4271
  %32 = load i32, i32* %i, align 4, !dbg !4272
  %idxprom24 = sext i32 %32 to i64, !dbg !4269
  %arrayidx25 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %31, i64 %idxprom24, !dbg !4269
  %u26 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx25, i32 0, i32 0, !dbg !4273
  %33 = load float, float* %u26, align 4, !dbg !4273
  store float %33, float* %next_u, align 4, !dbg !4274
  %34 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4275
  %uw27 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %34, i32 0, i32 3, !dbg !4276
  %35 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw27, align 8, !dbg !4276
  %36 = load i32, i32* %i, align 4, !dbg !4277
  %idxprom28 = sext i32 %36 to i64, !dbg !4275
  %arrayidx29 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %35, i64 %idxprom28, !dbg !4275
  %w30 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx29, i32 0, i32 1, !dbg !4278
  %37 = load float, float* %w30, align 4, !dbg !4278
  store float %37, float* %next_w, align 4, !dbg !4279
  br label %if.end31

if.end31:                                         ; preds = %if.else22, %if.then21
  %38 = load float, float* %u.addr, align 4, !dbg !4280
  %39 = load float, float* %cur_u, align 4, !dbg !4282
  %cmp32 = fcmp oge float %38, %39, !dbg !4283
  br i1 %cmp32, label %land.lhs.true, label %if.end35, !dbg !4284

land.lhs.true:                                    ; preds = %if.end31
  %40 = load float, float* %u.addr, align 4, !dbg !4285
  %41 = load float, float* %next_u, align 4, !dbg !4286
  %cmp33 = fcmp ole float %40, %41, !dbg !4287
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !4288

if.then34:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !4289

if.end35:                                         ; preds = %land.lhs.true, %if.end31
  br label %for.inc, !dbg !4291

for.inc:                                          ; preds = %if.end35
  %42 = load i32, i32* %i, align 4, !dbg !4292
  %inc = add nsw i32 %42, 1, !dbg !4292
  store i32 %inc, i32* %i, align 4, !dbg !4292
  br label %for.cond, !dbg !4293, !llvm.loop !4294

for.end:                                          ; preds = %if.then34, %for.cond
  %43 = load float, float* %u.addr, align 4, !dbg !4296
  %44 = load float, float* %cur_u, align 4, !dbg !4297
  %sub36 = fsub float %43, %44, !dbg !4298
  %45 = load float, float* %next_u, align 4, !dbg !4299
  %46 = load float, float* %cur_u, align 4, !dbg !4300
  %sub37 = fsub float %45, %46, !dbg !4301
  %div = fdiv float %sub36, %sub37, !dbg !4302
  store float %div, float* %fac, align 4, !dbg !4303
  %47 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4304
  %48 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !4305
  %49 = load float, float* %cur_u, align 4, !dbg !4306
  %call38 = call float @mask_point_interp_weight(%struct.BezTriple* %47, %struct.BezTriple* %48, float %49), !dbg !4307
  %50 = load float, float* %cur_w, align 4, !dbg !4308
  %mul = fmul float %50, %call38, !dbg !4308
  store float %mul, float* %cur_w, align 4, !dbg !4308
  %51 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !4309
  %52 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !4310
  %53 = load float, float* %next_u, align 4, !dbg !4311
  %call39 = call float @mask_point_interp_weight(%struct.BezTriple* %51, %struct.BezTriple* %52, float %53), !dbg !4312
  %54 = load float, float* %next_w, align 4, !dbg !4313
  %mul40 = fmul float %54, %call39, !dbg !4313
  store float %mul40, float* %next_w, align 4, !dbg !4313
  %55 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !4314
  %weight_interp = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %55, i32 0, i32 4, !dbg !4316
  %56 = load i8, i8* %weight_interp, align 1, !dbg !4316
  %conv = zext i8 %56 to i32, !dbg !4314
  %cmp41 = icmp eq i32 %conv, 2, !dbg !4317
  br i1 %cmp41, label %if.then43, label %if.else52, !dbg !4318

if.then43:                                        ; preds = %for.end
  %57 = load float, float* %cur_w, align 4, !dbg !4319
  %58 = load float, float* %next_w, align 4, !dbg !4321
  %59 = load float, float* %cur_w, align 4, !dbg !4322
  %sub44 = fsub float %58, %59, !dbg !4323
  %60 = load float, float* %fac, align 4, !dbg !4324
  %mul45 = fmul float 3.000000e+00, %60, !dbg !4325
  %61 = load float, float* %fac, align 4, !dbg !4326
  %mul46 = fmul float %mul45, %61, !dbg !4327
  %62 = load float, float* %fac, align 4, !dbg !4328
  %mul47 = fmul float 2.000000e+00, %62, !dbg !4329
  %63 = load float, float* %fac, align 4, !dbg !4330
  %mul48 = fmul float %mul47, %63, !dbg !4331
  %64 = load float, float* %fac, align 4, !dbg !4332
  %mul49 = fmul float %mul48, %64, !dbg !4333
  %sub50 = fsub float %mul46, %mul49, !dbg !4334
  %mul51 = fmul float %sub44, %sub50, !dbg !4335
  %add = fadd float %57, %mul51, !dbg !4336
  store float %add, float* %retval, align 4, !dbg !4337
  br label %return, !dbg !4337

if.else52:                                        ; preds = %for.end
  %65 = load float, float* %fac, align 4, !dbg !4338
  %sub53 = fsub float 1.000000e+00, %65, !dbg !4340
  %66 = load float, float* %cur_w, align 4, !dbg !4341
  %mul54 = fmul float %sub53, %66, !dbg !4342
  %67 = load float, float* %fac, align 4, !dbg !4343
  %68 = load float, float* %next_w, align 4, !dbg !4344
  %mul55 = fmul float %67, %68, !dbg !4345
  %add56 = fadd float %mul54, %mul55, !dbg !4346
  store float %add56, float* %retval, align 4, !dbg !4347
  br label %return, !dbg !4347

return:                                           ; preds = %if.else52, %if.then43, %if.then7, %if.then3, %if.then
  %69 = load float, float* %retval, align 4, !dbg !4348
  ret float %69, !dbg !4348
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskSplinePointUW* @BKE_mask_point_sort_uw(%struct.MaskSplinePoint* %point, %struct.MaskSplinePointUW* %uw) #0 !dbg !4349 {
entry:
  %retval = alloca %struct.MaskSplinePointUW*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %uw.addr = alloca %struct.MaskSplinePointUW*, align 8
  %idx = alloca i32, align 4
  %sw_ap = alloca %struct.MaskSplinePointUW, align 4
  %sw_ap68 = alloca %struct.MaskSplinePointUW, align 4
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !4353, metadata !DIExpression()), !dbg !4354
  store %struct.MaskSplinePointUW* %uw, %struct.MaskSplinePointUW** %uw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %uw.addr, metadata !4355, metadata !DIExpression()), !dbg !4356
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4357
  %tot_uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 2, !dbg !4359
  %1 = load i32, i32* %tot_uw, align 4, !dbg !4359
  %cmp = icmp sgt i32 %1, 1, !dbg !4360
  br i1 %cmp, label %if.then, label %if.end88, !dbg !4361

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !4362, metadata !DIExpression()), !dbg !4364
  %2 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw.addr, align 8, !dbg !4365
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4366
  %uw1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 3, !dbg !4367
  %4 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw1, align 8, !dbg !4367
  %sub.ptr.lhs.cast = ptrtoint %struct.MaskSplinePointUW* %2 to i64, !dbg !4368
  %sub.ptr.rhs.cast = ptrtoint %struct.MaskSplinePointUW* %4 to i64, !dbg !4368
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4368
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 12, !dbg !4368
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !4365
  store i32 %conv, i32* %idx, align 4, !dbg !4364
  %5 = load i32, i32* %idx, align 4, !dbg !4369
  %cmp2 = icmp sgt i32 %5, 0, !dbg !4371
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !4372

land.lhs.true:                                    ; preds = %if.then
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4373
  %uw4 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i32 0, i32 3, !dbg !4374
  %7 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw4, align 8, !dbg !4374
  %8 = load i32, i32* %idx, align 4, !dbg !4375
  %sub = sub nsw i32 %8, 1, !dbg !4376
  %idxprom = sext i32 %sub to i64, !dbg !4373
  %arrayidx = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %7, i64 %idxprom, !dbg !4373
  %u = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx, i32 0, i32 0, !dbg !4377
  %9 = load float, float* %u, align 4, !dbg !4377
  %10 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw.addr, align 8, !dbg !4378
  %u5 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %10, i32 0, i32 0, !dbg !4379
  %11 = load float, float* %u5, align 4, !dbg !4379
  %cmp6 = fcmp ogt float %9, %11, !dbg !4380
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !4381

if.then8:                                         ; preds = %land.lhs.true
  br label %while.cond, !dbg !4382

while.cond:                                       ; preds = %while.body, %if.then8
  %12 = load i32, i32* %idx, align 4, !dbg !4384
  %cmp9 = icmp sgt i32 %12, 0, !dbg !4385
  br i1 %cmp9, label %land.rhs, label %land.end, !dbg !4386

land.rhs:                                         ; preds = %while.cond
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4387
  %uw11 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %13, i32 0, i32 3, !dbg !4388
  %14 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw11, align 8, !dbg !4388
  %15 = load i32, i32* %idx, align 4, !dbg !4389
  %sub12 = sub nsw i32 %15, 1, !dbg !4390
  %idxprom13 = sext i32 %sub12 to i64, !dbg !4387
  %arrayidx14 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %14, i64 %idxprom13, !dbg !4387
  %u15 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx14, i32 0, i32 0, !dbg !4391
  %16 = load float, float* %u15, align 4, !dbg !4391
  %17 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4392
  %uw16 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %17, i32 0, i32 3, !dbg !4393
  %18 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw16, align 8, !dbg !4393
  %19 = load i32, i32* %idx, align 4, !dbg !4394
  %idxprom17 = sext i32 %19 to i64, !dbg !4392
  %arrayidx18 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %18, i64 %idxprom17, !dbg !4392
  %u19 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx18, i32 0, i32 0, !dbg !4395
  %20 = load float, float* %u19, align 4, !dbg !4395
  %cmp20 = fcmp ogt float %16, %20, !dbg !4396
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %21 = phi i1 [ false, %while.cond ], [ %cmp20, %land.rhs ], !dbg !4397
  br i1 %21, label %while.body, label %while.end, !dbg !4382

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW* %sw_ap, metadata !4398, metadata !DIExpression()), !dbg !4401
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4401
  %uw22 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %22, i32 0, i32 3, !dbg !4401
  %23 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw22, align 8, !dbg !4401
  %24 = load i32, i32* %idx, align 4, !dbg !4401
  %sub23 = sub nsw i32 %24, 1, !dbg !4401
  %idxprom24 = sext i32 %sub23 to i64, !dbg !4401
  %arrayidx25 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %23, i64 %idxprom24, !dbg !4401
  %25 = bitcast %struct.MaskSplinePointUW* %sw_ap to i8*, !dbg !4401
  %26 = bitcast %struct.MaskSplinePointUW* %arrayidx25 to i8*, !dbg !4401
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 12, i1 false), !dbg !4401
  %27 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4401
  %uw26 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %27, i32 0, i32 3, !dbg !4401
  %28 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw26, align 8, !dbg !4401
  %29 = load i32, i32* %idx, align 4, !dbg !4401
  %sub27 = sub nsw i32 %29, 1, !dbg !4401
  %idxprom28 = sext i32 %sub27 to i64, !dbg !4401
  %arrayidx29 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %28, i64 %idxprom28, !dbg !4401
  %30 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4401
  %uw30 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %30, i32 0, i32 3, !dbg !4401
  %31 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw30, align 8, !dbg !4401
  %32 = load i32, i32* %idx, align 4, !dbg !4401
  %idxprom31 = sext i32 %32 to i64, !dbg !4401
  %arrayidx32 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %31, i64 %idxprom31, !dbg !4401
  %33 = bitcast %struct.MaskSplinePointUW* %arrayidx29 to i8*, !dbg !4401
  %34 = bitcast %struct.MaskSplinePointUW* %arrayidx32 to i8*, !dbg !4401
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 12, i1 false), !dbg !4401
  %35 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4401
  %uw33 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %35, i32 0, i32 3, !dbg !4401
  %36 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw33, align 8, !dbg !4401
  %37 = load i32, i32* %idx, align 4, !dbg !4401
  %idxprom34 = sext i32 %37 to i64, !dbg !4401
  %arrayidx35 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %36, i64 %idxprom34, !dbg !4401
  %38 = bitcast %struct.MaskSplinePointUW* %arrayidx35 to i8*, !dbg !4401
  %39 = bitcast %struct.MaskSplinePointUW* %sw_ap to i8*, !dbg !4401
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64 12, i1 false), !dbg !4401
  %40 = load i32, i32* %idx, align 4, !dbg !4402
  %dec = add nsw i32 %40, -1, !dbg !4402
  store i32 %dec, i32* %idx, align 4, !dbg !4402
  br label %while.cond, !dbg !4382, !llvm.loop !4403

while.end:                                        ; preds = %land.end
  br label %if.end, !dbg !4405

if.end:                                           ; preds = %while.end, %land.lhs.true, %if.then
  %41 = load i32, i32* %idx, align 4, !dbg !4406
  %42 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4408
  %tot_uw36 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %42, i32 0, i32 2, !dbg !4409
  %43 = load i32, i32* %tot_uw36, align 4, !dbg !4409
  %sub37 = sub nsw i32 %43, 1, !dbg !4410
  %cmp38 = icmp slt i32 %41, %sub37, !dbg !4411
  br i1 %cmp38, label %land.lhs.true40, label %if.end84, !dbg !4412

land.lhs.true40:                                  ; preds = %if.end
  %44 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4413
  %uw41 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %44, i32 0, i32 3, !dbg !4414
  %45 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw41, align 8, !dbg !4414
  %46 = load i32, i32* %idx, align 4, !dbg !4415
  %add = add nsw i32 %46, 1, !dbg !4416
  %idxprom42 = sext i32 %add to i64, !dbg !4413
  %arrayidx43 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %45, i64 %idxprom42, !dbg !4413
  %u44 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx43, i32 0, i32 0, !dbg !4417
  %47 = load float, float* %u44, align 4, !dbg !4417
  %48 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw.addr, align 8, !dbg !4418
  %u45 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %48, i32 0, i32 0, !dbg !4419
  %49 = load float, float* %u45, align 4, !dbg !4419
  %cmp46 = fcmp olt float %47, %49, !dbg !4420
  br i1 %cmp46, label %if.then48, label %if.end84, !dbg !4421

if.then48:                                        ; preds = %land.lhs.true40
  br label %while.cond49, !dbg !4422

while.cond49:                                     ; preds = %while.body67, %if.then48
  %50 = load i32, i32* %idx, align 4, !dbg !4424
  %51 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4425
  %tot_uw50 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %51, i32 0, i32 2, !dbg !4426
  %52 = load i32, i32* %tot_uw50, align 4, !dbg !4426
  %sub51 = sub nsw i32 %52, 1, !dbg !4427
  %cmp52 = icmp slt i32 %50, %sub51, !dbg !4428
  br i1 %cmp52, label %land.rhs54, label %land.end66, !dbg !4429

land.rhs54:                                       ; preds = %while.cond49
  %53 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4430
  %uw55 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %53, i32 0, i32 3, !dbg !4431
  %54 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw55, align 8, !dbg !4431
  %55 = load i32, i32* %idx, align 4, !dbg !4432
  %add56 = add nsw i32 %55, 1, !dbg !4433
  %idxprom57 = sext i32 %add56 to i64, !dbg !4430
  %arrayidx58 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %54, i64 %idxprom57, !dbg !4430
  %u59 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx58, i32 0, i32 0, !dbg !4434
  %56 = load float, float* %u59, align 4, !dbg !4434
  %57 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4435
  %uw60 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %57, i32 0, i32 3, !dbg !4436
  %58 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw60, align 8, !dbg !4436
  %59 = load i32, i32* %idx, align 4, !dbg !4437
  %idxprom61 = sext i32 %59 to i64, !dbg !4435
  %arrayidx62 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %58, i64 %idxprom61, !dbg !4435
  %u63 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx62, i32 0, i32 0, !dbg !4438
  %60 = load float, float* %u63, align 4, !dbg !4438
  %cmp64 = fcmp olt float %56, %60, !dbg !4439
  br label %land.end66

land.end66:                                       ; preds = %land.rhs54, %while.cond49
  %61 = phi i1 [ false, %while.cond49 ], [ %cmp64, %land.rhs54 ], !dbg !4440
  br i1 %61, label %while.body67, label %while.end83, !dbg !4422

while.body67:                                     ; preds = %land.end66
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW* %sw_ap68, metadata !4441, metadata !DIExpression()), !dbg !4444
  %62 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4444
  %uw69 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %62, i32 0, i32 3, !dbg !4444
  %63 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw69, align 8, !dbg !4444
  %64 = load i32, i32* %idx, align 4, !dbg !4444
  %add70 = add nsw i32 %64, 1, !dbg !4444
  %idxprom71 = sext i32 %add70 to i64, !dbg !4444
  %arrayidx72 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %63, i64 %idxprom71, !dbg !4444
  %65 = bitcast %struct.MaskSplinePointUW* %sw_ap68 to i8*, !dbg !4444
  %66 = bitcast %struct.MaskSplinePointUW* %arrayidx72 to i8*, !dbg !4444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 12, i1 false), !dbg !4444
  %67 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4444
  %uw73 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %67, i32 0, i32 3, !dbg !4444
  %68 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw73, align 8, !dbg !4444
  %69 = load i32, i32* %idx, align 4, !dbg !4444
  %add74 = add nsw i32 %69, 1, !dbg !4444
  %idxprom75 = sext i32 %add74 to i64, !dbg !4444
  %arrayidx76 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %68, i64 %idxprom75, !dbg !4444
  %70 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4444
  %uw77 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %70, i32 0, i32 3, !dbg !4444
  %71 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw77, align 8, !dbg !4444
  %72 = load i32, i32* %idx, align 4, !dbg !4444
  %idxprom78 = sext i32 %72 to i64, !dbg !4444
  %arrayidx79 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %71, i64 %idxprom78, !dbg !4444
  %73 = bitcast %struct.MaskSplinePointUW* %arrayidx76 to i8*, !dbg !4444
  %74 = bitcast %struct.MaskSplinePointUW* %arrayidx79 to i8*, !dbg !4444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 12, i1 false), !dbg !4444
  %75 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4444
  %uw80 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %75, i32 0, i32 3, !dbg !4444
  %76 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw80, align 8, !dbg !4444
  %77 = load i32, i32* %idx, align 4, !dbg !4444
  %idxprom81 = sext i32 %77 to i64, !dbg !4444
  %arrayidx82 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %76, i64 %idxprom81, !dbg !4444
  %78 = bitcast %struct.MaskSplinePointUW* %arrayidx82 to i8*, !dbg !4444
  %79 = bitcast %struct.MaskSplinePointUW* %sw_ap68 to i8*, !dbg !4444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 12, i1 false), !dbg !4444
  %80 = load i32, i32* %idx, align 4, !dbg !4445
  %inc = add nsw i32 %80, 1, !dbg !4445
  store i32 %inc, i32* %idx, align 4, !dbg !4445
  br label %while.cond49, !dbg !4422, !llvm.loop !4446

while.end83:                                      ; preds = %land.end66
  br label %if.end84, !dbg !4448

if.end84:                                         ; preds = %while.end83, %land.lhs.true40, %if.end
  %81 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4449
  %uw85 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %81, i32 0, i32 3, !dbg !4450
  %82 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw85, align 8, !dbg !4450
  %83 = load i32, i32* %idx, align 4, !dbg !4451
  %idxprom86 = sext i32 %83 to i64, !dbg !4449
  %arrayidx87 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %82, i64 %idxprom86, !dbg !4449
  store %struct.MaskSplinePointUW* %arrayidx87, %struct.MaskSplinePointUW** %retval, align 8, !dbg !4452
  br label %return, !dbg !4452

if.end88:                                         ; preds = %entry
  %84 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw.addr, align 8, !dbg !4453
  store %struct.MaskSplinePointUW* %84, %struct.MaskSplinePointUW** %retval, align 8, !dbg !4454
  br label %return, !dbg !4454

return:                                           ; preds = %if.end88, %if.end84
  %85 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %retval, align 8, !dbg !4455
  ret %struct.MaskSplinePointUW* %85, !dbg !4455
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_point_add_uw(%struct.MaskSplinePoint* %point, float %u, float %w) #0 !dbg !4456 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %u.addr = alloca float, align 4
  %w.addr = alloca float, align 4
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !4459, metadata !DIExpression()), !dbg !4460
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !4461, metadata !DIExpression()), !dbg !4462
  store float %w, float* %w.addr, align 4
  call void @llvm.dbg.declare(metadata float* %w.addr, metadata !4463, metadata !DIExpression()), !dbg !4464
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4465
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 3, !dbg !4467
  %1 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !4467
  %tobool = icmp ne %struct.MaskSplinePointUW* %1, null, !dbg !4465
  br i1 %tobool, label %if.else, label %if.then, !dbg !4468

if.then:                                          ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4469
  %call = call i8* %2(i64 12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0)), !dbg !4469
  %3 = bitcast i8* %call to %struct.MaskSplinePointUW*, !dbg !4469
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4470
  %uw1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %4, i32 0, i32 3, !dbg !4471
  store %struct.MaskSplinePointUW* %3, %struct.MaskSplinePointUW** %uw1, align 8, !dbg !4472
  br label %if.end, !dbg !4470

if.else:                                          ; preds = %entry
  %5 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !4473
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4473
  %uw2 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i32 0, i32 3, !dbg !4473
  %7 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw2, align 8, !dbg !4473
  %8 = bitcast %struct.MaskSplinePointUW* %7 to i8*, !dbg !4473
  %9 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4473
  %tot_uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %9, i32 0, i32 2, !dbg !4473
  %10 = load i32, i32* %tot_uw, align 4, !dbg !4473
  %add = add nsw i32 %10, 1, !dbg !4473
  %conv = sext i32 %add to i64, !dbg !4473
  %mul = mul i64 %conv, 12, !dbg !4473
  %call3 = call i8* %5(i8* %8, i64 %mul, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.BKE_mask_point_add_uw, i64 0, i64 0)), !dbg !4473
  %11 = bitcast i8* %call3 to %struct.MaskSplinePointUW*, !dbg !4473
  %12 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4474
  %uw4 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %12, i32 0, i32 3, !dbg !4475
  store %struct.MaskSplinePointUW* %11, %struct.MaskSplinePointUW** %uw4, align 8, !dbg !4476
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load float, float* %u.addr, align 4, !dbg !4477
  %14 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4478
  %uw5 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %14, i32 0, i32 3, !dbg !4479
  %15 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw5, align 8, !dbg !4479
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4480
  %tot_uw6 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %16, i32 0, i32 2, !dbg !4481
  %17 = load i32, i32* %tot_uw6, align 4, !dbg !4481
  %idxprom = sext i32 %17 to i64, !dbg !4478
  %arrayidx = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %15, i64 %idxprom, !dbg !4478
  %u7 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx, i32 0, i32 0, !dbg !4482
  store float %13, float* %u7, align 4, !dbg !4483
  %18 = load float, float* %w.addr, align 4, !dbg !4484
  %19 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4485
  %uw8 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %19, i32 0, i32 3, !dbg !4486
  %20 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw8, align 8, !dbg !4486
  %21 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4487
  %tot_uw9 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %21, i32 0, i32 2, !dbg !4488
  %22 = load i32, i32* %tot_uw9, align 4, !dbg !4488
  %idxprom10 = sext i32 %22 to i64, !dbg !4485
  %arrayidx11 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %20, i64 %idxprom10, !dbg !4485
  %w12 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx11, i32 0, i32 1, !dbg !4489
  store float %18, float* %w12, align 4, !dbg !4490
  %23 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4491
  %uw13 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %23, i32 0, i32 3, !dbg !4492
  %24 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw13, align 8, !dbg !4492
  %25 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4493
  %tot_uw14 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %25, i32 0, i32 2, !dbg !4494
  %26 = load i32, i32* %tot_uw14, align 4, !dbg !4494
  %idxprom15 = sext i32 %26 to i64, !dbg !4491
  %arrayidx16 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %24, i64 %idxprom15, !dbg !4491
  %flag = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx16, i32 0, i32 2, !dbg !4495
  store i32 0, i32* %flag, align 4, !dbg !4496
  %27 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4497
  %tot_uw17 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %27, i32 0, i32 2, !dbg !4498
  %28 = load i32, i32* %tot_uw17, align 4, !dbg !4499
  %inc = add nsw i32 %28, 1, !dbg !4499
  store i32 %inc, i32* %tot_uw17, align 4, !dbg !4499
  %29 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4500
  %30 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4501
  %uw18 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %30, i32 0, i32 3, !dbg !4502
  %31 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw18, align 8, !dbg !4502
  %32 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4503
  %tot_uw19 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %32, i32 0, i32 2, !dbg !4504
  %33 = load i32, i32* %tot_uw19, align 4, !dbg !4504
  %sub = sub nsw i32 %33, 1, !dbg !4505
  %idxprom20 = sext i32 %sub to i64, !dbg !4501
  %arrayidx21 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %31, i64 %idxprom20, !dbg !4501
  %call22 = call %struct.MaskSplinePointUW* @BKE_mask_point_sort_uw(%struct.MaskSplinePoint* %29, %struct.MaskSplinePointUW* %arrayidx21), !dbg !4506
  ret void, !dbg !4507
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_point_select_set(%struct.MaskSplinePoint* %point, i8 zeroext %do_select) #0 !dbg !4508 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %do_select.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !4512, metadata !DIExpression()), !dbg !4513
  store i8 %do_select, i8* %do_select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_select.addr, metadata !4514, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4516, metadata !DIExpression()), !dbg !4517
  %0 = load i8, i8* %do_select.addr, align 1, !dbg !4518
  %tobool = icmp ne i8 %0, 0, !dbg !4518
  br i1 %tobool, label %if.then, label %if.else, !dbg !4520

if.then:                                          ; preds = %entry
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4521
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %1, i32 0, i32 0, !dbg !4521
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 7, !dbg !4521
  %2 = load i8, i8* %f1, align 1, !dbg !4521
  %conv = zext i8 %2 to i32, !dbg !4521
  %or = or i32 %conv, 1, !dbg !4521
  %conv1 = trunc i32 %or to i8, !dbg !4521
  store i8 %conv1, i8* %f1, align 1, !dbg !4521
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4521
  %bezt2 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !4521
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt2, i32 0, i32 8, !dbg !4521
  %4 = load i8, i8* %f2, align 4, !dbg !4521
  %conv3 = zext i8 %4 to i32, !dbg !4521
  %or4 = or i32 %conv3, 1, !dbg !4521
  %conv5 = trunc i32 %or4 to i8, !dbg !4521
  store i8 %conv5, i8* %f2, align 4, !dbg !4521
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4521
  %bezt6 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %5, i32 0, i32 0, !dbg !4521
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt6, i32 0, i32 9, !dbg !4521
  %6 = load i8, i8* %f3, align 1, !dbg !4521
  %conv7 = zext i8 %6 to i32, !dbg !4521
  %or8 = or i32 %conv7, 1, !dbg !4521
  %conv9 = trunc i32 %or8 to i8, !dbg !4521
  store i8 %conv9, i8* %f3, align 1, !dbg !4521
  br label %if.end, !dbg !4524

if.else:                                          ; preds = %entry
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4525
  %bezt10 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %7, i32 0, i32 0, !dbg !4525
  %f111 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt10, i32 0, i32 7, !dbg !4525
  %8 = load i8, i8* %f111, align 1, !dbg !4525
  %conv12 = zext i8 %8 to i32, !dbg !4525
  %and = and i32 %conv12, -2, !dbg !4525
  %conv13 = trunc i32 %and to i8, !dbg !4525
  store i8 %conv13, i8* %f111, align 1, !dbg !4525
  %9 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4525
  %bezt14 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %9, i32 0, i32 0, !dbg !4525
  %f215 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt14, i32 0, i32 8, !dbg !4525
  %10 = load i8, i8* %f215, align 4, !dbg !4525
  %conv16 = zext i8 %10 to i32, !dbg !4525
  %and17 = and i32 %conv16, -2, !dbg !4525
  %conv18 = trunc i32 %and17 to i8, !dbg !4525
  store i8 %conv18, i8* %f215, align 4, !dbg !4525
  %11 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4525
  %bezt19 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %11, i32 0, i32 0, !dbg !4525
  %f320 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt19, i32 0, i32 9, !dbg !4525
  %12 = load i8, i8* %f320, align 1, !dbg !4525
  %conv21 = zext i8 %12 to i32, !dbg !4525
  %and22 = and i32 %conv21, -2, !dbg !4525
  %conv23 = trunc i32 %and22 to i8, !dbg !4525
  store i8 %conv23, i8* %f320, align 1, !dbg !4525
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !4528
  br label %for.cond, !dbg !4530

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !4531
  %14 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4533
  %tot_uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %14, i32 0, i32 2, !dbg !4534
  %15 = load i32, i32* %tot_uw, align 4, !dbg !4534
  %cmp = icmp slt i32 %13, %15, !dbg !4535
  br i1 %cmp, label %for.body, label %for.end, !dbg !4536

for.body:                                         ; preds = %for.cond
  %16 = load i8, i8* %do_select.addr, align 1, !dbg !4537
  %tobool25 = icmp ne i8 %16, 0, !dbg !4537
  br i1 %tobool25, label %if.then26, label %if.else28, !dbg !4540

if.then26:                                        ; preds = %for.body
  %17 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4541
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %17, i32 0, i32 3, !dbg !4543
  %18 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !4543
  %19 = load i32, i32* %i, align 4, !dbg !4544
  %idxprom = sext i32 %19 to i64, !dbg !4541
  %arrayidx = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %18, i64 %idxprom, !dbg !4541
  %flag = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx, i32 0, i32 2, !dbg !4545
  %20 = load i32, i32* %flag, align 4, !dbg !4546
  %or27 = or i32 %20, 1, !dbg !4546
  store i32 %or27, i32* %flag, align 4, !dbg !4546
  br label %if.end34, !dbg !4547

if.else28:                                        ; preds = %for.body
  %21 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4548
  %uw29 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %21, i32 0, i32 3, !dbg !4550
  %22 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw29, align 8, !dbg !4550
  %23 = load i32, i32* %i, align 4, !dbg !4551
  %idxprom30 = sext i32 %23 to i64, !dbg !4548
  %arrayidx31 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %22, i64 %idxprom30, !dbg !4548
  %flag32 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %arrayidx31, i32 0, i32 2, !dbg !4552
  %24 = load i32, i32* %flag32, align 4, !dbg !4553
  %and33 = and i32 %24, -2, !dbg !4553
  store i32 %and33, i32* %flag32, align 4, !dbg !4553
  br label %if.end34

if.end34:                                         ; preds = %if.else28, %if.then26
  br label %for.inc, !dbg !4554

for.inc:                                          ; preds = %if.end34
  %25 = load i32, i32* %i, align 4, !dbg !4555
  %inc = add nsw i32 %25, 1, !dbg !4555
  store i32 %inc, i32* %i, align 4, !dbg !4555
  br label %for.cond, !dbg !4556, !llvm.loop !4557

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4559
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_point_select_set_handle(%struct.MaskSplinePoint* %point, i32 %which_handle, i8 zeroext %do_select) #0 !dbg !4560 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %which_handle.addr = alloca i32, align 4
  %do_select.addr = alloca i8, align 1
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !4564, metadata !DIExpression()), !dbg !4565
  store i32 %which_handle, i32* %which_handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %which_handle.addr, metadata !4566, metadata !DIExpression()), !dbg !4567
  store i8 %do_select, i8* %do_select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_select.addr, metadata !4568, metadata !DIExpression()), !dbg !4569
  %0 = load i8, i8* %do_select.addr, align 1, !dbg !4570
  %tobool = icmp ne i8 %0, 0, !dbg !4570
  br i1 %tobool, label %if.then, label %if.else28, !dbg !4572

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %which_handle.addr, align 4, !dbg !4573
  %cmp = icmp eq i32 %1, 1, !dbg !4573
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !4573

lor.lhs.false:                                    ; preds = %if.then
  %2 = load i32, i32* %which_handle.addr, align 4, !dbg !4573
  %cmp1 = icmp eq i32 %2, 4, !dbg !4573
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !4576

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4577
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !4579
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 7, !dbg !4580
  %4 = load i8, i8* %f1, align 1, !dbg !4581
  %conv = zext i8 %4 to i32, !dbg !4581
  %or = or i32 %conv, 1, !dbg !4581
  %conv3 = trunc i32 %or to i8, !dbg !4581
  store i8 %conv3, i8* %f1, align 1, !dbg !4581
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4582
  %bezt4 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %5, i32 0, i32 0, !dbg !4583
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt4, i32 0, i32 9, !dbg !4584
  %6 = load i8, i8* %f3, align 1, !dbg !4585
  %conv5 = zext i8 %6 to i32, !dbg !4585
  %or6 = or i32 %conv5, 1, !dbg !4585
  %conv7 = trunc i32 %or6 to i8, !dbg !4585
  store i8 %conv7, i8* %f3, align 1, !dbg !4585
  br label %if.end27, !dbg !4586

if.else:                                          ; preds = %lor.lhs.false
  %7 = load i32, i32* %which_handle.addr, align 4, !dbg !4587
  %cmp8 = icmp eq i32 %7, 2, !dbg !4589
  br i1 %cmp8, label %if.then10, label %if.else16, !dbg !4590

if.then10:                                        ; preds = %if.else
  %8 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4591
  %bezt11 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %8, i32 0, i32 0, !dbg !4593
  %f112 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt11, i32 0, i32 7, !dbg !4594
  %9 = load i8, i8* %f112, align 1, !dbg !4595
  %conv13 = zext i8 %9 to i32, !dbg !4595
  %or14 = or i32 %conv13, 1, !dbg !4595
  %conv15 = trunc i32 %or14 to i8, !dbg !4595
  store i8 %conv15, i8* %f112, align 1, !dbg !4595
  br label %if.end26, !dbg !4596

if.else16:                                        ; preds = %if.else
  %10 = load i32, i32* %which_handle.addr, align 4, !dbg !4597
  %cmp17 = icmp eq i32 %10, 3, !dbg !4599
  br i1 %cmp17, label %if.then19, label %if.else25, !dbg !4600

if.then19:                                        ; preds = %if.else16
  %11 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4601
  %bezt20 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %11, i32 0, i32 0, !dbg !4603
  %f321 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt20, i32 0, i32 9, !dbg !4604
  %12 = load i8, i8* %f321, align 1, !dbg !4605
  %conv22 = zext i8 %12 to i32, !dbg !4605
  %or23 = or i32 %conv22, 1, !dbg !4605
  %conv24 = trunc i32 %or23 to i8, !dbg !4605
  store i8 %conv24, i8* %f321, align 1, !dbg !4605
  br label %if.end, !dbg !4606

if.else25:                                        ; preds = %if.else16
  br label %if.end

if.end:                                           ; preds = %if.else25, %if.then19
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then10
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then2
  br label %if.end66, !dbg !4607

if.else28:                                        ; preds = %entry
  %13 = load i32, i32* %which_handle.addr, align 4, !dbg !4608
  %cmp29 = icmp eq i32 %13, 1, !dbg !4608
  br i1 %cmp29, label %if.then34, label %lor.lhs.false31, !dbg !4608

lor.lhs.false31:                                  ; preds = %if.else28
  %14 = load i32, i32* %which_handle.addr, align 4, !dbg !4608
  %cmp32 = icmp eq i32 %14, 4, !dbg !4608
  br i1 %cmp32, label %if.then34, label %if.else44, !dbg !4611

if.then34:                                        ; preds = %lor.lhs.false31, %if.else28
  %15 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4612
  %bezt35 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %15, i32 0, i32 0, !dbg !4614
  %f136 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt35, i32 0, i32 7, !dbg !4615
  %16 = load i8, i8* %f136, align 1, !dbg !4616
  %conv37 = zext i8 %16 to i32, !dbg !4616
  %and = and i32 %conv37, -2, !dbg !4616
  %conv38 = trunc i32 %and to i8, !dbg !4616
  store i8 %conv38, i8* %f136, align 1, !dbg !4616
  %17 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4617
  %bezt39 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %17, i32 0, i32 0, !dbg !4618
  %f340 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt39, i32 0, i32 9, !dbg !4619
  %18 = load i8, i8* %f340, align 1, !dbg !4620
  %conv41 = zext i8 %18 to i32, !dbg !4620
  %and42 = and i32 %conv41, -2, !dbg !4620
  %conv43 = trunc i32 %and42 to i8, !dbg !4620
  store i8 %conv43, i8* %f340, align 1, !dbg !4620
  br label %if.end65, !dbg !4621

if.else44:                                        ; preds = %lor.lhs.false31
  %19 = load i32, i32* %which_handle.addr, align 4, !dbg !4622
  %cmp45 = icmp eq i32 %19, 2, !dbg !4624
  br i1 %cmp45, label %if.then47, label %if.else53, !dbg !4625

if.then47:                                        ; preds = %if.else44
  %20 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4626
  %bezt48 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %20, i32 0, i32 0, !dbg !4628
  %f149 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt48, i32 0, i32 7, !dbg !4629
  %21 = load i8, i8* %f149, align 1, !dbg !4630
  %conv50 = zext i8 %21 to i32, !dbg !4630
  %and51 = and i32 %conv50, -2, !dbg !4630
  %conv52 = trunc i32 %and51 to i8, !dbg !4630
  store i8 %conv52, i8* %f149, align 1, !dbg !4630
  br label %if.end64, !dbg !4631

if.else53:                                        ; preds = %if.else44
  %22 = load i32, i32* %which_handle.addr, align 4, !dbg !4632
  %cmp54 = icmp eq i32 %22, 3, !dbg !4634
  br i1 %cmp54, label %if.then56, label %if.else62, !dbg !4635

if.then56:                                        ; preds = %if.else53
  %23 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4636
  %bezt57 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %23, i32 0, i32 0, !dbg !4638
  %f358 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt57, i32 0, i32 9, !dbg !4639
  %24 = load i8, i8* %f358, align 1, !dbg !4640
  %conv59 = zext i8 %24 to i32, !dbg !4640
  %and60 = and i32 %conv59, -2, !dbg !4640
  %conv61 = trunc i32 %and60 to i8, !dbg !4640
  store i8 %conv61, i8* %f358, align 1, !dbg !4640
  br label %if.end63, !dbg !4641

if.else62:                                        ; preds = %if.else53
  br label %if.end63

if.end63:                                         ; preds = %if.else62, %if.then56
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then47
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then34
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end27
  ret void, !dbg !4642
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Mask* @BKE_mask_new(%struct.Main* %bmain, i8* %name) #0 !dbg !4643 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %name.addr = alloca i8*, align 8
  %mask = alloca %struct.Mask*, align 8
  %mask_name = alloca [64 x i8], align 16
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !4707, metadata !DIExpression()), !dbg !4708
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4709, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !4711, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.declare(metadata [64 x i8]* %mask_name, metadata !4713, metadata !DIExpression()), !dbg !4714
  %0 = load i8*, i8** %name.addr, align 8, !dbg !4715
  %tobool = icmp ne i8* %0, null, !dbg !4715
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4717

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !4718
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !4718
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4718
  %conv = zext i8 %2 to i32, !dbg !4718
  %tobool1 = icmp ne i32 %conv, 0, !dbg !4718
  br i1 %tobool1, label %if.then, label %if.else, !dbg !4719

if.then:                                          ; preds = %land.lhs.true
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %mask_name, i64 0, i64 0, !dbg !4720
  %3 = load i8*, i8** %name.addr, align 8, !dbg !4721
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %3, i64 64), !dbg !4722
  br label %if.end, !dbg !4722

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %mask_name, i64 0, i64 0, !dbg !4723
  %call3 = call i8* @strcpy(i8* %arraydecay2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !4724
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4725
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %mask_name, i64 0, i64 0, !dbg !4726
  %call5 = call %struct.Mask* @mask_alloc(%struct.Main* %4, i8* %arraydecay4), !dbg !4727
  store %struct.Mask* %call5, %struct.Mask** %mask, align 8, !dbg !4728
  %5 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4729
  %sfra = getelementptr inbounds %struct.Mask, %struct.Mask* %5, i32 0, i32 5, !dbg !4730
  store i32 1, i32* %sfra, align 8, !dbg !4731
  %6 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4732
  %efra = getelementptr inbounds %struct.Mask, %struct.Mask* %6, i32 0, i32 6, !dbg !4733
  store i32 100, i32* %efra, align 4, !dbg !4734
  %7 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4735
  ret %struct.Mask* %7, !dbg !4736
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Mask* @mask_alloc(%struct.Main* %bmain, i8* %name) #0 !dbg !4737 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %name.addr = alloca i8*, align 8
  %mask = alloca %struct.Mask*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !4740, metadata !DIExpression()), !dbg !4741
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4742, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !4744, metadata !DIExpression()), !dbg !4745
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4746
  %1 = load i8*, i8** %name.addr, align 8, !dbg !4747
  %call = call i8* @BKE_libblock_alloc(%struct.Main* %0, i16 signext 21325, i8* %1), !dbg !4748
  %2 = bitcast i8* %call to %struct.Mask*, !dbg !4748
  store %struct.Mask* %2, %struct.Mask** %mask, align 8, !dbg !4749
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4750
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %3, i32 0, i32 0, !dbg !4751
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !4752
  %4 = load i16, i16* %flag, align 2, !dbg !4753
  %conv = sext i16 %4 to i32, !dbg !4753
  %or = or i32 %conv, 512, !dbg !4753
  %conv1 = trunc i32 %or to i16, !dbg !4753
  store i16 %conv1, i16* %flag, align 2, !dbg !4753
  %5 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4754
  ret %struct.Mask* %5, !dbg !4755
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Mask* @BKE_mask_copy_nolib(%struct.Mask* %mask) #0 !dbg !4756 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  %mask_new = alloca %struct.Mask*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !4759, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask_new, metadata !4761, metadata !DIExpression()), !dbg !4762
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !4763
  %1 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !4764
  %2 = bitcast %struct.Mask* %1 to i8*, !dbg !4764
  %call = call i8* %0(i8* %2), !dbg !4763
  %3 = bitcast i8* %call to %struct.Mask*, !dbg !4763
  store %struct.Mask* %3, %struct.Mask** %mask_new, align 8, !dbg !4765
  %4 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4766
  %adt = getelementptr inbounds %struct.Mask, %struct.Mask* %4, i32 0, i32 1, !dbg !4767
  store %struct.AnimData* null, %struct.AnimData** %adt, align 8, !dbg !4768
  %5 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4769
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %5, i32 0, i32 2, !dbg !4770
  call void @BLI_listbase_clear(%struct.ListBase* %masklayers), !dbg !4771
  %6 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4772
  %masklayers1 = getelementptr inbounds %struct.Mask, %struct.Mask* %6, i32 0, i32 2, !dbg !4773
  %7 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !4774
  %masklayers2 = getelementptr inbounds %struct.Mask, %struct.Mask* %7, i32 0, i32 2, !dbg !4775
  call void @BKE_mask_layer_copy_list(%struct.ListBase* %masklayers1, %struct.ListBase* %masklayers2), !dbg !4776
  %8 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4777
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %8, i32 0, i32 0, !dbg !4779
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !4780
  %9 = load i16, i16* %flag, align 2, !dbg !4780
  %conv = sext i16 %9 to i32, !dbg !4777
  %and = and i32 %conv, 512, !dbg !4781
  %tobool = icmp ne i32 %and, 0, !dbg !4781
  br i1 %tobool, label %if.end, label %if.then, !dbg !4782

if.then:                                          ; preds = %entry
  %10 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4783
  %id3 = getelementptr inbounds %struct.Mask, %struct.Mask* %10, i32 0, i32 0, !dbg !4785
  %flag4 = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 5, !dbg !4786
  %11 = load i16, i16* %flag4, align 2, !dbg !4787
  %conv5 = sext i16 %11 to i32, !dbg !4787
  %or = or i32 %conv5, 512, !dbg !4787
  %conv6 = trunc i32 %or to i16, !dbg !4787
  store i16 %conv6, i16* %flag4, align 2, !dbg !4787
  %12 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4788
  %id7 = getelementptr inbounds %struct.Mask, %struct.Mask* %12, i32 0, i32 0, !dbg !4789
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id7, i32 0, i32 6, !dbg !4790
  %13 = load i32, i32* %us, align 4, !dbg !4791
  %inc = add nsw i32 %13, 1, !dbg !4791
  store i32 %inc, i32* %us, align 4, !dbg !4791
  br label %if.end, !dbg !4792

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4793
  ret %struct.Mask* %14, !dbg !4794
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !4795 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !4800, metadata !DIExpression()), !dbg !4801
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !4802
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !4803
  store i8* null, i8** %last, align 8, !dbg !4804
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !4805
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !4806
  store i8* null, i8** %first, align 8, !dbg !4807
  ret void, !dbg !4808
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Mask* @BKE_mask_copy(%struct.Mask* %mask) #0 !dbg !4809 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  %mask_new = alloca %struct.Mask*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !4810, metadata !DIExpression()), !dbg !4811
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask_new, metadata !4812, metadata !DIExpression()), !dbg !4813
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !4814
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %0, i32 0, i32 0, !dbg !4815
  %call = call i8* @BKE_libblock_copy(%struct.ID* %id), !dbg !4816
  %1 = bitcast i8* %call to %struct.Mask*, !dbg !4816
  store %struct.Mask* %1, %struct.Mask** %mask_new, align 8, !dbg !4817
  %2 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4818
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %2, i32 0, i32 2, !dbg !4819
  call void @BLI_listbase_clear(%struct.ListBase* %masklayers), !dbg !4820
  %3 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4821
  %masklayers1 = getelementptr inbounds %struct.Mask, %struct.Mask* %3, i32 0, i32 2, !dbg !4822
  %4 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !4823
  %masklayers2 = getelementptr inbounds %struct.Mask, %struct.Mask* %4, i32 0, i32 2, !dbg !4824
  call void @BKE_mask_layer_copy_list(%struct.ListBase* %masklayers1, %struct.ListBase* %masklayers2), !dbg !4825
  %5 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4826
  %id3 = getelementptr inbounds %struct.Mask, %struct.Mask* %5, i32 0, i32 0, !dbg !4828
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 5, !dbg !4829
  %6 = load i16, i16* %flag, align 2, !dbg !4829
  %conv = sext i16 %6 to i32, !dbg !4826
  %and = and i32 %conv, 512, !dbg !4830
  %tobool = icmp ne i32 %and, 0, !dbg !4830
  br i1 %tobool, label %if.end, label %if.then, !dbg !4831

if.then:                                          ; preds = %entry
  %7 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4832
  %id4 = getelementptr inbounds %struct.Mask, %struct.Mask* %7, i32 0, i32 0, !dbg !4834
  %flag5 = getelementptr inbounds %struct.ID, %struct.ID* %id4, i32 0, i32 5, !dbg !4835
  %8 = load i16, i16* %flag5, align 2, !dbg !4836
  %conv6 = sext i16 %8 to i32, !dbg !4836
  %or = or i32 %conv6, 512, !dbg !4836
  %conv7 = trunc i32 %or to i16, !dbg !4836
  store i16 %conv7, i16* %flag5, align 2, !dbg !4836
  %9 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4837
  %id8 = getelementptr inbounds %struct.Mask, %struct.Mask* %9, i32 0, i32 0, !dbg !4838
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id8, i32 0, i32 6, !dbg !4839
  %10 = load i32, i32* %us, align 4, !dbg !4840
  %inc = add nsw i32 %10, 1, !dbg !4840
  store i32 %inc, i32* %us, align 4, !dbg !4840
  br label %if.end, !dbg !4841

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.Mask*, %struct.Mask** %mask_new, align 8, !dbg !4842
  ret %struct.Mask* %11, !dbg !4843
}

declare dso_local i8* @BKE_libblock_copy(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_point_free(%struct.MaskSplinePoint* %point) #0 !dbg !4844 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !4845, metadata !DIExpression()), !dbg !4846
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4847
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 3, !dbg !4849
  %1 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !4849
  %tobool = icmp ne %struct.MaskSplinePointUW* %1, null, !dbg !4847
  br i1 %tobool, label %if.then, label %if.end, !dbg !4850

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4851
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !4852
  %uw1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 3, !dbg !4853
  %4 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw1, align 8, !dbg !4853
  %5 = bitcast %struct.MaskSplinePointUW* %4 to i8*, !dbg !4852
  call void %2(i8* %5), !dbg !4851
  br label %if.end, !dbg !4851

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4854
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_spline_free_list(%struct.ListBase* %splines) #0 !dbg !4855 {
entry:
  %splines.addr = alloca %struct.ListBase*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %next_spline = alloca %struct.MaskSpline*, align 8
  store %struct.ListBase* %splines, %struct.ListBase** %splines.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %splines.addr, metadata !4858, metadata !DIExpression()), !dbg !4859
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !4860, metadata !DIExpression()), !dbg !4861
  %0 = load %struct.ListBase*, %struct.ListBase** %splines.addr, align 8, !dbg !4862
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !4863
  %1 = load i8*, i8** %first, align 8, !dbg !4863
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !4862
  store %struct.MaskSpline* %2, %struct.MaskSpline** %spline, align 8, !dbg !4861
  br label %while.cond, !dbg !4864

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4865
  %tobool = icmp ne %struct.MaskSpline* %3, null, !dbg !4864
  br i1 %tobool, label %while.body, label %while.end, !dbg !4864

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %next_spline, metadata !4866, metadata !DIExpression()), !dbg !4868
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4869
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %4, i32 0, i32 0, !dbg !4870
  %5 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !4870
  store %struct.MaskSpline* %5, %struct.MaskSpline** %next_spline, align 8, !dbg !4868
  %6 = load %struct.ListBase*, %struct.ListBase** %splines.addr, align 8, !dbg !4871
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4872
  %8 = bitcast %struct.MaskSpline* %7 to i8*, !dbg !4872
  call void @BLI_remlink(%struct.ListBase* %6, i8* %8), !dbg !4873
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4874
  call void @BKE_mask_spline_free(%struct.MaskSpline* %9), !dbg !4875
  %10 = load %struct.MaskSpline*, %struct.MaskSpline** %next_spline, align 8, !dbg !4876
  store %struct.MaskSpline* %10, %struct.MaskSpline** %spline, align 8, !dbg !4877
  br label %while.cond, !dbg !4864, !llvm.loop !4878

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4880
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MaskSplinePoint* @mask_spline_points_copy(%struct.MaskSplinePoint* %points, i32 %tot_point) #0 !dbg !4881 {
entry:
  %points.addr = alloca %struct.MaskSplinePoint*, align 8
  %tot_point.addr = alloca i32, align 4
  %npoints = alloca %struct.MaskSplinePoint*, align 8
  %i = alloca i32, align 4
  %point = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSplinePoint* %points, %struct.MaskSplinePoint** %points.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %points.addr, metadata !4884, metadata !DIExpression()), !dbg !4885
  store i32 %tot_point, i32* %tot_point.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot_point.addr, metadata !4886, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %npoints, metadata !4888, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4890, metadata !DIExpression()), !dbg !4891
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !4892
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points.addr, align 8, !dbg !4893
  %2 = bitcast %struct.MaskSplinePoint* %1 to i8*, !dbg !4893
  %call = call i8* %0(i8* %2), !dbg !4892
  %3 = bitcast i8* %call to %struct.MaskSplinePoint*, !dbg !4892
  store %struct.MaskSplinePoint* %3, %struct.MaskSplinePoint** %npoints, align 8, !dbg !4894
  store i32 0, i32* %i, align 4, !dbg !4895
  br label %for.cond, !dbg !4897

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !4898
  %5 = load i32, i32* %tot_point.addr, align 4, !dbg !4900
  %cmp = icmp slt i32 %4, %5, !dbg !4901
  br i1 %cmp, label %for.body, label %for.end, !dbg !4902

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !4903, metadata !DIExpression()), !dbg !4905
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %npoints, align 8, !dbg !4906
  %7 = load i32, i32* %i, align 4, !dbg !4907
  %idxprom = sext i32 %7 to i64, !dbg !4906
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i64 %idxprom, !dbg !4906
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !4905
  %8 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !4908
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %8, i32 0, i32 3, !dbg !4910
  %9 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !4910
  %tobool = icmp ne %struct.MaskSplinePointUW* %9, null, !dbg !4908
  br i1 %tobool, label %if.then, label %if.end, !dbg !4911

if.then:                                          ; preds = %for.body
  %10 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !4912
  %11 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !4913
  %uw1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %11, i32 0, i32 3, !dbg !4914
  %12 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw1, align 8, !dbg !4914
  %13 = bitcast %struct.MaskSplinePointUW* %12 to i8*, !dbg !4913
  %call2 = call i8* %10(i8* %13), !dbg !4912
  %14 = bitcast i8* %call2 to %struct.MaskSplinePointUW*, !dbg !4912
  %15 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !4915
  %uw3 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %15, i32 0, i32 3, !dbg !4916
  store %struct.MaskSplinePointUW* %14, %struct.MaskSplinePointUW** %uw3, align 8, !dbg !4917
  br label %if.end, !dbg !4915

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4918

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !4919
  %inc = add nsw i32 %16, 1, !dbg !4919
  store i32 %inc, i32* %i, align 4, !dbg !4919
  br label %for.cond, !dbg !4920, !llvm.loop !4921

for.end:                                          ; preds = %for.cond
  %17 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %npoints, align 8, !dbg !4923
  ret %struct.MaskSplinePoint* %17, !dbg !4924
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskLayerShape* @BKE_mask_layer_shape_alloc(%struct.MaskLayer* %masklay, i32 %frame) #0 !dbg !4925 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %frame.addr = alloca i32, align 4
  %masklay_shape = alloca %struct.MaskLayerShape*, align 8
  %tot_vert = alloca i32, align 4
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !4928, metadata !DIExpression()), !dbg !4929
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !4930, metadata !DIExpression()), !dbg !4931
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape, metadata !4932, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.declare(metadata i32* %tot_vert, metadata !4934, metadata !DIExpression()), !dbg !4935
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !4936
  %call = call i32 @BKE_mask_layer_shape_totvert(%struct.MaskLayer* %0), !dbg !4937
  store i32 %call, i32* %tot_vert, align 4, !dbg !4935
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4938
  %call1 = call i8* %1(i64 40, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.BKE_mask_layer_shape_alloc, i64 0, i64 0)), !dbg !4938
  %2 = bitcast i8* %call1 to %struct.MaskLayerShape*, !dbg !4938
  store %struct.MaskLayerShape* %2, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !4939
  %3 = load i32, i32* %frame.addr, align 4, !dbg !4940
  %4 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !4941
  %frame2 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %4, i32 0, i32 4, !dbg !4942
  store i32 %3, i32* %frame2, align 4, !dbg !4943
  %5 = load i32, i32* %tot_vert, align 4, !dbg !4944
  %6 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !4945
  %tot_vert3 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %6, i32 0, i32 3, !dbg !4946
  store i32 %5, i32* %tot_vert3, align 8, !dbg !4947
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4948
  %8 = load i32, i32* %tot_vert, align 4, !dbg !4949
  %conv = sext i32 %8 to i64, !dbg !4949
  %mul = mul i64 %conv, 4, !dbg !4950
  %mul4 = mul i64 %mul, 8, !dbg !4951
  %call5 = call i8* %7(i64 %mul4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.BKE_mask_layer_shape_alloc, i64 0, i64 0)), !dbg !4948
  %9 = bitcast i8* %call5 to float*, !dbg !4948
  %10 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !4952
  %data = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %10, i32 0, i32 2, !dbg !4953
  store float* %9, float** %data, align 8, !dbg !4954
  %11 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !4955
  ret %struct.MaskLayerShape* %11, !dbg !4956
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_mask_layer_shape_totvert(%struct.MaskLayer* %masklay) #0 !dbg !4957 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %tot = alloca i32, align 4
  %spline = alloca %struct.MaskSpline*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !4960, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !4962, metadata !DIExpression()), !dbg !4963
  store i32 0, i32* %tot, align 4, !dbg !4963
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !4964, metadata !DIExpression()), !dbg !4965
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !4966
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %0, i32 0, i32 3, !dbg !4968
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !4969
  %1 = load i8*, i8** %first, align 8, !dbg !4969
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !4966
  store %struct.MaskSpline* %2, %struct.MaskSpline** %spline, align 8, !dbg !4970
  br label %for.cond, !dbg !4971

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4972
  %tobool = icmp ne %struct.MaskSpline* %3, null, !dbg !4974
  br i1 %tobool, label %for.body, label %for.end, !dbg !4974

for.body:                                         ; preds = %for.cond
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4975
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %4, i32 0, i32 5, !dbg !4977
  %5 = load i32, i32* %tot_point, align 4, !dbg !4977
  %6 = load i32, i32* %tot, align 4, !dbg !4978
  %add = add nsw i32 %6, %5, !dbg !4978
  store i32 %add, i32* %tot, align 4, !dbg !4978
  br label %for.inc, !dbg !4979

for.inc:                                          ; preds = %for.body
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4980
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %7, i32 0, i32 0, !dbg !4981
  %8 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !4981
  store %struct.MaskSpline* %8, %struct.MaskSpline** %spline, align 8, !dbg !4982
  br label %for.cond, !dbg !4983, !llvm.loop !4984

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %tot, align 4, !dbg !4986
  ret i32 %9, !dbg !4987
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_shape_free(%struct.MaskLayerShape* %masklay_shape) #0 !dbg !4988 {
entry:
  %masklay_shape.addr = alloca %struct.MaskLayerShape*, align 8
  store %struct.MaskLayerShape* %masklay_shape, %struct.MaskLayerShape** %masklay_shape.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape.addr, metadata !4991, metadata !DIExpression()), !dbg !4992
  %0 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !4993
  %data = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %0, i32 0, i32 2, !dbg !4995
  %1 = load float*, float** %data, align 8, !dbg !4995
  %tobool = icmp ne float* %1, null, !dbg !4993
  br i1 %tobool, label %if.then, label %if.end, !dbg !4996

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4997
  %3 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !4999
  %data1 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %3, i32 0, i32 2, !dbg !5000
  %4 = load float*, float** %data1, align 8, !dbg !5000
  %5 = bitcast float* %4 to i8*, !dbg !4999
  call void %2(i8* %5), !dbg !4997
  br label %if.end, !dbg !5001

if.end:                                           ; preds = %if.then, %entry
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5002
  %7 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !5003
  %8 = bitcast %struct.MaskLayerShape* %7 to i8*, !dbg !5003
  call void %6(i8* %8), !dbg !5002
  ret void, !dbg !5004
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_free_shapes(%struct.MaskLayer* %masklay) #0 !dbg !5005 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %masklay_shape = alloca %struct.MaskLayerShape*, align 8
  %next_masklay_shape = alloca %struct.MaskLayerShape*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !5006, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape, metadata !5008, metadata !DIExpression()), !dbg !5009
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !5010
  %splines_shapes = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %0, i32 0, i32 4, !dbg !5011
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes, i32 0, i32 0, !dbg !5012
  %1 = load i8*, i8** %first, align 8, !dbg !5012
  %2 = bitcast i8* %1 to %struct.MaskLayerShape*, !dbg !5010
  store %struct.MaskLayerShape* %2, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !5013
  br label %while.cond, !dbg !5014

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !5015
  %tobool = icmp ne %struct.MaskLayerShape* %3, null, !dbg !5014
  br i1 %tobool, label %while.body, label %while.end, !dbg !5014

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %next_masklay_shape, metadata !5016, metadata !DIExpression()), !dbg !5018
  %4 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !5019
  %next = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %4, i32 0, i32 0, !dbg !5020
  %5 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %next, align 8, !dbg !5020
  store %struct.MaskLayerShape* %5, %struct.MaskLayerShape** %next_masklay_shape, align 8, !dbg !5018
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !5021
  %splines_shapes1 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 4, !dbg !5022
  %7 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !5023
  %8 = bitcast %struct.MaskLayerShape* %7 to i8*, !dbg !5023
  call void @BLI_remlink(%struct.ListBase* %splines_shapes1, i8* %8), !dbg !5024
  %9 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !5025
  call void @BKE_mask_layer_shape_free(%struct.MaskLayerShape* %9), !dbg !5026
  %10 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %next_masklay_shape, align 8, !dbg !5027
  store %struct.MaskLayerShape* %10, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !5028
  br label %while.cond, !dbg !5014, !llvm.loop !5029

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5031
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_free_list(%struct.ListBase* %masklayers) #0 !dbg !5032 {
entry:
  %masklayers.addr = alloca %struct.ListBase*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %masklay_next = alloca %struct.MaskLayer*, align 8
  store %struct.ListBase* %masklayers, %struct.ListBase** %masklayers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %masklayers.addr, metadata !5033, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5035, metadata !DIExpression()), !dbg !5036
  %0 = load %struct.ListBase*, %struct.ListBase** %masklayers.addr, align 8, !dbg !5037
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5038
  %1 = load i8*, i8** %first, align 8, !dbg !5038
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !5037
  store %struct.MaskLayer* %2, %struct.MaskLayer** %masklay, align 8, !dbg !5036
  br label %while.cond, !dbg !5039

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5040
  %tobool = icmp ne %struct.MaskLayer* %3, null, !dbg !5039
  br i1 %tobool, label %while.body, label %while.end, !dbg !5039

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay_next, metadata !5041, metadata !DIExpression()), !dbg !5043
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5044
  %next = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 0, !dbg !5045
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %next, align 8, !dbg !5045
  store %struct.MaskLayer* %5, %struct.MaskLayer** %masklay_next, align 8, !dbg !5043
  %6 = load %struct.ListBase*, %struct.ListBase** %masklayers.addr, align 8, !dbg !5046
  %7 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5047
  %8 = bitcast %struct.MaskLayer* %7 to i8*, !dbg !5047
  call void @BLI_remlink(%struct.ListBase* %6, i8* %8), !dbg !5048
  %9 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5049
  call void @BKE_mask_layer_free(%struct.MaskLayer* %9), !dbg !5050
  %10 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay_next, align 8, !dbg !5051
  store %struct.MaskLayer* %10, %struct.MaskLayer** %masklay, align 8, !dbg !5052
  br label %while.cond, !dbg !5039, !llvm.loop !5053

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5055
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_free_nolib(%struct.Mask* %mask) #0 !dbg !5056 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !5059, metadata !DIExpression()), !dbg !5060
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5061
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %0, i32 0, i32 2, !dbg !5062
  call void @BKE_mask_layer_free_list(%struct.ListBase* %masklayers), !dbg !5063
  ret void, !dbg !5064
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_free(%struct.Main* %bmain, %struct.Mask* %mask) #0 !dbg !5065 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %mask.addr = alloca %struct.Mask*, align 8
  %scr = alloca %struct.bScreen*, align 8
  %area = alloca %struct.ScrArea*, align 8
  %sl = alloca %struct.SpaceLink*, align 8
  %scene = alloca %struct.Scene*, align 8
  %sc = alloca %struct.SpaceClip*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %seq = alloca %struct.Sequence*, align 8
  %iter_macro = alloca %struct.SeqIterator, align 8
  %_nstore = alloca %struct.NodeTreeIterStore, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %id50 = alloca %struct.ID*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !5068, metadata !DIExpression()), !dbg !5069
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !5070, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.declare(metadata %struct.bScreen** %scr, metadata !5072, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %area, metadata !5101, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.declare(metadata %struct.SpaceLink** %sl, metadata !5149, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5151, metadata !DIExpression()), !dbg !5154
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !5155
  %screen = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 26, !dbg !5157
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %screen, i32 0, i32 0, !dbg !5158
  %1 = load i8*, i8** %first, align 8, !dbg !5158
  %2 = bitcast i8* %1 to %struct.bScreen*, !dbg !5155
  store %struct.bScreen* %2, %struct.bScreen** %scr, align 8, !dbg !5159
  br label %for.cond, !dbg !5160

for.cond:                                         ; preds = %for.inc23, %entry
  %3 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !5161
  %tobool = icmp ne %struct.bScreen* %3, null, !dbg !5163
  br i1 %tobool, label %for.body, label %for.end25, !dbg !5163

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !5164
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %4, i32 0, i32 3, !dbg !5167
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !5168
  %5 = load i8*, i8** %first1, align 8, !dbg !5168
  %6 = bitcast i8* %5 to %struct.ScrArea*, !dbg !5164
  store %struct.ScrArea* %6, %struct.ScrArea** %area, align 8, !dbg !5169
  br label %for.cond2, !dbg !5170

for.cond2:                                        ; preds = %for.inc20, %for.body
  %7 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !5171
  %tobool3 = icmp ne %struct.ScrArea* %7, null, !dbg !5173
  br i1 %tobool3, label %for.body4, label %for.end22, !dbg !5173

for.body4:                                        ; preds = %for.cond2
  %8 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !5174
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %8, i32 0, i32 19, !dbg !5177
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !5178
  %9 = load i8*, i8** %first5, align 8, !dbg !5178
  %10 = bitcast i8* %9 to %struct.SpaceLink*, !dbg !5174
  store %struct.SpaceLink* %10, %struct.SpaceLink** %sl, align 8, !dbg !5179
  br label %for.cond6, !dbg !5180

for.cond6:                                        ; preds = %for.inc, %for.body4
  %11 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5181
  %tobool7 = icmp ne %struct.SpaceLink* %11, null, !dbg !5183
  br i1 %tobool7, label %for.body8, label %for.end, !dbg !5183

for.body8:                                        ; preds = %for.cond6
  %12 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5184
  %spacetype = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %12, i32 0, i32 3, !dbg !5186
  %13 = load i32, i32* %spacetype, align 8, !dbg !5186
  switch i32 %13, label %sw.epilog [
    i32 20, label %sw.bb
    i32 6, label %sw.bb12
  ], !dbg !5187

sw.bb:                                            ; preds = %for.body8
  call void @llvm.dbg.declare(metadata %struct.SpaceClip** %sc, metadata !5188, metadata !DIExpression()), !dbg !5191
  %14 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5192
  %15 = bitcast %struct.SpaceLink* %14 to %struct.SpaceClip*, !dbg !5193
  store %struct.SpaceClip* %15, %struct.SpaceClip** %sc, align 8, !dbg !5191
  %16 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !5194
  %mask_info = getelementptr inbounds %struct.SpaceClip, %struct.SpaceClip* %16, i32 0, i32 28, !dbg !5196
  %mask9 = getelementptr inbounds %struct.MaskSpaceInfo, %struct.MaskSpaceInfo* %mask_info, i32 0, i32 0, !dbg !5197
  %17 = load %struct.Mask*, %struct.Mask** %mask9, align 8, !dbg !5197
  %18 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5198
  %cmp = icmp eq %struct.Mask* %17, %18, !dbg !5199
  br i1 %cmp, label %if.then, label %if.end, !dbg !5200

if.then:                                          ; preds = %sw.bb
  %19 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !5201
  %mask_info10 = getelementptr inbounds %struct.SpaceClip, %struct.SpaceClip* %19, i32 0, i32 28, !dbg !5203
  %mask11 = getelementptr inbounds %struct.MaskSpaceInfo, %struct.MaskSpaceInfo* %mask_info10, i32 0, i32 0, !dbg !5204
  store %struct.Mask* null, %struct.Mask** %mask11, align 8, !dbg !5205
  br label %if.end, !dbg !5206

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !5207

sw.bb12:                                          ; preds = %for.body8
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !5208, metadata !DIExpression()), !dbg !5210
  %20 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5211
  %21 = bitcast %struct.SpaceLink* %20 to %struct.SpaceImage*, !dbg !5212
  store %struct.SpaceImage* %21, %struct.SpaceImage** %sima, align 8, !dbg !5210
  %22 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !5213
  %mask_info13 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %22, i32 0, i32 26, !dbg !5215
  %mask14 = getelementptr inbounds %struct.MaskSpaceInfo, %struct.MaskSpaceInfo* %mask_info13, i32 0, i32 0, !dbg !5216
  %23 = load %struct.Mask*, %struct.Mask** %mask14, align 8, !dbg !5216
  %24 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5217
  %cmp15 = icmp eq %struct.Mask* %23, %24, !dbg !5218
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !5219

if.then16:                                        ; preds = %sw.bb12
  %25 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !5220
  %mask_info17 = getelementptr inbounds %struct.SpaceImage, %struct.SpaceImage* %25, i32 0, i32 26, !dbg !5222
  %mask18 = getelementptr inbounds %struct.MaskSpaceInfo, %struct.MaskSpaceInfo* %mask_info17, i32 0, i32 0, !dbg !5223
  store %struct.Mask* null, %struct.Mask** %mask18, align 8, !dbg !5224
  br label %if.end19, !dbg !5225

if.end19:                                         ; preds = %if.then16, %sw.bb12
  br label %sw.epilog, !dbg !5226

sw.epilog:                                        ; preds = %for.body8, %if.end19, %if.end
  br label %for.inc, !dbg !5227

for.inc:                                          ; preds = %sw.epilog
  %26 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !5228
  %next = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %26, i32 0, i32 0, !dbg !5229
  %27 = load %struct.SpaceLink*, %struct.SpaceLink** %next, align 8, !dbg !5229
  store %struct.SpaceLink* %27, %struct.SpaceLink** %sl, align 8, !dbg !5230
  br label %for.cond6, !dbg !5231, !llvm.loop !5232

for.end:                                          ; preds = %for.cond6
  br label %for.inc20, !dbg !5234

for.inc20:                                        ; preds = %for.end
  %28 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !5235
  %next21 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %28, i32 0, i32 0, !dbg !5236
  %29 = load %struct.ScrArea*, %struct.ScrArea** %next21, align 8, !dbg !5236
  store %struct.ScrArea* %29, %struct.ScrArea** %area, align 8, !dbg !5237
  br label %for.cond2, !dbg !5238, !llvm.loop !5239

for.end22:                                        ; preds = %for.cond2
  br label %for.inc23, !dbg !5241

for.inc23:                                        ; preds = %for.end22
  %30 = load %struct.bScreen*, %struct.bScreen** %scr, align 8, !dbg !5242
  %id = getelementptr inbounds %struct.bScreen, %struct.bScreen* %30, i32 0, i32 0, !dbg !5243
  %next24 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !5244
  %31 = load i8*, i8** %next24, align 8, !dbg !5244
  %32 = bitcast i8* %31 to %struct.bScreen*, !dbg !5242
  store %struct.bScreen* %32, %struct.bScreen** %scr, align 8, !dbg !5245
  br label %for.cond, !dbg !5246, !llvm.loop !5247

for.end25:                                        ; preds = %for.cond
  %33 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !5249
  %scene26 = getelementptr inbounds %struct.Main, %struct.Main* %33, i32 0, i32 11, !dbg !5251
  %first27 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene26, i32 0, i32 0, !dbg !5252
  %34 = load i8*, i8** %first27, align 8, !dbg !5252
  %35 = bitcast i8* %34 to %struct.Scene*, !dbg !5249
  store %struct.Scene* %35, %struct.Scene** %scene, align 8, !dbg !5253
  br label %for.cond28, !dbg !5254

for.cond28:                                       ; preds = %for.inc46, %for.end25
  %36 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5255
  %tobool29 = icmp ne %struct.Scene* %36, null, !dbg !5257
  br i1 %tobool29, label %for.body30, label %for.end49, !dbg !5257

for.body30:                                       ; preds = %for.cond28
  %37 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5258
  %ed = getelementptr inbounds %struct.Scene, %struct.Scene* %37, i32 0, i32 19, !dbg !5261
  %38 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !5261
  %tobool31 = icmp ne %struct.Editing* %38, null, !dbg !5258
  br i1 %tobool31, label %if.then32, label %if.end45, !dbg !5262

if.then32:                                        ; preds = %for.body30
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq, metadata !5263, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.declare(metadata %struct.SeqIterator* %iter_macro, metadata !5266, metadata !DIExpression()), !dbg !5278
  %39 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5279
  %ed33 = getelementptr inbounds %struct.Scene, %struct.Scene* %39, i32 0, i32 19, !dbg !5279
  %40 = load %struct.Editing*, %struct.Editing** %ed33, align 8, !dbg !5279
  call void @BKE_sequence_iterator_begin(%struct.Editing* %40, %struct.SeqIterator* %iter_macro, i8 zeroext 0), !dbg !5279
  br label %for.cond34, !dbg !5279

for.cond34:                                       ; preds = %for.inc43, %if.then32
  %valid = getelementptr inbounds %struct.SeqIterator, %struct.SeqIterator* %iter_macro, i32 0, i32 4, !dbg !5281
  %41 = load i32, i32* %valid, align 8, !dbg !5281
  %tobool35 = icmp ne i32 %41, 0, !dbg !5279
  br i1 %tobool35, label %for.body36, label %for.end44, !dbg !5279

for.body36:                                       ; preds = %for.cond34
  %seq37 = getelementptr inbounds %struct.SeqIterator, %struct.SeqIterator* %iter_macro, i32 0, i32 3, !dbg !5283
  %42 = load %struct.Sequence*, %struct.Sequence** %seq37, align 8, !dbg !5283
  store %struct.Sequence* %42, %struct.Sequence** %seq, align 8, !dbg !5283
  %43 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !5285
  %mask38 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %43, i32 0, i32 29, !dbg !5288
  %44 = load %struct.Mask*, %struct.Mask** %mask38, align 8, !dbg !5288
  %45 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5289
  %cmp39 = icmp eq %struct.Mask* %44, %45, !dbg !5290
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !5291

if.then40:                                        ; preds = %for.body36
  %46 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !5292
  %mask41 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %46, i32 0, i32 29, !dbg !5294
  store %struct.Mask* null, %struct.Mask** %mask41, align 8, !dbg !5295
  br label %if.end42, !dbg !5296

if.end42:                                         ; preds = %if.then40, %for.body36
  br label %for.inc43, !dbg !5297

for.inc43:                                        ; preds = %if.end42
  call void @BKE_sequence_iterator_next(%struct.SeqIterator* %iter_macro), !dbg !5281
  br label %for.cond34, !dbg !5281, !llvm.loop !5298

for.end44:                                        ; preds = %for.cond34
  call void @BKE_sequence_iterator_end(%struct.SeqIterator* %iter_macro), !dbg !5300
  br label %if.end45, !dbg !5301

if.end45:                                         ; preds = %for.end44, %for.body30
  br label %for.inc46, !dbg !5302

for.inc46:                                        ; preds = %if.end45
  %47 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5303
  %id47 = getelementptr inbounds %struct.Scene, %struct.Scene* %47, i32 0, i32 0, !dbg !5304
  %next48 = getelementptr inbounds %struct.ID, %struct.ID* %id47, i32 0, i32 0, !dbg !5305
  %48 = load i8*, i8** %next48, align 8, !dbg !5305
  %49 = bitcast i8* %48 to %struct.Scene*, !dbg !5303
  store %struct.Scene* %49, %struct.Scene** %scene, align 8, !dbg !5306
  br label %for.cond28, !dbg !5307, !llvm.loop !5308

for.end49:                                        ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore* %_nstore, metadata !5310, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !5636, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.declare(metadata %struct.ID** %id50, metadata !5637, metadata !DIExpression()), !dbg !5635
  %50 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !5635
  call void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore* %_nstore, %struct.Main* %50), !dbg !5635
  br label %while.cond, !dbg !5635

while.cond:                                       ; preds = %if.end55, %for.end49
  %call = call zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore* %_nstore, %struct.bNodeTree** %ntree, %struct.ID** %id50), !dbg !5635
  %conv = zext i8 %call to i32, !dbg !5635
  %cmp51 = icmp eq i32 %conv, 1, !dbg !5635
  br i1 %cmp51, label %while.body, label %while.end, !dbg !5635

while.body:                                       ; preds = %while.cond
  %51 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !5638
  %tobool53 = icmp ne %struct.bNodeTree* %51, null, !dbg !5638
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !5641

if.then54:                                        ; preds = %while.body
  %52 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5642
  %53 = bitcast %struct.Mask* %52 to %struct.ID*, !dbg !5645
  %54 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !5646
  call void @BKE_node_tree_unlink_id(%struct.ID* %53, %struct.bNodeTree* %54), !dbg !5647
  br label %if.end55, !dbg !5648

if.end55:                                         ; preds = %if.then54, %while.body
  br label %while.cond, !dbg !5635, !llvm.loop !5649

while.end:                                        ; preds = %while.cond
  %55 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5651
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %55, i32 0, i32 2, !dbg !5652
  call void @BKE_mask_layer_free_list(%struct.ListBase* %masklayers), !dbg !5653
  ret void, !dbg !5654
}

declare dso_local void @BKE_sequence_iterator_begin(%struct.Editing*, %struct.SeqIterator*, i8 zeroext) #2

declare dso_local void @BKE_sequence_iterator_next(%struct.SeqIterator*) #2

declare dso_local void @BKE_sequence_iterator_end(%struct.SeqIterator*) #2

declare dso_local void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore*, %struct.Main*) #2

declare dso_local zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore*, %struct.bNodeTree**, %struct.ID**) #2

declare dso_local void @BKE_node_tree_unlink_id(%struct.ID*, %struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_coord_from_frame(float* %r_co, float* %co, float* %frame_size) #0 !dbg !5655 {
entry:
  %r_co.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %frame_size.addr = alloca float*, align 8
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !5656, metadata !DIExpression()), !dbg !5657
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5658, metadata !DIExpression()), !dbg !5659
  store float* %frame_size, float** %frame_size.addr, align 8
  call void @llvm.dbg.declare(metadata float** %frame_size.addr, metadata !5660, metadata !DIExpression()), !dbg !5661
  %0 = load float*, float** %frame_size.addr, align 8, !dbg !5662
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5662
  %1 = load float, float* %arrayidx, align 4, !dbg !5662
  %2 = load float*, float** %frame_size.addr, align 8, !dbg !5664
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !5664
  %3 = load float, float* %arrayidx1, align 4, !dbg !5664
  %cmp = fcmp oeq float %1, %3, !dbg !5665
  br i1 %cmp, label %if.then, label %if.else, !dbg !5666

if.then:                                          ; preds = %entry
  %4 = load float*, float** %co.addr, align 8, !dbg !5667
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5667
  %5 = load float, float* %arrayidx2, align 4, !dbg !5667
  %6 = load float*, float** %r_co.addr, align 8, !dbg !5669
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !5669
  store float %5, float* %arrayidx3, align 4, !dbg !5670
  %7 = load float*, float** %co.addr, align 8, !dbg !5671
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5671
  %8 = load float, float* %arrayidx4, align 4, !dbg !5671
  %9 = load float*, float** %r_co.addr, align 8, !dbg !5672
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 1, !dbg !5672
  store float %8, float* %arrayidx5, align 4, !dbg !5673
  br label %if.end27, !dbg !5674

if.else:                                          ; preds = %entry
  %10 = load float*, float** %frame_size.addr, align 8, !dbg !5675
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 0, !dbg !5675
  %11 = load float, float* %arrayidx6, align 4, !dbg !5675
  %12 = load float*, float** %frame_size.addr, align 8, !dbg !5677
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 1, !dbg !5677
  %13 = load float, float* %arrayidx7, align 4, !dbg !5677
  %cmp8 = fcmp olt float %11, %13, !dbg !5678
  br i1 %cmp8, label %if.then9, label %if.else16, !dbg !5679

if.then9:                                         ; preds = %if.else
  %14 = load float*, float** %co.addr, align 8, !dbg !5680
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 0, !dbg !5680
  %15 = load float, float* %arrayidx10, align 4, !dbg !5680
  %sub = fsub float %15, 5.000000e-01, !dbg !5682
  %16 = load float*, float** %frame_size.addr, align 8, !dbg !5683
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 0, !dbg !5683
  %17 = load float, float* %arrayidx11, align 4, !dbg !5683
  %18 = load float*, float** %frame_size.addr, align 8, !dbg !5684
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 1, !dbg !5684
  %19 = load float, float* %arrayidx12, align 4, !dbg !5684
  %div = fdiv float %17, %19, !dbg !5685
  %mul = fmul float %sub, %div, !dbg !5686
  %add = fadd float %mul, 5.000000e-01, !dbg !5687
  %20 = load float*, float** %r_co.addr, align 8, !dbg !5688
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 0, !dbg !5688
  store float %add, float* %arrayidx13, align 4, !dbg !5689
  %21 = load float*, float** %co.addr, align 8, !dbg !5690
  %arrayidx14 = getelementptr inbounds float, float* %21, i64 1, !dbg !5690
  %22 = load float, float* %arrayidx14, align 4, !dbg !5690
  %23 = load float*, float** %r_co.addr, align 8, !dbg !5691
  %arrayidx15 = getelementptr inbounds float, float* %23, i64 1, !dbg !5691
  store float %22, float* %arrayidx15, align 4, !dbg !5692
  br label %if.end, !dbg !5693

if.else16:                                        ; preds = %if.else
  %24 = load float*, float** %co.addr, align 8, !dbg !5694
  %arrayidx17 = getelementptr inbounds float, float* %24, i64 0, !dbg !5694
  %25 = load float, float* %arrayidx17, align 4, !dbg !5694
  %26 = load float*, float** %r_co.addr, align 8, !dbg !5696
  %arrayidx18 = getelementptr inbounds float, float* %26, i64 0, !dbg !5696
  store float %25, float* %arrayidx18, align 4, !dbg !5697
  %27 = load float*, float** %co.addr, align 8, !dbg !5698
  %arrayidx19 = getelementptr inbounds float, float* %27, i64 1, !dbg !5698
  %28 = load float, float* %arrayidx19, align 4, !dbg !5698
  %sub20 = fsub float %28, 5.000000e-01, !dbg !5699
  %29 = load float*, float** %frame_size.addr, align 8, !dbg !5700
  %arrayidx21 = getelementptr inbounds float, float* %29, i64 1, !dbg !5700
  %30 = load float, float* %arrayidx21, align 4, !dbg !5700
  %31 = load float*, float** %frame_size.addr, align 8, !dbg !5701
  %arrayidx22 = getelementptr inbounds float, float* %31, i64 0, !dbg !5701
  %32 = load float, float* %arrayidx22, align 4, !dbg !5701
  %div23 = fdiv float %30, %32, !dbg !5702
  %mul24 = fmul float %sub20, %div23, !dbg !5703
  %add25 = fadd float %mul24, 5.000000e-01, !dbg !5704
  %33 = load float*, float** %r_co.addr, align 8, !dbg !5705
  %arrayidx26 = getelementptr inbounds float, float* %33, i64 1, !dbg !5705
  store float %add25, float* %arrayidx26, align 4, !dbg !5706
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then9
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then
  ret void, !dbg !5707
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_coord_from_movieclip(%struct.MovieClip* %clip, %struct.MovieClipUser* %user, float* %r_co, float* %co) #0 !dbg !5708 {
entry:
  %clip.addr = alloca %struct.MovieClip*, align 8
  %user.addr = alloca %struct.MovieClipUser*, align 8
  %r_co.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %aspx = alloca float, align 4
  %aspy = alloca float, align 4
  %frame_size = alloca [2 x float], align 4
  store %struct.MovieClip* %clip, %struct.MovieClip** %clip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip.addr, metadata !5713, metadata !DIExpression()), !dbg !5714
  store %struct.MovieClipUser* %user, %struct.MovieClipUser** %user.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MovieClipUser** %user.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !5717, metadata !DIExpression()), !dbg !5718
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5719, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.declare(metadata float* %aspx, metadata !5721, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.declare(metadata float* %aspy, metadata !5723, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.declare(metadata [2 x float]* %frame_size, metadata !5725, metadata !DIExpression()), !dbg !5726
  %0 = load %struct.MovieClip*, %struct.MovieClip** %clip.addr, align 8, !dbg !5727
  %1 = load %struct.MovieClipUser*, %struct.MovieClipUser** %user.addr, align 8, !dbg !5728
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !5729
  call void @BKE_movieclip_get_size_fl(%struct.MovieClip* %0, %struct.MovieClipUser* %1, float* %arraydecay), !dbg !5730
  %2 = load %struct.MovieClip*, %struct.MovieClip** %clip.addr, align 8, !dbg !5731
  call void @BKE_movieclip_get_aspect(%struct.MovieClip* %2, float* %aspx, float* %aspy), !dbg !5732
  %3 = load float, float* %aspy, align 4, !dbg !5733
  %4 = load float, float* %aspx, align 4, !dbg !5734
  %div = fdiv float %3, %4, !dbg !5735
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 1, !dbg !5736
  %5 = load float, float* %arrayidx, align 4, !dbg !5737
  %mul = fmul float %5, %div, !dbg !5737
  store float %mul, float* %arrayidx, align 4, !dbg !5737
  %6 = load float*, float** %r_co.addr, align 8, !dbg !5738
  %7 = load float*, float** %co.addr, align 8, !dbg !5739
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !5740
  call void @BKE_mask_coord_from_frame(float* %6, float* %7, float* %arraydecay1), !dbg !5741
  ret void, !dbg !5742
}

declare dso_local void @BKE_movieclip_get_size_fl(%struct.MovieClip*, %struct.MovieClipUser*, float*) #2

declare dso_local void @BKE_movieclip_get_aspect(%struct.MovieClip*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_coord_from_image(%struct.Image* %image, %struct.ImageUser* %iuser, float* %r_co, float* %co) #0 !dbg !5743 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %r_co.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %aspx = alloca float, align 4
  %aspy = alloca float, align 4
  %frame_size = alloca [2 x float], align 4
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !5750, metadata !DIExpression()), !dbg !5751
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !5752, metadata !DIExpression()), !dbg !5753
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !5754, metadata !DIExpression()), !dbg !5755
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5756, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.declare(metadata float* %aspx, metadata !5758, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.declare(metadata float* %aspy, metadata !5760, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.declare(metadata [2 x float]* %frame_size, metadata !5762, metadata !DIExpression()), !dbg !5763
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !5764
  %1 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !5765
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !5766
  call void @BKE_image_get_size_fl(%struct.Image* %0, %struct.ImageUser* %1, float* %arraydecay), !dbg !5767
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !5768
  call void @BKE_image_get_aspect(%struct.Image* %2, float* %aspx, float* %aspy), !dbg !5769
  %3 = load float, float* %aspy, align 4, !dbg !5770
  %4 = load float, float* %aspx, align 4, !dbg !5771
  %div = fdiv float %3, %4, !dbg !5772
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 1, !dbg !5773
  %5 = load float, float* %arrayidx, align 4, !dbg !5774
  %mul = fmul float %5, %div, !dbg !5774
  store float %mul, float* %arrayidx, align 4, !dbg !5774
  %6 = load float*, float** %r_co.addr, align 8, !dbg !5775
  %7 = load float*, float** %co.addr, align 8, !dbg !5776
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !5777
  call void @BKE_mask_coord_from_frame(float* %6, float* %7, float* %arraydecay1), !dbg !5778
  ret void, !dbg !5779
}

declare dso_local void @BKE_image_get_size_fl(%struct.Image*, %struct.ImageUser*, float*) #2

declare dso_local void @BKE_image_get_aspect(%struct.Image*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_coord_to_frame(float* %r_co, float* %co, float* %frame_size) #0 !dbg !5780 {
entry:
  %r_co.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %frame_size.addr = alloca float*, align 8
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !5781, metadata !DIExpression()), !dbg !5782
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5783, metadata !DIExpression()), !dbg !5784
  store float* %frame_size, float** %frame_size.addr, align 8
  call void @llvm.dbg.declare(metadata float** %frame_size.addr, metadata !5785, metadata !DIExpression()), !dbg !5786
  %0 = load float*, float** %frame_size.addr, align 8, !dbg !5787
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5787
  %1 = load float, float* %arrayidx, align 4, !dbg !5787
  %2 = load float*, float** %frame_size.addr, align 8, !dbg !5789
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !5789
  %3 = load float, float* %arrayidx1, align 4, !dbg !5789
  %cmp = fcmp oeq float %1, %3, !dbg !5790
  br i1 %cmp, label %if.then, label %if.else, !dbg !5791

if.then:                                          ; preds = %entry
  %4 = load float*, float** %co.addr, align 8, !dbg !5792
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5792
  %5 = load float, float* %arrayidx2, align 4, !dbg !5792
  %6 = load float*, float** %r_co.addr, align 8, !dbg !5794
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !5794
  store float %5, float* %arrayidx3, align 4, !dbg !5795
  %7 = load float*, float** %co.addr, align 8, !dbg !5796
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5796
  %8 = load float, float* %arrayidx4, align 4, !dbg !5796
  %9 = load float*, float** %r_co.addr, align 8, !dbg !5797
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 1, !dbg !5797
  store float %8, float* %arrayidx5, align 4, !dbg !5798
  br label %if.end28, !dbg !5799

if.else:                                          ; preds = %entry
  %10 = load float*, float** %frame_size.addr, align 8, !dbg !5800
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 0, !dbg !5800
  %11 = load float, float* %arrayidx6, align 4, !dbg !5800
  %12 = load float*, float** %frame_size.addr, align 8, !dbg !5802
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 1, !dbg !5802
  %13 = load float, float* %arrayidx7, align 4, !dbg !5802
  %cmp8 = fcmp olt float %11, %13, !dbg !5803
  br i1 %cmp8, label %if.then9, label %if.else17, !dbg !5804

if.then9:                                         ; preds = %if.else
  %14 = load float*, float** %co.addr, align 8, !dbg !5805
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 0, !dbg !5805
  %15 = load float, float* %arrayidx10, align 4, !dbg !5805
  %sub = fsub float %15, 5.000000e-01, !dbg !5807
  %16 = load float*, float** %frame_size.addr, align 8, !dbg !5808
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 0, !dbg !5808
  %17 = load float, float* %arrayidx11, align 4, !dbg !5808
  %18 = load float*, float** %frame_size.addr, align 8, !dbg !5809
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 1, !dbg !5809
  %19 = load float, float* %arrayidx12, align 4, !dbg !5809
  %div = fdiv float %17, %19, !dbg !5810
  %div13 = fdiv float %sub, %div, !dbg !5811
  %add = fadd float %div13, 5.000000e-01, !dbg !5812
  %20 = load float*, float** %r_co.addr, align 8, !dbg !5813
  %arrayidx14 = getelementptr inbounds float, float* %20, i64 0, !dbg !5813
  store float %add, float* %arrayidx14, align 4, !dbg !5814
  %21 = load float*, float** %co.addr, align 8, !dbg !5815
  %arrayidx15 = getelementptr inbounds float, float* %21, i64 1, !dbg !5815
  %22 = load float, float* %arrayidx15, align 4, !dbg !5815
  %23 = load float*, float** %r_co.addr, align 8, !dbg !5816
  %arrayidx16 = getelementptr inbounds float, float* %23, i64 1, !dbg !5816
  store float %22, float* %arrayidx16, align 4, !dbg !5817
  br label %if.end, !dbg !5818

if.else17:                                        ; preds = %if.else
  %24 = load float*, float** %co.addr, align 8, !dbg !5819
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !5819
  %25 = load float, float* %arrayidx18, align 4, !dbg !5819
  %26 = load float*, float** %r_co.addr, align 8, !dbg !5821
  %arrayidx19 = getelementptr inbounds float, float* %26, i64 0, !dbg !5821
  store float %25, float* %arrayidx19, align 4, !dbg !5822
  %27 = load float*, float** %co.addr, align 8, !dbg !5823
  %arrayidx20 = getelementptr inbounds float, float* %27, i64 1, !dbg !5823
  %28 = load float, float* %arrayidx20, align 4, !dbg !5823
  %sub21 = fsub float %28, 5.000000e-01, !dbg !5824
  %29 = load float*, float** %frame_size.addr, align 8, !dbg !5825
  %arrayidx22 = getelementptr inbounds float, float* %29, i64 1, !dbg !5825
  %30 = load float, float* %arrayidx22, align 4, !dbg !5825
  %31 = load float*, float** %frame_size.addr, align 8, !dbg !5826
  %arrayidx23 = getelementptr inbounds float, float* %31, i64 0, !dbg !5826
  %32 = load float, float* %arrayidx23, align 4, !dbg !5826
  %div24 = fdiv float %30, %32, !dbg !5827
  %div25 = fdiv float %sub21, %div24, !dbg !5828
  %add26 = fadd float %div25, 5.000000e-01, !dbg !5829
  %33 = load float*, float** %r_co.addr, align 8, !dbg !5830
  %arrayidx27 = getelementptr inbounds float, float* %33, i64 1, !dbg !5830
  store float %add26, float* %arrayidx27, align 4, !dbg !5831
  br label %if.end

if.end:                                           ; preds = %if.else17, %if.then9
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.then
  ret void, !dbg !5832
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_coord_to_movieclip(%struct.MovieClip* %clip, %struct.MovieClipUser* %user, float* %r_co, float* %co) #0 !dbg !5833 {
entry:
  %clip.addr = alloca %struct.MovieClip*, align 8
  %user.addr = alloca %struct.MovieClipUser*, align 8
  %r_co.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %aspx = alloca float, align 4
  %aspy = alloca float, align 4
  %frame_size = alloca [2 x float], align 4
  store %struct.MovieClip* %clip, %struct.MovieClip** %clip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip.addr, metadata !5834, metadata !DIExpression()), !dbg !5835
  store %struct.MovieClipUser* %user, %struct.MovieClipUser** %user.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MovieClipUser** %user.addr, metadata !5836, metadata !DIExpression()), !dbg !5837
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !5838, metadata !DIExpression()), !dbg !5839
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5840, metadata !DIExpression()), !dbg !5841
  call void @llvm.dbg.declare(metadata float* %aspx, metadata !5842, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.declare(metadata float* %aspy, metadata !5844, metadata !DIExpression()), !dbg !5845
  call void @llvm.dbg.declare(metadata [2 x float]* %frame_size, metadata !5846, metadata !DIExpression()), !dbg !5847
  %0 = load %struct.MovieClip*, %struct.MovieClip** %clip.addr, align 8, !dbg !5848
  %1 = load %struct.MovieClipUser*, %struct.MovieClipUser** %user.addr, align 8, !dbg !5849
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !5850
  call void @BKE_movieclip_get_size_fl(%struct.MovieClip* %0, %struct.MovieClipUser* %1, float* %arraydecay), !dbg !5851
  %2 = load %struct.MovieClip*, %struct.MovieClip** %clip.addr, align 8, !dbg !5852
  call void @BKE_movieclip_get_aspect(%struct.MovieClip* %2, float* %aspx, float* %aspy), !dbg !5853
  %3 = load float, float* %aspy, align 4, !dbg !5854
  %4 = load float, float* %aspx, align 4, !dbg !5855
  %div = fdiv float %3, %4, !dbg !5856
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 1, !dbg !5857
  %5 = load float, float* %arrayidx, align 4, !dbg !5858
  %mul = fmul float %5, %div, !dbg !5858
  store float %mul, float* %arrayidx, align 4, !dbg !5858
  %6 = load float*, float** %r_co.addr, align 8, !dbg !5859
  %7 = load float*, float** %co.addr, align 8, !dbg !5860
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !5861
  call void @BKE_mask_coord_to_frame(float* %6, float* %7, float* %arraydecay1), !dbg !5862
  ret void, !dbg !5863
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_coord_to_image(%struct.Image* %image, %struct.ImageUser* %iuser, float* %r_co, float* %co) #0 !dbg !5864 {
entry:
  %image.addr = alloca %struct.Image*, align 8
  %iuser.addr = alloca %struct.ImageUser*, align 8
  %r_co.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %aspx = alloca float, align 4
  %aspy = alloca float, align 4
  %frame_size = alloca [2 x float], align 4
  store %struct.Image* %image, %struct.Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %image.addr, metadata !5865, metadata !DIExpression()), !dbg !5866
  store %struct.ImageUser* %iuser, %struct.ImageUser** %iuser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageUser** %iuser.addr, metadata !5867, metadata !DIExpression()), !dbg !5868
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !5869, metadata !DIExpression()), !dbg !5870
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5871, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.declare(metadata float* %aspx, metadata !5873, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.declare(metadata float* %aspy, metadata !5875, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.declare(metadata [2 x float]* %frame_size, metadata !5877, metadata !DIExpression()), !dbg !5878
  %0 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !5879
  %1 = load %struct.ImageUser*, %struct.ImageUser** %iuser.addr, align 8, !dbg !5880
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !5881
  call void @BKE_image_get_size_fl(%struct.Image* %0, %struct.ImageUser* %1, float* %arraydecay), !dbg !5882
  %2 = load %struct.Image*, %struct.Image** %image.addr, align 8, !dbg !5883
  call void @BKE_image_get_aspect(%struct.Image* %2, float* %aspx, float* %aspy), !dbg !5884
  %3 = load float, float* %aspy, align 4, !dbg !5885
  %4 = load float, float* %aspx, align 4, !dbg !5886
  %div = fdiv float %3, %4, !dbg !5887
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 1, !dbg !5888
  %5 = load float, float* %arrayidx, align 4, !dbg !5889
  %mul = fmul float %5, %div, !dbg !5889
  store float %mul, float* %arrayidx, align 4, !dbg !5889
  %6 = load float*, float** %r_co.addr, align 8, !dbg !5890
  %7 = load float*, float** %co.addr, align 8, !dbg !5891
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !5892
  call void @BKE_mask_coord_to_frame(float* %6, float* %7, float* %arraydecay1), !dbg !5893
  ret void, !dbg !5894
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_point_parent_matrix_get(%struct.MaskSplinePoint* %point, float %ctime, [3 x float]* %parent_matrix) #0 !dbg !5895 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %ctime.addr = alloca float, align 4
  %parent_matrix.addr = alloca [3 x float]*, align 8
  %parent = alloca %struct.MaskParent*, align 8
  %clip = alloca %struct.MovieClip*, align 8
  %tracking = alloca %struct.MovieTracking*, align 8
  %ob = alloca %struct.MovieTrackingObject*, align 8
  %user = alloca %struct.MovieClipUser, align 4
  %clip_framenr = alloca float, align 4
  %track = alloca %struct.MovieTrackingTrack*, align 8
  %marker_position = alloca [2 x float], align 4
  %parent_co = alloca [2 x float], align 4
  %plane_track = alloca %struct.MovieTrackingPlaneTrack*, align 8
  %plane_marker = alloca %struct.MovieTrackingPlaneMarker*, align 8
  %aspx = alloca float, align 4
  %aspy = alloca float, align 4
  %frame_size = alloca [2 x float], align 4
  %H = alloca [3 x [3 x float]], align 16
  %mask_from_clip_matrix = alloca [3 x [3 x float]], align 16
  %mask_to_clip_matrix = alloca [3 x [3 x float]], align 16
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !5898, metadata !DIExpression()), !dbg !5899
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !5900, metadata !DIExpression()), !dbg !5901
  store [3 x float]* %parent_matrix, [3 x float]** %parent_matrix.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %parent_matrix.addr, metadata !5902, metadata !DIExpression()), !dbg !5903
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %parent, metadata !5904, metadata !DIExpression()), !dbg !5905
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !5906
  %parent1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 4, !dbg !5907
  store %struct.MaskParent* %parent1, %struct.MaskParent** %parent, align 8, !dbg !5905
  %1 = load [3 x float]*, [3 x float]** %parent_matrix.addr, align 8, !dbg !5908
  call void @unit_m3([3 x float]* %1), !dbg !5909
  %2 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5910
  %tobool = icmp ne %struct.MaskParent* %2, null, !dbg !5910
  br i1 %tobool, label %if.end, label %if.then, !dbg !5912

if.then:                                          ; preds = %entry
  br label %if.end85, !dbg !5913

if.end:                                           ; preds = %entry
  %3 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5915
  %id_type = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %3, i32 0, i32 0, !dbg !5917
  %4 = load i32, i32* %id_type, align 8, !dbg !5917
  %cmp = icmp eq i32 %4, 17229, !dbg !5918
  br i1 %cmp, label %if.then2, label %if.end85, !dbg !5919

if.then2:                                         ; preds = %if.end
  %5 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5920
  %id = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %5, i32 0, i32 2, !dbg !5923
  %6 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !5923
  %tobool3 = icmp ne %struct.ID* %6, null, !dbg !5920
  br i1 %tobool3, label %if.then4, label %if.end84, !dbg !5924

if.then4:                                         ; preds = %if.then2
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip, metadata !5925, metadata !DIExpression()), !dbg !5927
  %7 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5928
  %id5 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %7, i32 0, i32 2, !dbg !5929
  %8 = load %struct.ID*, %struct.ID** %id5, align 8, !dbg !5929
  %9 = bitcast %struct.ID* %8 to %struct.MovieClip*, !dbg !5930
  store %struct.MovieClip* %9, %struct.MovieClip** %clip, align 8, !dbg !5927
  call void @llvm.dbg.declare(metadata %struct.MovieTracking** %tracking, metadata !5931, metadata !DIExpression()), !dbg !5932
  %10 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !5933
  %tracking6 = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %10, i32 0, i32 11, !dbg !5934
  store %struct.MovieTracking* %tracking6, %struct.MovieTracking** %tracking, align 8, !dbg !5932
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingObject** %ob, metadata !5935, metadata !DIExpression()), !dbg !5951
  %11 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !5952
  %12 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5953
  %parent7 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %12, i32 0, i32 3, !dbg !5954
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %parent7, i64 0, i64 0, !dbg !5953
  %call = call %struct.MovieTrackingObject* @BKE_tracking_object_get_named(%struct.MovieTracking* %11, i8* %arraydecay), !dbg !5955
  store %struct.MovieTrackingObject* %call, %struct.MovieTrackingObject** %ob, align 8, !dbg !5951
  %13 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %ob, align 8, !dbg !5956
  %tobool8 = icmp ne %struct.MovieTrackingObject* %13, null, !dbg !5956
  br i1 %tobool8, label %if.then9, label %if.end83, !dbg !5958

if.then9:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata %struct.MovieClipUser* %user, metadata !5959, metadata !DIExpression()), !dbg !5961
  %14 = bitcast %struct.MovieClipUser* %user to i8*, !dbg !5961
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 8, i1 false), !dbg !5961
  call void @llvm.dbg.declare(metadata float* %clip_framenr, metadata !5962, metadata !DIExpression()), !dbg !5963
  %15 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !5964
  %16 = load float, float* %ctime.addr, align 4, !dbg !5965
  %call10 = call float @BKE_movieclip_remap_scene_to_clip_frame(%struct.MovieClip* %15, float %16), !dbg !5966
  store float %call10, float* %clip_framenr, align 4, !dbg !5963
  %17 = load float, float* %ctime.addr, align 4, !dbg !5967
  %conv = fptosi float %17 to i32, !dbg !5967
  call void @BKE_movieclip_user_set_frame(%struct.MovieClipUser* %user, i32 %conv), !dbg !5968
  %18 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5969
  %type = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %18, i32 0, i32 1, !dbg !5971
  %19 = load i32, i32* %type, align 4, !dbg !5971
  %cmp11 = icmp eq i32 %19, 0, !dbg !5972
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !5973

if.then13:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingTrack** %track, metadata !5974, metadata !DIExpression()), !dbg !5976
  %20 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !5977
  %21 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %ob, align 8, !dbg !5978
  %22 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5979
  %sub_parent = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %22, i32 0, i32 4, !dbg !5980
  %arraydecay14 = getelementptr inbounds [64 x i8], [64 x i8]* %sub_parent, i64 0, i64 0, !dbg !5979
  %call15 = call %struct.MovieTrackingTrack* @BKE_tracking_track_get_named(%struct.MovieTracking* %20, %struct.MovieTrackingObject* %21, i8* %arraydecay14), !dbg !5981
  store %struct.MovieTrackingTrack* %call15, %struct.MovieTrackingTrack** %track, align 8, !dbg !5976
  %23 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !5982
  %tobool16 = icmp ne %struct.MovieTrackingTrack* %23, null, !dbg !5982
  br i1 %tobool16, label %if.then17, label %if.end24, !dbg !5984

if.then17:                                        ; preds = %if.then13
  call void @llvm.dbg.declare(metadata [2 x float]* %marker_position, metadata !5985, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.declare(metadata [2 x float]* %parent_co, metadata !5988, metadata !DIExpression()), !dbg !5989
  %24 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !5990
  %25 = load float, float* %clip_framenr, align 4, !dbg !5991
  %arraydecay18 = getelementptr inbounds [2 x float], [2 x float]* %marker_position, i64 0, i64 0, !dbg !5992
  call void @BKE_tracking_marker_get_subframe_position(%struct.MovieTrackingTrack* %24, float %25, float* %arraydecay18), !dbg !5993
  %26 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !5994
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %parent_co, i64 0, i64 0, !dbg !5995
  %arraydecay20 = getelementptr inbounds [2 x float], [2 x float]* %marker_position, i64 0, i64 0, !dbg !5996
  call void @BKE_mask_coord_from_movieclip(%struct.MovieClip* %26, %struct.MovieClipUser* %user, float* %arraydecay19, float* %arraydecay20), !dbg !5997
  %27 = load [3 x float]*, [3 x float]** %parent_matrix.addr, align 8, !dbg !5998
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %27, i64 2, !dbg !5998
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5998
  %arraydecay22 = getelementptr inbounds [2 x float], [2 x float]* %parent_co, i64 0, i64 0, !dbg !5999
  %28 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !6000
  %parent_orig = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %28, i32 0, i32 5, !dbg !6001
  %arraydecay23 = getelementptr inbounds [2 x float], [2 x float]* %parent_orig, i64 0, i64 0, !dbg !6000
  call void @sub_v2_v2v2(float* %arraydecay21, float* %arraydecay22, float* %arraydecay23), !dbg !6002
  br label %if.end24, !dbg !6003

if.end24:                                         ; preds = %if.then17, %if.then13
  br label %if.end82, !dbg !6004

if.else:                                          ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingPlaneTrack** %plane_track, metadata !6005, metadata !DIExpression()), !dbg !6007
  %29 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !6008
  %30 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %ob, align 8, !dbg !6009
  %31 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !6010
  %sub_parent25 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %31, i32 0, i32 4, !dbg !6011
  %arraydecay26 = getelementptr inbounds [64 x i8], [64 x i8]* %sub_parent25, i64 0, i64 0, !dbg !6010
  %call27 = call %struct.MovieTrackingPlaneTrack* @BKE_tracking_plane_track_get_named(%struct.MovieTracking* %29, %struct.MovieTrackingObject* %30, i8* %arraydecay26), !dbg !6012
  store %struct.MovieTrackingPlaneTrack* %call27, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !6007
  %32 = load %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !6013
  %tobool28 = icmp ne %struct.MovieTrackingPlaneTrack* %32, null, !dbg !6013
  br i1 %tobool28, label %if.then29, label %if.end81, !dbg !6015

if.then29:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingPlaneMarker** %plane_marker, metadata !6016, metadata !DIExpression()), !dbg !6018
  %33 = load %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !6019
  %34 = load float, float* %clip_framenr, align 4, !dbg !6020
  %conv30 = fptosi float %34 to i32, !dbg !6020
  %call31 = call %struct.MovieTrackingPlaneMarker* @BKE_tracking_plane_marker_get(%struct.MovieTrackingPlaneTrack* %33, i32 %conv30), !dbg !6021
  store %struct.MovieTrackingPlaneMarker* %call31, %struct.MovieTrackingPlaneMarker** %plane_marker, align 8, !dbg !6018
  call void @llvm.dbg.declare(metadata float* %aspx, metadata !6022, metadata !DIExpression()), !dbg !6023
  call void @llvm.dbg.declare(metadata float* %aspy, metadata !6024, metadata !DIExpression()), !dbg !6025
  call void @llvm.dbg.declare(metadata [2 x float]* %frame_size, metadata !6026, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %H, metadata !6028, metadata !DIExpression()), !dbg !6029
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mask_from_clip_matrix, metadata !6030, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mask_to_clip_matrix, metadata !6032, metadata !DIExpression()), !dbg !6033
  %35 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !6034
  %parent_corners_orig = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %35, i32 0, i32 6, !dbg !6035
  %arraydecay32 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %parent_corners_orig, i64 0, i64 0, !dbg !6034
  %36 = load %struct.MovieTrackingPlaneMarker*, %struct.MovieTrackingPlaneMarker** %plane_marker, align 8, !dbg !6036
  %corners = getelementptr inbounds %struct.MovieTrackingPlaneMarker, %struct.MovieTrackingPlaneMarker* %36, i32 0, i32 0, !dbg !6037
  %arraydecay33 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %corners, i64 0, i64 0, !dbg !6036
  %arraydecay34 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %H, i64 0, i64 0, !dbg !6038
  call void @BKE_tracking_homography_between_two_quads([2 x float]* %arraydecay32, [2 x float]* %arraydecay33, [3 x float]* %arraydecay34), !dbg !6039
  %arraydecay35 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mask_from_clip_matrix, i64 0, i64 0, !dbg !6040
  call void @unit_m3([3 x float]* %arraydecay35), !dbg !6041
  %37 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !6042
  %arraydecay36 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !6043
  call void @BKE_movieclip_get_size_fl(%struct.MovieClip* %37, %struct.MovieClipUser* %user, float* %arraydecay36), !dbg !6044
  %38 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !6045
  call void @BKE_movieclip_get_aspect(%struct.MovieClip* %38, float* %aspx, float* %aspy), !dbg !6046
  %39 = load float, float* %aspy, align 4, !dbg !6047
  %40 = load float, float* %aspx, align 4, !dbg !6048
  %div = fdiv float %39, %40, !dbg !6049
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 1, !dbg !6050
  %41 = load float, float* %arrayidx37, align 4, !dbg !6051
  %mul = fmul float %41, %div, !dbg !6051
  store float %mul, float* %arrayidx37, align 4, !dbg !6051
  %arrayidx38 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !6052
  %42 = load float, float* %arrayidx38, align 4, !dbg !6052
  %arrayidx39 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 1, !dbg !6054
  %43 = load float, float* %arrayidx39, align 4, !dbg !6054
  %cmp40 = fcmp oeq float %42, %43, !dbg !6055
  br i1 %cmp40, label %if.then42, label %if.else43, !dbg !6056

if.then42:                                        ; preds = %if.then29
  br label %if.end74, !dbg !6057

if.else43:                                        ; preds = %if.then29
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !6059
  %44 = load float, float* %arrayidx44, align 4, !dbg !6059
  %arrayidx45 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 1, !dbg !6061
  %45 = load float, float* %arrayidx45, align 4, !dbg !6061
  %cmp46 = fcmp olt float %44, %45, !dbg !6062
  br i1 %cmp46, label %if.then48, label %if.else60, !dbg !6063

if.then48:                                        ; preds = %if.else43
  %arrayidx49 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 1, !dbg !6064
  %46 = load float, float* %arrayidx49, align 4, !dbg !6064
  %arrayidx50 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !6066
  %47 = load float, float* %arrayidx50, align 4, !dbg !6066
  %div51 = fdiv float %46, %47, !dbg !6067
  %arrayidx52 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mask_from_clip_matrix, i64 0, i64 0, !dbg !6068
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx52, i64 0, i64 0, !dbg !6068
  store float %div51, float* %arrayidx53, align 16, !dbg !6069
  %arrayidx54 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 1, !dbg !6070
  %48 = load float, float* %arrayidx54, align 4, !dbg !6070
  %arrayidx55 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !6071
  %49 = load float, float* %arrayidx55, align 4, !dbg !6071
  %div56 = fdiv float %48, %49, !dbg !6072
  %mul57 = fmul float -5.000000e-01, %div56, !dbg !6073
  %add = fadd float %mul57, 5.000000e-01, !dbg !6074
  %arrayidx58 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mask_from_clip_matrix, i64 0, i64 2, !dbg !6075
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx58, i64 0, i64 0, !dbg !6075
  store float %add, float* %arrayidx59, align 8, !dbg !6076
  br label %if.end73, !dbg !6077

if.else60:                                        ; preds = %if.else43
  %arrayidx61 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 1, !dbg !6078
  %50 = load float, float* %arrayidx61, align 4, !dbg !6078
  %arrayidx62 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !6080
  %51 = load float, float* %arrayidx62, align 4, !dbg !6080
  %div63 = fdiv float %50, %51, !dbg !6081
  %arrayidx64 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mask_from_clip_matrix, i64 0, i64 1, !dbg !6082
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx64, i64 0, i64 1, !dbg !6082
  store float %div63, float* %arrayidx65, align 4, !dbg !6083
  %arrayidx66 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 1, !dbg !6084
  %52 = load float, float* %arrayidx66, align 4, !dbg !6084
  %arrayidx67 = getelementptr inbounds [2 x float], [2 x float]* %frame_size, i64 0, i64 0, !dbg !6085
  %53 = load float, float* %arrayidx67, align 4, !dbg !6085
  %div68 = fdiv float %52, %53, !dbg !6086
  %mul69 = fmul float -5.000000e-01, %div68, !dbg !6087
  %add70 = fadd float %mul69, 5.000000e-01, !dbg !6088
  %arrayidx71 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mask_from_clip_matrix, i64 0, i64 2, !dbg !6089
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx71, i64 0, i64 1, !dbg !6089
  store float %add70, float* %arrayidx72, align 4, !dbg !6090
  br label %if.end73

if.end73:                                         ; preds = %if.else60, %if.then48
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then42
  %arraydecay75 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mask_to_clip_matrix, i64 0, i64 0, !dbg !6091
  %arraydecay76 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mask_from_clip_matrix, i64 0, i64 0, !dbg !6092
  %call77 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay75, [3 x float]* %arraydecay76), !dbg !6093
  %54 = load [3 x float]*, [3 x float]** %parent_matrix.addr, align 8, !dbg !6094
  %arraydecay78 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mask_from_clip_matrix, i64 0, i64 0, !dbg !6094
  %arraydecay79 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %H, i64 0, i64 0, !dbg !6094
  %arraydecay80 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mask_to_clip_matrix, i64 0, i64 0, !dbg !6094
  call void @_va_mul_m3_series_4([3 x float]* %54, [3 x float]* %arraydecay78, [3 x float]* %arraydecay79, [3 x float]* %arraydecay80), !dbg !6094
  br label %if.end81, !dbg !6095

if.end81:                                         ; preds = %if.end74, %if.else
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.end24
  br label %if.end83, !dbg !6096

if.end83:                                         ; preds = %if.end82, %if.then4
  br label %if.end84, !dbg !6097

if.end84:                                         ; preds = %if.end83, %if.then2
  br label %if.end85, !dbg !6098

if.end85:                                         ; preds = %if.then, %if.end84, %if.end
  ret void, !dbg !6099
}

declare dso_local void @unit_m3([3 x float]*) #2

declare dso_local %struct.MovieTrackingObject* @BKE_tracking_object_get_named(%struct.MovieTracking*, i8*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dso_local float @BKE_movieclip_remap_scene_to_clip_frame(%struct.MovieClip*, float) #2

declare dso_local void @BKE_movieclip_user_set_frame(%struct.MovieClipUser*, i32) #2

declare dso_local %struct.MovieTrackingTrack* @BKE_tracking_track_get_named(%struct.MovieTracking*, %struct.MovieTrackingObject*, i8*) #2

declare dso_local void @BKE_tracking_marker_get_subframe_position(%struct.MovieTrackingTrack*, float, float*) #2

declare dso_local %struct.MovieTrackingPlaneTrack* @BKE_tracking_plane_track_get_named(%struct.MovieTracking*, %struct.MovieTrackingObject*, i8*) #2

declare dso_local %struct.MovieTrackingPlaneMarker* @BKE_tracking_plane_marker_get(%struct.MovieTrackingPlaneTrack*, i32) #2

declare dso_local void @BKE_tracking_homography_between_two_quads([2 x float]*, [2 x float]*, [3 x float]*) #2

declare dso_local zeroext i8 @invert_m3_m3([3 x float]*, [3 x float]*) #2

declare dso_local void @_va_mul_m3_series_4([3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.MaskSplinePoint* @mask_spline_point_prev(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %points_array, %struct.MaskSplinePoint* %point) #0 !dbg !6100 {
entry:
  %retval = alloca %struct.MaskSplinePoint*, align 8
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %points_array.addr = alloca %struct.MaskSplinePoint*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !6103, metadata !DIExpression()), !dbg !6104
  store %struct.MaskSplinePoint* %points_array, %struct.MaskSplinePoint** %points_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %points_array.addr, metadata !6105, metadata !DIExpression()), !dbg !6106
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !6107, metadata !DIExpression()), !dbg !6108
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6109
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array.addr, align 8, !dbg !6111
  %cmp = icmp eq %struct.MaskSplinePoint* %0, %1, !dbg !6112
  br i1 %cmp, label %if.then, label %if.else2, !dbg !6113

if.then:                                          ; preds = %entry
  %2 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6114
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %2, i32 0, i32 2, !dbg !6117
  %3 = load i16, i16* %flag, align 8, !dbg !6117
  %conv = sext i16 %3 to i32, !dbg !6114
  %and = and i32 %conv, 2, !dbg !6118
  %tobool = icmp ne i32 %and, 0, !dbg !6118
  br i1 %tobool, label %if.then1, label %if.else, !dbg !6119

if.then1:                                         ; preds = %if.then
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array.addr, align 8, !dbg !6120
  %5 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6122
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %5, i32 0, i32 5, !dbg !6123
  %6 = load i32, i32* %tot_point, align 4, !dbg !6123
  %sub = sub nsw i32 %6, 1, !dbg !6124
  %idxprom = sext i32 %sub to i64, !dbg !6120
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %4, i64 %idxprom, !dbg !6120
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %retval, align 8, !dbg !6125
  br label %return, !dbg !6125

if.else:                                          ; preds = %if.then
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %retval, align 8, !dbg !6126
  br label %return, !dbg !6126

if.else2:                                         ; preds = %entry
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6128
  %add.ptr = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %7, i64 -1, !dbg !6130
  store %struct.MaskSplinePoint* %add.ptr, %struct.MaskSplinePoint** %retval, align 8, !dbg !6131
  br label %return, !dbg !6131

return:                                           ; preds = %if.else2, %if.else, %if.then1
  %8 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %retval, align 8, !dbg !6132
  ret %struct.MaskSplinePoint* %8, !dbg !6132
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MaskSplinePoint* @mask_spline_point_next(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %points_array, %struct.MaskSplinePoint* %point) #0 !dbg !6133 {
entry:
  %retval = alloca %struct.MaskSplinePoint*, align 8
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %points_array.addr = alloca %struct.MaskSplinePoint*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !6134, metadata !DIExpression()), !dbg !6135
  store %struct.MaskSplinePoint* %points_array, %struct.MaskSplinePoint** %points_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %points_array.addr, metadata !6136, metadata !DIExpression()), !dbg !6137
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !6138, metadata !DIExpression()), !dbg !6139
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6140
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array.addr, align 8, !dbg !6142
  %2 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6143
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %2, i32 0, i32 5, !dbg !6144
  %3 = load i32, i32* %tot_point, align 4, !dbg !6144
  %sub = sub nsw i32 %3, 1, !dbg !6145
  %idxprom = sext i32 %sub to i64, !dbg !6142
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %1, i64 %idxprom, !dbg !6142
  %cmp = icmp eq %struct.MaskSplinePoint* %0, %arrayidx, !dbg !6146
  br i1 %cmp, label %if.then, label %if.else3, !dbg !6147

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6148
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %4, i32 0, i32 2, !dbg !6151
  %5 = load i16, i16* %flag, align 8, !dbg !6151
  %conv = sext i16 %5 to i32, !dbg !6148
  %and = and i32 %conv, 2, !dbg !6152
  %tobool = icmp ne i32 %and, 0, !dbg !6152
  br i1 %tobool, label %if.then1, label %if.else, !dbg !6153

if.then1:                                         ; preds = %if.then
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_array.addr, align 8, !dbg !6154
  %arrayidx2 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i64 0, !dbg !6154
  store %struct.MaskSplinePoint* %arrayidx2, %struct.MaskSplinePoint** %retval, align 8, !dbg !6156
  br label %return, !dbg !6156

if.else:                                          ; preds = %if.then
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %retval, align 8, !dbg !6157
  br label %return, !dbg !6157

if.else3:                                         ; preds = %entry
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6159
  %add.ptr = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %7, i64 1, !dbg !6161
  store %struct.MaskSplinePoint* %add.ptr, %struct.MaskSplinePoint** %retval, align 8, !dbg !6162
  br label %return, !dbg !6162

return:                                           ; preds = %if.else3, %if.else, %if.then1
  %8 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %retval, align 8, !dbg !6163
  ret %struct.MaskSplinePoint* %8, !dbg !6163
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_calc_tangent_polyline(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %point, float* %t) #0 !dbg !6164 {
entry:
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %t.addr = alloca float*, align 8
  %tvec_a = alloca [2 x float], align 4
  %tvec_b = alloca [2 x float], align 4
  %point_prev = alloca %struct.MaskSplinePoint*, align 8
  %point_next = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !6167, metadata !DIExpression()), !dbg !6168
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !6169, metadata !DIExpression()), !dbg !6170
  store float* %t, float** %t.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t.addr, metadata !6171, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.declare(metadata [2 x float]* %tvec_a, metadata !6173, metadata !DIExpression()), !dbg !6174
  call void @llvm.dbg.declare(metadata [2 x float]* %tvec_b, metadata !6175, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_prev, metadata !6177, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_next, metadata !6179, metadata !DIExpression()), !dbg !6180
  %0 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6181
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6182
  call void @BKE_mask_get_handle_point_adjacent(%struct.MaskSpline* %0, %struct.MaskSplinePoint* %1, %struct.MaskSplinePoint** %point_prev, %struct.MaskSplinePoint** %point_next), !dbg !6183
  %2 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !6184
  %tobool = icmp ne %struct.MaskSplinePoint* %2, null, !dbg !6184
  br i1 %tobool, label %if.then, label %if.else, !dbg !6186

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %tvec_a, i64 0, i64 0, !dbg !6187
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6189
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !6190
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 0, !dbg !6191
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !6189
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6189
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !6192
  %bezt2 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %4, i32 0, i32 0, !dbg !6193
  %vec3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt2, i32 0, i32 0, !dbg !6194
  %arrayidx4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec3, i64 0, i64 1, !dbg !6192
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx4, i64 0, i64 0, !dbg !6192
  call void @sub_v2_v2v2(float* %arraydecay, float* %arraydecay1, float* %arraydecay5), !dbg !6195
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %tvec_a, i64 0, i64 0, !dbg !6196
  %call = call float @normalize_v2(float* %arraydecay6), !dbg !6197
  br label %if.end, !dbg !6198

if.else:                                          ; preds = %entry
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %tvec_a, i64 0, i64 0, !dbg !6199
  call void @zero_v2(float* %arraydecay7), !dbg !6201
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !6202
  %tobool8 = icmp ne %struct.MaskSplinePoint* %5, null, !dbg !6202
  br i1 %tobool8, label %if.then9, label %if.else21, !dbg !6204

if.then9:                                         ; preds = %if.end
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %tvec_b, i64 0, i64 0, !dbg !6205
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !6207
  %bezt11 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i32 0, i32 0, !dbg !6208
  %vec12 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt11, i32 0, i32 0, !dbg !6209
  %arrayidx13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec12, i64 0, i64 1, !dbg !6207
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !6207
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6210
  %bezt15 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %7, i32 0, i32 0, !dbg !6211
  %vec16 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt15, i32 0, i32 0, !dbg !6212
  %arrayidx17 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec16, i64 0, i64 1, !dbg !6210
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx17, i64 0, i64 0, !dbg !6210
  call void @sub_v2_v2v2(float* %arraydecay10, float* %arraydecay14, float* %arraydecay18), !dbg !6213
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %tvec_b, i64 0, i64 0, !dbg !6214
  %call20 = call float @normalize_v2(float* %arraydecay19), !dbg !6215
  br label %if.end23, !dbg !6216

if.else21:                                        ; preds = %if.end
  %arraydecay22 = getelementptr inbounds [2 x float], [2 x float]* %tvec_b, i64 0, i64 0, !dbg !6217
  call void @zero_v2(float* %arraydecay22), !dbg !6219
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.then9
  %8 = load float*, float** %t.addr, align 8, !dbg !6220
  %arraydecay24 = getelementptr inbounds [2 x float], [2 x float]* %tvec_a, i64 0, i64 0, !dbg !6221
  %arraydecay25 = getelementptr inbounds [2 x float], [2 x float]* %tvec_b, i64 0, i64 0, !dbg !6222
  call void @add_v2_v2v2(float* %8, float* %arraydecay24, float* %arraydecay25), !dbg !6223
  %9 = load float*, float** %t.addr, align 8, !dbg !6224
  %call26 = call float @normalize_v2(float* %9), !dbg !6225
  ret void, !dbg !6226
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v2(float* %r) #0 !dbg !6227 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6230, metadata !DIExpression()), !dbg !6231
  %0 = load float*, float** %r.addr, align 8, !dbg !6232
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6232
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6233
  %1 = load float*, float** %r.addr, align 8, !dbg !6234
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6234
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6235
  ret void, !dbg !6236
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_calc_handle_point(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %point) #0 !dbg !6237 {
entry:
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %point_prev = alloca %struct.MaskSplinePoint*, align 8
  %point_next = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !6240, metadata !DIExpression()), !dbg !6241
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !6242, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_prev, metadata !6244, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_next, metadata !6246, metadata !DIExpression()), !dbg !6247
  %0 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6248
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6249
  call void @BKE_mask_get_handle_point_adjacent(%struct.MaskSpline* %0, %struct.MaskSplinePoint* %1, %struct.MaskSplinePoint** %point_prev, %struct.MaskSplinePoint** %point_next), !dbg !6250
  %2 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6251
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !6252
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !6253
  call void @mask_calc_point_handle(%struct.MaskSplinePoint* %2, %struct.MaskSplinePoint* %3, %struct.MaskSplinePoint* %4), !dbg !6254
  ret void, !dbg !6255
}

; Function Attrs: noinline nounwind uwtable
define internal void @mask_calc_point_handle(%struct.MaskSplinePoint* %point, %struct.MaskSplinePoint* %point_prev, %struct.MaskSplinePoint* %point_next) #0 !dbg !6256 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %point_prev.addr = alloca %struct.MaskSplinePoint*, align 8
  %point_next.addr = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bezt_prev = alloca %struct.BezTriple*, align 8
  %bezt_next = alloca %struct.BezTriple*, align 8
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  store %struct.MaskSplinePoint* %point_prev, %struct.MaskSplinePoint** %point_prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_prev.addr, metadata !6261, metadata !DIExpression()), !dbg !6262
  store %struct.MaskSplinePoint* %point_next, %struct.MaskSplinePoint** %point_next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_next.addr, metadata !6263, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !6265, metadata !DIExpression()), !dbg !6266
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6267
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 0, !dbg !6268
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !6266
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_prev, metadata !6269, metadata !DIExpression()), !dbg !6270
  store %struct.BezTriple* null, %struct.BezTriple** %bezt_prev, align 8, !dbg !6270
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_next, metadata !6271, metadata !DIExpression()), !dbg !6272
  store %struct.BezTriple* null, %struct.BezTriple** %bezt_next, align 8, !dbg !6272
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev.addr, align 8, !dbg !6273
  %tobool = icmp ne %struct.MaskSplinePoint* %1, null, !dbg !6273
  br i1 %tobool, label %if.then, label %if.end, !dbg !6275

if.then:                                          ; preds = %entry
  %2 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev.addr, align 8, !dbg !6276
  %bezt2 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %2, i32 0, i32 0, !dbg !6277
  store %struct.BezTriple* %bezt2, %struct.BezTriple** %bezt_prev, align 8, !dbg !6278
  br label %if.end, !dbg !6279

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next.addr, align 8, !dbg !6280
  %tobool3 = icmp ne %struct.MaskSplinePoint* %3, null, !dbg !6280
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !6282

if.then4:                                         ; preds = %if.end
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next.addr, align 8, !dbg !6283
  %bezt5 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %4, i32 0, i32 0, !dbg !6284
  store %struct.BezTriple* %bezt5, %struct.BezTriple** %bezt_next, align 8, !dbg !6285
  br label %if.end6, !dbg !6286

if.end6:                                          ; preds = %if.then4, %if.end
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt_prev, align 8, !dbg !6287
  %tobool7 = icmp ne %struct.BezTriple* %5, null, !dbg !6287
  br i1 %tobool7, label %if.then9, label %lor.lhs.false, !dbg !6289

lor.lhs.false:                                    ; preds = %if.end6
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !6290
  %tobool8 = icmp ne %struct.BezTriple* %6, null, !dbg !6290
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !6291

if.then9:                                         ; preds = %lor.lhs.false, %if.end6
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6292
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt_prev, align 8, !dbg !6294
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !6295
  call void @BKE_nurb_handle_calc(%struct.BezTriple* %7, %struct.BezTriple* %8, %struct.BezTriple* %9, i8 zeroext 0), !dbg !6296
  br label %if.end10, !dbg !6297

if.end10:                                         ; preds = %if.then9, %lor.lhs.false
  ret void, !dbg !6298
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_calc_handle_adjacent_interp(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %point, float %u) #0 !dbg !6299 {
entry:
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %u.addr = alloca float, align 4
  %length_tot = alloca i32, align 4
  %length_average = alloca float, align 4
  %weight_average = alloca float, align 4
  %point_prev = alloca %struct.MaskSplinePoint*, align 8
  %point_next = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !6302, metadata !DIExpression()), !dbg !6303
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !6304, metadata !DIExpression()), !dbg !6305
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !6306, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.declare(metadata i32* %length_tot, metadata !6308, metadata !DIExpression()), !dbg !6309
  store i32 0, i32* %length_tot, align 4, !dbg !6309
  call void @llvm.dbg.declare(metadata float* %length_average, metadata !6310, metadata !DIExpression()), !dbg !6311
  store float 0.000000e+00, float* %length_average, align 4, !dbg !6311
  call void @llvm.dbg.declare(metadata float* %weight_average, metadata !6312, metadata !DIExpression()), !dbg !6313
  store float 0.000000e+00, float* %weight_average, align 4, !dbg !6313
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_prev, metadata !6314, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_next, metadata !6316, metadata !DIExpression()), !dbg !6317
  %0 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6318
  %1 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6319
  call void @BKE_mask_get_handle_point_adjacent(%struct.MaskSpline* %0, %struct.MaskSplinePoint* %1, %struct.MaskSplinePoint** %point_prev, %struct.MaskSplinePoint** %point_next), !dbg !6320
  %2 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !6321
  %tobool = icmp ne %struct.MaskSplinePoint* %2, null, !dbg !6321
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !6323

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !6324
  %tobool1 = icmp ne %struct.MaskSplinePoint* %3, null, !dbg !6324
  br i1 %tobool1, label %if.then, label %if.else, !dbg !6325

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !6326
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %4, i32 0, i32 0, !dbg !6328
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 0, !dbg !6329
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !6326
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6326
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !6330
  %bezt2 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %5, i32 0, i32 0, !dbg !6331
  %vec3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt2, i32 0, i32 0, !dbg !6332
  %arrayidx4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec3, i64 0, i64 1, !dbg !6330
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx4, i64 0, i64 0, !dbg !6330
  %call = call float @len_v2v2(float* %arraydecay, float* %arraydecay5), !dbg !6333
  %6 = load float, float* %u.addr, align 4, !dbg !6334
  %sub = fsub float 1.000000e+00, %6, !dbg !6335
  %mul = fmul float %call, %sub, !dbg !6336
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !6337
  %bezt6 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %7, i32 0, i32 0, !dbg !6338
  %vec7 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt6, i32 0, i32 0, !dbg !6339
  %arrayidx8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec7, i64 0, i64 2, !dbg !6337
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !6337
  %8 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !6340
  %bezt10 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %8, i32 0, i32 0, !dbg !6341
  %vec11 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt10, i32 0, i32 0, !dbg !6342
  %arrayidx12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec11, i64 0, i64 1, !dbg !6340
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !6340
  %call14 = call float @len_v2v2(float* %arraydecay9, float* %arraydecay13), !dbg !6343
  %9 = load float, float* %u.addr, align 4, !dbg !6344
  %mul15 = fmul float %call14, %9, !dbg !6345
  %add = fadd float %mul, %mul15, !dbg !6346
  store float %add, float* %length_average, align 4, !dbg !6347
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !6348
  %bezt16 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %10, i32 0, i32 0, !dbg !6349
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt16, i32 0, i32 2, !dbg !6350
  %11 = load float, float* %weight, align 8, !dbg !6350
  %12 = load float, float* %u.addr, align 4, !dbg !6351
  %sub17 = fsub float 1.000000e+00, %12, !dbg !6352
  %mul18 = fmul float %11, %sub17, !dbg !6353
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !6354
  %bezt19 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %13, i32 0, i32 0, !dbg !6355
  %weight20 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt19, i32 0, i32 2, !dbg !6356
  %14 = load float, float* %weight20, align 8, !dbg !6356
  %15 = load float, float* %u.addr, align 4, !dbg !6357
  %mul21 = fmul float %14, %15, !dbg !6358
  %add22 = fadd float %mul18, %mul21, !dbg !6359
  store float %add22, float* %weight_average, align 4, !dbg !6360
  store i32 1, i32* %length_tot, align 4, !dbg !6361
  br label %if.end55, !dbg !6362

if.else:                                          ; preds = %land.lhs.true, %entry
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !6363
  %tobool23 = icmp ne %struct.MaskSplinePoint* %16, null, !dbg !6363
  br i1 %tobool23, label %if.then24, label %if.end, !dbg !6366

if.then24:                                        ; preds = %if.else
  %17 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !6367
  %bezt25 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %17, i32 0, i32 0, !dbg !6369
  %vec26 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt25, i32 0, i32 0, !dbg !6370
  %arrayidx27 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec26, i64 0, i64 0, !dbg !6367
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 0, !dbg !6367
  %18 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !6371
  %bezt29 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %18, i32 0, i32 0, !dbg !6372
  %vec30 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt29, i32 0, i32 0, !dbg !6373
  %arrayidx31 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec30, i64 0, i64 1, !dbg !6371
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx31, i64 0, i64 0, !dbg !6371
  %call33 = call float @len_v2v2(float* %arraydecay28, float* %arraydecay32), !dbg !6374
  %19 = load float, float* %length_average, align 4, !dbg !6375
  %add34 = fadd float %19, %call33, !dbg !6375
  store float %add34, float* %length_average, align 4, !dbg !6375
  %20 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !6376
  %bezt35 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %20, i32 0, i32 0, !dbg !6377
  %weight36 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt35, i32 0, i32 2, !dbg !6378
  %21 = load float, float* %weight36, align 8, !dbg !6378
  %22 = load float, float* %weight_average, align 4, !dbg !6379
  %add37 = fadd float %22, %21, !dbg !6379
  store float %add37, float* %weight_average, align 4, !dbg !6379
  %23 = load i32, i32* %length_tot, align 4, !dbg !6380
  %inc = add nsw i32 %23, 1, !dbg !6380
  store i32 %inc, i32* %length_tot, align 4, !dbg !6380
  br label %if.end, !dbg !6381

if.end:                                           ; preds = %if.then24, %if.else
  %24 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !6382
  %tobool38 = icmp ne %struct.MaskSplinePoint* %24, null, !dbg !6382
  br i1 %tobool38, label %if.then39, label %if.end54, !dbg !6384

if.then39:                                        ; preds = %if.end
  %25 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !6385
  %bezt40 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %25, i32 0, i32 0, !dbg !6387
  %vec41 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt40, i32 0, i32 0, !dbg !6388
  %arrayidx42 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec41, i64 0, i64 2, !dbg !6385
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 0, !dbg !6385
  %26 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !6389
  %bezt44 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %26, i32 0, i32 0, !dbg !6390
  %vec45 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt44, i32 0, i32 0, !dbg !6391
  %arrayidx46 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec45, i64 0, i64 1, !dbg !6389
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx46, i64 0, i64 0, !dbg !6389
  %call48 = call float @len_v2v2(float* %arraydecay43, float* %arraydecay47), !dbg !6392
  %27 = load float, float* %length_average, align 4, !dbg !6393
  %add49 = fadd float %27, %call48, !dbg !6393
  store float %add49, float* %length_average, align 4, !dbg !6393
  %28 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !6394
  %bezt50 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %28, i32 0, i32 0, !dbg !6395
  %weight51 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt50, i32 0, i32 2, !dbg !6396
  %29 = load float, float* %weight51, align 8, !dbg !6396
  %30 = load float, float* %weight_average, align 4, !dbg !6397
  %add52 = fadd float %30, %29, !dbg !6397
  store float %add52, float* %weight_average, align 4, !dbg !6397
  %31 = load i32, i32* %length_tot, align 4, !dbg !6398
  %inc53 = add nsw i32 %31, 1, !dbg !6398
  store i32 %inc53, i32* %length_tot, align 4, !dbg !6398
  br label %if.end54, !dbg !6399

if.end54:                                         ; preds = %if.then39, %if.end
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then
  %32 = load i32, i32* %length_tot, align 4, !dbg !6400
  %tobool56 = icmp ne i32 %32, 0, !dbg !6400
  br i1 %tobool56, label %if.then57, label %if.end78, !dbg !6402

if.then57:                                        ; preds = %if.end55
  %33 = load i32, i32* %length_tot, align 4, !dbg !6403
  %conv = sitofp i32 %33 to float, !dbg !6405
  %34 = load float, float* %length_average, align 4, !dbg !6406
  %div = fdiv float %34, %conv, !dbg !6406
  store float %div, float* %length_average, align 4, !dbg !6406
  %35 = load i32, i32* %length_tot, align 4, !dbg !6407
  %conv58 = sitofp i32 %35 to float, !dbg !6408
  %36 = load float, float* %weight_average, align 4, !dbg !6409
  %div59 = fdiv float %36, %conv58, !dbg !6409
  store float %div59, float* %weight_average, align 4, !dbg !6409
  %37 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6410
  %bezt60 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %37, i32 0, i32 0, !dbg !6411
  %vec61 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt60, i32 0, i32 0, !dbg !6412
  %arrayidx62 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec61, i64 0, i64 0, !dbg !6410
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx62, i64 0, i64 0, !dbg !6410
  %38 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6413
  %bezt64 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %38, i32 0, i32 0, !dbg !6414
  %vec65 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt64, i32 0, i32 0, !dbg !6415
  %arrayidx66 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec65, i64 0, i64 1, !dbg !6413
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx66, i64 0, i64 0, !dbg !6413
  %39 = load float, float* %length_average, align 4, !dbg !6416
  call void @dist_ensure_v2_v2fl(float* %arraydecay63, float* %arraydecay67, float %39), !dbg !6417
  %40 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6418
  %bezt68 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %40, i32 0, i32 0, !dbg !6419
  %vec69 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt68, i32 0, i32 0, !dbg !6420
  %arrayidx70 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec69, i64 0, i64 2, !dbg !6418
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx70, i64 0, i64 0, !dbg !6418
  %41 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6421
  %bezt72 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %41, i32 0, i32 0, !dbg !6422
  %vec73 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt72, i32 0, i32 0, !dbg !6423
  %arrayidx74 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec73, i64 0, i64 1, !dbg !6421
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx74, i64 0, i64 0, !dbg !6421
  %42 = load float, float* %length_average, align 4, !dbg !6424
  call void @dist_ensure_v2_v2fl(float* %arraydecay71, float* %arraydecay75, float %42), !dbg !6425
  %43 = load float, float* %weight_average, align 4, !dbg !6426
  %44 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6427
  %bezt76 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %44, i32 0, i32 0, !dbg !6428
  %weight77 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt76, i32 0, i32 2, !dbg !6429
  store float %43, float* %weight77, align 8, !dbg !6430
  br label %if.end78, !dbg !6431

if.end78:                                         ; preds = %if.then57, %if.end55
  ret void, !dbg !6432
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2v2(float* %v1, float* %v2) #0 !dbg !6433 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !6434, metadata !DIExpression()), !dbg !6435
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !6436, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.declare(metadata float* %x, metadata !6438, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.declare(metadata float* %y, metadata !6440, metadata !DIExpression()), !dbg !6441
  %0 = load float*, float** %v1.addr, align 8, !dbg !6442
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6442
  %1 = load float, float* %arrayidx, align 4, !dbg !6442
  %2 = load float*, float** %v2.addr, align 8, !dbg !6443
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6443
  %3 = load float, float* %arrayidx1, align 4, !dbg !6443
  %sub = fsub float %1, %3, !dbg !6444
  store float %sub, float* %x, align 4, !dbg !6445
  %4 = load float*, float** %v1.addr, align 8, !dbg !6446
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6446
  %5 = load float, float* %arrayidx2, align 4, !dbg !6446
  %6 = load float*, float** %v2.addr, align 8, !dbg !6447
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6447
  %7 = load float, float* %arrayidx3, align 4, !dbg !6447
  %sub4 = fsub float %5, %7, !dbg !6448
  store float %sub4, float* %y, align 4, !dbg !6449
  %8 = load float, float* %x, align 4, !dbg !6450
  %9 = load float, float* %x, align 4, !dbg !6451
  %mul = fmul float %8, %9, !dbg !6452
  %10 = load float, float* %y, align 4, !dbg !6453
  %11 = load float, float* %y, align 4, !dbg !6454
  %mul5 = fmul float %10, %11, !dbg !6455
  %add = fadd float %mul, %mul5, !dbg !6456
  %call = call float @sqrtf(float %add) #6, !dbg !6457
  ret float %call, !dbg !6458
}

declare dso_local void @dist_ensure_v2_v2fl(float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_calc_handle_point_auto(%struct.MaskSpline* %spline, %struct.MaskSplinePoint* %point, i8 zeroext %do_recalc_length) #0 !dbg !6459 {
entry:
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %do_recalc_length.addr = alloca i8, align 1
  %point_prev = alloca %struct.MaskSplinePoint*, align 8
  %point_next = alloca %struct.MaskSplinePoint*, align 8
  %h_back = alloca [2 x i8], align 1
  %length_average = alloca float, align 4
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !6462, metadata !DIExpression()), !dbg !6463
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !6464, metadata !DIExpression()), !dbg !6465
  store i8 %do_recalc_length, i8* %do_recalc_length.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_recalc_length.addr, metadata !6466, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_prev, metadata !6468, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_next, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.declare(metadata [2 x i8]* %h_back, metadata !6472, metadata !DIExpression()), !dbg !6474
  %arrayinit.begin = getelementptr inbounds [2 x i8], [2 x i8]* %h_back, i64 0, i64 0, !dbg !6475
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6476
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 0, !dbg !6477
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 5, !dbg !6478
  %1 = load i8, i8* %h1, align 1, !dbg !6478
  store i8 %1, i8* %arrayinit.begin, align 1, !dbg !6475
  %arrayinit.element = getelementptr inbounds i8, i8* %arrayinit.begin, i64 1, !dbg !6475
  %2 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6479
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %2, i32 0, i32 0, !dbg !6480
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt1, i32 0, i32 6, !dbg !6481
  %3 = load i8, i8* %h2, align 2, !dbg !6481
  store i8 %3, i8* %arrayinit.element, align 1, !dbg !6475
  call void @llvm.dbg.declare(metadata float* %length_average, metadata !6482, metadata !DIExpression()), !dbg !6483
  %4 = load i8, i8* %do_recalc_length.addr, align 1, !dbg !6484
  %conv = zext i8 %4 to i32, !dbg !6485
  %tobool = icmp ne i32 %conv, 0, !dbg !6485
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6485

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6485

cond.false:                                       ; preds = %entry
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6486
  %bezt2 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %5, i32 0, i32 0, !dbg !6487
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt2, i32 0, i32 0, !dbg !6488
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !6486
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6486
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6489
  %bezt3 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i32 0, i32 0, !dbg !6490
  %vec4 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt3, i32 0, i32 0, !dbg !6491
  %arrayidx5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec4, i64 0, i64 1, !dbg !6489
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !6489
  %call = call float @len_v3v3(float* %arraydecay, float* %arraydecay6), !dbg !6492
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6493
  %bezt7 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %7, i32 0, i32 0, !dbg !6494
  %vec8 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt7, i32 0, i32 0, !dbg !6495
  %arrayidx9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec8, i64 0, i64 1, !dbg !6493
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !6493
  %8 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6496
  %bezt11 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %8, i32 0, i32 0, !dbg !6497
  %vec12 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt11, i32 0, i32 0, !dbg !6498
  %arrayidx13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec12, i64 0, i64 2, !dbg !6496
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !6496
  %call15 = call float @len_v3v3(float* %arraydecay10, float* %arraydecay14), !dbg !6499
  %add = fadd float %call, %call15, !dbg !6500
  %div = fdiv float %add, 2.000000e+00, !dbg !6501
  br label %cond.end, !dbg !6485

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 0.000000e+00, %cond.true ], [ %div, %cond.false ], !dbg !6485
  store float %cond, float* %length_average, align 4, !dbg !6483
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6502
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6503
  call void @BKE_mask_get_handle_point_adjacent(%struct.MaskSpline* %9, %struct.MaskSplinePoint* %10, %struct.MaskSplinePoint** %point_prev, %struct.MaskSplinePoint** %point_next), !dbg !6504
  %11 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6505
  %bezt16 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %11, i32 0, i32 0, !dbg !6506
  %h117 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt16, i32 0, i32 5, !dbg !6507
  store i8 1, i8* %h117, align 1, !dbg !6508
  %12 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6509
  %bezt18 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %12, i32 0, i32 0, !dbg !6510
  %h219 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt18, i32 0, i32 6, !dbg !6511
  store i8 1, i8* %h219, align 2, !dbg !6512
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6513
  %14 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_prev, align 8, !dbg !6514
  %15 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_next, align 8, !dbg !6515
  call void @mask_calc_point_handle(%struct.MaskSplinePoint* %13, %struct.MaskSplinePoint* %14, %struct.MaskSplinePoint* %15), !dbg !6516
  %arrayidx20 = getelementptr inbounds [2 x i8], [2 x i8]* %h_back, i64 0, i64 0, !dbg !6517
  %16 = load i8, i8* %arrayidx20, align 1, !dbg !6517
  %17 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6518
  %bezt21 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %17, i32 0, i32 0, !dbg !6519
  %h122 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt21, i32 0, i32 5, !dbg !6520
  store i8 %16, i8* %h122, align 1, !dbg !6521
  %arrayidx23 = getelementptr inbounds [2 x i8], [2 x i8]* %h_back, i64 0, i64 1, !dbg !6522
  %18 = load i8, i8* %arrayidx23, align 1, !dbg !6522
  %19 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6523
  %bezt24 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %19, i32 0, i32 0, !dbg !6524
  %h225 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt24, i32 0, i32 6, !dbg !6525
  store i8 %18, i8* %h225, align 2, !dbg !6526
  %20 = load i8, i8* %do_recalc_length.addr, align 1, !dbg !6527
  %conv26 = zext i8 %20 to i32, !dbg !6527
  %cmp = icmp eq i32 %conv26, 0, !dbg !6529
  br i1 %cmp, label %if.then, label %if.end, !dbg !6530

if.then:                                          ; preds = %cond.end
  %21 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6531
  %bezt28 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %21, i32 0, i32 0, !dbg !6533
  %vec29 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt28, i32 0, i32 0, !dbg !6534
  %arrayidx30 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec29, i64 0, i64 0, !dbg !6531
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx30, i64 0, i64 0, !dbg !6531
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6535
  %bezt32 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %22, i32 0, i32 0, !dbg !6536
  %vec33 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt32, i32 0, i32 0, !dbg !6537
  %arrayidx34 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec33, i64 0, i64 1, !dbg !6535
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx34, i64 0, i64 0, !dbg !6535
  %23 = load float, float* %length_average, align 4, !dbg !6538
  call void @dist_ensure_v2_v2fl(float* %arraydecay31, float* %arraydecay35, float %23), !dbg !6539
  %24 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6540
  %bezt36 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %24, i32 0, i32 0, !dbg !6541
  %vec37 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt36, i32 0, i32 0, !dbg !6542
  %arrayidx38 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec37, i64 0, i64 2, !dbg !6540
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx38, i64 0, i64 0, !dbg !6540
  %25 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6543
  %bezt40 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %25, i32 0, i32 0, !dbg !6544
  %vec41 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt40, i32 0, i32 0, !dbg !6545
  %arrayidx42 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec41, i64 0, i64 1, !dbg !6543
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 0, !dbg !6543
  %26 = load float, float* %length_average, align 4, !dbg !6546
  call void @dist_ensure_v2_v2fl(float* %arraydecay39, float* %arraydecay43, float %26), !dbg !6547
  br label %if.end, !dbg !6548

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !6549
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !6550 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6551, metadata !DIExpression()), !dbg !6552
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6553, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !6555, metadata !DIExpression()), !dbg !6556
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !6557
  %0 = load float*, float** %b.addr, align 8, !dbg !6558
  %1 = load float*, float** %a.addr, align 8, !dbg !6559
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !6560
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !6561
  %call = call float @len_v3(float* %arraydecay1), !dbg !6562
  ret float %call, !dbg !6563
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_calc_handles(%struct.MaskLayer* %masklay) #0 !dbg !6564 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %i = alloca i32, align 4
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !6565, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !6567, metadata !DIExpression()), !dbg !6568
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !6569
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %0, i32 0, i32 3, !dbg !6571
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !6572
  %1 = load i8*, i8** %first, align 8, !dbg !6572
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !6569
  store %struct.MaskSpline* %2, %struct.MaskSpline** %spline, align 8, !dbg !6573
  br label %for.cond, !dbg !6574

for.cond:                                         ; preds = %for.inc3, %entry
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6575
  %tobool = icmp ne %struct.MaskSpline* %3, null, !dbg !6577
  br i1 %tobool, label %for.body, label %for.end4, !dbg !6577

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6578, metadata !DIExpression()), !dbg !6580
  store i32 0, i32* %i, align 4, !dbg !6581
  br label %for.cond1, !dbg !6583

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %i, align 4, !dbg !6584
  %5 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6586
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %5, i32 0, i32 5, !dbg !6587
  %6 = load i32, i32* %tot_point, align 4, !dbg !6587
  %cmp = icmp slt i32 %4, %6, !dbg !6588
  br i1 %cmp, label %for.body2, label %for.end, !dbg !6589

for.body2:                                        ; preds = %for.cond1
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6590
  %8 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6592
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %8, i32 0, i32 6, !dbg !6593
  %9 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !6593
  %10 = load i32, i32* %i, align 4, !dbg !6594
  %idxprom = sext i32 %10 to i64, !dbg !6592
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %9, i64 %idxprom, !dbg !6592
  call void @BKE_mask_calc_handle_point(%struct.MaskSpline* %7, %struct.MaskSplinePoint* %arrayidx), !dbg !6595
  br label %for.inc, !dbg !6596

for.inc:                                          ; preds = %for.body2
  %11 = load i32, i32* %i, align 4, !dbg !6597
  %inc = add nsw i32 %11, 1, !dbg !6597
  store i32 %inc, i32* %i, align 4, !dbg !6597
  br label %for.cond1, !dbg !6598, !llvm.loop !6599

for.end:                                          ; preds = %for.cond1
  br label %for.inc3, !dbg !6601

for.inc3:                                         ; preds = %for.end
  %12 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6602
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %12, i32 0, i32 0, !dbg !6603
  %13 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !6603
  store %struct.MaskSpline* %13, %struct.MaskSpline** %spline, align 8, !dbg !6604
  br label %for.cond, !dbg !6605, !llvm.loop !6606

for.end4:                                         ; preds = %for.cond
  ret void, !dbg !6608
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_spline_ensure_deform(%struct.MaskSpline* %spline) #0 !dbg !6609 {
entry:
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %allocated_points = alloca i32, align 4
  %i = alloca i32, align 4
  %point = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !6610, metadata !DIExpression()), !dbg !6611
  call void @llvm.dbg.declare(metadata i32* %allocated_points, metadata !6612, metadata !DIExpression()), !dbg !6613
  %0 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !6614
  %1 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6615
  %points_deform = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %1, i32 0, i32 8, !dbg !6616
  %2 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform, align 8, !dbg !6616
  %3 = bitcast %struct.MaskSplinePoint* %2 to i8*, !dbg !6615
  %call = call i64 %0(i8* %3), !dbg !6614
  %div = udiv i64 %call, 272, !dbg !6617
  %conv = trunc i64 %div to i32, !dbg !6618
  store i32 %conv, i32* %allocated_points, align 4, !dbg !6613
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6619
  %points_deform1 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %4, i32 0, i32 8, !dbg !6621
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform1, align 8, !dbg !6621
  %cmp = icmp eq %struct.MaskSplinePoint* %5, null, !dbg !6622
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6623

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* %allocated_points, align 4, !dbg !6624
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6625
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %7, i32 0, i32 5, !dbg !6626
  %8 = load i32, i32* %tot_point, align 4, !dbg !6626
  %cmp3 = icmp ne i32 %6, %8, !dbg !6627
  br i1 %cmp3, label %if.then, label %if.else, !dbg !6628

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6629
  %points_deform5 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %9, i32 0, i32 8, !dbg !6632
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform5, align 8, !dbg !6632
  %tobool = icmp ne %struct.MaskSplinePoint* %10, null, !dbg !6629
  br i1 %tobool, label %if.then6, label %if.end, !dbg !6633

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6634, metadata !DIExpression()), !dbg !6636
  store i32 0, i32* %i, align 4, !dbg !6637
  br label %for.cond, !dbg !6639

for.cond:                                         ; preds = %for.inc, %if.then6
  %11 = load i32, i32* %i, align 4, !dbg !6640
  %12 = load i32, i32* %allocated_points, align 4, !dbg !6642
  %cmp7 = icmp slt i32 %11, %12, !dbg !6643
  br i1 %cmp7, label %for.body, label %for.end, !dbg !6644

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !6645, metadata !DIExpression()), !dbg !6647
  %13 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6648
  %points_deform9 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %13, i32 0, i32 8, !dbg !6649
  %14 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform9, align 8, !dbg !6649
  %15 = load i32, i32* %i, align 4, !dbg !6650
  %idxprom = sext i32 %15 to i64, !dbg !6648
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %14, i64 %idxprom, !dbg !6648
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !6647
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6651
  call void @BKE_mask_point_free(%struct.MaskSplinePoint* %16), !dbg !6652
  br label %for.inc, !dbg !6653

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !6654
  %inc = add nsw i32 %17, 1, !dbg !6654
  store i32 %inc, i32* %i, align 4, !dbg !6654
  br label %for.cond, !dbg !6655, !llvm.loop !6656

for.end:                                          ; preds = %for.cond
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6658
  %19 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6659
  %points_deform10 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %19, i32 0, i32 8, !dbg !6660
  %20 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform10, align 8, !dbg !6660
  %21 = bitcast %struct.MaskSplinePoint* %20 to i8*, !dbg !6659
  call void %18(i8* %21), !dbg !6658
  br label %if.end, !dbg !6661

if.end:                                           ; preds = %for.end, %if.then
  %22 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6662
  %23 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6663
  %tot_point11 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %23, i32 0, i32 5, !dbg !6664
  %24 = load i32, i32* %tot_point11, align 4, !dbg !6664
  %conv12 = sext i32 %24 to i64, !dbg !6663
  %mul = mul i64 272, %conv12, !dbg !6665
  %call13 = call i8* %22(i64 %mul, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.BKE_mask_spline_ensure_deform, i64 0, i64 0)), !dbg !6662
  %25 = bitcast i8* %call13 to %struct.MaskSplinePoint*, !dbg !6662
  %26 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !6666
  %points_deform14 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %26, i32 0, i32 8, !dbg !6667
  store %struct.MaskSplinePoint* %25, %struct.MaskSplinePoint** %points_deform14, align 8, !dbg !6668
  br label %if.end15, !dbg !6669

if.else:                                          ; preds = %lor.lhs.false
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.end
  ret void, !dbg !6670
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_evaluate(%struct.MaskLayer* %masklay, float %ctime, i8 zeroext %do_newframe) #0 !dbg !6671 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %ctime.addr = alloca float, align 4
  %do_newframe.addr = alloca i8, align 1
  %masklay_shape_a = alloca %struct.MaskLayerShape*, align 8
  %masklay_shape_b = alloca %struct.MaskLayerShape*, align 8
  %found = alloca i32, align 4
  %w = alloca float, align 4
  %spline = alloca %struct.MaskSpline*, align 8
  %i = alloca i32, align 4
  %need_handle_recalc = alloca i8, align 1
  %point = alloca %struct.MaskSplinePoint*, align 8
  %point_deform = alloca %struct.MaskSplinePoint*, align 8
  %point_deform42 = alloca %struct.MaskSplinePoint*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !6674, metadata !DIExpression()), !dbg !6675
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !6676, metadata !DIExpression()), !dbg !6677
  store i8 %do_newframe, i8* %do_newframe.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_newframe.addr, metadata !6678, metadata !DIExpression()), !dbg !6679
  %0 = load i8, i8* %do_newframe.addr, align 1, !dbg !6680
  %tobool = icmp ne i8 %0, 0, !dbg !6680
  br i1 %tobool, label %if.then, label %if.end13, !dbg !6682

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape_a, metadata !6683, metadata !DIExpression()), !dbg !6685
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape_b, metadata !6686, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.declare(metadata i32* %found, metadata !6688, metadata !DIExpression()), !dbg !6689
  %1 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !6690
  %2 = load float, float* %ctime.addr, align 4, !dbg !6692
  %call = call i32 @BKE_mask_layer_shape_find_frame_range(%struct.MaskLayer* %1, float %2, %struct.MaskLayerShape** %masklay_shape_a, %struct.MaskLayerShape** %masklay_shape_b), !dbg !6693
  store i32 %call, i32* %found, align 4, !dbg !6694
  %tobool1 = icmp ne i32 %call, 0, !dbg !6694
  br i1 %tobool1, label %if.then2, label %if.end12, !dbg !6695

if.then2:                                         ; preds = %if.then
  %3 = load i32, i32* %found, align 4, !dbg !6696
  %cmp = icmp eq i32 %3, 1, !dbg !6699
  br i1 %cmp, label %if.then3, label %if.else, !dbg !6700

if.then3:                                         ; preds = %if.then2
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !6701
  %5 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_a, align 8, !dbg !6703
  call void @BKE_mask_layer_shape_to_mask(%struct.MaskLayer* %4, %struct.MaskLayerShape* %5), !dbg !6704
  br label %if.end11, !dbg !6705

if.else:                                          ; preds = %if.then2
  %6 = load i32, i32* %found, align 4, !dbg !6706
  %cmp4 = icmp eq i32 %6, 2, !dbg !6708
  br i1 %cmp4, label %if.then5, label %if.else10, !dbg !6709

if.then5:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %w, metadata !6710, metadata !DIExpression()), !dbg !6712
  %7 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_b, align 8, !dbg !6713
  %frame = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %7, i32 0, i32 4, !dbg !6714
  %8 = load i32, i32* %frame, align 4, !dbg !6714
  %9 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_a, align 8, !dbg !6715
  %frame6 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %9, i32 0, i32 4, !dbg !6716
  %10 = load i32, i32* %frame6, align 4, !dbg !6716
  %sub = sub nsw i32 %8, %10, !dbg !6717
  %conv = sitofp i32 %sub to float, !dbg !6713
  store float %conv, float* %w, align 4, !dbg !6712
  %11 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !6718
  %12 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_a, align 8, !dbg !6719
  %13 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_b, align 8, !dbg !6720
  %14 = load float, float* %ctime.addr, align 4, !dbg !6721
  %15 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_a, align 8, !dbg !6722
  %frame7 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %15, i32 0, i32 4, !dbg !6723
  %16 = load i32, i32* %frame7, align 4, !dbg !6723
  %conv8 = sitofp i32 %16 to float, !dbg !6722
  %sub9 = fsub float %14, %conv8, !dbg !6724
  %17 = load float, float* %w, align 4, !dbg !6725
  %div = fdiv float %sub9, %17, !dbg !6726
  call void @BKE_mask_layer_shape_to_mask_interp(%struct.MaskLayer* %11, %struct.MaskLayerShape* %12, %struct.MaskLayerShape* %13, float %div), !dbg !6727
  br label %if.end, !dbg !6728

if.else10:                                        ; preds = %if.else
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then5
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then3
  br label %if.end12, !dbg !6729

if.end12:                                         ; preds = %if.end11, %if.then
  br label %if.end13, !dbg !6730

if.end13:                                         ; preds = %if.end12, %entry
  %18 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !6731
  call void @BKE_mask_layer_calc_handles(%struct.MaskLayer* %18), !dbg !6732
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !6733, metadata !DIExpression()), !dbg !6735
  %19 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !6736
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %19, i32 0, i32 3, !dbg !6738
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !6739
  %20 = load i8*, i8** %first, align 8, !dbg !6739
  %21 = bitcast i8* %20 to %struct.MaskSpline*, !dbg !6736
  store %struct.MaskSpline* %21, %struct.MaskSpline** %spline, align 8, !dbg !6740
  br label %for.cond, !dbg !6741

for.cond:                                         ; preds = %for.inc63, %if.end13
  %22 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6742
  %tobool14 = icmp ne %struct.MaskSpline* %22, null, !dbg !6744
  br i1 %tobool14, label %for.body, label %for.end64, !dbg !6744

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6745, metadata !DIExpression()), !dbg !6747
  call void @llvm.dbg.declare(metadata i8* %need_handle_recalc, metadata !6748, metadata !DIExpression()), !dbg !6749
  store i8 0, i8* %need_handle_recalc, align 1, !dbg !6749
  %23 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6750
  call void @BKE_mask_spline_ensure_deform(%struct.MaskSpline* %23), !dbg !6751
  store i32 0, i32* %i, align 4, !dbg !6752
  br label %for.cond15, !dbg !6754

for.cond15:                                       ; preds = %for.inc, %for.body
  %24 = load i32, i32* %i, align 4, !dbg !6755
  %25 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6757
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %25, i32 0, i32 5, !dbg !6758
  %26 = load i32, i32* %tot_point, align 4, !dbg !6758
  %cmp16 = icmp slt i32 %24, %26, !dbg !6759
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !6760

for.body18:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !6761, metadata !DIExpression()), !dbg !6763
  %27 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6764
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %27, i32 0, i32 6, !dbg !6765
  %28 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !6765
  %29 = load i32, i32* %i, align 4, !dbg !6766
  %idxprom = sext i32 %29 to i64, !dbg !6764
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %28, i64 %idxprom, !dbg !6764
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !6763
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_deform, metadata !6767, metadata !DIExpression()), !dbg !6768
  %30 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6769
  %points_deform = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %30, i32 0, i32 8, !dbg !6770
  %31 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform, align 8, !dbg !6770
  %32 = load i32, i32* %i, align 4, !dbg !6771
  %idxprom19 = sext i32 %32 to i64, !dbg !6769
  %arrayidx20 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %31, i64 %idxprom19, !dbg !6769
  store %struct.MaskSplinePoint* %arrayidx20, %struct.MaskSplinePoint** %point_deform, align 8, !dbg !6768
  %33 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_deform, align 8, !dbg !6772
  call void @BKE_mask_point_free(%struct.MaskSplinePoint* %33), !dbg !6773
  %34 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_deform, align 8, !dbg !6774
  %35 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6775
  %36 = bitcast %struct.MaskSplinePoint* %34 to i8*, !dbg !6776
  %37 = bitcast %struct.MaskSplinePoint* %35 to i8*, !dbg !6776
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 272, i1 false), !dbg !6776
  %38 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6777
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %38, i32 0, i32 3, !dbg !6778
  %39 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !6778
  %tobool21 = icmp ne %struct.MaskSplinePointUW* %39, null, !dbg !6777
  br i1 %tobool21, label %cond.true, label %cond.false, !dbg !6777

cond.true:                                        ; preds = %for.body18
  %40 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !6779
  %41 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6780
  %uw22 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %41, i32 0, i32 3, !dbg !6781
  %42 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw22, align 8, !dbg !6781
  %43 = bitcast %struct.MaskSplinePointUW* %42 to i8*, !dbg !6780
  %call23 = call i8* %40(i8* %43), !dbg !6779
  br label %cond.end, !dbg !6777

cond.false:                                       ; preds = %for.body18
  br label %cond.end, !dbg !6777

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call23, %cond.true ], [ null, %cond.false ], !dbg !6777
  %44 = bitcast i8* %cond to %struct.MaskSplinePointUW*, !dbg !6777
  %45 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_deform, align 8, !dbg !6782
  %uw24 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %45, i32 0, i32 3, !dbg !6783
  store %struct.MaskSplinePointUW* %44, %struct.MaskSplinePointUW** %uw24, align 8, !dbg !6784
  %46 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_deform, align 8, !dbg !6785
  %47 = load float, float* %ctime.addr, align 4, !dbg !6786
  call void @mask_evaluate_apply_point_parent(%struct.MaskSplinePoint* %46, float %47), !dbg !6787
  %48 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6788
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %48, i32 0, i32 0, !dbg !6788
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 5, !dbg !6788
  %49 = load i8, i8* %h1, align 1, !dbg !6788
  %conv25 = zext i8 %49 to i32, !dbg !6788
  %cmp26 = icmp eq i32 %conv25, 1, !dbg !6788
  br i1 %cmp26, label %if.then33, label %lor.lhs.false, !dbg !6788

lor.lhs.false:                                    ; preds = %cond.end
  %50 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !6788
  %bezt28 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %50, i32 0, i32 0, !dbg !6788
  %h129 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt28, i32 0, i32 5, !dbg !6788
  %51 = load i8, i8* %h129, align 1, !dbg !6788
  %conv30 = zext i8 %51 to i32, !dbg !6788
  %cmp31 = icmp eq i32 %conv30, 2, !dbg !6788
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !6790

if.then33:                                        ; preds = %lor.lhs.false, %cond.end
  store i8 1, i8* %need_handle_recalc, align 1, !dbg !6791
  br label %if.end34, !dbg !6793

if.end34:                                         ; preds = %if.then33, %lor.lhs.false
  br label %for.inc, !dbg !6794

for.inc:                                          ; preds = %if.end34
  %52 = load i32, i32* %i, align 4, !dbg !6795
  %inc = add nsw i32 %52, 1, !dbg !6795
  store i32 %inc, i32* %i, align 4, !dbg !6795
  br label %for.cond15, !dbg !6796, !llvm.loop !6797

for.end:                                          ; preds = %for.cond15
  %53 = load i8, i8* %need_handle_recalc, align 1, !dbg !6799
  %tobool35 = icmp ne i8 %53, 0, !dbg !6799
  br i1 %tobool35, label %if.then36, label %if.end62, !dbg !6801

if.then36:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !6802
  br label %for.cond37, !dbg !6805

for.cond37:                                       ; preds = %for.inc59, %if.then36
  %54 = load i32, i32* %i, align 4, !dbg !6806
  %55 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6808
  %tot_point38 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %55, i32 0, i32 5, !dbg !6809
  %56 = load i32, i32* %tot_point38, align 4, !dbg !6809
  %cmp39 = icmp slt i32 %54, %56, !dbg !6810
  br i1 %cmp39, label %for.body41, label %for.end61, !dbg !6811

for.body41:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point_deform42, metadata !6812, metadata !DIExpression()), !dbg !6814
  %57 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6815
  %points_deform43 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %57, i32 0, i32 8, !dbg !6816
  %58 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points_deform43, align 8, !dbg !6816
  %59 = load i32, i32* %i, align 4, !dbg !6817
  %idxprom44 = sext i32 %59 to i64, !dbg !6815
  %arrayidx45 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %58, i64 %idxprom44, !dbg !6815
  store %struct.MaskSplinePoint* %arrayidx45, %struct.MaskSplinePoint** %point_deform42, align 8, !dbg !6814
  %60 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_deform42, align 8, !dbg !6818
  %bezt46 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %60, i32 0, i32 0, !dbg !6818
  %h147 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt46, i32 0, i32 5, !dbg !6818
  %61 = load i8, i8* %h147, align 1, !dbg !6818
  %conv48 = zext i8 %61 to i32, !dbg !6818
  %cmp49 = icmp eq i32 %conv48, 1, !dbg !6818
  br i1 %cmp49, label %if.then57, label %lor.lhs.false51, !dbg !6818

lor.lhs.false51:                                  ; preds = %for.body41
  %62 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_deform42, align 8, !dbg !6818
  %bezt52 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %62, i32 0, i32 0, !dbg !6818
  %h153 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt52, i32 0, i32 5, !dbg !6818
  %63 = load i8, i8* %h153, align 1, !dbg !6818
  %conv54 = zext i8 %63 to i32, !dbg !6818
  %cmp55 = icmp eq i32 %conv54, 2, !dbg !6818
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !6820

if.then57:                                        ; preds = %lor.lhs.false51, %for.body41
  %64 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6821
  %65 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point_deform42, align 8, !dbg !6823
  call void @BKE_mask_calc_handle_point(%struct.MaskSpline* %64, %struct.MaskSplinePoint* %65), !dbg !6824
  br label %if.end58, !dbg !6825

if.end58:                                         ; preds = %if.then57, %lor.lhs.false51
  br label %for.inc59, !dbg !6826

for.inc59:                                        ; preds = %if.end58
  %66 = load i32, i32* %i, align 4, !dbg !6827
  %inc60 = add nsw i32 %66, 1, !dbg !6827
  store i32 %inc60, i32* %i, align 4, !dbg !6827
  br label %for.cond37, !dbg !6828, !llvm.loop !6829

for.end61:                                        ; preds = %for.cond37
  br label %if.end62, !dbg !6831

if.end62:                                         ; preds = %for.end61, %for.end
  br label %for.inc63, !dbg !6832

for.inc63:                                        ; preds = %if.end62
  %67 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6833
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %67, i32 0, i32 0, !dbg !6834
  %68 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !6834
  store %struct.MaskSpline* %68, %struct.MaskSpline** %spline, align 8, !dbg !6835
  br label %for.cond, !dbg !6836, !llvm.loop !6837

for.end64:                                        ; preds = %for.cond
  ret void, !dbg !6839
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_mask_layer_shape_find_frame_range(%struct.MaskLayer* %masklay, float %frame, %struct.MaskLayerShape** %r_masklay_shape_a, %struct.MaskLayerShape** %r_masklay_shape_b) #0 !dbg !6840 {
entry:
  %retval = alloca i32, align 4
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %frame.addr = alloca float, align 4
  %r_masklay_shape_a.addr = alloca %struct.MaskLayerShape**, align 8
  %r_masklay_shape_b.addr = alloca %struct.MaskLayerShape**, align 8
  %masklay_shape = alloca %struct.MaskLayerShape*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !6844, metadata !DIExpression()), !dbg !6845
  store float %frame, float* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata float* %frame.addr, metadata !6846, metadata !DIExpression()), !dbg !6847
  store %struct.MaskLayerShape** %r_masklay_shape_a, %struct.MaskLayerShape*** %r_masklay_shape_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape*** %r_masklay_shape_a.addr, metadata !6848, metadata !DIExpression()), !dbg !6849
  store %struct.MaskLayerShape** %r_masklay_shape_b, %struct.MaskLayerShape*** %r_masklay_shape_b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape*** %r_masklay_shape_b.addr, metadata !6850, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape, metadata !6852, metadata !DIExpression()), !dbg !6853
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !6854
  %splines_shapes = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %0, i32 0, i32 4, !dbg !6856
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes, i32 0, i32 0, !dbg !6857
  %1 = load i8*, i8** %first, align 8, !dbg !6857
  %2 = bitcast i8* %1 to %struct.MaskLayerShape*, !dbg !6854
  store %struct.MaskLayerShape* %2, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6858
  br label %for.cond, !dbg !6859

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6860
  %tobool = icmp ne %struct.MaskLayerShape* %3, null, !dbg !6862
  br i1 %tobool, label %for.body, label %for.end, !dbg !6862

for.body:                                         ; preds = %for.cond
  %4 = load float, float* %frame.addr, align 4, !dbg !6863
  %5 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6866
  %frame1 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %5, i32 0, i32 4, !dbg !6867
  %6 = load i32, i32* %frame1, align 4, !dbg !6867
  %conv = sitofp i32 %6 to float, !dbg !6866
  %cmp = fcmp oeq float %4, %conv, !dbg !6868
  br i1 %cmp, label %if.then, label %if.else, !dbg !6869

if.then:                                          ; preds = %for.body
  %7 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6870
  %8 = load %struct.MaskLayerShape**, %struct.MaskLayerShape*** %r_masklay_shape_a.addr, align 8, !dbg !6872
  store %struct.MaskLayerShape* %7, %struct.MaskLayerShape** %8, align 8, !dbg !6873
  %9 = load %struct.MaskLayerShape**, %struct.MaskLayerShape*** %r_masklay_shape_b.addr, align 8, !dbg !6874
  store %struct.MaskLayerShape* null, %struct.MaskLayerShape** %9, align 8, !dbg !6875
  store i32 1, i32* %retval, align 4, !dbg !6876
  br label %return, !dbg !6876

if.else:                                          ; preds = %for.body
  %10 = load float, float* %frame.addr, align 4, !dbg !6877
  %11 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6879
  %frame3 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %11, i32 0, i32 4, !dbg !6880
  %12 = load i32, i32* %frame3, align 4, !dbg !6880
  %conv4 = sitofp i32 %12 to float, !dbg !6879
  %cmp5 = fcmp olt float %10, %conv4, !dbg !6881
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !6882

if.then7:                                         ; preds = %if.else
  %13 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6883
  %prev = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %13, i32 0, i32 1, !dbg !6886
  %14 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %prev, align 8, !dbg !6886
  %tobool8 = icmp ne %struct.MaskLayerShape* %14, null, !dbg !6883
  br i1 %tobool8, label %if.then9, label %if.else11, !dbg !6887

if.then9:                                         ; preds = %if.then7
  %15 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6888
  %prev10 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %15, i32 0, i32 1, !dbg !6890
  %16 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %prev10, align 8, !dbg !6890
  %17 = load %struct.MaskLayerShape**, %struct.MaskLayerShape*** %r_masklay_shape_a.addr, align 8, !dbg !6891
  store %struct.MaskLayerShape* %16, %struct.MaskLayerShape** %17, align 8, !dbg !6892
  %18 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6893
  %19 = load %struct.MaskLayerShape**, %struct.MaskLayerShape*** %r_masklay_shape_b.addr, align 8, !dbg !6894
  store %struct.MaskLayerShape* %18, %struct.MaskLayerShape** %19, align 8, !dbg !6895
  store i32 2, i32* %retval, align 4, !dbg !6896
  br label %return, !dbg !6896

if.else11:                                        ; preds = %if.then7
  %20 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6897
  %21 = load %struct.MaskLayerShape**, %struct.MaskLayerShape*** %r_masklay_shape_a.addr, align 8, !dbg !6899
  store %struct.MaskLayerShape* %20, %struct.MaskLayerShape** %21, align 8, !dbg !6900
  %22 = load %struct.MaskLayerShape**, %struct.MaskLayerShape*** %r_masklay_shape_b.addr, align 8, !dbg !6901
  store %struct.MaskLayerShape* null, %struct.MaskLayerShape** %22, align 8, !dbg !6902
  store i32 1, i32* %retval, align 4, !dbg !6903
  br label %return, !dbg !6903

if.end:                                           ; preds = %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end
  br label %for.inc, !dbg !6904

for.inc:                                          ; preds = %if.end12
  %23 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6905
  %next = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %23, i32 0, i32 0, !dbg !6906
  %24 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %next, align 8, !dbg !6906
  store %struct.MaskLayerShape* %24, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6907
  br label %for.cond, !dbg !6908, !llvm.loop !6909

for.end:                                          ; preds = %for.cond
  %25 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !6911
  %splines_shapes13 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %25, i32 0, i32 4, !dbg !6913
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes13, i32 0, i32 1, !dbg !6914
  %26 = load i8*, i8** %last, align 8, !dbg !6914
  %27 = bitcast i8* %26 to %struct.MaskLayerShape*, !dbg !6911
  store %struct.MaskLayerShape* %27, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6915
  %tobool14 = icmp ne %struct.MaskLayerShape* %27, null, !dbg !6915
  br i1 %tobool14, label %if.then15, label %if.else16, !dbg !6916

if.then15:                                        ; preds = %for.end
  %28 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !6917
  %29 = load %struct.MaskLayerShape**, %struct.MaskLayerShape*** %r_masklay_shape_a.addr, align 8, !dbg !6919
  store %struct.MaskLayerShape* %28, %struct.MaskLayerShape** %29, align 8, !dbg !6920
  %30 = load %struct.MaskLayerShape**, %struct.MaskLayerShape*** %r_masklay_shape_b.addr, align 8, !dbg !6921
  store %struct.MaskLayerShape* null, %struct.MaskLayerShape** %30, align 8, !dbg !6922
  store i32 1, i32* %retval, align 4, !dbg !6923
  br label %return, !dbg !6923

if.else16:                                        ; preds = %for.end
  %31 = load %struct.MaskLayerShape**, %struct.MaskLayerShape*** %r_masklay_shape_a.addr, align 8, !dbg !6924
  store %struct.MaskLayerShape* null, %struct.MaskLayerShape** %31, align 8, !dbg !6926
  %32 = load %struct.MaskLayerShape**, %struct.MaskLayerShape*** %r_masklay_shape_b.addr, align 8, !dbg !6927
  store %struct.MaskLayerShape* null, %struct.MaskLayerShape** %32, align 8, !dbg !6928
  store i32 0, i32* %retval, align 4, !dbg !6929
  br label %return, !dbg !6929

return:                                           ; preds = %if.else16, %if.then15, %if.else11, %if.then9, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !6930
  ret i32 %33, !dbg !6930
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_shape_to_mask(%struct.MaskLayer* %masklay, %struct.MaskLayerShape* %masklay_shape) #0 !dbg !6931 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %masklay_shape.addr = alloca %struct.MaskLayerShape*, align 8
  %tot = alloca i32, align 4
  %fp = alloca float*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %i = alloca i32, align 4
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !6934, metadata !DIExpression()), !dbg !6935
  store %struct.MaskLayerShape* %masklay_shape, %struct.MaskLayerShape** %masklay_shape.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape.addr, metadata !6936, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6938, metadata !DIExpression()), !dbg !6939
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !6940
  %call = call i32 @BKE_mask_layer_shape_totvert(%struct.MaskLayer* %0), !dbg !6941
  store i32 %call, i32* %tot, align 4, !dbg !6939
  %1 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !6942
  %tot_vert = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %1, i32 0, i32 3, !dbg !6944
  %2 = load i32, i32* %tot_vert, align 8, !dbg !6944
  %3 = load i32, i32* %tot, align 4, !dbg !6945
  %cmp = icmp eq i32 %2, %3, !dbg !6946
  br i1 %cmp, label %if.then, label %if.else, !dbg !6947

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %fp, metadata !6948, metadata !DIExpression()), !dbg !6950
  %4 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !6951
  %data = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %4, i32 0, i32 2, !dbg !6952
  %5 = load float*, float** %data, align 8, !dbg !6952
  store float* %5, float** %fp, align 8, !dbg !6950
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !6953, metadata !DIExpression()), !dbg !6954
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !6955
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 3, !dbg !6957
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !6958
  %7 = load i8*, i8** %first, align 8, !dbg !6958
  %8 = bitcast i8* %7 to %struct.MaskSpline*, !dbg !6955
  store %struct.MaskSpline* %8, %struct.MaskSpline** %spline, align 8, !dbg !6959
  br label %for.cond, !dbg !6960

for.cond:                                         ; preds = %for.inc4, %if.then
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6961
  %tobool = icmp ne %struct.MaskSpline* %9, null, !dbg !6963
  br i1 %tobool, label %for.body, label %for.end5, !dbg !6963

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6964, metadata !DIExpression()), !dbg !6966
  store i32 0, i32* %i, align 4, !dbg !6967
  br label %for.cond1, !dbg !6969

for.cond1:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !6970
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6972
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %11, i32 0, i32 5, !dbg !6973
  %12 = load i32, i32* %tot_point, align 4, !dbg !6973
  %cmp2 = icmp slt i32 %10, %12, !dbg !6974
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !6975

for.body3:                                        ; preds = %for.cond1
  %13 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6976
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %13, i32 0, i32 6, !dbg !6978
  %14 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !6978
  %15 = load i32, i32* %i, align 4, !dbg !6979
  %idxprom = sext i32 %15 to i64, !dbg !6976
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %14, i64 %idxprom, !dbg !6976
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx, i32 0, i32 0, !dbg !6980
  %16 = load float*, float** %fp, align 8, !dbg !6981
  call void @mask_layer_shape_to_mask_point(%struct.BezTriple* %bezt, float* %16), !dbg !6982
  %17 = load float*, float** %fp, align 8, !dbg !6983
  %add.ptr = getelementptr inbounds float, float* %17, i64 8, !dbg !6983
  store float* %add.ptr, float** %fp, align 8, !dbg !6983
  br label %for.inc, !dbg !6984

for.inc:                                          ; preds = %for.body3
  %18 = load i32, i32* %i, align 4, !dbg !6985
  %inc = add nsw i32 %18, 1, !dbg !6985
  store i32 %inc, i32* %i, align 4, !dbg !6985
  br label %for.cond1, !dbg !6986, !llvm.loop !6987

for.end:                                          ; preds = %for.cond1
  br label %for.inc4, !dbg !6989

for.inc4:                                         ; preds = %for.end
  %19 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6990
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %19, i32 0, i32 0, !dbg !6991
  %20 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !6991
  store %struct.MaskSpline* %20, %struct.MaskSpline** %spline, align 8, !dbg !6992
  br label %for.cond, !dbg !6993, !llvm.loop !6994

for.end5:                                         ; preds = %for.cond
  br label %if.end, !dbg !6996

if.else:                                          ; preds = %entry
  %21 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !6997
  %tot_vert6 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %21, i32 0, i32 3, !dbg !6999
  %22 = load i32, i32* %tot_vert6, align 8, !dbg !6999
  %23 = load i32, i32* %tot, align 4, !dbg !7000
  %24 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !7001
  %frame = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %24, i32 0, i32 4, !dbg !7002
  %25 = load i32, i32* %frame, align 4, !dbg !7002
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.BKE_mask_layer_shape_to_mask, i64 0, i64 0), i32 %22, i32 %23, i32 %25), !dbg !7003
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end5
  ret void, !dbg !7004
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_shape_to_mask_interp(%struct.MaskLayer* %masklay, %struct.MaskLayerShape* %masklay_shape_a, %struct.MaskLayerShape* %masklay_shape_b, float %fac) #0 !dbg !7005 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %masklay_shape_a.addr = alloca %struct.MaskLayerShape*, align 8
  %masklay_shape_b.addr = alloca %struct.MaskLayerShape*, align 8
  %fac.addr = alloca float, align 4
  %tot = alloca i32, align 4
  %fp_a = alloca float*, align 8
  %fp_b = alloca float*, align 8
  %ifac = alloca float, align 4
  %spline = alloca %struct.MaskSpline*, align 8
  %i = alloca i32, align 4
  %bezt = alloca %struct.BezTriple*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !7008, metadata !DIExpression()), !dbg !7009
  store %struct.MaskLayerShape* %masklay_shape_a, %struct.MaskLayerShape** %masklay_shape_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape_a.addr, metadata !7010, metadata !DIExpression()), !dbg !7011
  store %struct.MaskLayerShape* %masklay_shape_b, %struct.MaskLayerShape** %masklay_shape_b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape_b.addr, metadata !7012, metadata !DIExpression()), !dbg !7013
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !7014, metadata !DIExpression()), !dbg !7015
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !7016, metadata !DIExpression()), !dbg !7017
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7018
  %call = call i32 @BKE_mask_layer_shape_totvert(%struct.MaskLayer* %0), !dbg !7019
  store i32 %call, i32* %tot, align 4, !dbg !7017
  %1 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_a.addr, align 8, !dbg !7020
  %tot_vert = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %1, i32 0, i32 3, !dbg !7022
  %2 = load i32, i32* %tot_vert, align 8, !dbg !7022
  %3 = load i32, i32* %tot, align 4, !dbg !7023
  %cmp = icmp eq i32 %2, %3, !dbg !7024
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7025

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_b.addr, align 8, !dbg !7026
  %tot_vert1 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %4, i32 0, i32 3, !dbg !7027
  %5 = load i32, i32* %tot_vert1, align 8, !dbg !7027
  %6 = load i32, i32* %tot, align 4, !dbg !7028
  %cmp2 = icmp eq i32 %5, %6, !dbg !7029
  br i1 %cmp2, label %if.then, label %if.else, !dbg !7030

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float** %fp_a, metadata !7031, metadata !DIExpression()), !dbg !7033
  %7 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_a.addr, align 8, !dbg !7034
  %data = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %7, i32 0, i32 2, !dbg !7035
  %8 = load float*, float** %data, align 8, !dbg !7035
  store float* %8, float** %fp_a, align 8, !dbg !7033
  call void @llvm.dbg.declare(metadata float** %fp_b, metadata !7036, metadata !DIExpression()), !dbg !7037
  %9 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_b.addr, align 8, !dbg !7038
  %data3 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %9, i32 0, i32 2, !dbg !7039
  %10 = load float*, float** %data3, align 8, !dbg !7039
  store float* %10, float** %fp_b, align 8, !dbg !7037
  call void @llvm.dbg.declare(metadata float* %ifac, metadata !7040, metadata !DIExpression()), !dbg !7041
  %11 = load float, float* %fac.addr, align 4, !dbg !7042
  %sub = fsub float 1.000000e+00, %11, !dbg !7043
  store float %sub, float* %ifac, align 4, !dbg !7041
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !7044, metadata !DIExpression()), !dbg !7045
  %12 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7046
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %12, i32 0, i32 3, !dbg !7048
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !7049
  %13 = load i8*, i8** %first, align 8, !dbg !7049
  %14 = bitcast i8* %13 to %struct.MaskSpline*, !dbg !7046
  store %struct.MaskSpline* %14, %struct.MaskSpline** %spline, align 8, !dbg !7050
  br label %for.cond, !dbg !7051

for.cond:                                         ; preds = %for.inc30, %if.then
  %15 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7052
  %tobool = icmp ne %struct.MaskSpline* %15, null, !dbg !7054
  br i1 %tobool, label %for.body, label %for.end31, !dbg !7054

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7055, metadata !DIExpression()), !dbg !7057
  store i32 0, i32* %i, align 4, !dbg !7058
  br label %for.cond4, !dbg !7060

for.cond4:                                        ; preds = %for.inc, %for.body
  %16 = load i32, i32* %i, align 4, !dbg !7061
  %17 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7063
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %17, i32 0, i32 5, !dbg !7064
  %18 = load i32, i32* %tot_point, align 4, !dbg !7064
  %cmp5 = icmp slt i32 %16, %18, !dbg !7065
  br i1 %cmp5, label %for.body6, label %for.end, !dbg !7066

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !7067, metadata !DIExpression()), !dbg !7069
  %19 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7070
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %19, i32 0, i32 6, !dbg !7071
  %20 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !7071
  %21 = load i32, i32* %i, align 4, !dbg !7072
  %idxprom = sext i32 %21 to i64, !dbg !7070
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %20, i64 %idxprom, !dbg !7070
  %bezt7 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx, i32 0, i32 0, !dbg !7073
  store %struct.BezTriple* %bezt7, %struct.BezTriple** %bezt, align 8, !dbg !7069
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7074
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 0, i32 0, !dbg !7075
  %arrayidx8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !7074
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !7074
  %23 = load float*, float** %fp_a, align 8, !dbg !7076
  %24 = load float*, float** %fp_b, align 8, !dbg !7077
  %25 = load float, float* %fac.addr, align 4, !dbg !7078
  %26 = load float, float* %ifac, align 4, !dbg !7079
  call void @interp_v2_v2v2_flfl(float* %arraydecay, float* %23, float* %24, float %25, float %26), !dbg !7080
  %27 = load float*, float** %fp_a, align 8, !dbg !7081
  %add.ptr = getelementptr inbounds float, float* %27, i64 2, !dbg !7081
  store float* %add.ptr, float** %fp_a, align 8, !dbg !7081
  %28 = load float*, float** %fp_b, align 8, !dbg !7082
  %add.ptr9 = getelementptr inbounds float, float* %28, i64 2, !dbg !7082
  store float* %add.ptr9, float** %fp_b, align 8, !dbg !7082
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7083
  %vec10 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %29, i32 0, i32 0, !dbg !7084
  %arrayidx11 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec10, i64 0, i64 1, !dbg !7083
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !7083
  %30 = load float*, float** %fp_a, align 8, !dbg !7085
  %31 = load float*, float** %fp_b, align 8, !dbg !7086
  %32 = load float, float* %fac.addr, align 4, !dbg !7087
  %33 = load float, float* %ifac, align 4, !dbg !7088
  call void @interp_v2_v2v2_flfl(float* %arraydecay12, float* %30, float* %31, float %32, float %33), !dbg !7089
  %34 = load float*, float** %fp_a, align 8, !dbg !7090
  %add.ptr13 = getelementptr inbounds float, float* %34, i64 2, !dbg !7090
  store float* %add.ptr13, float** %fp_a, align 8, !dbg !7090
  %35 = load float*, float** %fp_b, align 8, !dbg !7091
  %add.ptr14 = getelementptr inbounds float, float* %35, i64 2, !dbg !7091
  store float* %add.ptr14, float** %fp_b, align 8, !dbg !7091
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7092
  %vec15 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %36, i32 0, i32 0, !dbg !7093
  %arrayidx16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec15, i64 0, i64 2, !dbg !7092
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !7092
  %37 = load float*, float** %fp_a, align 8, !dbg !7094
  %38 = load float*, float** %fp_b, align 8, !dbg !7095
  %39 = load float, float* %fac.addr, align 4, !dbg !7096
  %40 = load float, float* %ifac, align 4, !dbg !7097
  call void @interp_v2_v2v2_flfl(float* %arraydecay17, float* %37, float* %38, float %39, float %40), !dbg !7098
  %41 = load float*, float** %fp_a, align 8, !dbg !7099
  %add.ptr18 = getelementptr inbounds float, float* %41, i64 2, !dbg !7099
  store float* %add.ptr18, float** %fp_a, align 8, !dbg !7099
  %42 = load float*, float** %fp_b, align 8, !dbg !7100
  %add.ptr19 = getelementptr inbounds float, float* %42, i64 2, !dbg !7100
  store float* %add.ptr19, float** %fp_b, align 8, !dbg !7100
  %43 = load float*, float** %fp_a, align 8, !dbg !7101
  %arrayidx20 = getelementptr inbounds float, float* %43, i64 0, !dbg !7101
  %44 = load float, float* %arrayidx20, align 4, !dbg !7101
  %45 = load float, float* %ifac, align 4, !dbg !7102
  %mul = fmul float %44, %45, !dbg !7103
  %46 = load float*, float** %fp_b, align 8, !dbg !7104
  %arrayidx21 = getelementptr inbounds float, float* %46, i64 0, !dbg !7104
  %47 = load float, float* %arrayidx21, align 4, !dbg !7104
  %48 = load float, float* %fac.addr, align 4, !dbg !7105
  %mul22 = fmul float %47, %48, !dbg !7106
  %add = fadd float %mul, %mul22, !dbg !7107
  %49 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7108
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %49, i32 0, i32 2, !dbg !7109
  store float %add, float* %weight, align 4, !dbg !7110
  %50 = load float*, float** %fp_a, align 8, !dbg !7111
  %arrayidx23 = getelementptr inbounds float, float* %50, i64 1, !dbg !7111
  %51 = load float, float* %arrayidx23, align 4, !dbg !7111
  %52 = load float, float* %ifac, align 4, !dbg !7112
  %mul24 = fmul float %51, %52, !dbg !7113
  %53 = load float*, float** %fp_b, align 8, !dbg !7114
  %arrayidx25 = getelementptr inbounds float, float* %53, i64 1, !dbg !7114
  %54 = load float, float* %arrayidx25, align 4, !dbg !7114
  %55 = load float, float* %fac.addr, align 4, !dbg !7115
  %mul26 = fmul float %54, %55, !dbg !7116
  %add27 = fadd float %mul24, %mul26, !dbg !7117
  %56 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7118
  %radius = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %56, i32 0, i32 3, !dbg !7119
  store float %add27, float* %radius, align 4, !dbg !7120
  %57 = load float*, float** %fp_a, align 8, !dbg !7121
  %add.ptr28 = getelementptr inbounds float, float* %57, i64 2, !dbg !7121
  store float* %add.ptr28, float** %fp_a, align 8, !dbg !7121
  %58 = load float*, float** %fp_b, align 8, !dbg !7122
  %add.ptr29 = getelementptr inbounds float, float* %58, i64 2, !dbg !7122
  store float* %add.ptr29, float** %fp_b, align 8, !dbg !7122
  br label %for.inc, !dbg !7123

for.inc:                                          ; preds = %for.body6
  %59 = load i32, i32* %i, align 4, !dbg !7124
  %inc = add nsw i32 %59, 1, !dbg !7124
  store i32 %inc, i32* %i, align 4, !dbg !7124
  br label %for.cond4, !dbg !7125, !llvm.loop !7126

for.end:                                          ; preds = %for.cond4
  br label %for.inc30, !dbg !7128

for.inc30:                                        ; preds = %for.end
  %60 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7129
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %60, i32 0, i32 0, !dbg !7130
  %61 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !7130
  store %struct.MaskSpline* %61, %struct.MaskSpline** %spline, align 8, !dbg !7131
  br label %for.cond, !dbg !7132, !llvm.loop !7133

for.end31:                                        ; preds = %for.cond
  br label %if.end, !dbg !7135

if.else:                                          ; preds = %land.lhs.true, %entry
  %62 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_a.addr, align 8, !dbg !7136
  %tot_vert32 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %62, i32 0, i32 3, !dbg !7138
  %63 = load i32, i32* %tot_vert32, align 8, !dbg !7138
  %64 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_b.addr, align 8, !dbg !7139
  %tot_vert33 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %64, i32 0, i32 3, !dbg !7140
  %65 = load i32, i32* %tot_vert33, align 8, !dbg !7140
  %66 = load i32, i32* %tot, align 4, !dbg !7141
  %67 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_a.addr, align 8, !dbg !7142
  %frame = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %67, i32 0, i32 4, !dbg !7143
  %68 = load i32, i32* %frame, align 4, !dbg !7143
  %69 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_b.addr, align 8, !dbg !7144
  %frame34 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %69, i32 0, i32 4, !dbg !7145
  %70 = load i32, i32* %frame34, align 4, !dbg !7145
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__func__.BKE_mask_layer_shape_to_mask_interp, i64 0, i64 0), i32 %63, i32 %65, i32 %66, i32 %68, i32 %70), !dbg !7146
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end31
  ret void, !dbg !7147
}

; Function Attrs: noinline nounwind uwtable
define internal void @mask_evaluate_apply_point_parent(%struct.MaskSplinePoint* %point, float %ctime) #0 !dbg !7148 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %ctime.addr = alloca float, align 4
  %parent_matrix = alloca [3 x [3 x float]], align 16
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !7151, metadata !DIExpression()), !dbg !7152
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !7153, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %parent_matrix, metadata !7155, metadata !DIExpression()), !dbg !7156
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !7157
  %1 = load float, float* %ctime.addr, align 4, !dbg !7158
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %parent_matrix, i64 0, i64 0, !dbg !7159
  call void @BKE_mask_point_parent_matrix_get(%struct.MaskSplinePoint* %0, float %1, [3 x float]* %arraydecay), !dbg !7160
  %arraydecay1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %parent_matrix, i64 0, i64 0, !dbg !7161
  %2 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !7162
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %2, i32 0, i32 0, !dbg !7163
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 0, !dbg !7164
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !7162
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7162
  call void @mul_m3_v2([3 x float]* %arraydecay1, float* %arraydecay2), !dbg !7165
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %parent_matrix, i64 0, i64 0, !dbg !7166
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !7167
  %bezt4 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !7168
  %vec5 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt4, i32 0, i32 0, !dbg !7169
  %arrayidx6 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec5, i64 0, i64 1, !dbg !7167
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx6, i64 0, i64 0, !dbg !7167
  call void @mul_m3_v2([3 x float]* %arraydecay3, float* %arraydecay7), !dbg !7170
  %arraydecay8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %parent_matrix, i64 0, i64 0, !dbg !7171
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !7172
  %bezt9 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %4, i32 0, i32 0, !dbg !7173
  %vec10 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt9, i32 0, i32 0, !dbg !7174
  %arrayidx11 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec10, i64 0, i64 2, !dbg !7172
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !7172
  call void @mul_m3_v2([3 x float]* %arraydecay8, float* %arraydecay12), !dbg !7175
  ret void, !dbg !7176
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_evaluate(%struct.Mask* %mask, float %ctime, i8 zeroext %do_newframe) #0 !dbg !7177 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  %ctime.addr = alloca float, align 4
  %do_newframe.addr = alloca i8, align 1
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !7180, metadata !DIExpression()), !dbg !7181
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !7182, metadata !DIExpression()), !dbg !7183
  store i8 %do_newframe, i8* %do_newframe.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_newframe.addr, metadata !7184, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !7186, metadata !DIExpression()), !dbg !7187
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !7188
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %0, i32 0, i32 2, !dbg !7190
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !7191
  %1 = load i8*, i8** %first, align 8, !dbg !7191
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !7188
  store %struct.MaskLayer* %2, %struct.MaskLayer** %masklay, align 8, !dbg !7192
  br label %for.cond, !dbg !7193

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !7194
  %tobool = icmp ne %struct.MaskLayer* %3, null, !dbg !7196
  br i1 %tobool, label %for.body, label %for.end, !dbg !7196

for.body:                                         ; preds = %for.cond
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !7197
  %5 = load float, float* %ctime.addr, align 4, !dbg !7199
  %6 = load i8, i8* %do_newframe.addr, align 1, !dbg !7200
  call void @BKE_mask_layer_evaluate(%struct.MaskLayer* %4, float %5, i8 zeroext %6), !dbg !7201
  br label %for.inc, !dbg !7202

for.inc:                                          ; preds = %for.body
  %7 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !7203
  %next = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %7, i32 0, i32 0, !dbg !7204
  %8 = load %struct.MaskLayer*, %struct.MaskLayer** %next, align 8, !dbg !7204
  store %struct.MaskLayer* %8, %struct.MaskLayer** %masklay, align 8, !dbg !7205
  br label %for.cond, !dbg !7206, !llvm.loop !7207

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7209
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_update_display(%struct.Mask* %mask, float %ctime) #0 !dbg !7210 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  %ctime.addr = alloca float, align 4
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !7213, metadata !DIExpression()), !dbg !7214
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !7215, metadata !DIExpression()), !dbg !7216
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !7217
  %1 = load float, float* %ctime.addr, align 4, !dbg !7218
  call void @BKE_mask_evaluate(%struct.Mask* %0, float %1, i8 zeroext 0), !dbg !7219
  ret void, !dbg !7220
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_evaluate_all_masks(%struct.Main* %bmain, float %ctime, i8 zeroext %do_newframe) #0 !dbg !7221 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %ctime.addr = alloca float, align 4
  %do_newframe.addr = alloca i8, align 1
  %mask = alloca %struct.Mask*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !7224, metadata !DIExpression()), !dbg !7225
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !7226, metadata !DIExpression()), !dbg !7227
  store i8 %do_newframe, i8* %do_newframe.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_newframe.addr, metadata !7228, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !7230, metadata !DIExpression()), !dbg !7231
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7232
  %mask1 = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 43, !dbg !7234
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mask1, i32 0, i32 0, !dbg !7235
  %1 = load i8*, i8** %first, align 8, !dbg !7235
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !7232
  store %struct.Mask* %2, %struct.Mask** %mask, align 8, !dbg !7236
  br label %for.cond, !dbg !7237

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7238
  %tobool = icmp ne %struct.Mask* %3, null, !dbg !7240
  br i1 %tobool, label %for.body, label %for.end, !dbg !7240

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7241
  %5 = load float, float* %ctime.addr, align 4, !dbg !7243
  %6 = load i8, i8* %do_newframe.addr, align 1, !dbg !7244
  call void @BKE_mask_evaluate(%struct.Mask* %4, float %5, i8 zeroext %6), !dbg !7245
  br label %for.inc, !dbg !7246

for.inc:                                          ; preds = %for.body
  %7 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7247
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %7, i32 0, i32 0, !dbg !7248
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !7249
  %8 = load i8*, i8** %next, align 8, !dbg !7249
  %9 = bitcast i8* %8 to %struct.Mask*, !dbg !7247
  store %struct.Mask* %9, %struct.Mask** %mask, align 8, !dbg !7250
  br label %for.cond, !dbg !7251, !llvm.loop !7252

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7254
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_update_scene(%struct.Main* %bmain, %struct.Scene* %scene) #0 !dbg !7255 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %mask = alloca %struct.Mask*, align 8
  %do_new_frame = alloca i8, align 1
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !7258, metadata !DIExpression()), !dbg !7259
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7260, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !7262, metadata !DIExpression()), !dbg !7263
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7264
  %mask1 = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 43, !dbg !7266
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mask1, i32 0, i32 0, !dbg !7267
  %1 = load i8*, i8** %first, align 8, !dbg !7267
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !7264
  store %struct.Mask* %2, %struct.Mask** %mask, align 8, !dbg !7268
  br label %for.cond, !dbg !7269

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7270
  %tobool = icmp ne %struct.Mask* %3, null, !dbg !7272
  br i1 %tobool, label %for.body, label %for.end, !dbg !7272

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7273
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %4, i32 0, i32 0, !dbg !7276
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !7277
  %5 = load i16, i16* %flag, align 2, !dbg !7277
  %conv = sext i16 %5 to i32, !dbg !7273
  %and = and i32 %conv, 12288, !dbg !7278
  %tobool2 = icmp ne i32 %and, 0, !dbg !7278
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7279

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8* %do_new_frame, metadata !7280, metadata !DIExpression()), !dbg !7282
  %6 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7283
  %id3 = getelementptr inbounds %struct.Mask, %struct.Mask* %6, i32 0, i32 0, !dbg !7284
  %flag4 = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 5, !dbg !7285
  %7 = load i16, i16* %flag4, align 2, !dbg !7285
  %conv5 = sext i16 %7 to i32, !dbg !7283
  %and6 = and i32 %conv5, 8192, !dbg !7286
  %cmp = icmp ne i32 %and6, 0, !dbg !7287
  %conv7 = zext i1 %cmp to i32, !dbg !7287
  %conv8 = trunc i32 %conv7 to i8, !dbg !7288
  store i8 %conv8, i8* %do_new_frame, align 1, !dbg !7282
  %8 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7289
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7290
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 22, !dbg !7290
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !7290
  %10 = load i32, i32* %cfra, align 8, !dbg !7290
  %conv9 = sitofp i32 %10 to float, !dbg !7290
  %11 = load i8, i8* %do_new_frame, align 1, !dbg !7291
  call void @BKE_mask_evaluate_all_masks(%struct.Main* %8, float %conv9, i8 zeroext %11), !dbg !7292
  br label %if.end, !dbg !7293

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7294

for.inc:                                          ; preds = %if.end
  %12 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !7295
  %id10 = getelementptr inbounds %struct.Mask, %struct.Mask* %12, i32 0, i32 0, !dbg !7296
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id10, i32 0, i32 0, !dbg !7297
  %13 = load i8*, i8** %next, align 8, !dbg !7297
  %14 = bitcast i8* %13 to %struct.Mask*, !dbg !7295
  store %struct.Mask* %14, %struct.Mask** %mask, align 8, !dbg !7298
  br label %for.cond, !dbg !7299, !llvm.loop !7300

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7302
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_shape_from_mask(%struct.MaskLayer* %masklay, %struct.MaskLayerShape* %masklay_shape) #0 !dbg !7303 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %masklay_shape.addr = alloca %struct.MaskLayerShape*, align 8
  %tot = alloca i32, align 4
  %fp = alloca float*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %i = alloca i32, align 4
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !7304, metadata !DIExpression()), !dbg !7305
  store %struct.MaskLayerShape* %masklay_shape, %struct.MaskLayerShape** %masklay_shape.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape.addr, metadata !7306, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !7308, metadata !DIExpression()), !dbg !7309
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7310
  %call = call i32 @BKE_mask_layer_shape_totvert(%struct.MaskLayer* %0), !dbg !7311
  store i32 %call, i32* %tot, align 4, !dbg !7309
  %1 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !7312
  %tot_vert = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %1, i32 0, i32 3, !dbg !7314
  %2 = load i32, i32* %tot_vert, align 8, !dbg !7314
  %3 = load i32, i32* %tot, align 4, !dbg !7315
  %cmp = icmp eq i32 %2, %3, !dbg !7316
  br i1 %cmp, label %if.then, label %if.else, !dbg !7317

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %fp, metadata !7318, metadata !DIExpression()), !dbg !7320
  %4 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !7321
  %data = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %4, i32 0, i32 2, !dbg !7322
  %5 = load float*, float** %data, align 8, !dbg !7322
  store float* %5, float** %fp, align 8, !dbg !7320
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !7323, metadata !DIExpression()), !dbg !7324
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7325
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 3, !dbg !7327
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !7328
  %7 = load i8*, i8** %first, align 8, !dbg !7328
  %8 = bitcast i8* %7 to %struct.MaskSpline*, !dbg !7325
  store %struct.MaskSpline* %8, %struct.MaskSpline** %spline, align 8, !dbg !7329
  br label %for.cond, !dbg !7330

for.cond:                                         ; preds = %for.inc4, %if.then
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7331
  %tobool = icmp ne %struct.MaskSpline* %9, null, !dbg !7333
  br i1 %tobool, label %for.body, label %for.end5, !dbg !7333

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7334, metadata !DIExpression()), !dbg !7336
  store i32 0, i32* %i, align 4, !dbg !7337
  br label %for.cond1, !dbg !7339

for.cond1:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !7340
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7342
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %11, i32 0, i32 5, !dbg !7343
  %12 = load i32, i32* %tot_point, align 4, !dbg !7343
  %cmp2 = icmp slt i32 %10, %12, !dbg !7344
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7345

for.body3:                                        ; preds = %for.cond1
  %13 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7346
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %13, i32 0, i32 6, !dbg !7348
  %14 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !7348
  %15 = load i32, i32* %i, align 4, !dbg !7349
  %idxprom = sext i32 %15 to i64, !dbg !7346
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %14, i64 %idxprom, !dbg !7346
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx, i32 0, i32 0, !dbg !7350
  %16 = load float*, float** %fp, align 8, !dbg !7351
  call void @mask_layer_shape_from_mask_point(%struct.BezTriple* %bezt, float* %16), !dbg !7352
  %17 = load float*, float** %fp, align 8, !dbg !7353
  %add.ptr = getelementptr inbounds float, float* %17, i64 8, !dbg !7353
  store float* %add.ptr, float** %fp, align 8, !dbg !7353
  br label %for.inc, !dbg !7354

for.inc:                                          ; preds = %for.body3
  %18 = load i32, i32* %i, align 4, !dbg !7355
  %inc = add nsw i32 %18, 1, !dbg !7355
  store i32 %inc, i32* %i, align 4, !dbg !7355
  br label %for.cond1, !dbg !7356, !llvm.loop !7357

for.end:                                          ; preds = %for.cond1
  br label %for.inc4, !dbg !7359

for.inc4:                                         ; preds = %for.end
  %19 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7360
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %19, i32 0, i32 0, !dbg !7361
  %20 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !7361
  store %struct.MaskSpline* %20, %struct.MaskSpline** %spline, align 8, !dbg !7362
  br label %for.cond, !dbg !7363, !llvm.loop !7364

for.end5:                                         ; preds = %for.cond
  br label %if.end, !dbg !7366

if.else:                                          ; preds = %entry
  %21 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !7367
  %tot_vert6 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %21, i32 0, i32 3, !dbg !7369
  %22 = load i32, i32* %tot_vert6, align 8, !dbg !7369
  %23 = load i32, i32* %tot, align 4, !dbg !7370
  %24 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !7371
  %frame = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %24, i32 0, i32 4, !dbg !7372
  %25 = load i32, i32* %frame, align 4, !dbg !7372
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.BKE_mask_layer_shape_from_mask, i64 0, i64 0), i32 %22, i32 %23, i32 %25), !dbg !7373
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end5
  ret void, !dbg !7374
}

; Function Attrs: noinline nounwind uwtable
define internal void @mask_layer_shape_from_mask_point(%struct.BezTriple* %bezt, float* %fp) #0 !dbg !7375 {
entry:
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %fp.addr = alloca float*, align 8
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !7378, metadata !DIExpression()), !dbg !7379
  store float* %fp, float** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fp.addr, metadata !7380, metadata !DIExpression()), !dbg !7381
  %0 = load float*, float** %fp.addr, align 8, !dbg !7382
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7382
  %1 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7383
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %1, i32 0, i32 0, !dbg !7384
  %arrayidx1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !7383
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx1, i64 0, i64 0, !dbg !7383
  call void @copy_v2_v2(float* %arrayidx, float* %arraydecay), !dbg !7385
  %2 = load float*, float** %fp.addr, align 8, !dbg !7386
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !7386
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7387
  %vec3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %3, i32 0, i32 0, !dbg !7388
  %arrayidx4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec3, i64 0, i64 1, !dbg !7387
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx4, i64 0, i64 0, !dbg !7387
  call void @copy_v2_v2(float* %arrayidx2, float* %arraydecay5), !dbg !7389
  %4 = load float*, float** %fp.addr, align 8, !dbg !7390
  %arrayidx6 = getelementptr inbounds float, float* %4, i64 4, !dbg !7390
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7391
  %vec7 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %5, i32 0, i32 0, !dbg !7392
  %arrayidx8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec7, i64 0, i64 2, !dbg !7391
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !7391
  call void @copy_v2_v2(float* %arrayidx6, float* %arraydecay9), !dbg !7393
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7394
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %6, i32 0, i32 2, !dbg !7395
  %7 = load float, float* %weight, align 4, !dbg !7395
  %8 = load float*, float** %fp.addr, align 8, !dbg !7396
  %arrayidx10 = getelementptr inbounds float, float* %8, i64 6, !dbg !7396
  store float %7, float* %arrayidx10, align 4, !dbg !7397
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7398
  %radius = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i32 0, i32 3, !dbg !7399
  %10 = load float, float* %radius, align 4, !dbg !7399
  %11 = load float*, float** %fp.addr, align 8, !dbg !7400
  %arrayidx11 = getelementptr inbounds float, float* %11, i64 7, !dbg !7400
  store float %10, float* %arrayidx11, align 4, !dbg !7401
  ret void, !dbg !7402
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mask_layer_shape_to_mask_point(%struct.BezTriple* %bezt, float* %fp) #0 !dbg !7403 {
entry:
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %fp.addr = alloca float*, align 8
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !7404, metadata !DIExpression()), !dbg !7405
  store float* %fp, float** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fp.addr, metadata !7406, metadata !DIExpression()), !dbg !7407
  %0 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7408
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %0, i32 0, i32 0, !dbg !7409
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !7408
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7408
  %1 = load float*, float** %fp.addr, align 8, !dbg !7410
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 0, !dbg !7410
  call void @copy_v2_v2(float* %arraydecay, float* %arrayidx1), !dbg !7411
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7412
  %vec2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %2, i32 0, i32 0, !dbg !7413
  %arrayidx3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec2, i64 0, i64 1, !dbg !7412
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !7412
  %3 = load float*, float** %fp.addr, align 8, !dbg !7414
  %arrayidx5 = getelementptr inbounds float, float* %3, i64 2, !dbg !7414
  call void @copy_v2_v2(float* %arraydecay4, float* %arrayidx5), !dbg !7415
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7416
  %vec6 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 0, !dbg !7417
  %arrayidx7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec6, i64 0, i64 2, !dbg !7416
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !7416
  %5 = load float*, float** %fp.addr, align 8, !dbg !7418
  %arrayidx9 = getelementptr inbounds float, float* %5, i64 4, !dbg !7418
  call void @copy_v2_v2(float* %arraydecay8, float* %arrayidx9), !dbg !7419
  %6 = load float*, float** %fp.addr, align 8, !dbg !7420
  %arrayidx10 = getelementptr inbounds float, float* %6, i64 6, !dbg !7420
  %7 = load float, float* %arrayidx10, align 4, !dbg !7420
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7421
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %8, i32 0, i32 2, !dbg !7422
  store float %7, float* %weight, align 4, !dbg !7423
  %9 = load float*, float** %fp.addr, align 8, !dbg !7424
  %arrayidx11 = getelementptr inbounds float, float* %9, i64 7, !dbg !7424
  %10 = load float, float* %arrayidx11, align 4, !dbg !7424
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !7425
  %radius = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 3, !dbg !7426
  store float %10, float* %radius, align 4, !dbg !7427
  ret void, !dbg !7428
}

; Function Attrs: noinline nounwind uwtable
define internal void @interp_v2_v2v2_flfl(float* %target, float* %a, float* %b, float %t, float %s) #0 !dbg !7429 {
entry:
  %target.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %t.addr = alloca float, align 4
  %s.addr = alloca float, align 4
  store float* %target, float** %target.addr, align 8
  call void @llvm.dbg.declare(metadata float** %target.addr, metadata !7432, metadata !DIExpression()), !dbg !7433
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7434, metadata !DIExpression()), !dbg !7435
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7436, metadata !DIExpression()), !dbg !7437
  store float %t, float* %t.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t.addr, metadata !7438, metadata !DIExpression()), !dbg !7439
  store float %s, float* %s.addr, align 4
  call void @llvm.dbg.declare(metadata float* %s.addr, metadata !7440, metadata !DIExpression()), !dbg !7441
  %0 = load float, float* %s.addr, align 4, !dbg !7442
  %1 = load float*, float** %a.addr, align 8, !dbg !7443
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !7443
  %2 = load float, float* %arrayidx, align 4, !dbg !7443
  %mul = fmul float %0, %2, !dbg !7444
  %3 = load float, float* %t.addr, align 4, !dbg !7445
  %4 = load float*, float** %b.addr, align 8, !dbg !7446
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 0, !dbg !7446
  %5 = load float, float* %arrayidx1, align 4, !dbg !7446
  %mul2 = fmul float %3, %5, !dbg !7447
  %add = fadd float %mul, %mul2, !dbg !7448
  %6 = load float*, float** %target.addr, align 8, !dbg !7449
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !7449
  store float %add, float* %arrayidx3, align 4, !dbg !7450
  %7 = load float, float* %s.addr, align 4, !dbg !7451
  %8 = load float*, float** %a.addr, align 8, !dbg !7452
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !7452
  %9 = load float, float* %arrayidx4, align 4, !dbg !7452
  %mul5 = fmul float %7, %9, !dbg !7453
  %10 = load float, float* %t.addr, align 4, !dbg !7454
  %11 = load float*, float** %b.addr, align 8, !dbg !7455
  %arrayidx6 = getelementptr inbounds float, float* %11, i64 1, !dbg !7455
  %12 = load float, float* %arrayidx6, align 4, !dbg !7455
  %mul7 = fmul float %10, %12, !dbg !7456
  %add8 = fadd float %mul5, %mul7, !dbg !7457
  %13 = load float*, float** %target.addr, align 8, !dbg !7458
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 1, !dbg !7458
  store float %add8, float* %arrayidx9, align 4, !dbg !7459
  ret void, !dbg !7460
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskLayerShape* @BKE_mask_layer_shape_find_frame(%struct.MaskLayer* %masklay, i32 %frame) #0 !dbg !7461 {
entry:
  %retval = alloca %struct.MaskLayerShape*, align 8
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %frame.addr = alloca i32, align 4
  %masklay_shape = alloca %struct.MaskLayerShape*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !7462, metadata !DIExpression()), !dbg !7463
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !7464, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape, metadata !7466, metadata !DIExpression()), !dbg !7467
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7468
  %splines_shapes = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %0, i32 0, i32 4, !dbg !7470
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes, i32 0, i32 0, !dbg !7471
  %1 = load i8*, i8** %first, align 8, !dbg !7471
  %2 = bitcast i8* %1 to %struct.MaskLayerShape*, !dbg !7468
  store %struct.MaskLayerShape* %2, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7472
  br label %for.cond, !dbg !7473

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7474
  %tobool = icmp ne %struct.MaskLayerShape* %3, null, !dbg !7476
  br i1 %tobool, label %for.body, label %for.end, !dbg !7476

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %frame.addr, align 4, !dbg !7477
  %5 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7480
  %frame1 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %5, i32 0, i32 4, !dbg !7481
  %6 = load i32, i32* %frame1, align 4, !dbg !7481
  %cmp = icmp eq i32 %4, %6, !dbg !7482
  br i1 %cmp, label %if.then, label %if.else, !dbg !7483

if.then:                                          ; preds = %for.body
  %7 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7484
  store %struct.MaskLayerShape* %7, %struct.MaskLayerShape** %retval, align 8, !dbg !7486
  br label %return, !dbg !7486

if.else:                                          ; preds = %for.body
  %8 = load i32, i32* %frame.addr, align 4, !dbg !7487
  %9 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7489
  %frame2 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %9, i32 0, i32 4, !dbg !7490
  %10 = load i32, i32* %frame2, align 4, !dbg !7490
  %cmp3 = icmp slt i32 %8, %10, !dbg !7491
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !7492

if.then4:                                         ; preds = %if.else
  br label %for.end, !dbg !7493

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end
  br label %for.inc, !dbg !7495

for.inc:                                          ; preds = %if.end5
  %11 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7496
  %next = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %11, i32 0, i32 0, !dbg !7497
  %12 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %next, align 8, !dbg !7497
  store %struct.MaskLayerShape* %12, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7498
  br label %for.cond, !dbg !7499, !llvm.loop !7500

for.end:                                          ; preds = %if.then4, %for.cond
  store %struct.MaskLayerShape* null, %struct.MaskLayerShape** %retval, align 8, !dbg !7502
  br label %return, !dbg !7502

return:                                           ; preds = %for.end, %if.then
  %13 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %retval, align 8, !dbg !7503
  ret %struct.MaskLayerShape* %13, !dbg !7503
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskLayerShape* @BKE_mask_layer_shape_verify_frame(%struct.MaskLayer* %masklay, i32 %frame) #0 !dbg !7504 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %frame.addr = alloca i32, align 4
  %masklay_shape = alloca %struct.MaskLayerShape*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !7505, metadata !DIExpression()), !dbg !7506
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !7507, metadata !DIExpression()), !dbg !7508
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape, metadata !7509, metadata !DIExpression()), !dbg !7510
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7511
  %1 = load i32, i32* %frame.addr, align 4, !dbg !7512
  %call = call %struct.MaskLayerShape* @BKE_mask_layer_shape_find_frame(%struct.MaskLayer* %0, i32 %1), !dbg !7513
  store %struct.MaskLayerShape* %call, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7514
  %2 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7515
  %cmp = icmp eq %struct.MaskLayerShape* %2, null, !dbg !7517
  br i1 %cmp, label %if.then, label %if.end, !dbg !7518

if.then:                                          ; preds = %entry
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7519
  %4 = load i32, i32* %frame.addr, align 4, !dbg !7521
  %call1 = call %struct.MaskLayerShape* @BKE_mask_layer_shape_alloc(%struct.MaskLayer* %3, i32 %4), !dbg !7522
  store %struct.MaskLayerShape* %call1, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7523
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7524
  %splines_shapes = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %5, i32 0, i32 4, !dbg !7525
  %6 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7526
  %7 = bitcast %struct.MaskLayerShape* %6 to i8*, !dbg !7526
  call void @BLI_addtail(%struct.ListBase* %splines_shapes, i8* %7), !dbg !7527
  %8 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7528
  call void @BKE_mask_layer_shape_sort(%struct.MaskLayer* %8), !dbg !7529
  br label %if.end, !dbg !7530

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7531
  ret %struct.MaskLayerShape* %9, !dbg !7532
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_shape_sort(%struct.MaskLayer* %masklay) #0 !dbg !7533 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !7534, metadata !DIExpression()), !dbg !7535
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7536
  %splines_shapes = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %0, i32 0, i32 4, !dbg !7537
  call void @BLI_sortlist(%struct.ListBase* %splines_shapes, i32 (i8*, i8*)* @mask_layer_shape_sort_cb), !dbg !7538
  ret void, !dbg !7539
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskLayerShape* @BKE_mask_layer_shape_duplicate(%struct.MaskLayerShape* %masklay_shape) #0 !dbg !7540 {
entry:
  %masklay_shape.addr = alloca %struct.MaskLayerShape*, align 8
  %masklay_shape_copy = alloca %struct.MaskLayerShape*, align 8
  store %struct.MaskLayerShape* %masklay_shape, %struct.MaskLayerShape** %masklay_shape.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape.addr, metadata !7543, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape_copy, metadata !7545, metadata !DIExpression()), !dbg !7546
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !7547
  %1 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !7548
  %2 = bitcast %struct.MaskLayerShape* %1 to i8*, !dbg !7548
  %call = call i8* %0(i8* %2), !dbg !7547
  %3 = bitcast i8* %call to %struct.MaskLayerShape*, !dbg !7547
  store %struct.MaskLayerShape* %3, %struct.MaskLayerShape** %masklay_shape_copy, align 8, !dbg !7549
  %4 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_copy, align 8, !dbg !7550
  %data = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %4, i32 0, i32 2, !dbg !7550
  %5 = load float*, float** %data, align 8, !dbg !7550
  %tobool = icmp ne float* %5, null, !dbg !7550
  br i1 %tobool, label %if.then, label %if.end, !dbg !7552

if.then:                                          ; preds = %entry
  %6 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !7553
  %7 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_copy, align 8, !dbg !7555
  %data1 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %7, i32 0, i32 2, !dbg !7556
  %8 = load float*, float** %data1, align 8, !dbg !7556
  %9 = bitcast float* %8 to i8*, !dbg !7555
  %call2 = call i8* %6(i8* %9), !dbg !7553
  %10 = bitcast i8* %call2 to float*, !dbg !7553
  %11 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_copy, align 8, !dbg !7557
  %data3 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %11, i32 0, i32 2, !dbg !7558
  store float* %10, float** %data3, align 8, !dbg !7559
  br label %if.end, !dbg !7560

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_copy, align 8, !dbg !7561
  ret %struct.MaskLayerShape* %12, !dbg !7562
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_shape_unlink(%struct.MaskLayer* %masklay, %struct.MaskLayerShape* %masklay_shape) #0 !dbg !7563 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %masklay_shape.addr = alloca %struct.MaskLayerShape*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !7564, metadata !DIExpression()), !dbg !7565
  store %struct.MaskLayerShape* %masklay_shape, %struct.MaskLayerShape** %masklay_shape.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape.addr, metadata !7566, metadata !DIExpression()), !dbg !7567
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7568
  %splines_shapes = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %0, i32 0, i32 4, !dbg !7569
  %1 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !7570
  %2 = bitcast %struct.MaskLayerShape* %1 to i8*, !dbg !7570
  call void @BLI_remlink(%struct.ListBase* %splines_shapes, i8* %2), !dbg !7571
  %3 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape.addr, align 8, !dbg !7572
  call void @BKE_mask_layer_shape_free(%struct.MaskLayerShape* %3), !dbg !7573
  ret void, !dbg !7574
}

declare dso_local void @BLI_sortlist(%struct.ListBase*, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @mask_layer_shape_sort_cb(i8* %masklay_shape_a_ptr, i8* %masklay_shape_b_ptr) #0 !dbg !7575 {
entry:
  %retval = alloca i32, align 4
  %masklay_shape_a_ptr.addr = alloca i8*, align 8
  %masklay_shape_b_ptr.addr = alloca i8*, align 8
  %masklay_shape_a = alloca %struct.MaskLayerShape*, align 8
  %masklay_shape_b = alloca %struct.MaskLayerShape*, align 8
  store i8* %masklay_shape_a_ptr, i8** %masklay_shape_a_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %masklay_shape_a_ptr.addr, metadata !7580, metadata !DIExpression()), !dbg !7581
  store i8* %masklay_shape_b_ptr, i8** %masklay_shape_b_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %masklay_shape_b_ptr.addr, metadata !7582, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape_a, metadata !7584, metadata !DIExpression()), !dbg !7587
  %0 = load i8*, i8** %masklay_shape_a_ptr.addr, align 8, !dbg !7588
  %1 = bitcast i8* %0 to %struct.MaskLayerShape*, !dbg !7588
  store %struct.MaskLayerShape* %1, %struct.MaskLayerShape** %masklay_shape_a, align 8, !dbg !7587
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape_b, metadata !7589, metadata !DIExpression()), !dbg !7590
  %2 = load i8*, i8** %masklay_shape_b_ptr.addr, align 8, !dbg !7591
  %3 = bitcast i8* %2 to %struct.MaskLayerShape*, !dbg !7591
  store %struct.MaskLayerShape* %3, %struct.MaskLayerShape** %masklay_shape_b, align 8, !dbg !7590
  %4 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_a, align 8, !dbg !7592
  %frame = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %4, i32 0, i32 4, !dbg !7594
  %5 = load i32, i32* %frame, align 4, !dbg !7594
  %6 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_b, align 8, !dbg !7595
  %frame1 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %6, i32 0, i32 4, !dbg !7596
  %7 = load i32, i32* %frame1, align 4, !dbg !7596
  %cmp = icmp slt i32 %5, %7, !dbg !7597
  br i1 %cmp, label %if.then, label %if.else, !dbg !7598

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7599
  br label %return, !dbg !7599

if.else:                                          ; preds = %entry
  %8 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_a, align 8, !dbg !7600
  %frame2 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %8, i32 0, i32 4, !dbg !7602
  %9 = load i32, i32* %frame2, align 4, !dbg !7602
  %10 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape_b, align 8, !dbg !7603
  %frame3 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %10, i32 0, i32 4, !dbg !7604
  %11 = load i32, i32* %frame3, align 4, !dbg !7604
  %cmp4 = icmp sgt i32 %9, %11, !dbg !7605
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !7606

if.then5:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !7607
  br label %return, !dbg !7607

if.else6:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !7608
  br label %return, !dbg !7608

return:                                           ; preds = %if.else6, %if.then5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7609
  ret i32 %12, !dbg !7609
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mask_layer_shape_spline_from_index(%struct.MaskLayer* %masklay, i32 %index, %struct.MaskSpline** %r_masklay_shape, i32* %r_index) #0 !dbg !7610 {
entry:
  %retval = alloca i8, align 1
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %index.addr = alloca i32, align 4
  %r_masklay_shape.addr = alloca %struct.MaskSpline**, align 8
  %r_index.addr = alloca i32*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !7615, metadata !DIExpression()), !dbg !7616
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7617, metadata !DIExpression()), !dbg !7618
  store %struct.MaskSpline** %r_masklay_shape, %struct.MaskSpline*** %r_masklay_shape.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline*** %r_masklay_shape.addr, metadata !7619, metadata !DIExpression()), !dbg !7620
  store i32* %r_index, i32** %r_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_index.addr, metadata !7621, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !7623, metadata !DIExpression()), !dbg !7624
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7625
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %0, i32 0, i32 3, !dbg !7627
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !7628
  %1 = load i8*, i8** %first, align 8, !dbg !7628
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !7625
  store %struct.MaskSpline* %2, %struct.MaskSpline** %spline, align 8, !dbg !7629
  br label %for.cond, !dbg !7630

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7631
  %tobool = icmp ne %struct.MaskSpline* %3, null, !dbg !7633
  br i1 %tobool, label %for.body, label %for.end, !dbg !7633

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %index.addr, align 4, !dbg !7634
  %5 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7637
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %5, i32 0, i32 5, !dbg !7638
  %6 = load i32, i32* %tot_point, align 4, !dbg !7638
  %cmp = icmp slt i32 %4, %6, !dbg !7639
  br i1 %cmp, label %if.then, label %if.end, !dbg !7640

if.then:                                          ; preds = %for.body
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7641
  %8 = load %struct.MaskSpline**, %struct.MaskSpline*** %r_masklay_shape.addr, align 8, !dbg !7643
  store %struct.MaskSpline* %7, %struct.MaskSpline** %8, align 8, !dbg !7644
  %9 = load i32, i32* %index.addr, align 4, !dbg !7645
  %10 = load i32*, i32** %r_index.addr, align 8, !dbg !7646
  store i32 %9, i32* %10, align 4, !dbg !7647
  store i8 1, i8* %retval, align 1, !dbg !7648
  br label %return, !dbg !7648

if.end:                                           ; preds = %for.body
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7649
  %tot_point1 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %11, i32 0, i32 5, !dbg !7650
  %12 = load i32, i32* %tot_point1, align 4, !dbg !7650
  %13 = load i32, i32* %index.addr, align 4, !dbg !7651
  %sub = sub nsw i32 %13, %12, !dbg !7651
  store i32 %sub, i32* %index.addr, align 4, !dbg !7651
  br label %for.inc, !dbg !7652

for.inc:                                          ; preds = %if.end
  %14 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7653
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %14, i32 0, i32 0, !dbg !7654
  %15 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !7654
  store %struct.MaskSpline* %15, %struct.MaskSpline** %spline, align 8, !dbg !7655
  br label %for.cond, !dbg !7656, !llvm.loop !7657

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !7659
  br label %return, !dbg !7659

return:                                           ; preds = %for.end, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !7660
  ret i8 %16, !dbg !7660
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_shape_changed_add(%struct.MaskLayer* %masklay, i32 %index, i8 zeroext %do_init, i8 zeroext %do_init_interpolate) #0 !dbg !7661 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %index.addr = alloca i32, align 4
  %do_init.addr = alloca i8, align 1
  %do_init_interpolate.addr = alloca i8, align 1
  %masklay_shape = alloca %struct.MaskLayerShape*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %spline_point_index = alloca i32, align 4
  %tot = alloca i32, align 4
  %uv = alloca [3 x [2 x float]], align 16
  %pi_curr = alloca i32, align 4
  %pi_prev = alloca i32, align 4
  %pi_next = alloca i32, align 4
  %index_offset = alloca i32, align 4
  %pi_prev_abs = alloca i32, align 4
  %pi_next_abs = alloca i32, align 4
  %i = alloca i32, align 4
  %data_resized = alloca float*, align 8
  %fp = alloca float*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !7664, metadata !DIExpression()), !dbg !7665
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7666, metadata !DIExpression()), !dbg !7667
  store i8 %do_init, i8* %do_init.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_init.addr, metadata !7668, metadata !DIExpression()), !dbg !7669
  store i8 %do_init_interpolate, i8* %do_init_interpolate.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_init_interpolate.addr, metadata !7670, metadata !DIExpression()), !dbg !7671
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape, metadata !7672, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !7674, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.declare(metadata i32* %spline_point_index, metadata !7676, metadata !DIExpression()), !dbg !7677
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7678
  %1 = load i32, i32* %index.addr, align 4, !dbg !7680
  %call = call zeroext i8 @BKE_mask_layer_shape_spline_from_index(%struct.MaskLayer* %0, i32 %1, %struct.MaskSpline** %spline, i32* %spline_point_index), !dbg !7681
  %tobool = icmp ne i8 %call, 0, !dbg !7681
  br i1 %tobool, label %if.then, label %if.end119, !dbg !7682

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !7683, metadata !DIExpression()), !dbg !7685
  %2 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7686
  %call1 = call i32 @BKE_mask_layer_shape_totvert(%struct.MaskLayer* %2), !dbg !7687
  %sub = sub nsw i32 %call1, 1, !dbg !7688
  store i32 %sub, i32* %tot, align 4, !dbg !7685
  call void @llvm.dbg.declare(metadata [3 x [2 x float]]* %uv, metadata !7689, metadata !DIExpression()), !dbg !7690
  call void @llvm.dbg.declare(metadata i32* %pi_curr, metadata !7691, metadata !DIExpression()), !dbg !7692
  %3 = load i32, i32* %spline_point_index, align 4, !dbg !7693
  store i32 %3, i32* %pi_curr, align 4, !dbg !7692
  call void @llvm.dbg.declare(metadata i32* %pi_prev, metadata !7694, metadata !DIExpression()), !dbg !7695
  %4 = load i32, i32* %spline_point_index, align 4, !dbg !7696
  %sub2 = sub nsw i32 %4, 1, !dbg !7697
  %5 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7698
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %5, i32 0, i32 5, !dbg !7699
  %6 = load i32, i32* %tot_point, align 4, !dbg !7699
  %add = add nsw i32 %sub2, %6, !dbg !7700
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7701
  %tot_point3 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %7, i32 0, i32 5, !dbg !7702
  %8 = load i32, i32* %tot_point3, align 4, !dbg !7702
  %rem = srem i32 %add, %8, !dbg !7703
  store i32 %rem, i32* %pi_prev, align 4, !dbg !7695
  call void @llvm.dbg.declare(metadata i32* %pi_next, metadata !7704, metadata !DIExpression()), !dbg !7705
  %9 = load i32, i32* %spline_point_index, align 4, !dbg !7706
  %add4 = add nsw i32 %9, 1, !dbg !7707
  %10 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7708
  %tot_point5 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %10, i32 0, i32 5, !dbg !7709
  %11 = load i32, i32* %tot_point5, align 4, !dbg !7709
  %rem6 = srem i32 %add4, %11, !dbg !7710
  store i32 %rem6, i32* %pi_next, align 4, !dbg !7705
  call void @llvm.dbg.declare(metadata i32* %index_offset, metadata !7711, metadata !DIExpression()), !dbg !7712
  %12 = load i32, i32* %index.addr, align 4, !dbg !7713
  %13 = load i32, i32* %spline_point_index, align 4, !dbg !7714
  %sub7 = sub nsw i32 %12, %13, !dbg !7715
  store i32 %sub7, i32* %index_offset, align 4, !dbg !7712
  call void @llvm.dbg.declare(metadata i32* %pi_prev_abs, metadata !7716, metadata !DIExpression()), !dbg !7717
  %14 = load i32, i32* %pi_prev, align 4, !dbg !7718
  %15 = load i32, i32* %index_offset, align 4, !dbg !7719
  %add8 = add nsw i32 %14, %15, !dbg !7720
  store i32 %add8, i32* %pi_prev_abs, align 4, !dbg !7717
  call void @llvm.dbg.declare(metadata i32* %pi_next_abs, metadata !7721, metadata !DIExpression()), !dbg !7722
  %16 = load i32, i32* %pi_next, align 4, !dbg !7723
  %17 = load i32, i32* %index_offset, align 4, !dbg !7724
  %add9 = add nsw i32 %16, %17, !dbg !7725
  store i32 %add9, i32* %pi_next_abs, align 4, !dbg !7722
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7726, metadata !DIExpression()), !dbg !7727
  %18 = load i8, i8* %do_init_interpolate.addr, align 1, !dbg !7728
  %tobool10 = icmp ne i8 %18, 0, !dbg !7728
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !7730

if.then11:                                        ; preds = %if.then
  store i32 0, i32* %i, align 4, !dbg !7731
  br label %for.cond, !dbg !7734

for.cond:                                         ; preds = %for.inc, %if.then11
  %19 = load i32, i32* %i, align 4, !dbg !7735
  %cmp = icmp slt i32 %19, 3, !dbg !7737
  br i1 %cmp, label %for.body, label %for.end, !dbg !7738

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %i, align 4, !dbg !7739
  %idxprom = sext i32 %20 to i64, !dbg !7741
  %arrayidx = getelementptr inbounds [3 x [2 x float]], [3 x [2 x float]]* %uv, i64 0, i64 %idxprom, !dbg !7741
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !7741
  %21 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7742
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %21, i32 0, i32 6, !dbg !7743
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !7743
  %23 = load i32, i32* %pi_curr, align 4, !dbg !7744
  %idxprom12 = sext i32 %23 to i64, !dbg !7742
  %arrayidx13 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %22, i64 %idxprom12, !dbg !7742
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx13, i32 0, i32 0, !dbg !7745
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 0, !dbg !7746
  %24 = load i32, i32* %i, align 4, !dbg !7747
  %idxprom14 = sext i32 %24 to i64, !dbg !7742
  %arrayidx15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 %idxprom14, !dbg !7742
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !7742
  %25 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7748
  %points17 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %25, i32 0, i32 6, !dbg !7749
  %26 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points17, align 8, !dbg !7749
  %27 = load i32, i32* %pi_prev, align 4, !dbg !7750
  %idxprom18 = sext i32 %27 to i64, !dbg !7748
  %arrayidx19 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %26, i64 %idxprom18, !dbg !7748
  %bezt20 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx19, i32 0, i32 0, !dbg !7751
  %vec21 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt20, i32 0, i32 0, !dbg !7752
  %28 = load i32, i32* %i, align 4, !dbg !7753
  %idxprom22 = sext i32 %28 to i64, !dbg !7748
  %arrayidx23 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec21, i64 0, i64 %idxprom22, !dbg !7748
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx23, i64 0, i64 0, !dbg !7748
  %29 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7754
  %points25 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %29, i32 0, i32 6, !dbg !7755
  %30 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points25, align 8, !dbg !7755
  %31 = load i32, i32* %pi_next, align 4, !dbg !7756
  %idxprom26 = sext i32 %31 to i64, !dbg !7754
  %arrayidx27 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %30, i64 %idxprom26, !dbg !7754
  %bezt28 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx27, i32 0, i32 0, !dbg !7757
  %vec29 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt28, i32 0, i32 0, !dbg !7758
  %32 = load i32, i32* %i, align 4, !dbg !7759
  %idxprom30 = sext i32 %32 to i64, !dbg !7754
  %arrayidx31 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec29, i64 0, i64 %idxprom30, !dbg !7754
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx31, i64 0, i64 0, !dbg !7754
  call void @interp_weights_uv_v2_calc(float* %arraydecay, float* %arraydecay16, float* %arraydecay24, float* %arraydecay32), !dbg !7760
  br label %for.inc, !dbg !7761

for.inc:                                          ; preds = %for.body
  %33 = load i32, i32* %i, align 4, !dbg !7762
  %inc = add nsw i32 %33, 1, !dbg !7762
  store i32 %inc, i32* %i, align 4, !dbg !7762
  br label %for.cond, !dbg !7763, !llvm.loop !7764

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !7766

if.end:                                           ; preds = %for.end, %if.then
  %34 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !7767
  %splines_shapes = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %34, i32 0, i32 4, !dbg !7769
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes, i32 0, i32 0, !dbg !7770
  %35 = load i8*, i8** %first, align 8, !dbg !7770
  %36 = bitcast i8* %35 to %struct.MaskLayerShape*, !dbg !7767
  store %struct.MaskLayerShape* %36, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7771
  br label %for.cond33, !dbg !7772

for.cond33:                                       ; preds = %for.inc117, %if.end
  %37 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7773
  %tobool34 = icmp ne %struct.MaskLayerShape* %37, null, !dbg !7775
  br i1 %tobool34, label %for.body35, label %for.end118, !dbg !7775

for.body35:                                       ; preds = %for.cond33
  %38 = load i32, i32* %tot, align 4, !dbg !7776
  %39 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7779
  %tot_vert = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %39, i32 0, i32 3, !dbg !7780
  %40 = load i32, i32* %tot_vert, align 8, !dbg !7780
  %cmp36 = icmp eq i32 %38, %40, !dbg !7781
  br i1 %cmp36, label %if.then37, label %if.else113, !dbg !7782

if.then37:                                        ; preds = %for.body35
  call void @llvm.dbg.declare(metadata float** %data_resized, metadata !7783, metadata !DIExpression()), !dbg !7785
  %41 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7786
  %tot_vert38 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %41, i32 0, i32 3, !dbg !7787
  %42 = load i32, i32* %tot_vert38, align 8, !dbg !7788
  %inc39 = add nsw i32 %42, 1, !dbg !7788
  store i32 %inc39, i32* %tot_vert38, align 8, !dbg !7788
  %43 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7789
  %44 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7790
  %tot_vert40 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %44, i32 0, i32 3, !dbg !7791
  %45 = load i32, i32* %tot_vert40, align 8, !dbg !7791
  %conv = sext i32 %45 to i64, !dbg !7790
  %mul = mul i64 %conv, 4, !dbg !7792
  %mul41 = mul i64 %mul, 8, !dbg !7793
  %call42 = call i8* %43(i64 %mul41, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__func__.BKE_mask_layer_shape_changed_add, i64 0, i64 0)), !dbg !7789
  %46 = bitcast i8* %call42 to float*, !dbg !7789
  store float* %46, float** %data_resized, align 8, !dbg !7794
  %47 = load i32, i32* %index.addr, align 4, !dbg !7795
  %cmp43 = icmp sgt i32 %47, 0, !dbg !7797
  br i1 %cmp43, label %if.then45, label %if.end49, !dbg !7798

if.then45:                                        ; preds = %if.then37
  %48 = load float*, float** %data_resized, align 8, !dbg !7799
  %49 = bitcast float* %48 to i8*, !dbg !7801
  %50 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7802
  %data = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %50, i32 0, i32 2, !dbg !7803
  %51 = load float*, float** %data, align 8, !dbg !7803
  %52 = bitcast float* %51 to i8*, !dbg !7801
  %53 = load i32, i32* %index.addr, align 4, !dbg !7804
  %conv46 = sext i32 %53 to i64, !dbg !7804
  %mul47 = mul i64 %conv46, 4, !dbg !7805
  %mul48 = mul i64 %mul47, 8, !dbg !7806
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %52, i64 %mul48, i1 false), !dbg !7801
  br label %if.end49, !dbg !7807

if.end49:                                         ; preds = %if.then45, %if.then37
  %54 = load i32, i32* %index.addr, align 4, !dbg !7808
  %55 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7810
  %tot_vert50 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %55, i32 0, i32 3, !dbg !7811
  %56 = load i32, i32* %tot_vert50, align 8, !dbg !7811
  %sub51 = sub nsw i32 %56, 1, !dbg !7812
  %cmp52 = icmp ne i32 %54, %sub51, !dbg !7813
  br i1 %cmp52, label %if.then54, label %if.end67, !dbg !7814

if.then54:                                        ; preds = %if.end49
  %57 = load float*, float** %data_resized, align 8, !dbg !7815
  %58 = load i32, i32* %index.addr, align 4, !dbg !7817
  %add55 = add nsw i32 %58, 1, !dbg !7818
  %mul56 = mul nsw i32 %add55, 8, !dbg !7819
  %idxprom57 = sext i32 %mul56 to i64, !dbg !7815
  %arrayidx58 = getelementptr inbounds float, float* %57, i64 %idxprom57, !dbg !7815
  %59 = bitcast float* %arrayidx58 to i8*, !dbg !7820
  %60 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7821
  %data59 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %60, i32 0, i32 2, !dbg !7822
  %61 = load float*, float** %data59, align 8, !dbg !7822
  %62 = load i32, i32* %index.addr, align 4, !dbg !7823
  %mul60 = mul nsw i32 %62, 8, !dbg !7824
  %idx.ext = sext i32 %mul60 to i64, !dbg !7825
  %add.ptr = getelementptr inbounds float, float* %61, i64 %idx.ext, !dbg !7825
  %63 = bitcast float* %add.ptr to i8*, !dbg !7820
  %64 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7826
  %tot_vert61 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %64, i32 0, i32 3, !dbg !7827
  %65 = load i32, i32* %tot_vert61, align 8, !dbg !7827
  %66 = load i32, i32* %index.addr, align 4, !dbg !7828
  %add62 = add nsw i32 %66, 1, !dbg !7829
  %sub63 = sub nsw i32 %65, %add62, !dbg !7830
  %conv64 = sext i32 %sub63 to i64, !dbg !7831
  %mul65 = mul i64 %conv64, 4, !dbg !7832
  %mul66 = mul i64 %mul65, 8, !dbg !7833
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %63, i64 %mul66, i1 false), !dbg !7820
  br label %if.end67, !dbg !7834

if.end67:                                         ; preds = %if.then54, %if.end49
  %67 = load i8, i8* %do_init.addr, align 1, !dbg !7835
  %tobool68 = icmp ne i8 %67, 0, !dbg !7835
  br i1 %tobool68, label %if.then69, label %if.else, !dbg !7837

if.then69:                                        ; preds = %if.end67
  call void @llvm.dbg.declare(metadata float** %fp, metadata !7838, metadata !DIExpression()), !dbg !7840
  %68 = load float*, float** %data_resized, align 8, !dbg !7841
  %69 = load i32, i32* %index.addr, align 4, !dbg !7842
  %mul70 = mul nsw i32 %69, 8, !dbg !7843
  %idxprom71 = sext i32 %mul70 to i64, !dbg !7841
  %arrayidx72 = getelementptr inbounds float, float* %68, i64 %idxprom71, !dbg !7841
  store float* %arrayidx72, float** %fp, align 8, !dbg !7840
  %70 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7844
  %points73 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %70, i32 0, i32 6, !dbg !7845
  %71 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points73, align 8, !dbg !7845
  %72 = load i32, i32* %spline_point_index, align 4, !dbg !7846
  %idxprom74 = sext i32 %72 to i64, !dbg !7844
  %arrayidx75 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %71, i64 %idxprom74, !dbg !7844
  %bezt76 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %arrayidx75, i32 0, i32 0, !dbg !7847
  %73 = load float*, float** %fp, align 8, !dbg !7848
  call void @mask_layer_shape_from_mask_point(%struct.BezTriple* %bezt76, float* %73), !dbg !7849
  %74 = load i8, i8* %do_init_interpolate.addr, align 1, !dbg !7850
  %conv77 = zext i8 %74 to i32, !dbg !7850
  %tobool78 = icmp ne i32 %conv77, 0, !dbg !7850
  br i1 %tobool78, label %land.lhs.true, label %if.end106, !dbg !7852

land.lhs.true:                                    ; preds = %if.then69
  %75 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !7853
  %tot_point79 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %75, i32 0, i32 5, !dbg !7854
  %76 = load i32, i32* %tot_point79, align 4, !dbg !7854
  %cmp80 = icmp sgt i32 %76, 2, !dbg !7855
  br i1 %cmp80, label %if.then82, label %if.end106, !dbg !7856

if.then82:                                        ; preds = %land.lhs.true
  store i32 0, i32* %i, align 4, !dbg !7857
  br label %for.cond83, !dbg !7860

for.cond83:                                       ; preds = %for.inc103, %if.then82
  %77 = load i32, i32* %i, align 4, !dbg !7861
  %cmp84 = icmp slt i32 %77, 3, !dbg !7863
  br i1 %cmp84, label %for.body86, label %for.end105, !dbg !7864

for.body86:                                       ; preds = %for.cond83
  %78 = load i32, i32* %i, align 4, !dbg !7865
  %idxprom87 = sext i32 %78 to i64, !dbg !7867
  %arrayidx88 = getelementptr inbounds [3 x [2 x float]], [3 x [2 x float]]* %uv, i64 0, i64 %idxprom87, !dbg !7867
  %arraydecay89 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx88, i64 0, i64 0, !dbg !7867
  %79 = load float*, float** %fp, align 8, !dbg !7868
  %80 = load i32, i32* %i, align 4, !dbg !7869
  %mul90 = mul nsw i32 %80, 2, !dbg !7870
  %idxprom91 = sext i32 %mul90 to i64, !dbg !7868
  %arrayidx92 = getelementptr inbounds float, float* %79, i64 %idxprom91, !dbg !7868
  %81 = load float*, float** %data_resized, align 8, !dbg !7871
  %82 = load i32, i32* %pi_prev_abs, align 4, !dbg !7872
  %mul93 = mul nsw i32 %82, 8, !dbg !7873
  %83 = load i32, i32* %i, align 4, !dbg !7874
  %mul94 = mul nsw i32 %83, 2, !dbg !7875
  %add95 = add nsw i32 %mul93, %mul94, !dbg !7876
  %idxprom96 = sext i32 %add95 to i64, !dbg !7871
  %arrayidx97 = getelementptr inbounds float, float* %81, i64 %idxprom96, !dbg !7871
  %84 = load float*, float** %data_resized, align 8, !dbg !7877
  %85 = load i32, i32* %pi_next_abs, align 4, !dbg !7878
  %mul98 = mul nsw i32 %85, 8, !dbg !7879
  %86 = load i32, i32* %i, align 4, !dbg !7880
  %mul99 = mul nsw i32 %86, 2, !dbg !7881
  %add100 = add nsw i32 %mul98, %mul99, !dbg !7882
  %idxprom101 = sext i32 %add100 to i64, !dbg !7877
  %arrayidx102 = getelementptr inbounds float, float* %84, i64 %idxprom101, !dbg !7877
  call void @interp_weights_uv_v2_apply(float* %arraydecay89, float* %arrayidx92, float* %arrayidx97, float* %arrayidx102), !dbg !7883
  br label %for.inc103, !dbg !7884

for.inc103:                                       ; preds = %for.body86
  %87 = load i32, i32* %i, align 4, !dbg !7885
  %inc104 = add nsw i32 %87, 1, !dbg !7885
  store i32 %inc104, i32* %i, align 4, !dbg !7885
  br label %for.cond83, !dbg !7886, !llvm.loop !7887

for.end105:                                       ; preds = %for.cond83
  br label %if.end106, !dbg !7889

if.end106:                                        ; preds = %for.end105, %land.lhs.true, %if.then69
  br label %if.end110, !dbg !7890

if.else:                                          ; preds = %if.end67
  %88 = load float*, float** %data_resized, align 8, !dbg !7891
  %89 = load i32, i32* %index.addr, align 4, !dbg !7893
  %mul107 = mul nsw i32 %89, 8, !dbg !7894
  %idxprom108 = sext i32 %mul107 to i64, !dbg !7891
  %arrayidx109 = getelementptr inbounds float, float* %88, i64 %idxprom108, !dbg !7891
  %90 = bitcast float* %arrayidx109 to i8*, !dbg !7895
  call void @llvm.memset.p0i8.i64(i8* align 4 %90, i8 0, i64 32, i1 false), !dbg !7895
  br label %if.end110

if.end110:                                        ; preds = %if.else, %if.end106
  %91 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7896
  %92 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7897
  %data111 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %92, i32 0, i32 2, !dbg !7898
  %93 = load float*, float** %data111, align 8, !dbg !7898
  %94 = bitcast float* %93 to i8*, !dbg !7897
  call void %91(i8* %94), !dbg !7896
  %95 = load float*, float** %data_resized, align 8, !dbg !7899
  %96 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7900
  %data112 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %96, i32 0, i32 2, !dbg !7901
  store float* %95, float** %data112, align 8, !dbg !7902
  br label %if.end116, !dbg !7903

if.else113:                                       ; preds = %for.body35
  %97 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7904
  %tot_vert114 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %97, i32 0, i32 3, !dbg !7906
  %98 = load i32, i32* %tot_vert114, align 8, !dbg !7906
  %99 = load i32, i32* %tot, align 4, !dbg !7907
  %100 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7908
  %frame = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %100, i32 0, i32 4, !dbg !7909
  %101 = load i32, i32* %frame, align 4, !dbg !7909
  %call115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__func__.BKE_mask_layer_shape_changed_add, i64 0, i64 0), i32 %98, i32 %99, i32 %101), !dbg !7910
  br label %if.end116

if.end116:                                        ; preds = %if.else113, %if.end110
  br label %for.inc117, !dbg !7911

for.inc117:                                       ; preds = %if.end116
  %102 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7912
  %next = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %102, i32 0, i32 0, !dbg !7913
  %103 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %next, align 8, !dbg !7913
  store %struct.MaskLayerShape* %103, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !7914
  br label %for.cond33, !dbg !7915, !llvm.loop !7916

for.end118:                                       ; preds = %for.cond33
  br label %if.end119, !dbg !7918

if.end119:                                        ; preds = %for.end118, %entry
  ret void, !dbg !7919
}

; Function Attrs: noinline nounwind uwtable
define internal void @interp_weights_uv_v2_calc(float* %r_uv, float* %pt, float* %pt_a, float* %pt_b) #0 !dbg !7920 {
entry:
  %r_uv.addr = alloca float*, align 8
  %pt.addr = alloca float*, align 8
  %pt_a.addr = alloca float*, align 8
  %pt_b.addr = alloca float*, align 8
  %pt_on_line = alloca [2 x float], align 4
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !7923, metadata !DIExpression()), !dbg !7924
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !7925, metadata !DIExpression()), !dbg !7926
  store float* %pt_a, float** %pt_a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt_a.addr, metadata !7927, metadata !DIExpression()), !dbg !7928
  store float* %pt_b, float** %pt_b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt_b.addr, metadata !7929, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.declare(metadata [2 x float]* %pt_on_line, metadata !7931, metadata !DIExpression()), !dbg !7932
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %pt_on_line, i64 0, i64 0, !dbg !7933
  %0 = load float*, float** %pt.addr, align 8, !dbg !7934
  %1 = load float*, float** %pt_a.addr, align 8, !dbg !7935
  %2 = load float*, float** %pt_b.addr, align 8, !dbg !7936
  %call = call float @closest_to_line_v2(float* %arraydecay, float* %0, float* %1, float* %2), !dbg !7937
  %3 = load float*, float** %r_uv.addr, align 8, !dbg !7938
  %arrayidx = getelementptr inbounds float, float* %3, i64 0, !dbg !7938
  store float %call, float* %arrayidx, align 4, !dbg !7939
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %pt_on_line, i64 0, i64 0, !dbg !7940
  %4 = load float*, float** %pt.addr, align 8, !dbg !7941
  %call2 = call float @len_v2v2(float* %arraydecay1, float* %4), !dbg !7942
  %5 = load float*, float** %pt_a.addr, align 8, !dbg !7943
  %6 = load float*, float** %pt_b.addr, align 8, !dbg !7944
  %call3 = call float @len_v2v2(float* %5, float* %6), !dbg !7945
  %div = fdiv float %call2, %call3, !dbg !7946
  %7 = load float*, float** %pt_a.addr, align 8, !dbg !7947
  %8 = load float*, float** %pt_b.addr, align 8, !dbg !7948
  %9 = load float*, float** %pt.addr, align 8, !dbg !7949
  %call4 = call float @line_point_side_v2(float* %7, float* %8, float* %9), !dbg !7950
  %cmp = fcmp olt float %call4, 0.000000e+00, !dbg !7951
  %10 = zext i1 %cmp to i64, !dbg !7952
  %cond = select i1 %cmp, float -1.000000e+00, float 1.000000e+00, !dbg !7952
  %mul = fmul float %div, %cond, !dbg !7953
  %11 = load float*, float** %r_uv.addr, align 8, !dbg !7954
  %arrayidx5 = getelementptr inbounds float, float* %11, i64 1, !dbg !7954
  store float %mul, float* %arrayidx5, align 4, !dbg !7955
  ret void, !dbg !7956
}

; Function Attrs: noinline nounwind uwtable
define internal void @interp_weights_uv_v2_apply(float* %uv, float* %r_pt, float* %pt_a, float* %pt_b) #0 !dbg !7957 {
entry:
  %uv.addr = alloca float*, align 8
  %r_pt.addr = alloca float*, align 8
  %pt_a.addr = alloca float*, align 8
  %pt_b.addr = alloca float*, align 8
  %dvec = alloca [2 x float], align 4
  store float* %uv, float** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv.addr, metadata !7960, metadata !DIExpression()), !dbg !7961
  store float* %r_pt, float** %r_pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_pt.addr, metadata !7962, metadata !DIExpression()), !dbg !7963
  store float* %pt_a, float** %pt_a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt_a.addr, metadata !7964, metadata !DIExpression()), !dbg !7965
  store float* %pt_b, float** %pt_b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt_b.addr, metadata !7966, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.declare(metadata [2 x float]* %dvec, metadata !7968, metadata !DIExpression()), !dbg !7970
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %dvec, i64 0, i64 0, !dbg !7971
  %0 = load float*, float** %pt_b.addr, align 8, !dbg !7972
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7972
  %1 = load float, float* %arrayidx, align 4, !dbg !7972
  %2 = load float*, float** %pt_a.addr, align 8, !dbg !7973
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7973
  %3 = load float, float* %arrayidx1, align 4, !dbg !7973
  %sub = fsub float %1, %3, !dbg !7974
  store float %sub, float* %arrayinit.begin, align 4, !dbg !7971
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !7971
  %4 = load float*, float** %pt_b.addr, align 8, !dbg !7975
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7975
  %5 = load float, float* %arrayidx2, align 4, !dbg !7975
  %6 = load float*, float** %pt_a.addr, align 8, !dbg !7976
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7976
  %7 = load float, float* %arrayidx3, align 4, !dbg !7976
  %sub4 = fsub float %5, %7, !dbg !7977
  store float %sub4, float* %arrayinit.element, align 4, !dbg !7971
  %8 = load float*, float** %r_pt.addr, align 8, !dbg !7978
  %9 = load float*, float** %pt_a.addr, align 8, !dbg !7979
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %dvec, i64 0, i64 0, !dbg !7980
  %10 = load float*, float** %uv.addr, align 8, !dbg !7981
  %arrayidx5 = getelementptr inbounds float, float* %10, i64 0, !dbg !7981
  %11 = load float, float* %arrayidx5, align 4, !dbg !7981
  call void @madd_v2_v2v2fl(float* %8, float* %9, float* %arraydecay, float %11), !dbg !7982
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %dvec, i64 0, i64 1, !dbg !7983
  %12 = load float, float* %arrayidx6, align 4, !dbg !7983
  %fneg = fneg float %12, !dbg !7984
  %13 = load float*, float** %uv.addr, align 8, !dbg !7985
  %arrayidx7 = getelementptr inbounds float, float* %13, i64 1, !dbg !7985
  %14 = load float, float* %arrayidx7, align 4, !dbg !7985
  %mul = fmul float %fneg, %14, !dbg !7986
  %15 = load float*, float** %r_pt.addr, align 8, !dbg !7987
  %arrayidx8 = getelementptr inbounds float, float* %15, i64 0, !dbg !7987
  %16 = load float, float* %arrayidx8, align 4, !dbg !7988
  %add = fadd float %16, %mul, !dbg !7988
  store float %add, float* %arrayidx8, align 4, !dbg !7988
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %dvec, i64 0, i64 0, !dbg !7989
  %17 = load float, float* %arrayidx9, align 4, !dbg !7989
  %18 = load float*, float** %uv.addr, align 8, !dbg !7990
  %arrayidx10 = getelementptr inbounds float, float* %18, i64 1, !dbg !7990
  %19 = load float, float* %arrayidx10, align 4, !dbg !7990
  %mul11 = fmul float %17, %19, !dbg !7991
  %20 = load float*, float** %r_pt.addr, align 8, !dbg !7992
  %arrayidx12 = getelementptr inbounds float, float* %20, i64 1, !dbg !7992
  %21 = load float, float* %arrayidx12, align 4, !dbg !7993
  %add13 = fadd float %21, %mul11, !dbg !7993
  store float %add13, float* %arrayidx12, align 4, !dbg !7993
  ret void, !dbg !7994
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_layer_shape_changed_remove(%struct.MaskLayer* %masklay, i32 %index, i32 %count) #0 !dbg !7995 {
entry:
  %masklay.addr = alloca %struct.MaskLayer*, align 8
  %index.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %masklay_shape = alloca %struct.MaskLayerShape*, align 8
  %tot = alloca i32, align 4
  %data_resized = alloca float*, align 8
  store %struct.MaskLayer* %masklay, %struct.MaskLayer** %masklay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay.addr, metadata !7998, metadata !DIExpression()), !dbg !7999
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8000, metadata !DIExpression()), !dbg !8001
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !8002, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.declare(metadata %struct.MaskLayerShape** %masklay_shape, metadata !8004, metadata !DIExpression()), !dbg !8005
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !8006, metadata !DIExpression()), !dbg !8007
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !8008
  %call = call i32 @BKE_mask_layer_shape_totvert(%struct.MaskLayer* %0), !dbg !8009
  store i32 %call, i32* %tot, align 4, !dbg !8007
  %1 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay.addr, align 8, !dbg !8010
  %splines_shapes = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %1, i32 0, i32 4, !dbg !8012
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines_shapes, i32 0, i32 0, !dbg !8013
  %2 = load i8*, i8** %first, align 8, !dbg !8013
  %3 = bitcast i8* %2 to %struct.MaskLayerShape*, !dbg !8010
  store %struct.MaskLayerShape* %3, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8014
  br label %for.cond, !dbg !8015

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8016
  %tobool = icmp ne %struct.MaskLayerShape* %4, null, !dbg !8018
  br i1 %tobool, label %for.body, label %for.end, !dbg !8018

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %tot, align 4, !dbg !8019
  %6 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8022
  %tot_vert = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %6, i32 0, i32 3, !dbg !8023
  %7 = load i32, i32* %tot_vert, align 8, !dbg !8023
  %8 = load i32, i32* %count.addr, align 4, !dbg !8024
  %sub = sub nsw i32 %7, %8, !dbg !8025
  %cmp = icmp eq i32 %5, %sub, !dbg !8026
  br i1 %cmp, label %if.then, label %if.else, !dbg !8027

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float** %data_resized, metadata !8028, metadata !DIExpression()), !dbg !8030
  %9 = load i32, i32* %count.addr, align 4, !dbg !8031
  %10 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8032
  %tot_vert1 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %10, i32 0, i32 3, !dbg !8033
  %11 = load i32, i32* %tot_vert1, align 8, !dbg !8034
  %sub2 = sub nsw i32 %11, %9, !dbg !8034
  store i32 %sub2, i32* %tot_vert1, align 8, !dbg !8034
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8035
  %13 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8036
  %tot_vert3 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %13, i32 0, i32 3, !dbg !8037
  %14 = load i32, i32* %tot_vert3, align 8, !dbg !8037
  %conv = sext i32 %14 to i64, !dbg !8036
  %mul = mul i64 %conv, 4, !dbg !8038
  %mul4 = mul i64 %mul, 8, !dbg !8039
  %call5 = call i8* %12(i64 %mul4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__func__.BKE_mask_layer_shape_changed_remove, i64 0, i64 0)), !dbg !8035
  %15 = bitcast i8* %call5 to float*, !dbg !8035
  store float* %15, float** %data_resized, align 8, !dbg !8040
  %16 = load i32, i32* %index.addr, align 4, !dbg !8041
  %cmp6 = icmp sgt i32 %16, 0, !dbg !8043
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !8044

if.then8:                                         ; preds = %if.then
  %17 = load float*, float** %data_resized, align 8, !dbg !8045
  %18 = bitcast float* %17 to i8*, !dbg !8047
  %19 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8048
  %data = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %19, i32 0, i32 2, !dbg !8049
  %20 = load float*, float** %data, align 8, !dbg !8049
  %21 = bitcast float* %20 to i8*, !dbg !8047
  %22 = load i32, i32* %index.addr, align 4, !dbg !8050
  %conv9 = sext i32 %22 to i64, !dbg !8050
  %mul10 = mul i64 %conv9, 4, !dbg !8051
  %mul11 = mul i64 %mul10, 8, !dbg !8052
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %21, i64 %mul11, i1 false), !dbg !8047
  br label %if.end, !dbg !8053

if.end:                                           ; preds = %if.then8, %if.then
  %23 = load i32, i32* %index.addr, align 4, !dbg !8054
  %24 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8056
  %tot_vert12 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %24, i32 0, i32 3, !dbg !8057
  %25 = load i32, i32* %tot_vert12, align 8, !dbg !8057
  %cmp13 = icmp ne i32 %23, %25, !dbg !8058
  br i1 %cmp13, label %if.then15, label %if.end24, !dbg !8059

if.then15:                                        ; preds = %if.end
  %26 = load float*, float** %data_resized, align 8, !dbg !8060
  %27 = load i32, i32* %index.addr, align 4, !dbg !8062
  %mul16 = mul nsw i32 %27, 8, !dbg !8063
  %idxprom = sext i32 %mul16 to i64, !dbg !8060
  %arrayidx = getelementptr inbounds float, float* %26, i64 %idxprom, !dbg !8060
  %28 = bitcast float* %arrayidx to i8*, !dbg !8064
  %29 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8065
  %data17 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %29, i32 0, i32 2, !dbg !8066
  %30 = load float*, float** %data17, align 8, !dbg !8066
  %31 = load i32, i32* %index.addr, align 4, !dbg !8067
  %32 = load i32, i32* %count.addr, align 4, !dbg !8068
  %add = add nsw i32 %31, %32, !dbg !8069
  %mul18 = mul nsw i32 %add, 8, !dbg !8070
  %idx.ext = sext i32 %mul18 to i64, !dbg !8071
  %add.ptr = getelementptr inbounds float, float* %30, i64 %idx.ext, !dbg !8071
  %33 = bitcast float* %add.ptr to i8*, !dbg !8064
  %34 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8072
  %tot_vert19 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %34, i32 0, i32 3, !dbg !8073
  %35 = load i32, i32* %tot_vert19, align 8, !dbg !8073
  %36 = load i32, i32* %index.addr, align 4, !dbg !8074
  %sub20 = sub nsw i32 %35, %36, !dbg !8075
  %conv21 = sext i32 %sub20 to i64, !dbg !8076
  %mul22 = mul i64 %conv21, 4, !dbg !8077
  %mul23 = mul i64 %mul22, 8, !dbg !8078
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %33, i64 %mul23, i1 false), !dbg !8064
  br label %if.end24, !dbg !8079

if.end24:                                         ; preds = %if.then15, %if.end
  %37 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8080
  %38 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8081
  %data25 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %38, i32 0, i32 2, !dbg !8082
  %39 = load float*, float** %data25, align 8, !dbg !8082
  %40 = bitcast float* %39 to i8*, !dbg !8081
  call void %37(i8* %40), !dbg !8080
  %41 = load float*, float** %data_resized, align 8, !dbg !8083
  %42 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8084
  %data26 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %42, i32 0, i32 2, !dbg !8085
  store float* %41, float** %data26, align 8, !dbg !8086
  br label %if.end30, !dbg !8087

if.else:                                          ; preds = %for.body
  %43 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8088
  %tot_vert27 = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %43, i32 0, i32 3, !dbg !8090
  %44 = load i32, i32* %tot_vert27, align 8, !dbg !8090
  %45 = load i32, i32* %count.addr, align 4, !dbg !8091
  %sub28 = sub nsw i32 %44, %45, !dbg !8092
  %46 = load i32, i32* %tot, align 4, !dbg !8093
  %47 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8094
  %frame = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %47, i32 0, i32 4, !dbg !8095
  %48 = load i32, i32* %frame, align 4, !dbg !8095
  %call29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__func__.BKE_mask_layer_shape_changed_remove, i64 0, i64 0), i32 %sub28, i32 %46, i32 %48), !dbg !8096
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.end24
  br label %for.inc, !dbg !8097

for.inc:                                          ; preds = %if.end30
  %49 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8098
  %next = getelementptr inbounds %struct.MaskLayerShape, %struct.MaskLayerShape* %49, i32 0, i32 0, !dbg !8099
  %50 = load %struct.MaskLayerShape*, %struct.MaskLayerShape** %next, align 8, !dbg !8099
  store %struct.MaskLayerShape* %50, %struct.MaskLayerShape** %masklay_shape, align 8, !dbg !8100
  br label %for.cond, !dbg !8101, !llvm.loop !8102

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8104
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_mask_get_duration(%struct.Mask* %mask) #0 !dbg !8105 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !8108, metadata !DIExpression()), !dbg !8109
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !8110
  %efra = getelementptr inbounds %struct.Mask, %struct.Mask* %0, i32 0, i32 6, !dbg !8111
  %1 = load i32, i32* %efra, align 4, !dbg !8111
  %2 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !8112
  %sfra = getelementptr inbounds %struct.Mask, %struct.Mask* %2, i32 0, i32 5, !dbg !8113
  %3 = load i32, i32* %sfra, align 8, !dbg !8113
  %sub = sub nsw i32 %1, %3, !dbg !8114
  %call = call i32 @max_ii(i32 1, i32 %sub), !dbg !8115
  ret i32 %call, !dbg !8116
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !8117 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8121, metadata !DIExpression()), !dbg !8122
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !8123, metadata !DIExpression()), !dbg !8124
  %0 = load i32, i32* %b.addr, align 4, !dbg !8125
  %1 = load i32, i32* %a.addr, align 4, !dbg !8126
  %cmp = icmp slt i32 %0, %1, !dbg !8127
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8128

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !8129
  br label %cond.end, !dbg !8128

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !8130
  br label %cond.end, !dbg !8128

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8128
  ret i32 %cond, !dbg !8131
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_clipboard_free() #0 !dbg !8132 {
entry:
  call void @mask_clipboard_free_ex(i8 zeroext 1), !dbg !8135
  ret void, !dbg !8136
}

; Function Attrs: noinline nounwind uwtable
define internal void @mask_clipboard_free_ex(i8 zeroext %final_free) #0 !dbg !8137 {
entry:
  %final_free.addr = alloca i8, align 1
  store i8 %final_free, i8* %final_free.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %final_free.addr, metadata !8140, metadata !DIExpression()), !dbg !8141
  call void @BKE_mask_spline_free_list(%struct.ListBase* getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 0)), !dbg !8142
  call void @BLI_listbase_clear(%struct.ListBase* getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 0)), !dbg !8143
  %0 = load %struct.GHash*, %struct.GHash** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 1), align 8, !dbg !8144
  %tobool = icmp ne %struct.GHash* %0, null, !dbg !8146
  br i1 %tobool, label %if.then, label %if.end3, !dbg !8147

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %final_free.addr, align 1, !dbg !8148
  %tobool1 = icmp ne i8 %1, 0, !dbg !8148
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !8151

if.then2:                                         ; preds = %if.then
  %2 = load %struct.GHash*, %struct.GHash** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 1), align 8, !dbg !8152
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8154
  call void @BLI_ghash_free(%struct.GHash* %2, void (i8*)* null, void (i8*)* %3), !dbg !8155
  br label %if.end, !dbg !8156

if.else:                                          ; preds = %if.then
  %4 = load %struct.GHash*, %struct.GHash** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 1), align 8, !dbg !8157
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8159
  call void @BLI_ghash_clear(%struct.GHash* %4, void (i8*)* null, void (i8*)* %5), !dbg !8160
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end3, !dbg !8161

if.end3:                                          ; preds = %if.end, %entry
  ret void, !dbg !8162
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_clipboard_copy_from_layer(%struct.MaskLayer* %mask_layer) #0 !dbg !8163 {
entry:
  %mask_layer.addr = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %spline_new = alloca %struct.MaskSpline*, align 8
  %i = alloca i32, align 4
  %point = alloca %struct.MaskSplinePoint*, align 8
  %len = alloca i32, align 4
  %name_copy = alloca i8*, align 8
  store %struct.MaskLayer* %mask_layer, %struct.MaskLayer** %mask_layer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer.addr, metadata !8164, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !8166, metadata !DIExpression()), !dbg !8167
  %0 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer.addr, align 8, !dbg !8168
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %0, i32 0, i32 13, !dbg !8170
  %1 = load i8, i8* %restrictflag, align 1, !dbg !8170
  %conv = zext i8 %1 to i32, !dbg !8168
  %and = and i32 %conv, 2, !dbg !8171
  %tobool = icmp ne i32 %and, 0, !dbg !8171
  br i1 %tobool, label %if.then, label %if.end, !dbg !8172

if.then:                                          ; preds = %entry
  br label %for.end38, !dbg !8173

if.end:                                           ; preds = %entry
  call void @mask_clipboard_free_ex(i8 zeroext 0), !dbg !8175
  %2 = load %struct.GHash*, %struct.GHash** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 1), align 8, !dbg !8176
  %cmp = icmp eq %struct.GHash* %2, null, !dbg !8178
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8179

if.then2:                                         ; preds = %if.end
  %call = call %struct.GHash* @BLI_ghash_ptr_new(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0)), !dbg !8180
  store %struct.GHash* %call, %struct.GHash** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 1), align 8, !dbg !8182
  br label %if.end3, !dbg !8183

if.end3:                                          ; preds = %if.then2, %if.end
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer.addr, align 8, !dbg !8184
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 3, !dbg !8186
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !8187
  %4 = load i8*, i8** %first, align 8, !dbg !8187
  %5 = bitcast i8* %4 to %struct.MaskSpline*, !dbg !8184
  store %struct.MaskSpline* %5, %struct.MaskSpline** %spline, align 8, !dbg !8188
  br label %for.cond, !dbg !8189

for.cond:                                         ; preds = %for.inc37, %if.end3
  %6 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8190
  %tobool4 = icmp ne %struct.MaskSpline* %6, null, !dbg !8192
  br i1 %tobool4, label %for.body, label %for.end38, !dbg !8192

for.body:                                         ; preds = %for.cond
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8193
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %7, i32 0, i32 2, !dbg !8196
  %8 = load i16, i16* %flag, align 8, !dbg !8196
  %conv5 = sext i16 %8 to i32, !dbg !8193
  %and6 = and i32 %conv5, 1, !dbg !8197
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8197
  br i1 %tobool7, label %if.then8, label %if.end36, !dbg !8198

if.then8:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline_new, metadata !8199, metadata !DIExpression()), !dbg !8201
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8202
  %call9 = call %struct.MaskSpline* @BKE_mask_spline_copy(%struct.MaskSpline* %9), !dbg !8203
  store %struct.MaskSpline* %call9, %struct.MaskSpline** %spline_new, align 8, !dbg !8201
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8204, metadata !DIExpression()), !dbg !8205
  store i32 0, i32* %i, align 4, !dbg !8206
  br label %for.cond10, !dbg !8208

for.cond10:                                       ; preds = %for.inc, %if.then8
  %10 = load i32, i32* %i, align 4, !dbg !8209
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline_new, align 8, !dbg !8211
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %11, i32 0, i32 5, !dbg !8212
  %12 = load i32, i32* %tot_point, align 4, !dbg !8212
  %cmp11 = icmp slt i32 %10, %12, !dbg !8213
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !8214

for.body13:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !8215, metadata !DIExpression()), !dbg !8217
  %13 = load %struct.MaskSpline*, %struct.MaskSpline** %spline_new, align 8, !dbg !8218
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %13, i32 0, i32 6, !dbg !8219
  %14 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !8219
  %15 = load i32, i32* %i, align 4, !dbg !8220
  %idxprom = sext i32 %15 to i64, !dbg !8218
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %14, i64 %idxprom, !dbg !8218
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !8217
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !8221
  %parent = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %16, i32 0, i32 4, !dbg !8223
  %id = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %parent, i32 0, i32 2, !dbg !8224
  %17 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !8224
  %tobool14 = icmp ne %struct.ID* %17, null, !dbg !8221
  br i1 %tobool14, label %if.then15, label %if.end35, !dbg !8225

if.then15:                                        ; preds = %for.body13
  %18 = load %struct.GHash*, %struct.GHash** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 1), align 8, !dbg !8226
  %19 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !8229
  %parent16 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %19, i32 0, i32 4, !dbg !8230
  %id17 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %parent16, i32 0, i32 2, !dbg !8231
  %20 = load %struct.ID*, %struct.ID** %id17, align 8, !dbg !8231
  %21 = bitcast %struct.ID* %20 to i8*, !dbg !8229
  %call18 = call i8* @BLI_ghash_lookup(%struct.GHash* %18, i8* %21), !dbg !8232
  %tobool19 = icmp ne i8* %call18, null, !dbg !8232
  br i1 %tobool19, label %if.end34, label %if.then20, !dbg !8233

if.then20:                                        ; preds = %if.then15
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8234, metadata !DIExpression()), !dbg !8236
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !8237
  %parent21 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %22, i32 0, i32 4, !dbg !8238
  %id22 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %parent21, i32 0, i32 2, !dbg !8239
  %23 = load %struct.ID*, %struct.ID** %id22, align 8, !dbg !8239
  %name = getelementptr inbounds %struct.ID, %struct.ID* %23, i32 0, i32 4, !dbg !8240
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8237
  %call23 = call i64 @strlen(i8* %arraydecay) #7, !dbg !8241
  %conv24 = trunc i64 %call23 to i32, !dbg !8241
  store i32 %conv24, i32* %len, align 4, !dbg !8236
  call void @llvm.dbg.declare(metadata i8** %name_copy, metadata !8242, metadata !DIExpression()), !dbg !8243
  %24 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8244
  %25 = load i32, i32* %len, align 4, !dbg !8245
  %add = add nsw i32 %25, 1, !dbg !8246
  %conv25 = sext i32 %add to i64, !dbg !8245
  %call26 = call i8* %24(i64 %conv25, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0)), !dbg !8244
  store i8* %call26, i8** %name_copy, align 8, !dbg !8243
  %26 = load i8*, i8** %name_copy, align 8, !dbg !8247
  %27 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !8248
  %parent27 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %27, i32 0, i32 4, !dbg !8249
  %id28 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %parent27, i32 0, i32 2, !dbg !8250
  %28 = load %struct.ID*, %struct.ID** %id28, align 8, !dbg !8250
  %name29 = getelementptr inbounds %struct.ID, %struct.ID* %28, i32 0, i32 4, !dbg !8251
  %arraydecay30 = getelementptr inbounds [66 x i8], [66 x i8]* %name29, i64 0, i64 0, !dbg !8248
  %call31 = call i8* @strcpy(i8* %26, i8* %arraydecay30) #6, !dbg !8252
  %29 = load %struct.GHash*, %struct.GHash** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 1), align 8, !dbg !8253
  %30 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !8254
  %parent32 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %30, i32 0, i32 4, !dbg !8255
  %id33 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %parent32, i32 0, i32 2, !dbg !8256
  %31 = load %struct.ID*, %struct.ID** %id33, align 8, !dbg !8256
  %32 = bitcast %struct.ID* %31 to i8*, !dbg !8254
  %33 = load i8*, i8** %name_copy, align 8, !dbg !8257
  call void @BLI_ghash_insert(%struct.GHash* %29, i8* %32, i8* %33), !dbg !8258
  br label %if.end34, !dbg !8259

if.end34:                                         ; preds = %if.then20, %if.then15
  br label %if.end35, !dbg !8260

if.end35:                                         ; preds = %if.end34, %for.body13
  br label %for.inc, !dbg !8261

for.inc:                                          ; preds = %if.end35
  %34 = load i32, i32* %i, align 4, !dbg !8262
  %inc = add nsw i32 %34, 1, !dbg !8262
  store i32 %inc, i32* %i, align 4, !dbg !8262
  br label %for.cond10, !dbg !8263, !llvm.loop !8264

for.end:                                          ; preds = %for.cond10
  %35 = load %struct.MaskSpline*, %struct.MaskSpline** %spline_new, align 8, !dbg !8266
  %36 = bitcast %struct.MaskSpline* %35 to i8*, !dbg !8266
  call void @BLI_addtail(%struct.ListBase* getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 0), i8* %36), !dbg !8267
  br label %if.end36, !dbg !8268

if.end36:                                         ; preds = %for.end, %for.body
  br label %for.inc37, !dbg !8269

for.inc37:                                        ; preds = %if.end36
  %37 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8270
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %37, i32 0, i32 0, !dbg !8271
  %38 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !8271
  store %struct.MaskSpline* %38, %struct.MaskSpline** %spline, align 8, !dbg !8272
  br label %for.cond, !dbg !8273, !llvm.loop !8274

for.end38:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !8276
}

declare dso_local %struct.GHash* @BLI_ghash_ptr_new(i8*) #2

declare dso_local i8* @BLI_ghash_lookup(%struct.GHash*, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_mask_clipboard_is_empty() #0 !dbg !8277 {
entry:
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 0)), !dbg !8280
  ret i8 %call, !dbg !8281
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !8282 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8287, metadata !DIExpression()), !dbg !8288
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8289
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8290
  %1 = load i8*, i8** %first, align 8, !dbg !8290
  %cmp = icmp eq i8* %1, null, !dbg !8291
  %conv = zext i1 %cmp to i32, !dbg !8291
  %conv1 = trunc i32 %conv to i8, !dbg !8292
  ret i8 %conv1, !dbg !8293
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_mask_clipboard_paste_to_layer(%struct.Main* %bmain, %struct.MaskLayer* %mask_layer) #0 !dbg !8294 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %mask_layer.addr = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %spline_new = alloca %struct.MaskSpline*, align 8
  %i = alloca i32, align 4
  %point = alloca %struct.MaskSplinePoint*, align 8
  %id_name = alloca i8*, align 8
  %listbase = alloca %struct.ListBase*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !8297, metadata !DIExpression()), !dbg !8298
  store %struct.MaskLayer* %mask_layer, %struct.MaskLayer** %mask_layer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer.addr, metadata !8299, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !8301, metadata !DIExpression()), !dbg !8302
  %0 = load i8*, i8** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 0, i32 0), align 8, !dbg !8303
  %1 = bitcast i8* %0 to %struct.MaskSpline*, !dbg !8305
  store %struct.MaskSpline* %1, %struct.MaskSpline** %spline, align 8, !dbg !8306
  br label %for.cond, !dbg !8307

for.cond:                                         ; preds = %for.inc11, %entry
  %2 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8308
  %tobool = icmp ne %struct.MaskSpline* %2, null, !dbg !8310
  br i1 %tobool, label %for.body, label %for.end12, !dbg !8310

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline_new, metadata !8311, metadata !DIExpression()), !dbg !8313
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8314
  %call = call %struct.MaskSpline* @BKE_mask_spline_copy(%struct.MaskSpline* %3), !dbg !8315
  store %struct.MaskSpline* %call, %struct.MaskSpline** %spline_new, align 8, !dbg !8313
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8316, metadata !DIExpression()), !dbg !8317
  store i32 0, i32* %i, align 4, !dbg !8318
  br label %for.cond1, !dbg !8320

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %i, align 4, !dbg !8321
  %5 = load %struct.MaskSpline*, %struct.MaskSpline** %spline_new, align 8, !dbg !8323
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %5, i32 0, i32 5, !dbg !8324
  %6 = load i32, i32* %tot_point, align 4, !dbg !8324
  %cmp = icmp slt i32 %4, %6, !dbg !8325
  br i1 %cmp, label %for.body2, label %for.end, !dbg !8326

for.body2:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !8327, metadata !DIExpression()), !dbg !8329
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline_new, align 8, !dbg !8330
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %7, i32 0, i32 6, !dbg !8331
  %8 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !8331
  %9 = load i32, i32* %i, align 4, !dbg !8332
  %idxprom = sext i32 %9 to i64, !dbg !8330
  %arrayidx = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %8, i64 %idxprom, !dbg !8330
  store %struct.MaskSplinePoint* %arrayidx, %struct.MaskSplinePoint** %point, align 8, !dbg !8329
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !8333
  %parent = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %10, i32 0, i32 4, !dbg !8335
  %id = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %parent, i32 0, i32 2, !dbg !8336
  %11 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !8336
  %tobool3 = icmp ne %struct.ID* %11, null, !dbg !8333
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8337

if.then:                                          ; preds = %for.body2
  call void @llvm.dbg.declare(metadata i8** %id_name, metadata !8338, metadata !DIExpression()), !dbg !8340
  %12 = load %struct.GHash*, %struct.GHash** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @mask_clipboard, i32 0, i32 1), align 8, !dbg !8341
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !8342
  %parent4 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %13, i32 0, i32 4, !dbg !8343
  %id5 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %parent4, i32 0, i32 2, !dbg !8344
  %14 = load %struct.ID*, %struct.ID** %id5, align 8, !dbg !8344
  %15 = bitcast %struct.ID* %14 to i8*, !dbg !8342
  %call6 = call i8* @BLI_ghash_lookup(%struct.GHash* %12, i8* %15), !dbg !8345
  store i8* %call6, i8** %id_name, align 8, !dbg !8340
  call void @llvm.dbg.declare(metadata %struct.ListBase** %listbase, metadata !8346, metadata !DIExpression()), !dbg !8347
  %16 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8348
  %17 = load i8*, i8** %id_name, align 8, !dbg !8349
  %18 = bitcast i8* %17 to i16*, !dbg !8349
  %19 = load i16, i16* %18, align 2, !dbg !8349
  %call7 = call %struct.ListBase* @which_libbase(%struct.Main* %16, i16 signext %19), !dbg !8350
  store %struct.ListBase* %call7, %struct.ListBase** %listbase, align 8, !dbg !8351
  %20 = load %struct.ListBase*, %struct.ListBase** %listbase, align 8, !dbg !8352
  %21 = load i8*, i8** %id_name, align 8, !dbg !8353
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 2, !dbg !8354
  %call8 = call i8* @BLI_findstring(%struct.ListBase* %20, i8* %add.ptr, i32 34), !dbg !8355
  %22 = bitcast i8* %call8 to %struct.ID*, !dbg !8355
  %23 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !8356
  %parent9 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %23, i32 0, i32 4, !dbg !8357
  %id10 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %parent9, i32 0, i32 2, !dbg !8358
  store %struct.ID* %22, %struct.ID** %id10, align 8, !dbg !8359
  br label %if.end, !dbg !8360

if.end:                                           ; preds = %if.then, %for.body2
  br label %for.inc, !dbg !8361

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !8362
  %inc = add nsw i32 %24, 1, !dbg !8362
  store i32 %inc, i32* %i, align 4, !dbg !8362
  br label %for.cond1, !dbg !8363, !llvm.loop !8364

for.end:                                          ; preds = %for.cond1
  %25 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer.addr, align 8, !dbg !8366
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %25, i32 0, i32 3, !dbg !8367
  %26 = load %struct.MaskSpline*, %struct.MaskSpline** %spline_new, align 8, !dbg !8368
  %27 = bitcast %struct.MaskSpline* %26 to i8*, !dbg !8368
  call void @BLI_addtail(%struct.ListBase* %splines, i8* %27), !dbg !8369
  br label %for.inc11, !dbg !8370

for.inc11:                                        ; preds = %for.end
  %28 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !8371
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %28, i32 0, i32 0, !dbg !8372
  %29 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !8372
  store %struct.MaskSpline* %29, %struct.MaskSpline** %spline, align 8, !dbg !8373
  br label %for.cond, !dbg !8374, !llvm.loop !8375

for.end12:                                        ; preds = %for.cond
  ret void, !dbg !8377
}

declare dso_local %struct.ListBase* @which_libbase(%struct.Main*, i16 signext) #2

declare dso_local i8* @BLI_findstring(%struct.ListBase*, i8*, i32) #2

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #3

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v2_v2(float* %r, float* %a) #0 !dbg !8378 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8381, metadata !DIExpression()), !dbg !8382
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8383, metadata !DIExpression()), !dbg !8384
  call void @llvm.dbg.declare(metadata float* %d, metadata !8385, metadata !DIExpression()), !dbg !8386
  %0 = load float*, float** %a.addr, align 8, !dbg !8387
  %1 = load float*, float** %a.addr, align 8, !dbg !8388
  %call = call float @dot_v2v2(float* %0, float* %1), !dbg !8389
  store float %call, float* %d, align 4, !dbg !8386
  %2 = load float, float* %d, align 4, !dbg !8390
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !8392
  br i1 %cmp, label %if.then, label %if.else, !dbg !8393

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !8394
  %call1 = call float @sqrtf(float %3) #6, !dbg !8396
  store float %call1, float* %d, align 4, !dbg !8397
  %4 = load float*, float** %r.addr, align 8, !dbg !8398
  %5 = load float*, float** %a.addr, align 8, !dbg !8399
  %6 = load float, float* %d, align 4, !dbg !8400
  %div = fdiv float 1.000000e+00, %6, !dbg !8401
  call void @mul_v2_v2fl(float* %4, float* %5, float %div), !dbg !8402
  br label %if.end, !dbg !8403

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !8404
  call void @zero_v2(float* %7), !dbg !8406
  store float 0.000000e+00, float* %d, align 4, !dbg !8407
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !8408
  ret float %8, !dbg !8409
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_v2fl(float* %r, float* %a, float %f) #0 !dbg !8410 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8413, metadata !DIExpression()), !dbg !8414
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8415, metadata !DIExpression()), !dbg !8416
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8417, metadata !DIExpression()), !dbg !8418
  %0 = load float*, float** %a.addr, align 8, !dbg !8419
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8419
  %1 = load float, float* %arrayidx, align 4, !dbg !8419
  %2 = load float, float* %f.addr, align 4, !dbg !8420
  %mul = fmul float %1, %2, !dbg !8421
  %3 = load float*, float** %r.addr, align 8, !dbg !8422
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !8422
  store float %mul, float* %arrayidx1, align 4, !dbg !8423
  %4 = load float*, float** %a.addr, align 8, !dbg !8424
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8424
  %5 = load float, float* %arrayidx2, align 4, !dbg !8424
  %6 = load float, float* %f.addr, align 4, !dbg !8425
  %mul3 = fmul float %5, %6, !dbg !8426
  %7 = load float*, float** %r.addr, align 8, !dbg !8427
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8427
  store float %mul3, float* %arrayidx4, align 4, !dbg !8428
  ret void, !dbg !8429
}

declare dso_local i8* @BKE_libblock_alloc(%struct.Main*, i16 signext, i8*) #2

declare dso_local void @BKE_nurb_handle_calc(%struct.BezTriple*, %struct.BezTriple*, %struct.BezTriple*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !8430 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8431, metadata !DIExpression()), !dbg !8432
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8433, metadata !DIExpression()), !dbg !8434
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8435, metadata !DIExpression()), !dbg !8436
  %0 = load float*, float** %a.addr, align 8, !dbg !8437
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8437
  %1 = load float, float* %arrayidx, align 4, !dbg !8437
  %2 = load float*, float** %b.addr, align 8, !dbg !8438
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8438
  %3 = load float, float* %arrayidx1, align 4, !dbg !8438
  %sub = fsub float %1, %3, !dbg !8439
  %4 = load float*, float** %r.addr, align 8, !dbg !8440
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !8440
  store float %sub, float* %arrayidx2, align 4, !dbg !8441
  %5 = load float*, float** %a.addr, align 8, !dbg !8442
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8442
  %6 = load float, float* %arrayidx3, align 4, !dbg !8442
  %7 = load float*, float** %b.addr, align 8, !dbg !8443
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8443
  %8 = load float, float* %arrayidx4, align 4, !dbg !8443
  %sub5 = fsub float %6, %8, !dbg !8444
  %9 = load float*, float** %r.addr, align 8, !dbg !8445
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !8445
  store float %sub5, float* %arrayidx6, align 4, !dbg !8446
  %10 = load float*, float** %a.addr, align 8, !dbg !8447
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !8447
  %11 = load float, float* %arrayidx7, align 4, !dbg !8447
  %12 = load float*, float** %b.addr, align 8, !dbg !8448
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !8448
  %13 = load float, float* %arrayidx8, align 4, !dbg !8448
  %sub9 = fsub float %11, %13, !dbg !8449
  %14 = load float*, float** %r.addr, align 8, !dbg !8450
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !8450
  store float %sub9, float* %arrayidx10, align 4, !dbg !8451
  ret void, !dbg !8452
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !8453 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8454, metadata !DIExpression()), !dbg !8455
  %0 = load float*, float** %a.addr, align 8, !dbg !8456
  %1 = load float*, float** %a.addr, align 8, !dbg !8457
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !8458
  %call1 = call float @sqrtf(float %call) #6, !dbg !8459
  ret float %call1, !dbg !8460
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !8461 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8462, metadata !DIExpression()), !dbg !8463
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8464, metadata !DIExpression()), !dbg !8465
  %0 = load float*, float** %a.addr, align 8, !dbg !8466
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8466
  %1 = load float, float* %arrayidx, align 4, !dbg !8466
  %2 = load float*, float** %b.addr, align 8, !dbg !8467
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8467
  %3 = load float, float* %arrayidx1, align 4, !dbg !8467
  %mul = fmul float %1, %3, !dbg !8468
  %4 = load float*, float** %a.addr, align 8, !dbg !8469
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8469
  %5 = load float, float* %arrayidx2, align 4, !dbg !8469
  %6 = load float*, float** %b.addr, align 8, !dbg !8470
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8470
  %7 = load float, float* %arrayidx3, align 4, !dbg !8470
  %mul4 = fmul float %5, %7, !dbg !8471
  %add = fadd float %mul, %mul4, !dbg !8472
  %8 = load float*, float** %a.addr, align 8, !dbg !8473
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8473
  %9 = load float, float* %arrayidx5, align 4, !dbg !8473
  %10 = load float*, float** %b.addr, align 8, !dbg !8474
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8474
  %11 = load float, float* %arrayidx6, align 4, !dbg !8474
  %mul7 = fmul float %9, %11, !dbg !8475
  %add8 = fadd float %add, %mul7, !dbg !8476
  ret float %add8, !dbg !8477
}

declare dso_local void @mul_m3_v2([3 x float]*, float*) #2

declare dso_local float @closest_to_line_v2(float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @line_point_side_v2(float* %l1, float* %l2, float* %pt) #0 !dbg !8478 {
entry:
  %l1.addr = alloca float*, align 8
  %l2.addr = alloca float*, align 8
  %pt.addr = alloca float*, align 8
  store float* %l1, float** %l1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l1.addr, metadata !8481, metadata !DIExpression()), !dbg !8482
  store float* %l2, float** %l2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %l2.addr, metadata !8483, metadata !DIExpression()), !dbg !8484
  store float* %pt, float** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pt.addr, metadata !8485, metadata !DIExpression()), !dbg !8486
  %0 = load float*, float** %l1.addr, align 8, !dbg !8487
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8487
  %1 = load float, float* %arrayidx, align 4, !dbg !8487
  %2 = load float*, float** %pt.addr, align 8, !dbg !8488
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8488
  %3 = load float, float* %arrayidx1, align 4, !dbg !8488
  %sub = fsub float %1, %3, !dbg !8489
  %4 = load float*, float** %l2.addr, align 8, !dbg !8490
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8490
  %5 = load float, float* %arrayidx2, align 4, !dbg !8490
  %6 = load float*, float** %pt.addr, align 8, !dbg !8491
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8491
  %7 = load float, float* %arrayidx3, align 4, !dbg !8491
  %sub4 = fsub float %5, %7, !dbg !8492
  %mul = fmul float %sub, %sub4, !dbg !8493
  %8 = load float*, float** %l2.addr, align 8, !dbg !8494
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !8494
  %9 = load float, float* %arrayidx5, align 4, !dbg !8494
  %10 = load float*, float** %pt.addr, align 8, !dbg !8495
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 0, !dbg !8495
  %11 = load float, float* %arrayidx6, align 4, !dbg !8495
  %sub7 = fsub float %9, %11, !dbg !8496
  %12 = load float*, float** %l1.addr, align 8, !dbg !8497
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 1, !dbg !8497
  %13 = load float, float* %arrayidx8, align 4, !dbg !8497
  %14 = load float*, float** %pt.addr, align 8, !dbg !8498
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 1, !dbg !8498
  %15 = load float, float* %arrayidx9, align 4, !dbg !8498
  %sub10 = fsub float %13, %15, !dbg !8499
  %mul11 = fmul float %sub7, %sub10, !dbg !8500
  %sub12 = fsub float %mul, %mul11, !dbg !8501
  ret float %sub12, !dbg !8502
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v2_v2v2fl(float* %r, float* %a, float* %b, float %f) #0 !dbg !8503 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8506, metadata !DIExpression()), !dbg !8507
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8508, metadata !DIExpression()), !dbg !8509
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8510, metadata !DIExpression()), !dbg !8511
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8512, metadata !DIExpression()), !dbg !8513
  %0 = load float*, float** %a.addr, align 8, !dbg !8514
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8514
  %1 = load float, float* %arrayidx, align 4, !dbg !8514
  %2 = load float*, float** %b.addr, align 8, !dbg !8515
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8515
  %3 = load float, float* %arrayidx1, align 4, !dbg !8515
  %4 = load float, float* %f.addr, align 4, !dbg !8516
  %mul = fmul float %3, %4, !dbg !8517
  %add = fadd float %1, %mul, !dbg !8518
  %5 = load float*, float** %r.addr, align 8, !dbg !8519
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !8519
  store float %add, float* %arrayidx2, align 4, !dbg !8520
  %6 = load float*, float** %a.addr, align 8, !dbg !8521
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8521
  %7 = load float, float* %arrayidx3, align 4, !dbg !8521
  %8 = load float*, float** %b.addr, align 8, !dbg !8522
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !8522
  %9 = load float, float* %arrayidx4, align 4, !dbg !8522
  %10 = load float, float* %f.addr, align 4, !dbg !8523
  %mul5 = fmul float %9, %10, !dbg !8524
  %add6 = fadd float %7, %mul5, !dbg !8525
  %11 = load float*, float** %r.addr, align 8, !dbg !8526
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !8526
  store float %add6, float* %arrayidx7, align 4, !dbg !8527
  ret void, !dbg !8528
}

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #2

declare dso_local void @BLI_ghash_clear(%struct.GHash*, void (i8*)*, void (i8*)*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2316, !2317, !2318}
!llvm.ident = !{!2319}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mask_clipboard", scope: !2, file: !3, line: 67, type: !2311, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !64, globals: !2310, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/mask.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !23, !29, !33, !40, !44, !53, !60}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 155, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mask_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "MASK_SPLINE_CYCLIC", value: 2, isUnsigned: true)
!10 = !DIEnumerator(name: "MASK_SPLINE_NOFILL", value: 4, isUnsigned: true)
!11 = !DIEnumerator(name: "MASK_SPLINE_NOINTERSECT", value: 8, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 199, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16, !17, !18, !19, !20, !21, !22}
!14 = !DIEnumerator(name: "MASK_BLEND_ADD", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MASK_BLEND_SUBTRACT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MASK_BLEND_LIGHTEN", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MASK_BLEND_DARKEN", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "MASK_BLEND_MUL", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "MASK_BLEND_REPLACE", value: 5, isUnsigned: true)
!20 = !DIEnumerator(name: "MASK_BLEND_DIFFERENCE", value: 6, isUnsigned: true)
!21 = !DIEnumerator(name: "MASK_BLEND_MERGE_ADD", value: 7, isUnsigned: true)
!22 = !DIEnumerator(name: "MASK_BLEND_MERGE_SUBTRACT", value: 8, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 217, baseType: !7, size: 32, elements: !24)
!24 = !{!25, !26, !27, !28}
!25 = !DIEnumerator(name: "MASK_LAYERFLAG_LOCKED", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "MASK_LAYERFLAG_SELECT", value: 32, isUnsigned: true)
!27 = !DIEnumerator(name: "MASK_LAYERFLAG_FILL_DISCRETE", value: 64, isUnsigned: true)
!28 = !DIEnumerator(name: "MASK_LAYERFLAG_FILL_OVERLAP", value: 128, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 162, baseType: !7, size: 32, elements: !30)
!30 = !{!31, !32}
!31 = !DIEnumerator(name: "MASK_SPLINE_INTERP_LINEAR", value: 1, isUnsigned: true)
!32 = !DIEnumerator(name: "MASK_SPLINE_INTERP_EASE", value: 2, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 95, baseType: !35, size: 32, elements: !36)
!34 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mask.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!35 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!36 = !{!37, !38, !39}
!37 = !DIEnumerator(name: "MASK_PROJ_NEG", value: -1)
!38 = !DIEnumerator(name: "MASK_PROJ_ANY", value: 0)
!39 = !DIEnumerator(name: "MASK_PROJ_POS", value: 1)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 59, baseType: !7, size: 32, elements: !41)
!41 = !{!42, !43}
!42 = !DIEnumerator(name: "MASK_HANDLE_MODE_STICK", value: 1, isUnsigned: true)
!43 = !DIEnumerator(name: "MASK_HANDLE_MODE_INDIVIDUAL_HANDLES", value: 2, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBezTriple_Handle", file: !45, line: 361, baseType: !7, size: 32, elements: !46)
!45 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "HD_FREE", value: 0, isUnsigned: true)
!48 = !DIEnumerator(name: "HD_AUTO", value: 1, isUnsigned: true)
!49 = !DIEnumerator(name: "HD_VECT", value: 2, isUnsigned: true)
!50 = !DIEnumerator(name: "HD_ALIGN", value: 3, isUnsigned: true)
!51 = !DIEnumerator(name: "HD_AUTO_ANIM", value: 4, isUnsigned: true)
!52 = !DIEnumerator(name: "HD_ALIGN_DOUBLESIDE", value: 5, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 51, baseType: !7, size: 32, elements: !54)
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "MASK_WHICH_HANDLE_NONE", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "MASK_WHICH_HANDLE_STICK", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "MASK_WHICH_HANDLE_LEFT", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "MASK_WHICH_HANDLE_RIGHT", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "MASK_WHICH_HANDLE_BOTH", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 148, baseType: !7, size: 32, elements: !61)
!61 = !{!62, !63}
!62 = !DIEnumerator(name: "MASK_PARENT_POINT_TRACK", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "MASK_PARENT_PLANE_TRACK", value: 1, isUnsigned: true)
!64 = !{!65, !71, !74, !75, !544, !134, !2305, !2307, !1016, !2309}
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskLayerShapeElem", file: !6, line: 120, baseType: !67)
!67 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskLayerShapeElem", file: !6, line: 118, size: 256, elements: !68)
!68 = !{!69}
!69 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !67, file: !6, line: 119, baseType: !70, size: 256)
!70 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 256, elements: !72)
!71 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!72 = !{!73}
!73 = !DISubrange(count: 8)
!74 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceClip", file: !77, line: 1110, baseType: !78)
!77 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!78 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceClip", file: !77, line: 1074, size: 3264, elements: !79)
!79 = !{!80, !100, !101, !102, !103, !104, !105, !106, !107, !108, !115, !483, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520}
!80 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !78, file: !77, line: 1075, baseType: !81, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !77, line: 91, baseType: !83)
!83 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !77, line: 85, size: 448, elements: !84)
!84 = !{!85, !87, !88, !95, !96, !97}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !83, file: !77, line: 86, baseType: !86, size: 64)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !83, file: !77, line: 86, baseType: !86, size: 64, offset: 64)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !83, file: !77, line: 87, baseType: !89, size: 128, offset: 128)
!89 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !90, line: 71, baseType: !91)
!90 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!91 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !90, line: 69, size: 128, elements: !92)
!92 = !{!93, !94}
!93 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !91, file: !90, line: 70, baseType: !74, size: 64)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !91, file: !90, line: 70, baseType: !74, size: 64, offset: 64)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !83, file: !77, line: 88, baseType: !35, size: 32, offset: 256)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !83, file: !77, line: 89, baseType: !71, size: 32, offset: 288)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !83, file: !77, line: 90, baseType: !98, size: 128, offset: 320)
!98 = !DICompositeType(tag: DW_TAG_array_type, baseType: !99, size: 128, elements: !72)
!99 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !78, file: !77, line: 1075, baseType: !81, size: 64, offset: 64)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !78, file: !77, line: 1076, baseType: !89, size: 128, offset: 128)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !78, file: !77, line: 1077, baseType: !35, size: 32, offset: 256)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !78, file: !77, line: 1079, baseType: !71, size: 32, offset: 288)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !78, file: !77, line: 1079, baseType: !71, size: 32, offset: 320)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "xlockof", scope: !78, file: !77, line: 1080, baseType: !71, size: 32, offset: 352)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "ylockof", scope: !78, file: !77, line: 1080, baseType: !71, size: 32, offset: 384)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !78, file: !77, line: 1081, baseType: !71, size: 32, offset: 416)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !78, file: !77, line: 1083, baseType: !109, size: 64, offset: 448)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !110, line: 50, size: 64, elements: !111)
!110 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!111 = !{!112, !113, !114}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !109, file: !110, line: 51, baseType: !35, size: 32)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !109, file: !110, line: 52, baseType: !99, size: 16, offset: 32)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !109, file: !110, line: 52, baseType: !99, size: 16, offset: 48)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !78, file: !77, line: 1084, baseType: !116, size: 64, offset: 512)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !110, line: 64, size: 19136, elements: !118)
!118 = !{!119, !182, !185, !186, !187, !188, !192, !193, !194, !198, !201, !205, !466, !467, !478, !479, !480, !481, !482}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !117, file: !110, line: 65, baseType: !120, size: 960)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !121, line: 130, baseType: !122)
!121 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !121, line: 117, size: 960, elements: !123)
!123 = !{!124, !125, !126, !128, !148, !152, !153, !154, !155, !156}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !122, file: !121, line: 118, baseType: !74, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !122, file: !121, line: 118, baseType: !74, size: 64, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !122, file: !121, line: 119, baseType: !127, size: 64, offset: 128)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !122, file: !121, line: 120, baseType: !129, size: 64, offset: 192)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !121, line: 136, size: 17600, elements: !131)
!131 = !{!132, !133, !135, !138, !143, !144, !145}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !130, file: !121, line: 137, baseType: !120, size: 960)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !130, file: !121, line: 138, baseType: !134, size: 64, offset: 960)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !130, file: !121, line: 139, baseType: !136, size: 64, offset: 1024)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !121, line: 43, flags: DIFlagFwdDecl)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !130, file: !121, line: 140, baseType: !139, size: 8192, offset: 1088)
!139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 8192, elements: !141)
!140 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!141 = !{!142}
!142 = !DISubrange(count: 1024)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !130, file: !121, line: 141, baseType: !139, size: 8192, offset: 9280)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !130, file: !121, line: 148, baseType: !129, size: 64, offset: 17472)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !130, file: !121, line: 150, baseType: !146, size: 64, offset: 17536)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!147 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !121, line: 45, flags: DIFlagFwdDecl)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !122, file: !121, line: 121, baseType: !149, size: 528, offset: 256)
!149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 528, elements: !150)
!150 = !{!151}
!151 = !DISubrange(count: 66)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !122, file: !121, line: 126, baseType: !99, size: 16, offset: 784)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !122, file: !121, line: 127, baseType: !35, size: 32, offset: 800)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !122, file: !121, line: 128, baseType: !35, size: 32, offset: 832)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !122, file: !121, line: 128, baseType: !35, size: 32, offset: 864)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !122, file: !121, line: 129, baseType: !157, size: 64, offset: 896)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !121, line: 75, baseType: !159)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !121, line: 62, size: 1024, elements: !160)
!160 = !{!161, !163, !164, !165, !166, !167, !171, !172, !180, !181}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !159, file: !121, line: 63, baseType: !162, size: 64)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !159, file: !121, line: 63, baseType: !162, size: 64, offset: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !159, file: !121, line: 64, baseType: !140, size: 8, offset: 128)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !159, file: !121, line: 64, baseType: !140, size: 8, offset: 136)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !159, file: !121, line: 65, baseType: !99, size: 16, offset: 144)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !159, file: !121, line: 66, baseType: !168, size: 512, offset: 160)
!168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 512, elements: !169)
!169 = !{!170}
!170 = !DISubrange(count: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !159, file: !121, line: 67, baseType: !35, size: 32, offset: 672)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !159, file: !121, line: 69, baseType: !173, size: 256, offset: 704)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !121, line: 60, baseType: !174)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !121, line: 48, size: 256, elements: !175)
!175 = !{!176, !177, !178, !179}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !174, file: !121, line: 49, baseType: !74, size: 64)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !174, file: !121, line: 58, baseType: !89, size: 128, offset: 64)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !174, file: !121, line: 59, baseType: !35, size: 32, offset: 192)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !174, file: !121, line: 59, baseType: !35, size: 32, offset: 224)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !159, file: !121, line: 70, baseType: !35, size: 32, offset: 960)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !159, file: !121, line: 74, baseType: !35, size: 32, offset: 992)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !117, file: !110, line: 66, baseType: !183, size: 64, offset: 960)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !45, line: 48, flags: DIFlagFwdDecl)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !117, file: !110, line: 68, baseType: !139, size: 8192, offset: 1024)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !117, file: !110, line: 70, baseType: !35, size: 32, offset: 9216)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !117, file: !110, line: 71, baseType: !35, size: 32, offset: 9248)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !117, file: !110, line: 72, baseType: !189, size: 64, offset: 9280)
!189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 64, elements: !190)
!190 = !{!191}
!191 = !DISubrange(count: 2)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !117, file: !110, line: 74, baseType: !71, size: 32, offset: 9344)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !117, file: !110, line: 74, baseType: !71, size: 32, offset: 9376)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !117, file: !110, line: 76, baseType: !195, size: 64, offset: 9408)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !197, line: 41, flags: DIFlagFwdDecl)
!197 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!198 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !117, file: !110, line: 77, baseType: !199, size: 64, offset: 9472)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !110, line: 77, flags: DIFlagFwdDecl)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !117, file: !110, line: 78, baseType: !202, size: 64, offset: 9536)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!203 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !204, line: 61, flags: DIFlagFwdDecl)
!204 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!205 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !117, file: !110, line: 80, baseType: !206, size: 2624, offset: 9600)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !207, line: 340, size: 2624, elements: !208)
!207 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!208 = !{!209, !237, !256, !257, !258, !276, !337, !338, !443, !444, !445, !446, !455}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !206, file: !207, line: 341, baseType: !210, size: 576)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !207, line: 251, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !207, line: 207, size: 576, elements: !212)
!212 = !{!213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !211, file: !207, line: 208, baseType: !35, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !211, file: !207, line: 211, baseType: !99, size: 16, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !211, file: !207, line: 212, baseType: !99, size: 16, offset: 48)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !211, file: !207, line: 213, baseType: !71, size: 32, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !211, file: !207, line: 214, baseType: !99, size: 16, offset: 96)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !211, file: !207, line: 215, baseType: !99, size: 16, offset: 112)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !211, file: !207, line: 216, baseType: !99, size: 16, offset: 128)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !211, file: !207, line: 217, baseType: !99, size: 16, offset: 144)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !211, file: !207, line: 218, baseType: !99, size: 16, offset: 160)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !211, file: !207, line: 219, baseType: !99, size: 16, offset: 176)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !211, file: !207, line: 220, baseType: !71, size: 32, offset: 192)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !211, file: !207, line: 222, baseType: !99, size: 16, offset: 224)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !211, file: !207, line: 225, baseType: !99, size: 16, offset: 240)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !211, file: !207, line: 228, baseType: !35, size: 32, offset: 256)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !211, file: !207, line: 229, baseType: !35, size: 32, offset: 288)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !211, file: !207, line: 233, baseType: !35, size: 32, offset: 320)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !211, file: !207, line: 236, baseType: !99, size: 16, offset: 352)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !211, file: !207, line: 236, baseType: !99, size: 16, offset: 368)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !211, file: !207, line: 241, baseType: !71, size: 32, offset: 384)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !211, file: !207, line: 244, baseType: !35, size: 32, offset: 416)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !211, file: !207, line: 244, baseType: !35, size: 32, offset: 448)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !211, file: !207, line: 245, baseType: !71, size: 32, offset: 480)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !211, file: !207, line: 248, baseType: !71, size: 32, offset: 512)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !211, file: !207, line: 250, baseType: !35, size: 32, offset: 544)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !206, file: !207, line: 342, baseType: !238, size: 448, offset: 576)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !207, line: 79, baseType: !239)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !207, line: 61, size: 448, elements: !240)
!240 = !{!241, !242, !243, !244, !245, !246, !247, !248, !249, !251, !252, !253, !254, !255}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !239, file: !207, line: 62, baseType: !74, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !239, file: !207, line: 64, baseType: !99, size: 16, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !239, file: !207, line: 65, baseType: !99, size: 16, offset: 80)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !239, file: !207, line: 67, baseType: !71, size: 32, offset: 96)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !239, file: !207, line: 68, baseType: !71, size: 32, offset: 128)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !239, file: !207, line: 69, baseType: !71, size: 32, offset: 160)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !239, file: !207, line: 70, baseType: !99, size: 16, offset: 192)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !239, file: !207, line: 71, baseType: !99, size: 16, offset: 208)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !239, file: !207, line: 72, baseType: !250, size: 64, offset: 224)
!250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 64, elements: !190)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !239, file: !207, line: 75, baseType: !71, size: 32, offset: 288)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !239, file: !207, line: 75, baseType: !71, size: 32, offset: 320)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !239, file: !207, line: 75, baseType: !71, size: 32, offset: 352)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !239, file: !207, line: 78, baseType: !71, size: 32, offset: 384)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !239, file: !207, line: 78, baseType: !71, size: 32, offset: 416)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !206, file: !207, line: 343, baseType: !89, size: 128, offset: 1024)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !206, file: !207, line: 344, baseType: !89, size: 128, offset: 1152)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !206, file: !207, line: 345, baseType: !259, size: 192, offset: 1280)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !207, line: 278, baseType: !260)
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !207, line: 270, size: 192, elements: !261)
!261 = !{!262, !263, !264, !265, !266}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !260, file: !207, line: 271, baseType: !35, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !260, file: !207, line: 273, baseType: !71, size: 32, offset: 32)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !260, file: !207, line: 275, baseType: !35, size: 32, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !260, file: !207, line: 276, baseType: !35, size: 32, offset: 96)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !260, file: !207, line: 277, baseType: !267, size: 64, offset: 128)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !207, line: 55, size: 576, elements: !269)
!269 = !{!270, !271, !272}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !268, file: !207, line: 56, baseType: !35, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !268, file: !207, line: 57, baseType: !71, size: 32, offset: 32)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !268, file: !207, line: 58, baseType: !273, size: 512, offset: 64)
!273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 512, elements: !274)
!274 = !{!275, !275}
!275 = !DISubrange(count: 4)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !206, file: !207, line: 346, baseType: !277, size: 384, offset: 1472)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !207, line: 268, baseType: !278)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !207, line: 253, size: 384, elements: !279)
!279 = !{!280, !281, !282, !283, !284, !331, !332, !333, !334, !335, !336}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !278, file: !207, line: 254, baseType: !35, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !278, file: !207, line: 255, baseType: !35, size: 32, offset: 32)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !278, file: !207, line: 255, baseType: !35, size: 32, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !278, file: !207, line: 258, baseType: !71, size: 32, offset: 96)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !278, file: !207, line: 259, baseType: !285, size: 64, offset: 128)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !207, line: 164, baseType: !287)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !207, line: 108, size: 1664, elements: !288)
!288 = !{!289, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !313, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !287, file: !207, line: 109, baseType: !290, size: 64)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !287, file: !207, line: 109, baseType: !290, size: 64, offset: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !287, file: !207, line: 111, baseType: !168, size: 512, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !287, file: !207, line: 119, baseType: !250, size: 64, offset: 640)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !287, file: !207, line: 119, baseType: !250, size: 64, offset: 704)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !287, file: !207, line: 125, baseType: !250, size: 64, offset: 768)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !287, file: !207, line: 125, baseType: !250, size: 64, offset: 832)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !287, file: !207, line: 127, baseType: !250, size: 64, offset: 896)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !287, file: !207, line: 130, baseType: !35, size: 32, offset: 960)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !287, file: !207, line: 131, baseType: !35, size: 32, offset: 992)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !287, file: !207, line: 132, baseType: !301, size: 64, offset: 1024)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !207, line: 106, baseType: !303)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !207, line: 81, size: 512, elements: !304)
!304 = !{!305, !306, !309, !310, !311, !312}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !303, file: !207, line: 82, baseType: !250, size: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !303, file: !207, line: 97, baseType: !307, size: 256, offset: 64)
!307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 256, elements: !308)
!308 = !{!275, !191}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !303, file: !207, line: 102, baseType: !250, size: 64, offset: 320)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !303, file: !207, line: 102, baseType: !250, size: 64, offset: 384)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !303, file: !207, line: 104, baseType: !35, size: 32, offset: 448)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !303, file: !207, line: 105, baseType: !35, size: 32, offset: 480)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !287, file: !207, line: 135, baseType: !314, size: 96, offset: 1088)
!314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 96, elements: !315)
!315 = !{!316}
!316 = !DISubrange(count: 3)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !287, file: !207, line: 136, baseType: !71, size: 32, offset: 1184)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !287, file: !207, line: 139, baseType: !35, size: 32, offset: 1216)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !287, file: !207, line: 139, baseType: !35, size: 32, offset: 1248)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !287, file: !207, line: 139, baseType: !35, size: 32, offset: 1280)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !287, file: !207, line: 140, baseType: !314, size: 96, offset: 1312)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !287, file: !207, line: 143, baseType: !99, size: 16, offset: 1408)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !287, file: !207, line: 144, baseType: !99, size: 16, offset: 1424)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !287, file: !207, line: 145, baseType: !99, size: 16, offset: 1440)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !287, file: !207, line: 148, baseType: !99, size: 16, offset: 1456)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !287, file: !207, line: 149, baseType: !35, size: 32, offset: 1472)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !287, file: !207, line: 150, baseType: !71, size: 32, offset: 1504)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !287, file: !207, line: 152, baseType: !202, size: 64, offset: 1536)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !287, file: !207, line: 163, baseType: !71, size: 32, offset: 1600)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !287, file: !207, line: 163, baseType: !71, size: 32, offset: 1632)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !278, file: !207, line: 261, baseType: !71, size: 32, offset: 192)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !278, file: !207, line: 261, baseType: !71, size: 32, offset: 224)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !278, file: !207, line: 261, baseType: !71, size: 32, offset: 256)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !278, file: !207, line: 263, baseType: !35, size: 32, offset: 288)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !278, file: !207, line: 266, baseType: !35, size: 32, offset: 320)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !278, file: !207, line: 267, baseType: !71, size: 32, offset: 352)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !206, file: !207, line: 347, baseType: !285, size: 64, offset: 1856)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !206, file: !207, line: 348, baseType: !339, size: 64, offset: 1920)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !207, line: 205, baseType: !341)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !207, line: 186, size: 1024, elements: !342)
!342 = !{!343, !345, !346, !347, !349, !350, !351, !359, !360, !361, !441, !442}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !341, file: !207, line: 187, baseType: !344, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !341, file: !207, line: 187, baseType: !344, size: 64, offset: 64)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !341, file: !207, line: 189, baseType: !168, size: 512, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !341, file: !207, line: 191, baseType: !348, size: 64, offset: 640)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !341, file: !207, line: 193, baseType: !35, size: 32, offset: 704)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !341, file: !207, line: 193, baseType: !35, size: 32, offset: 736)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !341, file: !207, line: 195, baseType: !352, size: 64, offset: 768)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !207, line: 184, baseType: !354)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !207, line: 166, size: 320, elements: !355)
!355 = !{!356, !357, !358}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !354, file: !207, line: 180, baseType: !307, size: 256)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !354, file: !207, line: 182, baseType: !35, size: 32, offset: 256)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !354, file: !207, line: 183, baseType: !35, size: 32, offset: 288)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !341, file: !207, line: 196, baseType: !35, size: 32, offset: 832)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !341, file: !207, line: 198, baseType: !35, size: 32, offset: 864)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !341, file: !207, line: 200, baseType: !362, size: 64, offset: 896)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !197, line: 77, size: 15424, elements: !364)
!364 = !{!365, !366, !367, !370, !373, !374, !377, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !395, !396, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !422, !423, !424, !430, !431, !435}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !363, file: !197, line: 78, baseType: !120, size: 960)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !363, file: !197, line: 80, baseType: !139, size: 8192, offset: 960)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !363, file: !197, line: 82, baseType: !368, size: 64, offset: 9152)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!369 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !197, line: 43, flags: DIFlagFwdDecl)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !363, file: !197, line: 83, baseType: !371, size: 64, offset: 9216)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!372 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !121, line: 46, flags: DIFlagFwdDecl)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !363, file: !197, line: 86, baseType: !195, size: 64, offset: 9280)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !363, file: !197, line: 87, baseType: !375, size: 64, offset: 9344)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !197, line: 44, flags: DIFlagFwdDecl)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !363, file: !197, line: 89, baseType: !378, size: 512, offset: 9408)
!378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 512, elements: !72)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !363, file: !197, line: 90, baseType: !99, size: 16, offset: 9920)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !363, file: !197, line: 90, baseType: !99, size: 16, offset: 9936)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !363, file: !197, line: 92, baseType: !99, size: 16, offset: 9952)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !363, file: !197, line: 92, baseType: !99, size: 16, offset: 9968)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !363, file: !197, line: 93, baseType: !99, size: 16, offset: 9984)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !363, file: !197, line: 93, baseType: !99, size: 16, offset: 10000)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !363, file: !197, line: 94, baseType: !35, size: 32, offset: 10016)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !363, file: !197, line: 97, baseType: !99, size: 16, offset: 10048)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !363, file: !197, line: 97, baseType: !99, size: 16, offset: 10064)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !363, file: !197, line: 98, baseType: !99, size: 16, offset: 10080)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !363, file: !197, line: 98, baseType: !99, size: 16, offset: 10096)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !363, file: !197, line: 99, baseType: !99, size: 16, offset: 10112)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !363, file: !197, line: 99, baseType: !99, size: 16, offset: 10128)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !363, file: !197, line: 100, baseType: !7, size: 32, offset: 10144)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !363, file: !197, line: 101, baseType: !394, size: 64, offset: 10176)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !363, file: !197, line: 103, baseType: !146, size: 64, offset: 10240)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !363, file: !197, line: 104, baseType: !397, size: 64, offset: 10304)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !121, line: 159, size: 448, elements: !399)
!399 = !{!400, !402, !403, !405, !406, !408}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !398, file: !121, line: 161, baseType: !401, size: 64)
!401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !190)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !398, file: !121, line: 162, baseType: !401, size: 64, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !398, file: !121, line: 163, baseType: !404, size: 32, offset: 128)
!404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !99, size: 32, elements: !190)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !398, file: !121, line: 164, baseType: !404, size: 32, offset: 160)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !398, file: !121, line: 165, baseType: !407, size: 128, offset: 192)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 128, elements: !190)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !398, file: !121, line: 166, baseType: !409, size: 128, offset: 320)
!409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 128, elements: !190)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !363, file: !197, line: 107, baseType: !71, size: 32, offset: 10368)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !363, file: !197, line: 108, baseType: !35, size: 32, offset: 10400)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !363, file: !197, line: 109, baseType: !99, size: 16, offset: 10432)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !363, file: !197, line: 110, baseType: !99, size: 16, offset: 10448)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !363, file: !197, line: 113, baseType: !35, size: 32, offset: 10464)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !363, file: !197, line: 113, baseType: !35, size: 32, offset: 10496)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !363, file: !197, line: 114, baseType: !140, size: 8, offset: 10528)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !363, file: !197, line: 114, baseType: !140, size: 8, offset: 10536)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !363, file: !197, line: 115, baseType: !99, size: 16, offset: 10544)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !363, file: !197, line: 116, baseType: !420, size: 128, offset: 10560)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 128, elements: !421)
!421 = !{!275}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !363, file: !197, line: 119, baseType: !71, size: 32, offset: 10688)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !363, file: !197, line: 119, baseType: !71, size: 32, offset: 10720)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !363, file: !197, line: 122, baseType: !425, size: 512, offset: 10752)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !426, line: 182, baseType: !427)
!426 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !426, line: 180, size: 512, elements: !428)
!428 = !{!429}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !427, file: !426, line: 181, baseType: !168, size: 512)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !363, file: !197, line: 123, baseType: !140, size: 8, offset: 11264)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !363, file: !197, line: 125, baseType: !432, size: 56, offset: 11272)
!432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 56, elements: !433)
!433 = !{!434}
!434 = !DISubrange(count: 7)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !363, file: !197, line: 126, baseType: !436, size: 4096, offset: 11328)
!436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 4096, elements: !72)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !197, line: 69, baseType: !438)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !197, line: 67, size: 512, elements: !439)
!439 = !{!440}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !438, file: !197, line: 68, baseType: !168, size: 512)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !341, file: !207, line: 201, baseType: !71, size: 32, offset: 960)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !341, file: !207, line: 204, baseType: !35, size: 32, offset: 992)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !206, file: !207, line: 350, baseType: !89, size: 128, offset: 1984)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !206, file: !207, line: 351, baseType: !35, size: 32, offset: 2112)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !206, file: !207, line: 351, baseType: !35, size: 32, offset: 2144)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !206, file: !207, line: 353, baseType: !447, size: 64, offset: 2176)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !207, line: 297, baseType: !449)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !207, line: 295, size: 2048, elements: !450)
!450 = !{!451}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !449, file: !207, line: 296, baseType: !452, size: 2048)
!452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 2048, elements: !453)
!453 = !{!454}
!454 = !DISubrange(count: 256)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !206, file: !207, line: 355, baseType: !456, size: 384, offset: 2240)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !207, line: 338, baseType: !457)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !207, line: 322, size: 384, elements: !458)
!458 = !{!459, !460, !461, !462, !463, !464, !465}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !457, file: !207, line: 323, baseType: !35, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !457, file: !207, line: 325, baseType: !99, size: 16, offset: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !457, file: !207, line: 326, baseType: !99, size: 16, offset: 48)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !457, file: !207, line: 331, baseType: !89, size: 128, offset: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !457, file: !207, line: 334, baseType: !89, size: 128, offset: 192)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !457, file: !207, line: 335, baseType: !35, size: 32, offset: 320)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !457, file: !207, line: 337, baseType: !35, size: 32, offset: 352)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !117, file: !110, line: 81, baseType: !74, size: 64, offset: 12224)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !117, file: !110, line: 85, baseType: !468, size: 6208, offset: 12288)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !110, line: 55, size: 6208, elements: !469)
!469 = !{!470, !474, !475, !476, !477}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !468, file: !110, line: 56, baseType: !471, size: 6144)
!471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 6144, elements: !472)
!472 = !{!473}
!473 = !DISubrange(count: 768)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !468, file: !110, line: 58, baseType: !99, size: 16, offset: 6144)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !468, file: !110, line: 59, baseType: !99, size: 16, offset: 6160)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !468, file: !110, line: 60, baseType: !99, size: 16, offset: 6176)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !468, file: !110, line: 61, baseType: !99, size: 16, offset: 6192)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !117, file: !110, line: 86, baseType: !35, size: 32, offset: 18496)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !117, file: !110, line: 88, baseType: !35, size: 32, offset: 18528)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !117, file: !110, line: 90, baseType: !35, size: 32, offset: 18560)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !117, file: !110, line: 94, baseType: !35, size: 32, offset: 18592)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !117, file: !110, line: 100, baseType: !425, size: 512, offset: 18624)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !78, file: !77, line: 1085, baseType: !484, size: 1088, offset: 576)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipScopes", file: !110, line: 103, size: 1088, elements: !485)
!485 = !{!486, !487, !488, !489, !490, !491, !492, !495, !496, !497, !498, !499, !500, !501, !503}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !484, file: !110, line: 104, baseType: !99, size: 16)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "use_track_mask", scope: !484, file: !110, line: 105, baseType: !99, size: 16, offset: 16)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "track_preview_height", scope: !484, file: !110, line: 106, baseType: !35, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "frame_width", scope: !484, file: !110, line: 107, baseType: !35, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "frame_height", scope: !484, file: !110, line: 107, baseType: !35, size: 32, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "undist_marker", scope: !484, file: !110, line: 108, baseType: !303, size: 512, offset: 128)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "track_search", scope: !484, file: !110, line: 109, baseType: !493, size: 64, offset: 640)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !426, line: 136, flags: DIFlagFwdDecl)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "track_preview", scope: !484, file: !110, line: 110, baseType: !493, size: 64, offset: 704)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "track_pos", scope: !484, file: !110, line: 111, baseType: !250, size: 64, offset: 768)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "track_disabled", scope: !484, file: !110, line: 112, baseType: !99, size: 16, offset: 832)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "track_locked", scope: !484, file: !110, line: 113, baseType: !99, size: 16, offset: 848)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !484, file: !110, line: 114, baseType: !35, size: 32, offset: 864)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !484, file: !110, line: 115, baseType: !290, size: 64, offset: 896)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "marker", scope: !484, file: !110, line: 116, baseType: !502, size: 64, offset: 960)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "slide_scale", scope: !484, file: !110, line: 117, baseType: !250, size: 64, offset: 1024)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !78, file: !77, line: 1087, baseType: !35, size: 32, offset: 1664)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !78, file: !77, line: 1088, baseType: !99, size: 16, offset: 1696)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !78, file: !77, line: 1089, baseType: !99, size: 16, offset: 1712)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "path_length", scope: !78, file: !77, line: 1091, baseType: !35, size: 32, offset: 1728)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !78, file: !77, line: 1094, baseType: !250, size: 64, offset: 1760)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !78, file: !77, line: 1094, baseType: !71, size: 32, offset: 1824)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !78, file: !77, line: 1094, baseType: !71, size: 32, offset: 1856)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !78, file: !77, line: 1095, baseType: !35, size: 32, offset: 1888)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "stabmat", scope: !78, file: !77, line: 1096, baseType: !273, size: 512, offset: 1920)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "unistabmat", scope: !78, file: !77, line: 1096, baseType: !273, size: 512, offset: 2432)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "postproc_flag", scope: !78, file: !77, line: 1100, baseType: !35, size: 32, offset: 2944)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_src", scope: !78, file: !77, line: 1103, baseType: !99, size: 16, offset: 2976)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !78, file: !77, line: 1103, baseType: !99, size: 16, offset: 2992)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !78, file: !77, line: 1105, baseType: !35, size: 32, offset: 3008)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !78, file: !77, line: 1105, baseType: !35, size: 32, offset: 3040)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !78, file: !77, line: 1107, baseType: !250, size: 64, offset: 3072)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !78, file: !77, line: 1109, baseType: !521, size: 128, offset: 3136)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpaceInfo", file: !77, line: 554, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpaceInfo", file: !77, line: 545, size: 128, elements: !523)
!523 = !{!524, !537, !538, !539, !540}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !522, file: !77, line: 548, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !6, line: 46, size: 1344, elements: !527)
!527 = !{!528, !529, !530, !531, !532, !533, !534, !535, !536}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !526, file: !6, line: 47, baseType: !120, size: 960)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !526, file: !6, line: 48, baseType: !183, size: 64, offset: 960)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "masklayers", scope: !526, file: !6, line: 49, baseType: !89, size: 128, offset: 1024)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_act", scope: !526, file: !6, line: 50, baseType: !35, size: 32, offset: 1152)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_tot", scope: !526, file: !6, line: 51, baseType: !35, size: 32, offset: 1184)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !526, file: !6, line: 53, baseType: !35, size: 32, offset: 1216)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !526, file: !6, line: 53, baseType: !35, size: 32, offset: 1248)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !526, file: !6, line: 55, baseType: !35, size: 32, offset: 1280)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !526, file: !6, line: 56, baseType: !35, size: 32, offset: 1312)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "draw_flag", scope: !522, file: !77, line: 550, baseType: !140, size: 8, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "draw_type", scope: !522, file: !77, line: 551, baseType: !140, size: 8, offset: 72)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_mode", scope: !522, file: !77, line: 552, baseType: !140, size: 8, offset: 80)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !522, file: !77, line: 553, baseType: !541, size: 40, offset: 88)
!541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 40, elements: !542)
!542 = !{!543}
!543 = !DISubrange(count: 5)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceImage", file: !77, line: 743, baseType: !546)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceImage", file: !77, line: 710, size: 84672, elements: !547)
!547 = !{!548, !549, !550, !551, !552, !553, !554, !2245, !2246, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !546, file: !77, line: 711, baseType: !81, size: 64)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !546, file: !77, line: 711, baseType: !81, size: 64, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !546, file: !77, line: 712, baseType: !89, size: 128, offset: 128)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !546, file: !77, line: 713, baseType: !35, size: 32, offset: 256)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !546, file: !77, line: 715, baseType: !35, size: 32, offset: 288)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !546, file: !77, line: 717, baseType: !362, size: 64, offset: 320)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !546, file: !77, line: 718, baseType: !555, size: 320, offset: 384)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !197, line: 50, size: 320, elements: !556)
!556 = !{!557, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !555, file: !197, line: 51, baseType: !558, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !204, line: 1216, size: 39680, elements: !560)
!560 = !{!561, !562, !563, !566, !1487, !1488, !1489, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1649, !1860, !1863, !2103, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2125, !2126, !2127, !2128, !2129, !2137, !2203, !2210, !2211, !2218, !2219, !2225, !2226, !2227, !2228, !2229}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !559, file: !204, line: 1217, baseType: !120, size: 960)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !559, file: !204, line: 1218, baseType: !183, size: 64, offset: 960)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !559, file: !204, line: 1220, baseType: !564, size: 64, offset: 1024)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !45, line: 43, flags: DIFlagFwdDecl)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !559, file: !204, line: 1221, baseType: !567, size: 64, offset: 1088)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !569, line: 52, size: 4224, elements: !570)
!569 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!570 = !{!571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !640, !641, !644, !1482, !1483, !1484, !1485, !1486}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !568, file: !569, line: 53, baseType: !120, size: 960)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !568, file: !569, line: 54, baseType: !183, size: 64, offset: 960)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !568, file: !569, line: 56, baseType: !99, size: 16, offset: 1024)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !568, file: !569, line: 56, baseType: !99, size: 16, offset: 1040)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !568, file: !569, line: 57, baseType: !99, size: 16, offset: 1056)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !568, file: !569, line: 57, baseType: !99, size: 16, offset: 1072)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !568, file: !569, line: 59, baseType: !71, size: 32, offset: 1088)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !568, file: !569, line: 59, baseType: !71, size: 32, offset: 1120)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !568, file: !569, line: 59, baseType: !71, size: 32, offset: 1152)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !568, file: !569, line: 60, baseType: !71, size: 32, offset: 1184)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !568, file: !569, line: 60, baseType: !71, size: 32, offset: 1216)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !568, file: !569, line: 60, baseType: !71, size: 32, offset: 1248)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !568, file: !569, line: 61, baseType: !71, size: 32, offset: 1280)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !568, file: !569, line: 61, baseType: !71, size: 32, offset: 1312)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !568, file: !569, line: 61, baseType: !71, size: 32, offset: 1344)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !568, file: !569, line: 68, baseType: !71, size: 32, offset: 1376)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !568, file: !569, line: 68, baseType: !71, size: 32, offset: 1408)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !568, file: !569, line: 68, baseType: !71, size: 32, offset: 1440)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !568, file: !569, line: 69, baseType: !71, size: 32, offset: 1472)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !568, file: !569, line: 69, baseType: !71, size: 32, offset: 1504)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !568, file: !569, line: 74, baseType: !71, size: 32, offset: 1536)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !568, file: !569, line: 79, baseType: !71, size: 32, offset: 1568)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !568, file: !569, line: 81, baseType: !99, size: 16, offset: 1600)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !568, file: !569, line: 91, baseType: !99, size: 16, offset: 1616)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !568, file: !569, line: 92, baseType: !99, size: 16, offset: 1632)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !568, file: !569, line: 93, baseType: !99, size: 16, offset: 1648)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !568, file: !569, line: 94, baseType: !99, size: 16, offset: 1664)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !568, file: !569, line: 94, baseType: !99, size: 16, offset: 1680)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !568, file: !569, line: 94, baseType: !99, size: 16, offset: 1696)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !568, file: !569, line: 94, baseType: !99, size: 16, offset: 1712)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !568, file: !569, line: 96, baseType: !71, size: 32, offset: 1728)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !568, file: !569, line: 96, baseType: !71, size: 32, offset: 1760)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !568, file: !569, line: 96, baseType: !71, size: 32, offset: 1792)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !568, file: !569, line: 96, baseType: !71, size: 32, offset: 1824)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !568, file: !569, line: 98, baseType: !71, size: 32, offset: 1856)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !568, file: !569, line: 98, baseType: !71, size: 32, offset: 1888)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !568, file: !569, line: 98, baseType: !71, size: 32, offset: 1920)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !568, file: !569, line: 98, baseType: !71, size: 32, offset: 1952)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !568, file: !569, line: 99, baseType: !71, size: 32, offset: 1984)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !568, file: !569, line: 99, baseType: !71, size: 32, offset: 2016)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !568, file: !569, line: 100, baseType: !71, size: 32, offset: 2048)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !568, file: !569, line: 100, baseType: !71, size: 32, offset: 2080)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !568, file: !569, line: 103, baseType: !99, size: 16, offset: 2112)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !568, file: !569, line: 103, baseType: !99, size: 16, offset: 2128)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !568, file: !569, line: 103, baseType: !99, size: 16, offset: 2144)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !568, file: !569, line: 103, baseType: !99, size: 16, offset: 2160)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !568, file: !569, line: 106, baseType: !71, size: 32, offset: 2176)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !568, file: !569, line: 106, baseType: !71, size: 32, offset: 2208)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !568, file: !569, line: 106, baseType: !71, size: 32, offset: 2240)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !568, file: !569, line: 106, baseType: !71, size: 32, offset: 2272)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !568, file: !569, line: 107, baseType: !99, size: 16, offset: 2304)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !568, file: !569, line: 107, baseType: !99, size: 16, offset: 2320)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !568, file: !569, line: 107, baseType: !99, size: 16, offset: 2336)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !568, file: !569, line: 107, baseType: !99, size: 16, offset: 2352)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !568, file: !569, line: 108, baseType: !71, size: 32, offset: 2368)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !568, file: !569, line: 108, baseType: !71, size: 32, offset: 2400)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !568, file: !569, line: 109, baseType: !71, size: 32, offset: 2432)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !568, file: !569, line: 109, baseType: !71, size: 32, offset: 2464)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !568, file: !569, line: 110, baseType: !71, size: 32, offset: 2496)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !568, file: !569, line: 110, baseType: !71, size: 32, offset: 2528)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !568, file: !569, line: 110, baseType: !71, size: 32, offset: 2560)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !568, file: !569, line: 111, baseType: !99, size: 16, offset: 2592)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !568, file: !569, line: 111, baseType: !99, size: 16, offset: 2608)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !568, file: !569, line: 112, baseType: !99, size: 16, offset: 2624)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !568, file: !569, line: 112, baseType: !99, size: 16, offset: 2640)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !568, file: !569, line: 112, baseType: !99, size: 16, offset: 2656)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !568, file: !569, line: 115, baseType: !99, size: 16, offset: 2672)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !568, file: !569, line: 118, baseType: !639, size: 64, offset: 2688)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !568, file: !569, line: 118, baseType: !639, size: 64, offset: 2752)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !568, file: !569, line: 121, baseType: !642, size: 64, offset: 2816)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !45, line: 44, flags: DIFlagFwdDecl)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !568, file: !569, line: 122, baseType: !645, size: 1152, offset: 2880)
!645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 1152, elements: !1480)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !648, line: 57, size: 2496, elements: !649)
!648 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!649 = !{!650, !651, !652, !653, !654, !655, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !647, file: !648, line: 59, baseType: !99, size: 16)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !647, file: !648, line: 59, baseType: !99, size: 16, offset: 16)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !647, file: !648, line: 59, baseType: !99, size: 16, offset: 32)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !647, file: !648, line: 59, baseType: !99, size: 16, offset: 48)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !647, file: !648, line: 60, baseType: !564, size: 64, offset: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !647, file: !648, line: 61, baseType: !656, size: 64, offset: 128)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !648, line: 202, size: 3328, elements: !658)
!658 = !{!659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !1267, !1268, !1269, !1295, !1321, !1322, !1390, !1411, !1419, !1420}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !657, file: !648, line: 203, baseType: !120, size: 960)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !657, file: !648, line: 204, baseType: !183, size: 64, offset: 960)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !657, file: !648, line: 206, baseType: !71, size: 32, offset: 1024)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !657, file: !648, line: 206, baseType: !71, size: 32, offset: 1056)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !657, file: !648, line: 207, baseType: !71, size: 32, offset: 1088)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !657, file: !648, line: 207, baseType: !71, size: 32, offset: 1120)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !657, file: !648, line: 207, baseType: !71, size: 32, offset: 1152)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !657, file: !648, line: 207, baseType: !71, size: 32, offset: 1184)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !657, file: !648, line: 207, baseType: !71, size: 32, offset: 1216)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !657, file: !648, line: 207, baseType: !71, size: 32, offset: 1248)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !657, file: !648, line: 208, baseType: !71, size: 32, offset: 1280)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !657, file: !648, line: 208, baseType: !71, size: 32, offset: 1312)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !657, file: !648, line: 211, baseType: !71, size: 32, offset: 1344)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !657, file: !648, line: 211, baseType: !71, size: 32, offset: 1376)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !657, file: !648, line: 211, baseType: !71, size: 32, offset: 1408)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !657, file: !648, line: 211, baseType: !71, size: 32, offset: 1440)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !657, file: !648, line: 211, baseType: !71, size: 32, offset: 1472)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !657, file: !648, line: 214, baseType: !71, size: 32, offset: 1504)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !657, file: !648, line: 214, baseType: !71, size: 32, offset: 1536)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !657, file: !648, line: 217, baseType: !71, size: 32, offset: 1568)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !657, file: !648, line: 218, baseType: !71, size: 32, offset: 1600)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !657, file: !648, line: 219, baseType: !71, size: 32, offset: 1632)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !657, file: !648, line: 220, baseType: !71, size: 32, offset: 1664)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !657, file: !648, line: 221, baseType: !71, size: 32, offset: 1696)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !657, file: !648, line: 222, baseType: !99, size: 16, offset: 1728)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !657, file: !648, line: 222, baseType: !99, size: 16, offset: 1744)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !657, file: !648, line: 224, baseType: !99, size: 16, offset: 1760)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !657, file: !648, line: 224, baseType: !99, size: 16, offset: 1776)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !657, file: !648, line: 227, baseType: !99, size: 16, offset: 1792)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !657, file: !648, line: 227, baseType: !99, size: 16, offset: 1808)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !657, file: !648, line: 229, baseType: !99, size: 16, offset: 1824)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !657, file: !648, line: 229, baseType: !99, size: 16, offset: 1840)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !657, file: !648, line: 230, baseType: !99, size: 16, offset: 1856)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !657, file: !648, line: 230, baseType: !99, size: 16, offset: 1872)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !657, file: !648, line: 232, baseType: !71, size: 32, offset: 1888)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !657, file: !648, line: 232, baseType: !71, size: 32, offset: 1920)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !657, file: !648, line: 232, baseType: !71, size: 32, offset: 1952)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !657, file: !648, line: 232, baseType: !71, size: 32, offset: 1984)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !657, file: !648, line: 233, baseType: !35, size: 32, offset: 2016)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !657, file: !648, line: 234, baseType: !35, size: 32, offset: 2048)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !657, file: !648, line: 235, baseType: !99, size: 16, offset: 2080)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !657, file: !648, line: 235, baseType: !99, size: 16, offset: 2096)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !657, file: !648, line: 236, baseType: !99, size: 16, offset: 2112)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !657, file: !648, line: 239, baseType: !99, size: 16, offset: 2128)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !657, file: !648, line: 240, baseType: !35, size: 32, offset: 2144)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !657, file: !648, line: 241, baseType: !35, size: 32, offset: 2176)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !657, file: !648, line: 241, baseType: !35, size: 32, offset: 2208)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !657, file: !648, line: 241, baseType: !35, size: 32, offset: 2240)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !657, file: !648, line: 243, baseType: !71, size: 32, offset: 2272)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !657, file: !648, line: 243, baseType: !71, size: 32, offset: 2304)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !657, file: !648, line: 244, baseType: !71, size: 32, offset: 2336)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !657, file: !648, line: 246, baseType: !555, size: 320, offset: 2368)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !657, file: !648, line: 248, baseType: !712, size: 64, offset: 2688)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !714, line: 328, size: 3456, elements: !715)
!714 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!715 = !{!716, !717, !718, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1245, !1246, !1247, !1250, !1254, !1258, !1262, !1263, !1264, !1265, !1266}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !713, file: !714, line: 329, baseType: !120, size: 960)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !713, file: !714, line: 330, baseType: !183, size: 64, offset: 960)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !713, file: !714, line: 332, baseType: !719, size: 64, offset: 1024)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !721, line: 283, size: 4096, elements: !722)
!721 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!722 = !{!723, !724, !725, !726, !727, !728, !732, !1184, !1192, !1196, !1202, !1206, !1207, !1208, !1209, !1213, !1214}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !720, file: !721, line: 284, baseType: !35, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !720, file: !721, line: 285, baseType: !168, size: 512, offset: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !720, file: !721, line: 287, baseType: !168, size: 512, offset: 544)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !720, file: !721, line: 288, baseType: !452, size: 2048, offset: 1056)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !720, file: !721, line: 289, baseType: !35, size: 32, offset: 3104)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !720, file: !721, line: 292, baseType: !729, size: 64, offset: 3136)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{null, !712}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !720, file: !721, line: 293, baseType: !733, size: 64, offset: 3200)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{null, !712, !736}
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !714, line: 167, size: 3712, elements: !738)
!738 = !{!739, !740, !741, !742, !743, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !737, file: !714, line: 168, baseType: !736, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !737, file: !714, line: 168, baseType: !736, size: 64, offset: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !737, file: !714, line: 168, baseType: !736, size: 64, offset: 128)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !737, file: !714, line: 170, baseType: !157, size: 64, offset: 192)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !737, file: !714, line: 172, baseType: !744, size: 64, offset: 256)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !721, line: 144, size: 6016, elements: !746)
!746 = !{!747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !924, !925, !926, !1054, !1058, !1062, !1063, !1067, !1071, !1075, !1076, !1077, !1078, !1082, !1083, !1087, !1091, !1095, !1099, !1103, !1107, !1111, !1112, !1119, !1121, !1130, !1139}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !745, file: !721, line: 145, baseType: !74, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !745, file: !721, line: 145, baseType: !74, size: 64, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !745, file: !721, line: 146, baseType: !99, size: 16, offset: 128)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !745, file: !721, line: 148, baseType: !168, size: 512, offset: 144)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !745, file: !721, line: 149, baseType: !35, size: 32, offset: 672)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !745, file: !721, line: 151, baseType: !168, size: 512, offset: 704)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !745, file: !721, line: 152, baseType: !452, size: 2048, offset: 1216)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !745, file: !721, line: 153, baseType: !35, size: 32, offset: 3264)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !745, file: !721, line: 155, baseType: !71, size: 32, offset: 3296)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !745, file: !721, line: 155, baseType: !71, size: 32, offset: 3328)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !745, file: !721, line: 155, baseType: !71, size: 32, offset: 3360)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !745, file: !721, line: 156, baseType: !71, size: 32, offset: 3392)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !745, file: !721, line: 156, baseType: !71, size: 32, offset: 3424)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !745, file: !721, line: 156, baseType: !71, size: 32, offset: 3456)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !745, file: !721, line: 157, baseType: !99, size: 16, offset: 3488)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !745, file: !721, line: 157, baseType: !99, size: 16, offset: 3504)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !745, file: !721, line: 157, baseType: !99, size: 16, offset: 3520)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !745, file: !721, line: 160, baseType: !765, size: 64, offset: 3584)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !721, line: 109, baseType: !767)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !721, line: 98, size: 1408, elements: !768)
!768 = !{!769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !923}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !767, file: !721, line: 99, baseType: !35, size: 32)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !767, file: !721, line: 99, baseType: !35, size: 32, offset: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !767, file: !721, line: 100, baseType: !168, size: 512, offset: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !767, file: !721, line: 101, baseType: !71, size: 32, offset: 576)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !767, file: !721, line: 101, baseType: !71, size: 32, offset: 608)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !767, file: !721, line: 101, baseType: !71, size: 32, offset: 640)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !767, file: !721, line: 101, baseType: !71, size: 32, offset: 672)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !767, file: !721, line: 102, baseType: !71, size: 32, offset: 704)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !767, file: !721, line: 102, baseType: !71, size: 32, offset: 736)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !767, file: !721, line: 103, baseType: !35, size: 32, offset: 768)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !767, file: !721, line: 104, baseType: !35, size: 32, offset: 800)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !767, file: !721, line: 107, baseType: !781, size: 64, offset: 832)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !714, line: 87, size: 2816, elements: !783)
!783 = !{!784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !908}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !782, file: !714, line: 88, baseType: !781, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !782, file: !714, line: 88, baseType: !781, size: 64, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !782, file: !714, line: 88, baseType: !781, size: 64, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !782, file: !714, line: 90, baseType: !157, size: 64, offset: 192)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !782, file: !714, line: 92, baseType: !168, size: 512, offset: 256)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !782, file: !714, line: 94, baseType: !168, size: 512, offset: 768)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !782, file: !714, line: 99, baseType: !74, size: 64, offset: 1280)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !782, file: !714, line: 101, baseType: !99, size: 16, offset: 1344)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !782, file: !714, line: 101, baseType: !99, size: 16, offset: 1360)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !782, file: !714, line: 102, baseType: !99, size: 16, offset: 1376)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !782, file: !714, line: 103, baseType: !99, size: 16, offset: 1392)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !782, file: !714, line: 104, baseType: !796, size: 64, offset: 1408)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !721, line: 114, size: 1600, elements: !798)
!798 = !{!799, !800, !824, !828, !832, !836, !840, !844, !845, !849, !878, !879, !880}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !797, file: !721, line: 115, baseType: !168, size: 512)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !797, file: !721, line: 117, baseType: !801, size: 64, offset: 512)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DISubroutineType(types: !803)
!803 = !{null, !804, !807, !810, !810, !822}
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !806, line: 46, flags: DIFlagFwdDecl)
!806 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_library.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !809, line: 46, flags: DIFlagFwdDecl)
!809 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !812, line: 55, size: 192, elements: !813)
!812 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!813 = !{!814, !818, !821}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !811, file: !812, line: 58, baseType: !815, size: 64)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !811, file: !812, line: 56, size: 64, elements: !816)
!816 = !{!817}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !815, file: !812, line: 57, baseType: !74, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !811, file: !812, line: 60, baseType: !819, size: 64, offset: 64)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !714, line: 335, flags: DIFlagFwdDecl)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !811, file: !812, line: 61, baseType: !74, size: 64, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !797, file: !721, line: 118, baseType: !825, size: 64, offset: 576)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{null, !804, !810, !810, !639}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !797, file: !721, line: 120, baseType: !829, size: 64, offset: 640)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DISubroutineType(types: !831)
!831 = !{null, !804, !807, !810}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !797, file: !721, line: 121, baseType: !833, size: 64, offset: 704)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{null, !804, !810, !639}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !797, file: !721, line: 122, baseType: !837, size: 64, offset: 768)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{null, !712, !781, !819}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !797, file: !721, line: 123, baseType: !841, size: 64, offset: 832)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DISubroutineType(types: !843)
!843 = !{null, !712, !781, !736, !781, !822}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !797, file: !721, line: 124, baseType: !841, size: 64, offset: 896)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !797, file: !721, line: 125, baseType: !846, size: 64, offset: 960)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{null, !712, !781, !736, !781}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !797, file: !721, line: 128, baseType: !850, size: 256, offset: 1024)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !812, line: 436, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !812, line: 430, size: 256, elements: !852)
!852 = !{!853, !854, !857, !873}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !851, file: !812, line: 431, baseType: !74, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !851, file: !812, line: 432, baseType: !855, size: 64, offset: 64)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !812, line: 417, baseType: !820)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !851, file: !812, line: 433, baseType: !858, size: 64, offset: 128)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !812, line: 408, baseType: !859)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{!35, !804, !810, !862, !864}
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !812, line: 38, flags: DIFlagFwdDecl)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !812, line: 348, baseType: !866)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !812, line: 337, size: 256, elements: !867)
!867 = !{!868, !869, !870, !871, !872}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !866, file: !812, line: 339, baseType: !74, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !866, file: !812, line: 342, baseType: !862, size: 64, offset: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !866, file: !812, line: 345, baseType: !35, size: 32, offset: 128)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !866, file: !812, line: 347, baseType: !35, size: 32, offset: 160)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !866, file: !812, line: 347, baseType: !35, size: 32, offset: 192)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !851, file: !812, line: 434, baseType: !874, size: 64, offset: 192)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !812, line: 409, baseType: !875)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DISubroutineType(types: !877)
!877 = !{null, !74}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !797, file: !721, line: 129, baseType: !850, size: 256, offset: 1280)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !797, file: !721, line: 132, baseType: !35, size: 32, offset: 1536)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !797, file: !721, line: 132, baseType: !35, size: 32, offset: 1568)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !782, file: !714, line: 105, baseType: !168, size: 512, offset: 1472)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !782, file: !714, line: 107, baseType: !71, size: 32, offset: 1984)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !782, file: !714, line: 107, baseType: !71, size: 32, offset: 2016)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !782, file: !714, line: 109, baseType: !74, size: 64, offset: 2048)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !782, file: !714, line: 112, baseType: !99, size: 16, offset: 2112)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !782, file: !714, line: 114, baseType: !99, size: 16, offset: 2128)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !782, file: !714, line: 115, baseType: !35, size: 32, offset: 2144)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !782, file: !714, line: 117, baseType: !74, size: 64, offset: 2176)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !782, file: !714, line: 122, baseType: !35, size: 32, offset: 2240)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !782, file: !714, line: 124, baseType: !35, size: 32, offset: 2272)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !782, file: !714, line: 126, baseType: !781, size: 64, offset: 2304)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !782, file: !714, line: 128, baseType: !893, size: 64, offset: 2368)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !714, line: 298, size: 448, elements: !895)
!895 = !{!896, !897, !898, !901, !902, !905, !906, !907}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !894, file: !714, line: 299, baseType: !893, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !894, file: !714, line: 299, baseType: !893, size: 64, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !894, file: !714, line: 301, baseType: !899, size: 64, offset: 128)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !714, line: 218, baseType: !737)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !894, file: !714, line: 301, baseType: !899, size: 64, offset: 192)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !894, file: !714, line: 302, baseType: !903, size: 64, offset: 256)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !714, line: 132, baseType: !782)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !894, file: !714, line: 302, baseType: !903, size: 64, offset: 320)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !894, file: !714, line: 304, baseType: !35, size: 32, offset: 384)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !894, file: !714, line: 305, baseType: !35, size: 32, offset: 416)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !782, file: !714, line: 131, baseType: !909, size: 384, offset: 2432)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !714, line: 73, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !714, line: 62, size: 384, elements: !911)
!911 = !{!912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !910, file: !714, line: 63, baseType: !420, size: 128)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !910, file: !714, line: 64, baseType: !71, size: 32, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !910, file: !714, line: 64, baseType: !71, size: 32, offset: 160)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !910, file: !714, line: 65, baseType: !74, size: 64, offset: 192)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !910, file: !714, line: 66, baseType: !99, size: 16, offset: 256)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !910, file: !714, line: 67, baseType: !99, size: 16, offset: 272)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !910, file: !714, line: 68, baseType: !99, size: 16, offset: 288)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !910, file: !714, line: 69, baseType: !99, size: 16, offset: 304)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !910, file: !714, line: 70, baseType: !99, size: 16, offset: 320)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !910, file: !714, line: 71, baseType: !99, size: 16, offset: 336)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !910, file: !714, line: 72, baseType: !404, size: 32, offset: 352)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !767, file: !721, line: 108, baseType: !168, size: 512, offset: 896)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !745, file: !721, line: 160, baseType: !765, size: 64, offset: 3648)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !745, file: !721, line: 162, baseType: !168, size: 512, offset: 3712)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !745, file: !721, line: 165, baseType: !927, size: 64, offset: 4224)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{null, !930, !932, !1018, !712, !736, !1050}
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !805)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !809, line: 230, size: 3072, elements: !934)
!934 = !{!935, !936, !937, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1017}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !933, file: !809, line: 231, baseType: !932, size: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !933, file: !809, line: 231, baseType: !932, size: 64, offset: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !933, file: !809, line: 233, baseType: !938, size: 1280, offset: 128)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !939, line: 71, baseType: !940)
!939 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !939, line: 40, size: 1280, elements: !941)
!941 = !{!942, !951, !952, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !984}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !940, file: !939, line: 41, baseType: !943, size: 128)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !944, line: 95, baseType: !945)
!944 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !944, line: 92, size: 128, elements: !946)
!946 = !{!947, !948, !949, !950}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !945, file: !944, line: 93, baseType: !71, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !945, file: !944, line: 93, baseType: !71, size: 32, offset: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !945, file: !944, line: 94, baseType: !71, size: 32, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !945, file: !944, line: 94, baseType: !71, size: 32, offset: 96)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !940, file: !939, line: 41, baseType: !943, size: 128, offset: 128)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !940, file: !939, line: 42, baseType: !953, size: 128, offset: 256)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !944, line: 89, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !944, line: 86, size: 128, elements: !955)
!955 = !{!956, !957, !958, !959}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !954, file: !944, line: 87, baseType: !35, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !954, file: !944, line: 87, baseType: !35, size: 32, offset: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !954, file: !944, line: 88, baseType: !35, size: 32, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !954, file: !944, line: 88, baseType: !35, size: 32, offset: 96)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !940, file: !939, line: 42, baseType: !953, size: 128, offset: 384)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !940, file: !939, line: 43, baseType: !953, size: 128, offset: 512)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !940, file: !939, line: 45, baseType: !250, size: 64, offset: 640)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !940, file: !939, line: 45, baseType: !250, size: 64, offset: 704)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !940, file: !939, line: 46, baseType: !71, size: 32, offset: 768)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !940, file: !939, line: 46, baseType: !71, size: 32, offset: 800)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !940, file: !939, line: 48, baseType: !99, size: 16, offset: 832)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !940, file: !939, line: 49, baseType: !99, size: 16, offset: 848)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !940, file: !939, line: 51, baseType: !99, size: 16, offset: 864)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !940, file: !939, line: 52, baseType: !99, size: 16, offset: 880)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !940, file: !939, line: 53, baseType: !99, size: 16, offset: 896)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !940, file: !939, line: 55, baseType: !99, size: 16, offset: 912)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !940, file: !939, line: 56, baseType: !99, size: 16, offset: 928)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !940, file: !939, line: 58, baseType: !99, size: 16, offset: 944)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !940, file: !939, line: 58, baseType: !99, size: 16, offset: 960)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !940, file: !939, line: 59, baseType: !99, size: 16, offset: 976)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !940, file: !939, line: 59, baseType: !99, size: 16, offset: 992)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !940, file: !939, line: 61, baseType: !99, size: 16, offset: 1008)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !940, file: !939, line: 63, baseType: !639, size: 64, offset: 1024)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !940, file: !939, line: 64, baseType: !35, size: 32, offset: 1088)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !940, file: !939, line: 65, baseType: !35, size: 32, offset: 1120)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !940, file: !939, line: 68, baseType: !982, size: 64, offset: 1152)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !939, line: 68, flags: DIFlagFwdDecl)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !940, file: !939, line: 69, baseType: !985, size: 64, offset: 1216)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !939, line: 69, flags: DIFlagFwdDecl)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !933, file: !809, line: 234, baseType: !953, size: 128, offset: 1408)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !933, file: !809, line: 235, baseType: !953, size: 128, offset: 1536)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !933, file: !809, line: 236, baseType: !99, size: 16, offset: 1664)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !933, file: !809, line: 236, baseType: !99, size: 16, offset: 1680)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !933, file: !809, line: 238, baseType: !99, size: 16, offset: 1696)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !933, file: !809, line: 239, baseType: !99, size: 16, offset: 1712)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !933, file: !809, line: 240, baseType: !99, size: 16, offset: 1728)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !933, file: !809, line: 241, baseType: !99, size: 16, offset: 1744)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !933, file: !809, line: 243, baseType: !71, size: 32, offset: 1760)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !933, file: !809, line: 244, baseType: !99, size: 16, offset: 1792)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !933, file: !809, line: 244, baseType: !99, size: 16, offset: 1808)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !933, file: !809, line: 246, baseType: !99, size: 16, offset: 1824)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !933, file: !809, line: 247, baseType: !99, size: 16, offset: 1840)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !933, file: !809, line: 248, baseType: !99, size: 16, offset: 1856)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !933, file: !809, line: 249, baseType: !99, size: 16, offset: 1872)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !933, file: !809, line: 250, baseType: !99, size: 16, offset: 1888)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !933, file: !809, line: 251, baseType: !99, size: 16, offset: 1904)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !933, file: !809, line: 253, baseType: !1005, size: 64, offset: 1920)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !809, line: 42, flags: DIFlagFwdDecl)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !933, file: !809, line: 255, baseType: !89, size: 128, offset: 1984)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !933, file: !809, line: 256, baseType: !89, size: 128, offset: 2112)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !933, file: !809, line: 257, baseType: !89, size: 128, offset: 2240)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !933, file: !809, line: 258, baseType: !89, size: 128, offset: 2368)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !933, file: !809, line: 259, baseType: !89, size: 128, offset: 2496)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !933, file: !809, line: 260, baseType: !89, size: 128, offset: 2624)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !933, file: !809, line: 261, baseType: !89, size: 128, offset: 2752)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !933, file: !809, line: 263, baseType: !985, size: 64, offset: 2880)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !933, file: !809, line: 265, baseType: !1016, size: 64, offset: 2944)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !933, file: !809, line: 266, baseType: !74, size: 64, offset: 3008)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !77, line: 925, size: 3200, elements: !1020)
!1020 = !{!1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1019, file: !77, line: 926, baseType: !81, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1019, file: !77, line: 926, baseType: !81, size: 64, offset: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1019, file: !77, line: 927, baseType: !89, size: 128, offset: 128)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !1019, file: !77, line: 928, baseType: !35, size: 32, offset: 256)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !1019, file: !77, line: 929, baseType: !71, size: 32, offset: 288)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !1019, file: !77, line: 930, baseType: !98, size: 128, offset: 320)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !1019, file: !77, line: 932, baseType: !938, size: 1280, offset: 448)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1019, file: !77, line: 934, baseType: !127, size: 64, offset: 1728)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1019, file: !77, line: 934, baseType: !127, size: 64, offset: 1792)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1019, file: !77, line: 935, baseType: !99, size: 16, offset: 1856)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1019, file: !77, line: 935, baseType: !99, size: 16, offset: 1872)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !1019, file: !77, line: 936, baseType: !71, size: 32, offset: 1888)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1019, file: !77, line: 936, baseType: !71, size: 32, offset: 1920)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !1019, file: !77, line: 938, baseType: !71, size: 32, offset: 1952)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !1019, file: !77, line: 938, baseType: !71, size: 32, offset: 1984)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !1019, file: !77, line: 939, baseType: !71, size: 32, offset: 2016)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1019, file: !77, line: 940, baseType: !250, size: 64, offset: 2048)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "treepath", scope: !1019, file: !77, line: 947, baseType: !89, size: 128, offset: 2112)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1019, file: !77, line: 949, baseType: !712, size: 64, offset: 2240)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "edittree", scope: !1019, file: !77, line: 949, baseType: !712, size: 64, offset: 2304)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "tree_idname", scope: !1019, file: !77, line: 952, baseType: !168, size: 512, offset: 2368)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "treetype", scope: !1019, file: !77, line: 953, baseType: !35, size: 32, offset: 2880)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1019, file: !77, line: 954, baseType: !35, size: 32, offset: 2912)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "texfrom", scope: !1019, file: !77, line: 956, baseType: !99, size: 16, offset: 2944)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "shaderfrom", scope: !1019, file: !77, line: 957, baseType: !99, size: 16, offset: 2960)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1019, file: !77, line: 958, baseType: !99, size: 16, offset: 2976)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1019, file: !77, line: 959, baseType: !99, size: 16, offset: 2992)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "linkdrag", scope: !1019, file: !77, line: 960, baseType: !89, size: 128, offset: 3008)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1019, file: !77, line: 962, baseType: !202, size: 64, offset: 3136)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !714, line: 274, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !714, line: 271, size: 32, elements: !1052)
!1052 = !{!1053}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1051, file: !714, line: 273, baseType: !7, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !745, file: !721, line: 168, baseType: !1055, size: 64, offset: 4288)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !930, !712, !736}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !745, file: !721, line: 171, baseType: !1059, size: 64, offset: 4352)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{null, !807, !804, !810}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !745, file: !721, line: 173, baseType: !1059, size: 64, offset: 4416)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !745, file: !721, line: 176, baseType: !1064, size: 64, offset: 4480)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{null, !1018, !493, !736, !35, !35}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !745, file: !721, line: 179, baseType: !1068, size: 64, offset: 4544)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{null, !712, !736, !1016, !35}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !745, file: !721, line: 181, baseType: !1072, size: 64, offset: 4608)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!35, !736, !35, !35}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !745, file: !721, line: 183, baseType: !1072, size: 64, offset: 4672)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !745, file: !721, line: 185, baseType: !1072, size: 64, offset: 4736)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !745, file: !721, line: 188, baseType: !733, size: 64, offset: 4800)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !745, file: !721, line: 190, baseType: !1079, size: 64, offset: 4864)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{null, !712, !736, !127}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !745, file: !721, line: 193, baseType: !733, size: 64, offset: 4928)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !745, file: !721, line: 195, baseType: !1084, size: 64, offset: 4992)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{null, !736}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !745, file: !721, line: 197, baseType: !1088, size: 64, offset: 5056)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{null, !712, !736, !736}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !745, file: !721, line: 200, baseType: !1092, size: 64, offset: 5120)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{null, !930, !810}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !745, file: !721, line: 201, baseType: !1096, size: 64, offset: 5184)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{null, !810}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !745, file: !721, line: 202, baseType: !1100, size: 64, offset: 5248)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{null, !810, !736}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !745, file: !721, line: 205, baseType: !1104, size: 64, offset: 5312)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!35, !744, !712}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !745, file: !721, line: 207, baseType: !1108, size: 64, offset: 5376)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!35, !736, !712}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !745, file: !721, line: 210, baseType: !733, size: 64, offset: 5440)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !745, file: !721, line: 213, baseType: !1113, size: 64, offset: 5504)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !721, line: 135, baseType: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!74, !1117, !736, !1050}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !721, line: 62, flags: DIFlagFwdDecl)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !745, file: !721, line: 214, baseType: !1120, size: 64, offset: 5568)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !721, line: 136, baseType: !875)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !745, file: !721, line: 215, baseType: !1122, size: 64, offset: 5632)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !721, line: 137, baseType: !1123)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{null, !74, !35, !736, !1126, !1128, !1128}
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !721, line: 63, flags: DIFlagFwdDecl)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !745, file: !721, line: 217, baseType: !1131, size: 64, offset: 5696)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !721, line: 138, baseType: !1132)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!35, !1135, !736, !1126, !1137, !1137}
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !721, line: 64, flags: DIFlagFwdDecl)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !721, line: 66, flags: DIFlagFwdDecl)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !745, file: !721, line: 220, baseType: !850, size: 256, offset: 5760)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !737, file: !714, line: 173, baseType: !168, size: 512, offset: 320)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !737, file: !714, line: 175, baseType: !168, size: 512, offset: 832)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !737, file: !714, line: 176, baseType: !35, size: 32, offset: 1344)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !737, file: !714, line: 177, baseType: !99, size: 16, offset: 1376)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !737, file: !714, line: 177, baseType: !99, size: 16, offset: 1392)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !737, file: !714, line: 178, baseType: !99, size: 16, offset: 1408)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !737, file: !714, line: 178, baseType: !99, size: 16, offset: 1424)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !737, file: !714, line: 179, baseType: !99, size: 16, offset: 1440)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !737, file: !714, line: 179, baseType: !99, size: 16, offset: 1456)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !737, file: !714, line: 180, baseType: !99, size: 16, offset: 1472)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !737, file: !714, line: 181, baseType: !99, size: 16, offset: 1488)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !737, file: !714, line: 182, baseType: !314, size: 96, offset: 1504)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !737, file: !714, line: 184, baseType: !89, size: 128, offset: 1600)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !737, file: !714, line: 184, baseType: !89, size: 128, offset: 1728)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !737, file: !714, line: 185, baseType: !736, size: 64, offset: 1856)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !737, file: !714, line: 186, baseType: !127, size: 64, offset: 1920)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !737, file: !714, line: 187, baseType: !74, size: 64, offset: 1984)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !737, file: !714, line: 188, baseType: !736, size: 64, offset: 2048)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !737, file: !714, line: 189, baseType: !89, size: 128, offset: 2112)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !737, file: !714, line: 191, baseType: !71, size: 32, offset: 2240)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !737, file: !714, line: 191, baseType: !71, size: 32, offset: 2272)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !737, file: !714, line: 192, baseType: !71, size: 32, offset: 2304)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !737, file: !714, line: 192, baseType: !71, size: 32, offset: 2336)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !737, file: !714, line: 193, baseType: !71, size: 32, offset: 2368)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !737, file: !714, line: 194, baseType: !71, size: 32, offset: 2400)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !737, file: !714, line: 194, baseType: !71, size: 32, offset: 2432)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !737, file: !714, line: 196, baseType: !35, size: 32, offset: 2464)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !737, file: !714, line: 198, baseType: !168, size: 512, offset: 2496)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !737, file: !714, line: 199, baseType: !99, size: 16, offset: 3008)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !737, file: !714, line: 199, baseType: !99, size: 16, offset: 3024)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !737, file: !714, line: 200, baseType: !71, size: 32, offset: 3040)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !737, file: !714, line: 200, baseType: !71, size: 32, offset: 3072)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !737, file: !714, line: 202, baseType: !99, size: 16, offset: 3104)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !737, file: !714, line: 202, baseType: !99, size: 16, offset: 3120)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !737, file: !714, line: 203, baseType: !74, size: 64, offset: 3136)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !737, file: !714, line: 204, baseType: !943, size: 128, offset: 3200)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !737, file: !714, line: 205, baseType: !943, size: 128, offset: 3328)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !737, file: !714, line: 206, baseType: !943, size: 128, offset: 3456)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !737, file: !714, line: 215, baseType: !99, size: 16, offset: 3584)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !737, file: !714, line: 215, baseType: !99, size: 16, offset: 3600)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !737, file: !714, line: 216, baseType: !35, size: 32, offset: 3616)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !737, file: !714, line: 217, baseType: !1182, size: 64, offset: 3648)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !714, line: 51, flags: DIFlagFwdDecl)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !720, file: !721, line: 294, baseType: !1185, size: 64, offset: 3264)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{null, !558, !74, !1188}
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !721, line: 282, baseType: !1189)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{null, !74, !35, !822}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !720, file: !721, line: 296, baseType: !1193, size: 64, offset: 3328)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!35, !930, !719}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !720, file: !721, line: 298, baseType: !1197, size: 64, offset: 3392)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{null, !930, !719, !1200, !1201, !1201}
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !720, file: !721, line: 302, baseType: !1203, size: 64, offset: 3456)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{null, !712, !712}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !720, file: !721, line: 303, baseType: !1203, size: 64, offset: 3520)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !720, file: !721, line: 304, baseType: !1203, size: 64, offset: 3584)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !720, file: !721, line: 307, baseType: !729, size: 64, offset: 3648)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !720, file: !721, line: 309, baseType: !1210, size: 64, offset: 3712)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!35, !712, !893}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !720, file: !721, line: 311, baseType: !733, size: 64, offset: 3776)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !720, file: !721, line: 314, baseType: !850, size: 256, offset: 3840)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !713, file: !714, line: 333, baseType: !168, size: 512, offset: 1088)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !713, file: !714, line: 335, baseType: !819, size: 64, offset: 1600)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !713, file: !714, line: 337, baseType: !202, size: 64, offset: 1664)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !713, file: !714, line: 338, baseType: !250, size: 64, offset: 1728)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !713, file: !714, line: 340, baseType: !89, size: 128, offset: 1792)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !713, file: !714, line: 340, baseType: !89, size: 128, offset: 1920)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !713, file: !714, line: 342, baseType: !35, size: 32, offset: 2048)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !713, file: !714, line: 342, baseType: !35, size: 32, offset: 2080)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !713, file: !714, line: 343, baseType: !35, size: 32, offset: 2112)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !713, file: !714, line: 345, baseType: !35, size: 32, offset: 2144)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !713, file: !714, line: 346, baseType: !35, size: 32, offset: 2176)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !713, file: !714, line: 347, baseType: !99, size: 16, offset: 2208)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !713, file: !714, line: 348, baseType: !99, size: 16, offset: 2224)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !713, file: !714, line: 349, baseType: !35, size: 32, offset: 2240)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !713, file: !714, line: 351, baseType: !35, size: 32, offset: 2272)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !713, file: !714, line: 353, baseType: !99, size: 16, offset: 2304)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !713, file: !714, line: 354, baseType: !99, size: 16, offset: 2320)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !713, file: !714, line: 355, baseType: !35, size: 32, offset: 2336)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !713, file: !714, line: 357, baseType: !943, size: 128, offset: 2368)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !713, file: !714, line: 363, baseType: !89, size: 128, offset: 2496)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !713, file: !714, line: 363, baseType: !89, size: 128, offset: 2624)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !713, file: !714, line: 368, baseType: !1237, size: 64, offset: 2752)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !721, line: 500, size: 64, elements: !1239)
!1239 = !{!1240}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1238, file: !721, line: 502, baseType: !1241, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1243, line: 48, baseType: !1244)
!1243 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1244 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1243, line: 48, flags: DIFlagFwdDecl)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !713, file: !714, line: 372, baseType: !1050, size: 32, offset: 2816)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !713, file: !714, line: 373, baseType: !35, size: 32, offset: 2848)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !713, file: !714, line: 382, baseType: !1248, size: 64, offset: 2880)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !714, line: 46, flags: DIFlagFwdDecl)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !713, file: !714, line: 385, baseType: !1251, size: 64, offset: 2944)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{null, !74, !71}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !713, file: !714, line: 386, baseType: !1255, size: 64, offset: 3008)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{null, !74, !1016}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !713, file: !714, line: 387, baseType: !1259, size: 64, offset: 3072)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!35, !74}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !713, file: !714, line: 388, baseType: !875, size: 64, offset: 3136)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !713, file: !714, line: 389, baseType: !74, size: 64, offset: 3200)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !713, file: !714, line: 389, baseType: !74, size: 64, offset: 3264)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !713, file: !714, line: 389, baseType: !74, size: 64, offset: 3328)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !713, file: !714, line: 389, baseType: !74, size: 64, offset: 3392)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !657, file: !648, line: 249, baseType: !642, size: 64, offset: 2752)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !657, file: !648, line: 250, baseType: !362, size: 64, offset: 2816)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !657, file: !648, line: 251, baseType: !1270, size: 64, offset: 2880)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !648, line: 113, size: 6208, elements: !1272)
!1272 = !{!1273, !1274, !1275, !1276, !1277, !1278, !1282}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1271, file: !648, line: 114, baseType: !99, size: 16)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1271, file: !648, line: 114, baseType: !99, size: 16, offset: 16)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1271, file: !648, line: 115, baseType: !140, size: 8, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1271, file: !648, line: 115, baseType: !140, size: 8, offset: 40)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1271, file: !648, line: 116, baseType: !140, size: 8, offset: 48)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1271, file: !648, line: 117, baseType: !1279, size: 8, offset: 56)
!1279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 8, elements: !1280)
!1280 = !{!1281}
!1281 = !DISubrange(count: 1)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1271, file: !648, line: 119, baseType: !1283, size: 6144, offset: 64)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 6144, elements: !1293)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !648, line: 109, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !648, line: 106, size: 192, elements: !1286)
!1286 = !{!1287, !1288, !1289, !1290, !1291, !1292}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1285, file: !648, line: 107, baseType: !71, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1285, file: !648, line: 107, baseType: !71, size: 32, offset: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1285, file: !648, line: 107, baseType: !71, size: 32, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1285, file: !648, line: 107, baseType: !71, size: 32, offset: 96)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1285, file: !648, line: 107, baseType: !71, size: 32, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1285, file: !648, line: 108, baseType: !35, size: 32, offset: 160)
!1293 = !{!1294}
!1294 = !DISubrange(count: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !657, file: !648, line: 252, baseType: !1296, size: 64, offset: 2944)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !648, line: 122, size: 1600, elements: !1298)
!1298 = !{!1299, !1300, !1301, !1305, !1306, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1297, file: !648, line: 123, baseType: !564, size: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1297, file: !648, line: 124, baseType: !362, size: 64, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1297, file: !648, line: 125, baseType: !1302, size: 384, offset: 128)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 384, elements: !1303)
!1303 = !{!1304}
!1304 = !DISubrange(count: 6)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1297, file: !648, line: 126, baseType: !273, size: 512, offset: 512)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1297, file: !648, line: 127, baseType: !1307, size: 288, offset: 1024)
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 288, elements: !1308)
!1308 = !{!316, !316}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1297, file: !648, line: 128, baseType: !99, size: 16, offset: 1312)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1297, file: !648, line: 128, baseType: !99, size: 16, offset: 1328)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1297, file: !648, line: 129, baseType: !71, size: 32, offset: 1344)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1297, file: !648, line: 129, baseType: !71, size: 32, offset: 1376)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1297, file: !648, line: 130, baseType: !71, size: 32, offset: 1408)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1297, file: !648, line: 131, baseType: !7, size: 32, offset: 1440)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1297, file: !648, line: 132, baseType: !99, size: 16, offset: 1472)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1297, file: !648, line: 132, baseType: !99, size: 16, offset: 1488)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1297, file: !648, line: 133, baseType: !35, size: 32, offset: 1504)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1297, file: !648, line: 133, baseType: !35, size: 32, offset: 1536)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1297, file: !648, line: 134, baseType: !99, size: 16, offset: 1568)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1297, file: !648, line: 134, baseType: !99, size: 16, offset: 1584)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !657, file: !648, line: 253, baseType: !397, size: 64, offset: 3008)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !657, file: !648, line: 254, baseType: !1323, size: 64, offset: 3072)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !648, line: 137, size: 832, elements: !1325)
!1325 = !{!1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1346, !1347, !1348, !1349, !1350, !1351}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1324, file: !648, line: 138, baseType: !99, size: 16)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1324, file: !648, line: 140, baseType: !99, size: 16, offset: 16)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1324, file: !648, line: 141, baseType: !71, size: 32, offset: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1324, file: !648, line: 142, baseType: !71, size: 32, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1324, file: !648, line: 143, baseType: !99, size: 16, offset: 96)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1324, file: !648, line: 144, baseType: !99, size: 16, offset: 112)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1324, file: !648, line: 145, baseType: !35, size: 32, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1324, file: !648, line: 147, baseType: !35, size: 32, offset: 160)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1324, file: !648, line: 149, baseType: !564, size: 64, offset: 192)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1324, file: !648, line: 150, baseType: !35, size: 32, offset: 256)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1324, file: !648, line: 151, baseType: !99, size: 16, offset: 288)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1324, file: !648, line: 152, baseType: !99, size: 16, offset: 304)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1324, file: !648, line: 154, baseType: !74, size: 64, offset: 320)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1324, file: !648, line: 155, baseType: !639, size: 64, offset: 384)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1324, file: !648, line: 157, baseType: !71, size: 32, offset: 448)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1324, file: !648, line: 158, baseType: !99, size: 16, offset: 480)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1324, file: !648, line: 159, baseType: !99, size: 16, offset: 496)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1324, file: !648, line: 160, baseType: !99, size: 16, offset: 512)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1324, file: !648, line: 161, baseType: !1345, size: 48, offset: 528)
!1345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !99, size: 48, elements: !315)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1324, file: !648, line: 162, baseType: !71, size: 32, offset: 576)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1324, file: !648, line: 164, baseType: !71, size: 32, offset: 608)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1324, file: !648, line: 164, baseType: !71, size: 32, offset: 640)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1324, file: !648, line: 164, baseType: !71, size: 32, offset: 672)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1324, file: !648, line: 165, baseType: !1270, size: 64, offset: 704)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1324, file: !648, line: 167, baseType: !1352, size: 64, offset: 768)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !426, line: 72, size: 3072, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359, !1360, !1361, !1386, !1387, !1388, !1389}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1353, file: !426, line: 73, baseType: !35, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1353, file: !426, line: 73, baseType: !35, size: 32, offset: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1353, file: !426, line: 74, baseType: !35, size: 32, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1353, file: !426, line: 75, baseType: !35, size: 32, offset: 96)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1353, file: !426, line: 77, baseType: !943, size: 128, offset: 128)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1353, file: !426, line: 77, baseType: !943, size: 128, offset: 256)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1353, file: !426, line: 79, baseType: !1362, size: 2304, offset: 384)
!1362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1363, size: 2304, elements: !421)
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !426, line: 67, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !426, line: 55, size: 576, elements: !1365)
!1365 = !{!1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1382, !1383, !1384, !1385}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1364, file: !426, line: 56, baseType: !99, size: 16)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1364, file: !426, line: 56, baseType: !99, size: 16, offset: 16)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1364, file: !426, line: 58, baseType: !71, size: 32, offset: 32)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1364, file: !426, line: 59, baseType: !71, size: 32, offset: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1364, file: !426, line: 59, baseType: !71, size: 32, offset: 96)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1364, file: !426, line: 60, baseType: !250, size: 64, offset: 128)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1364, file: !426, line: 60, baseType: !250, size: 64, offset: 192)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1364, file: !426, line: 61, baseType: !1374, size: 64, offset: 256)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !426, line: 47, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !426, line: 44, size: 96, elements: !1377)
!1377 = !{!1378, !1379, !1380, !1381}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1376, file: !426, line: 45, baseType: !71, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1376, file: !426, line: 45, baseType: !71, size: 32, offset: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1376, file: !426, line: 46, baseType: !99, size: 16, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1376, file: !426, line: 46, baseType: !99, size: 16, offset: 80)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1364, file: !426, line: 62, baseType: !1374, size: 64, offset: 320)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1364, file: !426, line: 64, baseType: !1374, size: 64, offset: 384)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1364, file: !426, line: 65, baseType: !250, size: 64, offset: 448)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1364, file: !426, line: 66, baseType: !250, size: 64, offset: 512)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1353, file: !426, line: 80, baseType: !314, size: 96, offset: 2688)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1353, file: !426, line: 80, baseType: !314, size: 96, offset: 2784)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1353, file: !426, line: 81, baseType: !314, size: 96, offset: 2880)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1353, file: !426, line: 83, baseType: !314, size: 96, offset: 2976)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !657, file: !648, line: 255, baseType: !1391, size: 64, offset: 3136)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !648, line: 170, size: 8704, elements: !1393)
!1393 = !{!1394, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1392, file: !648, line: 171, baseType: !1395, size: 96)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 96, elements: !315)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1392, file: !648, line: 172, baseType: !35, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1392, file: !648, line: 173, baseType: !99, size: 16, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1392, file: !648, line: 174, baseType: !99, size: 16, offset: 144)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1392, file: !648, line: 175, baseType: !99, size: 16, offset: 160)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1392, file: !648, line: 176, baseType: !99, size: 16, offset: 176)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1392, file: !648, line: 177, baseType: !99, size: 16, offset: 192)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1392, file: !648, line: 178, baseType: !99, size: 16, offset: 208)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1392, file: !648, line: 179, baseType: !35, size: 32, offset: 224)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1392, file: !648, line: 181, baseType: !564, size: 64, offset: 256)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1392, file: !648, line: 182, baseType: !71, size: 32, offset: 320)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1392, file: !648, line: 183, baseType: !35, size: 32, offset: 352)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1392, file: !648, line: 184, baseType: !139, size: 8192, offset: 384)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1392, file: !648, line: 187, baseType: !639, size: 64, offset: 8576)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1392, file: !648, line: 188, baseType: !35, size: 32, offset: 8640)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1392, file: !648, line: 189, baseType: !35, size: 32, offset: 8672)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !657, file: !648, line: 256, baseType: !1412, size: 64, offset: 3200)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !648, line: 193, size: 640, elements: !1414)
!1414 = !{!1415, !1416, !1417, !1418}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1413, file: !648, line: 194, baseType: !564, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1413, file: !648, line: 195, baseType: !168, size: 512, offset: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1413, file: !648, line: 197, baseType: !35, size: 32, offset: 576)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1413, file: !648, line: 198, baseType: !35, size: 32, offset: 608)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !657, file: !648, line: 258, baseType: !140, size: 8, offset: 3264)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !657, file: !648, line: 259, baseType: !432, size: 56, offset: 3272)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !647, file: !648, line: 62, baseType: !168, size: 512, offset: 192)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !647, file: !648, line: 64, baseType: !140, size: 8, offset: 704)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !647, file: !648, line: 64, baseType: !140, size: 8, offset: 712)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !647, file: !648, line: 64, baseType: !140, size: 8, offset: 720)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !647, file: !648, line: 64, baseType: !140, size: 8, offset: 728)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !647, file: !648, line: 65, baseType: !314, size: 96, offset: 736)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !647, file: !648, line: 65, baseType: !314, size: 96, offset: 832)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !647, file: !648, line: 65, baseType: !71, size: 32, offset: 928)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !647, file: !648, line: 67, baseType: !99, size: 16, offset: 960)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !647, file: !648, line: 67, baseType: !99, size: 16, offset: 976)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !647, file: !648, line: 67, baseType: !99, size: 16, offset: 992)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !647, file: !648, line: 67, baseType: !99, size: 16, offset: 1008)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !647, file: !648, line: 68, baseType: !99, size: 16, offset: 1024)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !647, file: !648, line: 68, baseType: !99, size: 16, offset: 1040)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !647, file: !648, line: 69, baseType: !140, size: 8, offset: 1056)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !647, file: !648, line: 69, baseType: !432, size: 56, offset: 1064)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !647, file: !648, line: 70, baseType: !71, size: 32, offset: 1120)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !647, file: !648, line: 70, baseType: !71, size: 32, offset: 1152)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !647, file: !648, line: 70, baseType: !71, size: 32, offset: 1184)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !647, file: !648, line: 70, baseType: !71, size: 32, offset: 1216)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !647, file: !648, line: 71, baseType: !71, size: 32, offset: 1248)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !647, file: !648, line: 71, baseType: !71, size: 32, offset: 1280)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !647, file: !648, line: 74, baseType: !71, size: 32, offset: 1312)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !647, file: !648, line: 74, baseType: !71, size: 32, offset: 1344)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !647, file: !648, line: 77, baseType: !71, size: 32, offset: 1376)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !647, file: !648, line: 77, baseType: !71, size: 32, offset: 1408)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !647, file: !648, line: 77, baseType: !71, size: 32, offset: 1440)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !647, file: !648, line: 78, baseType: !71, size: 32, offset: 1472)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !647, file: !648, line: 78, baseType: !71, size: 32, offset: 1504)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !647, file: !648, line: 78, baseType: !71, size: 32, offset: 1536)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !647, file: !648, line: 79, baseType: !71, size: 32, offset: 1568)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !647, file: !648, line: 79, baseType: !71, size: 32, offset: 1600)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !647, file: !648, line: 79, baseType: !71, size: 32, offset: 1632)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !647, file: !648, line: 79, baseType: !71, size: 32, offset: 1664)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !647, file: !648, line: 80, baseType: !71, size: 32, offset: 1696)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !647, file: !648, line: 80, baseType: !71, size: 32, offset: 1728)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !647, file: !648, line: 80, baseType: !71, size: 32, offset: 1760)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !647, file: !648, line: 81, baseType: !71, size: 32, offset: 1792)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !647, file: !648, line: 81, baseType: !71, size: 32, offset: 1824)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !647, file: !648, line: 81, baseType: !71, size: 32, offset: 1856)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !647, file: !648, line: 82, baseType: !71, size: 32, offset: 1888)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !647, file: !648, line: 82, baseType: !71, size: 32, offset: 1920)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !647, file: !648, line: 82, baseType: !71, size: 32, offset: 1952)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !647, file: !648, line: 85, baseType: !71, size: 32, offset: 1984)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !647, file: !648, line: 85, baseType: !71, size: 32, offset: 2016)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !647, file: !648, line: 85, baseType: !71, size: 32, offset: 2048)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !647, file: !648, line: 85, baseType: !71, size: 32, offset: 2080)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !647, file: !648, line: 86, baseType: !71, size: 32, offset: 2112)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !647, file: !648, line: 86, baseType: !71, size: 32, offset: 2144)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !647, file: !648, line: 86, baseType: !71, size: 32, offset: 2176)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !647, file: !648, line: 86, baseType: !71, size: 32, offset: 2208)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !647, file: !648, line: 87, baseType: !71, size: 32, offset: 2240)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !647, file: !648, line: 87, baseType: !71, size: 32, offset: 2272)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !647, file: !648, line: 87, baseType: !71, size: 32, offset: 2304)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !647, file: !648, line: 87, baseType: !71, size: 32, offset: 2336)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !647, file: !648, line: 90, baseType: !71, size: 32, offset: 2368)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !647, file: !648, line: 93, baseType: !71, size: 32, offset: 2400)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !647, file: !648, line: 93, baseType: !71, size: 32, offset: 2432)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !647, file: !648, line: 93, baseType: !71, size: 32, offset: 2464)
!1480 = !{!1481}
!1481 = !DISubrange(count: 18)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !568, file: !569, line: 123, baseType: !99, size: 16, offset: 4032)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !568, file: !569, line: 123, baseType: !99, size: 16, offset: 4048)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !568, file: !569, line: 123, baseType: !404, size: 32, offset: 4064)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !568, file: !569, line: 126, baseType: !397, size: 64, offset: 4096)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !568, file: !569, line: 129, baseType: !712, size: 64, offset: 4160)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !559, file: !204, line: 1223, baseType: !558, size: 64, offset: 1152)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !559, file: !204, line: 1225, baseType: !89, size: 128, offset: 1216)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !559, file: !204, line: 1226, baseType: !1490, size: 64, offset: 1344)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !204, line: 69, size: 320, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1491, file: !204, line: 70, baseType: !1490, size: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1491, file: !204, line: 70, baseType: !1490, size: 64, offset: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1491, file: !204, line: 71, baseType: !7, size: 32, offset: 128)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1491, file: !204, line: 71, baseType: !7, size: 32, offset: 160)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1491, file: !204, line: 72, baseType: !35, size: 32, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1491, file: !204, line: 73, baseType: !99, size: 16, offset: 224)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1491, file: !204, line: 73, baseType: !99, size: 16, offset: 240)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1491, file: !204, line: 74, baseType: !564, size: 64, offset: 256)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !559, file: !204, line: 1227, baseType: !564, size: 64, offset: 1408)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !559, file: !204, line: 1229, baseType: !314, size: 96, offset: 1472)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !559, file: !204, line: 1230, baseType: !314, size: 96, offset: 1568)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !559, file: !204, line: 1231, baseType: !314, size: 96, offset: 1664)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !559, file: !204, line: 1231, baseType: !314, size: 96, offset: 1760)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !559, file: !204, line: 1233, baseType: !7, size: 32, offset: 1856)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !559, file: !204, line: 1234, baseType: !35, size: 32, offset: 1888)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !559, file: !204, line: 1235, baseType: !7, size: 32, offset: 1920)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !559, file: !204, line: 1237, baseType: !99, size: 16, offset: 1952)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !559, file: !204, line: 1239, baseType: !140, size: 8, offset: 1968)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !559, file: !204, line: 1240, baseType: !1279, size: 8, offset: 1976)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !559, file: !204, line: 1242, baseType: !712, size: 64, offset: 1984)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !559, file: !204, line: 1244, baseType: !1514, size: 64, offset: 2048)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1516, line: 200, size: 17024, elements: !1517)
!1516 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1517 = !{!1518, !1520, !1521, !1522, !1642, !1643, !1644, !1645, !1646, !1647, !1648}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1515, file: !1516, line: 201, baseType: !1519, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1515, file: !1516, line: 202, baseType: !89, size: 128, offset: 64)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1515, file: !1516, line: 203, baseType: !89, size: 128, offset: 192)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1515, file: !1516, line: 206, baseType: !1523, size: 64, offset: 320)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1516, line: 190, baseType: !1525)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1516, line: 126, size: 2816, elements: !1526)
!1526 = !{!1527, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1641}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1525, file: !1516, line: 127, baseType: !1528, size: 64)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1525, file: !1516, line: 127, baseType: !1528, size: 64, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1525, file: !1516, line: 128, baseType: !74, size: 64, offset: 128)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1525, file: !1516, line: 129, baseType: !74, size: 64, offset: 192)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1525, file: !1516, line: 130, baseType: !168, size: 512, offset: 256)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1525, file: !1516, line: 132, baseType: !35, size: 32, offset: 768)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1525, file: !1516, line: 132, baseType: !35, size: 32, offset: 800)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1525, file: !1516, line: 133, baseType: !35, size: 32, offset: 832)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1525, file: !1516, line: 134, baseType: !35, size: 32, offset: 864)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1525, file: !1516, line: 134, baseType: !35, size: 32, offset: 896)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1525, file: !1516, line: 134, baseType: !35, size: 32, offset: 928)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1525, file: !1516, line: 135, baseType: !35, size: 32, offset: 960)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1525, file: !1516, line: 135, baseType: !35, size: 32, offset: 992)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1525, file: !1516, line: 136, baseType: !35, size: 32, offset: 1024)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1525, file: !1516, line: 136, baseType: !35, size: 32, offset: 1056)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1525, file: !1516, line: 137, baseType: !35, size: 32, offset: 1088)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1525, file: !1516, line: 137, baseType: !35, size: 32, offset: 1120)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1525, file: !1516, line: 138, baseType: !71, size: 32, offset: 1152)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1525, file: !1516, line: 139, baseType: !71, size: 32, offset: 1184)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1525, file: !1516, line: 139, baseType: !71, size: 32, offset: 1216)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1525, file: !1516, line: 141, baseType: !99, size: 16, offset: 1248)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1525, file: !1516, line: 142, baseType: !99, size: 16, offset: 1264)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1525, file: !1516, line: 143, baseType: !35, size: 32, offset: 1280)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1525, file: !1516, line: 144, baseType: !35, size: 32, offset: 1312)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1525, file: !1516, line: 146, baseType: !1553, size: 64, offset: 1344)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1516, line: 114, baseType: !1555)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1516, line: 99, size: 7232, elements: !1556)
!1556 = !{!1557, !1559, !1560, !1561, !1562, !1563, !1564, !1572, !1573, !1585, !1594, !1601, !1611}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1555, file: !1516, line: 100, baseType: !1558, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1555, file: !1516, line: 100, baseType: !1558, size: 64, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1555, file: !1516, line: 101, baseType: !35, size: 32, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1555, file: !1516, line: 101, baseType: !35, size: 32, offset: 160)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1555, file: !1516, line: 102, baseType: !35, size: 32, offset: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1555, file: !1516, line: 102, baseType: !35, size: 32, offset: 224)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1555, file: !1516, line: 103, baseType: !1565, size: 64, offset: 256)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1516, line: 59, baseType: !1567)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1516, line: 56, size: 2112, elements: !1568)
!1568 = !{!1569, !1570, !1571}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1567, file: !1516, line: 57, baseType: !452, size: 2048)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1567, file: !1516, line: 58, baseType: !35, size: 32, offset: 2048)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1567, file: !1516, line: 58, baseType: !35, size: 32, offset: 2080)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1555, file: !1516, line: 106, baseType: !471, size: 6144, offset: 320)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1555, file: !1516, line: 107, baseType: !1574, size: 64, offset: 6464)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1516, line: 97, baseType: !1576)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1516, line: 83, size: 8320, elements: !1577)
!1577 = !{!1578, !1579, !1580, !1581, !1582, !1583, !1584}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1576, file: !1516, line: 84, baseType: !471, size: 6144)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1576, file: !1516, line: 87, baseType: !452, size: 2048, offset: 6144)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1576, file: !1516, line: 88, baseType: !195, size: 64, offset: 8192)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1576, file: !1516, line: 90, baseType: !99, size: 16, offset: 8256)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1576, file: !1516, line: 92, baseType: !99, size: 16, offset: 8272)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1576, file: !1516, line: 93, baseType: !99, size: 16, offset: 8288)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1576, file: !1516, line: 95, baseType: !99, size: 16, offset: 8304)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1555, file: !1516, line: 108, baseType: !1586, size: 64, offset: 6528)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1516, line: 66, baseType: !1588)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1516, line: 61, size: 128, elements: !1589)
!1589 = !{!1590, !1591, !1592, !1593}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1588, file: !1516, line: 62, baseType: !35, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1588, file: !1516, line: 63, baseType: !35, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1588, file: !1516, line: 64, baseType: !35, size: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1588, file: !1516, line: 65, baseType: !35, size: 32, offset: 96)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1555, file: !1516, line: 109, baseType: !1595, size: 64, offset: 6592)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1516, line: 71, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1516, line: 68, size: 64, elements: !1598)
!1598 = !{!1599, !1600}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1597, file: !1516, line: 69, baseType: !35, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1597, file: !1516, line: 70, baseType: !35, size: 32, offset: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1555, file: !1516, line: 110, baseType: !1602, size: 64, offset: 6656)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1516, line: 81, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1516, line: 73, size: 352, elements: !1605)
!1605 = !{!1606, !1607, !1608, !1609, !1610}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1604, file: !1516, line: 74, baseType: !314, size: 96)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1604, file: !1516, line: 75, baseType: !314, size: 96, offset: 96)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1604, file: !1516, line: 76, baseType: !314, size: 96, offset: 192)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1604, file: !1516, line: 77, baseType: !35, size: 32, offset: 288)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1604, file: !1516, line: 78, baseType: !35, size: 32, offset: 320)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1555, file: !1516, line: 113, baseType: !425, size: 512, offset: 6720)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1525, file: !1516, line: 148, baseType: !642, size: 64, offset: 1408)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1525, file: !1516, line: 151, baseType: !558, size: 64, offset: 1472)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1525, file: !1516, line: 152, baseType: !564, size: 64, offset: 1536)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1525, file: !1516, line: 153, baseType: !116, size: 64, offset: 1600)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1525, file: !1516, line: 154, baseType: !525, size: 64, offset: 1664)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1525, file: !1516, line: 156, baseType: !195, size: 64, offset: 1728)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1525, file: !1516, line: 158, baseType: !71, size: 32, offset: 1792)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1525, file: !1516, line: 159, baseType: !71, size: 32, offset: 1824)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1525, file: !1516, line: 162, baseType: !1528, size: 64, offset: 1856)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1525, file: !1516, line: 162, baseType: !1528, size: 64, offset: 1920)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1525, file: !1516, line: 162, baseType: !1528, size: 64, offset: 1984)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1525, file: !1516, line: 164, baseType: !89, size: 128, offset: 2048)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1525, file: !1516, line: 166, baseType: !1625, size: 64, offset: 2176)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1516, line: 51, flags: DIFlagFwdDecl)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1525, file: !1516, line: 167, baseType: !74, size: 64, offset: 2240)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1525, file: !1516, line: 168, baseType: !71, size: 32, offset: 2304)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1525, file: !1516, line: 170, baseType: !71, size: 32, offset: 2336)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1525, file: !1516, line: 170, baseType: !71, size: 32, offset: 2368)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1525, file: !1516, line: 171, baseType: !71, size: 32, offset: 2400)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1525, file: !1516, line: 173, baseType: !74, size: 64, offset: 2432)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1525, file: !1516, line: 175, baseType: !35, size: 32, offset: 2496)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1525, file: !1516, line: 176, baseType: !35, size: 32, offset: 2528)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1525, file: !1516, line: 179, baseType: !35, size: 32, offset: 2560)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1525, file: !1516, line: 180, baseType: !71, size: 32, offset: 2592)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1525, file: !1516, line: 183, baseType: !35, size: 32, offset: 2624)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1525, file: !1516, line: 185, baseType: !140, size: 8, offset: 2656)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1525, file: !1516, line: 186, baseType: !1640, size: 24, offset: 2664)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 24, elements: !315)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1525, file: !1516, line: 189, baseType: !89, size: 128, offset: 2688)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1515, file: !1516, line: 207, baseType: !139, size: 8192, offset: 384)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1515, file: !1516, line: 208, baseType: !139, size: 8192, offset: 8576)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1515, file: !1516, line: 210, baseType: !35, size: 32, offset: 16768)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1515, file: !1516, line: 210, baseType: !35, size: 32, offset: 16800)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1515, file: !1516, line: 211, baseType: !35, size: 32, offset: 16832)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1515, file: !1516, line: 211, baseType: !35, size: 32, offset: 16864)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1515, file: !1516, line: 212, baseType: !943, size: 128, offset: 16896)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !559, file: !204, line: 1246, baseType: !1650, size: 64, offset: 2112)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !204, line: 1067, size: 5184, elements: !1652)
!1652 = !{!1653, !1683, !1684, !1698, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1733, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1843}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1651, file: !204, line: 1068, baseType: !1654, size: 64)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !204, line: 934, baseType: !1656)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !204, line: 925, size: 576, elements: !1657)
!1657 = !{!1658, !1675, !1676, !1677, !1678, !1679, !1682}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1656, file: !204, line: 926, baseType: !1659, size: 320)
!1659 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !204, line: 830, baseType: !1660)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !204, line: 813, size: 320, elements: !1661)
!1661 = !{!1662, !1665, !1668, !1669, !1672, !1673, !1674}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1660, file: !204, line: 814, baseType: !1663, size: 64)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!1664 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !204, line: 51, flags: DIFlagFwdDecl)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1660, file: !204, line: 815, baseType: !1666, size: 64, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !204, line: 815, flags: DIFlagFwdDecl)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1660, file: !204, line: 818, baseType: !74, size: 64, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1660, file: !204, line: 819, baseType: !1670, size: 32, offset: 192)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1671, size: 32, elements: !421)
!1671 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1660, file: !204, line: 822, baseType: !35, size: 32, offset: 224)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1660, file: !204, line: 826, baseType: !35, size: 32, offset: 256)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1660, file: !204, line: 829, baseType: !35, size: 32, offset: 288)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1656, file: !204, line: 928, baseType: !99, size: 16, offset: 320)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1656, file: !204, line: 928, baseType: !99, size: 16, offset: 336)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1656, file: !204, line: 929, baseType: !35, size: 32, offset: 352)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1656, file: !204, line: 930, baseType: !394, size: 64, offset: 384)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1656, file: !204, line: 931, baseType: !1680, size: 64, offset: 448)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !204, line: 931, flags: DIFlagFwdDecl)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1656, file: !204, line: 933, baseType: !74, size: 64, offset: 512)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1651, file: !204, line: 1069, baseType: !1654, size: 64, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1651, file: !204, line: 1070, baseType: !1685, size: 64, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !204, line: 916, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !204, line: 891, size: 704, elements: !1688)
!1688 = !{!1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1687, file: !204, line: 892, baseType: !1659, size: 320)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1687, file: !204, line: 896, baseType: !35, size: 32, offset: 320)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1687, file: !204, line: 900, baseType: !1395, size: 96, offset: 352)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1687, file: !204, line: 903, baseType: !71, size: 32, offset: 448)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1687, file: !204, line: 906, baseType: !35, size: 32, offset: 480)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1687, file: !204, line: 909, baseType: !71, size: 32, offset: 512)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1687, file: !204, line: 912, baseType: !71, size: 32, offset: 544)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1687, file: !204, line: 914, baseType: !564, size: 64, offset: 576)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1687, file: !204, line: 915, baseType: !74, size: 64, offset: 640)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1651, file: !204, line: 1071, baseType: !1699, size: 64, offset: 192)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !204, line: 920, baseType: !1701)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !204, line: 918, size: 320, elements: !1702)
!1702 = !{!1703}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1701, file: !204, line: 919, baseType: !1659, size: 320)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1651, file: !204, line: 1075, baseType: !71, size: 32, offset: 256)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1651, file: !204, line: 1077, baseType: !71, size: 32, offset: 288)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1651, file: !204, line: 1078, baseType: !71, size: 32, offset: 320)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1651, file: !204, line: 1079, baseType: !99, size: 16, offset: 352)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1651, file: !204, line: 1082, baseType: !99, size: 16, offset: 368)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1651, file: !204, line: 1085, baseType: !140, size: 8, offset: 384)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1651, file: !204, line: 1086, baseType: !140, size: 8, offset: 392)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1651, file: !204, line: 1087, baseType: !140, size: 8, offset: 400)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1651, file: !204, line: 1088, baseType: !140, size: 8, offset: 408)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1651, file: !204, line: 1090, baseType: !71, size: 32, offset: 416)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1651, file: !204, line: 1093, baseType: !99, size: 16, offset: 448)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1651, file: !204, line: 1096, baseType: !140, size: 8, offset: 464)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1651, file: !204, line: 1098, baseType: !541, size: 40, offset: 472)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1651, file: !204, line: 1101, baseType: !1718, size: 832, offset: 512)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !204, line: 836, size: 832, elements: !1719)
!1719 = !{!1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1718, file: !204, line: 837, baseType: !1659, size: 320)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1718, file: !204, line: 839, baseType: !99, size: 16, offset: 320)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1718, file: !204, line: 839, baseType: !99, size: 16, offset: 336)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1718, file: !204, line: 842, baseType: !99, size: 16, offset: 352)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1718, file: !204, line: 842, baseType: !99, size: 16, offset: 368)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1718, file: !204, line: 843, baseType: !404, size: 32, offset: 384)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1718, file: !204, line: 845, baseType: !35, size: 32, offset: 416)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1718, file: !204, line: 847, baseType: !74, size: 64, offset: 448)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1718, file: !204, line: 848, baseType: !362, size: 64, offset: 512)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1718, file: !204, line: 849, baseType: !362, size: 64, offset: 576)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1718, file: !204, line: 850, baseType: !362, size: 64, offset: 640)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1718, file: !204, line: 851, baseType: !314, size: 96, offset: 704)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1718, file: !204, line: 852, baseType: !71, size: 32, offset: 800)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1651, file: !204, line: 1104, baseType: !1734, size: 1344, offset: 1344)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !204, line: 867, size: 1344, elements: !1735)
!1735 = !{!1736, !1737, !1738, !1739, !1740, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1734, file: !204, line: 868, baseType: !99, size: 16)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1734, file: !204, line: 869, baseType: !99, size: 16, offset: 16)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1734, file: !204, line: 870, baseType: !99, size: 16, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1734, file: !204, line: 871, baseType: !99, size: 16, offset: 48)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1734, file: !204, line: 873, baseType: !1741, size: 896, offset: 64)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1742, size: 896, elements: !433)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !204, line: 864, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !204, line: 859, size: 128, elements: !1744)
!1744 = !{!1745, !1746, !1747, !1748, !1749, !1750}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1743, file: !204, line: 860, baseType: !99, size: 16)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1743, file: !204, line: 861, baseType: !99, size: 16, offset: 16)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1743, file: !204, line: 861, baseType: !99, size: 16, offset: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1743, file: !204, line: 861, baseType: !99, size: 16, offset: 48)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1743, file: !204, line: 862, baseType: !35, size: 32, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1743, file: !204, line: 863, baseType: !71, size: 32, offset: 96)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1734, file: !204, line: 874, baseType: !74, size: 64, offset: 960)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1734, file: !204, line: 876, baseType: !71, size: 32, offset: 1024)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1734, file: !204, line: 876, baseType: !71, size: 32, offset: 1056)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1734, file: !204, line: 878, baseType: !35, size: 32, offset: 1088)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1734, file: !204, line: 879, baseType: !35, size: 32, offset: 1120)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1734, file: !204, line: 881, baseType: !35, size: 32, offset: 1152)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1734, file: !204, line: 881, baseType: !35, size: 32, offset: 1184)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1734, file: !204, line: 883, baseType: !558, size: 64, offset: 1216)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1734, file: !204, line: 884, baseType: !564, size: 64, offset: 1280)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1651, file: !204, line: 1107, baseType: !71, size: 32, offset: 2688)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1651, file: !204, line: 1110, baseType: !71, size: 32, offset: 2720)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1651, file: !204, line: 1113, baseType: !99, size: 16, offset: 2752)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1651, file: !204, line: 1113, baseType: !99, size: 16, offset: 2768)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1651, file: !204, line: 1116, baseType: !140, size: 8, offset: 2784)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1651, file: !204, line: 1117, baseType: !1279, size: 8, offset: 2792)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1651, file: !204, line: 1120, baseType: !99, size: 16, offset: 2800)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1651, file: !204, line: 1121, baseType: !71, size: 32, offset: 2816)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1651, file: !204, line: 1122, baseType: !71, size: 32, offset: 2848)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1651, file: !204, line: 1123, baseType: !71, size: 32, offset: 2880)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1651, file: !204, line: 1124, baseType: !71, size: 32, offset: 2912)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1651, file: !204, line: 1125, baseType: !71, size: 32, offset: 2944)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1651, file: !204, line: 1126, baseType: !71, size: 32, offset: 2976)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1651, file: !204, line: 1127, baseType: !71, size: 32, offset: 3008)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1651, file: !204, line: 1128, baseType: !71, size: 32, offset: 3040)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1651, file: !204, line: 1129, baseType: !71, size: 32, offset: 3072)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1651, file: !204, line: 1130, baseType: !71, size: 32, offset: 3104)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1651, file: !204, line: 1131, baseType: !99, size: 16, offset: 3136)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1651, file: !204, line: 1132, baseType: !140, size: 8, offset: 3152)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1651, file: !204, line: 1133, baseType: !140, size: 8, offset: 3160)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1651, file: !204, line: 1134, baseType: !1640, size: 24, offset: 3168)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1651, file: !204, line: 1135, baseType: !140, size: 8, offset: 3192)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1651, file: !204, line: 1138, baseType: !564, size: 64, offset: 3200)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1651, file: !204, line: 1139, baseType: !140, size: 8, offset: 3264)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1651, file: !204, line: 1140, baseType: !140, size: 8, offset: 3272)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1651, file: !204, line: 1141, baseType: !140, size: 8, offset: 3280)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1651, file: !204, line: 1142, baseType: !140, size: 8, offset: 3288)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1651, file: !204, line: 1143, baseType: !140, size: 8, offset: 3296)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1651, file: !204, line: 1144, baseType: !1789, size: 64, offset: 3304)
!1789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !72)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1651, file: !204, line: 1145, baseType: !1789, size: 64, offset: 3368)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1651, file: !204, line: 1148, baseType: !140, size: 8, offset: 3432)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1651, file: !204, line: 1149, baseType: !140, size: 8, offset: 3440)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1651, file: !204, line: 1152, baseType: !140, size: 8, offset: 3448)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1651, file: !204, line: 1152, baseType: !140, size: 8, offset: 3456)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1651, file: !204, line: 1153, baseType: !140, size: 8, offset: 3464)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1651, file: !204, line: 1154, baseType: !99, size: 16, offset: 3472)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1651, file: !204, line: 1154, baseType: !99, size: 16, offset: 3488)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1651, file: !204, line: 1155, baseType: !99, size: 16, offset: 3504)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1651, file: !204, line: 1155, baseType: !99, size: 16, offset: 3520)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1651, file: !204, line: 1156, baseType: !140, size: 8, offset: 3536)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1651, file: !204, line: 1157, baseType: !140, size: 8, offset: 3544)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1651, file: !204, line: 1159, baseType: !140, size: 8, offset: 3552)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1651, file: !204, line: 1160, baseType: !140, size: 8, offset: 3560)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1651, file: !204, line: 1161, baseType: !140, size: 8, offset: 3568)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1651, file: !204, line: 1162, baseType: !140, size: 8, offset: 3576)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1651, file: !204, line: 1165, baseType: !35, size: 32, offset: 3584)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1651, file: !204, line: 1166, baseType: !35, size: 32, offset: 3616)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1651, file: !204, line: 1167, baseType: !35, size: 32, offset: 3648)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1651, file: !204, line: 1168, baseType: !35, size: 32, offset: 3680)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1651, file: !204, line: 1171, baseType: !99, size: 16, offset: 3712)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1651, file: !204, line: 1171, baseType: !99, size: 16, offset: 3728)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1651, file: !204, line: 1172, baseType: !35, size: 32, offset: 3744)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1651, file: !204, line: 1173, baseType: !71, size: 32, offset: 3776)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1651, file: !204, line: 1174, baseType: !71, size: 32, offset: 3808)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1651, file: !204, line: 1177, baseType: !1816, size: 1024, offset: 3840)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !204, line: 963, size: 1024, elements: !1817)
!1817 = !{!1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1841, !1842}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1816, file: !204, line: 965, baseType: !35, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1816, file: !204, line: 968, baseType: !71, size: 32, offset: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1816, file: !204, line: 971, baseType: !71, size: 32, offset: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1816, file: !204, line: 974, baseType: !71, size: 32, offset: 96)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1816, file: !204, line: 977, baseType: !314, size: 96, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1816, file: !204, line: 979, baseType: !314, size: 96, offset: 224)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1816, file: !204, line: 982, baseType: !35, size: 32, offset: 320)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1816, file: !204, line: 987, baseType: !250, size: 64, offset: 352)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1816, file: !204, line: 989, baseType: !71, size: 32, offset: 416)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1816, file: !204, line: 994, baseType: !35, size: 32, offset: 448)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1816, file: !204, line: 995, baseType: !35, size: 32, offset: 480)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1816, file: !204, line: 997, baseType: !140, size: 8, offset: 512)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1816, file: !204, line: 998, baseType: !432, size: 56, offset: 520)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1816, file: !204, line: 1000, baseType: !71, size: 32, offset: 576)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1816, file: !204, line: 1003, baseType: !250, size: 64, offset: 608)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1816, file: !204, line: 1006, baseType: !35, size: 32, offset: 672)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1816, file: !204, line: 1009, baseType: !71, size: 32, offset: 704)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1816, file: !204, line: 1012, baseType: !250, size: 64, offset: 736)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1816, file: !204, line: 1015, baseType: !250, size: 64, offset: 800)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1816, file: !204, line: 1018, baseType: !35, size: 32, offset: 864)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1816, file: !204, line: 1019, baseType: !1839, size: 64, offset: 896)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !204, line: 63, flags: DIFlagFwdDecl)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1816, file: !204, line: 1023, baseType: !71, size: 32, offset: 960)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1816, file: !204, line: 1024, baseType: !35, size: 32, offset: 992)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1651, file: !204, line: 1179, baseType: !1844, size: 320, offset: 4864)
!1844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !204, line: 1043, size: 320, elements: !1845)
!1845 = !{!1846, !1847, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1844, file: !204, line: 1044, baseType: !140, size: 8)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1844, file: !204, line: 1045, baseType: !1848, size: 16, offset: 8)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 16, elements: !190)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1844, file: !204, line: 1048, baseType: !140, size: 8, offset: 24)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1844, file: !204, line: 1049, baseType: !71, size: 32, offset: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1844, file: !204, line: 1049, baseType: !71, size: 32, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1844, file: !204, line: 1052, baseType: !71, size: 32, offset: 96)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1844, file: !204, line: 1052, baseType: !71, size: 32, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1844, file: !204, line: 1053, baseType: !140, size: 8, offset: 160)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1844, file: !204, line: 1054, baseType: !1640, size: 24, offset: 168)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1844, file: !204, line: 1057, baseType: !71, size: 32, offset: 192)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1844, file: !204, line: 1057, baseType: !71, size: 32, offset: 224)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1844, file: !204, line: 1060, baseType: !71, size: 32, offset: 256)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1844, file: !204, line: 1060, baseType: !71, size: 32, offset: 288)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !559, file: !204, line: 1247, baseType: !1861, size: 64, offset: 2176)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !204, line: 60, flags: DIFlagFwdDecl)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !559, file: !204, line: 1251, baseType: !1864, size: 31872, offset: 2240)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !204, line: 403, size: 31872, elements: !1865)
!1865 = !{!1866, !1901, !1921, !1930, !1950, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2081, !2082, !2083, !2085, !2101, !2102}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1864, file: !204, line: 404, baseType: !1867, size: 1984)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !204, line: 259, size: 1984, elements: !1868)
!1868 = !{!1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1884, !1896}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1867, file: !204, line: 260, baseType: !140, size: 8)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1867, file: !204, line: 263, baseType: !140, size: 8, offset: 8)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1867, file: !204, line: 266, baseType: !140, size: 8, offset: 16)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1867, file: !204, line: 267, baseType: !140, size: 8, offset: 24)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1867, file: !204, line: 269, baseType: !140, size: 8, offset: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1867, file: !204, line: 270, baseType: !140, size: 8, offset: 40)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1867, file: !204, line: 276, baseType: !140, size: 8, offset: 48)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1867, file: !204, line: 279, baseType: !140, size: 8, offset: 56)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1867, file: !204, line: 280, baseType: !99, size: 16, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1867, file: !204, line: 280, baseType: !99, size: 16, offset: 80)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1867, file: !204, line: 281, baseType: !71, size: 32, offset: 96)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1867, file: !204, line: 284, baseType: !140, size: 8, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1867, file: !204, line: 285, baseType: !140, size: 8, offset: 136)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1867, file: !204, line: 287, baseType: !1883, size: 48, offset: 144)
!1883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 48, elements: !1303)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1867, file: !204, line: 290, baseType: !1885, size: 1280, offset: 192)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !426, line: 174, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !426, line: 166, size: 1280, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1886, file: !426, line: 167, baseType: !35, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1886, file: !426, line: 167, baseType: !35, size: 32, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1886, file: !426, line: 168, baseType: !168, size: 512, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1886, file: !426, line: 169, baseType: !168, size: 512, offset: 576)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1886, file: !426, line: 170, baseType: !71, size: 32, offset: 1088)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1886, file: !426, line: 171, baseType: !71, size: 32, offset: 1120)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1886, file: !426, line: 172, baseType: !1352, size: 64, offset: 1152)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1886, file: !426, line: 173, baseType: !74, size: 64, offset: 1216)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1867, file: !204, line: 291, baseType: !1897, size: 512, offset: 1472)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !426, line: 178, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !426, line: 176, size: 512, elements: !1899)
!1899 = !{!1900}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1898, file: !426, line: 177, baseType: !168, size: 512)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1864, file: !204, line: 406, baseType: !1902, size: 64, offset: 1984)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !204, line: 80, size: 1472, elements: !1904)
!1904 = !{!1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1903, file: !204, line: 81, baseType: !74, size: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1903, file: !204, line: 82, baseType: !74, size: 64, offset: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1903, file: !204, line: 83, baseType: !7, size: 32, offset: 128)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1903, file: !204, line: 84, baseType: !7, size: 32, offset: 160)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1903, file: !204, line: 86, baseType: !7, size: 32, offset: 192)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1903, file: !204, line: 87, baseType: !7, size: 32, offset: 224)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1903, file: !204, line: 88, baseType: !7, size: 32, offset: 256)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1903, file: !204, line: 89, baseType: !7, size: 32, offset: 288)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1903, file: !204, line: 90, baseType: !7, size: 32, offset: 320)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1903, file: !204, line: 91, baseType: !7, size: 32, offset: 352)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1903, file: !204, line: 92, baseType: !7, size: 32, offset: 384)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1903, file: !204, line: 93, baseType: !7, size: 32, offset: 416)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1903, file: !204, line: 95, baseType: !1918, size: 1024, offset: 448)
!1918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 1024, elements: !1919)
!1919 = !{!1920}
!1920 = !DISubrange(count: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1864, file: !204, line: 407, baseType: !1922, size: 64, offset: 2048)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !204, line: 98, size: 1216, elements: !1924)
!1924 = !{!1925, !1926, !1927, !1928, !1929}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1923, file: !204, line: 100, baseType: !74, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1923, file: !204, line: 101, baseType: !74, size: 64, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1923, file: !204, line: 103, baseType: !7, size: 32, offset: 128)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1923, file: !204, line: 104, baseType: !7, size: 32, offset: 160)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1923, file: !204, line: 106, baseType: !1918, size: 1024, offset: 192)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1864, file: !204, line: 408, baseType: !1931, size: 512, offset: 2112)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !204, line: 109, size: 512, elements: !1932)
!1932 = !{!1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1931, file: !204, line: 111, baseType: !35, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1931, file: !204, line: 112, baseType: !35, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1931, file: !204, line: 115, baseType: !35, size: 32, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1931, file: !204, line: 116, baseType: !35, size: 32, offset: 96)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1931, file: !204, line: 117, baseType: !35, size: 32, offset: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1931, file: !204, line: 118, baseType: !35, size: 32, offset: 160)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1931, file: !204, line: 119, baseType: !35, size: 32, offset: 192)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1931, file: !204, line: 120, baseType: !35, size: 32, offset: 224)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1931, file: !204, line: 121, baseType: !35, size: 32, offset: 256)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1931, file: !204, line: 122, baseType: !35, size: 32, offset: 288)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1931, file: !204, line: 125, baseType: !35, size: 32, offset: 320)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1931, file: !204, line: 126, baseType: !35, size: 32, offset: 352)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1931, file: !204, line: 127, baseType: !99, size: 16, offset: 384)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1931, file: !204, line: 128, baseType: !99, size: 16, offset: 400)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1931, file: !204, line: 129, baseType: !35, size: 32, offset: 416)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1931, file: !204, line: 130, baseType: !35, size: 32, offset: 448)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1931, file: !204, line: 131, baseType: !35, size: 32, offset: 480)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1864, file: !204, line: 409, baseType: !1951, size: 576, offset: 2624)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !204, line: 134, size: 576, elements: !1952)
!1952 = !{!1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1951, file: !204, line: 135, baseType: !35, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1951, file: !204, line: 136, baseType: !35, size: 32, offset: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1951, file: !204, line: 137, baseType: !35, size: 32, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1951, file: !204, line: 138, baseType: !35, size: 32, offset: 96)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1951, file: !204, line: 139, baseType: !35, size: 32, offset: 128)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1951, file: !204, line: 140, baseType: !35, size: 32, offset: 160)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1951, file: !204, line: 141, baseType: !35, size: 32, offset: 192)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1951, file: !204, line: 142, baseType: !35, size: 32, offset: 224)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1951, file: !204, line: 143, baseType: !71, size: 32, offset: 256)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1951, file: !204, line: 144, baseType: !35, size: 32, offset: 288)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1951, file: !204, line: 145, baseType: !35, size: 32, offset: 320)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1951, file: !204, line: 147, baseType: !35, size: 32, offset: 352)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1951, file: !204, line: 148, baseType: !35, size: 32, offset: 384)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1951, file: !204, line: 149, baseType: !35, size: 32, offset: 416)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1951, file: !204, line: 150, baseType: !35, size: 32, offset: 448)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1951, file: !204, line: 151, baseType: !35, size: 32, offset: 480)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1951, file: !204, line: 152, baseType: !157, size: 64, offset: 512)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1864, file: !204, line: 411, baseType: !35, size: 32, offset: 3200)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1864, file: !204, line: 411, baseType: !35, size: 32, offset: 3232)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1864, file: !204, line: 411, baseType: !35, size: 32, offset: 3264)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1864, file: !204, line: 412, baseType: !71, size: 32, offset: 3296)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1864, file: !204, line: 413, baseType: !35, size: 32, offset: 3328)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1864, file: !204, line: 413, baseType: !35, size: 32, offset: 3360)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1864, file: !204, line: 415, baseType: !35, size: 32, offset: 3392)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1864, file: !204, line: 415, baseType: !35, size: 32, offset: 3424)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1864, file: !204, line: 416, baseType: !99, size: 16, offset: 3456)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1864, file: !204, line: 416, baseType: !99, size: 16, offset: 3472)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1864, file: !204, line: 418, baseType: !71, size: 32, offset: 3488)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1864, file: !204, line: 418, baseType: !71, size: 32, offset: 3520)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1864, file: !204, line: 421, baseType: !71, size: 32, offset: 3552)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1864, file: !204, line: 421, baseType: !71, size: 32, offset: 3584)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1864, file: !204, line: 421, baseType: !71, size: 32, offset: 3616)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1864, file: !204, line: 425, baseType: !99, size: 16, offset: 3648)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1864, file: !204, line: 425, baseType: !99, size: 16, offset: 3664)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1864, file: !204, line: 425, baseType: !99, size: 16, offset: 3680)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1864, file: !204, line: 426, baseType: !99, size: 16, offset: 3696)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1864, file: !204, line: 428, baseType: !99, size: 16, offset: 3712)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1864, file: !204, line: 428, baseType: !99, size: 16, offset: 3728)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1864, file: !204, line: 431, baseType: !35, size: 32, offset: 3744)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1864, file: !204, line: 433, baseType: !99, size: 16, offset: 3776)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1864, file: !204, line: 435, baseType: !99, size: 16, offset: 3792)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1864, file: !204, line: 437, baseType: !99, size: 16, offset: 3808)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1864, file: !204, line: 439, baseType: !99, size: 16, offset: 3824)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1864, file: !204, line: 441, baseType: !99, size: 16, offset: 3840)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1864, file: !204, line: 443, baseType: !99, size: 16, offset: 3856)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1864, file: !204, line: 449, baseType: !35, size: 32, offset: 3872)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1864, file: !204, line: 453, baseType: !35, size: 32, offset: 3904)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1864, file: !204, line: 458, baseType: !99, size: 16, offset: 3936)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1864, file: !204, line: 462, baseType: !99, size: 16, offset: 3952)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1864, file: !204, line: 467, baseType: !35, size: 32, offset: 3968)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1864, file: !204, line: 467, baseType: !35, size: 32, offset: 4000)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1864, file: !204, line: 469, baseType: !99, size: 16, offset: 4032)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1864, file: !204, line: 469, baseType: !99, size: 16, offset: 4048)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1864, file: !204, line: 469, baseType: !99, size: 16, offset: 4064)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1864, file: !204, line: 469, baseType: !99, size: 16, offset: 4080)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1864, file: !204, line: 474, baseType: !99, size: 16, offset: 4096)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1864, file: !204, line: 475, baseType: !140, size: 8, offset: 4112)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1864, file: !204, line: 476, baseType: !140, size: 8, offset: 4120)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1864, file: !204, line: 481, baseType: !35, size: 32, offset: 4128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1864, file: !204, line: 486, baseType: !35, size: 32, offset: 4160)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1864, file: !204, line: 491, baseType: !35, size: 32, offset: 4192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1864, file: !204, line: 496, baseType: !99, size: 16, offset: 4224)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1864, file: !204, line: 498, baseType: !99, size: 16, offset: 4240)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1864, file: !204, line: 501, baseType: !99, size: 16, offset: 4256)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1864, file: !204, line: 502, baseType: !99, size: 16, offset: 4272)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1864, file: !204, line: 508, baseType: !99, size: 16, offset: 4288)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1864, file: !204, line: 513, baseType: !99, size: 16, offset: 4304)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1864, file: !204, line: 515, baseType: !99, size: 16, offset: 4320)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1864, file: !204, line: 515, baseType: !99, size: 16, offset: 4336)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1864, file: !204, line: 519, baseType: !943, size: 128, offset: 4352)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1864, file: !204, line: 519, baseType: !943, size: 128, offset: 4480)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1864, file: !204, line: 520, baseType: !953, size: 128, offset: 4608)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1864, file: !204, line: 523, baseType: !89, size: 128, offset: 4736)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1864, file: !204, line: 524, baseType: !99, size: 16, offset: 4864)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1864, file: !204, line: 527, baseType: !99, size: 16, offset: 4880)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1864, file: !204, line: 532, baseType: !71, size: 32, offset: 4896)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1864, file: !204, line: 532, baseType: !71, size: 32, offset: 4928)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1864, file: !204, line: 534, baseType: !71, size: 32, offset: 4960)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1864, file: !204, line: 538, baseType: !71, size: 32, offset: 4992)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1864, file: !204, line: 542, baseType: !35, size: 32, offset: 5024)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1864, file: !204, line: 545, baseType: !71, size: 32, offset: 5056)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1864, file: !204, line: 545, baseType: !71, size: 32, offset: 5088)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1864, file: !204, line: 545, baseType: !71, size: 32, offset: 5120)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1864, file: !204, line: 548, baseType: !71, size: 32, offset: 5152)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1864, file: !204, line: 551, baseType: !99, size: 16, offset: 5184)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1864, file: !204, line: 551, baseType: !99, size: 16, offset: 5200)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1864, file: !204, line: 551, baseType: !99, size: 16, offset: 5216)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1864, file: !204, line: 551, baseType: !99, size: 16, offset: 5232)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1864, file: !204, line: 552, baseType: !99, size: 16, offset: 5248)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1864, file: !204, line: 552, baseType: !99, size: 16, offset: 5264)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1864, file: !204, line: 553, baseType: !71, size: 32, offset: 5280)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1864, file: !204, line: 553, baseType: !71, size: 32, offset: 5312)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1864, file: !204, line: 554, baseType: !99, size: 16, offset: 5344)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1864, file: !204, line: 554, baseType: !99, size: 16, offset: 5360)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1864, file: !204, line: 555, baseType: !71, size: 32, offset: 5376)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1864, file: !204, line: 555, baseType: !71, size: 32, offset: 5408)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1864, file: !204, line: 558, baseType: !139, size: 8192, offset: 5440)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1864, file: !204, line: 561, baseType: !35, size: 32, offset: 13632)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1864, file: !204, line: 562, baseType: !99, size: 16, offset: 13664)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1864, file: !204, line: 562, baseType: !99, size: 16, offset: 13680)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1864, file: !204, line: 565, baseType: !471, size: 6144, offset: 13696)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1864, file: !204, line: 568, baseType: !420, size: 128, offset: 19840)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1864, file: !204, line: 569, baseType: !420, size: 128, offset: 19968)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1864, file: !204, line: 572, baseType: !140, size: 8, offset: 20096)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1864, file: !204, line: 573, baseType: !140, size: 8, offset: 20104)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1864, file: !204, line: 574, baseType: !140, size: 8, offset: 20112)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1864, file: !204, line: 575, baseType: !541, size: 40, offset: 20120)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1864, file: !204, line: 578, baseType: !35, size: 32, offset: 20160)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1864, file: !204, line: 579, baseType: !99, size: 16, offset: 20192)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1864, file: !204, line: 580, baseType: !99, size: 16, offset: 20208)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1864, file: !204, line: 581, baseType: !71, size: 32, offset: 20224)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1864, file: !204, line: 582, baseType: !71, size: 32, offset: 20256)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1864, file: !204, line: 585, baseType: !99, size: 16, offset: 20288)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1864, file: !204, line: 585, baseType: !99, size: 16, offset: 20304)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1864, file: !204, line: 586, baseType: !71, size: 32, offset: 20320)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1864, file: !204, line: 589, baseType: !99, size: 16, offset: 20352)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1864, file: !204, line: 589, baseType: !99, size: 16, offset: 20368)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1864, file: !204, line: 590, baseType: !35, size: 32, offset: 20384)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1864, file: !204, line: 593, baseType: !99, size: 16, offset: 20416)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1864, file: !204, line: 593, baseType: !99, size: 16, offset: 20432)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1864, file: !204, line: 594, baseType: !99, size: 16, offset: 20448)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1864, file: !204, line: 594, baseType: !99, size: 16, offset: 20464)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1864, file: !204, line: 595, baseType: !71, size: 32, offset: 20480)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1864, file: !204, line: 596, baseType: !71, size: 32, offset: 20512)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1864, file: !204, line: 597, baseType: !2078, size: 64, offset: 20544)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2080, line: 44, flags: DIFlagFwdDecl)
!2080 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1864, file: !204, line: 600, baseType: !35, size: 32, offset: 20608)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1864, file: !204, line: 601, baseType: !71, size: 32, offset: 20640)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1864, file: !204, line: 604, baseType: !2084, size: 256, offset: 20672)
!2084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 256, elements: !1293)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1864, file: !204, line: 607, baseType: !2086, size: 10880, offset: 20928)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !204, line: 364, size: 10880, elements: !2087)
!2087 = !{!2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2086, file: !204, line: 365, baseType: !1867, size: 1984)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2086, file: !204, line: 367, baseType: !139, size: 8192, offset: 1984)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2086, file: !204, line: 369, baseType: !99, size: 16, offset: 10176)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2086, file: !204, line: 369, baseType: !99, size: 16, offset: 10192)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2086, file: !204, line: 370, baseType: !99, size: 16, offset: 10208)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2086, file: !204, line: 370, baseType: !99, size: 16, offset: 10224)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2086, file: !204, line: 372, baseType: !71, size: 32, offset: 10240)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2086, file: !204, line: 373, baseType: !71, size: 32, offset: 10272)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2086, file: !204, line: 375, baseType: !1640, size: 24, offset: 10304)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2086, file: !204, line: 376, baseType: !140, size: 8, offset: 10328)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2086, file: !204, line: 378, baseType: !140, size: 8, offset: 10336)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2086, file: !204, line: 379, baseType: !1640, size: 24, offset: 10344)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2086, file: !204, line: 381, baseType: !168, size: 512, offset: 10368)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1864, file: !204, line: 609, baseType: !35, size: 32, offset: 31808)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1864, file: !204, line: 610, baseType: !35, size: 32, offset: 31840)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !559, file: !204, line: 1252, baseType: !2104, size: 256, offset: 34112)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !204, line: 158, size: 256, elements: !2105)
!2105 = !{!2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2104, file: !204, line: 159, baseType: !35, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2104, file: !204, line: 160, baseType: !71, size: 32, offset: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2104, file: !204, line: 161, baseType: !71, size: 32, offset: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2104, file: !204, line: 162, baseType: !71, size: 32, offset: 96)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2104, file: !204, line: 163, baseType: !35, size: 32, offset: 128)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2104, file: !204, line: 164, baseType: !99, size: 16, offset: 160)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2104, file: !204, line: 165, baseType: !99, size: 16, offset: 176)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2104, file: !204, line: 166, baseType: !71, size: 32, offset: 192)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2104, file: !204, line: 167, baseType: !71, size: 32, offset: 224)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !559, file: !204, line: 1254, baseType: !89, size: 128, offset: 34368)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !559, file: !204, line: 1255, baseType: !89, size: 128, offset: 34496)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !559, file: !204, line: 1257, baseType: !74, size: 64, offset: 34624)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !559, file: !204, line: 1258, baseType: !74, size: 64, offset: 34688)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !559, file: !204, line: 1259, baseType: !74, size: 64, offset: 34752)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !559, file: !204, line: 1260, baseType: !74, size: 64, offset: 34816)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !559, file: !204, line: 1262, baseType: !74, size: 64, offset: 34880)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !559, file: !204, line: 1265, baseType: !2123, size: 64, offset: 34944)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !204, line: 1265, flags: DIFlagFwdDecl)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !559, file: !204, line: 1266, baseType: !99, size: 16, offset: 35008)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !559, file: !204, line: 1267, baseType: !99, size: 16, offset: 35024)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !559, file: !204, line: 1270, baseType: !35, size: 32, offset: 35040)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !559, file: !204, line: 1271, baseType: !89, size: 128, offset: 35072)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !559, file: !204, line: 1274, baseType: !2130, size: 128, offset: 35200)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !204, line: 650, size: 128, elements: !2131)
!2131 = !{!2132, !2133, !2134, !2135, !2136}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2130, file: !204, line: 651, baseType: !314, size: 96)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2130, file: !204, line: 652, baseType: !140, size: 8, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2130, file: !204, line: 652, baseType: !140, size: 8, offset: 104)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2130, file: !204, line: 652, baseType: !140, size: 8, offset: 112)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2130, file: !204, line: 652, baseType: !140, size: 8, offset: 120)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !559, file: !204, line: 1275, baseType: !2138, size: 1472, offset: 35328)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !204, line: 676, size: 1472, elements: !2139)
!2139 = !{!2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2161, !2162, !2163, !2164, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2138, file: !204, line: 679, baseType: !2130, size: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2138, file: !204, line: 680, baseType: !99, size: 16, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2138, file: !204, line: 680, baseType: !99, size: 16, offset: 144)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2138, file: !204, line: 680, baseType: !99, size: 16, offset: 160)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2138, file: !204, line: 680, baseType: !99, size: 16, offset: 176)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2138, file: !204, line: 681, baseType: !99, size: 16, offset: 192)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2138, file: !204, line: 681, baseType: !99, size: 16, offset: 208)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2138, file: !204, line: 681, baseType: !99, size: 16, offset: 224)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2138, file: !204, line: 681, baseType: !99, size: 16, offset: 240)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2138, file: !204, line: 682, baseType: !99, size: 16, offset: 256)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2138, file: !204, line: 682, baseType: !1345, size: 48, offset: 272)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2138, file: !204, line: 685, baseType: !2152, size: 192, offset: 320)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !204, line: 633, size: 192, elements: !2153)
!2153 = !{!2154, !2155, !2156, !2157, !2158, !2159, !2160}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2152, file: !204, line: 634, baseType: !99, size: 16)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2152, file: !204, line: 634, baseType: !99, size: 16, offset: 16)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2152, file: !204, line: 635, baseType: !99, size: 16, offset: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2152, file: !204, line: 635, baseType: !99, size: 16, offset: 48)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2152, file: !204, line: 636, baseType: !71, size: 32, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2152, file: !204, line: 636, baseType: !71, size: 32, offset: 96)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2152, file: !204, line: 637, baseType: !2078, size: 64, offset: 128)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2138, file: !204, line: 686, baseType: !99, size: 16, offset: 512)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2138, file: !204, line: 686, baseType: !99, size: 16, offset: 528)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2138, file: !204, line: 687, baseType: !71, size: 32, offset: 544)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2138, file: !204, line: 688, baseType: !2165, size: 448, offset: 576)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !204, line: 674, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !204, line: 659, size: 448, elements: !2167)
!2167 = !{!2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2166, file: !204, line: 660, baseType: !71, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2166, file: !204, line: 661, baseType: !71, size: 32, offset: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2166, file: !204, line: 662, baseType: !71, size: 32, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2166, file: !204, line: 663, baseType: !71, size: 32, offset: 96)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2166, file: !204, line: 664, baseType: !71, size: 32, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2166, file: !204, line: 665, baseType: !71, size: 32, offset: 160)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2166, file: !204, line: 666, baseType: !71, size: 32, offset: 192)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2166, file: !204, line: 667, baseType: !71, size: 32, offset: 224)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2166, file: !204, line: 668, baseType: !71, size: 32, offset: 256)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2166, file: !204, line: 669, baseType: !71, size: 32, offset: 288)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2166, file: !204, line: 670, baseType: !35, size: 32, offset: 320)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2166, file: !204, line: 671, baseType: !71, size: 32, offset: 352)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2166, file: !204, line: 672, baseType: !71, size: 32, offset: 384)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2166, file: !204, line: 673, baseType: !99, size: 16, offset: 416)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2166, file: !204, line: 673, baseType: !99, size: 16, offset: 432)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2138, file: !204, line: 692, baseType: !71, size: 32, offset: 1024)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2138, file: !204, line: 697, baseType: !71, size: 32, offset: 1056)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2138, file: !204, line: 703, baseType: !35, size: 32, offset: 1088)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2138, file: !204, line: 704, baseType: !99, size: 16, offset: 1120)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2138, file: !204, line: 704, baseType: !99, size: 16, offset: 1136)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2138, file: !204, line: 705, baseType: !99, size: 16, offset: 1152)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2138, file: !204, line: 706, baseType: !99, size: 16, offset: 1168)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2138, file: !204, line: 707, baseType: !99, size: 16, offset: 1184)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2138, file: !204, line: 708, baseType: !99, size: 16, offset: 1200)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2138, file: !204, line: 709, baseType: !99, size: 16, offset: 1216)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2138, file: !204, line: 709, baseType: !99, size: 16, offset: 1232)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2138, file: !204, line: 709, baseType: !99, size: 16, offset: 1248)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2138, file: !204, line: 709, baseType: !99, size: 16, offset: 1264)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2138, file: !204, line: 710, baseType: !99, size: 16, offset: 1280)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2138, file: !204, line: 711, baseType: !99, size: 16, offset: 1296)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2138, file: !204, line: 712, baseType: !71, size: 32, offset: 1312)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2138, file: !204, line: 713, baseType: !71, size: 32, offset: 1344)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2138, file: !204, line: 713, baseType: !71, size: 32, offset: 1376)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2138, file: !204, line: 713, baseType: !71, size: 32, offset: 1408)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2138, file: !204, line: 713, baseType: !71, size: 32, offset: 1440)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !559, file: !204, line: 1278, baseType: !2204, size: 64, offset: 36800)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !204, line: 1197, size: 64, elements: !2205)
!2205 = !{!2206, !2207, !2208, !2209}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2204, file: !204, line: 1199, baseType: !71, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2204, file: !204, line: 1200, baseType: !140, size: 8, offset: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2204, file: !204, line: 1201, baseType: !140, size: 8, offset: 40)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2204, file: !204, line: 1202, baseType: !99, size: 16, offset: 48)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !559, file: !204, line: 1281, baseType: !202, size: 64, offset: 36864)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !559, file: !204, line: 1284, baseType: !2212, size: 192, offset: 36928)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !204, line: 1208, size: 192, elements: !2213)
!2213 = !{!2214, !2215, !2216, !2217}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2212, file: !204, line: 1209, baseType: !314, size: 96)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2212, file: !204, line: 1210, baseType: !35, size: 32, offset: 96)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2212, file: !204, line: 1210, baseType: !35, size: 32, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2212, file: !204, line: 1210, baseType: !35, size: 32, offset: 160)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !559, file: !204, line: 1287, baseType: !116, size: 64, offset: 37120)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !559, file: !204, line: 1289, baseType: !2220, size: 64, offset: 37184)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2221, line: 27, baseType: !2222)
!2221 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2222 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2223, line: 45, baseType: !2224)
!2223 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2224 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !559, file: !204, line: 1290, baseType: !2220, size: 64, offset: 37248)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !559, file: !204, line: 1293, baseType: !1885, size: 1280, offset: 37312)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !559, file: !204, line: 1294, baseType: !1897, size: 512, offset: 38592)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !559, file: !204, line: 1295, baseType: !425, size: 512, offset: 39104)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !559, file: !204, line: 1298, baseType: !2230, size: 64, offset: 39616)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !204, line: 1298, flags: DIFlagFwdDecl)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !555, file: !197, line: 53, baseType: !35, size: 32, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !555, file: !197, line: 54, baseType: !35, size: 32, offset: 96)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !555, file: !197, line: 55, baseType: !35, size: 32, offset: 128)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !555, file: !197, line: 55, baseType: !35, size: 32, offset: 160)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !555, file: !197, line: 56, baseType: !140, size: 8, offset: 192)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !555, file: !197, line: 56, baseType: !140, size: 8, offset: 200)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !555, file: !197, line: 57, baseType: !140, size: 8, offset: 208)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !555, file: !197, line: 57, baseType: !140, size: 8, offset: 216)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !555, file: !197, line: 59, baseType: !99, size: 16, offset: 224)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !555, file: !197, line: 59, baseType: !99, size: 16, offset: 240)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !555, file: !197, line: 59, baseType: !99, size: 16, offset: 256)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !555, file: !197, line: 61, baseType: !99, size: 16, offset: 272)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !555, file: !197, line: 63, baseType: !35, size: 32, offset: 288)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "cumap", scope: !546, file: !77, line: 720, baseType: !1352, size: 64, offset: 704)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !546, file: !77, line: 722, baseType: !2247, size: 42112, offset: 768)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scopes", file: !426, line: 138, size: 42112, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2262, !2281, !2282, !2283, !2284, !2285, !2286}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2247, file: !426, line: 139, baseType: !35, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "sample_full", scope: !2247, file: !426, line: 140, baseType: !35, size: 32, offset: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "sample_lines", scope: !2247, file: !426, line: 141, baseType: !35, size: 32, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !2247, file: !426, line: 142, baseType: !71, size: 32, offset: 96)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_mode", scope: !2247, file: !426, line: 143, baseType: !35, size: 32, offset: 128)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_alpha", scope: !2247, file: !426, line: 144, baseType: !71, size: 32, offset: 160)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_yfac", scope: !2247, file: !426, line: 145, baseType: !71, size: 32, offset: 192)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_height", scope: !2247, file: !426, line: 146, baseType: !35, size: 32, offset: 224)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_alpha", scope: !2247, file: !426, line: 147, baseType: !71, size: 32, offset: 256)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_height", scope: !2247, file: !426, line: 148, baseType: !35, size: 32, offset: 288)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "minmax", scope: !2247, file: !426, line: 149, baseType: !2260, size: 192, offset: 320)
!2260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 192, elements: !2261)
!2261 = !{!316, !191}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !2247, file: !426, line: 150, baseType: !2263, size: 41280, offset: 512)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Histogram", file: !426, line: 118, size: 41280, elements: !2264)
!2264 = !{!2265, !2266, !2267, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2263, file: !426, line: 119, baseType: !35, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !2263, file: !426, line: 120, baseType: !35, size: 32, offset: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "data_luma", scope: !2263, file: !426, line: 121, baseType: !2268, size: 8192, offset: 64)
!2268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 8192, elements: !453)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !2263, file: !426, line: 122, baseType: !2268, size: 8192, offset: 8256)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !2263, file: !426, line: 123, baseType: !2268, size: 8192, offset: 16448)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !2263, file: !426, line: 124, baseType: !2268, size: 8192, offset: 24640)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "data_a", scope: !2263, file: !426, line: 125, baseType: !2268, size: 8192, offset: 32832)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2263, file: !426, line: 126, baseType: !71, size: 32, offset: 41024)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2263, file: !426, line: 126, baseType: !71, size: 32, offset: 41056)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2263, file: !426, line: 127, baseType: !99, size: 16, offset: 41088)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2263, file: !426, line: 128, baseType: !99, size: 16, offset: 41104)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2263, file: !426, line: 129, baseType: !35, size: 32, offset: 41120)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2263, file: !426, line: 133, baseType: !2279, size: 128, offset: 41152)
!2279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 128, elements: !2280)
!2280 = !{!191, !191}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_1", scope: !2247, file: !426, line: 151, baseType: !639, size: 64, offset: 41792)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_2", scope: !2247, file: !426, line: 152, baseType: !639, size: 64, offset: 41856)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_3", scope: !2247, file: !426, line: 153, baseType: !639, size: 64, offset: 41920)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope", scope: !2247, file: !426, line: 154, baseType: !639, size: 64, offset: 41984)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_tot", scope: !2247, file: !426, line: 155, baseType: !35, size: 32, offset: 42048)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2247, file: !426, line: 156, baseType: !35, size: 32, offset: 42080)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "sample_line_hist", scope: !546, file: !77, line: 723, baseType: !2263, size: 41280, offset: 42880)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !546, file: !77, line: 725, baseType: !202, size: 64, offset: 84160)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !546, file: !77, line: 727, baseType: !250, size: 64, offset: 84224)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !546, file: !77, line: 728, baseType: !71, size: 32, offset: 84288)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !546, file: !77, line: 728, baseType: !71, size: 32, offset: 84320)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !546, file: !77, line: 729, baseType: !71, size: 32, offset: 84352)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "centx", scope: !546, file: !77, line: 730, baseType: !71, size: 32, offset: 84384)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "centy", scope: !546, file: !77, line: 730, baseType: !71, size: 32, offset: 84416)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !546, file: !77, line: 732, baseType: !140, size: 8, offset: 84448)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !546, file: !77, line: 733, baseType: !140, size: 8, offset: 84456)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !546, file: !77, line: 734, baseType: !99, size: 16, offset: 84464)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "curtile", scope: !546, file: !77, line: 735, baseType: !99, size: 16, offset: 84480)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !546, file: !77, line: 736, baseType: !99, size: 16, offset: 84496)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uv", scope: !546, file: !77, line: 737, baseType: !140, size: 8, offset: 84512)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "sticky", scope: !546, file: !77, line: 738, baseType: !140, size: 8, offset: 84520)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uvstretch", scope: !546, file: !77, line: 739, baseType: !140, size: 8, offset: 84528)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !546, file: !77, line: 740, baseType: !140, size: 8, offset: 84536)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !546, file: !77, line: 742, baseType: !521, size: 128, offset: 84544)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieClip", file: !110, line: 101, baseType: !117)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTracking", file: !207, line: 356, baseType: !206)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 64)
!2310 = !{!0}
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 64, size: 192, elements: !2312)
!2312 = !{!2313, !2314}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "splines", scope: !2311, file: !3, line: 65, baseType: !89, size: 128)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "id_hash", scope: !2311, file: !3, line: 66, baseType: !2315, size: 64, offset: 128)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!2316 = !{i32 7, !"Dwarf Version", i32 4}
!2317 = !{i32 2, !"Debug Info Version", i32 3}
!2318 = !{i32 1, !"wchar_size", i32 4}
!2319 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2320 = distinct !DISubprogram(name: "BKE_mask_spline_point_next_bezt", scope: !3, file: !3, line: 99, type: !2321, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{!2323, !2343, !2355, !2355}
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !45, line: 117, size: 576, elements: !2325)
!2325 = !{!2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2324, file: !45, line: 118, baseType: !1307, size: 288)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !2324, file: !45, line: 119, baseType: !71, size: 32, offset: 288)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2324, file: !45, line: 119, baseType: !71, size: 32, offset: 320)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2324, file: !45, line: 119, baseType: !71, size: 32, offset: 352)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2324, file: !45, line: 121, baseType: !140, size: 8, offset: 384)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !2324, file: !45, line: 123, baseType: !140, size: 8, offset: 392)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !2324, file: !45, line: 123, baseType: !140, size: 8, offset: 400)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !2324, file: !45, line: 124, baseType: !140, size: 8, offset: 408)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !2324, file: !45, line: 124, baseType: !140, size: 8, offset: 416)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !2324, file: !45, line: 124, baseType: !140, size: 8, offset: 424)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !2324, file: !45, line: 126, baseType: !140, size: 8, offset: 432)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !2324, file: !45, line: 128, baseType: !140, size: 8, offset: 440)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2324, file: !45, line: 129, baseType: !71, size: 32, offset: 448)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !2324, file: !45, line: 130, baseType: !71, size: 32, offset: 480)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2324, file: !45, line: 130, baseType: !71, size: 32, offset: 512)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2324, file: !45, line: 132, baseType: !2342, size: 32, offset: 544)
!2342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 32, elements: !421)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpline", file: !6, line: 100, baseType: !2345)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpline", file: !6, line: 88, size: 1792, elements: !2346)
!2346 = !{!2347, !2349, !2350, !2351, !2352, !2353, !2354, !2382, !2383}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2345, file: !6, line: 89, baseType: !2348, size: 64)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2345, file: !6, line: 89, baseType: !2348, size: 64, offset: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2345, file: !6, line: 91, baseType: !99, size: 16, offset: 128)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "offset_mode", scope: !2345, file: !6, line: 92, baseType: !140, size: 8, offset: 144)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "weight_interp", scope: !2345, file: !6, line: 93, baseType: !140, size: 8, offset: 152)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "tot_point", scope: !2345, file: !6, line: 95, baseType: !35, size: 32, offset: 160)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2345, file: !6, line: 96, baseType: !2355, size: 64, offset: 192)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSplinePoint", file: !6, line: 86, baseType: !2357)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSplinePoint", file: !6, line: 80, size: 2176, elements: !2358)
!2358 = !{!2359, !2361, !2362, !2363, !2371}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !2357, file: !6, line: 81, baseType: !2360, size: 576)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !45, line: 133, baseType: !2324)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2357, file: !6, line: 82, baseType: !35, size: 32, offset: 576)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "tot_uw", scope: !2357, file: !6, line: 83, baseType: !35, size: 32, offset: 608)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "uw", scope: !2357, file: !6, line: 84, baseType: !2364, size: 64, offset: 640)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSplinePointUW", file: !6, line: 78, baseType: !2366)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSplinePointUW", file: !6, line: 75, size: 96, elements: !2367)
!2367 = !{!2368, !2369, !2370}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2366, file: !6, line: 76, baseType: !71, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2366, file: !6, line: 76, baseType: !71, size: 32, offset: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2366, file: !6, line: 77, baseType: !35, size: 32, offset: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2357, file: !6, line: 85, baseType: !2372, size: 1472, offset: 704)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskParent", file: !6, line: 73, baseType: !2373)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskParent", file: !6, line: 59, size: 1472, elements: !2374)
!2374 = !{!2375, !2376, !2377, !2378, !2379, !2380, !2381}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "id_type", scope: !2373, file: !6, line: 61, baseType: !35, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2373, file: !6, line: 62, baseType: !35, size: 32, offset: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2373, file: !6, line: 63, baseType: !134, size: 64, offset: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2373, file: !6, line: 65, baseType: !168, size: 512, offset: 128)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "sub_parent", scope: !2373, file: !6, line: 67, baseType: !168, size: 512, offset: 640)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "parent_orig", scope: !2373, file: !6, line: 69, baseType: !250, size: 64, offset: 1152)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "parent_corners_orig", scope: !2373, file: !6, line: 72, baseType: !307, size: 256, offset: 1216)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2345, file: !6, line: 97, baseType: !2372, size: 1472, offset: 256)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "points_deform", scope: !2345, file: !6, line: 99, baseType: !2355, size: 64, offset: 1728)
!2384 = !{}
!2385 = !DILocalVariable(name: "spline", arg: 1, scope: !2320, file: !3, line: 99, type: !2343)
!2386 = !DILocation(line: 99, column: 56, scope: !2320)
!2387 = !DILocalVariable(name: "points_array", arg: 2, scope: !2320, file: !3, line: 99, type: !2355)
!2388 = !DILocation(line: 99, column: 81, scope: !2320)
!2389 = !DILocalVariable(name: "point", arg: 3, scope: !2320, file: !3, line: 99, type: !2355)
!2390 = !DILocation(line: 99, column: 112, scope: !2320)
!2391 = !DILocation(line: 101, column: 6, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !2320, file: !3, line: 101, column: 6)
!2393 = !DILocation(line: 101, column: 16, scope: !2392)
!2394 = !DILocation(line: 101, column: 29, scope: !2392)
!2395 = !DILocation(line: 101, column: 37, scope: !2392)
!2396 = !DILocation(line: 101, column: 47, scope: !2392)
!2397 = !DILocation(line: 101, column: 12, scope: !2392)
!2398 = !DILocation(line: 101, column: 6, scope: !2320)
!2399 = !DILocation(line: 102, column: 7, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2401, file: !3, line: 102, column: 7)
!2401 = distinct !DILexicalBlock(scope: !2392, file: !3, line: 101, column: 53)
!2402 = !DILocation(line: 102, column: 15, scope: !2400)
!2403 = !DILocation(line: 102, column: 20, scope: !2400)
!2404 = !DILocation(line: 102, column: 7, scope: !2401)
!2405 = !DILocation(line: 103, column: 13, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2400, file: !3, line: 102, column: 42)
!2407 = !DILocation(line: 103, column: 29, scope: !2406)
!2408 = !DILocation(line: 103, column: 4, scope: !2406)
!2409 = !DILocation(line: 106, column: 4, scope: !2410)
!2410 = distinct !DILexicalBlock(scope: !2400, file: !3, line: 105, column: 8)
!2411 = !DILocation(line: 110, column: 13, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2392, file: !3, line: 109, column: 7)
!2413 = !DILocation(line: 110, column: 19, scope: !2412)
!2414 = !DILocation(line: 110, column: 26, scope: !2412)
!2415 = !DILocation(line: 110, column: 3, scope: !2412)
!2416 = !DILocation(line: 112, column: 1, scope: !2320)
!2417 = distinct !DISubprogram(name: "BKE_mask_spline_point_array", scope: !3, file: !3, line: 114, type: !2418, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{!2420, !2343}
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64)
!2421 = !DILocalVariable(name: "spline", arg: 1, scope: !2417, file: !3, line: 114, type: !2343)
!2422 = !DILocation(line: 114, column: 58, scope: !2417)
!2423 = !DILocation(line: 116, column: 9, scope: !2417)
!2424 = !DILocation(line: 116, column: 17, scope: !2417)
!2425 = !DILocation(line: 116, column: 33, scope: !2417)
!2426 = !DILocation(line: 116, column: 41, scope: !2417)
!2427 = !DILocation(line: 116, column: 57, scope: !2417)
!2428 = !DILocation(line: 116, column: 65, scope: !2417)
!2429 = !DILocation(line: 116, column: 2, scope: !2417)
!2430 = distinct !DISubprogram(name: "BKE_mask_spline_point_array_from_point", scope: !3, file: !3, line: 119, type: !2431, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2431 = !DISubroutineType(types: !2432)
!2432 = !{!2420, !2343, !2355}
!2433 = !DILocalVariable(name: "spline", arg: 1, scope: !2430, file: !3, line: 119, type: !2343)
!2434 = !DILocation(line: 119, column: 69, scope: !2430)
!2435 = !DILocalVariable(name: "point_ref", arg: 2, scope: !2430, file: !3, line: 119, type: !2355)
!2436 = !DILocation(line: 119, column: 94, scope: !2430)
!2437 = !DILocation(line: 121, column: 7, scope: !2438)
!2438 = distinct !DILexicalBlock(scope: !2430, file: !3, line: 121, column: 6)
!2439 = !DILocation(line: 121, column: 20, scope: !2438)
!2440 = !DILocation(line: 121, column: 28, scope: !2438)
!2441 = !DILocation(line: 121, column: 17, scope: !2438)
!2442 = !DILocation(line: 121, column: 36, scope: !2438)
!2443 = !DILocation(line: 121, column: 40, scope: !2438)
!2444 = !DILocation(line: 121, column: 53, scope: !2438)
!2445 = !DILocation(line: 121, column: 61, scope: !2438)
!2446 = !DILocation(line: 121, column: 68, scope: !2438)
!2447 = !DILocation(line: 121, column: 76, scope: !2438)
!2448 = !DILocation(line: 121, column: 50, scope: !2438)
!2449 = !DILocation(line: 121, column: 6, scope: !2430)
!2450 = !DILocation(line: 122, column: 10, scope: !2451)
!2451 = distinct !DILexicalBlock(scope: !2438, file: !3, line: 121, column: 89)
!2452 = !DILocation(line: 122, column: 18, scope: !2451)
!2453 = !DILocation(line: 122, column: 3, scope: !2451)
!2454 = !DILocation(line: 125, column: 7, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !2430, file: !3, line: 125, column: 6)
!2456 = !DILocation(line: 125, column: 20, scope: !2455)
!2457 = !DILocation(line: 125, column: 28, scope: !2455)
!2458 = !DILocation(line: 125, column: 17, scope: !2455)
!2459 = !DILocation(line: 125, column: 43, scope: !2455)
!2460 = !DILocation(line: 125, column: 47, scope: !2455)
!2461 = !DILocation(line: 125, column: 60, scope: !2455)
!2462 = !DILocation(line: 125, column: 68, scope: !2455)
!2463 = !DILocation(line: 125, column: 82, scope: !2455)
!2464 = !DILocation(line: 125, column: 90, scope: !2455)
!2465 = !DILocation(line: 125, column: 57, scope: !2455)
!2466 = !DILocation(line: 125, column: 6, scope: !2430)
!2467 = !DILocation(line: 126, column: 10, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 125, column: 103)
!2469 = !DILocation(line: 126, column: 18, scope: !2468)
!2470 = !DILocation(line: 126, column: 3, scope: !2468)
!2471 = !DILocation(line: 130, column: 2, scope: !2430)
!2472 = !DILocation(line: 131, column: 1, scope: !2430)
!2473 = distinct !DISubprogram(name: "BKE_mask_layer_new", scope: !3, file: !3, line: 135, type: !2474, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!2476, !2493, !822}
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskLayer", file: !6, line: 122, size: 1152, elements: !2478)
!2478 = !{!2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2477, file: !6, line: 123, baseType: !2476, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2477, file: !6, line: 123, baseType: !2476, size: 64, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2477, file: !6, line: 125, baseType: !168, size: 512, offset: 128)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "splines", scope: !2477, file: !6, line: 127, baseType: !89, size: 128, offset: 640)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "splines_shapes", scope: !2477, file: !6, line: 128, baseType: !89, size: 128, offset: 768)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "act_spline", scope: !2477, file: !6, line: 130, baseType: !2348, size: 64, offset: 896)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "act_point", scope: !2477, file: !6, line: 131, baseType: !2420, size: 64, offset: 960)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2477, file: !6, line: 134, baseType: !71, size: 32, offset: 1024)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !2477, file: !6, line: 135, baseType: !140, size: 8, offset: 1056)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "blend_flag", scope: !2477, file: !6, line: 136, baseType: !140, size: 8, offset: 1064)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !2477, file: !6, line: 137, baseType: !140, size: 8, offset: 1072)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2477, file: !6, line: 138, baseType: !432, size: 56, offset: 1080)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2477, file: !6, line: 140, baseType: !140, size: 8, offset: 1136)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !2477, file: !6, line: 141, baseType: !140, size: 8, offset: 1144)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mask", file: !6, line: 57, baseType: !526)
!2495 = !DILocalVariable(name: "mask", arg: 1, scope: !2473, file: !3, line: 135, type: !2493)
!2496 = !DILocation(line: 135, column: 37, scope: !2473)
!2497 = !DILocalVariable(name: "name", arg: 2, scope: !2473, file: !3, line: 135, type: !822)
!2498 = !DILocation(line: 135, column: 55, scope: !2473)
!2499 = !DILocalVariable(name: "masklay", scope: !2473, file: !3, line: 137, type: !2500)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskLayer", file: !6, line: 142, baseType: !2477)
!2502 = !DILocation(line: 137, column: 13, scope: !2473)
!2503 = !DILocation(line: 137, column: 23, scope: !2473)
!2504 = !DILocation(line: 139, column: 6, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 139, column: 6)
!2506 = !DILocation(line: 139, column: 11, scope: !2505)
!2507 = !DILocation(line: 139, column: 14, scope: !2505)
!2508 = !DILocation(line: 139, column: 6, scope: !2473)
!2509 = !DILocation(line: 140, column: 15, scope: !2505)
!2510 = !DILocation(line: 140, column: 24, scope: !2505)
!2511 = !DILocation(line: 140, column: 30, scope: !2505)
!2512 = !DILocation(line: 140, column: 3, scope: !2505)
!2513 = !DILocation(line: 142, column: 10, scope: !2505)
!2514 = !DILocation(line: 142, column: 19, scope: !2505)
!2515 = !DILocation(line: 142, column: 3, scope: !2505)
!2516 = !DILocation(line: 144, column: 15, scope: !2473)
!2517 = !DILocation(line: 144, column: 21, scope: !2473)
!2518 = !DILocation(line: 144, column: 33, scope: !2473)
!2519 = !DILocation(line: 144, column: 2, scope: !2473)
!2520 = !DILocation(line: 146, column: 29, scope: !2473)
!2521 = !DILocation(line: 146, column: 35, scope: !2473)
!2522 = !DILocation(line: 146, column: 2, scope: !2473)
!2523 = !DILocation(line: 148, column: 2, scope: !2473)
!2524 = !DILocation(line: 148, column: 8, scope: !2473)
!2525 = !DILocation(line: 148, column: 19, scope: !2473)
!2526 = !DILocation(line: 150, column: 2, scope: !2473)
!2527 = !DILocation(line: 150, column: 11, scope: !2473)
!2528 = !DILocation(line: 150, column: 17, scope: !2473)
!2529 = !DILocation(line: 151, column: 2, scope: !2473)
!2530 = !DILocation(line: 151, column: 11, scope: !2473)
!2531 = !DILocation(line: 151, column: 17, scope: !2473)
!2532 = !DILocation(line: 152, column: 2, scope: !2473)
!2533 = !DILocation(line: 152, column: 11, scope: !2473)
!2534 = !DILocation(line: 152, column: 16, scope: !2473)
!2535 = !DILocation(line: 154, column: 9, scope: !2473)
!2536 = !DILocation(line: 154, column: 2, scope: !2473)
!2537 = distinct !DISubprogram(name: "BKE_mask_layer_unique_name", scope: !3, file: !3, line: 179, type: !2538, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2538 = !DISubroutineType(types: !2539)
!2539 = !{null, !2493, !2500}
!2540 = !DILocalVariable(name: "mask", arg: 1, scope: !2537, file: !3, line: 179, type: !2493)
!2541 = !DILocation(line: 179, column: 39, scope: !2537)
!2542 = !DILocalVariable(name: "masklay", arg: 2, scope: !2537, file: !3, line: 179, type: !2500)
!2543 = !DILocation(line: 179, column: 56, scope: !2537)
!2544 = !DILocation(line: 181, column: 18, scope: !2537)
!2545 = !DILocation(line: 181, column: 24, scope: !2537)
!2546 = !DILocation(line: 181, column: 36, scope: !2537)
!2547 = !DILocation(line: 181, column: 2, scope: !2537)
!2548 = !DILocation(line: 183, column: 1, scope: !2537)
!2549 = distinct !DISubprogram(name: "BKE_mask_layer_active", scope: !3, file: !3, line: 158, type: !2550, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!2476, !2493}
!2552 = !DILocalVariable(name: "mask", arg: 1, scope: !2549, file: !3, line: 158, type: !2493)
!2553 = !DILocation(line: 158, column: 40, scope: !2549)
!2554 = !DILocation(line: 160, column: 23, scope: !2549)
!2555 = !DILocation(line: 160, column: 29, scope: !2549)
!2556 = !DILocation(line: 160, column: 41, scope: !2549)
!2557 = !DILocation(line: 160, column: 47, scope: !2549)
!2558 = !DILocation(line: 160, column: 9, scope: !2549)
!2559 = !DILocation(line: 160, column: 2, scope: !2549)
!2560 = distinct !DISubprogram(name: "BKE_mask_layer_active_set", scope: !3, file: !3, line: 163, type: !2538, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2561 = !DILocalVariable(name: "mask", arg: 1, scope: !2560, file: !3, line: 163, type: !2493)
!2562 = !DILocation(line: 163, column: 38, scope: !2560)
!2563 = !DILocalVariable(name: "masklay", arg: 2, scope: !2560, file: !3, line: 163, type: !2500)
!2564 = !DILocation(line: 163, column: 55, scope: !2560)
!2565 = !DILocation(line: 165, column: 37, scope: !2560)
!2566 = !DILocation(line: 165, column: 43, scope: !2560)
!2567 = !DILocation(line: 165, column: 55, scope: !2560)
!2568 = !DILocation(line: 165, column: 22, scope: !2560)
!2569 = !DILocation(line: 165, column: 2, scope: !2560)
!2570 = !DILocation(line: 165, column: 8, scope: !2560)
!2571 = !DILocation(line: 165, column: 20, scope: !2560)
!2572 = !DILocation(line: 166, column: 1, scope: !2560)
!2573 = distinct !DISubprogram(name: "BKE_mask_layer_remove", scope: !3, file: !3, line: 168, type: !2538, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2574 = !DILocalVariable(name: "mask", arg: 1, scope: !2573, file: !3, line: 168, type: !2493)
!2575 = !DILocation(line: 168, column: 34, scope: !2573)
!2576 = !DILocalVariable(name: "masklay", arg: 2, scope: !2573, file: !3, line: 168, type: !2500)
!2577 = !DILocation(line: 168, column: 51, scope: !2573)
!2578 = !DILocation(line: 170, column: 15, scope: !2573)
!2579 = !DILocation(line: 170, column: 21, scope: !2573)
!2580 = !DILocation(line: 170, column: 33, scope: !2573)
!2581 = !DILocation(line: 170, column: 2, scope: !2573)
!2582 = !DILocation(line: 171, column: 22, scope: !2573)
!2583 = !DILocation(line: 171, column: 2, scope: !2573)
!2584 = !DILocation(line: 173, column: 2, scope: !2573)
!2585 = !DILocation(line: 173, column: 8, scope: !2573)
!2586 = !DILocation(line: 173, column: 19, scope: !2573)
!2587 = !DILocation(line: 175, column: 6, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2573, file: !3, line: 175, column: 6)
!2589 = !DILocation(line: 175, column: 12, scope: !2588)
!2590 = !DILocation(line: 175, column: 27, scope: !2588)
!2591 = !DILocation(line: 175, column: 33, scope: !2588)
!2592 = !DILocation(line: 175, column: 24, scope: !2588)
!2593 = !DILocation(line: 175, column: 6, scope: !2573)
!2594 = !DILocation(line: 176, column: 23, scope: !2588)
!2595 = !DILocation(line: 176, column: 29, scope: !2588)
!2596 = !DILocation(line: 176, column: 41, scope: !2588)
!2597 = !DILocation(line: 176, column: 3, scope: !2588)
!2598 = !DILocation(line: 176, column: 9, scope: !2588)
!2599 = !DILocation(line: 176, column: 21, scope: !2588)
!2600 = !DILocation(line: 177, column: 1, scope: !2573)
!2601 = distinct !DISubprogram(name: "BKE_mask_layer_free", scope: !3, file: !3, line: 980, type: !2602, scopeLine: 981, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2602 = !DISubroutineType(types: !2603)
!2603 = !{null, !2500}
!2604 = !DILocalVariable(name: "masklay", arg: 1, scope: !2601, file: !3, line: 980, type: !2500)
!2605 = !DILocation(line: 980, column: 37, scope: !2601)
!2606 = !DILocation(line: 983, column: 29, scope: !2601)
!2607 = !DILocation(line: 983, column: 38, scope: !2601)
!2608 = !DILocation(line: 983, column: 2, scope: !2601)
!2609 = !DILocation(line: 986, column: 29, scope: !2601)
!2610 = !DILocation(line: 986, column: 2, scope: !2601)
!2611 = !DILocation(line: 988, column: 2, scope: !2601)
!2612 = !DILocation(line: 988, column: 12, scope: !2601)
!2613 = !DILocation(line: 989, column: 1, scope: !2601)
!2614 = distinct !DISubprogram(name: "BKE_mask_layer_copy", scope: !3, file: !3, line: 185, type: !2615, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2615 = !DISubroutineType(types: !2616)
!2616 = !{!2476, !2500}
!2617 = !DILocalVariable(name: "masklay", arg: 1, scope: !2614, file: !3, line: 185, type: !2500)
!2618 = !DILocation(line: 185, column: 43, scope: !2614)
!2619 = !DILocalVariable(name: "masklay_new", scope: !2614, file: !3, line: 187, type: !2500)
!2620 = !DILocation(line: 187, column: 13, scope: !2614)
!2621 = !DILocalVariable(name: "spline", scope: !2614, file: !3, line: 188, type: !2343)
!2622 = !DILocation(line: 188, column: 14, scope: !2614)
!2623 = !DILocation(line: 190, column: 16, scope: !2614)
!2624 = !DILocation(line: 190, column: 14, scope: !2614)
!2625 = !DILocation(line: 192, column: 14, scope: !2614)
!2626 = !DILocation(line: 192, column: 27, scope: !2614)
!2627 = !DILocation(line: 192, column: 33, scope: !2614)
!2628 = !DILocation(line: 192, column: 42, scope: !2614)
!2629 = !DILocation(line: 192, column: 2, scope: !2614)
!2630 = !DILocation(line: 194, column: 23, scope: !2614)
!2631 = !DILocation(line: 194, column: 32, scope: !2614)
!2632 = !DILocation(line: 194, column: 2, scope: !2614)
!2633 = !DILocation(line: 194, column: 15, scope: !2614)
!2634 = !DILocation(line: 194, column: 21, scope: !2614)
!2635 = !DILocation(line: 195, column: 23, scope: !2614)
!2636 = !DILocation(line: 195, column: 32, scope: !2614)
!2637 = !DILocation(line: 195, column: 2, scope: !2614)
!2638 = !DILocation(line: 195, column: 15, scope: !2614)
!2639 = !DILocation(line: 195, column: 21, scope: !2614)
!2640 = !DILocation(line: 196, column: 28, scope: !2614)
!2641 = !DILocation(line: 196, column: 37, scope: !2614)
!2642 = !DILocation(line: 196, column: 2, scope: !2614)
!2643 = !DILocation(line: 196, column: 15, scope: !2614)
!2644 = !DILocation(line: 196, column: 26, scope: !2614)
!2645 = !DILocation(line: 197, column: 22, scope: !2614)
!2646 = !DILocation(line: 197, column: 31, scope: !2614)
!2647 = !DILocation(line: 197, column: 2, scope: !2614)
!2648 = !DILocation(line: 197, column: 15, scope: !2614)
!2649 = !DILocation(line: 197, column: 20, scope: !2614)
!2650 = !DILocation(line: 198, column: 30, scope: !2614)
!2651 = !DILocation(line: 198, column: 39, scope: !2614)
!2652 = !DILocation(line: 198, column: 2, scope: !2614)
!2653 = !DILocation(line: 198, column: 15, scope: !2614)
!2654 = !DILocation(line: 198, column: 28, scope: !2614)
!2655 = !DILocation(line: 200, column: 16, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2614, file: !3, line: 200, column: 2)
!2657 = !DILocation(line: 200, column: 25, scope: !2656)
!2658 = !DILocation(line: 200, column: 33, scope: !2656)
!2659 = !DILocation(line: 200, column: 14, scope: !2656)
!2660 = !DILocation(line: 200, column: 7, scope: !2656)
!2661 = !DILocation(line: 200, column: 40, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2656, file: !3, line: 200, column: 2)
!2663 = !DILocation(line: 200, column: 2, scope: !2656)
!2664 = !DILocalVariable(name: "spline_new", scope: !2665, file: !3, line: 201, type: !2343)
!2665 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 200, column: 71)
!2666 = !DILocation(line: 201, column: 15, scope: !2665)
!2667 = !DILocation(line: 201, column: 49, scope: !2665)
!2668 = !DILocation(line: 201, column: 28, scope: !2665)
!2669 = !DILocation(line: 203, column: 16, scope: !2665)
!2670 = !DILocation(line: 203, column: 29, scope: !2665)
!2671 = !DILocation(line: 203, column: 38, scope: !2665)
!2672 = !DILocation(line: 203, column: 3, scope: !2665)
!2673 = !DILocation(line: 204, column: 2, scope: !2665)
!2674 = !DILocation(line: 200, column: 57, scope: !2662)
!2675 = !DILocation(line: 200, column: 65, scope: !2662)
!2676 = !DILocation(line: 200, column: 55, scope: !2662)
!2677 = !DILocation(line: 200, column: 2, scope: !2662)
!2678 = distinct !{!2678, !2663, !2679}
!2679 = !DILocation(line: 204, column: 2, scope: !2656)
!2680 = !DILocation(line: 207, column: 6, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2614, file: !3, line: 207, column: 6)
!2682 = !DILocation(line: 207, column: 15, scope: !2681)
!2683 = !DILocation(line: 207, column: 30, scope: !2681)
!2684 = !DILocation(line: 207, column: 6, scope: !2614)
!2685 = !DILocalVariable(name: "masklay_shape", scope: !2686, file: !3, line: 208, type: !2687)
!2686 = distinct !DILexicalBlock(scope: !2681, file: !3, line: 207, column: 37)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskLayerShape", file: !6, line: 111, baseType: !2689)
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskLayerShape", file: !6, line: 103, size: 320, elements: !2690)
!2690 = !{!2691, !2693, !2694, !2695, !2696, !2697, !2698}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2689, file: !6, line: 104, baseType: !2692, size: 64)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2689, file: !6, line: 104, baseType: !2692, size: 64, offset: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2689, file: !6, line: 106, baseType: !639, size: 64, offset: 128)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "tot_vert", scope: !2689, file: !6, line: 107, baseType: !35, size: 32, offset: 192)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !2689, file: !6, line: 108, baseType: !35, size: 32, offset: 224)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2689, file: !6, line: 109, baseType: !140, size: 8, offset: 256)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2689, file: !6, line: 110, baseType: !432, size: 56, offset: 264)
!2699 = !DILocation(line: 208, column: 19, scope: !2686)
!2700 = !DILocalVariable(name: "masklay_shape_new", scope: !2686, file: !3, line: 209, type: !2687)
!2701 = !DILocation(line: 209, column: 19, scope: !2686)
!2702 = !DILocation(line: 211, column: 24, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 211, column: 3)
!2704 = !DILocation(line: 211, column: 33, scope: !2703)
!2705 = !DILocation(line: 211, column: 48, scope: !2703)
!2706 = !DILocation(line: 211, column: 22, scope: !2703)
!2707 = !DILocation(line: 211, column: 8, scope: !2703)
!2708 = !DILocation(line: 212, column: 8, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 211, column: 3)
!2710 = !DILocation(line: 211, column: 3, scope: !2703)
!2711 = !DILocation(line: 215, column: 24, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 214, column: 3)
!2713 = !DILocation(line: 215, column: 22, scope: !2712)
!2714 = !DILocation(line: 217, column: 30, scope: !2712)
!2715 = !DILocation(line: 217, column: 44, scope: !2712)
!2716 = !DILocation(line: 217, column: 59, scope: !2712)
!2717 = !DILocation(line: 217, column: 4, scope: !2712)
!2718 = !DILocation(line: 217, column: 23, scope: !2712)
!2719 = !DILocation(line: 217, column: 28, scope: !2712)
!2720 = !DILocation(line: 218, column: 34, scope: !2712)
!2721 = !DILocation(line: 218, column: 49, scope: !2712)
!2722 = !DILocation(line: 218, column: 4, scope: !2712)
!2723 = !DILocation(line: 218, column: 23, scope: !2712)
!2724 = !DILocation(line: 218, column: 32, scope: !2712)
!2725 = !DILocation(line: 219, column: 30, scope: !2712)
!2726 = !DILocation(line: 219, column: 45, scope: !2712)
!2727 = !DILocation(line: 219, column: 4, scope: !2712)
!2728 = !DILocation(line: 219, column: 23, scope: !2712)
!2729 = !DILocation(line: 219, column: 28, scope: !2712)
!2730 = !DILocation(line: 220, column: 31, scope: !2712)
!2731 = !DILocation(line: 220, column: 46, scope: !2712)
!2732 = !DILocation(line: 220, column: 4, scope: !2712)
!2733 = !DILocation(line: 220, column: 23, scope: !2712)
!2734 = !DILocation(line: 220, column: 29, scope: !2712)
!2735 = !DILocation(line: 222, column: 17, scope: !2712)
!2736 = !DILocation(line: 222, column: 30, scope: !2712)
!2737 = !DILocation(line: 222, column: 46, scope: !2712)
!2738 = !DILocation(line: 222, column: 4, scope: !2712)
!2739 = !DILocation(line: 223, column: 3, scope: !2712)
!2740 = !DILocation(line: 213, column: 24, scope: !2709)
!2741 = !DILocation(line: 213, column: 39, scope: !2709)
!2742 = !DILocation(line: 213, column: 22, scope: !2709)
!2743 = !DILocation(line: 211, column: 3, scope: !2709)
!2744 = distinct !{!2744, !2710, !2745}
!2745 = !DILocation(line: 223, column: 3, scope: !2703)
!2746 = !DILocation(line: 224, column: 2, scope: !2686)
!2747 = !DILocation(line: 226, column: 9, scope: !2614)
!2748 = !DILocation(line: 226, column: 2, scope: !2614)
!2749 = distinct !DISubprogram(name: "BKE_mask_spline_copy", scope: !3, file: !3, line: 923, type: !2750, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2750 = !DISubroutineType(types: !2751)
!2751 = !{!2348, !2343}
!2752 = !DILocalVariable(name: "spline", arg: 1, scope: !2749, file: !3, line: 923, type: !2343)
!2753 = !DILocation(line: 923, column: 46, scope: !2749)
!2754 = !DILocalVariable(name: "nspline", scope: !2749, file: !3, line: 925, type: !2343)
!2755 = !DILocation(line: 925, column: 14, scope: !2749)
!2756 = !DILocation(line: 925, column: 24, scope: !2749)
!2757 = !DILocation(line: 927, column: 3, scope: !2749)
!2758 = !DILocation(line: 927, column: 14, scope: !2749)
!2759 = !DILocation(line: 927, column: 13, scope: !2749)
!2760 = !DILocation(line: 929, column: 2, scope: !2749)
!2761 = !DILocation(line: 929, column: 11, scope: !2749)
!2762 = !DILocation(line: 929, column: 25, scope: !2749)
!2763 = !DILocation(line: 930, column: 44, scope: !2749)
!2764 = !DILocation(line: 930, column: 52, scope: !2749)
!2765 = !DILocation(line: 930, column: 60, scope: !2749)
!2766 = !DILocation(line: 930, column: 68, scope: !2749)
!2767 = !DILocation(line: 930, column: 20, scope: !2749)
!2768 = !DILocation(line: 930, column: 2, scope: !2749)
!2769 = !DILocation(line: 930, column: 11, scope: !2749)
!2770 = !DILocation(line: 930, column: 18, scope: !2749)
!2771 = !DILocation(line: 932, column: 6, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 932, column: 6)
!2773 = !DILocation(line: 932, column: 14, scope: !2772)
!2774 = !DILocation(line: 932, column: 6, scope: !2749)
!2775 = !DILocation(line: 933, column: 52, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2772, file: !3, line: 932, column: 29)
!2777 = !DILocation(line: 933, column: 60, scope: !2776)
!2778 = !DILocation(line: 933, column: 75, scope: !2776)
!2779 = !DILocation(line: 933, column: 83, scope: !2776)
!2780 = !DILocation(line: 933, column: 28, scope: !2776)
!2781 = !DILocation(line: 933, column: 3, scope: !2776)
!2782 = !DILocation(line: 933, column: 12, scope: !2776)
!2783 = !DILocation(line: 933, column: 26, scope: !2776)
!2784 = !DILocation(line: 934, column: 2, scope: !2776)
!2785 = !DILocation(line: 936, column: 9, scope: !2749)
!2786 = !DILocation(line: 936, column: 2, scope: !2749)
!2787 = distinct !DISubprogram(name: "BKE_mask_layer_copy_list", scope: !3, file: !3, line: 229, type: !2788, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2788 = !DISubroutineType(types: !2789)
!2789 = !{null, !1519, !1519}
!2790 = !DILocalVariable(name: "masklayers_new", arg: 1, scope: !2787, file: !3, line: 229, type: !1519)
!2791 = !DILocation(line: 229, column: 41, scope: !2787)
!2792 = !DILocalVariable(name: "masklayers", arg: 2, scope: !2787, file: !3, line: 229, type: !1519)
!2793 = !DILocation(line: 229, column: 67, scope: !2787)
!2794 = !DILocalVariable(name: "layer", scope: !2787, file: !3, line: 231, type: !2500)
!2795 = !DILocation(line: 231, column: 13, scope: !2787)
!2796 = !DILocation(line: 233, column: 15, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 233, column: 2)
!2798 = !DILocation(line: 233, column: 27, scope: !2797)
!2799 = !DILocation(line: 233, column: 13, scope: !2797)
!2800 = !DILocation(line: 233, column: 7, scope: !2797)
!2801 = !DILocation(line: 233, column: 34, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 233, column: 2)
!2803 = !DILocation(line: 233, column: 2, scope: !2797)
!2804 = !DILocalVariable(name: "layer_new", scope: !2805, file: !3, line: 234, type: !2500)
!2805 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 233, column: 62)
!2806 = !DILocation(line: 234, column: 14, scope: !2805)
!2807 = !DILocation(line: 234, column: 46, scope: !2805)
!2808 = !DILocation(line: 234, column: 26, scope: !2805)
!2809 = !DILocation(line: 236, column: 15, scope: !2805)
!2810 = !DILocation(line: 236, column: 31, scope: !2805)
!2811 = !DILocation(line: 236, column: 3, scope: !2805)
!2812 = !DILocation(line: 237, column: 2, scope: !2805)
!2813 = !DILocation(line: 233, column: 49, scope: !2802)
!2814 = !DILocation(line: 233, column: 56, scope: !2802)
!2815 = !DILocation(line: 233, column: 47, scope: !2802)
!2816 = !DILocation(line: 233, column: 2, scope: !2802)
!2817 = distinct !{!2817, !2803, !2818}
!2818 = !DILocation(line: 237, column: 2, scope: !2797)
!2819 = !DILocation(line: 238, column: 1, scope: !2787)
!2820 = distinct !DISubprogram(name: "BKE_mask_spline_add", scope: !3, file: !3, line: 242, type: !2821, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!2348, !2500}
!2823 = !DILocalVariable(name: "masklay", arg: 1, scope: !2820, file: !3, line: 242, type: !2500)
!2824 = !DILocation(line: 242, column: 44, scope: !2820)
!2825 = !DILocalVariable(name: "spline", scope: !2820, file: !3, line: 244, type: !2343)
!2826 = !DILocation(line: 244, column: 14, scope: !2820)
!2827 = !DILocation(line: 246, column: 11, scope: !2820)
!2828 = !DILocation(line: 246, column: 9, scope: !2820)
!2829 = !DILocation(line: 247, column: 15, scope: !2820)
!2830 = !DILocation(line: 247, column: 24, scope: !2820)
!2831 = !DILocation(line: 247, column: 33, scope: !2820)
!2832 = !DILocation(line: 247, column: 2, scope: !2820)
!2833 = !DILocation(line: 250, column: 19, scope: !2820)
!2834 = !DILocation(line: 250, column: 2, scope: !2820)
!2835 = !DILocation(line: 250, column: 10, scope: !2820)
!2836 = !DILocation(line: 250, column: 17, scope: !2820)
!2837 = !DILocation(line: 251, column: 2, scope: !2820)
!2838 = !DILocation(line: 251, column: 10, scope: !2820)
!2839 = !DILocation(line: 251, column: 20, scope: !2820)
!2840 = !DILocation(line: 256, column: 2, scope: !2820)
!2841 = !DILocation(line: 256, column: 10, scope: !2820)
!2842 = !DILocation(line: 256, column: 24, scope: !2820)
!2843 = !DILocation(line: 258, column: 24, scope: !2820)
!2844 = !DILocation(line: 258, column: 32, scope: !2820)
!2845 = !DILocation(line: 258, column: 2, scope: !2820)
!2846 = !DILocation(line: 260, column: 9, scope: !2820)
!2847 = !DILocation(line: 260, column: 2, scope: !2820)
!2848 = distinct !DISubprogram(name: "BKE_mask_parent_init", scope: !3, file: !3, line: 1590, type: !2849, scopeLine: 1591, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{null, !2851}
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2852 = !DILocalVariable(name: "parent", arg: 1, scope: !2848, file: !3, line: 1590, type: !2851)
!2853 = !DILocation(line: 1590, column: 39, scope: !2848)
!2854 = !DILocation(line: 1592, column: 2, scope: !2848)
!2855 = !DILocation(line: 1592, column: 10, scope: !2848)
!2856 = !DILocation(line: 1592, column: 18, scope: !2848)
!2857 = !DILocation(line: 1593, column: 1, scope: !2848)
!2858 = distinct !DISubprogram(name: "BKE_mask_spline_remove", scope: !3, file: !3, line: 263, type: !2859, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{!1671, !2500, !2343}
!2861 = !DILocalVariable(name: "mask_layer", arg: 1, scope: !2858, file: !3, line: 263, type: !2500)
!2862 = !DILocation(line: 263, column: 40, scope: !2858)
!2863 = !DILocalVariable(name: "spline", arg: 2, scope: !2858, file: !3, line: 263, type: !2343)
!2864 = !DILocation(line: 263, column: 64, scope: !2858)
!2865 = !DILocation(line: 265, column: 24, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 265, column: 6)
!2867 = !DILocation(line: 265, column: 36, scope: !2866)
!2868 = !DILocation(line: 265, column: 45, scope: !2866)
!2869 = !DILocation(line: 265, column: 6, scope: !2866)
!2870 = !DILocation(line: 265, column: 53, scope: !2866)
!2871 = !DILocation(line: 265, column: 6, scope: !2858)
!2872 = !DILocation(line: 266, column: 3, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2866, file: !3, line: 265, column: 63)
!2874 = !DILocation(line: 269, column: 23, scope: !2858)
!2875 = !DILocation(line: 269, column: 2, scope: !2858)
!2876 = !DILocation(line: 271, column: 2, scope: !2858)
!2877 = !DILocation(line: 272, column: 1, scope: !2858)
!2878 = distinct !DISubprogram(name: "BKE_mask_spline_free", scope: !3, file: !3, line: 869, type: !2879, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{null, !2343}
!2881 = !DILocalVariable(name: "spline", arg: 1, scope: !2878, file: !3, line: 869, type: !2343)
!2882 = !DILocation(line: 869, column: 39, scope: !2878)
!2883 = !DILocalVariable(name: "i", scope: !2878, file: !3, line: 871, type: !35)
!2884 = !DILocation(line: 871, column: 6, scope: !2878)
!2885 = !DILocation(line: 873, column: 9, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 873, column: 2)
!2887 = !DILocation(line: 873, column: 7, scope: !2886)
!2888 = !DILocation(line: 873, column: 14, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 873, column: 2)
!2890 = !DILocation(line: 873, column: 18, scope: !2889)
!2891 = !DILocation(line: 873, column: 26, scope: !2889)
!2892 = !DILocation(line: 873, column: 16, scope: !2889)
!2893 = !DILocation(line: 873, column: 2, scope: !2886)
!2894 = !DILocalVariable(name: "point", scope: !2895, file: !3, line: 874, type: !2355)
!2895 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 873, column: 42)
!2896 = !DILocation(line: 874, column: 20, scope: !2895)
!2897 = !DILocation(line: 875, column: 12, scope: !2895)
!2898 = !DILocation(line: 875, column: 20, scope: !2895)
!2899 = !DILocation(line: 875, column: 27, scope: !2895)
!2900 = !DILocation(line: 875, column: 9, scope: !2895)
!2901 = !DILocation(line: 876, column: 23, scope: !2895)
!2902 = !DILocation(line: 876, column: 3, scope: !2895)
!2903 = !DILocation(line: 878, column: 7, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 878, column: 7)
!2905 = !DILocation(line: 878, column: 15, scope: !2904)
!2906 = !DILocation(line: 878, column: 7, scope: !2895)
!2907 = !DILocation(line: 879, column: 13, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 878, column: 30)
!2909 = !DILocation(line: 879, column: 21, scope: !2908)
!2910 = !DILocation(line: 879, column: 35, scope: !2908)
!2911 = !DILocation(line: 879, column: 10, scope: !2908)
!2912 = !DILocation(line: 880, column: 24, scope: !2908)
!2913 = !DILocation(line: 880, column: 4, scope: !2908)
!2914 = !DILocation(line: 881, column: 3, scope: !2908)
!2915 = !DILocation(line: 882, column: 2, scope: !2895)
!2916 = !DILocation(line: 873, column: 38, scope: !2889)
!2917 = !DILocation(line: 873, column: 2, scope: !2889)
!2918 = distinct !{!2918, !2893, !2919}
!2919 = !DILocation(line: 882, column: 2, scope: !2886)
!2920 = !DILocation(line: 884, column: 2, scope: !2878)
!2921 = !DILocation(line: 884, column: 12, scope: !2878)
!2922 = !DILocation(line: 884, column: 20, scope: !2878)
!2923 = !DILocation(line: 886, column: 6, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 886, column: 6)
!2925 = !DILocation(line: 886, column: 14, scope: !2924)
!2926 = !DILocation(line: 886, column: 6, scope: !2878)
!2927 = !DILocation(line: 887, column: 3, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 886, column: 29)
!2929 = !DILocation(line: 887, column: 13, scope: !2928)
!2930 = !DILocation(line: 887, column: 21, scope: !2928)
!2931 = !DILocation(line: 888, column: 2, scope: !2928)
!2932 = !DILocation(line: 890, column: 2, scope: !2878)
!2933 = !DILocation(line: 890, column: 12, scope: !2878)
!2934 = !DILocation(line: 891, column: 1, scope: !2878)
!2935 = distinct !DISubprogram(name: "BKE_mask_point_direction_switch", scope: !3, file: !3, line: 274, type: !2936, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{null, !2355}
!2938 = !DILocalVariable(name: "point", arg: 1, scope: !2935, file: !3, line: 274, type: !2355)
!2939 = !DILocation(line: 274, column: 55, scope: !2935)
!2940 = !DILocalVariable(name: "tot_uw", scope: !2935, file: !3, line: 276, type: !2941)
!2941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !35)
!2942 = !DILocation(line: 276, column: 12, scope: !2935)
!2943 = !DILocation(line: 276, column: 21, scope: !2935)
!2944 = !DILocation(line: 276, column: 28, scope: !2935)
!2945 = !DILocalVariable(name: "tot_uw_half", scope: !2935, file: !3, line: 277, type: !2941)
!2946 = !DILocation(line: 277, column: 12, scope: !2935)
!2947 = !DILocation(line: 277, column: 26, scope: !2935)
!2948 = !DILocation(line: 277, column: 33, scope: !2935)
!2949 = !DILocalVariable(name: "i", scope: !2935, file: !3, line: 278, type: !35)
!2950 = !DILocation(line: 278, column: 6, scope: !2935)
!2951 = !DILocalVariable(name: "co_tmp", scope: !2935, file: !3, line: 280, type: !250)
!2952 = !DILocation(line: 280, column: 8, scope: !2935)
!2953 = !DILocation(line: 283, column: 13, scope: !2935)
!2954 = !DILocation(line: 283, column: 21, scope: !2935)
!2955 = !DILocation(line: 283, column: 28, scope: !2935)
!2956 = !DILocation(line: 283, column: 33, scope: !2935)
!2957 = !DILocation(line: 283, column: 2, scope: !2935)
!2958 = !DILocation(line: 284, column: 13, scope: !2935)
!2959 = !DILocation(line: 284, column: 20, scope: !2935)
!2960 = !DILocation(line: 284, column: 25, scope: !2935)
!2961 = !DILocation(line: 284, column: 33, scope: !2935)
!2962 = !DILocation(line: 284, column: 40, scope: !2935)
!2963 = !DILocation(line: 284, column: 45, scope: !2935)
!2964 = !DILocation(line: 284, column: 2, scope: !2935)
!2965 = !DILocation(line: 285, column: 13, scope: !2935)
!2966 = !DILocation(line: 285, column: 20, scope: !2935)
!2967 = !DILocation(line: 285, column: 25, scope: !2935)
!2968 = !DILocation(line: 285, column: 33, scope: !2935)
!2969 = !DILocation(line: 285, column: 2, scope: !2935)
!2970 = !DILocalVariable(name: "sw_ap", scope: !2971, file: !3, line: 287, type: !140)
!2971 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 287, column: 2)
!2972 = !DILocation(line: 287, column: 2, scope: !2971)
!2973 = !DILocalVariable(name: "sw_ap", scope: !2974, file: !3, line: 288, type: !140)
!2974 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 288, column: 2)
!2975 = !DILocation(line: 288, column: 2, scope: !2974)
!2976 = !DILocation(line: 292, column: 6, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 292, column: 6)
!2978 = !DILocation(line: 292, column: 13, scope: !2977)
!2979 = !DILocation(line: 292, column: 6, scope: !2935)
!2980 = !DILocation(line: 294, column: 10, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2982, file: !3, line: 294, column: 3)
!2982 = distinct !DILexicalBlock(scope: !2977, file: !3, line: 292, column: 18)
!2983 = !DILocation(line: 294, column: 8, scope: !2981)
!2984 = !DILocation(line: 294, column: 15, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2981, file: !3, line: 294, column: 3)
!2986 = !DILocation(line: 294, column: 19, scope: !2985)
!2987 = !DILocation(line: 294, column: 17, scope: !2985)
!2988 = !DILocation(line: 294, column: 3, scope: !2981)
!2989 = !DILocalVariable(name: "uw_a", scope: !2990, file: !3, line: 295, type: !2364)
!2990 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 294, column: 37)
!2991 = !DILocation(line: 295, column: 23, scope: !2990)
!2992 = !DILocation(line: 295, column: 31, scope: !2990)
!2993 = !DILocation(line: 295, column: 38, scope: !2990)
!2994 = !DILocation(line: 295, column: 41, scope: !2990)
!2995 = !DILocalVariable(name: "uw_b", scope: !2990, file: !3, line: 296, type: !2364)
!2996 = !DILocation(line: 296, column: 23, scope: !2990)
!2997 = !DILocation(line: 296, column: 31, scope: !2990)
!2998 = !DILocation(line: 296, column: 38, scope: !2990)
!2999 = !DILocation(line: 296, column: 41, scope: !2990)
!3000 = !DILocation(line: 296, column: 51, scope: !2990)
!3001 = !DILocation(line: 296, column: 53, scope: !2990)
!3002 = !DILocation(line: 296, column: 48, scope: !2990)
!3003 = !DILocalVariable(name: "sw_ap", scope: !3004, file: !3, line: 297, type: !2365)
!3004 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 297, column: 4)
!3005 = !DILocation(line: 297, column: 4, scope: !3004)
!3006 = !DILocation(line: 298, column: 3, scope: !2990)
!3007 = !DILocation(line: 294, column: 33, scope: !2985)
!3008 = !DILocation(line: 294, column: 3, scope: !2985)
!3009 = distinct !{!3009, !2988, !3010}
!3010 = !DILocation(line: 298, column: 3, scope: !2981)
!3011 = !DILocation(line: 299, column: 2, scope: !2982)
!3012 = !DILocation(line: 301, column: 9, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 301, column: 2)
!3014 = !DILocation(line: 301, column: 7, scope: !3013)
!3015 = !DILocation(line: 301, column: 14, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 301, column: 2)
!3017 = !DILocation(line: 301, column: 18, scope: !3016)
!3018 = !DILocation(line: 301, column: 16, scope: !3016)
!3019 = !DILocation(line: 301, column: 2, scope: !3013)
!3020 = !DILocalVariable(name: "uw", scope: !3021, file: !3, line: 302, type: !2364)
!3021 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 301, column: 31)
!3022 = !DILocation(line: 302, column: 22, scope: !3021)
!3023 = !DILocation(line: 302, column: 28, scope: !3021)
!3024 = !DILocation(line: 302, column: 35, scope: !3021)
!3025 = !DILocation(line: 302, column: 38, scope: !3021)
!3026 = !DILocation(line: 303, column: 18, scope: !3021)
!3027 = !DILocation(line: 303, column: 22, scope: !3021)
!3028 = !DILocation(line: 303, column: 16, scope: !3021)
!3029 = !DILocation(line: 303, column: 3, scope: !3021)
!3030 = !DILocation(line: 303, column: 7, scope: !3021)
!3031 = !DILocation(line: 303, column: 9, scope: !3021)
!3032 = !DILocation(line: 304, column: 2, scope: !3021)
!3033 = !DILocation(line: 301, column: 27, scope: !3016)
!3034 = !DILocation(line: 301, column: 2, scope: !3016)
!3035 = distinct !{!3035, !3019, !3036}
!3036 = !DILocation(line: 304, column: 2, scope: !3013)
!3037 = !DILocation(line: 305, column: 1, scope: !2935)
!3038 = distinct !DISubprogram(name: "copy_v2_v2", scope: !3039, file: !3039, line: 58, type: !3040, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3039 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3040 = !DISubroutineType(types: !3041)
!3041 = !{null, !639, !3042}
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !71)
!3044 = !DILocalVariable(name: "r", arg: 1, scope: !3038, file: !3039, line: 58, type: !639)
!3045 = !DILocation(line: 58, column: 31, scope: !3038)
!3046 = !DILocalVariable(name: "a", arg: 2, scope: !3038, file: !3039, line: 58, type: !3042)
!3047 = !DILocation(line: 58, column: 49, scope: !3038)
!3048 = !DILocation(line: 60, column: 9, scope: !3038)
!3049 = !DILocation(line: 60, column: 2, scope: !3038)
!3050 = !DILocation(line: 60, column: 7, scope: !3038)
!3051 = !DILocation(line: 61, column: 9, scope: !3038)
!3052 = !DILocation(line: 61, column: 2, scope: !3038)
!3053 = !DILocation(line: 61, column: 7, scope: !3038)
!3054 = !DILocation(line: 62, column: 1, scope: !3038)
!3055 = distinct !DISubprogram(name: "BKE_mask_spline_direction_switch", scope: !3, file: !3, line: 307, type: !3056, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{null, !2500, !2343}
!3058 = !DILocalVariable(name: "masklay", arg: 1, scope: !3055, file: !3, line: 307, type: !2500)
!3059 = !DILocation(line: 307, column: 50, scope: !3055)
!3060 = !DILocalVariable(name: "spline", arg: 2, scope: !3055, file: !3, line: 307, type: !2343)
!3061 = !DILocation(line: 307, column: 71, scope: !3055)
!3062 = !DILocalVariable(name: "tot_point", scope: !3055, file: !3, line: 309, type: !2941)
!3063 = !DILocation(line: 309, column: 12, scope: !3055)
!3064 = !DILocation(line: 309, column: 24, scope: !3055)
!3065 = !DILocation(line: 309, column: 32, scope: !3055)
!3066 = !DILocalVariable(name: "tot_point_half", scope: !3055, file: !3, line: 310, type: !2941)
!3067 = !DILocation(line: 310, column: 12, scope: !3055)
!3068 = !DILocation(line: 310, column: 29, scope: !3055)
!3069 = !DILocation(line: 310, column: 39, scope: !3055)
!3070 = !DILocalVariable(name: "i", scope: !3055, file: !3, line: 311, type: !35)
!3071 = !DILocation(line: 311, column: 6, scope: !3055)
!3072 = !DILocalVariable(name: "i_prev", scope: !3055, file: !3, line: 311, type: !35)
!3073 = !DILocation(line: 311, column: 9, scope: !3055)
!3074 = !DILocation(line: 313, column: 6, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 313, column: 6)
!3076 = !DILocation(line: 313, column: 16, scope: !3075)
!3077 = !DILocation(line: 313, column: 6, scope: !3055)
!3078 = !DILocation(line: 314, column: 3, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 313, column: 21)
!3080 = !DILocation(line: 318, column: 9, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 318, column: 2)
!3082 = !DILocation(line: 318, column: 7, scope: !3081)
!3083 = !DILocation(line: 318, column: 14, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 318, column: 2)
!3085 = !DILocation(line: 318, column: 18, scope: !3084)
!3086 = !DILocation(line: 318, column: 16, scope: !3084)
!3087 = !DILocation(line: 318, column: 2, scope: !3081)
!3088 = !DILocalVariable(name: "point_a", scope: !3089, file: !3, line: 319, type: !2355)
!3089 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 318, column: 39)
!3090 = !DILocation(line: 319, column: 20, scope: !3089)
!3091 = !DILocation(line: 319, column: 31, scope: !3089)
!3092 = !DILocation(line: 319, column: 39, scope: !3089)
!3093 = !DILocation(line: 319, column: 46, scope: !3089)
!3094 = !DILocalVariable(name: "point_b", scope: !3089, file: !3, line: 320, type: !2355)
!3095 = !DILocation(line: 320, column: 20, scope: !3089)
!3096 = !DILocation(line: 320, column: 31, scope: !3089)
!3097 = !DILocation(line: 320, column: 39, scope: !3089)
!3098 = !DILocation(line: 320, column: 46, scope: !3089)
!3099 = !DILocation(line: 320, column: 59, scope: !3089)
!3100 = !DILocation(line: 320, column: 61, scope: !3089)
!3101 = !DILocation(line: 320, column: 56, scope: !3089)
!3102 = !DILocalVariable(name: "sw_ap", scope: !3103, file: !3, line: 321, type: !2356)
!3103 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 321, column: 3)
!3104 = !DILocation(line: 321, column: 3, scope: !3103)
!3105 = !DILocation(line: 322, column: 2, scope: !3089)
!3106 = !DILocation(line: 318, column: 35, scope: !3084)
!3107 = !DILocation(line: 318, column: 2, scope: !3084)
!3108 = distinct !{!3108, !3087, !3109}
!3109 = !DILocation(line: 322, column: 2, scope: !3081)
!3110 = !DILocation(line: 325, column: 11, scope: !3055)
!3111 = !DILocation(line: 325, column: 21, scope: !3055)
!3112 = !DILocation(line: 325, column: 9, scope: !3055)
!3113 = !DILocation(line: 326, column: 9, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 326, column: 2)
!3115 = !DILocation(line: 326, column: 7, scope: !3114)
!3116 = !DILocation(line: 326, column: 14, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 326, column: 2)
!3118 = !DILocation(line: 326, column: 18, scope: !3117)
!3119 = !DILocation(line: 326, column: 16, scope: !3117)
!3120 = !DILocation(line: 326, column: 2, scope: !3114)
!3121 = !DILocation(line: 328, column: 36, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3117, file: !3, line: 326, column: 34)
!3123 = !DILocation(line: 328, column: 44, scope: !3122)
!3124 = !DILocation(line: 328, column: 51, scope: !3122)
!3125 = !DILocation(line: 328, column: 3, scope: !3122)
!3126 = !DILocalVariable(name: "sw_ap", scope: !3127, file: !3, line: 330, type: !2364)
!3127 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 330, column: 3)
!3128 = !DILocation(line: 330, column: 3, scope: !3127)
!3129 = !DILocalVariable(name: "sw_ap", scope: !3130, file: !3, line: 331, type: !35)
!3130 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 331, column: 3)
!3131 = !DILocation(line: 331, column: 3, scope: !3130)
!3132 = !DILocation(line: 333, column: 12, scope: !3122)
!3133 = !DILocation(line: 333, column: 10, scope: !3122)
!3134 = !DILocation(line: 334, column: 2, scope: !3122)
!3135 = !DILocation(line: 326, column: 30, scope: !3117)
!3136 = !DILocation(line: 326, column: 2, scope: !3117)
!3137 = distinct !{!3137, !3120, !3138}
!3138 = !DILocation(line: 334, column: 2, scope: !3114)
!3139 = !DILocation(line: 337, column: 6, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 337, column: 6)
!3141 = !DILocation(line: 337, column: 15, scope: !3140)
!3142 = !DILocation(line: 337, column: 30, scope: !3140)
!3143 = !DILocation(line: 337, column: 6, scope: !3055)
!3144 = !DILocalVariable(name: "masklay_shape", scope: !3145, file: !3, line: 338, type: !2687)
!3145 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 337, column: 37)
!3146 = !DILocation(line: 338, column: 19, scope: !3145)
!3147 = !DILocalVariable(name: "spline_index", scope: !3145, file: !3, line: 340, type: !2941)
!3148 = !DILocation(line: 340, column: 13, scope: !3145)
!3149 = !DILocation(line: 340, column: 65, scope: !3145)
!3150 = !DILocation(line: 340, column: 74, scope: !3145)
!3151 = !DILocation(line: 340, column: 28, scope: !3145)
!3152 = !DILocation(line: 342, column: 24, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 342, column: 3)
!3154 = !DILocation(line: 342, column: 33, scope: !3153)
!3155 = !DILocation(line: 342, column: 48, scope: !3153)
!3156 = !DILocation(line: 342, column: 22, scope: !3153)
!3157 = !DILocation(line: 342, column: 8, scope: !3153)
!3158 = !DILocation(line: 343, column: 8, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 342, column: 3)
!3160 = !DILocation(line: 342, column: 3, scope: !3153)
!3161 = !DILocalVariable(name: "fp_arr", scope: !3162, file: !3, line: 346, type: !65)
!3162 = distinct !DILexicalBlock(scope: !3159, file: !3, line: 345, column: 3)
!3163 = !DILocation(line: 346, column: 24, scope: !3162)
!3164 = !DILocation(line: 346, column: 55, scope: !3162)
!3165 = !DILocation(line: 346, column: 70, scope: !3162)
!3166 = !DILocation(line: 346, column: 33, scope: !3162)
!3167 = !DILocation(line: 348, column: 11, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 348, column: 4)
!3169 = !DILocation(line: 348, column: 9, scope: !3168)
!3170 = !DILocation(line: 348, column: 16, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 348, column: 4)
!3172 = !DILocation(line: 348, column: 20, scope: !3171)
!3173 = !DILocation(line: 348, column: 18, scope: !3171)
!3174 = !DILocation(line: 348, column: 4, scope: !3168)
!3175 = !DILocalVariable(name: "fp_a", scope: !3176, file: !3, line: 349, type: !65)
!3176 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 348, column: 41)
!3177 = !DILocation(line: 349, column: 25, scope: !3176)
!3178 = !DILocation(line: 349, column: 33, scope: !3176)
!3179 = !DILocation(line: 349, column: 40, scope: !3176)
!3180 = !DILocation(line: 349, column: 69, scope: !3176)
!3181 = !DILocation(line: 349, column: 53, scope: !3176)
!3182 = !DILocalVariable(name: "fp_b", scope: !3176, file: !3, line: 350, type: !65)
!3183 = !DILocation(line: 350, column: 25, scope: !3176)
!3184 = !DILocation(line: 350, column: 33, scope: !3176)
!3185 = !DILocation(line: 350, column: 40, scope: !3176)
!3186 = !DILocation(line: 350, column: 56, scope: !3176)
!3187 = !DILocation(line: 350, column: 69, scope: !3176)
!3188 = !DILocation(line: 350, column: 71, scope: !3176)
!3189 = !DILocation(line: 350, column: 66, scope: !3176)
!3190 = !DILocation(line: 350, column: 53, scope: !3176)
!3191 = !DILocalVariable(name: "sw_ap", scope: !3192, file: !3, line: 351, type: !66)
!3192 = distinct !DILexicalBlock(scope: !3176, file: !3, line: 351, column: 5)
!3193 = !DILocation(line: 351, column: 5, scope: !3192)
!3194 = !DILocation(line: 352, column: 4, scope: !3176)
!3195 = !DILocation(line: 348, column: 37, scope: !3171)
!3196 = !DILocation(line: 348, column: 4, scope: !3171)
!3197 = distinct !{!3197, !3174, !3198}
!3198 = !DILocation(line: 352, column: 4, scope: !3168)
!3199 = !DILocation(line: 353, column: 3, scope: !3162)
!3200 = !DILocation(line: 344, column: 24, scope: !3159)
!3201 = !DILocation(line: 344, column: 39, scope: !3159)
!3202 = !DILocation(line: 344, column: 22, scope: !3159)
!3203 = !DILocation(line: 342, column: 3, scope: !3159)
!3204 = distinct !{!3204, !3160, !3205}
!3205 = !DILocation(line: 353, column: 3, scope: !3153)
!3206 = !DILocation(line: 354, column: 2, scope: !3145)
!3207 = !DILocation(line: 355, column: 1, scope: !3055)
!3208 = distinct !DISubprogram(name: "BKE_mask_layer_shape_spline_to_index", scope: !3, file: !3, line: 1856, type: !3209, scopeLine: 1857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{!35, !2500, !2343}
!3211 = !DILocalVariable(name: "masklay", arg: 1, scope: !3208, file: !3, line: 1856, type: !2500)
!3212 = !DILocation(line: 1856, column: 53, scope: !3208)
!3213 = !DILocalVariable(name: "spline", arg: 2, scope: !3208, file: !3, line: 1856, type: !2343)
!3214 = !DILocation(line: 1856, column: 74, scope: !3208)
!3215 = !DILocalVariable(name: "spline_iter", scope: !3208, file: !3, line: 1858, type: !2343)
!3216 = !DILocation(line: 1858, column: 14, scope: !3208)
!3217 = !DILocalVariable(name: "i_abs", scope: !3208, file: !3, line: 1859, type: !35)
!3218 = !DILocation(line: 1859, column: 6, scope: !3208)
!3219 = !DILocation(line: 1860, column: 21, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 1860, column: 2)
!3221 = !DILocation(line: 1860, column: 30, scope: !3220)
!3222 = !DILocation(line: 1860, column: 38, scope: !3220)
!3223 = !DILocation(line: 1860, column: 19, scope: !3220)
!3224 = !DILocation(line: 1860, column: 7, scope: !3220)
!3225 = !DILocation(line: 1861, column: 7, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3220, file: !3, line: 1860, column: 2)
!3227 = !DILocation(line: 1861, column: 19, scope: !3226)
!3228 = !DILocation(line: 1861, column: 22, scope: !3226)
!3229 = !DILocation(line: 1861, column: 37, scope: !3226)
!3230 = !DILocation(line: 1861, column: 34, scope: !3226)
!3231 = !DILocation(line: 0, scope: !3226)
!3232 = !DILocation(line: 1860, column: 2, scope: !3220)
!3233 = !DILocation(line: 1865, column: 2, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3226, file: !3, line: 1863, column: 2)
!3235 = !DILocation(line: 1862, column: 16, scope: !3226)
!3236 = !DILocation(line: 1862, column: 29, scope: !3226)
!3237 = !DILocation(line: 1862, column: 13, scope: !3226)
!3238 = !DILocation(line: 1862, column: 54, scope: !3226)
!3239 = !DILocation(line: 1862, column: 67, scope: !3226)
!3240 = !DILocation(line: 1862, column: 52, scope: !3226)
!3241 = !DILocation(line: 1860, column: 2, scope: !3226)
!3242 = distinct !{!3242, !3232, !3243}
!3243 = !DILocation(line: 1865, column: 2, scope: !3220)
!3244 = !DILocation(line: 1867, column: 9, scope: !3208)
!3245 = !DILocation(line: 1867, column: 2, scope: !3208)
!3246 = distinct !DISubprogram(name: "BKE_mask_spline_project_co", scope: !3, file: !3, line: 358, type: !3247, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{!71, !2343, !2355, !71, !3042, !3249}
!3249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3250)
!3250 = !DIDerivedType(tag: DW_TAG_typedef, name: "eMaskSign", file: !34, line: 99, baseType: !33)
!3251 = !DILocalVariable(name: "spline", arg: 1, scope: !3246, file: !3, line: 358, type: !2343)
!3252 = !DILocation(line: 358, column: 46, scope: !3246)
!3253 = !DILocalVariable(name: "point", arg: 2, scope: !3246, file: !3, line: 358, type: !2355)
!3254 = !DILocation(line: 358, column: 71, scope: !3246)
!3255 = !DILocalVariable(name: "start_u", arg: 3, scope: !3246, file: !3, line: 359, type: !71)
!3256 = !DILocation(line: 359, column: 40, scope: !3246)
!3257 = !DILocalVariable(name: "co", arg: 4, scope: !3246, file: !3, line: 359, type: !3042)
!3258 = !DILocation(line: 359, column: 61, scope: !3246)
!3259 = !DILocalVariable(name: "sign", arg: 5, scope: !3246, file: !3, line: 359, type: !3249)
!3260 = !DILocation(line: 359, column: 84, scope: !3246)
!3261 = !DILocalVariable(name: "proj_eps", scope: !3246, file: !3, line: 361, type: !3043)
!3262 = !DILocation(line: 361, column: 14, scope: !3246)
!3263 = !DILocalVariable(name: "proj_eps_sq", scope: !3246, file: !3, line: 362, type: !3043)
!3264 = !DILocation(line: 362, column: 14, scope: !3246)
!3265 = !DILocalVariable(name: "N", scope: !3246, file: !3, line: 363, type: !2941)
!3266 = !DILocation(line: 363, column: 12, scope: !3246)
!3267 = !DILocalVariable(name: "u", scope: !3246, file: !3, line: 364, type: !71)
!3268 = !DILocation(line: 364, column: 8, scope: !3246)
!3269 = !DILocalVariable(name: "du", scope: !3246, file: !3, line: 364, type: !71)
!3270 = !DILocation(line: 364, column: 19, scope: !3246)
!3271 = !DILocalVariable(name: "u1", scope: !3246, file: !3, line: 364, type: !71)
!3272 = !DILocation(line: 364, column: 34, scope: !3246)
!3273 = !DILocation(line: 364, column: 39, scope: !3246)
!3274 = !DILocalVariable(name: "u2", scope: !3246, file: !3, line: 364, type: !71)
!3275 = !DILocation(line: 364, column: 48, scope: !3246)
!3276 = !DILocation(line: 364, column: 53, scope: !3246)
!3277 = !DILocalVariable(name: "ang", scope: !3246, file: !3, line: 365, type: !71)
!3278 = !DILocation(line: 365, column: 8, scope: !3246)
!3279 = !DILocation(line: 369, column: 2, scope: !3246)
!3280 = !DILocation(line: 369, column: 9, scope: !3246)
!3281 = !DILocation(line: 369, column: 12, scope: !3246)
!3282 = !DILocation(line: 369, column: 19, scope: !3246)
!3283 = !DILocation(line: 369, column: 22, scope: !3246)
!3284 = !DILocation(line: 369, column: 25, scope: !3246)
!3285 = !DILocalVariable(name: "n1", scope: !3286, file: !3, line: 370, type: !250)
!3286 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 369, column: 33)
!3287 = !DILocation(line: 370, column: 9, scope: !3286)
!3288 = !DILocalVariable(name: "n2", scope: !3286, file: !3, line: 370, type: !250)
!3289 = !DILocation(line: 370, column: 16, scope: !3286)
!3290 = !DILocalVariable(name: "co1", scope: !3286, file: !3, line: 370, type: !250)
!3291 = !DILocation(line: 370, column: 23, scope: !3286)
!3292 = !DILocalVariable(name: "co2", scope: !3286, file: !3, line: 370, type: !250)
!3293 = !DILocation(line: 370, column: 31, scope: !3286)
!3294 = !DILocalVariable(name: "v1", scope: !3286, file: !3, line: 371, type: !250)
!3295 = !DILocation(line: 371, column: 9, scope: !3286)
!3296 = !DILocalVariable(name: "v2", scope: !3286, file: !3, line: 371, type: !250)
!3297 = !DILocation(line: 371, column: 16, scope: !3286)
!3298 = !DILocalVariable(name: "ang1", scope: !3286, file: !3, line: 372, type: !71)
!3299 = !DILocation(line: 372, column: 9, scope: !3286)
!3300 = !DILocalVariable(name: "ang2", scope: !3286, file: !3, line: 372, type: !71)
!3301 = !DILocation(line: 372, column: 15, scope: !3286)
!3302 = !DILocation(line: 374, column: 7, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 374, column: 7)
!3304 = !DILocation(line: 374, column: 10, scope: !3303)
!3305 = !DILocation(line: 374, column: 7, scope: !3286)
!3306 = !DILocation(line: 375, column: 30, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 374, column: 19)
!3308 = !DILocation(line: 375, column: 38, scope: !3307)
!3309 = !DILocation(line: 375, column: 45, scope: !3307)
!3310 = !DILocation(line: 375, column: 49, scope: !3307)
!3311 = !DILocation(line: 375, column: 4, scope: !3307)
!3312 = !DILocation(line: 376, column: 26, scope: !3307)
!3313 = !DILocation(line: 376, column: 34, scope: !3307)
!3314 = !DILocation(line: 376, column: 41, scope: !3307)
!3315 = !DILocation(line: 376, column: 45, scope: !3307)
!3316 = !DILocation(line: 376, column: 4, scope: !3307)
!3317 = !DILocation(line: 377, column: 16, scope: !3307)
!3318 = !DILocation(line: 377, column: 20, scope: !3307)
!3319 = !DILocation(line: 377, column: 24, scope: !3307)
!3320 = !DILocation(line: 377, column: 4, scope: !3307)
!3321 = !DILocation(line: 379, column: 9, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 379, column: 8)
!3323 = !DILocation(line: 379, column: 14, scope: !3322)
!3324 = !DILocation(line: 379, column: 32, scope: !3322)
!3325 = !DILocation(line: 380, column: 10, scope: !3322)
!3326 = !DILocation(line: 380, column: 15, scope: !3322)
!3327 = !DILocation(line: 380, column: 33, scope: !3322)
!3328 = !DILocation(line: 380, column: 46, scope: !3322)
!3329 = !DILocation(line: 380, column: 50, scope: !3322)
!3330 = !DILocation(line: 380, column: 37, scope: !3322)
!3331 = !DILocation(line: 380, column: 54, scope: !3322)
!3332 = !DILocation(line: 380, column: 64, scope: !3322)
!3333 = !DILocation(line: 381, column: 10, scope: !3322)
!3334 = !DILocation(line: 381, column: 15, scope: !3322)
!3335 = !DILocation(line: 381, column: 33, scope: !3322)
!3336 = !DILocation(line: 381, column: 46, scope: !3322)
!3337 = !DILocation(line: 381, column: 50, scope: !3322)
!3338 = !DILocation(line: 381, column: 37, scope: !3322)
!3339 = !DILocation(line: 381, column: 54, scope: !3322)
!3340 = !DILocation(line: 379, column: 8, scope: !3307)
!3341 = !DILocation(line: 384, column: 24, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 384, column: 9)
!3343 = distinct !DILexicalBlock(scope: !3322, file: !3, line: 382, column: 4)
!3344 = !DILocation(line: 384, column: 9, scope: !3342)
!3345 = !DILocation(line: 384, column: 28, scope: !3342)
!3346 = !DILocation(line: 384, column: 9, scope: !3343)
!3347 = !DILocation(line: 385, column: 24, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 384, column: 43)
!3349 = !DILocation(line: 385, column: 28, scope: !3348)
!3350 = !DILocation(line: 385, column: 13, scope: !3348)
!3351 = !DILocation(line: 385, column: 11, scope: !3348)
!3352 = !DILocation(line: 386, column: 10, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3348, file: !3, line: 386, column: 10)
!3354 = !DILocation(line: 386, column: 15, scope: !3353)
!3355 = !DILocation(line: 386, column: 10, scope: !3348)
!3356 = !DILocation(line: 387, column: 28, scope: !3353)
!3357 = !DILocation(line: 387, column: 26, scope: !3353)
!3358 = !DILocation(line: 387, column: 12, scope: !3353)
!3359 = !DILocation(line: 387, column: 7, scope: !3353)
!3360 = !DILocation(line: 389, column: 10, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3348, file: !3, line: 389, column: 10)
!3362 = !DILocation(line: 389, column: 14, scope: !3361)
!3363 = !DILocation(line: 389, column: 21, scope: !3361)
!3364 = !DILocation(line: 389, column: 24, scope: !3361)
!3365 = !DILocation(line: 389, column: 31, scope: !3361)
!3366 = !DILocation(line: 389, column: 29, scope: !3361)
!3367 = !DILocation(line: 389, column: 10, scope: !3348)
!3368 = !DILocation(line: 390, column: 13, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 389, column: 36)
!3370 = !DILocation(line: 390, column: 11, scope: !3369)
!3371 = !DILocation(line: 391, column: 11, scope: !3369)
!3372 = !DILocation(line: 391, column: 9, scope: !3369)
!3373 = !DILocation(line: 392, column: 6, scope: !3369)
!3374 = !DILocation(line: 393, column: 5, scope: !3348)
!3375 = !DILocation(line: 395, column: 10, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 394, column: 10)
!3377 = !DILocation(line: 395, column: 8, scope: !3376)
!3378 = !DILocation(line: 396, column: 6, scope: !3376)
!3379 = !DILocation(line: 398, column: 4, scope: !3343)
!3380 = !DILocation(line: 399, column: 3, scope: !3307)
!3381 = !DILocation(line: 401, column: 7, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 401, column: 7)
!3383 = !DILocation(line: 401, column: 10, scope: !3382)
!3384 = !DILocation(line: 401, column: 7, scope: !3286)
!3385 = !DILocation(line: 402, column: 30, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 401, column: 19)
!3387 = !DILocation(line: 402, column: 38, scope: !3386)
!3388 = !DILocation(line: 402, column: 45, scope: !3386)
!3389 = !DILocation(line: 402, column: 49, scope: !3386)
!3390 = !DILocation(line: 402, column: 4, scope: !3386)
!3391 = !DILocation(line: 403, column: 26, scope: !3386)
!3392 = !DILocation(line: 403, column: 34, scope: !3386)
!3393 = !DILocation(line: 403, column: 41, scope: !3386)
!3394 = !DILocation(line: 403, column: 45, scope: !3386)
!3395 = !DILocation(line: 403, column: 4, scope: !3386)
!3396 = !DILocation(line: 404, column: 16, scope: !3386)
!3397 = !DILocation(line: 404, column: 20, scope: !3386)
!3398 = !DILocation(line: 404, column: 24, scope: !3386)
!3399 = !DILocation(line: 404, column: 4, scope: !3386)
!3400 = !DILocation(line: 406, column: 9, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 406, column: 8)
!3402 = !DILocation(line: 406, column: 14, scope: !3401)
!3403 = !DILocation(line: 406, column: 32, scope: !3401)
!3404 = !DILocation(line: 407, column: 10, scope: !3401)
!3405 = !DILocation(line: 407, column: 15, scope: !3401)
!3406 = !DILocation(line: 407, column: 33, scope: !3401)
!3407 = !DILocation(line: 407, column: 46, scope: !3401)
!3408 = !DILocation(line: 407, column: 50, scope: !3401)
!3409 = !DILocation(line: 407, column: 37, scope: !3401)
!3410 = !DILocation(line: 407, column: 54, scope: !3401)
!3411 = !DILocation(line: 407, column: 64, scope: !3401)
!3412 = !DILocation(line: 408, column: 10, scope: !3401)
!3413 = !DILocation(line: 408, column: 15, scope: !3401)
!3414 = !DILocation(line: 408, column: 33, scope: !3401)
!3415 = !DILocation(line: 408, column: 46, scope: !3401)
!3416 = !DILocation(line: 408, column: 50, scope: !3401)
!3417 = !DILocation(line: 408, column: 37, scope: !3401)
!3418 = !DILocation(line: 408, column: 54, scope: !3401)
!3419 = !DILocation(line: 406, column: 8, scope: !3386)
!3420 = !DILocation(line: 411, column: 24, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 411, column: 9)
!3422 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 409, column: 4)
!3423 = !DILocation(line: 411, column: 9, scope: !3421)
!3424 = !DILocation(line: 411, column: 28, scope: !3421)
!3425 = !DILocation(line: 411, column: 9, scope: !3422)
!3426 = !DILocation(line: 412, column: 24, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 411, column: 43)
!3428 = !DILocation(line: 412, column: 28, scope: !3427)
!3429 = !DILocation(line: 412, column: 13, scope: !3427)
!3430 = !DILocation(line: 412, column: 11, scope: !3427)
!3431 = !DILocation(line: 413, column: 10, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 413, column: 10)
!3433 = !DILocation(line: 413, column: 15, scope: !3432)
!3434 = !DILocation(line: 413, column: 10, scope: !3427)
!3435 = !DILocation(line: 414, column: 28, scope: !3432)
!3436 = !DILocation(line: 414, column: 26, scope: !3432)
!3437 = !DILocation(line: 414, column: 12, scope: !3432)
!3438 = !DILocation(line: 414, column: 7, scope: !3432)
!3439 = !DILocation(line: 416, column: 10, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 416, column: 10)
!3441 = !DILocation(line: 416, column: 17, scope: !3440)
!3442 = !DILocation(line: 416, column: 15, scope: !3440)
!3443 = !DILocation(line: 416, column: 10, scope: !3427)
!3444 = !DILocation(line: 417, column: 13, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 416, column: 22)
!3446 = !DILocation(line: 417, column: 11, scope: !3445)
!3447 = !DILocation(line: 418, column: 11, scope: !3445)
!3448 = !DILocation(line: 418, column: 9, scope: !3445)
!3449 = !DILocation(line: 419, column: 6, scope: !3445)
!3450 = !DILocation(line: 420, column: 5, scope: !3427)
!3451 = !DILocation(line: 422, column: 10, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 421, column: 10)
!3453 = !DILocation(line: 422, column: 8, scope: !3452)
!3454 = !DILocation(line: 423, column: 6, scope: !3452)
!3455 = !DILocation(line: 425, column: 4, scope: !3422)
!3456 = !DILocation(line: 426, column: 3, scope: !3386)
!3457 = !DILocation(line: 428, column: 9, scope: !3286)
!3458 = !DILocation(line: 428, column: 6, scope: !3286)
!3459 = !DILocation(line: 429, column: 9, scope: !3286)
!3460 = !DILocation(line: 429, column: 6, scope: !3286)
!3461 = distinct !{!3461, !3279, !3462}
!3462 = !DILocation(line: 430, column: 2, scope: !3246)
!3463 = !DILocation(line: 432, column: 9, scope: !3246)
!3464 = !DILocation(line: 432, column: 2, scope: !3246)
!3465 = distinct !DISubprogram(name: "BKE_mask_point_segment_co", scope: !3, file: !3, line: 521, type: !3466, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{null, !2343, !2355, !71, !639}
!3468 = !DILocalVariable(name: "spline", arg: 1, scope: !3465, file: !3, line: 521, type: !2343)
!3469 = !DILocation(line: 521, column: 44, scope: !3465)
!3470 = !DILocalVariable(name: "point", arg: 2, scope: !3465, file: !3, line: 521, type: !2355)
!3471 = !DILocation(line: 521, column: 69, scope: !3465)
!3472 = !DILocalVariable(name: "u", arg: 3, scope: !3465, file: !3, line: 521, type: !71)
!3473 = !DILocation(line: 521, column: 82, scope: !3465)
!3474 = !DILocalVariable(name: "co", arg: 4, scope: !3465, file: !3, line: 521, type: !639)
!3475 = !DILocation(line: 521, column: 91, scope: !3465)
!3476 = !DILocalVariable(name: "points_array", scope: !3465, file: !3, line: 523, type: !2355)
!3477 = !DILocation(line: 523, column: 19, scope: !3465)
!3478 = !DILocation(line: 523, column: 73, scope: !3465)
!3479 = !DILocation(line: 523, column: 81, scope: !3465)
!3480 = !DILocation(line: 523, column: 34, scope: !3465)
!3481 = !DILocalVariable(name: "bezt", scope: !3465, file: !3, line: 525, type: !3482)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!3483 = !DILocation(line: 525, column: 13, scope: !3465)
!3484 = !DILocation(line: 525, column: 21, scope: !3465)
!3485 = !DILocation(line: 525, column: 28, scope: !3465)
!3486 = !DILocalVariable(name: "bezt_next", scope: !3465, file: !3, line: 525, type: !3482)
!3487 = !DILocation(line: 525, column: 35, scope: !3465)
!3488 = !DILocalVariable(name: "q0", scope: !3465, file: !3, line: 526, type: !250)
!3489 = !DILocation(line: 526, column: 8, scope: !3465)
!3490 = !DILocalVariable(name: "q1", scope: !3465, file: !3, line: 526, type: !250)
!3491 = !DILocation(line: 526, column: 15, scope: !3465)
!3492 = !DILocalVariable(name: "q2", scope: !3465, file: !3, line: 526, type: !250)
!3493 = !DILocation(line: 526, column: 22, scope: !3465)
!3494 = !DILocalVariable(name: "r0", scope: !3465, file: !3, line: 526, type: !250)
!3495 = !DILocation(line: 526, column: 29, scope: !3465)
!3496 = !DILocalVariable(name: "r1", scope: !3465, file: !3, line: 526, type: !250)
!3497 = !DILocation(line: 526, column: 36, scope: !3465)
!3498 = !DILocation(line: 528, column: 46, scope: !3465)
!3499 = !DILocation(line: 528, column: 54, scope: !3465)
!3500 = !DILocation(line: 528, column: 68, scope: !3465)
!3501 = !DILocation(line: 528, column: 14, scope: !3465)
!3502 = !DILocation(line: 528, column: 12, scope: !3465)
!3503 = !DILocation(line: 530, column: 7, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 530, column: 6)
!3505 = !DILocation(line: 530, column: 6, scope: !3465)
!3506 = !DILocation(line: 531, column: 14, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3504, file: !3, line: 530, column: 18)
!3508 = !DILocation(line: 531, column: 18, scope: !3507)
!3509 = !DILocation(line: 531, column: 24, scope: !3507)
!3510 = !DILocation(line: 531, column: 3, scope: !3507)
!3511 = !DILocation(line: 532, column: 3, scope: !3507)
!3512 = !DILocation(line: 535, column: 17, scope: !3465)
!3513 = !DILocation(line: 535, column: 21, scope: !3465)
!3514 = !DILocation(line: 535, column: 27, scope: !3465)
!3515 = !DILocation(line: 535, column: 35, scope: !3465)
!3516 = !DILocation(line: 535, column: 41, scope: !3465)
!3517 = !DILocation(line: 535, column: 49, scope: !3465)
!3518 = !DILocation(line: 535, column: 2, scope: !3465)
!3519 = !DILocation(line: 536, column: 17, scope: !3465)
!3520 = !DILocation(line: 536, column: 21, scope: !3465)
!3521 = !DILocation(line: 536, column: 27, scope: !3465)
!3522 = !DILocation(line: 536, column: 35, scope: !3465)
!3523 = !DILocation(line: 536, column: 46, scope: !3465)
!3524 = !DILocation(line: 536, column: 54, scope: !3465)
!3525 = !DILocation(line: 536, column: 2, scope: !3465)
!3526 = !DILocation(line: 537, column: 17, scope: !3465)
!3527 = !DILocation(line: 537, column: 21, scope: !3465)
!3528 = !DILocation(line: 537, column: 32, scope: !3465)
!3529 = !DILocation(line: 537, column: 40, scope: !3465)
!3530 = !DILocation(line: 537, column: 51, scope: !3465)
!3531 = !DILocation(line: 537, column: 59, scope: !3465)
!3532 = !DILocation(line: 537, column: 2, scope: !3465)
!3533 = !DILocation(line: 539, column: 17, scope: !3465)
!3534 = !DILocation(line: 539, column: 21, scope: !3465)
!3535 = !DILocation(line: 539, column: 25, scope: !3465)
!3536 = !DILocation(line: 539, column: 29, scope: !3465)
!3537 = !DILocation(line: 539, column: 2, scope: !3465)
!3538 = !DILocation(line: 540, column: 17, scope: !3465)
!3539 = !DILocation(line: 540, column: 21, scope: !3465)
!3540 = !DILocation(line: 540, column: 25, scope: !3465)
!3541 = !DILocation(line: 540, column: 29, scope: !3465)
!3542 = !DILocation(line: 540, column: 2, scope: !3465)
!3543 = !DILocation(line: 542, column: 17, scope: !3465)
!3544 = !DILocation(line: 542, column: 21, scope: !3465)
!3545 = !DILocation(line: 542, column: 25, scope: !3465)
!3546 = !DILocation(line: 542, column: 29, scope: !3465)
!3547 = !DILocation(line: 542, column: 2, scope: !3465)
!3548 = !DILocation(line: 543, column: 1, scope: !3465)
!3549 = distinct !DISubprogram(name: "BKE_mask_point_normal", scope: !3, file: !3, line: 556, type: !3466, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3550 = !DILocalVariable(name: "spline", arg: 1, scope: !3549, file: !3, line: 556, type: !2343)
!3551 = !DILocation(line: 556, column: 40, scope: !3549)
!3552 = !DILocalVariable(name: "point", arg: 2, scope: !3549, file: !3, line: 556, type: !2355)
!3553 = !DILocation(line: 556, column: 65, scope: !3549)
!3554 = !DILocalVariable(name: "u", arg: 3, scope: !3549, file: !3, line: 556, type: !71)
!3555 = !DILocation(line: 556, column: 78, scope: !3549)
!3556 = !DILocalVariable(name: "n", arg: 4, scope: !3549, file: !3, line: 556, type: !639)
!3557 = !DILocation(line: 556, column: 87, scope: !3549)
!3558 = !DILocalVariable(name: "point_prev", scope: !3549, file: !3, line: 559, type: !2355)
!3559 = !DILocation(line: 559, column: 19, scope: !3549)
!3560 = !DILocalVariable(name: "point_next", scope: !3549, file: !3, line: 559, type: !2355)
!3561 = !DILocation(line: 559, column: 32, scope: !3549)
!3562 = !DILocalVariable(name: "du", scope: !3549, file: !3, line: 562, type: !3043)
!3563 = !DILocation(line: 562, column: 14, scope: !3549)
!3564 = !DILocation(line: 564, column: 37, scope: !3549)
!3565 = !DILocation(line: 564, column: 45, scope: !3549)
!3566 = !DILocation(line: 564, column: 2, scope: !3549)
!3567 = !DILocation(line: 566, column: 6, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3549, file: !3, line: 566, column: 6)
!3569 = !DILocation(line: 566, column: 8, scope: !3568)
!3570 = !DILocation(line: 566, column: 13, scope: !3568)
!3571 = !DILocation(line: 566, column: 20, scope: !3568)
!3572 = !DILocation(line: 566, column: 23, scope: !3568)
!3573 = !DILocation(line: 566, column: 34, scope: !3568)
!3574 = !DILocation(line: 566, column: 6, scope: !3549)
!3575 = !DILocalVariable(name: "co", scope: !3576, file: !3, line: 567, type: !250)
!3576 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 566, column: 43)
!3577 = !DILocation(line: 567, column: 9, scope: !3576)
!3578 = !DILocalVariable(name: "dir", scope: !3576, file: !3, line: 567, type: !250)
!3579 = !DILocation(line: 567, column: 16, scope: !3576)
!3580 = !DILocation(line: 568, column: 29, scope: !3576)
!3581 = !DILocation(line: 568, column: 37, scope: !3576)
!3582 = !DILocation(line: 568, column: 44, scope: !3576)
!3583 = !DILocation(line: 568, column: 46, scope: !3576)
!3584 = !DILocation(line: 568, column: 52, scope: !3576)
!3585 = !DILocation(line: 568, column: 3, scope: !3576)
!3586 = !DILocation(line: 569, column: 15, scope: !3576)
!3587 = !DILocation(line: 569, column: 20, scope: !3576)
!3588 = !DILocation(line: 569, column: 24, scope: !3576)
!3589 = !DILocation(line: 569, column: 31, scope: !3576)
!3590 = !DILocation(line: 569, column: 36, scope: !3576)
!3591 = !DILocation(line: 569, column: 3, scope: !3576)
!3592 = !DILocation(line: 570, column: 28, scope: !3576)
!3593 = !DILocation(line: 570, column: 33, scope: !3576)
!3594 = !DILocation(line: 570, column: 3, scope: !3576)
!3595 = !DILocation(line: 571, column: 2, scope: !3576)
!3596 = !DILocation(line: 572, column: 11, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 572, column: 11)
!3598 = !DILocation(line: 572, column: 13, scope: !3597)
!3599 = !DILocation(line: 572, column: 18, scope: !3597)
!3600 = !DILocation(line: 572, column: 25, scope: !3597)
!3601 = !DILocation(line: 572, column: 28, scope: !3597)
!3602 = !DILocation(line: 572, column: 39, scope: !3597)
!3603 = !DILocation(line: 572, column: 11, scope: !3568)
!3604 = !DILocalVariable(name: "co", scope: !3605, file: !3, line: 573, type: !250)
!3605 = distinct !DILexicalBlock(scope: !3597, file: !3, line: 572, column: 48)
!3606 = !DILocation(line: 573, column: 9, scope: !3605)
!3607 = !DILocalVariable(name: "dir", scope: !3605, file: !3, line: 573, type: !250)
!3608 = !DILocation(line: 573, column: 16, scope: !3605)
!3609 = !DILocation(line: 574, column: 29, scope: !3605)
!3610 = !DILocation(line: 574, column: 37, scope: !3605)
!3611 = !DILocation(line: 574, column: 44, scope: !3605)
!3612 = !DILocation(line: 574, column: 46, scope: !3605)
!3613 = !DILocation(line: 574, column: 52, scope: !3605)
!3614 = !DILocation(line: 574, column: 3, scope: !3605)
!3615 = !DILocation(line: 575, column: 15, scope: !3605)
!3616 = !DILocation(line: 575, column: 20, scope: !3605)
!3617 = !DILocation(line: 575, column: 27, scope: !3605)
!3618 = !DILocation(line: 575, column: 32, scope: !3605)
!3619 = !DILocation(line: 575, column: 40, scope: !3605)
!3620 = !DILocation(line: 575, column: 3, scope: !3605)
!3621 = !DILocation(line: 576, column: 28, scope: !3605)
!3622 = !DILocation(line: 576, column: 33, scope: !3605)
!3623 = !DILocation(line: 576, column: 3, scope: !3605)
!3624 = !DILocation(line: 577, column: 2, scope: !3605)
!3625 = !DILocalVariable(name: "prev_co", scope: !3626, file: !3, line: 579, type: !250)
!3626 = distinct !DILexicalBlock(scope: !3597, file: !3, line: 578, column: 7)
!3627 = !DILocation(line: 579, column: 9, scope: !3626)
!3628 = !DILocalVariable(name: "next_co", scope: !3626, file: !3, line: 579, type: !250)
!3629 = !DILocation(line: 579, column: 21, scope: !3626)
!3630 = !DILocalVariable(name: "co", scope: !3626, file: !3, line: 579, type: !250)
!3631 = !DILocation(line: 579, column: 33, scope: !3626)
!3632 = !DILocalVariable(name: "dir1", scope: !3626, file: !3, line: 580, type: !250)
!3633 = !DILocation(line: 580, column: 9, scope: !3626)
!3634 = !DILocalVariable(name: "dir2", scope: !3626, file: !3, line: 580, type: !250)
!3635 = !DILocation(line: 580, column: 18, scope: !3626)
!3636 = !DILocalVariable(name: "dir", scope: !3626, file: !3, line: 580, type: !250)
!3637 = !DILocation(line: 580, column: 27, scope: !3626)
!3638 = !DILocation(line: 582, column: 7, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 582, column: 7)
!3640 = !DILocation(line: 582, column: 9, scope: !3639)
!3641 = !DILocation(line: 582, column: 14, scope: !3639)
!3642 = !DILocation(line: 582, column: 7, scope: !3626)
!3643 = !DILocation(line: 583, column: 30, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 582, column: 22)
!3645 = !DILocation(line: 583, column: 38, scope: !3644)
!3646 = !DILocation(line: 583, column: 58, scope: !3644)
!3647 = !DILocation(line: 583, column: 60, scope: !3644)
!3648 = !DILocation(line: 583, column: 55, scope: !3644)
!3649 = !DILocation(line: 583, column: 67, scope: !3644)
!3650 = !DILocation(line: 583, column: 4, scope: !3644)
!3651 = !DILocation(line: 584, column: 3, scope: !3644)
!3652 = !DILocation(line: 586, column: 30, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 585, column: 8)
!3654 = !DILocation(line: 586, column: 38, scope: !3653)
!3655 = !DILocation(line: 586, column: 45, scope: !3653)
!3656 = !DILocation(line: 586, column: 47, scope: !3653)
!3657 = !DILocation(line: 586, column: 53, scope: !3653)
!3658 = !DILocation(line: 586, column: 4, scope: !3653)
!3659 = !DILocation(line: 589, column: 29, scope: !3626)
!3660 = !DILocation(line: 589, column: 37, scope: !3626)
!3661 = !DILocation(line: 589, column: 44, scope: !3626)
!3662 = !DILocation(line: 589, column: 47, scope: !3626)
!3663 = !DILocation(line: 589, column: 3, scope: !3626)
!3664 = !DILocation(line: 591, column: 7, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 591, column: 7)
!3666 = !DILocation(line: 591, column: 9, scope: !3665)
!3667 = !DILocation(line: 591, column: 14, scope: !3665)
!3668 = !DILocation(line: 591, column: 7, scope: !3626)
!3669 = !DILocation(line: 592, column: 30, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 591, column: 22)
!3671 = !DILocation(line: 592, column: 38, scope: !3670)
!3672 = !DILocation(line: 592, column: 50, scope: !3670)
!3673 = !DILocation(line: 592, column: 52, scope: !3670)
!3674 = !DILocation(line: 592, column: 57, scope: !3670)
!3675 = !DILocation(line: 592, column: 65, scope: !3670)
!3676 = !DILocation(line: 592, column: 4, scope: !3670)
!3677 = !DILocation(line: 593, column: 3, scope: !3670)
!3678 = !DILocation(line: 595, column: 30, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 594, column: 8)
!3680 = !DILocation(line: 595, column: 38, scope: !3679)
!3681 = !DILocation(line: 595, column: 45, scope: !3679)
!3682 = !DILocation(line: 595, column: 47, scope: !3679)
!3683 = !DILocation(line: 595, column: 53, scope: !3679)
!3684 = !DILocation(line: 595, column: 4, scope: !3679)
!3685 = !DILocation(line: 598, column: 15, scope: !3626)
!3686 = !DILocation(line: 598, column: 21, scope: !3626)
!3687 = !DILocation(line: 598, column: 25, scope: !3626)
!3688 = !DILocation(line: 598, column: 3, scope: !3626)
!3689 = !DILocation(line: 599, column: 15, scope: !3626)
!3690 = !DILocation(line: 599, column: 21, scope: !3626)
!3691 = !DILocation(line: 599, column: 30, scope: !3626)
!3692 = !DILocation(line: 599, column: 3, scope: !3626)
!3693 = !DILocation(line: 601, column: 16, scope: !3626)
!3694 = !DILocation(line: 601, column: 3, scope: !3626)
!3695 = !DILocation(line: 602, column: 16, scope: !3626)
!3696 = !DILocation(line: 602, column: 3, scope: !3626)
!3697 = !DILocation(line: 603, column: 15, scope: !3626)
!3698 = !DILocation(line: 603, column: 20, scope: !3626)
!3699 = !DILocation(line: 603, column: 26, scope: !3626)
!3700 = !DILocation(line: 603, column: 3, scope: !3626)
!3701 = !DILocation(line: 605, column: 28, scope: !3626)
!3702 = !DILocation(line: 605, column: 33, scope: !3626)
!3703 = !DILocation(line: 605, column: 3, scope: !3626)
!3704 = !DILocation(line: 607, column: 1, scope: !3549)
!3705 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !3039, file: !3039, line: 338, type: !3706, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{null, !639, !3042, !3042}
!3708 = !DILocalVariable(name: "r", arg: 1, scope: !3705, file: !3039, line: 338, type: !639)
!3709 = !DILocation(line: 338, column: 32, scope: !3705)
!3710 = !DILocalVariable(name: "a", arg: 2, scope: !3705, file: !3039, line: 338, type: !3042)
!3711 = !DILocation(line: 338, column: 50, scope: !3705)
!3712 = !DILocalVariable(name: "b", arg: 3, scope: !3705, file: !3039, line: 338, type: !3042)
!3713 = !DILocation(line: 338, column: 68, scope: !3705)
!3714 = !DILocation(line: 340, column: 9, scope: !3705)
!3715 = !DILocation(line: 340, column: 16, scope: !3705)
!3716 = !DILocation(line: 340, column: 14, scope: !3705)
!3717 = !DILocation(line: 340, column: 2, scope: !3705)
!3718 = !DILocation(line: 340, column: 7, scope: !3705)
!3719 = !DILocation(line: 341, column: 9, scope: !3705)
!3720 = !DILocation(line: 341, column: 16, scope: !3705)
!3721 = !DILocation(line: 341, column: 14, scope: !3705)
!3722 = !DILocation(line: 341, column: 2, scope: !3705)
!3723 = !DILocation(line: 341, column: 7, scope: !3705)
!3724 = !DILocation(line: 342, column: 1, scope: !3705)
!3725 = distinct !DISubprogram(name: "dot_v2v2", scope: !3039, file: !3039, line: 614, type: !3726, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!71, !3042, !3042}
!3728 = !DILocalVariable(name: "a", arg: 1, scope: !3725, file: !3039, line: 614, type: !3042)
!3729 = !DILocation(line: 614, column: 36, scope: !3725)
!3730 = !DILocalVariable(name: "b", arg: 2, scope: !3725, file: !3039, line: 614, type: !3042)
!3731 = !DILocation(line: 614, column: 54, scope: !3725)
!3732 = !DILocation(line: 616, column: 9, scope: !3725)
!3733 = !DILocation(line: 616, column: 16, scope: !3725)
!3734 = !DILocation(line: 616, column: 14, scope: !3725)
!3735 = !DILocation(line: 616, column: 23, scope: !3725)
!3736 = !DILocation(line: 616, column: 30, scope: !3725)
!3737 = !DILocation(line: 616, column: 28, scope: !3725)
!3738 = !DILocation(line: 616, column: 21, scope: !3725)
!3739 = !DILocation(line: 616, column: 2, scope: !3725)
!3740 = distinct !DISubprogram(name: "len_squared_v2", scope: !3039, file: !3039, line: 666, type: !3741, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{!71, !3042}
!3743 = !DILocalVariable(name: "v", arg: 1, scope: !3740, file: !3039, line: 666, type: !3042)
!3744 = !DILocation(line: 666, column: 42, scope: !3740)
!3745 = !DILocation(line: 668, column: 9, scope: !3740)
!3746 = !DILocation(line: 668, column: 16, scope: !3740)
!3747 = !DILocation(line: 668, column: 14, scope: !3740)
!3748 = !DILocation(line: 668, column: 23, scope: !3740)
!3749 = !DILocation(line: 668, column: 30, scope: !3740)
!3750 = !DILocation(line: 668, column: 28, scope: !3740)
!3751 = !DILocation(line: 668, column: 21, scope: !3740)
!3752 = !DILocation(line: 668, column: 2, scope: !3740)
!3753 = distinct !DISubprogram(name: "BKE_mask_point_handles_mode_get", scope: !3, file: !3, line: 437, type: !3754, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{!3756, !2355}
!3756 = !DIDerivedType(tag: DW_TAG_typedef, name: "eMaskhandleMode", file: !34, line: 62, baseType: !40)
!3757 = !DILocalVariable(name: "point", arg: 1, scope: !3753, file: !3, line: 437, type: !2355)
!3758 = !DILocation(line: 437, column: 66, scope: !3753)
!3759 = !DILocalVariable(name: "bezt", scope: !3753, file: !3, line: 439, type: !3482)
!3760 = !DILocation(line: 439, column: 13, scope: !3753)
!3761 = !DILocation(line: 439, column: 21, scope: !3753)
!3762 = !DILocation(line: 439, column: 28, scope: !3753)
!3763 = !DILocation(line: 441, column: 6, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3753, file: !3, line: 441, column: 6)
!3765 = !DILocation(line: 441, column: 12, scope: !3764)
!3766 = !DILocation(line: 441, column: 18, scope: !3764)
!3767 = !DILocation(line: 441, column: 24, scope: !3764)
!3768 = !DILocation(line: 441, column: 15, scope: !3764)
!3769 = !DILocation(line: 441, column: 27, scope: !3764)
!3770 = !DILocation(line: 441, column: 30, scope: !3764)
!3771 = !DILocation(line: 441, column: 36, scope: !3764)
!3772 = !DILocation(line: 441, column: 39, scope: !3764)
!3773 = !DILocation(line: 441, column: 6, scope: !3753)
!3774 = !DILocation(line: 442, column: 3, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 441, column: 52)
!3776 = !DILocation(line: 445, column: 2, scope: !3753)
!3777 = !DILocation(line: 446, column: 1, scope: !3753)
!3778 = distinct !DISubprogram(name: "BKE_mask_point_handle", scope: !3, file: !3, line: 448, type: !3779, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3779 = !DISubroutineType(types: !3780)
!3780 = !{null, !2355, !3781, !639}
!3781 = !DIDerivedType(tag: DW_TAG_typedef, name: "eMaskWhichHandle", file: !34, line: 57, baseType: !53)
!3782 = !DILocalVariable(name: "point", arg: 1, scope: !3778, file: !3, line: 448, type: !2355)
!3783 = !DILocation(line: 448, column: 45, scope: !3778)
!3784 = !DILocalVariable(name: "which_handle", arg: 2, scope: !3778, file: !3, line: 448, type: !3781)
!3785 = !DILocation(line: 448, column: 69, scope: !3778)
!3786 = !DILocalVariable(name: "handle", arg: 3, scope: !3778, file: !3, line: 448, type: !639)
!3787 = !DILocation(line: 448, column: 89, scope: !3778)
!3788 = !DILocalVariable(name: "bezt", scope: !3778, file: !3, line: 450, type: !3482)
!3789 = !DILocation(line: 450, column: 13, scope: !3778)
!3790 = !DILocation(line: 450, column: 21, scope: !3778)
!3791 = !DILocation(line: 450, column: 28, scope: !3778)
!3792 = !DILocation(line: 452, column: 6, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3778, file: !3, line: 452, column: 6)
!3794 = !DILocation(line: 452, column: 19, scope: !3793)
!3795 = !DILocation(line: 452, column: 6, scope: !3778)
!3796 = !DILocalVariable(name: "vec", scope: !3797, file: !3, line: 453, type: !250)
!3797 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 452, column: 47)
!3798 = !DILocation(line: 453, column: 9, scope: !3797)
!3799 = !DILocation(line: 455, column: 15, scope: !3797)
!3800 = !DILocation(line: 455, column: 20, scope: !3797)
!3801 = !DILocation(line: 455, column: 26, scope: !3797)
!3802 = !DILocation(line: 455, column: 34, scope: !3797)
!3803 = !DILocation(line: 455, column: 40, scope: !3797)
!3804 = !DILocation(line: 455, column: 3, scope: !3797)
!3805 = !DILocation(line: 457, column: 16, scope: !3797)
!3806 = !DILocation(line: 457, column: 22, scope: !3797)
!3807 = !DILocation(line: 457, column: 34, scope: !3797)
!3808 = !DILocation(line: 457, column: 32, scope: !3797)
!3809 = !DILocation(line: 457, column: 3, scope: !3797)
!3810 = !DILocation(line: 457, column: 13, scope: !3797)
!3811 = !DILocation(line: 458, column: 16, scope: !3797)
!3812 = !DILocation(line: 458, column: 22, scope: !3797)
!3813 = !DILocation(line: 458, column: 34, scope: !3797)
!3814 = !DILocation(line: 458, column: 32, scope: !3797)
!3815 = !DILocation(line: 458, column: 3, scope: !3797)
!3816 = !DILocation(line: 458, column: 13, scope: !3797)
!3817 = !DILocation(line: 459, column: 2, scope: !3797)
!3818 = !DILocation(line: 460, column: 11, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 460, column: 11)
!3820 = !DILocation(line: 460, column: 24, scope: !3819)
!3821 = !DILocation(line: 460, column: 11, scope: !3793)
!3822 = !DILocation(line: 461, column: 14, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 460, column: 51)
!3824 = !DILocation(line: 461, column: 22, scope: !3823)
!3825 = !DILocation(line: 461, column: 28, scope: !3823)
!3826 = !DILocation(line: 461, column: 3, scope: !3823)
!3827 = !DILocation(line: 462, column: 2, scope: !3823)
!3828 = !DILocation(line: 463, column: 11, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 463, column: 11)
!3830 = !DILocation(line: 463, column: 24, scope: !3829)
!3831 = !DILocation(line: 463, column: 11, scope: !3819)
!3832 = !DILocation(line: 464, column: 14, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 463, column: 52)
!3834 = !DILocation(line: 464, column: 22, scope: !3833)
!3835 = !DILocation(line: 464, column: 28, scope: !3833)
!3836 = !DILocation(line: 464, column: 3, scope: !3833)
!3837 = !DILocation(line: 465, column: 2, scope: !3833)
!3838 = !DILocation(line: 469, column: 1, scope: !3778)
!3839 = distinct !DISubprogram(name: "BKE_mask_point_set_handle", scope: !3, file: !3, line: 471, type: !3840, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3840 = !DISubroutineType(types: !3841)
!3841 = !{null, !2355, !3781, !639, !1671, !639, !3842}
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!3843 = !DILocalVariable(name: "point", arg: 1, scope: !3839, file: !3, line: 471, type: !2355)
!3844 = !DILocation(line: 471, column: 49, scope: !3839)
!3845 = !DILocalVariable(name: "which_handle", arg: 2, scope: !3839, file: !3, line: 471, type: !3781)
!3846 = !DILocation(line: 471, column: 73, scope: !3839)
!3847 = !DILocalVariable(name: "loc", arg: 3, scope: !3839, file: !3, line: 472, type: !639)
!3848 = !DILocation(line: 472, column: 38, scope: !3839)
!3849 = !DILocalVariable(name: "keep_direction", arg: 4, scope: !3839, file: !3, line: 472, type: !1671)
!3850 = !DILocation(line: 472, column: 51, scope: !3839)
!3851 = !DILocalVariable(name: "orig_handle", arg: 5, scope: !3839, file: !3, line: 473, type: !639)
!3852 = !DILocation(line: 473, column: 38, scope: !3839)
!3853 = !DILocalVariable(name: "orig_vec", arg: 6, scope: !3839, file: !3, line: 473, type: !3842)
!3854 = !DILocation(line: 473, column: 60, scope: !3839)
!3855 = !DILocalVariable(name: "bezt", scope: !3839, file: !3, line: 475, type: !3482)
!3856 = !DILocation(line: 475, column: 13, scope: !3839)
!3857 = !DILocation(line: 475, column: 21, scope: !3839)
!3858 = !DILocation(line: 475, column: 28, scope: !3839)
!3859 = !DILocation(line: 477, column: 6, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 477, column: 6)
!3861 = !DILocation(line: 477, column: 19, scope: !3860)
!3862 = !DILocation(line: 477, column: 6, scope: !3839)
!3863 = !DILocalVariable(name: "v1", scope: !3864, file: !3, line: 478, type: !250)
!3864 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 477, column: 47)
!3865 = !DILocation(line: 478, column: 9, scope: !3864)
!3866 = !DILocalVariable(name: "v2", scope: !3864, file: !3, line: 478, type: !250)
!3867 = !DILocation(line: 478, column: 16, scope: !3864)
!3868 = !DILocalVariable(name: "vec", scope: !3864, file: !3, line: 478, type: !250)
!3869 = !DILocation(line: 478, column: 23, scope: !3864)
!3870 = !DILocation(line: 479, column: 7, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 479, column: 7)
!3872 = !DILocation(line: 479, column: 7, scope: !3864)
!3873 = !DILocation(line: 480, column: 16, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 479, column: 23)
!3875 = !DILocation(line: 480, column: 20, scope: !3874)
!3876 = !DILocation(line: 480, column: 25, scope: !3874)
!3877 = !DILocation(line: 480, column: 4, scope: !3874)
!3878 = !DILocation(line: 481, column: 16, scope: !3874)
!3879 = !DILocation(line: 481, column: 20, scope: !3874)
!3880 = !DILocation(line: 481, column: 33, scope: !3874)
!3881 = !DILocation(line: 481, column: 4, scope: !3874)
!3882 = !DILocation(line: 483, column: 20, scope: !3874)
!3883 = !DILocation(line: 483, column: 25, scope: !3874)
!3884 = !DILocation(line: 483, column: 29, scope: !3874)
!3885 = !DILocation(line: 483, column: 4, scope: !3874)
!3886 = !DILocation(line: 485, column: 17, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3874, file: !3, line: 485, column: 8)
!3888 = !DILocation(line: 485, column: 21, scope: !3887)
!3889 = !DILocation(line: 485, column: 8, scope: !3887)
!3890 = !DILocation(line: 485, column: 26, scope: !3887)
!3891 = !DILocation(line: 485, column: 8, scope: !3874)
!3892 = !DILocalVariable(name: "len", scope: !3893, file: !3, line: 486, type: !71)
!3893 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 485, column: 31)
!3894 = !DILocation(line: 486, column: 11, scope: !3893)
!3895 = !DILocation(line: 486, column: 24, scope: !3893)
!3896 = !DILocation(line: 486, column: 17, scope: !3893)
!3897 = !DILocation(line: 488, column: 17, scope: !3893)
!3898 = !DILocation(line: 488, column: 21, scope: !3893)
!3899 = !DILocation(line: 488, column: 34, scope: !3893)
!3900 = !DILocation(line: 488, column: 5, scope: !3893)
!3901 = !DILocation(line: 490, column: 15, scope: !3893)
!3902 = !DILocation(line: 490, column: 19, scope: !3893)
!3903 = !DILocation(line: 490, column: 32, scope: !3893)
!3904 = !DILocation(line: 490, column: 25, scope: !3893)
!3905 = !DILocation(line: 490, column: 23, scope: !3893)
!3906 = !DILocation(line: 490, column: 5, scope: !3893)
!3907 = !DILocation(line: 492, column: 17, scope: !3893)
!3908 = !DILocation(line: 492, column: 23, scope: !3893)
!3909 = !DILocation(line: 492, column: 31, scope: !3893)
!3910 = !DILocation(line: 492, column: 37, scope: !3893)
!3911 = !DILocation(line: 492, column: 45, scope: !3893)
!3912 = !DILocation(line: 492, column: 5, scope: !3893)
!3913 = !DILocation(line: 493, column: 17, scope: !3893)
!3914 = !DILocation(line: 493, column: 23, scope: !3893)
!3915 = !DILocation(line: 493, column: 31, scope: !3893)
!3916 = !DILocation(line: 493, column: 37, scope: !3893)
!3917 = !DILocation(line: 493, column: 45, scope: !3893)
!3918 = !DILocation(line: 493, column: 5, scope: !3893)
!3919 = !DILocation(line: 494, column: 4, scope: !3893)
!3920 = !DILocation(line: 496, column: 16, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 495, column: 9)
!3922 = !DILocation(line: 496, column: 22, scope: !3921)
!3923 = !DILocation(line: 496, column: 30, scope: !3921)
!3924 = !DILocation(line: 496, column: 36, scope: !3921)
!3925 = !DILocation(line: 496, column: 5, scope: !3921)
!3926 = !DILocation(line: 497, column: 16, scope: !3921)
!3927 = !DILocation(line: 497, column: 22, scope: !3921)
!3928 = !DILocation(line: 497, column: 30, scope: !3921)
!3929 = !DILocation(line: 497, column: 36, scope: !3921)
!3930 = !DILocation(line: 497, column: 5, scope: !3921)
!3931 = !DILocation(line: 499, column: 3, scope: !3874)
!3932 = !DILocation(line: 501, column: 16, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 500, column: 8)
!3934 = !DILocation(line: 501, column: 20, scope: !3933)
!3935 = !DILocation(line: 501, column: 25, scope: !3933)
!3936 = !DILocation(line: 501, column: 31, scope: !3933)
!3937 = !DILocation(line: 501, column: 4, scope: !3933)
!3938 = !DILocation(line: 503, column: 13, scope: !3933)
!3939 = !DILocation(line: 503, column: 12, scope: !3933)
!3940 = !DILocation(line: 503, column: 4, scope: !3933)
!3941 = !DILocation(line: 503, column: 10, scope: !3933)
!3942 = !DILocation(line: 504, column: 13, scope: !3933)
!3943 = !DILocation(line: 504, column: 4, scope: !3933)
!3944 = !DILocation(line: 504, column: 10, scope: !3933)
!3945 = !DILocation(line: 506, column: 16, scope: !3933)
!3946 = !DILocation(line: 506, column: 22, scope: !3933)
!3947 = !DILocation(line: 506, column: 30, scope: !3933)
!3948 = !DILocation(line: 506, column: 36, scope: !3933)
!3949 = !DILocation(line: 506, column: 44, scope: !3933)
!3950 = !DILocation(line: 506, column: 4, scope: !3933)
!3951 = !DILocation(line: 507, column: 16, scope: !3933)
!3952 = !DILocation(line: 507, column: 22, scope: !3933)
!3953 = !DILocation(line: 507, column: 30, scope: !3933)
!3954 = !DILocation(line: 507, column: 36, scope: !3933)
!3955 = !DILocation(line: 507, column: 44, scope: !3933)
!3956 = !DILocation(line: 507, column: 4, scope: !3933)
!3957 = !DILocation(line: 509, column: 2, scope: !3864)
!3958 = !DILocation(line: 510, column: 11, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 510, column: 11)
!3960 = !DILocation(line: 510, column: 24, scope: !3959)
!3961 = !DILocation(line: 510, column: 11, scope: !3860)
!3962 = !DILocation(line: 511, column: 14, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 510, column: 51)
!3964 = !DILocation(line: 511, column: 20, scope: !3963)
!3965 = !DILocation(line: 511, column: 28, scope: !3963)
!3966 = !DILocation(line: 511, column: 3, scope: !3963)
!3967 = !DILocation(line: 512, column: 2, scope: !3963)
!3968 = !DILocation(line: 513, column: 11, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 513, column: 11)
!3970 = !DILocation(line: 513, column: 24, scope: !3969)
!3971 = !DILocation(line: 513, column: 11, scope: !3959)
!3972 = !DILocation(line: 514, column: 14, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 513, column: 52)
!3974 = !DILocation(line: 514, column: 20, scope: !3973)
!3975 = !DILocation(line: 514, column: 28, scope: !3973)
!3976 = !DILocation(line: 514, column: 3, scope: !3973)
!3977 = !DILocation(line: 515, column: 2, scope: !3973)
!3978 = !DILocation(line: 519, column: 1, scope: !3839)
!3979 = distinct !DISubprogram(name: "len_v2", scope: !3039, file: !3039, line: 691, type: !3741, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3980 = !DILocalVariable(name: "v", arg: 1, scope: !3979, file: !3039, line: 691, type: !3042)
!3981 = !DILocation(line: 691, column: 34, scope: !3979)
!3982 = !DILocation(line: 693, column: 15, scope: !3979)
!3983 = !DILocation(line: 693, column: 22, scope: !3979)
!3984 = !DILocation(line: 693, column: 20, scope: !3979)
!3985 = !DILocation(line: 693, column: 29, scope: !3979)
!3986 = !DILocation(line: 693, column: 36, scope: !3979)
!3987 = !DILocation(line: 693, column: 34, scope: !3979)
!3988 = !DILocation(line: 693, column: 27, scope: !3979)
!3989 = !DILocation(line: 693, column: 9, scope: !3979)
!3990 = !DILocation(line: 693, column: 2, scope: !3979)
!3991 = distinct !DISubprogram(name: "mul_v2_fl", scope: !3039, file: !3039, line: 380, type: !3992, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{null, !639, !71}
!3994 = !DILocalVariable(name: "r", arg: 1, scope: !3991, file: !3039, line: 380, type: !639)
!3995 = !DILocation(line: 380, column: 30, scope: !3991)
!3996 = !DILocalVariable(name: "f", arg: 2, scope: !3991, file: !3039, line: 380, type: !71)
!3997 = !DILocation(line: 380, column: 42, scope: !3991)
!3998 = !DILocation(line: 382, column: 10, scope: !3991)
!3999 = !DILocation(line: 382, column: 2, scope: !3991)
!4000 = !DILocation(line: 382, column: 7, scope: !3991)
!4001 = !DILocation(line: 383, column: 10, scope: !3991)
!4002 = !DILocation(line: 383, column: 2, scope: !3991)
!4003 = !DILocation(line: 383, column: 7, scope: !3991)
!4004 = !DILocation(line: 384, column: 1, scope: !3991)
!4005 = distinct !DISubprogram(name: "add_v2_v2v2", scope: !3039, file: !3039, line: 290, type: !3706, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4006 = !DILocalVariable(name: "r", arg: 1, scope: !4005, file: !3039, line: 290, type: !639)
!4007 = !DILocation(line: 290, column: 32, scope: !4005)
!4008 = !DILocalVariable(name: "a", arg: 2, scope: !4005, file: !3039, line: 290, type: !3042)
!4009 = !DILocation(line: 290, column: 50, scope: !4005)
!4010 = !DILocalVariable(name: "b", arg: 3, scope: !4005, file: !3039, line: 290, type: !3042)
!4011 = !DILocation(line: 290, column: 68, scope: !4005)
!4012 = !DILocation(line: 292, column: 9, scope: !4005)
!4013 = !DILocation(line: 292, column: 16, scope: !4005)
!4014 = !DILocation(line: 292, column: 14, scope: !4005)
!4015 = !DILocation(line: 292, column: 2, scope: !4005)
!4016 = !DILocation(line: 292, column: 7, scope: !4005)
!4017 = !DILocation(line: 293, column: 9, scope: !4005)
!4018 = !DILocation(line: 293, column: 16, scope: !4005)
!4019 = !DILocation(line: 293, column: 14, scope: !4005)
!4020 = !DILocation(line: 293, column: 2, scope: !4005)
!4021 = !DILocation(line: 293, column: 7, scope: !4005)
!4022 = !DILocation(line: 294, column: 1, scope: !4005)
!4023 = distinct !DISubprogram(name: "copy_v3_v3", scope: !3039, file: !3039, line: 64, type: !3040, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4024 = !DILocalVariable(name: "r", arg: 1, scope: !4023, file: !3039, line: 64, type: !639)
!4025 = !DILocation(line: 64, column: 31, scope: !4023)
!4026 = !DILocalVariable(name: "a", arg: 2, scope: !4023, file: !3039, line: 64, type: !3042)
!4027 = !DILocation(line: 64, column: 49, scope: !4023)
!4028 = !DILocation(line: 66, column: 9, scope: !4023)
!4029 = !DILocation(line: 66, column: 2, scope: !4023)
!4030 = !DILocation(line: 66, column: 7, scope: !4023)
!4031 = !DILocation(line: 67, column: 9, scope: !4023)
!4032 = !DILocation(line: 67, column: 2, scope: !4023)
!4033 = !DILocation(line: 67, column: 7, scope: !4023)
!4034 = !DILocation(line: 68, column: 9, scope: !4023)
!4035 = !DILocation(line: 68, column: 2, scope: !4023)
!4036 = !DILocation(line: 68, column: 7, scope: !4023)
!4037 = !DILocation(line: 69, column: 1, scope: !4023)
!4038 = distinct !DISubprogram(name: "BKE_mask_get_handle_point_adjacent", scope: !3, file: !3, line: 1280, type: !4039, scopeLine: 1282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{null, !2343, !2355, !4041, !4041}
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!4042 = !DILocalVariable(name: "spline", arg: 1, scope: !4038, file: !3, line: 1280, type: !2343)
!4043 = !DILocation(line: 1280, column: 53, scope: !4038)
!4044 = !DILocalVariable(name: "point", arg: 2, scope: !4038, file: !3, line: 1280, type: !2355)
!4045 = !DILocation(line: 1280, column: 78, scope: !4038)
!4046 = !DILocalVariable(name: "r_point_prev", arg: 3, scope: !4038, file: !3, line: 1281, type: !4041)
!4047 = !DILocation(line: 1281, column: 59, scope: !4038)
!4048 = !DILocalVariable(name: "r_point_next", arg: 4, scope: !4038, file: !3, line: 1281, type: !4041)
!4049 = !DILocation(line: 1281, column: 91, scope: !4038)
!4050 = !DILocalVariable(name: "points_array", scope: !4038, file: !3, line: 1284, type: !2355)
!4051 = !DILocation(line: 1284, column: 19, scope: !4038)
!4052 = !DILocation(line: 1284, column: 73, scope: !4038)
!4053 = !DILocation(line: 1284, column: 81, scope: !4038)
!4054 = !DILocation(line: 1284, column: 34, scope: !4038)
!4055 = !DILocation(line: 1286, column: 41, scope: !4038)
!4056 = !DILocation(line: 1286, column: 49, scope: !4038)
!4057 = !DILocation(line: 1286, column: 63, scope: !4038)
!4058 = !DILocation(line: 1286, column: 18, scope: !4038)
!4059 = !DILocation(line: 1286, column: 3, scope: !4038)
!4060 = !DILocation(line: 1286, column: 16, scope: !4038)
!4061 = !DILocation(line: 1287, column: 41, scope: !4038)
!4062 = !DILocation(line: 1287, column: 49, scope: !4038)
!4063 = !DILocation(line: 1287, column: 63, scope: !4038)
!4064 = !DILocation(line: 1287, column: 18, scope: !4038)
!4065 = !DILocation(line: 1287, column: 3, scope: !4038)
!4066 = !DILocation(line: 1287, column: 16, scope: !4038)
!4067 = !DILocation(line: 1288, column: 1, scope: !4038)
!4068 = distinct !DISubprogram(name: "orthogonal_direction_get", scope: !3, file: !3, line: 545, type: !4069, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{null, !639, !639}
!4071 = !DILocalVariable(name: "vec", arg: 1, scope: !4068, file: !3, line: 545, type: !639)
!4072 = !DILocation(line: 545, column: 48, scope: !4068)
!4073 = !DILocalVariable(name: "result", arg: 2, scope: !4068, file: !3, line: 545, type: !639)
!4074 = !DILocation(line: 545, column: 62, scope: !4068)
!4075 = !DILocation(line: 547, column: 15, scope: !4068)
!4076 = !DILocation(line: 547, column: 14, scope: !4068)
!4077 = !DILocation(line: 547, column: 2, scope: !4068)
!4078 = !DILocation(line: 547, column: 12, scope: !4068)
!4079 = !DILocation(line: 548, column: 14, scope: !4068)
!4080 = !DILocation(line: 548, column: 2, scope: !4068)
!4081 = !DILocation(line: 548, column: 12, scope: !4068)
!4082 = !DILocation(line: 549, column: 15, scope: !4068)
!4083 = !DILocation(line: 549, column: 2, scope: !4068)
!4084 = !DILocation(line: 550, column: 1, scope: !4068)
!4085 = distinct !DISubprogram(name: "normalize_v2", scope: !3039, file: !3039, line: 783, type: !4086, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!71, !639}
!4088 = !DILocalVariable(name: "n", arg: 1, scope: !4085, file: !3039, line: 783, type: !639)
!4089 = !DILocation(line: 783, column: 34, scope: !4085)
!4090 = !DILocation(line: 785, column: 25, scope: !4085)
!4091 = !DILocation(line: 785, column: 28, scope: !4085)
!4092 = !DILocation(line: 785, column: 9, scope: !4085)
!4093 = !DILocation(line: 785, column: 2, scope: !4085)
!4094 = distinct !DISubprogram(name: "BKE_mask_point_weight_scalar", scope: !3, file: !3, line: 614, type: !4095, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4095 = !DISubroutineType(types: !4096)
!4096 = !{!71, !2343, !2355, !3043}
!4097 = !DILocalVariable(name: "spline", arg: 1, scope: !4094, file: !3, line: 614, type: !2343)
!4098 = !DILocation(line: 614, column: 48, scope: !4094)
!4099 = !DILocalVariable(name: "point", arg: 2, scope: !4094, file: !3, line: 614, type: !2355)
!4100 = !DILocation(line: 614, column: 73, scope: !4094)
!4101 = !DILocalVariable(name: "u", arg: 3, scope: !4094, file: !3, line: 614, type: !3043)
!4102 = !DILocation(line: 614, column: 92, scope: !4094)
!4103 = !DILocalVariable(name: "points_array", scope: !4094, file: !3, line: 616, type: !2355)
!4104 = !DILocation(line: 616, column: 19, scope: !4094)
!4105 = !DILocation(line: 616, column: 73, scope: !4094)
!4106 = !DILocation(line: 616, column: 81, scope: !4094)
!4107 = !DILocation(line: 616, column: 34, scope: !4094)
!4108 = !DILocalVariable(name: "bezt", scope: !4094, file: !3, line: 617, type: !3482)
!4109 = !DILocation(line: 617, column: 13, scope: !4094)
!4110 = !DILocation(line: 617, column: 21, scope: !4094)
!4111 = !DILocation(line: 617, column: 28, scope: !4094)
!4112 = !DILocalVariable(name: "bezt_next", scope: !4094, file: !3, line: 617, type: !3482)
!4113 = !DILocation(line: 617, column: 35, scope: !4094)
!4114 = !DILocation(line: 619, column: 46, scope: !4094)
!4115 = !DILocation(line: 619, column: 54, scope: !4094)
!4116 = !DILocation(line: 619, column: 68, scope: !4094)
!4117 = !DILocation(line: 619, column: 14, scope: !4094)
!4118 = !DILocation(line: 619, column: 12, scope: !4094)
!4119 = !DILocation(line: 621, column: 7, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 621, column: 6)
!4121 = !DILocation(line: 621, column: 6, scope: !4094)
!4122 = !DILocation(line: 622, column: 10, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 621, column: 18)
!4124 = !DILocation(line: 622, column: 16, scope: !4123)
!4125 = !DILocation(line: 622, column: 3, scope: !4123)
!4126 = !DILocation(line: 624, column: 11, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 624, column: 11)
!4128 = !DILocation(line: 624, column: 13, scope: !4127)
!4129 = !DILocation(line: 624, column: 11, scope: !4120)
!4130 = !DILocation(line: 625, column: 10, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 624, column: 22)
!4132 = !DILocation(line: 625, column: 16, scope: !4131)
!4133 = !DILocation(line: 625, column: 3, scope: !4131)
!4134 = !DILocation(line: 627, column: 11, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 627, column: 11)
!4136 = !DILocation(line: 627, column: 13, scope: !4135)
!4137 = !DILocation(line: 627, column: 11, scope: !4127)
!4138 = !DILocation(line: 628, column: 10, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 627, column: 22)
!4140 = !DILocation(line: 628, column: 21, scope: !4139)
!4141 = !DILocation(line: 628, column: 3, scope: !4139)
!4142 = !DILocation(line: 631, column: 35, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 630, column: 7)
!4144 = !DILocation(line: 631, column: 41, scope: !4143)
!4145 = !DILocation(line: 631, column: 52, scope: !4143)
!4146 = !DILocation(line: 631, column: 10, scope: !4143)
!4147 = !DILocation(line: 631, column: 3, scope: !4143)
!4148 = !DILocation(line: 633, column: 1, scope: !4094)
!4149 = distinct !DISubprogram(name: "mask_point_interp_weight", scope: !3, file: !3, line: 609, type: !4150, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!71, !3482, !3482, !3043}
!4152 = !DILocalVariable(name: "bezt", arg: 1, scope: !4149, file: !3, line: 609, type: !3482)
!4153 = !DILocation(line: 609, column: 50, scope: !4149)
!4154 = !DILocalVariable(name: "bezt_next", arg: 2, scope: !4149, file: !3, line: 609, type: !3482)
!4155 = !DILocation(line: 609, column: 67, scope: !4149)
!4156 = !DILocalVariable(name: "u", arg: 3, scope: !4149, file: !3, line: 609, type: !3043)
!4157 = !DILocation(line: 609, column: 90, scope: !4149)
!4158 = !DILocation(line: 611, column: 10, scope: !4149)
!4159 = !DILocation(line: 611, column: 16, scope: !4149)
!4160 = !DILocation(line: 611, column: 33, scope: !4149)
!4161 = !DILocation(line: 611, column: 31, scope: !4149)
!4162 = !DILocation(line: 611, column: 23, scope: !4149)
!4163 = !DILocation(line: 611, column: 40, scope: !4149)
!4164 = !DILocation(line: 611, column: 51, scope: !4149)
!4165 = !DILocation(line: 611, column: 60, scope: !4149)
!4166 = !DILocation(line: 611, column: 58, scope: !4149)
!4167 = !DILocation(line: 611, column: 37, scope: !4149)
!4168 = !DILocation(line: 611, column: 2, scope: !4149)
!4169 = distinct !DISubprogram(name: "BKE_mask_point_weight", scope: !3, file: !3, line: 635, type: !4095, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4170 = !DILocalVariable(name: "spline", arg: 1, scope: !4169, file: !3, line: 635, type: !2343)
!4171 = !DILocation(line: 635, column: 41, scope: !4169)
!4172 = !DILocalVariable(name: "point", arg: 2, scope: !4169, file: !3, line: 635, type: !2355)
!4173 = !DILocation(line: 635, column: 66, scope: !4169)
!4174 = !DILocalVariable(name: "u", arg: 3, scope: !4169, file: !3, line: 635, type: !3043)
!4175 = !DILocation(line: 635, column: 85, scope: !4169)
!4176 = !DILocalVariable(name: "points_array", scope: !4169, file: !3, line: 637, type: !2355)
!4177 = !DILocation(line: 637, column: 19, scope: !4169)
!4178 = !DILocation(line: 637, column: 73, scope: !4169)
!4179 = !DILocation(line: 637, column: 81, scope: !4169)
!4180 = !DILocation(line: 637, column: 34, scope: !4169)
!4181 = !DILocalVariable(name: "bezt", scope: !4169, file: !3, line: 638, type: !3482)
!4182 = !DILocation(line: 638, column: 13, scope: !4169)
!4183 = !DILocation(line: 638, column: 21, scope: !4169)
!4184 = !DILocation(line: 638, column: 28, scope: !4169)
!4185 = !DILocalVariable(name: "bezt_next", scope: !4169, file: !3, line: 638, type: !3482)
!4186 = !DILocation(line: 638, column: 35, scope: !4169)
!4187 = !DILocation(line: 640, column: 46, scope: !4169)
!4188 = !DILocation(line: 640, column: 54, scope: !4169)
!4189 = !DILocation(line: 640, column: 68, scope: !4169)
!4190 = !DILocation(line: 640, column: 14, scope: !4169)
!4191 = !DILocation(line: 640, column: 12, scope: !4169)
!4192 = !DILocation(line: 642, column: 7, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4169, file: !3, line: 642, column: 6)
!4194 = !DILocation(line: 642, column: 6, scope: !4169)
!4195 = !DILocation(line: 643, column: 10, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4193, file: !3, line: 642, column: 18)
!4197 = !DILocation(line: 643, column: 16, scope: !4196)
!4198 = !DILocation(line: 643, column: 3, scope: !4196)
!4199 = !DILocation(line: 645, column: 11, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4193, file: !3, line: 645, column: 11)
!4201 = !DILocation(line: 645, column: 13, scope: !4200)
!4202 = !DILocation(line: 645, column: 11, scope: !4193)
!4203 = !DILocation(line: 646, column: 10, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 645, column: 22)
!4205 = !DILocation(line: 646, column: 16, scope: !4204)
!4206 = !DILocation(line: 646, column: 3, scope: !4204)
!4207 = !DILocation(line: 648, column: 11, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 648, column: 11)
!4209 = !DILocation(line: 648, column: 13, scope: !4208)
!4210 = !DILocation(line: 648, column: 11, scope: !4200)
!4211 = !DILocation(line: 649, column: 10, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 648, column: 22)
!4213 = !DILocation(line: 649, column: 21, scope: !4212)
!4214 = !DILocation(line: 649, column: 3, scope: !4212)
!4215 = !DILocalVariable(name: "cur_u", scope: !4216, file: !3, line: 652, type: !71)
!4216 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 651, column: 7)
!4217 = !DILocation(line: 652, column: 9, scope: !4216)
!4218 = !DILocalVariable(name: "cur_w", scope: !4216, file: !3, line: 652, type: !71)
!4219 = !DILocation(line: 652, column: 23, scope: !4216)
!4220 = !DILocalVariable(name: "next_u", scope: !4216, file: !3, line: 652, type: !71)
!4221 = !DILocation(line: 652, column: 37, scope: !4216)
!4222 = !DILocalVariable(name: "next_w", scope: !4216, file: !3, line: 652, type: !71)
!4223 = !DILocation(line: 652, column: 52, scope: !4216)
!4224 = !DILocalVariable(name: "fac", scope: !4216, file: !3, line: 652, type: !71)
!4225 = !DILocation(line: 652, column: 67, scope: !4216)
!4226 = !DILocalVariable(name: "i", scope: !4216, file: !3, line: 653, type: !35)
!4227 = !DILocation(line: 653, column: 7, scope: !4216)
!4228 = !DILocation(line: 655, column: 10, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4216, file: !3, line: 655, column: 3)
!4230 = !DILocation(line: 655, column: 8, scope: !4229)
!4231 = !DILocation(line: 655, column: 15, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 655, column: 3)
!4233 = !DILocation(line: 655, column: 20, scope: !4232)
!4234 = !DILocation(line: 655, column: 27, scope: !4232)
!4235 = !DILocation(line: 655, column: 17, scope: !4232)
!4236 = !DILocation(line: 655, column: 3, scope: !4229)
!4237 = !DILocation(line: 657, column: 8, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !3, line: 657, column: 8)
!4239 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 655, column: 40)
!4240 = !DILocation(line: 657, column: 10, scope: !4238)
!4241 = !DILocation(line: 657, column: 8, scope: !4239)
!4242 = !DILocation(line: 658, column: 11, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 657, column: 16)
!4244 = !DILocation(line: 659, column: 11, scope: !4243)
!4245 = !DILocation(line: 660, column: 4, scope: !4243)
!4246 = !DILocation(line: 662, column: 13, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 661, column: 9)
!4248 = !DILocation(line: 662, column: 20, scope: !4247)
!4249 = !DILocation(line: 662, column: 23, scope: !4247)
!4250 = !DILocation(line: 662, column: 25, scope: !4247)
!4251 = !DILocation(line: 662, column: 30, scope: !4247)
!4252 = !DILocation(line: 662, column: 11, scope: !4247)
!4253 = !DILocation(line: 663, column: 13, scope: !4247)
!4254 = !DILocation(line: 663, column: 20, scope: !4247)
!4255 = !DILocation(line: 663, column: 23, scope: !4247)
!4256 = !DILocation(line: 663, column: 25, scope: !4247)
!4257 = !DILocation(line: 663, column: 30, scope: !4247)
!4258 = !DILocation(line: 663, column: 11, scope: !4247)
!4259 = !DILocation(line: 666, column: 8, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4239, file: !3, line: 666, column: 8)
!4261 = !DILocation(line: 666, column: 13, scope: !4260)
!4262 = !DILocation(line: 666, column: 20, scope: !4260)
!4263 = !DILocation(line: 666, column: 10, scope: !4260)
!4264 = !DILocation(line: 666, column: 8, scope: !4239)
!4265 = !DILocation(line: 667, column: 12, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 666, column: 28)
!4267 = !DILocation(line: 668, column: 12, scope: !4266)
!4268 = !DILocation(line: 669, column: 4, scope: !4266)
!4269 = !DILocation(line: 671, column: 14, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 670, column: 9)
!4271 = !DILocation(line: 671, column: 21, scope: !4270)
!4272 = !DILocation(line: 671, column: 24, scope: !4270)
!4273 = !DILocation(line: 671, column: 27, scope: !4270)
!4274 = !DILocation(line: 671, column: 12, scope: !4270)
!4275 = !DILocation(line: 672, column: 14, scope: !4270)
!4276 = !DILocation(line: 672, column: 21, scope: !4270)
!4277 = !DILocation(line: 672, column: 24, scope: !4270)
!4278 = !DILocation(line: 672, column: 27, scope: !4270)
!4279 = !DILocation(line: 672, column: 12, scope: !4270)
!4280 = !DILocation(line: 675, column: 8, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4239, file: !3, line: 675, column: 8)
!4282 = !DILocation(line: 675, column: 13, scope: !4281)
!4283 = !DILocation(line: 675, column: 10, scope: !4281)
!4284 = !DILocation(line: 675, column: 19, scope: !4281)
!4285 = !DILocation(line: 675, column: 22, scope: !4281)
!4286 = !DILocation(line: 675, column: 27, scope: !4281)
!4287 = !DILocation(line: 675, column: 24, scope: !4281)
!4288 = !DILocation(line: 675, column: 8, scope: !4239)
!4289 = !DILocation(line: 676, column: 5, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4281, file: !3, line: 675, column: 35)
!4291 = !DILocation(line: 678, column: 3, scope: !4239)
!4292 = !DILocation(line: 655, column: 36, scope: !4232)
!4293 = !DILocation(line: 655, column: 3, scope: !4232)
!4294 = distinct !{!4294, !4236, !4295}
!4295 = !DILocation(line: 678, column: 3, scope: !4229)
!4296 = !DILocation(line: 680, column: 10, scope: !4216)
!4297 = !DILocation(line: 680, column: 14, scope: !4216)
!4298 = !DILocation(line: 680, column: 12, scope: !4216)
!4299 = !DILocation(line: 680, column: 24, scope: !4216)
!4300 = !DILocation(line: 680, column: 33, scope: !4216)
!4301 = !DILocation(line: 680, column: 31, scope: !4216)
!4302 = !DILocation(line: 680, column: 21, scope: !4216)
!4303 = !DILocation(line: 680, column: 7, scope: !4216)
!4304 = !DILocation(line: 682, column: 38, scope: !4216)
!4305 = !DILocation(line: 682, column: 44, scope: !4216)
!4306 = !DILocation(line: 682, column: 55, scope: !4216)
!4307 = !DILocation(line: 682, column: 13, scope: !4216)
!4308 = !DILocation(line: 682, column: 10, scope: !4216)
!4309 = !DILocation(line: 683, column: 38, scope: !4216)
!4310 = !DILocation(line: 683, column: 44, scope: !4216)
!4311 = !DILocation(line: 683, column: 55, scope: !4216)
!4312 = !DILocation(line: 683, column: 13, scope: !4216)
!4313 = !DILocation(line: 683, column: 10, scope: !4216)
!4314 = !DILocation(line: 685, column: 7, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4216, file: !3, line: 685, column: 7)
!4316 = !DILocation(line: 685, column: 15, scope: !4315)
!4317 = !DILocation(line: 685, column: 29, scope: !4315)
!4318 = !DILocation(line: 685, column: 7, scope: !4216)
!4319 = !DILocation(line: 686, column: 11, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 685, column: 57)
!4321 = !DILocation(line: 686, column: 20, scope: !4320)
!4322 = !DILocation(line: 686, column: 29, scope: !4320)
!4323 = !DILocation(line: 686, column: 27, scope: !4320)
!4324 = !DILocation(line: 686, column: 46, scope: !4320)
!4325 = !DILocation(line: 686, column: 44, scope: !4320)
!4326 = !DILocation(line: 686, column: 52, scope: !4320)
!4327 = !DILocation(line: 686, column: 50, scope: !4320)
!4328 = !DILocation(line: 686, column: 65, scope: !4320)
!4329 = !DILocation(line: 686, column: 63, scope: !4320)
!4330 = !DILocation(line: 686, column: 71, scope: !4320)
!4331 = !DILocation(line: 686, column: 69, scope: !4320)
!4332 = !DILocation(line: 686, column: 77, scope: !4320)
!4333 = !DILocation(line: 686, column: 75, scope: !4320)
!4334 = !DILocation(line: 686, column: 56, scope: !4320)
!4335 = !DILocation(line: 686, column: 36, scope: !4320)
!4336 = !DILocation(line: 686, column: 17, scope: !4320)
!4337 = !DILocation(line: 686, column: 4, scope: !4320)
!4338 = !DILocation(line: 689, column: 19, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 688, column: 8)
!4340 = !DILocation(line: 689, column: 17, scope: !4339)
!4341 = !DILocation(line: 689, column: 26, scope: !4339)
!4342 = !DILocation(line: 689, column: 24, scope: !4339)
!4343 = !DILocation(line: 689, column: 34, scope: !4339)
!4344 = !DILocation(line: 689, column: 40, scope: !4339)
!4345 = !DILocation(line: 689, column: 38, scope: !4339)
!4346 = !DILocation(line: 689, column: 32, scope: !4339)
!4347 = !DILocation(line: 689, column: 4, scope: !4339)
!4348 = !DILocation(line: 692, column: 1, scope: !4169)
!4349 = distinct !DISubprogram(name: "BKE_mask_point_sort_uw", scope: !3, file: !3, line: 694, type: !4350, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{!4352, !2355, !2364}
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!4353 = !DILocalVariable(name: "point", arg: 1, scope: !4349, file: !3, line: 694, type: !2355)
!4354 = !DILocation(line: 694, column: 60, scope: !4349)
!4355 = !DILocalVariable(name: "uw", arg: 2, scope: !4349, file: !3, line: 694, type: !2364)
!4356 = !DILocation(line: 694, column: 86, scope: !4349)
!4357 = !DILocation(line: 696, column: 6, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 696, column: 6)
!4359 = !DILocation(line: 696, column: 13, scope: !4358)
!4360 = !DILocation(line: 696, column: 20, scope: !4358)
!4361 = !DILocation(line: 696, column: 6, scope: !4349)
!4362 = !DILocalVariable(name: "idx", scope: !4363, file: !3, line: 697, type: !35)
!4363 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 696, column: 25)
!4364 = !DILocation(line: 697, column: 7, scope: !4363)
!4365 = !DILocation(line: 697, column: 13, scope: !4363)
!4366 = !DILocation(line: 697, column: 18, scope: !4363)
!4367 = !DILocation(line: 697, column: 25, scope: !4363)
!4368 = !DILocation(line: 697, column: 16, scope: !4363)
!4369 = !DILocation(line: 699, column: 7, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 699, column: 7)
!4371 = !DILocation(line: 699, column: 11, scope: !4370)
!4372 = !DILocation(line: 699, column: 15, scope: !4370)
!4373 = !DILocation(line: 699, column: 18, scope: !4370)
!4374 = !DILocation(line: 699, column: 25, scope: !4370)
!4375 = !DILocation(line: 699, column: 28, scope: !4370)
!4376 = !DILocation(line: 699, column: 32, scope: !4370)
!4377 = !DILocation(line: 699, column: 37, scope: !4370)
!4378 = !DILocation(line: 699, column: 41, scope: !4370)
!4379 = !DILocation(line: 699, column: 45, scope: !4370)
!4380 = !DILocation(line: 699, column: 39, scope: !4370)
!4381 = !DILocation(line: 699, column: 7, scope: !4363)
!4382 = !DILocation(line: 700, column: 4, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 699, column: 48)
!4384 = !DILocation(line: 700, column: 11, scope: !4383)
!4385 = !DILocation(line: 700, column: 15, scope: !4383)
!4386 = !DILocation(line: 700, column: 19, scope: !4383)
!4387 = !DILocation(line: 700, column: 22, scope: !4383)
!4388 = !DILocation(line: 700, column: 29, scope: !4383)
!4389 = !DILocation(line: 700, column: 32, scope: !4383)
!4390 = !DILocation(line: 700, column: 36, scope: !4383)
!4391 = !DILocation(line: 700, column: 41, scope: !4383)
!4392 = !DILocation(line: 700, column: 45, scope: !4383)
!4393 = !DILocation(line: 700, column: 52, scope: !4383)
!4394 = !DILocation(line: 700, column: 55, scope: !4383)
!4395 = !DILocation(line: 700, column: 60, scope: !4383)
!4396 = !DILocation(line: 700, column: 43, scope: !4383)
!4397 = !DILocation(line: 0, scope: !4383)
!4398 = !DILocalVariable(name: "sw_ap", scope: !4399, file: !3, line: 701, type: !2365)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 701, column: 5)
!4400 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 700, column: 63)
!4401 = !DILocation(line: 701, column: 5, scope: !4399)
!4402 = !DILocation(line: 702, column: 8, scope: !4400)
!4403 = distinct !{!4403, !4382, !4404}
!4404 = !DILocation(line: 703, column: 4, scope: !4383)
!4405 = !DILocation(line: 704, column: 3, scope: !4383)
!4406 = !DILocation(line: 706, column: 7, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 706, column: 7)
!4408 = !DILocation(line: 706, column: 13, scope: !4407)
!4409 = !DILocation(line: 706, column: 20, scope: !4407)
!4410 = !DILocation(line: 706, column: 27, scope: !4407)
!4411 = !DILocation(line: 706, column: 11, scope: !4407)
!4412 = !DILocation(line: 706, column: 31, scope: !4407)
!4413 = !DILocation(line: 706, column: 34, scope: !4407)
!4414 = !DILocation(line: 706, column: 41, scope: !4407)
!4415 = !DILocation(line: 706, column: 44, scope: !4407)
!4416 = !DILocation(line: 706, column: 48, scope: !4407)
!4417 = !DILocation(line: 706, column: 53, scope: !4407)
!4418 = !DILocation(line: 706, column: 57, scope: !4407)
!4419 = !DILocation(line: 706, column: 61, scope: !4407)
!4420 = !DILocation(line: 706, column: 55, scope: !4407)
!4421 = !DILocation(line: 706, column: 7, scope: !4363)
!4422 = !DILocation(line: 707, column: 4, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 706, column: 64)
!4424 = !DILocation(line: 707, column: 11, scope: !4423)
!4425 = !DILocation(line: 707, column: 17, scope: !4423)
!4426 = !DILocation(line: 707, column: 24, scope: !4423)
!4427 = !DILocation(line: 707, column: 31, scope: !4423)
!4428 = !DILocation(line: 707, column: 15, scope: !4423)
!4429 = !DILocation(line: 707, column: 35, scope: !4423)
!4430 = !DILocation(line: 707, column: 38, scope: !4423)
!4431 = !DILocation(line: 707, column: 45, scope: !4423)
!4432 = !DILocation(line: 707, column: 48, scope: !4423)
!4433 = !DILocation(line: 707, column: 52, scope: !4423)
!4434 = !DILocation(line: 707, column: 57, scope: !4423)
!4435 = !DILocation(line: 707, column: 61, scope: !4423)
!4436 = !DILocation(line: 707, column: 68, scope: !4423)
!4437 = !DILocation(line: 707, column: 71, scope: !4423)
!4438 = !DILocation(line: 707, column: 76, scope: !4423)
!4439 = !DILocation(line: 707, column: 59, scope: !4423)
!4440 = !DILocation(line: 0, scope: !4423)
!4441 = !DILocalVariable(name: "sw_ap", scope: !4442, file: !3, line: 708, type: !2365)
!4442 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 708, column: 5)
!4443 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 707, column: 79)
!4444 = !DILocation(line: 708, column: 5, scope: !4442)
!4445 = !DILocation(line: 709, column: 8, scope: !4443)
!4446 = distinct !{!4446, !4422, !4447}
!4447 = !DILocation(line: 710, column: 4, scope: !4423)
!4448 = !DILocation(line: 711, column: 3, scope: !4423)
!4449 = !DILocation(line: 713, column: 11, scope: !4363)
!4450 = !DILocation(line: 713, column: 18, scope: !4363)
!4451 = !DILocation(line: 713, column: 21, scope: !4363)
!4452 = !DILocation(line: 713, column: 3, scope: !4363)
!4453 = !DILocation(line: 716, column: 9, scope: !4349)
!4454 = !DILocation(line: 716, column: 2, scope: !4349)
!4455 = !DILocation(line: 717, column: 1, scope: !4349)
!4456 = distinct !DISubprogram(name: "BKE_mask_point_add_uw", scope: !3, file: !3, line: 719, type: !4457, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{null, !2355, !71, !71}
!4459 = !DILocalVariable(name: "point", arg: 1, scope: !4456, file: !3, line: 719, type: !2355)
!4460 = !DILocation(line: 719, column: 45, scope: !4456)
!4461 = !DILocalVariable(name: "u", arg: 2, scope: !4456, file: !3, line: 719, type: !71)
!4462 = !DILocation(line: 719, column: 58, scope: !4456)
!4463 = !DILocalVariable(name: "w", arg: 3, scope: !4456, file: !3, line: 719, type: !71)
!4464 = !DILocation(line: 719, column: 67, scope: !4456)
!4465 = !DILocation(line: 721, column: 7, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 721, column: 6)
!4467 = !DILocation(line: 721, column: 14, scope: !4466)
!4468 = !DILocation(line: 721, column: 6, scope: !4456)
!4469 = !DILocation(line: 722, column: 15, scope: !4466)
!4470 = !DILocation(line: 722, column: 3, scope: !4466)
!4471 = !DILocation(line: 722, column: 10, scope: !4466)
!4472 = !DILocation(line: 722, column: 13, scope: !4466)
!4473 = !DILocation(line: 724, column: 15, scope: !4466)
!4474 = !DILocation(line: 724, column: 3, scope: !4466)
!4475 = !DILocation(line: 724, column: 10, scope: !4466)
!4476 = !DILocation(line: 724, column: 13, scope: !4466)
!4477 = !DILocation(line: 726, column: 31, scope: !4456)
!4478 = !DILocation(line: 726, column: 2, scope: !4456)
!4479 = !DILocation(line: 726, column: 9, scope: !4456)
!4480 = !DILocation(line: 726, column: 12, scope: !4456)
!4481 = !DILocation(line: 726, column: 19, scope: !4456)
!4482 = !DILocation(line: 726, column: 27, scope: !4456)
!4483 = !DILocation(line: 726, column: 29, scope: !4456)
!4484 = !DILocation(line: 727, column: 31, scope: !4456)
!4485 = !DILocation(line: 727, column: 2, scope: !4456)
!4486 = !DILocation(line: 727, column: 9, scope: !4456)
!4487 = !DILocation(line: 727, column: 12, scope: !4456)
!4488 = !DILocation(line: 727, column: 19, scope: !4456)
!4489 = !DILocation(line: 727, column: 27, scope: !4456)
!4490 = !DILocation(line: 727, column: 29, scope: !4456)
!4491 = !DILocation(line: 728, column: 2, scope: !4456)
!4492 = !DILocation(line: 728, column: 9, scope: !4456)
!4493 = !DILocation(line: 728, column: 12, scope: !4456)
!4494 = !DILocation(line: 728, column: 19, scope: !4456)
!4495 = !DILocation(line: 728, column: 27, scope: !4456)
!4496 = !DILocation(line: 728, column: 32, scope: !4456)
!4497 = !DILocation(line: 730, column: 2, scope: !4456)
!4498 = !DILocation(line: 730, column: 9, scope: !4456)
!4499 = !DILocation(line: 730, column: 15, scope: !4456)
!4500 = !DILocation(line: 732, column: 25, scope: !4456)
!4501 = !DILocation(line: 732, column: 33, scope: !4456)
!4502 = !DILocation(line: 732, column: 40, scope: !4456)
!4503 = !DILocation(line: 732, column: 43, scope: !4456)
!4504 = !DILocation(line: 732, column: 50, scope: !4456)
!4505 = !DILocation(line: 732, column: 57, scope: !4456)
!4506 = !DILocation(line: 732, column: 2, scope: !4456)
!4507 = !DILocation(line: 733, column: 1, scope: !4456)
!4508 = distinct !DISubprogram(name: "BKE_mask_point_select_set", scope: !3, file: !3, line: 735, type: !4509, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{null, !2355, !4511}
!4511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1671)
!4512 = !DILocalVariable(name: "point", arg: 1, scope: !4508, file: !3, line: 735, type: !2355)
!4513 = !DILocation(line: 735, column: 49, scope: !4508)
!4514 = !DILocalVariable(name: "do_select", arg: 2, scope: !4508, file: !3, line: 735, type: !4511)
!4515 = !DILocation(line: 735, column: 67, scope: !4508)
!4516 = !DILocalVariable(name: "i", scope: !4508, file: !3, line: 737, type: !35)
!4517 = !DILocation(line: 737, column: 6, scope: !4508)
!4518 = !DILocation(line: 739, column: 6, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4508, file: !3, line: 739, column: 6)
!4520 = !DILocation(line: 739, column: 6, scope: !4508)
!4521 = !DILocation(line: 740, column: 3, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 740, column: 3)
!4523 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 739, column: 17)
!4524 = !DILocation(line: 741, column: 2, scope: !4523)
!4525 = !DILocation(line: 743, column: 3, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 743, column: 3)
!4527 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 742, column: 7)
!4528 = !DILocation(line: 746, column: 9, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4508, file: !3, line: 746, column: 2)
!4530 = !DILocation(line: 746, column: 7, scope: !4529)
!4531 = !DILocation(line: 746, column: 14, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 746, column: 2)
!4533 = !DILocation(line: 746, column: 18, scope: !4532)
!4534 = !DILocation(line: 746, column: 25, scope: !4532)
!4535 = !DILocation(line: 746, column: 16, scope: !4532)
!4536 = !DILocation(line: 746, column: 2, scope: !4529)
!4537 = !DILocation(line: 747, column: 7, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 747, column: 7)
!4539 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 746, column: 38)
!4540 = !DILocation(line: 747, column: 7, scope: !4539)
!4541 = !DILocation(line: 748, column: 4, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 747, column: 18)
!4543 = !DILocation(line: 748, column: 11, scope: !4542)
!4544 = !DILocation(line: 748, column: 14, scope: !4542)
!4545 = !DILocation(line: 748, column: 17, scope: !4542)
!4546 = !DILocation(line: 748, column: 22, scope: !4542)
!4547 = !DILocation(line: 749, column: 3, scope: !4542)
!4548 = !DILocation(line: 751, column: 4, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 750, column: 8)
!4550 = !DILocation(line: 751, column: 11, scope: !4549)
!4551 = !DILocation(line: 751, column: 14, scope: !4549)
!4552 = !DILocation(line: 751, column: 17, scope: !4549)
!4553 = !DILocation(line: 751, column: 22, scope: !4549)
!4554 = !DILocation(line: 753, column: 2, scope: !4539)
!4555 = !DILocation(line: 746, column: 34, scope: !4532)
!4556 = !DILocation(line: 746, column: 2, scope: !4532)
!4557 = distinct !{!4557, !4536, !4558}
!4558 = !DILocation(line: 753, column: 2, scope: !4529)
!4559 = !DILocation(line: 754, column: 1, scope: !4508)
!4560 = distinct !DISubprogram(name: "BKE_mask_point_select_set_handle", scope: !3, file: !3, line: 756, type: !4561, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4561 = !DISubroutineType(types: !4562)
!4562 = !{null, !2355, !4563, !4511}
!4563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3781)
!4564 = !DILocalVariable(name: "point", arg: 1, scope: !4560, file: !3, line: 756, type: !2355)
!4565 = !DILocation(line: 756, column: 56, scope: !4560)
!4566 = !DILocalVariable(name: "which_handle", arg: 2, scope: !4560, file: !3, line: 756, type: !4563)
!4567 = !DILocation(line: 756, column: 86, scope: !4560)
!4568 = !DILocalVariable(name: "do_select", arg: 3, scope: !4560, file: !3, line: 756, type: !4511)
!4569 = !DILocation(line: 756, column: 111, scope: !4560)
!4570 = !DILocation(line: 758, column: 6, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 758, column: 6)
!4572 = !DILocation(line: 758, column: 6, scope: !4560)
!4573 = !DILocation(line: 759, column: 7, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 759, column: 7)
!4575 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 758, column: 17)
!4576 = !DILocation(line: 759, column: 7, scope: !4575)
!4577 = !DILocation(line: 760, column: 4, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 759, column: 76)
!4579 = !DILocation(line: 760, column: 11, scope: !4578)
!4580 = !DILocation(line: 760, column: 16, scope: !4578)
!4581 = !DILocation(line: 760, column: 19, scope: !4578)
!4582 = !DILocation(line: 761, column: 4, scope: !4578)
!4583 = !DILocation(line: 761, column: 11, scope: !4578)
!4584 = !DILocation(line: 761, column: 16, scope: !4578)
!4585 = !DILocation(line: 761, column: 19, scope: !4578)
!4586 = !DILocation(line: 762, column: 3, scope: !4578)
!4587 = !DILocation(line: 763, column: 12, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 763, column: 12)
!4589 = !DILocation(line: 763, column: 25, scope: !4588)
!4590 = !DILocation(line: 763, column: 12, scope: !4574)
!4591 = !DILocation(line: 764, column: 4, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4588, file: !3, line: 763, column: 52)
!4593 = !DILocation(line: 764, column: 11, scope: !4592)
!4594 = !DILocation(line: 764, column: 16, scope: !4592)
!4595 = !DILocation(line: 764, column: 19, scope: !4592)
!4596 = !DILocation(line: 765, column: 3, scope: !4592)
!4597 = !DILocation(line: 766, column: 12, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4588, file: !3, line: 766, column: 12)
!4599 = !DILocation(line: 766, column: 25, scope: !4598)
!4600 = !DILocation(line: 766, column: 12, scope: !4588)
!4601 = !DILocation(line: 767, column: 4, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 766, column: 53)
!4603 = !DILocation(line: 767, column: 11, scope: !4602)
!4604 = !DILocation(line: 767, column: 16, scope: !4602)
!4605 = !DILocation(line: 767, column: 19, scope: !4602)
!4606 = !DILocation(line: 768, column: 3, scope: !4602)
!4607 = !DILocation(line: 772, column: 2, scope: !4575)
!4608 = !DILocation(line: 774, column: 7, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 774, column: 7)
!4610 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 773, column: 7)
!4611 = !DILocation(line: 774, column: 7, scope: !4610)
!4612 = !DILocation(line: 775, column: 4, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 774, column: 76)
!4614 = !DILocation(line: 775, column: 11, scope: !4613)
!4615 = !DILocation(line: 775, column: 16, scope: !4613)
!4616 = !DILocation(line: 775, column: 19, scope: !4613)
!4617 = !DILocation(line: 776, column: 4, scope: !4613)
!4618 = !DILocation(line: 776, column: 11, scope: !4613)
!4619 = !DILocation(line: 776, column: 16, scope: !4613)
!4620 = !DILocation(line: 776, column: 19, scope: !4613)
!4621 = !DILocation(line: 777, column: 3, scope: !4613)
!4622 = !DILocation(line: 778, column: 12, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 778, column: 12)
!4624 = !DILocation(line: 778, column: 25, scope: !4623)
!4625 = !DILocation(line: 778, column: 12, scope: !4609)
!4626 = !DILocation(line: 779, column: 4, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 778, column: 52)
!4628 = !DILocation(line: 779, column: 11, scope: !4627)
!4629 = !DILocation(line: 779, column: 16, scope: !4627)
!4630 = !DILocation(line: 779, column: 19, scope: !4627)
!4631 = !DILocation(line: 780, column: 3, scope: !4627)
!4632 = !DILocation(line: 781, column: 12, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 781, column: 12)
!4634 = !DILocation(line: 781, column: 25, scope: !4633)
!4635 = !DILocation(line: 781, column: 12, scope: !4623)
!4636 = !DILocation(line: 782, column: 4, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 781, column: 53)
!4638 = !DILocation(line: 782, column: 11, scope: !4637)
!4639 = !DILocation(line: 782, column: 16, scope: !4637)
!4640 = !DILocation(line: 782, column: 19, scope: !4637)
!4641 = !DILocation(line: 783, column: 3, scope: !4637)
!4642 = !DILocation(line: 788, column: 1, scope: !4560)
!4643 = distinct !DISubprogram(name: "BKE_mask_new", scope: !3, file: !3, line: 802, type: !4644, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{!525, !4646, !822}
!4646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4647, size: 64)
!4647 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !4648, line: 104, baseType: !4649)
!4648 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !4648, line: 53, size: 15232, elements: !4650)
!4650 = !{!4651, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4704}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4649, file: !4648, line: 54, baseType: !4652, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4649, file: !4648, line: 54, baseType: !4652, size: 64, offset: 64)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4649, file: !4648, line: 55, baseType: !139, size: 8192, offset: 128)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !4649, file: !4648, line: 56, baseType: !99, size: 16, offset: 8320)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !4649, file: !4648, line: 56, baseType: !99, size: 16, offset: 8336)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !4649, file: !4648, line: 57, baseType: !99, size: 16, offset: 8352)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !4649, file: !4648, line: 57, baseType: !99, size: 16, offset: 8368)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !4649, file: !4648, line: 58, baseType: !2220, size: 64, offset: 8384)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !4649, file: !4648, line: 59, baseType: !4661, size: 128, offset: 8448)
!4661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 128, elements: !4662)
!4662 = !{!4663}
!4663 = !DISubrange(count: 16)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !4649, file: !4648, line: 60, baseType: !99, size: 16, offset: 8576)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !4649, file: !4648, line: 62, baseType: !129, size: 64, offset: 8640)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !4649, file: !4648, line: 63, baseType: !89, size: 128, offset: 8704)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !4649, file: !4648, line: 64, baseType: !89, size: 128, offset: 8832)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !4649, file: !4648, line: 65, baseType: !89, size: 128, offset: 8960)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !4649, file: !4648, line: 66, baseType: !89, size: 128, offset: 9088)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !4649, file: !4648, line: 67, baseType: !89, size: 128, offset: 9216)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !4649, file: !4648, line: 68, baseType: !89, size: 128, offset: 9344)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4649, file: !4648, line: 69, baseType: !89, size: 128, offset: 9472)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !4649, file: !4648, line: 70, baseType: !89, size: 128, offset: 9600)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !4649, file: !4648, line: 71, baseType: !89, size: 128, offset: 9728)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !4649, file: !4648, line: 72, baseType: !89, size: 128, offset: 9856)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !4649, file: !4648, line: 73, baseType: !89, size: 128, offset: 9984)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !4649, file: !4648, line: 74, baseType: !89, size: 128, offset: 10112)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !4649, file: !4648, line: 75, baseType: !89, size: 128, offset: 10240)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4649, file: !4648, line: 76, baseType: !89, size: 128, offset: 10368)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !4649, file: !4648, line: 77, baseType: !89, size: 128, offset: 10496)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !4649, file: !4648, line: 78, baseType: !89, size: 128, offset: 10624)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !4649, file: !4648, line: 79, baseType: !89, size: 128, offset: 10752)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !4649, file: !4648, line: 80, baseType: !89, size: 128, offset: 10880)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !4649, file: !4648, line: 81, baseType: !89, size: 128, offset: 11008)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !4649, file: !4648, line: 82, baseType: !89, size: 128, offset: 11136)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !4649, file: !4648, line: 83, baseType: !89, size: 128, offset: 11264)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !4649, file: !4648, line: 84, baseType: !89, size: 128, offset: 11392)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !4649, file: !4648, line: 85, baseType: !89, size: 128, offset: 11520)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4649, file: !4648, line: 86, baseType: !89, size: 128, offset: 11648)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !4649, file: !4648, line: 87, baseType: !89, size: 128, offset: 11776)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !4649, file: !4648, line: 88, baseType: !89, size: 128, offset: 11904)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !4649, file: !4648, line: 89, baseType: !89, size: 128, offset: 12032)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !4649, file: !4648, line: 90, baseType: !89, size: 128, offset: 12160)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !4649, file: !4648, line: 91, baseType: !89, size: 128, offset: 12288)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !4649, file: !4648, line: 92, baseType: !89, size: 128, offset: 12416)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !4649, file: !4648, line: 93, baseType: !89, size: 128, offset: 12544)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !4649, file: !4648, line: 94, baseType: !89, size: 128, offset: 12672)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4649, file: !4648, line: 95, baseType: !89, size: 128, offset: 12800)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !4649, file: !4648, line: 96, baseType: !89, size: 128, offset: 12928)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !4649, file: !4648, line: 98, baseType: !452, size: 2048, offset: 13056)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !4649, file: !4648, line: 101, baseType: !4702, size: 64, offset: 15104)
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4703, size: 64)
!4703 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !4648, line: 49, flags: DIFlagFwdDecl)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4649, file: !4648, line: 103, baseType: !4705, size: 64, offset: 15168)
!4705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4706, size: 64)
!4706 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !4648, line: 51, flags: DIFlagFwdDecl)
!4707 = !DILocalVariable(name: "bmain", arg: 1, scope: !4643, file: !3, line: 802, type: !4646)
!4708 = !DILocation(line: 802, column: 26, scope: !4643)
!4709 = !DILocalVariable(name: "name", arg: 2, scope: !4643, file: !3, line: 802, type: !822)
!4710 = !DILocation(line: 802, column: 45, scope: !4643)
!4711 = !DILocalVariable(name: "mask", scope: !4643, file: !3, line: 804, type: !2493)
!4712 = !DILocation(line: 804, column: 8, scope: !4643)
!4713 = !DILocalVariable(name: "mask_name", scope: !4643, file: !3, line: 805, type: !168)
!4714 = !DILocation(line: 805, column: 7, scope: !4643)
!4715 = !DILocation(line: 807, column: 6, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 807, column: 6)
!4717 = !DILocation(line: 807, column: 11, scope: !4716)
!4718 = !DILocation(line: 807, column: 14, scope: !4716)
!4719 = !DILocation(line: 807, column: 6, scope: !4643)
!4720 = !DILocation(line: 808, column: 15, scope: !4716)
!4721 = !DILocation(line: 808, column: 26, scope: !4716)
!4722 = !DILocation(line: 808, column: 3, scope: !4716)
!4723 = !DILocation(line: 810, column: 10, scope: !4716)
!4724 = !DILocation(line: 810, column: 3, scope: !4716)
!4725 = !DILocation(line: 812, column: 20, scope: !4643)
!4726 = !DILocation(line: 812, column: 27, scope: !4643)
!4727 = !DILocation(line: 812, column: 9, scope: !4643)
!4728 = !DILocation(line: 812, column: 7, scope: !4643)
!4729 = !DILocation(line: 815, column: 2, scope: !4643)
!4730 = !DILocation(line: 815, column: 8, scope: !4643)
!4731 = !DILocation(line: 815, column: 13, scope: !4643)
!4732 = !DILocation(line: 816, column: 2, scope: !4643)
!4733 = !DILocation(line: 816, column: 8, scope: !4643)
!4734 = !DILocation(line: 816, column: 13, scope: !4643)
!4735 = !DILocation(line: 818, column: 9, scope: !4643)
!4736 = !DILocation(line: 818, column: 2, scope: !4643)
!4737 = distinct !DISubprogram(name: "mask_alloc", scope: !3, file: !3, line: 791, type: !4738, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!2493, !4646, !822}
!4740 = !DILocalVariable(name: "bmain", arg: 1, scope: !4737, file: !3, line: 791, type: !4646)
!4741 = !DILocation(line: 791, column: 31, scope: !4737)
!4742 = !DILocalVariable(name: "name", arg: 2, scope: !4737, file: !3, line: 791, type: !822)
!4743 = !DILocation(line: 791, column: 50, scope: !4737)
!4744 = !DILocalVariable(name: "mask", scope: !4737, file: !3, line: 793, type: !2493)
!4745 = !DILocation(line: 793, column: 8, scope: !4737)
!4746 = !DILocation(line: 795, column: 28, scope: !4737)
!4747 = !DILocation(line: 795, column: 43, scope: !4737)
!4748 = !DILocation(line: 795, column: 9, scope: !4737)
!4749 = !DILocation(line: 795, column: 7, scope: !4737)
!4750 = !DILocation(line: 797, column: 2, scope: !4737)
!4751 = !DILocation(line: 797, column: 8, scope: !4737)
!4752 = !DILocation(line: 797, column: 11, scope: !4737)
!4753 = !DILocation(line: 797, column: 16, scope: !4737)
!4754 = !DILocation(line: 799, column: 9, scope: !4737)
!4755 = !DILocation(line: 799, column: 2, scope: !4737)
!4756 = distinct !DISubprogram(name: "BKE_mask_copy_nolib", scope: !3, file: !3, line: 822, type: !4757, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4757 = !DISubroutineType(types: !4758)
!4758 = !{!525, !2493}
!4759 = !DILocalVariable(name: "mask", arg: 1, scope: !4756, file: !3, line: 822, type: !2493)
!4760 = !DILocation(line: 822, column: 33, scope: !4756)
!4761 = !DILocalVariable(name: "mask_new", scope: !4756, file: !3, line: 824, type: !2493)
!4762 = !DILocation(line: 824, column: 8, scope: !4756)
!4763 = !DILocation(line: 826, column: 13, scope: !4756)
!4764 = !DILocation(line: 826, column: 27, scope: !4756)
!4765 = !DILocation(line: 826, column: 11, scope: !4756)
!4766 = !DILocation(line: 829, column: 2, scope: !4756)
!4767 = !DILocation(line: 829, column: 12, scope: !4756)
!4768 = !DILocation(line: 829, column: 16, scope: !4756)
!4769 = !DILocation(line: 831, column: 22, scope: !4756)
!4770 = !DILocation(line: 831, column: 32, scope: !4756)
!4771 = !DILocation(line: 831, column: 2, scope: !4756)
!4772 = !DILocation(line: 833, column: 28, scope: !4756)
!4773 = !DILocation(line: 833, column: 38, scope: !4756)
!4774 = !DILocation(line: 833, column: 51, scope: !4756)
!4775 = !DILocation(line: 833, column: 57, scope: !4756)
!4776 = !DILocation(line: 833, column: 2, scope: !4756)
!4777 = !DILocation(line: 836, column: 8, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 836, column: 6)
!4779 = !DILocation(line: 836, column: 18, scope: !4778)
!4780 = !DILocation(line: 836, column: 21, scope: !4778)
!4781 = !DILocation(line: 836, column: 26, scope: !4778)
!4782 = !DILocation(line: 836, column: 6, scope: !4756)
!4783 = !DILocation(line: 837, column: 3, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 836, column: 43)
!4785 = !DILocation(line: 837, column: 13, scope: !4784)
!4786 = !DILocation(line: 837, column: 16, scope: !4784)
!4787 = !DILocation(line: 837, column: 21, scope: !4784)
!4788 = !DILocation(line: 838, column: 3, scope: !4784)
!4789 = !DILocation(line: 838, column: 13, scope: !4784)
!4790 = !DILocation(line: 838, column: 16, scope: !4784)
!4791 = !DILocation(line: 838, column: 18, scope: !4784)
!4792 = !DILocation(line: 839, column: 2, scope: !4784)
!4793 = !DILocation(line: 841, column: 9, scope: !4756)
!4794 = !DILocation(line: 841, column: 2, scope: !4756)
!4795 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !4796, file: !4796, line: 89, type: !4797, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4796 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4797 = !DISubroutineType(types: !4798)
!4798 = !{null, !4799}
!4799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!4800 = !DILocalVariable(name: "lb", arg: 1, scope: !4795, file: !4796, line: 89, type: !4799)
!4801 = !DILocation(line: 89, column: 53, scope: !4795)
!4802 = !DILocation(line: 89, column: 71, scope: !4795)
!4803 = !DILocation(line: 89, column: 75, scope: !4795)
!4804 = !DILocation(line: 89, column: 80, scope: !4795)
!4805 = !DILocation(line: 89, column: 59, scope: !4795)
!4806 = !DILocation(line: 89, column: 63, scope: !4795)
!4807 = !DILocation(line: 89, column: 69, scope: !4795)
!4808 = !DILocation(line: 89, column: 93, scope: !4795)
!4809 = distinct !DISubprogram(name: "BKE_mask_copy", scope: !3, file: !3, line: 844, type: !4757, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4810 = !DILocalVariable(name: "mask", arg: 1, scope: !4809, file: !3, line: 844, type: !2493)
!4811 = !DILocation(line: 844, column: 27, scope: !4809)
!4812 = !DILocalVariable(name: "mask_new", scope: !4809, file: !3, line: 846, type: !2493)
!4813 = !DILocation(line: 846, column: 8, scope: !4809)
!4814 = !DILocation(line: 848, column: 32, scope: !4809)
!4815 = !DILocation(line: 848, column: 38, scope: !4809)
!4816 = !DILocation(line: 848, column: 13, scope: !4809)
!4817 = !DILocation(line: 848, column: 11, scope: !4809)
!4818 = !DILocation(line: 850, column: 22, scope: !4809)
!4819 = !DILocation(line: 850, column: 32, scope: !4809)
!4820 = !DILocation(line: 850, column: 2, scope: !4809)
!4821 = !DILocation(line: 852, column: 28, scope: !4809)
!4822 = !DILocation(line: 852, column: 38, scope: !4809)
!4823 = !DILocation(line: 852, column: 51, scope: !4809)
!4824 = !DILocation(line: 852, column: 57, scope: !4809)
!4825 = !DILocation(line: 852, column: 2, scope: !4809)
!4826 = !DILocation(line: 855, column: 8, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 855, column: 6)
!4828 = !DILocation(line: 855, column: 18, scope: !4827)
!4829 = !DILocation(line: 855, column: 21, scope: !4827)
!4830 = !DILocation(line: 855, column: 26, scope: !4827)
!4831 = !DILocation(line: 855, column: 6, scope: !4809)
!4832 = !DILocation(line: 856, column: 3, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 855, column: 43)
!4834 = !DILocation(line: 856, column: 13, scope: !4833)
!4835 = !DILocation(line: 856, column: 16, scope: !4833)
!4836 = !DILocation(line: 856, column: 21, scope: !4833)
!4837 = !DILocation(line: 857, column: 3, scope: !4833)
!4838 = !DILocation(line: 857, column: 13, scope: !4833)
!4839 = !DILocation(line: 857, column: 16, scope: !4833)
!4840 = !DILocation(line: 857, column: 18, scope: !4833)
!4841 = !DILocation(line: 858, column: 2, scope: !4833)
!4842 = !DILocation(line: 860, column: 9, scope: !4809)
!4843 = !DILocation(line: 860, column: 2, scope: !4809)
!4844 = distinct !DISubprogram(name: "BKE_mask_point_free", scope: !3, file: !3, line: 863, type: !2936, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4845 = !DILocalVariable(name: "point", arg: 1, scope: !4844, file: !3, line: 863, type: !2355)
!4846 = !DILocation(line: 863, column: 43, scope: !4844)
!4847 = !DILocation(line: 865, column: 6, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 865, column: 6)
!4849 = !DILocation(line: 865, column: 13, scope: !4848)
!4850 = !DILocation(line: 865, column: 6, scope: !4844)
!4851 = !DILocation(line: 866, column: 3, scope: !4848)
!4852 = !DILocation(line: 866, column: 13, scope: !4848)
!4853 = !DILocation(line: 866, column: 20, scope: !4848)
!4854 = !DILocation(line: 867, column: 1, scope: !4844)
!4855 = distinct !DISubprogram(name: "BKE_mask_spline_free_list", scope: !3, file: !3, line: 893, type: !4856, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4856 = !DISubroutineType(types: !4857)
!4857 = !{null, !1519}
!4858 = !DILocalVariable(name: "splines", arg: 1, scope: !4855, file: !3, line: 893, type: !1519)
!4859 = !DILocation(line: 893, column: 42, scope: !4855)
!4860 = !DILocalVariable(name: "spline", scope: !4855, file: !3, line: 895, type: !2343)
!4861 = !DILocation(line: 895, column: 14, scope: !4855)
!4862 = !DILocation(line: 895, column: 23, scope: !4855)
!4863 = !DILocation(line: 895, column: 32, scope: !4855)
!4864 = !DILocation(line: 896, column: 2, scope: !4855)
!4865 = !DILocation(line: 896, column: 9, scope: !4855)
!4866 = !DILocalVariable(name: "next_spline", scope: !4867, file: !3, line: 897, type: !2343)
!4867 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 896, column: 17)
!4868 = !DILocation(line: 897, column: 15, scope: !4867)
!4869 = !DILocation(line: 897, column: 29, scope: !4867)
!4870 = !DILocation(line: 897, column: 37, scope: !4867)
!4871 = !DILocation(line: 899, column: 15, scope: !4867)
!4872 = !DILocation(line: 899, column: 24, scope: !4867)
!4873 = !DILocation(line: 899, column: 3, scope: !4867)
!4874 = !DILocation(line: 900, column: 24, scope: !4867)
!4875 = !DILocation(line: 900, column: 3, scope: !4867)
!4876 = !DILocation(line: 902, column: 12, scope: !4867)
!4877 = !DILocation(line: 902, column: 10, scope: !4867)
!4878 = distinct !{!4878, !4864, !4879}
!4879 = !DILocation(line: 903, column: 2, scope: !4855)
!4880 = !DILocation(line: 904, column: 1, scope: !4855)
!4881 = distinct !DISubprogram(name: "mask_spline_points_copy", scope: !3, file: !3, line: 906, type: !4882, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4882 = !DISubroutineType(types: !4883)
!4883 = !{!2355, !2355, !35}
!4884 = !DILocalVariable(name: "points", arg: 1, scope: !4881, file: !3, line: 906, type: !2355)
!4885 = !DILocation(line: 906, column: 66, scope: !4881)
!4886 = !DILocalVariable(name: "tot_point", arg: 2, scope: !4881, file: !3, line: 906, type: !35)
!4887 = !DILocation(line: 906, column: 78, scope: !4881)
!4888 = !DILocalVariable(name: "npoints", scope: !4881, file: !3, line: 908, type: !2355)
!4889 = !DILocation(line: 908, column: 19, scope: !4881)
!4890 = !DILocalVariable(name: "i", scope: !4881, file: !3, line: 909, type: !35)
!4891 = !DILocation(line: 909, column: 6, scope: !4881)
!4892 = !DILocation(line: 911, column: 12, scope: !4881)
!4893 = !DILocation(line: 911, column: 26, scope: !4881)
!4894 = !DILocation(line: 911, column: 10, scope: !4881)
!4895 = !DILocation(line: 913, column: 9, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 913, column: 2)
!4897 = !DILocation(line: 913, column: 7, scope: !4896)
!4898 = !DILocation(line: 913, column: 14, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 913, column: 2)
!4900 = !DILocation(line: 913, column: 18, scope: !4899)
!4901 = !DILocation(line: 913, column: 16, scope: !4899)
!4902 = !DILocation(line: 913, column: 2, scope: !4896)
!4903 = !DILocalVariable(name: "point", scope: !4904, file: !3, line: 914, type: !2355)
!4904 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 913, column: 34)
!4905 = !DILocation(line: 914, column: 20, scope: !4904)
!4906 = !DILocation(line: 914, column: 29, scope: !4904)
!4907 = !DILocation(line: 914, column: 37, scope: !4904)
!4908 = !DILocation(line: 916, column: 7, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 916, column: 7)
!4910 = !DILocation(line: 916, column: 14, scope: !4909)
!4911 = !DILocation(line: 916, column: 7, scope: !4904)
!4912 = !DILocation(line: 917, column: 16, scope: !4909)
!4913 = !DILocation(line: 917, column: 30, scope: !4909)
!4914 = !DILocation(line: 917, column: 37, scope: !4909)
!4915 = !DILocation(line: 917, column: 4, scope: !4909)
!4916 = !DILocation(line: 917, column: 11, scope: !4909)
!4917 = !DILocation(line: 917, column: 14, scope: !4909)
!4918 = !DILocation(line: 918, column: 2, scope: !4904)
!4919 = !DILocation(line: 913, column: 30, scope: !4899)
!4920 = !DILocation(line: 913, column: 2, scope: !4899)
!4921 = distinct !{!4921, !4902, !4922}
!4922 = !DILocation(line: 918, column: 2, scope: !4896)
!4923 = !DILocation(line: 920, column: 9, scope: !4881)
!4924 = !DILocation(line: 920, column: 2, scope: !4881)
!4925 = distinct !DISubprogram(name: "BKE_mask_layer_shape_alloc", scope: !3, file: !3, line: 940, type: !4926, scopeLine: 941, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4926 = !DISubroutineType(types: !4927)
!4927 = !{!2692, !2500, !2941}
!4928 = !DILocalVariable(name: "masklay", arg: 1, scope: !4925, file: !3, line: 940, type: !2500)
!4929 = !DILocation(line: 940, column: 55, scope: !4925)
!4930 = !DILocalVariable(name: "frame", arg: 2, scope: !4925, file: !3, line: 940, type: !2941)
!4931 = !DILocation(line: 940, column: 74, scope: !4925)
!4932 = !DILocalVariable(name: "masklay_shape", scope: !4925, file: !3, line: 942, type: !2687)
!4933 = !DILocation(line: 942, column: 18, scope: !4925)
!4934 = !DILocalVariable(name: "tot_vert", scope: !4925, file: !3, line: 943, type: !35)
!4935 = !DILocation(line: 943, column: 6, scope: !4925)
!4936 = !DILocation(line: 943, column: 46, scope: !4925)
!4937 = !DILocation(line: 943, column: 17, scope: !4925)
!4938 = !DILocation(line: 945, column: 18, scope: !4925)
!4939 = !DILocation(line: 945, column: 16, scope: !4925)
!4940 = !DILocation(line: 946, column: 25, scope: !4925)
!4941 = !DILocation(line: 946, column: 2, scope: !4925)
!4942 = !DILocation(line: 946, column: 17, scope: !4925)
!4943 = !DILocation(line: 946, column: 23, scope: !4925)
!4944 = !DILocation(line: 947, column: 28, scope: !4925)
!4945 = !DILocation(line: 947, column: 2, scope: !4925)
!4946 = !DILocation(line: 947, column: 17, scope: !4925)
!4947 = !DILocation(line: 947, column: 26, scope: !4925)
!4948 = !DILocation(line: 948, column: 24, scope: !4925)
!4949 = !DILocation(line: 948, column: 36, scope: !4925)
!4950 = !DILocation(line: 948, column: 45, scope: !4925)
!4951 = !DILocation(line: 948, column: 61, scope: !4925)
!4952 = !DILocation(line: 948, column: 2, scope: !4925)
!4953 = !DILocation(line: 948, column: 17, scope: !4925)
!4954 = !DILocation(line: 948, column: 22, scope: !4925)
!4955 = !DILocation(line: 950, column: 9, scope: !4925)
!4956 = !DILocation(line: 950, column: 2, scope: !4925)
!4957 = distinct !DISubprogram(name: "BKE_mask_layer_shape_totvert", scope: !3, file: !3, line: 1599, type: !4958, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4958 = !DISubroutineType(types: !4959)
!4959 = !{!35, !2500}
!4960 = !DILocalVariable(name: "masklay", arg: 1, scope: !4957, file: !3, line: 1599, type: !2500)
!4961 = !DILocation(line: 1599, column: 45, scope: !4957)
!4962 = !DILocalVariable(name: "tot", scope: !4957, file: !3, line: 1601, type: !35)
!4963 = !DILocation(line: 1601, column: 6, scope: !4957)
!4964 = !DILocalVariable(name: "spline", scope: !4957, file: !3, line: 1602, type: !2343)
!4965 = !DILocation(line: 1602, column: 14, scope: !4957)
!4966 = !DILocation(line: 1604, column: 16, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 1604, column: 2)
!4968 = !DILocation(line: 1604, column: 25, scope: !4967)
!4969 = !DILocation(line: 1604, column: 33, scope: !4967)
!4970 = !DILocation(line: 1604, column: 14, scope: !4967)
!4971 = !DILocation(line: 1604, column: 7, scope: !4967)
!4972 = !DILocation(line: 1604, column: 40, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1604, column: 2)
!4974 = !DILocation(line: 1604, column: 2, scope: !4967)
!4975 = !DILocation(line: 1605, column: 10, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4973, file: !3, line: 1604, column: 71)
!4977 = !DILocation(line: 1605, column: 18, scope: !4976)
!4978 = !DILocation(line: 1605, column: 7, scope: !4976)
!4979 = !DILocation(line: 1606, column: 2, scope: !4976)
!4980 = !DILocation(line: 1604, column: 57, scope: !4973)
!4981 = !DILocation(line: 1604, column: 65, scope: !4973)
!4982 = !DILocation(line: 1604, column: 55, scope: !4973)
!4983 = !DILocation(line: 1604, column: 2, scope: !4973)
!4984 = distinct !{!4984, !4974, !4985}
!4985 = !DILocation(line: 1606, column: 2, scope: !4967)
!4986 = !DILocation(line: 1608, column: 9, scope: !4957)
!4987 = !DILocation(line: 1608, column: 2, scope: !4957)
!4988 = distinct !DISubprogram(name: "BKE_mask_layer_shape_free", scope: !3, file: !3, line: 953, type: !4989, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!4989 = !DISubroutineType(types: !4990)
!4990 = !{null, !2687}
!4991 = !DILocalVariable(name: "masklay_shape", arg: 1, scope: !4988, file: !3, line: 953, type: !2687)
!4992 = !DILocation(line: 953, column: 48, scope: !4988)
!4993 = !DILocation(line: 955, column: 6, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 955, column: 6)
!4995 = !DILocation(line: 955, column: 21, scope: !4994)
!4996 = !DILocation(line: 955, column: 6, scope: !4988)
!4997 = !DILocation(line: 956, column: 3, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 955, column: 27)
!4999 = !DILocation(line: 956, column: 13, scope: !4998)
!5000 = !DILocation(line: 956, column: 28, scope: !4998)
!5001 = !DILocation(line: 957, column: 2, scope: !4998)
!5002 = !DILocation(line: 959, column: 2, scope: !4988)
!5003 = !DILocation(line: 959, column: 12, scope: !4988)
!5004 = !DILocation(line: 960, column: 1, scope: !4988)
!5005 = distinct !DISubprogram(name: "BKE_mask_layer_free_shapes", scope: !3, file: !3, line: 964, type: !2602, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!5006 = !DILocalVariable(name: "masklay", arg: 1, scope: !5005, file: !3, line: 964, type: !2500)
!5007 = !DILocation(line: 964, column: 44, scope: !5005)
!5008 = !DILocalVariable(name: "masklay_shape", scope: !5005, file: !3, line: 966, type: !2687)
!5009 = !DILocation(line: 966, column: 18, scope: !5005)
!5010 = !DILocation(line: 969, column: 18, scope: !5005)
!5011 = !DILocation(line: 969, column: 27, scope: !5005)
!5012 = !DILocation(line: 969, column: 42, scope: !5005)
!5013 = !DILocation(line: 969, column: 16, scope: !5005)
!5014 = !DILocation(line: 970, column: 2, scope: !5005)
!5015 = !DILocation(line: 970, column: 9, scope: !5005)
!5016 = !DILocalVariable(name: "next_masklay_shape", scope: !5017, file: !3, line: 971, type: !2687)
!5017 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 970, column: 24)
!5018 = !DILocation(line: 971, column: 19, scope: !5017)
!5019 = !DILocation(line: 971, column: 40, scope: !5017)
!5020 = !DILocation(line: 971, column: 55, scope: !5017)
!5021 = !DILocation(line: 973, column: 16, scope: !5017)
!5022 = !DILocation(line: 973, column: 25, scope: !5017)
!5023 = !DILocation(line: 973, column: 41, scope: !5017)
!5024 = !DILocation(line: 973, column: 3, scope: !5017)
!5025 = !DILocation(line: 974, column: 29, scope: !5017)
!5026 = !DILocation(line: 974, column: 3, scope: !5017)
!5027 = !DILocation(line: 976, column: 19, scope: !5017)
!5028 = !DILocation(line: 976, column: 17, scope: !5017)
!5029 = distinct !{!5029, !5014, !5030}
!5030 = !DILocation(line: 977, column: 2, scope: !5005)
!5031 = !DILocation(line: 978, column: 1, scope: !5005)
!5032 = distinct !DISubprogram(name: "BKE_mask_layer_free_list", scope: !3, file: !3, line: 991, type: !4856, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!5033 = !DILocalVariable(name: "masklayers", arg: 1, scope: !5032, file: !3, line: 991, type: !1519)
!5034 = !DILocation(line: 991, column: 41, scope: !5032)
!5035 = !DILocalVariable(name: "masklay", scope: !5032, file: !3, line: 993, type: !2500)
!5036 = !DILocation(line: 993, column: 13, scope: !5032)
!5037 = !DILocation(line: 993, column: 23, scope: !5032)
!5038 = !DILocation(line: 993, column: 35, scope: !5032)
!5039 = !DILocation(line: 995, column: 2, scope: !5032)
!5040 = !DILocation(line: 995, column: 9, scope: !5032)
!5041 = !DILocalVariable(name: "masklay_next", scope: !5042, file: !3, line: 996, type: !2500)
!5042 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 995, column: 18)
!5043 = !DILocation(line: 996, column: 14, scope: !5042)
!5044 = !DILocation(line: 996, column: 29, scope: !5042)
!5045 = !DILocation(line: 996, column: 38, scope: !5042)
!5046 = !DILocation(line: 998, column: 15, scope: !5042)
!5047 = !DILocation(line: 998, column: 27, scope: !5042)
!5048 = !DILocation(line: 998, column: 3, scope: !5042)
!5049 = !DILocation(line: 999, column: 23, scope: !5042)
!5050 = !DILocation(line: 999, column: 3, scope: !5042)
!5051 = !DILocation(line: 1001, column: 13, scope: !5042)
!5052 = !DILocation(line: 1001, column: 11, scope: !5042)
!5053 = distinct !{!5053, !5039, !5054}
!5054 = !DILocation(line: 1002, column: 2, scope: !5032)
!5055 = !DILocation(line: 1003, column: 1, scope: !5032)
!5056 = distinct !DISubprogram(name: "BKE_mask_free_nolib", scope: !3, file: !3, line: 1006, type: !5057, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{null, !2493}
!5059 = !DILocalVariable(name: "mask", arg: 1, scope: !5056, file: !3, line: 1006, type: !2493)
!5060 = !DILocation(line: 1006, column: 32, scope: !5056)
!5061 = !DILocation(line: 1008, column: 28, scope: !5056)
!5062 = !DILocation(line: 1008, column: 34, scope: !5056)
!5063 = !DILocation(line: 1008, column: 2, scope: !5056)
!5064 = !DILocation(line: 1009, column: 1, scope: !5056)
!5065 = distinct !DISubprogram(name: "BKE_mask_free", scope: !3, file: !3, line: 1011, type: !5066, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!5066 = !DISubroutineType(types: !5067)
!5067 = !{null, !4646, !2493}
!5068 = !DILocalVariable(name: "bmain", arg: 1, scope: !5065, file: !3, line: 1011, type: !4646)
!5069 = !DILocation(line: 1011, column: 26, scope: !5065)
!5070 = !DILocalVariable(name: "mask", arg: 2, scope: !5065, file: !3, line: 1011, type: !2493)
!5071 = !DILocation(line: 1011, column: 39, scope: !5065)
!5072 = !DILocalVariable(name: "scr", scope: !5065, file: !3, line: 1013, type: !5073)
!5073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5074, size: 64)
!5074 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !809, line: 80, baseType: !5075)
!5075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !809, line: 49, size: 1984, elements: !5076)
!5076 = !{!5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099}
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5075, file: !809, line: 50, baseType: !120, size: 960)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !5075, file: !809, line: 52, baseType: !89, size: 128, offset: 960)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !5075, file: !809, line: 53, baseType: !89, size: 128, offset: 1088)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !5075, file: !809, line: 54, baseType: !89, size: 128, offset: 1216)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !5075, file: !809, line: 55, baseType: !89, size: 128, offset: 1344)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !5075, file: !809, line: 57, baseType: !558, size: 64, offset: 1472)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !5075, file: !809, line: 58, baseType: !558, size: 64, offset: 1536)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !5075, file: !809, line: 60, baseType: !35, size: 32, offset: 1600)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !5075, file: !809, line: 61, baseType: !35, size: 32, offset: 1632)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5075, file: !809, line: 63, baseType: !99, size: 16, offset: 1664)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !5075, file: !809, line: 64, baseType: !99, size: 16, offset: 1680)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !5075, file: !809, line: 65, baseType: !99, size: 16, offset: 1696)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !5075, file: !809, line: 66, baseType: !99, size: 16, offset: 1712)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !5075, file: !809, line: 67, baseType: !99, size: 16, offset: 1728)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !5075, file: !809, line: 68, baseType: !99, size: 16, offset: 1744)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !5075, file: !809, line: 69, baseType: !99, size: 16, offset: 1760)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !5075, file: !809, line: 70, baseType: !99, size: 16, offset: 1776)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !5075, file: !809, line: 71, baseType: !99, size: 16, offset: 1792)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !5075, file: !809, line: 73, baseType: !99, size: 16, offset: 1808)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !5075, file: !809, line: 74, baseType: !99, size: 16, offset: 1824)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5075, file: !809, line: 76, baseType: !99, size: 16, offset: 1840)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !5075, file: !809, line: 78, baseType: !985, size: 64, offset: 1856)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !5075, file: !809, line: 79, baseType: !74, size: 64, offset: 1920)
!5100 = !DILocation(line: 1013, column: 11, scope: !5065)
!5101 = !DILocalVariable(name: "area", scope: !5065, file: !3, line: 1014, type: !5102)
!5102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5103, size: 64)
!5103 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !809, line: 228, baseType: !5104)
!5104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !809, line: 203, size: 1280, elements: !5105)
!5105 = !{!5106, !5108, !5109, !5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137, !5138, !5139, !5140, !5141, !5144, !5145, !5146, !5147}
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5104, file: !809, line: 204, baseType: !5107, size: 64)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5104, size: 64)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5104, file: !809, line: 204, baseType: !5107, size: 64, offset: 64)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5104, file: !809, line: 206, baseType: !5110, size: 64, offset: 128)
!5110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5111, size: 64)
!5111 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !809, line: 87, baseType: !5112)
!5112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !809, line: 82, size: 256, elements: !5113)
!5113 = !{!5114, !5116, !5117, !5118, !5124, !5125}
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5112, file: !809, line: 83, baseType: !5115, size: 64)
!5115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5112, size: 64)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5112, file: !809, line: 83, baseType: !5115, size: 64, offset: 64)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !5112, file: !809, line: 83, baseType: !5115, size: 64, offset: 128)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !5112, file: !809, line: 84, baseType: !5119, size: 32, offset: 192)
!5119 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !944, line: 43, baseType: !5120)
!5120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !944, line: 41, size: 32, elements: !5121)
!5121 = !{!5122, !5123}
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !5120, file: !944, line: 42, baseType: !99, size: 16)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !5120, file: !944, line: 42, baseType: !99, size: 16, offset: 16)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5112, file: !809, line: 86, baseType: !99, size: 16, offset: 224)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !5112, file: !809, line: 86, baseType: !99, size: 16, offset: 240)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5104, file: !809, line: 206, baseType: !5110, size: 64, offset: 192)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5104, file: !809, line: 206, baseType: !5110, size: 64, offset: 256)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5104, file: !809, line: 206, baseType: !5110, size: 64, offset: 320)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !5104, file: !809, line: 207, baseType: !5073, size: 64, offset: 384)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !5104, file: !809, line: 209, baseType: !953, size: 128, offset: 448)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !5104, file: !809, line: 211, baseType: !140, size: 8, offset: 576)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !5104, file: !809, line: 211, baseType: !140, size: 8, offset: 584)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !5104, file: !809, line: 212, baseType: !99, size: 16, offset: 592)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !5104, file: !809, line: 212, baseType: !99, size: 16, offset: 608)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !5104, file: !809, line: 214, baseType: !99, size: 16, offset: 624)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !5104, file: !809, line: 215, baseType: !99, size: 16, offset: 640)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5104, file: !809, line: 216, baseType: !99, size: 16, offset: 656)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !5104, file: !809, line: 217, baseType: !99, size: 16, offset: 672)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !5104, file: !809, line: 219, baseType: !140, size: 8, offset: 688)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5104, file: !809, line: 219, baseType: !140, size: 8, offset: 696)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5104, file: !809, line: 221, baseType: !5142, size: 64, offset: 704)
!5142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5143, size: 64)
!5143 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !809, line: 39, flags: DIFlagFwdDecl)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !5104, file: !809, line: 223, baseType: !89, size: 128, offset: 768)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !5104, file: !809, line: 224, baseType: !89, size: 128, offset: 896)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !5104, file: !809, line: 225, baseType: !89, size: 128, offset: 1024)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !5104, file: !809, line: 227, baseType: !89, size: 128, offset: 1152)
!5148 = !DILocation(line: 1014, column: 11, scope: !5065)
!5149 = !DILocalVariable(name: "sl", scope: !5065, file: !3, line: 1015, type: !81)
!5150 = !DILocation(line: 1015, column: 13, scope: !5065)
!5151 = !DILocalVariable(name: "scene", scope: !5065, file: !3, line: 1016, type: !5152)
!5152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5153, size: 64)
!5153 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !204, line: 1299, baseType: !559)
!5154 = !DILocation(line: 1016, column: 9, scope: !5065)
!5155 = !DILocation(line: 1018, column: 13, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 1018, column: 2)
!5157 = !DILocation(line: 1018, column: 20, scope: !5156)
!5158 = !DILocation(line: 1018, column: 27, scope: !5156)
!5159 = !DILocation(line: 1018, column: 11, scope: !5156)
!5160 = !DILocation(line: 1018, column: 7, scope: !5156)
!5161 = !DILocation(line: 1018, column: 34, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 1018, column: 2)
!5163 = !DILocation(line: 1018, column: 2, scope: !5156)
!5164 = !DILocation(line: 1019, column: 15, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 1019, column: 3)
!5166 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 1018, column: 59)
!5167 = !DILocation(line: 1019, column: 20, scope: !5165)
!5168 = !DILocation(line: 1019, column: 29, scope: !5165)
!5169 = !DILocation(line: 1019, column: 13, scope: !5165)
!5170 = !DILocation(line: 1019, column: 8, scope: !5165)
!5171 = !DILocation(line: 1019, column: 36, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 1019, column: 3)
!5173 = !DILocation(line: 1019, column: 3, scope: !5165)
!5174 = !DILocation(line: 1020, column: 14, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 1020, column: 4)
!5176 = distinct !DILexicalBlock(scope: !5172, file: !3, line: 1019, column: 61)
!5177 = !DILocation(line: 1020, column: 20, scope: !5175)
!5178 = !DILocation(line: 1020, column: 30, scope: !5175)
!5179 = !DILocation(line: 1020, column: 12, scope: !5175)
!5180 = !DILocation(line: 1020, column: 9, scope: !5175)
!5181 = !DILocation(line: 1020, column: 37, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 1020, column: 4)
!5183 = !DILocation(line: 1020, column: 4, scope: !5175)
!5184 = !DILocation(line: 1021, column: 13, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 1020, column: 56)
!5186 = !DILocation(line: 1021, column: 17, scope: !5185)
!5187 = !DILocation(line: 1021, column: 5, scope: !5185)
!5188 = !DILocalVariable(name: "sc", scope: !5189, file: !3, line: 1024, type: !75)
!5189 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 1023, column: 6)
!5190 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 1021, column: 28)
!5191 = !DILocation(line: 1024, column: 18, scope: !5189)
!5192 = !DILocation(line: 1024, column: 36, scope: !5189)
!5193 = !DILocation(line: 1024, column: 23, scope: !5189)
!5194 = !DILocation(line: 1026, column: 11, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 1026, column: 11)
!5196 = !DILocation(line: 1026, column: 15, scope: !5195)
!5197 = !DILocation(line: 1026, column: 25, scope: !5195)
!5198 = !DILocation(line: 1026, column: 33, scope: !5195)
!5199 = !DILocation(line: 1026, column: 30, scope: !5195)
!5200 = !DILocation(line: 1026, column: 11, scope: !5189)
!5201 = !DILocation(line: 1027, column: 8, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 1026, column: 39)
!5203 = !DILocation(line: 1027, column: 12, scope: !5202)
!5204 = !DILocation(line: 1027, column: 22, scope: !5202)
!5205 = !DILocation(line: 1027, column: 27, scope: !5202)
!5206 = !DILocation(line: 1028, column: 7, scope: !5202)
!5207 = !DILocation(line: 1029, column: 7, scope: !5189)
!5208 = !DILocalVariable(name: "sima", scope: !5209, file: !3, line: 1033, type: !544)
!5209 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 1032, column: 6)
!5210 = !DILocation(line: 1033, column: 19, scope: !5209)
!5211 = !DILocation(line: 1033, column: 40, scope: !5209)
!5212 = !DILocation(line: 1033, column: 26, scope: !5209)
!5213 = !DILocation(line: 1035, column: 11, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1035, column: 11)
!5215 = !DILocation(line: 1035, column: 17, scope: !5214)
!5216 = !DILocation(line: 1035, column: 27, scope: !5214)
!5217 = !DILocation(line: 1035, column: 35, scope: !5214)
!5218 = !DILocation(line: 1035, column: 32, scope: !5214)
!5219 = !DILocation(line: 1035, column: 11, scope: !5209)
!5220 = !DILocation(line: 1036, column: 8, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 1035, column: 41)
!5222 = !DILocation(line: 1036, column: 14, scope: !5221)
!5223 = !DILocation(line: 1036, column: 24, scope: !5221)
!5224 = !DILocation(line: 1036, column: 29, scope: !5221)
!5225 = !DILocation(line: 1037, column: 7, scope: !5221)
!5226 = !DILocation(line: 1038, column: 7, scope: !5209)
!5227 = !DILocation(line: 1041, column: 4, scope: !5185)
!5228 = !DILocation(line: 1020, column: 46, scope: !5182)
!5229 = !DILocation(line: 1020, column: 50, scope: !5182)
!5230 = !DILocation(line: 1020, column: 44, scope: !5182)
!5231 = !DILocation(line: 1020, column: 4, scope: !5182)
!5232 = distinct !{!5232, !5183, !5233}
!5233 = !DILocation(line: 1041, column: 4, scope: !5175)
!5234 = !DILocation(line: 1042, column: 3, scope: !5176)
!5235 = !DILocation(line: 1019, column: 49, scope: !5172)
!5236 = !DILocation(line: 1019, column: 55, scope: !5172)
!5237 = !DILocation(line: 1019, column: 47, scope: !5172)
!5238 = !DILocation(line: 1019, column: 3, scope: !5172)
!5239 = distinct !{!5239, !5173, !5240}
!5240 = !DILocation(line: 1042, column: 3, scope: !5165)
!5241 = !DILocation(line: 1043, column: 2, scope: !5166)
!5242 = !DILocation(line: 1018, column: 45, scope: !5162)
!5243 = !DILocation(line: 1018, column: 50, scope: !5162)
!5244 = !DILocation(line: 1018, column: 53, scope: !5162)
!5245 = !DILocation(line: 1018, column: 43, scope: !5162)
!5246 = !DILocation(line: 1018, column: 2, scope: !5162)
!5247 = distinct !{!5247, !5163, !5248}
!5248 = !DILocation(line: 1043, column: 2, scope: !5156)
!5249 = !DILocation(line: 1045, column: 15, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 1045, column: 2)
!5251 = !DILocation(line: 1045, column: 22, scope: !5250)
!5252 = !DILocation(line: 1045, column: 28, scope: !5250)
!5253 = !DILocation(line: 1045, column: 13, scope: !5250)
!5254 = !DILocation(line: 1045, column: 7, scope: !5250)
!5255 = !DILocation(line: 1045, column: 35, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 1045, column: 2)
!5257 = !DILocation(line: 1045, column: 2, scope: !5250)
!5258 = !DILocation(line: 1046, column: 7, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 1046, column: 7)
!5260 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 1045, column: 66)
!5261 = !DILocation(line: 1046, column: 14, scope: !5259)
!5262 = !DILocation(line: 1046, column: 7, scope: !5260)
!5263 = !DILocalVariable(name: "seq", scope: !5264, file: !3, line: 1047, type: !1523)
!5264 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 1046, column: 18)
!5265 = !DILocation(line: 1047, column: 14, scope: !5264)
!5266 = !DILocalVariable(name: "iter_macro", scope: !5267, file: !3, line: 1049, type: !5268)
!5267 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 1049, column: 4)
!5268 = !DIDerivedType(tag: DW_TAG_typedef, name: "SeqIterator", file: !5269, line: 63, baseType: !5270)
!5269 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_sequencer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SeqIterator", file: !5269, line: 57, size: 256, elements: !5271)
!5271 = !{!5272, !5274, !5275, !5276, !5277}
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !5270, file: !5269, line: 58, baseType: !5273, size: 64)
!5273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !5270, file: !5269, line: 59, baseType: !35, size: 32, offset: 64)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !5270, file: !5269, line: 59, baseType: !35, size: 32, offset: 96)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !5270, file: !5269, line: 61, baseType: !1528, size: 64, offset: 128)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !5270, file: !5269, line: 62, baseType: !35, size: 32, offset: 192)
!5278 = !DILocation(line: 1049, column: 4, scope: !5267)
!5279 = !DILocation(line: 1049, column: 4, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 1049, column: 4)
!5281 = !DILocation(line: 1049, column: 4, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5280, file: !3, line: 1049, column: 4)
!5283 = !DILocation(line: 1049, column: 4, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 1049, column: 4)
!5285 = !DILocation(line: 1051, column: 9, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 1051, column: 9)
!5287 = distinct !DILexicalBlock(scope: !5284, file: !3, line: 1050, column: 4)
!5288 = !DILocation(line: 1051, column: 14, scope: !5286)
!5289 = !DILocation(line: 1051, column: 22, scope: !5286)
!5290 = !DILocation(line: 1051, column: 19, scope: !5286)
!5291 = !DILocation(line: 1051, column: 9, scope: !5287)
!5292 = !DILocation(line: 1052, column: 6, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 1051, column: 28)
!5294 = !DILocation(line: 1052, column: 11, scope: !5293)
!5295 = !DILocation(line: 1052, column: 16, scope: !5293)
!5296 = !DILocation(line: 1053, column: 5, scope: !5293)
!5297 = !DILocation(line: 1055, column: 4, scope: !5284)
!5298 = distinct !{!5298, !5279, !5299}
!5299 = !DILocation(line: 1055, column: 4, scope: !5280)
!5300 = !DILocation(line: 1055, column: 4, scope: !5267)
!5301 = !DILocation(line: 1056, column: 3, scope: !5264)
!5302 = !DILocation(line: 1057, column: 2, scope: !5260)
!5303 = !DILocation(line: 1045, column: 50, scope: !5256)
!5304 = !DILocation(line: 1045, column: 57, scope: !5256)
!5305 = !DILocation(line: 1045, column: 60, scope: !5256)
!5306 = !DILocation(line: 1045, column: 48, scope: !5256)
!5307 = !DILocation(line: 1045, column: 2, scope: !5256)
!5308 = distinct !{!5308, !5257, !5309}
!5309 = !DILocation(line: 1057, column: 2, scope: !5250)
!5310 = !DILocalVariable(name: "_nstore", scope: !5311, file: !3, line: 1059, type: !5312)
!5311 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 1059, column: 2)
!5312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NodeTreeIterStore", file: !721, line: 632, size: 448, elements: !5313)
!5313 = !{!5314, !5317, !5318, !5496, !5499, !5580, !5583}
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "ngroup", scope: !5312, file: !721, line: 633, baseType: !5315, size: 64)
!5315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5316, size: 64)
!5316 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTree", file: !714, line: 391, baseType: !713)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !5312, file: !721, line: 634, baseType: !5152, size: 64, offset: 64)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !5312, file: !721, line: 635, baseType: !5319, size: 64, offset: 128)
!5319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5320, size: 64)
!5320 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !5321, line: 203, baseType: !5322)
!5321 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !5321, line: 93, size: 7552, elements: !5323)
!5323 = !{!5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5372, !5379, !5380, !5381, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409, !5410, !5411, !5412, !5413, !5414, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473, !5474, !5475, !5476, !5477, !5478, !5479, !5480, !5481, !5482, !5483, !5484, !5485, !5486, !5487, !5495}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5322, file: !5321, line: 94, baseType: !120, size: 960)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !5322, file: !5321, line: 95, baseType: !183, size: 64, offset: 960)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !5322, file: !5321, line: 97, baseType: !99, size: 16, offset: 1024)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5322, file: !5321, line: 97, baseType: !99, size: 16, offset: 1040)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !5322, file: !5321, line: 99, baseType: !71, size: 32, offset: 1056)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5322, file: !5321, line: 99, baseType: !71, size: 32, offset: 1088)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5322, file: !5321, line: 99, baseType: !71, size: 32, offset: 1120)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !5322, file: !5321, line: 100, baseType: !71, size: 32, offset: 1152)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !5322, file: !5321, line: 100, baseType: !71, size: 32, offset: 1184)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !5322, file: !5321, line: 100, baseType: !71, size: 32, offset: 1216)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !5322, file: !5321, line: 101, baseType: !71, size: 32, offset: 1248)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !5322, file: !5321, line: 101, baseType: !71, size: 32, offset: 1280)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !5322, file: !5321, line: 101, baseType: !71, size: 32, offset: 1312)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !5322, file: !5321, line: 102, baseType: !71, size: 32, offset: 1344)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !5322, file: !5321, line: 102, baseType: !71, size: 32, offset: 1376)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !5322, file: !5321, line: 102, baseType: !71, size: 32, offset: 1408)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !5322, file: !5321, line: 103, baseType: !71, size: 32, offset: 1440)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !5322, file: !5321, line: 103, baseType: !71, size: 32, offset: 1472)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !5322, file: !5321, line: 103, baseType: !71, size: 32, offset: 1504)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !5322, file: !5321, line: 103, baseType: !71, size: 32, offset: 1536)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !5322, file: !5321, line: 103, baseType: !71, size: 32, offset: 1568)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5322, file: !5321, line: 104, baseType: !71, size: 32, offset: 1600)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5322, file: !5321, line: 104, baseType: !71, size: 32, offset: 1632)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !5322, file: !5321, line: 104, baseType: !71, size: 32, offset: 1664)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !5322, file: !5321, line: 104, baseType: !71, size: 32, offset: 1696)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !5322, file: !5321, line: 104, baseType: !71, size: 32, offset: 1728)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !5322, file: !5321, line: 105, baseType: !71, size: 32, offset: 1760)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !5322, file: !5321, line: 108, baseType: !5352, size: 704, offset: 1792)
!5352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !5321, line: 53, size: 704, elements: !5353)
!5353 = !{!5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5371}
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !5352, file: !5321, line: 54, baseType: !71, size: 32)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !5352, file: !5321, line: 55, baseType: !71, size: 32, offset: 32)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !5352, file: !5321, line: 56, baseType: !71, size: 32, offset: 64)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !5352, file: !5321, line: 57, baseType: !71, size: 32, offset: 96)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !5352, file: !5321, line: 59, baseType: !314, size: 96, offset: 128)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !5352, file: !5321, line: 60, baseType: !314, size: 96, offset: 224)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !5352, file: !5321, line: 61, baseType: !314, size: 96, offset: 320)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !5352, file: !5321, line: 63, baseType: !71, size: 32, offset: 416)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !5352, file: !5321, line: 64, baseType: !71, size: 32, offset: 448)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !5352, file: !5321, line: 65, baseType: !71, size: 32, offset: 480)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !5352, file: !5321, line: 67, baseType: !99, size: 16, offset: 512)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !5352, file: !5321, line: 68, baseType: !99, size: 16, offset: 528)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !5352, file: !5321, line: 69, baseType: !99, size: 16, offset: 544)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !5352, file: !5321, line: 70, baseType: !99, size: 16, offset: 560)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !5352, file: !5321, line: 72, baseType: !71, size: 32, offset: 576)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !5352, file: !5321, line: 73, baseType: !71, size: 32, offset: 608)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !5352, file: !5321, line: 74, baseType: !71, size: 32, offset: 640)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !5352, file: !5321, line: 75, baseType: !71, size: 32, offset: 672)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !5322, file: !5321, line: 109, baseType: !5373, size: 128, offset: 2496)
!5373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !5321, line: 79, size: 128, elements: !5374)
!5374 = !{!5375, !5376, !5377, !5378}
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5373, file: !5321, line: 80, baseType: !35, size: 32)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !5373, file: !5321, line: 81, baseType: !35, size: 32, offset: 32)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !5373, file: !5321, line: 82, baseType: !35, size: 32, offset: 64)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !5373, file: !5321, line: 83, baseType: !35, size: 32, offset: 96)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !5322, file: !5321, line: 111, baseType: !71, size: 32, offset: 2624)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !5322, file: !5321, line: 111, baseType: !71, size: 32, offset: 2656)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !5322, file: !5321, line: 112, baseType: !71, size: 32, offset: 2688)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !5322, file: !5321, line: 112, baseType: !71, size: 32, offset: 2720)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5322, file: !5321, line: 113, baseType: !71, size: 32, offset: 2752)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !5322, file: !5321, line: 114, baseType: !71, size: 32, offset: 2784)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !5322, file: !5321, line: 114, baseType: !71, size: 32, offset: 2816)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !5322, file: !5321, line: 115, baseType: !99, size: 16, offset: 2848)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !5322, file: !5321, line: 115, baseType: !99, size: 16, offset: 2864)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !5322, file: !5321, line: 116, baseType: !99, size: 16, offset: 2880)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !5322, file: !5321, line: 117, baseType: !140, size: 8, offset: 2896)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !5322, file: !5321, line: 117, baseType: !140, size: 8, offset: 2904)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !5322, file: !5321, line: 119, baseType: !71, size: 32, offset: 2912)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !5322, file: !5321, line: 119, baseType: !71, size: 32, offset: 2944)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !5322, file: !5321, line: 120, baseType: !99, size: 16, offset: 2976)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !5322, file: !5321, line: 120, baseType: !99, size: 16, offset: 2992)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !5322, file: !5321, line: 121, baseType: !71, size: 32, offset: 3008)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !5322, file: !5321, line: 121, baseType: !71, size: 32, offset: 3040)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !5322, file: !5321, line: 122, baseType: !71, size: 32, offset: 3072)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !5322, file: !5321, line: 123, baseType: !71, size: 32, offset: 3104)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !5322, file: !5321, line: 124, baseType: !99, size: 16, offset: 3136)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !5322, file: !5321, line: 125, baseType: !99, size: 16, offset: 3152)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5322, file: !5321, line: 127, baseType: !35, size: 32, offset: 3168)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !5322, file: !5321, line: 127, baseType: !35, size: 32, offset: 3200)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !5322, file: !5321, line: 128, baseType: !35, size: 32, offset: 3232)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !5322, file: !5321, line: 128, baseType: !35, size: 32, offset: 3264)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !5322, file: !5321, line: 129, baseType: !99, size: 16, offset: 3296)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !5322, file: !5321, line: 129, baseType: !99, size: 16, offset: 3312)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !5322, file: !5321, line: 129, baseType: !99, size: 16, offset: 3328)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !5322, file: !5321, line: 129, baseType: !99, size: 16, offset: 3344)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !5322, file: !5321, line: 130, baseType: !71, size: 32, offset: 3360)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !5322, file: !5321, line: 130, baseType: !71, size: 32, offset: 3392)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !5322, file: !5321, line: 130, baseType: !71, size: 32, offset: 3424)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !5322, file: !5321, line: 130, baseType: !71, size: 32, offset: 3456)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !5322, file: !5321, line: 131, baseType: !71, size: 32, offset: 3488)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !5322, file: !5321, line: 131, baseType: !71, size: 32, offset: 3520)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !5322, file: !5321, line: 131, baseType: !71, size: 32, offset: 3552)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !5322, file: !5321, line: 131, baseType: !71, size: 32, offset: 3584)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !5322, file: !5321, line: 132, baseType: !71, size: 32, offset: 3616)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !5322, file: !5321, line: 132, baseType: !71, size: 32, offset: 3648)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !5322, file: !5321, line: 133, baseType: !168, size: 512, offset: 3680)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !5322, file: !5321, line: 135, baseType: !71, size: 32, offset: 4192)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !5322, file: !5321, line: 136, baseType: !71, size: 32, offset: 4224)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !5322, file: !5321, line: 137, baseType: !71, size: 32, offset: 4256)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !5322, file: !5321, line: 138, baseType: !35, size: 32, offset: 4288)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !5322, file: !5321, line: 141, baseType: !140, size: 8, offset: 4320)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !5322, file: !5321, line: 141, baseType: !140, size: 8, offset: 4328)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !5322, file: !5321, line: 141, baseType: !140, size: 8, offset: 4336)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !5322, file: !5321, line: 141, baseType: !140, size: 8, offset: 4344)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !5322, file: !5321, line: 142, baseType: !99, size: 16, offset: 4352)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !5322, file: !5321, line: 142, baseType: !99, size: 16, offset: 4368)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !5322, file: !5321, line: 142, baseType: !99, size: 16, offset: 4384)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !5322, file: !5321, line: 145, baseType: !140, size: 8, offset: 4400)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5322, file: !5321, line: 145, baseType: !140, size: 8, offset: 4408)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !5322, file: !5321, line: 148, baseType: !99, size: 16, offset: 4416)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !5322, file: !5321, line: 148, baseType: !99, size: 16, offset: 4432)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !5322, file: !5321, line: 149, baseType: !71, size: 32, offset: 4448)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !5322, file: !5321, line: 149, baseType: !71, size: 32, offset: 4480)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !5322, file: !5321, line: 152, baseType: !420, size: 128, offset: 4512)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !5322, file: !5321, line: 153, baseType: !71, size: 32, offset: 4640)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !5322, file: !5321, line: 154, baseType: !71, size: 32, offset: 4672)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !5322, file: !5321, line: 157, baseType: !99, size: 16, offset: 4704)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !5322, file: !5321, line: 157, baseType: !99, size: 16, offset: 4720)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !5322, file: !5321, line: 160, baseType: !1270, size: 64, offset: 4736)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !5322, file: !5321, line: 161, baseType: !1270, size: 64, offset: 4800)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !5322, file: !5321, line: 162, baseType: !140, size: 8, offset: 4864)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !5322, file: !5321, line: 162, baseType: !140, size: 8, offset: 4872)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !5322, file: !5321, line: 163, baseType: !140, size: 8, offset: 4880)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !5322, file: !5321, line: 163, baseType: !140, size: 8, offset: 4888)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !5322, file: !5321, line: 164, baseType: !99, size: 16, offset: 4896)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !5322, file: !5321, line: 164, baseType: !99, size: 16, offset: 4912)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !5322, file: !5321, line: 165, baseType: !71, size: 32, offset: 4928)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !5322, file: !5321, line: 165, baseType: !71, size: 32, offset: 4960)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !5322, file: !5321, line: 167, baseType: !645, size: 1152, offset: 4992)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !5322, file: !5321, line: 168, baseType: !712, size: 64, offset: 6144)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !5322, file: !5321, line: 169, baseType: !642, size: 64, offset: 6208)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !5322, file: !5321, line: 170, baseType: !5456, size: 64, offset: 6272)
!5456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5457, size: 64)
!5457 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !2080, line: 43, flags: DIFlagFwdDecl)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !5322, file: !5321, line: 171, baseType: !397, size: 64, offset: 6336)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !5322, file: !5321, line: 174, baseType: !71, size: 32, offset: 6400)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !5322, file: !5321, line: 174, baseType: !71, size: 32, offset: 6432)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !5322, file: !5321, line: 174, baseType: !71, size: 32, offset: 6464)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !5322, file: !5321, line: 175, baseType: !71, size: 32, offset: 6496)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !5322, file: !5321, line: 175, baseType: !71, size: 32, offset: 6528)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !5322, file: !5321, line: 176, baseType: !99, size: 16, offset: 6560)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5322, file: !5321, line: 176, baseType: !99, size: 16, offset: 6576)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !5322, file: !5321, line: 179, baseType: !314, size: 96, offset: 6592)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !5322, file: !5321, line: 179, baseType: !314, size: 96, offset: 6688)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !5322, file: !5321, line: 180, baseType: !71, size: 32, offset: 6784)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !5322, file: !5321, line: 180, baseType: !71, size: 32, offset: 6816)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !5322, file: !5321, line: 180, baseType: !71, size: 32, offset: 6848)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !5322, file: !5321, line: 181, baseType: !71, size: 32, offset: 6880)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !5322, file: !5321, line: 181, baseType: !71, size: 32, offset: 6912)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !5322, file: !5321, line: 182, baseType: !71, size: 32, offset: 6944)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !5322, file: !5321, line: 182, baseType: !71, size: 32, offset: 6976)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !5322, file: !5321, line: 183, baseType: !99, size: 16, offset: 7008)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !5322, file: !5321, line: 183, baseType: !99, size: 16, offset: 7024)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !5322, file: !5321, line: 185, baseType: !35, size: 32, offset: 7040)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !5322, file: !5321, line: 186, baseType: !99, size: 16, offset: 7072)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5322, file: !5321, line: 187, baseType: !99, size: 16, offset: 7088)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !5322, file: !5321, line: 190, baseType: !420, size: 128, offset: 7104)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !5322, file: !5321, line: 191, baseType: !99, size: 16, offset: 7232)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !5322, file: !5321, line: 192, baseType: !99, size: 16, offset: 7248)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !5322, file: !5321, line: 195, baseType: !99, size: 16, offset: 7264)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !5322, file: !5321, line: 196, baseType: !99, size: 16, offset: 7280)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !5322, file: !5321, line: 197, baseType: !99, size: 16, offset: 7296)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !5322, file: !5321, line: 198, baseType: !1345, size: 48, offset: 7312)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !5322, file: !5321, line: 200, baseType: !5488, size: 64, offset: 7360)
!5488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5489, size: 64)
!5489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !5321, line: 86, size: 192, elements: !5490)
!5490 = !{!5491, !5492, !5493, !5494}
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !5489, file: !5321, line: 87, baseType: !362, size: 64)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !5489, file: !5321, line: 88, baseType: !1016, size: 64, offset: 64)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5489, file: !5321, line: 89, baseType: !35, size: 32, offset: 128)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5489, file: !5321, line: 90, baseType: !35, size: 32, offset: 160)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !5322, file: !5321, line: 202, baseType: !89, size: 128, offset: 7424)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !5312, file: !721, line: 636, baseType: !5497, size: 64, offset: 192)
!5497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5498, size: 64)
!5498 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !648, line: 261, baseType: !657)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !5312, file: !721, line: 637, baseType: !5500, size: 64, offset: 256)
!5500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5501, size: 64)
!5501 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lamp", file: !5502, line: 113, baseType: !5503)
!5502 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lamp_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lamp", file: !5502, line: 48, size: 4160, elements: !5504)
!5504 = !{!5505, !5506, !5507, !5508, !5509, !5510, !5511, !5512, !5513, !5514, !5515, !5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541, !5542, !5543, !5544, !5545, !5546, !5547, !5548, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5556, !5557, !5558, !5559, !5560, !5561, !5562, !5563, !5564, !5565, !5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577, !5578, !5579}
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5503, file: !5502, line: 49, baseType: !120, size: 960)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !5503, file: !5502, line: 50, baseType: !183, size: 64, offset: 960)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5503, file: !5502, line: 52, baseType: !99, size: 16, offset: 1024)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5503, file: !5502, line: 52, baseType: !99, size: 16, offset: 1040)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5503, file: !5502, line: 53, baseType: !35, size: 32, offset: 1056)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !5503, file: !5502, line: 55, baseType: !99, size: 16, offset: 1088)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !5503, file: !5502, line: 55, baseType: !99, size: 16, offset: 1104)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !5503, file: !5502, line: 56, baseType: !71, size: 32, offset: 1120)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5503, file: !5502, line: 56, baseType: !71, size: 32, offset: 1152)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5503, file: !5502, line: 56, baseType: !71, size: 32, offset: 1184)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !5503, file: !5502, line: 56, baseType: !71, size: 32, offset: 1216)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !5503, file: !5502, line: 57, baseType: !71, size: 32, offset: 1248)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !5503, file: !5502, line: 57, baseType: !71, size: 32, offset: 1280)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !5503, file: !5502, line: 57, baseType: !71, size: 32, offset: 1312)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "shdwpad", scope: !5503, file: !5502, line: 57, baseType: !71, size: 32, offset: 1344)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !5503, file: !5502, line: 59, baseType: !71, size: 32, offset: 1376)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !5503, file: !5502, line: 59, baseType: !71, size: 32, offset: 1408)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "spotsize", scope: !5503, file: !5502, line: 59, baseType: !71, size: 32, offset: 1440)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "spotblend", scope: !5503, file: !5502, line: 59, baseType: !71, size: 32, offset: 1472)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !5503, file: !5502, line: 60, baseType: !71, size: 32, offset: 1504)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "att1", scope: !5503, file: !5502, line: 63, baseType: !71, size: 32, offset: 1536)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "att2", scope: !5503, file: !5502, line: 63, baseType: !71, size: 32, offset: 1568)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !5503, file: !5502, line: 64, baseType: !1352, size: 64, offset: 1600)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !5503, file: !5502, line: 65, baseType: !99, size: 16, offset: 1664)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5503, file: !5502, line: 66, baseType: !99, size: 16, offset: 1680)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !5503, file: !5502, line: 68, baseType: !71, size: 32, offset: 1696)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !5503, file: !5502, line: 68, baseType: !71, size: 32, offset: 1728)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !5503, file: !5502, line: 69, baseType: !71, size: 32, offset: 1760)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !5503, file: !5502, line: 69, baseType: !71, size: 32, offset: 1792)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !5503, file: !5502, line: 69, baseType: !71, size: 32, offset: 1824)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "bleedbias", scope: !5503, file: !5502, line: 69, baseType: !71, size: 32, offset: 1856)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !5503, file: !5502, line: 69, baseType: !71, size: 32, offset: 1888)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !5503, file: !5502, line: 70, baseType: !99, size: 16, offset: 1920)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !5503, file: !5502, line: 70, baseType: !99, size: 16, offset: 1936)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !5503, file: !5502, line: 70, baseType: !99, size: 16, offset: 1952)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !5503, file: !5502, line: 70, baseType: !99, size: 16, offset: 1968)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !5503, file: !5502, line: 71, baseType: !140, size: 8, offset: 1984)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !5503, file: !5502, line: 71, baseType: !140, size: 8, offset: 1992)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !5503, file: !5502, line: 73, baseType: !99, size: 16, offset: 2000)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !5503, file: !5502, line: 73, baseType: !99, size: 16, offset: 2016)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !5503, file: !5502, line: 73, baseType: !99, size: 16, offset: 2032)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !5503, file: !5502, line: 74, baseType: !99, size: 16, offset: 2048)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !5503, file: !5502, line: 75, baseType: !99, size: 16, offset: 2064)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !5503, file: !5502, line: 76, baseType: !71, size: 32, offset: 2080)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !5503, file: !5502, line: 76, baseType: !71, size: 32, offset: 2112)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !5503, file: !5502, line: 76, baseType: !71, size: 32, offset: 2144)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !5503, file: !5502, line: 77, baseType: !71, size: 32, offset: 2176)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !5503, file: !5502, line: 78, baseType: !99, size: 16, offset: 2208)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "shadowmap_type", scope: !5503, file: !5502, line: 79, baseType: !99, size: 16, offset: 2224)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !5503, file: !5502, line: 82, baseType: !99, size: 16, offset: 2240)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !5503, file: !5502, line: 82, baseType: !99, size: 16, offset: 2256)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "sun_effect_type", scope: !5503, file: !5502, line: 85, baseType: !99, size: 16, offset: 2272)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !5503, file: !5502, line: 86, baseType: !99, size: 16, offset: 2288)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !5503, file: !5502, line: 87, baseType: !71, size: 32, offset: 2304)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !5503, file: !5502, line: 88, baseType: !71, size: 32, offset: 2336)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !5503, file: !5502, line: 89, baseType: !71, size: 32, offset: 2368)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !5503, file: !5502, line: 90, baseType: !71, size: 32, offset: 2400)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !5503, file: !5502, line: 91, baseType: !71, size: 32, offset: 2432)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "sun_intensity", scope: !5503, file: !5502, line: 92, baseType: !71, size: 32, offset: 2464)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "atm_turbidity", scope: !5503, file: !5502, line: 93, baseType: !71, size: 32, offset: 2496)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "atm_inscattering_factor", scope: !5503, file: !5502, line: 94, baseType: !71, size: 32, offset: 2528)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "atm_extinction_factor", scope: !5503, file: !5502, line: 95, baseType: !71, size: 32, offset: 2560)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "atm_distance_factor", scope: !5503, file: !5502, line: 96, baseType: !71, size: 32, offset: 2592)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !5503, file: !5502, line: 97, baseType: !71, size: 32, offset: 2624)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !5503, file: !5502, line: 98, baseType: !71, size: 32, offset: 2656)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "shadow_frustum_size", scope: !5503, file: !5502, line: 99, baseType: !71, size: 32, offset: 2688)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !5503, file: !5502, line: 100, baseType: !99, size: 16, offset: 2720)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !5503, file: !5502, line: 101, baseType: !1848, size: 16, offset: 2736)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !5503, file: !5502, line: 103, baseType: !642, size: 64, offset: 2752)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !5503, file: !5502, line: 104, baseType: !645, size: 1152, offset: 2816)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !5503, file: !5502, line: 105, baseType: !99, size: 16, offset: 3968)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !5503, file: !5502, line: 105, baseType: !99, size: 16, offset: 3984)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !5503, file: !5502, line: 106, baseType: !2342, size: 32, offset: 4000)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !5503, file: !5502, line: 109, baseType: !397, size: 64, offset: 4032)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !5503, file: !5502, line: 112, baseType: !712, size: 64, offset: 4096)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !5312, file: !721, line: 638, baseType: !5581, size: 64, offset: 320)
!5581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5582, size: 64)
!5582 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !569, line: 131, baseType: !568)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !5312, file: !721, line: 639, baseType: !5584, size: 64, offset: 384)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5585, size: 64)
!5585 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreestyleLineStyle", file: !5586, line: 454, baseType: !5587)
!5586 = !DIFile(filename: "blender/source/blender/makesdna/DNA_linestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleLineStyle", file: !5586, line: 421, size: 3712, elements: !5588)
!5588 = !{!5589, !5590, !5591, !5592, !5593, !5594, !5595, !5596, !5597, !5598, !5599, !5600, !5601, !5602, !5603, !5604, !5605, !5606, !5607, !5608, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618, !5619, !5620, !5621, !5622, !5623, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5587, file: !5586, line: 422, baseType: !120, size: 960)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !5587, file: !5586, line: 423, baseType: !183, size: 64, offset: 960)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !5587, file: !5586, line: 425, baseType: !71, size: 32, offset: 1024)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5587, file: !5586, line: 425, baseType: !71, size: 32, offset: 1056)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5587, file: !5586, line: 425, baseType: !71, size: 32, offset: 1088)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5587, file: !5586, line: 425, baseType: !71, size: 32, offset: 1120)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "thickness", scope: !5587, file: !5586, line: 426, baseType: !71, size: 32, offset: 1152)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_position", scope: !5587, file: !5586, line: 427, baseType: !35, size: 32, offset: 1184)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_ratio", scope: !5587, file: !5586, line: 428, baseType: !71, size: 32, offset: 1216)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5587, file: !5586, line: 429, baseType: !35, size: 32, offset: 1248)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !5587, file: !5586, line: 429, baseType: !35, size: 32, offset: 1280)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "chaining", scope: !5587, file: !5586, line: 430, baseType: !35, size: 32, offset: 1312)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "rounds", scope: !5587, file: !5586, line: 431, baseType: !7, size: 32, offset: 1344)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "split_length", scope: !5587, file: !5586, line: 432, baseType: !71, size: 32, offset: 1376)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "min_angle", scope: !5587, file: !5586, line: 433, baseType: !71, size: 32, offset: 1408)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "max_angle", scope: !5587, file: !5586, line: 433, baseType: !71, size: 32, offset: 1440)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "min_length", scope: !5587, file: !5586, line: 434, baseType: !71, size: 32, offset: 1472)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "max_length", scope: !5587, file: !5586, line: 434, baseType: !71, size: 32, offset: 1504)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "chain_count", scope: !5587, file: !5586, line: 435, baseType: !7, size: 32, offset: 1536)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash1", scope: !5587, file: !5586, line: 436, baseType: !5609, size: 16, offset: 1568)
!5609 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap1", scope: !5587, file: !5586, line: 436, baseType: !5609, size: 16, offset: 1584)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash2", scope: !5587, file: !5586, line: 437, baseType: !5609, size: 16, offset: 1600)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap2", scope: !5587, file: !5586, line: 437, baseType: !5609, size: 16, offset: 1616)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash3", scope: !5587, file: !5586, line: 438, baseType: !5609, size: 16, offset: 1632)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap3", scope: !5587, file: !5586, line: 438, baseType: !5609, size: 16, offset: 1648)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "sort_key", scope: !5587, file: !5586, line: 439, baseType: !35, size: 32, offset: 1664)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "integration_type", scope: !5587, file: !5586, line: 439, baseType: !35, size: 32, offset: 1696)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "texstep", scope: !5587, file: !5586, line: 440, baseType: !71, size: 32, offset: 1728)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !5587, file: !5586, line: 441, baseType: !99, size: 16, offset: 1760)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !5587, file: !5586, line: 441, baseType: !99, size: 16, offset: 1776)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !5587, file: !5586, line: 442, baseType: !99, size: 16, offset: 1792)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5587, file: !5586, line: 442, baseType: !1345, size: 48, offset: 1808)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "dash1", scope: !5587, file: !5586, line: 443, baseType: !5609, size: 16, offset: 1856)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "gap1", scope: !5587, file: !5586, line: 443, baseType: !5609, size: 16, offset: 1872)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "dash2", scope: !5587, file: !5586, line: 443, baseType: !5609, size: 16, offset: 1888)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "gap2", scope: !5587, file: !5586, line: 443, baseType: !5609, size: 16, offset: 1904)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "dash3", scope: !5587, file: !5586, line: 443, baseType: !5609, size: 16, offset: 1920)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "gap3", scope: !5587, file: !5586, line: 443, baseType: !5609, size: 16, offset: 1936)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !5587, file: !5586, line: 444, baseType: !35, size: 32, offset: 1952)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !5587, file: !5586, line: 446, baseType: !645, size: 1152, offset: 1984)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !5587, file: !5586, line: 448, baseType: !712, size: 64, offset: 3136)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "color_modifiers", scope: !5587, file: !5586, line: 450, baseType: !89, size: 128, offset: 3200)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_modifiers", scope: !5587, file: !5586, line: 451, baseType: !89, size: 128, offset: 3328)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_modifiers", scope: !5587, file: !5586, line: 452, baseType: !89, size: 128, offset: 3456)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "geometry_modifiers", scope: !5587, file: !5586, line: 453, baseType: !89, size: 128, offset: 3584)
!5635 = !DILocation(line: 1059, column: 2, scope: !5311)
!5636 = !DILocalVariable(name: "ntree", scope: !5311, file: !3, line: 1059, type: !5315)
!5637 = !DILocalVariable(name: "id", scope: !5311, file: !3, line: 1059, type: !134)
!5638 = !DILocation(line: 1059, column: 2, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !3, line: 1059, column: 2)
!5640 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 1059, column: 2)
!5641 = !DILocation(line: 1059, column: 2, scope: !5640)
!5642 = !DILocation(line: 1060, column: 33, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5644, file: !3, line: 1059, column: 37)
!5644 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 1059, column: 2)
!5645 = !DILocation(line: 1060, column: 27, scope: !5643)
!5646 = !DILocation(line: 1060, column: 39, scope: !5643)
!5647 = !DILocation(line: 1060, column: 3, scope: !5643)
!5648 = !DILocation(line: 1061, column: 4, scope: !5644)
!5649 = distinct !{!5649, !5635, !5650}
!5650 = !DILocation(line: 1061, column: 4, scope: !5311)
!5651 = !DILocation(line: 1064, column: 28, scope: !5065)
!5652 = !DILocation(line: 1064, column: 34, scope: !5065)
!5653 = !DILocation(line: 1064, column: 2, scope: !5065)
!5654 = !DILocation(line: 1065, column: 1, scope: !5065)
!5655 = distinct !DISubprogram(name: "BKE_mask_coord_from_frame", scope: !3, file: !3, line: 1067, type: !3706, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!5656 = !DILocalVariable(name: "r_co", arg: 1, scope: !5655, file: !3, line: 1067, type: !639)
!5657 = !DILocation(line: 1067, column: 38, scope: !5655)
!5658 = !DILocalVariable(name: "co", arg: 2, scope: !5655, file: !3, line: 1067, type: !3042)
!5659 = !DILocation(line: 1067, column: 59, scope: !5655)
!5660 = !DILocalVariable(name: "frame_size", arg: 3, scope: !5655, file: !3, line: 1067, type: !3042)
!5661 = !DILocation(line: 1067, column: 78, scope: !5655)
!5662 = !DILocation(line: 1069, column: 6, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1069, column: 6)
!5664 = !DILocation(line: 1069, column: 23, scope: !5663)
!5665 = !DILocation(line: 1069, column: 20, scope: !5663)
!5666 = !DILocation(line: 1069, column: 6, scope: !5655)
!5667 = !DILocation(line: 1070, column: 13, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 1069, column: 38)
!5669 = !DILocation(line: 1070, column: 3, scope: !5668)
!5670 = !DILocation(line: 1070, column: 11, scope: !5668)
!5671 = !DILocation(line: 1071, column: 13, scope: !5668)
!5672 = !DILocation(line: 1071, column: 3, scope: !5668)
!5673 = !DILocation(line: 1071, column: 11, scope: !5668)
!5674 = !DILocation(line: 1072, column: 2, scope: !5668)
!5675 = !DILocation(line: 1073, column: 11, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 1073, column: 11)
!5677 = !DILocation(line: 1073, column: 27, scope: !5676)
!5678 = !DILocation(line: 1073, column: 25, scope: !5676)
!5679 = !DILocation(line: 1073, column: 11, scope: !5663)
!5680 = !DILocation(line: 1074, column: 15, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5676, file: !3, line: 1073, column: 42)
!5682 = !DILocation(line: 1074, column: 21, scope: !5681)
!5683 = !DILocation(line: 1074, column: 32, scope: !5681)
!5684 = !DILocation(line: 1074, column: 48, scope: !5681)
!5685 = !DILocation(line: 1074, column: 46, scope: !5681)
!5686 = !DILocation(line: 1074, column: 29, scope: !5681)
!5687 = !DILocation(line: 1074, column: 64, scope: !5681)
!5688 = !DILocation(line: 1074, column: 3, scope: !5681)
!5689 = !DILocation(line: 1074, column: 11, scope: !5681)
!5690 = !DILocation(line: 1075, column: 13, scope: !5681)
!5691 = !DILocation(line: 1075, column: 3, scope: !5681)
!5692 = !DILocation(line: 1075, column: 11, scope: !5681)
!5693 = !DILocation(line: 1076, column: 2, scope: !5681)
!5694 = !DILocation(line: 1078, column: 13, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5676, file: !3, line: 1077, column: 7)
!5696 = !DILocation(line: 1078, column: 3, scope: !5695)
!5697 = !DILocation(line: 1078, column: 11, scope: !5695)
!5698 = !DILocation(line: 1079, column: 15, scope: !5695)
!5699 = !DILocation(line: 1079, column: 21, scope: !5695)
!5700 = !DILocation(line: 1079, column: 32, scope: !5695)
!5701 = !DILocation(line: 1079, column: 48, scope: !5695)
!5702 = !DILocation(line: 1079, column: 46, scope: !5695)
!5703 = !DILocation(line: 1079, column: 29, scope: !5695)
!5704 = !DILocation(line: 1079, column: 64, scope: !5695)
!5705 = !DILocation(line: 1079, column: 3, scope: !5695)
!5706 = !DILocation(line: 1079, column: 11, scope: !5695)
!5707 = !DILocation(line: 1081, column: 1, scope: !5655)
!5708 = distinct !DISubprogram(name: "BKE_mask_coord_from_movieclip", scope: !3, file: !3, line: 1083, type: !5709, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!5709 = !DISubroutineType(types: !5710)
!5710 = !{null, !2305, !5711, !639, !3042}
!5711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5712, size: 64)
!5712 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieClipUser", file: !110, line: 53, baseType: !109)
!5713 = !DILocalVariable(name: "clip", arg: 1, scope: !5708, file: !3, line: 1083, type: !2305)
!5714 = !DILocation(line: 1083, column: 47, scope: !5708)
!5715 = !DILocalVariable(name: "user", arg: 2, scope: !5708, file: !3, line: 1083, type: !5711)
!5716 = !DILocation(line: 1083, column: 68, scope: !5708)
!5717 = !DILocalVariable(name: "r_co", arg: 3, scope: !5708, file: !3, line: 1083, type: !639)
!5718 = !DILocation(line: 1083, column: 80, scope: !5708)
!5719 = !DILocalVariable(name: "co", arg: 4, scope: !5708, file: !3, line: 1083, type: !3042)
!5720 = !DILocation(line: 1083, column: 101, scope: !5708)
!5721 = !DILocalVariable(name: "aspx", scope: !5708, file: !3, line: 1085, type: !71)
!5722 = !DILocation(line: 1085, column: 8, scope: !5708)
!5723 = !DILocalVariable(name: "aspy", scope: !5708, file: !3, line: 1085, type: !71)
!5724 = !DILocation(line: 1085, column: 14, scope: !5708)
!5725 = !DILocalVariable(name: "frame_size", scope: !5708, file: !3, line: 1086, type: !250)
!5726 = !DILocation(line: 1086, column: 8, scope: !5708)
!5727 = !DILocation(line: 1089, column: 28, scope: !5708)
!5728 = !DILocation(line: 1089, column: 34, scope: !5708)
!5729 = !DILocation(line: 1089, column: 40, scope: !5708)
!5730 = !DILocation(line: 1089, column: 2, scope: !5708)
!5731 = !DILocation(line: 1090, column: 27, scope: !5708)
!5732 = !DILocation(line: 1090, column: 2, scope: !5708)
!5733 = !DILocation(line: 1092, column: 20, scope: !5708)
!5734 = !DILocation(line: 1092, column: 27, scope: !5708)
!5735 = !DILocation(line: 1092, column: 25, scope: !5708)
!5736 = !DILocation(line: 1092, column: 2, scope: !5708)
!5737 = !DILocation(line: 1092, column: 16, scope: !5708)
!5738 = !DILocation(line: 1094, column: 28, scope: !5708)
!5739 = !DILocation(line: 1094, column: 34, scope: !5708)
!5740 = !DILocation(line: 1094, column: 38, scope: !5708)
!5741 = !DILocation(line: 1094, column: 2, scope: !5708)
!5742 = !DILocation(line: 1095, column: 1, scope: !5708)
!5743 = distinct !DISubprogram(name: "BKE_mask_coord_from_image", scope: !3, file: !3, line: 1097, type: !5744, scopeLine: 1098, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!5744 = !DISubroutineType(types: !5745)
!5745 = !{null, !5746, !5748, !639, !3042}
!5746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5747, size: 64)
!5747 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !197, line: 127, baseType: !363)
!5748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5749, size: 64)
!5749 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !197, line: 65, baseType: !555)
!5750 = !DILocalVariable(name: "image", arg: 1, scope: !5743, file: !3, line: 1097, type: !5746)
!5751 = !DILocation(line: 1097, column: 39, scope: !5743)
!5752 = !DILocalVariable(name: "iuser", arg: 2, scope: !5743, file: !3, line: 1097, type: !5748)
!5753 = !DILocation(line: 1097, column: 57, scope: !5743)
!5754 = !DILocalVariable(name: "r_co", arg: 3, scope: !5743, file: !3, line: 1097, type: !639)
!5755 = !DILocation(line: 1097, column: 70, scope: !5743)
!5756 = !DILocalVariable(name: "co", arg: 4, scope: !5743, file: !3, line: 1097, type: !3042)
!5757 = !DILocation(line: 1097, column: 91, scope: !5743)
!5758 = !DILocalVariable(name: "aspx", scope: !5743, file: !3, line: 1099, type: !71)
!5759 = !DILocation(line: 1099, column: 8, scope: !5743)
!5760 = !DILocalVariable(name: "aspy", scope: !5743, file: !3, line: 1099, type: !71)
!5761 = !DILocation(line: 1099, column: 14, scope: !5743)
!5762 = !DILocalVariable(name: "frame_size", scope: !5743, file: !3, line: 1100, type: !250)
!5763 = !DILocation(line: 1100, column: 8, scope: !5743)
!5764 = !DILocation(line: 1102, column: 24, scope: !5743)
!5765 = !DILocation(line: 1102, column: 31, scope: !5743)
!5766 = !DILocation(line: 1102, column: 38, scope: !5743)
!5767 = !DILocation(line: 1102, column: 2, scope: !5743)
!5768 = !DILocation(line: 1103, column: 23, scope: !5743)
!5769 = !DILocation(line: 1103, column: 2, scope: !5743)
!5770 = !DILocation(line: 1105, column: 20, scope: !5743)
!5771 = !DILocation(line: 1105, column: 27, scope: !5743)
!5772 = !DILocation(line: 1105, column: 25, scope: !5743)
!5773 = !DILocation(line: 1105, column: 2, scope: !5743)
!5774 = !DILocation(line: 1105, column: 16, scope: !5743)
!5775 = !DILocation(line: 1107, column: 28, scope: !5743)
!5776 = !DILocation(line: 1107, column: 34, scope: !5743)
!5777 = !DILocation(line: 1107, column: 38, scope: !5743)
!5778 = !DILocation(line: 1107, column: 2, scope: !5743)
!5779 = !DILocation(line: 1108, column: 1, scope: !5743)
!5780 = distinct !DISubprogram(name: "BKE_mask_coord_to_frame", scope: !3, file: !3, line: 1111, type: !3706, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!5781 = !DILocalVariable(name: "r_co", arg: 1, scope: !5780, file: !3, line: 1111, type: !639)
!5782 = !DILocation(line: 1111, column: 36, scope: !5780)
!5783 = !DILocalVariable(name: "co", arg: 2, scope: !5780, file: !3, line: 1111, type: !3042)
!5784 = !DILocation(line: 1111, column: 57, scope: !5780)
!5785 = !DILocalVariable(name: "frame_size", arg: 3, scope: !5780, file: !3, line: 1111, type: !3042)
!5786 = !DILocation(line: 1111, column: 76, scope: !5780)
!5787 = !DILocation(line: 1113, column: 6, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 1113, column: 6)
!5789 = !DILocation(line: 1113, column: 23, scope: !5788)
!5790 = !DILocation(line: 1113, column: 20, scope: !5788)
!5791 = !DILocation(line: 1113, column: 6, scope: !5780)
!5792 = !DILocation(line: 1114, column: 13, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 1113, column: 38)
!5794 = !DILocation(line: 1114, column: 3, scope: !5793)
!5795 = !DILocation(line: 1114, column: 11, scope: !5793)
!5796 = !DILocation(line: 1115, column: 13, scope: !5793)
!5797 = !DILocation(line: 1115, column: 3, scope: !5793)
!5798 = !DILocation(line: 1115, column: 11, scope: !5793)
!5799 = !DILocation(line: 1116, column: 2, scope: !5793)
!5800 = !DILocation(line: 1117, column: 11, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 1117, column: 11)
!5802 = !DILocation(line: 1117, column: 27, scope: !5801)
!5803 = !DILocation(line: 1117, column: 25, scope: !5801)
!5804 = !DILocation(line: 1117, column: 11, scope: !5788)
!5805 = !DILocation(line: 1118, column: 15, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 1117, column: 42)
!5807 = !DILocation(line: 1118, column: 21, scope: !5806)
!5808 = !DILocation(line: 1118, column: 32, scope: !5806)
!5809 = !DILocation(line: 1118, column: 48, scope: !5806)
!5810 = !DILocation(line: 1118, column: 46, scope: !5806)
!5811 = !DILocation(line: 1118, column: 29, scope: !5806)
!5812 = !DILocation(line: 1118, column: 64, scope: !5806)
!5813 = !DILocation(line: 1118, column: 3, scope: !5806)
!5814 = !DILocation(line: 1118, column: 11, scope: !5806)
!5815 = !DILocation(line: 1119, column: 13, scope: !5806)
!5816 = !DILocation(line: 1119, column: 3, scope: !5806)
!5817 = !DILocation(line: 1119, column: 11, scope: !5806)
!5818 = !DILocation(line: 1120, column: 2, scope: !5806)
!5819 = !DILocation(line: 1122, column: 13, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 1121, column: 7)
!5821 = !DILocation(line: 1122, column: 3, scope: !5820)
!5822 = !DILocation(line: 1122, column: 11, scope: !5820)
!5823 = !DILocation(line: 1123, column: 15, scope: !5820)
!5824 = !DILocation(line: 1123, column: 21, scope: !5820)
!5825 = !DILocation(line: 1123, column: 32, scope: !5820)
!5826 = !DILocation(line: 1123, column: 48, scope: !5820)
!5827 = !DILocation(line: 1123, column: 46, scope: !5820)
!5828 = !DILocation(line: 1123, column: 29, scope: !5820)
!5829 = !DILocation(line: 1123, column: 64, scope: !5820)
!5830 = !DILocation(line: 1123, column: 3, scope: !5820)
!5831 = !DILocation(line: 1123, column: 11, scope: !5820)
!5832 = !DILocation(line: 1125, column: 1, scope: !5780)
!5833 = distinct !DISubprogram(name: "BKE_mask_coord_to_movieclip", scope: !3, file: !3, line: 1127, type: !5709, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!5834 = !DILocalVariable(name: "clip", arg: 1, scope: !5833, file: !3, line: 1127, type: !2305)
!5835 = !DILocation(line: 1127, column: 45, scope: !5833)
!5836 = !DILocalVariable(name: "user", arg: 2, scope: !5833, file: !3, line: 1127, type: !5711)
!5837 = !DILocation(line: 1127, column: 66, scope: !5833)
!5838 = !DILocalVariable(name: "r_co", arg: 3, scope: !5833, file: !3, line: 1127, type: !639)
!5839 = !DILocation(line: 1127, column: 78, scope: !5833)
!5840 = !DILocalVariable(name: "co", arg: 4, scope: !5833, file: !3, line: 1127, type: !3042)
!5841 = !DILocation(line: 1127, column: 99, scope: !5833)
!5842 = !DILocalVariable(name: "aspx", scope: !5833, file: !3, line: 1129, type: !71)
!5843 = !DILocation(line: 1129, column: 8, scope: !5833)
!5844 = !DILocalVariable(name: "aspy", scope: !5833, file: !3, line: 1129, type: !71)
!5845 = !DILocation(line: 1129, column: 14, scope: !5833)
!5846 = !DILocalVariable(name: "frame_size", scope: !5833, file: !3, line: 1130, type: !250)
!5847 = !DILocation(line: 1130, column: 8, scope: !5833)
!5848 = !DILocation(line: 1133, column: 28, scope: !5833)
!5849 = !DILocation(line: 1133, column: 34, scope: !5833)
!5850 = !DILocation(line: 1133, column: 40, scope: !5833)
!5851 = !DILocation(line: 1133, column: 2, scope: !5833)
!5852 = !DILocation(line: 1134, column: 27, scope: !5833)
!5853 = !DILocation(line: 1134, column: 2, scope: !5833)
!5854 = !DILocation(line: 1136, column: 20, scope: !5833)
!5855 = !DILocation(line: 1136, column: 27, scope: !5833)
!5856 = !DILocation(line: 1136, column: 25, scope: !5833)
!5857 = !DILocation(line: 1136, column: 2, scope: !5833)
!5858 = !DILocation(line: 1136, column: 16, scope: !5833)
!5859 = !DILocation(line: 1138, column: 26, scope: !5833)
!5860 = !DILocation(line: 1138, column: 32, scope: !5833)
!5861 = !DILocation(line: 1138, column: 36, scope: !5833)
!5862 = !DILocation(line: 1138, column: 2, scope: !5833)
!5863 = !DILocation(line: 1139, column: 1, scope: !5833)
!5864 = distinct !DISubprogram(name: "BKE_mask_coord_to_image", scope: !3, file: !3, line: 1141, type: !5744, scopeLine: 1142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!5865 = !DILocalVariable(name: "image", arg: 1, scope: !5864, file: !3, line: 1141, type: !5746)
!5866 = !DILocation(line: 1141, column: 37, scope: !5864)
!5867 = !DILocalVariable(name: "iuser", arg: 2, scope: !5864, file: !3, line: 1141, type: !5748)
!5868 = !DILocation(line: 1141, column: 55, scope: !5864)
!5869 = !DILocalVariable(name: "r_co", arg: 3, scope: !5864, file: !3, line: 1141, type: !639)
!5870 = !DILocation(line: 1141, column: 68, scope: !5864)
!5871 = !DILocalVariable(name: "co", arg: 4, scope: !5864, file: !3, line: 1141, type: !3042)
!5872 = !DILocation(line: 1141, column: 89, scope: !5864)
!5873 = !DILocalVariable(name: "aspx", scope: !5864, file: !3, line: 1143, type: !71)
!5874 = !DILocation(line: 1143, column: 8, scope: !5864)
!5875 = !DILocalVariable(name: "aspy", scope: !5864, file: !3, line: 1143, type: !71)
!5876 = !DILocation(line: 1143, column: 14, scope: !5864)
!5877 = !DILocalVariable(name: "frame_size", scope: !5864, file: !3, line: 1144, type: !250)
!5878 = !DILocation(line: 1144, column: 8, scope: !5864)
!5879 = !DILocation(line: 1147, column: 24, scope: !5864)
!5880 = !DILocation(line: 1147, column: 31, scope: !5864)
!5881 = !DILocation(line: 1147, column: 38, scope: !5864)
!5882 = !DILocation(line: 1147, column: 2, scope: !5864)
!5883 = !DILocation(line: 1148, column: 23, scope: !5864)
!5884 = !DILocation(line: 1148, column: 2, scope: !5864)
!5885 = !DILocation(line: 1150, column: 20, scope: !5864)
!5886 = !DILocation(line: 1150, column: 27, scope: !5864)
!5887 = !DILocation(line: 1150, column: 25, scope: !5864)
!5888 = !DILocation(line: 1150, column: 2, scope: !5864)
!5889 = !DILocation(line: 1150, column: 16, scope: !5864)
!5890 = !DILocation(line: 1152, column: 26, scope: !5864)
!5891 = !DILocation(line: 1152, column: 32, scope: !5864)
!5892 = !DILocation(line: 1152, column: 36, scope: !5864)
!5893 = !DILocation(line: 1152, column: 2, scope: !5864)
!5894 = !DILocation(line: 1153, column: 1, scope: !5864)
!5895 = distinct !DISubprogram(name: "BKE_mask_point_parent_matrix_get", scope: !3, file: !3, line: 1155, type: !5896, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!5896 = !DISubroutineType(types: !5897)
!5897 = !{null, !2355, !71, !3842}
!5898 = !DILocalVariable(name: "point", arg: 1, scope: !5895, file: !3, line: 1155, type: !2355)
!5899 = !DILocation(line: 1155, column: 56, scope: !5895)
!5900 = !DILocalVariable(name: "ctime", arg: 2, scope: !5895, file: !3, line: 1155, type: !71)
!5901 = !DILocation(line: 1155, column: 69, scope: !5895)
!5902 = !DILocalVariable(name: "parent_matrix", arg: 3, scope: !5895, file: !3, line: 1155, type: !3842)
!5903 = !DILocation(line: 1155, column: 82, scope: !5895)
!5904 = !DILocalVariable(name: "parent", scope: !5895, file: !3, line: 1157, type: !2851)
!5905 = !DILocation(line: 1157, column: 14, scope: !5895)
!5906 = !DILocation(line: 1157, column: 24, scope: !5895)
!5907 = !DILocation(line: 1157, column: 31, scope: !5895)
!5908 = !DILocation(line: 1159, column: 10, scope: !5895)
!5909 = !DILocation(line: 1159, column: 2, scope: !5895)
!5910 = !DILocation(line: 1161, column: 7, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 1161, column: 6)
!5912 = !DILocation(line: 1161, column: 6, scope: !5895)
!5913 = !DILocation(line: 1162, column: 3, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5911, file: !3, line: 1161, column: 15)
!5915 = !DILocation(line: 1165, column: 6, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 1165, column: 6)
!5917 = !DILocation(line: 1165, column: 14, scope: !5916)
!5918 = !DILocation(line: 1165, column: 22, scope: !5916)
!5919 = !DILocation(line: 1165, column: 6, scope: !5895)
!5920 = !DILocation(line: 1166, column: 7, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 1166, column: 7)
!5922 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 1165, column: 32)
!5923 = !DILocation(line: 1166, column: 15, scope: !5921)
!5924 = !DILocation(line: 1166, column: 7, scope: !5922)
!5925 = !DILocalVariable(name: "clip", scope: !5926, file: !3, line: 1167, type: !2305)
!5926 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 1166, column: 19)
!5927 = !DILocation(line: 1167, column: 15, scope: !5926)
!5928 = !DILocation(line: 1167, column: 36, scope: !5926)
!5929 = !DILocation(line: 1167, column: 44, scope: !5926)
!5930 = !DILocation(line: 1167, column: 22, scope: !5926)
!5931 = !DILocalVariable(name: "tracking", scope: !5926, file: !3, line: 1168, type: !2307)
!5932 = !DILocation(line: 1168, column: 19, scope: !5926)
!5933 = !DILocation(line: 1168, column: 49, scope: !5926)
!5934 = !DILocation(line: 1168, column: 55, scope: !5926)
!5935 = !DILocalVariable(name: "ob", scope: !5926, file: !3, line: 1169, type: !5936)
!5936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5937, size: 64)
!5937 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingObject", file: !207, line: 293, baseType: !5938)
!5938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingObject", file: !207, line: 280, size: 1216, elements: !5939)
!5939 = !{!5940, !5942, !5943, !5944, !5945, !5946, !5947, !5948, !5949, !5950}
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5938, file: !207, line: 281, baseType: !5941, size: 64)
!5941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5938, size: 64)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5938, file: !207, line: 281, baseType: !5941, size: 64, offset: 64)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5938, file: !207, line: 283, baseType: !168, size: 512, offset: 128)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5938, file: !207, line: 284, baseType: !35, size: 32, offset: 640)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !5938, file: !207, line: 285, baseType: !71, size: 32, offset: 672)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !5938, file: !207, line: 287, baseType: !89, size: 128, offset: 704)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !5938, file: !207, line: 288, baseType: !89, size: 128, offset: 832)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !5938, file: !207, line: 289, baseType: !259, size: 192, offset: 960)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !5938, file: !207, line: 292, baseType: !35, size: 32, offset: 1152)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !5938, file: !207, line: 292, baseType: !35, size: 32, offset: 1184)
!5951 = !DILocation(line: 1169, column: 25, scope: !5926)
!5952 = !DILocation(line: 1169, column: 60, scope: !5926)
!5953 = !DILocation(line: 1169, column: 70, scope: !5926)
!5954 = !DILocation(line: 1169, column: 78, scope: !5926)
!5955 = !DILocation(line: 1169, column: 30, scope: !5926)
!5956 = !DILocation(line: 1171, column: 8, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 1171, column: 8)
!5958 = !DILocation(line: 1171, column: 8, scope: !5926)
!5959 = !DILocalVariable(name: "user", scope: !5960, file: !3, line: 1172, type: !5712)
!5960 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 1171, column: 12)
!5961 = !DILocation(line: 1172, column: 19, scope: !5960)
!5962 = !DILocalVariable(name: "clip_framenr", scope: !5960, file: !3, line: 1173, type: !71)
!5963 = !DILocation(line: 1173, column: 11, scope: !5960)
!5964 = !DILocation(line: 1173, column: 66, scope: !5960)
!5965 = !DILocation(line: 1173, column: 72, scope: !5960)
!5966 = !DILocation(line: 1173, column: 26, scope: !5960)
!5967 = !DILocation(line: 1174, column: 41, scope: !5960)
!5968 = !DILocation(line: 1174, column: 5, scope: !5960)
!5969 = !DILocation(line: 1176, column: 9, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 1176, column: 9)
!5971 = !DILocation(line: 1176, column: 17, scope: !5970)
!5972 = !DILocation(line: 1176, column: 22, scope: !5970)
!5973 = !DILocation(line: 1176, column: 9, scope: !5960)
!5974 = !DILocalVariable(name: "track", scope: !5975, file: !3, line: 1177, type: !285)
!5975 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 1176, column: 50)
!5976 = !DILocation(line: 1177, column: 26, scope: !5975)
!5977 = !DILocation(line: 1177, column: 63, scope: !5975)
!5978 = !DILocation(line: 1177, column: 73, scope: !5975)
!5979 = !DILocation(line: 1177, column: 77, scope: !5975)
!5980 = !DILocation(line: 1177, column: 85, scope: !5975)
!5981 = !DILocation(line: 1177, column: 34, scope: !5975)
!5982 = !DILocation(line: 1179, column: 10, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 1179, column: 10)
!5984 = !DILocation(line: 1179, column: 10, scope: !5975)
!5985 = !DILocalVariable(name: "marker_position", scope: !5986, file: !3, line: 1180, type: !250)
!5986 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 1179, column: 17)
!5987 = !DILocation(line: 1180, column: 13, scope: !5986)
!5988 = !DILocalVariable(name: "parent_co", scope: !5986, file: !3, line: 1180, type: !250)
!5989 = !DILocation(line: 1180, column: 33, scope: !5986)
!5990 = !DILocation(line: 1181, column: 49, scope: !5986)
!5991 = !DILocation(line: 1181, column: 56, scope: !5986)
!5992 = !DILocation(line: 1181, column: 70, scope: !5986)
!5993 = !DILocation(line: 1181, column: 7, scope: !5986)
!5994 = !DILocation(line: 1182, column: 37, scope: !5986)
!5995 = !DILocation(line: 1182, column: 50, scope: !5986)
!5996 = !DILocation(line: 1182, column: 61, scope: !5986)
!5997 = !DILocation(line: 1182, column: 7, scope: !5986)
!5998 = !DILocation(line: 1183, column: 19, scope: !5986)
!5999 = !DILocation(line: 1183, column: 37, scope: !5986)
!6000 = !DILocation(line: 1183, column: 48, scope: !5986)
!6001 = !DILocation(line: 1183, column: 56, scope: !5986)
!6002 = !DILocation(line: 1183, column: 7, scope: !5986)
!6003 = !DILocation(line: 1184, column: 6, scope: !5986)
!6004 = !DILocation(line: 1185, column: 5, scope: !5975)
!6005 = !DILocalVariable(name: "plane_track", scope: !6006, file: !3, line: 1187, type: !339)
!6006 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 1186, column: 61)
!6007 = !DILocation(line: 1187, column: 31, scope: !6006)
!6008 = !DILocation(line: 1187, column: 80, scope: !6006)
!6009 = !DILocation(line: 1187, column: 90, scope: !6006)
!6010 = !DILocation(line: 1187, column: 94, scope: !6006)
!6011 = !DILocation(line: 1187, column: 102, scope: !6006)
!6012 = !DILocation(line: 1187, column: 45, scope: !6006)
!6013 = !DILocation(line: 1189, column: 10, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6006, file: !3, line: 1189, column: 10)
!6015 = !DILocation(line: 1189, column: 10, scope: !6006)
!6016 = !DILocalVariable(name: "plane_marker", scope: !6017, file: !3, line: 1190, type: !352)
!6017 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 1189, column: 23)
!6018 = !DILocation(line: 1190, column: 33, scope: !6017)
!6019 = !DILocation(line: 1190, column: 78, scope: !6017)
!6020 = !DILocation(line: 1190, column: 91, scope: !6017)
!6021 = !DILocation(line: 1190, column: 48, scope: !6017)
!6022 = !DILocalVariable(name: "aspx", scope: !6017, file: !3, line: 1191, type: !71)
!6023 = !DILocation(line: 1191, column: 13, scope: !6017)
!6024 = !DILocalVariable(name: "aspy", scope: !6017, file: !3, line: 1191, type: !71)
!6025 = !DILocation(line: 1191, column: 19, scope: !6017)
!6026 = !DILocalVariable(name: "frame_size", scope: !6017, file: !3, line: 1192, type: !250)
!6027 = !DILocation(line: 1192, column: 13, scope: !6017)
!6028 = !DILocalVariable(name: "H", scope: !6017, file: !3, line: 1192, type: !1307)
!6029 = !DILocation(line: 1192, column: 28, scope: !6017)
!6030 = !DILocalVariable(name: "mask_from_clip_matrix", scope: !6017, file: !3, line: 1192, type: !1307)
!6031 = !DILocation(line: 1192, column: 37, scope: !6017)
!6032 = !DILocalVariable(name: "mask_to_clip_matrix", scope: !6017, file: !3, line: 1192, type: !1307)
!6033 = !DILocation(line: 1192, column: 66, scope: !6017)
!6034 = !DILocation(line: 1194, column: 49, scope: !6017)
!6035 = !DILocation(line: 1194, column: 57, scope: !6017)
!6036 = !DILocation(line: 1194, column: 78, scope: !6017)
!6037 = !DILocation(line: 1194, column: 92, scope: !6017)
!6038 = !DILocation(line: 1194, column: 101, scope: !6017)
!6039 = !DILocation(line: 1194, column: 7, scope: !6017)
!6040 = !DILocation(line: 1196, column: 15, scope: !6017)
!6041 = !DILocation(line: 1196, column: 7, scope: !6017)
!6042 = !DILocation(line: 1198, column: 33, scope: !6017)
!6043 = !DILocation(line: 1198, column: 46, scope: !6017)
!6044 = !DILocation(line: 1198, column: 7, scope: !6017)
!6045 = !DILocation(line: 1199, column: 32, scope: !6017)
!6046 = !DILocation(line: 1199, column: 7, scope: !6017)
!6047 = !DILocation(line: 1201, column: 25, scope: !6017)
!6048 = !DILocation(line: 1201, column: 32, scope: !6017)
!6049 = !DILocation(line: 1201, column: 30, scope: !6017)
!6050 = !DILocation(line: 1201, column: 7, scope: !6017)
!6051 = !DILocation(line: 1201, column: 21, scope: !6017)
!6052 = !DILocation(line: 1202, column: 11, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 1202, column: 11)
!6054 = !DILocation(line: 1202, column: 28, scope: !6053)
!6055 = !DILocation(line: 1202, column: 25, scope: !6053)
!6056 = !DILocation(line: 1202, column: 11, scope: !6017)
!6057 = !DILocation(line: 1204, column: 7, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 1202, column: 43)
!6059 = !DILocation(line: 1205, column: 16, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 1205, column: 16)
!6061 = !DILocation(line: 1205, column: 32, scope: !6060)
!6062 = !DILocation(line: 1205, column: 30, scope: !6060)
!6063 = !DILocation(line: 1205, column: 16, scope: !6053)
!6064 = !DILocation(line: 1206, column: 38, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 1205, column: 47)
!6066 = !DILocation(line: 1206, column: 54, scope: !6065)
!6067 = !DILocation(line: 1206, column: 52, scope: !6065)
!6068 = !DILocation(line: 1206, column: 8, scope: !6065)
!6069 = !DILocation(line: 1206, column: 36, scope: !6065)
!6070 = !DILocation(line: 1207, column: 47, scope: !6065)
!6071 = !DILocation(line: 1207, column: 63, scope: !6065)
!6072 = !DILocation(line: 1207, column: 61, scope: !6065)
!6073 = !DILocation(line: 1207, column: 44, scope: !6065)
!6074 = !DILocation(line: 1207, column: 78, scope: !6065)
!6075 = !DILocation(line: 1207, column: 8, scope: !6065)
!6076 = !DILocation(line: 1207, column: 36, scope: !6065)
!6077 = !DILocation(line: 1208, column: 7, scope: !6065)
!6078 = !DILocation(line: 1210, column: 38, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 1209, column: 12)
!6080 = !DILocation(line: 1210, column: 54, scope: !6079)
!6081 = !DILocation(line: 1210, column: 52, scope: !6079)
!6082 = !DILocation(line: 1210, column: 8, scope: !6079)
!6083 = !DILocation(line: 1210, column: 36, scope: !6079)
!6084 = !DILocation(line: 1211, column: 47, scope: !6079)
!6085 = !DILocation(line: 1211, column: 63, scope: !6079)
!6086 = !DILocation(line: 1211, column: 61, scope: !6079)
!6087 = !DILocation(line: 1211, column: 44, scope: !6079)
!6088 = !DILocation(line: 1211, column: 78, scope: !6079)
!6089 = !DILocation(line: 1211, column: 8, scope: !6079)
!6090 = !DILocation(line: 1211, column: 36, scope: !6079)
!6091 = !DILocation(line: 1214, column: 20, scope: !6017)
!6092 = !DILocation(line: 1214, column: 41, scope: !6017)
!6093 = !DILocation(line: 1214, column: 7, scope: !6017)
!6094 = !DILocation(line: 1215, column: 7, scope: !6017)
!6095 = !DILocation(line: 1216, column: 6, scope: !6017)
!6096 = !DILocation(line: 1218, column: 4, scope: !5960)
!6097 = !DILocation(line: 1219, column: 3, scope: !5926)
!6098 = !DILocation(line: 1220, column: 2, scope: !5922)
!6099 = !DILocation(line: 1221, column: 1, scope: !5895)
!6100 = distinct !DISubprogram(name: "mask_spline_point_prev", scope: !3, file: !3, line: 84, type: !6101, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6101 = !DISubroutineType(types: !6102)
!6102 = !{!2355, !2343, !2355, !2355}
!6103 = !DILocalVariable(name: "spline", arg: 1, scope: !6100, file: !3, line: 84, type: !2343)
!6104 = !DILocation(line: 84, column: 60, scope: !6100)
!6105 = !DILocalVariable(name: "points_array", arg: 2, scope: !6100, file: !3, line: 84, type: !2355)
!6106 = !DILocation(line: 84, column: 85, scope: !6100)
!6107 = !DILocalVariable(name: "point", arg: 3, scope: !6100, file: !3, line: 84, type: !2355)
!6108 = !DILocation(line: 84, column: 116, scope: !6100)
!6109 = !DILocation(line: 86, column: 6, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 86, column: 6)
!6111 = !DILocation(line: 86, column: 15, scope: !6110)
!6112 = !DILocation(line: 86, column: 12, scope: !6110)
!6113 = !DILocation(line: 86, column: 6, scope: !6100)
!6114 = !DILocation(line: 87, column: 7, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 87, column: 7)
!6116 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 86, column: 29)
!6117 = !DILocation(line: 87, column: 15, scope: !6115)
!6118 = !DILocation(line: 87, column: 20, scope: !6115)
!6119 = !DILocation(line: 87, column: 7, scope: !6116)
!6120 = !DILocation(line: 88, column: 12, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 87, column: 42)
!6122 = !DILocation(line: 88, column: 25, scope: !6121)
!6123 = !DILocation(line: 88, column: 33, scope: !6121)
!6124 = !DILocation(line: 88, column: 43, scope: !6121)
!6125 = !DILocation(line: 88, column: 4, scope: !6121)
!6126 = !DILocation(line: 91, column: 4, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 90, column: 8)
!6128 = !DILocation(line: 95, column: 10, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 94, column: 7)
!6130 = !DILocation(line: 95, column: 16, scope: !6129)
!6131 = !DILocation(line: 95, column: 3, scope: !6129)
!6132 = !DILocation(line: 97, column: 1, scope: !6100)
!6133 = distinct !DISubprogram(name: "mask_spline_point_next", scope: !3, file: !3, line: 69, type: !6101, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6134 = !DILocalVariable(name: "spline", arg: 1, scope: !6133, file: !3, line: 69, type: !2343)
!6135 = !DILocation(line: 69, column: 60, scope: !6133)
!6136 = !DILocalVariable(name: "points_array", arg: 2, scope: !6133, file: !3, line: 69, type: !2355)
!6137 = !DILocation(line: 69, column: 85, scope: !6133)
!6138 = !DILocalVariable(name: "point", arg: 3, scope: !6133, file: !3, line: 69, type: !2355)
!6139 = !DILocation(line: 69, column: 116, scope: !6133)
!6140 = !DILocation(line: 71, column: 6, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 71, column: 6)
!6142 = !DILocation(line: 71, column: 16, scope: !6141)
!6143 = !DILocation(line: 71, column: 29, scope: !6141)
!6144 = !DILocation(line: 71, column: 37, scope: !6141)
!6145 = !DILocation(line: 71, column: 47, scope: !6141)
!6146 = !DILocation(line: 71, column: 12, scope: !6141)
!6147 = !DILocation(line: 71, column: 6, scope: !6133)
!6148 = !DILocation(line: 72, column: 7, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 72, column: 7)
!6150 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 71, column: 53)
!6151 = !DILocation(line: 72, column: 15, scope: !6149)
!6152 = !DILocation(line: 72, column: 20, scope: !6149)
!6153 = !DILocation(line: 72, column: 7, scope: !6150)
!6154 = !DILocation(line: 73, column: 12, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 72, column: 42)
!6156 = !DILocation(line: 73, column: 4, scope: !6155)
!6157 = !DILocation(line: 76, column: 4, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 75, column: 8)
!6159 = !DILocation(line: 80, column: 10, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 79, column: 7)
!6161 = !DILocation(line: 80, column: 16, scope: !6160)
!6162 = !DILocation(line: 80, column: 3, scope: !6160)
!6163 = !DILocation(line: 82, column: 1, scope: !6133)
!6164 = distinct !DISubprogram(name: "BKE_mask_calc_tangent_polyline", scope: !3, file: !3, line: 1292, type: !6165, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6165 = !DISubroutineType(types: !6166)
!6166 = !{null, !2343, !2355, !639}
!6167 = !DILocalVariable(name: "spline", arg: 1, scope: !6164, file: !3, line: 1292, type: !2343)
!6168 = !DILocation(line: 1292, column: 49, scope: !6164)
!6169 = !DILocalVariable(name: "point", arg: 2, scope: !6164, file: !3, line: 1292, type: !2355)
!6170 = !DILocation(line: 1292, column: 74, scope: !6164)
!6171 = !DILocalVariable(name: "t", arg: 3, scope: !6164, file: !3, line: 1292, type: !639)
!6172 = !DILocation(line: 1292, column: 87, scope: !6164)
!6173 = !DILocalVariable(name: "tvec_a", scope: !6164, file: !3, line: 1294, type: !250)
!6174 = !DILocation(line: 1294, column: 8, scope: !6164)
!6175 = !DILocalVariable(name: "tvec_b", scope: !6164, file: !3, line: 1294, type: !250)
!6176 = !DILocation(line: 1294, column: 19, scope: !6164)
!6177 = !DILocalVariable(name: "point_prev", scope: !6164, file: !3, line: 1296, type: !2355)
!6178 = !DILocation(line: 1296, column: 19, scope: !6164)
!6179 = !DILocalVariable(name: "point_next", scope: !6164, file: !3, line: 1296, type: !2355)
!6180 = !DILocation(line: 1296, column: 32, scope: !6164)
!6181 = !DILocation(line: 1298, column: 37, scope: !6164)
!6182 = !DILocation(line: 1298, column: 45, scope: !6164)
!6183 = !DILocation(line: 1298, column: 2, scope: !6164)
!6184 = !DILocation(line: 1301, column: 6, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 1301, column: 6)
!6186 = !DILocation(line: 1301, column: 6, scope: !6164)
!6187 = !DILocation(line: 1302, column: 15, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 1301, column: 18)
!6189 = !DILocation(line: 1302, column: 23, scope: !6188)
!6190 = !DILocation(line: 1302, column: 30, scope: !6188)
!6191 = !DILocation(line: 1302, column: 35, scope: !6188)
!6192 = !DILocation(line: 1302, column: 43, scope: !6188)
!6193 = !DILocation(line: 1302, column: 55, scope: !6188)
!6194 = !DILocation(line: 1302, column: 60, scope: !6188)
!6195 = !DILocation(line: 1302, column: 3, scope: !6188)
!6196 = !DILocation(line: 1303, column: 16, scope: !6188)
!6197 = !DILocation(line: 1303, column: 3, scope: !6188)
!6198 = !DILocation(line: 1304, column: 2, scope: !6188)
!6199 = !DILocation(line: 1306, column: 11, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 1305, column: 7)
!6201 = !DILocation(line: 1306, column: 3, scope: !6200)
!6202 = !DILocation(line: 1309, column: 6, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 1309, column: 6)
!6204 = !DILocation(line: 1309, column: 6, scope: !6164)
!6205 = !DILocation(line: 1310, column: 15, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 1309, column: 18)
!6207 = !DILocation(line: 1310, column: 23, scope: !6206)
!6208 = !DILocation(line: 1310, column: 35, scope: !6206)
!6209 = !DILocation(line: 1310, column: 40, scope: !6206)
!6210 = !DILocation(line: 1310, column: 48, scope: !6206)
!6211 = !DILocation(line: 1310, column: 55, scope: !6206)
!6212 = !DILocation(line: 1310, column: 60, scope: !6206)
!6213 = !DILocation(line: 1310, column: 3, scope: !6206)
!6214 = !DILocation(line: 1311, column: 16, scope: !6206)
!6215 = !DILocation(line: 1311, column: 3, scope: !6206)
!6216 = !DILocation(line: 1312, column: 2, scope: !6206)
!6217 = !DILocation(line: 1314, column: 11, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 1313, column: 7)
!6219 = !DILocation(line: 1314, column: 3, scope: !6218)
!6220 = !DILocation(line: 1317, column: 14, scope: !6164)
!6221 = !DILocation(line: 1317, column: 17, scope: !6164)
!6222 = !DILocation(line: 1317, column: 25, scope: !6164)
!6223 = !DILocation(line: 1317, column: 2, scope: !6164)
!6224 = !DILocation(line: 1318, column: 15, scope: !6164)
!6225 = !DILocation(line: 1318, column: 2, scope: !6164)
!6226 = !DILocation(line: 1319, column: 1, scope: !6164)
!6227 = distinct !DISubprogram(name: "zero_v2", scope: !3039, file: !3039, line: 37, type: !6228, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6228 = !DISubroutineType(types: !6229)
!6229 = !{null, !639}
!6230 = !DILocalVariable(name: "r", arg: 1, scope: !6227, file: !3039, line: 37, type: !639)
!6231 = !DILocation(line: 37, column: 28, scope: !6227)
!6232 = !DILocation(line: 39, column: 2, scope: !6227)
!6233 = !DILocation(line: 39, column: 7, scope: !6227)
!6234 = !DILocation(line: 40, column: 2, scope: !6227)
!6235 = !DILocation(line: 40, column: 7, scope: !6227)
!6236 = !DILocation(line: 41, column: 1, scope: !6227)
!6237 = distinct !DISubprogram(name: "BKE_mask_calc_handle_point", scope: !3, file: !3, line: 1321, type: !6238, scopeLine: 1322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6238 = !DISubroutineType(types: !6239)
!6239 = !{null, !2343, !2355}
!6240 = !DILocalVariable(name: "spline", arg: 1, scope: !6237, file: !3, line: 1321, type: !2343)
!6241 = !DILocation(line: 1321, column: 45, scope: !6237)
!6242 = !DILocalVariable(name: "point", arg: 2, scope: !6237, file: !3, line: 1321, type: !2355)
!6243 = !DILocation(line: 1321, column: 70, scope: !6237)
!6244 = !DILocalVariable(name: "point_prev", scope: !6237, file: !3, line: 1323, type: !2355)
!6245 = !DILocation(line: 1323, column: 19, scope: !6237)
!6246 = !DILocalVariable(name: "point_next", scope: !6237, file: !3, line: 1323, type: !2355)
!6247 = !DILocation(line: 1323, column: 32, scope: !6237)
!6248 = !DILocation(line: 1325, column: 37, scope: !6237)
!6249 = !DILocation(line: 1325, column: 45, scope: !6237)
!6250 = !DILocation(line: 1325, column: 2, scope: !6237)
!6251 = !DILocation(line: 1328, column: 25, scope: !6237)
!6252 = !DILocation(line: 1328, column: 32, scope: !6237)
!6253 = !DILocation(line: 1328, column: 44, scope: !6237)
!6254 = !DILocation(line: 1328, column: 2, scope: !6237)
!6255 = !DILocation(line: 1329, column: 1, scope: !6237)
!6256 = distinct !DISubprogram(name: "mask_calc_point_handle", scope: !3, file: !3, line: 1234, type: !6257, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6257 = !DISubroutineType(types: !6258)
!6258 = !{null, !2355, !2355, !2355}
!6259 = !DILocalVariable(name: "point", arg: 1, scope: !6256, file: !3, line: 1234, type: !2355)
!6260 = !DILocation(line: 1234, column: 53, scope: !6256)
!6261 = !DILocalVariable(name: "point_prev", arg: 2, scope: !6256, file: !3, line: 1234, type: !2355)
!6262 = !DILocation(line: 1234, column: 77, scope: !6256)
!6263 = !DILocalVariable(name: "point_next", arg: 3, scope: !6256, file: !3, line: 1234, type: !2355)
!6264 = !DILocation(line: 1234, column: 106, scope: !6256)
!6265 = !DILocalVariable(name: "bezt", scope: !6256, file: !3, line: 1236, type: !3482)
!6266 = !DILocation(line: 1236, column: 13, scope: !6256)
!6267 = !DILocation(line: 1236, column: 21, scope: !6256)
!6268 = !DILocation(line: 1236, column: 28, scope: !6256)
!6269 = !DILocalVariable(name: "bezt_prev", scope: !6256, file: !3, line: 1237, type: !3482)
!6270 = !DILocation(line: 1237, column: 13, scope: !6256)
!6271 = !DILocalVariable(name: "bezt_next", scope: !6256, file: !3, line: 1237, type: !3482)
!6272 = !DILocation(line: 1237, column: 32, scope: !6256)
!6273 = !DILocation(line: 1240, column: 6, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 1240, column: 6)
!6275 = !DILocation(line: 1240, column: 6, scope: !6256)
!6276 = !DILocation(line: 1241, column: 16, scope: !6274)
!6277 = !DILocation(line: 1241, column: 28, scope: !6274)
!6278 = !DILocation(line: 1241, column: 13, scope: !6274)
!6279 = !DILocation(line: 1241, column: 3, scope: !6274)
!6280 = !DILocation(line: 1243, column: 6, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 1243, column: 6)
!6282 = !DILocation(line: 1243, column: 6, scope: !6256)
!6283 = !DILocation(line: 1244, column: 16, scope: !6281)
!6284 = !DILocation(line: 1244, column: 28, scope: !6281)
!6285 = !DILocation(line: 1244, column: 13, scope: !6281)
!6286 = !DILocation(line: 1244, column: 3, scope: !6281)
!6287 = !DILocation(line: 1247, column: 6, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 1247, column: 6)
!6289 = !DILocation(line: 1247, column: 16, scope: !6288)
!6290 = !DILocation(line: 1247, column: 19, scope: !6288)
!6291 = !DILocation(line: 1247, column: 6, scope: !6256)
!6292 = !DILocation(line: 1248, column: 24, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 1247, column: 30)
!6294 = !DILocation(line: 1248, column: 30, scope: !6293)
!6295 = !DILocation(line: 1248, column: 41, scope: !6293)
!6296 = !DILocation(line: 1248, column: 3, scope: !6293)
!6297 = !DILocation(line: 1249, column: 2, scope: !6293)
!6298 = !DILocation(line: 1278, column: 1, scope: !6256)
!6299 = distinct !DISubprogram(name: "BKE_mask_calc_handle_adjacent_interp", scope: !3, file: !3, line: 1331, type: !6300, scopeLine: 1332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6300 = !DISubroutineType(types: !6301)
!6301 = !{null, !2343, !2355, !3043}
!6302 = !DILocalVariable(name: "spline", arg: 1, scope: !6299, file: !3, line: 1331, type: !2343)
!6303 = !DILocation(line: 1331, column: 55, scope: !6299)
!6304 = !DILocalVariable(name: "point", arg: 2, scope: !6299, file: !3, line: 1331, type: !2355)
!6305 = !DILocation(line: 1331, column: 80, scope: !6299)
!6306 = !DILocalVariable(name: "u", arg: 3, scope: !6299, file: !3, line: 1331, type: !3043)
!6307 = !DILocation(line: 1331, column: 99, scope: !6299)
!6308 = !DILocalVariable(name: "length_tot", scope: !6299, file: !3, line: 1334, type: !35)
!6309 = !DILocation(line: 1334, column: 6, scope: !6299)
!6310 = !DILocalVariable(name: "length_average", scope: !6299, file: !3, line: 1335, type: !71)
!6311 = !DILocation(line: 1335, column: 8, scope: !6299)
!6312 = !DILocalVariable(name: "weight_average", scope: !6299, file: !3, line: 1336, type: !71)
!6313 = !DILocation(line: 1336, column: 8, scope: !6299)
!6314 = !DILocalVariable(name: "point_prev", scope: !6299, file: !3, line: 1339, type: !2355)
!6315 = !DILocation(line: 1339, column: 19, scope: !6299)
!6316 = !DILocalVariable(name: "point_next", scope: !6299, file: !3, line: 1339, type: !2355)
!6317 = !DILocation(line: 1339, column: 32, scope: !6299)
!6318 = !DILocation(line: 1343, column: 37, scope: !6299)
!6319 = !DILocation(line: 1343, column: 45, scope: !6299)
!6320 = !DILocation(line: 1343, column: 2, scope: !6299)
!6321 = !DILocation(line: 1346, column: 6, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 1346, column: 6)
!6323 = !DILocation(line: 1346, column: 17, scope: !6322)
!6324 = !DILocation(line: 1346, column: 20, scope: !6322)
!6325 = !DILocation(line: 1346, column: 6, scope: !6299)
!6326 = !DILocation(line: 1347, column: 31, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 1346, column: 32)
!6328 = !DILocation(line: 1347, column: 43, scope: !6327)
!6329 = !DILocation(line: 1347, column: 48, scope: !6327)
!6330 = !DILocation(line: 1347, column: 56, scope: !6327)
!6331 = !DILocation(line: 1347, column: 68, scope: !6327)
!6332 = !DILocation(line: 1347, column: 73, scope: !6327)
!6333 = !DILocation(line: 1347, column: 22, scope: !6327)
!6334 = !DILocation(line: 1347, column: 91, scope: !6327)
!6335 = !DILocation(line: 1347, column: 89, scope: !6327)
!6336 = !DILocation(line: 1347, column: 81, scope: !6327)
!6337 = !DILocation(line: 1348, column: 31, scope: !6327)
!6338 = !DILocation(line: 1348, column: 43, scope: !6327)
!6339 = !DILocation(line: 1348, column: 48, scope: !6327)
!6340 = !DILocation(line: 1348, column: 56, scope: !6327)
!6341 = !DILocation(line: 1348, column: 68, scope: !6327)
!6342 = !DILocation(line: 1348, column: 73, scope: !6327)
!6343 = !DILocation(line: 1348, column: 22, scope: !6327)
!6344 = !DILocation(line: 1348, column: 83, scope: !6327)
!6345 = !DILocation(line: 1348, column: 81, scope: !6327)
!6346 = !DILocation(line: 1347, column: 95, scope: !6327)
!6347 = !DILocation(line: 1347, column: 18, scope: !6327)
!6348 = !DILocation(line: 1350, column: 21, scope: !6327)
!6349 = !DILocation(line: 1350, column: 33, scope: !6327)
!6350 = !DILocation(line: 1350, column: 38, scope: !6327)
!6351 = !DILocation(line: 1350, column: 55, scope: !6327)
!6352 = !DILocation(line: 1350, column: 53, scope: !6327)
!6353 = !DILocation(line: 1350, column: 45, scope: !6327)
!6354 = !DILocation(line: 1351, column: 21, scope: !6327)
!6355 = !DILocation(line: 1351, column: 33, scope: !6327)
!6356 = !DILocation(line: 1351, column: 38, scope: !6327)
!6357 = !DILocation(line: 1351, column: 47, scope: !6327)
!6358 = !DILocation(line: 1351, column: 45, scope: !6327)
!6359 = !DILocation(line: 1350, column: 58, scope: !6327)
!6360 = !DILocation(line: 1350, column: 18, scope: !6327)
!6361 = !DILocation(line: 1352, column: 14, scope: !6327)
!6362 = !DILocation(line: 1353, column: 2, scope: !6327)
!6363 = !DILocation(line: 1355, column: 7, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 1355, column: 7)
!6365 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 1354, column: 7)
!6366 = !DILocation(line: 1355, column: 7, scope: !6365)
!6367 = !DILocation(line: 1356, column: 31, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 1355, column: 19)
!6369 = !DILocation(line: 1356, column: 43, scope: !6368)
!6370 = !DILocation(line: 1356, column: 48, scope: !6368)
!6371 = !DILocation(line: 1356, column: 56, scope: !6368)
!6372 = !DILocation(line: 1356, column: 68, scope: !6368)
!6373 = !DILocation(line: 1356, column: 73, scope: !6368)
!6374 = !DILocation(line: 1356, column: 22, scope: !6368)
!6375 = !DILocation(line: 1356, column: 19, scope: !6368)
!6376 = !DILocation(line: 1357, column: 22, scope: !6368)
!6377 = !DILocation(line: 1357, column: 34, scope: !6368)
!6378 = !DILocation(line: 1357, column: 39, scope: !6368)
!6379 = !DILocation(line: 1357, column: 19, scope: !6368)
!6380 = !DILocation(line: 1358, column: 14, scope: !6368)
!6381 = !DILocation(line: 1359, column: 3, scope: !6368)
!6382 = !DILocation(line: 1361, column: 7, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 1361, column: 7)
!6384 = !DILocation(line: 1361, column: 7, scope: !6365)
!6385 = !DILocation(line: 1362, column: 31, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 1361, column: 19)
!6387 = !DILocation(line: 1362, column: 43, scope: !6386)
!6388 = !DILocation(line: 1362, column: 48, scope: !6386)
!6389 = !DILocation(line: 1362, column: 56, scope: !6386)
!6390 = !DILocation(line: 1362, column: 68, scope: !6386)
!6391 = !DILocation(line: 1362, column: 73, scope: !6386)
!6392 = !DILocation(line: 1362, column: 22, scope: !6386)
!6393 = !DILocation(line: 1362, column: 19, scope: !6386)
!6394 = !DILocation(line: 1363, column: 22, scope: !6386)
!6395 = !DILocation(line: 1363, column: 34, scope: !6386)
!6396 = !DILocation(line: 1363, column: 39, scope: !6386)
!6397 = !DILocation(line: 1363, column: 19, scope: !6386)
!6398 = !DILocation(line: 1364, column: 14, scope: !6386)
!6399 = !DILocation(line: 1365, column: 3, scope: !6386)
!6400 = !DILocation(line: 1368, column: 6, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 1368, column: 6)
!6402 = !DILocation(line: 1368, column: 6, scope: !6299)
!6403 = !DILocation(line: 1369, column: 28, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 1368, column: 18)
!6405 = !DILocation(line: 1369, column: 21, scope: !6404)
!6406 = !DILocation(line: 1369, column: 18, scope: !6404)
!6407 = !DILocation(line: 1370, column: 28, scope: !6404)
!6408 = !DILocation(line: 1370, column: 21, scope: !6404)
!6409 = !DILocation(line: 1370, column: 18, scope: !6404)
!6410 = !DILocation(line: 1372, column: 23, scope: !6404)
!6411 = !DILocation(line: 1372, column: 30, scope: !6404)
!6412 = !DILocation(line: 1372, column: 35, scope: !6404)
!6413 = !DILocation(line: 1372, column: 43, scope: !6404)
!6414 = !DILocation(line: 1372, column: 50, scope: !6404)
!6415 = !DILocation(line: 1372, column: 55, scope: !6404)
!6416 = !DILocation(line: 1372, column: 63, scope: !6404)
!6417 = !DILocation(line: 1372, column: 3, scope: !6404)
!6418 = !DILocation(line: 1373, column: 23, scope: !6404)
!6419 = !DILocation(line: 1373, column: 30, scope: !6404)
!6420 = !DILocation(line: 1373, column: 35, scope: !6404)
!6421 = !DILocation(line: 1373, column: 43, scope: !6404)
!6422 = !DILocation(line: 1373, column: 50, scope: !6404)
!6423 = !DILocation(line: 1373, column: 55, scope: !6404)
!6424 = !DILocation(line: 1373, column: 63, scope: !6404)
!6425 = !DILocation(line: 1373, column: 3, scope: !6404)
!6426 = !DILocation(line: 1374, column: 24, scope: !6404)
!6427 = !DILocation(line: 1374, column: 3, scope: !6404)
!6428 = !DILocation(line: 1374, column: 10, scope: !6404)
!6429 = !DILocation(line: 1374, column: 15, scope: !6404)
!6430 = !DILocation(line: 1374, column: 22, scope: !6404)
!6431 = !DILocation(line: 1375, column: 2, scope: !6404)
!6432 = !DILocation(line: 1376, column: 1, scope: !6299)
!6433 = distinct !DISubprogram(name: "len_v2v2", scope: !3039, file: !3039, line: 696, type: !3726, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6434 = !DILocalVariable(name: "v1", arg: 1, scope: !6433, file: !3039, line: 696, type: !3042)
!6435 = !DILocation(line: 696, column: 36, scope: !6433)
!6436 = !DILocalVariable(name: "v2", arg: 2, scope: !6433, file: !3039, line: 696, type: !3042)
!6437 = !DILocation(line: 696, column: 55, scope: !6433)
!6438 = !DILocalVariable(name: "x", scope: !6433, file: !3039, line: 698, type: !71)
!6439 = !DILocation(line: 698, column: 8, scope: !6433)
!6440 = !DILocalVariable(name: "y", scope: !6433, file: !3039, line: 698, type: !71)
!6441 = !DILocation(line: 698, column: 11, scope: !6433)
!6442 = !DILocation(line: 700, column: 6, scope: !6433)
!6443 = !DILocation(line: 700, column: 14, scope: !6433)
!6444 = !DILocation(line: 700, column: 12, scope: !6433)
!6445 = !DILocation(line: 700, column: 4, scope: !6433)
!6446 = !DILocation(line: 701, column: 6, scope: !6433)
!6447 = !DILocation(line: 701, column: 14, scope: !6433)
!6448 = !DILocation(line: 701, column: 12, scope: !6433)
!6449 = !DILocation(line: 701, column: 4, scope: !6433)
!6450 = !DILocation(line: 702, column: 15, scope: !6433)
!6451 = !DILocation(line: 702, column: 19, scope: !6433)
!6452 = !DILocation(line: 702, column: 17, scope: !6433)
!6453 = !DILocation(line: 702, column: 23, scope: !6433)
!6454 = !DILocation(line: 702, column: 27, scope: !6433)
!6455 = !DILocation(line: 702, column: 25, scope: !6433)
!6456 = !DILocation(line: 702, column: 21, scope: !6433)
!6457 = !DILocation(line: 702, column: 9, scope: !6433)
!6458 = !DILocation(line: 702, column: 2, scope: !6433)
!6459 = distinct !DISubprogram(name: "BKE_mask_calc_handle_point_auto", scope: !3, file: !3, line: 1384, type: !6460, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6460 = !DISubroutineType(types: !6461)
!6461 = !{null, !2343, !2355, !4511}
!6462 = !DILocalVariable(name: "spline", arg: 1, scope: !6459, file: !3, line: 1384, type: !2343)
!6463 = !DILocation(line: 1384, column: 50, scope: !6459)
!6464 = !DILocalVariable(name: "point", arg: 2, scope: !6459, file: !3, line: 1384, type: !2355)
!6465 = !DILocation(line: 1384, column: 75, scope: !6459)
!6466 = !DILocalVariable(name: "do_recalc_length", arg: 3, scope: !6459, file: !3, line: 1385, type: !4511)
!6467 = !DILocation(line: 1385, column: 49, scope: !6459)
!6468 = !DILocalVariable(name: "point_prev", scope: !6459, file: !3, line: 1387, type: !2355)
!6469 = !DILocation(line: 1387, column: 19, scope: !6459)
!6470 = !DILocalVariable(name: "point_next", scope: !6459, file: !3, line: 1387, type: !2355)
!6471 = !DILocation(line: 1387, column: 32, scope: !6459)
!6472 = !DILocalVariable(name: "h_back", scope: !6459, file: !3, line: 1388, type: !6473)
!6473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !823, size: 16, elements: !190)
!6474 = !DILocation(line: 1388, column: 13, scope: !6459)
!6475 = !DILocation(line: 1388, column: 25, scope: !6459)
!6476 = !DILocation(line: 1388, column: 26, scope: !6459)
!6477 = !DILocation(line: 1388, column: 33, scope: !6459)
!6478 = !DILocation(line: 1388, column: 38, scope: !6459)
!6479 = !DILocation(line: 1388, column: 42, scope: !6459)
!6480 = !DILocation(line: 1388, column: 49, scope: !6459)
!6481 = !DILocation(line: 1388, column: 54, scope: !6459)
!6482 = !DILocalVariable(name: "length_average", scope: !6459, file: !3, line: 1389, type: !3043)
!6483 = !DILocation(line: 1389, column: 14, scope: !6459)
!6484 = !DILocation(line: 1389, column: 32, scope: !6459)
!6485 = !DILocation(line: 1389, column: 31, scope: !6459)
!6486 = !DILocation(line: 1390, column: 41, scope: !6459)
!6487 = !DILocation(line: 1390, column: 48, scope: !6459)
!6488 = !DILocation(line: 1390, column: 53, scope: !6459)
!6489 = !DILocation(line: 1390, column: 61, scope: !6459)
!6490 = !DILocation(line: 1390, column: 68, scope: !6459)
!6491 = !DILocation(line: 1390, column: 73, scope: !6459)
!6492 = !DILocation(line: 1390, column: 32, scope: !6459)
!6493 = !DILocation(line: 1391, column: 41, scope: !6459)
!6494 = !DILocation(line: 1391, column: 48, scope: !6459)
!6495 = !DILocation(line: 1391, column: 53, scope: !6459)
!6496 = !DILocation(line: 1391, column: 61, scope: !6459)
!6497 = !DILocation(line: 1391, column: 68, scope: !6459)
!6498 = !DILocation(line: 1391, column: 73, scope: !6459)
!6499 = !DILocation(line: 1391, column: 32, scope: !6459)
!6500 = !DILocation(line: 1390, column: 81, scope: !6459)
!6501 = !DILocation(line: 1391, column: 82, scope: !6459)
!6502 = !DILocation(line: 1393, column: 37, scope: !6459)
!6503 = !DILocation(line: 1393, column: 45, scope: !6459)
!6504 = !DILocation(line: 1393, column: 2, scope: !6459)
!6505 = !DILocation(line: 1396, column: 2, scope: !6459)
!6506 = !DILocation(line: 1396, column: 9, scope: !6459)
!6507 = !DILocation(line: 1396, column: 14, scope: !6459)
!6508 = !DILocation(line: 1396, column: 17, scope: !6459)
!6509 = !DILocation(line: 1397, column: 2, scope: !6459)
!6510 = !DILocation(line: 1397, column: 9, scope: !6459)
!6511 = !DILocation(line: 1397, column: 14, scope: !6459)
!6512 = !DILocation(line: 1397, column: 17, scope: !6459)
!6513 = !DILocation(line: 1398, column: 25, scope: !6459)
!6514 = !DILocation(line: 1398, column: 32, scope: !6459)
!6515 = !DILocation(line: 1398, column: 44, scope: !6459)
!6516 = !DILocation(line: 1398, column: 2, scope: !6459)
!6517 = !DILocation(line: 1400, column: 19, scope: !6459)
!6518 = !DILocation(line: 1400, column: 2, scope: !6459)
!6519 = !DILocation(line: 1400, column: 9, scope: !6459)
!6520 = !DILocation(line: 1400, column: 14, scope: !6459)
!6521 = !DILocation(line: 1400, column: 17, scope: !6459)
!6522 = !DILocation(line: 1401, column: 19, scope: !6459)
!6523 = !DILocation(line: 1401, column: 2, scope: !6459)
!6524 = !DILocation(line: 1401, column: 9, scope: !6459)
!6525 = !DILocation(line: 1401, column: 14, scope: !6459)
!6526 = !DILocation(line: 1401, column: 17, scope: !6459)
!6527 = !DILocation(line: 1404, column: 6, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 1404, column: 6)
!6529 = !DILocation(line: 1404, column: 23, scope: !6528)
!6530 = !DILocation(line: 1404, column: 6, scope: !6459)
!6531 = !DILocation(line: 1405, column: 23, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 1404, column: 33)
!6533 = !DILocation(line: 1405, column: 30, scope: !6532)
!6534 = !DILocation(line: 1405, column: 35, scope: !6532)
!6535 = !DILocation(line: 1405, column: 43, scope: !6532)
!6536 = !DILocation(line: 1405, column: 50, scope: !6532)
!6537 = !DILocation(line: 1405, column: 55, scope: !6532)
!6538 = !DILocation(line: 1405, column: 63, scope: !6532)
!6539 = !DILocation(line: 1405, column: 3, scope: !6532)
!6540 = !DILocation(line: 1406, column: 23, scope: !6532)
!6541 = !DILocation(line: 1406, column: 30, scope: !6532)
!6542 = !DILocation(line: 1406, column: 35, scope: !6532)
!6543 = !DILocation(line: 1406, column: 43, scope: !6532)
!6544 = !DILocation(line: 1406, column: 50, scope: !6532)
!6545 = !DILocation(line: 1406, column: 55, scope: !6532)
!6546 = !DILocation(line: 1406, column: 63, scope: !6532)
!6547 = !DILocation(line: 1406, column: 3, scope: !6532)
!6548 = !DILocation(line: 1407, column: 2, scope: !6532)
!6549 = !DILocation(line: 1408, column: 1, scope: !6459)
!6550 = distinct !DISubprogram(name: "len_v3v3", scope: !3039, file: !3039, line: 759, type: !3726, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6551 = !DILocalVariable(name: "a", arg: 1, scope: !6550, file: !3039, line: 759, type: !3042)
!6552 = !DILocation(line: 759, column: 36, scope: !6550)
!6553 = !DILocalVariable(name: "b", arg: 2, scope: !6550, file: !3039, line: 759, type: !3042)
!6554 = !DILocation(line: 759, column: 54, scope: !6550)
!6555 = !DILocalVariable(name: "d", scope: !6550, file: !3039, line: 761, type: !314)
!6556 = !DILocation(line: 761, column: 8, scope: !6550)
!6557 = !DILocation(line: 763, column: 14, scope: !6550)
!6558 = !DILocation(line: 763, column: 17, scope: !6550)
!6559 = !DILocation(line: 763, column: 20, scope: !6550)
!6560 = !DILocation(line: 763, column: 2, scope: !6550)
!6561 = !DILocation(line: 764, column: 16, scope: !6550)
!6562 = !DILocation(line: 764, column: 9, scope: !6550)
!6563 = !DILocation(line: 764, column: 2, scope: !6550)
!6564 = distinct !DISubprogram(name: "BKE_mask_layer_calc_handles", scope: !3, file: !3, line: 1410, type: !2602, scopeLine: 1411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6565 = !DILocalVariable(name: "masklay", arg: 1, scope: !6564, file: !3, line: 1410, type: !2500)
!6566 = !DILocation(line: 1410, column: 45, scope: !6564)
!6567 = !DILocalVariable(name: "spline", scope: !6564, file: !3, line: 1412, type: !2343)
!6568 = !DILocation(line: 1412, column: 14, scope: !6564)
!6569 = !DILocation(line: 1413, column: 16, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 1413, column: 2)
!6571 = !DILocation(line: 1413, column: 25, scope: !6570)
!6572 = !DILocation(line: 1413, column: 33, scope: !6570)
!6573 = !DILocation(line: 1413, column: 14, scope: !6570)
!6574 = !DILocation(line: 1413, column: 7, scope: !6570)
!6575 = !DILocation(line: 1413, column: 40, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 1413, column: 2)
!6577 = !DILocation(line: 1413, column: 2, scope: !6570)
!6578 = !DILocalVariable(name: "i", scope: !6579, file: !3, line: 1414, type: !35)
!6579 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 1413, column: 71)
!6580 = !DILocation(line: 1414, column: 7, scope: !6579)
!6581 = !DILocation(line: 1415, column: 10, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 1415, column: 3)
!6583 = !DILocation(line: 1415, column: 8, scope: !6582)
!6584 = !DILocation(line: 1415, column: 15, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 1415, column: 3)
!6586 = !DILocation(line: 1415, column: 19, scope: !6585)
!6587 = !DILocation(line: 1415, column: 27, scope: !6585)
!6588 = !DILocation(line: 1415, column: 17, scope: !6585)
!6589 = !DILocation(line: 1415, column: 3, scope: !6582)
!6590 = !DILocation(line: 1416, column: 31, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 1415, column: 43)
!6592 = !DILocation(line: 1416, column: 40, scope: !6591)
!6593 = !DILocation(line: 1416, column: 48, scope: !6591)
!6594 = !DILocation(line: 1416, column: 55, scope: !6591)
!6595 = !DILocation(line: 1416, column: 4, scope: !6591)
!6596 = !DILocation(line: 1417, column: 3, scope: !6591)
!6597 = !DILocation(line: 1415, column: 39, scope: !6585)
!6598 = !DILocation(line: 1415, column: 3, scope: !6585)
!6599 = distinct !{!6599, !6589, !6600}
!6600 = !DILocation(line: 1417, column: 3, scope: !6582)
!6601 = !DILocation(line: 1418, column: 2, scope: !6579)
!6602 = !DILocation(line: 1413, column: 57, scope: !6576)
!6603 = !DILocation(line: 1413, column: 65, scope: !6576)
!6604 = !DILocation(line: 1413, column: 55, scope: !6576)
!6605 = !DILocation(line: 1413, column: 2, scope: !6576)
!6606 = distinct !{!6606, !6577, !6607}
!6607 = !DILocation(line: 1418, column: 2, scope: !6570)
!6608 = !DILocation(line: 1419, column: 1, scope: !6564)
!6609 = distinct !DISubprogram(name: "BKE_mask_spline_ensure_deform", scope: !3, file: !3, line: 1421, type: !2879, scopeLine: 1422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6610 = !DILocalVariable(name: "spline", arg: 1, scope: !6609, file: !3, line: 1421, type: !2343)
!6611 = !DILocation(line: 1421, column: 48, scope: !6609)
!6612 = !DILocalVariable(name: "allocated_points", scope: !6609, file: !3, line: 1423, type: !35)
!6613 = !DILocation(line: 1423, column: 6, scope: !6609)
!6614 = !DILocation(line: 1423, column: 26, scope: !6609)
!6615 = !DILocation(line: 1423, column: 41, scope: !6609)
!6616 = !DILocation(line: 1423, column: 49, scope: !6609)
!6617 = !DILocation(line: 1423, column: 64, scope: !6609)
!6618 = !DILocation(line: 1423, column: 25, scope: !6609)
!6619 = !DILocation(line: 1426, column: 6, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 1426, column: 6)
!6621 = !DILocation(line: 1426, column: 14, scope: !6620)
!6622 = !DILocation(line: 1426, column: 28, scope: !6620)
!6623 = !DILocation(line: 1426, column: 36, scope: !6620)
!6624 = !DILocation(line: 1426, column: 39, scope: !6620)
!6625 = !DILocation(line: 1426, column: 59, scope: !6620)
!6626 = !DILocation(line: 1426, column: 67, scope: !6620)
!6627 = !DILocation(line: 1426, column: 56, scope: !6620)
!6628 = !DILocation(line: 1426, column: 6, scope: !6609)
!6629 = !DILocation(line: 1429, column: 7, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 1429, column: 7)
!6631 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 1426, column: 78)
!6632 = !DILocation(line: 1429, column: 15, scope: !6630)
!6633 = !DILocation(line: 1429, column: 7, scope: !6631)
!6634 = !DILocalVariable(name: "i", scope: !6635, file: !3, line: 1430, type: !35)
!6635 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 1429, column: 30)
!6636 = !DILocation(line: 1430, column: 8, scope: !6635)
!6637 = !DILocation(line: 1432, column: 11, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 1432, column: 4)
!6639 = !DILocation(line: 1432, column: 9, scope: !6638)
!6640 = !DILocation(line: 1432, column: 16, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 1432, column: 4)
!6642 = !DILocation(line: 1432, column: 20, scope: !6641)
!6643 = !DILocation(line: 1432, column: 18, scope: !6641)
!6644 = !DILocation(line: 1432, column: 4, scope: !6638)
!6645 = !DILocalVariable(name: "point", scope: !6646, file: !3, line: 1433, type: !2355)
!6646 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 1432, column: 43)
!6647 = !DILocation(line: 1433, column: 22, scope: !6646)
!6648 = !DILocation(line: 1433, column: 31, scope: !6646)
!6649 = !DILocation(line: 1433, column: 39, scope: !6646)
!6650 = !DILocation(line: 1433, column: 53, scope: !6646)
!6651 = !DILocation(line: 1434, column: 25, scope: !6646)
!6652 = !DILocation(line: 1434, column: 5, scope: !6646)
!6653 = !DILocation(line: 1435, column: 4, scope: !6646)
!6654 = !DILocation(line: 1432, column: 39, scope: !6641)
!6655 = !DILocation(line: 1432, column: 4, scope: !6641)
!6656 = distinct !{!6656, !6644, !6657}
!6657 = !DILocation(line: 1435, column: 4, scope: !6638)
!6658 = !DILocation(line: 1437, column: 4, scope: !6635)
!6659 = !DILocation(line: 1437, column: 14, scope: !6635)
!6660 = !DILocation(line: 1437, column: 22, scope: !6635)
!6661 = !DILocation(line: 1438, column: 3, scope: !6635)
!6662 = !DILocation(line: 1440, column: 27, scope: !6631)
!6663 = !DILocation(line: 1440, column: 72, scope: !6631)
!6664 = !DILocation(line: 1440, column: 80, scope: !6631)
!6665 = !DILocation(line: 1440, column: 70, scope: !6631)
!6666 = !DILocation(line: 1440, column: 3, scope: !6631)
!6667 = !DILocation(line: 1440, column: 11, scope: !6631)
!6668 = !DILocation(line: 1440, column: 25, scope: !6631)
!6669 = !DILocation(line: 1441, column: 2, scope: !6631)
!6670 = !DILocation(line: 1445, column: 1, scope: !6609)
!6671 = distinct !DISubprogram(name: "BKE_mask_layer_evaluate", scope: !3, file: !3, line: 1447, type: !6672, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6672 = !DISubroutineType(types: !6673)
!6673 = !{null, !2500, !3043, !4511}
!6674 = !DILocalVariable(name: "masklay", arg: 1, scope: !6671, file: !3, line: 1447, type: !2500)
!6675 = !DILocation(line: 1447, column: 41, scope: !6671)
!6676 = !DILocalVariable(name: "ctime", arg: 2, scope: !6671, file: !3, line: 1447, type: !3043)
!6677 = !DILocation(line: 1447, column: 62, scope: !6671)
!6678 = !DILocalVariable(name: "do_newframe", arg: 3, scope: !6671, file: !3, line: 1447, type: !4511)
!6679 = !DILocation(line: 1447, column: 80, scope: !6671)
!6680 = !DILocation(line: 1450, column: 6, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 1450, column: 6)
!6682 = !DILocation(line: 1450, column: 6, scope: !6671)
!6683 = !DILocalVariable(name: "masklay_shape_a", scope: !6684, file: !3, line: 1451, type: !2687)
!6684 = distinct !DILexicalBlock(scope: !6681, file: !3, line: 1450, column: 19)
!6685 = !DILocation(line: 1451, column: 19, scope: !6684)
!6686 = !DILocalVariable(name: "masklay_shape_b", scope: !6684, file: !3, line: 1452, type: !2687)
!6687 = !DILocation(line: 1452, column: 19, scope: !6684)
!6688 = !DILocalVariable(name: "found", scope: !6684, file: !3, line: 1453, type: !35)
!6689 = !DILocation(line: 1453, column: 7, scope: !6684)
!6690 = !DILocation(line: 1455, column: 54, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 1455, column: 7)
!6692 = !DILocation(line: 1455, column: 63, scope: !6691)
!6693 = !DILocation(line: 1455, column: 16, scope: !6691)
!6694 = !DILocation(line: 1455, column: 14, scope: !6691)
!6695 = !DILocation(line: 1455, column: 7, scope: !6684)
!6696 = !DILocation(line: 1458, column: 8, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 1458, column: 8)
!6698 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 1457, column: 3)
!6699 = !DILocation(line: 1458, column: 14, scope: !6697)
!6700 = !DILocation(line: 1458, column: 8, scope: !6698)
!6701 = !DILocation(line: 1464, column: 34, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 1458, column: 20)
!6703 = !DILocation(line: 1464, column: 43, scope: !6702)
!6704 = !DILocation(line: 1464, column: 5, scope: !6702)
!6705 = !DILocation(line: 1465, column: 4, scope: !6702)
!6706 = !DILocation(line: 1466, column: 13, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 1466, column: 13)
!6708 = !DILocation(line: 1466, column: 19, scope: !6707)
!6709 = !DILocation(line: 1466, column: 13, scope: !6697)
!6710 = !DILocalVariable(name: "w", scope: !6711, file: !3, line: 1467, type: !71)
!6711 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 1466, column: 25)
!6712 = !DILocation(line: 1467, column: 11, scope: !6711)
!6713 = !DILocation(line: 1467, column: 15, scope: !6711)
!6714 = !DILocation(line: 1467, column: 32, scope: !6711)
!6715 = !DILocation(line: 1467, column: 40, scope: !6711)
!6716 = !DILocation(line: 1467, column: 57, scope: !6711)
!6717 = !DILocation(line: 1467, column: 38, scope: !6711)
!6718 = !DILocation(line: 1472, column: 41, scope: !6711)
!6719 = !DILocation(line: 1472, column: 50, scope: !6711)
!6720 = !DILocation(line: 1472, column: 67, scope: !6711)
!6721 = !DILocation(line: 1473, column: 42, scope: !6711)
!6722 = !DILocation(line: 1473, column: 50, scope: !6711)
!6723 = !DILocation(line: 1473, column: 67, scope: !6711)
!6724 = !DILocation(line: 1473, column: 48, scope: !6711)
!6725 = !DILocation(line: 1473, column: 76, scope: !6711)
!6726 = !DILocation(line: 1473, column: 74, scope: !6711)
!6727 = !DILocation(line: 1472, column: 5, scope: !6711)
!6728 = !DILocation(line: 1474, column: 4, scope: !6711)
!6729 = !DILocation(line: 1479, column: 3, scope: !6698)
!6730 = !DILocation(line: 1480, column: 2, scope: !6684)
!6731 = !DILocation(line: 1483, column: 30, scope: !6671)
!6732 = !DILocation(line: 1483, column: 2, scope: !6671)
!6733 = !DILocalVariable(name: "spline", scope: !6734, file: !3, line: 1487, type: !2343)
!6734 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 1486, column: 2)
!6735 = !DILocation(line: 1487, column: 15, scope: !6734)
!6736 = !DILocation(line: 1489, column: 17, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 1489, column: 3)
!6738 = !DILocation(line: 1489, column: 26, scope: !6737)
!6739 = !DILocation(line: 1489, column: 34, scope: !6737)
!6740 = !DILocation(line: 1489, column: 15, scope: !6737)
!6741 = !DILocation(line: 1489, column: 8, scope: !6737)
!6742 = !DILocation(line: 1489, column: 41, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 1489, column: 3)
!6744 = !DILocation(line: 1489, column: 3, scope: !6737)
!6745 = !DILocalVariable(name: "i", scope: !6746, file: !3, line: 1490, type: !35)
!6746 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 1489, column: 72)
!6747 = !DILocation(line: 1490, column: 8, scope: !6746)
!6748 = !DILocalVariable(name: "need_handle_recalc", scope: !6746, file: !3, line: 1491, type: !1671)
!6749 = !DILocation(line: 1491, column: 9, scope: !6746)
!6750 = !DILocation(line: 1493, column: 34, scope: !6746)
!6751 = !DILocation(line: 1493, column: 4, scope: !6746)
!6752 = !DILocation(line: 1495, column: 11, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1495, column: 4)
!6754 = !DILocation(line: 1495, column: 9, scope: !6753)
!6755 = !DILocation(line: 1495, column: 16, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 1495, column: 4)
!6757 = !DILocation(line: 1495, column: 20, scope: !6756)
!6758 = !DILocation(line: 1495, column: 28, scope: !6756)
!6759 = !DILocation(line: 1495, column: 18, scope: !6756)
!6760 = !DILocation(line: 1495, column: 4, scope: !6753)
!6761 = !DILocalVariable(name: "point", scope: !6762, file: !3, line: 1496, type: !2355)
!6762 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 1495, column: 44)
!6763 = !DILocation(line: 1496, column: 22, scope: !6762)
!6764 = !DILocation(line: 1496, column: 31, scope: !6762)
!6765 = !DILocation(line: 1496, column: 39, scope: !6762)
!6766 = !DILocation(line: 1496, column: 46, scope: !6762)
!6767 = !DILocalVariable(name: "point_deform", scope: !6762, file: !3, line: 1497, type: !2355)
!6768 = !DILocation(line: 1497, column: 22, scope: !6762)
!6769 = !DILocation(line: 1497, column: 38, scope: !6762)
!6770 = !DILocation(line: 1497, column: 46, scope: !6762)
!6771 = !DILocation(line: 1497, column: 60, scope: !6762)
!6772 = !DILocation(line: 1499, column: 25, scope: !6762)
!6773 = !DILocation(line: 1499, column: 5, scope: !6762)
!6774 = !DILocation(line: 1501, column: 6, scope: !6762)
!6775 = !DILocation(line: 1501, column: 22, scope: !6762)
!6776 = !DILocation(line: 1501, column: 21, scope: !6762)
!6777 = !DILocation(line: 1502, column: 24, scope: !6762)
!6778 = !DILocation(line: 1502, column: 31, scope: !6762)
!6779 = !DILocation(line: 1502, column: 36, scope: !6762)
!6780 = !DILocation(line: 1502, column: 50, scope: !6762)
!6781 = !DILocation(line: 1502, column: 57, scope: !6762)
!6782 = !DILocation(line: 1502, column: 5, scope: !6762)
!6783 = !DILocation(line: 1502, column: 19, scope: !6762)
!6784 = !DILocation(line: 1502, column: 22, scope: !6762)
!6785 = !DILocation(line: 1504, column: 38, scope: !6762)
!6786 = !DILocation(line: 1504, column: 52, scope: !6762)
!6787 = !DILocation(line: 1504, column: 5, scope: !6762)
!6788 = !DILocation(line: 1506, column: 9, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 1506, column: 9)
!6790 = !DILocation(line: 1506, column: 9, scope: !6762)
!6791 = !DILocation(line: 1507, column: 25, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 1506, column: 49)
!6793 = !DILocation(line: 1508, column: 5, scope: !6792)
!6794 = !DILocation(line: 1509, column: 4, scope: !6762)
!6795 = !DILocation(line: 1495, column: 40, scope: !6756)
!6796 = !DILocation(line: 1495, column: 4, scope: !6756)
!6797 = distinct !{!6797, !6760, !6798}
!6798 = !DILocation(line: 1509, column: 4, scope: !6753)
!6799 = !DILocation(line: 1512, column: 8, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1512, column: 8)
!6801 = !DILocation(line: 1512, column: 8, scope: !6746)
!6802 = !DILocation(line: 1513, column: 12, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 1513, column: 5)
!6804 = distinct !DILexicalBlock(scope: !6800, file: !3, line: 1512, column: 28)
!6805 = !DILocation(line: 1513, column: 10, scope: !6803)
!6806 = !DILocation(line: 1513, column: 17, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 1513, column: 5)
!6808 = !DILocation(line: 1513, column: 21, scope: !6807)
!6809 = !DILocation(line: 1513, column: 29, scope: !6807)
!6810 = !DILocation(line: 1513, column: 19, scope: !6807)
!6811 = !DILocation(line: 1513, column: 5, scope: !6803)
!6812 = !DILocalVariable(name: "point_deform", scope: !6813, file: !3, line: 1514, type: !2355)
!6813 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 1513, column: 45)
!6814 = !DILocation(line: 1514, column: 23, scope: !6813)
!6815 = !DILocation(line: 1514, column: 39, scope: !6813)
!6816 = !DILocation(line: 1514, column: 47, scope: !6813)
!6817 = !DILocation(line: 1514, column: 61, scope: !6813)
!6818 = !DILocation(line: 1515, column: 10, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 1515, column: 10)
!6820 = !DILocation(line: 1515, column: 10, scope: !6813)
!6821 = !DILocation(line: 1516, column: 34, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 1515, column: 57)
!6823 = !DILocation(line: 1516, column: 42, scope: !6822)
!6824 = !DILocation(line: 1516, column: 7, scope: !6822)
!6825 = !DILocation(line: 1517, column: 6, scope: !6822)
!6826 = !DILocation(line: 1518, column: 5, scope: !6813)
!6827 = !DILocation(line: 1513, column: 41, scope: !6807)
!6828 = !DILocation(line: 1513, column: 5, scope: !6807)
!6829 = distinct !{!6829, !6811, !6830}
!6830 = !DILocation(line: 1518, column: 5, scope: !6803)
!6831 = !DILocation(line: 1519, column: 4, scope: !6804)
!6832 = !DILocation(line: 1521, column: 3, scope: !6746)
!6833 = !DILocation(line: 1489, column: 58, scope: !6743)
!6834 = !DILocation(line: 1489, column: 66, scope: !6743)
!6835 = !DILocation(line: 1489, column: 56, scope: !6743)
!6836 = !DILocation(line: 1489, column: 3, scope: !6743)
!6837 = distinct !{!6837, !6744, !6838}
!6838 = !DILocation(line: 1521, column: 3, scope: !6737)
!6839 = !DILocation(line: 1523, column: 1, scope: !6671)
!6840 = distinct !DISubprogram(name: "BKE_mask_layer_shape_find_frame_range", scope: !3, file: !3, line: 1734, type: !6841, scopeLine: 1737, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6841 = !DISubroutineType(types: !6842)
!6842 = !{!35, !2500, !3043, !6843, !6843}
!6843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!6844 = !DILocalVariable(name: "masklay", arg: 1, scope: !6840, file: !3, line: 1734, type: !2500)
!6845 = !DILocation(line: 1734, column: 54, scope: !6840)
!6846 = !DILocalVariable(name: "frame", arg: 2, scope: !6840, file: !3, line: 1734, type: !3043)
!6847 = !DILocation(line: 1734, column: 75, scope: !6840)
!6848 = !DILocalVariable(name: "r_masklay_shape_a", arg: 3, scope: !6840, file: !3, line: 1735, type: !6843)
!6849 = !DILocation(line: 1735, column: 60, scope: !6840)
!6850 = !DILocalVariable(name: "r_masklay_shape_b", arg: 4, scope: !6840, file: !3, line: 1736, type: !6843)
!6851 = !DILocation(line: 1736, column: 60, scope: !6840)
!6852 = !DILocalVariable(name: "masklay_shape", scope: !6840, file: !3, line: 1738, type: !2687)
!6853 = !DILocation(line: 1738, column: 18, scope: !6840)
!6854 = !DILocation(line: 1740, column: 23, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1740, column: 2)
!6856 = !DILocation(line: 1740, column: 32, scope: !6855)
!6857 = !DILocation(line: 1740, column: 47, scope: !6855)
!6858 = !DILocation(line: 1740, column: 21, scope: !6855)
!6859 = !DILocation(line: 1740, column: 7, scope: !6855)
!6860 = !DILocation(line: 1741, column: 7, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6855, file: !3, line: 1740, column: 2)
!6862 = !DILocation(line: 1740, column: 2, scope: !6855)
!6863 = !DILocation(line: 1744, column: 7, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 1744, column: 7)
!6865 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 1743, column: 2)
!6866 = !DILocation(line: 1744, column: 16, scope: !6864)
!6867 = !DILocation(line: 1744, column: 31, scope: !6864)
!6868 = !DILocation(line: 1744, column: 13, scope: !6864)
!6869 = !DILocation(line: 1744, column: 7, scope: !6865)
!6870 = !DILocation(line: 1745, column: 25, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 1744, column: 38)
!6872 = !DILocation(line: 1745, column: 5, scope: !6871)
!6873 = !DILocation(line: 1745, column: 23, scope: !6871)
!6874 = !DILocation(line: 1746, column: 5, scope: !6871)
!6875 = !DILocation(line: 1746, column: 23, scope: !6871)
!6876 = !DILocation(line: 1747, column: 4, scope: !6871)
!6877 = !DILocation(line: 1749, column: 12, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 1749, column: 12)
!6879 = !DILocation(line: 1749, column: 20, scope: !6878)
!6880 = !DILocation(line: 1749, column: 35, scope: !6878)
!6881 = !DILocation(line: 1749, column: 18, scope: !6878)
!6882 = !DILocation(line: 1749, column: 12, scope: !6864)
!6883 = !DILocation(line: 1750, column: 8, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 1750, column: 8)
!6885 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 1749, column: 42)
!6886 = !DILocation(line: 1750, column: 23, scope: !6884)
!6887 = !DILocation(line: 1750, column: 8, scope: !6885)
!6888 = !DILocation(line: 1751, column: 26, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1750, column: 29)
!6890 = !DILocation(line: 1751, column: 41, scope: !6889)
!6891 = !DILocation(line: 1751, column: 6, scope: !6889)
!6892 = !DILocation(line: 1751, column: 24, scope: !6889)
!6893 = !DILocation(line: 1752, column: 26, scope: !6889)
!6894 = !DILocation(line: 1752, column: 6, scope: !6889)
!6895 = !DILocation(line: 1752, column: 24, scope: !6889)
!6896 = !DILocation(line: 1753, column: 5, scope: !6889)
!6897 = !DILocation(line: 1756, column: 26, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1755, column: 9)
!6899 = !DILocation(line: 1756, column: 6, scope: !6898)
!6900 = !DILocation(line: 1756, column: 24, scope: !6898)
!6901 = !DILocation(line: 1757, column: 6, scope: !6898)
!6902 = !DILocation(line: 1757, column: 24, scope: !6898)
!6903 = !DILocation(line: 1758, column: 5, scope: !6898)
!6904 = !DILocation(line: 1761, column: 2, scope: !6865)
!6905 = !DILocation(line: 1742, column: 23, scope: !6861)
!6906 = !DILocation(line: 1742, column: 38, scope: !6861)
!6907 = !DILocation(line: 1742, column: 21, scope: !6861)
!6908 = !DILocation(line: 1740, column: 2, scope: !6861)
!6909 = distinct !{!6909, !6862, !6910}
!6910 = !DILocation(line: 1761, column: 2, scope: !6855)
!6911 = !DILocation(line: 1763, column: 23, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1763, column: 6)
!6913 = !DILocation(line: 1763, column: 32, scope: !6912)
!6914 = !DILocation(line: 1763, column: 47, scope: !6912)
!6915 = !DILocation(line: 1763, column: 21, scope: !6912)
!6916 = !DILocation(line: 1763, column: 6, scope: !6840)
!6917 = !DILocation(line: 1764, column: 24, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 1763, column: 54)
!6919 = !DILocation(line: 1764, column: 4, scope: !6918)
!6920 = !DILocation(line: 1764, column: 22, scope: !6918)
!6921 = !DILocation(line: 1765, column: 4, scope: !6918)
!6922 = !DILocation(line: 1765, column: 22, scope: !6918)
!6923 = !DILocation(line: 1766, column: 3, scope: !6918)
!6924 = !DILocation(line: 1769, column: 4, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 1768, column: 7)
!6926 = !DILocation(line: 1769, column: 22, scope: !6925)
!6927 = !DILocation(line: 1770, column: 4, scope: !6925)
!6928 = !DILocation(line: 1770, column: 22, scope: !6925)
!6929 = !DILocation(line: 1772, column: 3, scope: !6925)
!6930 = !DILocation(line: 1774, column: 1, scope: !6840)
!6931 = distinct !DISubprogram(name: "BKE_mask_layer_shape_to_mask", scope: !3, file: !3, line: 1652, type: !6932, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!6932 = !DISubroutineType(types: !6933)
!6933 = !{null, !2500, !2687}
!6934 = !DILocalVariable(name: "masklay", arg: 1, scope: !6931, file: !3, line: 1652, type: !2500)
!6935 = !DILocation(line: 1652, column: 46, scope: !6931)
!6936 = !DILocalVariable(name: "masklay_shape", arg: 2, scope: !6931, file: !3, line: 1652, type: !2687)
!6937 = !DILocation(line: 1652, column: 71, scope: !6931)
!6938 = !DILocalVariable(name: "tot", scope: !6931, file: !3, line: 1654, type: !35)
!6939 = !DILocation(line: 1654, column: 6, scope: !6931)
!6940 = !DILocation(line: 1654, column: 41, scope: !6931)
!6941 = !DILocation(line: 1654, column: 12, scope: !6931)
!6942 = !DILocation(line: 1656, column: 6, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 1656, column: 6)
!6944 = !DILocation(line: 1656, column: 21, scope: !6943)
!6945 = !DILocation(line: 1656, column: 33, scope: !6943)
!6946 = !DILocation(line: 1656, column: 30, scope: !6943)
!6947 = !DILocation(line: 1656, column: 6, scope: !6931)
!6948 = !DILocalVariable(name: "fp", scope: !6949, file: !3, line: 1657, type: !639)
!6949 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 1656, column: 38)
!6950 = !DILocation(line: 1657, column: 10, scope: !6949)
!6951 = !DILocation(line: 1657, column: 15, scope: !6949)
!6952 = !DILocation(line: 1657, column: 30, scope: !6949)
!6953 = !DILocalVariable(name: "spline", scope: !6949, file: !3, line: 1659, type: !2343)
!6954 = !DILocation(line: 1659, column: 15, scope: !6949)
!6955 = !DILocation(line: 1660, column: 17, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 1660, column: 3)
!6957 = !DILocation(line: 1660, column: 26, scope: !6956)
!6958 = !DILocation(line: 1660, column: 34, scope: !6956)
!6959 = !DILocation(line: 1660, column: 15, scope: !6956)
!6960 = !DILocation(line: 1660, column: 8, scope: !6956)
!6961 = !DILocation(line: 1660, column: 41, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 1660, column: 3)
!6963 = !DILocation(line: 1660, column: 3, scope: !6956)
!6964 = !DILocalVariable(name: "i", scope: !6965, file: !3, line: 1661, type: !35)
!6965 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 1660, column: 72)
!6966 = !DILocation(line: 1661, column: 8, scope: !6965)
!6967 = !DILocation(line: 1662, column: 11, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1662, column: 4)
!6969 = !DILocation(line: 1662, column: 9, scope: !6968)
!6970 = !DILocation(line: 1662, column: 16, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 1662, column: 4)
!6972 = !DILocation(line: 1662, column: 20, scope: !6971)
!6973 = !DILocation(line: 1662, column: 28, scope: !6971)
!6974 = !DILocation(line: 1662, column: 18, scope: !6971)
!6975 = !DILocation(line: 1662, column: 4, scope: !6968)
!6976 = !DILocation(line: 1663, column: 37, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 1662, column: 44)
!6978 = !DILocation(line: 1663, column: 45, scope: !6977)
!6979 = !DILocation(line: 1663, column: 52, scope: !6977)
!6980 = !DILocation(line: 1663, column: 55, scope: !6977)
!6981 = !DILocation(line: 1663, column: 61, scope: !6977)
!6982 = !DILocation(line: 1663, column: 5, scope: !6977)
!6983 = !DILocation(line: 1664, column: 8, scope: !6977)
!6984 = !DILocation(line: 1665, column: 4, scope: !6977)
!6985 = !DILocation(line: 1662, column: 40, scope: !6971)
!6986 = !DILocation(line: 1662, column: 4, scope: !6971)
!6987 = distinct !{!6987, !6975, !6988}
!6988 = !DILocation(line: 1665, column: 4, scope: !6968)
!6989 = !DILocation(line: 1666, column: 3, scope: !6965)
!6990 = !DILocation(line: 1660, column: 58, scope: !6962)
!6991 = !DILocation(line: 1660, column: 66, scope: !6962)
!6992 = !DILocation(line: 1660, column: 56, scope: !6962)
!6993 = !DILocation(line: 1660, column: 3, scope: !6962)
!6994 = distinct !{!6994, !6963, !6995}
!6995 = !DILocation(line: 1666, column: 3, scope: !6956)
!6996 = !DILocation(line: 1667, column: 2, scope: !6949)
!6997 = !DILocation(line: 1670, column: 20, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 1668, column: 7)
!6999 = !DILocation(line: 1670, column: 35, scope: !6998)
!7000 = !DILocation(line: 1670, column: 45, scope: !6998)
!7001 = !DILocation(line: 1670, column: 50, scope: !6998)
!7002 = !DILocation(line: 1670, column: 65, scope: !6998)
!7003 = !DILocation(line: 1669, column: 3, scope: !6998)
!7004 = !DILocation(line: 1672, column: 1, scope: !6931)
!7005 = distinct !DISubprogram(name: "BKE_mask_layer_shape_to_mask_interp", scope: !3, file: !3, line: 1682, type: !7006, scopeLine: 1686, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7006 = !DISubroutineType(types: !7007)
!7007 = !{null, !2500, !2687, !2687, !3043}
!7008 = !DILocalVariable(name: "masklay", arg: 1, scope: !7005, file: !3, line: 1682, type: !2500)
!7009 = !DILocation(line: 1682, column: 53, scope: !7005)
!7010 = !DILocalVariable(name: "masklay_shape_a", arg: 2, scope: !7005, file: !3, line: 1683, type: !2687)
!7011 = !DILocation(line: 1683, column: 58, scope: !7005)
!7012 = !DILocalVariable(name: "masklay_shape_b", arg: 3, scope: !7005, file: !3, line: 1684, type: !2687)
!7013 = !DILocation(line: 1684, column: 58, scope: !7005)
!7014 = !DILocalVariable(name: "fac", arg: 4, scope: !7005, file: !3, line: 1685, type: !3043)
!7015 = !DILocation(line: 1685, column: 54, scope: !7005)
!7016 = !DILocalVariable(name: "tot", scope: !7005, file: !3, line: 1687, type: !35)
!7017 = !DILocation(line: 1687, column: 6, scope: !7005)
!7018 = !DILocation(line: 1687, column: 41, scope: !7005)
!7019 = !DILocation(line: 1687, column: 12, scope: !7005)
!7020 = !DILocation(line: 1688, column: 6, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 1688, column: 6)
!7022 = !DILocation(line: 1688, column: 23, scope: !7021)
!7023 = !DILocation(line: 1688, column: 35, scope: !7021)
!7024 = !DILocation(line: 1688, column: 32, scope: !7021)
!7025 = !DILocation(line: 1688, column: 39, scope: !7021)
!7026 = !DILocation(line: 1688, column: 42, scope: !7021)
!7027 = !DILocation(line: 1688, column: 59, scope: !7021)
!7028 = !DILocation(line: 1688, column: 71, scope: !7021)
!7029 = !DILocation(line: 1688, column: 68, scope: !7021)
!7030 = !DILocation(line: 1688, column: 6, scope: !7005)
!7031 = !DILocalVariable(name: "fp_a", scope: !7032, file: !3, line: 1689, type: !3042)
!7032 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 1688, column: 76)
!7033 = !DILocation(line: 1689, column: 16, scope: !7032)
!7034 = !DILocation(line: 1689, column: 23, scope: !7032)
!7035 = !DILocation(line: 1689, column: 40, scope: !7032)
!7036 = !DILocalVariable(name: "fp_b", scope: !7032, file: !3, line: 1690, type: !3042)
!7037 = !DILocation(line: 1690, column: 16, scope: !7032)
!7038 = !DILocation(line: 1690, column: 23, scope: !7032)
!7039 = !DILocation(line: 1690, column: 40, scope: !7032)
!7040 = !DILocalVariable(name: "ifac", scope: !7032, file: !3, line: 1691, type: !3043)
!7041 = !DILocation(line: 1691, column: 15, scope: !7032)
!7042 = !DILocation(line: 1691, column: 29, scope: !7032)
!7043 = !DILocation(line: 1691, column: 27, scope: !7032)
!7044 = !DILocalVariable(name: "spline", scope: !7032, file: !3, line: 1693, type: !2343)
!7045 = !DILocation(line: 1693, column: 15, scope: !7032)
!7046 = !DILocation(line: 1694, column: 17, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 1694, column: 3)
!7048 = !DILocation(line: 1694, column: 26, scope: !7047)
!7049 = !DILocation(line: 1694, column: 34, scope: !7047)
!7050 = !DILocation(line: 1694, column: 15, scope: !7047)
!7051 = !DILocation(line: 1694, column: 8, scope: !7047)
!7052 = !DILocation(line: 1694, column: 41, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 1694, column: 3)
!7054 = !DILocation(line: 1694, column: 3, scope: !7047)
!7055 = !DILocalVariable(name: "i", scope: !7056, file: !3, line: 1695, type: !35)
!7056 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 1694, column: 72)
!7057 = !DILocation(line: 1695, column: 8, scope: !7056)
!7058 = !DILocation(line: 1696, column: 11, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 1696, column: 4)
!7060 = !DILocation(line: 1696, column: 9, scope: !7059)
!7061 = !DILocation(line: 1696, column: 16, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 1696, column: 4)
!7063 = !DILocation(line: 1696, column: 20, scope: !7062)
!7064 = !DILocation(line: 1696, column: 28, scope: !7062)
!7065 = !DILocation(line: 1696, column: 18, scope: !7062)
!7066 = !DILocation(line: 1696, column: 4, scope: !7059)
!7067 = !DILocalVariable(name: "bezt", scope: !7068, file: !3, line: 1697, type: !3482)
!7068 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 1696, column: 44)
!7069 = !DILocation(line: 1697, column: 16, scope: !7068)
!7070 = !DILocation(line: 1697, column: 24, scope: !7068)
!7071 = !DILocation(line: 1697, column: 32, scope: !7068)
!7072 = !DILocation(line: 1697, column: 39, scope: !7068)
!7073 = !DILocation(line: 1697, column: 42, scope: !7068)
!7074 = !DILocation(line: 1699, column: 25, scope: !7068)
!7075 = !DILocation(line: 1699, column: 31, scope: !7068)
!7076 = !DILocation(line: 1699, column: 39, scope: !7068)
!7077 = !DILocation(line: 1699, column: 45, scope: !7068)
!7078 = !DILocation(line: 1699, column: 51, scope: !7068)
!7079 = !DILocation(line: 1699, column: 56, scope: !7068)
!7080 = !DILocation(line: 1699, column: 5, scope: !7068)
!7081 = !DILocation(line: 1699, column: 68, scope: !7068)
!7082 = !DILocation(line: 1699, column: 79, scope: !7068)
!7083 = !DILocation(line: 1700, column: 25, scope: !7068)
!7084 = !DILocation(line: 1700, column: 31, scope: !7068)
!7085 = !DILocation(line: 1700, column: 39, scope: !7068)
!7086 = !DILocation(line: 1700, column: 45, scope: !7068)
!7087 = !DILocation(line: 1700, column: 51, scope: !7068)
!7088 = !DILocation(line: 1700, column: 56, scope: !7068)
!7089 = !DILocation(line: 1700, column: 5, scope: !7068)
!7090 = !DILocation(line: 1700, column: 68, scope: !7068)
!7091 = !DILocation(line: 1700, column: 79, scope: !7068)
!7092 = !DILocation(line: 1701, column: 25, scope: !7068)
!7093 = !DILocation(line: 1701, column: 31, scope: !7068)
!7094 = !DILocation(line: 1701, column: 39, scope: !7068)
!7095 = !DILocation(line: 1701, column: 45, scope: !7068)
!7096 = !DILocation(line: 1701, column: 51, scope: !7068)
!7097 = !DILocation(line: 1701, column: 56, scope: !7068)
!7098 = !DILocation(line: 1701, column: 5, scope: !7068)
!7099 = !DILocation(line: 1701, column: 68, scope: !7068)
!7100 = !DILocation(line: 1701, column: 79, scope: !7068)
!7101 = !DILocation(line: 1702, column: 21, scope: !7068)
!7102 = !DILocation(line: 1702, column: 31, scope: !7068)
!7103 = !DILocation(line: 1702, column: 29, scope: !7068)
!7104 = !DILocation(line: 1702, column: 40, scope: !7068)
!7105 = !DILocation(line: 1702, column: 50, scope: !7068)
!7106 = !DILocation(line: 1702, column: 48, scope: !7068)
!7107 = !DILocation(line: 1702, column: 37, scope: !7068)
!7108 = !DILocation(line: 1702, column: 5, scope: !7068)
!7109 = !DILocation(line: 1702, column: 11, scope: !7068)
!7110 = !DILocation(line: 1702, column: 18, scope: !7068)
!7111 = !DILocation(line: 1703, column: 21, scope: !7068)
!7112 = !DILocation(line: 1703, column: 31, scope: !7068)
!7113 = !DILocation(line: 1703, column: 29, scope: !7068)
!7114 = !DILocation(line: 1703, column: 40, scope: !7068)
!7115 = !DILocation(line: 1703, column: 50, scope: !7068)
!7116 = !DILocation(line: 1703, column: 48, scope: !7068)
!7117 = !DILocation(line: 1703, column: 37, scope: !7068)
!7118 = !DILocation(line: 1703, column: 5, scope: !7068)
!7119 = !DILocation(line: 1703, column: 11, scope: !7068)
!7120 = !DILocation(line: 1703, column: 18, scope: !7068)
!7121 = !DILocation(line: 1703, column: 61, scope: !7068)
!7122 = !DILocation(line: 1703, column: 72, scope: !7068)
!7123 = !DILocation(line: 1704, column: 4, scope: !7068)
!7124 = !DILocation(line: 1696, column: 40, scope: !7062)
!7125 = !DILocation(line: 1696, column: 4, scope: !7062)
!7126 = distinct !{!7126, !7066, !7127}
!7127 = !DILocation(line: 1704, column: 4, scope: !7059)
!7128 = !DILocation(line: 1705, column: 3, scope: !7056)
!7129 = !DILocation(line: 1694, column: 58, scope: !7053)
!7130 = !DILocation(line: 1694, column: 66, scope: !7053)
!7131 = !DILocation(line: 1694, column: 56, scope: !7053)
!7132 = !DILocation(line: 1694, column: 3, scope: !7053)
!7133 = distinct !{!7133, !7054, !7134}
!7134 = !DILocation(line: 1705, column: 3, scope: !7047)
!7135 = !DILocation(line: 1706, column: 2, scope: !7032)
!7136 = !DILocation(line: 1709, column: 20, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 1707, column: 7)
!7138 = !DILocation(line: 1709, column: 37, scope: !7137)
!7139 = !DILocation(line: 1709, column: 47, scope: !7137)
!7140 = !DILocation(line: 1709, column: 64, scope: !7137)
!7141 = !DILocation(line: 1709, column: 74, scope: !7137)
!7142 = !DILocation(line: 1710, column: 10, scope: !7137)
!7143 = !DILocation(line: 1710, column: 27, scope: !7137)
!7144 = !DILocation(line: 1710, column: 34, scope: !7137)
!7145 = !DILocation(line: 1710, column: 51, scope: !7137)
!7146 = !DILocation(line: 1708, column: 3, scope: !7137)
!7147 = !DILocation(line: 1712, column: 1, scope: !7005)
!7148 = distinct !DISubprogram(name: "mask_evaluate_apply_point_parent", scope: !3, file: !3, line: 1223, type: !7149, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7149 = !DISubroutineType(types: !7150)
!7150 = !{null, !2355, !71}
!7151 = !DILocalVariable(name: "point", arg: 1, scope: !7148, file: !3, line: 1223, type: !2355)
!7152 = !DILocation(line: 1223, column: 63, scope: !7148)
!7153 = !DILocalVariable(name: "ctime", arg: 2, scope: !7148, file: !3, line: 1223, type: !71)
!7154 = !DILocation(line: 1223, column: 76, scope: !7148)
!7155 = !DILocalVariable(name: "parent_matrix", scope: !7148, file: !3, line: 1225, type: !1307)
!7156 = !DILocation(line: 1225, column: 8, scope: !7148)
!7157 = !DILocation(line: 1227, column: 35, scope: !7148)
!7158 = !DILocation(line: 1227, column: 42, scope: !7148)
!7159 = !DILocation(line: 1227, column: 49, scope: !7148)
!7160 = !DILocation(line: 1227, column: 2, scope: !7148)
!7161 = !DILocation(line: 1229, column: 12, scope: !7148)
!7162 = !DILocation(line: 1229, column: 27, scope: !7148)
!7163 = !DILocation(line: 1229, column: 34, scope: !7148)
!7164 = !DILocation(line: 1229, column: 39, scope: !7148)
!7165 = !DILocation(line: 1229, column: 2, scope: !7148)
!7166 = !DILocation(line: 1230, column: 12, scope: !7148)
!7167 = !DILocation(line: 1230, column: 27, scope: !7148)
!7168 = !DILocation(line: 1230, column: 34, scope: !7148)
!7169 = !DILocation(line: 1230, column: 39, scope: !7148)
!7170 = !DILocation(line: 1230, column: 2, scope: !7148)
!7171 = !DILocation(line: 1231, column: 12, scope: !7148)
!7172 = !DILocation(line: 1231, column: 27, scope: !7148)
!7173 = !DILocation(line: 1231, column: 34, scope: !7148)
!7174 = !DILocation(line: 1231, column: 39, scope: !7148)
!7175 = !DILocation(line: 1231, column: 2, scope: !7148)
!7176 = !DILocation(line: 1232, column: 1, scope: !7148)
!7177 = distinct !DISubprogram(name: "BKE_mask_evaluate", scope: !3, file: !3, line: 1525, type: !7178, scopeLine: 1526, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7178 = !DISubroutineType(types: !7179)
!7179 = !{null, !2493, !3043, !4511}
!7180 = !DILocalVariable(name: "mask", arg: 1, scope: !7177, file: !3, line: 1525, type: !2493)
!7181 = !DILocation(line: 1525, column: 30, scope: !7177)
!7182 = !DILocalVariable(name: "ctime", arg: 2, scope: !7177, file: !3, line: 1525, type: !3043)
!7183 = !DILocation(line: 1525, column: 48, scope: !7177)
!7184 = !DILocalVariable(name: "do_newframe", arg: 3, scope: !7177, file: !3, line: 1525, type: !4511)
!7185 = !DILocation(line: 1525, column: 66, scope: !7177)
!7186 = !DILocalVariable(name: "masklay", scope: !7177, file: !3, line: 1527, type: !2500)
!7187 = !DILocation(line: 1527, column: 13, scope: !7177)
!7188 = !DILocation(line: 1529, column: 17, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 1529, column: 2)
!7190 = !DILocation(line: 1529, column: 23, scope: !7189)
!7191 = !DILocation(line: 1529, column: 34, scope: !7189)
!7192 = !DILocation(line: 1529, column: 15, scope: !7189)
!7193 = !DILocation(line: 1529, column: 7, scope: !7189)
!7194 = !DILocation(line: 1529, column: 41, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 1529, column: 2)
!7196 = !DILocation(line: 1529, column: 2, scope: !7189)
!7197 = !DILocation(line: 1530, column: 27, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 1529, column: 75)
!7199 = !DILocation(line: 1530, column: 36, scope: !7198)
!7200 = !DILocation(line: 1530, column: 43, scope: !7198)
!7201 = !DILocation(line: 1530, column: 3, scope: !7198)
!7202 = !DILocation(line: 1531, column: 2, scope: !7198)
!7203 = !DILocation(line: 1529, column: 60, scope: !7195)
!7204 = !DILocation(line: 1529, column: 69, scope: !7195)
!7205 = !DILocation(line: 1529, column: 58, scope: !7195)
!7206 = !DILocation(line: 1529, column: 2, scope: !7195)
!7207 = distinct !{!7207, !7196, !7208}
!7208 = !DILocation(line: 1531, column: 2, scope: !7189)
!7209 = !DILocation(line: 1532, column: 1, scope: !7177)
!7210 = distinct !DISubprogram(name: "BKE_mask_update_display", scope: !3, file: !3, line: 1536, type: !7211, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7211 = !DISubroutineType(types: !7212)
!7212 = !{null, !2493, !71}
!7213 = !DILocalVariable(name: "mask", arg: 1, scope: !7210, file: !3, line: 1536, type: !2493)
!7214 = !DILocation(line: 1536, column: 36, scope: !7210)
!7215 = !DILocalVariable(name: "ctime", arg: 2, scope: !7210, file: !3, line: 1536, type: !71)
!7216 = !DILocation(line: 1536, column: 48, scope: !7210)
!7217 = !DILocation(line: 1566, column: 20, scope: !7210)
!7218 = !DILocation(line: 1566, column: 26, scope: !7210)
!7219 = !DILocation(line: 1566, column: 2, scope: !7210)
!7220 = !DILocation(line: 1567, column: 1, scope: !7210)
!7221 = distinct !DISubprogram(name: "BKE_mask_evaluate_all_masks", scope: !3, file: !3, line: 1569, type: !7222, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7222 = !DISubroutineType(types: !7223)
!7223 = !{null, !4646, !71, !4511}
!7224 = !DILocalVariable(name: "bmain", arg: 1, scope: !7221, file: !3, line: 1569, type: !4646)
!7225 = !DILocation(line: 1569, column: 40, scope: !7221)
!7226 = !DILocalVariable(name: "ctime", arg: 2, scope: !7221, file: !3, line: 1569, type: !71)
!7227 = !DILocation(line: 1569, column: 53, scope: !7221)
!7228 = !DILocalVariable(name: "do_newframe", arg: 3, scope: !7221, file: !3, line: 1569, type: !4511)
!7229 = !DILocation(line: 1569, column: 71, scope: !7221)
!7230 = !DILocalVariable(name: "mask", scope: !7221, file: !3, line: 1571, type: !2493)
!7231 = !DILocation(line: 1571, column: 8, scope: !7221)
!7232 = !DILocation(line: 1573, column: 14, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 1573, column: 2)
!7234 = !DILocation(line: 1573, column: 21, scope: !7233)
!7235 = !DILocation(line: 1573, column: 26, scope: !7233)
!7236 = !DILocation(line: 1573, column: 12, scope: !7233)
!7237 = !DILocation(line: 1573, column: 7, scope: !7233)
!7238 = !DILocation(line: 1573, column: 33, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 1573, column: 2)
!7240 = !DILocation(line: 1573, column: 2, scope: !7233)
!7241 = !DILocation(line: 1574, column: 21, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 1573, column: 61)
!7243 = !DILocation(line: 1574, column: 27, scope: !7242)
!7244 = !DILocation(line: 1574, column: 34, scope: !7242)
!7245 = !DILocation(line: 1574, column: 3, scope: !7242)
!7246 = !DILocation(line: 1575, column: 2, scope: !7242)
!7247 = !DILocation(line: 1573, column: 46, scope: !7239)
!7248 = !DILocation(line: 1573, column: 52, scope: !7239)
!7249 = !DILocation(line: 1573, column: 55, scope: !7239)
!7250 = !DILocation(line: 1573, column: 44, scope: !7239)
!7251 = !DILocation(line: 1573, column: 2, scope: !7239)
!7252 = distinct !{!7252, !7240, !7253}
!7253 = !DILocation(line: 1575, column: 2, scope: !7233)
!7254 = !DILocation(line: 1576, column: 1, scope: !7221)
!7255 = distinct !DISubprogram(name: "BKE_mask_update_scene", scope: !3, file: !3, line: 1578, type: !7256, scopeLine: 1579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7256 = !DISubroutineType(types: !7257)
!7257 = !{null, !4646, !5152}
!7258 = !DILocalVariable(name: "bmain", arg: 1, scope: !7255, file: !3, line: 1578, type: !4646)
!7259 = !DILocation(line: 1578, column: 34, scope: !7255)
!7260 = !DILocalVariable(name: "scene", arg: 2, scope: !7255, file: !3, line: 1578, type: !5152)
!7261 = !DILocation(line: 1578, column: 48, scope: !7255)
!7262 = !DILocalVariable(name: "mask", scope: !7255, file: !3, line: 1580, type: !2493)
!7263 = !DILocation(line: 1580, column: 8, scope: !7255)
!7264 = !DILocation(line: 1582, column: 14, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 1582, column: 2)
!7266 = !DILocation(line: 1582, column: 21, scope: !7265)
!7267 = !DILocation(line: 1582, column: 26, scope: !7265)
!7268 = !DILocation(line: 1582, column: 12, scope: !7265)
!7269 = !DILocation(line: 1582, column: 7, scope: !7265)
!7270 = !DILocation(line: 1582, column: 33, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 1582, column: 2)
!7272 = !DILocation(line: 1582, column: 2, scope: !7265)
!7273 = !DILocation(line: 1583, column: 7, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7275, file: !3, line: 1583, column: 7)
!7275 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 1582, column: 61)
!7276 = !DILocation(line: 1583, column: 13, scope: !7274)
!7277 = !DILocation(line: 1583, column: 16, scope: !7274)
!7278 = !DILocation(line: 1583, column: 21, scope: !7274)
!7279 = !DILocation(line: 1583, column: 7, scope: !7275)
!7280 = !DILocalVariable(name: "do_new_frame", scope: !7281, file: !3, line: 1584, type: !1671)
!7281 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 1583, column: 61)
!7282 = !DILocation(line: 1584, column: 9, scope: !7281)
!7283 = !DILocation(line: 1584, column: 25, scope: !7281)
!7284 = !DILocation(line: 1584, column: 31, scope: !7281)
!7285 = !DILocation(line: 1584, column: 34, scope: !7281)
!7286 = !DILocation(line: 1584, column: 39, scope: !7281)
!7287 = !DILocation(line: 1584, column: 61, scope: !7281)
!7288 = !DILocation(line: 1584, column: 24, scope: !7281)
!7289 = !DILocation(line: 1585, column: 32, scope: !7281)
!7290 = !DILocation(line: 1585, column: 39, scope: !7281)
!7291 = !DILocation(line: 1585, column: 45, scope: !7281)
!7292 = !DILocation(line: 1585, column: 4, scope: !7281)
!7293 = !DILocation(line: 1586, column: 3, scope: !7281)
!7294 = !DILocation(line: 1587, column: 2, scope: !7275)
!7295 = !DILocation(line: 1582, column: 46, scope: !7271)
!7296 = !DILocation(line: 1582, column: 52, scope: !7271)
!7297 = !DILocation(line: 1582, column: 55, scope: !7271)
!7298 = !DILocation(line: 1582, column: 44, scope: !7271)
!7299 = !DILocation(line: 1582, column: 2, scope: !7271)
!7300 = distinct !{!7300, !7272, !7301}
!7301 = !DILocation(line: 1587, column: 2, scope: !7265)
!7302 = !DILocation(line: 1588, column: 1, scope: !7255)
!7303 = distinct !DISubprogram(name: "BKE_mask_layer_shape_from_mask", scope: !3, file: !3, line: 1630, type: !6932, scopeLine: 1631, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7304 = !DILocalVariable(name: "masklay", arg: 1, scope: !7303, file: !3, line: 1630, type: !2500)
!7305 = !DILocation(line: 1630, column: 48, scope: !7303)
!7306 = !DILocalVariable(name: "masklay_shape", arg: 2, scope: !7303, file: !3, line: 1630, type: !2687)
!7307 = !DILocation(line: 1630, column: 73, scope: !7303)
!7308 = !DILocalVariable(name: "tot", scope: !7303, file: !3, line: 1632, type: !35)
!7309 = !DILocation(line: 1632, column: 6, scope: !7303)
!7310 = !DILocation(line: 1632, column: 41, scope: !7303)
!7311 = !DILocation(line: 1632, column: 12, scope: !7303)
!7312 = !DILocation(line: 1634, column: 6, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 1634, column: 6)
!7314 = !DILocation(line: 1634, column: 21, scope: !7313)
!7315 = !DILocation(line: 1634, column: 33, scope: !7313)
!7316 = !DILocation(line: 1634, column: 30, scope: !7313)
!7317 = !DILocation(line: 1634, column: 6, scope: !7303)
!7318 = !DILocalVariable(name: "fp", scope: !7319, file: !3, line: 1635, type: !639)
!7319 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1634, column: 38)
!7320 = !DILocation(line: 1635, column: 10, scope: !7319)
!7321 = !DILocation(line: 1635, column: 15, scope: !7319)
!7322 = !DILocation(line: 1635, column: 30, scope: !7319)
!7323 = !DILocalVariable(name: "spline", scope: !7319, file: !3, line: 1637, type: !2343)
!7324 = !DILocation(line: 1637, column: 15, scope: !7319)
!7325 = !DILocation(line: 1638, column: 17, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7319, file: !3, line: 1638, column: 3)
!7327 = !DILocation(line: 1638, column: 26, scope: !7326)
!7328 = !DILocation(line: 1638, column: 34, scope: !7326)
!7329 = !DILocation(line: 1638, column: 15, scope: !7326)
!7330 = !DILocation(line: 1638, column: 8, scope: !7326)
!7331 = !DILocation(line: 1638, column: 41, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 1638, column: 3)
!7333 = !DILocation(line: 1638, column: 3, scope: !7326)
!7334 = !DILocalVariable(name: "i", scope: !7335, file: !3, line: 1639, type: !35)
!7335 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 1638, column: 72)
!7336 = !DILocation(line: 1639, column: 8, scope: !7335)
!7337 = !DILocation(line: 1640, column: 11, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 1640, column: 4)
!7339 = !DILocation(line: 1640, column: 9, scope: !7338)
!7340 = !DILocation(line: 1640, column: 16, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 1640, column: 4)
!7342 = !DILocation(line: 1640, column: 20, scope: !7341)
!7343 = !DILocation(line: 1640, column: 28, scope: !7341)
!7344 = !DILocation(line: 1640, column: 18, scope: !7341)
!7345 = !DILocation(line: 1640, column: 4, scope: !7338)
!7346 = !DILocation(line: 1641, column: 39, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 1640, column: 44)
!7348 = !DILocation(line: 1641, column: 47, scope: !7347)
!7349 = !DILocation(line: 1641, column: 54, scope: !7347)
!7350 = !DILocation(line: 1641, column: 57, scope: !7347)
!7351 = !DILocation(line: 1641, column: 63, scope: !7347)
!7352 = !DILocation(line: 1641, column: 5, scope: !7347)
!7353 = !DILocation(line: 1642, column: 8, scope: !7347)
!7354 = !DILocation(line: 1643, column: 4, scope: !7347)
!7355 = !DILocation(line: 1640, column: 40, scope: !7341)
!7356 = !DILocation(line: 1640, column: 4, scope: !7341)
!7357 = distinct !{!7357, !7345, !7358}
!7358 = !DILocation(line: 1643, column: 4, scope: !7338)
!7359 = !DILocation(line: 1644, column: 3, scope: !7335)
!7360 = !DILocation(line: 1638, column: 58, scope: !7332)
!7361 = !DILocation(line: 1638, column: 66, scope: !7332)
!7362 = !DILocation(line: 1638, column: 56, scope: !7332)
!7363 = !DILocation(line: 1638, column: 3, scope: !7332)
!7364 = distinct !{!7364, !7333, !7365}
!7365 = !DILocation(line: 1644, column: 3, scope: !7326)
!7366 = !DILocation(line: 1645, column: 2, scope: !7319)
!7367 = !DILocation(line: 1648, column: 20, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1646, column: 7)
!7369 = !DILocation(line: 1648, column: 35, scope: !7368)
!7370 = !DILocation(line: 1648, column: 45, scope: !7368)
!7371 = !DILocation(line: 1648, column: 50, scope: !7368)
!7372 = !DILocation(line: 1648, column: 65, scope: !7368)
!7373 = !DILocation(line: 1647, column: 3, scope: !7368)
!7374 = !DILocation(line: 1650, column: 1, scope: !7303)
!7375 = distinct !DISubprogram(name: "mask_layer_shape_from_mask_point", scope: !3, file: !3, line: 1611, type: !7376, scopeLine: 1612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7376 = !DISubroutineType(types: !7377)
!7377 = !{null, !3482, !639}
!7378 = !DILocalVariable(name: "bezt", arg: 1, scope: !7375, file: !3, line: 1611, type: !3482)
!7379 = !DILocation(line: 1611, column: 57, scope: !7375)
!7380 = !DILocalVariable(name: "fp", arg: 2, scope: !7375, file: !3, line: 1611, type: !639)
!7381 = !DILocation(line: 1611, column: 69, scope: !7375)
!7382 = !DILocation(line: 1613, column: 14, scope: !7375)
!7383 = !DILocation(line: 1613, column: 21, scope: !7375)
!7384 = !DILocation(line: 1613, column: 27, scope: !7375)
!7385 = !DILocation(line: 1613, column: 2, scope: !7375)
!7386 = !DILocation(line: 1614, column: 14, scope: !7375)
!7387 = !DILocation(line: 1614, column: 21, scope: !7375)
!7388 = !DILocation(line: 1614, column: 27, scope: !7375)
!7389 = !DILocation(line: 1614, column: 2, scope: !7375)
!7390 = !DILocation(line: 1615, column: 14, scope: !7375)
!7391 = !DILocation(line: 1615, column: 21, scope: !7375)
!7392 = !DILocation(line: 1615, column: 27, scope: !7375)
!7393 = !DILocation(line: 1615, column: 2, scope: !7375)
!7394 = !DILocation(line: 1616, column: 10, scope: !7375)
!7395 = !DILocation(line: 1616, column: 16, scope: !7375)
!7396 = !DILocation(line: 1616, column: 2, scope: !7375)
!7397 = !DILocation(line: 1616, column: 8, scope: !7375)
!7398 = !DILocation(line: 1617, column: 10, scope: !7375)
!7399 = !DILocation(line: 1617, column: 16, scope: !7375)
!7400 = !DILocation(line: 1617, column: 2, scope: !7375)
!7401 = !DILocation(line: 1617, column: 8, scope: !7375)
!7402 = !DILocation(line: 1618, column: 1, scope: !7375)
!7403 = distinct !DISubprogram(name: "mask_layer_shape_to_mask_point", scope: !3, file: !3, line: 1620, type: !7376, scopeLine: 1621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7404 = !DILocalVariable(name: "bezt", arg: 1, scope: !7403, file: !3, line: 1620, type: !3482)
!7405 = !DILocation(line: 1620, column: 55, scope: !7403)
!7406 = !DILocalVariable(name: "fp", arg: 2, scope: !7403, file: !3, line: 1620, type: !639)
!7407 = !DILocation(line: 1620, column: 67, scope: !7403)
!7408 = !DILocation(line: 1622, column: 13, scope: !7403)
!7409 = !DILocation(line: 1622, column: 19, scope: !7403)
!7410 = !DILocation(line: 1622, column: 28, scope: !7403)
!7411 = !DILocation(line: 1622, column: 2, scope: !7403)
!7412 = !DILocation(line: 1623, column: 13, scope: !7403)
!7413 = !DILocation(line: 1623, column: 19, scope: !7403)
!7414 = !DILocation(line: 1623, column: 28, scope: !7403)
!7415 = !DILocation(line: 1623, column: 2, scope: !7403)
!7416 = !DILocation(line: 1624, column: 13, scope: !7403)
!7417 = !DILocation(line: 1624, column: 19, scope: !7403)
!7418 = !DILocation(line: 1624, column: 28, scope: !7403)
!7419 = !DILocation(line: 1624, column: 2, scope: !7403)
!7420 = !DILocation(line: 1625, column: 17, scope: !7403)
!7421 = !DILocation(line: 1625, column: 2, scope: !7403)
!7422 = !DILocation(line: 1625, column: 8, scope: !7403)
!7423 = !DILocation(line: 1625, column: 15, scope: !7403)
!7424 = !DILocation(line: 1626, column: 17, scope: !7403)
!7425 = !DILocation(line: 1626, column: 2, scope: !7403)
!7426 = !DILocation(line: 1626, column: 8, scope: !7403)
!7427 = !DILocation(line: 1626, column: 15, scope: !7403)
!7428 = !DILocation(line: 1627, column: 1, scope: !7403)
!7429 = distinct !DISubprogram(name: "interp_v2_v2v2_flfl", scope: !3, file: !3, line: 1674, type: !7430, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{null, !639, !3042, !3042, !3043, !3043}
!7432 = !DILocalVariable(name: "target", arg: 1, scope: !7429, file: !3, line: 1674, type: !639)
!7433 = !DILocation(line: 1674, column: 43, scope: !7429)
!7434 = !DILocalVariable(name: "a", arg: 2, scope: !7429, file: !3, line: 1674, type: !3042)
!7435 = !DILocation(line: 1674, column: 66, scope: !7429)
!7436 = !DILocalVariable(name: "b", arg: 3, scope: !7429, file: !3, line: 1674, type: !3042)
!7437 = !DILocation(line: 1674, column: 84, scope: !7429)
!7438 = !DILocalVariable(name: "t", arg: 4, scope: !7429, file: !3, line: 1675, type: !3043)
!7439 = !DILocation(line: 1675, column: 49, scope: !7429)
!7440 = !DILocalVariable(name: "s", arg: 5, scope: !7429, file: !3, line: 1675, type: !3043)
!7441 = !DILocation(line: 1675, column: 64, scope: !7429)
!7442 = !DILocation(line: 1677, column: 14, scope: !7429)
!7443 = !DILocation(line: 1677, column: 18, scope: !7429)
!7444 = !DILocation(line: 1677, column: 16, scope: !7429)
!7445 = !DILocation(line: 1677, column: 25, scope: !7429)
!7446 = !DILocation(line: 1677, column: 29, scope: !7429)
!7447 = !DILocation(line: 1677, column: 27, scope: !7429)
!7448 = !DILocation(line: 1677, column: 23, scope: !7429)
!7449 = !DILocation(line: 1677, column: 2, scope: !7429)
!7450 = !DILocation(line: 1677, column: 12, scope: !7429)
!7451 = !DILocation(line: 1678, column: 14, scope: !7429)
!7452 = !DILocation(line: 1678, column: 18, scope: !7429)
!7453 = !DILocation(line: 1678, column: 16, scope: !7429)
!7454 = !DILocation(line: 1678, column: 25, scope: !7429)
!7455 = !DILocation(line: 1678, column: 29, scope: !7429)
!7456 = !DILocation(line: 1678, column: 27, scope: !7429)
!7457 = !DILocation(line: 1678, column: 23, scope: !7429)
!7458 = !DILocation(line: 1678, column: 2, scope: !7429)
!7459 = !DILocation(line: 1678, column: 12, scope: !7429)
!7460 = !DILocation(line: 1679, column: 1, scope: !7429)
!7461 = distinct !DISubprogram(name: "BKE_mask_layer_shape_find_frame", scope: !3, file: !3, line: 1714, type: !4926, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7462 = !DILocalVariable(name: "masklay", arg: 1, scope: !7461, file: !3, line: 1714, type: !2500)
!7463 = !DILocation(line: 1714, column: 60, scope: !7461)
!7464 = !DILocalVariable(name: "frame", arg: 2, scope: !7461, file: !3, line: 1714, type: !2941)
!7465 = !DILocation(line: 1714, column: 79, scope: !7461)
!7466 = !DILocalVariable(name: "masklay_shape", scope: !7461, file: !3, line: 1716, type: !2687)
!7467 = !DILocation(line: 1716, column: 18, scope: !7461)
!7468 = !DILocation(line: 1718, column: 23, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1718, column: 2)
!7470 = !DILocation(line: 1718, column: 32, scope: !7469)
!7471 = !DILocation(line: 1718, column: 47, scope: !7469)
!7472 = !DILocation(line: 1718, column: 21, scope: !7469)
!7473 = !DILocation(line: 1718, column: 7, scope: !7469)
!7474 = !DILocation(line: 1719, column: 7, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7469, file: !3, line: 1718, column: 2)
!7476 = !DILocation(line: 1718, column: 2, scope: !7469)
!7477 = !DILocation(line: 1722, column: 7, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 1722, column: 7)
!7479 = distinct !DILexicalBlock(scope: !7475, file: !3, line: 1721, column: 2)
!7480 = !DILocation(line: 1722, column: 16, scope: !7478)
!7481 = !DILocation(line: 1722, column: 31, scope: !7478)
!7482 = !DILocation(line: 1722, column: 13, scope: !7478)
!7483 = !DILocation(line: 1722, column: 7, scope: !7479)
!7484 = !DILocation(line: 1723, column: 11, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7478, file: !3, line: 1722, column: 38)
!7486 = !DILocation(line: 1723, column: 4, scope: !7485)
!7487 = !DILocation(line: 1725, column: 12, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7478, file: !3, line: 1725, column: 12)
!7489 = !DILocation(line: 1725, column: 20, scope: !7488)
!7490 = !DILocation(line: 1725, column: 35, scope: !7488)
!7491 = !DILocation(line: 1725, column: 18, scope: !7488)
!7492 = !DILocation(line: 1725, column: 12, scope: !7478)
!7493 = !DILocation(line: 1726, column: 4, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7488, file: !3, line: 1725, column: 42)
!7495 = !DILocation(line: 1728, column: 2, scope: !7479)
!7496 = !DILocation(line: 1720, column: 23, scope: !7475)
!7497 = !DILocation(line: 1720, column: 38, scope: !7475)
!7498 = !DILocation(line: 1720, column: 21, scope: !7475)
!7499 = !DILocation(line: 1718, column: 2, scope: !7475)
!7500 = distinct !{!7500, !7476, !7501}
!7501 = !DILocation(line: 1728, column: 2, scope: !7469)
!7502 = !DILocation(line: 1730, column: 2, scope: !7461)
!7503 = !DILocation(line: 1731, column: 1, scope: !7461)
!7504 = distinct !DISubprogram(name: "BKE_mask_layer_shape_verify_frame", scope: !3, file: !3, line: 1776, type: !4926, scopeLine: 1777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7505 = !DILocalVariable(name: "masklay", arg: 1, scope: !7504, file: !3, line: 1776, type: !2500)
!7506 = !DILocation(line: 1776, column: 62, scope: !7504)
!7507 = !DILocalVariable(name: "frame", arg: 2, scope: !7504, file: !3, line: 1776, type: !2941)
!7508 = !DILocation(line: 1776, column: 81, scope: !7504)
!7509 = !DILocalVariable(name: "masklay_shape", scope: !7504, file: !3, line: 1778, type: !2687)
!7510 = !DILocation(line: 1778, column: 18, scope: !7504)
!7511 = !DILocation(line: 1780, column: 50, scope: !7504)
!7512 = !DILocation(line: 1780, column: 59, scope: !7504)
!7513 = !DILocation(line: 1780, column: 18, scope: !7504)
!7514 = !DILocation(line: 1780, column: 16, scope: !7504)
!7515 = !DILocation(line: 1782, column: 6, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 1782, column: 6)
!7517 = !DILocation(line: 1782, column: 20, scope: !7516)
!7518 = !DILocation(line: 1782, column: 6, scope: !7504)
!7519 = !DILocation(line: 1783, column: 46, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 1782, column: 29)
!7521 = !DILocation(line: 1783, column: 55, scope: !7520)
!7522 = !DILocation(line: 1783, column: 19, scope: !7520)
!7523 = !DILocation(line: 1783, column: 17, scope: !7520)
!7524 = !DILocation(line: 1784, column: 16, scope: !7520)
!7525 = !DILocation(line: 1784, column: 25, scope: !7520)
!7526 = !DILocation(line: 1784, column: 41, scope: !7520)
!7527 = !DILocation(line: 1784, column: 3, scope: !7520)
!7528 = !DILocation(line: 1785, column: 29, scope: !7520)
!7529 = !DILocation(line: 1785, column: 3, scope: !7520)
!7530 = !DILocation(line: 1786, column: 2, scope: !7520)
!7531 = !DILocation(line: 1801, column: 9, scope: !7504)
!7532 = !DILocation(line: 1801, column: 2, scope: !7504)
!7533 = distinct !DISubprogram(name: "BKE_mask_layer_shape_sort", scope: !3, file: !3, line: 1834, type: !2602, scopeLine: 1835, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7534 = !DILocalVariable(name: "masklay", arg: 1, scope: !7533, file: !3, line: 1834, type: !2500)
!7535 = !DILocation(line: 1834, column: 43, scope: !7533)
!7536 = !DILocation(line: 1836, column: 16, scope: !7533)
!7537 = !DILocation(line: 1836, column: 25, scope: !7533)
!7538 = !DILocation(line: 1836, column: 2, scope: !7533)
!7539 = !DILocation(line: 1837, column: 1, scope: !7533)
!7540 = distinct !DISubprogram(name: "BKE_mask_layer_shape_duplicate", scope: !3, file: !3, line: 1804, type: !7541, scopeLine: 1805, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7541 = !DISubroutineType(types: !7542)
!7542 = !{!2692, !2687}
!7543 = !DILocalVariable(name: "masklay_shape", arg: 1, scope: !7540, file: !3, line: 1804, type: !2687)
!7544 = !DILocation(line: 1804, column: 64, scope: !7540)
!7545 = !DILocalVariable(name: "masklay_shape_copy", scope: !7540, file: !3, line: 1806, type: !2687)
!7546 = !DILocation(line: 1806, column: 18, scope: !7540)
!7547 = !DILocation(line: 1808, column: 23, scope: !7540)
!7548 = !DILocation(line: 1808, column: 37, scope: !7540)
!7549 = !DILocation(line: 1808, column: 21, scope: !7540)
!7550 = !DILocation(line: 1810, column: 6, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 1810, column: 6)
!7552 = !DILocation(line: 1810, column: 6, scope: !7540)
!7553 = !DILocation(line: 1811, column: 30, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7551, file: !3, line: 1810, column: 40)
!7555 = !DILocation(line: 1811, column: 44, scope: !7554)
!7556 = !DILocation(line: 1811, column: 64, scope: !7554)
!7557 = !DILocation(line: 1811, column: 3, scope: !7554)
!7558 = !DILocation(line: 1811, column: 23, scope: !7554)
!7559 = !DILocation(line: 1811, column: 28, scope: !7554)
!7560 = !DILocation(line: 1812, column: 2, scope: !7554)
!7561 = !DILocation(line: 1814, column: 9, scope: !7540)
!7562 = !DILocation(line: 1814, column: 2, scope: !7540)
!7563 = distinct !DISubprogram(name: "BKE_mask_layer_shape_unlink", scope: !3, file: !3, line: 1817, type: !6932, scopeLine: 1818, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7564 = !DILocalVariable(name: "masklay", arg: 1, scope: !7563, file: !3, line: 1817, type: !2500)
!7565 = !DILocation(line: 1817, column: 45, scope: !7563)
!7566 = !DILocalVariable(name: "masklay_shape", arg: 2, scope: !7563, file: !3, line: 1817, type: !2687)
!7567 = !DILocation(line: 1817, column: 70, scope: !7563)
!7568 = !DILocation(line: 1819, column: 15, scope: !7563)
!7569 = !DILocation(line: 1819, column: 24, scope: !7563)
!7570 = !DILocation(line: 1819, column: 40, scope: !7563)
!7571 = !DILocation(line: 1819, column: 2, scope: !7563)
!7572 = !DILocation(line: 1821, column: 28, scope: !7563)
!7573 = !DILocation(line: 1821, column: 2, scope: !7563)
!7574 = !DILocation(line: 1822, column: 1, scope: !7563)
!7575 = distinct !DISubprogram(name: "mask_layer_shape_sort_cb", scope: !3, file: !3, line: 1824, type: !7576, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7576 = !DISubroutineType(types: !7577)
!7577 = !{!35, !7578, !7578}
!7578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7579, size: 64)
!7579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!7580 = !DILocalVariable(name: "masklay_shape_a_ptr", arg: 1, scope: !7575, file: !3, line: 1824, type: !7578)
!7581 = !DILocation(line: 1824, column: 49, scope: !7575)
!7582 = !DILocalVariable(name: "masklay_shape_b_ptr", arg: 2, scope: !7575, file: !3, line: 1824, type: !7578)
!7583 = !DILocation(line: 1824, column: 82, scope: !7575)
!7584 = !DILocalVariable(name: "masklay_shape_a", scope: !7575, file: !3, line: 1826, type: !7585)
!7585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7586, size: 64)
!7586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2688)
!7587 = !DILocation(line: 1826, column: 24, scope: !7575)
!7588 = !DILocation(line: 1826, column: 42, scope: !7575)
!7589 = !DILocalVariable(name: "masklay_shape_b", scope: !7575, file: !3, line: 1827, type: !7585)
!7590 = !DILocation(line: 1827, column: 24, scope: !7575)
!7591 = !DILocation(line: 1827, column: 42, scope: !7575)
!7592 = !DILocation(line: 1829, column: 11, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 1829, column: 11)
!7594 = !DILocation(line: 1829, column: 28, scope: !7593)
!7595 = !DILocation(line: 1829, column: 36, scope: !7593)
!7596 = !DILocation(line: 1829, column: 53, scope: !7593)
!7597 = !DILocation(line: 1829, column: 34, scope: !7593)
!7598 = !DILocation(line: 1829, column: 11, scope: !7575)
!7599 = !DILocation(line: 1829, column: 61, scope: !7593)
!7600 = !DILocation(line: 1830, column: 11, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 1830, column: 11)
!7602 = !DILocation(line: 1830, column: 28, scope: !7601)
!7603 = !DILocation(line: 1830, column: 36, scope: !7601)
!7604 = !DILocation(line: 1830, column: 53, scope: !7601)
!7605 = !DILocation(line: 1830, column: 34, scope: !7601)
!7606 = !DILocation(line: 1830, column: 11, scope: !7593)
!7607 = !DILocation(line: 1830, column: 61, scope: !7601)
!7608 = !DILocation(line: 1831, column: 61, scope: !7601)
!7609 = !DILocation(line: 1832, column: 1, scope: !7575)
!7610 = distinct !DISubprogram(name: "BKE_mask_layer_shape_spline_from_index", scope: !3, file: !3, line: 1839, type: !7611, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7611 = !DISubroutineType(types: !7612)
!7612 = !{!1671, !2500, !35, !7613, !7614}
!7613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!7614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64)
!7615 = !DILocalVariable(name: "masklay", arg: 1, scope: !7610, file: !3, line: 1839, type: !2500)
!7616 = !DILocation(line: 1839, column: 56, scope: !7610)
!7617 = !DILocalVariable(name: "index", arg: 2, scope: !7610, file: !3, line: 1839, type: !35)
!7618 = !DILocation(line: 1839, column: 69, scope: !7610)
!7619 = !DILocalVariable(name: "r_masklay_shape", arg: 3, scope: !7610, file: !3, line: 1840, type: !7613)
!7620 = !DILocation(line: 1840, column: 58, scope: !7610)
!7621 = !DILocalVariable(name: "r_index", arg: 4, scope: !7610, file: !3, line: 1840, type: !7614)
!7622 = !DILocation(line: 1840, column: 80, scope: !7610)
!7623 = !DILocalVariable(name: "spline", scope: !7610, file: !3, line: 1842, type: !2343)
!7624 = !DILocation(line: 1842, column: 14, scope: !7610)
!7625 = !DILocation(line: 1844, column: 16, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 1844, column: 2)
!7627 = !DILocation(line: 1844, column: 25, scope: !7626)
!7628 = !DILocation(line: 1844, column: 33, scope: !7626)
!7629 = !DILocation(line: 1844, column: 14, scope: !7626)
!7630 = !DILocation(line: 1844, column: 7, scope: !7626)
!7631 = !DILocation(line: 1844, column: 40, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 1844, column: 2)
!7633 = !DILocation(line: 1844, column: 2, scope: !7626)
!7634 = !DILocation(line: 1845, column: 7, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7636, file: !3, line: 1845, column: 7)
!7636 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 1844, column: 71)
!7637 = !DILocation(line: 1845, column: 15, scope: !7635)
!7638 = !DILocation(line: 1845, column: 23, scope: !7635)
!7639 = !DILocation(line: 1845, column: 13, scope: !7635)
!7640 = !DILocation(line: 1845, column: 7, scope: !7636)
!7641 = !DILocation(line: 1846, column: 23, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 1845, column: 34)
!7643 = !DILocation(line: 1846, column: 5, scope: !7642)
!7644 = !DILocation(line: 1846, column: 21, scope: !7642)
!7645 = !DILocation(line: 1847, column: 15, scope: !7642)
!7646 = !DILocation(line: 1847, column: 5, scope: !7642)
!7647 = !DILocation(line: 1847, column: 13, scope: !7642)
!7648 = !DILocation(line: 1848, column: 4, scope: !7642)
!7649 = !DILocation(line: 1850, column: 12, scope: !7636)
!7650 = !DILocation(line: 1850, column: 20, scope: !7636)
!7651 = !DILocation(line: 1850, column: 9, scope: !7636)
!7652 = !DILocation(line: 1851, column: 2, scope: !7636)
!7653 = !DILocation(line: 1844, column: 57, scope: !7632)
!7654 = !DILocation(line: 1844, column: 65, scope: !7632)
!7655 = !DILocation(line: 1844, column: 55, scope: !7632)
!7656 = !DILocation(line: 1844, column: 2, scope: !7632)
!7657 = distinct !{!7657, !7633, !7658}
!7658 = !DILocation(line: 1851, column: 2, scope: !7626)
!7659 = !DILocation(line: 1853, column: 2, scope: !7610)
!7660 = !DILocation(line: 1854, column: 1, scope: !7610)
!7661 = distinct !DISubprogram(name: "BKE_mask_layer_shape_changed_add", scope: !3, file: !3, line: 1894, type: !7662, scopeLine: 1896, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7662 = !DISubroutineType(types: !7663)
!7663 = !{null, !2500, !35, !1671, !1671}
!7664 = !DILocalVariable(name: "masklay", arg: 1, scope: !7661, file: !3, line: 1894, type: !2500)
!7665 = !DILocation(line: 1894, column: 50, scope: !7661)
!7666 = !DILocalVariable(name: "index", arg: 2, scope: !7661, file: !3, line: 1894, type: !35)
!7667 = !DILocation(line: 1894, column: 63, scope: !7661)
!7668 = !DILocalVariable(name: "do_init", arg: 3, scope: !7661, file: !3, line: 1895, type: !1671)
!7669 = !DILocation(line: 1895, column: 44, scope: !7661)
!7670 = !DILocalVariable(name: "do_init_interpolate", arg: 4, scope: !7661, file: !3, line: 1895, type: !1671)
!7671 = !DILocation(line: 1895, column: 58, scope: !7661)
!7672 = !DILocalVariable(name: "masklay_shape", scope: !7661, file: !3, line: 1897, type: !2687)
!7673 = !DILocation(line: 1897, column: 18, scope: !7661)
!7674 = !DILocalVariable(name: "spline", scope: !7661, file: !3, line: 1900, type: !2343)
!7675 = !DILocation(line: 1900, column: 14, scope: !7661)
!7676 = !DILocalVariable(name: "spline_point_index", scope: !7661, file: !3, line: 1901, type: !35)
!7677 = !DILocation(line: 1901, column: 6, scope: !7661)
!7678 = !DILocation(line: 1903, column: 45, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 1903, column: 6)
!7680 = !DILocation(line: 1903, column: 54, scope: !7679)
!7681 = !DILocation(line: 1903, column: 6, scope: !7679)
!7682 = !DILocation(line: 1903, column: 6, scope: !7661)
!7683 = !DILocalVariable(name: "tot", scope: !7684, file: !3, line: 1908, type: !35)
!7684 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 1905, column: 2)
!7685 = !DILocation(line: 1908, column: 7, scope: !7684)
!7686 = !DILocation(line: 1908, column: 42, scope: !7684)
!7687 = !DILocation(line: 1908, column: 13, scope: !7684)
!7688 = !DILocation(line: 1908, column: 51, scope: !7684)
!7689 = !DILocalVariable(name: "uv", scope: !7684, file: !3, line: 1912, type: !2260)
!7690 = !DILocation(line: 1912, column: 9, scope: !7684)
!7691 = !DILocalVariable(name: "pi_curr", scope: !7684, file: !3, line: 1913, type: !2941)
!7692 = !DILocation(line: 1913, column: 13, scope: !7684)
!7693 = !DILocation(line: 1913, column: 25, scope: !7684)
!7694 = !DILocalVariable(name: "pi_prev", scope: !7684, file: !3, line: 1914, type: !2941)
!7695 = !DILocation(line: 1914, column: 13, scope: !7684)
!7696 = !DILocation(line: 1914, column: 25, scope: !7684)
!7697 = !DILocation(line: 1914, column: 44, scope: !7684)
!7698 = !DILocation(line: 1914, column: 51, scope: !7684)
!7699 = !DILocation(line: 1914, column: 59, scope: !7684)
!7700 = !DILocation(line: 1914, column: 49, scope: !7684)
!7701 = !DILocation(line: 1914, column: 72, scope: !7684)
!7702 = !DILocation(line: 1914, column: 80, scope: !7684)
!7703 = !DILocation(line: 1914, column: 70, scope: !7684)
!7704 = !DILocalVariable(name: "pi_next", scope: !7684, file: !3, line: 1915, type: !2941)
!7705 = !DILocation(line: 1915, column: 13, scope: !7684)
!7706 = !DILocation(line: 1915, column: 25, scope: !7684)
!7707 = !DILocation(line: 1915, column: 44, scope: !7684)
!7708 = !DILocation(line: 1915, column: 72, scope: !7684)
!7709 = !DILocation(line: 1915, column: 80, scope: !7684)
!7710 = !DILocation(line: 1915, column: 70, scope: !7684)
!7711 = !DILocalVariable(name: "index_offset", scope: !7684, file: !3, line: 1917, type: !2941)
!7712 = !DILocation(line: 1917, column: 13, scope: !7684)
!7713 = !DILocation(line: 1917, column: 28, scope: !7684)
!7714 = !DILocation(line: 1917, column: 36, scope: !7684)
!7715 = !DILocation(line: 1917, column: 34, scope: !7684)
!7716 = !DILocalVariable(name: "pi_prev_abs", scope: !7684, file: !3, line: 1919, type: !2941)
!7717 = !DILocation(line: 1919, column: 13, scope: !7684)
!7718 = !DILocation(line: 1919, column: 27, scope: !7684)
!7719 = !DILocation(line: 1919, column: 37, scope: !7684)
!7720 = !DILocation(line: 1919, column: 35, scope: !7684)
!7721 = !DILocalVariable(name: "pi_next_abs", scope: !7684, file: !3, line: 1920, type: !2941)
!7722 = !DILocation(line: 1920, column: 13, scope: !7684)
!7723 = !DILocation(line: 1920, column: 27, scope: !7684)
!7724 = !DILocation(line: 1920, column: 37, scope: !7684)
!7725 = !DILocation(line: 1920, column: 35, scope: !7684)
!7726 = !DILocalVariable(name: "i", scope: !7684, file: !3, line: 1922, type: !35)
!7727 = !DILocation(line: 1922, column: 7, scope: !7684)
!7728 = !DILocation(line: 1923, column: 7, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 1923, column: 7)
!7730 = !DILocation(line: 1923, column: 7, scope: !7684)
!7731 = !DILocation(line: 1924, column: 11, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7733, file: !3, line: 1924, column: 4)
!7733 = distinct !DILexicalBlock(scope: !7729, file: !3, line: 1923, column: 28)
!7734 = !DILocation(line: 1924, column: 9, scope: !7732)
!7735 = !DILocation(line: 1924, column: 16, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 1924, column: 4)
!7737 = !DILocation(line: 1924, column: 18, scope: !7736)
!7738 = !DILocation(line: 1924, column: 4, scope: !7732)
!7739 = !DILocation(line: 1925, column: 34, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7736, file: !3, line: 1924, column: 28)
!7741 = !DILocation(line: 1925, column: 31, scope: !7740)
!7742 = !DILocation(line: 1926, column: 31, scope: !7740)
!7743 = !DILocation(line: 1926, column: 39, scope: !7740)
!7744 = !DILocation(line: 1926, column: 46, scope: !7740)
!7745 = !DILocation(line: 1926, column: 55, scope: !7740)
!7746 = !DILocation(line: 1926, column: 60, scope: !7740)
!7747 = !DILocation(line: 1926, column: 64, scope: !7740)
!7748 = !DILocation(line: 1927, column: 31, scope: !7740)
!7749 = !DILocation(line: 1927, column: 39, scope: !7740)
!7750 = !DILocation(line: 1927, column: 46, scope: !7740)
!7751 = !DILocation(line: 1927, column: 55, scope: !7740)
!7752 = !DILocation(line: 1927, column: 60, scope: !7740)
!7753 = !DILocation(line: 1927, column: 64, scope: !7740)
!7754 = !DILocation(line: 1928, column: 31, scope: !7740)
!7755 = !DILocation(line: 1928, column: 39, scope: !7740)
!7756 = !DILocation(line: 1928, column: 46, scope: !7740)
!7757 = !DILocation(line: 1928, column: 55, scope: !7740)
!7758 = !DILocation(line: 1928, column: 60, scope: !7740)
!7759 = !DILocation(line: 1928, column: 64, scope: !7740)
!7760 = !DILocation(line: 1925, column: 5, scope: !7740)
!7761 = !DILocation(line: 1929, column: 4, scope: !7740)
!7762 = !DILocation(line: 1924, column: 24, scope: !7736)
!7763 = !DILocation(line: 1924, column: 4, scope: !7736)
!7764 = distinct !{!7764, !7738, !7765}
!7765 = !DILocation(line: 1929, column: 4, scope: !7732)
!7766 = !DILocation(line: 1930, column: 3, scope: !7733)
!7767 = !DILocation(line: 1932, column: 24, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 1932, column: 3)
!7769 = !DILocation(line: 1932, column: 33, scope: !7768)
!7770 = !DILocation(line: 1932, column: 48, scope: !7768)
!7771 = !DILocation(line: 1932, column: 22, scope: !7768)
!7772 = !DILocation(line: 1932, column: 8, scope: !7768)
!7773 = !DILocation(line: 1933, column: 8, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 1932, column: 3)
!7775 = !DILocation(line: 1932, column: 3, scope: !7768)
!7776 = !DILocation(line: 1936, column: 8, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 1936, column: 8)
!7778 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 1935, column: 3)
!7779 = !DILocation(line: 1936, column: 15, scope: !7777)
!7780 = !DILocation(line: 1936, column: 30, scope: !7777)
!7781 = !DILocation(line: 1936, column: 12, scope: !7777)
!7782 = !DILocation(line: 1936, column: 8, scope: !7778)
!7783 = !DILocalVariable(name: "data_resized", scope: !7784, file: !3, line: 1937, type: !639)
!7784 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 1936, column: 40)
!7785 = !DILocation(line: 1937, column: 12, scope: !7784)
!7786 = !DILocation(line: 1939, column: 5, scope: !7784)
!7787 = !DILocation(line: 1939, column: 20, scope: !7784)
!7788 = !DILocation(line: 1939, column: 28, scope: !7784)
!7789 = !DILocation(line: 1940, column: 20, scope: !7784)
!7790 = !DILocation(line: 1940, column: 32, scope: !7784)
!7791 = !DILocation(line: 1940, column: 47, scope: !7784)
!7792 = !DILocation(line: 1940, column: 56, scope: !7784)
!7793 = !DILocation(line: 1940, column: 72, scope: !7784)
!7794 = !DILocation(line: 1940, column: 18, scope: !7784)
!7795 = !DILocation(line: 1941, column: 9, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 1941, column: 9)
!7797 = !DILocation(line: 1941, column: 15, scope: !7796)
!7798 = !DILocation(line: 1941, column: 9, scope: !7784)
!7799 = !DILocation(line: 1942, column: 13, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 1941, column: 20)
!7801 = !DILocation(line: 1942, column: 6, scope: !7800)
!7802 = !DILocation(line: 1943, column: 13, scope: !7800)
!7803 = !DILocation(line: 1943, column: 28, scope: !7800)
!7804 = !DILocation(line: 1944, column: 13, scope: !7800)
!7805 = !DILocation(line: 1944, column: 19, scope: !7800)
!7806 = !DILocation(line: 1944, column: 35, scope: !7800)
!7807 = !DILocation(line: 1945, column: 5, scope: !7800)
!7808 = !DILocation(line: 1947, column: 9, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 1947, column: 9)
!7810 = !DILocation(line: 1947, column: 18, scope: !7809)
!7811 = !DILocation(line: 1947, column: 33, scope: !7809)
!7812 = !DILocation(line: 1947, column: 42, scope: !7809)
!7813 = !DILocation(line: 1947, column: 15, scope: !7809)
!7814 = !DILocation(line: 1947, column: 9, scope: !7784)
!7815 = !DILocation(line: 1948, column: 14, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 1947, column: 47)
!7817 = !DILocation(line: 1948, column: 28, scope: !7816)
!7818 = !DILocation(line: 1948, column: 34, scope: !7816)
!7819 = !DILocation(line: 1948, column: 39, scope: !7816)
!7820 = !DILocation(line: 1948, column: 6, scope: !7816)
!7821 = !DILocation(line: 1949, column: 13, scope: !7816)
!7822 = !DILocation(line: 1949, column: 28, scope: !7816)
!7823 = !DILocation(line: 1949, column: 36, scope: !7816)
!7824 = !DILocation(line: 1949, column: 42, scope: !7816)
!7825 = !DILocation(line: 1949, column: 33, scope: !7816)
!7826 = !DILocation(line: 1950, column: 14, scope: !7816)
!7827 = !DILocation(line: 1950, column: 29, scope: !7816)
!7828 = !DILocation(line: 1950, column: 41, scope: !7816)
!7829 = !DILocation(line: 1950, column: 47, scope: !7816)
!7830 = !DILocation(line: 1950, column: 38, scope: !7816)
!7831 = !DILocation(line: 1950, column: 13, scope: !7816)
!7832 = !DILocation(line: 1950, column: 53, scope: !7816)
!7833 = !DILocation(line: 1950, column: 69, scope: !7816)
!7834 = !DILocation(line: 1951, column: 5, scope: !7816)
!7835 = !DILocation(line: 1953, column: 9, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 1953, column: 9)
!7837 = !DILocation(line: 1953, column: 9, scope: !7784)
!7838 = !DILocalVariable(name: "fp", scope: !7839, file: !3, line: 1954, type: !639)
!7839 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 1953, column: 18)
!7840 = !DILocation(line: 1954, column: 13, scope: !7839)
!7841 = !DILocation(line: 1954, column: 19, scope: !7839)
!7842 = !DILocation(line: 1954, column: 32, scope: !7839)
!7843 = !DILocation(line: 1954, column: 38, scope: !7839)
!7844 = !DILocation(line: 1956, column: 40, scope: !7839)
!7845 = !DILocation(line: 1956, column: 48, scope: !7839)
!7846 = !DILocation(line: 1956, column: 55, scope: !7839)
!7847 = !DILocation(line: 1956, column: 75, scope: !7839)
!7848 = !DILocation(line: 1956, column: 81, scope: !7839)
!7849 = !DILocation(line: 1956, column: 6, scope: !7839)
!7850 = !DILocation(line: 1958, column: 10, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1958, column: 10)
!7852 = !DILocation(line: 1958, column: 30, scope: !7851)
!7853 = !DILocation(line: 1958, column: 33, scope: !7851)
!7854 = !DILocation(line: 1958, column: 41, scope: !7851)
!7855 = !DILocation(line: 1958, column: 51, scope: !7851)
!7856 = !DILocation(line: 1958, column: 10, scope: !7839)
!7857 = !DILocation(line: 1959, column: 14, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7859, file: !3, line: 1959, column: 7)
!7859 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 1958, column: 56)
!7860 = !DILocation(line: 1959, column: 12, scope: !7858)
!7861 = !DILocation(line: 1959, column: 19, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7858, file: !3, line: 1959, column: 7)
!7863 = !DILocation(line: 1959, column: 21, scope: !7862)
!7864 = !DILocation(line: 1959, column: 7, scope: !7858)
!7865 = !DILocation(line: 1960, column: 38, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7862, file: !3, line: 1959, column: 31)
!7867 = !DILocation(line: 1960, column: 35, scope: !7866)
!7868 = !DILocation(line: 1961, column: 36, scope: !7866)
!7869 = !DILocation(line: 1961, column: 39, scope: !7866)
!7870 = !DILocation(line: 1961, column: 41, scope: !7866)
!7871 = !DILocation(line: 1962, column: 36, scope: !7866)
!7872 = !DILocation(line: 1962, column: 50, scope: !7866)
!7873 = !DILocation(line: 1962, column: 62, scope: !7866)
!7874 = !DILocation(line: 1962, column: 96, scope: !7866)
!7875 = !DILocation(line: 1962, column: 98, scope: !7866)
!7876 = !DILocation(line: 1962, column: 93, scope: !7866)
!7877 = !DILocation(line: 1963, column: 36, scope: !7866)
!7878 = !DILocation(line: 1963, column: 50, scope: !7866)
!7879 = !DILocation(line: 1963, column: 62, scope: !7866)
!7880 = !DILocation(line: 1963, column: 96, scope: !7866)
!7881 = !DILocation(line: 1963, column: 98, scope: !7866)
!7882 = !DILocation(line: 1963, column: 93, scope: !7866)
!7883 = !DILocation(line: 1960, column: 8, scope: !7866)
!7884 = !DILocation(line: 1964, column: 7, scope: !7866)
!7885 = !DILocation(line: 1959, column: 27, scope: !7862)
!7886 = !DILocation(line: 1959, column: 7, scope: !7862)
!7887 = distinct !{!7887, !7864, !7888}
!7888 = !DILocation(line: 1964, column: 7, scope: !7858)
!7889 = !DILocation(line: 1965, column: 6, scope: !7859)
!7890 = !DILocation(line: 1966, column: 5, scope: !7839)
!7891 = !DILocation(line: 1968, column: 14, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 1967, column: 10)
!7893 = !DILocation(line: 1968, column: 27, scope: !7892)
!7894 = !DILocation(line: 1968, column: 33, scope: !7892)
!7895 = !DILocation(line: 1968, column: 6, scope: !7892)
!7896 = !DILocation(line: 1973, column: 5, scope: !7784)
!7897 = !DILocation(line: 1973, column: 15, scope: !7784)
!7898 = !DILocation(line: 1973, column: 30, scope: !7784)
!7899 = !DILocation(line: 1974, column: 27, scope: !7784)
!7900 = !DILocation(line: 1974, column: 5, scope: !7784)
!7901 = !DILocation(line: 1974, column: 20, scope: !7784)
!7902 = !DILocation(line: 1974, column: 25, scope: !7784)
!7903 = !DILocation(line: 1975, column: 4, scope: !7784)
!7904 = !DILocation(line: 1978, column: 22, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 1976, column: 9)
!7906 = !DILocation(line: 1978, column: 37, scope: !7905)
!7907 = !DILocation(line: 1978, column: 47, scope: !7905)
!7908 = !DILocation(line: 1978, column: 52, scope: !7905)
!7909 = !DILocation(line: 1978, column: 67, scope: !7905)
!7910 = !DILocation(line: 1977, column: 5, scope: !7905)
!7911 = !DILocation(line: 1980, column: 3, scope: !7778)
!7912 = !DILocation(line: 1934, column: 24, scope: !7774)
!7913 = !DILocation(line: 1934, column: 39, scope: !7774)
!7914 = !DILocation(line: 1934, column: 22, scope: !7774)
!7915 = !DILocation(line: 1932, column: 3, scope: !7774)
!7916 = distinct !{!7916, !7775, !7917}
!7917 = !DILocation(line: 1980, column: 3, scope: !7768)
!7918 = !DILocation(line: 1981, column: 2, scope: !7684)
!7919 = !DILocation(line: 1982, column: 1, scope: !7661)
!7920 = distinct !DISubprogram(name: "interp_weights_uv_v2_calc", scope: !3, file: !3, line: 1871, type: !7921, scopeLine: 1872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7921 = !DISubroutineType(types: !7922)
!7922 = !{null, !639, !3042, !3042, !3042}
!7923 = !DILocalVariable(name: "r_uv", arg: 1, scope: !7920, file: !3, line: 1871, type: !639)
!7924 = !DILocation(line: 1871, column: 45, scope: !7920)
!7925 = !DILocalVariable(name: "pt", arg: 2, scope: !7920, file: !3, line: 1871, type: !3042)
!7926 = !DILocation(line: 1871, column: 66, scope: !7920)
!7927 = !DILocalVariable(name: "pt_a", arg: 3, scope: !7920, file: !3, line: 1871, type: !3042)
!7928 = !DILocation(line: 1871, column: 85, scope: !7920)
!7929 = !DILocalVariable(name: "pt_b", arg: 4, scope: !7920, file: !3, line: 1871, type: !3042)
!7930 = !DILocation(line: 1871, column: 106, scope: !7920)
!7931 = !DILocalVariable(name: "pt_on_line", scope: !7920, file: !3, line: 1873, type: !250)
!7932 = !DILocation(line: 1873, column: 8, scope: !7920)
!7933 = !DILocation(line: 1874, column: 31, scope: !7920)
!7934 = !DILocation(line: 1874, column: 43, scope: !7920)
!7935 = !DILocation(line: 1874, column: 47, scope: !7920)
!7936 = !DILocation(line: 1874, column: 53, scope: !7920)
!7937 = !DILocation(line: 1874, column: 12, scope: !7920)
!7938 = !DILocation(line: 1874, column: 2, scope: !7920)
!7939 = !DILocation(line: 1874, column: 10, scope: !7920)
!7940 = !DILocation(line: 1875, column: 22, scope: !7920)
!7941 = !DILocation(line: 1875, column: 34, scope: !7920)
!7942 = !DILocation(line: 1875, column: 13, scope: !7920)
!7943 = !DILocation(line: 1875, column: 49, scope: !7920)
!7944 = !DILocation(line: 1875, column: 55, scope: !7920)
!7945 = !DILocation(line: 1875, column: 40, scope: !7920)
!7946 = !DILocation(line: 1875, column: 38, scope: !7920)
!7947 = !DILocation(line: 1876, column: 33, scope: !7920)
!7948 = !DILocation(line: 1876, column: 39, scope: !7920)
!7949 = !DILocation(line: 1876, column: 45, scope: !7920)
!7950 = !DILocation(line: 1876, column: 14, scope: !7920)
!7951 = !DILocation(line: 1876, column: 49, scope: !7920)
!7952 = !DILocation(line: 1876, column: 13, scope: !7920)
!7953 = !DILocation(line: 1875, column: 62, scope: !7920)
!7954 = !DILocation(line: 1875, column: 2, scope: !7920)
!7955 = !DILocation(line: 1875, column: 10, scope: !7920)
!7956 = !DILocation(line: 1877, column: 1, scope: !7920)
!7957 = distinct !DISubprogram(name: "interp_weights_uv_v2_apply", scope: !3, file: !3, line: 1880, type: !7958, scopeLine: 1881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7958 = !DISubroutineType(types: !7959)
!7959 = !{null, !3042, !639, !3042, !3042}
!7960 = !DILocalVariable(name: "uv", arg: 1, scope: !7957, file: !3, line: 1880, type: !3042)
!7961 = !DILocation(line: 1880, column: 52, scope: !7957)
!7962 = !DILocalVariable(name: "r_pt", arg: 2, scope: !7957, file: !3, line: 1880, type: !639)
!7963 = !DILocation(line: 1880, column: 65, scope: !7957)
!7964 = !DILocalVariable(name: "pt_a", arg: 3, scope: !7957, file: !3, line: 1880, type: !3042)
!7965 = !DILocation(line: 1880, column: 86, scope: !7957)
!7966 = !DILocalVariable(name: "pt_b", arg: 4, scope: !7957, file: !3, line: 1880, type: !3042)
!7967 = !DILocation(line: 1880, column: 107, scope: !7957)
!7968 = !DILocalVariable(name: "dvec", scope: !7957, file: !3, line: 1882, type: !7969)
!7969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3043, size: 64, elements: !190)
!7970 = !DILocation(line: 1882, column: 14, scope: !7957)
!7971 = !DILocation(line: 1882, column: 24, scope: !7957)
!7972 = !DILocation(line: 1882, column: 25, scope: !7957)
!7973 = !DILocation(line: 1882, column: 35, scope: !7957)
!7974 = !DILocation(line: 1882, column: 33, scope: !7957)
!7975 = !DILocation(line: 1883, column: 25, scope: !7957)
!7976 = !DILocation(line: 1883, column: 35, scope: !7957)
!7977 = !DILocation(line: 1883, column: 33, scope: !7957)
!7978 = !DILocation(line: 1886, column: 17, scope: !7957)
!7979 = !DILocation(line: 1886, column: 23, scope: !7957)
!7980 = !DILocation(line: 1886, column: 29, scope: !7957)
!7981 = !DILocation(line: 1886, column: 35, scope: !7957)
!7982 = !DILocation(line: 1886, column: 2, scope: !7957)
!7983 = !DILocation(line: 1889, column: 14, scope: !7957)
!7984 = !DILocation(line: 1889, column: 13, scope: !7957)
!7985 = !DILocation(line: 1889, column: 24, scope: !7957)
!7986 = !DILocation(line: 1889, column: 22, scope: !7957)
!7987 = !DILocation(line: 1889, column: 2, scope: !7957)
!7988 = !DILocation(line: 1889, column: 10, scope: !7957)
!7989 = !DILocation(line: 1890, column: 14, scope: !7957)
!7990 = !DILocation(line: 1890, column: 24, scope: !7957)
!7991 = !DILocation(line: 1890, column: 22, scope: !7957)
!7992 = !DILocation(line: 1890, column: 2, scope: !7957)
!7993 = !DILocation(line: 1890, column: 10, scope: !7957)
!7994 = !DILocation(line: 1891, column: 1, scope: !7957)
!7995 = distinct !DISubprogram(name: "BKE_mask_layer_shape_changed_remove", scope: !3, file: !3, line: 1986, type: !7996, scopeLine: 1987, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!7996 = !DISubroutineType(types: !7997)
!7997 = !{null, !2500, !35, !35}
!7998 = !DILocalVariable(name: "masklay", arg: 1, scope: !7995, file: !3, line: 1986, type: !2500)
!7999 = !DILocation(line: 1986, column: 53, scope: !7995)
!8000 = !DILocalVariable(name: "index", arg: 2, scope: !7995, file: !3, line: 1986, type: !35)
!8001 = !DILocation(line: 1986, column: 66, scope: !7995)
!8002 = !DILocalVariable(name: "count", arg: 3, scope: !7995, file: !3, line: 1986, type: !35)
!8003 = !DILocation(line: 1986, column: 77, scope: !7995)
!8004 = !DILocalVariable(name: "masklay_shape", scope: !7995, file: !3, line: 1988, type: !2687)
!8005 = !DILocation(line: 1988, column: 18, scope: !7995)
!8006 = !DILocalVariable(name: "tot", scope: !7995, file: !3, line: 1991, type: !35)
!8007 = !DILocation(line: 1991, column: 6, scope: !7995)
!8008 = !DILocation(line: 1991, column: 41, scope: !7995)
!8009 = !DILocation(line: 1991, column: 12, scope: !7995)
!8010 = !DILocation(line: 1993, column: 23, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 1993, column: 2)
!8012 = !DILocation(line: 1993, column: 32, scope: !8011)
!8013 = !DILocation(line: 1993, column: 47, scope: !8011)
!8014 = !DILocation(line: 1993, column: 21, scope: !8011)
!8015 = !DILocation(line: 1993, column: 7, scope: !8011)
!8016 = !DILocation(line: 1994, column: 7, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 1993, column: 2)
!8018 = !DILocation(line: 1993, column: 2, scope: !8011)
!8019 = !DILocation(line: 1997, column: 7, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 1997, column: 7)
!8021 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 1996, column: 2)
!8022 = !DILocation(line: 1997, column: 14, scope: !8020)
!8023 = !DILocation(line: 1997, column: 29, scope: !8020)
!8024 = !DILocation(line: 1997, column: 40, scope: !8020)
!8025 = !DILocation(line: 1997, column: 38, scope: !8020)
!8026 = !DILocation(line: 1997, column: 11, scope: !8020)
!8027 = !DILocation(line: 1997, column: 7, scope: !8021)
!8028 = !DILocalVariable(name: "data_resized", scope: !8029, file: !3, line: 1998, type: !639)
!8029 = distinct !DILexicalBlock(scope: !8020, file: !3, line: 1997, column: 47)
!8030 = !DILocation(line: 1998, column: 11, scope: !8029)
!8031 = !DILocation(line: 2000, column: 31, scope: !8029)
!8032 = !DILocation(line: 2000, column: 4, scope: !8029)
!8033 = !DILocation(line: 2000, column: 19, scope: !8029)
!8034 = !DILocation(line: 2000, column: 28, scope: !8029)
!8035 = !DILocation(line: 2001, column: 19, scope: !8029)
!8036 = !DILocation(line: 2001, column: 31, scope: !8029)
!8037 = !DILocation(line: 2001, column: 46, scope: !8029)
!8038 = !DILocation(line: 2001, column: 55, scope: !8029)
!8039 = !DILocation(line: 2001, column: 71, scope: !8029)
!8040 = !DILocation(line: 2001, column: 17, scope: !8029)
!8041 = !DILocation(line: 2002, column: 8, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 2002, column: 8)
!8043 = !DILocation(line: 2002, column: 14, scope: !8042)
!8044 = !DILocation(line: 2002, column: 8, scope: !8029)
!8045 = !DILocation(line: 2003, column: 12, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 2002, column: 19)
!8047 = !DILocation(line: 2003, column: 5, scope: !8046)
!8048 = !DILocation(line: 2004, column: 12, scope: !8046)
!8049 = !DILocation(line: 2004, column: 27, scope: !8046)
!8050 = !DILocation(line: 2005, column: 12, scope: !8046)
!8051 = !DILocation(line: 2005, column: 18, scope: !8046)
!8052 = !DILocation(line: 2005, column: 34, scope: !8046)
!8053 = !DILocation(line: 2006, column: 4, scope: !8046)
!8054 = !DILocation(line: 2008, column: 8, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 2008, column: 8)
!8056 = !DILocation(line: 2008, column: 17, scope: !8055)
!8057 = !DILocation(line: 2008, column: 32, scope: !8055)
!8058 = !DILocation(line: 2008, column: 14, scope: !8055)
!8059 = !DILocation(line: 2008, column: 8, scope: !8029)
!8060 = !DILocation(line: 2009, column: 13, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2008, column: 42)
!8062 = !DILocation(line: 2009, column: 26, scope: !8061)
!8063 = !DILocation(line: 2009, column: 32, scope: !8061)
!8064 = !DILocation(line: 2009, column: 5, scope: !8061)
!8065 = !DILocation(line: 2010, column: 12, scope: !8061)
!8066 = !DILocation(line: 2010, column: 27, scope: !8061)
!8067 = !DILocation(line: 2010, column: 36, scope: !8061)
!8068 = !DILocation(line: 2010, column: 44, scope: !8061)
!8069 = !DILocation(line: 2010, column: 42, scope: !8061)
!8070 = !DILocation(line: 2010, column: 51, scope: !8061)
!8071 = !DILocation(line: 2010, column: 32, scope: !8061)
!8072 = !DILocation(line: 2011, column: 13, scope: !8061)
!8073 = !DILocation(line: 2011, column: 28, scope: !8061)
!8074 = !DILocation(line: 2011, column: 39, scope: !8061)
!8075 = !DILocation(line: 2011, column: 37, scope: !8061)
!8076 = !DILocation(line: 2011, column: 12, scope: !8061)
!8077 = !DILocation(line: 2011, column: 46, scope: !8061)
!8078 = !DILocation(line: 2011, column: 62, scope: !8061)
!8079 = !DILocation(line: 2012, column: 4, scope: !8061)
!8080 = !DILocation(line: 2014, column: 4, scope: !8029)
!8081 = !DILocation(line: 2014, column: 14, scope: !8029)
!8082 = !DILocation(line: 2014, column: 29, scope: !8029)
!8083 = !DILocation(line: 2015, column: 26, scope: !8029)
!8084 = !DILocation(line: 2015, column: 4, scope: !8029)
!8085 = !DILocation(line: 2015, column: 19, scope: !8029)
!8086 = !DILocation(line: 2015, column: 24, scope: !8029)
!8087 = !DILocation(line: 2016, column: 3, scope: !8029)
!8088 = !DILocation(line: 2019, column: 21, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8020, file: !3, line: 2017, column: 8)
!8090 = !DILocation(line: 2019, column: 36, scope: !8089)
!8091 = !DILocation(line: 2019, column: 47, scope: !8089)
!8092 = !DILocation(line: 2019, column: 45, scope: !8089)
!8093 = !DILocation(line: 2019, column: 54, scope: !8089)
!8094 = !DILocation(line: 2019, column: 59, scope: !8089)
!8095 = !DILocation(line: 2019, column: 74, scope: !8089)
!8096 = !DILocation(line: 2018, column: 4, scope: !8089)
!8097 = !DILocation(line: 2021, column: 2, scope: !8021)
!8098 = !DILocation(line: 1995, column: 23, scope: !8017)
!8099 = !DILocation(line: 1995, column: 38, scope: !8017)
!8100 = !DILocation(line: 1995, column: 21, scope: !8017)
!8101 = !DILocation(line: 1993, column: 2, scope: !8017)
!8102 = distinct !{!8102, !8018, !8103}
!8103 = !DILocation(line: 2021, column: 2, scope: !8011)
!8104 = !DILocation(line: 2022, column: 1, scope: !7995)
!8105 = distinct !DISubprogram(name: "BKE_mask_get_duration", scope: !3, file: !3, line: 2024, type: !8106, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8106 = !DISubroutineType(types: !8107)
!8107 = !{!35, !2493}
!8108 = !DILocalVariable(name: "mask", arg: 1, scope: !8105, file: !3, line: 2024, type: !2493)
!8109 = !DILocation(line: 2024, column: 33, scope: !8105)
!8110 = !DILocation(line: 2026, column: 19, scope: !8105)
!8111 = !DILocation(line: 2026, column: 25, scope: !8105)
!8112 = !DILocation(line: 2026, column: 32, scope: !8105)
!8113 = !DILocation(line: 2026, column: 38, scope: !8105)
!8114 = !DILocation(line: 2026, column: 30, scope: !8105)
!8115 = !DILocation(line: 2026, column: 9, scope: !8105)
!8116 = !DILocation(line: 2026, column: 2, scope: !8105)
!8117 = distinct !DISubprogram(name: "max_ii", scope: !8118, file: !8118, line: 215, type: !8119, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8118 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8119 = !DISubroutineType(types: !8120)
!8120 = !{!35, !35, !35}
!8121 = !DILocalVariable(name: "a", arg: 1, scope: !8117, file: !8118, line: 215, type: !35)
!8122 = !DILocation(line: 215, column: 24, scope: !8117)
!8123 = !DILocalVariable(name: "b", arg: 2, scope: !8117, file: !8118, line: 215, type: !35)
!8124 = !DILocation(line: 215, column: 31, scope: !8117)
!8125 = !DILocation(line: 217, column: 10, scope: !8117)
!8126 = !DILocation(line: 217, column: 14, scope: !8117)
!8127 = !DILocation(line: 217, column: 12, scope: !8117)
!8128 = !DILocation(line: 217, column: 9, scope: !8117)
!8129 = !DILocation(line: 217, column: 19, scope: !8117)
!8130 = !DILocation(line: 217, column: 23, scope: !8117)
!8131 = !DILocation(line: 217, column: 2, scope: !8117)
!8132 = distinct !DISubprogram(name: "BKE_mask_clipboard_free", scope: !3, file: !3, line: 2046, type: !8133, scopeLine: 2047, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8133 = !DISubroutineType(types: !8134)
!8134 = !{null}
!8135 = !DILocation(line: 2048, column: 2, scope: !8132)
!8136 = !DILocation(line: 2049, column: 1, scope: !8132)
!8137 = distinct !DISubprogram(name: "mask_clipboard_free_ex", scope: !3, file: !3, line: 2031, type: !8138, scopeLine: 2032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8138 = !DISubroutineType(types: !8139)
!8139 = !{null, !1671}
!8140 = !DILocalVariable(name: "final_free", arg: 1, scope: !8137, file: !3, line: 2031, type: !1671)
!8141 = !DILocation(line: 2031, column: 41, scope: !8137)
!8142 = !DILocation(line: 2033, column: 2, scope: !8137)
!8143 = !DILocation(line: 2034, column: 2, scope: !8137)
!8144 = !DILocation(line: 2035, column: 21, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 2035, column: 6)
!8146 = !DILocation(line: 2035, column: 6, scope: !8145)
!8147 = !DILocation(line: 2035, column: 6, scope: !8137)
!8148 = !DILocation(line: 2036, column: 7, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 2036, column: 7)
!8150 = distinct !DILexicalBlock(scope: !8145, file: !3, line: 2035, column: 30)
!8151 = !DILocation(line: 2036, column: 7, scope: !8150)
!8152 = !DILocation(line: 2037, column: 34, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 2036, column: 19)
!8154 = !DILocation(line: 2037, column: 49, scope: !8153)
!8155 = !DILocation(line: 2037, column: 4, scope: !8153)
!8156 = !DILocation(line: 2038, column: 3, scope: !8153)
!8157 = !DILocation(line: 2040, column: 35, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 2039, column: 8)
!8159 = !DILocation(line: 2040, column: 50, scope: !8158)
!8160 = !DILocation(line: 2040, column: 4, scope: !8158)
!8161 = !DILocation(line: 2042, column: 2, scope: !8150)
!8162 = !DILocation(line: 2043, column: 1, scope: !8137)
!8163 = distinct !DISubprogram(name: "BKE_mask_clipboard_copy_from_layer", scope: !3, file: !3, line: 2052, type: !2602, scopeLine: 2053, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8164 = !DILocalVariable(name: "mask_layer", arg: 1, scope: !8163, file: !3, line: 2052, type: !2500)
!8165 = !DILocation(line: 2052, column: 52, scope: !8163)
!8166 = !DILocalVariable(name: "spline", scope: !8163, file: !3, line: 2054, type: !2343)
!8167 = !DILocation(line: 2054, column: 14, scope: !8163)
!8168 = !DILocation(line: 2057, column: 6, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 2057, column: 6)
!8170 = !DILocation(line: 2057, column: 18, scope: !8169)
!8171 = !DILocation(line: 2057, column: 31, scope: !8169)
!8172 = !DILocation(line: 2057, column: 6, scope: !8163)
!8173 = !DILocation(line: 2058, column: 3, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 2057, column: 55)
!8175 = !DILocation(line: 2061, column: 2, scope: !8163)
!8176 = !DILocation(line: 2062, column: 21, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 2062, column: 6)
!8178 = !DILocation(line: 2062, column: 29, scope: !8177)
!8179 = !DILocation(line: 2062, column: 6, scope: !8163)
!8180 = !DILocation(line: 2063, column: 28, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 2062, column: 38)
!8182 = !DILocation(line: 2063, column: 26, scope: !8181)
!8183 = !DILocation(line: 2064, column: 2, scope: !8181)
!8184 = !DILocation(line: 2066, column: 16, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 2066, column: 2)
!8186 = !DILocation(line: 2066, column: 28, scope: !8185)
!8187 = !DILocation(line: 2066, column: 36, scope: !8185)
!8188 = !DILocation(line: 2066, column: 14, scope: !8185)
!8189 = !DILocation(line: 2066, column: 7, scope: !8185)
!8190 = !DILocation(line: 2066, column: 43, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 2066, column: 2)
!8192 = !DILocation(line: 2066, column: 2, scope: !8185)
!8193 = !DILocation(line: 2067, column: 7, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 2067, column: 7)
!8195 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 2066, column: 74)
!8196 = !DILocation(line: 2067, column: 15, scope: !8194)
!8197 = !DILocation(line: 2067, column: 20, scope: !8194)
!8198 = !DILocation(line: 2067, column: 7, scope: !8195)
!8199 = !DILocalVariable(name: "spline_new", scope: !8200, file: !3, line: 2068, type: !2343)
!8200 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 2067, column: 30)
!8201 = !DILocation(line: 2068, column: 16, scope: !8200)
!8202 = !DILocation(line: 2068, column: 50, scope: !8200)
!8203 = !DILocation(line: 2068, column: 29, scope: !8200)
!8204 = !DILocalVariable(name: "i", scope: !8200, file: !3, line: 2069, type: !35)
!8205 = !DILocation(line: 2069, column: 8, scope: !8200)
!8206 = !DILocation(line: 2070, column: 11, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 2070, column: 4)
!8208 = !DILocation(line: 2070, column: 9, scope: !8207)
!8209 = !DILocation(line: 2070, column: 16, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 2070, column: 4)
!8211 = !DILocation(line: 2070, column: 20, scope: !8210)
!8212 = !DILocation(line: 2070, column: 32, scope: !8210)
!8213 = !DILocation(line: 2070, column: 18, scope: !8210)
!8214 = !DILocation(line: 2070, column: 4, scope: !8207)
!8215 = !DILocalVariable(name: "point", scope: !8216, file: !3, line: 2071, type: !2355)
!8216 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 2070, column: 48)
!8217 = !DILocation(line: 2071, column: 22, scope: !8216)
!8218 = !DILocation(line: 2071, column: 31, scope: !8216)
!8219 = !DILocation(line: 2071, column: 43, scope: !8216)
!8220 = !DILocation(line: 2071, column: 50, scope: !8216)
!8221 = !DILocation(line: 2072, column: 9, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 2072, column: 9)
!8223 = !DILocation(line: 2072, column: 16, scope: !8222)
!8224 = !DILocation(line: 2072, column: 23, scope: !8222)
!8225 = !DILocation(line: 2072, column: 9, scope: !8216)
!8226 = !DILocation(line: 2073, column: 43, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 2073, column: 10)
!8228 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 2072, column: 27)
!8229 = !DILocation(line: 2073, column: 52, scope: !8227)
!8230 = !DILocation(line: 2073, column: 59, scope: !8227)
!8231 = !DILocation(line: 2073, column: 66, scope: !8227)
!8232 = !DILocation(line: 2073, column: 11, scope: !8227)
!8233 = !DILocation(line: 2073, column: 10, scope: !8228)
!8234 = !DILocalVariable(name: "len", scope: !8235, file: !3, line: 2074, type: !35)
!8235 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 2073, column: 71)
!8236 = !DILocation(line: 2074, column: 11, scope: !8235)
!8237 = !DILocation(line: 2074, column: 24, scope: !8235)
!8238 = !DILocation(line: 2074, column: 31, scope: !8235)
!8239 = !DILocation(line: 2074, column: 38, scope: !8235)
!8240 = !DILocation(line: 2074, column: 42, scope: !8235)
!8241 = !DILocation(line: 2074, column: 17, scope: !8235)
!8242 = !DILocalVariable(name: "name_copy", scope: !8235, file: !3, line: 2075, type: !1016)
!8243 = !DILocation(line: 2075, column: 13, scope: !8235)
!8244 = !DILocation(line: 2075, column: 25, scope: !8235)
!8245 = !DILocation(line: 2075, column: 37, scope: !8235)
!8246 = !DILocation(line: 2075, column: 41, scope: !8235)
!8247 = !DILocation(line: 2076, column: 14, scope: !8235)
!8248 = !DILocation(line: 2076, column: 25, scope: !8235)
!8249 = !DILocation(line: 2076, column: 32, scope: !8235)
!8250 = !DILocation(line: 2076, column: 39, scope: !8235)
!8251 = !DILocation(line: 2076, column: 43, scope: !8235)
!8252 = !DILocation(line: 2076, column: 7, scope: !8235)
!8253 = !DILocation(line: 2077, column: 39, scope: !8235)
!8254 = !DILocation(line: 2078, column: 24, scope: !8235)
!8255 = !DILocation(line: 2078, column: 31, scope: !8235)
!8256 = !DILocation(line: 2078, column: 38, scope: !8235)
!8257 = !DILocation(line: 2079, column: 24, scope: !8235)
!8258 = !DILocation(line: 2077, column: 7, scope: !8235)
!8259 = !DILocation(line: 2080, column: 6, scope: !8235)
!8260 = !DILocation(line: 2081, column: 5, scope: !8228)
!8261 = !DILocation(line: 2082, column: 4, scope: !8216)
!8262 = !DILocation(line: 2070, column: 44, scope: !8210)
!8263 = !DILocation(line: 2070, column: 4, scope: !8210)
!8264 = distinct !{!8264, !8214, !8265}
!8265 = !DILocation(line: 2082, column: 4, scope: !8207)
!8266 = !DILocation(line: 2084, column: 41, scope: !8200)
!8267 = !DILocation(line: 2084, column: 4, scope: !8200)
!8268 = !DILocation(line: 2085, column: 3, scope: !8200)
!8269 = !DILocation(line: 2086, column: 2, scope: !8195)
!8270 = !DILocation(line: 2066, column: 60, scope: !8191)
!8271 = !DILocation(line: 2066, column: 68, scope: !8191)
!8272 = !DILocation(line: 2066, column: 58, scope: !8191)
!8273 = !DILocation(line: 2066, column: 2, scope: !8191)
!8274 = distinct !{!8274, !8192, !8275}
!8275 = !DILocation(line: 2086, column: 2, scope: !8185)
!8276 = !DILocation(line: 2087, column: 1, scope: !8163)
!8277 = distinct !DISubprogram(name: "BKE_mask_clipboard_is_empty", scope: !3, file: !3, line: 2090, type: !8278, scopeLine: 2091, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8278 = !DISubroutineType(types: !8279)
!8279 = !{!1671}
!8280 = !DILocation(line: 2092, column: 9, scope: !8277)
!8281 = !DILocation(line: 2092, column: 2, scope: !8277)
!8282 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !4796, file: !4796, line: 88, type: !8283, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8283 = !DISubroutineType(types: !8284)
!8284 = !{!1671, !8285}
!8285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8286, size: 64)
!8286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !91)
!8287 = !DILocalVariable(name: "lb", arg: 1, scope: !8282, file: !4796, line: 88, type: !8285)
!8288 = !DILocation(line: 88, column: 62, scope: !8282)
!8289 = !DILocation(line: 88, column: 76, scope: !8282)
!8290 = !DILocation(line: 88, column: 80, scope: !8282)
!8291 = !DILocation(line: 88, column: 86, scope: !8282)
!8292 = !DILocation(line: 88, column: 75, scope: !8282)
!8293 = !DILocation(line: 88, column: 68, scope: !8282)
!8294 = distinct !DISubprogram(name: "BKE_mask_clipboard_paste_to_layer", scope: !3, file: !3, line: 2096, type: !8295, scopeLine: 2097, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8295 = !DISubroutineType(types: !8296)
!8296 = !{null, !4646, !2500}
!8297 = !DILocalVariable(name: "bmain", arg: 1, scope: !8294, file: !3, line: 2096, type: !4646)
!8298 = !DILocation(line: 2096, column: 46, scope: !8294)
!8299 = !DILocalVariable(name: "mask_layer", arg: 2, scope: !8294, file: !3, line: 2096, type: !2500)
!8300 = !DILocation(line: 2096, column: 64, scope: !8294)
!8301 = !DILocalVariable(name: "spline", scope: !8294, file: !3, line: 2098, type: !2343)
!8302 = !DILocation(line: 2098, column: 14, scope: !8294)
!8303 = !DILocation(line: 2100, column: 39, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 2100, column: 2)
!8305 = !DILocation(line: 2100, column: 16, scope: !8304)
!8306 = !DILocation(line: 2100, column: 14, scope: !8304)
!8307 = !DILocation(line: 2100, column: 7, scope: !8304)
!8308 = !DILocation(line: 2100, column: 46, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 2100, column: 2)
!8310 = !DILocation(line: 2100, column: 2, scope: !8304)
!8311 = !DILocalVariable(name: "spline_new", scope: !8312, file: !3, line: 2101, type: !2343)
!8312 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 2100, column: 77)
!8313 = !DILocation(line: 2101, column: 15, scope: !8312)
!8314 = !DILocation(line: 2101, column: 49, scope: !8312)
!8315 = !DILocation(line: 2101, column: 28, scope: !8312)
!8316 = !DILocalVariable(name: "i", scope: !8312, file: !3, line: 2102, type: !35)
!8317 = !DILocation(line: 2102, column: 7, scope: !8312)
!8318 = !DILocation(line: 2104, column: 10, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 2104, column: 3)
!8320 = !DILocation(line: 2104, column: 8, scope: !8319)
!8321 = !DILocation(line: 2104, column: 15, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 2104, column: 3)
!8323 = !DILocation(line: 2104, column: 19, scope: !8322)
!8324 = !DILocation(line: 2104, column: 31, scope: !8322)
!8325 = !DILocation(line: 2104, column: 17, scope: !8322)
!8326 = !DILocation(line: 2104, column: 3, scope: !8319)
!8327 = !DILocalVariable(name: "point", scope: !8328, file: !3, line: 2105, type: !2355)
!8328 = distinct !DILexicalBlock(scope: !8322, file: !3, line: 2104, column: 47)
!8329 = !DILocation(line: 2105, column: 21, scope: !8328)
!8330 = !DILocation(line: 2105, column: 30, scope: !8328)
!8331 = !DILocation(line: 2105, column: 42, scope: !8328)
!8332 = !DILocation(line: 2105, column: 49, scope: !8328)
!8333 = !DILocation(line: 2106, column: 8, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 2106, column: 8)
!8335 = !DILocation(line: 2106, column: 15, scope: !8334)
!8336 = !DILocation(line: 2106, column: 22, scope: !8334)
!8337 = !DILocation(line: 2106, column: 8, scope: !8328)
!8338 = !DILocalVariable(name: "id_name", scope: !8339, file: !3, line: 2107, type: !822)
!8339 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 2106, column: 26)
!8340 = !DILocation(line: 2107, column: 17, scope: !8339)
!8341 = !DILocation(line: 2107, column: 59, scope: !8339)
!8342 = !DILocation(line: 2107, column: 68, scope: !8339)
!8343 = !DILocation(line: 2107, column: 75, scope: !8339)
!8344 = !DILocation(line: 2107, column: 82, scope: !8339)
!8345 = !DILocation(line: 2107, column: 27, scope: !8339)
!8346 = !DILocalVariable(name: "listbase", scope: !8339, file: !3, line: 2108, type: !1519)
!8347 = !DILocation(line: 2108, column: 15, scope: !8339)
!8348 = !DILocation(line: 2112, column: 30, scope: !8339)
!8349 = !DILocation(line: 2112, column: 37, scope: !8339)
!8350 = !DILocation(line: 2112, column: 16, scope: !8339)
!8351 = !DILocation(line: 2112, column: 14, scope: !8339)
!8352 = !DILocation(line: 2113, column: 39, scope: !8339)
!8353 = !DILocation(line: 2113, column: 49, scope: !8339)
!8354 = !DILocation(line: 2113, column: 57, scope: !8339)
!8355 = !DILocation(line: 2113, column: 24, scope: !8339)
!8356 = !DILocation(line: 2113, column: 5, scope: !8339)
!8357 = !DILocation(line: 2113, column: 12, scope: !8339)
!8358 = !DILocation(line: 2113, column: 19, scope: !8339)
!8359 = !DILocation(line: 2113, column: 22, scope: !8339)
!8360 = !DILocation(line: 2114, column: 4, scope: !8339)
!8361 = !DILocation(line: 2115, column: 3, scope: !8328)
!8362 = !DILocation(line: 2104, column: 43, scope: !8322)
!8363 = !DILocation(line: 2104, column: 3, scope: !8322)
!8364 = distinct !{!8364, !8326, !8365}
!8365 = !DILocation(line: 2115, column: 3, scope: !8319)
!8366 = !DILocation(line: 2117, column: 16, scope: !8312)
!8367 = !DILocation(line: 2117, column: 28, scope: !8312)
!8368 = !DILocation(line: 2117, column: 37, scope: !8312)
!8369 = !DILocation(line: 2117, column: 3, scope: !8312)
!8370 = !DILocation(line: 2118, column: 2, scope: !8312)
!8371 = !DILocation(line: 2100, column: 63, scope: !8309)
!8372 = !DILocation(line: 2100, column: 71, scope: !8309)
!8373 = !DILocation(line: 2100, column: 61, scope: !8309)
!8374 = !DILocation(line: 2100, column: 2, scope: !8309)
!8375 = distinct !{!8375, !8310, !8376}
!8376 = !DILocation(line: 2118, column: 2, scope: !8304)
!8377 = !DILocation(line: 2119, column: 1, scope: !8294)
!8378 = distinct !DISubprogram(name: "normalize_v2_v2", scope: !3039, file: !3039, line: 767, type: !8379, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8379 = !DISubroutineType(types: !8380)
!8380 = !{!71, !639, !3042}
!8381 = !DILocalVariable(name: "r", arg: 1, scope: !8378, file: !3039, line: 767, type: !639)
!8382 = !DILocation(line: 767, column: 37, scope: !8378)
!8383 = !DILocalVariable(name: "a", arg: 2, scope: !8378, file: !3039, line: 767, type: !3042)
!8384 = !DILocation(line: 767, column: 55, scope: !8378)
!8385 = !DILocalVariable(name: "d", scope: !8378, file: !3039, line: 769, type: !71)
!8386 = !DILocation(line: 769, column: 8, scope: !8378)
!8387 = !DILocation(line: 769, column: 21, scope: !8378)
!8388 = !DILocation(line: 769, column: 24, scope: !8378)
!8389 = !DILocation(line: 769, column: 12, scope: !8378)
!8390 = !DILocation(line: 771, column: 6, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8378, file: !3039, line: 771, column: 6)
!8392 = !DILocation(line: 771, column: 8, scope: !8391)
!8393 = !DILocation(line: 771, column: 6, scope: !8378)
!8394 = !DILocation(line: 772, column: 13, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8391, file: !3039, line: 771, column: 20)
!8396 = !DILocation(line: 772, column: 7, scope: !8395)
!8397 = !DILocation(line: 772, column: 5, scope: !8395)
!8398 = !DILocation(line: 773, column: 15, scope: !8395)
!8399 = !DILocation(line: 773, column: 18, scope: !8395)
!8400 = !DILocation(line: 773, column: 28, scope: !8395)
!8401 = !DILocation(line: 773, column: 26, scope: !8395)
!8402 = !DILocation(line: 773, column: 3, scope: !8395)
!8403 = !DILocation(line: 774, column: 2, scope: !8395)
!8404 = !DILocation(line: 776, column: 11, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8391, file: !3039, line: 775, column: 7)
!8406 = !DILocation(line: 776, column: 3, scope: !8405)
!8407 = !DILocation(line: 777, column: 5, scope: !8405)
!8408 = !DILocation(line: 780, column: 9, scope: !8378)
!8409 = !DILocation(line: 780, column: 2, scope: !8378)
!8410 = distinct !DISubprogram(name: "mul_v2_v2fl", scope: !3039, file: !3039, line: 386, type: !8411, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8411 = !DISubroutineType(types: !8412)
!8412 = !{null, !639, !3042, !71}
!8413 = !DILocalVariable(name: "r", arg: 1, scope: !8410, file: !3039, line: 386, type: !639)
!8414 = !DILocation(line: 386, column: 32, scope: !8410)
!8415 = !DILocalVariable(name: "a", arg: 2, scope: !8410, file: !3039, line: 386, type: !3042)
!8416 = !DILocation(line: 386, column: 50, scope: !8410)
!8417 = !DILocalVariable(name: "f", arg: 3, scope: !8410, file: !3039, line: 386, type: !71)
!8418 = !DILocation(line: 386, column: 62, scope: !8410)
!8419 = !DILocation(line: 388, column: 9, scope: !8410)
!8420 = !DILocation(line: 388, column: 16, scope: !8410)
!8421 = !DILocation(line: 388, column: 14, scope: !8410)
!8422 = !DILocation(line: 388, column: 2, scope: !8410)
!8423 = !DILocation(line: 388, column: 7, scope: !8410)
!8424 = !DILocation(line: 389, column: 9, scope: !8410)
!8425 = !DILocation(line: 389, column: 16, scope: !8410)
!8426 = !DILocation(line: 389, column: 14, scope: !8410)
!8427 = !DILocation(line: 389, column: 2, scope: !8410)
!8428 = !DILocation(line: 389, column: 7, scope: !8410)
!8429 = !DILocation(line: 390, column: 1, scope: !8410)
!8430 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !3039, file: !3039, line: 357, type: !3706, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8431 = !DILocalVariable(name: "r", arg: 1, scope: !8430, file: !3039, line: 357, type: !639)
!8432 = !DILocation(line: 357, column: 32, scope: !8430)
!8433 = !DILocalVariable(name: "a", arg: 2, scope: !8430, file: !3039, line: 357, type: !3042)
!8434 = !DILocation(line: 357, column: 50, scope: !8430)
!8435 = !DILocalVariable(name: "b", arg: 3, scope: !8430, file: !3039, line: 357, type: !3042)
!8436 = !DILocation(line: 357, column: 68, scope: !8430)
!8437 = !DILocation(line: 359, column: 9, scope: !8430)
!8438 = !DILocation(line: 359, column: 16, scope: !8430)
!8439 = !DILocation(line: 359, column: 14, scope: !8430)
!8440 = !DILocation(line: 359, column: 2, scope: !8430)
!8441 = !DILocation(line: 359, column: 7, scope: !8430)
!8442 = !DILocation(line: 360, column: 9, scope: !8430)
!8443 = !DILocation(line: 360, column: 16, scope: !8430)
!8444 = !DILocation(line: 360, column: 14, scope: !8430)
!8445 = !DILocation(line: 360, column: 2, scope: !8430)
!8446 = !DILocation(line: 360, column: 7, scope: !8430)
!8447 = !DILocation(line: 361, column: 9, scope: !8430)
!8448 = !DILocation(line: 361, column: 16, scope: !8430)
!8449 = !DILocation(line: 361, column: 14, scope: !8430)
!8450 = !DILocation(line: 361, column: 2, scope: !8430)
!8451 = !DILocation(line: 361, column: 7, scope: !8430)
!8452 = !DILocation(line: 362, column: 1, scope: !8430)
!8453 = distinct !DISubprogram(name: "len_v3", scope: !3039, file: !3039, line: 714, type: !3741, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8454 = !DILocalVariable(name: "a", arg: 1, scope: !8453, file: !3039, line: 714, type: !3042)
!8455 = !DILocation(line: 714, column: 34, scope: !8453)
!8456 = !DILocation(line: 716, column: 24, scope: !8453)
!8457 = !DILocation(line: 716, column: 27, scope: !8453)
!8458 = !DILocation(line: 716, column: 15, scope: !8453)
!8459 = !DILocation(line: 716, column: 9, scope: !8453)
!8460 = !DILocation(line: 716, column: 2, scope: !8453)
!8461 = distinct !DISubprogram(name: "dot_v3v3", scope: !3039, file: !3039, line: 619, type: !3726, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8462 = !DILocalVariable(name: "a", arg: 1, scope: !8461, file: !3039, line: 619, type: !3042)
!8463 = !DILocation(line: 619, column: 36, scope: !8461)
!8464 = !DILocalVariable(name: "b", arg: 2, scope: !8461, file: !3039, line: 619, type: !3042)
!8465 = !DILocation(line: 619, column: 54, scope: !8461)
!8466 = !DILocation(line: 621, column: 9, scope: !8461)
!8467 = !DILocation(line: 621, column: 16, scope: !8461)
!8468 = !DILocation(line: 621, column: 14, scope: !8461)
!8469 = !DILocation(line: 621, column: 23, scope: !8461)
!8470 = !DILocation(line: 621, column: 30, scope: !8461)
!8471 = !DILocation(line: 621, column: 28, scope: !8461)
!8472 = !DILocation(line: 621, column: 21, scope: !8461)
!8473 = !DILocation(line: 621, column: 37, scope: !8461)
!8474 = !DILocation(line: 621, column: 44, scope: !8461)
!8475 = !DILocation(line: 621, column: 42, scope: !8461)
!8476 = !DILocation(line: 621, column: 35, scope: !8461)
!8477 = !DILocation(line: 621, column: 2, scope: !8461)
!8478 = distinct !DISubprogram(name: "line_point_side_v2", scope: !3039, file: !3039, line: 1002, type: !8479, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8479 = !DISubroutineType(types: !8480)
!8480 = !{!71, !3042, !3042, !3042}
!8481 = !DILocalVariable(name: "l1", arg: 1, scope: !8478, file: !3039, line: 1002, type: !3042)
!8482 = !DILocation(line: 1002, column: 46, scope: !8478)
!8483 = !DILocalVariable(name: "l2", arg: 2, scope: !8478, file: !3039, line: 1002, type: !3042)
!8484 = !DILocation(line: 1002, column: 65, scope: !8478)
!8485 = !DILocalVariable(name: "pt", arg: 3, scope: !8478, file: !3039, line: 1002, type: !3042)
!8486 = !DILocation(line: 1002, column: 84, scope: !8478)
!8487 = !DILocation(line: 1004, column: 12, scope: !8478)
!8488 = !DILocation(line: 1004, column: 20, scope: !8478)
!8489 = !DILocation(line: 1004, column: 18, scope: !8478)
!8490 = !DILocation(line: 1004, column: 30, scope: !8478)
!8491 = !DILocation(line: 1004, column: 38, scope: !8478)
!8492 = !DILocation(line: 1004, column: 36, scope: !8478)
!8493 = !DILocation(line: 1004, column: 27, scope: !8478)
!8494 = !DILocation(line: 1005, column: 12, scope: !8478)
!8495 = !DILocation(line: 1005, column: 20, scope: !8478)
!8496 = !DILocation(line: 1005, column: 18, scope: !8478)
!8497 = !DILocation(line: 1005, column: 30, scope: !8478)
!8498 = !DILocation(line: 1005, column: 38, scope: !8478)
!8499 = !DILocation(line: 1005, column: 36, scope: !8478)
!8500 = !DILocation(line: 1005, column: 27, scope: !8478)
!8501 = !DILocation(line: 1004, column: 46, scope: !8478)
!8502 = !DILocation(line: 1004, column: 2, scope: !8478)
!8503 = distinct !DISubprogram(name: "madd_v2_v2v2fl", scope: !3039, file: !3039, line: 521, type: !8504, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2384)
!8504 = !DISubroutineType(types: !8505)
!8505 = !{null, !639, !3042, !3042, !71}
!8506 = !DILocalVariable(name: "r", arg: 1, scope: !8503, file: !3039, line: 521, type: !639)
!8507 = !DILocation(line: 521, column: 35, scope: !8503)
!8508 = !DILocalVariable(name: "a", arg: 2, scope: !8503, file: !3039, line: 521, type: !3042)
!8509 = !DILocation(line: 521, column: 53, scope: !8503)
!8510 = !DILocalVariable(name: "b", arg: 3, scope: !8503, file: !3039, line: 521, type: !3042)
!8511 = !DILocation(line: 521, column: 71, scope: !8503)
!8512 = !DILocalVariable(name: "f", arg: 4, scope: !8503, file: !3039, line: 521, type: !71)
!8513 = !DILocation(line: 521, column: 83, scope: !8503)
!8514 = !DILocation(line: 523, column: 9, scope: !8503)
!8515 = !DILocation(line: 523, column: 16, scope: !8503)
!8516 = !DILocation(line: 523, column: 23, scope: !8503)
!8517 = !DILocation(line: 523, column: 21, scope: !8503)
!8518 = !DILocation(line: 523, column: 14, scope: !8503)
!8519 = !DILocation(line: 523, column: 2, scope: !8503)
!8520 = !DILocation(line: 523, column: 7, scope: !8503)
!8521 = !DILocation(line: 524, column: 9, scope: !8503)
!8522 = !DILocation(line: 524, column: 16, scope: !8503)
!8523 = !DILocation(line: 524, column: 23, scope: !8503)
!8524 = !DILocation(line: 524, column: 21, scope: !8503)
!8525 = !DILocation(line: 524, column: 14, scope: !8503)
!8526 = !DILocation(line: 524, column: 2, scope: !8503)
!8527 = !DILocation(line: 524, column: 7, scope: !8503)
!8528 = !DILocation(line: 525, column: 1, scope: !8503)
