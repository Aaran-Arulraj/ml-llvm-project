; ModuleID = 'blender/source/blender/editors/mesh/editmesh_knife.c'
source_filename = "blender/source/blender/editors/mesh/editmesh_knife.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.bContext = type opaque
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.wmKeyMapItem = type { %struct.wmKeyMapItem*, %struct.wmKeyMapItem*, [64 x i8], %struct.IDProperty*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.PointerRNA* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.StructRNA = type opaque
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type { %struct.LinkNode*, i8* }
%struct.GPUDrawObject = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.uiLayout = type opaque
%struct.PropertyRNA = type opaque
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.KnifeTool_OpData = type { %struct.ARegion*, i8*, %struct.ViewContext, [2 x float], %struct.Object*, %struct.BMEditMesh*, %struct.MemArena*, %struct.GHash*, %struct.GHash*, %struct.GHash*, %struct.GHash*, %struct.BMBVHTree*, %struct.BLI_mempool*, %struct.BLI_mempool*, float, float, %struct.KnifeLineHit*, i32, %struct.KnifePosData, %struct.KnifePosData, i32, i32, %struct.BLI_mempool*, [4 x [4 x float]], [4 x [4 x float]], [3 x float], %struct.KnifeColors, i8, i8, i8, i8, i8, float, float, float, i32, i32, i8, i8, i8, i8, i32, [3 x float]* }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.ViewContext = type { %struct.Scene*, %struct.Object*, %struct.Object*, %struct.ARegion*, %struct.View3D*, %struct.RegionView3D*, %struct.BMEditMesh*, [2 x i32] }
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type { i16, i16, i16, i16, float*, [2 x double], i8 }
%struct.SmoothView3DStore = type opaque
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.MemArena = type opaque
%struct.BMBVHTree = type opaque
%struct.KnifeLineHit = type { [3 x float], [3 x float], [2 x float], float, float, float, %struct.KnifeEdge*, %struct.KnifeVert*, %struct.BMFace* }
%struct.KnifeEdge = type { %struct.KnifeVert*, %struct.KnifeVert*, %struct.BMFace*, %struct.ListBase, %struct.BMEdge*, i8 }
%struct.KnifeVert = type { %struct.BMVert*, %struct.ListBase, %struct.ListBase, [3 x float], [3 x float], [2 x float], i8, i8, i8 }
%struct.KnifePosData = type { [3 x float], [3 x float], %struct.KnifeVert*, %struct.KnifeEdge*, %struct.BMFace*, i8, [2 x float] }
%struct.KnifeColors = type { [3 x i8], [3 x i8], [3 x i8], [4 x i8], [3 x i8], [4 x i8] }
%struct.wmEventHandler = type opaque
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type opaque
%struct.BMIter = type { %union.anon.0, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.0 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.Ref = type { %struct.Ref*, %struct.Ref*, i8* }
%struct.GHashIterator = type { %struct.GHash*, %struct.Entry*, i32 }
%struct.Entry = type opaque
%struct.bglMats = type { [16 x double], [16 x double], [4 x i32] }
%struct.SmallHash = type { i32, i32, i32, %struct.SmallHashEntry*, [131 x %struct.SmallHashEntry] }
%struct.SmallHashEntry = type { i64, i8* }
%struct.BVHTree = type opaque
%struct.BVHTreeOverlap = type { i32, i32 }
%struct.SmallHashIter = type { %struct.SmallHash*, i32 }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct._gh_Entry = type { i8*, i8*, i8* }
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }

@knifetool_modal_keymap.modal_items = internal global [12 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 9, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str = private unnamed_addr constant [7 x i8] c"CANCEL\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Cancel\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"CONFIRM\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Confirm\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"SNAP_MIDPOINTS_ON\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"Snap To Midpoints On\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"SNAP_MIDPOINTS_OFF\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"Snap To Midpoints Off\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"IGNORE_SNAP_ON\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"Ignore Snapping On\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"IGNORE_SNAP_OFF\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"Ignore Snapping Off\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"ANGLE_SNAP_TOGGLE\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"Toggle Angle Snapping\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"CUT_THROUGH_TOGGLE\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"Toggle Cut Through\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"NEW_CUT\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"End Current Cut\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"ADD_CUT\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"Add Cut\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"PANNING\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"Panning\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"Knife Tool Modal Map\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"MESH_OT_knife_tool\00", align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"Knife Topology Tool\00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c"Cut new topology\00", align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"use_occlude_geometry\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"Occlude Geometry\00", align 1
@.str.29 = private unnamed_addr constant [33 x i8] c"Only cut the front most geometry\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"only_selected\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"Only Selected\00", align 1
@.str.32 = private unnamed_addr constant [27 x i8] c"Only cut selected geometry\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@__func__.EDBM_mesh_knife = private unnamed_addr constant [16 x i8] c"EDBM_mesh_knife\00", align 1
@MEM_allocN_len = external dso_local global i64 (i8*)*, align 8
@.str.33 = private unnamed_addr constant [24 x i8] c"Selected faces required\00", align 1
@__func__.knifetool_invoke = private unnamed_addr constant [17 x i8] c"knifetool_invoke\00", align 1
@.str.34 = private unnamed_addr constant [177 x i8] c"LMB: define cut lines, Return/Spacebar: confirm, Esc or RMB: cancel, E: new cut, Ctrl: midpoint snap (%s), Shift: ignore snap (%s), C: angle constrain (%s), Z: cut through (%s)\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.35 = private unnamed_addr constant [19 x i8] c"BLI_array.linehits\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"knife\00", align 1
@.str.37 = private unnamed_addr constant [18 x i8] c"knife origedgemap\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"knife origvertmap\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"knife kedgefacemap\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"knife facetrimap\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.41 = private unnamed_addr constant [15 x i8] c"knife facehits\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmKeyMap* @knifetool_modal_keymap(%struct.wmKeyConfig* %keyconf) #0 !dbg !2 {
entry:
  %retval = alloca %struct.wmKeyMap*, align 8
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !3282, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !3284, metadata !DIExpression()), !dbg !3287
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !3288
  %call = call %struct.wmKeyMap* @WM_modalkeymap_get(%struct.wmKeyConfig* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0)), !dbg !3289
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %keymap, align 8, !dbg !3287
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3290
  %tobool = icmp ne %struct.wmKeyMap* %1, null, !dbg !3290
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3292

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3293
  %modal_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 10, !dbg !3294
  %3 = load i8*, i8** %modal_items, align 8, !dbg !3294
  %tobool1 = icmp ne i8* %3, null, !dbg !3293
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3295

if.then:                                          ; preds = %land.lhs.true
  store %struct.wmKeyMap* null, %struct.wmKeyMap** %retval, align 8, !dbg !3296
  br label %return, !dbg !3296

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !3297
  %call2 = call %struct.wmKeyMap* @WM_modalkeymap_add(%struct.wmKeyConfig* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([12 x %struct.EnumPropertyItem], [12 x %struct.EnumPropertyItem]* @knifetool_modal_keymap.modal_items, i64 0, i64 0)), !dbg !3298
  store %struct.wmKeyMap* %call2, %struct.wmKeyMap** %keymap, align 8, !dbg !3299
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3300
  %call3 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %5, i32 218, i32 1, i32 -1, i32 0, i32 1), !dbg !3301
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3302
  %call4 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %6, i32 2, i32 -1, i32 -1, i32 0, i32 11), !dbg !3303
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3304
  %call5 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %7, i32 1, i32 1, i32 -1, i32 0, i32 8), !dbg !3305
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3306
  %call6 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %8, i32 3, i32 1, i32 -1, i32 0, i32 1), !dbg !3307
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3308
  %call7 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %9, i32 220, i32 1, i32 -1, i32 0, i32 2), !dbg !3309
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3310
  %call8 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %10, i32 163, i32 1, i32 -1, i32 0, i32 2), !dbg !3311
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3312
  %call9 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %11, i32 221, i32 1, i32 -1, i32 0, i32 2), !dbg !3313
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3314
  %call10 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %12, i32 101, i32 1, i32 0, i32 0, i32 5), !dbg !3315
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3316
  %call11 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %13, i32 212, i32 1, i32 -1, i32 0, i32 3), !dbg !3317
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3318
  %call12 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %14, i32 212, i32 2, i32 -1, i32 0, i32 4), !dbg !3319
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3320
  %call13 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %15, i32 215, i32 1, i32 -1, i32 0, i32 3), !dbg !3321
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3322
  %call14 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %16, i32 215, i32 2, i32 -1, i32 0, i32 4), !dbg !3323
  %17 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3324
  %call15 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %17, i32 217, i32 1, i32 -1, i32 0, i32 6), !dbg !3325
  %18 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3326
  %call16 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %18, i32 217, i32 2, i32 -1, i32 0, i32 7), !dbg !3327
  %19 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3328
  %call17 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %19, i32 216, i32 1, i32 -1, i32 0, i32 6), !dbg !3329
  %20 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3330
  %call18 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %20, i32 216, i32 2, i32 -1, i32 0, i32 7), !dbg !3331
  %21 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3332
  %call19 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %21, i32 99, i32 1, i32 0, i32 0, i32 9), !dbg !3333
  %22 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3334
  %call20 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %22, i32 122, i32 1, i32 0, i32 0, i32 10), !dbg !3335
  %23 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3336
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %23, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0)), !dbg !3337
  %24 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !3338
  store %struct.wmKeyMap* %24, %struct.wmKeyMap** %retval, align 8, !dbg !3339
  br label %return, !dbg !3339

return:                                           ; preds = %if.end, %if.then
  %25 = load %struct.wmKeyMap*, %struct.wmKeyMap** %retval, align 8, !dbg !3340
  ret %struct.wmKeyMap* %25, !dbg !3340
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.wmKeyMap* @WM_modalkeymap_get(%struct.wmKeyConfig*, i8*) #2

declare dso_local %struct.wmKeyMap* @WM_modalkeymap_add(%struct.wmKeyConfig*, i8*, %struct.EnumPropertyItem*) #2

declare dso_local %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap*, i32, i32, i32, i32, i32) #2

declare dso_local void @WM_modalkeymap_assign(%struct.wmKeyMap*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_knife_tool(%struct.wmOperatorType* %ot) #0 !dbg !3341 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3451, metadata !DIExpression()), !dbg !3452
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3453
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !3454
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i64 0, i64 0), i8** %name, align 8, !dbg !3455
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3456
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !3457
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0), i8** %idname, align 8, !dbg !3458
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3459
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !3460
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i64 0, i64 0), i8** %description, align 8, !dbg !3461
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3462
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !3463
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @knifetool_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3464
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3465
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !3466
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @knifetool_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !3467
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3468
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 7, !dbg !3469
  store void (%struct.bContext*, %struct.wmOperator*)* @knifetool_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !3470
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3471
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !3472
  store i32 (%struct.bContext*)* @ED_operator_editmesh_view3d, i32 (%struct.bContext*)** %poll, align 8, !dbg !3473
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3474
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 19, !dbg !3475
  store i16 7, i16* %flag, align 8, !dbg !3476
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3477
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !3478
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !3478
  %10 = bitcast %struct.StructRNA* %9 to i8*, !dbg !3477
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i64 0, i64 0)), !dbg !3479
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3480
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 11, !dbg !3481
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !3481
  %13 = bitcast %struct.StructRNA* %12 to i8*, !dbg !3480
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.32, i64 0, i64 0)), !dbg !3482
  ret void, !dbg !3483
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @knifetool_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !3484 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %only_select = alloca i8, align 1
  %cut_through = alloca i8, align 1
  %kcd = alloca %struct.KnifeTool_OpData*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3494, metadata !DIExpression()), !dbg !3495
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3496, metadata !DIExpression()), !dbg !3497
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !3498, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.declare(metadata i8* %only_select, metadata !3500, metadata !DIExpression()), !dbg !3501
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3502
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !3503
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !3503
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i64 0, i64 0)), !dbg !3504
  %conv = trunc i32 %call to i8, !dbg !3504
  store i8 %conv, i8* %only_select, align 1, !dbg !3501
  call void @llvm.dbg.declare(metadata i8* %cut_through, metadata !3505, metadata !DIExpression()), !dbg !3506
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3507
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !3508
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !3508
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0)), !dbg !3509
  %tobool = icmp ne i32 %call2, 0, !dbg !3510
  %lnot = xor i1 %tobool, true, !dbg !3510
  %lnot.ext = zext i1 %lnot to i32, !dbg !3510
  %conv3 = trunc i32 %lnot.ext to i8, !dbg !3510
  store i8 %conv3, i8* %cut_through, align 1, !dbg !3506
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd, metadata !3511, metadata !DIExpression()), !dbg !3514
  %4 = load i8, i8* %only_select, align 1, !dbg !3515
  %tobool4 = icmp ne i8 %4, 0, !dbg !3515
  br i1 %tobool4, label %if.then, label %if.end9, !dbg !3517

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !3518, metadata !DIExpression()), !dbg !3520
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3521
  %call5 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %5), !dbg !3522
  store %struct.Object* %call5, %struct.Object** %obedit, align 8, !dbg !3520
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !3523, metadata !DIExpression()), !dbg !3524
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !3525
  %call6 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %6), !dbg !3526
  store %struct.BMEditMesh* %call6, %struct.BMEditMesh** %em, align 8, !dbg !3524
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3527
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !3529
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3529
  %totfacesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %8, i32 0, i32 6, !dbg !3530
  %9 = load i32, i32* %totfacesel, align 8, !dbg !3530
  %cmp = icmp eq i32 %9, 0, !dbg !3531
  br i1 %cmp, label %if.then8, label %if.end, !dbg !3532

if.then8:                                         ; preds = %if.then
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3533
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 8, !dbg !3535
  %11 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !3535
  call void @BKE_report(%struct.ReportList* %11, i32 32, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.33, i64 0, i64 0)), !dbg !3536
  store i32 2, i32* %retval, align 4, !dbg !3537
  br label %return, !dbg !3537

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !3538

if.end9:                                          ; preds = %if.end, %entry
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3539
  call void @view3d_operator_needs_opengl(%struct.bContext* %12), !dbg !3540
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3541
  %call10 = call i8* %13(i64 544, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.knifetool_invoke, i64 0, i64 0)), !dbg !3541
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3542
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 5, !dbg !3543
  store i8* %call10, i8** %customdata, align 8, !dbg !3544
  %15 = bitcast i8* %call10 to %struct.KnifeTool_OpData*, !dbg !3542
  store %struct.KnifeTool_OpData* %15, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3545
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3546
  %17 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3547
  %18 = load i8, i8* %only_select, align 1, !dbg !3548
  %19 = load i8, i8* %cut_through, align 1, !dbg !3549
  call void @knifetool_init(%struct.bContext* %16, %struct.KnifeTool_OpData* %17, i8 zeroext %18, i8 zeroext %19, i8 zeroext 1), !dbg !3550
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3551
  %call11 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %20), !dbg !3552
  call void @WM_cursor_modal_set(%struct.wmWindow* %call11, i32 9), !dbg !3553
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3554
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3555
  %call12 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %21, %struct.wmOperator* %22), !dbg !3556
  %23 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3557
  %24 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3558
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %24, i32 0, i32 6, !dbg !3559
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !3558
  call void @knifetool_update_mval_i(%struct.KnifeTool_OpData* %23, i32* %arraydecay), !dbg !3560
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3561
  %26 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3562
  call void @knife_update_header(%struct.bContext* %25, %struct.KnifeTool_OpData* %26), !dbg !3563
  store i32 1, i32* %retval, align 4, !dbg !3564
  br label %return, !dbg !3564

return:                                           ; preds = %if.end9, %if.then8
  %27 = load i32, i32* %retval, align 4, !dbg !3565
  ret i32 %27, !dbg !3565
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @knifetool_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !3566 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %obedit = alloca %struct.Object*, align 8
  %kcd = alloca %struct.KnifeTool_OpData*, align 8
  %do_refresh = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3567, metadata !DIExpression()), !dbg !3568
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3569, metadata !DIExpression()), !dbg !3570
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !3571, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !3573, metadata !DIExpression()), !dbg !3574
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3575
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !3576
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !3574
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd, metadata !3577, metadata !DIExpression()), !dbg !3578
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3579
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 5, !dbg !3580
  %2 = load i8*, i8** %customdata, align 8, !dbg !3580
  %3 = bitcast i8* %2 to %struct.KnifeTool_OpData*, !dbg !3579
  store %struct.KnifeTool_OpData* %3, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3578
  call void @llvm.dbg.declare(metadata i8* %do_refresh, metadata !3581, metadata !DIExpression()), !dbg !3582
  store i8 0, i8* %do_refresh, align 1, !dbg !3582
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !3583
  %tobool = icmp ne %struct.Object* %4, null, !dbg !3583
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3585

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !3586
  %type = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !3587
  %6 = load i16, i16* %type, align 8, !dbg !3587
  %conv = sext i16 %6 to i32, !dbg !3586
  %cmp = icmp ne i32 %conv, 1, !dbg !3588
  br i1 %cmp, label %if.then, label %lor.lhs.false2, !dbg !3589

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %7 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !3590
  %call3 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %7), !dbg !3591
  %8 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3592
  %em = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %8, i32 0, i32 5, !dbg !3593
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3593
  %cmp4 = icmp ne %struct.BMEditMesh* %call3, %9, !dbg !3594
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3595

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3596
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3598
  call void @knifetool_exit(%struct.bContext* %10, %struct.wmOperator* %11), !dbg !3599
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3600
  %call6 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %12), !dbg !3601
  call void @ED_area_headerprint(%struct.ScrArea* %call6, i8* null), !dbg !3602
  store i32 4, i32* %retval, align 4, !dbg !3603
  br label %return, !dbg !3603

if.end:                                           ; preds = %lor.lhs.false2
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3604
  call void @view3d_operator_needs_opengl(%struct.bContext* %13), !dbg !3605
  %14 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !3606
  %15 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3607
  %vc = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %15, i32 0, i32 2, !dbg !3608
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !3609
  %16 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !3609
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %14, %struct.RegionView3D* %16), !dbg !3610
  %17 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3611
  %mode = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %17, i32 0, i32 35, !dbg !3613
  %18 = load i32, i32* %mode, align 4, !dbg !3613
  %cmp7 = icmp eq i32 %18, 3, !dbg !3614
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !3615

if.then9:                                         ; preds = %if.end
  %19 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3616
  %prevmode = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %19, i32 0, i32 36, !dbg !3617
  %20 = load i32, i32* %prevmode, align 8, !dbg !3617
  %21 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3618
  %mode10 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %21, i32 0, i32 35, !dbg !3619
  store i32 %20, i32* %mode10, align 4, !dbg !3620
  br label %if.end11, !dbg !3618

if.end11:                                         ; preds = %if.then9, %if.end
  %22 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3621
  %type12 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %22, i32 0, i32 2, !dbg !3623
  %23 = load i16, i16* %type12, align 8, !dbg !3623
  %conv13 = sext i16 %23 to i32, !dbg !3621
  %cmp14 = icmp eq i32 %conv13, 20514, !dbg !3624
  br i1 %cmp14, label %if.then16, label %if.else79, !dbg !3625

if.then16:                                        ; preds = %if.end11
  %24 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3626
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %24, i32 0, i32 3, !dbg !3628
  %25 = load i16, i16* %val, align 2, !dbg !3628
  %conv17 = sext i16 %25 to i32, !dbg !3626
  switch i32 %conv17, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb19
    i32 3, label %sw.bb22
    i32 4, label %sw.bb25
    i32 6, label %sw.bb29
    i32 7, label %sw.bb31
    i32 9, label %sw.bb35
    i32 10, label %sw.bb38
    i32 5, label %sw.bb44
    i32 8, label %sw.bb47
    i32 11, label %sw.bb60
  ], !dbg !3629

sw.bb:                                            ; preds = %if.then16
  %26 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3630
  %ar = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %26, i32 0, i32 0, !dbg !3632
  %27 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3632
  call void @ED_region_tag_redraw(%struct.ARegion* %27), !dbg !3633
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3634
  %29 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3635
  call void @knifetool_exit(%struct.bContext* %28, %struct.wmOperator* %29), !dbg !3636
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3637
  %call18 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %30), !dbg !3638
  call void @ED_area_headerprint(%struct.ScrArea* %call18, i8* null), !dbg !3639
  store i32 2, i32* %retval, align 4, !dbg !3640
  br label %return, !dbg !3640

sw.bb19:                                          ; preds = %if.then16
  %31 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3641
  %ar20 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %31, i32 0, i32 0, !dbg !3642
  %32 = load %struct.ARegion*, %struct.ARegion** %ar20, align 8, !dbg !3642
  call void @ED_region_tag_redraw(%struct.ARegion* %32), !dbg !3643
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3644
  call void @knifetool_finish(%struct.wmOperator* %33), !dbg !3645
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3646
  %35 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3647
  call void @knifetool_exit(%struct.bContext* %34, %struct.wmOperator* %35), !dbg !3648
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3649
  %call21 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %36), !dbg !3650
  call void @ED_area_headerprint(%struct.ScrArea* %call21, i8* null), !dbg !3651
  store i32 4, i32* %retval, align 4, !dbg !3652
  br label %return, !dbg !3652

sw.bb22:                                          ; preds = %if.then16
  %37 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3653
  %snap_midpoints = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %37, i32 0, i32 37, !dbg !3654
  store i8 1, i8* %snap_midpoints, align 4, !dbg !3655
  %38 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3656
  call void @knife_recalc_projmat(%struct.KnifeTool_OpData* %38), !dbg !3657
  %39 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3658
  %call23 = call i32 @knife_update_active(%struct.KnifeTool_OpData* %39), !dbg !3659
  %40 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3660
  %41 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3661
  call void @knife_update_header(%struct.bContext* %40, %struct.KnifeTool_OpData* %41), !dbg !3662
  %42 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3663
  %ar24 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %42, i32 0, i32 0, !dbg !3664
  %43 = load %struct.ARegion*, %struct.ARegion** %ar24, align 8, !dbg !3664
  call void @ED_region_tag_redraw(%struct.ARegion* %43), !dbg !3665
  store i8 1, i8* %do_refresh, align 1, !dbg !3666
  br label %sw.epilog, !dbg !3667

sw.bb25:                                          ; preds = %if.then16
  %44 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3668
  %snap_midpoints26 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %44, i32 0, i32 37, !dbg !3669
  store i8 0, i8* %snap_midpoints26, align 4, !dbg !3670
  %45 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3671
  call void @knife_recalc_projmat(%struct.KnifeTool_OpData* %45), !dbg !3672
  %46 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3673
  %call27 = call i32 @knife_update_active(%struct.KnifeTool_OpData* %46), !dbg !3674
  %47 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3675
  %48 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3676
  call void @knife_update_header(%struct.bContext* %47, %struct.KnifeTool_OpData* %48), !dbg !3677
  %49 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3678
  %ar28 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %49, i32 0, i32 0, !dbg !3679
  %50 = load %struct.ARegion*, %struct.ARegion** %ar28, align 8, !dbg !3679
  call void @ED_region_tag_redraw(%struct.ARegion* %50), !dbg !3680
  store i8 1, i8* %do_refresh, align 1, !dbg !3681
  br label %sw.epilog, !dbg !3682

sw.bb29:                                          ; preds = %if.then16
  %51 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3683
  %ar30 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %51, i32 0, i32 0, !dbg !3684
  %52 = load %struct.ARegion*, %struct.ARegion** %ar30, align 8, !dbg !3684
  call void @ED_region_tag_redraw(%struct.ARegion* %52), !dbg !3685
  %53 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3686
  %ignore_edge_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %53, i32 0, i32 38, !dbg !3687
  store i8 1, i8* %ignore_edge_snapping, align 1, !dbg !3688
  %54 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3689
  %ignore_vert_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %54, i32 0, i32 39, !dbg !3690
  store i8 1, i8* %ignore_vert_snapping, align 2, !dbg !3691
  %55 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3692
  %56 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3693
  call void @knife_update_header(%struct.bContext* %55, %struct.KnifeTool_OpData* %56), !dbg !3694
  store i8 1, i8* %do_refresh, align 1, !dbg !3695
  br label %sw.epilog, !dbg !3696

sw.bb31:                                          ; preds = %if.then16
  %57 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3697
  %ar32 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %57, i32 0, i32 0, !dbg !3698
  %58 = load %struct.ARegion*, %struct.ARegion** %ar32, align 8, !dbg !3698
  call void @ED_region_tag_redraw(%struct.ARegion* %58), !dbg !3699
  %59 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3700
  %ignore_edge_snapping33 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %59, i32 0, i32 38, !dbg !3701
  store i8 0, i8* %ignore_edge_snapping33, align 1, !dbg !3702
  %60 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3703
  %ignore_vert_snapping34 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %60, i32 0, i32 39, !dbg !3704
  store i8 0, i8* %ignore_vert_snapping34, align 2, !dbg !3705
  %61 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3706
  %62 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3707
  call void @knife_update_header(%struct.bContext* %61, %struct.KnifeTool_OpData* %62), !dbg !3708
  store i8 1, i8* %do_refresh, align 1, !dbg !3709
  br label %sw.epilog, !dbg !3710

sw.bb35:                                          ; preds = %if.then16
  %63 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3711
  %angle_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %63, i32 0, i32 41, !dbg !3712
  %64 = load i32, i32* %angle_snapping, align 8, !dbg !3712
  %tobool36 = icmp ne i32 %64, 0, !dbg !3713
  %lnot = xor i1 %tobool36, true, !dbg !3713
  %lnot.ext = zext i1 %lnot to i32, !dbg !3713
  %65 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3714
  %angle_snapping37 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %65, i32 0, i32 41, !dbg !3715
  store i32 %lnot.ext, i32* %angle_snapping37, align 8, !dbg !3716
  %66 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3717
  %67 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3718
  call void @knife_update_header(%struct.bContext* %66, %struct.KnifeTool_OpData* %67), !dbg !3719
  store i8 1, i8* %do_refresh, align 1, !dbg !3720
  br label %sw.epilog, !dbg !3721

sw.bb38:                                          ; preds = %if.then16
  %68 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3722
  %cut_through = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %68, i32 0, i32 28, !dbg !3723
  %69 = load i8, i8* %cut_through, align 1, !dbg !3723
  %tobool39 = icmp ne i8 %69, 0, !dbg !3724
  %lnot40 = xor i1 %tobool39, true, !dbg !3724
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !3724
  %conv42 = trunc i32 %lnot.ext41 to i8, !dbg !3724
  %70 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3725
  %cut_through43 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %70, i32 0, i32 28, !dbg !3726
  store i8 %conv42, i8* %cut_through43, align 1, !dbg !3727
  %71 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3728
  %72 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3729
  call void @knife_update_header(%struct.bContext* %71, %struct.KnifeTool_OpData* %72), !dbg !3730
  store i8 1, i8* %do_refresh, align 1, !dbg !3731
  br label %sw.epilog, !dbg !3732

sw.bb44:                                          ; preds = %if.then16
  %73 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3733
  %ar45 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %73, i32 0, i32 0, !dbg !3734
  %74 = load %struct.ARegion*, %struct.ARegion** %ar45, align 8, !dbg !3734
  call void @ED_region_tag_redraw(%struct.ARegion* %74), !dbg !3735
  %75 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3736
  call void @knife_finish_cut(%struct.KnifeTool_OpData* %75), !dbg !3737
  %76 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3738
  %mode46 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %76, i32 0, i32 35, !dbg !3739
  store i32 0, i32* %mode46, align 4, !dbg !3740
  br label %sw.epilog, !dbg !3741

sw.bb47:                                          ; preds = %if.then16
  %77 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3742
  call void @knife_recalc_projmat(%struct.KnifeTool_OpData* %77), !dbg !3743
  %78 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3744
  %mode48 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %78, i32 0, i32 35, !dbg !3746
  %79 = load i32, i32* %mode48, align 4, !dbg !3746
  %cmp49 = icmp eq i32 %79, 1, !dbg !3747
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !3748

if.then51:                                        ; preds = %sw.bb47
  %80 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3749
  call void @knife_add_cut(%struct.KnifeTool_OpData* %80), !dbg !3751
  br label %if.end58, !dbg !3752

if.else:                                          ; preds = %sw.bb47
  %81 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3753
  %mode52 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %81, i32 0, i32 35, !dbg !3755
  %82 = load i32, i32* %mode52, align 4, !dbg !3755
  %cmp53 = icmp ne i32 %82, 3, !dbg !3756
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !3757

if.then55:                                        ; preds = %if.else
  %83 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3758
  call void @knife_start_cut(%struct.KnifeTool_OpData* %83), !dbg !3760
  %84 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3761
  %mode56 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %84, i32 0, i32 35, !dbg !3762
  store i32 1, i32* %mode56, align 4, !dbg !3763
  br label %if.end57, !dbg !3764

if.end57:                                         ; preds = %if.then55, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then51
  %85 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3765
  %ar59 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %85, i32 0, i32 0, !dbg !3766
  %86 = load %struct.ARegion*, %struct.ARegion** %ar59, align 8, !dbg !3766
  call void @ED_region_tag_redraw(%struct.ARegion* %86), !dbg !3767
  br label %sw.epilog, !dbg !3768

sw.bb60:                                          ; preds = %if.then16
  %87 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3769
  %val61 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %87, i32 0, i32 3, !dbg !3771
  %88 = load i16, i16* %val61, align 2, !dbg !3771
  %conv62 = sext i16 %88 to i32, !dbg !3769
  %cmp63 = icmp ne i32 %conv62, 2, !dbg !3772
  br i1 %cmp63, label %if.then65, label %if.else74, !dbg !3773

if.then65:                                        ; preds = %sw.bb60
  %89 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3774
  %mode66 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %89, i32 0, i32 35, !dbg !3777
  %90 = load i32, i32* %mode66, align 4, !dbg !3777
  %cmp67 = icmp ne i32 %90, 3, !dbg !3778
  br i1 %cmp67, label %if.then69, label %if.end73, !dbg !3779

if.then69:                                        ; preds = %if.then65
  %91 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3780
  %mode70 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %91, i32 0, i32 35, !dbg !3782
  %92 = load i32, i32* %mode70, align 4, !dbg !3782
  %93 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3783
  %prevmode71 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %93, i32 0, i32 36, !dbg !3784
  store i32 %92, i32* %prevmode71, align 8, !dbg !3785
  %94 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3786
  %mode72 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %94, i32 0, i32 35, !dbg !3787
  store i32 3, i32* %mode72, align 4, !dbg !3788
  br label %if.end73, !dbg !3789

if.end73:                                         ; preds = %if.then69, %if.then65
  br label %if.end77, !dbg !3790

if.else74:                                        ; preds = %sw.bb60
  %95 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3791
  %prevmode75 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %95, i32 0, i32 36, !dbg !3793
  %96 = load i32, i32* %prevmode75, align 8, !dbg !3793
  %97 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3794
  %mode76 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %97, i32 0, i32 35, !dbg !3795
  store i32 %96, i32* %mode76, align 4, !dbg !3796
  br label %if.end77

if.end77:                                         ; preds = %if.else74, %if.end73
  %98 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3797
  %ar78 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %98, i32 0, i32 0, !dbg !3798
  %99 = load %struct.ARegion*, %struct.ARegion** %ar78, align 8, !dbg !3798
  call void @ED_region_tag_redraw(%struct.ARegion* %99), !dbg !3799
  store i32 8, i32* %retval, align 4, !dbg !3800
  br label %return, !dbg !3800

sw.epilog:                                        ; preds = %if.then16, %if.end58, %sw.bb44, %sw.bb38, %sw.bb35, %sw.bb31, %sw.bb29, %sw.bb25, %sw.bb22
  br label %if.end90, !dbg !3801

if.else79:                                        ; preds = %if.end11
  %100 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3802
  %type80 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %100, i32 0, i32 2, !dbg !3804
  %101 = load i16, i16* %type80, align 8, !dbg !3804
  %conv81 = sext i16 %101 to i32, !dbg !3802
  switch i32 %conv81, label %sw.epilog89 [
    i32 14, label %sw.bb82
    i32 15, label %sw.bb82
    i32 16, label %sw.bb82
    i32 10, label %sw.bb82
    i32 11, label %sw.bb82
    i32 4, label %sw.bb83
  ], !dbg !3805

sw.bb82:                                          ; preds = %if.else79, %if.else79, %if.else79, %if.else79, %if.else79
  store i32 8, i32* %retval, align 4, !dbg !3806
  br label %return, !dbg !3806

sw.bb83:                                          ; preds = %if.else79
  %102 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3808
  %mode84 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %102, i32 0, i32 35, !dbg !3810
  %103 = load i32, i32* %mode84, align 4, !dbg !3810
  %cmp85 = icmp ne i32 %103, 3, !dbg !3811
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !3812

if.then87:                                        ; preds = %sw.bb83
  %104 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3813
  %105 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3815
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %105, i32 0, i32 6, !dbg !3816
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !3815
  call void @knifetool_update_mval_i(%struct.KnifeTool_OpData* %104, i32* %arraydecay), !dbg !3817
  br label %if.end88, !dbg !3818

if.end88:                                         ; preds = %if.then87, %sw.bb83
  br label %sw.epilog89, !dbg !3819

sw.epilog89:                                      ; preds = %if.else79, %if.end88
  br label %if.end90

if.end90:                                         ; preds = %sw.epilog89, %sw.epilog
  %106 = load i8, i8* %do_refresh, align 1, !dbg !3820
  %tobool91 = icmp ne i8 %106, 0, !dbg !3820
  br i1 %tobool91, label %if.then92, label %if.end95, !dbg !3822

if.then92:                                        ; preds = %if.end90
  %107 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3823
  %108 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3825
  %mval93 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %108, i32 0, i32 6, !dbg !3826
  %arraydecay94 = getelementptr inbounds [2 x i32], [2 x i32]* %mval93, i64 0, i64 0, !dbg !3825
  call void @knifetool_update_mval_i(%struct.KnifeTool_OpData* %107, i32* %arraydecay94), !dbg !3827
  br label %if.end95, !dbg !3828

if.end95:                                         ; preds = %if.then92, %if.end90
  store i32 1, i32* %retval, align 4, !dbg !3829
  br label %return, !dbg !3829

return:                                           ; preds = %if.end95, %sw.bb82, %if.end77, %sw.bb19, %sw.bb, %if.then
  %109 = load i32, i32* %retval, align 4, !dbg !3830
  ret i32 %109, !dbg !3830
}

; Function Attrs: noinline nounwind uwtable
define internal void @knifetool_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !3831 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3834, metadata !DIExpression()), !dbg !3835
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3836, metadata !DIExpression()), !dbg !3837
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3838
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3839
  call void @knifetool_exit(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !3840
  ret void, !dbg !3841
}

declare dso_local i32 @ED_operator_editmesh_view3d(%struct.bContext*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @EDBM_mesh_knife(%struct.bContext* %C, %struct.LinkNode* %polys, i8 zeroext %use_tag, i8 zeroext %cut_through) #0 !dbg !3842 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %polys.addr = alloca %struct.LinkNode*, align 8
  %use_tag.addr = alloca i8, align 1
  %cut_through.addr = alloca i8, align 1
  %kcd = alloca %struct.KnifeTool_OpData*, align 8
  %only_select = alloca i8, align 1
  %is_interactive = alloca i8, align 1
  %p = alloca %struct.LinkNode*, align 8
  %mval_fl = alloca [2 x float]*, align 8
  %mval_tot = alloca i32, align 4
  %i = alloca i32, align 4
  %bm11 = alloca %struct.BMesh*, align 8
  %projmat = alloca [4 x [4 x float]], align 16
  %e = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %keep_search = alloca i8, align 1
  %f = alloca %struct.BMFace*, align 8
  %f33 = alloca %struct.BMFace*, align 8
  %fiter = alloca %struct.BMIter, align 8
  %f52 = alloca %struct.BMFace*, align 8
  %l_first68 = alloca %struct.BMLoop*, align 8
  %l_iter = alloca %struct.BMLoop*, align 8
  %found = alloca i8, align 1
  %l_radial_iter = alloca %struct.BMLoop*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3847, metadata !DIExpression()), !dbg !3848
  store %struct.LinkNode* %polys, %struct.LinkNode** %polys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %polys.addr, metadata !3849, metadata !DIExpression()), !dbg !3850
  store i8 %use_tag, i8* %use_tag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_tag.addr, metadata !3851, metadata !DIExpression()), !dbg !3852
  store i8 %cut_through, i8* %cut_through.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cut_through.addr, metadata !3853, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd, metadata !3855, metadata !DIExpression()), !dbg !3856
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3857
  call void @view3d_operator_needs_opengl(%struct.bContext* %0), !dbg !3858
  call void @llvm.dbg.declare(metadata i8* %only_select, metadata !3859, metadata !DIExpression()), !dbg !3861
  store i8 0, i8* %only_select, align 1, !dbg !3861
  call void @llvm.dbg.declare(metadata i8* %is_interactive, metadata !3862, metadata !DIExpression()), !dbg !3863
  store i8 0, i8* %is_interactive, align 1, !dbg !3863
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3864
  %call = call i8* %1(i64 544, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.EDBM_mesh_knife, i64 0, i64 0)), !dbg !3864
  %2 = bitcast i8* %call to %struct.KnifeTool_OpData*, !dbg !3864
  store %struct.KnifeTool_OpData* %2, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3865
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3866
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3867
  %5 = load i8, i8* %cut_through.addr, align 1, !dbg !3868
  call void @knifetool_init(%struct.bContext* %3, %struct.KnifeTool_OpData* %4, i8 zeroext 0, i8 zeroext %5, i8 zeroext 0), !dbg !3869
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3870
  %ignore_edge_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %6, i32 0, i32 38, !dbg !3871
  store i8 1, i8* %ignore_edge_snapping, align 1, !dbg !3872
  %7 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3873
  %ignore_vert_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %7, i32 0, i32 39, !dbg !3874
  store i8 1, i8* %ignore_vert_snapping, align 2, !dbg !3875
  %8 = load i8, i8* %use_tag.addr, align 1, !dbg !3876
  %tobool = icmp ne i8 %8, 0, !dbg !3876
  br i1 %tobool, label %if.then, label %if.end, !dbg !3878

if.then:                                          ; preds = %entry
  %9 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3879
  %em = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %9, i32 0, i32 5, !dbg !3881
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3881
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !3882
  %11 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3882
  call void @BM_mesh_elem_hflag_enable_all(%struct.BMesh* %11, i8 zeroext 2, i8 zeroext 16, i8 zeroext 0), !dbg !3883
  br label %if.end, !dbg !3884

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %p, metadata !3885, metadata !DIExpression()), !dbg !3887
  %12 = load %struct.LinkNode*, %struct.LinkNode** %polys.addr, align 8, !dbg !3888
  store %struct.LinkNode* %12, %struct.LinkNode** %p, align 8, !dbg !3887
  %13 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3889
  call void @knife_recalc_projmat(%struct.KnifeTool_OpData* %13), !dbg !3890
  br label %while.cond, !dbg !3891

while.cond:                                       ; preds = %for.end, %if.end
  %14 = load %struct.LinkNode*, %struct.LinkNode** %p, align 8, !dbg !3892
  %tobool1 = icmp ne %struct.LinkNode* %14, null, !dbg !3891
  br i1 %tobool1, label %while.body, label %while.end, !dbg !3891

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata [2 x float]** %mval_fl, metadata !3893, metadata !DIExpression()), !dbg !3897
  %15 = load %struct.LinkNode*, %struct.LinkNode** %p, align 8, !dbg !3898
  %link = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %15, i32 0, i32 1, !dbg !3899
  %16 = load i8*, i8** %link, align 8, !dbg !3899
  %17 = bitcast i8* %16 to [2 x float]*, !dbg !3898
  store [2 x float]* %17, [2 x float]** %mval_fl, align 8, !dbg !3897
  call void @llvm.dbg.declare(metadata i32* %mval_tot, metadata !3900, metadata !DIExpression()), !dbg !3902
  %18 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !3903
  %19 = load [2 x float]*, [2 x float]** %mval_fl, align 8, !dbg !3904
  %20 = bitcast [2 x float]* %19 to i8*, !dbg !3904
  %call2 = call i64 %18(i8* %20), !dbg !3903
  %div = udiv i64 %call2, 8, !dbg !3905
  %conv = trunc i64 %div to i32, !dbg !3903
  store i32 %conv, i32* %mval_tot, align 4, !dbg !3902
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3906, metadata !DIExpression()), !dbg !3907
  store i32 0, i32* %i, align 4, !dbg !3908
  br label %for.cond, !dbg !3910

for.cond:                                         ; preds = %for.inc, %while.body
  %21 = load i32, i32* %i, align 4, !dbg !3911
  %22 = load i32, i32* %mval_tot, align 4, !dbg !3913
  %cmp = icmp slt i32 %21, %22, !dbg !3914
  br i1 %cmp, label %for.body, label %for.end, !dbg !3915

for.body:                                         ; preds = %for.cond
  %23 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3916
  %24 = load [2 x float]*, [2 x float]** %mval_fl, align 8, !dbg !3918
  %25 = load i32, i32* %i, align 4, !dbg !3919
  %idxprom = sext i32 %25 to i64, !dbg !3918
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %24, i64 %idxprom, !dbg !3918
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !3918
  call void @knifetool_update_mval(%struct.KnifeTool_OpData* %23, float* %arraydecay), !dbg !3920
  %26 = load i32, i32* %i, align 4, !dbg !3921
  %cmp4 = icmp eq i32 %26, 0, !dbg !3923
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !3924

if.then6:                                         ; preds = %for.body
  %27 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3925
  call void @knife_start_cut(%struct.KnifeTool_OpData* %27), !dbg !3927
  %28 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3928
  %mode = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %28, i32 0, i32 35, !dbg !3929
  store i32 1, i32* %mode, align 4, !dbg !3930
  br label %if.end7, !dbg !3931

if.else:                                          ; preds = %for.body
  %29 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3932
  call void @knife_add_cut(%struct.KnifeTool_OpData* %29), !dbg !3934
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  br label %for.inc, !dbg !3935

for.inc:                                          ; preds = %if.end7
  %30 = load i32, i32* %i, align 4, !dbg !3936
  %inc = add nsw i32 %30, 1, !dbg !3936
  store i32 %inc, i32* %i, align 4, !dbg !3936
  br label %for.cond, !dbg !3937, !llvm.loop !3938

for.end:                                          ; preds = %for.cond
  %31 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3940
  call void @knife_finish_cut(%struct.KnifeTool_OpData* %31), !dbg !3941
  %32 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3942
  %mode8 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %32, i32 0, i32 35, !dbg !3943
  store i32 0, i32* %mode8, align 4, !dbg !3944
  %33 = load %struct.LinkNode*, %struct.LinkNode** %p, align 8, !dbg !3945
  %next = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %33, i32 0, i32 0, !dbg !3946
  %34 = load %struct.LinkNode*, %struct.LinkNode** %next, align 8, !dbg !3946
  store %struct.LinkNode* %34, %struct.LinkNode** %p, align 8, !dbg !3947
  br label %while.cond, !dbg !3891, !llvm.loop !3948

while.end:                                        ; preds = %while.cond
  %35 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3950
  call void @knifetool_finish_ex(%struct.KnifeTool_OpData* %35), !dbg !3952
  %36 = load i8, i8* %use_tag.addr, align 1, !dbg !3953
  %tobool9 = icmp ne i8 %36, 0, !dbg !3953
  br i1 %tobool9, label %if.then10, label %if.end126, !dbg !3955

if.then10:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm11, metadata !3956, metadata !DIExpression()), !dbg !3958
  %37 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !3959
  %em12 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %37, i32 0, i32 5, !dbg !3960
  %38 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em12, align 8, !dbg !3960
  %bm13 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %38, i32 0, i32 0, !dbg !3961
  %39 = load %struct.BMesh*, %struct.BMesh** %bm13, align 8, !dbg !3961
  store %struct.BMesh* %39, %struct.BMesh** %bm11, align 8, !dbg !3958
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %projmat, metadata !3962, metadata !DIExpression()), !dbg !3963
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !3964, metadata !DIExpression()), !dbg !3965
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3966, metadata !DIExpression()), !dbg !4051
  call void @llvm.dbg.declare(metadata i8* %keep_search, metadata !4052, metadata !DIExpression()), !dbg !4053
  %40 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !4054
  %ar = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %40, i32 0, i32 0, !dbg !4055
  %41 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4055
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %41, i32 0, i32 30, !dbg !4056
  %42 = load i8*, i8** %regiondata, align 8, !dbg !4056
  %43 = bitcast i8* %42 to %struct.RegionView3D*, !dbg !4054
  %44 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !4057
  %ob = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %44, i32 0, i32 4, !dbg !4058
  %45 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4058
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projmat, i64 0, i64 0, !dbg !4059
  call void @ED_view3d_ob_project_mat_get(%struct.RegionView3D* %43, %struct.Object* %45, [4 x float]* %arraydecay14), !dbg !4060
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !4061, metadata !DIExpression()), !dbg !4063
  %46 = load %struct.BMesh*, %struct.BMesh** %bm11, align 8, !dbg !4064
  %call15 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %46, i8 zeroext 3, i8* null), !dbg !4064
  %47 = bitcast i8* %call15 to %struct.BMFace*, !dbg !4064
  store %struct.BMFace* %47, %struct.BMFace** %f, align 8, !dbg !4064
  br label %for.cond16, !dbg !4064

for.cond16:                                       ; preds = %for.inc20, %if.then10
  %48 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4066
  %tobool17 = icmp ne %struct.BMFace* %48, null, !dbg !4064
  br i1 %tobool17, label %for.body18, label %for.end22, !dbg !4064

for.body18:                                       ; preds = %for.cond16
  %49 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4068
  %l_first = getelementptr inbounds %struct.BMFace, %struct.BMFace* %49, i32 0, i32 2, !dbg !4068
  %50 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !4068
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %50, i32 0, i32 0, !dbg !4068
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !4068
  %51 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4070
  %head19 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %51, i32 0, i32 0, !dbg !4070
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head19, i8 zeroext 16), !dbg !4070
  br label %for.inc20, !dbg !4071

for.inc20:                                        ; preds = %for.body18
  %call21 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4066
  %52 = bitcast i8* %call21 to %struct.BMFace*, !dbg !4066
  store %struct.BMFace* %52, %struct.BMFace** %f, align 8, !dbg !4066
  br label %for.cond16, !dbg !4066, !llvm.loop !4072

for.end22:                                        ; preds = %for.cond16
  %53 = load %struct.BMesh*, %struct.BMesh** %bm11, align 8, !dbg !4074
  %call23 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %53, i8 zeroext 2, i8* null), !dbg !4074
  %54 = bitcast i8* %call23 to %struct.BMEdge*, !dbg !4074
  store %struct.BMEdge* %54, %struct.BMEdge** %e, align 8, !dbg !4074
  br label %for.cond24, !dbg !4074

for.cond24:                                       ; preds = %for.inc49, %for.end22
  %55 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4076
  %tobool25 = icmp ne %struct.BMEdge* %55, null, !dbg !4074
  br i1 %tobool25, label %for.body26, label %for.end51, !dbg !4074

for.body26:                                       ; preds = %for.cond24
  %56 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4078
  %head27 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %56, i32 0, i32 0, !dbg !4078
  %call28 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head27, i8 zeroext 16), !dbg !4078
  %conv29 = zext i8 %call28 to i32, !dbg !4078
  %cmp30 = icmp eq i32 %conv29, 0, !dbg !4081
  br i1 %cmp30, label %if.then32, label %if.end48, !dbg !4082

if.then32:                                        ; preds = %for.body26
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f33, metadata !4083, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.declare(metadata %struct.BMIter* %fiter, metadata !4086, metadata !DIExpression()), !dbg !4087
  %57 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4088
  %58 = bitcast %struct.BMEdge* %57 to i8*, !dbg !4088
  %call34 = call i8* @BM_iter_new(%struct.BMIter* %fiter, %struct.BMesh* null, i8 zeroext 8, i8* %58), !dbg !4088
  %59 = bitcast i8* %call34 to %struct.BMFace*, !dbg !4088
  store %struct.BMFace* %59, %struct.BMFace** %f33, align 8, !dbg !4088
  br label %for.cond35, !dbg !4088

for.cond35:                                       ; preds = %for.inc45, %if.then32
  %60 = load %struct.BMFace*, %struct.BMFace** %f33, align 8, !dbg !4090
  %tobool36 = icmp ne %struct.BMFace* %60, null, !dbg !4088
  br i1 %tobool36, label %for.body37, label %for.end47, !dbg !4088

for.body37:                                       ; preds = %for.cond35
  %61 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !4092
  %ar38 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %61, i32 0, i32 0, !dbg !4095
  %62 = load %struct.ARegion*, %struct.ARegion** %ar38, align 8, !dbg !4095
  %63 = load %struct.LinkNode*, %struct.LinkNode** %polys.addr, align 8, !dbg !4096
  %64 = load %struct.BMFace*, %struct.BMFace** %f33, align 8, !dbg !4097
  %arraydecay39 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projmat, i64 0, i64 0, !dbg !4098
  %call40 = call zeroext i8 @edbm_mesh_knife_face_isect(%struct.ARegion* %62, %struct.LinkNode* %63, %struct.BMFace* %64, [4 x float]* %arraydecay39), !dbg !4099
  %tobool41 = icmp ne i8 %call40, 0, !dbg !4099
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !4100

if.then42:                                        ; preds = %for.body37
  %65 = load %struct.BMFace*, %struct.BMFace** %f33, align 8, !dbg !4101
  %head43 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %65, i32 0, i32 0, !dbg !4101
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head43, i8 zeroext 16), !dbg !4101
  br label %if.end44, !dbg !4103

if.end44:                                         ; preds = %if.then42, %for.body37
  br label %for.inc45, !dbg !4104

for.inc45:                                        ; preds = %if.end44
  %call46 = call i8* @BM_iter_step(%struct.BMIter* %fiter), !dbg !4090
  %66 = bitcast i8* %call46 to %struct.BMFace*, !dbg !4090
  store %struct.BMFace* %66, %struct.BMFace** %f33, align 8, !dbg !4090
  br label %for.cond35, !dbg !4090, !llvm.loop !4105

for.end47:                                        ; preds = %for.cond35
  br label %if.end48, !dbg !4107

if.end48:                                         ; preds = %for.end47, %for.body26
  br label %for.inc49, !dbg !4108

for.inc49:                                        ; preds = %if.end48
  %call50 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4076
  %67 = bitcast i8* %call50 to %struct.BMEdge*, !dbg !4076
  store %struct.BMEdge* %67, %struct.BMEdge** %e, align 8, !dbg !4076
  br label %for.cond24, !dbg !4076, !llvm.loop !4109

for.end51:                                        ; preds = %for.cond24
  br label %do.body, !dbg !4111

do.body:                                          ; preds = %do.cond123, %for.end51
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f52, metadata !4112, metadata !DIExpression()), !dbg !4114
  store i8 0, i8* %keep_search, align 1, !dbg !4115
  %68 = load %struct.BMesh*, %struct.BMesh** %bm11, align 8, !dbg !4116
  %call53 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %68, i8 zeroext 3, i8* null), !dbg !4116
  %69 = bitcast i8* %call53 to %struct.BMFace*, !dbg !4116
  store %struct.BMFace* %69, %struct.BMFace** %f52, align 8, !dbg !4116
  br label %for.cond54, !dbg !4116

for.cond54:                                       ; preds = %for.inc120, %do.body
  %70 = load %struct.BMFace*, %struct.BMFace** %f52, align 8, !dbg !4118
  %tobool55 = icmp ne %struct.BMFace* %70, null, !dbg !4116
  br i1 %tobool55, label %for.body56, label %for.end122, !dbg !4116

for.body56:                                       ; preds = %for.cond54
  %71 = load %struct.BMFace*, %struct.BMFace** %f52, align 8, !dbg !4120
  %head57 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %71, i32 0, i32 0, !dbg !4120
  %call58 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head57, i8 zeroext 16), !dbg !4120
  %conv59 = zext i8 %call58 to i32, !dbg !4120
  %cmp60 = icmp eq i32 %conv59, 0, !dbg !4123
  br i1 %cmp60, label %land.lhs.true, label %if.end119, !dbg !4124

land.lhs.true:                                    ; preds = %for.body56
  %72 = load %struct.BMFace*, %struct.BMFace** %f52, align 8, !dbg !4125
  %l_first62 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %72, i32 0, i32 2, !dbg !4125
  %73 = load %struct.BMLoop*, %struct.BMLoop** %l_first62, align 8, !dbg !4125
  %head63 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %73, i32 0, i32 0, !dbg !4125
  %call64 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head63, i8 zeroext 16), !dbg !4125
  %conv65 = zext i8 %call64 to i32, !dbg !4126
  %tobool66 = icmp ne i32 %conv65, 0, !dbg !4126
  br i1 %tobool66, label %if.then67, label %if.end119, !dbg !4127

if.then67:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first68, metadata !4128, metadata !DIExpression()), !dbg !4130
  %74 = load %struct.BMFace*, %struct.BMFace** %f52, align 8, !dbg !4131
  %l_first69 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %74, i32 0, i32 2, !dbg !4131
  %75 = load %struct.BMLoop*, %struct.BMLoop** %l_first69, align 8, !dbg !4131
  store %struct.BMLoop* %75, %struct.BMLoop** %l_first68, align 8, !dbg !4130
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !4132, metadata !DIExpression()), !dbg !4133
  %76 = load %struct.BMLoop*, %struct.BMLoop** %l_first68, align 8, !dbg !4134
  store %struct.BMLoop* %76, %struct.BMLoop** %l_iter, align 8, !dbg !4133
  call void @llvm.dbg.declare(metadata i8* %found, metadata !4135, metadata !DIExpression()), !dbg !4136
  store i8 0, i8* %found, align 1, !dbg !4136
  br label %do.body70, !dbg !4137

do.body70:                                        ; preds = %land.end104, %if.then67
  %77 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !4138
  %e71 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %77, i32 0, i32 2, !dbg !4138
  %78 = load %struct.BMEdge*, %struct.BMEdge** %e71, align 8, !dbg !4138
  %head72 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %78, i32 0, i32 0, !dbg !4138
  %call73 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head72, i8 zeroext 16), !dbg !4138
  %conv74 = zext i8 %call73 to i32, !dbg !4138
  %cmp75 = icmp ne i32 %conv74, 0, !dbg !4141
  br i1 %cmp75, label %if.then77, label %if.end95, !dbg !4142

if.then77:                                        ; preds = %do.body70
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_radial_iter, metadata !4143, metadata !DIExpression()), !dbg !4145
  %79 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !4146
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %79, i32 0, i32 4, !dbg !4147
  %80 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !4147
  store %struct.BMLoop* %80, %struct.BMLoop** %l_radial_iter, align 8, !dbg !4145
  %81 = load %struct.BMLoop*, %struct.BMLoop** %l_radial_iter, align 8, !dbg !4148
  %82 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !4150
  %cmp78 = icmp ne %struct.BMLoop* %81, %82, !dbg !4151
  br i1 %cmp78, label %if.then80, label %if.end94, !dbg !4152

if.then80:                                        ; preds = %if.then77
  br label %do.body81, !dbg !4153

do.body81:                                        ; preds = %land.end, %if.then80
  %83 = load %struct.BMLoop*, %struct.BMLoop** %l_radial_iter, align 8, !dbg !4155
  %f82 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %83, i32 0, i32 3, !dbg !4155
  %84 = load %struct.BMFace*, %struct.BMFace** %f82, align 8, !dbg !4155
  %head83 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %84, i32 0, i32 0, !dbg !4155
  %call84 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head83, i8 zeroext 16), !dbg !4155
  %tobool85 = icmp ne i8 %call84, 0, !dbg !4155
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !4158

if.then86:                                        ; preds = %do.body81
  store i8 1, i8* %found, align 1, !dbg !4159
  br label %if.end87, !dbg !4161

if.end87:                                         ; preds = %if.then86, %do.body81
  br label %do.cond, !dbg !4162

do.cond:                                          ; preds = %if.end87
  %85 = load %struct.BMLoop*, %struct.BMLoop** %l_radial_iter, align 8, !dbg !4163
  %radial_next88 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %85, i32 0, i32 4, !dbg !4164
  %86 = load %struct.BMLoop*, %struct.BMLoop** %radial_next88, align 8, !dbg !4164
  store %struct.BMLoop* %86, %struct.BMLoop** %l_radial_iter, align 8, !dbg !4165
  %87 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !4166
  %cmp89 = icmp ne %struct.BMLoop* %86, %87, !dbg !4167
  br i1 %cmp89, label %land.rhs, label %land.end, !dbg !4168

land.rhs:                                         ; preds = %do.cond
  %88 = load i8, i8* %found, align 1, !dbg !4169
  %conv91 = zext i8 %88 to i32, !dbg !4169
  %cmp92 = icmp eq i32 %conv91, 0, !dbg !4170
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %89 = phi i1 [ false, %do.cond ], [ %cmp92, %land.rhs ], !dbg !4171
  br i1 %89, label %do.body81, label %do.end, !dbg !4162, !llvm.loop !4172

do.end:                                           ; preds = %land.end
  br label %if.end94, !dbg !4174

if.end94:                                         ; preds = %do.end, %if.then77
  br label %if.end95, !dbg !4175

if.end95:                                         ; preds = %if.end94, %do.body70
  br label %do.cond96, !dbg !4176

do.cond96:                                        ; preds = %if.end95
  %90 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !4177
  %next97 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %90, i32 0, i32 6, !dbg !4178
  %91 = load %struct.BMLoop*, %struct.BMLoop** %next97, align 8, !dbg !4178
  store %struct.BMLoop* %91, %struct.BMLoop** %l_iter, align 8, !dbg !4179
  %92 = load %struct.BMLoop*, %struct.BMLoop** %l_first68, align 8, !dbg !4180
  %cmp98 = icmp ne %struct.BMLoop* %91, %92, !dbg !4181
  br i1 %cmp98, label %land.rhs100, label %land.end104, !dbg !4182

land.rhs100:                                      ; preds = %do.cond96
  %93 = load i8, i8* %found, align 1, !dbg !4183
  %conv101 = zext i8 %93 to i32, !dbg !4183
  %cmp102 = icmp eq i32 %conv101, 0, !dbg !4184
  br label %land.end104

land.end104:                                      ; preds = %land.rhs100, %do.cond96
  %94 = phi i1 [ false, %do.cond96 ], [ %cmp102, %land.rhs100 ], !dbg !4185
  br i1 %94, label %do.body70, label %do.end105, !dbg !4176, !llvm.loop !4186

do.end105:                                        ; preds = %land.end104
  %95 = load i8, i8* %found, align 1, !dbg !4188
  %tobool106 = icmp ne i8 %95, 0, !dbg !4188
  br i1 %tobool106, label %if.then107, label %if.end118, !dbg !4190

if.then107:                                       ; preds = %do.end105
  %96 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !4191
  %ar108 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %96, i32 0, i32 0, !dbg !4194
  %97 = load %struct.ARegion*, %struct.ARegion** %ar108, align 8, !dbg !4194
  %98 = load %struct.LinkNode*, %struct.LinkNode** %polys.addr, align 8, !dbg !4195
  %99 = load %struct.BMFace*, %struct.BMFace** %f52, align 8, !dbg !4196
  %arraydecay109 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projmat, i64 0, i64 0, !dbg !4197
  %call110 = call zeroext i8 @edbm_mesh_knife_face_isect(%struct.ARegion* %97, %struct.LinkNode* %98, %struct.BMFace* %99, [4 x float]* %arraydecay109), !dbg !4198
  %tobool111 = icmp ne i8 %call110, 0, !dbg !4198
  br i1 %tobool111, label %if.then112, label %if.else114, !dbg !4199

if.then112:                                       ; preds = %if.then107
  %100 = load %struct.BMFace*, %struct.BMFace** %f52, align 8, !dbg !4200
  %head113 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %100, i32 0, i32 0, !dbg !4200
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head113, i8 zeroext 16), !dbg !4200
  store i8 1, i8* %keep_search, align 1, !dbg !4202
  br label %if.end117, !dbg !4203

if.else114:                                       ; preds = %if.then107
  %101 = load %struct.BMFace*, %struct.BMFace** %f52, align 8, !dbg !4204
  %l_first115 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %101, i32 0, i32 2, !dbg !4204
  %102 = load %struct.BMLoop*, %struct.BMLoop** %l_first115, align 8, !dbg !4204
  %head116 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %102, i32 0, i32 0, !dbg !4204
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head116, i8 zeroext 16), !dbg !4204
  br label %if.end117

if.end117:                                        ; preds = %if.else114, %if.then112
  br label %if.end118, !dbg !4206

if.end118:                                        ; preds = %if.end117, %do.end105
  br label %if.end119, !dbg !4207

if.end119:                                        ; preds = %if.end118, %land.lhs.true, %for.body56
  br label %for.inc120, !dbg !4208

for.inc120:                                       ; preds = %if.end119
  %call121 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4118
  %103 = bitcast i8* %call121 to %struct.BMFace*, !dbg !4118
  store %struct.BMFace* %103, %struct.BMFace** %f52, align 8, !dbg !4118
  br label %for.cond54, !dbg !4118, !llvm.loop !4209

for.end122:                                       ; preds = %for.cond54
  br label %do.cond123, !dbg !4211

do.cond123:                                       ; preds = %for.end122
  %104 = load i8, i8* %keep_search, align 1, !dbg !4212
  %tobool124 = icmp ne i8 %104, 0, !dbg !4211
  br i1 %tobool124, label %do.body, label %do.end125, !dbg !4211, !llvm.loop !4213

do.end125:                                        ; preds = %do.cond123
  br label %if.end126, !dbg !4215

if.end126:                                        ; preds = %do.end125, %while.end
  %105 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4216
  %106 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !4217
  call void @knifetool_exit_ex(%struct.bContext* %105, %struct.KnifeTool_OpData* %106), !dbg !4218
  store %struct.KnifeTool_OpData* null, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !4219
  ret void, !dbg !4220
}

declare dso_local void @view3d_operator_needs_opengl(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @knifetool_init(%struct.bContext* %C, %struct.KnifeTool_OpData* %kcd, i8 zeroext %only_select, i8 zeroext %cut_through, i8 zeroext %is_interactive) #0 !dbg !4221 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %only_select.addr = alloca i8, align 1
  %cut_through.addr = alloca i8, align 1
  %is_interactive.addr = alloca i8, align 1
  %scene = alloca %struct.Scene*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4224, metadata !DIExpression()), !dbg !4225
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !4226, metadata !DIExpression()), !dbg !4227
  store i8 %only_select, i8* %only_select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %only_select.addr, metadata !4228, metadata !DIExpression()), !dbg !4229
  store i8 %cut_through, i8* %cut_through.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cut_through.addr, metadata !4230, metadata !DIExpression()), !dbg !4231
  store i8 %is_interactive, i8* %is_interactive.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_interactive.addr, metadata !4232, metadata !DIExpression()), !dbg !4233
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4234, metadata !DIExpression()), !dbg !4237
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4238
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !4239
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !4237
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4240, metadata !DIExpression()), !dbg !4241
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4242
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !4243
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !4241
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4244
  %3 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4245
  %ob = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %3, i32 0, i32 4, !dbg !4246
  store %struct.Object* %2, %struct.Object** %ob, align 8, !dbg !4247
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4248
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %4), !dbg !4249
  %5 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4250
  %ar = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %5, i32 0, i32 0, !dbg !4251
  store %struct.ARegion* %call2, %struct.ARegion** %ar, align 8, !dbg !4252
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4253
  %7 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4254
  %vc = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %7, i32 0, i32 2, !dbg !4255
  call void @em_setup_viewcontext(%struct.bContext* %6, %struct.ViewContext* %vc), !dbg !4256
  %8 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4257
  %ob3 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %8, i32 0, i32 4, !dbg !4258
  %9 = load %struct.Object*, %struct.Object** %ob3, align 8, !dbg !4258
  %call4 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %9), !dbg !4259
  %10 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4260
  %em = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %10, i32 0, i32 5, !dbg !4261
  store %struct.BMEditMesh* %call4, %struct.BMEditMesh** %em, align 8, !dbg !4262
  %11 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4263
  %em5 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %11, i32 0, i32 5, !dbg !4264
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em5, align 8, !dbg !4264
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !4265
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4265
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %13, i8 zeroext 1), !dbg !4266
  %14 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4267
  %em6 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %14, i32 0, i32 5, !dbg !4268
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em6, align 8, !dbg !4268
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4269
  %call7 = call [3 x float]* @BKE_editmesh_vertexCos_get(%struct.BMEditMesh* %15, %struct.Scene* %16, i32* null), !dbg !4270
  %17 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4271
  %cagecos = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %17, i32 0, i32 42, !dbg !4272
  store [3 x float]* %call7, [3 x float]** %cagecos, align 8, !dbg !4273
  %18 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4274
  %em8 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %18, i32 0, i32 5, !dbg !4275
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em8, align 8, !dbg !4275
  %20 = load i8, i8* %only_select.addr, align 1, !dbg !4276
  %conv = zext i8 %20 to i32, !dbg !4276
  %tobool = icmp ne i32 %conv, 0, !dbg !4276
  %21 = zext i1 %tobool to i64, !dbg !4276
  %cond = select i1 %tobool, i32 2, i32 4, !dbg !4276
  %or = or i32 1, %cond, !dbg !4277
  %22 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4278
  %cagecos9 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %22, i32 0, i32 42, !dbg !4279
  %23 = load [3 x float]*, [3 x float]** %cagecos9, align 8, !dbg !4279
  %call10 = call %struct.BMBVHTree* @BKE_bmbvh_new_from_editmesh(%struct.BMEditMesh* %19, i32 %or, [3 x float]* %23, i8 zeroext 0), !dbg !4280
  %24 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4281
  %bmbvh = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %24, i32 0, i32 11, !dbg !4282
  store %struct.BMBVHTree* %call10, %struct.BMBVHTree** %bmbvh, align 8, !dbg !4283
  %call11 = call %struct.MemArena* @BLI_memarena_new(i64 32760, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0)), !dbg !4284
  %25 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4285
  %arena = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %25, i32 0, i32 6, !dbg !4286
  store %struct.MemArena* %call11, %struct.MemArena** %arena, align 8, !dbg !4287
  %26 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4288
  %vthresh = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %26, i32 0, i32 14, !dbg !4289
  store float 9.000000e+00, float* %vthresh, align 8, !dbg !4290
  %27 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4291
  %ethresh = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %27, i32 0, i32 15, !dbg !4292
  store float 1.000000e+01, float* %ethresh, align 4, !dbg !4293
  %28 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4294
  call void @knife_recalc_projmat(%struct.KnifeTool_OpData* %28), !dbg !4295
  %29 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4296
  %ar12 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %29, i32 0, i32 0, !dbg !4297
  %30 = load %struct.ARegion*, %struct.ARegion** %ar12, align 8, !dbg !4297
  call void @ED_region_tag_redraw(%struct.ARegion* %30), !dbg !4298
  %call13 = call %struct.BLI_mempool* @BLI_mempool_create(i32 24, i32 0, i32 2048, i32 0), !dbg !4299
  %31 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4300
  %refs = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %31, i32 0, i32 22, !dbg !4301
  store %struct.BLI_mempool* %call13, %struct.BLI_mempool** %refs, align 8, !dbg !4302
  %call14 = call %struct.BLI_mempool* @BLI_mempool_create(i32 80, i32 0, i32 512, i32 1), !dbg !4303
  %32 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4304
  %kverts = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %32, i32 0, i32 12, !dbg !4305
  store %struct.BLI_mempool* %call14, %struct.BLI_mempool** %kverts, align 8, !dbg !4306
  %call15 = call %struct.BLI_mempool* @BLI_mempool_create(i32 56, i32 0, i32 512, i32 1), !dbg !4307
  %33 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4308
  %kedges = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %33, i32 0, i32 13, !dbg !4309
  store %struct.BLI_mempool* %call15, %struct.BLI_mempool** %kedges, align 8, !dbg !4310
  %call16 = call %struct.GHash* @BLI_ghash_ptr_new(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37, i64 0, i64 0)), !dbg !4311
  %34 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4312
  %origedgemap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %34, i32 0, i32 8, !dbg !4313
  store %struct.GHash* %call16, %struct.GHash** %origedgemap, align 8, !dbg !4314
  %call17 = call %struct.GHash* @BLI_ghash_ptr_new(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i64 0, i64 0)), !dbg !4315
  %35 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4316
  %origvertmap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %35, i32 0, i32 7, !dbg !4317
  store %struct.GHash* %call17, %struct.GHash** %origvertmap, align 8, !dbg !4318
  %call18 = call %struct.GHash* @BLI_ghash_ptr_new(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i64 0, i64 0)), !dbg !4319
  %36 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4320
  %kedgefacemap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %36, i32 0, i32 9, !dbg !4321
  store %struct.GHash* %call18, %struct.GHash** %kedgefacemap, align 8, !dbg !4322
  %call19 = call %struct.GHash* @BLI_ghash_ptr_new(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)), !dbg !4323
  %37 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4324
  %facetrimap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %37, i32 0, i32 10, !dbg !4325
  store %struct.GHash* %call19, %struct.GHash** %facetrimap, align 8, !dbg !4326
  %38 = load i8, i8* %is_interactive.addr, align 1, !dbg !4327
  %39 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4328
  %is_interactive20 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %39, i32 0, i32 27, !dbg !4329
  store i8 %38, i8* %is_interactive20, align 8, !dbg !4330
  %40 = load i8, i8* %cut_through.addr, align 1, !dbg !4331
  %41 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4332
  %cut_through21 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %41, i32 0, i32 28, !dbg !4333
  store i8 %40, i8* %cut_through21, align 1, !dbg !4334
  %42 = load i8, i8* %only_select.addr, align 1, !dbg !4335
  %43 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4336
  %only_select22 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %43, i32 0, i32 29, !dbg !4337
  store i8 %42, i8* %only_select22, align 2, !dbg !4338
  %44 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4339
  %em23 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %44, i32 0, i32 5, !dbg !4340
  %45 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em23, align 8, !dbg !4340
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %45, i32 0, i32 12, !dbg !4341
  %46 = load i16, i16* %selectmode, align 4, !dbg !4341
  %conv24 = sext i16 %46 to i32, !dbg !4339
  %cmp = icmp ne i32 %conv24, 4, !dbg !4342
  %conv25 = zext i1 %cmp to i32, !dbg !4342
  %conv26 = trunc i32 %conv25 to i8, !dbg !4343
  %47 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4344
  %select_result = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %47, i32 0, i32 30, !dbg !4345
  store i8 %conv26, i8* %select_result, align 1, !dbg !4346
  %48 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4347
  %curr = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %48, i32 0, i32 18, !dbg !4348
  call void @knife_pos_data_clear(%struct.KnifePosData* %curr), !dbg !4349
  %49 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4350
  %prev = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %49, i32 0, i32 19, !dbg !4351
  call void @knife_pos_data_clear(%struct.KnifePosData* %prev), !dbg !4352
  %50 = load i8, i8* %is_interactive.addr, align 1, !dbg !4353
  %tobool27 = icmp ne i8 %50, 0, !dbg !4353
  br i1 %tobool27, label %if.then, label %if.end, !dbg !4355

if.then:                                          ; preds = %entry
  %51 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4356
  %ar28 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %51, i32 0, i32 0, !dbg !4358
  %52 = load %struct.ARegion*, %struct.ARegion** %ar28, align 8, !dbg !4358
  %type = getelementptr inbounds %struct.ARegion, %struct.ARegion* %52, i32 0, i32 20, !dbg !4359
  %53 = load %struct.ARegionType*, %struct.ARegionType** %type, align 8, !dbg !4359
  %54 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4360
  %55 = bitcast %struct.KnifeTool_OpData* %54 to i8*, !dbg !4360
  %call29 = call i8* @ED_region_draw_cb_activate(%struct.ARegionType* %53, void (%struct.bContext*, %struct.ARegion*, i8*)* @knifetool_draw, i8* %55, i32 0), !dbg !4361
  %56 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4362
  %draw_handle = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %56, i32 0, i32 1, !dbg !4363
  store i8* %call29, i8** %draw_handle, align 8, !dbg !4364
  %57 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4365
  %colors = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %57, i32 0, i32 26, !dbg !4366
  call void @knife_init_colors(%struct.KnifeColors* %colors), !dbg !4367
  br label %if.end, !dbg !4368

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4369
}

declare dso_local void @BM_mesh_elem_hflag_enable_all(%struct.BMesh*, i8 zeroext, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @knife_recalc_projmat(%struct.KnifeTool_OpData* %kcd) #0 !dbg !4370 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !4373, metadata !DIExpression()), !dbg !4374
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4375
  %ob = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 4, !dbg !4376
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4376
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 50, !dbg !4377
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !4375
  %2 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4378
  %ob1 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %2, i32 0, i32 4, !dbg !4379
  %3 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !4379
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 47, !dbg !4380
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !4378
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2), !dbg !4381
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4382
  %ar = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %4, i32 0, i32 0, !dbg !4383
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4383
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %5, i32 0, i32 30, !dbg !4384
  %6 = load i8*, i8** %regiondata, align 8, !dbg !4384
  %7 = bitcast i8* %6 to %struct.RegionView3D*, !dbg !4382
  %8 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4385
  %ob3 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %8, i32 0, i32 4, !dbg !4386
  %9 = load %struct.Object*, %struct.Object** %ob3, align 8, !dbg !4386
  %10 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4387
  %projmat = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %10, i32 0, i32 23, !dbg !4388
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projmat, i64 0, i64 0, !dbg !4387
  call void @ED_view3d_ob_project_mat_get(%struct.RegionView3D* %7, %struct.Object* %9, [4 x float]* %arraydecay4), !dbg !4389
  %11 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4390
  %projmat_inv = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %11, i32 0, i32 24, !dbg !4391
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projmat_inv, i64 0, i64 0, !dbg !4390
  %12 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4392
  %projmat6 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %12, i32 0, i32 23, !dbg !4393
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projmat6, i64 0, i64 0, !dbg !4392
  %call8 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay5, [4 x float]* %arraydecay7), !dbg !4394
  %13 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4395
  %proj_zaxis = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %13, i32 0, i32 25, !dbg !4396
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %proj_zaxis, i64 0, i64 0, !dbg !4395
  %14 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4397
  %vc = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %14, i32 0, i32 2, !dbg !4398
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !4399
  %15 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4399
  %viewinv = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %15, i32 0, i32 2, !dbg !4400
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 2, !dbg !4397
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !4397
  call void @copy_v3_v3(float* %arraydecay9, float* %arraydecay10), !dbg !4401
  %16 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4402
  %ob11 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %16, i32 0, i32 4, !dbg !4403
  %17 = load %struct.Object*, %struct.Object** %ob11, align 8, !dbg !4403
  %imat12 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 50, !dbg !4404
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat12, i64 0, i64 0, !dbg !4402
  %18 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4405
  %proj_zaxis14 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %18, i32 0, i32 25, !dbg !4406
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %proj_zaxis14, i64 0, i64 0, !dbg !4405
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay13, float* %arraydecay15), !dbg !4407
  %19 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4408
  %proj_zaxis16 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %19, i32 0, i32 25, !dbg !4409
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %proj_zaxis16, i64 0, i64 0, !dbg !4408
  %call18 = call float @normalize_v3(float* %arraydecay17), !dbg !4410
  %20 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4411
  %vc19 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %20, i32 0, i32 2, !dbg !4412
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc19, i32 0, i32 4, !dbg !4413
  %21 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !4413
  %22 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4414
  %vc20 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %22, i32 0, i32 2, !dbg !4415
  %rv3d21 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc20, i32 0, i32 5, !dbg !4416
  %23 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d21, align 8, !dbg !4416
  %24 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4417
  %clipsta = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %24, i32 0, i32 33, !dbg !4418
  %25 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4419
  %clipend = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %25, i32 0, i32 34, !dbg !4420
  %call22 = call zeroext i8 @ED_view3d_clip_range_get(%struct.View3D* %21, %struct.RegionView3D* %23, float* %clipsta, float* %clipend, i8 zeroext 1), !dbg !4421
  %26 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4422
  %is_ortho = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %26, i32 0, i32 31, !dbg !4423
  store i8 %call22, i8* %is_ortho, align 4, !dbg !4424
  ret void, !dbg !4425
}

; Function Attrs: noinline nounwind uwtable
define internal void @knifetool_update_mval(%struct.KnifeTool_OpData* %kcd, float* %mval) #0 !dbg !4426 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %mval.addr = alloca float*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !4429, metadata !DIExpression()), !dbg !4430
  store float* %mval, float** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mval.addr, metadata !4431, metadata !DIExpression()), !dbg !4432
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4433
  call void @knife_recalc_projmat(%struct.KnifeTool_OpData* %0), !dbg !4434
  %1 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4435
  %mval1 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %1, i32 0, i32 3, !dbg !4436
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval1, i64 0, i64 0, !dbg !4435
  %2 = load float*, float** %mval.addr, align 8, !dbg !4437
  call void @copy_v2_v2(float* %arraydecay, float* %2), !dbg !4438
  %3 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4439
  %call = call i32 @knife_update_active(%struct.KnifeTool_OpData* %3), !dbg !4441
  %tobool = icmp ne i32 %call, 0, !dbg !4441
  br i1 %tobool, label %if.then, label %if.end, !dbg !4442

if.then:                                          ; preds = %entry
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4443
  %ar = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %4, i32 0, i32 0, !dbg !4445
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4445
  call void @ED_region_tag_redraw(%struct.ARegion* %5), !dbg !4446
  br label %if.end, !dbg !4447

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4448
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_start_cut(%struct.KnifeTool_OpData* %kcd) #0 !dbg !4449 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %origin = alloca [3 x float], align 4
  %origin_ofs = alloca [3 x float], align 4
  %ofs_local = alloca [3 x float], align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !4450, metadata !DIExpression()), !dbg !4451
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4452
  %prev = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 19, !dbg !4453
  %1 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4454
  %curr = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %1, i32 0, i32 18, !dbg !4455
  %2 = bitcast %struct.KnifePosData* %prev to i8*, !dbg !4455
  %3 = bitcast %struct.KnifePosData* %curr to i8*, !dbg !4455
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 64, i1 false), !dbg !4455
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4456
  %curr1 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %4, i32 0, i32 18, !dbg !4457
  %is_space = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr1, i32 0, i32 5, !dbg !4458
  store i8 0, i8* %is_space, align 8, !dbg !4459
  %5 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4460
  %prev2 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %5, i32 0, i32 19, !dbg !4462
  %vert = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev2, i32 0, i32 2, !dbg !4463
  %6 = load %struct.KnifeVert*, %struct.KnifeVert** %vert, align 8, !dbg !4463
  %cmp = icmp eq %struct.KnifeVert* %6, null, !dbg !4464
  br i1 %cmp, label %land.lhs.true, label %if.end45, !dbg !4465

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4466
  %prev3 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %7, i32 0, i32 19, !dbg !4467
  %edge = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev3, i32 0, i32 3, !dbg !4468
  %8 = load %struct.KnifeEdge*, %struct.KnifeEdge** %edge, align 8, !dbg !4468
  %cmp4 = icmp eq %struct.KnifeEdge* %8, null, !dbg !4469
  br i1 %cmp4, label %if.then, label %if.end45, !dbg !4470

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %origin, metadata !4471, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.declare(metadata [3 x float]* %origin_ofs, metadata !4474, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.declare(metadata [3 x float]* %ofs_local, metadata !4476, metadata !DIExpression()), !dbg !4477
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %ofs_local, i64 0, i64 0, !dbg !4478
  %9 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4479
  %vc = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %9, i32 0, i32 2, !dbg !4480
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !4481
  %10 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !4481
  %ofs = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %10, i32 0, i32 22, !dbg !4482
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %ofs, i64 0, i64 0, !dbg !4479
  call void @negate_v3_v3(float* %arraydecay, float* %arraydecay5), !dbg !4483
  %11 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4484
  %ob = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %11, i32 0, i32 4, !dbg !4485
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4485
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 50, !dbg !4486
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !4484
  %13 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4487
  %ob7 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %13, i32 0, i32 4, !dbg !4488
  %14 = load %struct.Object*, %struct.Object** %ob7, align 8, !dbg !4488
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 47, !dbg !4489
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !4487
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay6, [4 x float]* %arraydecay8), !dbg !4490
  %15 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4491
  %ob9 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %15, i32 0, i32 4, !dbg !4492
  %16 = load %struct.Object*, %struct.Object** %ob9, align 8, !dbg !4492
  %imat10 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 50, !dbg !4493
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat10, i64 0, i64 0, !dbg !4491
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %ofs_local, i64 0, i64 0, !dbg !4494
  call void @mul_m4_v3([4 x float]* %arraydecay11, float* %arraydecay12), !dbg !4495
  %17 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4496
  %18 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4497
  %curr13 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %18, i32 0, i32 18, !dbg !4498
  %mval = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr13, i32 0, i32 6, !dbg !4499
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !4497
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %origin, i64 0, i64 0, !dbg !4500
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %origin_ofs, i64 0, i64 0, !dbg !4501
  call void @knife_input_ray_segment(%struct.KnifeTool_OpData* %17, float* %arraydecay14, float 1.000000e+00, float* %arraydecay15, float* %arraydecay16), !dbg !4502
  %19 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4503
  %prev17 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %19, i32 0, i32 19, !dbg !4505
  %cage = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev17, i32 0, i32 1, !dbg !4506
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %cage, i64 0, i64 0, !dbg !4503
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %origin, i64 0, i64 0, !dbg !4507
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %origin_ofs, i64 0, i64 0, !dbg !4508
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %ofs_local, i64 0, i64 0, !dbg !4509
  %20 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4510
  %proj_zaxis = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %20, i32 0, i32 25, !dbg !4511
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %proj_zaxis, i64 0, i64 0, !dbg !4510
  %call23 = call zeroext i8 @isect_line_plane_v3(float* %arraydecay18, float* %arraydecay19, float* %arraydecay20, float* %arraydecay21, float* %arraydecay22), !dbg !4512
  %tobool = icmp ne i8 %call23, 0, !dbg !4512
  br i1 %tobool, label %if.end, label %if.then24, !dbg !4513

if.then24:                                        ; preds = %if.then
  %21 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4514
  %prev25 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %21, i32 0, i32 19, !dbg !4516
  %cage26 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev25, i32 0, i32 1, !dbg !4517
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %cage26, i64 0, i64 0, !dbg !4514
  call void @zero_v3(float* %arraydecay27), !dbg !4518
  br label %if.end, !dbg !4519

if.end:                                           ; preds = %if.then24, %if.then
  %22 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4520
  %prev28 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %22, i32 0, i32 19, !dbg !4521
  %co = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev28, i32 0, i32 0, !dbg !4522
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4520
  %23 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4523
  %prev30 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %23, i32 0, i32 19, !dbg !4524
  %cage31 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev30, i32 0, i32 1, !dbg !4525
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %cage31, i64 0, i64 0, !dbg !4523
  call void @copy_v3_v3(float* %arraydecay29, float* %arraydecay32), !dbg !4526
  %24 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4527
  %curr33 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %24, i32 0, i32 18, !dbg !4528
  %cage34 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr33, i32 0, i32 1, !dbg !4529
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %cage34, i64 0, i64 0, !dbg !4527
  %25 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4530
  %prev36 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %25, i32 0, i32 19, !dbg !4531
  %cage37 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev36, i32 0, i32 1, !dbg !4532
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %cage37, i64 0, i64 0, !dbg !4530
  call void @copy_v3_v3(float* %arraydecay35, float* %arraydecay38), !dbg !4533
  %26 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4534
  %curr39 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %26, i32 0, i32 18, !dbg !4535
  %co40 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr39, i32 0, i32 0, !dbg !4536
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %co40, i64 0, i64 0, !dbg !4534
  %27 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4537
  %prev42 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %27, i32 0, i32 19, !dbg !4538
  %co43 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev42, i32 0, i32 0, !dbg !4539
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %co43, i64 0, i64 0, !dbg !4537
  call void @copy_v3_v3(float* %arraydecay41, float* %arraydecay44), !dbg !4540
  br label %if.end45, !dbg !4541

if.end45:                                         ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !4542
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_add_cut(%struct.KnifeTool_OpData* %kcd) #0 !dbg !4543 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %i = alloca i32, align 4
  %lh = alloca %struct.KnifeLineHit*, align 8
  %facehits = alloca %struct.GHash*, align 8
  %f = alloca %struct.BMFace*, align 8
  %r = alloca %struct.Ref*, align 8
  %giter = alloca %struct.GHashIterator, align 8
  %lst = alloca %struct.ListBase*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !4544, metadata !DIExpression()), !dbg !4545
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4546, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %lh, metadata !4548, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.declare(metadata %struct.GHash** %facehits, metadata !4550, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !4552, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.declare(metadata %struct.Ref** %r, metadata !4554, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.declare(metadata %struct.GHashIterator* %giter, metadata !4556, metadata !DIExpression()), !dbg !4565
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst, metadata !4566, metadata !DIExpression()), !dbg !4567
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4568
  call void @prepare_linehits_for_cut(%struct.KnifeTool_OpData* %0), !dbg !4569
  %1 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4570
  %totlinehit = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %1, i32 0, i32 17, !dbg !4572
  %2 = load i32, i32* %totlinehit, align 8, !dbg !4572
  %cmp = icmp eq i32 %2, 0, !dbg !4573
  br i1 %cmp, label %if.then, label %if.end, !dbg !4574

if.then:                                          ; preds = %entry
  %3 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4575
  %prev = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %3, i32 0, i32 19, !dbg !4577
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4578
  %curr = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %4, i32 0, i32 18, !dbg !4579
  %5 = bitcast %struct.KnifePosData* %prev to i8*, !dbg !4579
  %6 = bitcast %struct.KnifePosData* %curr to i8*, !dbg !4579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 64, i1 false), !dbg !4579
  br label %return, !dbg !4580

if.end:                                           ; preds = %entry
  %call = call %struct.GHash* @BLI_ghash_ptr_new(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i64 0, i64 0)), !dbg !4581
  store %struct.GHash* %call, %struct.GHash** %facehits, align 8, !dbg !4582
  store i32 0, i32* %i, align 4, !dbg !4583
  br label %for.cond, !dbg !4585

for.cond:                                         ; preds = %for.inc27, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !4586
  %8 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4588
  %totlinehit1 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %8, i32 0, i32 17, !dbg !4589
  %9 = load i32, i32* %totlinehit1, align 8, !dbg !4589
  %cmp2 = icmp slt i32 %7, %9, !dbg !4590
  br i1 %cmp2, label %for.body, label %for.end28, !dbg !4591

for.body:                                         ; preds = %for.cond
  %10 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4592
  %linehits = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %10, i32 0, i32 16, !dbg !4594
  %11 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !4594
  %12 = load i32, i32* %i, align 4, !dbg !4595
  %idxprom = sext i32 %12 to i64, !dbg !4592
  %arrayidx = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %11, i64 %idxprom, !dbg !4592
  store %struct.KnifeLineHit* %arrayidx, %struct.KnifeLineHit** %lh, align 8, !dbg !4596
  %13 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !4597
  %f3 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %13, i32 0, i32 8, !dbg !4599
  %14 = load %struct.BMFace*, %struct.BMFace** %f3, align 8, !dbg !4599
  %tobool = icmp ne %struct.BMFace* %14, null, !dbg !4597
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !4600

if.then4:                                         ; preds = %for.body
  %15 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4601
  %16 = load %struct.GHash*, %struct.GHash** %facehits, align 8, !dbg !4603
  %17 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !4604
  %f5 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %17, i32 0, i32 8, !dbg !4605
  %18 = load %struct.BMFace*, %struct.BMFace** %f5, align 8, !dbg !4605
  %19 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !4606
  call void @add_hit_to_facehits(%struct.KnifeTool_OpData* %15, %struct.GHash* %16, %struct.BMFace* %18, %struct.KnifeLineHit* %19), !dbg !4607
  br label %if.end6, !dbg !4608

if.end6:                                          ; preds = %if.then4, %for.body
  %20 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !4609
  %v = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %20, i32 0, i32 7, !dbg !4611
  %21 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !4611
  %tobool7 = icmp ne %struct.KnifeVert* %21, null, !dbg !4609
  br i1 %tobool7, label %if.then8, label %if.end13, !dbg !4612

if.then8:                                         ; preds = %if.end6
  %22 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !4613
  %v9 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %22, i32 0, i32 7, !dbg !4616
  %23 = load %struct.KnifeVert*, %struct.KnifeVert** %v9, align 8, !dbg !4616
  %faces = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %23, i32 0, i32 2, !dbg !4617
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %faces, i32 0, i32 0, !dbg !4618
  %24 = load i8*, i8** %first, align 8, !dbg !4618
  %25 = bitcast i8* %24 to %struct.Ref*, !dbg !4613
  store %struct.Ref* %25, %struct.Ref** %r, align 8, !dbg !4619
  br label %for.cond10, !dbg !4620

for.cond10:                                       ; preds = %for.inc, %if.then8
  %26 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !4621
  %tobool11 = icmp ne %struct.Ref* %26, null, !dbg !4623
  br i1 %tobool11, label %for.body12, label %for.end, !dbg !4623

for.body12:                                       ; preds = %for.cond10
  %27 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4624
  %28 = load %struct.GHash*, %struct.GHash** %facehits, align 8, !dbg !4626
  %29 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !4627
  %ref = getelementptr inbounds %struct.Ref, %struct.Ref* %29, i32 0, i32 2, !dbg !4628
  %30 = load i8*, i8** %ref, align 8, !dbg !4628
  %31 = bitcast i8* %30 to %struct.BMFace*, !dbg !4627
  %32 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !4629
  call void @add_hit_to_facehits(%struct.KnifeTool_OpData* %27, %struct.GHash* %28, %struct.BMFace* %31, %struct.KnifeLineHit* %32), !dbg !4630
  br label %for.inc, !dbg !4631

for.inc:                                          ; preds = %for.body12
  %33 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !4632
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %33, i32 0, i32 0, !dbg !4633
  %34 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !4633
  store %struct.Ref* %34, %struct.Ref** %r, align 8, !dbg !4634
  br label %for.cond10, !dbg !4635, !llvm.loop !4636

for.end:                                          ; preds = %for.cond10
  br label %if.end13, !dbg !4638

if.end13:                                         ; preds = %for.end, %if.end6
  %35 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !4639
  %kfe = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %35, i32 0, i32 6, !dbg !4641
  %36 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !4641
  %tobool14 = icmp ne %struct.KnifeEdge* %36, null, !dbg !4639
  br i1 %tobool14, label %if.then15, label %if.end26, !dbg !4642

if.then15:                                        ; preds = %if.end13
  %37 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !4643
  %kfe16 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %37, i32 0, i32 6, !dbg !4646
  %38 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe16, align 8, !dbg !4646
  %faces17 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %38, i32 0, i32 3, !dbg !4647
  %first18 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %faces17, i32 0, i32 0, !dbg !4648
  %39 = load i8*, i8** %first18, align 8, !dbg !4648
  %40 = bitcast i8* %39 to %struct.Ref*, !dbg !4643
  store %struct.Ref* %40, %struct.Ref** %r, align 8, !dbg !4649
  br label %for.cond19, !dbg !4650

for.cond19:                                       ; preds = %for.inc23, %if.then15
  %41 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !4651
  %tobool20 = icmp ne %struct.Ref* %41, null, !dbg !4653
  br i1 %tobool20, label %for.body21, label %for.end25, !dbg !4653

for.body21:                                       ; preds = %for.cond19
  %42 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4654
  %43 = load %struct.GHash*, %struct.GHash** %facehits, align 8, !dbg !4656
  %44 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !4657
  %ref22 = getelementptr inbounds %struct.Ref, %struct.Ref* %44, i32 0, i32 2, !dbg !4658
  %45 = load i8*, i8** %ref22, align 8, !dbg !4658
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !4657
  %47 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !4659
  call void @add_hit_to_facehits(%struct.KnifeTool_OpData* %42, %struct.GHash* %43, %struct.BMFace* %46, %struct.KnifeLineHit* %47), !dbg !4660
  br label %for.inc23, !dbg !4661

for.inc23:                                        ; preds = %for.body21
  %48 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !4662
  %next24 = getelementptr inbounds %struct.Ref, %struct.Ref* %48, i32 0, i32 0, !dbg !4663
  %49 = load %struct.Ref*, %struct.Ref** %next24, align 8, !dbg !4663
  store %struct.Ref* %49, %struct.Ref** %r, align 8, !dbg !4664
  br label %for.cond19, !dbg !4665, !llvm.loop !4666

for.end25:                                        ; preds = %for.cond19
  br label %if.end26, !dbg !4668

if.end26:                                         ; preds = %for.end25, %if.end13
  br label %for.inc27, !dbg !4669

for.inc27:                                        ; preds = %if.end26
  %50 = load i32, i32* %i, align 4, !dbg !4670
  %inc = add nsw i32 %50, 1, !dbg !4670
  store i32 %inc, i32* %i, align 4, !dbg !4670
  br label %for.cond, !dbg !4671, !llvm.loop !4672

for.end28:                                        ; preds = %for.cond
  %51 = load %struct.GHash*, %struct.GHash** %facehits, align 8, !dbg !4674
  call void @BLI_ghashIterator_init(%struct.GHashIterator* %giter, %struct.GHash* %51), !dbg !4674
  br label %for.cond29, !dbg !4674

for.cond29:                                       ; preds = %for.inc36, %for.end28
  %call30 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %giter), !dbg !4676
  %conv = zext i8 %call30 to i32, !dbg !4676
  %cmp31 = icmp eq i32 %conv, 0, !dbg !4676
  br i1 %cmp31, label %for.body33, label %for.end37, !dbg !4674

for.body33:                                       ; preds = %for.cond29
  %call34 = call i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %giter), !dbg !4678
  %52 = bitcast i8* %call34 to %struct.BMFace*, !dbg !4680
  store %struct.BMFace* %52, %struct.BMFace** %f, align 8, !dbg !4681
  %call35 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %giter), !dbg !4682
  %53 = bitcast i8* %call35 to %struct.ListBase*, !dbg !4683
  store %struct.ListBase* %53, %struct.ListBase** %lst, align 8, !dbg !4684
  %54 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4685
  %55 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4686
  %56 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !4687
  call void @knife_cut_face(%struct.KnifeTool_OpData* %54, %struct.BMFace* %55, %struct.ListBase* %56), !dbg !4688
  br label %for.inc36, !dbg !4689

for.inc36:                                        ; preds = %for.body33
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %giter), !dbg !4676
  br label %for.cond29, !dbg !4676, !llvm.loop !4690

for.end37:                                        ; preds = %for.cond29
  %57 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4692
  %prev38 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %57, i32 0, i32 19, !dbg !4693
  %58 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4694
  %curr39 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %58, i32 0, i32 18, !dbg !4695
  %59 = bitcast %struct.KnifePosData* %prev38 to i8*, !dbg !4695
  %60 = bitcast %struct.KnifePosData* %curr39 to i8*, !dbg !4695
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 64, i1 false), !dbg !4695
  %61 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4696
  %prev40 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %61, i32 0, i32 19, !dbg !4698
  %bmface = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev40, i32 0, i32 4, !dbg !4699
  %62 = load %struct.BMFace*, %struct.BMFace** %bmface, align 8, !dbg !4699
  %tobool41 = icmp ne %struct.BMFace* %62, null, !dbg !4696
  br i1 %tobool41, label %if.then42, label %if.end51, !dbg !4700

if.then42:                                        ; preds = %for.end37
  %63 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4701
  %prev43 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %63, i32 0, i32 19, !dbg !4703
  %bmface44 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev43, i32 0, i32 4, !dbg !4704
  store %struct.BMFace* null, %struct.BMFace** %bmface44, align 8, !dbg !4705
  %64 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4706
  %linehits45 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %64, i32 0, i32 16, !dbg !4707
  %65 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits45, align 8, !dbg !4707
  %66 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4708
  %totlinehit46 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %66, i32 0, i32 17, !dbg !4709
  %67 = load i32, i32* %totlinehit46, align 8, !dbg !4709
  %sub = sub nsw i32 %67, 1, !dbg !4710
  %idxprom47 = sext i32 %sub to i64, !dbg !4706
  %arrayidx48 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %65, i64 %idxprom47, !dbg !4706
  %v49 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %arrayidx48, i32 0, i32 7, !dbg !4711
  %68 = load %struct.KnifeVert*, %struct.KnifeVert** %v49, align 8, !dbg !4711
  %69 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4712
  %prev50 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %69, i32 0, i32 19, !dbg !4713
  %vert = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev50, i32 0, i32 2, !dbg !4714
  store %struct.KnifeVert* %68, %struct.KnifeVert** %vert, align 8, !dbg !4715
  br label %if.end51, !dbg !4716

if.end51:                                         ; preds = %if.then42, %for.end37
  %70 = load %struct.GHash*, %struct.GHash** %facehits, align 8, !dbg !4717
  call void @BLI_ghash_free(%struct.GHash* %70, void (i8*)* null, void (i8*)* null), !dbg !4718
  %71 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4719
  %72 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4720
  %linehits52 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %72, i32 0, i32 16, !dbg !4721
  %73 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits52, align 8, !dbg !4721
  %74 = bitcast %struct.KnifeLineHit* %73 to i8*, !dbg !4720
  call void %71(i8* %74), !dbg !4719
  %75 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4722
  %linehits53 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %75, i32 0, i32 16, !dbg !4723
  store %struct.KnifeLineHit* null, %struct.KnifeLineHit** %linehits53, align 8, !dbg !4724
  %76 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4725
  %totlinehit54 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %76, i32 0, i32 17, !dbg !4726
  store i32 0, i32* %totlinehit54, align 8, !dbg !4727
  br label %return, !dbg !4728

return:                                           ; preds = %if.end51, %if.then
  ret void, !dbg !4728
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_finish_cut(%struct.KnifeTool_OpData* %kcd) #0 !dbg !4729 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !4730, metadata !DIExpression()), !dbg !4731
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4732
  %linehits = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 16, !dbg !4734
  %1 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !4734
  %tobool = icmp ne %struct.KnifeLineHit* %1, null, !dbg !4732
  br i1 %tobool, label %if.then, label %if.end, !dbg !4735

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4736
  %3 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4738
  %linehits1 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %3, i32 0, i32 16, !dbg !4739
  %4 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits1, align 8, !dbg !4739
  %5 = bitcast %struct.KnifeLineHit* %4 to i8*, !dbg !4738
  call void %2(i8* %5), !dbg !4736
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4740
  %linehits2 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %6, i32 0, i32 16, !dbg !4741
  store %struct.KnifeLineHit* null, %struct.KnifeLineHit** %linehits2, align 8, !dbg !4742
  %7 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4743
  %totlinehit = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %7, i32 0, i32 17, !dbg !4744
  store i32 0, i32* %totlinehit, align 8, !dbg !4745
  br label %if.end, !dbg !4746

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4747
}

; Function Attrs: noinline nounwind uwtable
define internal void @knifetool_finish_ex(%struct.KnifeTool_OpData* %kcd) #0 !dbg !4748 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !4749, metadata !DIExpression()), !dbg !4750
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4751
  call void @knife_make_cuts(%struct.KnifeTool_OpData* %0), !dbg !4752
  %1 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4753
  %em = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %1, i32 0, i32 5, !dbg !4754
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4754
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %2), !dbg !4755
  %3 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4756
  %em1 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %3, i32 0, i32 5, !dbg !4757
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em1, align 8, !dbg !4757
  call void @EDBM_mesh_normals_update(%struct.BMEditMesh* %4), !dbg !4758
  %5 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4759
  %em2 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %5, i32 0, i32 5, !dbg !4760
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em2, align 8, !dbg !4760
  call void @EDBM_update_generic(%struct.BMEditMesh* %6, i8 zeroext 1, i8 zeroext 1), !dbg !4761
  ret void, !dbg !4762
}

declare dso_local void @ED_view3d_ob_project_mat_get(%struct.RegionView3D*, %struct.Object*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !4763 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !4768, metadata !DIExpression()), !dbg !4769
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !4770, metadata !DIExpression()), !dbg !4771
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !4772, metadata !DIExpression()), !dbg !4773
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4774, metadata !DIExpression()), !dbg !4775
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4776
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4776
  %2 = load i8, i8* %itype.addr, align 1, !dbg !4776
  %3 = load i8*, i8** %data.addr, align 8, !dbg !4776
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !4776
  %tobool = icmp ne i8 %call, 0, !dbg !4776
  br i1 %tobool, label %if.then, label %if.else, !dbg !4778

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4779
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !4781
  store i8* %call1, i8** %retval, align 8, !dbg !4782
  br label %return, !dbg !4782

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !4783
  br label %return, !dbg !4783

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !4785
  ret i8* %5, !dbg !4785
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_enable(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !4786 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !4791, metadata !DIExpression()), !dbg !4792
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !4793, metadata !DIExpression()), !dbg !4794
  %0 = load i8, i8* %hflag.addr, align 1, !dbg !4795
  %conv = zext i8 %0 to i32, !dbg !4795
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !4796
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 3, !dbg !4797
  %2 = load i8, i8* %hflag1, align 1, !dbg !4798
  %conv2 = zext i8 %2 to i32, !dbg !4798
  %or = or i32 %conv2, %conv, !dbg !4798
  %conv3 = trunc i32 %or to i8, !dbg !4798
  store i8 %conv3, i8* %hflag1, align 1, !dbg !4798
  ret void, !dbg !4799
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !4800 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !4801, metadata !DIExpression()), !dbg !4802
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !4803, metadata !DIExpression()), !dbg !4804
  %0 = load i8, i8* %hflag.addr, align 1, !dbg !4805
  %conv = zext i8 %0 to i32, !dbg !4805
  %neg = xor i32 %conv, -1, !dbg !4806
  %conv1 = trunc i32 %neg to i8, !dbg !4807
  %conv2 = zext i8 %conv1 to i32, !dbg !4807
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !4808
  %hflag3 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 3, !dbg !4809
  %2 = load i8, i8* %hflag3, align 1, !dbg !4810
  %conv4 = zext i8 %2 to i32, !dbg !4810
  %and = and i32 %conv4, %conv2, !dbg !4810
  %conv5 = trunc i32 %and to i8, !dbg !4810
  store i8 %conv5, i8* %hflag3, align 1, !dbg !4810
  ret void, !dbg !4811
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !4812 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !4815, metadata !DIExpression()), !dbg !4816
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4817
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !4818
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !4818
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4819
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !4819
  %call = call i8* %1(i8* %3), !dbg !4817
  ret i8* %call, !dbg !4820
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !4821 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !4826, metadata !DIExpression()), !dbg !4827
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !4828, metadata !DIExpression()), !dbg !4829
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !4830
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !4831
  %1 = load i8, i8* %hflag1, align 1, !dbg !4831
  %conv = zext i8 %1 to i32, !dbg !4830
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !4832
  %conv2 = zext i8 %2 to i32, !dbg !4832
  %and = and i32 %conv, %conv2, !dbg !4833
  %conv3 = trunc i32 %and to i8, !dbg !4830
  ret i8 %conv3, !dbg !4834
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @edbm_mesh_knife_face_isect(%struct.ARegion* %ar, %struct.LinkNode* %polys, %struct.BMFace* %f, [4 x float]* %projmat) #0 !dbg !4835 {
entry:
  %retval = alloca i8, align 1
  %ar.addr = alloca %struct.ARegion*, align 8
  %polys.addr = alloca %struct.LinkNode*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %projmat.addr = alloca [4 x float]*, align 8
  %cent_ss = alloca [2 x float], align 4
  %cent = alloca [3 x float], align 4
  %p = alloca %struct.LinkNode*, align 8
  %isect = alloca i32, align 4
  %mval_fl = alloca [2 x float]*, align 8
  %mval_tot = alloca i32, align 4
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !4838, metadata !DIExpression()), !dbg !4839
  store %struct.LinkNode* %polys, %struct.LinkNode** %polys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %polys.addr, metadata !4840, metadata !DIExpression()), !dbg !4841
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !4842, metadata !DIExpression()), !dbg !4843
  store [4 x float]* %projmat, [4 x float]** %projmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %projmat.addr, metadata !4844, metadata !DIExpression()), !dbg !4845
  call void @llvm.dbg.declare(metadata [2 x float]* %cent_ss, metadata !4846, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.declare(metadata [3 x float]* %cent, metadata !4848, metadata !DIExpression()), !dbg !4849
  %0 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !4850
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !4851
  call void @edvm_mesh_knife_face_point(%struct.BMFace* %0, float* %arraydecay), !dbg !4852
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4853
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !4854
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %cent_ss, i64 0, i64 0, !dbg !4855
  %2 = load [4 x float]*, [4 x float]** %projmat.addr, align 8, !dbg !4856
  call void @ED_view3d_project_float_v2_m4(%struct.ARegion* %1, float* %arraydecay1, float* %arraydecay2, [4 x float]* %2), !dbg !4857
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %p, metadata !4858, metadata !DIExpression()), !dbg !4860
  %3 = load %struct.LinkNode*, %struct.LinkNode** %polys.addr, align 8, !dbg !4861
  store %struct.LinkNode* %3, %struct.LinkNode** %p, align 8, !dbg !4860
  call void @llvm.dbg.declare(metadata i32* %isect, metadata !4862, metadata !DIExpression()), !dbg !4863
  store i32 0, i32* %isect, align 4, !dbg !4863
  br label %while.cond, !dbg !4864

while.cond:                                       ; preds = %while.body, %entry
  %4 = load %struct.LinkNode*, %struct.LinkNode** %p, align 8, !dbg !4865
  %tobool = icmp ne %struct.LinkNode* %4, null, !dbg !4864
  br i1 %tobool, label %while.body, label %while.end, !dbg !4864

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata [2 x float]** %mval_fl, metadata !4866, metadata !DIExpression()), !dbg !4868
  %5 = load %struct.LinkNode*, %struct.LinkNode** %p, align 8, !dbg !4869
  %link = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %5, i32 0, i32 1, !dbg !4870
  %6 = load i8*, i8** %link, align 8, !dbg !4870
  %7 = bitcast i8* %6 to [2 x float]*, !dbg !4869
  store [2 x float]* %7, [2 x float]** %mval_fl, align 8, !dbg !4868
  call void @llvm.dbg.declare(metadata i32* %mval_tot, metadata !4871, metadata !DIExpression()), !dbg !4872
  %8 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !4873
  %9 = load [2 x float]*, [2 x float]** %mval_fl, align 8, !dbg !4874
  %10 = bitcast [2 x float]* %9 to i8*, !dbg !4874
  %call = call i64 %8(i8* %10), !dbg !4873
  %div = udiv i64 %call, 8, !dbg !4875
  %conv = trunc i64 %div to i32, !dbg !4873
  store i32 %conv, i32* %mval_tot, align 4, !dbg !4872
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %cent_ss, i64 0, i64 0, !dbg !4876
  %11 = load [2 x float]*, [2 x float]** %mval_fl, align 8, !dbg !4877
  %12 = load i32, i32* %mval_tot, align 4, !dbg !4878
  %sub = sub nsw i32 %12, 1, !dbg !4879
  %call4 = call zeroext i8 @isect_point_poly_v2(float* %arraydecay3, [2 x float]* %11, i32 %sub, i8 zeroext 0), !dbg !4880
  %conv5 = zext i8 %call4 to i32, !dbg !4881
  %13 = load i32, i32* %isect, align 4, !dbg !4882
  %add = add nsw i32 %13, %conv5, !dbg !4882
  store i32 %add, i32* %isect, align 4, !dbg !4882
  %14 = load %struct.LinkNode*, %struct.LinkNode** %p, align 8, !dbg !4883
  %next = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %14, i32 0, i32 0, !dbg !4884
  %15 = load %struct.LinkNode*, %struct.LinkNode** %next, align 8, !dbg !4884
  store %struct.LinkNode* %15, %struct.LinkNode** %p, align 8, !dbg !4885
  br label %while.cond, !dbg !4864, !llvm.loop !4886

while.end:                                        ; preds = %while.cond
  %16 = load i32, i32* %isect, align 4, !dbg !4888
  %rem = srem i32 %16, 2, !dbg !4890
  %tobool6 = icmp ne i32 %rem, 0, !dbg !4890
  br i1 %tobool6, label %if.then, label %if.end, !dbg !4891

if.then:                                          ; preds = %while.end
  store i8 1, i8* %retval, align 1, !dbg !4892
  br label %return, !dbg !4892

if.end:                                           ; preds = %while.end
  store i8 0, i8* %retval, align 1, !dbg !4894
  br label %return, !dbg !4894

return:                                           ; preds = %if.end, %if.then
  %17 = load i8, i8* %retval, align 1, !dbg !4895
  ret i8 %17, !dbg !4895
}

; Function Attrs: noinline nounwind uwtable
define internal void @knifetool_exit_ex(%struct.bContext* %C, %struct.KnifeTool_OpData* %kcd) #0 !dbg !4896 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4899, metadata !DIExpression()), !dbg !4900
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !4901, metadata !DIExpression()), !dbg !4902
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4903
  %tobool = icmp ne %struct.KnifeTool_OpData* %0, null, !dbg !4903
  br i1 %tobool, label %if.end, label %if.then, !dbg !4905

if.then:                                          ; preds = %entry
  br label %return, !dbg !4906

if.end:                                           ; preds = %entry
  %1 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4907
  %is_interactive = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %1, i32 0, i32 27, !dbg !4909
  %2 = load i8, i8* %is_interactive, align 8, !dbg !4909
  %tobool1 = icmp ne i8 %2, 0, !dbg !4907
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !4910

if.then2:                                         ; preds = %if.end
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4911
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %3), !dbg !4913
  call void @WM_cursor_modal_restore(%struct.wmWindow* %call), !dbg !4914
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4915
  %ar = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %4, i32 0, i32 0, !dbg !4916
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4916
  %type = getelementptr inbounds %struct.ARegion, %struct.ARegion* %5, i32 0, i32 20, !dbg !4917
  %6 = load %struct.ARegionType*, %struct.ARegionType** %type, align 8, !dbg !4917
  %7 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4918
  %draw_handle = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %7, i32 0, i32 1, !dbg !4919
  %8 = load i8*, i8** %draw_handle, align 8, !dbg !4919
  call void @ED_region_draw_cb_exit(%struct.ARegionType* %6, i8* %8), !dbg !4920
  br label %if.end3, !dbg !4921

if.end3:                                          ; preds = %if.then2, %if.end
  %9 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4922
  %refs = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %9, i32 0, i32 22, !dbg !4923
  %10 = load %struct.BLI_mempool*, %struct.BLI_mempool** %refs, align 8, !dbg !4923
  call void @BLI_mempool_destroy(%struct.BLI_mempool* %10), !dbg !4924
  %11 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4925
  %kverts = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %11, i32 0, i32 12, !dbg !4926
  %12 = load %struct.BLI_mempool*, %struct.BLI_mempool** %kverts, align 8, !dbg !4926
  call void @BLI_mempool_destroy(%struct.BLI_mempool* %12), !dbg !4927
  %13 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4928
  %kedges = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %13, i32 0, i32 13, !dbg !4929
  %14 = load %struct.BLI_mempool*, %struct.BLI_mempool** %kedges, align 8, !dbg !4929
  call void @BLI_mempool_destroy(%struct.BLI_mempool* %14), !dbg !4930
  %15 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4931
  %origedgemap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %15, i32 0, i32 8, !dbg !4932
  %16 = load %struct.GHash*, %struct.GHash** %origedgemap, align 8, !dbg !4932
  call void @BLI_ghash_free(%struct.GHash* %16, void (i8*)* null, void (i8*)* null), !dbg !4933
  %17 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4934
  %origvertmap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %17, i32 0, i32 7, !dbg !4935
  %18 = load %struct.GHash*, %struct.GHash** %origvertmap, align 8, !dbg !4935
  call void @BLI_ghash_free(%struct.GHash* %18, void (i8*)* null, void (i8*)* null), !dbg !4936
  %19 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4937
  %kedgefacemap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %19, i32 0, i32 9, !dbg !4938
  %20 = load %struct.GHash*, %struct.GHash** %kedgefacemap, align 8, !dbg !4938
  call void @BLI_ghash_free(%struct.GHash* %20, void (i8*)* null, void (i8*)* null), !dbg !4939
  %21 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4940
  %facetrimap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %21, i32 0, i32 10, !dbg !4941
  %22 = load %struct.GHash*, %struct.GHash** %facetrimap, align 8, !dbg !4941
  call void @BLI_ghash_free(%struct.GHash* %22, void (i8*)* null, void (i8*)* null), !dbg !4942
  %23 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4943
  %bmbvh = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %23, i32 0, i32 11, !dbg !4944
  %24 = load %struct.BMBVHTree*, %struct.BMBVHTree** %bmbvh, align 8, !dbg !4944
  call void @BKE_bmbvh_free(%struct.BMBVHTree* %24), !dbg !4945
  %25 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4946
  %arena = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %25, i32 0, i32 6, !dbg !4947
  %26 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !4947
  call void @BLI_memarena_free(%struct.MemArena* %26), !dbg !4948
  %27 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4949
  %ar4 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %27, i32 0, i32 0, !dbg !4950
  %28 = load %struct.ARegion*, %struct.ARegion** %ar4, align 8, !dbg !4950
  call void @ED_region_tag_redraw(%struct.ARegion* %28), !dbg !4951
  %29 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4952
  %cagecos = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %29, i32 0, i32 42, !dbg !4954
  %30 = load [3 x float]*, [3 x float]** %cagecos, align 8, !dbg !4954
  %tobool5 = icmp ne [3 x float]* %30, null, !dbg !4952
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !4955

if.then6:                                         ; preds = %if.end3
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4956
  %32 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4957
  %cagecos7 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %32, i32 0, i32 42, !dbg !4958
  %33 = load [3 x float]*, [3 x float]** %cagecos7, align 8, !dbg !4958
  %34 = bitcast [3 x float]* %33 to i8*, !dbg !4959
  call void %31(i8* %34), !dbg !4956
  br label %if.end8, !dbg !4956

if.end8:                                          ; preds = %if.then6, %if.end3
  %35 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4960
  %linehits = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %35, i32 0, i32 16, !dbg !4962
  %36 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !4962
  %tobool9 = icmp ne %struct.KnifeLineHit* %36, null, !dbg !4960
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !4963

if.then10:                                        ; preds = %if.end8
  %37 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4964
  %38 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4965
  %linehits11 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %38, i32 0, i32 16, !dbg !4966
  %39 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits11, align 8, !dbg !4966
  %40 = bitcast %struct.KnifeLineHit* %39 to i8*, !dbg !4965
  call void %37(i8* %40), !dbg !4964
  br label %if.end12, !dbg !4964

if.end12:                                         ; preds = %if.then10, %if.end8
  %41 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4967
  %42 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4968
  %43 = bitcast %struct.KnifeTool_OpData* %42 to i8*, !dbg !4968
  call void %41(i8* %43), !dbg !4967
  br label %return, !dbg !4969

return:                                           ; preds = %if.end12, %if.then
  ret void, !dbg !4969
}

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local %struct.Object* @CTX_data_edit_object(%struct.bContext*) #2

declare dso_local %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object*) #2

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

declare dso_local void @WM_cursor_modal_set(%struct.wmWindow*, i32) #2

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #2

declare dso_local %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext*, %struct.wmOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @knifetool_update_mval_i(%struct.KnifeTool_OpData* %kcd, i32* %mval_i) #0 !dbg !4970 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %mval_i.addr = alloca i32*, align 8
  %mval = alloca [2 x float], align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !4974, metadata !DIExpression()), !dbg !4975
  store i32* %mval_i, i32** %mval_i.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mval_i.addr, metadata !4976, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.declare(metadata [2 x float]* %mval, metadata !4978, metadata !DIExpression()), !dbg !4979
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !4980
  %0 = load i32*, i32** %mval_i.addr, align 8, !dbg !4981
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !4981
  %1 = load i32, i32* %arrayidx, align 4, !dbg !4981
  %conv = sitofp i32 %1 to float, !dbg !4981
  store float %conv, float* %arrayinit.begin, align 4, !dbg !4980
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !4980
  %2 = load i32*, i32** %mval_i.addr, align 8, !dbg !4981
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 1, !dbg !4981
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !4981
  %conv2 = sitofp i32 %3 to float, !dbg !4981
  store float %conv2, float* %arrayinit.element, align 4, !dbg !4980
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4982
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !4983
  call void @knifetool_update_mval(%struct.KnifeTool_OpData* %4, float* %arraydecay), !dbg !4984
  ret void, !dbg !4985
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_update_header(%struct.bContext* %C, %struct.KnifeTool_OpData* %kcd) #0 !dbg !4986 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %header = alloca [256 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4987, metadata !DIExpression()), !dbg !4988
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !4989, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.declare(metadata [256 x i8]* %header, metadata !4991, metadata !DIExpression()), !dbg !4992
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %header, i64 0, i64 0, !dbg !4993
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4994
  %snap_midpoints = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 37, !dbg !4995
  %1 = load i8, i8* %snap_midpoints, align 4, !dbg !4995
  %call = call i8* @WM_bool_as_string(i8 zeroext %1), !dbg !4996
  %2 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !4997
  %ignore_edge_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %2, i32 0, i32 38, !dbg !4998
  %3 = load i8, i8* %ignore_edge_snapping, align 1, !dbg !4998
  %call1 = call i8* @WM_bool_as_string(i8 zeroext %3), !dbg !4999
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5000
  %angle_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %4, i32 0, i32 41, !dbg !5001
  %5 = load i32, i32* %angle_snapping, align 8, !dbg !5001
  %conv = trunc i32 %5 to i8, !dbg !5000
  %call2 = call i8* @WM_bool_as_string(i8 zeroext %conv), !dbg !5002
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5003
  %cut_through = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %6, i32 0, i32 28, !dbg !5004
  %7 = load i8, i8* %cut_through, align 1, !dbg !5004
  %call3 = call i8* @WM_bool_as_string(i8 zeroext %7), !dbg !5005
  %call4 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 256, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @.str.34, i64 0, i64 0), i8* %call, i8* %call1, i8* %call2, i8* %call3), !dbg !5006
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5007
  %call5 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %8), !dbg !5008
  %arraydecay6 = getelementptr inbounds [256 x i8], [256 x i8]* %header, i64 0, i64 0, !dbg !5009
  call void @ED_area_headerprint(%struct.ScrArea* %call5, i8* %arraydecay6), !dbg !5010
  ret void, !dbg !5011
}

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

declare dso_local i8* @WM_bool_as_string(i8 zeroext) #2

declare dso_local void @ED_area_headerprint(%struct.ScrArea*, i8*) #2

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @knifetool_exit(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5012 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %kcd = alloca %struct.KnifeTool_OpData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5013, metadata !DIExpression()), !dbg !5014
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5015, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd, metadata !5017, metadata !DIExpression()), !dbg !5018
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5019
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !5020
  %1 = load i8*, i8** %customdata, align 8, !dbg !5020
  %2 = bitcast i8* %1 to %struct.KnifeTool_OpData*, !dbg !5019
  store %struct.KnifeTool_OpData* %2, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !5018
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5021
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !5022
  call void @knifetool_exit_ex(%struct.bContext* %3, %struct.KnifeTool_OpData* %4), !dbg !5023
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5024
  %customdata1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 5, !dbg !5025
  store i8* null, i8** %customdata1, align 8, !dbg !5026
  ret void, !dbg !5027
}

declare dso_local void @ED_view3d_init_mats_rv3d(%struct.Object*, %struct.RegionView3D*) #2

declare dso_local void @ED_region_tag_redraw(%struct.ARegion*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @knifetool_finish(%struct.wmOperator* %op) #0 !dbg !5028 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  %kcd = alloca %struct.KnifeTool_OpData*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5031, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd, metadata !5033, metadata !DIExpression()), !dbg !5034
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5035
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !5036
  %1 = load i8*, i8** %customdata, align 8, !dbg !5036
  %2 = bitcast i8* %1 to %struct.KnifeTool_OpData*, !dbg !5035
  store %struct.KnifeTool_OpData* %2, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !5034
  %3 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !5037
  call void @knifetool_finish_ex(%struct.KnifeTool_OpData* %3), !dbg !5038
  ret void, !dbg !5039
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @knife_update_active(%struct.KnifeTool_OpData* %kcd) #0 !dbg !5040 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %origin = alloca [3 x float], align 4
  %origin_ofs = alloca [3 x float], align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !5043, metadata !DIExpression()), !dbg !5044
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5045
  %curr = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 18, !dbg !5046
  call void @knife_pos_data_clear(%struct.KnifePosData* %curr), !dbg !5047
  %1 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5048
  %curr1 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %1, i32 0, i32 18, !dbg !5049
  %mval = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr1, i32 0, i32 6, !dbg !5050
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !5048
  %2 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5051
  %mval2 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %2, i32 0, i32 3, !dbg !5052
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %mval2, i64 0, i64 0, !dbg !5051
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay3), !dbg !5053
  %3 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5054
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5055
  %prev = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %4, i32 0, i32 19, !dbg !5056
  %cage = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev, i32 0, i32 1, !dbg !5057
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %cage, i64 0, i64 0, !dbg !5055
  %5 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5058
  %prev5 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %5, i32 0, i32 19, !dbg !5059
  %mval6 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev5, i32 0, i32 6, !dbg !5060
  %arraydecay7 = getelementptr inbounds [2 x float], [2 x float]* %mval6, i64 0, i64 0, !dbg !5058
  call void @knife_project_v2(%struct.KnifeTool_OpData* %3, float* %arraydecay4, float* %arraydecay7), !dbg !5061
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5062
  %angle_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %6, i32 0, i32 41, !dbg !5064
  %7 = load i32, i32* %angle_snapping, align 8, !dbg !5064
  %cmp = icmp ne i32 %7, 0, !dbg !5065
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5066

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5067
  %mode = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %8, i32 0, i32 35, !dbg !5068
  %9 = load i32, i32* %mode, align 4, !dbg !5068
  %cmp8 = icmp eq i32 %9, 1, !dbg !5069
  br i1 %cmp8, label %if.then, label %if.else, !dbg !5070

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5071
  %call = call zeroext i8 @knife_snap_angle(%struct.KnifeTool_OpData* %10), !dbg !5073
  %11 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5074
  %is_angle_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %11, i32 0, i32 40, !dbg !5075
  store i8 %call, i8* %is_angle_snapping, align 1, !dbg !5076
  br label %if.end, !dbg !5077

if.else:                                          ; preds = %land.lhs.true, %entry
  %12 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5078
  %is_angle_snapping9 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %12, i32 0, i32 40, !dbg !5080
  store i8 0, i8* %is_angle_snapping9, align 1, !dbg !5081
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5082
  %14 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5083
  %curr10 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %14, i32 0, i32 18, !dbg !5084
  %co = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr10, i32 0, i32 0, !dbg !5085
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5083
  %15 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5086
  %curr12 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %15, i32 0, i32 18, !dbg !5087
  %cage13 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr12, i32 0, i32 1, !dbg !5088
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %cage13, i64 0, i64 0, !dbg !5086
  %16 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5089
  %curr15 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %16, i32 0, i32 18, !dbg !5090
  %bmface = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr15, i32 0, i32 4, !dbg !5091
  %17 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5092
  %curr16 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %17, i32 0, i32 18, !dbg !5093
  %is_space = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr16, i32 0, i32 5, !dbg !5094
  %call17 = call %struct.KnifeVert* @knife_find_closest_vert(%struct.KnifeTool_OpData* %13, float* %arraydecay11, float* %arraydecay14, %struct.BMFace** %bmface, i8* %is_space), !dbg !5095
  %18 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5096
  %curr18 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %18, i32 0, i32 18, !dbg !5097
  %vert = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr18, i32 0, i32 2, !dbg !5098
  store %struct.KnifeVert* %call17, %struct.KnifeVert** %vert, align 8, !dbg !5099
  %19 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5100
  %curr19 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %19, i32 0, i32 18, !dbg !5102
  %vert20 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr19, i32 0, i32 2, !dbg !5103
  %20 = load %struct.KnifeVert*, %struct.KnifeVert** %vert20, align 8, !dbg !5103
  %tobool = icmp ne %struct.KnifeVert* %20, null, !dbg !5100
  br i1 %tobool, label %if.end34, label %if.then21, !dbg !5104

if.then21:                                        ; preds = %if.end
  %21 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5105
  %22 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5107
  %curr22 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %22, i32 0, i32 18, !dbg !5108
  %co23 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr22, i32 0, i32 0, !dbg !5109
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %co23, i64 0, i64 0, !dbg !5107
  %23 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5110
  %curr25 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %23, i32 0, i32 18, !dbg !5111
  %cage26 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr25, i32 0, i32 1, !dbg !5112
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %cage26, i64 0, i64 0, !dbg !5110
  %24 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5113
  %curr28 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %24, i32 0, i32 18, !dbg !5114
  %bmface29 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr28, i32 0, i32 4, !dbg !5115
  %25 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5116
  %curr30 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %25, i32 0, i32 18, !dbg !5117
  %is_space31 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr30, i32 0, i32 5, !dbg !5118
  %call32 = call %struct.KnifeEdge* @knife_find_closest_edge(%struct.KnifeTool_OpData* %21, float* %arraydecay24, float* %arraydecay27, %struct.BMFace** %bmface29, i8* %is_space31), !dbg !5119
  %26 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5120
  %curr33 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %26, i32 0, i32 18, !dbg !5121
  %edge = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr33, i32 0, i32 3, !dbg !5122
  store %struct.KnifeEdge* %call32, %struct.KnifeEdge** %edge, align 8, !dbg !5123
  br label %if.end34, !dbg !5124

if.end34:                                         ; preds = %if.then21, %if.end
  %27 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5125
  %curr35 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %27, i32 0, i32 18, !dbg !5127
  %vert36 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr35, i32 0, i32 2, !dbg !5128
  %28 = load %struct.KnifeVert*, %struct.KnifeVert** %vert36, align 8, !dbg !5128
  %cmp37 = icmp eq %struct.KnifeVert* %28, null, !dbg !5129
  br i1 %cmp37, label %land.lhs.true38, label %if.end71, !dbg !5130

land.lhs.true38:                                  ; preds = %if.end34
  %29 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5131
  %curr39 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %29, i32 0, i32 18, !dbg !5132
  %edge40 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr39, i32 0, i32 3, !dbg !5133
  %30 = load %struct.KnifeEdge*, %struct.KnifeEdge** %edge40, align 8, !dbg !5133
  %cmp41 = icmp eq %struct.KnifeEdge* %30, null, !dbg !5134
  br i1 %cmp41, label %land.lhs.true42, label %if.end71, !dbg !5135

land.lhs.true42:                                  ; preds = %land.lhs.true38
  %31 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5136
  %curr43 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %31, i32 0, i32 18, !dbg !5137
  %bmface44 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr43, i32 0, i32 4, !dbg !5138
  %32 = load %struct.BMFace*, %struct.BMFace** %bmface44, align 8, !dbg !5138
  %cmp45 = icmp eq %struct.BMFace* %32, null, !dbg !5139
  br i1 %cmp45, label %if.then46, label %if.end71, !dbg !5140

if.then46:                                        ; preds = %land.lhs.true42
  call void @llvm.dbg.declare(metadata [3 x float]* %origin, metadata !5141, metadata !DIExpression()), !dbg !5143
  call void @llvm.dbg.declare(metadata [3 x float]* %origin_ofs, metadata !5144, metadata !DIExpression()), !dbg !5145
  %33 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5146
  %34 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5147
  %curr47 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %34, i32 0, i32 18, !dbg !5148
  %mval48 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr47, i32 0, i32 6, !dbg !5149
  %arraydecay49 = getelementptr inbounds [2 x float], [2 x float]* %mval48, i64 0, i64 0, !dbg !5147
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %origin, i64 0, i64 0, !dbg !5150
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %origin_ofs, i64 0, i64 0, !dbg !5151
  call void @knife_input_ray_segment(%struct.KnifeTool_OpData* %33, float* %arraydecay49, float 1.000000e+00, float* %arraydecay50, float* %arraydecay51), !dbg !5152
  %35 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5153
  %curr52 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %35, i32 0, i32 18, !dbg !5155
  %cage53 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr52, i32 0, i32 1, !dbg !5156
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %cage53, i64 0, i64 0, !dbg !5153
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %origin, i64 0, i64 0, !dbg !5157
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %origin_ofs, i64 0, i64 0, !dbg !5158
  %36 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5159
  %prev57 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %36, i32 0, i32 19, !dbg !5160
  %cage58 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev57, i32 0, i32 1, !dbg !5161
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %cage58, i64 0, i64 0, !dbg !5159
  %37 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5162
  %proj_zaxis = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %37, i32 0, i32 25, !dbg !5163
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %proj_zaxis, i64 0, i64 0, !dbg !5162
  %call61 = call zeroext i8 @isect_line_plane_v3(float* %arraydecay54, float* %arraydecay55, float* %arraydecay56, float* %arraydecay59, float* %arraydecay60), !dbg !5164
  %tobool62 = icmp ne i8 %call61, 0, !dbg !5164
  br i1 %tobool62, label %if.end70, label %if.then63, !dbg !5165

if.then63:                                        ; preds = %if.then46
  %38 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5166
  %curr64 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %38, i32 0, i32 18, !dbg !5168
  %cage65 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr64, i32 0, i32 1, !dbg !5169
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %cage65, i64 0, i64 0, !dbg !5166
  %39 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5170
  %prev67 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %39, i32 0, i32 19, !dbg !5171
  %cage68 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev67, i32 0, i32 1, !dbg !5172
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %cage68, i64 0, i64 0, !dbg !5170
  call void @copy_v3_v3(float* %arraydecay66, float* %arraydecay69), !dbg !5173
  br label %if.end70, !dbg !5174

if.end70:                                         ; preds = %if.then63, %if.then46
  br label %if.end71, !dbg !5175

if.end71:                                         ; preds = %if.end70, %land.lhs.true42, %land.lhs.true38, %if.end34
  %40 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5176
  %mode72 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %40, i32 0, i32 35, !dbg !5178
  %41 = load i32, i32* %mode72, align 4, !dbg !5178
  %cmp73 = icmp eq i32 %41, 1, !dbg !5179
  br i1 %cmp73, label %if.then74, label %if.end75, !dbg !5180

if.then74:                                        ; preds = %if.end71
  %42 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5181
  call void @knife_find_line_hits(%struct.KnifeTool_OpData* %42), !dbg !5183
  br label %if.end75, !dbg !5184

if.end75:                                         ; preds = %if.then74, %if.end71
  ret i32 1, !dbg !5185
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_pos_data_clear(%struct.KnifePosData* %kpd) #0 !dbg !5186 {
entry:
  %kpd.addr = alloca %struct.KnifePosData*, align 8
  store %struct.KnifePosData* %kpd, %struct.KnifePosData** %kpd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifePosData** %kpd.addr, metadata !5190, metadata !DIExpression()), !dbg !5191
  %0 = load %struct.KnifePosData*, %struct.KnifePosData** %kpd.addr, align 8, !dbg !5192
  %co = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %0, i32 0, i32 0, !dbg !5193
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5192
  call void @zero_v3(float* %arraydecay), !dbg !5194
  %1 = load %struct.KnifePosData*, %struct.KnifePosData** %kpd.addr, align 8, !dbg !5195
  %cage = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %1, i32 0, i32 1, !dbg !5196
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %cage, i64 0, i64 0, !dbg !5195
  call void @zero_v3(float* %arraydecay1), !dbg !5197
  %2 = load %struct.KnifePosData*, %struct.KnifePosData** %kpd.addr, align 8, !dbg !5198
  %vert = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %2, i32 0, i32 2, !dbg !5199
  store %struct.KnifeVert* null, %struct.KnifeVert** %vert, align 8, !dbg !5200
  %3 = load %struct.KnifePosData*, %struct.KnifePosData** %kpd.addr, align 8, !dbg !5201
  %edge = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %3, i32 0, i32 3, !dbg !5202
  store %struct.KnifeEdge* null, %struct.KnifeEdge** %edge, align 8, !dbg !5203
  %4 = load %struct.KnifePosData*, %struct.KnifePosData** %kpd.addr, align 8, !dbg !5204
  %bmface = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %4, i32 0, i32 4, !dbg !5205
  store %struct.BMFace* null, %struct.BMFace** %bmface, align 8, !dbg !5206
  %5 = load %struct.KnifePosData*, %struct.KnifePosData** %kpd.addr, align 8, !dbg !5207
  %mval = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %5, i32 0, i32 6, !dbg !5208
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !5207
  call void @zero_v2(float* %arraydecay2), !dbg !5209
  ret void, !dbg !5210
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !5211 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5215, metadata !DIExpression()), !dbg !5216
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5217, metadata !DIExpression()), !dbg !5218
  %0 = load float*, float** %a.addr, align 8, !dbg !5219
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5219
  %1 = load float, float* %arrayidx, align 4, !dbg !5219
  %2 = load float*, float** %r.addr, align 8, !dbg !5220
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5220
  store float %1, float* %arrayidx1, align 4, !dbg !5221
  %3 = load float*, float** %a.addr, align 8, !dbg !5222
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5222
  %4 = load float, float* %arrayidx2, align 4, !dbg !5222
  %5 = load float*, float** %r.addr, align 8, !dbg !5223
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5223
  store float %4, float* %arrayidx3, align 4, !dbg !5224
  ret void, !dbg !5225
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_project_v2(%struct.KnifeTool_OpData* %kcd, float* %co, float* %sco) #0 !dbg !5226 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %co.addr = alloca float*, align 8
  %sco.addr = alloca float*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !5231, metadata !DIExpression()), !dbg !5232
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5233, metadata !DIExpression()), !dbg !5234
  store float* %sco, float** %sco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sco.addr, metadata !5235, metadata !DIExpression()), !dbg !5236
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5237
  %ar = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 0, !dbg !5238
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5238
  %2 = load float*, float** %co.addr, align 8, !dbg !5239
  %3 = load float*, float** %sco.addr, align 8, !dbg !5240
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5241
  %projmat = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %4, i32 0, i32 23, !dbg !5242
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projmat, i64 0, i64 0, !dbg !5241
  call void @ED_view3d_project_float_v2_m4(%struct.ARegion* %1, float* %2, float* %3, [4 x float]* %arraydecay), !dbg !5243
  ret void, !dbg !5244
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @knife_snap_angle(%struct.KnifeTool_OpData* %kcd) #0 !dbg !5245 {
entry:
  %retval = alloca i8, align 1
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %w = alloca float, align 4
  %abs_tan = alloca float, align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !5248, metadata !DIExpression()), !dbg !5249
  call void @llvm.dbg.declare(metadata float* %dx, metadata !5250, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata float* %dy, metadata !5252, metadata !DIExpression()), !dbg !5253
  call void @llvm.dbg.declare(metadata float* %w, metadata !5254, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.declare(metadata float* %abs_tan, metadata !5256, metadata !DIExpression()), !dbg !5257
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5258
  %curr = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 18, !dbg !5259
  %mval = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr, i32 0, i32 6, !dbg !5260
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !5258
  %1 = load float, float* %arrayidx, align 4, !dbg !5258
  %2 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5261
  %prev = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %2, i32 0, i32 19, !dbg !5262
  %mval1 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev, i32 0, i32 6, !dbg !5263
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %mval1, i64 0, i64 0, !dbg !5261
  %3 = load float, float* %arrayidx2, align 4, !dbg !5261
  %sub = fsub float %1, %3, !dbg !5264
  store float %sub, float* %dx, align 4, !dbg !5265
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5266
  %curr3 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %4, i32 0, i32 18, !dbg !5267
  %mval4 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr3, i32 0, i32 6, !dbg !5268
  %arrayidx5 = getelementptr inbounds [2 x float], [2 x float]* %mval4, i64 0, i64 1, !dbg !5266
  %5 = load float, float* %arrayidx5, align 4, !dbg !5266
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5269
  %prev6 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %6, i32 0, i32 19, !dbg !5270
  %mval7 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev6, i32 0, i32 6, !dbg !5271
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %mval7, i64 0, i64 1, !dbg !5269
  %7 = load float, float* %arrayidx8, align 4, !dbg !5269
  %sub9 = fsub float %5, %7, !dbg !5272
  store float %sub9, float* %dy, align 4, !dbg !5273
  %8 = load float, float* %dx, align 4, !dbg !5274
  %cmp = fcmp oeq float %8, 0.000000e+00, !dbg !5276
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5277

land.lhs.true:                                    ; preds = %entry
  %9 = load float, float* %dy, align 4, !dbg !5278
  %cmp10 = fcmp oeq float %9, 0.000000e+00, !dbg !5279
  br i1 %cmp10, label %if.then, label %if.end, !dbg !5280

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !5281
  br label %return, !dbg !5281

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load float, float* %dx, align 4, !dbg !5282
  %cmp11 = fcmp oeq float %10, 0.000000e+00, !dbg !5284
  br i1 %cmp11, label %if.then12, label %if.end19, !dbg !5285

if.then12:                                        ; preds = %if.end
  %11 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5286
  %angle_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %11, i32 0, i32 41, !dbg !5288
  store i32 3, i32* %angle_snapping, align 8, !dbg !5289
  %12 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5290
  %prev13 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %12, i32 0, i32 19, !dbg !5291
  %mval14 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev13, i32 0, i32 6, !dbg !5292
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %mval14, i64 0, i64 0, !dbg !5290
  %13 = load float, float* %arrayidx15, align 4, !dbg !5290
  %14 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5293
  %curr16 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %14, i32 0, i32 18, !dbg !5294
  %mval17 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr16, i32 0, i32 6, !dbg !5295
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %mval17, i64 0, i64 0, !dbg !5293
  store float %13, float* %arrayidx18, align 4, !dbg !5296
  br label %if.end19, !dbg !5297

if.end19:                                         ; preds = %if.then12, %if.end
  %15 = load float, float* %dy, align 4, !dbg !5298
  %16 = load float, float* %dx, align 4, !dbg !5299
  %div = fdiv float %15, %16, !dbg !5300
  store float %div, float* %w, align 4, !dbg !5301
  %17 = load float, float* %w, align 4, !dbg !5302
  %18 = call float @llvm.fabs.f32(float %17), !dbg !5303
  store float %18, float* %abs_tan, align 4, !dbg !5304
  %19 = load float, float* %abs_tan, align 4, !dbg !5305
  %cmp20 = fcmp ole float %19, 0x3FDA8240C0000000, !dbg !5307
  br i1 %cmp20, label %if.then21, label %if.else, !dbg !5308

if.then21:                                        ; preds = %if.end19
  %20 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5309
  %angle_snapping22 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %20, i32 0, i32 41, !dbg !5311
  store i32 1, i32* %angle_snapping22, align 8, !dbg !5312
  %21 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5313
  %prev23 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %21, i32 0, i32 19, !dbg !5314
  %mval24 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev23, i32 0, i32 6, !dbg !5315
  %arrayidx25 = getelementptr inbounds [2 x float], [2 x float]* %mval24, i64 0, i64 1, !dbg !5313
  %22 = load float, float* %arrayidx25, align 4, !dbg !5313
  %23 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5316
  %curr26 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %23, i32 0, i32 18, !dbg !5317
  %mval27 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr26, i32 0, i32 6, !dbg !5318
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %mval27, i64 0, i64 1, !dbg !5316
  store float %22, float* %arrayidx28, align 4, !dbg !5319
  br label %if.end59, !dbg !5320

if.else:                                          ; preds = %if.end19
  %24 = load float, float* %abs_tan, align 4, !dbg !5321
  %cmp29 = fcmp olt float %24, 0x4003504820000000, !dbg !5323
  br i1 %cmp29, label %if.then30, label %if.else50, !dbg !5324

if.then30:                                        ; preds = %if.else
  %25 = load float, float* %w, align 4, !dbg !5325
  %cmp31 = fcmp ogt float %25, 0.000000e+00, !dbg !5328
  br i1 %cmp31, label %if.then32, label %if.else40, !dbg !5329

if.then32:                                        ; preds = %if.then30
  %26 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5330
  %angle_snapping33 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %26, i32 0, i32 41, !dbg !5332
  store i32 2, i32* %angle_snapping33, align 8, !dbg !5333
  %27 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5334
  %prev34 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %27, i32 0, i32 19, !dbg !5335
  %mval35 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev34, i32 0, i32 6, !dbg !5336
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %mval35, i64 0, i64 1, !dbg !5334
  %28 = load float, float* %arrayidx36, align 4, !dbg !5334
  %29 = load float, float* %dx, align 4, !dbg !5337
  %add = fadd float %28, %29, !dbg !5338
  %30 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5339
  %curr37 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %30, i32 0, i32 18, !dbg !5340
  %mval38 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr37, i32 0, i32 6, !dbg !5341
  %arrayidx39 = getelementptr inbounds [2 x float], [2 x float]* %mval38, i64 0, i64 1, !dbg !5339
  store float %add, float* %arrayidx39, align 4, !dbg !5342
  br label %if.end49, !dbg !5343

if.else40:                                        ; preds = %if.then30
  %31 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5344
  %angle_snapping41 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %31, i32 0, i32 41, !dbg !5346
  store i32 4, i32* %angle_snapping41, align 8, !dbg !5347
  %32 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5348
  %prev42 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %32, i32 0, i32 19, !dbg !5349
  %mval43 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev42, i32 0, i32 6, !dbg !5350
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %mval43, i64 0, i64 1, !dbg !5348
  %33 = load float, float* %arrayidx44, align 4, !dbg !5348
  %34 = load float, float* %dx, align 4, !dbg !5351
  %sub45 = fsub float %33, %34, !dbg !5352
  %35 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5353
  %curr46 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %35, i32 0, i32 18, !dbg !5354
  %mval47 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr46, i32 0, i32 6, !dbg !5355
  %arrayidx48 = getelementptr inbounds [2 x float], [2 x float]* %mval47, i64 0, i64 1, !dbg !5353
  store float %sub45, float* %arrayidx48, align 4, !dbg !5356
  br label %if.end49

if.end49:                                         ; preds = %if.else40, %if.then32
  br label %if.end58, !dbg !5357

if.else50:                                        ; preds = %if.else
  %36 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5358
  %angle_snapping51 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %36, i32 0, i32 41, !dbg !5360
  store i32 3, i32* %angle_snapping51, align 8, !dbg !5361
  %37 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5362
  %prev52 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %37, i32 0, i32 19, !dbg !5363
  %mval53 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev52, i32 0, i32 6, !dbg !5364
  %arrayidx54 = getelementptr inbounds [2 x float], [2 x float]* %mval53, i64 0, i64 0, !dbg !5362
  %38 = load float, float* %arrayidx54, align 4, !dbg !5362
  %39 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5365
  %curr55 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %39, i32 0, i32 18, !dbg !5366
  %mval56 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr55, i32 0, i32 6, !dbg !5367
  %arrayidx57 = getelementptr inbounds [2 x float], [2 x float]* %mval56, i64 0, i64 0, !dbg !5365
  store float %38, float* %arrayidx57, align 4, !dbg !5368
  br label %if.end58

if.end58:                                         ; preds = %if.else50, %if.end49
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then21
  %40 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5369
  %mval60 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %40, i32 0, i32 3, !dbg !5370
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval60, i64 0, i64 0, !dbg !5369
  %41 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5371
  %curr61 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %41, i32 0, i32 18, !dbg !5372
  %mval62 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr61, i32 0, i32 6, !dbg !5373
  %arraydecay63 = getelementptr inbounds [2 x float], [2 x float]* %mval62, i64 0, i64 0, !dbg !5371
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay63), !dbg !5374
  store i8 1, i8* %retval, align 1, !dbg !5375
  br label %return, !dbg !5375

return:                                           ; preds = %if.end59, %if.then
  %42 = load i8, i8* %retval, align 1, !dbg !5376
  ret i8 %42, !dbg !5376
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.KnifeVert* @knife_find_closest_vert(%struct.KnifeTool_OpData* %kcd, float* %p, float* %cagep, %struct.BMFace** %fptr, i8* %is_space) #0 !dbg !5377 {
entry:
  %retval = alloca %struct.KnifeVert*, align 8
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %p.addr = alloca float*, align 8
  %cagep.addr = alloca float*, align 8
  %fptr.addr = alloca %struct.BMFace**, align 8
  %is_space.addr = alloca i8*, align 8
  %f = alloca %struct.BMFace*, align 8
  %co = alloca [3 x float], align 4
  %cageco = alloca [3 x float], align 4
  %sco = alloca [2 x float], align 4
  %maxdist = alloca float, align 4
  %maxdist_sq = alloca float, align 4
  %lst = alloca %struct.ListBase*, align 8
  %ref = alloca %struct.Ref*, align 8
  %curv = alloca %struct.KnifeVert*, align 8
  %dis_sq = alloca float, align 4
  %curdis_sq = alloca float, align 4
  %kfe = alloca %struct.KnifeEdge*, align 8
  %i = alloca i32, align 4
  %kfv = alloca %struct.KnifeVert*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !5381, metadata !DIExpression()), !dbg !5382
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !5383, metadata !DIExpression()), !dbg !5384
  store float* %cagep, float** %cagep.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cagep.addr, metadata !5385, metadata !DIExpression()), !dbg !5386
  store %struct.BMFace** %fptr, %struct.BMFace*** %fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %fptr.addr, metadata !5387, metadata !DIExpression()), !dbg !5388
  store i8* %is_space, i8** %is_space.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %is_space.addr, metadata !5389, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !5391, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !5393, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.declare(metadata [3 x float]* %cageco, metadata !5395, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.declare(metadata [2 x float]* %sco, metadata !5397, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.declare(metadata float* %maxdist, metadata !5399, metadata !DIExpression()), !dbg !5400
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5401
  %1 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5402
  %vthresh = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %1, i32 0, i32 14, !dbg !5403
  %2 = load float, float* %vthresh, align 8, !dbg !5403
  %call = call float @knife_snap_size(%struct.KnifeTool_OpData* %0, float %2), !dbg !5404
  store float %call, float* %maxdist, align 4, !dbg !5400
  %3 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5405
  %ignore_vert_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %3, i32 0, i32 39, !dbg !5407
  %4 = load i8, i8* %ignore_vert_snapping, align 2, !dbg !5407
  %tobool = icmp ne i8 %4, 0, !dbg !5405
  br i1 %tobool, label %if.then, label %if.end, !dbg !5408

if.then:                                          ; preds = %entry
  %5 = load float, float* %maxdist, align 4, !dbg !5409
  %mul = fmul float %5, 5.000000e-01, !dbg !5409
  store float %mul, float* %maxdist, align 4, !dbg !5409
  br label %if.end, !dbg !5410

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5411
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5412
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %cageco, i64 0, i64 0, !dbg !5413
  %7 = load i8*, i8** %is_space.addr, align 8, !dbg !5414
  %call2 = call %struct.BMFace* @knife_find_closest_face(%struct.KnifeTool_OpData* %6, float* %arraydecay, float* %arraydecay1, i8* %7), !dbg !5415
  store %struct.BMFace* %call2, %struct.BMFace** %f, align 8, !dbg !5416
  %8 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5417
  %9 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5418
  %curr = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %9, i32 0, i32 18, !dbg !5419
  %bmface = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr, i32 0, i32 4, !dbg !5420
  store %struct.BMFace* %8, %struct.BMFace** %bmface, align 8, !dbg !5421
  %10 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5422
  %tobool3 = icmp ne %struct.BMFace* %10, null, !dbg !5422
  br i1 %tobool3, label %if.then4, label %if.end85, !dbg !5424

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %maxdist_sq, metadata !5425, metadata !DIExpression()), !dbg !5427
  %11 = load float, float* %maxdist, align 4, !dbg !5428
  %12 = load float, float* %maxdist, align 4, !dbg !5429
  %mul5 = fmul float %11, %12, !dbg !5430
  store float %mul5, float* %maxdist_sq, align 4, !dbg !5427
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst, metadata !5431, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref, metadata !5433, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %curv, metadata !5435, metadata !DIExpression()), !dbg !5436
  store %struct.KnifeVert* null, %struct.KnifeVert** %curv, align 8, !dbg !5436
  call void @llvm.dbg.declare(metadata float* %dis_sq, metadata !5437, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.declare(metadata float* %curdis_sq, metadata !5439, metadata !DIExpression()), !dbg !5440
  store float 0x47EFFFFFE0000000, float* %curdis_sq, align 4, !dbg !5440
  %13 = load float*, float** %p.addr, align 8, !dbg !5441
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5442
  call void @copy_v3_v3(float* %13, float* %arraydecay6), !dbg !5443
  %14 = load float*, float** %cagep.addr, align 8, !dbg !5444
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %cageco, i64 0, i64 0, !dbg !5445
  call void @copy_v3_v3(float* %14, float* %arraydecay7), !dbg !5446
  %15 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5447
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %cageco, i64 0, i64 0, !dbg !5448
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %sco, i64 0, i64 0, !dbg !5449
  call void @knife_project_v2(%struct.KnifeTool_OpData* %15, float* %arraydecay8, float* %arraydecay9), !dbg !5450
  %16 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5451
  %17 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5452
  %call10 = call %struct.ListBase* @knife_get_face_kedges(%struct.KnifeTool_OpData* %16, %struct.BMFace* %17), !dbg !5453
  store %struct.ListBase* %call10, %struct.ListBase** %lst, align 8, !dbg !5454
  %18 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !5455
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %18, i32 0, i32 0, !dbg !5457
  %19 = load i8*, i8** %first, align 8, !dbg !5457
  %20 = bitcast i8* %19 to %struct.Ref*, !dbg !5455
  store %struct.Ref* %20, %struct.Ref** %ref, align 8, !dbg !5458
  br label %for.cond, !dbg !5459

for.cond:                                         ; preds = %for.inc54, %if.then4
  %21 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !5460
  %tobool11 = icmp ne %struct.Ref* %21, null, !dbg !5462
  br i1 %tobool11, label %for.body, label %for.end55, !dbg !5462

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !5463, metadata !DIExpression()), !dbg !5465
  %22 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !5466
  %ref12 = getelementptr inbounds %struct.Ref, %struct.Ref* %22, i32 0, i32 2, !dbg !5467
  %23 = load i8*, i8** %ref12, align 8, !dbg !5467
  %24 = bitcast i8* %23 to %struct.KnifeEdge*, !dbg !5466
  store %struct.KnifeEdge* %24, %struct.KnifeEdge** %kfe, align 8, !dbg !5465
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5468, metadata !DIExpression()), !dbg !5469
  store i32 0, i32* %i, align 4, !dbg !5470
  br label %for.cond13, !dbg !5472

for.cond13:                                       ; preds = %for.inc, %for.body
  %25 = load i32, i32* %i, align 4, !dbg !5473
  %cmp = icmp slt i32 %25, 2, !dbg !5475
  br i1 %cmp, label %for.body14, label %for.end, !dbg !5476

for.body14:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv, metadata !5477, metadata !DIExpression()), !dbg !5479
  %26 = load i32, i32* %i, align 4, !dbg !5480
  %tobool15 = icmp ne i32 %26, 0, !dbg !5480
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !5480

cond.true:                                        ; preds = %for.body14
  %27 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5481
  %v2 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %27, i32 0, i32 1, !dbg !5482
  %28 = load %struct.KnifeVert*, %struct.KnifeVert** %v2, align 8, !dbg !5482
  br label %cond.end, !dbg !5480

cond.false:                                       ; preds = %for.body14
  %29 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5483
  %v1 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %29, i32 0, i32 0, !dbg !5484
  %30 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !5484
  br label %cond.end, !dbg !5480

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.KnifeVert* [ %28, %cond.true ], [ %30, %cond.false ], !dbg !5480
  store %struct.KnifeVert* %cond, %struct.KnifeVert** %kfv, align 8, !dbg !5479
  %31 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5485
  %32 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !5486
  %cageco16 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %32, i32 0, i32 4, !dbg !5487
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %cageco16, i64 0, i64 0, !dbg !5486
  %33 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !5488
  %sco18 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %33, i32 0, i32 5, !dbg !5489
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %sco18, i64 0, i64 0, !dbg !5488
  call void @knife_project_v2(%struct.KnifeTool_OpData* %31, float* %arraydecay17, float* %arraydecay19), !dbg !5490
  %34 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5491
  %is_angle_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %34, i32 0, i32 40, !dbg !5493
  %35 = load i8, i8* %is_angle_snapping, align 1, !dbg !5493
  %tobool20 = icmp ne i8 %35, 0, !dbg !5491
  br i1 %tobool20, label %if.then21, label %if.end32, !dbg !5494

if.then21:                                        ; preds = %cond.end
  %36 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !5495
  %sco22 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %36, i32 0, i32 5, !dbg !5498
  %arraydecay23 = getelementptr inbounds [2 x float], [2 x float]* %sco22, i64 0, i64 0, !dbg !5495
  %37 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5499
  %prev = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %37, i32 0, i32 19, !dbg !5500
  %mval = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev, i32 0, i32 6, !dbg !5501
  %arraydecay24 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !5499
  %38 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5502
  %curr25 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %38, i32 0, i32 18, !dbg !5503
  %mval26 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr25, i32 0, i32 6, !dbg !5504
  %arraydecay27 = getelementptr inbounds [2 x float], [2 x float]* %mval26, i64 0, i64 0, !dbg !5502
  %call28 = call float @dist_squared_to_line_segment_v2(float* %arraydecay23, float* %arraydecay24, float* %arraydecay27), !dbg !5505
  %cmp29 = fcmp ogt float %call28, 0x3F40624DE0000000, !dbg !5506
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !5507

if.then30:                                        ; preds = %if.then21
  br label %for.inc, !dbg !5508

if.end31:                                         ; preds = %if.then21
  br label %if.end32, !dbg !5510

if.end32:                                         ; preds = %if.end31, %cond.end
  %39 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !5511
  %sco33 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %39, i32 0, i32 5, !dbg !5512
  %arraydecay34 = getelementptr inbounds [2 x float], [2 x float]* %sco33, i64 0, i64 0, !dbg !5511
  %arraydecay35 = getelementptr inbounds [2 x float], [2 x float]* %sco, i64 0, i64 0, !dbg !5513
  %call36 = call float @len_squared_v2v2(float* %arraydecay34, float* %arraydecay35), !dbg !5514
  store float %call36, float* %dis_sq, align 4, !dbg !5515
  %40 = load float, float* %dis_sq, align 4, !dbg !5516
  %41 = load float, float* %curdis_sq, align 4, !dbg !5518
  %cmp37 = fcmp olt float %40, %41, !dbg !5519
  br i1 %cmp37, label %land.lhs.true, label %if.end53, !dbg !5520

land.lhs.true:                                    ; preds = %if.end32
  %42 = load float, float* %dis_sq, align 4, !dbg !5521
  %43 = load float, float* %maxdist_sq, align 4, !dbg !5522
  %cmp38 = fcmp olt float %42, %43, !dbg !5523
  br i1 %cmp38, label %if.then39, label %if.end53, !dbg !5524

if.then39:                                        ; preds = %land.lhs.true
  %44 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5525
  %vc = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %44, i32 0, i32 2, !dbg !5528
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !5529
  %45 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !5529
  %rflag = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %45, i32 0, i32 32, !dbg !5530
  %46 = load i16, i16* %rflag, align 2, !dbg !5530
  %conv = sext i16 %46 to i32, !dbg !5525
  %and = and i32 %conv, 4, !dbg !5531
  %tobool40 = icmp ne i32 %and, 0, !dbg !5531
  br i1 %tobool40, label %if.then41, label %if.else, !dbg !5532

if.then41:                                        ; preds = %if.then39
  %47 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5533
  %vc42 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %47, i32 0, i32 2, !dbg !5536
  %rv3d43 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc42, i32 0, i32 5, !dbg !5537
  %48 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d43, align 8, !dbg !5537
  %49 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !5538
  %cageco44 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %49, i32 0, i32 4, !dbg !5539
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %cageco44, i64 0, i64 0, !dbg !5538
  %call46 = call zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D* %48, float* %arraydecay45, i8 zeroext 1), !dbg !5540
  %conv47 = zext i8 %call46 to i32, !dbg !5540
  %cmp48 = icmp eq i32 %conv47, 0, !dbg !5541
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !5542

if.then50:                                        ; preds = %if.then41
  %50 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !5543
  store %struct.KnifeVert* %50, %struct.KnifeVert** %curv, align 8, !dbg !5545
  %51 = load float, float* %dis_sq, align 4, !dbg !5546
  store float %51, float* %curdis_sq, align 4, !dbg !5547
  br label %if.end51, !dbg !5548

if.end51:                                         ; preds = %if.then50, %if.then41
  br label %if.end52, !dbg !5549

if.else:                                          ; preds = %if.then39
  %52 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !5550
  store %struct.KnifeVert* %52, %struct.KnifeVert** %curv, align 8, !dbg !5552
  %53 = load float, float* %dis_sq, align 4, !dbg !5553
  store float %53, float* %curdis_sq, align 4, !dbg !5554
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.end51
  br label %if.end53, !dbg !5555

if.end53:                                         ; preds = %if.end52, %land.lhs.true, %if.end32
  br label %for.inc, !dbg !5556

for.inc:                                          ; preds = %if.end53, %if.then30
  %54 = load i32, i32* %i, align 4, !dbg !5557
  %inc = add nsw i32 %54, 1, !dbg !5557
  store i32 %inc, i32* %i, align 4, !dbg !5557
  br label %for.cond13, !dbg !5558, !llvm.loop !5559

for.end:                                          ; preds = %for.cond13
  br label %for.inc54, !dbg !5561

for.inc54:                                        ; preds = %for.end
  %55 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !5562
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %55, i32 0, i32 0, !dbg !5563
  %56 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !5563
  store %struct.Ref* %56, %struct.Ref** %ref, align 8, !dbg !5564
  br label %for.cond, !dbg !5565, !llvm.loop !5566

for.end55:                                        ; preds = %for.cond
  %57 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5568
  %ignore_vert_snapping56 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %57, i32 0, i32 39, !dbg !5570
  %58 = load i8, i8* %ignore_vert_snapping56, align 2, !dbg !5570
  %tobool57 = icmp ne i8 %58, 0, !dbg !5568
  br i1 %tobool57, label %lor.lhs.false, label %if.then61, !dbg !5571

lor.lhs.false:                                    ; preds = %for.end55
  %59 = load %struct.KnifeVert*, %struct.KnifeVert** %curv, align 8, !dbg !5572
  %tobool58 = icmp ne %struct.KnifeVert* %59, null, !dbg !5572
  br i1 %tobool58, label %land.lhs.true59, label %if.then61, !dbg !5573

land.lhs.true59:                                  ; preds = %lor.lhs.false
  %60 = load %struct.KnifeVert*, %struct.KnifeVert** %curv, align 8, !dbg !5574
  %v = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %60, i32 0, i32 0, !dbg !5575
  %61 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !5575
  %tobool60 = icmp ne %struct.BMVert* %61, null, !dbg !5574
  br i1 %tobool60, label %if.else81, label %if.then61, !dbg !5576

if.then61:                                        ; preds = %land.lhs.true59, %lor.lhs.false, %for.end55
  %62 = load %struct.BMFace**, %struct.BMFace*** %fptr.addr, align 8, !dbg !5577
  %tobool62 = icmp ne %struct.BMFace** %62, null, !dbg !5577
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !5580

if.then63:                                        ; preds = %if.then61
  %63 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5581
  %64 = load %struct.BMFace**, %struct.BMFace*** %fptr.addr, align 8, !dbg !5582
  store %struct.BMFace* %63, %struct.BMFace** %64, align 8, !dbg !5583
  br label %if.end64, !dbg !5584

if.end64:                                         ; preds = %if.then63, %if.then61
  %65 = load %struct.KnifeVert*, %struct.KnifeVert** %curv, align 8, !dbg !5585
  %tobool65 = icmp ne %struct.KnifeVert* %65, null, !dbg !5585
  br i1 %tobool65, label %if.then66, label %if.end80, !dbg !5587

if.then66:                                        ; preds = %if.end64
  %66 = load float*, float** %p.addr, align 8, !dbg !5588
  %67 = load %struct.KnifeVert*, %struct.KnifeVert** %curv, align 8, !dbg !5590
  %co67 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %67, i32 0, i32 3, !dbg !5591
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %co67, i64 0, i64 0, !dbg !5590
  call void @copy_v3_v3(float* %66, float* %arraydecay68), !dbg !5592
  %68 = load float*, float** %cagep.addr, align 8, !dbg !5593
  %69 = load %struct.KnifeVert*, %struct.KnifeVert** %curv, align 8, !dbg !5594
  %cageco69 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %69, i32 0, i32 4, !dbg !5595
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %cageco69, i64 0, i64 0, !dbg !5594
  call void @copy_v3_v3(float* %68, float* %arraydecay70), !dbg !5596
  %70 = load %struct.KnifeVert*, %struct.KnifeVert** %curv, align 8, !dbg !5597
  %sco71 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %70, i32 0, i32 5, !dbg !5598
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %sco71, i64 0, i64 0, !dbg !5597
  %71 = load float, float* %arrayidx, align 8, !dbg !5597
  %72 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5599
  %curr72 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %72, i32 0, i32 18, !dbg !5600
  %mval73 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr72, i32 0, i32 6, !dbg !5601
  %arrayidx74 = getelementptr inbounds [2 x float], [2 x float]* %mval73, i64 0, i64 0, !dbg !5599
  store float %71, float* %arrayidx74, align 4, !dbg !5602
  %73 = load %struct.KnifeVert*, %struct.KnifeVert** %curv, align 8, !dbg !5603
  %sco75 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %73, i32 0, i32 5, !dbg !5604
  %arrayidx76 = getelementptr inbounds [2 x float], [2 x float]* %sco75, i64 0, i64 1, !dbg !5603
  %74 = load float, float* %arrayidx76, align 4, !dbg !5603
  %75 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5605
  %curr77 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %75, i32 0, i32 18, !dbg !5606
  %mval78 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr77, i32 0, i32 6, !dbg !5607
  %arrayidx79 = getelementptr inbounds [2 x float], [2 x float]* %mval78, i64 0, i64 1, !dbg !5605
  store float %74, float* %arrayidx79, align 4, !dbg !5608
  br label %if.end80, !dbg !5609

if.end80:                                         ; preds = %if.then66, %if.end64
  %76 = load %struct.KnifeVert*, %struct.KnifeVert** %curv, align 8, !dbg !5610
  store %struct.KnifeVert* %76, %struct.KnifeVert** %retval, align 8, !dbg !5611
  br label %return, !dbg !5611

if.else81:                                        ; preds = %land.lhs.true59
  %77 = load %struct.BMFace**, %struct.BMFace*** %fptr.addr, align 8, !dbg !5612
  %tobool82 = icmp ne %struct.BMFace** %77, null, !dbg !5612
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !5615

if.then83:                                        ; preds = %if.else81
  %78 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5616
  %79 = load %struct.BMFace**, %struct.BMFace*** %fptr.addr, align 8, !dbg !5617
  store %struct.BMFace* %78, %struct.BMFace** %79, align 8, !dbg !5618
  br label %if.end84, !dbg !5619

if.end84:                                         ; preds = %if.then83, %if.else81
  store %struct.KnifeVert* null, %struct.KnifeVert** %retval, align 8, !dbg !5620
  br label %return, !dbg !5620

if.end85:                                         ; preds = %if.end
  %80 = load %struct.BMFace**, %struct.BMFace*** %fptr.addr, align 8, !dbg !5621
  %tobool86 = icmp ne %struct.BMFace** %80, null, !dbg !5621
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !5623

if.then87:                                        ; preds = %if.end85
  %81 = load %struct.BMFace**, %struct.BMFace*** %fptr.addr, align 8, !dbg !5624
  store %struct.BMFace* null, %struct.BMFace** %81, align 8, !dbg !5625
  br label %if.end88, !dbg !5626

if.end88:                                         ; preds = %if.then87, %if.end85
  store %struct.KnifeVert* null, %struct.KnifeVert** %retval, align 8, !dbg !5627
  br label %return, !dbg !5627

return:                                           ; preds = %if.end88, %if.end84, %if.end80
  %82 = load %struct.KnifeVert*, %struct.KnifeVert** %retval, align 8, !dbg !5628
  ret %struct.KnifeVert* %82, !dbg !5628
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.KnifeEdge* @knife_find_closest_edge(%struct.KnifeTool_OpData* %kcd, float* %p, float* %cagep, %struct.BMFace** %fptr, i8* %is_space) #0 !dbg !5629 {
entry:
  %retval = alloca %struct.KnifeEdge*, align 8
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %p.addr = alloca float*, align 8
  %cagep.addr = alloca float*, align 8
  %fptr.addr = alloca %struct.BMFace**, align 8
  %is_space.addr = alloca i8*, align 8
  %f = alloca %struct.BMFace*, align 8
  %co = alloca [3 x float], align 4
  %cageco = alloca [3 x float], align 4
  %sco = alloca [2 x float], align 4
  %maxdist = alloca float, align 4
  %maxdist_sq = alloca float, align 4
  %cure = alloca %struct.KnifeEdge*, align 8
  %cur_cagep = alloca [3 x float], align 4
  %lst = alloca %struct.ListBase*, align 8
  %ref = alloca %struct.Ref*, align 8
  %dis_sq = alloca float, align 4
  %curdis_sq = alloca float, align 4
  %kfe = alloca %struct.KnifeEdge*, align 8
  %test_cagep = alloca [3 x float], align 4
  %lambda = alloca float, align 4
  %sco_snap = alloca [2 x float], align 4
  %edgesnap = alloca %struct.KnifeVert*, align 8
  %lambda130 = alloca float, align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !5632, metadata !DIExpression()), !dbg !5633
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !5634, metadata !DIExpression()), !dbg !5635
  store float* %cagep, float** %cagep.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cagep.addr, metadata !5636, metadata !DIExpression()), !dbg !5637
  store %struct.BMFace** %fptr, %struct.BMFace*** %fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %fptr.addr, metadata !5638, metadata !DIExpression()), !dbg !5639
  store i8* %is_space, i8** %is_space.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %is_space.addr, metadata !5640, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !5642, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !5644, metadata !DIExpression()), !dbg !5645
  call void @llvm.dbg.declare(metadata [3 x float]* %cageco, metadata !5646, metadata !DIExpression()), !dbg !5647
  call void @llvm.dbg.declare(metadata [2 x float]* %sco, metadata !5648, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.declare(metadata float* %maxdist, metadata !5650, metadata !DIExpression()), !dbg !5651
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5652
  %1 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5653
  %ethresh = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %1, i32 0, i32 15, !dbg !5654
  %2 = load float, float* %ethresh, align 4, !dbg !5654
  %call = call float @knife_snap_size(%struct.KnifeTool_OpData* %0, float %2), !dbg !5655
  store float %call, float* %maxdist, align 4, !dbg !5651
  %3 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5656
  %ignore_vert_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %3, i32 0, i32 39, !dbg !5658
  %4 = load i8, i8* %ignore_vert_snapping, align 2, !dbg !5658
  %tobool = icmp ne i8 %4, 0, !dbg !5656
  br i1 %tobool, label %if.then, label %if.end, !dbg !5659

if.then:                                          ; preds = %entry
  %5 = load float, float* %maxdist, align 4, !dbg !5660
  %mul = fmul float %5, 5.000000e-01, !dbg !5660
  store float %mul, float* %maxdist, align 4, !dbg !5660
  br label %if.end, !dbg !5661

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5662
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5663
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %cageco, i64 0, i64 0, !dbg !5664
  %call2 = call %struct.BMFace* @knife_find_closest_face(%struct.KnifeTool_OpData* %6, float* %arraydecay, float* %arraydecay1, i8* null), !dbg !5665
  store %struct.BMFace* %call2, %struct.BMFace** %f, align 8, !dbg !5666
  %7 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5667
  %tobool3 = icmp ne %struct.BMFace* %7, null, !dbg !5668
  %lnot = xor i1 %tobool3, true, !dbg !5668
  %lnot.ext = zext i1 %lnot to i32, !dbg !5668
  %conv = trunc i32 %lnot.ext to i8, !dbg !5668
  %8 = load i8*, i8** %is_space.addr, align 8, !dbg !5669
  store i8 %conv, i8* %8, align 1, !dbg !5670
  %9 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5671
  %10 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5672
  %curr = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %10, i32 0, i32 18, !dbg !5673
  %bmface = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr, i32 0, i32 4, !dbg !5674
  store %struct.BMFace* %9, %struct.BMFace** %bmface, align 8, !dbg !5675
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5676
  %tobool4 = icmp ne %struct.BMFace* %11, null, !dbg !5676
  br i1 %tobool4, label %if.then5, label %if.end160, !dbg !5678

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %maxdist_sq, metadata !5679, metadata !DIExpression()), !dbg !5681
  %12 = load float, float* %maxdist, align 4, !dbg !5682
  %13 = load float, float* %maxdist, align 4, !dbg !5683
  %mul6 = fmul float %12, %13, !dbg !5684
  store float %mul6, float* %maxdist_sq, align 4, !dbg !5681
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %cure, metadata !5685, metadata !DIExpression()), !dbg !5686
  store %struct.KnifeEdge* null, %struct.KnifeEdge** %cure, align 8, !dbg !5686
  call void @llvm.dbg.declare(metadata [3 x float]* %cur_cagep, metadata !5687, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst, metadata !5689, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref, metadata !5691, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.declare(metadata float* %dis_sq, metadata !5693, metadata !DIExpression()), !dbg !5694
  call void @llvm.dbg.declare(metadata float* %curdis_sq, metadata !5695, metadata !DIExpression()), !dbg !5696
  store float 0x47EFFFFFE0000000, float* %curdis_sq, align 4, !dbg !5696
  %14 = load float*, float** %p.addr, align 8, !dbg !5697
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5698
  call void @copy_v3_v3(float* %14, float* %arraydecay7), !dbg !5699
  %15 = load float*, float** %cagep.addr, align 8, !dbg !5700
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %cageco, i64 0, i64 0, !dbg !5701
  call void @copy_v3_v3(float* %15, float* %arraydecay8), !dbg !5702
  %16 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5703
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %cageco, i64 0, i64 0, !dbg !5704
  %arraydecay10 = getelementptr inbounds [2 x float], [2 x float]* %sco, i64 0, i64 0, !dbg !5705
  call void @knife_project_v2(%struct.KnifeTool_OpData* %16, float* %arraydecay9, float* %arraydecay10), !dbg !5706
  %17 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5707
  %18 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5708
  %call11 = call %struct.ListBase* @knife_get_face_kedges(%struct.KnifeTool_OpData* %17, %struct.BMFace* %18), !dbg !5709
  store %struct.ListBase* %call11, %struct.ListBase** %lst, align 8, !dbg !5710
  %19 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !5711
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %19, i32 0, i32 0, !dbg !5713
  %20 = load i8*, i8** %first, align 8, !dbg !5713
  %21 = bitcast i8* %20 to %struct.Ref*, !dbg !5711
  store %struct.Ref* %21, %struct.Ref** %ref, align 8, !dbg !5714
  br label %for.cond, !dbg !5715

for.cond:                                         ; preds = %for.inc, %if.then5
  %22 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !5716
  %tobool12 = icmp ne %struct.Ref* %22, null, !dbg !5718
  br i1 %tobool12, label %for.body, label %for.end, !dbg !5718

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !5719, metadata !DIExpression()), !dbg !5721
  %23 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !5722
  %ref13 = getelementptr inbounds %struct.Ref, %struct.Ref* %23, i32 0, i32 2, !dbg !5723
  %24 = load i8*, i8** %ref13, align 8, !dbg !5723
  %25 = bitcast i8* %24 to %struct.KnifeEdge*, !dbg !5722
  store %struct.KnifeEdge* %25, %struct.KnifeEdge** %kfe, align 8, !dbg !5721
  call void @llvm.dbg.declare(metadata [3 x float]* %test_cagep, metadata !5724, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !5726, metadata !DIExpression()), !dbg !5727
  %26 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5728
  %27 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5729
  %v1 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %27, i32 0, i32 0, !dbg !5730
  %28 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !5730
  %cageco14 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %28, i32 0, i32 4, !dbg !5731
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %cageco14, i64 0, i64 0, !dbg !5729
  %29 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5732
  %v116 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %29, i32 0, i32 0, !dbg !5733
  %30 = load %struct.KnifeVert*, %struct.KnifeVert** %v116, align 8, !dbg !5733
  %sco17 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %30, i32 0, i32 5, !dbg !5734
  %arraydecay18 = getelementptr inbounds [2 x float], [2 x float]* %sco17, i64 0, i64 0, !dbg !5732
  call void @knife_project_v2(%struct.KnifeTool_OpData* %26, float* %arraydecay15, float* %arraydecay18), !dbg !5735
  %31 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5736
  %32 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5737
  %v2 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %32, i32 0, i32 1, !dbg !5738
  %33 = load %struct.KnifeVert*, %struct.KnifeVert** %v2, align 8, !dbg !5738
  %cageco19 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %33, i32 0, i32 4, !dbg !5739
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %cageco19, i64 0, i64 0, !dbg !5737
  %34 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5740
  %v221 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %34, i32 0, i32 1, !dbg !5741
  %35 = load %struct.KnifeVert*, %struct.KnifeVert** %v221, align 8, !dbg !5741
  %sco22 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %35, i32 0, i32 5, !dbg !5742
  %arraydecay23 = getelementptr inbounds [2 x float], [2 x float]* %sco22, i64 0, i64 0, !dbg !5740
  call void @knife_project_v2(%struct.KnifeTool_OpData* %31, float* %arraydecay20, float* %arraydecay23), !dbg !5743
  %36 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5744
  %is_angle_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %36, i32 0, i32 40, !dbg !5746
  %37 = load i8, i8* %is_angle_snapping, align 1, !dbg !5746
  %tobool24 = icmp ne i8 %37, 0, !dbg !5744
  br i1 %tobool24, label %if.then25, label %if.else60, !dbg !5747

if.then25:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata [2 x float]* %sco_snap, metadata !5748, metadata !DIExpression()), !dbg !5750
  %38 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5751
  %v126 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %38, i32 0, i32 0, !dbg !5752
  %39 = load %struct.KnifeVert*, %struct.KnifeVert** %v126, align 8, !dbg !5752
  %sco27 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %39, i32 0, i32 5, !dbg !5753
  %arraydecay28 = getelementptr inbounds [2 x float], [2 x float]* %sco27, i64 0, i64 0, !dbg !5751
  %40 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5754
  %v229 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %40, i32 0, i32 1, !dbg !5755
  %41 = load %struct.KnifeVert*, %struct.KnifeVert** %v229, align 8, !dbg !5755
  %sco30 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %41, i32 0, i32 5, !dbg !5756
  %arraydecay31 = getelementptr inbounds [2 x float], [2 x float]* %sco30, i64 0, i64 0, !dbg !5754
  %42 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5757
  %prev = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %42, i32 0, i32 19, !dbg !5758
  %mval = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev, i32 0, i32 6, !dbg !5759
  %arraydecay32 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !5757
  %43 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5760
  %curr33 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %43, i32 0, i32 18, !dbg !5761
  %mval34 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr33, i32 0, i32 6, !dbg !5762
  %arraydecay35 = getelementptr inbounds [2 x float], [2 x float]* %mval34, i64 0, i64 0, !dbg !5760
  %arraydecay36 = getelementptr inbounds [2 x float], [2 x float]* %sco_snap, i64 0, i64 0, !dbg !5763
  %call37 = call i32 @isect_line_line_v2_point(float* %arraydecay28, float* %arraydecay31, float* %arraydecay32, float* %arraydecay35, float* %arraydecay36), !dbg !5764
  %arraydecay38 = getelementptr inbounds [2 x float], [2 x float]* %sco_snap, i64 0, i64 0, !dbg !5765
  %44 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5766
  %v139 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %44, i32 0, i32 0, !dbg !5767
  %45 = load %struct.KnifeVert*, %struct.KnifeVert** %v139, align 8, !dbg !5767
  %sco40 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %45, i32 0, i32 5, !dbg !5768
  %arraydecay41 = getelementptr inbounds [2 x float], [2 x float]* %sco40, i64 0, i64 0, !dbg !5766
  %46 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5769
  %v242 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %46, i32 0, i32 1, !dbg !5770
  %47 = load %struct.KnifeVert*, %struct.KnifeVert** %v242, align 8, !dbg !5770
  %sco43 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %47, i32 0, i32 5, !dbg !5771
  %arraydecay44 = getelementptr inbounds [2 x float], [2 x float]* %sco43, i64 0, i64 0, !dbg !5769
  %call45 = call float @line_point_factor_v2(float* %arraydecay38, float* %arraydecay41, float* %arraydecay44), !dbg !5772
  store float %call45, float* %lambda, align 4, !dbg !5773
  %48 = load float, float* %lambda, align 4, !dbg !5774
  %cmp = fcmp olt float %48, 0xBF40624DE0000000, !dbg !5776
  br i1 %cmp, label %if.then49, label %lor.lhs.false, !dbg !5777

lor.lhs.false:                                    ; preds = %if.then25
  %49 = load float, float* %lambda, align 4, !dbg !5778
  %cmp47 = fcmp ogt float %49, 0x3FF0020C40000000, !dbg !5779
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !5780

if.then49:                                        ; preds = %lor.lhs.false, %if.then25
  br label %for.inc, !dbg !5781

if.end50:                                         ; preds = %lor.lhs.false
  %arraydecay51 = getelementptr inbounds [2 x float], [2 x float]* %sco, i64 0, i64 0, !dbg !5783
  %arraydecay52 = getelementptr inbounds [2 x float], [2 x float]* %sco_snap, i64 0, i64 0, !dbg !5784
  %call53 = call float @len_squared_v2v2(float* %arraydecay51, float* %arraydecay52), !dbg !5785
  store float %call53, float* %dis_sq, align 4, !dbg !5786
  %50 = load float, float* %dis_sq, align 4, !dbg !5787
  %51 = load float, float* %curdis_sq, align 4, !dbg !5789
  %cmp54 = fcmp olt float %50, %51, !dbg !5790
  br i1 %cmp54, label %land.lhs.true, label %if.else, !dbg !5791

land.lhs.true:                                    ; preds = %if.end50
  %52 = load float, float* %dis_sq, align 4, !dbg !5792
  %53 = load float, float* %maxdist_sq, align 4, !dbg !5793
  %cmp56 = fcmp olt float %52, %53, !dbg !5794
  br i1 %cmp56, label %if.then58, label %if.else, !dbg !5795

if.then58:                                        ; preds = %land.lhs.true
  br label %if.end59, !dbg !5796

if.else:                                          ; preds = %land.lhs.true, %if.end50
  br label %for.inc, !dbg !5798

if.end59:                                         ; preds = %if.then58
  br label %if.end85, !dbg !5800

if.else60:                                        ; preds = %for.body
  %arraydecay61 = getelementptr inbounds [2 x float], [2 x float]* %sco, i64 0, i64 0, !dbg !5801
  %54 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5803
  %v162 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %54, i32 0, i32 0, !dbg !5804
  %55 = load %struct.KnifeVert*, %struct.KnifeVert** %v162, align 8, !dbg !5804
  %sco63 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %55, i32 0, i32 5, !dbg !5805
  %arraydecay64 = getelementptr inbounds [2 x float], [2 x float]* %sco63, i64 0, i64 0, !dbg !5803
  %56 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5806
  %v265 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %56, i32 0, i32 1, !dbg !5807
  %57 = load %struct.KnifeVert*, %struct.KnifeVert** %v265, align 8, !dbg !5807
  %sco66 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %57, i32 0, i32 5, !dbg !5808
  %arraydecay67 = getelementptr inbounds [2 x float], [2 x float]* %sco66, i64 0, i64 0, !dbg !5806
  %call68 = call float @dist_squared_to_line_segment_v2(float* %arraydecay61, float* %arraydecay64, float* %arraydecay67), !dbg !5809
  store float %call68, float* %dis_sq, align 4, !dbg !5810
  %58 = load float, float* %dis_sq, align 4, !dbg !5811
  %59 = load float, float* %curdis_sq, align 4, !dbg !5813
  %cmp69 = fcmp olt float %58, %59, !dbg !5814
  br i1 %cmp69, label %land.lhs.true71, label %if.else83, !dbg !5815

land.lhs.true71:                                  ; preds = %if.else60
  %60 = load float, float* %dis_sq, align 4, !dbg !5816
  %61 = load float, float* %maxdist_sq, align 4, !dbg !5817
  %cmp72 = fcmp olt float %60, %61, !dbg !5818
  br i1 %cmp72, label %if.then74, label %if.else83, !dbg !5819

if.then74:                                        ; preds = %land.lhs.true71
  %arraydecay75 = getelementptr inbounds [2 x float], [2 x float]* %sco, i64 0, i64 0, !dbg !5820
  %62 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5822
  %v176 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %62, i32 0, i32 0, !dbg !5823
  %63 = load %struct.KnifeVert*, %struct.KnifeVert** %v176, align 8, !dbg !5823
  %sco77 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %63, i32 0, i32 5, !dbg !5824
  %arraydecay78 = getelementptr inbounds [2 x float], [2 x float]* %sco77, i64 0, i64 0, !dbg !5822
  %64 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5825
  %v279 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %64, i32 0, i32 1, !dbg !5826
  %65 = load %struct.KnifeVert*, %struct.KnifeVert** %v279, align 8, !dbg !5826
  %sco80 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %65, i32 0, i32 5, !dbg !5827
  %arraydecay81 = getelementptr inbounds [2 x float], [2 x float]* %sco80, i64 0, i64 0, !dbg !5825
  %call82 = call float @line_point_factor_v2(float* %arraydecay75, float* %arraydecay78, float* %arraydecay81), !dbg !5828
  store float %call82, float* %lambda, align 4, !dbg !5829
  br label %if.end84, !dbg !5830

if.else83:                                        ; preds = %land.lhs.true71, %if.else60
  br label %for.inc, !dbg !5831

if.end84:                                         ; preds = %if.then74
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end59
  %66 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5833
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %test_cagep, i64 0, i64 0, !dbg !5834
  %67 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5835
  %v187 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %67, i32 0, i32 0, !dbg !5836
  %68 = load %struct.KnifeVert*, %struct.KnifeVert** %v187, align 8, !dbg !5836
  %cageco88 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %68, i32 0, i32 4, !dbg !5837
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %cageco88, i64 0, i64 0, !dbg !5835
  %69 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5838
  %v290 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %69, i32 0, i32 1, !dbg !5839
  %70 = load %struct.KnifeVert*, %struct.KnifeVert** %v290, align 8, !dbg !5839
  %cageco91 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %70, i32 0, i32 4, !dbg !5840
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %cageco91, i64 0, i64 0, !dbg !5838
  %71 = load float, float* %lambda, align 4, !dbg !5841
  call void @knife_interp_v3_v3v3(%struct.KnifeTool_OpData* %66, float* %arraydecay86, float* %arraydecay89, float* %arraydecay92, float %71), !dbg !5842
  %72 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5843
  %vc = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %72, i32 0, i32 2, !dbg !5845
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !5846
  %73 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !5846
  %rflag = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %73, i32 0, i32 32, !dbg !5847
  %74 = load i16, i16* %rflag, align 2, !dbg !5847
  %conv93 = sext i16 %74 to i32, !dbg !5843
  %and = and i32 %conv93, 4, !dbg !5848
  %tobool94 = icmp ne i32 %and, 0, !dbg !5848
  br i1 %tobool94, label %if.then95, label %if.end103, !dbg !5849

if.then95:                                        ; preds = %if.end85
  %75 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5850
  %vc96 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %75, i32 0, i32 2, !dbg !5853
  %rv3d97 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc96, i32 0, i32 5, !dbg !5854
  %76 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d97, align 8, !dbg !5854
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %test_cagep, i64 0, i64 0, !dbg !5855
  %call99 = call zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D* %76, float* %arraydecay98, i8 zeroext 1), !dbg !5856
  %tobool100 = icmp ne i8 %call99, 0, !dbg !5856
  br i1 %tobool100, label %if.then101, label %if.end102, !dbg !5857

if.then101:                                       ; preds = %if.then95
  br label %for.inc, !dbg !5858

if.end102:                                        ; preds = %if.then95
  br label %if.end103, !dbg !5860

if.end103:                                        ; preds = %if.end102, %if.end85
  %77 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !5861
  store %struct.KnifeEdge* %77, %struct.KnifeEdge** %cure, align 8, !dbg !5862
  %78 = load float, float* %dis_sq, align 4, !dbg !5863
  store float %78, float* %curdis_sq, align 4, !dbg !5864
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %cur_cagep, i64 0, i64 0, !dbg !5865
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %test_cagep, i64 0, i64 0, !dbg !5866
  call void @copy_v3_v3(float* %arraydecay104, float* %arraydecay105), !dbg !5867
  br label %for.inc, !dbg !5868

for.inc:                                          ; preds = %if.end103, %if.then101, %if.else83, %if.else, %if.then49
  %79 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !5869
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %79, i32 0, i32 0, !dbg !5870
  %80 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !5870
  store %struct.Ref* %80, %struct.Ref** %ref, align 8, !dbg !5871
  br label %for.cond, !dbg !5872, !llvm.loop !5873

for.end:                                          ; preds = %for.cond
  %81 = load %struct.BMFace**, %struct.BMFace*** %fptr.addr, align 8, !dbg !5875
  %tobool106 = icmp ne %struct.BMFace** %81, null, !dbg !5875
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !5877

if.then107:                                       ; preds = %for.end
  %82 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5878
  %83 = load %struct.BMFace**, %struct.BMFace*** %fptr.addr, align 8, !dbg !5879
  store %struct.BMFace* %82, %struct.BMFace** %83, align 8, !dbg !5880
  br label %if.end108, !dbg !5881

if.end108:                                        ; preds = %if.then107, %for.end
  %84 = load %struct.KnifeEdge*, %struct.KnifeEdge** %cure, align 8, !dbg !5882
  %tobool109 = icmp ne %struct.KnifeEdge* %84, null, !dbg !5882
  br i1 %tobool109, label %if.then110, label %if.end159, !dbg !5884

if.then110:                                       ; preds = %if.end108
  %85 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5885
  %ignore_edge_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %85, i32 0, i32 38, !dbg !5888
  %86 = load i8, i8* %ignore_edge_snapping, align 1, !dbg !5888
  %tobool111 = icmp ne i8 %86, 0, !dbg !5885
  br i1 %tobool111, label %lor.lhs.false112, label %if.then114, !dbg !5889

lor.lhs.false112:                                 ; preds = %if.then110
  %87 = load %struct.KnifeEdge*, %struct.KnifeEdge** %cure, align 8, !dbg !5890
  %e = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %87, i32 0, i32 4, !dbg !5891
  %88 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !5891
  %tobool113 = icmp ne %struct.BMEdge* %88, null, !dbg !5892
  br i1 %tobool113, label %if.else157, label %if.then114, !dbg !5893

if.then114:                                       ; preds = %lor.lhs.false112, %if.then110
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %edgesnap, metadata !5894, metadata !DIExpression()), !dbg !5896
  store %struct.KnifeVert* null, %struct.KnifeVert** %edgesnap, align 8, !dbg !5896
  %89 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5897
  %snap_midpoints = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %89, i32 0, i32 37, !dbg !5899
  %90 = load i8, i8* %snap_midpoints, align 4, !dbg !5899
  %tobool115 = icmp ne i8 %90, 0, !dbg !5897
  br i1 %tobool115, label %if.then116, label %if.else129, !dbg !5900

if.then116:                                       ; preds = %if.then114
  %91 = load float*, float** %p.addr, align 8, !dbg !5901
  %92 = load %struct.KnifeEdge*, %struct.KnifeEdge** %cure, align 8, !dbg !5903
  %v1117 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %92, i32 0, i32 0, !dbg !5904
  %93 = load %struct.KnifeVert*, %struct.KnifeVert** %v1117, align 8, !dbg !5904
  %co118 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %93, i32 0, i32 3, !dbg !5905
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %co118, i64 0, i64 0, !dbg !5903
  %94 = load %struct.KnifeEdge*, %struct.KnifeEdge** %cure, align 8, !dbg !5906
  %v2120 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %94, i32 0, i32 1, !dbg !5907
  %95 = load %struct.KnifeVert*, %struct.KnifeVert** %v2120, align 8, !dbg !5907
  %co121 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %95, i32 0, i32 3, !dbg !5908
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %co121, i64 0, i64 0, !dbg !5906
  call void @mid_v3_v3v3(float* %91, float* %arraydecay119, float* %arraydecay122), !dbg !5909
  %96 = load float*, float** %cagep.addr, align 8, !dbg !5910
  %97 = load %struct.KnifeEdge*, %struct.KnifeEdge** %cure, align 8, !dbg !5911
  %v1123 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %97, i32 0, i32 0, !dbg !5912
  %98 = load %struct.KnifeVert*, %struct.KnifeVert** %v1123, align 8, !dbg !5912
  %cageco124 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %98, i32 0, i32 4, !dbg !5913
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %cageco124, i64 0, i64 0, !dbg !5911
  %99 = load %struct.KnifeEdge*, %struct.KnifeEdge** %cure, align 8, !dbg !5914
  %v2126 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %99, i32 0, i32 1, !dbg !5915
  %100 = load %struct.KnifeVert*, %struct.KnifeVert** %v2126, align 8, !dbg !5915
  %cageco127 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %100, i32 0, i32 4, !dbg !5916
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %cageco127, i64 0, i64 0, !dbg !5914
  call void @mid_v3_v3v3(float* %96, float* %arraydecay125, float* %arraydecay128), !dbg !5917
  br label %if.end146, !dbg !5918

if.else129:                                       ; preds = %if.then114
  call void @llvm.dbg.declare(metadata float* %lambda130, metadata !5919, metadata !DIExpression()), !dbg !5921
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %cur_cagep, i64 0, i64 0, !dbg !5922
  %101 = load %struct.KnifeEdge*, %struct.KnifeEdge** %cure, align 8, !dbg !5923
  %v1132 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %101, i32 0, i32 0, !dbg !5924
  %102 = load %struct.KnifeVert*, %struct.KnifeVert** %v1132, align 8, !dbg !5924
  %cageco133 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %102, i32 0, i32 4, !dbg !5925
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %cageco133, i64 0, i64 0, !dbg !5923
  %103 = load %struct.KnifeEdge*, %struct.KnifeEdge** %cure, align 8, !dbg !5926
  %v2135 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %103, i32 0, i32 1, !dbg !5927
  %104 = load %struct.KnifeVert*, %struct.KnifeVert** %v2135, align 8, !dbg !5927
  %cageco136 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %104, i32 0, i32 4, !dbg !5928
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %cageco136, i64 0, i64 0, !dbg !5926
  %call138 = call float @line_point_factor_v3(float* %arraydecay131, float* %arraydecay134, float* %arraydecay137), !dbg !5929
  store float %call138, float* %lambda130, align 4, !dbg !5921
  %105 = load float*, float** %cagep.addr, align 8, !dbg !5930
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %cur_cagep, i64 0, i64 0, !dbg !5931
  call void @copy_v3_v3(float* %105, float* %arraydecay139), !dbg !5932
  %106 = load float*, float** %p.addr, align 8, !dbg !5933
  %107 = load %struct.KnifeEdge*, %struct.KnifeEdge** %cure, align 8, !dbg !5934
  %v1140 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %107, i32 0, i32 0, !dbg !5935
  %108 = load %struct.KnifeVert*, %struct.KnifeVert** %v1140, align 8, !dbg !5935
  %co141 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %108, i32 0, i32 3, !dbg !5936
  %arraydecay142 = getelementptr inbounds [3 x float], [3 x float]* %co141, i64 0, i64 0, !dbg !5934
  %109 = load %struct.KnifeEdge*, %struct.KnifeEdge** %cure, align 8, !dbg !5937
  %v2143 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %109, i32 0, i32 1, !dbg !5938
  %110 = load %struct.KnifeVert*, %struct.KnifeVert** %v2143, align 8, !dbg !5938
  %co144 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %110, i32 0, i32 3, !dbg !5939
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %co144, i64 0, i64 0, !dbg !5937
  %111 = load float, float* %lambda130, align 4, !dbg !5940
  call void @interp_v3_v3v3(float* %106, float* %arraydecay142, float* %arraydecay145, float %111), !dbg !5941
  br label %if.end146

if.end146:                                        ; preds = %if.else129, %if.then116
  %112 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5942
  %113 = load float*, float** %p.addr, align 8, !dbg !5943
  %114 = load float*, float** %cagep.addr, align 8, !dbg !5944
  %call147 = call %struct.KnifeVert* @new_knife_vert(%struct.KnifeTool_OpData* %112, float* %113, float* %114), !dbg !5945
  store %struct.KnifeVert* %call147, %struct.KnifeVert** %edgesnap, align 8, !dbg !5946
  %115 = load %struct.KnifeVert*, %struct.KnifeVert** %edgesnap, align 8, !dbg !5947
  %sco148 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %115, i32 0, i32 5, !dbg !5948
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %sco148, i64 0, i64 0, !dbg !5947
  %116 = load float, float* %arrayidx, align 8, !dbg !5947
  %117 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5949
  %curr149 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %117, i32 0, i32 18, !dbg !5950
  %mval150 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr149, i32 0, i32 6, !dbg !5951
  %arrayidx151 = getelementptr inbounds [2 x float], [2 x float]* %mval150, i64 0, i64 0, !dbg !5949
  store float %116, float* %arrayidx151, align 4, !dbg !5952
  %118 = load %struct.KnifeVert*, %struct.KnifeVert** %edgesnap, align 8, !dbg !5953
  %sco152 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %118, i32 0, i32 5, !dbg !5954
  %arrayidx153 = getelementptr inbounds [2 x float], [2 x float]* %sco152, i64 0, i64 1, !dbg !5953
  %119 = load float, float* %arrayidx153, align 4, !dbg !5953
  %120 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !5955
  %curr154 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %120, i32 0, i32 18, !dbg !5956
  %mval155 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr154, i32 0, i32 6, !dbg !5957
  %arrayidx156 = getelementptr inbounds [2 x float], [2 x float]* %mval155, i64 0, i64 1, !dbg !5955
  store float %119, float* %arrayidx156, align 4, !dbg !5958
  br label %if.end158, !dbg !5959

if.else157:                                       ; preds = %lor.lhs.false112
  store %struct.KnifeEdge* null, %struct.KnifeEdge** %retval, align 8, !dbg !5960
  br label %return, !dbg !5960

if.end158:                                        ; preds = %if.end146
  br label %if.end159, !dbg !5962

if.end159:                                        ; preds = %if.end158, %if.end108
  %121 = load %struct.KnifeEdge*, %struct.KnifeEdge** %cure, align 8, !dbg !5963
  store %struct.KnifeEdge* %121, %struct.KnifeEdge** %retval, align 8, !dbg !5964
  br label %return, !dbg !5964

if.end160:                                        ; preds = %if.end
  %122 = load %struct.BMFace**, %struct.BMFace*** %fptr.addr, align 8, !dbg !5965
  %tobool161 = icmp ne %struct.BMFace** %122, null, !dbg !5965
  br i1 %tobool161, label %if.then162, label %if.end163, !dbg !5967

if.then162:                                       ; preds = %if.end160
  %123 = load %struct.BMFace**, %struct.BMFace*** %fptr.addr, align 8, !dbg !5968
  store %struct.BMFace* null, %struct.BMFace** %123, align 8, !dbg !5969
  br label %if.end163, !dbg !5970

if.end163:                                        ; preds = %if.then162, %if.end160
  store %struct.KnifeEdge* null, %struct.KnifeEdge** %retval, align 8, !dbg !5971
  br label %return, !dbg !5971

return:                                           ; preds = %if.end163, %if.end159, %if.else157
  %124 = load %struct.KnifeEdge*, %struct.KnifeEdge** %retval, align 8, !dbg !5972
  ret %struct.KnifeEdge* %124, !dbg !5972
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_input_ray_segment(%struct.KnifeTool_OpData* %kcd, float* %mval, float %ofs, float* %r_origin, float* %r_origin_ofs) #0 !dbg !5973 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %mval.addr = alloca float*, align 8
  %ofs.addr = alloca float, align 4
  %r_origin.addr = alloca float*, align 8
  %r_origin_ofs.addr = alloca float*, align 8
  %mats = alloca %struct.bglMats, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !5976, metadata !DIExpression()), !dbg !5977
  store float* %mval, float** %mval.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mval.addr, metadata !5978, metadata !DIExpression()), !dbg !5979
  store float %ofs, float* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ofs.addr, metadata !5980, metadata !DIExpression()), !dbg !5981
  store float* %r_origin, float** %r_origin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_origin.addr, metadata !5982, metadata !DIExpression()), !dbg !5983
  store float* %r_origin_ofs, float** %r_origin_ofs.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_origin_ofs.addr, metadata !5984, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.declare(metadata %struct.bglMats* %mats, metadata !5986, metadata !DIExpression()), !dbg !5995
  call void @bgl_get_mats(%struct.bglMats* %mats), !dbg !5996
  %0 = load float*, float** %r_origin.addr, align 8, !dbg !5997
  %1 = load float*, float** %mval.addr, align 8, !dbg !5998
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !5998
  %2 = load float, float* %arrayidx, align 4, !dbg !5998
  %3 = load float*, float** %mval.addr, align 8, !dbg !5999
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !5999
  %4 = load float, float* %arrayidx1, align 4, !dbg !5999
  call void @ED_view3d_unproject(%struct.bglMats* %mats, float* %0, float %2, float %4, float 0.000000e+00), !dbg !6000
  %5 = load float*, float** %r_origin_ofs.addr, align 8, !dbg !6001
  %6 = load float*, float** %mval.addr, align 8, !dbg !6002
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 0, !dbg !6002
  %7 = load float, float* %arrayidx2, align 4, !dbg !6002
  %8 = load float*, float** %mval.addr, align 8, !dbg !6003
  %arrayidx3 = getelementptr inbounds float, float* %8, i64 1, !dbg !6003
  %9 = load float, float* %arrayidx3, align 4, !dbg !6003
  %10 = load float, float* %ofs.addr, align 4, !dbg !6004
  call void @ED_view3d_unproject(%struct.bglMats* %mats, float* %5, float %7, float %9, float %10), !dbg !6005
  %11 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6006
  %ob = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %11, i32 0, i32 4, !dbg !6007
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6007
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 50, !dbg !6008
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !6006
  %13 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6009
  %ob4 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %13, i32 0, i32 4, !dbg !6010
  %14 = load %struct.Object*, %struct.Object** %ob4, align 8, !dbg !6010
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 47, !dbg !6011
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !6009
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay5), !dbg !6012
  %15 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6013
  %ob6 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %15, i32 0, i32 4, !dbg !6014
  %16 = load %struct.Object*, %struct.Object** %ob6, align 8, !dbg !6014
  %imat7 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 50, !dbg !6015
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat7, i64 0, i64 0, !dbg !6013
  %17 = load float*, float** %r_origin.addr, align 8, !dbg !6016
  call void @mul_m4_v3([4 x float]* %arraydecay8, float* %17), !dbg !6017
  %18 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6018
  %ob9 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %18, i32 0, i32 4, !dbg !6019
  %19 = load %struct.Object*, %struct.Object** %ob9, align 8, !dbg !6019
  %imat10 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 50, !dbg !6020
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat10, i64 0, i64 0, !dbg !6018
  %20 = load float*, float** %r_origin_ofs.addr, align 8, !dbg !6021
  call void @mul_m4_v3([4 x float]* %arraydecay11, float* %20), !dbg !6022
  ret void, !dbg !6023
}

declare dso_local zeroext i8 @isect_line_plane_v3(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !6024 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6025, metadata !DIExpression()), !dbg !6026
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6027, metadata !DIExpression()), !dbg !6028
  %0 = load float*, float** %a.addr, align 8, !dbg !6029
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6029
  %1 = load float, float* %arrayidx, align 4, !dbg !6029
  %2 = load float*, float** %r.addr, align 8, !dbg !6030
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6030
  store float %1, float* %arrayidx1, align 4, !dbg !6031
  %3 = load float*, float** %a.addr, align 8, !dbg !6032
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !6032
  %4 = load float, float* %arrayidx2, align 4, !dbg !6032
  %5 = load float*, float** %r.addr, align 8, !dbg !6033
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6033
  store float %4, float* %arrayidx3, align 4, !dbg !6034
  %6 = load float*, float** %a.addr, align 8, !dbg !6035
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !6035
  %7 = load float, float* %arrayidx4, align 4, !dbg !6035
  %8 = load float*, float** %r.addr, align 8, !dbg !6036
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6036
  store float %7, float* %arrayidx5, align 4, !dbg !6037
  ret void, !dbg !6038
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_find_line_hits(%struct.KnifeTool_OpData* %kcd) #0 !dbg !6039 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %mats = alloca %struct.bglMats, align 8
  %faces = alloca %struct.SmallHash, align 8
  %kfes = alloca %struct.SmallHash, align 8
  %kfvs = alloca %struct.SmallHash, align 8
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %v3 = alloca [3 x float], align 4
  %v4 = alloca [3 x float], align 4
  %s1 = alloca [2 x float], align 4
  %s2 = alloca [2 x float], align 4
  %planetree = alloca %struct.BVHTree*, align 8
  %tree = alloca %struct.BVHTree*, align 8
  %results = alloca %struct.BVHTreeOverlap*, align 8
  %result = alloca %struct.BVHTreeOverlap*, align 8
  %ls = alloca %struct.BMLoop**, align 8
  %f = alloca %struct.BMFace*, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %v = alloca %struct.KnifeVert*, align 8
  %lst = alloca %struct.ListBase*, align 8
  %ref = alloca %struct.Ref*, align 8
  %linehits = alloca %struct.KnifeLineHit*, align 8
  %_linehits_count = alloca i32, align 4
  %_linehits_static = alloca i8*, align 8
  %hiter = alloca %struct.SmallHashIter, align 8
  %hit = alloca %struct.KnifeLineHit, align 8
  %val = alloca i8*, align 8
  %plane_cos = alloca [12 x float], align 16
  %s = alloca [2 x float], align 4
  %se1 = alloca [2 x float], align 4
  %se2 = alloca [2 x float], align 4
  %sint = alloca [2 x float], align 4
  %r1 = alloca [3 x float], align 4
  %r2 = alloca [3 x float], align 4
  %d = alloca float, align 4
  %d1 = alloca float, align 4
  %d2 = alloca float, align 4
  %lambda = alloca float, align 4
  %vert_tol = alloca float, align 4
  %vert_tol_sq = alloca float, align 4
  %line_tol = alloca float, align 4
  %line_tol_sq = alloca float, align 4
  %face_tol = alloca float, align 4
  %face_tol_sq = alloca float, align 4
  %eps_scale = alloca float, align 4
  %isect_kind = alloca i32, align 4
  %tot = alloca i32, align 4
  %i = alloca i32, align 4
  %zoom_xy = alloca [2 x float], align 4
  %p_cage = alloca [3 x float], align 4
  %p_cage_tmp = alloca [3 x float], align 4
  %p = alloca [3 x float], align 4
  %p_cage374 = alloca [3 x float], align 4
  %lh = alloca %struct.KnifeLineHit*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !6040, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.declare(metadata %struct.bglMats* %mats, metadata !6042, metadata !DIExpression()), !dbg !6043
  call void @llvm.dbg.declare(metadata %struct.SmallHash* %faces, metadata !6044, metadata !DIExpression()), !dbg !6063
  call void @llvm.dbg.declare(metadata %struct.SmallHash* %kfes, metadata !6064, metadata !DIExpression()), !dbg !6065
  call void @llvm.dbg.declare(metadata %struct.SmallHash* %kfvs, metadata !6066, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !6068, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !6070, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.declare(metadata [3 x float]* %v3, metadata !6072, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.declare(metadata [3 x float]* %v4, metadata !6074, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.declare(metadata [2 x float]* %s1, metadata !6076, metadata !DIExpression()), !dbg !6077
  call void @llvm.dbg.declare(metadata [2 x float]* %s2, metadata !6078, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.declare(metadata %struct.BVHTree** %planetree, metadata !6080, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.declare(metadata %struct.BVHTree** %tree, metadata !6086, metadata !DIExpression()), !dbg !6087
  call void @llvm.dbg.declare(metadata %struct.BVHTreeOverlap** %results, metadata !6088, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.declare(metadata %struct.BVHTreeOverlap** %result, metadata !6096, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ls, metadata !6098, metadata !DIExpression()), !dbg !6099
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !6100, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !6102, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %v, metadata !6104, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst, metadata !6106, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref, metadata !6108, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %linehits, metadata !6110, metadata !DIExpression()), !dbg !6111
  store %struct.KnifeLineHit* null, %struct.KnifeLineHit** %linehits, align 8, !dbg !6111
  call void @llvm.dbg.declare(metadata i32* %_linehits_count, metadata !6112, metadata !DIExpression()), !dbg !6113
  store i32 0, i32* %_linehits_count, align 4, !dbg !6113
  call void @llvm.dbg.declare(metadata i8** %_linehits_static, metadata !6114, metadata !DIExpression()), !dbg !6113
  store i8* null, i8** %_linehits_static, align 8, !dbg !6113
  call void @llvm.dbg.declare(metadata %struct.SmallHashIter* %hiter, metadata !6115, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit* %hit, metadata !6123, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.declare(metadata i8** %val, metadata !6125, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.declare(metadata [12 x float]* %plane_cos, metadata !6127, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.declare(metadata [2 x float]* %s, metadata !6130, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.declare(metadata [2 x float]* %se1, metadata !6132, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.declare(metadata [2 x float]* %se2, metadata !6134, metadata !DIExpression()), !dbg !6135
  call void @llvm.dbg.declare(metadata [2 x float]* %sint, metadata !6136, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.declare(metadata [3 x float]* %r1, metadata !6138, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.declare(metadata [3 x float]* %r2, metadata !6140, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.declare(metadata float* %d, metadata !6142, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.declare(metadata float* %d1, metadata !6144, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.declare(metadata float* %d2, metadata !6146, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !6148, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.declare(metadata float* %vert_tol, metadata !6150, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.declare(metadata float* %vert_tol_sq, metadata !6152, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.declare(metadata float* %line_tol, metadata !6154, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.declare(metadata float* %line_tol_sq, metadata !6156, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.declare(metadata float* %face_tol, metadata !6158, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.declare(metadata float* %face_tol_sq, metadata !6160, metadata !DIExpression()), !dbg !6161
  call void @llvm.dbg.declare(metadata float* %eps_scale, metadata !6162, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.declare(metadata i32* %isect_kind, metadata !6164, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6168, metadata !DIExpression()), !dbg !6169
  call void @bgl_get_mats(%struct.bglMats* %mats), !dbg !6170
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6171
  %linehits1 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 16, !dbg !6173
  %1 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits1, align 8, !dbg !6173
  %tobool = icmp ne %struct.KnifeLineHit* %1, null, !dbg !6171
  br i1 %tobool, label %if.then, label %if.end, !dbg !6174

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6175
  %3 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6177
  %linehits2 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %3, i32 0, i32 16, !dbg !6178
  %4 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits2, align 8, !dbg !6178
  %5 = bitcast %struct.KnifeLineHit* %4 to i8*, !dbg !6177
  call void %2(i8* %5), !dbg !6175
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6179
  %linehits3 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %6, i32 0, i32 16, !dbg !6180
  store %struct.KnifeLineHit* null, %struct.KnifeLineHit** %linehits3, align 8, !dbg !6181
  %7 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6182
  %totlinehit = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %7, i32 0, i32 17, !dbg !6183
  store i32 0, i32* %totlinehit, align 8, !dbg !6184
  br label %if.end, !dbg !6185

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !6186
  %8 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6187
  %prev = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %8, i32 0, i32 19, !dbg !6188
  %cage = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev, i32 0, i32 1, !dbg !6189
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %cage, i64 0, i64 0, !dbg !6187
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay4), !dbg !6190
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !6191
  %9 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6192
  %curr = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %9, i32 0, i32 18, !dbg !6193
  %cage6 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr, i32 0, i32 1, !dbg !6194
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %cage6, i64 0, i64 0, !dbg !6192
  call void @copy_v3_v3(float* %arraydecay5, float* %arraydecay7), !dbg !6195
  %10 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6196
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !6197
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6198
  call void @knife_project_v2(%struct.KnifeTool_OpData* %10, float* %arraydecay8, float* %arraydecay9), !dbg !6199
  %11 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6200
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !6201
  %arraydecay11 = getelementptr inbounds [2 x float], [2 x float]* %s2, i64 0, i64 0, !dbg !6202
  call void @knife_project_v2(%struct.KnifeTool_OpData* %11, float* %arraydecay10, float* %arraydecay11), !dbg !6203
  %12 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6204
  %is_interactive = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %12, i32 0, i32 27, !dbg !6206
  %13 = load i8, i8* %is_interactive, align 8, !dbg !6206
  %tobool12 = icmp ne i8 %13, 0, !dbg !6204
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !6207

if.then13:                                        ; preds = %if.end
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6208
  %arraydecay15 = getelementptr inbounds [2 x float], [2 x float]* %s2, i64 0, i64 0, !dbg !6211
  %call = call float @len_squared_v2v2(float* %arraydecay14, float* %arraydecay15), !dbg !6212
  %cmp = fcmp olt float %call, 1.000000e+00, !dbg !6213
  br i1 %cmp, label %if.then16, label %if.end17, !dbg !6214

if.then16:                                        ; preds = %if.then13
  br label %if.end532, !dbg !6215

if.end17:                                         ; preds = %if.then13
  br label %if.end24, !dbg !6217

if.else:                                          ; preds = %if.end
  %arraydecay18 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6218
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %s2, i64 0, i64 0, !dbg !6221
  %call20 = call float @len_squared_v2v2(float* %arraydecay18, float* %arraydecay19), !dbg !6222
  %cmp21 = fcmp olt float %call20, 0x3DDB7CDFC0000000, !dbg !6223
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !6224

if.then22:                                        ; preds = %if.else
  br label %if.end532, !dbg !6225

if.end23:                                         ; preds = %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end17
  %14 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6227
  %ar = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %14, i32 0, i32 0, !dbg !6228
  %15 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6228
  %16 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6229
  %vc = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %16, i32 0, i32 2, !dbg !6230
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 4, !dbg !6231
  %17 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !6231
  %arraydecay25 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6232
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !6233
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !6234
  %call28 = call zeroext i8 @ED_view3d_win_to_segment(%struct.ARegion* %15, %struct.View3D* %17, float* %arraydecay25, float* %arraydecay26, float* %arraydecay27, i8 zeroext 1), !dbg !6235
  %18 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6236
  %ar29 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %18, i32 0, i32 0, !dbg !6237
  %19 = load %struct.ARegion*, %struct.ARegion** %ar29, align 8, !dbg !6237
  %20 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6238
  %vc30 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %20, i32 0, i32 2, !dbg !6239
  %v3d31 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc30, i32 0, i32 4, !dbg !6240
  %21 = load %struct.View3D*, %struct.View3D** %v3d31, align 8, !dbg !6240
  %arraydecay32 = getelementptr inbounds [2 x float], [2 x float]* %s2, i64 0, i64 0, !dbg !6241
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !6242
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !6243
  %call35 = call zeroext i8 @ED_view3d_win_to_segment(%struct.ARegion* %19, %struct.View3D* %21, float* %arraydecay32, float* %arraydecay33, float* %arraydecay34, i8 zeroext 1), !dbg !6244
  %22 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6245
  %ob = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %22, i32 0, i32 4, !dbg !6246
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6246
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 50, !dbg !6247
  %arraydecay36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !6245
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !6248
  call void @mul_m4_v3([4 x float]* %arraydecay36, float* %arraydecay37), !dbg !6249
  %24 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6250
  %ob38 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %24, i32 0, i32 4, !dbg !6251
  %25 = load %struct.Object*, %struct.Object** %ob38, align 8, !dbg !6251
  %imat39 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 50, !dbg !6252
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat39, i64 0, i64 0, !dbg !6250
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !6253
  call void @mul_m4_v3([4 x float]* %arraydecay40, float* %arraydecay41), !dbg !6254
  %26 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6255
  %ob42 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %26, i32 0, i32 4, !dbg !6256
  %27 = load %struct.Object*, %struct.Object** %ob42, align 8, !dbg !6256
  %imat43 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 50, !dbg !6257
  %arraydecay44 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat43, i64 0, i64 0, !dbg !6255
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !6258
  call void @mul_m4_v3([4 x float]* %arraydecay44, float* %arraydecay45), !dbg !6259
  %28 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6260
  %ob46 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %28, i32 0, i32 4, !dbg !6261
  %29 = load %struct.Object*, %struct.Object** %ob46, align 8, !dbg !6261
  %imat47 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 50, !dbg !6262
  %arraydecay48 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat47, i64 0, i64 0, !dbg !6260
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !6263
  call void @mul_m4_v3([4 x float]* %arraydecay48, float* %arraydecay49), !dbg !6264
  %30 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6265
  %is_ortho = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %30, i32 0, i32 31, !dbg !6267
  %31 = load i8, i8* %is_ortho, align 4, !dbg !6267
  %conv = zext i8 %31 to i32, !dbg !6265
  %tobool50 = icmp ne i32 %conv, 0, !dbg !6265
  br i1 %tobool50, label %land.lhs.true, label %if.end67, !dbg !6268

land.lhs.true:                                    ; preds = %if.end24
  %32 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6269
  %vc51 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %32, i32 0, i32 2, !dbg !6270
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc51, i32 0, i32 5, !dbg !6271
  %33 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !6271
  %persp = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %33, i32 0, i32 25, !dbg !6272
  %34 = load i8, i8* %persp, align 1, !dbg !6272
  %conv52 = zext i8 %34 to i32, !dbg !6269
  %cmp53 = icmp ne i32 %conv52, 2, !dbg !6273
  br i1 %cmp53, label %if.then55, label %if.end67, !dbg !6274

if.then55:                                        ; preds = %land.lhs.true
  %35 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6275
  %ortho_extent = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %35, i32 0, i32 32, !dbg !6278
  %36 = load float, float* %ortho_extent, align 8, !dbg !6278
  %cmp56 = fcmp oeq float %36, 0.000000e+00, !dbg !6279
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !6280

if.then58:                                        ; preds = %if.then55
  %37 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6281
  call void @calc_ortho_extent(%struct.KnifeTool_OpData* %37), !dbg !6282
  br label %if.end59, !dbg !6282

if.end59:                                         ; preds = %if.then58, %if.then55
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !6283
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !6284
  %38 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6285
  %ortho_extent62 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %38, i32 0, i32 32, !dbg !6286
  %39 = load float, float* %ortho_extent62, align 8, !dbg !6286
  %add = fadd float %39, 1.000000e+01, !dbg !6287
  call void @clip_to_ortho_planes(float* %arraydecay60, float* %arraydecay61, float %add), !dbg !6288
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !6289
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !6290
  %40 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6291
  %ortho_extent65 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %40, i32 0, i32 32, !dbg !6292
  %41 = load float, float* %ortho_extent65, align 8, !dbg !6292
  %add66 = fadd float %41, 1.000000e+01, !dbg !6293
  call void @clip_to_ortho_planes(float* %arraydecay63, float* %arraydecay64, float %add66), !dbg !6294
  br label %if.end67, !dbg !6295

if.end67:                                         ; preds = %if.end59, %land.lhs.true, %if.end24
  %42 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6296
  %bmbvh = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %42, i32 0, i32 11, !dbg !6297
  %43 = load %struct.BMBVHTree*, %struct.BMBVHTree** %bmbvh, align 8, !dbg !6297
  %call68 = call %struct.BVHTree* @BKE_bmbvh_tree_get(%struct.BMBVHTree* %43), !dbg !6298
  store %struct.BVHTree* %call68, %struct.BVHTree** %tree, align 8, !dbg !6299
  %call69 = call %struct.BVHTree* @BLI_bvhtree_new(i32 4, float 0x3EA0000000000000, i8 zeroext 8, i8 zeroext 8), !dbg !6300
  store %struct.BVHTree* %call69, %struct.BVHTree** %planetree, align 8, !dbg !6301
  %arraydecay70 = getelementptr inbounds [12 x float], [12 x float]* %plane_cos, i64 0, i64 0, !dbg !6302
  %add.ptr = getelementptr inbounds float, float* %arraydecay70, i64 0, !dbg !6303
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !6304
  call void @copy_v3_v3(float* %add.ptr, float* %arraydecay71), !dbg !6305
  %arraydecay72 = getelementptr inbounds [12 x float], [12 x float]* %plane_cos, i64 0, i64 0, !dbg !6306
  %add.ptr73 = getelementptr inbounds float, float* %arraydecay72, i64 3, !dbg !6307
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !6308
  call void @copy_v3_v3(float* %add.ptr73, float* %arraydecay74), !dbg !6309
  %arraydecay75 = getelementptr inbounds [12 x float], [12 x float]* %plane_cos, i64 0, i64 0, !dbg !6310
  %add.ptr76 = getelementptr inbounds float, float* %arraydecay75, i64 6, !dbg !6311
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !6312
  call void @copy_v3_v3(float* %add.ptr76, float* %arraydecay77), !dbg !6313
  %arraydecay78 = getelementptr inbounds [12 x float], [12 x float]* %plane_cos, i64 0, i64 0, !dbg !6314
  %add.ptr79 = getelementptr inbounds float, float* %arraydecay78, i64 9, !dbg !6315
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !6316
  call void @copy_v3_v3(float* %add.ptr79, float* %arraydecay80), !dbg !6317
  %44 = load %struct.BVHTree*, %struct.BVHTree** %planetree, align 8, !dbg !6318
  %arraydecay81 = getelementptr inbounds [12 x float], [12 x float]* %plane_cos, i64 0, i64 0, !dbg !6319
  call void @BLI_bvhtree_insert(%struct.BVHTree* %44, i32 0, float* %arraydecay81, i32 4), !dbg !6320
  %45 = load %struct.BVHTree*, %struct.BVHTree** %planetree, align 8, !dbg !6321
  call void @BLI_bvhtree_balance(%struct.BVHTree* %45), !dbg !6322
  %46 = load %struct.BVHTree*, %struct.BVHTree** %tree, align 8, !dbg !6323
  %47 = load %struct.BVHTree*, %struct.BVHTree** %planetree, align 8, !dbg !6324
  %call82 = call %struct.BVHTreeOverlap* @BLI_bvhtree_overlap(%struct.BVHTree* %46, %struct.BVHTree* %47, i32* %tot), !dbg !6325
  store %struct.BVHTreeOverlap* %call82, %struct.BVHTreeOverlap** %results, align 8, !dbg !6326
  %48 = load %struct.BVHTreeOverlap*, %struct.BVHTreeOverlap** %results, align 8, !dbg !6327
  %tobool83 = icmp ne %struct.BVHTreeOverlap* %48, null, !dbg !6327
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !6329

if.then84:                                        ; preds = %if.end67
  %49 = load %struct.BVHTree*, %struct.BVHTree** %planetree, align 8, !dbg !6330
  call void @BLI_bvhtree_free(%struct.BVHTree* %49), !dbg !6332
  br label %if.end532, !dbg !6333

if.end85:                                         ; preds = %if.end67
  call void @BLI_smallhash_init(%struct.SmallHash* %faces), !dbg !6334
  call void @BLI_smallhash_init(%struct.SmallHash* %kfes), !dbg !6335
  call void @BLI_smallhash_init(%struct.SmallHash* %kfvs), !dbg !6336
  store i32 0, i32* %i, align 4, !dbg !6337
  %50 = load %struct.BVHTreeOverlap*, %struct.BVHTreeOverlap** %results, align 8, !dbg !6339
  store %struct.BVHTreeOverlap* %50, %struct.BVHTreeOverlap** %result, align 8, !dbg !6340
  br label %for.cond, !dbg !6341

for.cond:                                         ; preds = %for.inc115, %if.end85
  %51 = load i32, i32* %i, align 4, !dbg !6342
  %52 = load i32, i32* %tot, align 4, !dbg !6344
  %cmp86 = icmp ult i32 %51, %52, !dbg !6345
  br i1 %cmp86, label %for.body, label %for.end116, !dbg !6346

for.body:                                         ; preds = %for.cond
  %53 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6347
  %em = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %53, i32 0, i32 5, !dbg !6349
  %54 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6349
  %looptris = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %54, i32 0, i32 3, !dbg !6350
  %55 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !6350
  %56 = load %struct.BVHTreeOverlap*, %struct.BVHTreeOverlap** %result, align 8, !dbg !6351
  %indexA = getelementptr inbounds %struct.BVHTreeOverlap, %struct.BVHTreeOverlap* %56, i32 0, i32 0, !dbg !6352
  %57 = load i32, i32* %indexA, align 4, !dbg !6352
  %idxprom = sext i32 %57 to i64, !dbg !6347
  %arrayidx = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %55, i64 %idxprom, !dbg !6347
  %arraydecay88 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx, i64 0, i64 0, !dbg !6347
  store %struct.BMLoop** %arraydecay88, %struct.BMLoop*** %ls, align 8, !dbg !6353
  %58 = load %struct.BMLoop**, %struct.BMLoop*** %ls, align 8, !dbg !6354
  %arrayidx89 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %58, i64 0, !dbg !6354
  %59 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx89, align 8, !dbg !6354
  %f90 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %59, i32 0, i32 3, !dbg !6355
  %60 = load %struct.BMFace*, %struct.BMFace** %f90, align 8, !dbg !6355
  store %struct.BMFace* %60, %struct.BMFace** %f, align 8, !dbg !6356
  %61 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6357
  %62 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6358
  %63 = load %struct.BVHTreeOverlap*, %struct.BVHTreeOverlap** %result, align 8, !dbg !6359
  %indexA91 = getelementptr inbounds %struct.BVHTreeOverlap, %struct.BVHTreeOverlap* %63, i32 0, i32 0, !dbg !6360
  %64 = load i32, i32* %indexA91, align 4, !dbg !6360
  call void @set_lowest_face_tri(%struct.KnifeTool_OpData* %61, %struct.BMFace* %62, i32 %64), !dbg !6361
  %65 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6362
  %66 = ptrtoint %struct.BMFace* %65 to i64, !dbg !6364
  %call92 = call zeroext i8 @BLI_smallhash_haskey(%struct.SmallHash* %faces, i64 %66), !dbg !6365
  %tobool93 = icmp ne i8 %call92, 0, !dbg !6365
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !6366

if.then94:                                        ; preds = %for.body
  br label %for.inc115, !dbg !6367

if.end95:                                         ; preds = %for.body
  %67 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6369
  %68 = ptrtoint %struct.BMFace* %67 to i64, !dbg !6370
  %69 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6371
  %70 = bitcast %struct.BMFace* %69 to i8*, !dbg !6371
  call void @BLI_smallhash_insert(%struct.SmallHash* %faces, i64 %68, i8* %70), !dbg !6372
  %71 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6373
  %72 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6374
  %call96 = call %struct.ListBase* @knife_get_face_kedges(%struct.KnifeTool_OpData* %71, %struct.BMFace* %72), !dbg !6375
  store %struct.ListBase* %call96, %struct.ListBase** %lst, align 8, !dbg !6376
  %73 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !6377
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %73, i32 0, i32 0, !dbg !6379
  %74 = load i8*, i8** %first, align 8, !dbg !6379
  %75 = bitcast i8* %74 to %struct.Ref*, !dbg !6377
  store %struct.Ref* %75, %struct.Ref** %ref, align 8, !dbg !6380
  br label %for.cond97, !dbg !6381

for.cond97:                                       ; preds = %for.inc, %if.end95
  %76 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !6382
  %tobool98 = icmp ne %struct.Ref* %76, null, !dbg !6384
  br i1 %tobool98, label %for.body99, label %for.end, !dbg !6384

for.body99:                                       ; preds = %for.cond97
  %77 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !6385
  %ref100 = getelementptr inbounds %struct.Ref, %struct.Ref* %77, i32 0, i32 2, !dbg !6387
  %78 = load i8*, i8** %ref100, align 8, !dbg !6387
  %79 = bitcast i8* %78 to %struct.KnifeEdge*, !dbg !6385
  store %struct.KnifeEdge* %79, %struct.KnifeEdge** %kfe, align 8, !dbg !6388
  %80 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6389
  %81 = ptrtoint %struct.KnifeEdge* %80 to i64, !dbg !6391
  %call101 = call zeroext i8 @BLI_smallhash_haskey(%struct.SmallHash* %kfes, i64 %81), !dbg !6392
  %tobool102 = icmp ne i8 %call101, 0, !dbg !6392
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !6393

if.then103:                                       ; preds = %for.body99
  br label %for.inc, !dbg !6394

if.end104:                                        ; preds = %for.body99
  %82 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6395
  %83 = ptrtoint %struct.KnifeEdge* %82 to i64, !dbg !6396
  %84 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6397
  %85 = bitcast %struct.KnifeEdge* %84 to i8*, !dbg !6397
  call void @BLI_smallhash_insert(%struct.SmallHash* %kfes, i64 %83, i8* %85), !dbg !6398
  %86 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6399
  %v1105 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %86, i32 0, i32 0, !dbg !6400
  %87 = load %struct.KnifeVert*, %struct.KnifeVert** %v1105, align 8, !dbg !6400
  store %struct.KnifeVert* %87, %struct.KnifeVert** %v, align 8, !dbg !6401
  %88 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !6402
  %89 = ptrtoint %struct.KnifeVert* %88 to i64, !dbg !6404
  %call106 = call zeroext i8 @BLI_smallhash_haskey(%struct.SmallHash* %kfvs, i64 %89), !dbg !6405
  %tobool107 = icmp ne i8 %call106, 0, !dbg !6405
  br i1 %tobool107, label %if.end109, label %if.then108, !dbg !6406

if.then108:                                       ; preds = %if.end104
  %90 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !6407
  %91 = ptrtoint %struct.KnifeVert* %90 to i64, !dbg !6408
  %92 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !6409
  %93 = bitcast %struct.KnifeVert* %92 to i8*, !dbg !6409
  call void @BLI_smallhash_insert(%struct.SmallHash* %kfvs, i64 %91, i8* %93), !dbg !6410
  br label %if.end109, !dbg !6410

if.end109:                                        ; preds = %if.then108, %if.end104
  %94 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6411
  %v2110 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %94, i32 0, i32 1, !dbg !6412
  %95 = load %struct.KnifeVert*, %struct.KnifeVert** %v2110, align 8, !dbg !6412
  store %struct.KnifeVert* %95, %struct.KnifeVert** %v, align 8, !dbg !6413
  %96 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !6414
  %97 = ptrtoint %struct.KnifeVert* %96 to i64, !dbg !6416
  %call111 = call zeroext i8 @BLI_smallhash_haskey(%struct.SmallHash* %kfvs, i64 %97), !dbg !6417
  %tobool112 = icmp ne i8 %call111, 0, !dbg !6417
  br i1 %tobool112, label %if.end114, label %if.then113, !dbg !6418

if.then113:                                       ; preds = %if.end109
  %98 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !6419
  %99 = ptrtoint %struct.KnifeVert* %98 to i64, !dbg !6420
  %100 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !6421
  %101 = bitcast %struct.KnifeVert* %100 to i8*, !dbg !6421
  call void @BLI_smallhash_insert(%struct.SmallHash* %kfvs, i64 %99, i8* %101), !dbg !6422
  br label %if.end114, !dbg !6422

if.end114:                                        ; preds = %if.then113, %if.end109
  br label %for.inc, !dbg !6423

for.inc:                                          ; preds = %if.end114, %if.then103
  %102 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !6424
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %102, i32 0, i32 0, !dbg !6425
  %103 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !6425
  store %struct.Ref* %103, %struct.Ref** %ref, align 8, !dbg !6426
  br label %for.cond97, !dbg !6427, !llvm.loop !6428

for.end:                                          ; preds = %for.cond97
  br label %for.inc115, !dbg !6430

for.inc115:                                       ; preds = %for.end, %if.then94
  %104 = load i32, i32* %i, align 4, !dbg !6431
  %inc = add nsw i32 %104, 1, !dbg !6431
  store i32 %inc, i32* %i, align 4, !dbg !6431
  %105 = load %struct.BVHTreeOverlap*, %struct.BVHTreeOverlap** %result, align 8, !dbg !6432
  %incdec.ptr = getelementptr inbounds %struct.BVHTreeOverlap, %struct.BVHTreeOverlap* %105, i32 1, !dbg !6432
  store %struct.BVHTreeOverlap* %incdec.ptr, %struct.BVHTreeOverlap** %result, align 8, !dbg !6432
  br label %for.cond, !dbg !6433, !llvm.loop !6434

for.end116:                                       ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [2 x float]* %zoom_xy, metadata !6436, metadata !DIExpression()), !dbg !6438
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %zoom_xy, i64 0, i64 0, !dbg !6439
  %106 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6440
  %vc117 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %106, i32 0, i32 2, !dbg !6441
  %rv3d118 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc117, i32 0, i32 5, !dbg !6442
  %107 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d118, align 8, !dbg !6442
  %winmat = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %107, i32 0, i32 0, !dbg !6443
  %arrayidx119 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !6440
  %arrayidx120 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx119, i64 0, i64 0, !dbg !6440
  %108 = load float, float* %arrayidx120, align 8, !dbg !6440
  store float %108, float* %arrayinit.begin, align 4, !dbg !6439
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !6439
  %109 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6444
  %vc121 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %109, i32 0, i32 2, !dbg !6445
  %rv3d122 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc121, i32 0, i32 5, !dbg !6446
  %110 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d122, align 8, !dbg !6446
  %winmat123 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %110, i32 0, i32 0, !dbg !6447
  %arrayidx124 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat123, i64 0, i64 1, !dbg !6444
  %arrayidx125 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx124, i64 0, i64 1, !dbg !6444
  %111 = load float, float* %arrayidx125, align 4, !dbg !6444
  store float %111, float* %arrayinit.element, align 4, !dbg !6439
  %arraydecay126 = getelementptr inbounds [2 x float], [2 x float]* %zoom_xy, i64 0, i64 0, !dbg !6448
  %call127 = call float @len_v2(float* %arraydecay126), !dbg !6449
  store float %call127, float* %eps_scale, align 4, !dbg !6450
  %112 = load float, float* %eps_scale, align 4, !dbg !6451
  %mul = fmul float 0x3FC99999A0000000, %112, !dbg !6452
  store float %mul, float* %vert_tol, align 4, !dbg !6453
  %113 = load float, float* %eps_scale, align 4, !dbg !6454
  %mul128 = fmul float 0x3FC99999A0000000, %113, !dbg !6455
  store float %mul128, float* %line_tol, align 4, !dbg !6456
  %114 = load float, float* %vert_tol, align 4, !dbg !6457
  %115 = load float, float* %line_tol, align 4, !dbg !6458
  %call129 = call float @max_ff(float %114, float %115), !dbg !6459
  store float %call129, float* %face_tol, align 4, !dbg !6460
  %116 = load float, float* %vert_tol, align 4, !dbg !6461
  %117 = load float, float* %vert_tol, align 4, !dbg !6462
  %mul130 = fmul float %116, %117, !dbg !6463
  store float %mul130, float* %vert_tol_sq, align 4, !dbg !6464
  %118 = load float, float* %line_tol, align 4, !dbg !6465
  %119 = load float, float* %line_tol, align 4, !dbg !6466
  %mul131 = fmul float %118, %119, !dbg !6467
  store float %mul131, float* %line_tol_sq, align 4, !dbg !6468
  %120 = load float, float* %face_tol, align 4, !dbg !6469
  %121 = load float, float* %face_tol, align 4, !dbg !6470
  %mul132 = fmul float %120, %121, !dbg !6471
  store float %mul132, float* %face_tol_sq, align 4, !dbg !6472
  %122 = bitcast %struct.KnifeVert** %v to i64*, !dbg !6473
  %call133 = call i8* @BLI_smallhash_iternew(%struct.SmallHash* %kfvs, %struct.SmallHashIter* %hiter, i64* %122), !dbg !6475
  store i8* %call133, i8** %val, align 8, !dbg !6476
  br label %for.cond134, !dbg !6477

for.cond134:                                      ; preds = %for.inc198, %for.end116
  %123 = load i8*, i8** %val, align 8, !dbg !6478
  %tobool135 = icmp ne i8* %123, null, !dbg !6480
  br i1 %tobool135, label %for.body136, label %for.end200, !dbg !6480

for.body136:                                      ; preds = %for.cond134
  %124 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6481
  %125 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !6483
  %cageco = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %125, i32 0, i32 4, !dbg !6484
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %cageco, i64 0, i64 0, !dbg !6483
  %arraydecay138 = getelementptr inbounds [2 x float], [2 x float]* %s, i64 0, i64 0, !dbg !6485
  call void @knife_project_v2(%struct.KnifeTool_OpData* %124, float* %arraydecay137, float* %arraydecay138), !dbg !6486
  %arraydecay139 = getelementptr inbounds [2 x float], [2 x float]* %s, i64 0, i64 0, !dbg !6487
  %arraydecay140 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6488
  %arraydecay141 = getelementptr inbounds [2 x float], [2 x float]* %s2, i64 0, i64 0, !dbg !6489
  %call142 = call float @dist_squared_to_line_segment_v2(float* %arraydecay139, float* %arraydecay140, float* %arraydecay141), !dbg !6490
  store float %call142, float* %d, align 4, !dbg !6491
  %126 = load float, float* %d, align 4, !dbg !6492
  %127 = load float, float* %vert_tol_sq, align 4, !dbg !6494
  %cmp143 = fcmp ole float %126, %127, !dbg !6495
  br i1 %cmp143, label %if.then145, label %if.end197, !dbg !6496

if.then145:                                       ; preds = %for.body136
  %128 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6497
  %129 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !6500
  %cageco146 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %129, i32 0, i32 4, !dbg !6501
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %cageco146, i64 0, i64 0, !dbg !6500
  %arraydecay148 = getelementptr inbounds [2 x float], [2 x float]* %s, i64 0, i64 0, !dbg !6502
  %call149 = call zeroext i8 @point_is_visible(%struct.KnifeTool_OpData* %128, float* %arraydecay147, float* %arraydecay148, %struct.bglMats* %mats), !dbg !6503
  %tobool150 = icmp ne i8 %call149, 0, !dbg !6503
  br i1 %tobool150, label %if.then151, label %if.end196, !dbg !6504

if.then151:                                       ; preds = %if.then145
  %130 = bitcast %struct.KnifeLineHit* %hit to i8*, !dbg !6505
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 72, i1 false), !dbg !6505
  %131 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !6507
  %v152 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 7, !dbg !6508
  store %struct.KnifeVert* %131, %struct.KnifeVert** %v152, align 8, !dbg !6509
  %hit153 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 0, !dbg !6510
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %hit153, i64 0, i64 0, !dbg !6511
  %132 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !6512
  %co = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %132, i32 0, i32 3, !dbg !6513
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6512
  call void @copy_v3_v3(float* %arraydecay154, float* %arraydecay155), !dbg !6514
  %cagehit = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 1, !dbg !6515
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %cagehit, i64 0, i64 0, !dbg !6516
  %133 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !6517
  %cageco157 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %133, i32 0, i32 4, !dbg !6518
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %cageco157, i64 0, i64 0, !dbg !6517
  call void @copy_v3_v3(float* %arraydecay156, float* %arraydecay158), !dbg !6519
  %schit = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 2, !dbg !6520
  %arraydecay159 = getelementptr inbounds [2 x float], [2 x float]* %schit, i64 0, i64 0, !dbg !6521
  %arraydecay160 = getelementptr inbounds [2 x float], [2 x float]* %s, i64 0, i64 0, !dbg !6522
  call void @copy_v2_v2(float* %arraydecay159, float* %arraydecay160), !dbg !6523
  %134 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6524
  call void @set_linehit_depth(%struct.KnifeTool_OpData* %134, %struct.KnifeLineHit* %hit), !dbg !6525
  %135 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6526
  %136 = bitcast %struct.KnifeLineHit* %135 to i8*, !dbg !6526
  %cmp161 = icmp eq i8* %136, null, !dbg !6526
  br i1 %cmp161, label %land.lhs.true163, label %cond.false, !dbg !6526

land.lhs.true163:                                 ; preds = %if.then151
  %137 = load i8*, i8** %_linehits_static, align 8, !dbg !6526
  %cmp164 = icmp ne i8* %137, null, !dbg !6526
  br i1 %cmp164, label %land.lhs.true166, label %cond.false, !dbg !6526

land.lhs.true166:                                 ; preds = %land.lhs.true163
  %138 = load i32, i32* %_linehits_count, align 4, !dbg !6526
  %add167 = add nsw i32 %138, 1, !dbg !6526
  %conv168 = sext i32 %add167 to i64, !dbg !6526
  %cmp169 = icmp uge i64 0, %conv168, !dbg !6526
  br i1 %cmp169, label %cond.true, label %cond.false, !dbg !6526

cond.true:                                        ; preds = %land.lhs.true166
  %139 = load i8*, i8** %_linehits_static, align 8, !dbg !6526
  %140 = bitcast i8* %139 to %struct.KnifeLineHit*, !dbg !6526
  store %struct.KnifeLineHit* %140, %struct.KnifeLineHit** %linehits, align 8, !dbg !6526
  br label %cond.end192, !dbg !6526

cond.false:                                       ; preds = %land.lhs.true166, %land.lhs.true163, %if.then151
  %141 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6526
  %142 = bitcast %struct.KnifeLineHit* %141 to i8*, !dbg !6526
  %143 = load i8*, i8** %_linehits_static, align 8, !dbg !6526
  %cmp171 = icmp eq i8* %142, %143, !dbg !6526
  br i1 %cmp171, label %land.lhs.true173, label %cond.false177, !dbg !6526

land.lhs.true173:                                 ; preds = %cond.false
  %144 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6526
  %145 = bitcast %struct.KnifeLineHit* %144 to i8*, !dbg !6526
  %cmp174 = icmp ne i8* %145, null, !dbg !6526
  br i1 %cmp174, label %cond.true176, label %cond.false177, !dbg !6526

cond.true176:                                     ; preds = %land.lhs.true173
  br label %cond.end183, !dbg !6526

cond.false177:                                    ; preds = %land.lhs.true173, %cond.false
  %146 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6526
  %cmp178 = icmp eq %struct.KnifeLineHit* %146, null, !dbg !6526
  br i1 %cmp178, label %cond.true180, label %cond.false181, !dbg !6526

cond.true180:                                     ; preds = %cond.false177
  br label %cond.end, !dbg !6526

cond.false181:                                    ; preds = %cond.false177
  %147 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !6526
  %148 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6526
  %149 = bitcast %struct.KnifeLineHit* %148 to i8*, !dbg !6526
  %call182 = call i64 %147(i8* %149), !dbg !6526
  %div = udiv i64 %call182, 72, !dbg !6526
  br label %cond.end, !dbg !6526

cond.end:                                         ; preds = %cond.false181, %cond.true180
  %cond = phi i64 [ 0, %cond.true180 ], [ %div, %cond.false181 ], !dbg !6526
  br label %cond.end183, !dbg !6526

cond.end183:                                      ; preds = %cond.end, %cond.true176
  %cond184 = phi i64 [ 0, %cond.true176 ], [ %cond, %cond.end ], !dbg !6526
  %150 = load i32, i32* %_linehits_count, align 4, !dbg !6526
  %add185 = add nsw i32 %150, 1, !dbg !6526
  %conv186 = sext i32 %add185 to i64, !dbg !6526
  %cmp187 = icmp uge i64 %cond184, %conv186, !dbg !6526
  br i1 %cmp187, label %cond.true189, label %cond.false190, !dbg !6526

cond.true189:                                     ; preds = %cond.end183
  br label %cond.end191, !dbg !6526

cond.false190:                                    ; preds = %cond.end183
  %151 = bitcast %struct.KnifeLineHit** %linehits to i8**, !dbg !6526
  %152 = load i8*, i8** %_linehits_static, align 8, !dbg !6526
  %153 = load i32, i32* %_linehits_count, align 4, !dbg !6526
  call void @_bli_array_grow_func(i8** %151, i8* %152, i32 72, i32 %153, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0)), !dbg !6526
  br label %cond.end191, !dbg !6526

cond.end191:                                      ; preds = %cond.false190, %cond.true189
  br label %cond.end192, !dbg !6526

cond.end192:                                      ; preds = %cond.end191, %cond.true
  %154 = load i32, i32* %_linehits_count, align 4, !dbg !6526
  %add193 = add nsw i32 %154, 1, !dbg !6526
  store i32 %add193, i32* %_linehits_count, align 4, !dbg !6526
  %155 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6526
  %156 = load i32, i32* %_linehits_count, align 4, !dbg !6526
  %sub = sub nsw i32 %156, 1, !dbg !6526
  %idxprom194 = sext i32 %sub to i64, !dbg !6526
  %arrayidx195 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %155, i64 %idxprom194, !dbg !6526
  %157 = bitcast %struct.KnifeLineHit* %arrayidx195 to i8*, !dbg !6526
  %158 = bitcast %struct.KnifeLineHit* %hit to i8*, !dbg !6526
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 72, i1 false), !dbg !6526
  br label %if.end196, !dbg !6527

if.end196:                                        ; preds = %cond.end192, %if.then145
  br label %if.end197, !dbg !6528

if.end197:                                        ; preds = %if.end196, %for.body136
  br label %for.inc198, !dbg !6529

for.inc198:                                       ; preds = %if.end197
  %159 = bitcast %struct.KnifeVert** %v to i64*, !dbg !6530
  %call199 = call i8* @BLI_smallhash_iternext(%struct.SmallHashIter* %hiter, i64* %159), !dbg !6531
  store i8* %call199, i8** %val, align 8, !dbg !6532
  br label %for.cond134, !dbg !6533, !llvm.loop !6534

for.end200:                                       ; preds = %for.cond134
  %160 = bitcast %struct.KnifeEdge** %kfe to i64*, !dbg !6536
  %call201 = call i8* @BLI_smallhash_iternew(%struct.SmallHash* %kfes, %struct.SmallHashIter* %hiter, i64* %160), !dbg !6538
  store i8* %call201, i8** %val, align 8, !dbg !6539
  br label %for.cond202, !dbg !6540

for.cond202:                                      ; preds = %for.inc367, %for.end200
  %161 = load i8*, i8** %val, align 8, !dbg !6541
  %tobool203 = icmp ne i8* %161, null, !dbg !6543
  br i1 %tobool203, label %for.body204, label %for.end369, !dbg !6543

for.body204:                                      ; preds = %for.cond202
  %162 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6544
  %163 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6546
  %v1205 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %163, i32 0, i32 0, !dbg !6547
  %164 = load %struct.KnifeVert*, %struct.KnifeVert** %v1205, align 8, !dbg !6547
  %cageco206 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %164, i32 0, i32 4, !dbg !6548
  %arraydecay207 = getelementptr inbounds [3 x float], [3 x float]* %cageco206, i64 0, i64 0, !dbg !6546
  %arraydecay208 = getelementptr inbounds [2 x float], [2 x float]* %se1, i64 0, i64 0, !dbg !6549
  call void @knife_project_v2(%struct.KnifeTool_OpData* %162, float* %arraydecay207, float* %arraydecay208), !dbg !6550
  %165 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6551
  %166 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6552
  %v2209 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %166, i32 0, i32 1, !dbg !6553
  %167 = load %struct.KnifeVert*, %struct.KnifeVert** %v2209, align 8, !dbg !6553
  %cageco210 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %167, i32 0, i32 4, !dbg !6554
  %arraydecay211 = getelementptr inbounds [3 x float], [3 x float]* %cageco210, i64 0, i64 0, !dbg !6552
  %arraydecay212 = getelementptr inbounds [2 x float], [2 x float]* %se2, i64 0, i64 0, !dbg !6555
  call void @knife_project_v2(%struct.KnifeTool_OpData* %165, float* %arraydecay211, float* %arraydecay212), !dbg !6556
  %arraydecay213 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6557
  %arraydecay214 = getelementptr inbounds [2 x float], [2 x float]* %s2, i64 0, i64 0, !dbg !6558
  %arraydecay215 = getelementptr inbounds [2 x float], [2 x float]* %se1, i64 0, i64 0, !dbg !6559
  %arraydecay216 = getelementptr inbounds [2 x float], [2 x float]* %se2, i64 0, i64 0, !dbg !6560
  %arraydecay217 = getelementptr inbounds [2 x float], [2 x float]* %sint, i64 0, i64 0, !dbg !6561
  %call218 = call i32 @isect_seg_seg_v2_point(float* %arraydecay213, float* %arraydecay214, float* %arraydecay215, float* %arraydecay216, float* %arraydecay217), !dbg !6562
  store i32 %call218, i32* %isect_kind, align 4, !dbg !6563
  %168 = load i32, i32* %isect_kind, align 4, !dbg !6564
  %cmp219 = icmp eq i32 %168, -1, !dbg !6566
  br i1 %cmp219, label %if.then221, label %if.end245, !dbg !6567

if.then221:                                       ; preds = %for.body204
  %arraydecay222 = getelementptr inbounds [2 x float], [2 x float]* %sint, i64 0, i64 0, !dbg !6568
  %arraydecay223 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6570
  %arraydecay224 = getelementptr inbounds [2 x float], [2 x float]* %se1, i64 0, i64 0, !dbg !6571
  %arraydecay225 = getelementptr inbounds [2 x float], [2 x float]* %se2, i64 0, i64 0, !dbg !6572
  call void @closest_to_line_segment_v2(float* %arraydecay222, float* %arraydecay223, float* %arraydecay224, float* %arraydecay225), !dbg !6573
  %arraydecay226 = getelementptr inbounds [2 x float], [2 x float]* %sint, i64 0, i64 0, !dbg !6574
  %arraydecay227 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6576
  %call228 = call float @len_squared_v2v2(float* %arraydecay226, float* %arraydecay227), !dbg !6577
  %169 = load float, float* %line_tol_sq, align 4, !dbg !6578
  %cmp229 = fcmp ole float %call228, %169, !dbg !6579
  br i1 %cmp229, label %if.then231, label %if.else232, !dbg !6580

if.then231:                                       ; preds = %if.then221
  store i32 1, i32* %isect_kind, align 4, !dbg !6581
  br label %if.end244, !dbg !6582

if.else232:                                       ; preds = %if.then221
  %arraydecay233 = getelementptr inbounds [2 x float], [2 x float]* %sint, i64 0, i64 0, !dbg !6583
  %arraydecay234 = getelementptr inbounds [2 x float], [2 x float]* %s2, i64 0, i64 0, !dbg !6585
  %arraydecay235 = getelementptr inbounds [2 x float], [2 x float]* %se1, i64 0, i64 0, !dbg !6586
  %arraydecay236 = getelementptr inbounds [2 x float], [2 x float]* %se2, i64 0, i64 0, !dbg !6587
  call void @closest_to_line_segment_v2(float* %arraydecay233, float* %arraydecay234, float* %arraydecay235, float* %arraydecay236), !dbg !6588
  %arraydecay237 = getelementptr inbounds [2 x float], [2 x float]* %sint, i64 0, i64 0, !dbg !6589
  %arraydecay238 = getelementptr inbounds [2 x float], [2 x float]* %s2, i64 0, i64 0, !dbg !6591
  %call239 = call float @len_squared_v2v2(float* %arraydecay237, float* %arraydecay238), !dbg !6592
  %170 = load float, float* %line_tol_sq, align 4, !dbg !6593
  %cmp240 = fcmp ole float %call239, %170, !dbg !6594
  br i1 %cmp240, label %if.then242, label %if.end243, !dbg !6595

if.then242:                                       ; preds = %if.else232
  store i32 1, i32* %isect_kind, align 4, !dbg !6596
  br label %if.end243, !dbg !6597

if.end243:                                        ; preds = %if.then242, %if.else232
  br label %if.end244

if.end244:                                        ; preds = %if.end243, %if.then231
  br label %if.end245, !dbg !6598

if.end245:                                        ; preds = %if.end244, %for.body204
  %171 = load i32, i32* %isect_kind, align 4, !dbg !6599
  %cmp246 = icmp eq i32 %171, 1, !dbg !6601
  br i1 %cmp246, label %if.then248, label %if.end366, !dbg !6602

if.then248:                                       ; preds = %if.end245
  %arraydecay249 = getelementptr inbounds [2 x float], [2 x float]* %sint, i64 0, i64 0, !dbg !6603
  %arraydecay250 = getelementptr inbounds [2 x float], [2 x float]* %se1, i64 0, i64 0, !dbg !6605
  %call251 = call float @len_v2v2(float* %arraydecay249, float* %arraydecay250), !dbg !6606
  store float %call251, float* %d1, align 4, !dbg !6607
  %arraydecay252 = getelementptr inbounds [2 x float], [2 x float]* %se2, i64 0, i64 0, !dbg !6608
  %arraydecay253 = getelementptr inbounds [2 x float], [2 x float]* %se1, i64 0, i64 0, !dbg !6609
  %call254 = call float @len_v2v2(float* %arraydecay252, float* %arraydecay253), !dbg !6610
  store float %call254, float* %d2, align 4, !dbg !6611
  %172 = load float, float* %d1, align 4, !dbg !6612
  %173 = load float, float* %line_tol, align 4, !dbg !6614
  %cmp255 = fcmp ole float %172, %173, !dbg !6615
  br i1 %cmp255, label %if.end365, label %lor.lhs.false, !dbg !6616

lor.lhs.false:                                    ; preds = %if.then248
  %174 = load float, float* %d2, align 4, !dbg !6617
  %175 = load float, float* %line_tol, align 4, !dbg !6618
  %cmp257 = fcmp ole float %174, %175, !dbg !6619
  br i1 %cmp257, label %if.end365, label %lor.lhs.false259, !dbg !6620

lor.lhs.false259:                                 ; preds = %lor.lhs.false
  %176 = load float, float* %d1, align 4, !dbg !6621
  %177 = load float, float* %d2, align 4, !dbg !6622
  %sub260 = fsub float %176, %177, !dbg !6623
  %178 = call float @llvm.fabs.f32(float %sub260), !dbg !6624
  %179 = load float, float* %line_tol, align 4, !dbg !6625
  %cmp261 = fcmp ole float %178, %179, !dbg !6626
  br i1 %cmp261, label %if.end365, label %if.then263, !dbg !6627

if.then263:                                       ; preds = %lor.lhs.false259
  call void @llvm.dbg.declare(metadata [3 x float]* %p_cage, metadata !6628, metadata !DIExpression()), !dbg !6630
  call void @llvm.dbg.declare(metadata [3 x float]* %p_cage_tmp, metadata !6631, metadata !DIExpression()), !dbg !6632
  %180 = load float, float* %d1, align 4, !dbg !6633
  %181 = load float, float* %d2, align 4, !dbg !6634
  %div264 = fdiv float %180, %181, !dbg !6635
  store float %div264, float* %lambda, align 4, !dbg !6636
  %182 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6637
  %arraydecay265 = getelementptr inbounds [2 x float], [2 x float]* %sint, i64 0, i64 0, !dbg !6638
  %arraydecay266 = getelementptr inbounds [3 x float], [3 x float]* %r1, i64 0, i64 0, !dbg !6639
  %arraydecay267 = getelementptr inbounds [3 x float], [3 x float]* %r2, i64 0, i64 0, !dbg !6640
  call void @knife_input_ray_segment(%struct.KnifeTool_OpData* %182, float* %arraydecay265, float 1.000000e+00, float* %arraydecay266, float* %arraydecay267), !dbg !6641
  %183 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6642
  %v1268 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %183, i32 0, i32 0, !dbg !6643
  %184 = load %struct.KnifeVert*, %struct.KnifeVert** %v1268, align 8, !dbg !6643
  %cageco269 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %184, i32 0, i32 4, !dbg !6644
  %arraydecay270 = getelementptr inbounds [3 x float], [3 x float]* %cageco269, i64 0, i64 0, !dbg !6642
  %185 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6645
  %v2271 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %185, i32 0, i32 1, !dbg !6646
  %186 = load %struct.KnifeVert*, %struct.KnifeVert** %v2271, align 8, !dbg !6646
  %cageco272 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %186, i32 0, i32 4, !dbg !6647
  %arraydecay273 = getelementptr inbounds [3 x float], [3 x float]* %cageco272, i64 0, i64 0, !dbg !6645
  %arraydecay274 = getelementptr inbounds [3 x float], [3 x float]* %r1, i64 0, i64 0, !dbg !6648
  %arraydecay275 = getelementptr inbounds [3 x float], [3 x float]* %r2, i64 0, i64 0, !dbg !6649
  %arraydecay276 = getelementptr inbounds [3 x float], [3 x float]* %p_cage, i64 0, i64 0, !dbg !6650
  %arraydecay277 = getelementptr inbounds [3 x float], [3 x float]* %p_cage_tmp, i64 0, i64 0, !dbg !6651
  %call278 = call i32 @isect_line_line_v3(float* %arraydecay270, float* %arraydecay273, float* %arraydecay274, float* %arraydecay275, float* %arraydecay276, float* %arraydecay277), !dbg !6652
  store i32 %call278, i32* %isect_kind, align 4, !dbg !6653
  %187 = load i32, i32* %isect_kind, align 4, !dbg !6654
  %cmp279 = icmp sge i32 %187, 1, !dbg !6656
  br i1 %cmp279, label %land.lhs.true281, label %if.end364, !dbg !6657

land.lhs.true281:                                 ; preds = %if.then263
  %188 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6658
  %arraydecay282 = getelementptr inbounds [3 x float], [3 x float]* %p_cage, i64 0, i64 0, !dbg !6659
  %arraydecay283 = getelementptr inbounds [2 x float], [2 x float]* %sint, i64 0, i64 0, !dbg !6660
  %call284 = call zeroext i8 @point_is_visible(%struct.KnifeTool_OpData* %188, float* %arraydecay282, float* %arraydecay283, %struct.bglMats* %mats), !dbg !6661
  %conv285 = zext i8 %call284 to i32, !dbg !6661
  %tobool286 = icmp ne i32 %conv285, 0, !dbg !6661
  br i1 %tobool286, label %if.then287, label %if.end364, !dbg !6662

if.then287:                                       ; preds = %land.lhs.true281
  %189 = bitcast %struct.KnifeLineHit* %hit to i8*, !dbg !6663
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 72, i1 false), !dbg !6663
  %190 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6665
  %snap_midpoints = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %190, i32 0, i32 37, !dbg !6667
  %191 = load i8, i8* %snap_midpoints, align 4, !dbg !6667
  %tobool288 = icmp ne i8 %191, 0, !dbg !6665
  br i1 %tobool288, label %if.then289, label %if.end300, !dbg !6668

if.then289:                                       ; preds = %if.then287
  %arraydecay290 = getelementptr inbounds [3 x float], [3 x float]* %p_cage, i64 0, i64 0, !dbg !6669
  %192 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6671
  %v1291 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %192, i32 0, i32 0, !dbg !6672
  %193 = load %struct.KnifeVert*, %struct.KnifeVert** %v1291, align 8, !dbg !6672
  %cageco292 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %193, i32 0, i32 4, !dbg !6673
  %arraydecay293 = getelementptr inbounds [3 x float], [3 x float]* %cageco292, i64 0, i64 0, !dbg !6671
  %194 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6674
  %v2294 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %194, i32 0, i32 1, !dbg !6675
  %195 = load %struct.KnifeVert*, %struct.KnifeVert** %v2294, align 8, !dbg !6675
  %cageco295 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %195, i32 0, i32 4, !dbg !6676
  %arraydecay296 = getelementptr inbounds [3 x float], [3 x float]* %cageco295, i64 0, i64 0, !dbg !6674
  call void @mid_v3_v3v3(float* %arraydecay290, float* %arraydecay293, float* %arraydecay296), !dbg !6677
  %arraydecay297 = getelementptr inbounds [2 x float], [2 x float]* %sint, i64 0, i64 0, !dbg !6678
  %arraydecay298 = getelementptr inbounds [2 x float], [2 x float]* %se1, i64 0, i64 0, !dbg !6679
  %arraydecay299 = getelementptr inbounds [2 x float], [2 x float]* %se2, i64 0, i64 0, !dbg !6680
  call void @mid_v2_v2v2(float* %arraydecay297, float* %arraydecay298, float* %arraydecay299), !dbg !6681
  store float 5.000000e-01, float* %lambda, align 4, !dbg !6682
  br label %if.end300, !dbg !6683

if.end300:                                        ; preds = %if.then289, %if.then287
  %196 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6684
  %kfe301 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 6, !dbg !6685
  store %struct.KnifeEdge* %196, %struct.KnifeEdge** %kfe301, align 8, !dbg !6686
  %hit302 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 0, !dbg !6687
  %arraydecay303 = getelementptr inbounds [3 x float], [3 x float]* %hit302, i64 0, i64 0, !dbg !6688
  %arraydecay304 = getelementptr inbounds [3 x float], [3 x float]* %p_cage, i64 0, i64 0, !dbg !6689
  %197 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6690
  %v1305 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %197, i32 0, i32 0, !dbg !6691
  %198 = load %struct.KnifeVert*, %struct.KnifeVert** %v1305, align 8, !dbg !6691
  %co306 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %198, i32 0, i32 3, !dbg !6692
  %arraydecay307 = getelementptr inbounds [3 x float], [3 x float]* %co306, i64 0, i64 0, !dbg !6690
  %199 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6693
  %v2308 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %199, i32 0, i32 1, !dbg !6694
  %200 = load %struct.KnifeVert*, %struct.KnifeVert** %v2308, align 8, !dbg !6694
  %co309 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %200, i32 0, i32 3, !dbg !6695
  %arraydecay310 = getelementptr inbounds [3 x float], [3 x float]* %co309, i64 0, i64 0, !dbg !6693
  %201 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6696
  %v1311 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %201, i32 0, i32 0, !dbg !6697
  %202 = load %struct.KnifeVert*, %struct.KnifeVert** %v1311, align 8, !dbg !6697
  %cageco312 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %202, i32 0, i32 4, !dbg !6698
  %arraydecay313 = getelementptr inbounds [3 x float], [3 x float]* %cageco312, i64 0, i64 0, !dbg !6696
  %203 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !6699
  %v2314 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %203, i32 0, i32 1, !dbg !6700
  %204 = load %struct.KnifeVert*, %struct.KnifeVert** %v2314, align 8, !dbg !6700
  %cageco315 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %204, i32 0, i32 4, !dbg !6701
  %arraydecay316 = getelementptr inbounds [3 x float], [3 x float]* %cageco315, i64 0, i64 0, !dbg !6699
  call void @transform_point_by_seg_v3(float* %arraydecay303, float* %arraydecay304, float* %arraydecay307, float* %arraydecay310, float* %arraydecay313, float* %arraydecay316), !dbg !6702
  %cagehit317 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 1, !dbg !6703
  %arraydecay318 = getelementptr inbounds [3 x float], [3 x float]* %cagehit317, i64 0, i64 0, !dbg !6704
  %arraydecay319 = getelementptr inbounds [3 x float], [3 x float]* %p_cage, i64 0, i64 0, !dbg !6705
  call void @copy_v3_v3(float* %arraydecay318, float* %arraydecay319), !dbg !6706
  %schit320 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 2, !dbg !6707
  %arraydecay321 = getelementptr inbounds [2 x float], [2 x float]* %schit320, i64 0, i64 0, !dbg !6708
  %arraydecay322 = getelementptr inbounds [2 x float], [2 x float]* %sint, i64 0, i64 0, !dbg !6709
  call void @copy_v2_v2(float* %arraydecay321, float* %arraydecay322), !dbg !6710
  %205 = load float, float* %lambda, align 4, !dbg !6711
  %perc = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 4, !dbg !6712
  store float %205, float* %perc, align 4, !dbg !6713
  %206 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6714
  call void @set_linehit_depth(%struct.KnifeTool_OpData* %206, %struct.KnifeLineHit* %hit), !dbg !6715
  %207 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6716
  %208 = bitcast %struct.KnifeLineHit* %207 to i8*, !dbg !6716
  %cmp323 = icmp eq i8* %208, null, !dbg !6716
  br i1 %cmp323, label %land.lhs.true325, label %cond.false334, !dbg !6716

land.lhs.true325:                                 ; preds = %if.end300
  %209 = load i8*, i8** %_linehits_static, align 8, !dbg !6716
  %cmp326 = icmp ne i8* %209, null, !dbg !6716
  br i1 %cmp326, label %land.lhs.true328, label %cond.false334, !dbg !6716

land.lhs.true328:                                 ; preds = %land.lhs.true325
  %210 = load i32, i32* %_linehits_count, align 4, !dbg !6716
  %add329 = add nsw i32 %210, 1, !dbg !6716
  %conv330 = sext i32 %add329 to i64, !dbg !6716
  %cmp331 = icmp uge i64 0, %conv330, !dbg !6716
  br i1 %cmp331, label %cond.true333, label %cond.false334, !dbg !6716

cond.true333:                                     ; preds = %land.lhs.true328
  %211 = load i8*, i8** %_linehits_static, align 8, !dbg !6716
  %212 = bitcast i8* %211 to %struct.KnifeLineHit*, !dbg !6716
  store %struct.KnifeLineHit* %212, %struct.KnifeLineHit** %linehits, align 8, !dbg !6716
  br label %cond.end359, !dbg !6716

cond.false334:                                    ; preds = %land.lhs.true328, %land.lhs.true325, %if.end300
  %213 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6716
  %214 = bitcast %struct.KnifeLineHit* %213 to i8*, !dbg !6716
  %215 = load i8*, i8** %_linehits_static, align 8, !dbg !6716
  %cmp335 = icmp eq i8* %214, %215, !dbg !6716
  br i1 %cmp335, label %land.lhs.true337, label %cond.false341, !dbg !6716

land.lhs.true337:                                 ; preds = %cond.false334
  %216 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6716
  %217 = bitcast %struct.KnifeLineHit* %216 to i8*, !dbg !6716
  %cmp338 = icmp ne i8* %217, null, !dbg !6716
  br i1 %cmp338, label %cond.true340, label %cond.false341, !dbg !6716

cond.true340:                                     ; preds = %land.lhs.true337
  br label %cond.end350, !dbg !6716

cond.false341:                                    ; preds = %land.lhs.true337, %cond.false334
  %218 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6716
  %cmp342 = icmp eq %struct.KnifeLineHit* %218, null, !dbg !6716
  br i1 %cmp342, label %cond.true344, label %cond.false345, !dbg !6716

cond.true344:                                     ; preds = %cond.false341
  br label %cond.end348, !dbg !6716

cond.false345:                                    ; preds = %cond.false341
  %219 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !6716
  %220 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6716
  %221 = bitcast %struct.KnifeLineHit* %220 to i8*, !dbg !6716
  %call346 = call i64 %219(i8* %221), !dbg !6716
  %div347 = udiv i64 %call346, 72, !dbg !6716
  br label %cond.end348, !dbg !6716

cond.end348:                                      ; preds = %cond.false345, %cond.true344
  %cond349 = phi i64 [ 0, %cond.true344 ], [ %div347, %cond.false345 ], !dbg !6716
  br label %cond.end350, !dbg !6716

cond.end350:                                      ; preds = %cond.end348, %cond.true340
  %cond351 = phi i64 [ 0, %cond.true340 ], [ %cond349, %cond.end348 ], !dbg !6716
  %222 = load i32, i32* %_linehits_count, align 4, !dbg !6716
  %add352 = add nsw i32 %222, 1, !dbg !6716
  %conv353 = sext i32 %add352 to i64, !dbg !6716
  %cmp354 = icmp uge i64 %cond351, %conv353, !dbg !6716
  br i1 %cmp354, label %cond.true356, label %cond.false357, !dbg !6716

cond.true356:                                     ; preds = %cond.end350
  br label %cond.end358, !dbg !6716

cond.false357:                                    ; preds = %cond.end350
  %223 = bitcast %struct.KnifeLineHit** %linehits to i8**, !dbg !6716
  %224 = load i8*, i8** %_linehits_static, align 8, !dbg !6716
  %225 = load i32, i32* %_linehits_count, align 4, !dbg !6716
  call void @_bli_array_grow_func(i8** %223, i8* %224, i32 72, i32 %225, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0)), !dbg !6716
  br label %cond.end358, !dbg !6716

cond.end358:                                      ; preds = %cond.false357, %cond.true356
  br label %cond.end359, !dbg !6716

cond.end359:                                      ; preds = %cond.end358, %cond.true333
  %226 = load i32, i32* %_linehits_count, align 4, !dbg !6716
  %add360 = add nsw i32 %226, 1, !dbg !6716
  store i32 %add360, i32* %_linehits_count, align 4, !dbg !6716
  %227 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6716
  %228 = load i32, i32* %_linehits_count, align 4, !dbg !6716
  %sub361 = sub nsw i32 %228, 1, !dbg !6716
  %idxprom362 = sext i32 %sub361 to i64, !dbg !6716
  %arrayidx363 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %227, i64 %idxprom362, !dbg !6716
  %229 = bitcast %struct.KnifeLineHit* %arrayidx363 to i8*, !dbg !6716
  %230 = bitcast %struct.KnifeLineHit* %hit to i8*, !dbg !6716
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %230, i64 72, i1 false), !dbg !6716
  br label %if.end364, !dbg !6717

if.end364:                                        ; preds = %cond.end359, %land.lhs.true281, %if.then263
  br label %if.end365, !dbg !6718

if.end365:                                        ; preds = %if.end364, %lor.lhs.false259, %lor.lhs.false, %if.then248
  br label %if.end366, !dbg !6719

if.end366:                                        ; preds = %if.end365, %if.end245
  br label %for.inc367, !dbg !6720

for.inc367:                                       ; preds = %if.end366
  %231 = bitcast %struct.KnifeEdge** %kfe to i64*, !dbg !6721
  %call368 = call i8* @BLI_smallhash_iternext(%struct.SmallHashIter* %hiter, i64* %231), !dbg !6722
  store i8* %call368, i8** %val, align 8, !dbg !6723
  br label %for.cond202, !dbg !6724, !llvm.loop !6725

for.end369:                                       ; preds = %for.cond202
  %232 = bitcast %struct.BMFace** %f to i64*, !dbg !6727
  %call370 = call i8* @BLI_smallhash_iternew(%struct.SmallHash* %faces, %struct.SmallHashIter* %hiter, i64* %232), !dbg !6729
  store i8* %call370, i8** %val, align 8, !dbg !6730
  br label %for.cond371, !dbg !6731

for.cond371:                                      ; preds = %for.inc507, %for.end369
  %233 = load i8*, i8** %val, align 8, !dbg !6732
  %tobool372 = icmp ne i8* %233, null, !dbg !6734
  br i1 %tobool372, label %for.body373, label %for.end509, !dbg !6734

for.body373:                                      ; preds = %for.cond371
  call void @llvm.dbg.declare(metadata [3 x float]* %p, metadata !6735, metadata !DIExpression()), !dbg !6737
  call void @llvm.dbg.declare(metadata [3 x float]* %p_cage374, metadata !6738, metadata !DIExpression()), !dbg !6739
  %234 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6740
  %arraydecay375 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6742
  %arraydecay376 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !6743
  %arraydecay377 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !6744
  %235 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6745
  %236 = load float, float* %face_tol_sq, align 4, !dbg !6746
  %arraydecay378 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !6747
  %arraydecay379 = getelementptr inbounds [3 x float], [3 x float]* %p_cage374, i64 0, i64 0, !dbg !6748
  %call380 = call zeroext i8 @knife_ray_intersect_face(%struct.KnifeTool_OpData* %234, float* %arraydecay375, float* %arraydecay376, float* %arraydecay377, %struct.BMFace* %235, float %236, float* %arraydecay378, float* %arraydecay379), !dbg !6749
  %tobool381 = icmp ne i8 %call380, 0, !dbg !6749
  br i1 %tobool381, label %if.then382, label %if.end440, !dbg !6750

if.then382:                                       ; preds = %for.body373
  %237 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6751
  %arraydecay383 = getelementptr inbounds [3 x float], [3 x float]* %p_cage374, i64 0, i64 0, !dbg !6754
  %arraydecay384 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6755
  %call385 = call zeroext i8 @point_is_visible(%struct.KnifeTool_OpData* %237, float* %arraydecay383, float* %arraydecay384, %struct.bglMats* %mats), !dbg !6756
  %tobool386 = icmp ne i8 %call385, 0, !dbg !6756
  br i1 %tobool386, label %if.then387, label %if.end439, !dbg !6757

if.then387:                                       ; preds = %if.then382
  %238 = bitcast %struct.KnifeLineHit* %hit to i8*, !dbg !6758
  call void @llvm.memset.p0i8.i64(i8* align 8 %238, i8 0, i64 72, i1 false), !dbg !6758
  %239 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6760
  %f388 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 8, !dbg !6761
  store %struct.BMFace* %239, %struct.BMFace** %f388, align 8, !dbg !6762
  %hit389 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 0, !dbg !6763
  %arraydecay390 = getelementptr inbounds [3 x float], [3 x float]* %hit389, i64 0, i64 0, !dbg !6764
  %arraydecay391 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !6765
  call void @copy_v3_v3(float* %arraydecay390, float* %arraydecay391), !dbg !6766
  %cagehit392 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 1, !dbg !6767
  %arraydecay393 = getelementptr inbounds [3 x float], [3 x float]* %cagehit392, i64 0, i64 0, !dbg !6768
  %arraydecay394 = getelementptr inbounds [3 x float], [3 x float]* %p_cage374, i64 0, i64 0, !dbg !6769
  call void @copy_v3_v3(float* %arraydecay393, float* %arraydecay394), !dbg !6770
  %schit395 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 2, !dbg !6771
  %arraydecay396 = getelementptr inbounds [2 x float], [2 x float]* %schit395, i64 0, i64 0, !dbg !6772
  %arraydecay397 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6773
  call void @copy_v2_v2(float* %arraydecay396, float* %arraydecay397), !dbg !6774
  %240 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6775
  call void @set_linehit_depth(%struct.KnifeTool_OpData* %240, %struct.KnifeLineHit* %hit), !dbg !6776
  %241 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6777
  %242 = bitcast %struct.KnifeLineHit* %241 to i8*, !dbg !6777
  %cmp398 = icmp eq i8* %242, null, !dbg !6777
  br i1 %cmp398, label %land.lhs.true400, label %cond.false409, !dbg !6777

land.lhs.true400:                                 ; preds = %if.then387
  %243 = load i8*, i8** %_linehits_static, align 8, !dbg !6777
  %cmp401 = icmp ne i8* %243, null, !dbg !6777
  br i1 %cmp401, label %land.lhs.true403, label %cond.false409, !dbg !6777

land.lhs.true403:                                 ; preds = %land.lhs.true400
  %244 = load i32, i32* %_linehits_count, align 4, !dbg !6777
  %add404 = add nsw i32 %244, 1, !dbg !6777
  %conv405 = sext i32 %add404 to i64, !dbg !6777
  %cmp406 = icmp uge i64 0, %conv405, !dbg !6777
  br i1 %cmp406, label %cond.true408, label %cond.false409, !dbg !6777

cond.true408:                                     ; preds = %land.lhs.true403
  %245 = load i8*, i8** %_linehits_static, align 8, !dbg !6777
  %246 = bitcast i8* %245 to %struct.KnifeLineHit*, !dbg !6777
  store %struct.KnifeLineHit* %246, %struct.KnifeLineHit** %linehits, align 8, !dbg !6777
  br label %cond.end434, !dbg !6777

cond.false409:                                    ; preds = %land.lhs.true403, %land.lhs.true400, %if.then387
  %247 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6777
  %248 = bitcast %struct.KnifeLineHit* %247 to i8*, !dbg !6777
  %249 = load i8*, i8** %_linehits_static, align 8, !dbg !6777
  %cmp410 = icmp eq i8* %248, %249, !dbg !6777
  br i1 %cmp410, label %land.lhs.true412, label %cond.false416, !dbg !6777

land.lhs.true412:                                 ; preds = %cond.false409
  %250 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6777
  %251 = bitcast %struct.KnifeLineHit* %250 to i8*, !dbg !6777
  %cmp413 = icmp ne i8* %251, null, !dbg !6777
  br i1 %cmp413, label %cond.true415, label %cond.false416, !dbg !6777

cond.true415:                                     ; preds = %land.lhs.true412
  br label %cond.end425, !dbg !6777

cond.false416:                                    ; preds = %land.lhs.true412, %cond.false409
  %252 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6777
  %cmp417 = icmp eq %struct.KnifeLineHit* %252, null, !dbg !6777
  br i1 %cmp417, label %cond.true419, label %cond.false420, !dbg !6777

cond.true419:                                     ; preds = %cond.false416
  br label %cond.end423, !dbg !6777

cond.false420:                                    ; preds = %cond.false416
  %253 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !6777
  %254 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6777
  %255 = bitcast %struct.KnifeLineHit* %254 to i8*, !dbg !6777
  %call421 = call i64 %253(i8* %255), !dbg !6777
  %div422 = udiv i64 %call421, 72, !dbg !6777
  br label %cond.end423, !dbg !6777

cond.end423:                                      ; preds = %cond.false420, %cond.true419
  %cond424 = phi i64 [ 0, %cond.true419 ], [ %div422, %cond.false420 ], !dbg !6777
  br label %cond.end425, !dbg !6777

cond.end425:                                      ; preds = %cond.end423, %cond.true415
  %cond426 = phi i64 [ 0, %cond.true415 ], [ %cond424, %cond.end423 ], !dbg !6777
  %256 = load i32, i32* %_linehits_count, align 4, !dbg !6777
  %add427 = add nsw i32 %256, 1, !dbg !6777
  %conv428 = sext i32 %add427 to i64, !dbg !6777
  %cmp429 = icmp uge i64 %cond426, %conv428, !dbg !6777
  br i1 %cmp429, label %cond.true431, label %cond.false432, !dbg !6777

cond.true431:                                     ; preds = %cond.end425
  br label %cond.end433, !dbg !6777

cond.false432:                                    ; preds = %cond.end425
  %257 = bitcast %struct.KnifeLineHit** %linehits to i8**, !dbg !6777
  %258 = load i8*, i8** %_linehits_static, align 8, !dbg !6777
  %259 = load i32, i32* %_linehits_count, align 4, !dbg !6777
  call void @_bli_array_grow_func(i8** %257, i8* %258, i32 72, i32 %259, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0)), !dbg !6777
  br label %cond.end433, !dbg !6777

cond.end433:                                      ; preds = %cond.false432, %cond.true431
  br label %cond.end434, !dbg !6777

cond.end434:                                      ; preds = %cond.end433, %cond.true408
  %260 = load i32, i32* %_linehits_count, align 4, !dbg !6777
  %add435 = add nsw i32 %260, 1, !dbg !6777
  store i32 %add435, i32* %_linehits_count, align 4, !dbg !6777
  %261 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6777
  %262 = load i32, i32* %_linehits_count, align 4, !dbg !6777
  %sub436 = sub nsw i32 %262, 1, !dbg !6777
  %idxprom437 = sext i32 %sub436 to i64, !dbg !6777
  %arrayidx438 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %261, i64 %idxprom437, !dbg !6777
  %263 = bitcast %struct.KnifeLineHit* %arrayidx438 to i8*, !dbg !6777
  %264 = bitcast %struct.KnifeLineHit* %hit to i8*, !dbg !6777
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* align 8 %264, i64 72, i1 false), !dbg !6777
  br label %if.end439, !dbg !6778

if.end439:                                        ; preds = %cond.end434, %if.then382
  br label %if.end440, !dbg !6779

if.end440:                                        ; preds = %if.end439, %for.body373
  %265 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6780
  %arraydecay441 = getelementptr inbounds [2 x float], [2 x float]* %s2, i64 0, i64 0, !dbg !6782
  %arraydecay442 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !6783
  %arraydecay443 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !6784
  %266 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6785
  %267 = load float, float* %face_tol_sq, align 4, !dbg !6786
  %arraydecay444 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !6787
  %arraydecay445 = getelementptr inbounds [3 x float], [3 x float]* %p_cage374, i64 0, i64 0, !dbg !6788
  %call446 = call zeroext i8 @knife_ray_intersect_face(%struct.KnifeTool_OpData* %265, float* %arraydecay441, float* %arraydecay442, float* %arraydecay443, %struct.BMFace* %266, float %267, float* %arraydecay444, float* %arraydecay445), !dbg !6789
  %tobool447 = icmp ne i8 %call446, 0, !dbg !6789
  br i1 %tobool447, label %if.then448, label %if.end506, !dbg !6790

if.then448:                                       ; preds = %if.end440
  %268 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6791
  %arraydecay449 = getelementptr inbounds [3 x float], [3 x float]* %p_cage374, i64 0, i64 0, !dbg !6794
  %arraydecay450 = getelementptr inbounds [2 x float], [2 x float]* %s2, i64 0, i64 0, !dbg !6795
  %call451 = call zeroext i8 @point_is_visible(%struct.KnifeTool_OpData* %268, float* %arraydecay449, float* %arraydecay450, %struct.bglMats* %mats), !dbg !6796
  %tobool452 = icmp ne i8 %call451, 0, !dbg !6796
  br i1 %tobool452, label %if.then453, label %if.end505, !dbg !6797

if.then453:                                       ; preds = %if.then448
  %269 = bitcast %struct.KnifeLineHit* %hit to i8*, !dbg !6798
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 72, i1 false), !dbg !6798
  %270 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6800
  %f454 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 8, !dbg !6801
  store %struct.BMFace* %270, %struct.BMFace** %f454, align 8, !dbg !6802
  %hit455 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 0, !dbg !6803
  %arraydecay456 = getelementptr inbounds [3 x float], [3 x float]* %hit455, i64 0, i64 0, !dbg !6804
  %arraydecay457 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !6805
  call void @copy_v3_v3(float* %arraydecay456, float* %arraydecay457), !dbg !6806
  %cagehit458 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 1, !dbg !6807
  %arraydecay459 = getelementptr inbounds [3 x float], [3 x float]* %cagehit458, i64 0, i64 0, !dbg !6808
  %arraydecay460 = getelementptr inbounds [3 x float], [3 x float]* %p_cage374, i64 0, i64 0, !dbg !6809
  call void @copy_v3_v3(float* %arraydecay459, float* %arraydecay460), !dbg !6810
  %schit461 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %hit, i32 0, i32 2, !dbg !6811
  %arraydecay462 = getelementptr inbounds [2 x float], [2 x float]* %schit461, i64 0, i64 0, !dbg !6812
  %arraydecay463 = getelementptr inbounds [2 x float], [2 x float]* %s2, i64 0, i64 0, !dbg !6813
  call void @copy_v2_v2(float* %arraydecay462, float* %arraydecay463), !dbg !6814
  %271 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6815
  call void @set_linehit_depth(%struct.KnifeTool_OpData* %271, %struct.KnifeLineHit* %hit), !dbg !6816
  %272 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6817
  %273 = bitcast %struct.KnifeLineHit* %272 to i8*, !dbg !6817
  %cmp464 = icmp eq i8* %273, null, !dbg !6817
  br i1 %cmp464, label %land.lhs.true466, label %cond.false475, !dbg !6817

land.lhs.true466:                                 ; preds = %if.then453
  %274 = load i8*, i8** %_linehits_static, align 8, !dbg !6817
  %cmp467 = icmp ne i8* %274, null, !dbg !6817
  br i1 %cmp467, label %land.lhs.true469, label %cond.false475, !dbg !6817

land.lhs.true469:                                 ; preds = %land.lhs.true466
  %275 = load i32, i32* %_linehits_count, align 4, !dbg !6817
  %add470 = add nsw i32 %275, 1, !dbg !6817
  %conv471 = sext i32 %add470 to i64, !dbg !6817
  %cmp472 = icmp uge i64 0, %conv471, !dbg !6817
  br i1 %cmp472, label %cond.true474, label %cond.false475, !dbg !6817

cond.true474:                                     ; preds = %land.lhs.true469
  %276 = load i8*, i8** %_linehits_static, align 8, !dbg !6817
  %277 = bitcast i8* %276 to %struct.KnifeLineHit*, !dbg !6817
  store %struct.KnifeLineHit* %277, %struct.KnifeLineHit** %linehits, align 8, !dbg !6817
  br label %cond.end500, !dbg !6817

cond.false475:                                    ; preds = %land.lhs.true469, %land.lhs.true466, %if.then453
  %278 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6817
  %279 = bitcast %struct.KnifeLineHit* %278 to i8*, !dbg !6817
  %280 = load i8*, i8** %_linehits_static, align 8, !dbg !6817
  %cmp476 = icmp eq i8* %279, %280, !dbg !6817
  br i1 %cmp476, label %land.lhs.true478, label %cond.false482, !dbg !6817

land.lhs.true478:                                 ; preds = %cond.false475
  %281 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6817
  %282 = bitcast %struct.KnifeLineHit* %281 to i8*, !dbg !6817
  %cmp479 = icmp ne i8* %282, null, !dbg !6817
  br i1 %cmp479, label %cond.true481, label %cond.false482, !dbg !6817

cond.true481:                                     ; preds = %land.lhs.true478
  br label %cond.end491, !dbg !6817

cond.false482:                                    ; preds = %land.lhs.true478, %cond.false475
  %283 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6817
  %cmp483 = icmp eq %struct.KnifeLineHit* %283, null, !dbg !6817
  br i1 %cmp483, label %cond.true485, label %cond.false486, !dbg !6817

cond.true485:                                     ; preds = %cond.false482
  br label %cond.end489, !dbg !6817

cond.false486:                                    ; preds = %cond.false482
  %284 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !6817
  %285 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6817
  %286 = bitcast %struct.KnifeLineHit* %285 to i8*, !dbg !6817
  %call487 = call i64 %284(i8* %286), !dbg !6817
  %div488 = udiv i64 %call487, 72, !dbg !6817
  br label %cond.end489, !dbg !6817

cond.end489:                                      ; preds = %cond.false486, %cond.true485
  %cond490 = phi i64 [ 0, %cond.true485 ], [ %div488, %cond.false486 ], !dbg !6817
  br label %cond.end491, !dbg !6817

cond.end491:                                      ; preds = %cond.end489, %cond.true481
  %cond492 = phi i64 [ 0, %cond.true481 ], [ %cond490, %cond.end489 ], !dbg !6817
  %287 = load i32, i32* %_linehits_count, align 4, !dbg !6817
  %add493 = add nsw i32 %287, 1, !dbg !6817
  %conv494 = sext i32 %add493 to i64, !dbg !6817
  %cmp495 = icmp uge i64 %cond492, %conv494, !dbg !6817
  br i1 %cmp495, label %cond.true497, label %cond.false498, !dbg !6817

cond.true497:                                     ; preds = %cond.end491
  br label %cond.end499, !dbg !6817

cond.false498:                                    ; preds = %cond.end491
  %288 = bitcast %struct.KnifeLineHit** %linehits to i8**, !dbg !6817
  %289 = load i8*, i8** %_linehits_static, align 8, !dbg !6817
  %290 = load i32, i32* %_linehits_count, align 4, !dbg !6817
  call void @_bli_array_grow_func(i8** %288, i8* %289, i32 72, i32 %290, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0)), !dbg !6817
  br label %cond.end499, !dbg !6817

cond.end499:                                      ; preds = %cond.false498, %cond.true497
  br label %cond.end500, !dbg !6817

cond.end500:                                      ; preds = %cond.end499, %cond.true474
  %291 = load i32, i32* %_linehits_count, align 4, !dbg !6817
  %add501 = add nsw i32 %291, 1, !dbg !6817
  store i32 %add501, i32* %_linehits_count, align 4, !dbg !6817
  %292 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6817
  %293 = load i32, i32* %_linehits_count, align 4, !dbg !6817
  %sub502 = sub nsw i32 %293, 1, !dbg !6817
  %idxprom503 = sext i32 %sub502 to i64, !dbg !6817
  %arrayidx504 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %292, i64 %idxprom503, !dbg !6817
  %294 = bitcast %struct.KnifeLineHit* %arrayidx504 to i8*, !dbg !6817
  %295 = bitcast %struct.KnifeLineHit* %hit to i8*, !dbg !6817
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %294, i8* align 8 %295, i64 72, i1 false), !dbg !6817
  br label %if.end505, !dbg !6818

if.end505:                                        ; preds = %cond.end500, %if.then448
  br label %if.end506, !dbg !6819

if.end506:                                        ; preds = %if.end505, %if.end440
  br label %for.inc507, !dbg !6820

for.inc507:                                       ; preds = %if.end506
  %296 = bitcast %struct.BMFace** %f to i64*, !dbg !6821
  %call508 = call i8* @BLI_smallhash_iternext(%struct.SmallHashIter* %hiter, i64* %296), !dbg !6822
  store i8* %call508, i8** %val, align 8, !dbg !6823
  br label %for.cond371, !dbg !6824, !llvm.loop !6825

for.end509:                                       ; preds = %for.cond371
  %297 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !6827
  %298 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6828
  %linehits510 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %298, i32 0, i32 16, !dbg !6829
  store %struct.KnifeLineHit* %297, %struct.KnifeLineHit** %linehits510, align 8, !dbg !6830
  %299 = load i32, i32* %_linehits_count, align 4, !dbg !6831
  %300 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6832
  %totlinehit511 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %300, i32 0, i32 17, !dbg !6833
  store i32 %299, i32* %totlinehit511, align 8, !dbg !6834
  store i32 0, i32* %i, align 4, !dbg !6835
  br label %for.cond512, !dbg !6837

for.cond512:                                      ; preds = %for.inc527, %for.end509
  %301 = load i32, i32* %i, align 4, !dbg !6838
  %302 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6840
  %totlinehit513 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %302, i32 0, i32 17, !dbg !6841
  %303 = load i32, i32* %totlinehit513, align 8, !dbg !6841
  %cmp514 = icmp slt i32 %301, %303, !dbg !6842
  br i1 %cmp514, label %for.body516, label %for.end529, !dbg !6843

for.body516:                                      ; preds = %for.cond512
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %lh, metadata !6844, metadata !DIExpression()), !dbg !6846
  %304 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6847
  %linehits517 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %304, i32 0, i32 16, !dbg !6848
  %305 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits517, align 8, !dbg !6848
  %306 = load i32, i32* %i, align 4, !dbg !6849
  %idx.ext = sext i32 %306 to i64, !dbg !6850
  %add.ptr518 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %305, i64 %idx.ext, !dbg !6850
  store %struct.KnifeLineHit* %add.ptr518, %struct.KnifeLineHit** %lh, align 8, !dbg !6846
  %307 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !6851
  %schit519 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %307, i32 0, i32 2, !dbg !6852
  %arraydecay520 = getelementptr inbounds [2 x float], [2 x float]* %schit519, i64 0, i64 0, !dbg !6851
  %arraydecay521 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6853
  %call522 = call float @len_v2v2(float* %arraydecay520, float* %arraydecay521), !dbg !6854
  %arraydecay523 = getelementptr inbounds [2 x float], [2 x float]* %s2, i64 0, i64 0, !dbg !6855
  %arraydecay524 = getelementptr inbounds [2 x float], [2 x float]* %s1, i64 0, i64 0, !dbg !6856
  %call525 = call float @len_v2v2(float* %arraydecay523, float* %arraydecay524), !dbg !6857
  %div526 = fdiv float %call522, %call525, !dbg !6858
  %308 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !6859
  %l = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %308, i32 0, i32 3, !dbg !6860
  store float %div526, float* %l, align 8, !dbg !6861
  br label %for.inc527, !dbg !6862

for.inc527:                                       ; preds = %for.body516
  %309 = load i32, i32* %i, align 4, !dbg !6863
  %inc528 = add nsw i32 %309, 1, !dbg !6863
  store i32 %inc528, i32* %i, align 4, !dbg !6863
  br label %for.cond512, !dbg !6864, !llvm.loop !6865

for.end529:                                       ; preds = %for.cond512
  call void @BLI_smallhash_release(%struct.SmallHash* %faces), !dbg !6867
  call void @BLI_smallhash_release(%struct.SmallHash* %kfes), !dbg !6868
  call void @BLI_smallhash_release(%struct.SmallHash* %kfvs), !dbg !6869
  %310 = load %struct.BVHTree*, %struct.BVHTree** %planetree, align 8, !dbg !6870
  call void @BLI_bvhtree_free(%struct.BVHTree* %310), !dbg !6871
  %311 = load %struct.BVHTreeOverlap*, %struct.BVHTreeOverlap** %results, align 8, !dbg !6872
  %tobool530 = icmp ne %struct.BVHTreeOverlap* %311, null, !dbg !6872
  br i1 %tobool530, label %if.then531, label %if.end532, !dbg !6874

if.then531:                                       ; preds = %for.end529
  %312 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6875
  %313 = load %struct.BVHTreeOverlap*, %struct.BVHTreeOverlap** %results, align 8, !dbg !6876
  %314 = bitcast %struct.BVHTreeOverlap* %313 to i8*, !dbg !6876
  call void %312(i8* %314), !dbg !6875
  br label %if.end532, !dbg !6875

if.end532:                                        ; preds = %if.then16, %if.then22, %if.then84, %if.then531, %for.end529
  ret void, !dbg !6877
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !6878 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6881, metadata !DIExpression()), !dbg !6882
  %0 = load float*, float** %r.addr, align 8, !dbg !6883
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6883
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6884
  %1 = load float*, float** %r.addr, align 8, !dbg !6885
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6885
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6886
  %2 = load float*, float** %r.addr, align 8, !dbg !6887
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !6887
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !6888
  ret void, !dbg !6889
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v2(float* %r) #0 !dbg !6890 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6891, metadata !DIExpression()), !dbg !6892
  %0 = load float*, float** %r.addr, align 8, !dbg !6893
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6893
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6894
  %1 = load float*, float** %r.addr, align 8, !dbg !6895
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6895
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6896
  ret void, !dbg !6897
}

declare dso_local void @ED_view3d_project_float_v2_m4(%struct.ARegion*, float*, float*, [4 x float]*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal float @knife_snap_size(%struct.KnifeTool_OpData* %kcd, float %maxsize) #0 !dbg !6898 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %maxsize.addr = alloca float, align 4
  %density = alloca float, align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !6901, metadata !DIExpression()), !dbg !6902
  store float %maxsize, float* %maxsize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %maxsize.addr, metadata !6903, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.declare(metadata float* %density, metadata !6905, metadata !DIExpression()), !dbg !6906
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6907
  %is_interactive = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 27, !dbg !6909
  %1 = load i8, i8* %is_interactive, align 8, !dbg !6909
  %tobool = icmp ne i8 %1, 0, !dbg !6907
  br i1 %tobool, label %if.then, label %if.else, !dbg !6910

if.then:                                          ; preds = %entry
  %2 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6911
  %3 = load float, float* %maxsize.addr, align 4, !dbg !6913
  %mul = fmul float %3, 2.000000e+00, !dbg !6914
  %call = call i32 @knife_sample_screen_density(%struct.KnifeTool_OpData* %2, float %mul), !dbg !6915
  %conv = sitofp i32 %call to float, !dbg !6916
  store float %conv, float* %density, align 4, !dbg !6917
  br label %if.end, !dbg !6918

if.else:                                          ; preds = %entry
  store float 1.000000e+00, float* %density, align 4, !dbg !6919
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load float, float* %density, align 4, !dbg !6921
  %cmp = fcmp olt float %4, 1.000000e+00, !dbg !6923
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6924

if.then2:                                         ; preds = %if.end
  store float 1.000000e+00, float* %density, align 4, !dbg !6925
  br label %if.end3, !dbg !6926

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load float, float* %maxsize.addr, align 4, !dbg !6927
  %6 = load float, float* %density, align 4, !dbg !6928
  %mul4 = fmul float %6, 5.000000e-01, !dbg !6929
  %div = fdiv float %5, %mul4, !dbg !6930
  %7 = load float, float* %maxsize.addr, align 4, !dbg !6931
  %call5 = call float @min_ff(float %div, float %7), !dbg !6932
  ret float %call5, !dbg !6933
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMFace* @knife_find_closest_face(%struct.KnifeTool_OpData* %kcd, float* %co, float* %cageco, i8* %is_space) #0 !dbg !6934 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %co.addr = alloca float*, align 8
  %cageco.addr = alloca float*, align 8
  %is_space.addr = alloca i8*, align 8
  %f = alloca %struct.BMFace*, align 8
  %dist = alloca float, align 4
  %origin = alloca [3 x float], align 4
  %origin_ofs = alloca [3 x float], align 4
  %ray = alloca [3 x float], align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !6937, metadata !DIExpression()), !dbg !6938
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !6939, metadata !DIExpression()), !dbg !6940
  store float* %cageco, float** %cageco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cageco.addr, metadata !6941, metadata !DIExpression()), !dbg !6942
  store i8* %is_space, i8** %is_space.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %is_space.addr, metadata !6943, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !6945, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.declare(metadata float* %dist, metadata !6947, metadata !DIExpression()), !dbg !6948
  store float 1.000000e+01, float* %dist, align 4, !dbg !6948
  call void @llvm.dbg.declare(metadata [3 x float]* %origin, metadata !6949, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.declare(metadata [3 x float]* %origin_ofs, metadata !6951, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.declare(metadata [3 x float]* %ray, metadata !6953, metadata !DIExpression()), !dbg !6954
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6955
  %1 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6956
  %curr = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %1, i32 0, i32 18, !dbg !6957
  %mval = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr, i32 0, i32 6, !dbg !6958
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !6956
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %origin, i64 0, i64 0, !dbg !6959
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %origin_ofs, i64 0, i64 0, !dbg !6960
  call void @knife_input_ray_segment(%struct.KnifeTool_OpData* %0, float* %arraydecay, float 1.000000e+00, float* %arraydecay1, float* %arraydecay2), !dbg !6961
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %ray, i64 0, i64 0, !dbg !6962
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %origin_ofs, i64 0, i64 0, !dbg !6963
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %origin, i64 0, i64 0, !dbg !6964
  call void @sub_v3_v3v3(float* %arraydecay3, float* %arraydecay4, float* %arraydecay5), !dbg !6965
  %2 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6966
  %bmbvh = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %2, i32 0, i32 11, !dbg !6967
  %3 = load %struct.BMBVHTree*, %struct.BMBVHTree** %bmbvh, align 8, !dbg !6967
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %origin, i64 0, i64 0, !dbg !6968
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %ray, i64 0, i64 0, !dbg !6969
  %4 = load float*, float** %co.addr, align 8, !dbg !6970
  %5 = load float*, float** %cageco.addr, align 8, !dbg !6971
  %call = call %struct.BMFace* @BKE_bmbvh_ray_cast(%struct.BMBVHTree* %3, float* %arraydecay6, float* %arraydecay7, float 0.000000e+00, float* null, float* %4, float* %5), !dbg !6972
  store %struct.BMFace* %call, %struct.BMFace** %f, align 8, !dbg !6973
  %6 = load i8*, i8** %is_space.addr, align 8, !dbg !6974
  %tobool = icmp ne i8* %6, null, !dbg !6974
  br i1 %tobool, label %if.then, label %if.end, !dbg !6976

if.then:                                          ; preds = %entry
  %7 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6977
  %tobool8 = icmp ne %struct.BMFace* %7, null, !dbg !6978
  %lnot = xor i1 %tobool8, true, !dbg !6978
  %lnot.ext = zext i1 %lnot to i32, !dbg !6978
  %conv = trunc i32 %lnot.ext to i8, !dbg !6978
  %8 = load i8*, i8** %is_space.addr, align 8, !dbg !6979
  store i8 %conv, i8* %8, align 1, !dbg !6980
  br label %if.end, !dbg !6981

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6982
  %tobool9 = icmp ne %struct.BMFace* %9, null, !dbg !6982
  br i1 %tobool9, label %if.end17, label %if.then10, !dbg !6984

if.then10:                                        ; preds = %if.end
  %10 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6985
  %is_interactive = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %10, i32 0, i32 27, !dbg !6988
  %11 = load i8, i8* %is_interactive, align 8, !dbg !6988
  %tobool11 = icmp ne i8 %11, 0, !dbg !6985
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !6989

if.then12:                                        ; preds = %if.then10
  %12 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !6990
  %vc = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %12, i32 0, i32 2, !dbg !6992
  %call13 = call %struct.BMFace* @EDBM_face_find_nearest(%struct.ViewContext* %vc, float* %dist), !dbg !6993
  store %struct.BMFace* %call13, %struct.BMFace** %f, align 8, !dbg !6994
  %13 = load float*, float** %co.addr, align 8, !dbg !6995
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %origin, i64 0, i64 0, !dbg !6996
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %ray, i64 0, i64 0, !dbg !6997
  call void @add_v3_v3v3(float* %13, float* %arraydecay14, float* %arraydecay15), !dbg !6998
  br label %if.end16, !dbg !6999

if.end16:                                         ; preds = %if.then12, %if.then10
  br label %if.end17, !dbg !7000

if.end17:                                         ; preds = %if.end16, %if.end
  %14 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !7001
  ret %struct.BMFace* %14, !dbg !7002
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ListBase* @knife_get_face_kedges(%struct.KnifeTool_OpData* %kcd, %struct.BMFace* %f) #0 !dbg !7003 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %lst = alloca %struct.ListBase*, align 8
  %bmiter = alloca %struct.BMIter, align 8
  %e = alloca %struct.BMEdge*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7006, metadata !DIExpression()), !dbg !7007
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !7008, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst, metadata !7010, metadata !DIExpression()), !dbg !7011
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7012
  %kedgefacemap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 9, !dbg !7013
  %1 = load %struct.GHash*, %struct.GHash** %kedgefacemap, align 8, !dbg !7013
  %2 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !7014
  %3 = bitcast %struct.BMFace* %2 to i8*, !dbg !7014
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %1, i8* %3), !dbg !7015
  %4 = bitcast i8* %call to %struct.ListBase*, !dbg !7015
  store %struct.ListBase* %4, %struct.ListBase** %lst, align 8, !dbg !7011
  %5 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !7016
  %tobool = icmp ne %struct.ListBase* %5, null, !dbg !7016
  br i1 %tobool, label %if.end, label %if.then, !dbg !7018

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMIter* %bmiter, metadata !7019, metadata !DIExpression()), !dbg !7021
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !7022, metadata !DIExpression()), !dbg !7023
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7024
  %call1 = call %struct.ListBase* @knife_empty_list(%struct.KnifeTool_OpData* %6), !dbg !7025
  store %struct.ListBase* %call1, %struct.ListBase** %lst, align 8, !dbg !7026
  %7 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !7027
  %8 = bitcast %struct.BMFace* %7 to i8*, !dbg !7027
  %call2 = call i8* @BM_iter_new(%struct.BMIter* %bmiter, %struct.BMesh* null, i8 zeroext 10, i8* %8), !dbg !7027
  %9 = bitcast i8* %call2 to %struct.BMEdge*, !dbg !7027
  store %struct.BMEdge* %9, %struct.BMEdge** %e, align 8, !dbg !7027
  br label %for.cond, !dbg !7027

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7029
  %tobool3 = icmp ne %struct.BMEdge* %10, null, !dbg !7027
  br i1 %tobool3, label %for.body, label %for.end, !dbg !7027

for.body:                                         ; preds = %for.cond
  %11 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7031
  %12 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !7033
  %13 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7034
  %14 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !7035
  %call4 = call %struct.KnifeEdge* @get_bm_knife_edge(%struct.KnifeTool_OpData* %13, %struct.BMEdge* %14), !dbg !7036
  %15 = bitcast %struct.KnifeEdge* %call4 to i8*, !dbg !7036
  call void @knife_append_list(%struct.KnifeTool_OpData* %11, %struct.ListBase* %12, i8* %15), !dbg !7037
  br label %for.inc, !dbg !7038

for.inc:                                          ; preds = %for.body
  %call5 = call i8* @BM_iter_step(%struct.BMIter* %bmiter), !dbg !7029
  %16 = bitcast i8* %call5 to %struct.BMEdge*, !dbg !7029
  store %struct.BMEdge* %16, %struct.BMEdge** %e, align 8, !dbg !7029
  br label %for.cond, !dbg !7029, !llvm.loop !7039

for.end:                                          ; preds = %for.cond
  %17 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7041
  %kedgefacemap6 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %17, i32 0, i32 9, !dbg !7042
  %18 = load %struct.GHash*, %struct.GHash** %kedgefacemap6, align 8, !dbg !7042
  %19 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !7043
  %20 = bitcast %struct.BMFace* %19 to i8*, !dbg !7043
  %21 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !7044
  %22 = bitcast %struct.ListBase* %21 to i8*, !dbg !7044
  call void @BLI_ghash_insert(%struct.GHash* %18, i8* %20, i8* %22), !dbg !7045
  br label %if.end, !dbg !7046

if.end:                                           ; preds = %for.end, %entry
  %23 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !7047
  ret %struct.ListBase* %23, !dbg !7048
}

declare dso_local float @dist_squared_to_line_segment_v2(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v2v2(float* %a, float* %b) #0 !dbg !7049 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [2 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7052, metadata !DIExpression()), !dbg !7053
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7054, metadata !DIExpression()), !dbg !7055
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !7056, metadata !DIExpression()), !dbg !7057
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !7058
  %0 = load float*, float** %b.addr, align 8, !dbg !7059
  %1 = load float*, float** %a.addr, align 8, !dbg !7060
  call void @sub_v2_v2v2(float* %arraydecay, float* %0, float* %1), !dbg !7061
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !7062
  %arraydecay2 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !7063
  %call = call float @dot_v2v2(float* %arraydecay1, float* %arraydecay2), !dbg !7064
  ret float %call, !dbg !7065
}

declare dso_local zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D*, float*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @knife_sample_screen_density(%struct.KnifeTool_OpData* %kcd, float %radius) #0 !dbg !7066 {
entry:
  %retval = alloca i32, align 4
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %radius.addr = alloca float, align 4
  %f = alloca %struct.BMFace*, align 8
  %is_space = alloca i8, align 1
  %co = alloca [3 x float], align 4
  %cageco = alloca [3 x float], align 4
  %sco = alloca [2 x float], align 4
  %radius_sq = alloca float, align 4
  %lst = alloca %struct.ListBase*, align 8
  %ref = alloca %struct.Ref*, align 8
  %dis_sq = alloca float, align 4
  %c = alloca i32, align 4
  %kfe = alloca %struct.KnifeEdge*, align 8
  %i = alloca i32, align 4
  %kfv = alloca %struct.KnifeVert*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7069, metadata !DIExpression()), !dbg !7070
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !7071, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.declare(metadata i8* %is_space, metadata !7075, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !7077, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.declare(metadata [3 x float]* %cageco, metadata !7079, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.declare(metadata [2 x float]* %sco, metadata !7081, metadata !DIExpression()), !dbg !7082
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7083
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7084
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %cageco, i64 0, i64 0, !dbg !7085
  %call = call %struct.BMFace* @knife_find_closest_face(%struct.KnifeTool_OpData* %0, float* %arraydecay, float* %arraydecay1, i8* %is_space), !dbg !7086
  store %struct.BMFace* %call, %struct.BMFace** %f, align 8, !dbg !7087
  %1 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !7088
  %tobool = icmp ne %struct.BMFace* %1, null, !dbg !7088
  br i1 %tobool, label %land.lhs.true, label %if.end38, !dbg !7090

land.lhs.true:                                    ; preds = %entry
  %2 = load i8, i8* %is_space, align 1, !dbg !7091
  %tobool2 = icmp ne i8 %2, 0, !dbg !7091
  br i1 %tobool2, label %if.end38, label %if.then, !dbg !7092

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %radius_sq, metadata !7093, metadata !DIExpression()), !dbg !7095
  %3 = load float, float* %radius.addr, align 4, !dbg !7096
  %4 = load float, float* %radius.addr, align 4, !dbg !7097
  %mul = fmul float %3, %4, !dbg !7098
  store float %mul, float* %radius_sq, align 4, !dbg !7095
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst, metadata !7099, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref, metadata !7101, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.declare(metadata float* %dis_sq, metadata !7103, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7105, metadata !DIExpression()), !dbg !7106
  store i32 0, i32* %c, align 4, !dbg !7106
  %5 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7107
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %cageco, i64 0, i64 0, !dbg !7108
  %arraydecay4 = getelementptr inbounds [2 x float], [2 x float]* %sco, i64 0, i64 0, !dbg !7109
  call void @knife_project_v2(%struct.KnifeTool_OpData* %5, float* %arraydecay3, float* %arraydecay4), !dbg !7110
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7111
  %7 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !7112
  %call5 = call %struct.ListBase* @knife_get_face_kedges(%struct.KnifeTool_OpData* %6, %struct.BMFace* %7), !dbg !7113
  store %struct.ListBase* %call5, %struct.ListBase** %lst, align 8, !dbg !7114
  %8 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !7115
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %8, i32 0, i32 0, !dbg !7117
  %9 = load i8*, i8** %first, align 8, !dbg !7117
  %10 = bitcast i8* %9 to %struct.Ref*, !dbg !7115
  store %struct.Ref* %10, %struct.Ref** %ref, align 8, !dbg !7118
  br label %for.cond, !dbg !7119

for.cond:                                         ; preds = %for.inc36, %if.then
  %11 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !7120
  %tobool6 = icmp ne %struct.Ref* %11, null, !dbg !7122
  br i1 %tobool6, label %for.body, label %for.end37, !dbg !7122

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !7123, metadata !DIExpression()), !dbg !7125
  %12 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !7126
  %ref7 = getelementptr inbounds %struct.Ref, %struct.Ref* %12, i32 0, i32 2, !dbg !7127
  %13 = load i8*, i8** %ref7, align 8, !dbg !7127
  %14 = bitcast i8* %13 to %struct.KnifeEdge*, !dbg !7126
  store %struct.KnifeEdge* %14, %struct.KnifeEdge** %kfe, align 8, !dbg !7125
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7128, metadata !DIExpression()), !dbg !7129
  store i32 0, i32* %i, align 4, !dbg !7130
  br label %for.cond8, !dbg !7132

for.cond8:                                        ; preds = %for.inc, %for.body
  %15 = load i32, i32* %i, align 4, !dbg !7133
  %cmp = icmp slt i32 %15, 2, !dbg !7135
  br i1 %cmp, label %for.body9, label %for.end, !dbg !7136

for.body9:                                        ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv, metadata !7137, metadata !DIExpression()), !dbg !7139
  %16 = load i32, i32* %i, align 4, !dbg !7140
  %tobool10 = icmp ne i32 %16, 0, !dbg !7140
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !7140

cond.true:                                        ; preds = %for.body9
  %17 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !7141
  %v2 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %17, i32 0, i32 1, !dbg !7142
  %18 = load %struct.KnifeVert*, %struct.KnifeVert** %v2, align 8, !dbg !7142
  br label %cond.end, !dbg !7140

cond.false:                                       ; preds = %for.body9
  %19 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !7143
  %v1 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %19, i32 0, i32 0, !dbg !7144
  %20 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !7144
  br label %cond.end, !dbg !7140

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.KnifeVert* [ %18, %cond.true ], [ %20, %cond.false ], !dbg !7140
  store %struct.KnifeVert* %cond, %struct.KnifeVert** %kfv, align 8, !dbg !7139
  %21 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7145
  %22 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7146
  %cageco11 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %22, i32 0, i32 4, !dbg !7147
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %cageco11, i64 0, i64 0, !dbg !7146
  %23 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7148
  %sco13 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %23, i32 0, i32 5, !dbg !7149
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %sco13, i64 0, i64 0, !dbg !7148
  call void @knife_project_v2(%struct.KnifeTool_OpData* %21, float* %arraydecay12, float* %arraydecay14), !dbg !7150
  %24 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7151
  %sco15 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %24, i32 0, i32 5, !dbg !7152
  %arraydecay16 = getelementptr inbounds [2 x float], [2 x float]* %sco15, i64 0, i64 0, !dbg !7151
  %arraydecay17 = getelementptr inbounds [2 x float], [2 x float]* %sco, i64 0, i64 0, !dbg !7153
  %call18 = call float @len_squared_v2v2(float* %arraydecay16, float* %arraydecay17), !dbg !7154
  store float %call18, float* %dis_sq, align 4, !dbg !7155
  %25 = load float, float* %dis_sq, align 4, !dbg !7156
  %26 = load float, float* %radius_sq, align 4, !dbg !7158
  %cmp19 = fcmp olt float %25, %26, !dbg !7159
  br i1 %cmp19, label %if.then20, label %if.end34, !dbg !7160

if.then20:                                        ; preds = %cond.end
  %27 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7161
  %vc = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %27, i32 0, i32 2, !dbg !7164
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !7165
  %28 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7165
  %rflag = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %28, i32 0, i32 32, !dbg !7166
  %29 = load i16, i16* %rflag, align 2, !dbg !7166
  %conv = sext i16 %29 to i32, !dbg !7161
  %and = and i32 %conv, 4, !dbg !7167
  %tobool21 = icmp ne i32 %and, 0, !dbg !7167
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !7168

if.then22:                                        ; preds = %if.then20
  %30 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7169
  %vc23 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %30, i32 0, i32 2, !dbg !7172
  %rv3d24 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc23, i32 0, i32 5, !dbg !7173
  %31 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d24, align 8, !dbg !7173
  %32 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7174
  %cageco25 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %32, i32 0, i32 4, !dbg !7175
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %cageco25, i64 0, i64 0, !dbg !7174
  %call27 = call zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D* %31, float* %arraydecay26, i8 zeroext 1), !dbg !7176
  %conv28 = zext i8 %call27 to i32, !dbg !7176
  %cmp29 = icmp eq i32 %conv28, 0, !dbg !7177
  br i1 %cmp29, label %if.then31, label %if.end, !dbg !7178

if.then31:                                        ; preds = %if.then22
  %33 = load i32, i32* %c, align 4, !dbg !7179
  %inc = add nsw i32 %33, 1, !dbg !7179
  store i32 %inc, i32* %c, align 4, !dbg !7179
  br label %if.end, !dbg !7181

if.end:                                           ; preds = %if.then31, %if.then22
  br label %if.end33, !dbg !7182

if.else:                                          ; preds = %if.then20
  %34 = load i32, i32* %c, align 4, !dbg !7183
  %inc32 = add nsw i32 %34, 1, !dbg !7183
  store i32 %inc32, i32* %c, align 4, !dbg !7183
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.end
  br label %if.end34, !dbg !7185

if.end34:                                         ; preds = %if.end33, %cond.end
  br label %for.inc, !dbg !7186

for.inc:                                          ; preds = %if.end34
  %35 = load i32, i32* %i, align 4, !dbg !7187
  %inc35 = add nsw i32 %35, 1, !dbg !7187
  store i32 %inc35, i32* %i, align 4, !dbg !7187
  br label %for.cond8, !dbg !7188, !llvm.loop !7189

for.end:                                          ; preds = %for.cond8
  br label %for.inc36, !dbg !7191

for.inc36:                                        ; preds = %for.end
  %36 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !7192
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %36, i32 0, i32 0, !dbg !7193
  %37 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !7193
  store %struct.Ref* %37, %struct.Ref** %ref, align 8, !dbg !7194
  br label %for.cond, !dbg !7195, !llvm.loop !7196

for.end37:                                        ; preds = %for.cond
  %38 = load i32, i32* %c, align 4, !dbg !7198
  store i32 %38, i32* %retval, align 4, !dbg !7199
  br label %return, !dbg !7199

if.end38:                                         ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !7200
  br label %return, !dbg !7200

return:                                           ; preds = %if.end38, %for.end37
  %39 = load i32, i32* %retval, align 4, !dbg !7201
  ret i32 %39, !dbg !7201
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !7202 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !7206, metadata !DIExpression()), !dbg !7207
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !7208, metadata !DIExpression()), !dbg !7209
  %0 = load float, float* %a.addr, align 4, !dbg !7210
  %1 = load float, float* %b.addr, align 4, !dbg !7211
  %cmp = fcmp olt float %0, %1, !dbg !7212
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7213

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !7214
  br label %cond.end, !dbg !7213

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !7215
  br label %cond.end, !dbg !7213

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7213
  ret float %cond, !dbg !7216
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !7217 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7220, metadata !DIExpression()), !dbg !7221
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7222, metadata !DIExpression()), !dbg !7223
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7224, metadata !DIExpression()), !dbg !7225
  %0 = load float*, float** %a.addr, align 8, !dbg !7226
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7226
  %1 = load float, float* %arrayidx, align 4, !dbg !7226
  %2 = load float*, float** %b.addr, align 8, !dbg !7227
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7227
  %3 = load float, float* %arrayidx1, align 4, !dbg !7227
  %sub = fsub float %1, %3, !dbg !7228
  %4 = load float*, float** %r.addr, align 8, !dbg !7229
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !7229
  store float %sub, float* %arrayidx2, align 4, !dbg !7230
  %5 = load float*, float** %a.addr, align 8, !dbg !7231
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7231
  %6 = load float, float* %arrayidx3, align 4, !dbg !7231
  %7 = load float*, float** %b.addr, align 8, !dbg !7232
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7232
  %8 = load float, float* %arrayidx4, align 4, !dbg !7232
  %sub5 = fsub float %6, %8, !dbg !7233
  %9 = load float*, float** %r.addr, align 8, !dbg !7234
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !7234
  store float %sub5, float* %arrayidx6, align 4, !dbg !7235
  %10 = load float*, float** %a.addr, align 8, !dbg !7236
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !7236
  %11 = load float, float* %arrayidx7, align 4, !dbg !7236
  %12 = load float*, float** %b.addr, align 8, !dbg !7237
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !7237
  %13 = load float, float* %arrayidx8, align 4, !dbg !7237
  %sub9 = fsub float %11, %13, !dbg !7238
  %14 = load float*, float** %r.addr, align 8, !dbg !7239
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !7239
  store float %sub9, float* %arrayidx10, align 4, !dbg !7240
  ret void, !dbg !7241
}

declare dso_local %struct.BMFace* @BKE_bmbvh_ray_cast(%struct.BMBVHTree*, float*, float*, float, float*, float*, float*) #2

declare dso_local %struct.BMFace* @EDBM_face_find_nearest(%struct.ViewContext*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !7242 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7243, metadata !DIExpression()), !dbg !7244
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7245, metadata !DIExpression()), !dbg !7246
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7247, metadata !DIExpression()), !dbg !7248
  %0 = load float*, float** %a.addr, align 8, !dbg !7249
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7249
  %1 = load float, float* %arrayidx, align 4, !dbg !7249
  %2 = load float*, float** %b.addr, align 8, !dbg !7250
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7250
  %3 = load float, float* %arrayidx1, align 4, !dbg !7250
  %add = fadd float %1, %3, !dbg !7251
  %4 = load float*, float** %r.addr, align 8, !dbg !7252
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !7252
  store float %add, float* %arrayidx2, align 4, !dbg !7253
  %5 = load float*, float** %a.addr, align 8, !dbg !7254
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7254
  %6 = load float, float* %arrayidx3, align 4, !dbg !7254
  %7 = load float*, float** %b.addr, align 8, !dbg !7255
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7255
  %8 = load float, float* %arrayidx4, align 4, !dbg !7255
  %add5 = fadd float %6, %8, !dbg !7256
  %9 = load float*, float** %r.addr, align 8, !dbg !7257
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !7257
  store float %add5, float* %arrayidx6, align 4, !dbg !7258
  %10 = load float*, float** %a.addr, align 8, !dbg !7259
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !7259
  %11 = load float, float* %arrayidx7, align 4, !dbg !7259
  %12 = load float*, float** %b.addr, align 8, !dbg !7260
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !7260
  %13 = load float, float* %arrayidx8, align 4, !dbg !7260
  %add9 = fadd float %11, %13, !dbg !7261
  %14 = load float*, float** %r.addr, align 8, !dbg !7262
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !7262
  store float %add9, float* %arrayidx10, align 4, !dbg !7263
  ret void, !dbg !7264
}

declare dso_local i8* @BLI_ghash_lookup(%struct.GHash*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.ListBase* @knife_empty_list(%struct.KnifeTool_OpData* %kcd) #0 !dbg !7265 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %lst = alloca %struct.ListBase*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7268, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst, metadata !7270, metadata !DIExpression()), !dbg !7271
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7272
  %arena = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 6, !dbg !7273
  %1 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !7273
  %call = call i8* @BLI_memarena_alloc(%struct.MemArena* %1, i64 16), !dbg !7274
  %2 = bitcast i8* %call to %struct.ListBase*, !dbg !7274
  store %struct.ListBase* %2, %struct.ListBase** %lst, align 8, !dbg !7275
  %3 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !7276
  call void @BLI_listbase_clear(%struct.ListBase* %3), !dbg !7277
  %4 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !7278
  ret %struct.ListBase* %4, !dbg !7279
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_append_list(%struct.KnifeTool_OpData* %kcd, %struct.ListBase* %lst, i8* %elem) #0 !dbg !7280 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %lst.addr = alloca %struct.ListBase*, align 8
  %elem.addr = alloca i8*, align 8
  %ref = alloca %struct.Ref*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7283, metadata !DIExpression()), !dbg !7284
  store %struct.ListBase* %lst, %struct.ListBase** %lst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst.addr, metadata !7285, metadata !DIExpression()), !dbg !7286
  store i8* %elem, i8** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %elem.addr, metadata !7287, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref, metadata !7289, metadata !DIExpression()), !dbg !7290
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7291
  %refs = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 22, !dbg !7292
  %1 = load %struct.BLI_mempool*, %struct.BLI_mempool** %refs, align 8, !dbg !7292
  %call = call i8* @BLI_mempool_calloc(%struct.BLI_mempool* %1), !dbg !7293
  %2 = bitcast i8* %call to %struct.Ref*, !dbg !7293
  store %struct.Ref* %2, %struct.Ref** %ref, align 8, !dbg !7294
  %3 = load i8*, i8** %elem.addr, align 8, !dbg !7295
  %4 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !7296
  %ref1 = getelementptr inbounds %struct.Ref, %struct.Ref* %4, i32 0, i32 2, !dbg !7297
  store i8* %3, i8** %ref1, align 8, !dbg !7298
  %5 = load %struct.ListBase*, %struct.ListBase** %lst.addr, align 8, !dbg !7299
  %6 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !7300
  %7 = bitcast %struct.Ref* %6 to i8*, !dbg !7300
  call void @BLI_addtail(%struct.ListBase* %5, i8* %7), !dbg !7301
  ret void, !dbg !7302
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.KnifeEdge* @get_bm_knife_edge(%struct.KnifeTool_OpData* %kcd, %struct.BMEdge* %e) #0 !dbg !7303 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %e.addr = alloca %struct.BMEdge*, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %bmiter = alloca %struct.BMIter, align 8
  %f = alloca %struct.BMFace*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7306, metadata !DIExpression()), !dbg !7307
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !7308, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !7310, metadata !DIExpression()), !dbg !7311
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7312
  %origedgemap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 8, !dbg !7313
  %1 = load %struct.GHash*, %struct.GHash** %origedgemap, align 8, !dbg !7313
  %2 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !7314
  %3 = bitcast %struct.BMEdge* %2 to i8*, !dbg !7314
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %1, i8* %3), !dbg !7315
  %4 = bitcast i8* %call to %struct.KnifeEdge*, !dbg !7315
  store %struct.KnifeEdge* %4, %struct.KnifeEdge** %kfe, align 8, !dbg !7311
  %5 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !7316
  %tobool = icmp ne %struct.KnifeEdge* %5, null, !dbg !7316
  br i1 %tobool, label %if.end, label %if.then, !dbg !7318

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMIter* %bmiter, metadata !7319, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !7322, metadata !DIExpression()), !dbg !7323
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7324
  %call1 = call %struct.KnifeEdge* @new_knife_edge(%struct.KnifeTool_OpData* %6), !dbg !7325
  store %struct.KnifeEdge* %call1, %struct.KnifeEdge** %kfe, align 8, !dbg !7326
  %7 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !7327
  %8 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !7328
  %e2 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %8, i32 0, i32 4, !dbg !7329
  store %struct.BMEdge* %7, %struct.BMEdge** %e2, align 8, !dbg !7330
  %9 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7331
  %10 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !7332
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %10, i32 0, i32 2, !dbg !7333
  %11 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !7333
  %call3 = call %struct.KnifeVert* @get_bm_knife_vert(%struct.KnifeTool_OpData* %9, %struct.BMVert* %11), !dbg !7334
  %12 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !7335
  %v14 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %12, i32 0, i32 0, !dbg !7336
  store %struct.KnifeVert* %call3, %struct.KnifeVert** %v14, align 8, !dbg !7337
  %13 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7338
  %14 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !7339
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %14, i32 0, i32 3, !dbg !7340
  %15 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !7340
  %call5 = call %struct.KnifeVert* @get_bm_knife_vert(%struct.KnifeTool_OpData* %13, %struct.BMVert* %15), !dbg !7341
  %16 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !7342
  %v26 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %16, i32 0, i32 1, !dbg !7343
  store %struct.KnifeVert* %call5, %struct.KnifeVert** %v26, align 8, !dbg !7344
  %17 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7345
  %18 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !7346
  call void @knife_add_to_vert_edges(%struct.KnifeTool_OpData* %17, %struct.KnifeEdge* %18), !dbg !7347
  %19 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7348
  %origedgemap7 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %19, i32 0, i32 8, !dbg !7349
  %20 = load %struct.GHash*, %struct.GHash** %origedgemap7, align 8, !dbg !7349
  %21 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !7350
  %22 = bitcast %struct.BMEdge* %21 to i8*, !dbg !7350
  %23 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !7351
  %24 = bitcast %struct.KnifeEdge* %23 to i8*, !dbg !7351
  call void @BLI_ghash_insert(%struct.GHash* %20, i8* %22, i8* %24), !dbg !7352
  %25 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !7353
  %26 = bitcast %struct.BMEdge* %25 to i8*, !dbg !7353
  %call8 = call i8* @BM_iter_new(%struct.BMIter* %bmiter, %struct.BMesh* null, i8 zeroext 8, i8* %26), !dbg !7353
  %27 = bitcast i8* %call8 to %struct.BMFace*, !dbg !7353
  store %struct.BMFace* %27, %struct.BMFace** %f, align 8, !dbg !7353
  br label %for.cond, !dbg !7353

for.cond:                                         ; preds = %for.inc, %if.then
  %28 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !7355
  %tobool9 = icmp ne %struct.BMFace* %28, null, !dbg !7353
  br i1 %tobool9, label %for.body, label %for.end, !dbg !7353

for.body:                                         ; preds = %for.cond
  %29 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7357
  %30 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !7359
  %faces = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %30, i32 0, i32 3, !dbg !7360
  %31 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !7361
  %32 = bitcast %struct.BMFace* %31 to i8*, !dbg !7361
  call void @knife_append_list(%struct.KnifeTool_OpData* %29, %struct.ListBase* %faces, i8* %32), !dbg !7362
  br label %for.inc, !dbg !7363

for.inc:                                          ; preds = %for.body
  %call10 = call i8* @BM_iter_step(%struct.BMIter* %bmiter), !dbg !7355
  %33 = bitcast i8* %call10 to %struct.BMFace*, !dbg !7355
  store %struct.BMFace* %33, %struct.BMFace** %f, align 8, !dbg !7355
  br label %for.cond, !dbg !7355, !llvm.loop !7364

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !7366

if.end:                                           ; preds = %for.end, %entry
  %34 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !7367
  ret %struct.KnifeEdge* %34, !dbg !7368
}

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #2

declare dso_local i8* @BLI_memarena_alloc(%struct.MemArena*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !7369 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !7374, metadata !DIExpression()), !dbg !7375
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !7376
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !7377
  store i8* null, i8** %last, align 8, !dbg !7378
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !7379
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !7380
  store i8* null, i8** %first, align 8, !dbg !7381
  ret void, !dbg !7382
}

declare dso_local i8* @BLI_mempool_calloc(%struct.BLI_mempool*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.KnifeEdge* @new_knife_edge(%struct.KnifeTool_OpData* %kcd) #0 !dbg !7383 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7386, metadata !DIExpression()), !dbg !7387
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7388
  %totkedge = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 20, !dbg !7389
  %1 = load i32, i32* %totkedge, align 8, !dbg !7390
  %inc = add nsw i32 %1, 1, !dbg !7390
  store i32 %inc, i32* %totkedge, align 8, !dbg !7390
  %2 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7391
  %kedges = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %2, i32 0, i32 13, !dbg !7392
  %3 = load %struct.BLI_mempool*, %struct.BLI_mempool** %kedges, align 8, !dbg !7392
  %call = call i8* @BLI_mempool_calloc(%struct.BLI_mempool* %3), !dbg !7393
  %4 = bitcast i8* %call to %struct.KnifeEdge*, !dbg !7393
  ret %struct.KnifeEdge* %4, !dbg !7394
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.KnifeVert* @get_bm_knife_vert(%struct.KnifeTool_OpData* %kcd, %struct.BMVert* %v) #0 !dbg !7395 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %v.addr = alloca %struct.BMVert*, align 8
  %kfv = alloca %struct.KnifeVert*, align 8
  %cageco = alloca float*, align 8
  %bmiter = alloca %struct.BMIter, align 8
  %f = alloca %struct.BMFace*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7398, metadata !DIExpression()), !dbg !7399
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !7400, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv, metadata !7402, metadata !DIExpression()), !dbg !7403
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7404
  %origvertmap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 7, !dbg !7405
  %1 = load %struct.GHash*, %struct.GHash** %origvertmap, align 8, !dbg !7405
  %2 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !7406
  %3 = bitcast %struct.BMVert* %2 to i8*, !dbg !7406
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %1, i8* %3), !dbg !7407
  %4 = bitcast i8* %call to %struct.KnifeVert*, !dbg !7407
  store %struct.KnifeVert* %4, %struct.KnifeVert** %kfv, align 8, !dbg !7403
  call void @llvm.dbg.declare(metadata float** %cageco, metadata !7408, metadata !DIExpression()), !dbg !7409
  %5 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7410
  %tobool = icmp ne %struct.KnifeVert* %5, null, !dbg !7410
  br i1 %tobool, label %if.end14, label %if.then, !dbg !7412

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMIter* %bmiter, metadata !7413, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !7416, metadata !DIExpression()), !dbg !7417
  %6 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !7418
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %6, i32 0, i32 0, !dbg !7418
  %call1 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !7418
  %cmp = icmp sge i32 %call1, 0, !dbg !7420
  br i1 %cmp, label %if.then2, label %if.else, !dbg !7421

if.then2:                                         ; preds = %if.then
  %7 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7422
  %cagecos = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %7, i32 0, i32 42, !dbg !7423
  %8 = load [3 x float]*, [3 x float]** %cagecos, align 8, !dbg !7423
  %9 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !7424
  %head3 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %9, i32 0, i32 0, !dbg !7424
  %call4 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head3), !dbg !7424
  %idxprom = sext i32 %call4 to i64, !dbg !7422
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %8, i64 %idxprom, !dbg !7422
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7422
  store float* %arraydecay, float** %cageco, align 8, !dbg !7425
  br label %if.end, !dbg !7426

if.else:                                          ; preds = %if.then
  %10 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !7427
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %10, i32 0, i32 2, !dbg !7428
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7427
  store float* %arraydecay5, float** %cageco, align 8, !dbg !7429
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %11 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7430
  %12 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !7431
  %co6 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %12, i32 0, i32 2, !dbg !7432
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %co6, i64 0, i64 0, !dbg !7431
  %13 = load float*, float** %cageco, align 8, !dbg !7433
  %call8 = call %struct.KnifeVert* @new_knife_vert(%struct.KnifeTool_OpData* %11, float* %arraydecay7, float* %13), !dbg !7434
  store %struct.KnifeVert* %call8, %struct.KnifeVert** %kfv, align 8, !dbg !7435
  %14 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !7436
  %15 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7437
  %v9 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %15, i32 0, i32 0, !dbg !7438
  store %struct.BMVert* %14, %struct.BMVert** %v9, align 8, !dbg !7439
  %16 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7440
  %origvertmap10 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %16, i32 0, i32 7, !dbg !7441
  %17 = load %struct.GHash*, %struct.GHash** %origvertmap10, align 8, !dbg !7441
  %18 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !7442
  %19 = bitcast %struct.BMVert* %18 to i8*, !dbg !7442
  %20 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7443
  %21 = bitcast %struct.KnifeVert* %20 to i8*, !dbg !7443
  call void @BLI_ghash_insert(%struct.GHash* %17, i8* %19, i8* %21), !dbg !7444
  %22 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !7445
  %23 = bitcast %struct.BMVert* %22 to i8*, !dbg !7445
  %call11 = call i8* @BM_iter_new(%struct.BMIter* %bmiter, %struct.BMesh* null, i8 zeroext 5, i8* %23), !dbg !7445
  %24 = bitcast i8* %call11 to %struct.BMFace*, !dbg !7445
  store %struct.BMFace* %24, %struct.BMFace** %f, align 8, !dbg !7445
  br label %for.cond, !dbg !7445

for.cond:                                         ; preds = %for.inc, %if.end
  %25 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !7447
  %tobool12 = icmp ne %struct.BMFace* %25, null, !dbg !7445
  br i1 %tobool12, label %for.body, label %for.end, !dbg !7445

for.body:                                         ; preds = %for.cond
  %26 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7449
  %27 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7451
  %faces = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %27, i32 0, i32 2, !dbg !7452
  %28 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !7453
  %29 = bitcast %struct.BMFace* %28 to i8*, !dbg !7453
  call void @knife_append_list(%struct.KnifeTool_OpData* %26, %struct.ListBase* %faces, i8* %29), !dbg !7454
  br label %for.inc, !dbg !7455

for.inc:                                          ; preds = %for.body
  %call13 = call i8* @BM_iter_step(%struct.BMIter* %bmiter), !dbg !7447
  %30 = bitcast i8* %call13 to %struct.BMFace*, !dbg !7447
  store %struct.BMFace* %30, %struct.BMFace** %f, align 8, !dbg !7447
  br label %for.cond, !dbg !7447, !llvm.loop !7456

for.end:                                          ; preds = %for.cond
  br label %if.end14, !dbg !7458

if.end14:                                         ; preds = %for.end, %entry
  %31 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7459
  ret %struct.KnifeVert* %31, !dbg !7460
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_add_to_vert_edges(%struct.KnifeTool_OpData* %kcd, %struct.KnifeEdge* %kfe) #0 !dbg !7461 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %kfe.addr = alloca %struct.KnifeEdge*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7464, metadata !DIExpression()), !dbg !7465
  store %struct.KnifeEdge* %kfe, %struct.KnifeEdge** %kfe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe.addr, metadata !7466, metadata !DIExpression()), !dbg !7467
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7468
  %1 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !7469
  %v1 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %1, i32 0, i32 0, !dbg !7470
  %2 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !7470
  %edges = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %2, i32 0, i32 1, !dbg !7471
  %3 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !7472
  %4 = bitcast %struct.KnifeEdge* %3 to i8*, !dbg !7472
  call void @knife_append_list(%struct.KnifeTool_OpData* %0, %struct.ListBase* %edges, i8* %4), !dbg !7473
  %5 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7474
  %6 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !7475
  %v2 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %6, i32 0, i32 1, !dbg !7476
  %7 = load %struct.KnifeVert*, %struct.KnifeVert** %v2, align 8, !dbg !7476
  %edges1 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %7, i32 0, i32 1, !dbg !7477
  %8 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !7478
  %9 = bitcast %struct.KnifeEdge* %8 to i8*, !dbg !7478
  call void @knife_append_list(%struct.KnifeTool_OpData* %5, %struct.ListBase* %edges1, i8* %9), !dbg !7479
  ret void, !dbg !7480
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_bm_elem_index_get(%struct.BMHeader* %head) #0 !dbg !7481 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !7484, metadata !DIExpression()), !dbg !7485
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !7486
  %index = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 1, !dbg !7487
  %1 = load i32, i32* %index, align 8, !dbg !7487
  ret i32 %1, !dbg !7488
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.KnifeVert* @new_knife_vert(%struct.KnifeTool_OpData* %kcd, float* %co, float* %cageco) #0 !dbg !7489 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %co.addr = alloca float*, align 8
  %cageco.addr = alloca float*, align 8
  %kfv = alloca %struct.KnifeVert*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7492, metadata !DIExpression()), !dbg !7493
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7494, metadata !DIExpression()), !dbg !7495
  store float* %cageco, float** %cageco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cageco.addr, metadata !7496, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv, metadata !7498, metadata !DIExpression()), !dbg !7499
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7500
  %kverts = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 12, !dbg !7501
  %1 = load %struct.BLI_mempool*, %struct.BLI_mempool** %kverts, align 8, !dbg !7501
  %call = call i8* @BLI_mempool_calloc(%struct.BLI_mempool* %1), !dbg !7502
  %2 = bitcast i8* %call to %struct.KnifeVert*, !dbg !7502
  store %struct.KnifeVert* %2, %struct.KnifeVert** %kfv, align 8, !dbg !7499
  %3 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7503
  %totkvert = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %3, i32 0, i32 21, !dbg !7504
  %4 = load i32, i32* %totkvert, align 4, !dbg !7505
  %inc = add nsw i32 %4, 1, !dbg !7505
  store i32 %inc, i32* %totkvert, align 4, !dbg !7505
  %5 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7506
  %co1 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %5, i32 0, i32 3, !dbg !7507
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !7506
  %6 = load float*, float** %co.addr, align 8, !dbg !7508
  call void @copy_v3_v3(float* %arraydecay, float* %6), !dbg !7509
  %7 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7510
  %cageco2 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %7, i32 0, i32 4, !dbg !7511
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %cageco2, i64 0, i64 0, !dbg !7510
  %8 = load float*, float** %cageco.addr, align 8, !dbg !7512
  call void @copy_v3_v3(float* %arraydecay3, float* %8), !dbg !7513
  %9 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7514
  %10 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7515
  %cageco4 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %10, i32 0, i32 4, !dbg !7516
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %cageco4, i64 0, i64 0, !dbg !7515
  %11 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7517
  %sco = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %11, i32 0, i32 5, !dbg !7518
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %sco, i64 0, i64 0, !dbg !7517
  call void @knife_project_v2(%struct.KnifeTool_OpData* %9, float* %arraydecay5, float* %arraydecay6), !dbg !7519
  %12 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !7520
  ret %struct.KnifeVert* %12, !dbg !7521
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !7522 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7523, metadata !DIExpression()), !dbg !7524
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7525, metadata !DIExpression()), !dbg !7526
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7527, metadata !DIExpression()), !dbg !7528
  %0 = load float*, float** %a.addr, align 8, !dbg !7529
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7529
  %1 = load float, float* %arrayidx, align 4, !dbg !7529
  %2 = load float*, float** %b.addr, align 8, !dbg !7530
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7530
  %3 = load float, float* %arrayidx1, align 4, !dbg !7530
  %sub = fsub float %1, %3, !dbg !7531
  %4 = load float*, float** %r.addr, align 8, !dbg !7532
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !7532
  store float %sub, float* %arrayidx2, align 4, !dbg !7533
  %5 = load float*, float** %a.addr, align 8, !dbg !7534
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7534
  %6 = load float, float* %arrayidx3, align 4, !dbg !7534
  %7 = load float*, float** %b.addr, align 8, !dbg !7535
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7535
  %8 = load float, float* %arrayidx4, align 4, !dbg !7535
  %sub5 = fsub float %6, %8, !dbg !7536
  %9 = load float*, float** %r.addr, align 8, !dbg !7537
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !7537
  store float %sub5, float* %arrayidx6, align 4, !dbg !7538
  ret void, !dbg !7539
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v2v2(float* %a, float* %b) #0 !dbg !7540 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7541, metadata !DIExpression()), !dbg !7542
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7543, metadata !DIExpression()), !dbg !7544
  %0 = load float*, float** %a.addr, align 8, !dbg !7545
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7545
  %1 = load float, float* %arrayidx, align 4, !dbg !7545
  %2 = load float*, float** %b.addr, align 8, !dbg !7546
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7546
  %3 = load float, float* %arrayidx1, align 4, !dbg !7546
  %mul = fmul float %1, %3, !dbg !7547
  %4 = load float*, float** %a.addr, align 8, !dbg !7548
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7548
  %5 = load float, float* %arrayidx2, align 4, !dbg !7548
  %6 = load float*, float** %b.addr, align 8, !dbg !7549
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7549
  %7 = load float, float* %arrayidx3, align 4, !dbg !7549
  %mul4 = fmul float %5, %7, !dbg !7550
  %add = fadd float %mul, %mul4, !dbg !7551
  ret float %add, !dbg !7552
}

declare dso_local i32 @isect_line_line_v2_point(float*, float*, float*, float*, float*) #2

declare dso_local float @line_point_factor_v2(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @knife_interp_v3_v3v3(%struct.KnifeTool_OpData* %kcd, float* %r_co, float* %v1, float* %v2, float %lambda_ss) #0 !dbg !7553 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %r_co.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %lambda_ss.addr = alloca float, align 4
  %v1_ss = alloca [3 x float], align 4
  %v2_ss = alloca [3 x float], align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7556, metadata !DIExpression()), !dbg !7557
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !7558, metadata !DIExpression()), !dbg !7559
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !7560, metadata !DIExpression()), !dbg !7561
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !7562, metadata !DIExpression()), !dbg !7563
  store float %lambda_ss, float* %lambda_ss.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda_ss.addr, metadata !7564, metadata !DIExpression()), !dbg !7565
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7566
  %is_ortho = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 31, !dbg !7568
  %1 = load i8, i8* %is_ortho, align 4, !dbg !7568
  %tobool = icmp ne i8 %1, 0, !dbg !7566
  br i1 %tobool, label %if.then, label %if.else, !dbg !7569

if.then:                                          ; preds = %entry
  %2 = load float*, float** %r_co.addr, align 8, !dbg !7570
  %3 = load float*, float** %v1.addr, align 8, !dbg !7572
  %4 = load float*, float** %v2.addr, align 8, !dbg !7573
  %5 = load float, float* %lambda_ss.addr, align 4, !dbg !7574
  call void @interp_v3_v3v3(float* %2, float* %3, float* %4, float %5), !dbg !7575
  br label %if.end, !dbg !7576

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %v1_ss, metadata !7577, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.declare(metadata [3 x float]* %v2_ss, metadata !7580, metadata !DIExpression()), !dbg !7581
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v1_ss, i64 0, i64 0, !dbg !7582
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7583
  %projmat = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %6, i32 0, i32 23, !dbg !7584
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projmat, i64 0, i64 0, !dbg !7583
  %7 = load float*, float** %v1.addr, align 8, !dbg !7585
  call void @mul_v3_project_m4_v3(float* %arraydecay, [4 x float]* %arraydecay1, float* %7), !dbg !7586
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %v2_ss, i64 0, i64 0, !dbg !7587
  %8 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7588
  %projmat3 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %8, i32 0, i32 23, !dbg !7589
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projmat3, i64 0, i64 0, !dbg !7588
  %9 = load float*, float** %v2.addr, align 8, !dbg !7590
  call void @mul_v3_project_m4_v3(float* %arraydecay2, [4 x float]* %arraydecay4, float* %9), !dbg !7591
  %10 = load float*, float** %r_co.addr, align 8, !dbg !7592
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %v1_ss, i64 0, i64 0, !dbg !7593
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %v2_ss, i64 0, i64 0, !dbg !7594
  %11 = load float, float* %lambda_ss.addr, align 4, !dbg !7595
  call void @interp_v3_v3v3(float* %10, float* %arraydecay5, float* %arraydecay6, float %11), !dbg !7596
  %12 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7597
  %projmat_inv = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %12, i32 0, i32 24, !dbg !7598
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %projmat_inv, i64 0, i64 0, !dbg !7597
  %13 = load float*, float** %r_co.addr, align 8, !dbg !7599
  call void @mul_project_m4_v3([4 x float]* %arraydecay7, float* %13), !dbg !7600
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7601
}

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #2

declare dso_local float @line_point_factor_v3(float*, float*, float*) #2

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #2

declare dso_local void @mul_v3_project_m4_v3(float*, [4 x float]*, float*) #2

declare dso_local void @mul_project_m4_v3([4 x float]*, float*) #2

declare dso_local void @bgl_get_mats(%struct.bglMats*) #2

declare dso_local void @ED_view3d_unproject(%struct.bglMats*, float*, float, float, float) #2

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

declare dso_local zeroext i8 @ED_view3d_win_to_segment(%struct.ARegion*, %struct.View3D*, float*, float*, float*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @calc_ortho_extent(%struct.KnifeTool_OpData* %kcd) #0 !dbg !7602 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %iter = alloca %struct.BMIter, align 8
  %v = alloca %struct.BMVert*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %max_xyz = alloca float, align 4
  %i = alloca i32, align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7603, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7605, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !7607, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !7609, metadata !DIExpression()), !dbg !7610
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7611
  %em = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 5, !dbg !7612
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7612
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !7613
  %2 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !7613
  store %struct.BMesh* %2, %struct.BMesh** %bm, align 8, !dbg !7610
  call void @llvm.dbg.declare(metadata float* %max_xyz, metadata !7614, metadata !DIExpression()), !dbg !7615
  store float 0.000000e+00, float* %max_xyz, align 4, !dbg !7615
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7616, metadata !DIExpression()), !dbg !7617
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7618
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %3, i8 zeroext 1, i8* null), !dbg !7618
  %4 = bitcast i8* %call to %struct.BMVert*, !dbg !7618
  store %struct.BMVert* %4, %struct.BMVert** %v, align 8, !dbg !7618
  br label %for.cond, !dbg !7618

for.cond:                                         ; preds = %for.inc5, %entry
  %5 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7620
  %tobool = icmp ne %struct.BMVert* %5, null, !dbg !7618
  br i1 %tobool, label %for.body, label %for.end7, !dbg !7618

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7622
  br label %for.cond2, !dbg !7625

for.cond2:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %i, align 4, !dbg !7626
  %cmp = icmp slt i32 %6, 3, !dbg !7628
  br i1 %cmp, label %for.body3, label %for.end, !dbg !7629

for.body3:                                        ; preds = %for.cond2
  %7 = load float, float* %max_xyz, align 4, !dbg !7630
  %8 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7631
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %8, i32 0, i32 2, !dbg !7632
  %9 = load i32, i32* %i, align 4, !dbg !7633
  %idxprom = sext i32 %9 to i64, !dbg !7631
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 %idxprom, !dbg !7631
  %10 = load float, float* %arrayidx, align 4, !dbg !7631
  %11 = call float @llvm.fabs.f32(float %10), !dbg !7634
  %call4 = call float @max_ff(float %7, float %11), !dbg !7635
  store float %call4, float* %max_xyz, align 4, !dbg !7636
  br label %for.inc, !dbg !7637

for.inc:                                          ; preds = %for.body3
  %12 = load i32, i32* %i, align 4, !dbg !7638
  %inc = add nsw i32 %12, 1, !dbg !7638
  store i32 %inc, i32* %i, align 4, !dbg !7638
  br label %for.cond2, !dbg !7639, !llvm.loop !7640

for.end:                                          ; preds = %for.cond2
  br label %for.inc5, !dbg !7642

for.inc5:                                         ; preds = %for.end
  %call6 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7620
  %13 = bitcast i8* %call6 to %struct.BMVert*, !dbg !7620
  store %struct.BMVert* %13, %struct.BMVert** %v, align 8, !dbg !7620
  br label %for.cond, !dbg !7620, !llvm.loop !7643

for.end7:                                         ; preds = %for.cond
  %14 = load float, float* %max_xyz, align 4, !dbg !7645
  %15 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7646
  %ortho_extent = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %15, i32 0, i32 32, !dbg !7647
  store float %14, float* %ortho_extent, align 8, !dbg !7648
  ret void, !dbg !7649
}

; Function Attrs: noinline nounwind uwtable
define internal void @clip_to_ortho_planes(float* %v1, float* %v2, float %d) #0 !dbg !7650 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %d.addr = alloca float, align 4
  %closest = alloca [3 x float], align 4
  %origin = alloca [3 x float], align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !7653, metadata !DIExpression()), !dbg !7654
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !7655, metadata !DIExpression()), !dbg !7656
  store float %d, float* %d.addr, align 4
  call void @llvm.dbg.declare(metadata float* %d.addr, metadata !7657, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.declare(metadata [3 x float]* %closest, metadata !7659, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.declare(metadata [3 x float]* %origin, metadata !7661, metadata !DIExpression()), !dbg !7662
  %0 = bitcast [3 x float]* %origin to i8*, !dbg !7662
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 12, i1 false), !dbg !7662
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %closest, i64 0, i64 0, !dbg !7663
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %origin, i64 0, i64 0, !dbg !7664
  %1 = load float*, float** %v1.addr, align 8, !dbg !7665
  %2 = load float*, float** %v2.addr, align 8, !dbg !7666
  %call = call float @closest_to_line_v3(float* %arraydecay, float* %arraydecay1, float* %1, float* %2), !dbg !7667
  %3 = load float*, float** %v1.addr, align 8, !dbg !7668
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %closest, i64 0, i64 0, !dbg !7669
  %4 = load float, float* %d.addr, align 4, !dbg !7670
  call void @dist_ensure_v3_v3fl(float* %3, float* %arraydecay2, float %4), !dbg !7671
  %5 = load float*, float** %v2.addr, align 8, !dbg !7672
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %closest, i64 0, i64 0, !dbg !7673
  %6 = load float, float* %d.addr, align 4, !dbg !7674
  call void @dist_ensure_v3_v3fl(float* %5, float* %arraydecay3, float %6), !dbg !7675
  ret void, !dbg !7676
}

declare dso_local %struct.BVHTree* @BKE_bmbvh_tree_get(%struct.BMBVHTree*) #2

declare dso_local %struct.BVHTree* @BLI_bvhtree_new(i32, float, i8 zeroext, i8 zeroext) #2

declare dso_local void @BLI_bvhtree_insert(%struct.BVHTree*, i32, float*, i32) #2

declare dso_local void @BLI_bvhtree_balance(%struct.BVHTree*) #2

declare dso_local %struct.BVHTreeOverlap* @BLI_bvhtree_overlap(%struct.BVHTree*, %struct.BVHTree*, i32*) #2

declare dso_local void @BLI_bvhtree_free(%struct.BVHTree*) #2

declare dso_local void @BLI_smallhash_init(%struct.SmallHash*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @set_lowest_face_tri(%struct.KnifeTool_OpData* %kcd, %struct.BMFace* %f, i32 %index) #0 !dbg !7677 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %index.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7680, metadata !DIExpression()), !dbg !7681
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !7682, metadata !DIExpression()), !dbg !7683
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7684, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7686, metadata !DIExpression()), !dbg !7687
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7688
  %facetrimap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 10, !dbg !7690
  %1 = load %struct.GHash*, %struct.GHash** %facetrimap, align 8, !dbg !7690
  %2 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !7691
  %3 = bitcast %struct.BMFace* %2 to i8*, !dbg !7691
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %1, i8* %3), !dbg !7692
  %tobool = icmp ne i8* %call, null, !dbg !7692
  br i1 %tobool, label %if.then, label %if.end, !dbg !7693

if.then:                                          ; preds = %entry
  br label %return, !dbg !7694

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %index.addr, align 4, !dbg !7695
  %sub = sub nsw i32 %4, 1, !dbg !7697
  store i32 %sub, i32* %i, align 4, !dbg !7698
  br label %for.cond, !dbg !7699

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !7700
  %cmp = icmp sge i32 %5, 0, !dbg !7702
  br i1 %cmp, label %for.body, label %for.end, !dbg !7703

for.body:                                         ; preds = %for.cond
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7704
  %em = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %6, i32 0, i32 5, !dbg !7707
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7707
  %looptris = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 3, !dbg !7708
  %8 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !7708
  %9 = load i32, i32* %i, align 4, !dbg !7709
  %idxprom = sext i32 %9 to i64, !dbg !7704
  %arrayidx = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %8, i64 %idxprom, !dbg !7704
  %arrayidx1 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx, i64 0, i64 0, !dbg !7704
  %10 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx1, align 8, !dbg !7704
  %f2 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %10, i32 0, i32 3, !dbg !7710
  %11 = load %struct.BMFace*, %struct.BMFace** %f2, align 8, !dbg !7710
  %12 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !7711
  %cmp3 = icmp ne %struct.BMFace* %11, %12, !dbg !7712
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7713

if.then4:                                         ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !7714
  %inc = add nsw i32 %13, 1, !dbg !7714
  store i32 %inc, i32* %i, align 4, !dbg !7714
  br label %for.end, !dbg !7716

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !7717

for.inc:                                          ; preds = %if.end5
  %14 = load i32, i32* %i, align 4, !dbg !7718
  %dec = add nsw i32 %14, -1, !dbg !7718
  store i32 %dec, i32* %i, align 4, !dbg !7718
  br label %for.cond, !dbg !7719, !llvm.loop !7720

for.end:                                          ; preds = %if.then4, %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !7722
  %cmp6 = icmp eq i32 %15, -1, !dbg !7724
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !7725

if.then7:                                         ; preds = %for.end
  %16 = load i32, i32* %i, align 4, !dbg !7726
  %inc8 = add nsw i32 %16, 1, !dbg !7726
  store i32 %inc8, i32* %i, align 4, !dbg !7726
  br label %if.end9, !dbg !7727

if.end9:                                          ; preds = %if.then7, %for.end
  %17 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7728
  %facetrimap10 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %17, i32 0, i32 10, !dbg !7729
  %18 = load %struct.GHash*, %struct.GHash** %facetrimap10, align 8, !dbg !7729
  %19 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !7730
  %20 = bitcast %struct.BMFace* %19 to i8*, !dbg !7730
  %21 = load i32, i32* %i, align 4, !dbg !7731
  %add = add nsw i32 %21, 1, !dbg !7731
  %conv = sext i32 %add to i64, !dbg !7731
  %22 = inttoptr i64 %conv to i8*, !dbg !7731
  call void @BLI_ghash_insert(%struct.GHash* %18, i8* %20, i8* %22), !dbg !7732
  br label %return, !dbg !7733

return:                                           ; preds = %if.end9, %if.then
  ret void, !dbg !7733
}

declare dso_local zeroext i8 @BLI_smallhash_haskey(%struct.SmallHash*, i64) #2

declare dso_local void @BLI_smallhash_insert(%struct.SmallHash*, i64, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2(float* %v) #0 !dbg !7734 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !7737, metadata !DIExpression()), !dbg !7738
  %0 = load float*, float** %v.addr, align 8, !dbg !7739
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7739
  %1 = load float, float* %arrayidx, align 4, !dbg !7739
  %2 = load float*, float** %v.addr, align 8, !dbg !7740
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7740
  %3 = load float, float* %arrayidx1, align 4, !dbg !7740
  %mul = fmul float %1, %3, !dbg !7741
  %4 = load float*, float** %v.addr, align 8, !dbg !7742
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7742
  %5 = load float, float* %arrayidx2, align 4, !dbg !7742
  %6 = load float*, float** %v.addr, align 8, !dbg !7743
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7743
  %7 = load float, float* %arrayidx3, align 4, !dbg !7743
  %mul4 = fmul float %5, %7, !dbg !7744
  %add = fadd float %mul, %mul4, !dbg !7745
  %call = call float @sqrtf(float %add) #5, !dbg !7746
  ret float %call, !dbg !7747
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !7748 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !7749, metadata !DIExpression()), !dbg !7750
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !7751, metadata !DIExpression()), !dbg !7752
  %0 = load float, float* %a.addr, align 4, !dbg !7753
  %1 = load float, float* %b.addr, align 4, !dbg !7754
  %cmp = fcmp ogt float %0, %1, !dbg !7755
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7756

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !7757
  br label %cond.end, !dbg !7756

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !7758
  br label %cond.end, !dbg !7756

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7756
  ret float %cond, !dbg !7759
}

declare dso_local i8* @BLI_smallhash_iternew(%struct.SmallHash*, %struct.SmallHashIter*, i64*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @point_is_visible(%struct.KnifeTool_OpData* %kcd, float* %p, float* %s, %struct.bglMats* %mats) #0 !dbg !7760 {
entry:
  %retval = alloca i8, align 1
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %p.addr = alloca float*, align 8
  %s.addr = alloca float*, align 8
  %mats.addr = alloca %struct.bglMats*, align 8
  %f_hit = alloca %struct.BMFace*, align 8
  %dist = alloca float, align 4
  %view = alloca [3 x float], align 4
  %p_ofs = alloca [3 x float], align 4
  %view_clip = alloca [2 x [3 x float]], align 16
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !7766, metadata !DIExpression()), !dbg !7767
  store float* %s, float** %s.addr, align 8
  call void @llvm.dbg.declare(metadata float** %s.addr, metadata !7768, metadata !DIExpression()), !dbg !7769
  store %struct.bglMats* %mats, %struct.bglMats** %mats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bglMats** %mats.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f_hit, metadata !7772, metadata !DIExpression()), !dbg !7773
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7774
  %vc = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 2, !dbg !7776
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !7777
  %1 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7777
  %rflag = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %1, i32 0, i32 32, !dbg !7778
  %2 = load i16, i16* %rflag, align 2, !dbg !7778
  %conv = sext i16 %2 to i32, !dbg !7774
  %and = and i32 %conv, 4, !dbg !7779
  %tobool = icmp ne i32 %and, 0, !dbg !7779
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7780

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7781
  %vc1 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %3, i32 0, i32 2, !dbg !7782
  %rv3d2 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc1, i32 0, i32 5, !dbg !7783
  %4 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d2, align 8, !dbg !7783
  %5 = load float*, float** %p.addr, align 8, !dbg !7784
  %call = call zeroext i8 @ED_view3d_clipping_test(%struct.RegionView3D* %4, float* %5, i8 zeroext 1), !dbg !7785
  %conv3 = zext i8 %call to i32, !dbg !7785
  %tobool4 = icmp ne i32 %conv3, 0, !dbg !7785
  br i1 %tobool4, label %if.then, label %if.end, !dbg !7786

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !7787
  br label %return, !dbg !7787

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7789
  %cut_through = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %6, i32 0, i32 28, !dbg !7791
  %7 = load i8, i8* %cut_through, align 1, !dbg !7791
  %tobool5 = icmp ne i8 %7, 0, !dbg !7789
  br i1 %tobool5, label %if.end61, label %if.then6, !dbg !7792

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %dist, metadata !7793, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.declare(metadata [3 x float]* %view, metadata !7796, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.declare(metadata [3 x float]* %p_ofs, metadata !7798, metadata !DIExpression()), !dbg !7799
  %8 = load %struct.bglMats*, %struct.bglMats** %mats.addr, align 8, !dbg !7800
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !7801
  %9 = load float*, float** %s.addr, align 8, !dbg !7802
  %arrayidx = getelementptr inbounds float, float* %9, i64 0, !dbg !7802
  %10 = load float, float* %arrayidx, align 4, !dbg !7802
  %11 = load float*, float** %s.addr, align 8, !dbg !7803
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !7803
  %12 = load float, float* %arrayidx7, align 4, !dbg !7803
  call void @ED_view3d_unproject(%struct.bglMats* %8, float* %arraydecay, float %10, float %12, float 0.000000e+00), !dbg !7804
  %13 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7805
  %ob = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %13, i32 0, i32 4, !dbg !7806
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7806
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 50, !dbg !7807
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !7805
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !7808
  call void @mul_m4_v3([4 x float]* %arraydecay8, float* %arraydecay9), !dbg !7809
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !7810
  %15 = load float*, float** %p.addr, align 8, !dbg !7811
  call void @sub_v3_v3(float* %arraydecay10, float* %15), !dbg !7812
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !7813
  %call12 = call float @normalize_v3(float* %arraydecay11), !dbg !7814
  store float %call12, float* %dist, align 4, !dbg !7815
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %p_ofs, i64 0, i64 0, !dbg !7816
  %16 = load float*, float** %p.addr, align 8, !dbg !7817
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !7818
  call void @madd_v3_v3v3fl(float* %arraydecay13, float* %16, float* %arraydecay14, float 0x3F589374C0000000), !dbg !7819
  %17 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7820
  %is_ortho = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %17, i32 0, i32 31, !dbg !7822
  %18 = load i8, i8* %is_ortho, align 4, !dbg !7822
  %conv15 = zext i8 %18 to i32, !dbg !7820
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !7820
  br i1 %tobool16, label %land.lhs.true17, label %if.end24, !dbg !7823

land.lhs.true17:                                  ; preds = %if.then6
  %19 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7824
  %vc18 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %19, i32 0, i32 2, !dbg !7825
  %rv3d19 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc18, i32 0, i32 5, !dbg !7826
  %20 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d19, align 8, !dbg !7826
  %persp = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %20, i32 0, i32 25, !dbg !7827
  %21 = load i8, i8* %persp, align 1, !dbg !7827
  %conv20 = zext i8 %21 to i32, !dbg !7824
  %cmp = icmp ne i32 %conv20, 2, !dbg !7828
  br i1 %cmp, label %if.then22, label %if.end24, !dbg !7829

if.then22:                                        ; preds = %land.lhs.true17
  %22 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7830
  %vc23 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %22, i32 0, i32 2, !dbg !7832
  %v3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc23, i32 0, i32 4, !dbg !7833
  %23 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7833
  %far = getelementptr inbounds %struct.View3D, %struct.View3D* %23, i32 0, i32 33, !dbg !7834
  %24 = load float, float* %far, align 8, !dbg !7834
  %mul = fmul float %24, 2.000000e+00, !dbg !7835
  store float %mul, float* %dist, align 4, !dbg !7836
  br label %if.end24, !dbg !7837

if.end24:                                         ; preds = %if.then22, %land.lhs.true17, %if.then6
  %25 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7838
  %vc25 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %25, i32 0, i32 2, !dbg !7840
  %rv3d26 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc25, i32 0, i32 5, !dbg !7841
  %26 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d26, align 8, !dbg !7841
  %rflag27 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %26, i32 0, i32 32, !dbg !7842
  %27 = load i16, i16* %rflag27, align 2, !dbg !7842
  %conv28 = sext i16 %27 to i32, !dbg !7838
  %and29 = and i32 %conv28, 4, !dbg !7843
  %tobool30 = icmp ne i32 %and29, 0, !dbg !7843
  br i1 %tobool30, label %if.then31, label %if.end54, !dbg !7844

if.then31:                                        ; preds = %if.end24
  call void @llvm.dbg.declare(metadata [2 x [3 x float]]* %view_clip, metadata !7845, metadata !DIExpression()), !dbg !7849
  %arrayidx32 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %view_clip, i64 0, i64 0, !dbg !7850
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx32, i64 0, i64 0, !dbg !7850
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %p_ofs, i64 0, i64 0, !dbg !7851
  call void @copy_v3_v3(float* %arraydecay33, float* %arraydecay34), !dbg !7852
  %arrayidx35 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %view_clip, i64 0, i64 1, !dbg !7853
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx35, i64 0, i64 0, !dbg !7853
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %p_ofs, i64 0, i64 0, !dbg !7854
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !7855
  %28 = load float, float* %dist, align 4, !dbg !7856
  call void @madd_v3_v3v3fl(float* %arraydecay36, float* %arraydecay37, float* %arraydecay38, float %28), !dbg !7857
  %arrayidx39 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %view_clip, i64 0, i64 0, !dbg !7858
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx39, i64 0, i64 0, !dbg !7858
  %arrayidx41 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %view_clip, i64 0, i64 1, !dbg !7860
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx41, i64 0, i64 0, !dbg !7860
  %29 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7861
  %vc43 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %29, i32 0, i32 2, !dbg !7862
  %rv3d44 = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc43, i32 0, i32 5, !dbg !7863
  %30 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d44, align 8, !dbg !7863
  %clip_local = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %30, i32 0, i32 8, !dbg !7864
  %arraydecay45 = getelementptr inbounds [6 x [4 x float]], [6 x [4 x float]]* %clip_local, i64 0, i64 0, !dbg !7861
  %call46 = call zeroext i8 @clip_segment_v3_plane_n(float* %arraydecay40, float* %arraydecay42, [4 x float]* %arraydecay45, i32 6), !dbg !7865
  %tobool47 = icmp ne i8 %call46, 0, !dbg !7865
  br i1 %tobool47, label %if.then48, label %if.end53, !dbg !7866

if.then48:                                        ; preds = %if.then31
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %p_ofs, i64 0, i64 0, !dbg !7867
  %arrayidx50 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %view_clip, i64 0, i64 1, !dbg !7869
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx50, i64 0, i64 0, !dbg !7869
  %call52 = call float @len_v3v3(float* %arraydecay49, float* %arraydecay51), !dbg !7870
  store float %call52, float* %dist, align 4, !dbg !7871
  br label %if.end53, !dbg !7872

if.end53:                                         ; preds = %if.then48, %if.then31
  br label %if.end54, !dbg !7873

if.end54:                                         ; preds = %if.end53, %if.end24
  %31 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7874
  %bmbvh = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %31, i32 0, i32 11, !dbg !7875
  %32 = load %struct.BMBVHTree*, %struct.BMBVHTree** %bmbvh, align 8, !dbg !7875
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %p_ofs, i64 0, i64 0, !dbg !7876
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !7877
  %call57 = call %struct.BMFace* @BKE_bmbvh_ray_cast(%struct.BMBVHTree* %32, float* %arraydecay55, float* %arraydecay56, float 0x3EE4F8B580000000, float* %dist, float* null, float* null), !dbg !7878
  store %struct.BMFace* %call57, %struct.BMFace** %f_hit, align 8, !dbg !7879
  %33 = load %struct.BMFace*, %struct.BMFace** %f_hit, align 8, !dbg !7880
  %tobool58 = icmp ne %struct.BMFace* %33, null, !dbg !7880
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !7882

if.then59:                                        ; preds = %if.end54
  store i8 0, i8* %retval, align 1, !dbg !7883
  br label %return, !dbg !7883

if.end60:                                         ; preds = %if.end54
  br label %if.end61, !dbg !7884

if.end61:                                         ; preds = %if.end60, %if.end
  store i8 1, i8* %retval, align 1, !dbg !7885
  br label %return, !dbg !7885

return:                                           ; preds = %if.end61, %if.then59, %if.then
  %34 = load i8, i8* %retval, align 1, !dbg !7886
  ret i8 %34, !dbg !7886
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @set_linehit_depth(%struct.KnifeTool_OpData* %kcd, %struct.KnifeLineHit* %lh) #0 !dbg !7887 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %lh.addr = alloca %struct.KnifeLineHit*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7890, metadata !DIExpression()), !dbg !7891
  store %struct.KnifeLineHit* %lh, %struct.KnifeLineHit** %lh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %lh.addr, metadata !7892, metadata !DIExpression()), !dbg !7893
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7894
  %vc = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 2, !dbg !7895
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !7896
  %1 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7896
  %persmatob = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %1, i32 0, i32 6, !dbg !7897
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %persmatob, i64 0, i64 0, !dbg !7894
  %2 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh.addr, align 8, !dbg !7898
  %cagehit = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %2, i32 0, i32 1, !dbg !7899
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %cagehit, i64 0, i64 0, !dbg !7898
  %call = call float @dot_m4_v3_row_z([4 x float]* %arraydecay, float* %arraydecay1), !dbg !7900
  %3 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh.addr, align 8, !dbg !7901
  %m = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %3, i32 0, i32 5, !dbg !7902
  store float %call, float* %m, align 8, !dbg !7903
  ret void, !dbg !7904
}

declare dso_local void @_bli_array_grow_func(i8**, i8*, i32, i32, i32, i8*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i8* @BLI_smallhash_iternext(%struct.SmallHashIter*, i64*) #2

declare dso_local i32 @isect_seg_seg_v2_point(float*, float*, float*, float*, float*) #2

declare dso_local void @closest_to_line_segment_v2(float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2v2(float* %v1, float* %v2) #0 !dbg !7905 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !7906, metadata !DIExpression()), !dbg !7907
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !7908, metadata !DIExpression()), !dbg !7909
  call void @llvm.dbg.declare(metadata float* %x, metadata !7910, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.declare(metadata float* %y, metadata !7912, metadata !DIExpression()), !dbg !7913
  %0 = load float*, float** %v1.addr, align 8, !dbg !7914
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7914
  %1 = load float, float* %arrayidx, align 4, !dbg !7914
  %2 = load float*, float** %v2.addr, align 8, !dbg !7915
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7915
  %3 = load float, float* %arrayidx1, align 4, !dbg !7915
  %sub = fsub float %1, %3, !dbg !7916
  store float %sub, float* %x, align 4, !dbg !7917
  %4 = load float*, float** %v1.addr, align 8, !dbg !7918
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7918
  %5 = load float, float* %arrayidx2, align 4, !dbg !7918
  %6 = load float*, float** %v2.addr, align 8, !dbg !7919
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7919
  %7 = load float, float* %arrayidx3, align 4, !dbg !7919
  %sub4 = fsub float %5, %7, !dbg !7920
  store float %sub4, float* %y, align 4, !dbg !7921
  %8 = load float, float* %x, align 4, !dbg !7922
  %9 = load float, float* %x, align 4, !dbg !7923
  %mul = fmul float %8, %9, !dbg !7924
  %10 = load float, float* %y, align 4, !dbg !7925
  %11 = load float, float* %y, align 4, !dbg !7926
  %mul5 = fmul float %10, %11, !dbg !7927
  %add = fadd float %mul, %mul5, !dbg !7928
  %call = call float @sqrtf(float %add) #5, !dbg !7929
  ret float %call, !dbg !7930
}

declare dso_local i32 @isect_line_line_v3(float*, float*, float*, float*, float*, float*) #2

declare dso_local void @mid_v2_v2v2(float*, float*, float*) #2

declare dso_local void @transform_point_by_seg_v3(float*, float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @knife_ray_intersect_face(%struct.KnifeTool_OpData* %kcd, float* %s, float* %v1, float* %v2, %struct.BMFace* %f, float %face_tol_sq, float* %hit_co, float* %hit_cageco) #0 !dbg !7931 {
entry:
  %retval = alloca i8, align 1
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %s.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %face_tol_sq.addr = alloca float, align 4
  %hit_co.addr = alloca float*, align 8
  %hit_cageco.addr = alloca float*, align 8
  %tottri = alloca i32, align 4
  %tri_i = alloca i32, align 4
  %raydir = alloca [3 x float], align 4
  %tri_norm = alloca [3 x float], align 4
  %tri_plane = alloca [4 x float], align 16
  %se1 = alloca [2 x float], align 4
  %se2 = alloca [2 x float], align 4
  %d = alloca float, align 4
  %lambda = alloca float, align 4
  %tri = alloca %struct.BMLoop**, align 8
  %lst = alloca %struct.ListBase*, align 8
  %ref = alloca %struct.Ref*, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %lv1 = alloca float*, align 8
  %lv2 = alloca float*, align 8
  %lv3 = alloca float*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !7934, metadata !DIExpression()), !dbg !7935
  store float* %s, float** %s.addr, align 8
  call void @llvm.dbg.declare(metadata float** %s.addr, metadata !7936, metadata !DIExpression()), !dbg !7937
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !7938, metadata !DIExpression()), !dbg !7939
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !7940, metadata !DIExpression()), !dbg !7941
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !7942, metadata !DIExpression()), !dbg !7943
  store float %face_tol_sq, float* %face_tol_sq.addr, align 4
  call void @llvm.dbg.declare(metadata float* %face_tol_sq.addr, metadata !7944, metadata !DIExpression()), !dbg !7945
  store float* %hit_co, float** %hit_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %hit_co.addr, metadata !7946, metadata !DIExpression()), !dbg !7947
  store float* %hit_cageco, float** %hit_cageco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %hit_cageco.addr, metadata !7948, metadata !DIExpression()), !dbg !7949
  call void @llvm.dbg.declare(metadata i32* %tottri, metadata !7950, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.declare(metadata i32* %tri_i, metadata !7952, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.declare(metadata [3 x float]* %raydir, metadata !7954, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.declare(metadata [3 x float]* %tri_norm, metadata !7956, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.declare(metadata [4 x float]* %tri_plane, metadata !7958, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.declare(metadata [2 x float]* %se1, metadata !7960, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.declare(metadata [2 x float]* %se2, metadata !7962, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.declare(metadata float* %d, metadata !7964, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !7966, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %tri, metadata !7968, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst, metadata !7970, metadata !DIExpression()), !dbg !7971
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref, metadata !7972, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !7974, metadata !DIExpression()), !dbg !7975
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %raydir, i64 0, i64 0, !dbg !7976
  %0 = load float*, float** %v2.addr, align 8, !dbg !7977
  %1 = load float*, float** %v1.addr, align 8, !dbg !7978
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !7979
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %raydir, i64 0, i64 0, !dbg !7980
  %call = call float @normalize_v3(float* %arraydecay1), !dbg !7981
  %2 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7982
  %3 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !7983
  %call2 = call i32 @get_lowest_face_tri(%struct.KnifeTool_OpData* %2, %struct.BMFace* %3), !dbg !7984
  store i32 %call2, i32* %tri_i, align 4, !dbg !7985
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !7986
  %em = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %4, i32 0, i32 5, !dbg !7987
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7987
  %tottri3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 4, !dbg !7988
  %6 = load i32, i32* %tottri3, align 8, !dbg !7988
  store i32 %6, i32* %tottri, align 4, !dbg !7989
  br label %for.cond, !dbg !7990

for.cond:                                         ; preds = %for.inc76, %entry
  %7 = load i32, i32* %tri_i, align 4, !dbg !7991
  %8 = load i32, i32* %tottri, align 4, !dbg !7994
  %cmp = icmp slt i32 %7, %8, !dbg !7995
  br i1 %cmp, label %for.body, label %for.end77, !dbg !7996

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %lv1, metadata !7997, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.declare(metadata float** %lv2, metadata !8000, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.declare(metadata float** %lv3, metadata !8002, metadata !DIExpression()), !dbg !8003
  %9 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8004
  %em4 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %9, i32 0, i32 5, !dbg !8005
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em4, align 8, !dbg !8005
  %looptris = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 3, !dbg !8006
  %11 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !8006
  %12 = load i32, i32* %tri_i, align 4, !dbg !8007
  %idxprom = sext i32 %12 to i64, !dbg !8004
  %arrayidx = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %11, i64 %idxprom, !dbg !8004
  %arraydecay5 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx, i64 0, i64 0, !dbg !8004
  store %struct.BMLoop** %arraydecay5, %struct.BMLoop*** %tri, align 8, !dbg !8008
  %13 = load %struct.BMLoop**, %struct.BMLoop*** %tri, align 8, !dbg !8009
  %arrayidx6 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %13, i64 0, !dbg !8009
  %14 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx6, align 8, !dbg !8009
  %f7 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %14, i32 0, i32 3, !dbg !8011
  %15 = load %struct.BMFace*, %struct.BMFace** %f7, align 8, !dbg !8011
  %16 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !8012
  %cmp8 = icmp ne %struct.BMFace* %15, %16, !dbg !8013
  br i1 %cmp8, label %if.then, label %if.end, !dbg !8014

if.then:                                          ; preds = %for.body
  br label %for.end77, !dbg !8015

if.end:                                           ; preds = %for.body
  %17 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8016
  %cagecos = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %17, i32 0, i32 42, !dbg !8017
  %18 = load [3 x float]*, [3 x float]** %cagecos, align 8, !dbg !8017
  %19 = load %struct.BMLoop**, %struct.BMLoop*** %tri, align 8, !dbg !8018
  %arrayidx9 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %19, i64 0, !dbg !8018
  %20 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx9, align 8, !dbg !8018
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %20, i32 0, i32 1, !dbg !8018
  %21 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8018
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 0, !dbg !8018
  %call10 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !8018
  %idxprom11 = sext i32 %call10 to i64, !dbg !8016
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %18, i64 %idxprom11, !dbg !8016
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !8016
  store float* %arraydecay13, float** %lv1, align 8, !dbg !8019
  %22 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8020
  %cagecos14 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %22, i32 0, i32 42, !dbg !8021
  %23 = load [3 x float]*, [3 x float]** %cagecos14, align 8, !dbg !8021
  %24 = load %struct.BMLoop**, %struct.BMLoop*** %tri, align 8, !dbg !8022
  %arrayidx15 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %24, i64 1, !dbg !8022
  %25 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx15, align 8, !dbg !8022
  %v16 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %25, i32 0, i32 1, !dbg !8022
  %26 = load %struct.BMVert*, %struct.BMVert** %v16, align 8, !dbg !8022
  %head17 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %26, i32 0, i32 0, !dbg !8022
  %call18 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head17), !dbg !8022
  %idxprom19 = sext i32 %call18 to i64, !dbg !8020
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %23, i64 %idxprom19, !dbg !8020
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx20, i64 0, i64 0, !dbg !8020
  store float* %arraydecay21, float** %lv2, align 8, !dbg !8023
  %27 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8024
  %cagecos22 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %27, i32 0, i32 42, !dbg !8025
  %28 = load [3 x float]*, [3 x float]** %cagecos22, align 8, !dbg !8025
  %29 = load %struct.BMLoop**, %struct.BMLoop*** %tri, align 8, !dbg !8026
  %arrayidx23 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %29, i64 2, !dbg !8026
  %30 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx23, align 8, !dbg !8026
  %v24 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %30, i32 0, i32 1, !dbg !8026
  %31 = load %struct.BMVert*, %struct.BMVert** %v24, align 8, !dbg !8026
  %head25 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %31, i32 0, i32 0, !dbg !8026
  %call26 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head25), !dbg !8026
  %idxprom27 = sext i32 %call26 to i64, !dbg !8024
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %28, i64 %idxprom27, !dbg !8024
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx28, i64 0, i64 0, !dbg !8024
  store float* %arraydecay29, float** %lv3, align 8, !dbg !8027
  %32 = load float*, float** %v1.addr, align 8, !dbg !8028
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %raydir, i64 0, i64 0, !dbg !8030
  %33 = load float*, float** %lv1, align 8, !dbg !8031
  %34 = load float*, float** %lv2, align 8, !dbg !8032
  %35 = load float*, float** %lv3, align 8, !dbg !8033
  %call31 = call zeroext i8 @isect_ray_tri_epsilon_v3(float* %32, float* %arraydecay30, float* %33, float* %34, float* %35, float* %lambda, float* null, float 0x3EE4F8B580000000), !dbg !8034
  %tobool = icmp ne i8 %call31, 0, !dbg !8034
  br i1 %tobool, label %if.then32, label %if.end75, !dbg !8035

if.then32:                                        ; preds = %if.end
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %tri_norm, i64 0, i64 0, !dbg !8036
  %36 = load float*, float** %lv1, align 8, !dbg !8038
  %37 = load float*, float** %lv2, align 8, !dbg !8039
  %38 = load float*, float** %lv3, align 8, !dbg !8040
  %call34 = call float @normal_tri_v3(float* %arraydecay33, float* %36, float* %37, float* %38), !dbg !8041
  %arraydecay35 = getelementptr inbounds [4 x float], [4 x float]* %tri_plane, i64 0, i64 0, !dbg !8042
  %39 = load float*, float** %lv1, align 8, !dbg !8043
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %tri_norm, i64 0, i64 0, !dbg !8044
  call void @plane_from_point_normal_v3(float* %arraydecay35, float* %39, float* %arraydecay36), !dbg !8045
  %40 = load float*, float** %v1.addr, align 8, !dbg !8046
  %arraydecay37 = getelementptr inbounds [4 x float], [4 x float]* %tri_plane, i64 0, i64 0, !dbg !8048
  %call38 = call float @dist_squared_to_plane_v3(float* %40, float* %arraydecay37), !dbg !8049
  %cmp39 = fcmp olt float %call38, 0x3EE4F8B580000000, !dbg !8050
  br i1 %cmp39, label %land.lhs.true, label %if.end44, !dbg !8051

land.lhs.true:                                    ; preds = %if.then32
  %41 = load float*, float** %v2.addr, align 8, !dbg !8052
  %arraydecay40 = getelementptr inbounds [4 x float], [4 x float]* %tri_plane, i64 0, i64 0, !dbg !8053
  %call41 = call float @dist_squared_to_plane_v3(float* %41, float* %arraydecay40), !dbg !8054
  %cmp42 = fcmp olt float %call41, 0x3EE4F8B580000000, !dbg !8055
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !8056

if.then43:                                        ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !8057
  br label %return, !dbg !8057

if.end44:                                         ; preds = %land.lhs.true, %if.then32
  %42 = load float*, float** %hit_cageco.addr, align 8, !dbg !8059
  %43 = load float*, float** %v1.addr, align 8, !dbg !8060
  call void @copy_v3_v3(float* %42, float* %43), !dbg !8061
  %44 = load float*, float** %hit_cageco.addr, align 8, !dbg !8062
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %raydir, i64 0, i64 0, !dbg !8063
  %45 = load float, float* %lambda, align 4, !dbg !8064
  call void @madd_v3_v3fl(float* %44, float* %arraydecay45, float %45), !dbg !8065
  %46 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8066
  %47 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !8067
  %call46 = call %struct.ListBase* @knife_get_face_kedges(%struct.KnifeTool_OpData* %46, %struct.BMFace* %47), !dbg !8068
  store %struct.ListBase* %call46, %struct.ListBase** %lst, align 8, !dbg !8069
  %48 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !8070
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %48, i32 0, i32 0, !dbg !8072
  %49 = load i8*, i8** %first, align 8, !dbg !8072
  %50 = bitcast i8* %49 to %struct.Ref*, !dbg !8070
  store %struct.Ref* %50, %struct.Ref** %ref, align 8, !dbg !8073
  br label %for.cond47, !dbg !8074

for.cond47:                                       ; preds = %for.inc, %if.end44
  %51 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !8075
  %tobool48 = icmp ne %struct.Ref* %51, null, !dbg !8077
  br i1 %tobool48, label %for.body49, label %for.end, !dbg !8077

for.body49:                                       ; preds = %for.cond47
  %52 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !8078
  %ref50 = getelementptr inbounds %struct.Ref, %struct.Ref* %52, i32 0, i32 2, !dbg !8080
  %53 = load i8*, i8** %ref50, align 8, !dbg !8080
  %54 = bitcast i8* %53 to %struct.KnifeEdge*, !dbg !8078
  store %struct.KnifeEdge* %54, %struct.KnifeEdge** %kfe, align 8, !dbg !8081
  %55 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8082
  %56 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !8083
  %v151 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %56, i32 0, i32 0, !dbg !8084
  %57 = load %struct.KnifeVert*, %struct.KnifeVert** %v151, align 8, !dbg !8084
  %cageco = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %57, i32 0, i32 4, !dbg !8085
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %cageco, i64 0, i64 0, !dbg !8083
  %arraydecay53 = getelementptr inbounds [2 x float], [2 x float]* %se1, i64 0, i64 0, !dbg !8086
  call void @knife_project_v2(%struct.KnifeTool_OpData* %55, float* %arraydecay52, float* %arraydecay53), !dbg !8087
  %58 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8088
  %59 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !8089
  %v254 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %59, i32 0, i32 1, !dbg !8090
  %60 = load %struct.KnifeVert*, %struct.KnifeVert** %v254, align 8, !dbg !8090
  %cageco55 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %60, i32 0, i32 4, !dbg !8091
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %cageco55, i64 0, i64 0, !dbg !8089
  %arraydecay57 = getelementptr inbounds [2 x float], [2 x float]* %se2, i64 0, i64 0, !dbg !8092
  call void @knife_project_v2(%struct.KnifeTool_OpData* %58, float* %arraydecay56, float* %arraydecay57), !dbg !8093
  %61 = load float*, float** %s.addr, align 8, !dbg !8094
  %arraydecay58 = getelementptr inbounds [2 x float], [2 x float]* %se1, i64 0, i64 0, !dbg !8095
  %arraydecay59 = getelementptr inbounds [2 x float], [2 x float]* %se2, i64 0, i64 0, !dbg !8096
  %call60 = call float @dist_squared_to_line_segment_v2(float* %61, float* %arraydecay58, float* %arraydecay59), !dbg !8097
  store float %call60, float* %d, align 4, !dbg !8098
  %62 = load float, float* %d, align 4, !dbg !8099
  %63 = load float, float* %face_tol_sq.addr, align 4, !dbg !8101
  %cmp61 = fcmp olt float %62, %63, !dbg !8102
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !8103

if.then62:                                        ; preds = %for.body49
  store i8 0, i8* %retval, align 1, !dbg !8104
  br label %return, !dbg !8104

if.end63:                                         ; preds = %for.body49
  br label %for.inc, !dbg !8106

for.inc:                                          ; preds = %if.end63
  %64 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !8107
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %64, i32 0, i32 0, !dbg !8108
  %65 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !8108
  store %struct.Ref* %65, %struct.Ref** %ref, align 8, !dbg !8109
  br label %for.cond47, !dbg !8110, !llvm.loop !8111

for.end:                                          ; preds = %for.cond47
  %66 = load float*, float** %hit_co.addr, align 8, !dbg !8113
  %67 = load float*, float** %hit_cageco.addr, align 8, !dbg !8114
  %68 = load %struct.BMLoop**, %struct.BMLoop*** %tri, align 8, !dbg !8115
  %arrayidx64 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %68, i64 0, !dbg !8115
  %69 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx64, align 8, !dbg !8115
  %v65 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %69, i32 0, i32 1, !dbg !8116
  %70 = load %struct.BMVert*, %struct.BMVert** %v65, align 8, !dbg !8116
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %70, i32 0, i32 2, !dbg !8117
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8115
  %71 = load %struct.BMLoop**, %struct.BMLoop*** %tri, align 8, !dbg !8118
  %arrayidx67 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %71, i64 1, !dbg !8118
  %72 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx67, align 8, !dbg !8118
  %v68 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %72, i32 0, i32 1, !dbg !8119
  %73 = load %struct.BMVert*, %struct.BMVert** %v68, align 8, !dbg !8119
  %co69 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %73, i32 0, i32 2, !dbg !8120
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %co69, i64 0, i64 0, !dbg !8118
  %74 = load %struct.BMLoop**, %struct.BMLoop*** %tri, align 8, !dbg !8121
  %arrayidx71 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %74, i64 2, !dbg !8121
  %75 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx71, align 8, !dbg !8121
  %v72 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %75, i32 0, i32 1, !dbg !8122
  %76 = load %struct.BMVert*, %struct.BMVert** %v72, align 8, !dbg !8122
  %co73 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %76, i32 0, i32 2, !dbg !8123
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %co73, i64 0, i64 0, !dbg !8121
  %77 = load float*, float** %lv1, align 8, !dbg !8124
  %78 = load float*, float** %lv2, align 8, !dbg !8125
  %79 = load float*, float** %lv3, align 8, !dbg !8126
  call void @transform_point_by_tri_v3(float* %66, float* %67, float* %arraydecay66, float* %arraydecay70, float* %arraydecay74, float* %77, float* %78, float* %79), !dbg !8127
  store i8 1, i8* %retval, align 1, !dbg !8128
  br label %return, !dbg !8128

if.end75:                                         ; preds = %if.end
  br label %for.inc76, !dbg !8129

for.inc76:                                        ; preds = %if.end75
  %80 = load i32, i32* %tri_i, align 4, !dbg !8130
  %inc = add nsw i32 %80, 1, !dbg !8130
  store i32 %inc, i32* %tri_i, align 4, !dbg !8130
  br label %for.cond, !dbg !8131, !llvm.loop !8132

for.end77:                                        ; preds = %if.then, %for.cond
  store i8 0, i8* %retval, align 1, !dbg !8134
  br label %return, !dbg !8134

return:                                           ; preds = %for.end77, %for.end, %if.then62, %if.then43
  %81 = load i8, i8* %retval, align 1, !dbg !8135
  ret i8 %81, !dbg !8135
}

declare dso_local void @BLI_smallhash_release(%struct.SmallHash*) #2

declare dso_local float @closest_to_line_v3(float*, float*, float*, float*) #2

declare dso_local void @dist_ensure_v3_v3fl(float*, float*, float) #2

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !8136 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8137, metadata !DIExpression()), !dbg !8138
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8139, metadata !DIExpression()), !dbg !8140
  %0 = load float*, float** %a.addr, align 8, !dbg !8141
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8141
  %1 = load float, float* %arrayidx, align 4, !dbg !8141
  %2 = load float*, float** %r.addr, align 8, !dbg !8142
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8142
  %3 = load float, float* %arrayidx1, align 4, !dbg !8143
  %sub = fsub float %3, %1, !dbg !8143
  store float %sub, float* %arrayidx1, align 4, !dbg !8143
  %4 = load float*, float** %a.addr, align 8, !dbg !8144
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8144
  %5 = load float, float* %arrayidx2, align 4, !dbg !8144
  %6 = load float*, float** %r.addr, align 8, !dbg !8145
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8145
  %7 = load float, float* %arrayidx3, align 4, !dbg !8146
  %sub4 = fsub float %7, %5, !dbg !8146
  store float %sub4, float* %arrayidx3, align 4, !dbg !8146
  %8 = load float*, float** %a.addr, align 8, !dbg !8147
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8147
  %9 = load float, float* %arrayidx5, align 4, !dbg !8147
  %10 = load float*, float** %r.addr, align 8, !dbg !8148
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8148
  %11 = load float, float* %arrayidx6, align 4, !dbg !8149
  %sub7 = fsub float %11, %9, !dbg !8149
  store float %sub7, float* %arrayidx6, align 4, !dbg !8149
  ret void, !dbg !8150
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !8151 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  %0 = load float*, float** %n.addr, align 8, !dbg !8156
  %1 = load float*, float** %n.addr, align 8, !dbg !8157
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !8158
  ret float %call, !dbg !8159
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3v3fl(float* %r, float* %a, float* %b, float %f) #0 !dbg !8160 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8163, metadata !DIExpression()), !dbg !8164
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8165, metadata !DIExpression()), !dbg !8166
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8167, metadata !DIExpression()), !dbg !8168
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8169, metadata !DIExpression()), !dbg !8170
  %0 = load float*, float** %a.addr, align 8, !dbg !8171
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8171
  %1 = load float, float* %arrayidx, align 4, !dbg !8171
  %2 = load float*, float** %b.addr, align 8, !dbg !8172
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8172
  %3 = load float, float* %arrayidx1, align 4, !dbg !8172
  %4 = load float, float* %f.addr, align 4, !dbg !8173
  %mul = fmul float %3, %4, !dbg !8174
  %add = fadd float %1, %mul, !dbg !8175
  %5 = load float*, float** %r.addr, align 8, !dbg !8176
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !8176
  store float %add, float* %arrayidx2, align 4, !dbg !8177
  %6 = load float*, float** %a.addr, align 8, !dbg !8178
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8178
  %7 = load float, float* %arrayidx3, align 4, !dbg !8178
  %8 = load float*, float** %b.addr, align 8, !dbg !8179
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !8179
  %9 = load float, float* %arrayidx4, align 4, !dbg !8179
  %10 = load float, float* %f.addr, align 4, !dbg !8180
  %mul5 = fmul float %9, %10, !dbg !8181
  %add6 = fadd float %7, %mul5, !dbg !8182
  %11 = load float*, float** %r.addr, align 8, !dbg !8183
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !8183
  store float %add6, float* %arrayidx7, align 4, !dbg !8184
  %12 = load float*, float** %a.addr, align 8, !dbg !8185
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !8185
  %13 = load float, float* %arrayidx8, align 4, !dbg !8185
  %14 = load float*, float** %b.addr, align 8, !dbg !8186
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 2, !dbg !8186
  %15 = load float, float* %arrayidx9, align 4, !dbg !8186
  %16 = load float, float* %f.addr, align 4, !dbg !8187
  %mul10 = fmul float %15, %16, !dbg !8188
  %add11 = fadd float %13, %mul10, !dbg !8189
  %17 = load float*, float** %r.addr, align 8, !dbg !8190
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 2, !dbg !8190
  store float %add11, float* %arrayidx12, align 4, !dbg !8191
  ret void, !dbg !8192
}

declare dso_local zeroext i8 @clip_segment_v3_plane_n(float*, float*, [4 x float]*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !8193 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8194, metadata !DIExpression()), !dbg !8195
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8196, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !8198, metadata !DIExpression()), !dbg !8199
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !8200
  %0 = load float*, float** %b.addr, align 8, !dbg !8201
  %1 = load float*, float** %a.addr, align 8, !dbg !8202
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !8203
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !8204
  %call = call float @len_v3(float* %arraydecay1), !dbg !8205
  ret float %call, !dbg !8206
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !8207 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8210, metadata !DIExpression()), !dbg !8211
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8212, metadata !DIExpression()), !dbg !8213
  call void @llvm.dbg.declare(metadata float* %d, metadata !8214, metadata !DIExpression()), !dbg !8215
  %0 = load float*, float** %a.addr, align 8, !dbg !8216
  %1 = load float*, float** %a.addr, align 8, !dbg !8217
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !8218
  store float %call, float* %d, align 4, !dbg !8215
  %2 = load float, float* %d, align 4, !dbg !8219
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !8221
  br i1 %cmp, label %if.then, label %if.else, !dbg !8222

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !8223
  %call1 = call float @sqrtf(float %3) #5, !dbg !8225
  store float %call1, float* %d, align 4, !dbg !8226
  %4 = load float*, float** %r.addr, align 8, !dbg !8227
  %5 = load float*, float** %a.addr, align 8, !dbg !8228
  %6 = load float, float* %d, align 4, !dbg !8229
  %div = fdiv float 1.000000e+00, %6, !dbg !8230
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !8231
  br label %if.end, !dbg !8232

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !8233
  call void @zero_v3(float* %7), !dbg !8235
  store float 0.000000e+00, float* %d, align 4, !dbg !8236
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !8237
  ret float %8, !dbg !8238
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !8239 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8240, metadata !DIExpression()), !dbg !8241
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8242, metadata !DIExpression()), !dbg !8243
  %0 = load float*, float** %a.addr, align 8, !dbg !8244
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8244
  %1 = load float, float* %arrayidx, align 4, !dbg !8244
  %2 = load float*, float** %b.addr, align 8, !dbg !8245
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8245
  %3 = load float, float* %arrayidx1, align 4, !dbg !8245
  %mul = fmul float %1, %3, !dbg !8246
  %4 = load float*, float** %a.addr, align 8, !dbg !8247
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8247
  %5 = load float, float* %arrayidx2, align 4, !dbg !8247
  %6 = load float*, float** %b.addr, align 8, !dbg !8248
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8248
  %7 = load float, float* %arrayidx3, align 4, !dbg !8248
  %mul4 = fmul float %5, %7, !dbg !8249
  %add = fadd float %mul, %mul4, !dbg !8250
  %8 = load float*, float** %a.addr, align 8, !dbg !8251
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8251
  %9 = load float, float* %arrayidx5, align 4, !dbg !8251
  %10 = load float*, float** %b.addr, align 8, !dbg !8252
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8252
  %11 = load float, float* %arrayidx6, align 4, !dbg !8252
  %mul7 = fmul float %9, %11, !dbg !8253
  %add8 = fadd float %add, %mul7, !dbg !8254
  ret float %add8, !dbg !8255
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !8256 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8259, metadata !DIExpression()), !dbg !8260
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8261, metadata !DIExpression()), !dbg !8262
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8263, metadata !DIExpression()), !dbg !8264
  %0 = load float*, float** %a.addr, align 8, !dbg !8265
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8265
  %1 = load float, float* %arrayidx, align 4, !dbg !8265
  %2 = load float, float* %f.addr, align 4, !dbg !8266
  %mul = fmul float %1, %2, !dbg !8267
  %3 = load float*, float** %r.addr, align 8, !dbg !8268
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !8268
  store float %mul, float* %arrayidx1, align 4, !dbg !8269
  %4 = load float*, float** %a.addr, align 8, !dbg !8270
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8270
  %5 = load float, float* %arrayidx2, align 4, !dbg !8270
  %6 = load float, float* %f.addr, align 4, !dbg !8271
  %mul3 = fmul float %5, %6, !dbg !8272
  %7 = load float*, float** %r.addr, align 8, !dbg !8273
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8273
  store float %mul3, float* %arrayidx4, align 4, !dbg !8274
  %8 = load float*, float** %a.addr, align 8, !dbg !8275
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8275
  %9 = load float, float* %arrayidx5, align 4, !dbg !8275
  %10 = load float, float* %f.addr, align 4, !dbg !8276
  %mul6 = fmul float %9, %10, !dbg !8277
  %11 = load float*, float** %r.addr, align 8, !dbg !8278
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !8278
  store float %mul6, float* %arrayidx7, align 4, !dbg !8279
  ret void, !dbg !8280
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !8281 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8282, metadata !DIExpression()), !dbg !8283
  %0 = load float*, float** %a.addr, align 8, !dbg !8284
  %1 = load float*, float** %a.addr, align 8, !dbg !8285
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !8286
  %call1 = call float @sqrtf(float %call) #5, !dbg !8287
  ret float %call1, !dbg !8288
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_m4_v3_row_z([4 x float]* %M, float* %a) #0 !dbg !8289 {
entry:
  %M.addr = alloca [4 x float]*, align 8
  %a.addr = alloca float*, align 8
  store [4 x float]* %M, [4 x float]** %M.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %M.addr, metadata !8292, metadata !DIExpression()), !dbg !8293
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8294, metadata !DIExpression()), !dbg !8295
  %0 = load [4 x float]*, [4 x float]** %M.addr, align 8, !dbg !8296
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %0, i64 0, !dbg !8296
  %arrayidx1 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 2, !dbg !8296
  %1 = load float, float* %arrayidx1, align 4, !dbg !8296
  %2 = load float*, float** %a.addr, align 8, !dbg !8297
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !8297
  %3 = load float, float* %arrayidx2, align 4, !dbg !8297
  %mul = fmul float %1, %3, !dbg !8298
  %4 = load [4 x float]*, [4 x float]** %M.addr, align 8, !dbg !8299
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 1, !dbg !8299
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx3, i64 0, i64 2, !dbg !8299
  %5 = load float, float* %arrayidx4, align 4, !dbg !8299
  %6 = load float*, float** %a.addr, align 8, !dbg !8300
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 1, !dbg !8300
  %7 = load float, float* %arrayidx5, align 4, !dbg !8300
  %mul6 = fmul float %5, %7, !dbg !8301
  %add = fadd float %mul, %mul6, !dbg !8302
  %8 = load [4 x float]*, [4 x float]** %M.addr, align 8, !dbg !8303
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 2, !dbg !8303
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx7, i64 0, i64 2, !dbg !8303
  %9 = load float, float* %arrayidx8, align 4, !dbg !8303
  %10 = load float*, float** %a.addr, align 8, !dbg !8304
  %arrayidx9 = getelementptr inbounds float, float* %10, i64 2, !dbg !8304
  %11 = load float, float* %arrayidx9, align 4, !dbg !8304
  %mul10 = fmul float %9, %11, !dbg !8305
  %add11 = fadd float %add, %mul10, !dbg !8306
  ret float %add11, !dbg !8307
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_lowest_face_tri(%struct.KnifeTool_OpData* %kcd, %struct.BMFace* %f) #0 !dbg !8308 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %ans = alloca i32, align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !8311, metadata !DIExpression()), !dbg !8312
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.declare(metadata i32* %ans, metadata !8315, metadata !DIExpression()), !dbg !8316
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8317
  %facetrimap = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 10, !dbg !8317
  %1 = load %struct.GHash*, %struct.GHash** %facetrimap, align 8, !dbg !8317
  %2 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !8317
  %3 = bitcast %struct.BMFace* %2 to i8*, !dbg !8317
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %1, i8* %3), !dbg !8317
  %4 = ptrtoint i8* %call to i64, !dbg !8317
  %conv = trunc i64 %4 to i32, !dbg !8317
  store i32 %conv, i32* %ans, align 4, !dbg !8318
  %5 = load i32, i32* %ans, align 4, !dbg !8319
  %sub = sub nsw i32 %5, 1, !dbg !8320
  ret i32 %sub, !dbg !8321
}

declare dso_local zeroext i8 @isect_ray_tri_epsilon_v3(float*, float*, float*, float*, float*, float*, float*, float) #2

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #2

declare dso_local void @plane_from_point_normal_v3(float*, float*, float*) #2

declare dso_local float @dist_squared_to_plane_v3(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !8322 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8323, metadata !DIExpression()), !dbg !8324
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8325, metadata !DIExpression()), !dbg !8326
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8327, metadata !DIExpression()), !dbg !8328
  %0 = load float*, float** %a.addr, align 8, !dbg !8329
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8329
  %1 = load float, float* %arrayidx, align 4, !dbg !8329
  %2 = load float, float* %f.addr, align 4, !dbg !8330
  %mul = fmul float %1, %2, !dbg !8331
  %3 = load float*, float** %r.addr, align 8, !dbg !8332
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !8332
  %4 = load float, float* %arrayidx1, align 4, !dbg !8333
  %add = fadd float %4, %mul, !dbg !8333
  store float %add, float* %arrayidx1, align 4, !dbg !8333
  %5 = load float*, float** %a.addr, align 8, !dbg !8334
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !8334
  %6 = load float, float* %arrayidx2, align 4, !dbg !8334
  %7 = load float, float* %f.addr, align 4, !dbg !8335
  %mul3 = fmul float %6, %7, !dbg !8336
  %8 = load float*, float** %r.addr, align 8, !dbg !8337
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !8337
  %9 = load float, float* %arrayidx4, align 4, !dbg !8338
  %add5 = fadd float %9, %mul3, !dbg !8338
  store float %add5, float* %arrayidx4, align 4, !dbg !8338
  %10 = load float*, float** %a.addr, align 8, !dbg !8339
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8339
  %11 = load float, float* %arrayidx6, align 4, !dbg !8339
  %12 = load float, float* %f.addr, align 4, !dbg !8340
  %mul7 = fmul float %11, %12, !dbg !8341
  %13 = load float*, float** %r.addr, align 8, !dbg !8342
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !8342
  %14 = load float, float* %arrayidx8, align 4, !dbg !8343
  %add9 = fadd float %14, %mul7, !dbg !8343
  store float %add9, float* %arrayidx8, align 4, !dbg !8343
  ret void, !dbg !8344
}

declare dso_local void @transform_point_by_tri_v3(float*, float*, float*, float*, float*, float*, float*, float*) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local void @em_setup_viewcontext(%struct.bContext*, %struct.ViewContext*) #2

declare dso_local void @BM_mesh_elem_index_ensure(%struct.BMesh*, i8 zeroext) #2

declare dso_local [3 x float]* @BKE_editmesh_vertexCos_get(%struct.BMEditMesh*, %struct.Scene*, i32*) #2

declare dso_local %struct.BMBVHTree* @BKE_bmbvh_new_from_editmesh(%struct.BMEditMesh*, i32, [3 x float]*, i8 zeroext) #2

declare dso_local %struct.MemArena* @BLI_memarena_new(i64, i8*) #2

declare dso_local %struct.BLI_mempool* @BLI_mempool_create(i32, i32, i32, i32) #2

declare dso_local %struct.GHash* @BLI_ghash_ptr_new(i8*) #2

declare dso_local i8* @ED_region_draw_cb_activate(%struct.ARegionType*, void (%struct.bContext*, %struct.ARegion*, i8*)*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @knifetool_draw(%struct.bContext* %C, %struct.ARegion* %UNUSED_ar, i8* %arg) #0 !dbg !8345 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ar.addr = alloca %struct.ARegion*, align 8
  %arg.addr = alloca i8*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %kcd = alloca %struct.KnifeTool_OpData*, align 8
  %lh = alloca %struct.KnifeLineHit*, align 8
  %i = alloca i32, align 4
  %iter = alloca %struct.BLI_mempool_iter, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %iter116 = alloca %struct.BLI_mempool_iter, align 8
  %kfv = alloca %struct.KnifeVert*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8350, metadata !DIExpression()), !dbg !8351
  store %struct.ARegion* %UNUSED_ar, %struct.ARegion** %UNUSED_ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %UNUSED_ar.addr, metadata !8352, metadata !DIExpression()), !dbg !8353
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8354, metadata !DIExpression()), !dbg !8355
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !8356, metadata !DIExpression()), !dbg !8359
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8360
  %call = call %struct.View3D* @CTX_wm_view3d(%struct.bContext* %0), !dbg !8361
  store %struct.View3D* %call, %struct.View3D** %v3d, align 8, !dbg !8359
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd, metadata !8362, metadata !DIExpression()), !dbg !8363
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8364
  %2 = bitcast i8* %1 to %struct.KnifeTool_OpData*, !dbg !8364
  store %struct.KnifeTool_OpData* %2, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8363
  %3 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !8365
  %zbuf = getelementptr inbounds %struct.View3D, %struct.View3D* %3, i32 0, i32 47, !dbg !8367
  %4 = load i8, i8* %zbuf, align 8, !dbg !8367
  %tobool = icmp ne i8 %4, 0, !dbg !8365
  br i1 %tobool, label %if.then, label %if.end, !dbg !8368

if.then:                                          ; preds = %entry
  call void @glDisable(i32 2929), !dbg !8369
  br label %if.end, !dbg !8369

if.end:                                           ; preds = %if.then, %entry
  call void @glPolygonOffset(float 1.000000e+00, float 1.000000e+00), !dbg !8370
  call void @glPushMatrix(), !dbg !8371
  %5 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8372
  %ob = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %5, i32 0, i32 4, !dbg !8372
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8372
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 47, !dbg !8372
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !8372
  %7 = bitcast [4 x float]* %arraydecay to float*, !dbg !8372
  call void @glMultMatrixf(float* %7), !dbg !8372
  %8 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8373
  %mode = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %8, i32 0, i32 35, !dbg !8375
  %9 = load i32, i32* %mode, align 4, !dbg !8375
  %cmp = icmp eq i32 %9, 1, !dbg !8376
  br i1 %cmp, label %if.then1, label %if.end9, !dbg !8377

if.then1:                                         ; preds = %if.end
  %10 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8378
  %angle_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %10, i32 0, i32 41, !dbg !8381
  %11 = load i32, i32* %angle_snapping, align 8, !dbg !8381
  %cmp2 = icmp ne i32 %11, 0, !dbg !8382
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8383

if.then3:                                         ; preds = %if.then1
  %12 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8384
  call void @knifetool_draw_angle_snapping(%struct.KnifeTool_OpData* %12), !dbg !8385
  br label %if.end4, !dbg !8385

if.end4:                                          ; preds = %if.then3, %if.then1
  %13 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8386
  %colors = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %13, i32 0, i32 26, !dbg !8387
  %line = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %colors, i32 0, i32 0, !dbg !8388
  %arraydecay5 = getelementptr inbounds [3 x i8], [3 x i8]* %line, i64 0, i64 0, !dbg !8386
  call void @glColor3ubv(i8* %arraydecay5), !dbg !8389
  %14 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8390
  call void @glLineWidth(float 2.000000e+00), !dbg !8390
  call void @glBegin(i32 1), !dbg !8391
  %15 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8392
  %prev = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %15, i32 0, i32 19, !dbg !8393
  %cage = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev, i32 0, i32 1, !dbg !8394
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %cage, i64 0, i64 0, !dbg !8392
  call void @glVertex3fv(float* %arraydecay6), !dbg !8395
  %16 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8396
  %curr = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %16, i32 0, i32 18, !dbg !8397
  %cage7 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr, i32 0, i32 1, !dbg !8398
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %cage7, i64 0, i64 0, !dbg !8396
  call void @glVertex3fv(float* %arraydecay8), !dbg !8399
  call void @glEnd(), !dbg !8400
  %17 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8401
  call void @glLineWidth(float 1.000000e+00), !dbg !8401
  br label %if.end9, !dbg !8402

if.end9:                                          ; preds = %if.end4, %if.end
  %18 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8403
  %prev10 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %18, i32 0, i32 19, !dbg !8405
  %vert = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev10, i32 0, i32 2, !dbg !8406
  %19 = load %struct.KnifeVert*, %struct.KnifeVert** %vert, align 8, !dbg !8406
  %tobool11 = icmp ne %struct.KnifeVert* %19, null, !dbg !8403
  br i1 %tobool11, label %if.then12, label %if.end18, !dbg !8407

if.then12:                                        ; preds = %if.end9
  %20 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8408
  %colors13 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %20, i32 0, i32 26, !dbg !8410
  %point = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %colors13, i32 0, i32 4, !dbg !8411
  %arraydecay14 = getelementptr inbounds [3 x i8], [3 x i8]* %point, i64 0, i64 0, !dbg !8408
  call void @glColor3ubv(i8* %arraydecay14), !dbg !8412
  %21 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8413
  call void @glPointSize(float 1.100000e+01), !dbg !8413
  call void @glBegin(i32 0), !dbg !8414
  %22 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8415
  %prev15 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %22, i32 0, i32 19, !dbg !8416
  %cage16 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev15, i32 0, i32 1, !dbg !8417
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %cage16, i64 0, i64 0, !dbg !8415
  call void @glVertex3fv(float* %arraydecay17), !dbg !8418
  call void @glEnd(), !dbg !8419
  br label %if.end18, !dbg !8420

if.end18:                                         ; preds = %if.then12, %if.end9
  %23 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8421
  %prev19 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %23, i32 0, i32 19, !dbg !8423
  %bmface = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev19, i32 0, i32 4, !dbg !8424
  %24 = load %struct.BMFace*, %struct.BMFace** %bmface, align 8, !dbg !8424
  %tobool20 = icmp ne %struct.BMFace* %24, null, !dbg !8421
  br i1 %tobool20, label %if.then21, label %if.end27, !dbg !8425

if.then21:                                        ; preds = %if.end18
  %25 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8426
  %colors22 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %25, i32 0, i32 26, !dbg !8428
  %curpoint = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %colors22, i32 0, i32 2, !dbg !8429
  %arraydecay23 = getelementptr inbounds [3 x i8], [3 x i8]* %curpoint, i64 0, i64 0, !dbg !8426
  call void @glColor3ubv(i8* %arraydecay23), !dbg !8430
  %26 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8431
  call void @glPointSize(float 9.000000e+00), !dbg !8431
  call void @glBegin(i32 0), !dbg !8432
  %27 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8433
  %prev24 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %27, i32 0, i32 19, !dbg !8434
  %cage25 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev24, i32 0, i32 1, !dbg !8435
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %cage25, i64 0, i64 0, !dbg !8433
  call void @glVertex3fv(float* %arraydecay26), !dbg !8436
  call void @glEnd(), !dbg !8437
  br label %if.end27, !dbg !8438

if.end27:                                         ; preds = %if.then21, %if.end18
  %28 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8439
  %curr28 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %28, i32 0, i32 18, !dbg !8441
  %edge = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr28, i32 0, i32 3, !dbg !8442
  %29 = load %struct.KnifeEdge*, %struct.KnifeEdge** %edge, align 8, !dbg !8442
  %tobool29 = icmp ne %struct.KnifeEdge* %29, null, !dbg !8439
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !8443

if.then30:                                        ; preds = %if.end27
  %30 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8444
  %colors31 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %30, i32 0, i32 26, !dbg !8446
  %edge32 = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %colors31, i32 0, i32 1, !dbg !8447
  %arraydecay33 = getelementptr inbounds [3 x i8], [3 x i8]* %edge32, i64 0, i64 0, !dbg !8444
  call void @glColor3ubv(i8* %arraydecay33), !dbg !8448
  %31 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8449
  call void @glLineWidth(float 2.000000e+00), !dbg !8449
  call void @glBegin(i32 1), !dbg !8450
  %32 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8451
  %curr34 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %32, i32 0, i32 18, !dbg !8452
  %edge35 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr34, i32 0, i32 3, !dbg !8453
  %33 = load %struct.KnifeEdge*, %struct.KnifeEdge** %edge35, align 8, !dbg !8453
  %v1 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %33, i32 0, i32 0, !dbg !8454
  %34 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !8454
  %cageco = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %34, i32 0, i32 4, !dbg !8455
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %cageco, i64 0, i64 0, !dbg !8451
  call void @glVertex3fv(float* %arraydecay36), !dbg !8456
  %35 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8457
  %curr37 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %35, i32 0, i32 18, !dbg !8458
  %edge38 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr37, i32 0, i32 3, !dbg !8459
  %36 = load %struct.KnifeEdge*, %struct.KnifeEdge** %edge38, align 8, !dbg !8459
  %v2 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %36, i32 0, i32 1, !dbg !8460
  %37 = load %struct.KnifeVert*, %struct.KnifeVert** %v2, align 8, !dbg !8460
  %cageco39 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %37, i32 0, i32 4, !dbg !8461
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %cageco39, i64 0, i64 0, !dbg !8457
  call void @glVertex3fv(float* %arraydecay40), !dbg !8462
  call void @glEnd(), !dbg !8463
  %38 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8464
  call void @glLineWidth(float 1.000000e+00), !dbg !8464
  br label %if.end52, !dbg !8465

if.else:                                          ; preds = %if.end27
  %39 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8466
  %curr41 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %39, i32 0, i32 18, !dbg !8468
  %vert42 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr41, i32 0, i32 2, !dbg !8469
  %40 = load %struct.KnifeVert*, %struct.KnifeVert** %vert42, align 8, !dbg !8469
  %tobool43 = icmp ne %struct.KnifeVert* %40, null, !dbg !8466
  br i1 %tobool43, label %if.then44, label %if.end51, !dbg !8470

if.then44:                                        ; preds = %if.else
  %41 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8471
  %colors45 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %41, i32 0, i32 26, !dbg !8473
  %point46 = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %colors45, i32 0, i32 4, !dbg !8474
  %arraydecay47 = getelementptr inbounds [3 x i8], [3 x i8]* %point46, i64 0, i64 0, !dbg !8471
  call void @glColor3ubv(i8* %arraydecay47), !dbg !8475
  %42 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8476
  call void @glPointSize(float 1.100000e+01), !dbg !8476
  call void @glBegin(i32 0), !dbg !8477
  %43 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8478
  %curr48 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %43, i32 0, i32 18, !dbg !8479
  %cage49 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr48, i32 0, i32 1, !dbg !8480
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %cage49, i64 0, i64 0, !dbg !8478
  call void @glVertex3fv(float* %arraydecay50), !dbg !8481
  call void @glEnd(), !dbg !8482
  br label %if.end51, !dbg !8483

if.end51:                                         ; preds = %if.then44, %if.else
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then30
  %44 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8484
  %curr53 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %44, i32 0, i32 18, !dbg !8486
  %bmface54 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr53, i32 0, i32 4, !dbg !8487
  %45 = load %struct.BMFace*, %struct.BMFace** %bmface54, align 8, !dbg !8487
  %tobool55 = icmp ne %struct.BMFace* %45, null, !dbg !8484
  br i1 %tobool55, label %if.then56, label %if.end63, !dbg !8488

if.then56:                                        ; preds = %if.end52
  %46 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8489
  %colors57 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %46, i32 0, i32 26, !dbg !8491
  %curpoint58 = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %colors57, i32 0, i32 2, !dbg !8492
  %arraydecay59 = getelementptr inbounds [3 x i8], [3 x i8]* %curpoint58, i64 0, i64 0, !dbg !8489
  call void @glColor3ubv(i8* %arraydecay59), !dbg !8493
  %47 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8494
  call void @glPointSize(float 9.000000e+00), !dbg !8494
  call void @glBegin(i32 0), !dbg !8495
  %48 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8496
  %curr60 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %48, i32 0, i32 18, !dbg !8497
  %cage61 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %curr60, i32 0, i32 1, !dbg !8498
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %cage61, i64 0, i64 0, !dbg !8496
  call void @glVertex3fv(float* %arraydecay62), !dbg !8499
  call void @glEnd(), !dbg !8500
  br label %if.end63, !dbg !8501

if.end63:                                         ; preds = %if.then56, %if.end52
  %49 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8502
  %totlinehit = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %49, i32 0, i32 17, !dbg !8504
  %50 = load i32, i32* %totlinehit, align 8, !dbg !8504
  %cmp64 = icmp sgt i32 %50, 0, !dbg !8505
  br i1 %cmp64, label %if.then65, label %if.end91, !dbg !8506

if.then65:                                        ; preds = %if.end63
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %lh, metadata !8507, metadata !DIExpression()), !dbg !8509
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8510, metadata !DIExpression()), !dbg !8511
  call void @glEnable(i32 3042), !dbg !8512
  call void @glBlendFunc(i32 770, i32 771), !dbg !8513
  %51 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8514
  %colors66 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %51, i32 0, i32 26, !dbg !8515
  %point_a = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %colors66, i32 0, i32 5, !dbg !8516
  %arraydecay67 = getelementptr inbounds [4 x i8], [4 x i8]* %point_a, i64 0, i64 0, !dbg !8514
  call void @glColor4ubv(i8* %arraydecay67), !dbg !8517
  %52 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8518
  call void @glPointSize(float 1.100000e+01), !dbg !8518
  call void @glBegin(i32 0), !dbg !8519
  %53 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8520
  %linehits = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %53, i32 0, i32 16, !dbg !8521
  %54 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !8521
  store %struct.KnifeLineHit* %54, %struct.KnifeLineHit** %lh, align 8, !dbg !8522
  store i32 0, i32* %i, align 4, !dbg !8523
  br label %for.cond, !dbg !8525

for.cond:                                         ; preds = %for.inc, %if.then65
  %55 = load i32, i32* %i, align 4, !dbg !8526
  %56 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8528
  %totlinehit68 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %56, i32 0, i32 17, !dbg !8529
  %57 = load i32, i32* %totlinehit68, align 8, !dbg !8529
  %cmp69 = icmp slt i32 %55, %57, !dbg !8530
  br i1 %cmp69, label %for.body, label %for.end, !dbg !8531

for.body:                                         ; preds = %for.cond
  %58 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !8532
  %v = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %58, i32 0, i32 7, !dbg !8535
  %59 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !8535
  %tobool70 = icmp ne %struct.KnifeVert* %59, null, !dbg !8532
  br i1 %tobool70, label %if.then71, label %if.end73, !dbg !8536

if.then71:                                        ; preds = %for.body
  %60 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !8537
  %cagehit = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %60, i32 0, i32 1, !dbg !8538
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %cagehit, i64 0, i64 0, !dbg !8537
  call void @glVertex3fv(float* %arraydecay72), !dbg !8539
  br label %if.end73, !dbg !8539

if.end73:                                         ; preds = %if.then71, %for.body
  br label %for.inc, !dbg !8540

for.inc:                                          ; preds = %if.end73
  %61 = load i32, i32* %i, align 4, !dbg !8541
  %inc = add nsw i32 %61, 1, !dbg !8541
  store i32 %inc, i32* %i, align 4, !dbg !8541
  %62 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !8542
  %incdec.ptr = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %62, i32 1, !dbg !8542
  store %struct.KnifeLineHit* %incdec.ptr, %struct.KnifeLineHit** %lh, align 8, !dbg !8542
  br label %for.cond, !dbg !8543, !llvm.loop !8544

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !8546
  %63 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8547
  %colors74 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %63, i32 0, i32 26, !dbg !8548
  %curpoint_a = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %colors74, i32 0, i32 3, !dbg !8549
  %arraydecay75 = getelementptr inbounds [4 x i8], [4 x i8]* %curpoint_a, i64 0, i64 0, !dbg !8547
  call void @glColor4ubv(i8* %arraydecay75), !dbg !8550
  %64 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8551
  call void @glPointSize(float 7.000000e+00), !dbg !8551
  call void @glBegin(i32 0), !dbg !8552
  %65 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8553
  %linehits76 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %65, i32 0, i32 16, !dbg !8554
  %66 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits76, align 8, !dbg !8554
  store %struct.KnifeLineHit* %66, %struct.KnifeLineHit** %lh, align 8, !dbg !8555
  store i32 0, i32* %i, align 4, !dbg !8556
  br label %for.cond77, !dbg !8558

for.cond77:                                       ; preds = %for.inc87, %for.end
  %67 = load i32, i32* %i, align 4, !dbg !8559
  %68 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8561
  %totlinehit78 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %68, i32 0, i32 17, !dbg !8562
  %69 = load i32, i32* %totlinehit78, align 8, !dbg !8562
  %cmp79 = icmp slt i32 %67, %69, !dbg !8563
  br i1 %cmp79, label %for.body80, label %for.end90, !dbg !8564

for.body80:                                       ; preds = %for.cond77
  %70 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !8565
  %v81 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %70, i32 0, i32 7, !dbg !8568
  %71 = load %struct.KnifeVert*, %struct.KnifeVert** %v81, align 8, !dbg !8568
  %tobool82 = icmp ne %struct.KnifeVert* %71, null, !dbg !8565
  br i1 %tobool82, label %if.end86, label %if.then83, !dbg !8569

if.then83:                                        ; preds = %for.body80
  %72 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !8570
  %cagehit84 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %72, i32 0, i32 1, !dbg !8571
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %cagehit84, i64 0, i64 0, !dbg !8570
  call void @glVertex3fv(float* %arraydecay85), !dbg !8572
  br label %if.end86, !dbg !8572

if.end86:                                         ; preds = %if.then83, %for.body80
  br label %for.inc87, !dbg !8573

for.inc87:                                        ; preds = %if.end86
  %73 = load i32, i32* %i, align 4, !dbg !8574
  %inc88 = add nsw i32 %73, 1, !dbg !8574
  store i32 %inc88, i32* %i, align 4, !dbg !8574
  %74 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !8575
  %incdec.ptr89 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %74, i32 1, !dbg !8575
  store %struct.KnifeLineHit* %incdec.ptr89, %struct.KnifeLineHit** %lh, align 8, !dbg !8575
  br label %for.cond77, !dbg !8576, !llvm.loop !8577

for.end90:                                        ; preds = %for.cond77
  call void @glEnd(), !dbg !8579
  call void @glDisable(i32 3042), !dbg !8580
  br label %if.end91, !dbg !8581

if.end91:                                         ; preds = %for.end90, %if.end63
  %75 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8582
  %totkedge = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %75, i32 0, i32 20, !dbg !8584
  %76 = load i32, i32* %totkedge, align 8, !dbg !8584
  %cmp92 = icmp sgt i32 %76, 0, !dbg !8585
  br i1 %cmp92, label %if.then93, label %if.end113, !dbg !8586

if.then93:                                        ; preds = %if.end91
  call void @llvm.dbg.declare(metadata %struct.BLI_mempool_iter* %iter, metadata !8587, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !8590, metadata !DIExpression()), !dbg !8591
  %77 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8592
  call void @glLineWidth(float 1.000000e+00), !dbg !8592
  call void @glBegin(i32 1), !dbg !8593
  %78 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8594
  %kedges = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %78, i32 0, i32 13, !dbg !8595
  %79 = load %struct.BLI_mempool*, %struct.BLI_mempool** %kedges, align 8, !dbg !8595
  call void @BLI_mempool_iternew(%struct.BLI_mempool* %79, %struct.BLI_mempool_iter* %iter), !dbg !8596
  %call94 = call i8* @BLI_mempool_iterstep(%struct.BLI_mempool_iter* %iter), !dbg !8597
  %80 = bitcast i8* %call94 to %struct.KnifeEdge*, !dbg !8597
  store %struct.KnifeEdge* %80, %struct.KnifeEdge** %kfe, align 8, !dbg !8599
  br label %for.cond95, !dbg !8600

for.cond95:                                       ; preds = %for.inc110, %if.then93
  %81 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !8601
  %tobool96 = icmp ne %struct.KnifeEdge* %81, null, !dbg !8603
  br i1 %tobool96, label %for.body97, label %for.end112, !dbg !8603

for.body97:                                       ; preds = %for.cond95
  %82 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !8604
  %draw = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %82, i32 0, i32 5, !dbg !8607
  %83 = load i8, i8* %draw, align 8, !dbg !8607
  %tobool98 = icmp ne i8 %83, 0, !dbg !8604
  br i1 %tobool98, label %if.end100, label %if.then99, !dbg !8608

if.then99:                                        ; preds = %for.body97
  br label %for.inc110, !dbg !8609

if.end100:                                        ; preds = %for.body97
  %84 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8610
  %colors101 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %84, i32 0, i32 26, !dbg !8611
  %line102 = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %colors101, i32 0, i32 0, !dbg !8612
  %arraydecay103 = getelementptr inbounds [3 x i8], [3 x i8]* %line102, i64 0, i64 0, !dbg !8610
  call void @glColor3ubv(i8* %arraydecay103), !dbg !8613
  %85 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !8614
  %v1104 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %85, i32 0, i32 0, !dbg !8615
  %86 = load %struct.KnifeVert*, %struct.KnifeVert** %v1104, align 8, !dbg !8615
  %cageco105 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %86, i32 0, i32 4, !dbg !8616
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %cageco105, i64 0, i64 0, !dbg !8614
  call void @glVertex3fv(float* %arraydecay106), !dbg !8617
  %87 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !8618
  %v2107 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %87, i32 0, i32 1, !dbg !8619
  %88 = load %struct.KnifeVert*, %struct.KnifeVert** %v2107, align 8, !dbg !8619
  %cageco108 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %88, i32 0, i32 4, !dbg !8620
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %cageco108, i64 0, i64 0, !dbg !8618
  call void @glVertex3fv(float* %arraydecay109), !dbg !8621
  br label %for.inc110, !dbg !8622

for.inc110:                                       ; preds = %if.end100, %if.then99
  %call111 = call i8* @BLI_mempool_iterstep(%struct.BLI_mempool_iter* %iter), !dbg !8623
  %89 = bitcast i8* %call111 to %struct.KnifeEdge*, !dbg !8623
  store %struct.KnifeEdge* %89, %struct.KnifeEdge** %kfe, align 8, !dbg !8624
  br label %for.cond95, !dbg !8625, !llvm.loop !8626

for.end112:                                       ; preds = %for.cond95
  call void @glEnd(), !dbg !8628
  %90 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8629
  call void @glLineWidth(float 1.000000e+00), !dbg !8629
  br label %if.end113, !dbg !8630

if.end113:                                        ; preds = %for.end112, %if.end91
  %91 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8631
  %totkvert = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %91, i32 0, i32 21, !dbg !8633
  %92 = load i32, i32* %totkvert, align 4, !dbg !8633
  %cmp114 = icmp sgt i32 %92, 0, !dbg !8634
  br i1 %cmp114, label %if.then115, label %if.end133, !dbg !8635

if.then115:                                       ; preds = %if.end113
  call void @llvm.dbg.declare(metadata %struct.BLI_mempool_iter* %iter116, metadata !8636, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv, metadata !8639, metadata !DIExpression()), !dbg !8640
  %93 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8641
  call void @glPointSize(float 5.000000e+00), !dbg !8641
  call void @glBegin(i32 0), !dbg !8642
  %94 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8643
  %kverts = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %94, i32 0, i32 12, !dbg !8644
  %95 = load %struct.BLI_mempool*, %struct.BLI_mempool** %kverts, align 8, !dbg !8644
  call void @BLI_mempool_iternew(%struct.BLI_mempool* %95, %struct.BLI_mempool_iter* %iter116), !dbg !8645
  %call117 = call i8* @BLI_mempool_iterstep(%struct.BLI_mempool_iter* %iter116), !dbg !8646
  %96 = bitcast i8* %call117 to %struct.KnifeVert*, !dbg !8646
  store %struct.KnifeVert* %96, %struct.KnifeVert** %kfv, align 8, !dbg !8648
  br label %for.cond118, !dbg !8649

for.cond118:                                      ; preds = %for.inc130, %if.then115
  %97 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !8650
  %tobool119 = icmp ne %struct.KnifeVert* %97, null, !dbg !8652
  br i1 %tobool119, label %for.body120, label %for.end132, !dbg !8652

for.body120:                                      ; preds = %for.cond118
  %98 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !8653
  %draw121 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %98, i32 0, i32 8, !dbg !8656
  %99 = load i8, i8* %draw121, align 2, !dbg !8656
  %tobool122 = icmp ne i8 %99, 0, !dbg !8653
  br i1 %tobool122, label %if.end124, label %if.then123, !dbg !8657

if.then123:                                       ; preds = %for.body120
  br label %for.inc130, !dbg !8658

if.end124:                                        ; preds = %for.body120
  %100 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd, align 8, !dbg !8659
  %colors125 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %100, i32 0, i32 26, !dbg !8660
  %point126 = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %colors125, i32 0, i32 4, !dbg !8661
  %arraydecay127 = getelementptr inbounds [3 x i8], [3 x i8]* %point126, i64 0, i64 0, !dbg !8659
  call void @glColor3ubv(i8* %arraydecay127), !dbg !8662
  %101 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !8663
  %cageco128 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %101, i32 0, i32 4, !dbg !8664
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %cageco128, i64 0, i64 0, !dbg !8663
  call void @glVertex3fv(float* %arraydecay129), !dbg !8665
  br label %for.inc130, !dbg !8666

for.inc130:                                       ; preds = %if.end124, %if.then123
  %call131 = call i8* @BLI_mempool_iterstep(%struct.BLI_mempool_iter* %iter116), !dbg !8667
  %102 = bitcast i8* %call131 to %struct.KnifeVert*, !dbg !8667
  store %struct.KnifeVert* %102, %struct.KnifeVert** %kfv, align 8, !dbg !8668
  br label %for.cond118, !dbg !8669, !llvm.loop !8670

for.end132:                                       ; preds = %for.cond118
  call void @glEnd(), !dbg !8672
  br label %if.end133, !dbg !8673

if.end133:                                        ; preds = %for.end132, %if.end113
  call void @glPopMatrix(), !dbg !8674
  %103 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !8675
  %zbuf134 = getelementptr inbounds %struct.View3D, %struct.View3D* %103, i32 0, i32 47, !dbg !8677
  %104 = load i8, i8* %zbuf134, align 8, !dbg !8677
  %tobool135 = icmp ne i8 %104, 0, !dbg !8675
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !8678

if.then136:                                       ; preds = %if.end133
  call void @glEnable(i32 2929), !dbg !8679
  br label %if.end137, !dbg !8679

if.end137:                                        ; preds = %if.then136, %if.end133
  ret void, !dbg !8680
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_init_colors(%struct.KnifeColors* %colors) #0 !dbg !8681 {
entry:
  %colors.addr = alloca %struct.KnifeColors*, align 8
  store %struct.KnifeColors* %colors, %struct.KnifeColors** %colors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeColors** %colors.addr, metadata !8685, metadata !DIExpression()), !dbg !8686
  %0 = load %struct.KnifeColors*, %struct.KnifeColors** %colors.addr, align 8, !dbg !8687
  %line = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %0, i32 0, i32 0, !dbg !8688
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %line, i64 0, i64 0, !dbg !8687
  call void @UI_GetThemeColor3ubv(i32 51, i8* %arraydecay), !dbg !8689
  %1 = load %struct.KnifeColors*, %struct.KnifeColors** %colors.addr, align 8, !dbg !8690
  %edge = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %1, i32 0, i32 1, !dbg !8691
  %arraydecay1 = getelementptr inbounds [3 x i8], [3 x i8]* %edge, i64 0, i64 0, !dbg !8690
  call void @UI_GetThemeColor3ubv(i32 50, i8* %arraydecay1), !dbg !8692
  %2 = load %struct.KnifeColors*, %struct.KnifeColors** %colors.addr, align 8, !dbg !8693
  %curpoint = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %2, i32 0, i32 2, !dbg !8694
  %arraydecay2 = getelementptr inbounds [3 x i8], [3 x i8]* %curpoint, i64 0, i64 0, !dbg !8693
  call void @UI_GetThemeColor3ubv(i32 61, i8* %arraydecay2), !dbg !8695
  %3 = load %struct.KnifeColors*, %struct.KnifeColors** %colors.addr, align 8, !dbg !8696
  %curpoint_a = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %3, i32 0, i32 3, !dbg !8697
  %arraydecay3 = getelementptr inbounds [4 x i8], [4 x i8]* %curpoint_a, i64 0, i64 0, !dbg !8696
  call void @UI_GetThemeColor3ubv(i32 61, i8* %arraydecay3), !dbg !8698
  %4 = load %struct.KnifeColors*, %struct.KnifeColors** %colors.addr, align 8, !dbg !8699
  %curpoint_a4 = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %4, i32 0, i32 3, !dbg !8700
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %curpoint_a4, i64 0, i64 3, !dbg !8699
  store i8 102, i8* %arrayidx, align 1, !dbg !8701
  %5 = load %struct.KnifeColors*, %struct.KnifeColors** %colors.addr, align 8, !dbg !8702
  %point = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %5, i32 0, i32 4, !dbg !8703
  %arraydecay5 = getelementptr inbounds [3 x i8], [3 x i8]* %point, i64 0, i64 0, !dbg !8702
  call void @UI_GetThemeColor3ubv(i32 64, i8* %arraydecay5), !dbg !8704
  %6 = load %struct.KnifeColors*, %struct.KnifeColors** %colors.addr, align 8, !dbg !8705
  %point_a = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %6, i32 0, i32 5, !dbg !8706
  %arraydecay6 = getelementptr inbounds [4 x i8], [4 x i8]* %point_a, i64 0, i64 0, !dbg !8705
  call void @UI_GetThemeColor3ubv(i32 64, i8* %arraydecay6), !dbg !8707
  %7 = load %struct.KnifeColors*, %struct.KnifeColors** %colors.addr, align 8, !dbg !8708
  %point_a7 = getelementptr inbounds %struct.KnifeColors, %struct.KnifeColors* %7, i32 0, i32 5, !dbg !8709
  %arrayidx8 = getelementptr inbounds [4 x i8], [4 x i8]* %point_a7, i64 0, i64 3, !dbg !8708
  store i8 102, i8* %arrayidx8, align 1, !dbg !8710
  ret void, !dbg !8711
}

declare dso_local %struct.View3D* @CTX_wm_view3d(%struct.bContext*) #2

declare dso_local void @glDisable(i32) #2

declare dso_local void @glPolygonOffset(float, float) #2

declare dso_local void @glPushMatrix() #2

declare dso_local void @glMultMatrixf(float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @knifetool_draw_angle_snapping(%struct.KnifeTool_OpData* %kcd) #0 !dbg !8712 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %mats = alloca %struct.bglMats, align 8
  %u = alloca [3 x double], align 16
  %u1 = alloca [2 x double], align 16
  %u2 = alloca [2 x double], align 16
  %v1 = alloca [3 x double], align 16
  %v2 = alloca [3 x double], align 16
  %dx = alloca double, align 8
  %dy = alloca double, align 8
  %wminx = alloca double, align 8
  %wminy = alloca double, align 8
  %wmaxx = alloca double, align 8
  %wmaxy = alloca double, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !8715, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.declare(metadata %struct.bglMats* %mats, metadata !8717, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.declare(metadata [3 x double]* %u, metadata !8719, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.declare(metadata [2 x double]* %u1, metadata !8722, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.declare(metadata [2 x double]* %u2, metadata !8724, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.declare(metadata [3 x double]* %v1, metadata !8726, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.declare(metadata [3 x double]* %v2, metadata !8728, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.declare(metadata double* %dx, metadata !8730, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.declare(metadata double* %dy, metadata !8732, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.declare(metadata double* %wminx, metadata !8734, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.declare(metadata double* %wminy, metadata !8736, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.declare(metadata double* %wmaxx, metadata !8738, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.declare(metadata double* %wmaxy, metadata !8740, metadata !DIExpression()), !dbg !8741
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8742
  %ar = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 0, !dbg !8743
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8743
  %2 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8744
  %vc = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %2, i32 0, i32 2, !dbg !8745
  %rv3d = getelementptr inbounds %struct.ViewContext, %struct.ViewContext* %vc, i32 0, i32 5, !dbg !8746
  %3 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !8746
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8747
  %ob = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %4, i32 0, i32 4, !dbg !8748
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8748
  call void @view3d_get_transformation(%struct.ARegion* %1, %struct.RegionView3D* %3, %struct.Object* %5, %struct.bglMats* %mats), !dbg !8749
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8750
  %prev = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %6, i32 0, i32 19, !dbg !8751
  %cage = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev, i32 0, i32 1, !dbg !8752
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %cage, i64 0, i64 0, !dbg !8750
  %7 = load float, float* %arrayidx, align 4, !dbg !8750
  %conv = fpext float %7 to double, !dbg !8750
  %8 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8753
  %prev1 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %8, i32 0, i32 19, !dbg !8754
  %cage2 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev1, i32 0, i32 1, !dbg !8755
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %cage2, i64 0, i64 1, !dbg !8753
  %9 = load float, float* %arrayidx3, align 4, !dbg !8753
  %conv4 = fpext float %9 to double, !dbg !8753
  %10 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8756
  %prev5 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %10, i32 0, i32 19, !dbg !8757
  %cage6 = getelementptr inbounds %struct.KnifePosData, %struct.KnifePosData* %prev5, i32 0, i32 1, !dbg !8758
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %cage6, i64 0, i64 2, !dbg !8756
  %11 = load float, float* %arrayidx7, align 4, !dbg !8756
  %conv8 = fpext float %11 to double, !dbg !8756
  %modelview = getelementptr inbounds %struct.bglMats, %struct.bglMats* %mats, i32 0, i32 0, !dbg !8759
  %arraydecay = getelementptr inbounds [16 x double], [16 x double]* %modelview, i64 0, i64 0, !dbg !8760
  %projection = getelementptr inbounds %struct.bglMats, %struct.bglMats* %mats, i32 0, i32 1, !dbg !8761
  %arraydecay9 = getelementptr inbounds [16 x double], [16 x double]* %projection, i64 0, i64 0, !dbg !8762
  %viewport = getelementptr inbounds %struct.bglMats, %struct.bglMats* %mats, i32 0, i32 2, !dbg !8763
  %arraydecay10 = getelementptr inbounds [4 x i32], [4 x i32]* %viewport, i64 0, i64 0, !dbg !8764
  %arrayidx11 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 0, !dbg !8765
  %arrayidx12 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 1, !dbg !8766
  %arrayidx13 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 2, !dbg !8767
  %call = call i32 @gluProject(double %conv, double %conv4, double %conv8, double* %arraydecay, double* %arraydecay9, i32* %arraydecay10, double* %arrayidx11, double* %arrayidx12, double* %arrayidx13), !dbg !8768
  %12 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8769
  %ar14 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %12, i32 0, i32 0, !dbg !8770
  %13 = load %struct.ARegion*, %struct.ARegion** %ar14, align 8, !dbg !8770
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %13, i32 0, i32 3, !dbg !8771
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 0, !dbg !8772
  %14 = load i32, i32* %xmin, align 8, !dbg !8772
  %conv15 = sitofp i32 %14 to double, !dbg !8769
  store double %conv15, double* %wminx, align 8, !dbg !8773
  %15 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8774
  %ar16 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %15, i32 0, i32 0, !dbg !8775
  %16 = load %struct.ARegion*, %struct.ARegion** %ar16, align 8, !dbg !8775
  %winrct17 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %16, i32 0, i32 3, !dbg !8776
  %xmin18 = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct17, i32 0, i32 0, !dbg !8777
  %17 = load i32, i32* %xmin18, align 8, !dbg !8777
  %18 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8778
  %ar19 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %18, i32 0, i32 0, !dbg !8779
  %19 = load %struct.ARegion*, %struct.ARegion** %ar19, align 8, !dbg !8779
  %winx = getelementptr inbounds %struct.ARegion, %struct.ARegion* %19, i32 0, i32 5, !dbg !8780
  %20 = load i16, i16* %winx, align 8, !dbg !8780
  %conv20 = sext i16 %20 to i32, !dbg !8778
  %add = add nsw i32 %17, %conv20, !dbg !8781
  %conv21 = sitofp i32 %add to double, !dbg !8774
  store double %conv21, double* %wmaxx, align 8, !dbg !8782
  %21 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8783
  %ar22 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %21, i32 0, i32 0, !dbg !8784
  %22 = load %struct.ARegion*, %struct.ARegion** %ar22, align 8, !dbg !8784
  %winrct23 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %22, i32 0, i32 3, !dbg !8785
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct23, i32 0, i32 2, !dbg !8786
  %23 = load i32, i32* %ymin, align 8, !dbg !8786
  %conv24 = sitofp i32 %23 to double, !dbg !8783
  store double %conv24, double* %wminy, align 8, !dbg !8787
  %24 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8788
  %ar25 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %24, i32 0, i32 0, !dbg !8789
  %25 = load %struct.ARegion*, %struct.ARegion** %ar25, align 8, !dbg !8789
  %winrct26 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %25, i32 0, i32 3, !dbg !8790
  %ymin27 = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct26, i32 0, i32 2, !dbg !8791
  %26 = load i32, i32* %ymin27, align 8, !dbg !8791
  %27 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8792
  %ar28 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %27, i32 0, i32 0, !dbg !8793
  %28 = load %struct.ARegion*, %struct.ARegion** %ar28, align 8, !dbg !8793
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %28, i32 0, i32 6, !dbg !8794
  %29 = load i16, i16* %winy, align 2, !dbg !8794
  %conv29 = sext i16 %29 to i32, !dbg !8792
  %add30 = add nsw i32 %26, %conv29, !dbg !8795
  %conv31 = sitofp i32 %add30 to double, !dbg !8788
  store double %conv31, double* %wmaxy, align 8, !dbg !8796
  %30 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !8797
  %angle_snapping = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %30, i32 0, i32 41, !dbg !8798
  %31 = load i32, i32* %angle_snapping, align 8, !dbg !8798
  switch i32 %31, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb37
    i32 2, label %sw.bb43
    i32 4, label %sw.bb73
  ], !dbg !8799

sw.bb:                                            ; preds = %entry
  %32 = load double, double* %wminx, align 8, !dbg !8800
  %arrayidx32 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 0, !dbg !8802
  store double %32, double* %arrayidx32, align 16, !dbg !8803
  %33 = load double, double* %wmaxx, align 8, !dbg !8804
  %arrayidx33 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 0, !dbg !8805
  store double %33, double* %arrayidx33, align 16, !dbg !8806
  %arrayidx34 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 1, !dbg !8807
  %34 = load double, double* %arrayidx34, align 8, !dbg !8807
  %arrayidx35 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 1, !dbg !8808
  store double %34, double* %arrayidx35, align 8, !dbg !8809
  %arrayidx36 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 1, !dbg !8810
  store double %34, double* %arrayidx36, align 8, !dbg !8811
  br label %sw.epilog, !dbg !8812

sw.bb37:                                          ; preds = %entry
  %arrayidx38 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 0, !dbg !8813
  %35 = load double, double* %arrayidx38, align 16, !dbg !8813
  %arrayidx39 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 0, !dbg !8814
  store double %35, double* %arrayidx39, align 16, !dbg !8815
  %arrayidx40 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 0, !dbg !8816
  store double %35, double* %arrayidx40, align 16, !dbg !8817
  %36 = load double, double* %wminy, align 8, !dbg !8818
  %arrayidx41 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 1, !dbg !8819
  store double %36, double* %arrayidx41, align 8, !dbg !8820
  %37 = load double, double* %wmaxy, align 8, !dbg !8821
  %arrayidx42 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 1, !dbg !8822
  store double %37, double* %arrayidx42, align 8, !dbg !8823
  br label %sw.epilog, !dbg !8824

sw.bb43:                                          ; preds = %entry
  %arrayidx44 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 0, !dbg !8825
  %38 = load double, double* %arrayidx44, align 16, !dbg !8825
  %39 = load double, double* %wminx, align 8, !dbg !8826
  %sub = fsub double %38, %39, !dbg !8827
  store double %sub, double* %dx, align 8, !dbg !8828
  %arrayidx45 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 1, !dbg !8829
  %40 = load double, double* %arrayidx45, align 8, !dbg !8829
  %41 = load double, double* %wminy, align 8, !dbg !8830
  %sub46 = fsub double %40, %41, !dbg !8831
  store double %sub46, double* %dy, align 8, !dbg !8832
  %42 = load double, double* %dy, align 8, !dbg !8833
  %43 = load double, double* %dx, align 8, !dbg !8835
  %cmp = fcmp ogt double %42, %43, !dbg !8836
  br i1 %cmp, label %if.then, label %if.else, !dbg !8837

if.then:                                          ; preds = %sw.bb43
  %44 = load double, double* %wminx, align 8, !dbg !8838
  %arrayidx48 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 0, !dbg !8840
  store double %44, double* %arrayidx48, align 16, !dbg !8841
  %arrayidx49 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 1, !dbg !8842
  %45 = load double, double* %arrayidx49, align 8, !dbg !8842
  %46 = load double, double* %dx, align 8, !dbg !8843
  %sub50 = fsub double %45, %46, !dbg !8844
  %arrayidx51 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 1, !dbg !8845
  store double %sub50, double* %arrayidx51, align 8, !dbg !8846
  br label %if.end, !dbg !8847

if.else:                                          ; preds = %sw.bb43
  %arrayidx52 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 0, !dbg !8848
  %47 = load double, double* %arrayidx52, align 16, !dbg !8848
  %48 = load double, double* %dy, align 8, !dbg !8850
  %sub53 = fsub double %47, %48, !dbg !8851
  %arrayidx54 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 0, !dbg !8852
  store double %sub53, double* %arrayidx54, align 16, !dbg !8853
  %49 = load double, double* %wminy, align 8, !dbg !8854
  %arrayidx55 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 1, !dbg !8855
  store double %49, double* %arrayidx55, align 8, !dbg !8856
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %50 = load double, double* %wmaxx, align 8, !dbg !8857
  %arrayidx56 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 0, !dbg !8858
  %51 = load double, double* %arrayidx56, align 16, !dbg !8858
  %sub57 = fsub double %50, %51, !dbg !8859
  store double %sub57, double* %dx, align 8, !dbg !8860
  %52 = load double, double* %wmaxy, align 8, !dbg !8861
  %arrayidx58 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 1, !dbg !8862
  %53 = load double, double* %arrayidx58, align 8, !dbg !8862
  %sub59 = fsub double %52, %53, !dbg !8863
  store double %sub59, double* %dy, align 8, !dbg !8864
  %54 = load double, double* %dy, align 8, !dbg !8865
  %55 = load double, double* %dx, align 8, !dbg !8867
  %cmp60 = fcmp ogt double %54, %55, !dbg !8868
  br i1 %cmp60, label %if.then62, label %if.else67, !dbg !8869

if.then62:                                        ; preds = %if.end
  %56 = load double, double* %wmaxx, align 8, !dbg !8870
  %arrayidx63 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 0, !dbg !8872
  store double %56, double* %arrayidx63, align 16, !dbg !8873
  %arrayidx64 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 1, !dbg !8874
  %57 = load double, double* %arrayidx64, align 8, !dbg !8874
  %58 = load double, double* %dx, align 8, !dbg !8875
  %add65 = fadd double %57, %58, !dbg !8876
  %arrayidx66 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 1, !dbg !8877
  store double %add65, double* %arrayidx66, align 8, !dbg !8878
  br label %if.end72, !dbg !8879

if.else67:                                        ; preds = %if.end
  %arrayidx68 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 0, !dbg !8880
  %59 = load double, double* %arrayidx68, align 16, !dbg !8880
  %60 = load double, double* %dy, align 8, !dbg !8882
  %add69 = fadd double %59, %60, !dbg !8883
  %arrayidx70 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 0, !dbg !8884
  store double %add69, double* %arrayidx70, align 16, !dbg !8885
  %61 = load double, double* %wmaxy, align 8, !dbg !8886
  %arrayidx71 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 1, !dbg !8887
  store double %61, double* %arrayidx71, align 8, !dbg !8888
  br label %if.end72

if.end72:                                         ; preds = %if.else67, %if.then62
  br label %sw.epilog, !dbg !8889

sw.bb73:                                          ; preds = %entry
  %62 = load double, double* %wmaxx, align 8, !dbg !8890
  %arrayidx74 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 0, !dbg !8891
  %63 = load double, double* %arrayidx74, align 16, !dbg !8891
  %sub75 = fsub double %62, %63, !dbg !8892
  store double %sub75, double* %dx, align 8, !dbg !8893
  %arrayidx76 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 1, !dbg !8894
  %64 = load double, double* %arrayidx76, align 8, !dbg !8894
  %65 = load double, double* %wminy, align 8, !dbg !8895
  %sub77 = fsub double %64, %65, !dbg !8896
  store double %sub77, double* %dy, align 8, !dbg !8897
  %66 = load double, double* %dy, align 8, !dbg !8898
  %67 = load double, double* %dx, align 8, !dbg !8900
  %cmp78 = fcmp ogt double %66, %67, !dbg !8901
  br i1 %cmp78, label %if.then80, label %if.else85, !dbg !8902

if.then80:                                        ; preds = %sw.bb73
  %68 = load double, double* %wmaxx, align 8, !dbg !8903
  %arrayidx81 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 0, !dbg !8905
  store double %68, double* %arrayidx81, align 16, !dbg !8906
  %arrayidx82 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 1, !dbg !8907
  %69 = load double, double* %arrayidx82, align 8, !dbg !8907
  %70 = load double, double* %dx, align 8, !dbg !8908
  %sub83 = fsub double %69, %70, !dbg !8909
  %arrayidx84 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 1, !dbg !8910
  store double %sub83, double* %arrayidx84, align 8, !dbg !8911
  br label %if.end90, !dbg !8912

if.else85:                                        ; preds = %sw.bb73
  %arrayidx86 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 0, !dbg !8913
  %71 = load double, double* %arrayidx86, align 16, !dbg !8913
  %72 = load double, double* %dy, align 8, !dbg !8915
  %add87 = fadd double %71, %72, !dbg !8916
  %arrayidx88 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 0, !dbg !8917
  store double %add87, double* %arrayidx88, align 16, !dbg !8918
  %73 = load double, double* %wminy, align 8, !dbg !8919
  %arrayidx89 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 1, !dbg !8920
  store double %73, double* %arrayidx89, align 8, !dbg !8921
  br label %if.end90

if.end90:                                         ; preds = %if.else85, %if.then80
  %arrayidx91 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 0, !dbg !8922
  %74 = load double, double* %arrayidx91, align 16, !dbg !8922
  %75 = load double, double* %wminx, align 8, !dbg !8923
  %sub92 = fsub double %74, %75, !dbg !8924
  store double %sub92, double* %dx, align 8, !dbg !8925
  %76 = load double, double* %wmaxy, align 8, !dbg !8926
  %arrayidx93 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 1, !dbg !8927
  %77 = load double, double* %arrayidx93, align 8, !dbg !8927
  %sub94 = fsub double %76, %77, !dbg !8928
  store double %sub94, double* %dy, align 8, !dbg !8929
  %78 = load double, double* %dy, align 8, !dbg !8930
  %79 = load double, double* %dx, align 8, !dbg !8932
  %cmp95 = fcmp ogt double %78, %79, !dbg !8933
  br i1 %cmp95, label %if.then97, label %if.else102, !dbg !8934

if.then97:                                        ; preds = %if.end90
  %80 = load double, double* %wminx, align 8, !dbg !8935
  %arrayidx98 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 0, !dbg !8937
  store double %80, double* %arrayidx98, align 16, !dbg !8938
  %arrayidx99 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 1, !dbg !8939
  %81 = load double, double* %arrayidx99, align 8, !dbg !8939
  %82 = load double, double* %dx, align 8, !dbg !8940
  %add100 = fadd double %81, %82, !dbg !8941
  %arrayidx101 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 1, !dbg !8942
  store double %add100, double* %arrayidx101, align 8, !dbg !8943
  br label %if.end107, !dbg !8944

if.else102:                                       ; preds = %if.end90
  %arrayidx103 = getelementptr inbounds [3 x double], [3 x double]* %u, i64 0, i64 0, !dbg !8945
  %83 = load double, double* %arrayidx103, align 16, !dbg !8945
  %84 = load double, double* %dy, align 8, !dbg !8947
  %sub104 = fsub double %83, %84, !dbg !8948
  %arrayidx105 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 0, !dbg !8949
  store double %sub104, double* %arrayidx105, align 16, !dbg !8950
  %85 = load double, double* %wmaxy, align 8, !dbg !8951
  %arrayidx106 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 1, !dbg !8952
  store double %85, double* %arrayidx106, align 8, !dbg !8953
  br label %if.end107

if.end107:                                        ; preds = %if.else102, %if.then97
  br label %sw.epilog, !dbg !8954

sw.default:                                       ; preds = %entry
  br label %return, !dbg !8955

sw.epilog:                                        ; preds = %if.end107, %if.end72, %sw.bb37, %sw.bb
  %arrayidx108 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 0, !dbg !8956
  %86 = load double, double* %arrayidx108, align 16, !dbg !8956
  %arrayidx109 = getelementptr inbounds [2 x double], [2 x double]* %u1, i64 0, i64 1, !dbg !8957
  %87 = load double, double* %arrayidx109, align 8, !dbg !8957
  %modelview110 = getelementptr inbounds %struct.bglMats, %struct.bglMats* %mats, i32 0, i32 0, !dbg !8958
  %arraydecay111 = getelementptr inbounds [16 x double], [16 x double]* %modelview110, i64 0, i64 0, !dbg !8959
  %projection112 = getelementptr inbounds %struct.bglMats, %struct.bglMats* %mats, i32 0, i32 1, !dbg !8960
  %arraydecay113 = getelementptr inbounds [16 x double], [16 x double]* %projection112, i64 0, i64 0, !dbg !8961
  %viewport114 = getelementptr inbounds %struct.bglMats, %struct.bglMats* %mats, i32 0, i32 2, !dbg !8962
  %arraydecay115 = getelementptr inbounds [4 x i32], [4 x i32]* %viewport114, i64 0, i64 0, !dbg !8963
  %arrayidx116 = getelementptr inbounds [3 x double], [3 x double]* %v1, i64 0, i64 0, !dbg !8964
  %arrayidx117 = getelementptr inbounds [3 x double], [3 x double]* %v1, i64 0, i64 1, !dbg !8965
  %arrayidx118 = getelementptr inbounds [3 x double], [3 x double]* %v1, i64 0, i64 2, !dbg !8966
  %call119 = call i32 @gluUnProject(double %86, double %87, double 0.000000e+00, double* %arraydecay111, double* %arraydecay113, i32* %arraydecay115, double* %arrayidx116, double* %arrayidx117, double* %arrayidx118), !dbg !8967
  %arrayidx120 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 0, !dbg !8968
  %88 = load double, double* %arrayidx120, align 16, !dbg !8968
  %arrayidx121 = getelementptr inbounds [2 x double], [2 x double]* %u2, i64 0, i64 1, !dbg !8969
  %89 = load double, double* %arrayidx121, align 8, !dbg !8969
  %modelview122 = getelementptr inbounds %struct.bglMats, %struct.bglMats* %mats, i32 0, i32 0, !dbg !8970
  %arraydecay123 = getelementptr inbounds [16 x double], [16 x double]* %modelview122, i64 0, i64 0, !dbg !8971
  %projection124 = getelementptr inbounds %struct.bglMats, %struct.bglMats* %mats, i32 0, i32 1, !dbg !8972
  %arraydecay125 = getelementptr inbounds [16 x double], [16 x double]* %projection124, i64 0, i64 0, !dbg !8973
  %viewport126 = getelementptr inbounds %struct.bglMats, %struct.bglMats* %mats, i32 0, i32 2, !dbg !8974
  %arraydecay127 = getelementptr inbounds [4 x i32], [4 x i32]* %viewport126, i64 0, i64 0, !dbg !8975
  %arrayidx128 = getelementptr inbounds [3 x double], [3 x double]* %v2, i64 0, i64 0, !dbg !8976
  %arrayidx129 = getelementptr inbounds [3 x double], [3 x double]* %v2, i64 0, i64 1, !dbg !8977
  %arrayidx130 = getelementptr inbounds [3 x double], [3 x double]* %v2, i64 0, i64 2, !dbg !8978
  %call131 = call i32 @gluUnProject(double %88, double %89, double 0.000000e+00, double* %arraydecay123, double* %arraydecay125, i32* %arraydecay127, double* %arrayidx128, double* %arrayidx129, double* %arrayidx130), !dbg !8979
  call void @UI_ThemeColor(i32 32), !dbg !8980
  %90 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8981
  call void @glLineWidth(float 2.000000e+00), !dbg !8981
  call void @glBegin(i32 1), !dbg !8982
  %arraydecay132 = getelementptr inbounds [3 x double], [3 x double]* %v1, i64 0, i64 0, !dbg !8983
  call void @glVertex3dv(double* %arraydecay132), !dbg !8984
  %arraydecay133 = getelementptr inbounds [3 x double], [3 x double]* %v2, i64 0, i64 0, !dbg !8985
  call void @glVertex3dv(double* %arraydecay133), !dbg !8986
  call void @glEnd(), !dbg !8987
  br label %return, !dbg !8988

return:                                           ; preds = %sw.epilog, %sw.default
  ret void, !dbg !8988
}

declare dso_local void @glColor3ubv(i8*) #2

declare dso_local void @glLineWidth(float) #2

declare dso_local void @glBegin(i32) #2

declare dso_local void @glVertex3fv(float*) #2

declare dso_local void @glEnd() #2

declare dso_local void @glPointSize(float) #2

declare dso_local void @glEnable(i32) #2

declare dso_local void @glBlendFunc(i32, i32) #2

declare dso_local void @glColor4ubv(i8*) #2

declare dso_local void @BLI_mempool_iternew(%struct.BLI_mempool*, %struct.BLI_mempool_iter*) #2

declare dso_local i8* @BLI_mempool_iterstep(%struct.BLI_mempool_iter*) #2

declare dso_local void @glPopMatrix() #2

declare dso_local void @view3d_get_transformation(%struct.ARegion*, %struct.RegionView3D*, %struct.Object*, %struct.bglMats*) #2

declare dso_local i32 @gluProject(double, double, double, double*, double*, i32*, double*, double*, double*) #2

declare dso_local i32 @gluUnProject(double, double, double, double*, double*, i32*, double*, double*, double*) #2

declare dso_local void @UI_ThemeColor(i32) #2

declare dso_local void @glVertex3dv(double*) #2

declare dso_local void @UI_GetThemeColor3ubv(i32, i8*) #2

declare dso_local void @mul_mat3_m4_v3([4 x float]*, float*) #2

declare dso_local zeroext i8 @ED_view3d_clip_range_get(%struct.View3D*, %struct.RegionView3D*, float*, float*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3_v3(float* %r, float* %a) #0 !dbg !8989 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8990, metadata !DIExpression()), !dbg !8991
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8992, metadata !DIExpression()), !dbg !8993
  %0 = load float*, float** %a.addr, align 8, !dbg !8994
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8994
  %1 = load float, float* %arrayidx, align 4, !dbg !8994
  %fneg = fneg float %1, !dbg !8995
  %2 = load float*, float** %r.addr, align 8, !dbg !8996
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8996
  store float %fneg, float* %arrayidx1, align 4, !dbg !8997
  %3 = load float*, float** %a.addr, align 8, !dbg !8998
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !8998
  %4 = load float, float* %arrayidx2, align 4, !dbg !8998
  %fneg3 = fneg float %4, !dbg !8999
  %5 = load float*, float** %r.addr, align 8, !dbg !9000
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !9000
  store float %fneg3, float* %arrayidx4, align 4, !dbg !9001
  %6 = load float*, float** %a.addr, align 8, !dbg !9002
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !9002
  %7 = load float, float* %arrayidx5, align 4, !dbg !9002
  %fneg6 = fneg float %7, !dbg !9003
  %8 = load float*, float** %r.addr, align 8, !dbg !9004
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !9004
  store float %fneg6, float* %arrayidx7, align 4, !dbg !9005
  ret void, !dbg !9006
}

; Function Attrs: noinline nounwind uwtable
define internal void @prepare_linehits_for_cut(%struct.KnifeTool_OpData* %kcd) #0 !dbg !9007 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %linehits = alloca %struct.KnifeLineHit*, align 8
  %lhi = alloca %struct.KnifeLineHit*, align 8
  %lhj = alloca %struct.KnifeLineHit*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !9008, metadata !DIExpression()), !dbg !9009
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %linehits, metadata !9010, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %lhi, metadata !9012, metadata !DIExpression()), !dbg !9013
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %lhj, metadata !9014, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9016, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9018, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9020, metadata !DIExpression()), !dbg !9021
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9022
  %totlinehit = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 17, !dbg !9023
  %1 = load i32, i32* %totlinehit, align 8, !dbg !9023
  store i32 %1, i32* %n, align 4, !dbg !9024
  %2 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9025
  %linehits1 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %2, i32 0, i32 16, !dbg !9026
  %3 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits1, align 8, !dbg !9026
  store %struct.KnifeLineHit* %3, %struct.KnifeLineHit** %linehits, align 8, !dbg !9027
  %4 = load i32, i32* %n, align 4, !dbg !9028
  %cmp = icmp eq i32 %4, 0, !dbg !9030
  br i1 %cmp, label %if.then, label %if.end, !dbg !9031

if.then:                                          ; preds = %entry
  br label %return, !dbg !9032

if.end:                                           ; preds = %entry
  %5 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !9033
  %6 = bitcast %struct.KnifeLineHit* %5 to i8*, !dbg !9033
  %7 = load i32, i32* %n, align 4, !dbg !9034
  %conv = sext i32 %7 to i64, !dbg !9034
  call void @qsort(i8* %6, i64 %conv, i64 72, i32 (i8*, i8*)* @linehit_compare), !dbg !9035
  store i32 0, i32* %i, align 4, !dbg !9036
  br label %for.cond, !dbg !9038

for.cond:                                         ; preds = %for.inc56, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !9039
  %9 = load i32, i32* %n, align 4, !dbg !9041
  %cmp2 = icmp slt i32 %8, %9, !dbg !9042
  br i1 %cmp2, label %for.body, label %for.end58, !dbg !9043

for.body:                                         ; preds = %for.cond
  %10 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !9044
  %11 = load i32, i32* %i, align 4, !dbg !9046
  %idxprom = sext i32 %11 to i64, !dbg !9044
  %arrayidx = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %10, i64 %idxprom, !dbg !9044
  store %struct.KnifeLineHit* %arrayidx, %struct.KnifeLineHit** %lhi, align 8, !dbg !9047
  %12 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhi, align 8, !dbg !9048
  %v = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %12, i32 0, i32 7, !dbg !9050
  %13 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !9050
  %tobool = icmp ne %struct.KnifeVert* %13, null, !dbg !9048
  br i1 %tobool, label %if.then4, label %if.end55, !dbg !9051

if.then4:                                         ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !9052
  %sub = sub nsw i32 %14, 1, !dbg !9055
  store i32 %sub, i32* %j, align 4, !dbg !9056
  br label %for.cond5, !dbg !9057

for.cond5:                                        ; preds = %for.inc, %if.then4
  %15 = load i32, i32* %j, align 4, !dbg !9058
  %cmp6 = icmp sge i32 %15, 0, !dbg !9060
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !9061

for.body8:                                        ; preds = %for.cond5
  %16 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !9062
  %17 = load i32, i32* %j, align 4, !dbg !9064
  %idxprom9 = sext i32 %17 to i64, !dbg !9062
  %arrayidx10 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %16, i64 %idxprom9, !dbg !9062
  store %struct.KnifeLineHit* %arrayidx10, %struct.KnifeLineHit** %lhj, align 8, !dbg !9065
  %18 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhj, align 8, !dbg !9066
  %kfe = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %18, i32 0, i32 6, !dbg !9068
  %19 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9068
  %tobool11 = icmp ne %struct.KnifeEdge* %19, null, !dbg !9066
  br i1 %tobool11, label %lor.lhs.false, label %if.then21, !dbg !9069

lor.lhs.false:                                    ; preds = %for.body8
  %20 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhi, align 8, !dbg !9070
  %l = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %20, i32 0, i32 3, !dbg !9071
  %21 = load float, float* %l, align 8, !dbg !9071
  %22 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhj, align 8, !dbg !9072
  %l12 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %22, i32 0, i32 3, !dbg !9073
  %23 = load float, float* %l12, align 8, !dbg !9073
  %sub13 = fsub float %21, %23, !dbg !9074
  %24 = call float @llvm.fabs.f32(float %sub13), !dbg !9075
  %cmp14 = fcmp ogt float %24, 0x3F40624DE0000000, !dbg !9076
  br i1 %cmp14, label %if.then21, label %lor.lhs.false16, !dbg !9077

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %25 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhi, align 8, !dbg !9078
  %m = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %25, i32 0, i32 5, !dbg !9079
  %26 = load float, float* %m, align 8, !dbg !9079
  %27 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhj, align 8, !dbg !9080
  %m17 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %27, i32 0, i32 5, !dbg !9081
  %28 = load float, float* %m17, align 8, !dbg !9081
  %sub18 = fsub float %26, %28, !dbg !9082
  %29 = call float @llvm.fabs.f32(float %sub18), !dbg !9083
  %cmp19 = fcmp ogt float %29, 0x3F40624DE0000000, !dbg !9084
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !9085

if.then21:                                        ; preds = %lor.lhs.false16, %lor.lhs.false, %for.body8
  br label %for.end, !dbg !9086

if.end22:                                         ; preds = %lor.lhs.false16
  %30 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhj, align 8, !dbg !9088
  %l23 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %30, i32 0, i32 3, !dbg !9089
  store float -1.000000e+00, float* %l23, align 8, !dbg !9090
  br label %for.inc, !dbg !9091

for.inc:                                          ; preds = %if.end22
  %31 = load i32, i32* %j, align 4, !dbg !9092
  %dec = add nsw i32 %31, -1, !dbg !9092
  store i32 %dec, i32* %j, align 4, !dbg !9092
  br label %for.cond5, !dbg !9093, !llvm.loop !9094

for.end:                                          ; preds = %if.then21, %for.cond5
  %32 = load i32, i32* %i, align 4, !dbg !9096
  %add = add nsw i32 %32, 1, !dbg !9098
  store i32 %add, i32* %j, align 4, !dbg !9099
  br label %for.cond24, !dbg !9100

for.cond24:                                       ; preds = %for.inc53, %for.end
  %33 = load i32, i32* %j, align 4, !dbg !9101
  %34 = load i32, i32* %n, align 4, !dbg !9103
  %cmp25 = icmp slt i32 %33, %34, !dbg !9104
  br i1 %cmp25, label %for.body27, label %for.end54, !dbg !9105

for.body27:                                       ; preds = %for.cond24
  %35 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !9106
  %36 = load i32, i32* %j, align 4, !dbg !9108
  %idxprom28 = sext i32 %36 to i64, !dbg !9106
  %arrayidx29 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %35, i64 %idxprom28, !dbg !9106
  store %struct.KnifeLineHit* %arrayidx29, %struct.KnifeLineHit** %lhj, align 8, !dbg !9109
  %37 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhi, align 8, !dbg !9110
  %l30 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %37, i32 0, i32 3, !dbg !9112
  %38 = load float, float* %l30, align 8, !dbg !9112
  %39 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhj, align 8, !dbg !9113
  %l31 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %39, i32 0, i32 3, !dbg !9114
  %40 = load float, float* %l31, align 8, !dbg !9114
  %sub32 = fsub float %38, %40, !dbg !9115
  %41 = call float @llvm.fabs.f32(float %sub32), !dbg !9116
  %cmp33 = fcmp ogt float %41, 0x3F40624DE0000000, !dbg !9117
  br i1 %cmp33, label %if.then41, label %lor.lhs.false35, !dbg !9118

lor.lhs.false35:                                  ; preds = %for.body27
  %42 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhi, align 8, !dbg !9119
  %m36 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %42, i32 0, i32 5, !dbg !9120
  %43 = load float, float* %m36, align 8, !dbg !9120
  %44 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhj, align 8, !dbg !9121
  %m37 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %44, i32 0, i32 5, !dbg !9122
  %45 = load float, float* %m37, align 8, !dbg !9122
  %sub38 = fsub float %43, %45, !dbg !9123
  %46 = call float @llvm.fabs.f32(float %sub38), !dbg !9124
  %cmp39 = fcmp ogt float %46, 0x3F40624DE0000000, !dbg !9125
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !9126

if.then41:                                        ; preds = %lor.lhs.false35, %for.body27
  br label %for.end54, !dbg !9127

if.end42:                                         ; preds = %lor.lhs.false35
  %47 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhj, align 8, !dbg !9129
  %kfe43 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %47, i32 0, i32 6, !dbg !9131
  %48 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe43, align 8, !dbg !9131
  %tobool44 = icmp ne %struct.KnifeEdge* %48, null, !dbg !9129
  br i1 %tobool44, label %if.then50, label %lor.lhs.false45, !dbg !9132

lor.lhs.false45:                                  ; preds = %if.end42
  %49 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhi, align 8, !dbg !9133
  %v46 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %49, i32 0, i32 7, !dbg !9134
  %50 = load %struct.KnifeVert*, %struct.KnifeVert** %v46, align 8, !dbg !9134
  %51 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhj, align 8, !dbg !9135
  %v47 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %51, i32 0, i32 7, !dbg !9136
  %52 = load %struct.KnifeVert*, %struct.KnifeVert** %v47, align 8, !dbg !9136
  %cmp48 = icmp eq %struct.KnifeVert* %50, %52, !dbg !9137
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !9138

if.then50:                                        ; preds = %lor.lhs.false45, %if.end42
  %53 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhj, align 8, !dbg !9139
  %l51 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %53, i32 0, i32 3, !dbg !9141
  store float -1.000000e+00, float* %l51, align 8, !dbg !9142
  br label %if.end52, !dbg !9143

if.end52:                                         ; preds = %if.then50, %lor.lhs.false45
  br label %for.inc53, !dbg !9144

for.inc53:                                        ; preds = %if.end52
  %54 = load i32, i32* %j, align 4, !dbg !9145
  %inc = add nsw i32 %54, 1, !dbg !9145
  store i32 %inc, i32* %j, align 4, !dbg !9145
  br label %for.cond24, !dbg !9146, !llvm.loop !9147

for.end54:                                        ; preds = %if.then41, %for.cond24
  br label %if.end55, !dbg !9149

if.end55:                                         ; preds = %for.end54, %for.body
  br label %for.inc56, !dbg !9150

for.inc56:                                        ; preds = %if.end55
  %55 = load i32, i32* %i, align 4, !dbg !9151
  %inc57 = add nsw i32 %55, 1, !dbg !9151
  store i32 %inc57, i32* %i, align 4, !dbg !9151
  br label %for.cond, !dbg !9152, !llvm.loop !9153

for.end58:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9155
  store i32 1, i32* %j, align 4, !dbg !9156
  br label %while.cond, !dbg !9157

while.cond:                                       ; preds = %if.end92, %for.end58
  %56 = load i32, i32* %j, align 4, !dbg !9158
  %57 = load i32, i32* %n, align 4, !dbg !9159
  %cmp59 = icmp slt i32 %56, %57, !dbg !9160
  br i1 %cmp59, label %while.body, label %while.end, !dbg !9157

while.body:                                       ; preds = %while.cond
  %58 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !9161
  %59 = load i32, i32* %i, align 4, !dbg !9163
  %idxprom61 = sext i32 %59 to i64, !dbg !9161
  %arrayidx62 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %58, i64 %idxprom61, !dbg !9161
  store %struct.KnifeLineHit* %arrayidx62, %struct.KnifeLineHit** %lhi, align 8, !dbg !9164
  %60 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !9165
  %61 = load i32, i32* %j, align 4, !dbg !9166
  %idxprom63 = sext i32 %61 to i64, !dbg !9165
  %arrayidx64 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %60, i64 %idxprom63, !dbg !9165
  store %struct.KnifeLineHit* %arrayidx64, %struct.KnifeLineHit** %lhj, align 8, !dbg !9167
  %62 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhj, align 8, !dbg !9168
  %l65 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %62, i32 0, i32 3, !dbg !9170
  %63 = load float, float* %l65, align 8, !dbg !9170
  %cmp66 = fcmp oeq float %63, -1.000000e+00, !dbg !9171
  br i1 %cmp66, label %if.then68, label %if.else, !dbg !9172

if.then68:                                        ; preds = %while.body
  %64 = load i32, i32* %j, align 4, !dbg !9173
  %inc69 = add nsw i32 %64, 1, !dbg !9173
  store i32 %inc69, i32* %j, align 4, !dbg !9173
  br label %if.end92, !dbg !9175

if.else:                                          ; preds = %while.body
  %65 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lhi, align 8, !dbg !9176
  %l70 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %65, i32 0, i32 3, !dbg !9179
  %66 = load float, float* %l70, align 8, !dbg !9179
  %cmp71 = fcmp oeq float %66, -1.000000e+00, !dbg !9180
  br i1 %cmp71, label %if.then73, label %if.else78, !dbg !9181

if.then73:                                        ; preds = %if.else
  %67 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !9182
  %68 = load i32, i32* %i, align 4, !dbg !9184
  %idxprom74 = sext i32 %68 to i64, !dbg !9182
  %arrayidx75 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %67, i64 %idxprom74, !dbg !9182
  %69 = bitcast %struct.KnifeLineHit* %arrayidx75 to i8*, !dbg !9185
  %70 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !9186
  %71 = load i32, i32* %j, align 4, !dbg !9187
  %idxprom76 = sext i32 %71 to i64, !dbg !9186
  %arrayidx77 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %70, i64 %idxprom76, !dbg !9186
  %72 = bitcast %struct.KnifeLineHit* %arrayidx77 to i8*, !dbg !9185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %72, i64 72, i1 false), !dbg !9185
  br label %if.end90, !dbg !9188

if.else78:                                        ; preds = %if.else
  %73 = load i32, i32* %i, align 4, !dbg !9189
  %add79 = add nsw i32 %73, 1, !dbg !9192
  %74 = load i32, i32* %j, align 4, !dbg !9193
  %cmp80 = icmp ne i32 %add79, %74, !dbg !9194
  br i1 %cmp80, label %if.then82, label %if.end88, !dbg !9195

if.then82:                                        ; preds = %if.else78
  %75 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !9196
  %76 = load i32, i32* %i, align 4, !dbg !9197
  %add83 = add nsw i32 %76, 1, !dbg !9198
  %idxprom84 = sext i32 %add83 to i64, !dbg !9196
  %arrayidx85 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %75, i64 %idxprom84, !dbg !9196
  %77 = bitcast %struct.KnifeLineHit* %arrayidx85 to i8*, !dbg !9199
  %78 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %linehits, align 8, !dbg !9200
  %79 = load i32, i32* %j, align 4, !dbg !9201
  %idxprom86 = sext i32 %79 to i64, !dbg !9200
  %arrayidx87 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %78, i64 %idxprom86, !dbg !9200
  %80 = bitcast %struct.KnifeLineHit* %arrayidx87 to i8*, !dbg !9199
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %80, i64 72, i1 false), !dbg !9199
  br label %if.end88, !dbg !9199

if.end88:                                         ; preds = %if.then82, %if.else78
  %81 = load i32, i32* %i, align 4, !dbg !9202
  %inc89 = add nsw i32 %81, 1, !dbg !9202
  store i32 %inc89, i32* %i, align 4, !dbg !9202
  br label %if.end90

if.end90:                                         ; preds = %if.end88, %if.then73
  %82 = load i32, i32* %j, align 4, !dbg !9203
  %inc91 = add nsw i32 %82, 1, !dbg !9203
  store i32 %inc91, i32* %j, align 4, !dbg !9203
  br label %if.end92

if.end92:                                         ; preds = %if.end90, %if.then68
  br label %while.cond, !dbg !9157, !llvm.loop !9204

while.end:                                        ; preds = %while.cond
  %83 = load i32, i32* %i, align 4, !dbg !9206
  %add93 = add nsw i32 %83, 1, !dbg !9207
  %84 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9208
  %totlinehit94 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %84, i32 0, i32 17, !dbg !9209
  store i32 %add93, i32* %totlinehit94, align 8, !dbg !9210
  br label %return, !dbg !9211

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !9211
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_hit_to_facehits(%struct.KnifeTool_OpData* %kcd, %struct.GHash* %facehits, %struct.BMFace* %f, %struct.KnifeLineHit* %hit) #0 !dbg !9212 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %facehits.addr = alloca %struct.GHash*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %hit.addr = alloca %struct.KnifeLineHit*, align 8
  %lst = alloca %struct.ListBase*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !9215, metadata !DIExpression()), !dbg !9216
  store %struct.GHash* %facehits, %struct.GHash** %facehits.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHash** %facehits.addr, metadata !9217, metadata !DIExpression()), !dbg !9218
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !9219, metadata !DIExpression()), !dbg !9220
  store %struct.KnifeLineHit* %hit, %struct.KnifeLineHit** %hit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %hit.addr, metadata !9221, metadata !DIExpression()), !dbg !9222
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst, metadata !9223, metadata !DIExpression()), !dbg !9224
  %0 = load %struct.GHash*, %struct.GHash** %facehits.addr, align 8, !dbg !9225
  %1 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9226
  %2 = bitcast %struct.BMFace* %1 to i8*, !dbg !9226
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %0, i8* %2), !dbg !9227
  %3 = bitcast i8* %call to %struct.ListBase*, !dbg !9227
  store %struct.ListBase* %3, %struct.ListBase** %lst, align 8, !dbg !9224
  %4 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !9228
  %tobool = icmp ne %struct.ListBase* %4, null, !dbg !9228
  br i1 %tobool, label %if.end, label %if.then, !dbg !9230

if.then:                                          ; preds = %entry
  %5 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9231
  %call1 = call %struct.ListBase* @knife_empty_list(%struct.KnifeTool_OpData* %5), !dbg !9233
  store %struct.ListBase* %call1, %struct.ListBase** %lst, align 8, !dbg !9234
  %6 = load %struct.GHash*, %struct.GHash** %facehits.addr, align 8, !dbg !9235
  %7 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9236
  %8 = bitcast %struct.BMFace* %7 to i8*, !dbg !9236
  %9 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !9237
  %10 = bitcast %struct.ListBase* %9 to i8*, !dbg !9237
  call void @BLI_ghash_insert(%struct.GHash* %6, i8* %8, i8* %10), !dbg !9238
  br label %if.end, !dbg !9239

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9240
  %12 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !9241
  %13 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %hit.addr, align 8, !dbg !9242
  %14 = bitcast %struct.KnifeLineHit* %13 to i8*, !dbg !9242
  call void @knife_append_list_no_dup(%struct.KnifeTool_OpData* %11, %struct.ListBase* %12, i8* %14), !dbg !9243
  ret void, !dbg !9244
}

declare dso_local void @BLI_ghashIterator_init(%struct.GHashIterator*, %struct.GHash*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %ghi) #0 !dbg !9245 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !9249, metadata !DIExpression()), !dbg !9250
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !9251
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !9252
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !9252
  %tobool = icmp ne %struct.Entry* %1, null, !dbg !9253
  %lnot = xor i1 %tobool, true, !dbg !9253
  %lnot.ext = zext i1 %lnot to i32, !dbg !9253
  %conv = trunc i32 %lnot.ext to i8, !dbg !9253
  ret i8 %conv, !dbg !9254
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %ghi) #0 !dbg !9255 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !9258, metadata !DIExpression()), !dbg !9259
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !9260
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !9261
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !9261
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !9262
  %key = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 1, !dbg !9262
  %3 = load i8*, i8** %key, align 8, !dbg !9262
  ret i8* %3, !dbg !9263
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %ghi) #0 !dbg !9264 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !9265, metadata !DIExpression()), !dbg !9266
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !9267
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !9268
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !9268
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !9269
  %val = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 2, !dbg !9269
  %3 = load i8*, i8** %val, align 8, !dbg !9269
  ret i8* %3, !dbg !9270
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_cut_face(%struct.KnifeTool_OpData* %kcd, %struct.BMFace* %f, %struct.ListBase* %hits) #0 !dbg !9271 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %hits.addr = alloca %struct.ListBase*, align 8
  %r = alloca %struct.Ref*, align 8
  %lh = alloca %struct.KnifeLineHit*, align 8
  %prevlh = alloca %struct.KnifeLineHit*, align 8
  %n = alloca i32, align 4
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !9274, metadata !DIExpression()), !dbg !9275
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !9276, metadata !DIExpression()), !dbg !9277
  store %struct.ListBase* %hits, %struct.ListBase** %hits.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %hits.addr, metadata !9278, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.declare(metadata %struct.Ref** %r, metadata !9280, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %lh, metadata !9282, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %prevlh, metadata !9284, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9286, metadata !DIExpression()), !dbg !9287
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9288
  %1 = load %struct.ListBase*, %struct.ListBase** %hits.addr, align 8, !dbg !9289
  %call = call i32 @BLI_countlist(%struct.ListBase* %1), !dbg !9290
  store i32 %call, i32* %n, align 4, !dbg !9291
  %2 = load i32, i32* %n, align 4, !dbg !9292
  %cmp = icmp slt i32 %2, 2, !dbg !9294
  br i1 %cmp, label %if.then, label %if.end, !dbg !9295

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !9296

if.end:                                           ; preds = %entry
  store %struct.KnifeLineHit* null, %struct.KnifeLineHit** %prevlh, align 8, !dbg !9297
  %3 = load %struct.ListBase*, %struct.ListBase** %hits.addr, align 8, !dbg !9298
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !9300
  %4 = load i8*, i8** %first, align 8, !dbg !9300
  %5 = bitcast i8* %4 to %struct.Ref*, !dbg !9298
  store %struct.Ref* %5, %struct.Ref** %r, align 8, !dbg !9301
  br label %for.cond, !dbg !9302

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !9303
  %tobool = icmp ne %struct.Ref* %6, null, !dbg !9305
  br i1 %tobool, label %for.body, label %for.end, !dbg !9305

for.body:                                         ; preds = %for.cond
  %7 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !9306
  %ref = getelementptr inbounds %struct.Ref, %struct.Ref* %7, i32 0, i32 2, !dbg !9308
  %8 = load i8*, i8** %ref, align 8, !dbg !9308
  %9 = bitcast i8* %8 to %struct.KnifeLineHit*, !dbg !9309
  store %struct.KnifeLineHit* %9, %struct.KnifeLineHit** %lh, align 8, !dbg !9310
  %10 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %prevlh, align 8, !dbg !9311
  %tobool1 = icmp ne %struct.KnifeLineHit* %10, null, !dbg !9311
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !9313

if.then2:                                         ; preds = %for.body
  %11 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9314
  %12 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %prevlh, align 8, !dbg !9315
  %13 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !9316
  %14 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9317
  call void @knife_add_single_cut(%struct.KnifeTool_OpData* %11, %struct.KnifeLineHit* %12, %struct.KnifeLineHit* %13, %struct.BMFace* %14), !dbg !9318
  br label %if.end3, !dbg !9318

if.end3:                                          ; preds = %if.then2, %for.body
  %15 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh, align 8, !dbg !9319
  store %struct.KnifeLineHit* %15, %struct.KnifeLineHit** %prevlh, align 8, !dbg !9320
  br label %for.inc, !dbg !9321

for.inc:                                          ; preds = %if.end3
  %16 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !9322
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %16, i32 0, i32 0, !dbg !9323
  %17 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !9323
  store %struct.Ref* %17, %struct.Ref** %r, align 8, !dbg !9324
  br label %for.cond, !dbg !9325, !llvm.loop !9326

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !9328
}

declare dso_local void @BLI_ghashIterator_step(%struct.GHashIterator*) #2

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #2

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @linehit_compare(i8* %vlh1, i8* %vlh2) #0 !dbg !9329 {
entry:
  %retval = alloca i32, align 4
  %vlh1.addr = alloca i8*, align 8
  %vlh2.addr = alloca i8*, align 8
  %lh1 = alloca %struct.KnifeLineHit*, align 8
  %lh2 = alloca %struct.KnifeLineHit*, align 8
  store i8* %vlh1, i8** %vlh1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vlh1.addr, metadata !9334, metadata !DIExpression()), !dbg !9335
  store i8* %vlh2, i8** %vlh2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vlh2.addr, metadata !9336, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %lh1, metadata !9338, metadata !DIExpression()), !dbg !9341
  %0 = load i8*, i8** %vlh1.addr, align 8, !dbg !9342
  %1 = bitcast i8* %0 to %struct.KnifeLineHit*, !dbg !9342
  store %struct.KnifeLineHit* %1, %struct.KnifeLineHit** %lh1, align 8, !dbg !9341
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %lh2, metadata !9343, metadata !DIExpression()), !dbg !9344
  %2 = load i8*, i8** %vlh2.addr, align 8, !dbg !9345
  %3 = bitcast i8* %2 to %struct.KnifeLineHit*, !dbg !9345
  store %struct.KnifeLineHit* %3, %struct.KnifeLineHit** %lh2, align 8, !dbg !9344
  %4 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1, align 8, !dbg !9346
  %l = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %4, i32 0, i32 3, !dbg !9348
  %5 = load float, float* %l, align 8, !dbg !9348
  %6 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2, align 8, !dbg !9349
  %l1 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %6, i32 0, i32 3, !dbg !9350
  %7 = load float, float* %l1, align 8, !dbg !9350
  %cmp = fcmp olt float %5, %7, !dbg !9351
  br i1 %cmp, label %if.then, label %if.else, !dbg !9352

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9353
  br label %return, !dbg !9353

if.else:                                          ; preds = %entry
  %8 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1, align 8, !dbg !9354
  %l2 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %8, i32 0, i32 3, !dbg !9356
  %9 = load float, float* %l2, align 8, !dbg !9356
  %10 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2, align 8, !dbg !9357
  %l3 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %10, i32 0, i32 3, !dbg !9358
  %11 = load float, float* %l3, align 8, !dbg !9358
  %cmp4 = fcmp ogt float %9, %11, !dbg !9359
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !9360

if.then5:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !9361
  br label %return, !dbg !9361

if.else6:                                         ; preds = %if.else
  %12 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1, align 8, !dbg !9362
  %m = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %12, i32 0, i32 5, !dbg !9365
  %13 = load float, float* %m, align 8, !dbg !9365
  %14 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2, align 8, !dbg !9366
  %m7 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %14, i32 0, i32 5, !dbg !9367
  %15 = load float, float* %m7, align 8, !dbg !9367
  %cmp8 = fcmp olt float %13, %15, !dbg !9368
  br i1 %cmp8, label %if.then9, label %if.else10, !dbg !9369

if.then9:                                         ; preds = %if.else6
  store i32 -1, i32* %retval, align 4, !dbg !9370
  br label %return, !dbg !9370

if.else10:                                        ; preds = %if.else6
  %16 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1, align 8, !dbg !9371
  %m11 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %16, i32 0, i32 5, !dbg !9373
  %17 = load float, float* %m11, align 8, !dbg !9373
  %18 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2, align 8, !dbg !9374
  %m12 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %18, i32 0, i32 5, !dbg !9375
  %19 = load float, float* %m12, align 8, !dbg !9375
  %cmp13 = fcmp ogt float %17, %19, !dbg !9376
  br i1 %cmp13, label %if.then14, label %if.else15, !dbg !9377

if.then14:                                        ; preds = %if.else10
  store i32 1, i32* %retval, align 4, !dbg !9378
  br label %return, !dbg !9378

if.else15:                                        ; preds = %if.else10
  %20 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1, align 8, !dbg !9379
  %v = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %20, i32 0, i32 7, !dbg !9382
  %21 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !9382
  %22 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2, align 8, !dbg !9383
  %v16 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %22, i32 0, i32 7, !dbg !9384
  %23 = load %struct.KnifeVert*, %struct.KnifeVert** %v16, align 8, !dbg !9384
  %cmp17 = icmp ult %struct.KnifeVert* %21, %23, !dbg !9385
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !9386

if.then18:                                        ; preds = %if.else15
  store i32 -1, i32* %retval, align 4, !dbg !9387
  br label %return, !dbg !9387

if.else19:                                        ; preds = %if.else15
  %24 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1, align 8, !dbg !9388
  %v20 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %24, i32 0, i32 7, !dbg !9390
  %25 = load %struct.KnifeVert*, %struct.KnifeVert** %v20, align 8, !dbg !9390
  %26 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2, align 8, !dbg !9391
  %v21 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %26, i32 0, i32 7, !dbg !9392
  %27 = load %struct.KnifeVert*, %struct.KnifeVert** %v21, align 8, !dbg !9392
  %cmp22 = icmp ugt %struct.KnifeVert* %25, %27, !dbg !9393
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !9394

if.then23:                                        ; preds = %if.else19
  store i32 1, i32* %retval, align 4, !dbg !9395
  br label %return, !dbg !9395

if.else24:                                        ; preds = %if.else19
  store i32 0, i32* %retval, align 4, !dbg !9396
  br label %return, !dbg !9396

return:                                           ; preds = %if.else24, %if.then23, %if.then18, %if.then14, %if.then9, %if.then5, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !9397
  ret i32 %28, !dbg !9397
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_append_list_no_dup(%struct.KnifeTool_OpData* %kcd, %struct.ListBase* %lst, i8* %elem) #0 !dbg !9398 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %lst.addr = alloca %struct.ListBase*, align 8
  %elem.addr = alloca i8*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !9399, metadata !DIExpression()), !dbg !9400
  store %struct.ListBase* %lst, %struct.ListBase** %lst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst.addr, metadata !9401, metadata !DIExpression()), !dbg !9402
  store i8* %elem, i8** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %elem.addr, metadata !9403, metadata !DIExpression()), !dbg !9404
  %0 = load %struct.ListBase*, %struct.ListBase** %lst.addr, align 8, !dbg !9405
  %1 = load i8*, i8** %elem.addr, align 8, !dbg !9407
  %call = call %struct.Ref* @find_ref(%struct.ListBase* %0, i8* %1), !dbg !9408
  %tobool = icmp ne %struct.Ref* %call, null, !dbg !9408
  br i1 %tobool, label %if.end, label %if.then, !dbg !9409

if.then:                                          ; preds = %entry
  %2 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9410
  %3 = load %struct.ListBase*, %struct.ListBase** %lst.addr, align 8, !dbg !9411
  %4 = load i8*, i8** %elem.addr, align 8, !dbg !9412
  call void @knife_append_list(%struct.KnifeTool_OpData* %2, %struct.ListBase* %3, i8* %4), !dbg !9413
  br label %if.end, !dbg !9413

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9414
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Ref* @find_ref(%struct.ListBase* %lb, i8* %ref) #0 !dbg !9415 {
entry:
  %retval = alloca %struct.Ref*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %ref.addr = alloca i8*, align 8
  %ref1 = alloca %struct.Ref*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !9418, metadata !DIExpression()), !dbg !9419
  store i8* %ref, i8** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ref.addr, metadata !9420, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref1, metadata !9422, metadata !DIExpression()), !dbg !9423
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !9424
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !9426
  %1 = load i8*, i8** %first, align 8, !dbg !9426
  %2 = bitcast i8* %1 to %struct.Ref*, !dbg !9424
  store %struct.Ref* %2, %struct.Ref** %ref1, align 8, !dbg !9427
  br label %for.cond, !dbg !9428

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Ref*, %struct.Ref** %ref1, align 8, !dbg !9429
  %tobool = icmp ne %struct.Ref* %3, null, !dbg !9431
  br i1 %tobool, label %for.body, label %for.end, !dbg !9431

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Ref*, %struct.Ref** %ref1, align 8, !dbg !9432
  %ref2 = getelementptr inbounds %struct.Ref, %struct.Ref* %4, i32 0, i32 2, !dbg !9435
  %5 = load i8*, i8** %ref2, align 8, !dbg !9435
  %6 = load i8*, i8** %ref.addr, align 8, !dbg !9436
  %cmp = icmp eq i8* %5, %6, !dbg !9437
  br i1 %cmp, label %if.then, label %if.end, !dbg !9438

if.then:                                          ; preds = %for.body
  %7 = load %struct.Ref*, %struct.Ref** %ref1, align 8, !dbg !9439
  store %struct.Ref* %7, %struct.Ref** %retval, align 8, !dbg !9440
  br label %return, !dbg !9440

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9441

for.inc:                                          ; preds = %if.end
  %8 = load %struct.Ref*, %struct.Ref** %ref1, align 8, !dbg !9442
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %8, i32 0, i32 0, !dbg !9443
  %9 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !9443
  store %struct.Ref* %9, %struct.Ref** %ref1, align 8, !dbg !9444
  br label %for.cond, !dbg !9445, !llvm.loop !9446

for.end:                                          ; preds = %for.cond
  store %struct.Ref* null, %struct.Ref** %retval, align 8, !dbg !9448
  br label %return, !dbg !9448

return:                                           ; preds = %for.end, %if.then
  %10 = load %struct.Ref*, %struct.Ref** %retval, align 8, !dbg !9449
  ret %struct.Ref* %10, !dbg !9449
}

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @knife_add_single_cut(%struct.KnifeTool_OpData* %kcd, %struct.KnifeLineHit* %lh1, %struct.KnifeLineHit* %lh2, %struct.BMFace* %f) #0 !dbg !9450 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %lh1.addr = alloca %struct.KnifeLineHit*, align 8
  %lh2.addr = alloca %struct.KnifeLineHit*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %kfe2 = alloca %struct.KnifeEdge*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !9453, metadata !DIExpression()), !dbg !9454
  store %struct.KnifeLineHit* %lh1, %struct.KnifeLineHit** %lh1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %lh1.addr, metadata !9455, metadata !DIExpression()), !dbg !9456
  store %struct.KnifeLineHit* %lh2, %struct.KnifeLineHit** %lh2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeLineHit** %lh2.addr, metadata !9457, metadata !DIExpression()), !dbg !9458
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !9459, metadata !DIExpression()), !dbg !9460
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !9461, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe2, metadata !9463, metadata !DIExpression()), !dbg !9464
  %0 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9465
  %v = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %0, i32 0, i32 7, !dbg !9467
  %1 = load %struct.KnifeVert*, %struct.KnifeVert** %v, align 8, !dbg !9467
  %tobool = icmp ne %struct.KnifeVert* %1, null, !dbg !9465
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !9468

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9469
  %v1 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %2, i32 0, i32 7, !dbg !9470
  %3 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !9470
  %4 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9471
  %v2 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %4, i32 0, i32 7, !dbg !9472
  %5 = load %struct.KnifeVert*, %struct.KnifeVert** %v2, align 8, !dbg !9472
  %cmp = icmp eq %struct.KnifeVert* %3, %5, !dbg !9473
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9474

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %6 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9475
  %kfe3 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %6, i32 0, i32 6, !dbg !9476
  %7 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe3, align 8, !dbg !9476
  %tobool4 = icmp ne %struct.KnifeEdge* %7, null, !dbg !9475
  br i1 %tobool4, label %land.lhs.true5, label %if.end, !dbg !9477

land.lhs.true5:                                   ; preds = %lor.lhs.false
  %8 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9478
  %kfe6 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %8, i32 0, i32 6, !dbg !9479
  %9 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe6, align 8, !dbg !9479
  %10 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9480
  %kfe7 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %10, i32 0, i32 6, !dbg !9481
  %11 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe7, align 8, !dbg !9481
  %cmp8 = icmp eq %struct.KnifeEdge* %9, %11, !dbg !9482
  br i1 %cmp8, label %if.then, label %if.end, !dbg !9483

if.then:                                          ; preds = %land.lhs.true5, %land.lhs.true
  br label %if.end103, !dbg !9484

if.end:                                           ; preds = %land.lhs.true5, %lor.lhs.false
  %12 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9486
  %v9 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %12, i32 0, i32 7, !dbg !9488
  %13 = load %struct.KnifeVert*, %struct.KnifeVert** %v9, align 8, !dbg !9488
  %tobool10 = icmp ne %struct.KnifeVert* %13, null, !dbg !9486
  br i1 %tobool10, label %land.lhs.true11, label %if.end26, !dbg !9489

land.lhs.true11:                                  ; preds = %if.end
  %14 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9490
  %kfe12 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %14, i32 0, i32 6, !dbg !9491
  %15 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe12, align 8, !dbg !9491
  %tobool13 = icmp ne %struct.KnifeEdge* %15, null, !dbg !9490
  br i1 %tobool13, label %if.end26, label %land.lhs.true14, !dbg !9492

land.lhs.true14:                                  ; preds = %land.lhs.true11
  %16 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9493
  %v15 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %16, i32 0, i32 7, !dbg !9494
  %17 = load %struct.KnifeVert*, %struct.KnifeVert** %v15, align 8, !dbg !9494
  %tobool16 = icmp ne %struct.KnifeVert* %17, null, !dbg !9493
  br i1 %tobool16, label %land.lhs.true17, label %if.end26, !dbg !9495

land.lhs.true17:                                  ; preds = %land.lhs.true14
  %18 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9496
  %kfe18 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %18, i32 0, i32 6, !dbg !9497
  %19 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe18, align 8, !dbg !9497
  %tobool19 = icmp ne %struct.KnifeEdge* %19, null, !dbg !9496
  br i1 %tobool19, label %if.end26, label %if.then20, !dbg !9498

if.then20:                                        ; preds = %land.lhs.true17
  %20 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9499
  %v21 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %20, i32 0, i32 7, !dbg !9502
  %21 = load %struct.KnifeVert*, %struct.KnifeVert** %v21, align 8, !dbg !9502
  %22 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9503
  %v22 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %22, i32 0, i32 7, !dbg !9504
  %23 = load %struct.KnifeVert*, %struct.KnifeVert** %v22, align 8, !dbg !9504
  %24 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9505
  %call = call zeroext i8 @knife_verts_edge_in_face(%struct.KnifeVert* %21, %struct.KnifeVert* %23, %struct.BMFace* %24), !dbg !9506
  %tobool23 = icmp ne i8 %call, 0, !dbg !9506
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !9507

if.then24:                                        ; preds = %if.then20
  br label %if.end103, !dbg !9508

if.end25:                                         ; preds = %if.then20
  br label %if.end26, !dbg !9510

if.end26:                                         ; preds = %if.end25, %land.lhs.true17, %land.lhs.true14, %land.lhs.true11, %if.end
  %25 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9511
  %call27 = call %struct.KnifeEdge* @new_knife_edge(%struct.KnifeTool_OpData* %25), !dbg !9512
  store %struct.KnifeEdge* %call27, %struct.KnifeEdge** %kfe, align 8, !dbg !9513
  %26 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9514
  %draw = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %26, i32 0, i32 5, !dbg !9515
  store i8 1, i8* %draw, align 8, !dbg !9516
  %27 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9517
  %28 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9518
  %basef = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %28, i32 0, i32 2, !dbg !9519
  store %struct.BMFace* %27, %struct.BMFace** %basef, align 8, !dbg !9520
  %29 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9521
  %v28 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %29, i32 0, i32 7, !dbg !9523
  %30 = load %struct.KnifeVert*, %struct.KnifeVert** %v28, align 8, !dbg !9523
  %tobool29 = icmp ne %struct.KnifeVert* %30, null, !dbg !9521
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !9524

if.then30:                                        ; preds = %if.end26
  %31 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9525
  %v31 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %31, i32 0, i32 7, !dbg !9527
  %32 = load %struct.KnifeVert*, %struct.KnifeVert** %v31, align 8, !dbg !9527
  %33 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9528
  %v132 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %33, i32 0, i32 0, !dbg !9529
  store %struct.KnifeVert* %32, %struct.KnifeVert** %v132, align 8, !dbg !9530
  br label %if.end57, !dbg !9531

if.else:                                          ; preds = %if.end26
  %34 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9532
  %kfe33 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %34, i32 0, i32 6, !dbg !9534
  %35 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe33, align 8, !dbg !9534
  %tobool34 = icmp ne %struct.KnifeEdge* %35, null, !dbg !9532
  br i1 %tobool34, label %if.then35, label %if.else42, !dbg !9535

if.then35:                                        ; preds = %if.else
  %36 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9536
  %37 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9538
  %kfe36 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %37, i32 0, i32 6, !dbg !9539
  %38 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe36, align 8, !dbg !9539
  %39 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9540
  %hit = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %39, i32 0, i32 0, !dbg !9541
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %hit, i64 0, i64 0, !dbg !9540
  %40 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9542
  %cagehit = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %40, i32 0, i32 1, !dbg !9543
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %cagehit, i64 0, i64 0, !dbg !9542
  %call38 = call %struct.KnifeVert* @knife_split_edge(%struct.KnifeTool_OpData* %36, %struct.KnifeEdge* %38, float* %arraydecay, float* %arraydecay37, %struct.KnifeEdge** %kfe2), !dbg !9544
  %41 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9545
  %v139 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %41, i32 0, i32 0, !dbg !9546
  store %struct.KnifeVert* %call38, %struct.KnifeVert** %v139, align 8, !dbg !9547
  %42 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9548
  %v140 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %42, i32 0, i32 0, !dbg !9549
  %43 = load %struct.KnifeVert*, %struct.KnifeVert** %v140, align 8, !dbg !9549
  %44 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9550
  %v41 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %44, i32 0, i32 7, !dbg !9551
  store %struct.KnifeVert* %43, %struct.KnifeVert** %v41, align 8, !dbg !9552
  br label %if.end56, !dbg !9553

if.else42:                                        ; preds = %if.else
  %45 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9554
  %46 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9556
  %hit43 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %46, i32 0, i32 0, !dbg !9557
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %hit43, i64 0, i64 0, !dbg !9556
  %47 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9558
  %cagehit45 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %47, i32 0, i32 1, !dbg !9559
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %cagehit45, i64 0, i64 0, !dbg !9558
  %call47 = call %struct.KnifeVert* @new_knife_vert(%struct.KnifeTool_OpData* %45, float* %arraydecay44, float* %arraydecay46), !dbg !9560
  %48 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9561
  %v148 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %48, i32 0, i32 0, !dbg !9562
  store %struct.KnifeVert* %call47, %struct.KnifeVert** %v148, align 8, !dbg !9563
  %49 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9564
  %v149 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %49, i32 0, i32 0, !dbg !9565
  %50 = load %struct.KnifeVert*, %struct.KnifeVert** %v149, align 8, !dbg !9565
  %draw50 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %50, i32 0, i32 8, !dbg !9566
  store i8 1, i8* %draw50, align 2, !dbg !9567
  %51 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9568
  %v151 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %51, i32 0, i32 0, !dbg !9569
  %52 = load %struct.KnifeVert*, %struct.KnifeVert** %v151, align 8, !dbg !9569
  %is_face = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %52, i32 0, i32 6, !dbg !9570
  store i8 1, i8* %is_face, align 8, !dbg !9571
  %53 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9572
  %54 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9573
  %v152 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %54, i32 0, i32 0, !dbg !9574
  %55 = load %struct.KnifeVert*, %struct.KnifeVert** %v152, align 8, !dbg !9574
  %faces = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %55, i32 0, i32 2, !dbg !9575
  %56 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9576
  %f53 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %56, i32 0, i32 8, !dbg !9577
  %57 = load %struct.BMFace*, %struct.BMFace** %f53, align 8, !dbg !9577
  %58 = bitcast %struct.BMFace* %57 to i8*, !dbg !9576
  call void @knife_append_list(%struct.KnifeTool_OpData* %53, %struct.ListBase* %faces, i8* %58), !dbg !9578
  %59 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9579
  %v154 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %59, i32 0, i32 0, !dbg !9580
  %60 = load %struct.KnifeVert*, %struct.KnifeVert** %v154, align 8, !dbg !9580
  %61 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh1.addr, align 8, !dbg !9581
  %v55 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %61, i32 0, i32 7, !dbg !9582
  store %struct.KnifeVert* %60, %struct.KnifeVert** %v55, align 8, !dbg !9583
  br label %if.end56

if.end56:                                         ; preds = %if.else42, %if.then35
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then30
  %62 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9584
  %v58 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %62, i32 0, i32 7, !dbg !9586
  %63 = load %struct.KnifeVert*, %struct.KnifeVert** %v58, align 8, !dbg !9586
  %tobool59 = icmp ne %struct.KnifeVert* %63, null, !dbg !9584
  br i1 %tobool59, label %if.then60, label %if.else63, !dbg !9587

if.then60:                                        ; preds = %if.end57
  %64 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9588
  %v61 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %64, i32 0, i32 7, !dbg !9590
  %65 = load %struct.KnifeVert*, %struct.KnifeVert** %v61, align 8, !dbg !9590
  %66 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9591
  %v262 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %66, i32 0, i32 1, !dbg !9592
  store %struct.KnifeVert* %65, %struct.KnifeVert** %v262, align 8, !dbg !9593
  br label %if.end93, !dbg !9594

if.else63:                                        ; preds = %if.end57
  %67 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9595
  %kfe64 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %67, i32 0, i32 6, !dbg !9597
  %68 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe64, align 8, !dbg !9597
  %tobool65 = icmp ne %struct.KnifeEdge* %68, null, !dbg !9595
  br i1 %tobool65, label %if.then66, label %if.else76, !dbg !9598

if.then66:                                        ; preds = %if.else63
  %69 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9599
  %70 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9601
  %kfe67 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %70, i32 0, i32 6, !dbg !9602
  %71 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe67, align 8, !dbg !9602
  %72 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9603
  %hit68 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %72, i32 0, i32 0, !dbg !9604
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %hit68, i64 0, i64 0, !dbg !9603
  %73 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9605
  %cagehit70 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %73, i32 0, i32 1, !dbg !9606
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %cagehit70, i64 0, i64 0, !dbg !9605
  %call72 = call %struct.KnifeVert* @knife_split_edge(%struct.KnifeTool_OpData* %69, %struct.KnifeEdge* %71, float* %arraydecay69, float* %arraydecay71, %struct.KnifeEdge** %kfe2), !dbg !9607
  %74 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9608
  %v273 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %74, i32 0, i32 1, !dbg !9609
  store %struct.KnifeVert* %call72, %struct.KnifeVert** %v273, align 8, !dbg !9610
  %75 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9611
  %v274 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %75, i32 0, i32 1, !dbg !9612
  %76 = load %struct.KnifeVert*, %struct.KnifeVert** %v274, align 8, !dbg !9612
  %77 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9613
  %v75 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %77, i32 0, i32 7, !dbg !9614
  store %struct.KnifeVert* %76, %struct.KnifeVert** %v75, align 8, !dbg !9615
  br label %if.end92, !dbg !9616

if.else76:                                        ; preds = %if.else63
  %78 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9617
  %79 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9619
  %hit77 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %79, i32 0, i32 0, !dbg !9620
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %hit77, i64 0, i64 0, !dbg !9619
  %80 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9621
  %cagehit79 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %80, i32 0, i32 1, !dbg !9622
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %cagehit79, i64 0, i64 0, !dbg !9621
  %call81 = call %struct.KnifeVert* @new_knife_vert(%struct.KnifeTool_OpData* %78, float* %arraydecay78, float* %arraydecay80), !dbg !9623
  %81 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9624
  %v282 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %81, i32 0, i32 1, !dbg !9625
  store %struct.KnifeVert* %call81, %struct.KnifeVert** %v282, align 8, !dbg !9626
  %82 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9627
  %v283 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %82, i32 0, i32 1, !dbg !9628
  %83 = load %struct.KnifeVert*, %struct.KnifeVert** %v283, align 8, !dbg !9628
  %draw84 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %83, i32 0, i32 8, !dbg !9629
  store i8 1, i8* %draw84, align 2, !dbg !9630
  %84 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9631
  %v285 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %84, i32 0, i32 1, !dbg !9632
  %85 = load %struct.KnifeVert*, %struct.KnifeVert** %v285, align 8, !dbg !9632
  %is_face86 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %85, i32 0, i32 6, !dbg !9633
  store i8 1, i8* %is_face86, align 8, !dbg !9634
  %86 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9635
  %87 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9636
  %v287 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %87, i32 0, i32 1, !dbg !9637
  %88 = load %struct.KnifeVert*, %struct.KnifeVert** %v287, align 8, !dbg !9637
  %faces88 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %88, i32 0, i32 2, !dbg !9638
  %89 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9639
  %f89 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %89, i32 0, i32 8, !dbg !9640
  %90 = load %struct.BMFace*, %struct.BMFace** %f89, align 8, !dbg !9640
  %91 = bitcast %struct.BMFace* %90 to i8*, !dbg !9639
  call void @knife_append_list(%struct.KnifeTool_OpData* %86, %struct.ListBase* %faces88, i8* %91), !dbg !9641
  %92 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9642
  %v290 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %92, i32 0, i32 1, !dbg !9643
  %93 = load %struct.KnifeVert*, %struct.KnifeVert** %v290, align 8, !dbg !9643
  %94 = load %struct.KnifeLineHit*, %struct.KnifeLineHit** %lh2.addr, align 8, !dbg !9644
  %v91 = getelementptr inbounds %struct.KnifeLineHit, %struct.KnifeLineHit* %94, i32 0, i32 7, !dbg !9645
  store %struct.KnifeVert* %93, %struct.KnifeVert** %v91, align 8, !dbg !9646
  br label %if.end92

if.end92:                                         ; preds = %if.else76, %if.then66
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then60
  %95 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9647
  %96 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9648
  call void @knife_add_to_vert_edges(%struct.KnifeTool_OpData* %95, %struct.KnifeEdge* %96), !dbg !9649
  %97 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9650
  %basef94 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %97, i32 0, i32 2, !dbg !9652
  %98 = load %struct.BMFace*, %struct.BMFace** %basef94, align 8, !dbg !9652
  %tobool95 = icmp ne %struct.BMFace* %98, null, !dbg !9650
  br i1 %tobool95, label %land.lhs.true96, label %if.end103, !dbg !9653

land.lhs.true96:                                  ; preds = %if.end93
  %99 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9654
  %faces97 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %99, i32 0, i32 3, !dbg !9655
  %100 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9656
  %basef98 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %100, i32 0, i32 2, !dbg !9657
  %101 = load %struct.BMFace*, %struct.BMFace** %basef98, align 8, !dbg !9657
  %102 = bitcast %struct.BMFace* %101 to i8*, !dbg !9656
  %call99 = call %struct.Ref* @find_ref(%struct.ListBase* %faces97, i8* %102), !dbg !9658
  %tobool100 = icmp ne %struct.Ref* %call99, null, !dbg !9658
  br i1 %tobool100, label %if.end103, label %if.then101, !dbg !9659

if.then101:                                       ; preds = %land.lhs.true96
  %103 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9660
  %104 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9661
  %105 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !9662
  %basef102 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %105, i32 0, i32 2, !dbg !9663
  %106 = load %struct.BMFace*, %struct.BMFace** %basef102, align 8, !dbg !9663
  call void @knife_edge_append_face(%struct.KnifeTool_OpData* %103, %struct.KnifeEdge* %104, %struct.BMFace* %106), !dbg !9664
  br label %if.end103, !dbg !9664

if.end103:                                        ; preds = %if.then, %if.then24, %if.then101, %land.lhs.true96, %if.end93
  ret void, !dbg !9665
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @knife_verts_edge_in_face(%struct.KnifeVert* %v1, %struct.KnifeVert* %v2, %struct.BMFace* %f) #0 !dbg !9666 {
entry:
  %retval = alloca i8, align 1
  %v1.addr = alloca %struct.KnifeVert*, align 8
  %v2.addr = alloca %struct.KnifeVert*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %v1_inside = alloca i8, align 1
  %v2_inside = alloca i8, align 1
  %v1_inface = alloca i8, align 1
  %v2_inface = alloca i8, align 1
  %mid = alloca [3 x float], align 4
  store %struct.KnifeVert* %v1, %struct.KnifeVert** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %v1.addr, metadata !9669, metadata !DIExpression()), !dbg !9670
  store %struct.KnifeVert* %v2, %struct.KnifeVert** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %v2.addr, metadata !9671, metadata !DIExpression()), !dbg !9672
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !9673, metadata !DIExpression()), !dbg !9674
  call void @llvm.dbg.declare(metadata i8* %v1_inside, metadata !9675, metadata !DIExpression()), !dbg !9676
  call void @llvm.dbg.declare(metadata i8* %v2_inside, metadata !9677, metadata !DIExpression()), !dbg !9678
  call void @llvm.dbg.declare(metadata i8* %v1_inface, metadata !9679, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.declare(metadata i8* %v2_inface, metadata !9681, metadata !DIExpression()), !dbg !9682
  %0 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9683
  %tobool = icmp ne %struct.BMFace* %0, null, !dbg !9683
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9685

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.KnifeVert*, %struct.KnifeVert** %v1.addr, align 8, !dbg !9686
  %tobool1 = icmp ne %struct.KnifeVert* %1, null, !dbg !9686
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !9687

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load %struct.KnifeVert*, %struct.KnifeVert** %v2.addr, align 8, !dbg !9688
  %tobool3 = icmp ne %struct.KnifeVert* %2, null, !dbg !9688
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9689

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !9690
  br label %return, !dbg !9690

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load %struct.KnifeVert*, %struct.KnifeVert** %v1.addr, align 8, !dbg !9691
  %v = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %3, i32 0, i32 0, !dbg !9692
  %4 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !9692
  %tobool4 = icmp ne %struct.BMVert* %4, null, !dbg !9691
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !9691

cond.true:                                        ; preds = %if.end
  %5 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9693
  %6 = load %struct.KnifeVert*, %struct.KnifeVert** %v1.addr, align 8, !dbg !9694
  %v5 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %6, i32 0, i32 0, !dbg !9695
  %7 = load %struct.BMVert*, %struct.BMVert** %v5, align 8, !dbg !9695
  %call = call zeroext i8 @BM_vert_in_face(%struct.BMFace* %5, %struct.BMVert* %7), !dbg !9696
  %conv = zext i8 %call to i32, !dbg !9696
  br label %cond.end, !dbg !9691

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !9691

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !9691
  %conv6 = trunc i32 %cond to i8, !dbg !9691
  store i8 %conv6, i8* %v1_inface, align 1, !dbg !9697
  %8 = load %struct.KnifeVert*, %struct.KnifeVert** %v2.addr, align 8, !dbg !9698
  %v7 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %8, i32 0, i32 0, !dbg !9699
  %9 = load %struct.BMVert*, %struct.BMVert** %v7, align 8, !dbg !9699
  %tobool8 = icmp ne %struct.BMVert* %9, null, !dbg !9698
  br i1 %tobool8, label %cond.true9, label %cond.false13, !dbg !9698

cond.true9:                                       ; preds = %cond.end
  %10 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9700
  %11 = load %struct.KnifeVert*, %struct.KnifeVert** %v2.addr, align 8, !dbg !9701
  %v10 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %11, i32 0, i32 0, !dbg !9702
  %12 = load %struct.BMVert*, %struct.BMVert** %v10, align 8, !dbg !9702
  %call11 = call zeroext i8 @BM_vert_in_face(%struct.BMFace* %10, %struct.BMVert* %12), !dbg !9703
  %conv12 = zext i8 %call11 to i32, !dbg !9703
  br label %cond.end14, !dbg !9698

cond.false13:                                     ; preds = %cond.end
  br label %cond.end14, !dbg !9698

cond.end14:                                       ; preds = %cond.false13, %cond.true9
  %cond15 = phi i32 [ %conv12, %cond.true9 ], [ 0, %cond.false13 ], !dbg !9698
  %conv16 = trunc i32 %cond15 to i8, !dbg !9698
  store i8 %conv16, i8* %v2_inface, align 1, !dbg !9704
  %13 = load i8, i8* %v1_inface, align 1, !dbg !9705
  %conv17 = zext i8 %13 to i32, !dbg !9705
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !9705
  br i1 %tobool18, label %cond.true19, label %cond.false20, !dbg !9705

cond.true19:                                      ; preds = %cond.end14
  br label %cond.end23, !dbg !9705

cond.false20:                                     ; preds = %cond.end14
  %14 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9706
  %15 = load %struct.KnifeVert*, %struct.KnifeVert** %v1.addr, align 8, !dbg !9707
  %co = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %15, i32 0, i32 3, !dbg !9708
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9707
  %call21 = call zeroext i8 @BM_face_point_inside_test(%struct.BMFace* %14, float* %arraydecay), !dbg !9709
  %conv22 = zext i8 %call21 to i32, !dbg !9709
  br label %cond.end23, !dbg !9705

cond.end23:                                       ; preds = %cond.false20, %cond.true19
  %cond24 = phi i32 [ 0, %cond.true19 ], [ %conv22, %cond.false20 ], !dbg !9705
  %conv25 = trunc i32 %cond24 to i8, !dbg !9705
  store i8 %conv25, i8* %v1_inside, align 1, !dbg !9710
  %16 = load i8, i8* %v2_inface, align 1, !dbg !9711
  %conv26 = zext i8 %16 to i32, !dbg !9711
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !9711
  br i1 %tobool27, label %cond.true28, label %cond.false29, !dbg !9711

cond.true28:                                      ; preds = %cond.end23
  br label %cond.end34, !dbg !9711

cond.false29:                                     ; preds = %cond.end23
  %17 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9712
  %18 = load %struct.KnifeVert*, %struct.KnifeVert** %v2.addr, align 8, !dbg !9713
  %co30 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %18, i32 0, i32 3, !dbg !9714
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %co30, i64 0, i64 0, !dbg !9713
  %call32 = call zeroext i8 @BM_face_point_inside_test(%struct.BMFace* %17, float* %arraydecay31), !dbg !9715
  %conv33 = zext i8 %call32 to i32, !dbg !9715
  br label %cond.end34, !dbg !9711

cond.end34:                                       ; preds = %cond.false29, %cond.true28
  %cond35 = phi i32 [ 0, %cond.true28 ], [ %conv33, %cond.false29 ], !dbg !9711
  %conv36 = trunc i32 %cond35 to i8, !dbg !9711
  store i8 %conv36, i8* %v2_inside, align 1, !dbg !9716
  %19 = load i8, i8* %v1_inface, align 1, !dbg !9717
  %conv37 = zext i8 %19 to i32, !dbg !9717
  %tobool38 = icmp ne i32 %conv37, 0, !dbg !9717
  br i1 %tobool38, label %land.lhs.true, label %lor.lhs.false41, !dbg !9719

land.lhs.true:                                    ; preds = %cond.end34
  %20 = load i8, i8* %v2_inside, align 1, !dbg !9720
  %conv39 = zext i8 %20 to i32, !dbg !9720
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !9720
  br i1 %tobool40, label %if.then53, label %lor.lhs.false41, !dbg !9721

lor.lhs.false41:                                  ; preds = %land.lhs.true, %cond.end34
  %21 = load i8, i8* %v2_inface, align 1, !dbg !9722
  %conv42 = zext i8 %21 to i32, !dbg !9722
  %tobool43 = icmp ne i32 %conv42, 0, !dbg !9722
  br i1 %tobool43, label %land.lhs.true44, label %lor.lhs.false47, !dbg !9723

land.lhs.true44:                                  ; preds = %lor.lhs.false41
  %22 = load i8, i8* %v1_inside, align 1, !dbg !9724
  %conv45 = zext i8 %22 to i32, !dbg !9724
  %tobool46 = icmp ne i32 %conv45, 0, !dbg !9724
  br i1 %tobool46, label %if.then53, label %lor.lhs.false47, !dbg !9725

lor.lhs.false47:                                  ; preds = %land.lhs.true44, %lor.lhs.false41
  %23 = load i8, i8* %v1_inside, align 1, !dbg !9726
  %conv48 = zext i8 %23 to i32, !dbg !9726
  %tobool49 = icmp ne i32 %conv48, 0, !dbg !9726
  br i1 %tobool49, label %land.lhs.true50, label %if.end54, !dbg !9727

land.lhs.true50:                                  ; preds = %lor.lhs.false47
  %24 = load i8, i8* %v2_inside, align 1, !dbg !9728
  %conv51 = zext i8 %24 to i32, !dbg !9728
  %tobool52 = icmp ne i32 %conv51, 0, !dbg !9728
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !9729

if.then53:                                        ; preds = %land.lhs.true50, %land.lhs.true44, %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !9730
  br label %return, !dbg !9730

if.end54:                                         ; preds = %land.lhs.true50, %lor.lhs.false47
  %25 = load i8, i8* %v1_inface, align 1, !dbg !9732
  %conv55 = zext i8 %25 to i32, !dbg !9732
  %tobool56 = icmp ne i32 %conv55, 0, !dbg !9732
  br i1 %tobool56, label %land.lhs.true57, label %if.end68, !dbg !9734

land.lhs.true57:                                  ; preds = %if.end54
  %26 = load i8, i8* %v2_inface, align 1, !dbg !9735
  %conv58 = zext i8 %26 to i32, !dbg !9735
  %tobool59 = icmp ne i32 %conv58, 0, !dbg !9735
  br i1 %tobool59, label %if.then60, label %if.end68, !dbg !9736

if.then60:                                        ; preds = %land.lhs.true57
  call void @llvm.dbg.declare(metadata [3 x float]* %mid, metadata !9737, metadata !DIExpression()), !dbg !9739
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %mid, i64 0, i64 0, !dbg !9740
  %27 = load %struct.KnifeVert*, %struct.KnifeVert** %v1.addr, align 8, !dbg !9741
  %co62 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %27, i32 0, i32 3, !dbg !9742
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %co62, i64 0, i64 0, !dbg !9741
  %28 = load %struct.KnifeVert*, %struct.KnifeVert** %v2.addr, align 8, !dbg !9743
  %co64 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %28, i32 0, i32 3, !dbg !9744
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %co64, i64 0, i64 0, !dbg !9743
  call void @mid_v3_v3v3(float* %arraydecay61, float* %arraydecay63, float* %arraydecay65), !dbg !9745
  %29 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9746
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %mid, i64 0, i64 0, !dbg !9747
  %call67 = call zeroext i8 @BM_face_point_inside_test(%struct.BMFace* %29, float* %arraydecay66), !dbg !9748
  store i8 %call67, i8* %retval, align 1, !dbg !9749
  br label %return, !dbg !9749

if.end68:                                         ; preds = %land.lhs.true57, %if.end54
  store i8 0, i8* %retval, align 1, !dbg !9750
  br label %return, !dbg !9750

return:                                           ; preds = %if.end68, %if.then60, %if.then53, %if.then
  %30 = load i8, i8* %retval, align 1, !dbg !9751
  ret i8 %30, !dbg !9751
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.KnifeVert* @knife_split_edge(%struct.KnifeTool_OpData* %kcd, %struct.KnifeEdge* %kfe, float* %co, float* %cageco, %struct.KnifeEdge** %r_kfe) #0 !dbg !9752 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %kfe.addr = alloca %struct.KnifeEdge*, align 8
  %co.addr = alloca float*, align 8
  %cageco.addr = alloca float*, align 8
  %r_kfe.addr = alloca %struct.KnifeEdge**, align 8
  %newkfe = alloca %struct.KnifeEdge*, align 8
  %ref = alloca %struct.Ref*, align 8
  %f = alloca %struct.BMFace*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !9756, metadata !DIExpression()), !dbg !9757
  store %struct.KnifeEdge* %kfe, %struct.KnifeEdge** %kfe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe.addr, metadata !9758, metadata !DIExpression()), !dbg !9759
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !9760, metadata !DIExpression()), !dbg !9761
  store float* %cageco, float** %cageco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cageco.addr, metadata !9762, metadata !DIExpression()), !dbg !9763
  store %struct.KnifeEdge** %r_kfe, %struct.KnifeEdge*** %r_kfe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge*** %r_kfe.addr, metadata !9764, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %newkfe, metadata !9766, metadata !DIExpression()), !dbg !9767
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9768
  %call = call %struct.KnifeEdge* @new_knife_edge(%struct.KnifeTool_OpData* %0), !dbg !9769
  store %struct.KnifeEdge* %call, %struct.KnifeEdge** %newkfe, align 8, !dbg !9767
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref, metadata !9770, metadata !DIExpression()), !dbg !9771
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !9772, metadata !DIExpression()), !dbg !9773
  %1 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9774
  %v1 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %1, i32 0, i32 0, !dbg !9775
  %2 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !9775
  %3 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9776
  %v11 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %3, i32 0, i32 0, !dbg !9777
  store %struct.KnifeVert* %2, %struct.KnifeVert** %v11, align 8, !dbg !9778
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9779
  %5 = load float*, float** %co.addr, align 8, !dbg !9780
  %6 = load float*, float** %cageco.addr, align 8, !dbg !9781
  %call2 = call %struct.KnifeVert* @new_knife_vert(%struct.KnifeTool_OpData* %4, float* %5, float* %6), !dbg !9782
  %7 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9783
  %v2 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %7, i32 0, i32 1, !dbg !9784
  store %struct.KnifeVert* %call2, %struct.KnifeVert** %v2, align 8, !dbg !9785
  %8 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9786
  %v23 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %8, i32 0, i32 1, !dbg !9787
  %9 = load %struct.KnifeVert*, %struct.KnifeVert** %v23, align 8, !dbg !9787
  %draw = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %9, i32 0, i32 8, !dbg !9788
  store i8 1, i8* %draw, align 2, !dbg !9789
  %10 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9790
  %e = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %10, i32 0, i32 4, !dbg !9792
  %11 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !9792
  %tobool = icmp ne %struct.BMEdge* %11, null, !dbg !9790
  br i1 %tobool, label %if.then, label %if.else, !dbg !9793

if.then:                                          ; preds = %entry
  %12 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9794
  %13 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9796
  %v24 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %13, i32 0, i32 1, !dbg !9797
  %14 = load %struct.KnifeVert*, %struct.KnifeVert** %v24, align 8, !dbg !9797
  %15 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9798
  %e5 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %15, i32 0, i32 4, !dbg !9799
  %16 = load %struct.BMEdge*, %struct.BMEdge** %e5, align 8, !dbg !9799
  call void @knife_add_edge_faces_to_vert(%struct.KnifeTool_OpData* %12, %struct.KnifeVert* %14, %struct.BMEdge* %16), !dbg !9800
  br label %if.end14, !dbg !9801

if.else:                                          ; preds = %entry
  %17 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9802
  %v16 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %17, i32 0, i32 0, !dbg !9804
  %18 = load %struct.KnifeVert*, %struct.KnifeVert** %v16, align 8, !dbg !9804
  %faces = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %18, i32 0, i32 2, !dbg !9805
  %19 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9806
  %v27 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %19, i32 0, i32 1, !dbg !9807
  %20 = load %struct.KnifeVert*, %struct.KnifeVert** %v27, align 8, !dbg !9807
  %faces8 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %20, i32 0, i32 2, !dbg !9808
  %call9 = call %struct.BMFace* @knife_find_common_face(%struct.ListBase* %faces, %struct.ListBase* %faces8), !dbg !9809
  store %struct.BMFace* %call9, %struct.BMFace** %f, align 8, !dbg !9810
  %21 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9811
  %tobool10 = icmp ne %struct.BMFace* %21, null, !dbg !9811
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !9813

if.then11:                                        ; preds = %if.else
  %22 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9814
  %23 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9815
  %v212 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %23, i32 0, i32 1, !dbg !9816
  %24 = load %struct.KnifeVert*, %struct.KnifeVert** %v212, align 8, !dbg !9816
  %faces13 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %24, i32 0, i32 2, !dbg !9817
  %25 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9818
  %26 = bitcast %struct.BMFace* %25 to i8*, !dbg !9818
  call void @knife_append_list(%struct.KnifeTool_OpData* %22, %struct.ListBase* %faces13, i8* %26), !dbg !9819
  br label %if.end, !dbg !9819

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  %27 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9820
  %basef = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %27, i32 0, i32 2, !dbg !9821
  %28 = load %struct.BMFace*, %struct.BMFace** %basef, align 8, !dbg !9821
  %29 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9822
  %basef15 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %29, i32 0, i32 2, !dbg !9823
  store %struct.BMFace* %28, %struct.BMFace** %basef15, align 8, !dbg !9824
  %30 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9825
  %v116 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %30, i32 0, i32 0, !dbg !9826
  %31 = load %struct.KnifeVert*, %struct.KnifeVert** %v116, align 8, !dbg !9826
  %edges = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %31, i32 0, i32 1, !dbg !9827
  %32 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9828
  %33 = bitcast %struct.KnifeEdge* %32 to i8*, !dbg !9828
  %call17 = call %struct.Ref* @find_ref(%struct.ListBase* %edges, i8* %33), !dbg !9829
  store %struct.Ref* %call17, %struct.Ref** %ref, align 8, !dbg !9830
  %34 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9831
  %v118 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %34, i32 0, i32 0, !dbg !9832
  %35 = load %struct.KnifeVert*, %struct.KnifeVert** %v118, align 8, !dbg !9832
  %edges19 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %35, i32 0, i32 1, !dbg !9833
  %36 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !9834
  %37 = bitcast %struct.Ref* %36 to i8*, !dbg !9834
  call void @BLI_remlink(%struct.ListBase* %edges19, i8* %37), !dbg !9835
  %38 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9836
  %v220 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %38, i32 0, i32 1, !dbg !9837
  %39 = load %struct.KnifeVert*, %struct.KnifeVert** %v220, align 8, !dbg !9837
  %40 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9838
  %v121 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %40, i32 0, i32 0, !dbg !9839
  store %struct.KnifeVert* %39, %struct.KnifeVert** %v121, align 8, !dbg !9840
  %41 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9841
  %v122 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %41, i32 0, i32 0, !dbg !9842
  %42 = load %struct.KnifeVert*, %struct.KnifeVert** %v122, align 8, !dbg !9842
  %edges23 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %42, i32 0, i32 1, !dbg !9843
  %43 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !9844
  %44 = bitcast %struct.Ref* %43 to i8*, !dbg !9844
  call void @BLI_addtail(%struct.ListBase* %edges23, i8* %44), !dbg !9845
  %45 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9846
  %faces24 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %45, i32 0, i32 3, !dbg !9848
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %faces24, i32 0, i32 0, !dbg !9849
  %46 = load i8*, i8** %first, align 8, !dbg !9849
  %47 = bitcast i8* %46 to %struct.Ref*, !dbg !9846
  store %struct.Ref* %47, %struct.Ref** %ref, align 8, !dbg !9850
  br label %for.cond, !dbg !9851

for.cond:                                         ; preds = %for.inc, %if.end14
  %48 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !9852
  %tobool25 = icmp ne %struct.Ref* %48, null, !dbg !9854
  br i1 %tobool25, label %for.body, label %for.end, !dbg !9854

for.body:                                         ; preds = %for.cond
  %49 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9855
  %50 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9856
  %51 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !9857
  %ref26 = getelementptr inbounds %struct.Ref, %struct.Ref* %51, i32 0, i32 2, !dbg !9858
  %52 = load i8*, i8** %ref26, align 8, !dbg !9858
  %53 = bitcast i8* %52 to %struct.BMFace*, !dbg !9857
  call void @knife_edge_append_face(%struct.KnifeTool_OpData* %49, %struct.KnifeEdge* %50, %struct.BMFace* %53), !dbg !9859
  br label %for.inc, !dbg !9859

for.inc:                                          ; preds = %for.body
  %54 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !9860
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %54, i32 0, i32 0, !dbg !9861
  %55 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !9861
  store %struct.Ref* %55, %struct.Ref** %ref, align 8, !dbg !9862
  br label %for.cond, !dbg !9863, !llvm.loop !9864

for.end:                                          ; preds = %for.cond
  %56 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9866
  %57 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9867
  call void @knife_add_to_vert_edges(%struct.KnifeTool_OpData* %56, %struct.KnifeEdge* %57), !dbg !9868
  %58 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9869
  %draw27 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %58, i32 0, i32 5, !dbg !9870
  %59 = load i8, i8* %draw27, align 8, !dbg !9870
  %60 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9871
  %draw28 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %60, i32 0, i32 5, !dbg !9872
  store i8 %59, i8* %draw28, align 8, !dbg !9873
  %61 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9874
  %e29 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %61, i32 0, i32 4, !dbg !9875
  %62 = load %struct.BMEdge*, %struct.BMEdge** %e29, align 8, !dbg !9875
  %63 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9876
  %e30 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %63, i32 0, i32 4, !dbg !9877
  store %struct.BMEdge* %62, %struct.BMEdge** %e30, align 8, !dbg !9878
  %64 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9879
  %65 = load %struct.KnifeEdge**, %struct.KnifeEdge*** %r_kfe.addr, align 8, !dbg !9880
  store %struct.KnifeEdge* %64, %struct.KnifeEdge** %65, align 8, !dbg !9881
  %66 = load %struct.KnifeEdge*, %struct.KnifeEdge** %newkfe, align 8, !dbg !9882
  %v231 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %66, i32 0, i32 1, !dbg !9883
  %67 = load %struct.KnifeVert*, %struct.KnifeVert** %v231, align 8, !dbg !9883
  ret %struct.KnifeVert* %67, !dbg !9884
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_edge_append_face(%struct.KnifeTool_OpData* %kcd, %struct.KnifeEdge* %kfe, %struct.BMFace* %f) #0 !dbg !9885 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %kfe.addr = alloca %struct.KnifeEdge*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !9888, metadata !DIExpression()), !dbg !9889
  store %struct.KnifeEdge* %kfe, %struct.KnifeEdge** %kfe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe.addr, metadata !9890, metadata !DIExpression()), !dbg !9891
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !9892, metadata !DIExpression()), !dbg !9893
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9894
  %1 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9895
  %2 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9896
  %call = call %struct.ListBase* @knife_get_face_kedges(%struct.KnifeTool_OpData* %1, %struct.BMFace* %2), !dbg !9897
  %3 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9898
  %4 = bitcast %struct.KnifeEdge* %3 to i8*, !dbg !9898
  call void @knife_append_list(%struct.KnifeTool_OpData* %0, %struct.ListBase* %call, i8* %4), !dbg !9899
  %5 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9900
  %6 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !9901
  %faces = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %6, i32 0, i32 3, !dbg !9902
  %7 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !9903
  %8 = bitcast %struct.BMFace* %7 to i8*, !dbg !9903
  call void @knife_append_list(%struct.KnifeTool_OpData* %5, %struct.ListBase* %faces, i8* %8), !dbg !9904
  ret void, !dbg !9905
}

declare dso_local zeroext i8 @BM_vert_in_face(%struct.BMFace*, %struct.BMVert*) #2

declare dso_local zeroext i8 @BM_face_point_inside_test(%struct.BMFace*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @knife_add_edge_faces_to_vert(%struct.KnifeTool_OpData* %kcd, %struct.KnifeVert* %kfv, %struct.BMEdge* %e) #0 !dbg !9906 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %kfv.addr = alloca %struct.KnifeVert*, align 8
  %e.addr = alloca %struct.BMEdge*, align 8
  %bmiter = alloca %struct.BMIter, align 8
  %f = alloca %struct.BMFace*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !9909, metadata !DIExpression()), !dbg !9910
  store %struct.KnifeVert* %kfv, %struct.KnifeVert** %kfv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv.addr, metadata !9911, metadata !DIExpression()), !dbg !9912
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !9913, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.declare(metadata %struct.BMIter* %bmiter, metadata !9915, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !9917, metadata !DIExpression()), !dbg !9918
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !9919
  %1 = bitcast %struct.BMEdge* %0 to i8*, !dbg !9919
  %call = call i8* @BM_iter_new(%struct.BMIter* %bmiter, %struct.BMesh* null, i8 zeroext 8, i8* %1), !dbg !9919
  %2 = bitcast i8* %call to %struct.BMFace*, !dbg !9919
  store %struct.BMFace* %2, %struct.BMFace** %f, align 8, !dbg !9919
  br label %for.cond, !dbg !9919

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9921
  %tobool = icmp ne %struct.BMFace* %3, null, !dbg !9919
  br i1 %tobool, label %for.body, label %for.end, !dbg !9919

for.body:                                         ; preds = %for.cond
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9923
  %5 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv.addr, align 8, !dbg !9925
  %faces = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %5, i32 0, i32 2, !dbg !9926
  %6 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9927
  %7 = bitcast %struct.BMFace* %6 to i8*, !dbg !9927
  call void @knife_append_list(%struct.KnifeTool_OpData* %4, %struct.ListBase* %faces, i8* %7), !dbg !9928
  br label %for.inc, !dbg !9929

for.inc:                                          ; preds = %for.body
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %bmiter), !dbg !9921
  %8 = bitcast i8* %call1 to %struct.BMFace*, !dbg !9921
  store %struct.BMFace* %8, %struct.BMFace** %f, align 8, !dbg !9921
  br label %for.cond, !dbg !9921, !llvm.loop !9930

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9932
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMFace* @knife_find_common_face(%struct.ListBase* %faces1, %struct.ListBase* %faces2) #0 !dbg !9933 {
entry:
  %retval = alloca %struct.BMFace*, align 8
  %faces1.addr = alloca %struct.ListBase*, align 8
  %faces2.addr = alloca %struct.ListBase*, align 8
  %ref1 = alloca %struct.Ref*, align 8
  %ref2 = alloca %struct.Ref*, align 8
  store %struct.ListBase* %faces1, %struct.ListBase** %faces1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %faces1.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  store %struct.ListBase* %faces2, %struct.ListBase** %faces2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %faces2.addr, metadata !9938, metadata !DIExpression()), !dbg !9939
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref1, metadata !9940, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref2, metadata !9942, metadata !DIExpression()), !dbg !9943
  %0 = load %struct.ListBase*, %struct.ListBase** %faces1.addr, align 8, !dbg !9944
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !9946
  %1 = load i8*, i8** %first, align 8, !dbg !9946
  %2 = bitcast i8* %1 to %struct.Ref*, !dbg !9944
  store %struct.Ref* %2, %struct.Ref** %ref1, align 8, !dbg !9947
  br label %for.cond, !dbg !9948

for.cond:                                         ; preds = %for.inc7, %entry
  %3 = load %struct.Ref*, %struct.Ref** %ref1, align 8, !dbg !9949
  %tobool = icmp ne %struct.Ref* %3, null, !dbg !9951
  br i1 %tobool, label %for.body, label %for.end9, !dbg !9951

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ListBase*, %struct.ListBase** %faces2.addr, align 8, !dbg !9952
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 0, !dbg !9955
  %5 = load i8*, i8** %first1, align 8, !dbg !9955
  %6 = bitcast i8* %5 to %struct.Ref*, !dbg !9952
  store %struct.Ref* %6, %struct.Ref** %ref2, align 8, !dbg !9956
  br label %for.cond2, !dbg !9957

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load %struct.Ref*, %struct.Ref** %ref2, align 8, !dbg !9958
  %tobool3 = icmp ne %struct.Ref* %7, null, !dbg !9960
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !9960

for.body4:                                        ; preds = %for.cond2
  %8 = load %struct.Ref*, %struct.Ref** %ref1, align 8, !dbg !9961
  %ref = getelementptr inbounds %struct.Ref, %struct.Ref* %8, i32 0, i32 2, !dbg !9964
  %9 = load i8*, i8** %ref, align 8, !dbg !9964
  %10 = load %struct.Ref*, %struct.Ref** %ref2, align 8, !dbg !9965
  %ref5 = getelementptr inbounds %struct.Ref, %struct.Ref* %10, i32 0, i32 2, !dbg !9966
  %11 = load i8*, i8** %ref5, align 8, !dbg !9966
  %cmp = icmp eq i8* %9, %11, !dbg !9967
  br i1 %cmp, label %if.then, label %if.end, !dbg !9968

if.then:                                          ; preds = %for.body4
  %12 = load %struct.Ref*, %struct.Ref** %ref1, align 8, !dbg !9969
  %ref6 = getelementptr inbounds %struct.Ref, %struct.Ref* %12, i32 0, i32 2, !dbg !9970
  %13 = load i8*, i8** %ref6, align 8, !dbg !9970
  %14 = bitcast i8* %13 to %struct.BMFace*, !dbg !9971
  store %struct.BMFace* %14, %struct.BMFace** %retval, align 8, !dbg !9972
  br label %return, !dbg !9972

if.end:                                           ; preds = %for.body4
  br label %for.inc, !dbg !9973

for.inc:                                          ; preds = %if.end
  %15 = load %struct.Ref*, %struct.Ref** %ref2, align 8, !dbg !9974
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %15, i32 0, i32 0, !dbg !9975
  %16 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !9975
  store %struct.Ref* %16, %struct.Ref** %ref2, align 8, !dbg !9976
  br label %for.cond2, !dbg !9977, !llvm.loop !9978

for.end:                                          ; preds = %for.cond2
  br label %for.inc7, !dbg !9980

for.inc7:                                         ; preds = %for.end
  %17 = load %struct.Ref*, %struct.Ref** %ref1, align 8, !dbg !9981
  %next8 = getelementptr inbounds %struct.Ref, %struct.Ref* %17, i32 0, i32 0, !dbg !9982
  %18 = load %struct.Ref*, %struct.Ref** %next8, align 8, !dbg !9982
  store %struct.Ref* %18, %struct.Ref** %ref1, align 8, !dbg !9983
  br label %for.cond, !dbg !9984, !llvm.loop !9985

for.end9:                                         ; preds = %for.cond
  store %struct.BMFace* null, %struct.BMFace** %retval, align 8, !dbg !9987
  br label %return, !dbg !9987

return:                                           ; preds = %for.end9, %if.then
  %19 = load %struct.BMFace*, %struct.BMFace** %retval, align 8, !dbg !9988
  ret %struct.BMFace* %19, !dbg !9988
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @knife_make_cuts(%struct.KnifeTool_OpData* %kcd) #0 !dbg !9989 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %kfv = alloca %struct.KnifeVert*, align 8
  %f = alloca %struct.BMFace*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %enew = alloca %struct.BMEdge*, align 8
  %lst = alloca %struct.ListBase*, align 8
  %ref = alloca %struct.Ref*, align 8
  %pct = alloca float, align 4
  %hiter = alloca %struct.SmallHashIter, align 8
  %iter = alloca %struct.BLI_mempool_iter, align 8
  %fhash_ = alloca %struct.SmallHash, align 8
  %fhash = alloca %struct.SmallHash*, align 8
  %ehash_ = alloca %struct.SmallHash, align 8
  %ehash = alloca %struct.SmallHash*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !9990, metadata !DIExpression()), !dbg !9991
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !9992, metadata !DIExpression()), !dbg !9993
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !9994
  %em = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 5, !dbg !9995
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9995
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !9996
  %2 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !9996
  store %struct.BMesh* %2, %struct.BMesh** %bm, align 8, !dbg !9993
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !9997, metadata !DIExpression()), !dbg !9998
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv, metadata !9999, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !10001, metadata !DIExpression()), !dbg !10002
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !10003, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %enew, metadata !10005, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst, metadata !10007, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref, metadata !10009, metadata !DIExpression()), !dbg !10010
  call void @llvm.dbg.declare(metadata float* %pct, metadata !10011, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.declare(metadata %struct.SmallHashIter* %hiter, metadata !10013, metadata !DIExpression()), !dbg !10014
  call void @llvm.dbg.declare(metadata %struct.BLI_mempool_iter* %iter, metadata !10015, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.declare(metadata %struct.SmallHash* %fhash_, metadata !10017, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.declare(metadata %struct.SmallHash** %fhash, metadata !10019, metadata !DIExpression()), !dbg !10020
  store %struct.SmallHash* %fhash_, %struct.SmallHash** %fhash, align 8, !dbg !10020
  call void @llvm.dbg.declare(metadata %struct.SmallHash* %ehash_, metadata !10021, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.declare(metadata %struct.SmallHash** %ehash, metadata !10023, metadata !DIExpression()), !dbg !10024
  store %struct.SmallHash* %ehash_, %struct.SmallHash** %ehash, align 8, !dbg !10024
  %3 = load %struct.SmallHash*, %struct.SmallHash** %fhash, align 8, !dbg !10025
  call void @BLI_smallhash_init(%struct.SmallHash* %3), !dbg !10026
  %4 = load %struct.SmallHash*, %struct.SmallHash** %ehash, align 8, !dbg !10027
  call void @BLI_smallhash_init(%struct.SmallHash* %4), !dbg !10028
  %5 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10029
  %kedges = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %5, i32 0, i32 13, !dbg !10030
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %kedges, align 8, !dbg !10030
  call void @BLI_mempool_iternew(%struct.BLI_mempool* %6, %struct.BLI_mempool_iter* %iter), !dbg !10031
  %call = call i8* @BLI_mempool_iterstep(%struct.BLI_mempool_iter* %iter), !dbg !10032
  %7 = bitcast i8* %call to %struct.KnifeEdge*, !dbg !10032
  store %struct.KnifeEdge* %7, %struct.KnifeEdge** %kfe, align 8, !dbg !10034
  br label %for.cond, !dbg !10035

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10036
  %tobool = icmp ne %struct.KnifeEdge* %8, null, !dbg !10038
  br i1 %tobool, label %for.body, label %for.end, !dbg !10038

for.body:                                         ; preds = %for.cond
  %9 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10039
  %basef = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %9, i32 0, i32 2, !dbg !10041
  %10 = load %struct.BMFace*, %struct.BMFace** %basef, align 8, !dbg !10041
  store %struct.BMFace* %10, %struct.BMFace** %f, align 8, !dbg !10042
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10043
  %tobool2 = icmp ne %struct.BMFace* %11, null, !dbg !10043
  br i1 %tobool2, label %lor.lhs.false, label %if.then, !dbg !10045

lor.lhs.false:                                    ; preds = %for.body
  %12 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10046
  %e3 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %12, i32 0, i32 4, !dbg !10047
  %13 = load %struct.BMEdge*, %struct.BMEdge** %e3, align 8, !dbg !10047
  %tobool4 = icmp ne %struct.BMEdge* %13, null, !dbg !10046
  br i1 %tobool4, label %if.then, label %if.end, !dbg !10048

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !10049

if.end:                                           ; preds = %lor.lhs.false
  %14 = load %struct.SmallHash*, %struct.SmallHash** %fhash, align 8, !dbg !10050
  %15 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10051
  %16 = ptrtoint %struct.BMFace* %15 to i64, !dbg !10052
  %call5 = call i8* @BLI_smallhash_lookup(%struct.SmallHash* %14, i64 %16), !dbg !10053
  %17 = bitcast i8* %call5 to %struct.ListBase*, !dbg !10053
  store %struct.ListBase* %17, %struct.ListBase** %lst, align 8, !dbg !10054
  %18 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !10055
  %tobool6 = icmp ne %struct.ListBase* %18, null, !dbg !10055
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !10057

if.then7:                                         ; preds = %if.end
  %19 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10058
  %call8 = call %struct.ListBase* @knife_empty_list(%struct.KnifeTool_OpData* %19), !dbg !10060
  store %struct.ListBase* %call8, %struct.ListBase** %lst, align 8, !dbg !10061
  %20 = load %struct.SmallHash*, %struct.SmallHash** %fhash, align 8, !dbg !10062
  %21 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10063
  %22 = ptrtoint %struct.BMFace* %21 to i64, !dbg !10064
  %23 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !10065
  %24 = bitcast %struct.ListBase* %23 to i8*, !dbg !10065
  call void @BLI_smallhash_insert(%struct.SmallHash* %20, i64 %22, i8* %24), !dbg !10066
  br label %if.end9, !dbg !10067

if.end9:                                          ; preds = %if.then7, %if.end
  %25 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10068
  %26 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !10069
  %27 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10070
  %28 = bitcast %struct.KnifeEdge* %27 to i8*, !dbg !10070
  call void @knife_append_list(%struct.KnifeTool_OpData* %25, %struct.ListBase* %26, i8* %28), !dbg !10071
  br label %for.inc, !dbg !10072

for.inc:                                          ; preds = %if.end9, %if.then
  %call10 = call i8* @BLI_mempool_iterstep(%struct.BLI_mempool_iter* %iter), !dbg !10073
  %29 = bitcast i8* %call10 to %struct.KnifeEdge*, !dbg !10073
  store %struct.KnifeEdge* %29, %struct.KnifeEdge** %kfe, align 8, !dbg !10074
  br label %for.cond, !dbg !10075, !llvm.loop !10076

for.end:                                          ; preds = %for.cond
  %30 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10078
  %kverts = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %30, i32 0, i32 12, !dbg !10079
  %31 = load %struct.BLI_mempool*, %struct.BLI_mempool** %kverts, align 8, !dbg !10079
  call void @BLI_mempool_iternew(%struct.BLI_mempool* %31, %struct.BLI_mempool_iter* %iter), !dbg !10080
  %call11 = call i8* @BLI_mempool_iterstep(%struct.BLI_mempool_iter* %iter), !dbg !10081
  %32 = bitcast i8* %call11 to %struct.KnifeVert*, !dbg !10081
  store %struct.KnifeVert* %32, %struct.KnifeVert** %kfv, align 8, !dbg !10083
  br label %for.cond12, !dbg !10084

for.cond12:                                       ; preds = %for.inc37, %for.end
  %33 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !10085
  %tobool13 = icmp ne %struct.KnifeVert* %33, null, !dbg !10087
  br i1 %tobool13, label %for.body14, label %for.end39, !dbg !10087

for.body14:                                       ; preds = %for.cond12
  %34 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !10088
  %v = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %34, i32 0, i32 0, !dbg !10091
  %35 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10091
  %tobool15 = icmp ne %struct.BMVert* %35, null, !dbg !10088
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !10092

if.then16:                                        ; preds = %for.body14
  br label %for.inc37, !dbg !10093

if.end17:                                         ; preds = %for.body14
  %36 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !10094
  %edges = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %36, i32 0, i32 1, !dbg !10096
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %edges, i32 0, i32 0, !dbg !10097
  %37 = load i8*, i8** %first, align 8, !dbg !10097
  %38 = bitcast i8* %37 to %struct.Ref*, !dbg !10094
  store %struct.Ref* %38, %struct.Ref** %ref, align 8, !dbg !10098
  br label %for.cond18, !dbg !10099

for.cond18:                                       ; preds = %for.inc35, %if.end17
  %39 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10100
  %tobool19 = icmp ne %struct.Ref* %39, null, !dbg !10102
  br i1 %tobool19, label %for.body20, label %for.end36, !dbg !10102

for.body20:                                       ; preds = %for.cond18
  %40 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10103
  %ref21 = getelementptr inbounds %struct.Ref, %struct.Ref* %40, i32 0, i32 2, !dbg !10105
  %41 = load i8*, i8** %ref21, align 8, !dbg !10105
  %42 = bitcast i8* %41 to %struct.KnifeEdge*, !dbg !10103
  store %struct.KnifeEdge* %42, %struct.KnifeEdge** %kfe, align 8, !dbg !10106
  %43 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10107
  %e22 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %43, i32 0, i32 4, !dbg !10108
  %44 = load %struct.BMEdge*, %struct.BMEdge** %e22, align 8, !dbg !10108
  store %struct.BMEdge* %44, %struct.BMEdge** %e, align 8, !dbg !10109
  %45 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10110
  %tobool23 = icmp ne %struct.BMEdge* %45, null, !dbg !10110
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !10112

if.then24:                                        ; preds = %for.body20
  br label %for.inc35, !dbg !10113

if.end25:                                         ; preds = %for.body20
  %46 = load %struct.SmallHash*, %struct.SmallHash** %ehash, align 8, !dbg !10114
  %47 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10115
  %48 = ptrtoint %struct.BMEdge* %47 to i64, !dbg !10116
  %call26 = call i8* @BLI_smallhash_lookup(%struct.SmallHash* %46, i64 %48), !dbg !10117
  %49 = bitcast i8* %call26 to %struct.ListBase*, !dbg !10117
  store %struct.ListBase* %49, %struct.ListBase** %lst, align 8, !dbg !10118
  %50 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !10119
  %tobool27 = icmp ne %struct.ListBase* %50, null, !dbg !10119
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !10121

if.then28:                                        ; preds = %if.end25
  %51 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10122
  %call29 = call %struct.ListBase* @knife_empty_list(%struct.KnifeTool_OpData* %51), !dbg !10124
  store %struct.ListBase* %call29, %struct.ListBase** %lst, align 8, !dbg !10125
  %52 = load %struct.SmallHash*, %struct.SmallHash** %ehash, align 8, !dbg !10126
  %53 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10127
  %54 = ptrtoint %struct.BMEdge* %53 to i64, !dbg !10128
  %55 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !10129
  %56 = bitcast %struct.ListBase* %55 to i8*, !dbg !10129
  call void @BLI_smallhash_insert(%struct.SmallHash* %52, i64 %54, i8* %56), !dbg !10130
  br label %if.end30, !dbg !10131

if.end30:                                         ; preds = %if.then28, %if.end25
  %57 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !10132
  %58 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !10134
  %59 = bitcast %struct.KnifeVert* %58 to i8*, !dbg !10134
  %call31 = call %struct.Ref* @find_ref(%struct.ListBase* %57, i8* %59), !dbg !10135
  %tobool32 = icmp ne %struct.Ref* %call31, null, !dbg !10135
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !10136

if.then33:                                        ; preds = %if.end30
  %60 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10137
  %61 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !10138
  %62 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !10139
  %63 = bitcast %struct.KnifeVert* %62 to i8*, !dbg !10139
  call void @knife_append_list(%struct.KnifeTool_OpData* %60, %struct.ListBase* %61, i8* %63), !dbg !10140
  br label %if.end34, !dbg !10140

if.end34:                                         ; preds = %if.then33, %if.end30
  br label %for.inc35, !dbg !10141

for.inc35:                                        ; preds = %if.end34, %if.then24
  %64 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10142
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %64, i32 0, i32 0, !dbg !10143
  %65 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !10143
  store %struct.Ref* %65, %struct.Ref** %ref, align 8, !dbg !10144
  br label %for.cond18, !dbg !10145, !llvm.loop !10146

for.end36:                                        ; preds = %for.cond18
  br label %for.inc37, !dbg !10148

for.inc37:                                        ; preds = %for.end36, %if.then16
  %call38 = call i8* @BLI_mempool_iterstep(%struct.BLI_mempool_iter* %iter), !dbg !10149
  %66 = bitcast i8* %call38 to %struct.KnifeVert*, !dbg !10149
  store %struct.KnifeVert* %66, %struct.KnifeVert** %kfv, align 8, !dbg !10150
  br label %for.cond12, !dbg !10151, !llvm.loop !10152

for.end39:                                        ; preds = %for.cond12
  %67 = load %struct.SmallHash*, %struct.SmallHash** %ehash, align 8, !dbg !10154
  %68 = bitcast %struct.BMEdge** %e to i64*, !dbg !10156
  %call40 = call i8* @BLI_smallhash_iternew(%struct.SmallHash* %67, %struct.SmallHashIter* %hiter, i64* %68), !dbg !10157
  %69 = bitcast i8* %call40 to %struct.ListBase*, !dbg !10157
  store %struct.ListBase* %69, %struct.ListBase** %lst, align 8, !dbg !10158
  br label %for.cond41, !dbg !10159

for.cond41:                                       ; preds = %for.inc60, %for.end39
  %70 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !10160
  %tobool42 = icmp ne %struct.ListBase* %70, null, !dbg !10162
  br i1 %tobool42, label %for.body43, label %for.end62, !dbg !10162

for.body43:                                       ; preds = %for.cond41
  %71 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !10163
  %72 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10165
  call void @sort_by_frac_along(%struct.ListBase* %71, %struct.BMEdge* %72), !dbg !10166
  %73 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !10167
  %first44 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %73, i32 0, i32 0, !dbg !10169
  %74 = load i8*, i8** %first44, align 8, !dbg !10169
  %75 = bitcast i8* %74 to %struct.Ref*, !dbg !10167
  store %struct.Ref* %75, %struct.Ref** %ref, align 8, !dbg !10170
  br label %for.cond45, !dbg !10171

for.cond45:                                       ; preds = %for.inc57, %for.body43
  %76 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10172
  %tobool46 = icmp ne %struct.Ref* %76, null, !dbg !10174
  br i1 %tobool46, label %for.body47, label %for.end59, !dbg !10174

for.body47:                                       ; preds = %for.cond45
  %77 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10175
  %ref48 = getelementptr inbounds %struct.Ref, %struct.Ref* %77, i32 0, i32 2, !dbg !10177
  %78 = load i8*, i8** %ref48, align 8, !dbg !10177
  %79 = bitcast i8* %78 to %struct.KnifeVert*, !dbg !10175
  store %struct.KnifeVert* %79, %struct.KnifeVert** %kfv, align 8, !dbg !10178
  %80 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !10179
  %co = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %80, i32 0, i32 3, !dbg !10180
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10179
  %81 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10181
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %81, i32 0, i32 2, !dbg !10182
  %82 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !10182
  %co49 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %82, i32 0, i32 2, !dbg !10183
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %co49, i64 0, i64 0, !dbg !10181
  %83 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10184
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %83, i32 0, i32 3, !dbg !10185
  %84 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !10185
  %co51 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %84, i32 0, i32 2, !dbg !10186
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %co51, i64 0, i64 0, !dbg !10184
  %call53 = call float @line_point_factor_v3(float* %arraydecay, float* %arraydecay50, float* %arraydecay52), !dbg !10187
  store float %call53, float* %pct, align 4, !dbg !10188
  %85 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10189
  %86 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10190
  %87 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10191
  %v154 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %87, i32 0, i32 2, !dbg !10192
  %88 = load %struct.BMVert*, %struct.BMVert** %v154, align 8, !dbg !10192
  %89 = load float, float* %pct, align 4, !dbg !10193
  %call55 = call %struct.BMVert* @BM_edge_split(%struct.BMesh* %85, %struct.BMEdge* %86, %struct.BMVert* %88, %struct.BMEdge** %enew, float %89), !dbg !10194
  %90 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !10195
  %v56 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %90, i32 0, i32 0, !dbg !10196
  store %struct.BMVert* %call55, %struct.BMVert** %v56, align 8, !dbg !10197
  br label %for.inc57, !dbg !10198

for.inc57:                                        ; preds = %for.body47
  %91 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10199
  %next58 = getelementptr inbounds %struct.Ref, %struct.Ref* %91, i32 0, i32 0, !dbg !10200
  %92 = load %struct.Ref*, %struct.Ref** %next58, align 8, !dbg !10200
  store %struct.Ref* %92, %struct.Ref** %ref, align 8, !dbg !10201
  br label %for.cond45, !dbg !10202, !llvm.loop !10203

for.end59:                                        ; preds = %for.cond45
  br label %for.inc60, !dbg !10205

for.inc60:                                        ; preds = %for.end59
  %93 = bitcast %struct.BMEdge** %e to i64*, !dbg !10206
  %call61 = call i8* @BLI_smallhash_iternext(%struct.SmallHashIter* %hiter, i64* %93), !dbg !10207
  %94 = bitcast i8* %call61 to %struct.ListBase*, !dbg !10207
  store %struct.ListBase* %94, %struct.ListBase** %lst, align 8, !dbg !10208
  br label %for.cond41, !dbg !10209, !llvm.loop !10210

for.end62:                                        ; preds = %for.cond41
  %95 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10212
  %only_select = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %95, i32 0, i32 29, !dbg !10214
  %96 = load i8, i8* %only_select, align 2, !dbg !10214
  %tobool63 = icmp ne i8 %96, 0, !dbg !10212
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !10215

if.then64:                                        ; preds = %for.end62
  %97 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10216
  %em65 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %97, i32 0, i32 5, !dbg !10218
  %98 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em65, align 8, !dbg !10218
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %98, i8 zeroext 1), !dbg !10219
  br label %if.end66, !dbg !10220

if.end66:                                         ; preds = %if.then64, %for.end62
  %99 = load %struct.SmallHash*, %struct.SmallHash** %fhash, align 8, !dbg !10221
  %100 = bitcast %struct.BMFace** %f to i64*, !dbg !10223
  %call67 = call i8* @BLI_smallhash_iternew(%struct.SmallHash* %99, %struct.SmallHashIter* %hiter, i64* %100), !dbg !10224
  %101 = bitcast i8* %call67 to %struct.ListBase*, !dbg !10224
  store %struct.ListBase* %101, %struct.ListBase** %lst, align 8, !dbg !10225
  br label %for.cond68, !dbg !10226

for.cond68:                                       ; preds = %for.inc71, %if.end66
  %102 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !10227
  %tobool69 = icmp ne %struct.ListBase* %102, null, !dbg !10229
  br i1 %tobool69, label %for.body70, label %for.end73, !dbg !10229

for.body70:                                       ; preds = %for.cond68
  %103 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10230
  %104 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10232
  %105 = load %struct.ListBase*, %struct.ListBase** %lst, align 8, !dbg !10233
  call void @knife_make_face_cuts(%struct.KnifeTool_OpData* %103, %struct.BMFace* %104, %struct.ListBase* %105), !dbg !10234
  br label %for.inc71, !dbg !10235

for.inc71:                                        ; preds = %for.body70
  %106 = bitcast %struct.BMFace** %f to i64*, !dbg !10236
  %call72 = call i8* @BLI_smallhash_iternext(%struct.SmallHashIter* %hiter, i64* %106), !dbg !10237
  %107 = bitcast i8* %call72 to %struct.ListBase*, !dbg !10237
  store %struct.ListBase* %107, %struct.ListBase** %lst, align 8, !dbg !10238
  br label %for.cond68, !dbg !10239, !llvm.loop !10240

for.end73:                                        ; preds = %for.cond68
  %108 = load %struct.SmallHash*, %struct.SmallHash** %fhash, align 8, !dbg !10242
  call void @BLI_smallhash_release(%struct.SmallHash* %108), !dbg !10243
  %109 = load %struct.SmallHash*, %struct.SmallHash** %ehash, align 8, !dbg !10244
  call void @BLI_smallhash_release(%struct.SmallHash* %109), !dbg !10245
  ret void, !dbg !10246
}

declare dso_local void @EDBM_selectmode_flush(%struct.BMEditMesh*) #2

declare dso_local void @EDBM_mesh_normals_update(%struct.BMEditMesh*) #2

declare dso_local void @EDBM_update_generic(%struct.BMEditMesh*, i8 zeroext, i8 zeroext) #2

declare dso_local i8* @BLI_smallhash_lookup(%struct.SmallHash*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sort_by_frac_along(%struct.ListBase* %lst, %struct.BMEdge* %e) #0 !dbg !10247 {
entry:
  %lst.addr = alloca %struct.ListBase*, align 8
  %e.addr = alloca %struct.BMEdge*, align 8
  %v1co = alloca float*, align 8
  %cur = alloca %struct.Ref*, align 8
  %prev = alloca %struct.Ref*, align 8
  %next = alloca %struct.Ref*, align 8
  %vcur = alloca %struct.KnifeVert*, align 8
  %vcur_fac_sq = alloca float, align 4
  %vprev = alloca %struct.KnifeVert*, align 8
  store %struct.ListBase* %lst, %struct.ListBase** %lst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lst.addr, metadata !10250, metadata !DIExpression()), !dbg !10251
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !10252, metadata !DIExpression()), !dbg !10253
  call void @llvm.dbg.declare(metadata float** %v1co, metadata !10254, metadata !DIExpression()), !dbg !10255
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !10256
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 2, !dbg !10257
  %1 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !10257
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %1, i32 0, i32 2, !dbg !10258
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10256
  store float* %arraydecay, float** %v1co, align 8, !dbg !10255
  call void @llvm.dbg.declare(metadata %struct.Ref** %cur, metadata !10259, metadata !DIExpression()), !dbg !10260
  store %struct.Ref* null, %struct.Ref** %cur, align 8, !dbg !10260
  call void @llvm.dbg.declare(metadata %struct.Ref** %prev, metadata !10261, metadata !DIExpression()), !dbg !10262
  store %struct.Ref* null, %struct.Ref** %prev, align 8, !dbg !10262
  call void @llvm.dbg.declare(metadata %struct.Ref** %next, metadata !10263, metadata !DIExpression()), !dbg !10264
  store %struct.Ref* null, %struct.Ref** %next, align 8, !dbg !10264
  %2 = load %struct.ListBase*, %struct.ListBase** %lst.addr, align 8, !dbg !10265
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !10267
  %3 = load i8*, i8** %first, align 8, !dbg !10267
  %4 = load %struct.ListBase*, %struct.ListBase** %lst.addr, align 8, !dbg !10268
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 1, !dbg !10269
  %5 = load i8*, i8** %last, align 8, !dbg !10269
  %cmp = icmp eq i8* %3, %5, !dbg !10270
  br i1 %cmp, label %if.then, label %if.end, !dbg !10271

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !10272

if.end:                                           ; preds = %entry
  %6 = load %struct.ListBase*, %struct.ListBase** %lst.addr, align 8, !dbg !10273
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %6, i32 0, i32 0, !dbg !10275
  %7 = load i8*, i8** %first1, align 8, !dbg !10275
  %8 = bitcast i8* %7 to %struct.Ref*, !dbg !10276
  %next2 = getelementptr inbounds %struct.Ref, %struct.Ref* %8, i32 0, i32 0, !dbg !10277
  %9 = load %struct.Ref*, %struct.Ref** %next2, align 8, !dbg !10277
  store %struct.Ref* %9, %struct.Ref** %cur, align 8, !dbg !10278
  br label %for.cond, !dbg !10279

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.Ref*, %struct.Ref** %cur, align 8, !dbg !10280
  %tobool = icmp ne %struct.Ref* %10, null, !dbg !10282
  br i1 %tobool, label %for.body, label %for.end, !dbg !10282

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %vcur, metadata !10283, metadata !DIExpression()), !dbg !10285
  %11 = load %struct.Ref*, %struct.Ref** %cur, align 8, !dbg !10286
  %ref = getelementptr inbounds %struct.Ref, %struct.Ref* %11, i32 0, i32 2, !dbg !10287
  %12 = load i8*, i8** %ref, align 8, !dbg !10287
  %13 = bitcast i8* %12 to %struct.KnifeVert*, !dbg !10286
  store %struct.KnifeVert* %13, %struct.KnifeVert** %vcur, align 8, !dbg !10285
  call void @llvm.dbg.declare(metadata float* %vcur_fac_sq, metadata !10288, metadata !DIExpression()), !dbg !10289
  %14 = load float*, float** %v1co, align 8, !dbg !10290
  %15 = load %struct.KnifeVert*, %struct.KnifeVert** %vcur, align 8, !dbg !10291
  %co3 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %15, i32 0, i32 3, !dbg !10292
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %co3, i64 0, i64 0, !dbg !10291
  %call = call float @len_squared_v3v3(float* %14, float* %arraydecay4), !dbg !10293
  store float %call, float* %vcur_fac_sq, align 4, !dbg !10289
  %16 = load %struct.Ref*, %struct.Ref** %cur, align 8, !dbg !10294
  %next5 = getelementptr inbounds %struct.Ref, %struct.Ref* %16, i32 0, i32 0, !dbg !10295
  %17 = load %struct.Ref*, %struct.Ref** %next5, align 8, !dbg !10295
  store %struct.Ref* %17, %struct.Ref** %next, align 8, !dbg !10296
  %18 = load %struct.Ref*, %struct.Ref** %cur, align 8, !dbg !10297
  %prev6 = getelementptr inbounds %struct.Ref, %struct.Ref* %18, i32 0, i32 1, !dbg !10298
  %19 = load %struct.Ref*, %struct.Ref** %prev6, align 8, !dbg !10298
  store %struct.Ref* %19, %struct.Ref** %prev, align 8, !dbg !10299
  %20 = load %struct.ListBase*, %struct.ListBase** %lst.addr, align 8, !dbg !10300
  %21 = load %struct.Ref*, %struct.Ref** %cur, align 8, !dbg !10301
  %22 = bitcast %struct.Ref* %21 to i8*, !dbg !10301
  call void @BLI_remlink(%struct.ListBase* %20, i8* %22), !dbg !10302
  br label %while.cond, !dbg !10303

while.cond:                                       ; preds = %if.end14, %for.body
  %23 = load %struct.Ref*, %struct.Ref** %prev, align 8, !dbg !10304
  %tobool7 = icmp ne %struct.Ref* %23, null, !dbg !10303
  br i1 %tobool7, label %while.body, label %while.end, !dbg !10303

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %vprev, metadata !10305, metadata !DIExpression()), !dbg !10307
  %24 = load %struct.Ref*, %struct.Ref** %prev, align 8, !dbg !10308
  %ref8 = getelementptr inbounds %struct.Ref, %struct.Ref* %24, i32 0, i32 2, !dbg !10309
  %25 = load i8*, i8** %ref8, align 8, !dbg !10309
  %26 = bitcast i8* %25 to %struct.KnifeVert*, !dbg !10308
  store %struct.KnifeVert* %26, %struct.KnifeVert** %vprev, align 8, !dbg !10307
  %27 = load float*, float** %v1co, align 8, !dbg !10310
  %28 = load %struct.KnifeVert*, %struct.KnifeVert** %vprev, align 8, !dbg !10312
  %co9 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %28, i32 0, i32 3, !dbg !10313
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co9, i64 0, i64 0, !dbg !10312
  %call11 = call float @len_squared_v3v3(float* %27, float* %arraydecay10), !dbg !10314
  %29 = load float, float* %vcur_fac_sq, align 4, !dbg !10315
  %cmp12 = fcmp ole float %call11, %29, !dbg !10316
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10317

if.then13:                                        ; preds = %while.body
  br label %while.end, !dbg !10318

if.end14:                                         ; preds = %while.body
  %30 = load %struct.Ref*, %struct.Ref** %prev, align 8, !dbg !10319
  %prev15 = getelementptr inbounds %struct.Ref, %struct.Ref* %30, i32 0, i32 1, !dbg !10320
  %31 = load %struct.Ref*, %struct.Ref** %prev15, align 8, !dbg !10320
  store %struct.Ref* %31, %struct.Ref** %prev, align 8, !dbg !10321
  br label %while.cond, !dbg !10303, !llvm.loop !10322

while.end:                                        ; preds = %if.then13, %while.cond
  %32 = load %struct.ListBase*, %struct.ListBase** %lst.addr, align 8, !dbg !10324
  %33 = load %struct.Ref*, %struct.Ref** %prev, align 8, !dbg !10325
  %34 = bitcast %struct.Ref* %33 to i8*, !dbg !10325
  %35 = load %struct.Ref*, %struct.Ref** %cur, align 8, !dbg !10326
  %36 = bitcast %struct.Ref* %35 to i8*, !dbg !10326
  call void @BLI_insertlinkafter(%struct.ListBase* %32, i8* %34, i8* %36), !dbg !10327
  br label %for.inc, !dbg !10328

for.inc:                                          ; preds = %while.end
  %37 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !10329
  store %struct.Ref* %37, %struct.Ref** %cur, align 8, !dbg !10330
  br label %for.cond, !dbg !10331, !llvm.loop !10332

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !10334
}

declare dso_local %struct.BMVert* @BM_edge_split(%struct.BMesh*, %struct.BMEdge*, %struct.BMVert*, %struct.BMEdge**, float) #2

declare dso_local void @EDBM_flag_disable_all(%struct.BMEditMesh*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @knife_make_face_cuts(%struct.KnifeTool_OpData* %kcd, %struct.BMFace* %f, %struct.ListBase* %kfedges) #0 !dbg !10335 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %kfedges.addr = alloca %struct.ListBase*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %fnew = alloca %struct.BMFace*, align 8
  %fnew2 = alloca %struct.BMFace*, align 8
  %fhole = alloca %struct.BMFace*, align 8
  %chain = alloca %struct.ListBase*, align 8
  %hole = alloca %struct.ListBase*, align 8
  %sidechain = alloca %struct.ListBase*, align 8
  %ref = alloca %struct.Ref*, align 8
  %refnext = alloca %struct.Ref*, align 8
  %count = alloca i32, align 4
  %oldcount = alloca i32, align 4
  %fnew_kfedges = alloca %struct.ListBase, align 8
  %fnew_kfedges28 = alloca %struct.ListBase, align 8
  %fnew2_kfedges = alloca %struct.ListBase, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !10336, metadata !DIExpression()), !dbg !10337
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !10338, metadata !DIExpression()), !dbg !10339
  store %struct.ListBase* %kfedges, %struct.ListBase** %kfedges.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %kfedges.addr, metadata !10340, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !10342, metadata !DIExpression()), !dbg !10343
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10344
  %em = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 5, !dbg !10345
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10345
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !10346
  %2 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !10346
  store %struct.BMesh* %2, %struct.BMesh** %bm, align 8, !dbg !10343
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !10347, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.declare(metadata %struct.BMFace** %fnew, metadata !10349, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.declare(metadata %struct.BMFace** %fnew2, metadata !10351, metadata !DIExpression()), !dbg !10352
  call void @llvm.dbg.declare(metadata %struct.BMFace** %fhole, metadata !10353, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.declare(metadata %struct.ListBase** %chain, metadata !10355, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.declare(metadata %struct.ListBase** %hole, metadata !10357, metadata !DIExpression()), !dbg !10358
  call void @llvm.dbg.declare(metadata %struct.ListBase** %sidechain, metadata !10359, metadata !DIExpression()), !dbg !10360
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref, metadata !10361, metadata !DIExpression()), !dbg !10362
  call void @llvm.dbg.declare(metadata %struct.Ref** %refnext, metadata !10363, metadata !DIExpression()), !dbg !10364
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10365, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.declare(metadata i32* %oldcount, metadata !10367, metadata !DIExpression()), !dbg !10368
  %3 = load %struct.ListBase*, %struct.ListBase** %kfedges.addr, align 8, !dbg !10369
  %call = call i32 @BLI_countlist(%struct.ListBase* %3), !dbg !10370
  store i32 %call, i32* %oldcount, align 4, !dbg !10371
  br label %while.cond, !dbg !10372

while.cond:                                       ; preds = %if.end20, %entry
  %4 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10373
  %5 = load %struct.ListBase*, %struct.ListBase** %kfedges.addr, align 8, !dbg !10374
  %call2 = call %struct.ListBase* @find_chain(%struct.KnifeTool_OpData* %4, %struct.ListBase* %5), !dbg !10375
  store %struct.ListBase* %call2, %struct.ListBase** %chain, align 8, !dbg !10376
  %cmp = icmp ne %struct.ListBase* %call2, null, !dbg !10377
  br i1 %cmp, label %while.body, label %while.end, !dbg !10372

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ListBase* %fnew_kfedges, metadata !10378, metadata !DIExpression()), !dbg !10380
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10381
  %7 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !10382
  %8 = load %struct.ListBase*, %struct.ListBase** %chain, align 8, !dbg !10383
  call void @knife_make_chain_cut(%struct.KnifeTool_OpData* %6, %struct.BMFace* %7, %struct.ListBase* %8, %struct.BMFace** %fnew), !dbg !10384
  %9 = load %struct.BMFace*, %struct.BMFace** %fnew, align 8, !dbg !10385
  %tobool = icmp ne %struct.BMFace* %9, null, !dbg !10385
  br i1 %tobool, label %if.end, label %if.then, !dbg !10387

if.then:                                          ; preds = %while.body
  br label %while.end88, !dbg !10388

if.end:                                           ; preds = %while.body
  call void @BLI_listbase_clear(%struct.ListBase* %fnew_kfedges), !dbg !10390
  %10 = load %struct.ListBase*, %struct.ListBase** %kfedges.addr, align 8, !dbg !10391
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %10, i32 0, i32 0, !dbg !10393
  %11 = load i8*, i8** %first, align 8, !dbg !10393
  %12 = bitcast i8* %11 to %struct.Ref*, !dbg !10391
  store %struct.Ref* %12, %struct.Ref** %ref, align 8, !dbg !10394
  br label %for.cond, !dbg !10395

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10396
  %tobool3 = icmp ne %struct.Ref* %13, null, !dbg !10398
  br i1 %tobool3, label %for.body, label %for.end, !dbg !10398

for.body:                                         ; preds = %for.cond
  %14 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10399
  %ref4 = getelementptr inbounds %struct.Ref, %struct.Ref* %14, i32 0, i32 2, !dbg !10401
  %15 = load i8*, i8** %ref4, align 8, !dbg !10401
  %16 = bitcast i8* %15 to %struct.KnifeEdge*, !dbg !10399
  store %struct.KnifeEdge* %16, %struct.KnifeEdge** %kfe, align 8, !dbg !10402
  %17 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10403
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %17, i32 0, i32 0, !dbg !10404
  %18 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !10404
  store %struct.Ref* %18, %struct.Ref** %refnext, align 8, !dbg !10405
  %19 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10406
  %20 = load %struct.BMFace*, %struct.BMFace** %fnew, align 8, !dbg !10408
  %call5 = call zeroext i8 @knife_edge_in_face(%struct.KnifeEdge* %19, %struct.BMFace* %20), !dbg !10409
  %tobool6 = icmp ne i8 %call5, 0, !dbg !10409
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !10410

if.then7:                                         ; preds = %for.body
  %21 = load %struct.ListBase*, %struct.ListBase** %kfedges.addr, align 8, !dbg !10411
  %22 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10413
  %23 = bitcast %struct.Ref* %22 to i8*, !dbg !10413
  call void @BLI_remlink(%struct.ListBase* %21, i8* %23), !dbg !10414
  %24 = load %struct.BMFace*, %struct.BMFace** %fnew, align 8, !dbg !10415
  %25 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10416
  %basef = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %25, i32 0, i32 2, !dbg !10417
  store %struct.BMFace* %24, %struct.BMFace** %basef, align 8, !dbg !10418
  %26 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10419
  %27 = bitcast %struct.Ref* %26 to i8*, !dbg !10419
  call void @BLI_addtail(%struct.ListBase* %fnew_kfedges, i8* %27), !dbg !10420
  br label %if.end12, !dbg !10421

if.else:                                          ; preds = %for.body
  %28 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10422
  %29 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !10424
  %call8 = call zeroext i8 @knife_edge_in_face(%struct.KnifeEdge* %28, %struct.BMFace* %29), !dbg !10425
  %tobool9 = icmp ne i8 %call8, 0, !dbg !10425
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !10426

if.then10:                                        ; preds = %if.else
  %30 = load %struct.ListBase*, %struct.ListBase** %kfedges.addr, align 8, !dbg !10427
  %31 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10429
  %32 = bitcast %struct.Ref* %31 to i8*, !dbg !10429
  call void @BLI_remlink(%struct.ListBase* %30, i8* %32), !dbg !10430
  br label %if.end11, !dbg !10431

if.end11:                                         ; preds = %if.then10, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then7
  br label %for.inc, !dbg !10432

for.inc:                                          ; preds = %if.end12
  %33 = load %struct.Ref*, %struct.Ref** %refnext, align 8, !dbg !10433
  store %struct.Ref* %33, %struct.Ref** %ref, align 8, !dbg !10434
  br label %for.cond, !dbg !10435, !llvm.loop !10436

for.end:                                          ; preds = %for.cond
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %fnew_kfedges, i32 0, i32 0, !dbg !10438
  %34 = load i8*, i8** %first13, align 8, !dbg !10438
  %tobool14 = icmp ne i8* %34, null, !dbg !10440
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !10441

if.then15:                                        ; preds = %for.end
  %35 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10442
  %36 = load %struct.BMFace*, %struct.BMFace** %fnew, align 8, !dbg !10443
  call void @knife_make_face_cuts(%struct.KnifeTool_OpData* %35, %struct.BMFace* %36, %struct.ListBase* %fnew_kfedges), !dbg !10444
  br label %if.end16, !dbg !10444

if.end16:                                         ; preds = %if.then15, %for.end
  %37 = load %struct.ListBase*, %struct.ListBase** %kfedges.addr, align 8, !dbg !10445
  %call17 = call i32 @BLI_countlist(%struct.ListBase* %37), !dbg !10446
  store i32 %call17, i32* %count, align 4, !dbg !10447
  %38 = load i32, i32* %count, align 4, !dbg !10448
  %39 = load i32, i32* %oldcount, align 4, !dbg !10450
  %cmp18 = icmp sge i32 %38, %39, !dbg !10451
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10452

if.then19:                                        ; preds = %if.end16
  br label %while.end88, !dbg !10453

if.end20:                                         ; preds = %if.end16
  %40 = load i32, i32* %count, align 4, !dbg !10455
  store i32 %40, i32* %oldcount, align 4, !dbg !10456
  br label %while.cond, !dbg !10372, !llvm.loop !10457

while.end:                                        ; preds = %while.cond
  br label %while.cond21, !dbg !10459

while.cond21:                                     ; preds = %if.end87, %while.end
  %41 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10460
  %42 = load %struct.ListBase*, %struct.ListBase** %kfedges.addr, align 8, !dbg !10461
  %call22 = call %struct.ListBase* @find_hole(%struct.KnifeTool_OpData* %41, %struct.ListBase* %42), !dbg !10462
  store %struct.ListBase* %call22, %struct.ListBase** %hole, align 8, !dbg !10463
  %cmp23 = icmp ne %struct.ListBase* %call22, null, !dbg !10464
  br i1 %cmp23, label %while.body24, label %while.end88, !dbg !10459

while.body24:                                     ; preds = %while.cond21
  %43 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10465
  %44 = load %struct.ListBase*, %struct.ListBase** %hole, align 8, !dbg !10468
  %45 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !10469
  %call25 = call zeroext i8 @find_hole_chains(%struct.KnifeTool_OpData* %43, %struct.ListBase* %44, %struct.BMFace* %45, %struct.ListBase** %chain, %struct.ListBase** %sidechain), !dbg !10470
  %tobool26 = icmp ne i8 %call25, 0, !dbg !10470
  br i1 %tobool26, label %if.then27, label %if.end87, !dbg !10471

if.then27:                                        ; preds = %while.body24
  call void @llvm.dbg.declare(metadata %struct.ListBase* %fnew_kfedges28, metadata !10472, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.declare(metadata %struct.ListBase* %fnew2_kfedges, metadata !10475, metadata !DIExpression()), !dbg !10476
  %46 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10477
  %47 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !10478
  %48 = load %struct.ListBase*, %struct.ListBase** %chain, align 8, !dbg !10479
  call void @knife_make_chain_cut(%struct.KnifeTool_OpData* %46, %struct.BMFace* %47, %struct.ListBase* %48, %struct.BMFace** %fnew), !dbg !10480
  %49 = load %struct.BMFace*, %struct.BMFace** %fnew, align 8, !dbg !10481
  %tobool29 = icmp ne %struct.BMFace* %49, null, !dbg !10481
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !10483

if.then30:                                        ; preds = %if.then27
  br label %while.end88, !dbg !10484

if.end31:                                         ; preds = %if.then27
  %50 = load %struct.ListBase*, %struct.ListBase** %sidechain, align 8, !dbg !10486
  %first32 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %50, i32 0, i32 0, !dbg !10487
  %51 = load i8*, i8** %first32, align 8, !dbg !10487
  %52 = bitcast i8* %51 to %struct.Ref*, !dbg !10488
  %ref33 = getelementptr inbounds %struct.Ref, %struct.Ref* %52, i32 0, i32 2, !dbg !10489
  %53 = load i8*, i8** %ref33, align 8, !dbg !10489
  %54 = bitcast i8* %53 to %struct.KnifeEdge*, !dbg !10490
  store %struct.KnifeEdge* %54, %struct.KnifeEdge** %kfe, align 8, !dbg !10491
  %55 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10492
  %56 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !10494
  %call34 = call zeroext i8 @knife_edge_in_face(%struct.KnifeEdge* %55, %struct.BMFace* %56), !dbg !10495
  %tobool35 = icmp ne i8 %call34, 0, !dbg !10495
  br i1 %tobool35, label %if.then36, label %if.else40, !dbg !10496

if.then36:                                        ; preds = %if.end31
  %57 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10497
  %58 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !10499
  %59 = load %struct.ListBase*, %struct.ListBase** %sidechain, align 8, !dbg !10500
  call void @knife_make_chain_cut(%struct.KnifeTool_OpData* %57, %struct.BMFace* %58, %struct.ListBase* %59, %struct.BMFace** %fnew2), !dbg !10501
  %60 = load %struct.BMFace*, %struct.BMFace** %fnew2, align 8, !dbg !10502
  %cmp37 = icmp eq %struct.BMFace* %60, null, !dbg !10504
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !10505

if.then38:                                        ; preds = %if.then36
  br label %while.end88, !dbg !10506

if.end39:                                         ; preds = %if.then36
  %61 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !10508
  store %struct.BMFace* %61, %struct.BMFace** %fhole, align 8, !dbg !10509
  br label %if.end49, !dbg !10510

if.else40:                                        ; preds = %if.end31
  %62 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10511
  %63 = load %struct.BMFace*, %struct.BMFace** %fnew, align 8, !dbg !10513
  %call41 = call zeroext i8 @knife_edge_in_face(%struct.KnifeEdge* %62, %struct.BMFace* %63), !dbg !10514
  %tobool42 = icmp ne i8 %call41, 0, !dbg !10514
  br i1 %tobool42, label %if.then43, label %if.else47, !dbg !10515

if.then43:                                        ; preds = %if.else40
  %64 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10516
  %65 = load %struct.BMFace*, %struct.BMFace** %fnew, align 8, !dbg !10518
  %66 = load %struct.ListBase*, %struct.ListBase** %sidechain, align 8, !dbg !10519
  call void @knife_make_chain_cut(%struct.KnifeTool_OpData* %64, %struct.BMFace* %65, %struct.ListBase* %66, %struct.BMFace** %fnew2), !dbg !10520
  %67 = load %struct.BMFace*, %struct.BMFace** %fnew2, align 8, !dbg !10521
  %cmp44 = icmp eq %struct.BMFace* %67, null, !dbg !10523
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !10524

if.then45:                                        ; preds = %if.then43
  br label %while.end88, !dbg !10525

if.end46:                                         ; preds = %if.then43
  %68 = load %struct.BMFace*, %struct.BMFace** %fnew2, align 8, !dbg !10527
  store %struct.BMFace* %68, %struct.BMFace** %fhole, align 8, !dbg !10528
  br label %if.end48, !dbg !10529

if.else47:                                        ; preds = %if.else40
  br label %while.end88, !dbg !10530

if.end48:                                         ; preds = %if.end46
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end39
  %69 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10532
  %70 = load %struct.BMFace*, %struct.BMFace** %fhole, align 8, !dbg !10533
  call void @BM_face_kill(%struct.BMesh* %69, %struct.BMFace* %70), !dbg !10534
  call void @BLI_listbase_clear(%struct.ListBase* %fnew_kfedges28), !dbg !10535
  call void @BLI_listbase_clear(%struct.ListBase* %fnew2_kfedges), !dbg !10536
  %71 = load %struct.ListBase*, %struct.ListBase** %kfedges.addr, align 8, !dbg !10537
  %first50 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %71, i32 0, i32 0, !dbg !10539
  %72 = load i8*, i8** %first50, align 8, !dbg !10539
  %73 = bitcast i8* %72 to %struct.Ref*, !dbg !10537
  store %struct.Ref* %73, %struct.Ref** %ref, align 8, !dbg !10540
  br label %for.cond51, !dbg !10541

for.cond51:                                       ; preds = %for.inc67, %if.end49
  %74 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10542
  %tobool52 = icmp ne %struct.Ref* %74, null, !dbg !10544
  br i1 %tobool52, label %for.body53, label %for.end68, !dbg !10544

for.body53:                                       ; preds = %for.cond51
  %75 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10545
  %ref54 = getelementptr inbounds %struct.Ref, %struct.Ref* %75, i32 0, i32 2, !dbg !10547
  %76 = load i8*, i8** %ref54, align 8, !dbg !10547
  %77 = bitcast i8* %76 to %struct.KnifeEdge*, !dbg !10545
  store %struct.KnifeEdge* %77, %struct.KnifeEdge** %kfe, align 8, !dbg !10548
  %78 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10549
  %next55 = getelementptr inbounds %struct.Ref, %struct.Ref* %78, i32 0, i32 0, !dbg !10550
  %79 = load %struct.Ref*, %struct.Ref** %next55, align 8, !dbg !10550
  store %struct.Ref* %79, %struct.Ref** %refnext, align 8, !dbg !10551
  %80 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10552
  %81 = load %struct.BMFace*, %struct.BMFace** %fnew, align 8, !dbg !10554
  %call56 = call zeroext i8 @knife_edge_in_face(%struct.KnifeEdge* %80, %struct.BMFace* %81), !dbg !10555
  %tobool57 = icmp ne i8 %call56, 0, !dbg !10555
  br i1 %tobool57, label %if.then58, label %if.else60, !dbg !10556

if.then58:                                        ; preds = %for.body53
  %82 = load %struct.ListBase*, %struct.ListBase** %kfedges.addr, align 8, !dbg !10557
  %83 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10559
  %84 = bitcast %struct.Ref* %83 to i8*, !dbg !10559
  call void @BLI_remlink(%struct.ListBase* %82, i8* %84), !dbg !10560
  %85 = load %struct.BMFace*, %struct.BMFace** %fnew, align 8, !dbg !10561
  %86 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10562
  %basef59 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %86, i32 0, i32 2, !dbg !10563
  store %struct.BMFace* %85, %struct.BMFace** %basef59, align 8, !dbg !10564
  %87 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10565
  %88 = bitcast %struct.Ref* %87 to i8*, !dbg !10565
  call void @BLI_addtail(%struct.ListBase* %fnew_kfedges28, i8* %88), !dbg !10566
  br label %if.end66, !dbg !10567

if.else60:                                        ; preds = %for.body53
  %89 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10568
  %90 = load %struct.BMFace*, %struct.BMFace** %fnew2, align 8, !dbg !10570
  %call61 = call zeroext i8 @knife_edge_in_face(%struct.KnifeEdge* %89, %struct.BMFace* %90), !dbg !10571
  %tobool62 = icmp ne i8 %call61, 0, !dbg !10571
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !10572

if.then63:                                        ; preds = %if.else60
  %91 = load %struct.ListBase*, %struct.ListBase** %kfedges.addr, align 8, !dbg !10573
  %92 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10575
  %93 = bitcast %struct.Ref* %92 to i8*, !dbg !10575
  call void @BLI_remlink(%struct.ListBase* %91, i8* %93), !dbg !10576
  %94 = load %struct.BMFace*, %struct.BMFace** %fnew2, align 8, !dbg !10577
  %95 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10578
  %basef64 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %95, i32 0, i32 2, !dbg !10579
  store %struct.BMFace* %94, %struct.BMFace** %basef64, align 8, !dbg !10580
  %96 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10581
  %97 = bitcast %struct.Ref* %96 to i8*, !dbg !10581
  call void @BLI_addtail(%struct.ListBase* %fnew2_kfedges, i8* %97), !dbg !10582
  br label %if.end65, !dbg !10583

if.end65:                                         ; preds = %if.then63, %if.else60
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then58
  br label %for.inc67, !dbg !10584

for.inc67:                                        ; preds = %if.end66
  %98 = load %struct.Ref*, %struct.Ref** %refnext, align 8, !dbg !10585
  store %struct.Ref* %98, %struct.Ref** %ref, align 8, !dbg !10586
  br label %for.cond51, !dbg !10587, !llvm.loop !10588

for.end68:                                        ; preds = %for.cond51
  %99 = load %struct.BMFace*, %struct.BMFace** %fnew, align 8, !dbg !10590
  %100 = load %struct.BMFace*, %struct.BMFace** %fhole, align 8, !dbg !10592
  %cmp69 = icmp ne %struct.BMFace* %99, %100, !dbg !10593
  br i1 %cmp69, label %land.lhs.true, label %if.end73, !dbg !10594

land.lhs.true:                                    ; preds = %for.end68
  %first70 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %fnew_kfedges28, i32 0, i32 0, !dbg !10595
  %101 = load i8*, i8** %first70, align 8, !dbg !10595
  %tobool71 = icmp ne i8* %101, null, !dbg !10596
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !10597

if.then72:                                        ; preds = %land.lhs.true
  %102 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10598
  %103 = load %struct.BMFace*, %struct.BMFace** %fnew, align 8, !dbg !10599
  call void @knife_make_face_cuts(%struct.KnifeTool_OpData* %102, %struct.BMFace* %103, %struct.ListBase* %fnew_kfedges28), !dbg !10600
  br label %if.end73, !dbg !10600

if.end73:                                         ; preds = %if.then72, %land.lhs.true, %for.end68
  %104 = load %struct.BMFace*, %struct.BMFace** %fnew2, align 8, !dbg !10601
  %105 = load %struct.BMFace*, %struct.BMFace** %fhole, align 8, !dbg !10603
  %cmp74 = icmp ne %struct.BMFace* %104, %105, !dbg !10604
  br i1 %cmp74, label %land.lhs.true75, label %if.end79, !dbg !10605

land.lhs.true75:                                  ; preds = %if.end73
  %first76 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %fnew2_kfedges, i32 0, i32 0, !dbg !10606
  %106 = load i8*, i8** %first76, align 8, !dbg !10606
  %tobool77 = icmp ne i8* %106, null, !dbg !10607
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !10608

if.then78:                                        ; preds = %land.lhs.true75
  %107 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10609
  %108 = load %struct.BMFace*, %struct.BMFace** %fnew2, align 8, !dbg !10610
  call void @knife_make_face_cuts(%struct.KnifeTool_OpData* %107, %struct.BMFace* %108, %struct.ListBase* %fnew2_kfedges), !dbg !10611
  br label %if.end79, !dbg !10611

if.end79:                                         ; preds = %if.then78, %land.lhs.true75, %if.end73
  %109 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !10612
  %110 = load %struct.BMFace*, %struct.BMFace** %fhole, align 8, !dbg !10614
  %cmp80 = icmp eq %struct.BMFace* %109, %110, !dbg !10615
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !10616

if.then81:                                        ; preds = %if.end79
  br label %while.end88, !dbg !10617

if.end82:                                         ; preds = %if.end79
  %111 = load %struct.ListBase*, %struct.ListBase** %kfedges.addr, align 8, !dbg !10618
  %call83 = call i32 @BLI_countlist(%struct.ListBase* %111), !dbg !10619
  store i32 %call83, i32* %count, align 4, !dbg !10620
  %112 = load i32, i32* %count, align 4, !dbg !10621
  %113 = load i32, i32* %oldcount, align 4, !dbg !10623
  %cmp84 = icmp sge i32 %112, %113, !dbg !10624
  br i1 %cmp84, label %if.then85, label %if.end86, !dbg !10625

if.then85:                                        ; preds = %if.end82
  br label %while.end88, !dbg !10626

if.end86:                                         ; preds = %if.end82
  %114 = load i32, i32* %count, align 4, !dbg !10628
  store i32 %114, i32* %oldcount, align 4, !dbg !10629
  br label %if.end87, !dbg !10630

if.end87:                                         ; preds = %if.end86, %while.body24
  br label %while.cond21, !dbg !10459, !llvm.loop !10631

while.end88:                                      ; preds = %if.then, %if.then19, %if.then30, %if.then38, %if.then45, %if.else47, %if.then85, %if.then81, %while.cond21
  ret void, !dbg !10633
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3v3(float* %a, float* %b) #0 !dbg !10634 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10635, metadata !DIExpression()), !dbg !10636
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !10637, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !10639, metadata !DIExpression()), !dbg !10640
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !10641
  %0 = load float*, float** %b.addr, align 8, !dbg !10642
  %1 = load float*, float** %a.addr, align 8, !dbg !10643
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !10644
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !10645
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !10646
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !10647
  ret float %call, !dbg !10648
}

declare dso_local void @BLI_insertlinkafter(%struct.ListBase*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.ListBase* @find_chain(%struct.KnifeTool_OpData* %kcd, %struct.ListBase* %fedges) #0 !dbg !10649 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %fedges.addr = alloca %struct.ListBase*, align 8
  %r = alloca %struct.Ref*, align 8
  %ref = alloca %struct.Ref*, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %v1 = alloca %struct.BMVert*, align 8
  %v2 = alloca %struct.BMVert*, align 8
  %ans = alloca %struct.ListBase*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !10652, metadata !DIExpression()), !dbg !10653
  store %struct.ListBase* %fedges, %struct.ListBase** %fedges.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %fedges.addr, metadata !10654, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.declare(metadata %struct.Ref** %r, metadata !10656, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref, metadata !10658, metadata !DIExpression()), !dbg !10659
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !10660, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v1, metadata !10662, metadata !DIExpression()), !dbg !10663
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v2, metadata !10664, metadata !DIExpression()), !dbg !10665
  call void @llvm.dbg.declare(metadata %struct.ListBase** %ans, metadata !10666, metadata !DIExpression()), !dbg !10667
  store %struct.ListBase* null, %struct.ListBase** %ans, align 8, !dbg !10668
  %0 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !10669
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !10671
  %1 = load i8*, i8** %first, align 8, !dbg !10671
  %2 = bitcast i8* %1 to %struct.Ref*, !dbg !10669
  store %struct.Ref* %2, %struct.Ref** %r, align 8, !dbg !10672
  br label %for.cond, !dbg !10673

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !10674
  %tobool = icmp ne %struct.Ref* %3, null, !dbg !10676
  br i1 %tobool, label %for.body, label %for.end, !dbg !10676

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !10677
  %ref1 = getelementptr inbounds %struct.Ref, %struct.Ref* %4, i32 0, i32 2, !dbg !10679
  %5 = load i8*, i8** %ref1, align 8, !dbg !10679
  %6 = bitcast i8* %5 to %struct.KnifeEdge*, !dbg !10677
  store %struct.KnifeEdge* %6, %struct.KnifeEdge** %kfe, align 8, !dbg !10680
  %7 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10681
  %v12 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %7, i32 0, i32 0, !dbg !10682
  %8 = load %struct.KnifeVert*, %struct.KnifeVert** %v12, align 8, !dbg !10682
  %v = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %8, i32 0, i32 0, !dbg !10683
  %9 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10683
  store %struct.BMVert* %9, %struct.BMVert** %v1, align 8, !dbg !10684
  %10 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10685
  %v23 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %10, i32 0, i32 1, !dbg !10686
  %11 = load %struct.KnifeVert*, %struct.KnifeVert** %v23, align 8, !dbg !10686
  %v4 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %11, i32 0, i32 0, !dbg !10687
  %12 = load %struct.BMVert*, %struct.BMVert** %v4, align 8, !dbg !10687
  store %struct.BMVert* %12, %struct.BMVert** %v2, align 8, !dbg !10688
  %13 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !10689
  %tobool5 = icmp ne %struct.BMVert* %13, null, !dbg !10689
  br i1 %tobool5, label %land.lhs.true, label %if.end, !dbg !10691

land.lhs.true:                                    ; preds = %for.body
  %14 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !10692
  %tobool6 = icmp ne %struct.BMVert* %14, null, !dbg !10692
  br i1 %tobool6, label %if.then, label %if.end, !dbg !10693

if.then:                                          ; preds = %land.lhs.true
  %15 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10694
  %call = call %struct.ListBase* @knife_empty_list(%struct.KnifeTool_OpData* %15), !dbg !10696
  store %struct.ListBase* %call, %struct.ListBase** %ans, align 8, !dbg !10697
  %16 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10698
  %17 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !10699
  %18 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10700
  %19 = bitcast %struct.KnifeEdge* %18 to i8*, !dbg !10700
  call void @knife_append_list(%struct.KnifeTool_OpData* %16, %struct.ListBase* %17, i8* %19), !dbg !10701
  br label %for.end, !dbg !10702

if.end:                                           ; preds = %land.lhs.true, %for.body
  %20 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !10703
  %tobool7 = icmp ne %struct.BMVert* %20, null, !dbg !10703
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !10705

if.then8:                                         ; preds = %if.end
  %21 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10706
  %22 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10707
  %23 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !10708
  %24 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !10709
  %call9 = call %struct.ListBase* @find_chain_from_vertex(%struct.KnifeTool_OpData* %21, %struct.KnifeEdge* %22, %struct.BMVert* %23, %struct.ListBase* %24), !dbg !10710
  store %struct.ListBase* %call9, %struct.ListBase** %ans, align 8, !dbg !10711
  br label %if.end14, !dbg !10712

if.else:                                          ; preds = %if.end
  %25 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !10713
  %tobool10 = icmp ne %struct.BMVert* %25, null, !dbg !10713
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !10715

if.then11:                                        ; preds = %if.else
  %26 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10716
  %27 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10717
  %28 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !10718
  %29 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !10719
  %call12 = call %struct.ListBase* @find_chain_from_vertex(%struct.KnifeTool_OpData* %26, %struct.KnifeEdge* %27, %struct.BMVert* %28, %struct.ListBase* %29), !dbg !10720
  store %struct.ListBase* %call12, %struct.ListBase** %ans, align 8, !dbg !10721
  br label %if.end13, !dbg !10722

if.end13:                                         ; preds = %if.then11, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then8
  %30 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !10723
  %tobool15 = icmp ne %struct.ListBase* %30, null, !dbg !10723
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !10725

if.then16:                                        ; preds = %if.end14
  br label %for.end, !dbg !10726

if.end17:                                         ; preds = %if.end14
  br label %for.inc, !dbg !10727

for.inc:                                          ; preds = %if.end17
  %31 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !10728
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %31, i32 0, i32 0, !dbg !10729
  %32 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !10729
  store %struct.Ref* %32, %struct.Ref** %r, align 8, !dbg !10730
  br label %for.cond, !dbg !10731, !llvm.loop !10732

for.end:                                          ; preds = %if.then16, %if.then, %for.cond
  %33 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !10734
  %tobool18 = icmp ne %struct.ListBase* %33, null, !dbg !10734
  br i1 %tobool18, label %if.then19, label %if.end29, !dbg !10736

if.then19:                                        ; preds = %for.end
  %34 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !10737
  %first20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %34, i32 0, i32 0, !dbg !10740
  %35 = load i8*, i8** %first20, align 8, !dbg !10740
  %36 = bitcast i8* %35 to %struct.Ref*, !dbg !10737
  store %struct.Ref* %36, %struct.Ref** %r, align 8, !dbg !10741
  br label %for.cond21, !dbg !10742

for.cond21:                                       ; preds = %for.inc26, %if.then19
  %37 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !10743
  %tobool22 = icmp ne %struct.Ref* %37, null, !dbg !10745
  br i1 %tobool22, label %for.body23, label %for.end28, !dbg !10745

for.body23:                                       ; preds = %for.cond21
  %38 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !10746
  %39 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !10748
  %ref24 = getelementptr inbounds %struct.Ref, %struct.Ref* %39, i32 0, i32 2, !dbg !10749
  %40 = load i8*, i8** %ref24, align 8, !dbg !10749
  %call25 = call %struct.Ref* @find_ref(%struct.ListBase* %38, i8* %40), !dbg !10750
  store %struct.Ref* %call25, %struct.Ref** %ref, align 8, !dbg !10751
  %41 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !10752
  %42 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10753
  %43 = bitcast %struct.Ref* %42 to i8*, !dbg !10753
  call void @BLI_remlink(%struct.ListBase* %41, i8* %43), !dbg !10754
  br label %for.inc26, !dbg !10755

for.inc26:                                        ; preds = %for.body23
  %44 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !10756
  %next27 = getelementptr inbounds %struct.Ref, %struct.Ref* %44, i32 0, i32 0, !dbg !10757
  %45 = load %struct.Ref*, %struct.Ref** %next27, align 8, !dbg !10757
  store %struct.Ref* %45, %struct.Ref** %r, align 8, !dbg !10758
  br label %for.cond21, !dbg !10759, !llvm.loop !10760

for.end28:                                        ; preds = %for.cond21
  br label %if.end29, !dbg !10762

if.end29:                                         ; preds = %for.end28, %for.end
  %46 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !10763
  ret %struct.ListBase* %46, !dbg !10764
}

; Function Attrs: noinline nounwind uwtable
define internal void @knife_make_chain_cut(%struct.KnifeTool_OpData* %kcd, %struct.BMFace* %f, %struct.ListBase* %chain, %struct.BMFace** %r_f_new) #0 !dbg !10765 {
entry:
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %chain.addr = alloca %struct.ListBase*, align 8
  %r_f_new.addr = alloca %struct.BMFace**, align 8
  %bm = alloca %struct.BMesh*, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %kfelast = alloca %struct.KnifeEdge*, align 8
  %v1 = alloca %struct.BMVert*, align 8
  %v2 = alloca %struct.BMVert*, align 8
  %l_v1 = alloca %struct.BMLoop*, align 8
  %l_v2 = alloca %struct.BMLoop*, align 8
  %f_new = alloca %struct.BMFace*, align 8
  %ref = alloca %struct.Ref*, align 8
  %kfv = alloca %struct.KnifeVert*, align 8
  %kfvprev = alloca %struct.KnifeVert*, align 8
  %l_new = alloca %struct.BMLoop*, align 8
  %l_iter = alloca %struct.BMLoop*, align 8
  %i = alloca i32, align 4
  %nco = alloca i32, align 4
  %cos = alloca [3 x float]*, align 8
  %kverts = alloca %struct.KnifeVert**, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !10768, metadata !DIExpression()), !dbg !10769
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !10770, metadata !DIExpression()), !dbg !10771
  store %struct.ListBase* %chain, %struct.ListBase** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %chain.addr, metadata !10772, metadata !DIExpression()), !dbg !10773
  store %struct.BMFace** %r_f_new, %struct.BMFace*** %r_f_new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %r_f_new.addr, metadata !10774, metadata !DIExpression()), !dbg !10775
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !10776, metadata !DIExpression()), !dbg !10777
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10778
  %em = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %0, i32 0, i32 5, !dbg !10779
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10779
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !10780
  %2 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !10780
  store %struct.BMesh* %2, %struct.BMesh** %bm, align 8, !dbg !10777
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !10781, metadata !DIExpression()), !dbg !10782
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfelast, metadata !10783, metadata !DIExpression()), !dbg !10784
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v1, metadata !10785, metadata !DIExpression()), !dbg !10786
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v2, metadata !10787, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_v1, metadata !10789, metadata !DIExpression()), !dbg !10790
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_v2, metadata !10791, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f_new, metadata !10793, metadata !DIExpression()), !dbg !10794
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref, metadata !10795, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv, metadata !10797, metadata !DIExpression()), !dbg !10798
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfvprev, metadata !10799, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_new, metadata !10801, metadata !DIExpression()), !dbg !10802
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !10803, metadata !DIExpression()), !dbg !10804
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10805, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.declare(metadata i32* %nco, metadata !10807, metadata !DIExpression()), !dbg !10808
  %3 = load %struct.ListBase*, %struct.ListBase** %chain.addr, align 8, !dbg !10809
  %call = call i32 @BLI_countlist(%struct.ListBase* %3), !dbg !10810
  %sub = sub nsw i32 %call, 1, !dbg !10811
  store i32 %sub, i32* %nco, align 4, !dbg !10808
  call void @llvm.dbg.declare(metadata [3 x float]** %cos, metadata !10812, metadata !DIExpression()), !dbg !10813
  %4 = load i32, i32* %nco, align 4, !dbg !10814
  %conv = sext i32 %4 to i64, !dbg !10814
  %mul = mul i64 12, %conv, !dbg !10814
  %5 = alloca i8, i64 %mul, align 16, !dbg !10814
  %6 = bitcast i8* %5 to [3 x float]*, !dbg !10814
  store [3 x float]* %6, [3 x float]** %cos, align 8, !dbg !10813
  call void @llvm.dbg.declare(metadata %struct.KnifeVert*** %kverts, metadata !10815, metadata !DIExpression()), !dbg !10817
  %7 = load i32, i32* %nco, align 4, !dbg !10818
  %conv2 = sext i32 %7 to i64, !dbg !10818
  %mul3 = mul i64 8, %conv2, !dbg !10818
  %8 = alloca i8, i64 %mul3, align 16, !dbg !10818
  %9 = bitcast i8* %8 to %struct.KnifeVert**, !dbg !10818
  store %struct.KnifeVert** %9, %struct.KnifeVert*** %kverts, align 8, !dbg !10817
  %10 = load %struct.ListBase*, %struct.ListBase** %chain.addr, align 8, !dbg !10819
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %10, i32 0, i32 0, !dbg !10820
  %11 = load i8*, i8** %first, align 8, !dbg !10820
  %12 = bitcast i8* %11 to %struct.Ref*, !dbg !10821
  %ref4 = getelementptr inbounds %struct.Ref, %struct.Ref* %12, i32 0, i32 2, !dbg !10822
  %13 = load i8*, i8** %ref4, align 8, !dbg !10822
  %14 = bitcast i8* %13 to %struct.KnifeEdge*, !dbg !10823
  store %struct.KnifeEdge* %14, %struct.KnifeEdge** %kfe, align 8, !dbg !10824
  %15 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10825
  %v15 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %15, i32 0, i32 0, !dbg !10826
  %16 = load %struct.KnifeVert*, %struct.KnifeVert** %v15, align 8, !dbg !10826
  %v = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %16, i32 0, i32 0, !dbg !10827
  %17 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10827
  %tobool = icmp ne %struct.BMVert* %17, null, !dbg !10825
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10825

cond.true:                                        ; preds = %entry
  %18 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10828
  %v16 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %18, i32 0, i32 0, !dbg !10829
  %19 = load %struct.KnifeVert*, %struct.KnifeVert** %v16, align 8, !dbg !10829
  %v7 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %19, i32 0, i32 0, !dbg !10830
  %20 = load %struct.BMVert*, %struct.BMVert** %v7, align 8, !dbg !10830
  br label %cond.end, !dbg !10825

cond.false:                                       ; preds = %entry
  %21 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10831
  %v28 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %21, i32 0, i32 1, !dbg !10832
  %22 = load %struct.KnifeVert*, %struct.KnifeVert** %v28, align 8, !dbg !10832
  %v9 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %22, i32 0, i32 0, !dbg !10833
  %23 = load %struct.BMVert*, %struct.BMVert** %v9, align 8, !dbg !10833
  br label %cond.end, !dbg !10825

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.BMVert* [ %20, %cond.true ], [ %23, %cond.false ], !dbg !10825
  store %struct.BMVert* %cond, %struct.BMVert** %v1, align 8, !dbg !10834
  %24 = load %struct.ListBase*, %struct.ListBase** %chain.addr, align 8, !dbg !10835
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %24, i32 0, i32 1, !dbg !10836
  %25 = load i8*, i8** %last, align 8, !dbg !10836
  %26 = bitcast i8* %25 to %struct.Ref*, !dbg !10837
  %ref10 = getelementptr inbounds %struct.Ref, %struct.Ref* %26, i32 0, i32 2, !dbg !10838
  %27 = load i8*, i8** %ref10, align 8, !dbg !10838
  %28 = bitcast i8* %27 to %struct.KnifeEdge*, !dbg !10839
  store %struct.KnifeEdge* %28, %struct.KnifeEdge** %kfelast, align 8, !dbg !10840
  %29 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfelast, align 8, !dbg !10841
  %v211 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %29, i32 0, i32 1, !dbg !10842
  %30 = load %struct.KnifeVert*, %struct.KnifeVert** %v211, align 8, !dbg !10842
  %v12 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %30, i32 0, i32 0, !dbg !10843
  %31 = load %struct.BMVert*, %struct.BMVert** %v12, align 8, !dbg !10843
  %tobool13 = icmp ne %struct.BMVert* %31, null, !dbg !10841
  br i1 %tobool13, label %cond.true14, label %cond.false18, !dbg !10841

cond.true14:                                      ; preds = %cond.end
  %32 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfelast, align 8, !dbg !10844
  %v215 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %32, i32 0, i32 1, !dbg !10845
  %33 = load %struct.KnifeVert*, %struct.KnifeVert** %v215, align 8, !dbg !10845
  %v17 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %33, i32 0, i32 0, !dbg !10846
  %34 = load %struct.BMVert*, %struct.BMVert** %v17, align 8, !dbg !10846
  br label %cond.end21, !dbg !10841

cond.false18:                                     ; preds = %cond.end
  %35 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfelast, align 8, !dbg !10847
  %v119 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %35, i32 0, i32 0, !dbg !10848
  %36 = load %struct.KnifeVert*, %struct.KnifeVert** %v119, align 8, !dbg !10848
  %v20 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %36, i32 0, i32 0, !dbg !10849
  %37 = load %struct.BMVert*, %struct.BMVert** %v20, align 8, !dbg !10849
  br label %cond.end21, !dbg !10841

cond.end21:                                       ; preds = %cond.false18, %cond.true14
  %cond22 = phi %struct.BMVert* [ %34, %cond.true14 ], [ %37, %cond.false18 ], !dbg !10841
  store %struct.BMVert* %cond22, %struct.BMVert** %v2, align 8, !dbg !10850
  %38 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10851
  %v123 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %38, i32 0, i32 0, !dbg !10852
  %39 = load %struct.KnifeVert*, %struct.KnifeVert** %v123, align 8, !dbg !10852
  %v24 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %39, i32 0, i32 0, !dbg !10853
  %40 = load %struct.BMVert*, %struct.BMVert** %v24, align 8, !dbg !10853
  %41 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !10854
  %cmp = icmp eq %struct.BMVert* %40, %41, !dbg !10855
  br i1 %cmp, label %cond.true26, label %cond.false28, !dbg !10851

cond.true26:                                      ; preds = %cond.end21
  %42 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10856
  %v127 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %42, i32 0, i32 0, !dbg !10857
  %43 = load %struct.KnifeVert*, %struct.KnifeVert** %v127, align 8, !dbg !10857
  br label %cond.end30, !dbg !10851

cond.false28:                                     ; preds = %cond.end21
  %44 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10858
  %v229 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %44, i32 0, i32 1, !dbg !10859
  %45 = load %struct.KnifeVert*, %struct.KnifeVert** %v229, align 8, !dbg !10859
  br label %cond.end30, !dbg !10851

cond.end30:                                       ; preds = %cond.false28, %cond.true26
  %cond31 = phi %struct.KnifeVert* [ %43, %cond.true26 ], [ %45, %cond.false28 ], !dbg !10851
  store %struct.KnifeVert* %cond31, %struct.KnifeVert** %kfvprev, align 8, !dbg !10860
  %46 = load %struct.ListBase*, %struct.ListBase** %chain.addr, align 8, !dbg !10861
  %first32 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %46, i32 0, i32 0, !dbg !10863
  %47 = load i8*, i8** %first32, align 8, !dbg !10863
  %48 = bitcast i8* %47 to %struct.Ref*, !dbg !10861
  store %struct.Ref* %48, %struct.Ref** %ref, align 8, !dbg !10864
  store i32 0, i32* %i, align 4, !dbg !10865
  br label %for.cond, !dbg !10866

for.cond:                                         ; preds = %for.inc, %cond.end30
  %49 = load i32, i32* %i, align 4, !dbg !10867
  %50 = load i32, i32* %nco, align 4, !dbg !10869
  %cmp33 = icmp slt i32 %49, %50, !dbg !10870
  br i1 %cmp33, label %land.rhs, label %land.end, !dbg !10871

land.rhs:                                         ; preds = %for.cond
  %51 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10872
  %52 = load %struct.ListBase*, %struct.ListBase** %chain.addr, align 8, !dbg !10873
  %last35 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %52, i32 0, i32 1, !dbg !10874
  %53 = load i8*, i8** %last35, align 8, !dbg !10874
  %54 = bitcast i8* %53 to %struct.Ref*, !dbg !10873
  %cmp36 = icmp ne %struct.Ref* %51, %54, !dbg !10875
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %55 = phi i1 [ false, %for.cond ], [ %cmp36, %land.rhs ], !dbg !10876
  br i1 %55, label %for.body, label %for.end, !dbg !10877

for.body:                                         ; preds = %land.end
  %56 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10878
  %ref38 = getelementptr inbounds %struct.Ref, %struct.Ref* %56, i32 0, i32 2, !dbg !10880
  %57 = load i8*, i8** %ref38, align 8, !dbg !10880
  %58 = bitcast i8* %57 to %struct.KnifeEdge*, !dbg !10878
  store %struct.KnifeEdge* %58, %struct.KnifeEdge** %kfe, align 8, !dbg !10881
  %59 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10882
  %v139 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %59, i32 0, i32 0, !dbg !10883
  %60 = load %struct.KnifeVert*, %struct.KnifeVert** %v139, align 8, !dbg !10883
  %61 = load %struct.KnifeVert*, %struct.KnifeVert** %kfvprev, align 8, !dbg !10884
  %cmp40 = icmp eq %struct.KnifeVert* %60, %61, !dbg !10885
  br i1 %cmp40, label %cond.true42, label %cond.false44, !dbg !10882

cond.true42:                                      ; preds = %for.body
  %62 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10886
  %v243 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %62, i32 0, i32 1, !dbg !10887
  %63 = load %struct.KnifeVert*, %struct.KnifeVert** %v243, align 8, !dbg !10887
  br label %cond.end46, !dbg !10882

cond.false44:                                     ; preds = %for.body
  %64 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !10888
  %v145 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %64, i32 0, i32 0, !dbg !10889
  %65 = load %struct.KnifeVert*, %struct.KnifeVert** %v145, align 8, !dbg !10889
  br label %cond.end46, !dbg !10882

cond.end46:                                       ; preds = %cond.false44, %cond.true42
  %cond47 = phi %struct.KnifeVert* [ %63, %cond.true42 ], [ %65, %cond.false44 ], !dbg !10882
  store %struct.KnifeVert* %cond47, %struct.KnifeVert** %kfv, align 8, !dbg !10890
  %66 = load [3 x float]*, [3 x float]** %cos, align 8, !dbg !10891
  %67 = load i32, i32* %i, align 4, !dbg !10892
  %idxprom = sext i32 %67 to i64, !dbg !10891
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %66, i64 %idxprom, !dbg !10891
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !10891
  %68 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !10893
  %co = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %68, i32 0, i32 3, !dbg !10894
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10893
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay48), !dbg !10895
  %69 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !10896
  %70 = load %struct.KnifeVert**, %struct.KnifeVert*** %kverts, align 8, !dbg !10897
  %71 = load i32, i32* %i, align 4, !dbg !10898
  %idxprom49 = sext i32 %71 to i64, !dbg !10897
  %arrayidx50 = getelementptr inbounds %struct.KnifeVert*, %struct.KnifeVert** %70, i64 %idxprom49, !dbg !10897
  store %struct.KnifeVert* %69, %struct.KnifeVert** %arrayidx50, align 8, !dbg !10899
  %72 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !10900
  store %struct.KnifeVert* %72, %struct.KnifeVert** %kfvprev, align 8, !dbg !10901
  br label %for.inc, !dbg !10902

for.inc:                                          ; preds = %cond.end46
  %73 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !10903
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %73, i32 0, i32 0, !dbg !10904
  %74 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !10904
  store %struct.Ref* %74, %struct.Ref** %ref, align 8, !dbg !10905
  %75 = load i32, i32* %i, align 4, !dbg !10906
  %inc = add nsw i32 %75, 1, !dbg !10906
  store i32 %inc, i32* %i, align 4, !dbg !10906
  br label %for.cond, !dbg !10907, !llvm.loop !10908

for.end:                                          ; preds = %land.end
  store %struct.BMLoop* null, %struct.BMLoop** %l_new, align 8, !dbg !10910
  %76 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !10911
  %77 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !10913
  %call51 = call %struct.BMLoop* @BM_face_vert_share_loop(%struct.BMFace* %76, %struct.BMVert* %77), !dbg !10914
  store %struct.BMLoop* %call51, %struct.BMLoop** %l_v1, align 8, !dbg !10915
  %tobool52 = icmp ne %struct.BMLoop* %call51, null, !dbg !10915
  br i1 %tobool52, label %land.lhs.true, label %if.else86, !dbg !10916

land.lhs.true:                                    ; preds = %for.end
  %78 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !10917
  %79 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !10918
  %call53 = call %struct.BMLoop* @BM_face_vert_share_loop(%struct.BMFace* %78, %struct.BMVert* %79), !dbg !10919
  store %struct.BMLoop* %call53, %struct.BMLoop** %l_v2, align 8, !dbg !10920
  %tobool54 = icmp ne %struct.BMLoop* %call53, null, !dbg !10920
  br i1 %tobool54, label %if.then, label %if.else86, !dbg !10921

if.then:                                          ; preds = %land.lhs.true
  %80 = load i32, i32* %nco, align 4, !dbg !10922
  %cmp55 = icmp eq i32 %80, 0, !dbg !10925
  br i1 %cmp55, label %if.then57, label %if.else64, !dbg !10926

if.then57:                                        ; preds = %if.then
  %81 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !10927
  %82 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !10930
  %cmp58 = icmp eq %struct.BMVert* %81, %82, !dbg !10931
  br i1 %cmp58, label %if.then62, label %lor.lhs.false, !dbg !10932

lor.lhs.false:                                    ; preds = %if.then57
  %83 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !10933
  %84 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !10934
  %call60 = call %struct.BMEdge* @BM_edge_exists(%struct.BMVert* %83, %struct.BMVert* %84), !dbg !10935
  %tobool61 = icmp ne %struct.BMEdge* %call60, null, !dbg !10935
  br i1 %tobool61, label %if.then62, label %if.else, !dbg !10936

if.then62:                                        ; preds = %lor.lhs.false, %if.then57
  store %struct.BMFace* null, %struct.BMFace** %f_new, align 8, !dbg !10937
  br label %if.end, !dbg !10939

if.else:                                          ; preds = %lor.lhs.false
  %85 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10940
  %86 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !10942
  %87 = load %struct.BMLoop*, %struct.BMLoop** %l_v1, align 8, !dbg !10943
  %88 = load %struct.BMLoop*, %struct.BMLoop** %l_v2, align 8, !dbg !10944
  %call63 = call %struct.BMFace* @BM_face_split(%struct.BMesh* %85, %struct.BMFace* %86, %struct.BMLoop* %87, %struct.BMLoop* %88, %struct.BMLoop** %l_new, %struct.BMEdge* null, i8 zeroext 1), !dbg !10945
  store %struct.BMFace* %call63, %struct.BMFace** %f_new, align 8, !dbg !10946
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then62
  br label %if.end85, !dbg !10947

if.else64:                                        ; preds = %if.then
  %89 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10948
  %90 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !10950
  %91 = load %struct.BMLoop*, %struct.BMLoop** %l_v1, align 8, !dbg !10951
  %92 = load %struct.BMLoop*, %struct.BMLoop** %l_v2, align 8, !dbg !10952
  %93 = load [3 x float]*, [3 x float]** %cos, align 8, !dbg !10953
  %94 = load i32, i32* %nco, align 4, !dbg !10954
  %call65 = call %struct.BMFace* @BM_face_split_n(%struct.BMesh* %89, %struct.BMFace* %90, %struct.BMLoop* %91, %struct.BMLoop* %92, [3 x float]* %93, i32 %94, %struct.BMLoop** %l_new, %struct.BMEdge* null), !dbg !10955
  store %struct.BMFace* %call65, %struct.BMFace** %f_new, align 8, !dbg !10956
  %95 = load %struct.BMFace*, %struct.BMFace** %f_new, align 8, !dbg !10957
  %tobool66 = icmp ne %struct.BMFace* %95, null, !dbg !10957
  br i1 %tobool66, label %if.then67, label %if.end84, !dbg !10959

if.then67:                                        ; preds = %if.else64
  %96 = load %struct.BMLoop*, %struct.BMLoop** %l_new, align 8, !dbg !10960
  %next68 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %96, i32 0, i32 6, !dbg !10963
  %97 = load %struct.BMLoop*, %struct.BMLoop** %next68, align 8, !dbg !10963
  store %struct.BMLoop* %97, %struct.BMLoop** %l_iter, align 8, !dbg !10964
  store i32 0, i32* %i, align 4, !dbg !10965
  br label %for.cond69, !dbg !10966

for.cond69:                                       ; preds = %for.inc80, %if.then67
  %98 = load i32, i32* %i, align 4, !dbg !10967
  %99 = load i32, i32* %nco, align 4, !dbg !10969
  %cmp70 = icmp slt i32 %98, %99, !dbg !10970
  br i1 %cmp70, label %for.body72, label %for.end83, !dbg !10971

for.body72:                                       ; preds = %for.cond69
  %100 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !10972
  %select_result = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %100, i32 0, i32 30, !dbg !10975
  %101 = load i8, i8* %select_result, align 1, !dbg !10975
  %tobool73 = icmp ne i8 %101, 0, !dbg !10972
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !10976

if.then74:                                        ; preds = %for.body72
  %102 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10977
  %103 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !10979
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %103, i32 0, i32 2, !dbg !10980
  %104 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !10980
  call void @BM_edge_select_set(%struct.BMesh* %102, %struct.BMEdge* %104, i8 zeroext 1), !dbg !10981
  br label %if.end75, !dbg !10982

if.end75:                                         ; preds = %if.then74, %for.body72
  %105 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !10983
  %v76 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %105, i32 0, i32 1, !dbg !10984
  %106 = load %struct.BMVert*, %struct.BMVert** %v76, align 8, !dbg !10984
  %107 = load %struct.KnifeVert**, %struct.KnifeVert*** %kverts, align 8, !dbg !10985
  %108 = load i32, i32* %i, align 4, !dbg !10986
  %idxprom77 = sext i32 %108 to i64, !dbg !10985
  %arrayidx78 = getelementptr inbounds %struct.KnifeVert*, %struct.KnifeVert** %107, i64 %idxprom77, !dbg !10985
  %109 = load %struct.KnifeVert*, %struct.KnifeVert** %arrayidx78, align 8, !dbg !10985
  %v79 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %109, i32 0, i32 0, !dbg !10987
  store %struct.BMVert* %106, %struct.BMVert** %v79, align 8, !dbg !10988
  br label %for.inc80, !dbg !10989

for.inc80:                                        ; preds = %if.end75
  %110 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !10990
  %next81 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %110, i32 0, i32 6, !dbg !10991
  %111 = load %struct.BMLoop*, %struct.BMLoop** %next81, align 8, !dbg !10991
  store %struct.BMLoop* %111, %struct.BMLoop** %l_iter, align 8, !dbg !10992
  %112 = load i32, i32* %i, align 4, !dbg !10993
  %inc82 = add nsw i32 %112, 1, !dbg !10993
  store i32 %inc82, i32* %i, align 4, !dbg !10993
  br label %for.cond69, !dbg !10994, !llvm.loop !10995

for.end83:                                        ; preds = %for.cond69
  br label %if.end84, !dbg !10997

if.end84:                                         ; preds = %for.end83, %if.else64
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end
  br label %if.end87, !dbg !10998

if.else86:                                        ; preds = %land.lhs.true, %for.end
  store %struct.BMFace* null, %struct.BMFace** %f_new, align 8, !dbg !10999
  br label %if.end87

if.end87:                                         ; preds = %if.else86, %if.end85
  %113 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11001
  %select_result88 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %113, i32 0, i32 30, !dbg !11003
  %114 = load i8, i8* %select_result88, align 1, !dbg !11003
  %tobool89 = icmp ne i8 %114, 0, !dbg !11001
  br i1 %tobool89, label %if.then90, label %if.else95, !dbg !11004

if.then90:                                        ; preds = %if.end87
  %115 = load %struct.BMLoop*, %struct.BMLoop** %l_new, align 8, !dbg !11005
  %tobool91 = icmp ne %struct.BMLoop* %115, null, !dbg !11005
  br i1 %tobool91, label %if.then92, label %if.end94, !dbg !11008

if.then92:                                        ; preds = %if.then90
  %116 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11009
  %117 = load %struct.BMLoop*, %struct.BMLoop** %l_new, align 8, !dbg !11011
  %e93 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %117, i32 0, i32 2, !dbg !11012
  %118 = load %struct.BMEdge*, %struct.BMEdge** %e93, align 8, !dbg !11012
  call void @BM_edge_select_set(%struct.BMesh* %116, %struct.BMEdge* %118, i8 zeroext 1), !dbg !11013
  br label %if.end94, !dbg !11014

if.end94:                                         ; preds = %if.then92, %if.then90
  br label %if.end99, !dbg !11015

if.else95:                                        ; preds = %if.end87
  %119 = load %struct.BMFace*, %struct.BMFace** %f_new, align 8, !dbg !11016
  %tobool96 = icmp ne %struct.BMFace* %119, null, !dbg !11016
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !11018

if.then97:                                        ; preds = %if.else95
  %120 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11019
  %121 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11021
  %122 = load %struct.BMFace*, %struct.BMFace** %f_new, align 8, !dbg !11022
  %123 = bitcast %struct.BMFace* %122 to i8*, !dbg !11022
  %124 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !11023
  %125 = bitcast %struct.BMFace* %124 to i8*, !dbg !11023
  call void @BM_elem_select_copy(%struct.BMesh* %120, %struct.BMesh* %121, i8* %123, i8* %125), !dbg !11024
  br label %if.end98, !dbg !11025

if.end98:                                         ; preds = %if.then97, %if.else95
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.end94
  %126 = load %struct.BMFace*, %struct.BMFace** %f_new, align 8, !dbg !11026
  %127 = load %struct.BMFace**, %struct.BMFace*** %r_f_new.addr, align 8, !dbg !11027
  store %struct.BMFace* %126, %struct.BMFace** %127, align 8, !dbg !11028
  ret void, !dbg !11029
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @knife_edge_in_face(%struct.KnifeEdge* %kfe, %struct.BMFace* %f) #0 !dbg !11030 {
entry:
  %kfe.addr = alloca %struct.KnifeEdge*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  store %struct.KnifeEdge* %kfe, %struct.KnifeEdge** %kfe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe.addr, metadata !11033, metadata !DIExpression()), !dbg !11034
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !11035, metadata !DIExpression()), !dbg !11036
  %0 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !11037
  %v1 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %0, i32 0, i32 0, !dbg !11038
  %1 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !11038
  %2 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !11039
  %v2 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %2, i32 0, i32 1, !dbg !11040
  %3 = load %struct.KnifeVert*, %struct.KnifeVert** %v2, align 8, !dbg !11040
  %4 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !11041
  %call = call zeroext i8 @knife_verts_edge_in_face(%struct.KnifeVert* %1, %struct.KnifeVert* %3, %struct.BMFace* %4), !dbg !11042
  ret i8 %call, !dbg !11043
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ListBase* @find_hole(%struct.KnifeTool_OpData* %kcd, %struct.ListBase* %fedges) #0 !dbg !11044 {
entry:
  %retval = alloca %struct.ListBase*, align 8
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %fedges.addr = alloca %struct.ListBase*, align 8
  %ans = alloca %struct.ListBase*, align 8
  %r = alloca %struct.Ref*, align 8
  %ref = alloca %struct.Ref*, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %visited_ = alloca %struct.SmallHash, align 8
  %visited = alloca %struct.SmallHash*, align 8
  %found = alloca i8, align 1
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !11045, metadata !DIExpression()), !dbg !11046
  store %struct.ListBase* %fedges, %struct.ListBase** %fedges.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %fedges.addr, metadata !11047, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.declare(metadata %struct.ListBase** %ans, metadata !11049, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.declare(metadata %struct.Ref** %r, metadata !11051, metadata !DIExpression()), !dbg !11052
  call void @llvm.dbg.declare(metadata %struct.Ref** %ref, metadata !11053, metadata !DIExpression()), !dbg !11054
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !11055, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.declare(metadata %struct.SmallHash* %visited_, metadata !11057, metadata !DIExpression()), !dbg !11058
  call void @llvm.dbg.declare(metadata %struct.SmallHash** %visited, metadata !11059, metadata !DIExpression()), !dbg !11060
  store %struct.SmallHash* %visited_, %struct.SmallHash** %visited, align 8, !dbg !11060
  call void @llvm.dbg.declare(metadata i8* %found, metadata !11061, metadata !DIExpression()), !dbg !11062
  store %struct.ListBase* null, %struct.ListBase** %ans, align 8, !dbg !11063
  store i8 0, i8* %found, align 1, !dbg !11064
  %0 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !11065
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !11067
  %1 = load i8*, i8** %first, align 8, !dbg !11067
  %2 = bitcast i8* %1 to %struct.Ref*, !dbg !11065
  store %struct.Ref* %2, %struct.Ref** %r, align 8, !dbg !11068
  br label %for.cond, !dbg !11069

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11070
  %tobool = icmp ne %struct.Ref* %3, null, !dbg !11070
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11072

land.rhs:                                         ; preds = %for.cond
  %4 = load i8, i8* %found, align 1, !dbg !11073
  %tobool1 = icmp ne i8 %4, 0, !dbg !11074
  %lnot = xor i1 %tobool1, true, !dbg !11074
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %lnot, %land.rhs ], !dbg !11075
  br i1 %5, label %for.body, label %for.end, !dbg !11076

for.body:                                         ; preds = %land.end
  %6 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11077
  %ref2 = getelementptr inbounds %struct.Ref, %struct.Ref* %6, i32 0, i32 2, !dbg !11079
  %7 = load i8*, i8** %ref2, align 8, !dbg !11079
  %8 = bitcast i8* %7 to %struct.KnifeEdge*, !dbg !11077
  store %struct.KnifeEdge* %8, %struct.KnifeEdge** %kfe, align 8, !dbg !11080
  %9 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11081
  %v1 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %9, i32 0, i32 0, !dbg !11083
  %10 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !11083
  %v = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %10, i32 0, i32 0, !dbg !11084
  %11 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11084
  %tobool3 = icmp ne %struct.BMVert* %11, null, !dbg !11081
  br i1 %tobool3, label %if.then, label %lor.lhs.false, !dbg !11085

lor.lhs.false:                                    ; preds = %for.body
  %12 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11086
  %v2 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %12, i32 0, i32 1, !dbg !11087
  %13 = load %struct.KnifeVert*, %struct.KnifeVert** %v2, align 8, !dbg !11087
  %v4 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %13, i32 0, i32 0, !dbg !11088
  %14 = load %struct.BMVert*, %struct.BMVert** %v4, align 8, !dbg !11088
  %tobool5 = icmp ne %struct.BMVert* %14, null, !dbg !11086
  br i1 %tobool5, label %if.then, label %lor.lhs.false6, !dbg !11089

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %15 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11090
  %v17 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %15, i32 0, i32 0, !dbg !11091
  %16 = load %struct.KnifeVert*, %struct.KnifeVert** %v17, align 8, !dbg !11091
  %17 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11092
  %v28 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %17, i32 0, i32 1, !dbg !11093
  %18 = load %struct.KnifeVert*, %struct.KnifeVert** %v28, align 8, !dbg !11093
  %cmp = icmp eq %struct.KnifeVert* %16, %18, !dbg !11094
  br i1 %cmp, label %if.then, label %if.end, !dbg !11095

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !11096

if.end:                                           ; preds = %lor.lhs.false6
  %19 = load %struct.SmallHash*, %struct.SmallHash** %visited, align 8, !dbg !11097
  call void @BLI_smallhash_init(%struct.SmallHash* %19), !dbg !11098
  %20 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11099
  %call = call %struct.ListBase* @knife_empty_list(%struct.KnifeTool_OpData* %20), !dbg !11100
  store %struct.ListBase* %call, %struct.ListBase** %ans, align 8, !dbg !11101
  %21 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11102
  %22 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !11103
  %23 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11104
  %24 = bitcast %struct.KnifeEdge* %23 to i8*, !dbg !11104
  call void @knife_append_list(%struct.KnifeTool_OpData* %21, %struct.ListBase* %22, i8* %24), !dbg !11105
  %25 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11106
  %26 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11107
  %v19 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %26, i32 0, i32 0, !dbg !11108
  %27 = load %struct.KnifeVert*, %struct.KnifeVert** %v19, align 8, !dbg !11108
  %28 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11109
  %v210 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %28, i32 0, i32 1, !dbg !11110
  %29 = load %struct.KnifeVert*, %struct.KnifeVert** %v210, align 8, !dbg !11110
  %30 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !11111
  %31 = load %struct.SmallHash*, %struct.SmallHash** %visited, align 8, !dbg !11112
  %32 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !11113
  %call11 = call zeroext i8 @find_hole_search(%struct.KnifeTool_OpData* %25, %struct.KnifeVert* %27, %struct.KnifeVert* %29, %struct.ListBase* %30, %struct.SmallHash* %31, %struct.ListBase* %32), !dbg !11114
  store i8 %call11, i8* %found, align 1, !dbg !11115
  %33 = load %struct.SmallHash*, %struct.SmallHash** %visited, align 8, !dbg !11116
  call void @BLI_smallhash_release(%struct.SmallHash* %33), !dbg !11117
  br label %for.inc, !dbg !11118

for.inc:                                          ; preds = %if.end, %if.then
  %34 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11119
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %34, i32 0, i32 0, !dbg !11120
  %35 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !11120
  store %struct.Ref* %35, %struct.Ref** %r, align 8, !dbg !11121
  br label %for.cond, !dbg !11122, !llvm.loop !11123

for.end:                                          ; preds = %land.end
  %36 = load i8, i8* %found, align 1, !dbg !11125
  %tobool12 = icmp ne i8 %36, 0, !dbg !11125
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !11127

if.then13:                                        ; preds = %for.end
  %37 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !11128
  %first14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %37, i32 0, i32 0, !dbg !11131
  %38 = load i8*, i8** %first14, align 8, !dbg !11131
  %39 = bitcast i8* %38 to %struct.Ref*, !dbg !11128
  store %struct.Ref* %39, %struct.Ref** %r, align 8, !dbg !11132
  br label %for.cond15, !dbg !11133

for.cond15:                                       ; preds = %for.inc24, %if.then13
  %40 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11134
  %tobool16 = icmp ne %struct.Ref* %40, null, !dbg !11136
  br i1 %tobool16, label %for.body17, label %for.end26, !dbg !11136

for.body17:                                       ; preds = %for.cond15
  %41 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11137
  %ref18 = getelementptr inbounds %struct.Ref, %struct.Ref* %41, i32 0, i32 2, !dbg !11139
  %42 = load i8*, i8** %ref18, align 8, !dbg !11139
  %43 = bitcast i8* %42 to %struct.KnifeEdge*, !dbg !11137
  store %struct.KnifeEdge* %43, %struct.KnifeEdge** %kfe, align 8, !dbg !11140
  %44 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !11141
  %45 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11142
  %ref19 = getelementptr inbounds %struct.Ref, %struct.Ref* %45, i32 0, i32 2, !dbg !11143
  %46 = load i8*, i8** %ref19, align 8, !dbg !11143
  %call20 = call %struct.Ref* @find_ref(%struct.ListBase* %44, i8* %46), !dbg !11144
  store %struct.Ref* %call20, %struct.Ref** %ref, align 8, !dbg !11145
  %47 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !11146
  %tobool21 = icmp ne %struct.Ref* %47, null, !dbg !11146
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !11148

if.then22:                                        ; preds = %for.body17
  %48 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !11149
  %49 = load %struct.Ref*, %struct.Ref** %ref, align 8, !dbg !11150
  %50 = bitcast %struct.Ref* %49 to i8*, !dbg !11150
  call void @BLI_remlink(%struct.ListBase* %48, i8* %50), !dbg !11151
  br label %if.end23, !dbg !11151

if.end23:                                         ; preds = %if.then22, %for.body17
  br label %for.inc24, !dbg !11152

for.inc24:                                        ; preds = %if.end23
  %51 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11153
  %next25 = getelementptr inbounds %struct.Ref, %struct.Ref* %51, i32 0, i32 0, !dbg !11154
  %52 = load %struct.Ref*, %struct.Ref** %next25, align 8, !dbg !11154
  store %struct.Ref* %52, %struct.Ref** %r, align 8, !dbg !11155
  br label %for.cond15, !dbg !11156, !llvm.loop !11157

for.end26:                                        ; preds = %for.cond15
  %53 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !11159
  store %struct.ListBase* %53, %struct.ListBase** %retval, align 8, !dbg !11160
  br label %return, !dbg !11160

if.else:                                          ; preds = %for.end
  store %struct.ListBase* null, %struct.ListBase** %retval, align 8, !dbg !11161
  br label %return, !dbg !11161

return:                                           ; preds = %if.else, %for.end26
  %54 = load %struct.ListBase*, %struct.ListBase** %retval, align 8, !dbg !11163
  ret %struct.ListBase* %54, !dbg !11163
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @find_hole_chains(%struct.KnifeTool_OpData* %kcd, %struct.ListBase* %hole, %struct.BMFace* %f, %struct.ListBase** %mainchain, %struct.ListBase** %sidechain) #0 !dbg !11164 {
entry:
  %retval = alloca i8, align 1
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %hole.addr = alloca %struct.ListBase*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %mainchain.addr = alloca %struct.ListBase**, align 8
  %sidechain.addr = alloca %struct.ListBase**, align 8
  %fco = alloca [2 x float]*, align 8
  %hco = alloca [2 x float]*, align 8
  %fv = alloca %struct.BMVert**, align 8
  %hv = alloca %struct.KnifeVert**, align 8
  %he = alloca %struct.KnifeEdge**, align 8
  %r = alloca %struct.Ref*, align 8
  %kfv = alloca %struct.KnifeVert*, align 8
  %kfvother = alloca %struct.KnifeVert*, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %chain = alloca %struct.ListBase*, align 8
  %v = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %nh = alloca i32, align 4
  %nf = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %ax = alloca i32, align 4
  %ay = alloca i32, align 4
  %sep = alloca i32, align 4
  %bestsep = alloca i32, align 4
  %besti = alloca [2 x i32], align 4
  %bestj = alloca [2 x i32], align 4
  %dist_sq = alloca float, align 4
  %dist_best_sq = alloca float, align 4
  %ok = alloca i8, align 1
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !11168, metadata !DIExpression()), !dbg !11169
  store %struct.ListBase* %hole, %struct.ListBase** %hole.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %hole.addr, metadata !11170, metadata !DIExpression()), !dbg !11171
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !11172, metadata !DIExpression()), !dbg !11173
  store %struct.ListBase** %mainchain, %struct.ListBase*** %mainchain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase*** %mainchain.addr, metadata !11174, metadata !DIExpression()), !dbg !11175
  store %struct.ListBase** %sidechain, %struct.ListBase*** %sidechain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase*** %sidechain.addr, metadata !11176, metadata !DIExpression()), !dbg !11177
  call void @llvm.dbg.declare(metadata [2 x float]** %fco, metadata !11178, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.declare(metadata [2 x float]** %hco, metadata !11181, metadata !DIExpression()), !dbg !11182
  call void @llvm.dbg.declare(metadata %struct.BMVert*** %fv, metadata !11183, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.declare(metadata %struct.KnifeVert*** %hv, metadata !11185, metadata !DIExpression()), !dbg !11186
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge*** %he, metadata !11187, metadata !DIExpression()), !dbg !11188
  call void @llvm.dbg.declare(metadata %struct.Ref** %r, metadata !11189, metadata !DIExpression()), !dbg !11190
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv, metadata !11191, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfvother, metadata !11193, metadata !DIExpression()), !dbg !11194
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !11195, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.declare(metadata %struct.ListBase** %chain, metadata !11197, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !11199, metadata !DIExpression()), !dbg !11200
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11201, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.declare(metadata i32* %nh, metadata !11203, metadata !DIExpression()), !dbg !11204
  call void @llvm.dbg.declare(metadata i32* %nf, metadata !11205, metadata !DIExpression()), !dbg !11206
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11207, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11209, metadata !DIExpression()), !dbg !11210
  call void @llvm.dbg.declare(metadata i32* %k, metadata !11211, metadata !DIExpression()), !dbg !11212
  call void @llvm.dbg.declare(metadata i32* %m, metadata !11213, metadata !DIExpression()), !dbg !11214
  call void @llvm.dbg.declare(metadata i32* %ax, metadata !11215, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.declare(metadata i32* %ay, metadata !11217, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.declare(metadata i32* %sep, metadata !11219, metadata !DIExpression()), !dbg !11220
  store i32 0, i32* %sep, align 4, !dbg !11220
  call void @llvm.dbg.declare(metadata i32* %bestsep, metadata !11221, metadata !DIExpression()), !dbg !11222
  call void @llvm.dbg.declare(metadata [2 x i32]* %besti, metadata !11223, metadata !DIExpression()), !dbg !11224
  call void @llvm.dbg.declare(metadata [2 x i32]* %bestj, metadata !11225, metadata !DIExpression()), !dbg !11226
  call void @llvm.dbg.declare(metadata float* %dist_sq, metadata !11227, metadata !DIExpression()), !dbg !11228
  call void @llvm.dbg.declare(metadata float* %dist_best_sq, metadata !11229, metadata !DIExpression()), !dbg !11230
  %0 = load %struct.ListBase*, %struct.ListBase** %hole.addr, align 8, !dbg !11231
  %call = call i32 @BLI_countlist(%struct.ListBase* %0), !dbg !11232
  store i32 %call, i32* %nh, align 4, !dbg !11233
  %1 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !11234
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %1, i32 0, i32 3, !dbg !11235
  %2 = load i32, i32* %len, align 8, !dbg !11235
  store i32 %2, i32* %nf, align 4, !dbg !11236
  %3 = load i32, i32* %nh, align 4, !dbg !11237
  %cmp = icmp slt i32 %3, 2, !dbg !11239
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11240

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %nf, align 4, !dbg !11241
  %cmp1 = icmp slt i32 %4, 3, !dbg !11242
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11243

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !11244
  br label %return, !dbg !11244

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !11245
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %5, i32 0, i32 4, !dbg !11246
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !11245
  call void @axis_dominant_v3(i32* %ax, i32* %ay, float* %arraydecay), !dbg !11247
  %6 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11248
  %arena = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %6, i32 0, i32 6, !dbg !11249
  %7 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !11249
  %8 = load i32, i32* %nh, align 4, !dbg !11250
  %conv = sext i32 %8 to i64, !dbg !11250
  %mul = mul i64 %conv, 8, !dbg !11251
  %call2 = call i8* @BLI_memarena_alloc(%struct.MemArena* %7, i64 %mul), !dbg !11252
  %9 = bitcast i8* %call2 to [2 x float]*, !dbg !11252
  store [2 x float]* %9, [2 x float]** %hco, align 8, !dbg !11253
  %10 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11254
  %arena3 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %10, i32 0, i32 6, !dbg !11255
  %11 = load %struct.MemArena*, %struct.MemArena** %arena3, align 8, !dbg !11255
  %12 = load i32, i32* %nf, align 4, !dbg !11256
  %conv4 = sext i32 %12 to i64, !dbg !11256
  %mul5 = mul i64 %conv4, 8, !dbg !11257
  %call6 = call i8* @BLI_memarena_alloc(%struct.MemArena* %11, i64 %mul5), !dbg !11258
  %13 = bitcast i8* %call6 to [2 x float]*, !dbg !11258
  store [2 x float]* %13, [2 x float]** %fco, align 8, !dbg !11259
  %14 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11260
  %arena7 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %14, i32 0, i32 6, !dbg !11261
  %15 = load %struct.MemArena*, %struct.MemArena** %arena7, align 8, !dbg !11261
  %16 = load i32, i32* %nh, align 4, !dbg !11262
  %conv8 = sext i32 %16 to i64, !dbg !11262
  %mul9 = mul i64 %conv8, 8, !dbg !11263
  %call10 = call i8* @BLI_memarena_alloc(%struct.MemArena* %15, i64 %mul9), !dbg !11264
  %17 = bitcast i8* %call10 to %struct.KnifeVert**, !dbg !11264
  store %struct.KnifeVert** %17, %struct.KnifeVert*** %hv, align 8, !dbg !11265
  %18 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11266
  %arena11 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %18, i32 0, i32 6, !dbg !11267
  %19 = load %struct.MemArena*, %struct.MemArena** %arena11, align 8, !dbg !11267
  %20 = load i32, i32* %nf, align 4, !dbg !11268
  %conv12 = sext i32 %20 to i64, !dbg !11268
  %mul13 = mul i64 %conv12, 8, !dbg !11269
  %call14 = call i8* @BLI_memarena_alloc(%struct.MemArena* %19, i64 %mul13), !dbg !11270
  %21 = bitcast i8* %call14 to %struct.BMVert**, !dbg !11270
  store %struct.BMVert** %21, %struct.BMVert*** %fv, align 8, !dbg !11271
  %22 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11272
  %arena15 = getelementptr inbounds %struct.KnifeTool_OpData, %struct.KnifeTool_OpData* %22, i32 0, i32 6, !dbg !11273
  %23 = load %struct.MemArena*, %struct.MemArena** %arena15, align 8, !dbg !11273
  %24 = load i32, i32* %nh, align 4, !dbg !11274
  %conv16 = sext i32 %24 to i64, !dbg !11274
  %mul17 = mul i64 %conv16, 8, !dbg !11275
  %call18 = call i8* @BLI_memarena_alloc(%struct.MemArena* %23, i64 %mul17), !dbg !11276
  %25 = bitcast i8* %call18 to %struct.KnifeEdge**, !dbg !11276
  store %struct.KnifeEdge** %25, %struct.KnifeEdge*** %he, align 8, !dbg !11277
  store i32 0, i32* %i, align 4, !dbg !11278
  store %struct.KnifeVert* null, %struct.KnifeVert** %kfv, align 8, !dbg !11279
  store %struct.KnifeVert* null, %struct.KnifeVert** %kfvother, align 8, !dbg !11280
  %26 = load %struct.ListBase*, %struct.ListBase** %hole.addr, align 8, !dbg !11281
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %26, i32 0, i32 0, !dbg !11283
  %27 = load i8*, i8** %first, align 8, !dbg !11283
  %28 = bitcast i8* %27 to %struct.Ref*, !dbg !11281
  store %struct.Ref* %28, %struct.Ref** %r, align 8, !dbg !11284
  br label %for.cond, !dbg !11285

for.cond:                                         ; preds = %for.inc, %if.end
  %29 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11286
  %tobool = icmp ne %struct.Ref* %29, null, !dbg !11288
  br i1 %tobool, label %for.body, label %for.end, !dbg !11288

for.body:                                         ; preds = %for.cond
  %30 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11289
  %ref = getelementptr inbounds %struct.Ref, %struct.Ref* %30, i32 0, i32 2, !dbg !11291
  %31 = load i8*, i8** %ref, align 8, !dbg !11291
  %32 = bitcast i8* %31 to %struct.KnifeEdge*, !dbg !11289
  store %struct.KnifeEdge* %32, %struct.KnifeEdge** %kfe, align 8, !dbg !11292
  %33 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11293
  %34 = load %struct.KnifeEdge**, %struct.KnifeEdge*** %he, align 8, !dbg !11294
  %35 = load i32, i32* %i, align 4, !dbg !11295
  %idxprom = sext i32 %35 to i64, !dbg !11294
  %arrayidx = getelementptr inbounds %struct.KnifeEdge*, %struct.KnifeEdge** %34, i64 %idxprom, !dbg !11294
  store %struct.KnifeEdge* %33, %struct.KnifeEdge** %arrayidx, align 8, !dbg !11296
  %36 = load %struct.KnifeVert*, %struct.KnifeVert** %kfvother, align 8, !dbg !11297
  %cmp19 = icmp eq %struct.KnifeVert* %36, null, !dbg !11299
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !11300

if.then21:                                        ; preds = %for.body
  %37 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11301
  %v1 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %37, i32 0, i32 0, !dbg !11303
  %38 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !11303
  store %struct.KnifeVert* %38, %struct.KnifeVert** %kfv, align 8, !dbg !11304
  br label %if.end22, !dbg !11305

if.else:                                          ; preds = %for.body
  %39 = load %struct.KnifeVert*, %struct.KnifeVert** %kfvother, align 8, !dbg !11306
  store %struct.KnifeVert* %39, %struct.KnifeVert** %kfv, align 8, !dbg !11308
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then21
  %40 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !11309
  %co = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %40, i32 0, i32 3, !dbg !11310
  %41 = load i32, i32* %ax, align 4, !dbg !11311
  %idxprom23 = sext i32 %41 to i64, !dbg !11309
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 %idxprom23, !dbg !11309
  %42 = load float, float* %arrayidx24, align 4, !dbg !11309
  %43 = load [2 x float]*, [2 x float]** %hco, align 8, !dbg !11312
  %44 = load i32, i32* %i, align 4, !dbg !11313
  %idxprom25 = sext i32 %44 to i64, !dbg !11312
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %43, i64 %idxprom25, !dbg !11312
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx26, i64 0, i64 0, !dbg !11312
  store float %42, float* %arrayidx27, align 4, !dbg !11314
  %45 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !11315
  %co28 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %45, i32 0, i32 3, !dbg !11316
  %46 = load i32, i32* %ay, align 4, !dbg !11317
  %idxprom29 = sext i32 %46 to i64, !dbg !11315
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %co28, i64 0, i64 %idxprom29, !dbg !11315
  %47 = load float, float* %arrayidx30, align 4, !dbg !11315
  %48 = load [2 x float]*, [2 x float]** %hco, align 8, !dbg !11318
  %49 = load i32, i32* %i, align 4, !dbg !11319
  %idxprom31 = sext i32 %49 to i64, !dbg !11318
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %48, i64 %idxprom31, !dbg !11318
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx32, i64 0, i64 1, !dbg !11318
  store float %47, float* %arrayidx33, align 4, !dbg !11320
  %50 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !11321
  %51 = load %struct.KnifeVert**, %struct.KnifeVert*** %hv, align 8, !dbg !11322
  %52 = load i32, i32* %i, align 4, !dbg !11323
  %idxprom34 = sext i32 %52 to i64, !dbg !11322
  %arrayidx35 = getelementptr inbounds %struct.KnifeVert*, %struct.KnifeVert** %51, i64 %idxprom34, !dbg !11322
  store %struct.KnifeVert* %50, %struct.KnifeVert** %arrayidx35, align 8, !dbg !11324
  %53 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11325
  %v136 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %53, i32 0, i32 0, !dbg !11326
  %54 = load %struct.KnifeVert*, %struct.KnifeVert** %v136, align 8, !dbg !11326
  %55 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv, align 8, !dbg !11327
  %cmp37 = icmp eq %struct.KnifeVert* %54, %55, !dbg !11328
  br i1 %cmp37, label %cond.true, label %cond.false, !dbg !11329

cond.true:                                        ; preds = %if.end22
  %56 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11330
  %v2 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %56, i32 0, i32 1, !dbg !11331
  %57 = load %struct.KnifeVert*, %struct.KnifeVert** %v2, align 8, !dbg !11331
  br label %cond.end, !dbg !11329

cond.false:                                       ; preds = %if.end22
  %58 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11332
  %v139 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %58, i32 0, i32 0, !dbg !11333
  %59 = load %struct.KnifeVert*, %struct.KnifeVert** %v139, align 8, !dbg !11333
  br label %cond.end, !dbg !11329

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.KnifeVert* [ %57, %cond.true ], [ %59, %cond.false ], !dbg !11329
  store %struct.KnifeVert* %cond, %struct.KnifeVert** %kfvother, align 8, !dbg !11334
  %60 = load i32, i32* %i, align 4, !dbg !11335
  %inc = add nsw i32 %60, 1, !dbg !11335
  store i32 %inc, i32* %i, align 4, !dbg !11335
  br label %for.inc, !dbg !11336

for.inc:                                          ; preds = %cond.end
  %61 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11337
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %61, i32 0, i32 0, !dbg !11338
  %62 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !11338
  store %struct.Ref* %62, %struct.Ref** %r, align 8, !dbg !11339
  br label %for.cond, !dbg !11340, !llvm.loop !11341

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !11343
  %63 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !11344
  %64 = bitcast %struct.BMFace* %63 to i8*, !dbg !11344
  %call40 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* null, i8 zeroext 9, i8* %64), !dbg !11344
  %65 = bitcast i8* %call40 to %struct.BMVert*, !dbg !11344
  store %struct.BMVert* %65, %struct.BMVert** %v, align 8, !dbg !11344
  br label %for.cond41, !dbg !11344

for.cond41:                                       ; preds = %for.inc59, %for.end
  %66 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11346
  %tobool42 = icmp ne %struct.BMVert* %66, null, !dbg !11344
  br i1 %tobool42, label %for.body43, label %for.end61, !dbg !11344

for.body43:                                       ; preds = %for.cond41
  %67 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11348
  %co44 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %67, i32 0, i32 2, !dbg !11350
  %68 = load i32, i32* %ax, align 4, !dbg !11351
  %idxprom45 = sext i32 %68 to i64, !dbg !11348
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %co44, i64 0, i64 %idxprom45, !dbg !11348
  %69 = load float, float* %arrayidx46, align 4, !dbg !11348
  %70 = load [2 x float]*, [2 x float]** %fco, align 8, !dbg !11352
  %71 = load i32, i32* %j, align 4, !dbg !11353
  %idxprom47 = sext i32 %71 to i64, !dbg !11352
  %arrayidx48 = getelementptr inbounds [2 x float], [2 x float]* %70, i64 %idxprom47, !dbg !11352
  %arrayidx49 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx48, i64 0, i64 0, !dbg !11352
  store float %69, float* %arrayidx49, align 4, !dbg !11354
  %72 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11355
  %co50 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %72, i32 0, i32 2, !dbg !11356
  %73 = load i32, i32* %ay, align 4, !dbg !11357
  %idxprom51 = sext i32 %73 to i64, !dbg !11355
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %co50, i64 0, i64 %idxprom51, !dbg !11355
  %74 = load float, float* %arrayidx52, align 4, !dbg !11355
  %75 = load [2 x float]*, [2 x float]** %fco, align 8, !dbg !11358
  %76 = load i32, i32* %j, align 4, !dbg !11359
  %idxprom53 = sext i32 %76 to i64, !dbg !11358
  %arrayidx54 = getelementptr inbounds [2 x float], [2 x float]* %75, i64 %idxprom53, !dbg !11358
  %arrayidx55 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx54, i64 0, i64 1, !dbg !11358
  store float %74, float* %arrayidx55, align 4, !dbg !11360
  %77 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11361
  %78 = load %struct.BMVert**, %struct.BMVert*** %fv, align 8, !dbg !11362
  %79 = load i32, i32* %j, align 4, !dbg !11363
  %idxprom56 = sext i32 %79 to i64, !dbg !11362
  %arrayidx57 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %78, i64 %idxprom56, !dbg !11362
  store %struct.BMVert* %77, %struct.BMVert** %arrayidx57, align 8, !dbg !11364
  %80 = load i32, i32* %j, align 4, !dbg !11365
  %inc58 = add nsw i32 %80, 1, !dbg !11365
  store i32 %inc58, i32* %j, align 4, !dbg !11365
  br label %for.inc59, !dbg !11366

for.inc59:                                        ; preds = %for.body43
  %call60 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11346
  %81 = bitcast i8* %call60 to %struct.BMVert*, !dbg !11346
  store %struct.BMVert* %81, %struct.BMVert** %v, align 8, !dbg !11346
  br label %for.cond41, !dbg !11346, !llvm.loop !11367

for.end61:                                        ; preds = %for.cond41
  store i32 0, i32* %m, align 4, !dbg !11369
  br label %for.cond62, !dbg !11371

for.cond62:                                       ; preds = %for.inc212, %for.end61
  %82 = load i32, i32* %m, align 4, !dbg !11372
  %cmp63 = icmp slt i32 %82, 2, !dbg !11374
  br i1 %cmp63, label %for.body65, label %for.end214, !dbg !11375

for.body65:                                       ; preds = %for.cond62
  %83 = load i32, i32* %m, align 4, !dbg !11376
  %idxprom66 = sext i32 %83 to i64, !dbg !11378
  %arrayidx67 = getelementptr inbounds [2 x i32], [2 x i32]* %besti, i64 0, i64 %idxprom66, !dbg !11378
  store i32 -1, i32* %arrayidx67, align 4, !dbg !11379
  %84 = load i32, i32* %m, align 4, !dbg !11380
  %idxprom68 = sext i32 %84 to i64, !dbg !11381
  %arrayidx69 = getelementptr inbounds [2 x i32], [2 x i32]* %bestj, i64 0, i64 %idxprom68, !dbg !11381
  store i32 -1, i32* %arrayidx69, align 4, !dbg !11382
  store float 0x47EFFFFFE0000000, float* %dist_best_sq, align 4, !dbg !11383
  store i32 0, i32* %bestsep, align 4, !dbg !11384
  store i32 0, i32* %i, align 4, !dbg !11385
  br label %for.cond70, !dbg !11387

for.cond70:                                       ; preds = %for.inc209, %for.body65
  %85 = load i32, i32* %i, align 4, !dbg !11388
  %86 = load i32, i32* %nh, align 4, !dbg !11390
  %cmp71 = icmp slt i32 %85, %86, !dbg !11391
  br i1 %cmp71, label %for.body73, label %for.end211, !dbg !11392

for.body73:                                       ; preds = %for.cond70
  %87 = load i32, i32* %m, align 4, !dbg !11393
  %cmp74 = icmp eq i32 %87, 1, !dbg !11396
  br i1 %cmp74, label %if.then76, label %if.end95, !dbg !11397

if.then76:                                        ; preds = %for.body73
  %88 = load i32, i32* %i, align 4, !dbg !11398
  %arrayidx77 = getelementptr inbounds [2 x i32], [2 x i32]* %besti, i64 0, i64 0, !dbg !11401
  %89 = load i32, i32* %arrayidx77, align 4, !dbg !11401
  %cmp78 = icmp eq i32 %88, %89, !dbg !11402
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !11403

if.then80:                                        ; preds = %if.then76
  br label %for.inc209, !dbg !11404

if.end81:                                         ; preds = %if.then76
  %90 = load i32, i32* %i, align 4, !dbg !11405
  %91 = load i32, i32* %nh, align 4, !dbg !11406
  %add = add nsw i32 %90, %91, !dbg !11407
  %arrayidx82 = getelementptr inbounds [2 x i32], [2 x i32]* %besti, i64 0, i64 0, !dbg !11408
  %92 = load i32, i32* %arrayidx82, align 4, !dbg !11408
  %sub = sub nsw i32 %add, %92, !dbg !11409
  %93 = load i32, i32* %nh, align 4, !dbg !11410
  %rem = srem i32 %sub, %93, !dbg !11411
  store i32 %rem, i32* %sep, align 4, !dbg !11412
  %94 = load i32, i32* %sep, align 4, !dbg !11413
  %95 = load i32, i32* %nh, align 4, !dbg !11413
  %96 = load i32, i32* %sep, align 4, !dbg !11413
  %sub83 = sub nsw i32 %95, %96, !dbg !11413
  %cmp84 = icmp slt i32 %94, %sub83, !dbg !11413
  br i1 %cmp84, label %cond.true86, label %cond.false87, !dbg !11413

cond.true86:                                      ; preds = %if.end81
  %97 = load i32, i32* %sep, align 4, !dbg !11413
  br label %cond.end89, !dbg !11413

cond.false87:                                     ; preds = %if.end81
  %98 = load i32, i32* %nh, align 4, !dbg !11413
  %99 = load i32, i32* %sep, align 4, !dbg !11413
  %sub88 = sub nsw i32 %98, %99, !dbg !11413
  br label %cond.end89, !dbg !11413

cond.end89:                                       ; preds = %cond.false87, %cond.true86
  %cond90 = phi i32 [ %97, %cond.true86 ], [ %sub88, %cond.false87 ], !dbg !11413
  store i32 %cond90, i32* %sep, align 4, !dbg !11414
  %100 = load i32, i32* %sep, align 4, !dbg !11415
  %101 = load i32, i32* %bestsep, align 4, !dbg !11417
  %cmp91 = icmp slt i32 %100, %101, !dbg !11418
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !11419

if.then93:                                        ; preds = %cond.end89
  br label %for.inc209, !dbg !11420

if.end94:                                         ; preds = %cond.end89
  store float 0x47EFFFFFE0000000, float* %dist_best_sq, align 4, !dbg !11421
  br label %if.end95, !dbg !11422

if.end95:                                         ; preds = %if.end94, %for.body73
  store i32 0, i32* %j, align 4, !dbg !11423
  br label %for.cond96, !dbg !11425

for.cond96:                                       ; preds = %for.inc206, %if.end95
  %102 = load i32, i32* %j, align 4, !dbg !11426
  %103 = load i32, i32* %nf, align 4, !dbg !11428
  %cmp97 = icmp slt i32 %102, %103, !dbg !11429
  br i1 %cmp97, label %for.body99, label %for.end208, !dbg !11430

for.body99:                                       ; preds = %for.cond96
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !11431, metadata !DIExpression()), !dbg !11433
  %104 = load i32, i32* %m, align 4, !dbg !11434
  %cmp100 = icmp eq i32 %104, 1, !dbg !11436
  br i1 %cmp100, label %land.lhs.true, label %if.end106, !dbg !11437

land.lhs.true:                                    ; preds = %for.body99
  %105 = load i32, i32* %j, align 4, !dbg !11438
  %arrayidx102 = getelementptr inbounds [2 x i32], [2 x i32]* %bestj, i64 0, i64 0, !dbg !11439
  %106 = load i32, i32* %arrayidx102, align 4, !dbg !11439
  %cmp103 = icmp eq i32 %105, %106, !dbg !11440
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !11441

if.then105:                                       ; preds = %land.lhs.true
  br label %for.inc206, !dbg !11442

if.end106:                                        ; preds = %land.lhs.true, %for.body99
  %107 = load [2 x float]*, [2 x float]** %hco, align 8, !dbg !11443
  %108 = load i32, i32* %i, align 4, !dbg !11444
  %idxprom107 = sext i32 %108 to i64, !dbg !11443
  %arrayidx108 = getelementptr inbounds [2 x float], [2 x float]* %107, i64 %idxprom107, !dbg !11443
  %arraydecay109 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx108, i64 0, i64 0, !dbg !11443
  %109 = load [2 x float]*, [2 x float]** %fco, align 8, !dbg !11445
  %110 = load i32, i32* %j, align 4, !dbg !11446
  %idxprom110 = sext i32 %110 to i64, !dbg !11445
  %arrayidx111 = getelementptr inbounds [2 x float], [2 x float]* %109, i64 %idxprom110, !dbg !11445
  %arraydecay112 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx111, i64 0, i64 0, !dbg !11445
  %call113 = call float @len_squared_v2v2(float* %arraydecay109, float* %arraydecay112), !dbg !11447
  store float %call113, float* %dist_sq, align 4, !dbg !11448
  %111 = load float, float* %dist_sq, align 4, !dbg !11449
  %112 = load float, float* %dist_best_sq, align 4, !dbg !11451
  %cmp114 = fcmp ogt float %111, %112, !dbg !11452
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !11453

if.then116:                                       ; preds = %if.end106
  br label %for.inc206, !dbg !11454

if.end117:                                        ; preds = %if.end106
  store i8 1, i8* %ok, align 1, !dbg !11455
  store i32 0, i32* %k, align 4, !dbg !11456
  br label %for.cond118, !dbg !11458

for.cond118:                                      ; preds = %for.inc151, %if.end117
  %113 = load i32, i32* %k, align 4, !dbg !11459
  %114 = load i32, i32* %nh, align 4, !dbg !11461
  %cmp119 = icmp slt i32 %113, %114, !dbg !11462
  br i1 %cmp119, label %land.rhs, label %land.end, !dbg !11463

land.rhs:                                         ; preds = %for.cond118
  %115 = load i8, i8* %ok, align 1, !dbg !11464
  %conv121 = zext i8 %115 to i32, !dbg !11464
  %tobool122 = icmp ne i32 %conv121, 0, !dbg !11463
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond118
  %116 = phi i1 [ false, %for.cond118 ], [ %tobool122, %land.rhs ], !dbg !11465
  br i1 %116, label %for.body123, label %for.end153, !dbg !11466

for.body123:                                      ; preds = %land.end
  %117 = load i32, i32* %k, align 4, !dbg !11467
  %118 = load i32, i32* %i, align 4, !dbg !11470
  %cmp124 = icmp eq i32 %117, %118, !dbg !11471
  br i1 %cmp124, label %if.then131, label %lor.lhs.false126, !dbg !11472

lor.lhs.false126:                                 ; preds = %for.body123
  %119 = load i32, i32* %k, align 4, !dbg !11473
  %add127 = add nsw i32 %119, 1, !dbg !11474
  %120 = load i32, i32* %nh, align 4, !dbg !11475
  %rem128 = srem i32 %add127, %120, !dbg !11476
  %121 = load i32, i32* %i, align 4, !dbg !11477
  %cmp129 = icmp eq i32 %rem128, %121, !dbg !11478
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !11479

if.then131:                                       ; preds = %lor.lhs.false126, %for.body123
  br label %for.inc151, !dbg !11480

if.end132:                                        ; preds = %lor.lhs.false126
  %122 = load [2 x float]*, [2 x float]** %hco, align 8, !dbg !11481
  %123 = load i32, i32* %i, align 4, !dbg !11483
  %idxprom133 = sext i32 %123 to i64, !dbg !11481
  %arrayidx134 = getelementptr inbounds [2 x float], [2 x float]* %122, i64 %idxprom133, !dbg !11481
  %arraydecay135 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx134, i64 0, i64 0, !dbg !11481
  %124 = load [2 x float]*, [2 x float]** %fco, align 8, !dbg !11484
  %125 = load i32, i32* %j, align 4, !dbg !11485
  %idxprom136 = sext i32 %125 to i64, !dbg !11484
  %arrayidx137 = getelementptr inbounds [2 x float], [2 x float]* %124, i64 %idxprom136, !dbg !11484
  %arraydecay138 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx137, i64 0, i64 0, !dbg !11484
  %126 = load [2 x float]*, [2 x float]** %hco, align 8, !dbg !11486
  %127 = load i32, i32* %k, align 4, !dbg !11487
  %idxprom139 = sext i32 %127 to i64, !dbg !11486
  %arrayidx140 = getelementptr inbounds [2 x float], [2 x float]* %126, i64 %idxprom139, !dbg !11486
  %arraydecay141 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx140, i64 0, i64 0, !dbg !11486
  %128 = load [2 x float]*, [2 x float]** %hco, align 8, !dbg !11488
  %129 = load i32, i32* %k, align 4, !dbg !11489
  %add142 = add nsw i32 %129, 1, !dbg !11490
  %130 = load i32, i32* %nh, align 4, !dbg !11491
  %rem143 = srem i32 %add142, %130, !dbg !11492
  %idxprom144 = sext i32 %rem143 to i64, !dbg !11488
  %arrayidx145 = getelementptr inbounds [2 x float], [2 x float]* %128, i64 %idxprom144, !dbg !11488
  %arraydecay146 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx145, i64 0, i64 0, !dbg !11488
  %call147 = call i32 @isect_line_line_v2(float* %arraydecay135, float* %arraydecay138, float* %arraydecay141, float* %arraydecay146), !dbg !11493
  %tobool148 = icmp ne i32 %call147, 0, !dbg !11493
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !11494

if.then149:                                       ; preds = %if.end132
  store i8 0, i8* %ok, align 1, !dbg !11495
  br label %if.end150, !dbg !11496

if.end150:                                        ; preds = %if.then149, %if.end132
  br label %for.inc151, !dbg !11497

for.inc151:                                       ; preds = %if.end150, %if.then131
  %131 = load i32, i32* %k, align 4, !dbg !11498
  %inc152 = add nsw i32 %131, 1, !dbg !11498
  store i32 %inc152, i32* %k, align 4, !dbg !11498
  br label %for.cond118, !dbg !11499, !llvm.loop !11500

for.end153:                                       ; preds = %land.end
  %132 = load i8, i8* %ok, align 1, !dbg !11502
  %tobool154 = icmp ne i8 %132, 0, !dbg !11502
  br i1 %tobool154, label %if.end156, label %if.then155, !dbg !11504

if.then155:                                       ; preds = %for.end153
  br label %for.inc206, !dbg !11505

if.end156:                                        ; preds = %for.end153
  store i32 0, i32* %k, align 4, !dbg !11506
  br label %for.cond157, !dbg !11508

for.cond157:                                      ; preds = %for.inc192, %if.end156
  %133 = load i32, i32* %k, align 4, !dbg !11509
  %134 = load i32, i32* %nf, align 4, !dbg !11511
  %cmp158 = icmp slt i32 %133, %134, !dbg !11512
  br i1 %cmp158, label %land.rhs160, label %land.end163, !dbg !11513

land.rhs160:                                      ; preds = %for.cond157
  %135 = load i8, i8* %ok, align 1, !dbg !11514
  %conv161 = zext i8 %135 to i32, !dbg !11514
  %tobool162 = icmp ne i32 %conv161, 0, !dbg !11513
  br label %land.end163

land.end163:                                      ; preds = %land.rhs160, %for.cond157
  %136 = phi i1 [ false, %for.cond157 ], [ %tobool162, %land.rhs160 ], !dbg !11515
  br i1 %136, label %for.body164, label %for.end194, !dbg !11516

for.body164:                                      ; preds = %land.end163
  %137 = load i32, i32* %k, align 4, !dbg !11517
  %138 = load i32, i32* %j, align 4, !dbg !11520
  %cmp165 = icmp eq i32 %137, %138, !dbg !11521
  br i1 %cmp165, label %if.then172, label %lor.lhs.false167, !dbg !11522

lor.lhs.false167:                                 ; preds = %for.body164
  %139 = load i32, i32* %k, align 4, !dbg !11523
  %add168 = add nsw i32 %139, 1, !dbg !11524
  %140 = load i32, i32* %nf, align 4, !dbg !11525
  %rem169 = srem i32 %add168, %140, !dbg !11526
  %141 = load i32, i32* %j, align 4, !dbg !11527
  %cmp170 = icmp eq i32 %rem169, %141, !dbg !11528
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !11529

if.then172:                                       ; preds = %lor.lhs.false167, %for.body164
  br label %for.inc192, !dbg !11530

if.end173:                                        ; preds = %lor.lhs.false167
  %142 = load [2 x float]*, [2 x float]** %hco, align 8, !dbg !11531
  %143 = load i32, i32* %i, align 4, !dbg !11533
  %idxprom174 = sext i32 %143 to i64, !dbg !11531
  %arrayidx175 = getelementptr inbounds [2 x float], [2 x float]* %142, i64 %idxprom174, !dbg !11531
  %arraydecay176 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx175, i64 0, i64 0, !dbg !11531
  %144 = load [2 x float]*, [2 x float]** %fco, align 8, !dbg !11534
  %145 = load i32, i32* %j, align 4, !dbg !11535
  %idxprom177 = sext i32 %145 to i64, !dbg !11534
  %arrayidx178 = getelementptr inbounds [2 x float], [2 x float]* %144, i64 %idxprom177, !dbg !11534
  %arraydecay179 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx178, i64 0, i64 0, !dbg !11534
  %146 = load [2 x float]*, [2 x float]** %fco, align 8, !dbg !11536
  %147 = load i32, i32* %k, align 4, !dbg !11537
  %idxprom180 = sext i32 %147 to i64, !dbg !11536
  %arrayidx181 = getelementptr inbounds [2 x float], [2 x float]* %146, i64 %idxprom180, !dbg !11536
  %arraydecay182 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx181, i64 0, i64 0, !dbg !11536
  %148 = load [2 x float]*, [2 x float]** %fco, align 8, !dbg !11538
  %149 = load i32, i32* %k, align 4, !dbg !11539
  %add183 = add nsw i32 %149, 1, !dbg !11540
  %150 = load i32, i32* %nf, align 4, !dbg !11541
  %rem184 = srem i32 %add183, %150, !dbg !11542
  %idxprom185 = sext i32 %rem184 to i64, !dbg !11538
  %arrayidx186 = getelementptr inbounds [2 x float], [2 x float]* %148, i64 %idxprom185, !dbg !11538
  %arraydecay187 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx186, i64 0, i64 0, !dbg !11538
  %call188 = call i32 @isect_line_line_v2(float* %arraydecay176, float* %arraydecay179, float* %arraydecay182, float* %arraydecay187), !dbg !11543
  %tobool189 = icmp ne i32 %call188, 0, !dbg !11543
  br i1 %tobool189, label %if.then190, label %if.end191, !dbg !11544

if.then190:                                       ; preds = %if.end173
  store i8 0, i8* %ok, align 1, !dbg !11545
  br label %if.end191, !dbg !11546

if.end191:                                        ; preds = %if.then190, %if.end173
  br label %for.inc192, !dbg !11547

for.inc192:                                       ; preds = %if.end191, %if.then172
  %151 = load i32, i32* %k, align 4, !dbg !11548
  %inc193 = add nsw i32 %151, 1, !dbg !11548
  store i32 %inc193, i32* %k, align 4, !dbg !11548
  br label %for.cond157, !dbg !11549, !llvm.loop !11550

for.end194:                                       ; preds = %land.end163
  %152 = load i8, i8* %ok, align 1, !dbg !11552
  %tobool195 = icmp ne i8 %152, 0, !dbg !11552
  br i1 %tobool195, label %if.then196, label %if.end205, !dbg !11554

if.then196:                                       ; preds = %for.end194
  %153 = load i32, i32* %i, align 4, !dbg !11555
  %154 = load i32, i32* %m, align 4, !dbg !11557
  %idxprom197 = sext i32 %154 to i64, !dbg !11558
  %arrayidx198 = getelementptr inbounds [2 x i32], [2 x i32]* %besti, i64 0, i64 %idxprom197, !dbg !11558
  store i32 %153, i32* %arrayidx198, align 4, !dbg !11559
  %155 = load i32, i32* %j, align 4, !dbg !11560
  %156 = load i32, i32* %m, align 4, !dbg !11561
  %idxprom199 = sext i32 %156 to i64, !dbg !11562
  %arrayidx200 = getelementptr inbounds [2 x i32], [2 x i32]* %bestj, i64 0, i64 %idxprom199, !dbg !11562
  store i32 %155, i32* %arrayidx200, align 4, !dbg !11563
  %157 = load i32, i32* %m, align 4, !dbg !11564
  %cmp201 = icmp eq i32 %157, 1, !dbg !11566
  br i1 %cmp201, label %if.then203, label %if.end204, !dbg !11567

if.then203:                                       ; preds = %if.then196
  %158 = load i32, i32* %sep, align 4, !dbg !11568
  store i32 %158, i32* %bestsep, align 4, !dbg !11569
  br label %if.end204, !dbg !11570

if.end204:                                        ; preds = %if.then203, %if.then196
  %159 = load float, float* %dist_sq, align 4, !dbg !11571
  store float %159, float* %dist_best_sq, align 4, !dbg !11572
  br label %if.end205, !dbg !11573

if.end205:                                        ; preds = %if.end204, %for.end194
  br label %for.inc206, !dbg !11574

for.inc206:                                       ; preds = %if.end205, %if.then155, %if.then116, %if.then105
  %160 = load i32, i32* %j, align 4, !dbg !11575
  %inc207 = add nsw i32 %160, 1, !dbg !11575
  store i32 %inc207, i32* %j, align 4, !dbg !11575
  br label %for.cond96, !dbg !11576, !llvm.loop !11577

for.end208:                                       ; preds = %for.cond96
  br label %for.inc209, !dbg !11579

for.inc209:                                       ; preds = %for.end208, %if.then93, %if.then80
  %161 = load i32, i32* %i, align 4, !dbg !11580
  %inc210 = add nsw i32 %161, 1, !dbg !11580
  store i32 %inc210, i32* %i, align 4, !dbg !11580
  br label %for.cond70, !dbg !11581, !llvm.loop !11582

for.end211:                                       ; preds = %for.cond70
  br label %for.inc212, !dbg !11584

for.inc212:                                       ; preds = %for.end211
  %162 = load i32, i32* %m, align 4, !dbg !11585
  %inc213 = add nsw i32 %162, 1, !dbg !11585
  store i32 %inc213, i32* %m, align 4, !dbg !11585
  br label %for.cond62, !dbg !11586, !llvm.loop !11587

for.end214:                                       ; preds = %for.cond62
  %arrayidx215 = getelementptr inbounds [2 x i32], [2 x i32]* %besti, i64 0, i64 0, !dbg !11589
  %163 = load i32, i32* %arrayidx215, align 4, !dbg !11589
  %cmp216 = icmp ne i32 %163, -1, !dbg !11591
  br i1 %cmp216, label %land.lhs.true218, label %if.else269, !dbg !11592

land.lhs.true218:                                 ; preds = %for.end214
  %arrayidx219 = getelementptr inbounds [2 x i32], [2 x i32]* %besti, i64 0, i64 1, !dbg !11593
  %164 = load i32, i32* %arrayidx219, align 4, !dbg !11593
  %cmp220 = icmp ne i32 %164, -1, !dbg !11594
  br i1 %cmp220, label %if.then222, label %if.else269, !dbg !11595

if.then222:                                       ; preds = %land.lhs.true218
  %165 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11596
  %call223 = call %struct.KnifeEdge* @new_knife_edge(%struct.KnifeTool_OpData* %165), !dbg !11598
  store %struct.KnifeEdge* %call223, %struct.KnifeEdge** %kfe, align 8, !dbg !11599
  %166 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11600
  %167 = load %struct.BMVert**, %struct.BMVert*** %fv, align 8, !dbg !11601
  %arrayidx224 = getelementptr inbounds [2 x i32], [2 x i32]* %bestj, i64 0, i64 0, !dbg !11602
  %168 = load i32, i32* %arrayidx224, align 4, !dbg !11602
  %idxprom225 = sext i32 %168 to i64, !dbg !11601
  %arrayidx226 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %167, i64 %idxprom225, !dbg !11601
  %169 = load %struct.BMVert*, %struct.BMVert** %arrayidx226, align 8, !dbg !11601
  %call227 = call %struct.KnifeVert* @get_bm_knife_vert(%struct.KnifeTool_OpData* %166, %struct.BMVert* %169), !dbg !11603
  %170 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11604
  %v1228 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %170, i32 0, i32 0, !dbg !11605
  store %struct.KnifeVert* %call227, %struct.KnifeVert** %v1228, align 8, !dbg !11606
  %171 = load %struct.KnifeVert**, %struct.KnifeVert*** %hv, align 8, !dbg !11607
  %arrayidx229 = getelementptr inbounds [2 x i32], [2 x i32]* %besti, i64 0, i64 0, !dbg !11608
  %172 = load i32, i32* %arrayidx229, align 4, !dbg !11608
  %idxprom230 = sext i32 %172 to i64, !dbg !11607
  %arrayidx231 = getelementptr inbounds %struct.KnifeVert*, %struct.KnifeVert** %171, i64 %idxprom230, !dbg !11607
  %173 = load %struct.KnifeVert*, %struct.KnifeVert** %arrayidx231, align 8, !dbg !11607
  %174 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11609
  %v2232 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %174, i32 0, i32 1, !dbg !11610
  store %struct.KnifeVert* %173, %struct.KnifeVert** %v2232, align 8, !dbg !11611
  %175 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11612
  %call233 = call %struct.ListBase* @knife_empty_list(%struct.KnifeTool_OpData* %175), !dbg !11613
  store %struct.ListBase* %call233, %struct.ListBase** %chain, align 8, !dbg !11614
  %176 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11615
  %177 = load %struct.ListBase*, %struct.ListBase** %chain, align 8, !dbg !11616
  %178 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11617
  %179 = bitcast %struct.KnifeEdge* %178 to i8*, !dbg !11617
  call void @knife_append_list(%struct.KnifeTool_OpData* %176, %struct.ListBase* %177, i8* %179), !dbg !11618
  %arrayidx234 = getelementptr inbounds [2 x i32], [2 x i32]* %besti, i64 0, i64 0, !dbg !11619
  %180 = load i32, i32* %arrayidx234, align 4, !dbg !11619
  store i32 %180, i32* %i, align 4, !dbg !11621
  br label %for.cond235, !dbg !11622

for.cond235:                                      ; preds = %for.inc242, %if.then222
  %181 = load i32, i32* %i, align 4, !dbg !11623
  %arrayidx236 = getelementptr inbounds [2 x i32], [2 x i32]* %besti, i64 0, i64 1, !dbg !11625
  %182 = load i32, i32* %arrayidx236, align 4, !dbg !11625
  %cmp237 = icmp ne i32 %181, %182, !dbg !11626
  br i1 %cmp237, label %for.body239, label %for.end245, !dbg !11627

for.body239:                                      ; preds = %for.cond235
  %183 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11628
  %184 = load %struct.ListBase*, %struct.ListBase** %chain, align 8, !dbg !11630
  %185 = load %struct.KnifeEdge**, %struct.KnifeEdge*** %he, align 8, !dbg !11631
  %186 = load i32, i32* %i, align 4, !dbg !11632
  %idxprom240 = sext i32 %186 to i64, !dbg !11631
  %arrayidx241 = getelementptr inbounds %struct.KnifeEdge*, %struct.KnifeEdge** %185, i64 %idxprom240, !dbg !11631
  %187 = load %struct.KnifeEdge*, %struct.KnifeEdge** %arrayidx241, align 8, !dbg !11631
  %188 = bitcast %struct.KnifeEdge* %187 to i8*, !dbg !11631
  call void @knife_append_list(%struct.KnifeTool_OpData* %183, %struct.ListBase* %184, i8* %188), !dbg !11633
  br label %for.inc242, !dbg !11634

for.inc242:                                       ; preds = %for.body239
  %189 = load i32, i32* %i, align 4, !dbg !11635
  %add243 = add nsw i32 %189, 1, !dbg !11636
  %190 = load i32, i32* %nh, align 4, !dbg !11637
  %rem244 = srem i32 %add243, %190, !dbg !11638
  store i32 %rem244, i32* %i, align 4, !dbg !11639
  br label %for.cond235, !dbg !11640, !llvm.loop !11641

for.end245:                                       ; preds = %for.cond235
  %191 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11643
  %call246 = call %struct.KnifeEdge* @new_knife_edge(%struct.KnifeTool_OpData* %191), !dbg !11644
  store %struct.KnifeEdge* %call246, %struct.KnifeEdge** %kfe, align 8, !dbg !11645
  %192 = load %struct.KnifeVert**, %struct.KnifeVert*** %hv, align 8, !dbg !11646
  %arrayidx247 = getelementptr inbounds [2 x i32], [2 x i32]* %besti, i64 0, i64 1, !dbg !11647
  %193 = load i32, i32* %arrayidx247, align 4, !dbg !11647
  %idxprom248 = sext i32 %193 to i64, !dbg !11646
  %arrayidx249 = getelementptr inbounds %struct.KnifeVert*, %struct.KnifeVert** %192, i64 %idxprom248, !dbg !11646
  %194 = load %struct.KnifeVert*, %struct.KnifeVert** %arrayidx249, align 8, !dbg !11646
  %195 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11648
  %v1250 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %195, i32 0, i32 0, !dbg !11649
  store %struct.KnifeVert* %194, %struct.KnifeVert** %v1250, align 8, !dbg !11650
  %196 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11651
  %197 = load %struct.BMVert**, %struct.BMVert*** %fv, align 8, !dbg !11652
  %arrayidx251 = getelementptr inbounds [2 x i32], [2 x i32]* %bestj, i64 0, i64 1, !dbg !11653
  %198 = load i32, i32* %arrayidx251, align 4, !dbg !11653
  %idxprom252 = sext i32 %198 to i64, !dbg !11652
  %arrayidx253 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %197, i64 %idxprom252, !dbg !11652
  %199 = load %struct.BMVert*, %struct.BMVert** %arrayidx253, align 8, !dbg !11652
  %call254 = call %struct.KnifeVert* @get_bm_knife_vert(%struct.KnifeTool_OpData* %196, %struct.BMVert* %199), !dbg !11654
  %200 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11655
  %v2255 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %200, i32 0, i32 1, !dbg !11656
  store %struct.KnifeVert* %call254, %struct.KnifeVert** %v2255, align 8, !dbg !11657
  %201 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11658
  %202 = load %struct.ListBase*, %struct.ListBase** %chain, align 8, !dbg !11659
  %203 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11660
  %204 = bitcast %struct.KnifeEdge* %203 to i8*, !dbg !11660
  call void @knife_append_list(%struct.KnifeTool_OpData* %201, %struct.ListBase* %202, i8* %204), !dbg !11661
  %205 = load %struct.ListBase*, %struct.ListBase** %chain, align 8, !dbg !11662
  %206 = load %struct.ListBase**, %struct.ListBase*** %mainchain.addr, align 8, !dbg !11663
  store %struct.ListBase* %205, %struct.ListBase** %206, align 8, !dbg !11664
  %207 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11665
  %call256 = call %struct.ListBase* @knife_empty_list(%struct.KnifeTool_OpData* %207), !dbg !11666
  store %struct.ListBase* %call256, %struct.ListBase** %chain, align 8, !dbg !11667
  %arrayidx257 = getelementptr inbounds [2 x i32], [2 x i32]* %besti, i64 0, i64 1, !dbg !11668
  %208 = load i32, i32* %arrayidx257, align 4, !dbg !11668
  store i32 %208, i32* %i, align 4, !dbg !11670
  br label %for.cond258, !dbg !11671

for.cond258:                                      ; preds = %for.inc265, %for.end245
  %209 = load i32, i32* %i, align 4, !dbg !11672
  %arrayidx259 = getelementptr inbounds [2 x i32], [2 x i32]* %besti, i64 0, i64 0, !dbg !11674
  %210 = load i32, i32* %arrayidx259, align 4, !dbg !11674
  %cmp260 = icmp ne i32 %209, %210, !dbg !11675
  br i1 %cmp260, label %for.body262, label %for.end268, !dbg !11676

for.body262:                                      ; preds = %for.cond258
  %211 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11677
  %212 = load %struct.ListBase*, %struct.ListBase** %chain, align 8, !dbg !11679
  %213 = load %struct.KnifeEdge**, %struct.KnifeEdge*** %he, align 8, !dbg !11680
  %214 = load i32, i32* %i, align 4, !dbg !11681
  %idxprom263 = sext i32 %214 to i64, !dbg !11680
  %arrayidx264 = getelementptr inbounds %struct.KnifeEdge*, %struct.KnifeEdge** %213, i64 %idxprom263, !dbg !11680
  %215 = load %struct.KnifeEdge*, %struct.KnifeEdge** %arrayidx264, align 8, !dbg !11680
  %216 = bitcast %struct.KnifeEdge* %215 to i8*, !dbg !11680
  call void @knife_append_list(%struct.KnifeTool_OpData* %211, %struct.ListBase* %212, i8* %216), !dbg !11682
  br label %for.inc265, !dbg !11683

for.inc265:                                       ; preds = %for.body262
  %217 = load i32, i32* %i, align 4, !dbg !11684
  %add266 = add nsw i32 %217, 1, !dbg !11685
  %218 = load i32, i32* %nh, align 4, !dbg !11686
  %rem267 = srem i32 %add266, %218, !dbg !11687
  store i32 %rem267, i32* %i, align 4, !dbg !11688
  br label %for.cond258, !dbg !11689, !llvm.loop !11690

for.end268:                                       ; preds = %for.cond258
  %219 = load %struct.ListBase*, %struct.ListBase** %chain, align 8, !dbg !11692
  %220 = load %struct.ListBase**, %struct.ListBase*** %sidechain.addr, align 8, !dbg !11693
  store %struct.ListBase* %219, %struct.ListBase** %220, align 8, !dbg !11694
  store i8 1, i8* %retval, align 1, !dbg !11695
  br label %return, !dbg !11695

if.else269:                                       ; preds = %land.lhs.true218, %for.end214
  store i8 0, i8* %retval, align 1, !dbg !11696
  br label %return, !dbg !11696

return:                                           ; preds = %if.else269, %for.end268, %if.then
  %221 = load i8, i8* %retval, align 1, !dbg !11698
  ret i8 %221, !dbg !11698
}

declare dso_local void @BM_face_kill(%struct.BMesh*, %struct.BMFace*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.ListBase* @find_chain_from_vertex(%struct.KnifeTool_OpData* %kcd, %struct.KnifeEdge* %kfe, %struct.BMVert* %v, %struct.ListBase* %fedges) #0 !dbg !11699 {
entry:
  %retval = alloca %struct.ListBase*, align 8
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %kfe.addr = alloca %struct.KnifeEdge*, align 8
  %v.addr = alloca %struct.BMVert*, align 8
  %fedges.addr = alloca %struct.ListBase*, align 8
  %visited_ = alloca %struct.SmallHash, align 8
  %visited = alloca %struct.SmallHash*, align 8
  %ans = alloca %struct.ListBase*, align 8
  %found = alloca i8, align 1
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !11702, metadata !DIExpression()), !dbg !11703
  store %struct.KnifeEdge* %kfe, %struct.KnifeEdge** %kfe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe.addr, metadata !11704, metadata !DIExpression()), !dbg !11705
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !11706, metadata !DIExpression()), !dbg !11707
  store %struct.ListBase* %fedges, %struct.ListBase** %fedges.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %fedges.addr, metadata !11708, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.declare(metadata %struct.SmallHash* %visited_, metadata !11710, metadata !DIExpression()), !dbg !11711
  call void @llvm.dbg.declare(metadata %struct.SmallHash** %visited, metadata !11712, metadata !DIExpression()), !dbg !11713
  store %struct.SmallHash* %visited_, %struct.SmallHash** %visited, align 8, !dbg !11713
  call void @llvm.dbg.declare(metadata %struct.ListBase** %ans, metadata !11714, metadata !DIExpression()), !dbg !11715
  call void @llvm.dbg.declare(metadata i8* %found, metadata !11716, metadata !DIExpression()), !dbg !11717
  %0 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11718
  %call = call %struct.ListBase* @knife_empty_list(%struct.KnifeTool_OpData* %0), !dbg !11719
  store %struct.ListBase* %call, %struct.ListBase** %ans, align 8, !dbg !11720
  %1 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11721
  %2 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !11722
  %3 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !11723
  %4 = bitcast %struct.KnifeEdge* %3 to i8*, !dbg !11723
  call void @knife_append_list(%struct.KnifeTool_OpData* %1, %struct.ListBase* %2, i8* %4), !dbg !11724
  store i8 0, i8* %found, align 1, !dbg !11725
  %5 = load %struct.SmallHash*, %struct.SmallHash** %visited, align 8, !dbg !11726
  call void @BLI_smallhash_init(%struct.SmallHash* %5), !dbg !11727
  %6 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !11728
  %v1 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %6, i32 0, i32 0, !dbg !11730
  %7 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !11730
  %v2 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %7, i32 0, i32 0, !dbg !11731
  %8 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !11731
  %9 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !11732
  %cmp = icmp eq %struct.BMVert* %8, %9, !dbg !11733
  br i1 %cmp, label %if.then, label %if.else, !dbg !11734

if.then:                                          ; preds = %entry
  %10 = load %struct.SmallHash*, %struct.SmallHash** %visited, align 8, !dbg !11735
  %11 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !11737
  %v13 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %11, i32 0, i32 0, !dbg !11738
  %12 = load %struct.KnifeVert*, %struct.KnifeVert** %v13, align 8, !dbg !11738
  %13 = ptrtoint %struct.KnifeVert* %12 to i64, !dbg !11739
  call void @BLI_smallhash_insert(%struct.SmallHash* %10, i64 %13, i8* null), !dbg !11740
  %14 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11741
  %15 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !11742
  %v24 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %15, i32 0, i32 1, !dbg !11743
  %16 = load %struct.KnifeVert*, %struct.KnifeVert** %v24, align 8, !dbg !11743
  %17 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !11744
  %18 = load %struct.SmallHash*, %struct.SmallHash** %visited, align 8, !dbg !11745
  %19 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !11746
  %call5 = call zeroext i8 @find_chain_search(%struct.KnifeTool_OpData* %14, %struct.KnifeVert* %16, %struct.ListBase* %17, %struct.SmallHash* %18, %struct.ListBase* %19), !dbg !11747
  store i8 %call5, i8* %found, align 1, !dbg !11748
  br label %if.end, !dbg !11749

if.else:                                          ; preds = %entry
  %20 = load %struct.SmallHash*, %struct.SmallHash** %visited, align 8, !dbg !11750
  %21 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !11752
  %v26 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %21, i32 0, i32 1, !dbg !11753
  %22 = load %struct.KnifeVert*, %struct.KnifeVert** %v26, align 8, !dbg !11753
  %23 = ptrtoint %struct.KnifeVert* %22 to i64, !dbg !11754
  call void @BLI_smallhash_insert(%struct.SmallHash* %20, i64 %23, i8* null), !dbg !11755
  %24 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11756
  %25 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe.addr, align 8, !dbg !11757
  %v17 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %25, i32 0, i32 0, !dbg !11758
  %26 = load %struct.KnifeVert*, %struct.KnifeVert** %v17, align 8, !dbg !11758
  %27 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !11759
  %28 = load %struct.SmallHash*, %struct.SmallHash** %visited, align 8, !dbg !11760
  %29 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !11761
  %call8 = call zeroext i8 @find_chain_search(%struct.KnifeTool_OpData* %24, %struct.KnifeVert* %26, %struct.ListBase* %27, %struct.SmallHash* %28, %struct.ListBase* %29), !dbg !11762
  store i8 %call8, i8* %found, align 1, !dbg !11763
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %30 = load %struct.SmallHash*, %struct.SmallHash** %visited, align 8, !dbg !11764
  call void @BLI_smallhash_release(%struct.SmallHash* %30), !dbg !11765
  %31 = load i8, i8* %found, align 1, !dbg !11766
  %tobool = icmp ne i8 %31, 0, !dbg !11766
  br i1 %tobool, label %if.then9, label %if.else10, !dbg !11768

if.then9:                                         ; preds = %if.end
  %32 = load %struct.ListBase*, %struct.ListBase** %ans, align 8, !dbg !11769
  store %struct.ListBase* %32, %struct.ListBase** %retval, align 8, !dbg !11770
  br label %return, !dbg !11770

if.else10:                                        ; preds = %if.end
  store %struct.ListBase* null, %struct.ListBase** %retval, align 8, !dbg !11771
  br label %return, !dbg !11771

return:                                           ; preds = %if.else10, %if.then9
  %33 = load %struct.ListBase*, %struct.ListBase** %retval, align 8, !dbg !11772
  ret %struct.ListBase* %33, !dbg !11772
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @find_chain_search(%struct.KnifeTool_OpData* %kcd, %struct.KnifeVert* %kfv, %struct.ListBase* %fedges, %struct.SmallHash* %visited, %struct.ListBase* %chain) #0 !dbg !11773 {
entry:
  %retval = alloca i8, align 1
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %kfv.addr = alloca %struct.KnifeVert*, align 8
  %fedges.addr = alloca %struct.ListBase*, align 8
  %visited.addr = alloca %struct.SmallHash*, align 8
  %chain.addr = alloca %struct.ListBase*, align 8
  %r = alloca %struct.Ref*, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %kfv_other = alloca %struct.KnifeVert*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !11776, metadata !DIExpression()), !dbg !11777
  store %struct.KnifeVert* %kfv, %struct.KnifeVert** %kfv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv.addr, metadata !11778, metadata !DIExpression()), !dbg !11779
  store %struct.ListBase* %fedges, %struct.ListBase** %fedges.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %fedges.addr, metadata !11780, metadata !DIExpression()), !dbg !11781
  store %struct.SmallHash* %visited, %struct.SmallHash** %visited.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SmallHash** %visited.addr, metadata !11782, metadata !DIExpression()), !dbg !11783
  store %struct.ListBase* %chain, %struct.ListBase** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %chain.addr, metadata !11784, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.declare(metadata %struct.Ref** %r, metadata !11786, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !11788, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv_other, metadata !11790, metadata !DIExpression()), !dbg !11791
  %0 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv.addr, align 8, !dbg !11792
  %v = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %0, i32 0, i32 0, !dbg !11794
  %1 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11794
  %tobool = icmp ne %struct.BMVert* %1, null, !dbg !11792
  br i1 %tobool, label %if.then, label %if.end, !dbg !11795

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !11796
  br label %return, !dbg !11796

if.end:                                           ; preds = %entry
  %2 = load %struct.SmallHash*, %struct.SmallHash** %visited.addr, align 8, !dbg !11797
  %3 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv.addr, align 8, !dbg !11798
  %4 = ptrtoint %struct.KnifeVert* %3 to i64, !dbg !11799
  call void @BLI_smallhash_insert(%struct.SmallHash* %2, i64 %4, i8* null), !dbg !11800
  %5 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !11801
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !11803
  %6 = load i8*, i8** %first, align 8, !dbg !11803
  %7 = bitcast i8* %6 to %struct.Ref*, !dbg !11801
  store %struct.Ref* %7, %struct.Ref** %r, align 8, !dbg !11804
  br label %for.cond, !dbg !11805

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11806
  %tobool1 = icmp ne %struct.Ref* %8, null, !dbg !11808
  br i1 %tobool1, label %for.body, label %for.end, !dbg !11808

for.body:                                         ; preds = %for.cond
  %9 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11809
  %ref = getelementptr inbounds %struct.Ref, %struct.Ref* %9, i32 0, i32 2, !dbg !11811
  %10 = load i8*, i8** %ref, align 8, !dbg !11811
  %11 = bitcast i8* %10 to %struct.KnifeEdge*, !dbg !11809
  store %struct.KnifeEdge* %11, %struct.KnifeEdge** %kfe, align 8, !dbg !11812
  store %struct.KnifeVert* null, %struct.KnifeVert** %kfv_other, align 8, !dbg !11813
  %12 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11814
  %v1 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %12, i32 0, i32 0, !dbg !11816
  %13 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !11816
  %14 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv.addr, align 8, !dbg !11817
  %cmp = icmp eq %struct.KnifeVert* %13, %14, !dbg !11818
  br i1 %cmp, label %if.then2, label %if.else, !dbg !11819

if.then2:                                         ; preds = %for.body
  %15 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11820
  %v2 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %15, i32 0, i32 1, !dbg !11821
  %16 = load %struct.KnifeVert*, %struct.KnifeVert** %v2, align 8, !dbg !11821
  store %struct.KnifeVert* %16, %struct.KnifeVert** %kfv_other, align 8, !dbg !11822
  br label %if.end8, !dbg !11823

if.else:                                          ; preds = %for.body
  %17 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11824
  %v23 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %17, i32 0, i32 1, !dbg !11826
  %18 = load %struct.KnifeVert*, %struct.KnifeVert** %v23, align 8, !dbg !11826
  %19 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv.addr, align 8, !dbg !11827
  %cmp4 = icmp eq %struct.KnifeVert* %18, %19, !dbg !11828
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !11829

if.then5:                                         ; preds = %if.else
  %20 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11830
  %v16 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %20, i32 0, i32 0, !dbg !11831
  %21 = load %struct.KnifeVert*, %struct.KnifeVert** %v16, align 8, !dbg !11831
  store %struct.KnifeVert* %21, %struct.KnifeVert** %kfv_other, align 8, !dbg !11832
  br label %if.end7, !dbg !11833

if.end7:                                          ; preds = %if.then5, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then2
  %22 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv_other, align 8, !dbg !11834
  %tobool9 = icmp ne %struct.KnifeVert* %22, null, !dbg !11834
  br i1 %tobool9, label %land.lhs.true, label %if.end16, !dbg !11836

land.lhs.true:                                    ; preds = %if.end8
  %23 = load %struct.SmallHash*, %struct.SmallHash** %visited.addr, align 8, !dbg !11837
  %24 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv_other, align 8, !dbg !11838
  %25 = ptrtoint %struct.KnifeVert* %24 to i64, !dbg !11839
  %call = call zeroext i8 @BLI_smallhash_haskey(%struct.SmallHash* %23, i64 %25), !dbg !11840
  %tobool10 = icmp ne i8 %call, 0, !dbg !11840
  br i1 %tobool10, label %if.end16, label %if.then11, !dbg !11841

if.then11:                                        ; preds = %land.lhs.true
  %26 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11842
  %27 = load %struct.ListBase*, %struct.ListBase** %chain.addr, align 8, !dbg !11844
  %28 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11845
  %29 = bitcast %struct.KnifeEdge* %28 to i8*, !dbg !11845
  call void @knife_append_list(%struct.KnifeTool_OpData* %26, %struct.ListBase* %27, i8* %29), !dbg !11846
  %30 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11847
  %31 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv_other, align 8, !dbg !11849
  %32 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !11850
  %33 = load %struct.SmallHash*, %struct.SmallHash** %visited.addr, align 8, !dbg !11851
  %34 = load %struct.ListBase*, %struct.ListBase** %chain.addr, align 8, !dbg !11852
  %call12 = call zeroext i8 @find_chain_search(%struct.KnifeTool_OpData* %30, %struct.KnifeVert* %31, %struct.ListBase* %32, %struct.SmallHash* %33, %struct.ListBase* %34), !dbg !11853
  %tobool13 = icmp ne i8 %call12, 0, !dbg !11853
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !11854

if.then14:                                        ; preds = %if.then11
  store i8 1, i8* %retval, align 1, !dbg !11855
  br label %return, !dbg !11855

if.end15:                                         ; preds = %if.then11
  %35 = load %struct.ListBase*, %struct.ListBase** %chain.addr, align 8, !dbg !11856
  %36 = load %struct.ListBase*, %struct.ListBase** %chain.addr, align 8, !dbg !11857
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %36, i32 0, i32 1, !dbg !11858
  %37 = load i8*, i8** %last, align 8, !dbg !11858
  call void @BLI_remlink(%struct.ListBase* %35, i8* %37), !dbg !11859
  br label %if.end16, !dbg !11860

if.end16:                                         ; preds = %if.end15, %land.lhs.true, %if.end8
  br label %for.inc, !dbg !11861

for.inc:                                          ; preds = %if.end16
  %38 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11862
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %38, i32 0, i32 0, !dbg !11863
  %39 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !11863
  store %struct.Ref* %39, %struct.Ref** %r, align 8, !dbg !11864
  br label %for.cond, !dbg !11865, !llvm.loop !11866

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !11868
  br label %return, !dbg !11868

return:                                           ; preds = %for.end, %if.then14, %if.then
  %40 = load i8, i8* %retval, align 1, !dbg !11869
  ret i8 %40, !dbg !11869
}

declare dso_local %struct.BMLoop* @BM_face_vert_share_loop(%struct.BMFace*, %struct.BMVert*) #2

declare dso_local %struct.BMEdge* @BM_edge_exists(%struct.BMVert*, %struct.BMVert*) #2

declare dso_local %struct.BMFace* @BM_face_split(%struct.BMesh*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop**, %struct.BMEdge*, i8 zeroext) #2

declare dso_local %struct.BMFace* @BM_face_split_n(%struct.BMesh*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, [3 x float]*, i32, %struct.BMLoop**, %struct.BMEdge*) #2

declare dso_local void @BM_edge_select_set(%struct.BMesh*, %struct.BMEdge*, i8 zeroext) #2

declare dso_local void @BM_elem_select_copy(%struct.BMesh*, %struct.BMesh*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @find_hole_search(%struct.KnifeTool_OpData* %kcd, %struct.KnifeVert* %kfvfirst, %struct.KnifeVert* %kfv, %struct.ListBase* %fedges, %struct.SmallHash* %visited, %struct.ListBase* %hole) #0 !dbg !11870 {
entry:
  %retval = alloca i8, align 1
  %kcd.addr = alloca %struct.KnifeTool_OpData*, align 8
  %kfvfirst.addr = alloca %struct.KnifeVert*, align 8
  %kfv.addr = alloca %struct.KnifeVert*, align 8
  %fedges.addr = alloca %struct.ListBase*, align 8
  %visited.addr = alloca %struct.SmallHash*, align 8
  %hole.addr = alloca %struct.ListBase*, align 8
  %r = alloca %struct.Ref*, align 8
  %kfe = alloca %struct.KnifeEdge*, align 8
  %kfelast = alloca %struct.KnifeEdge*, align 8
  %kfv_other = alloca %struct.KnifeVert*, align 8
  store %struct.KnifeTool_OpData* %kcd, %struct.KnifeTool_OpData** %kcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeTool_OpData** %kcd.addr, metadata !11873, metadata !DIExpression()), !dbg !11874
  store %struct.KnifeVert* %kfvfirst, %struct.KnifeVert** %kfvfirst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfvfirst.addr, metadata !11875, metadata !DIExpression()), !dbg !11876
  store %struct.KnifeVert* %kfv, %struct.KnifeVert** %kfv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv.addr, metadata !11877, metadata !DIExpression()), !dbg !11878
  store %struct.ListBase* %fedges, %struct.ListBase** %fedges.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %fedges.addr, metadata !11879, metadata !DIExpression()), !dbg !11880
  store %struct.SmallHash* %visited, %struct.SmallHash** %visited.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SmallHash** %visited.addr, metadata !11881, metadata !DIExpression()), !dbg !11882
  store %struct.ListBase* %hole, %struct.ListBase** %hole.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %hole.addr, metadata !11883, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.declare(metadata %struct.Ref** %r, metadata !11885, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfe, metadata !11887, metadata !DIExpression()), !dbg !11888
  call void @llvm.dbg.declare(metadata %struct.KnifeEdge** %kfelast, metadata !11889, metadata !DIExpression()), !dbg !11890
  call void @llvm.dbg.declare(metadata %struct.KnifeVert** %kfv_other, metadata !11891, metadata !DIExpression()), !dbg !11892
  %0 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv.addr, align 8, !dbg !11893
  %1 = load %struct.KnifeVert*, %struct.KnifeVert** %kfvfirst.addr, align 8, !dbg !11895
  %cmp = icmp eq %struct.KnifeVert* %0, %1, !dbg !11896
  br i1 %cmp, label %if.then, label %if.end, !dbg !11897

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !11898
  br label %return, !dbg !11898

if.end:                                           ; preds = %entry
  %2 = load %struct.SmallHash*, %struct.SmallHash** %visited.addr, align 8, !dbg !11899
  %3 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv.addr, align 8, !dbg !11900
  %4 = ptrtoint %struct.KnifeVert* %3 to i64, !dbg !11901
  call void @BLI_smallhash_insert(%struct.SmallHash* %2, i64 %4, i8* null), !dbg !11902
  %5 = load %struct.ListBase*, %struct.ListBase** %hole.addr, align 8, !dbg !11903
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 1, !dbg !11904
  %6 = load i8*, i8** %last, align 8, !dbg !11904
  %7 = bitcast i8* %6 to %struct.Ref*, !dbg !11905
  %ref = getelementptr inbounds %struct.Ref, %struct.Ref* %7, i32 0, i32 2, !dbg !11906
  %8 = load i8*, i8** %ref, align 8, !dbg !11906
  %9 = bitcast i8* %8 to %struct.KnifeEdge*, !dbg !11907
  store %struct.KnifeEdge* %9, %struct.KnifeEdge** %kfelast, align 8, !dbg !11908
  %10 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !11909
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %10, i32 0, i32 0, !dbg !11911
  %11 = load i8*, i8** %first, align 8, !dbg !11911
  %12 = bitcast i8* %11 to %struct.Ref*, !dbg !11909
  store %struct.Ref* %12, %struct.Ref** %r, align 8, !dbg !11912
  br label %for.cond, !dbg !11913

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11914
  %tobool = icmp ne %struct.Ref* %13, null, !dbg !11916
  br i1 %tobool, label %for.body, label %for.end, !dbg !11916

for.body:                                         ; preds = %for.cond
  %14 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11917
  %ref1 = getelementptr inbounds %struct.Ref, %struct.Ref* %14, i32 0, i32 2, !dbg !11919
  %15 = load i8*, i8** %ref1, align 8, !dbg !11919
  %16 = bitcast i8* %15 to %struct.KnifeEdge*, !dbg !11917
  store %struct.KnifeEdge* %16, %struct.KnifeEdge** %kfe, align 8, !dbg !11920
  %17 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11921
  %18 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfelast, align 8, !dbg !11923
  %cmp2 = icmp eq %struct.KnifeEdge* %17, %18, !dbg !11924
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11925

if.then3:                                         ; preds = %for.body
  br label %for.inc, !dbg !11926

if.end4:                                          ; preds = %for.body
  %19 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11927
  %v1 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %19, i32 0, i32 0, !dbg !11929
  %20 = load %struct.KnifeVert*, %struct.KnifeVert** %v1, align 8, !dbg !11929
  %v = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %20, i32 0, i32 0, !dbg !11930
  %21 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11930
  %tobool5 = icmp ne %struct.BMVert* %21, null, !dbg !11927
  br i1 %tobool5, label %if.then8, label %lor.lhs.false, !dbg !11931

lor.lhs.false:                                    ; preds = %if.end4
  %22 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11932
  %v2 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %22, i32 0, i32 1, !dbg !11933
  %23 = load %struct.KnifeVert*, %struct.KnifeVert** %v2, align 8, !dbg !11933
  %v6 = getelementptr inbounds %struct.KnifeVert, %struct.KnifeVert* %23, i32 0, i32 0, !dbg !11934
  %24 = load %struct.BMVert*, %struct.BMVert** %v6, align 8, !dbg !11934
  %tobool7 = icmp ne %struct.BMVert* %24, null, !dbg !11932
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !11935

if.then8:                                         ; preds = %lor.lhs.false, %if.end4
  br label %for.inc, !dbg !11936

if.end9:                                          ; preds = %lor.lhs.false
  store %struct.KnifeVert* null, %struct.KnifeVert** %kfv_other, align 8, !dbg !11937
  %25 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11938
  %v110 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %25, i32 0, i32 0, !dbg !11940
  %26 = load %struct.KnifeVert*, %struct.KnifeVert** %v110, align 8, !dbg !11940
  %27 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv.addr, align 8, !dbg !11941
  %cmp11 = icmp eq %struct.KnifeVert* %26, %27, !dbg !11942
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !11943

if.then12:                                        ; preds = %if.end9
  %28 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11944
  %v213 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %28, i32 0, i32 1, !dbg !11945
  %29 = load %struct.KnifeVert*, %struct.KnifeVert** %v213, align 8, !dbg !11945
  store %struct.KnifeVert* %29, %struct.KnifeVert** %kfv_other, align 8, !dbg !11946
  br label %if.end19, !dbg !11947

if.else:                                          ; preds = %if.end9
  %30 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11948
  %v214 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %30, i32 0, i32 1, !dbg !11950
  %31 = load %struct.KnifeVert*, %struct.KnifeVert** %v214, align 8, !dbg !11950
  %32 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv.addr, align 8, !dbg !11951
  %cmp15 = icmp eq %struct.KnifeVert* %31, %32, !dbg !11952
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !11953

if.then16:                                        ; preds = %if.else
  %33 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11954
  %v117 = getelementptr inbounds %struct.KnifeEdge, %struct.KnifeEdge* %33, i32 0, i32 0, !dbg !11955
  %34 = load %struct.KnifeVert*, %struct.KnifeVert** %v117, align 8, !dbg !11955
  store %struct.KnifeVert* %34, %struct.KnifeVert** %kfv_other, align 8, !dbg !11956
  br label %if.end18, !dbg !11957

if.end18:                                         ; preds = %if.then16, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then12
  %35 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv_other, align 8, !dbg !11958
  %tobool20 = icmp ne %struct.KnifeVert* %35, null, !dbg !11958
  br i1 %tobool20, label %land.lhs.true, label %if.end28, !dbg !11960

land.lhs.true:                                    ; preds = %if.end19
  %36 = load %struct.SmallHash*, %struct.SmallHash** %visited.addr, align 8, !dbg !11961
  %37 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv_other, align 8, !dbg !11962
  %38 = ptrtoint %struct.KnifeVert* %37 to i64, !dbg !11963
  %call = call zeroext i8 @BLI_smallhash_haskey(%struct.SmallHash* %36, i64 %38), !dbg !11964
  %tobool21 = icmp ne i8 %call, 0, !dbg !11964
  br i1 %tobool21, label %if.end28, label %if.then22, !dbg !11965

if.then22:                                        ; preds = %land.lhs.true
  %39 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11966
  %40 = load %struct.ListBase*, %struct.ListBase** %hole.addr, align 8, !dbg !11968
  %41 = load %struct.KnifeEdge*, %struct.KnifeEdge** %kfe, align 8, !dbg !11969
  %42 = bitcast %struct.KnifeEdge* %41 to i8*, !dbg !11969
  call void @knife_append_list(%struct.KnifeTool_OpData* %39, %struct.ListBase* %40, i8* %42), !dbg !11970
  %43 = load %struct.KnifeTool_OpData*, %struct.KnifeTool_OpData** %kcd.addr, align 8, !dbg !11971
  %44 = load %struct.KnifeVert*, %struct.KnifeVert** %kfvfirst.addr, align 8, !dbg !11973
  %45 = load %struct.KnifeVert*, %struct.KnifeVert** %kfv_other, align 8, !dbg !11974
  %46 = load %struct.ListBase*, %struct.ListBase** %fedges.addr, align 8, !dbg !11975
  %47 = load %struct.SmallHash*, %struct.SmallHash** %visited.addr, align 8, !dbg !11976
  %48 = load %struct.ListBase*, %struct.ListBase** %hole.addr, align 8, !dbg !11977
  %call23 = call zeroext i8 @find_hole_search(%struct.KnifeTool_OpData* %43, %struct.KnifeVert* %44, %struct.KnifeVert* %45, %struct.ListBase* %46, %struct.SmallHash* %47, %struct.ListBase* %48), !dbg !11978
  %tobool24 = icmp ne i8 %call23, 0, !dbg !11978
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !11979

if.then25:                                        ; preds = %if.then22
  store i8 1, i8* %retval, align 1, !dbg !11980
  br label %return, !dbg !11980

if.end26:                                         ; preds = %if.then22
  %49 = load %struct.ListBase*, %struct.ListBase** %hole.addr, align 8, !dbg !11981
  %50 = load %struct.ListBase*, %struct.ListBase** %hole.addr, align 8, !dbg !11982
  %last27 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %50, i32 0, i32 1, !dbg !11983
  %51 = load i8*, i8** %last27, align 8, !dbg !11983
  call void @BLI_remlink(%struct.ListBase* %49, i8* %51), !dbg !11984
  br label %if.end28, !dbg !11985

if.end28:                                         ; preds = %if.end26, %land.lhs.true, %if.end19
  br label %for.inc, !dbg !11986

for.inc:                                          ; preds = %if.end28, %if.then8, %if.then3
  %52 = load %struct.Ref*, %struct.Ref** %r, align 8, !dbg !11987
  %next = getelementptr inbounds %struct.Ref, %struct.Ref* %52, i32 0, i32 0, !dbg !11988
  %53 = load %struct.Ref*, %struct.Ref** %next, align 8, !dbg !11988
  store %struct.Ref* %53, %struct.Ref** %r, align 8, !dbg !11989
  br label %for.cond, !dbg !11990, !llvm.loop !11991

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !11993
  br label %return, !dbg !11993

return:                                           ; preds = %for.end, %if.then25, %if.then
  %54 = load i8, i8* %retval, align 1, !dbg !11994
  ret i8 %54, !dbg !11994
}

; Function Attrs: noinline nounwind uwtable
define internal void @axis_dominant_v3(i32* %r_axis_a, i32* %r_axis_b, float* %axis) #0 !dbg !11995 {
entry:
  %r_axis_a.addr = alloca i32*, align 8
  %r_axis_b.addr = alloca i32*, align 8
  %axis.addr = alloca float*, align 8
  %xn = alloca float, align 4
  %yn = alloca float, align 4
  %zn = alloca float, align 4
  store i32* %r_axis_a, i32** %r_axis_a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_axis_a.addr, metadata !11999, metadata !DIExpression()), !dbg !12000
  store i32* %r_axis_b, i32** %r_axis_b.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_axis_b.addr, metadata !12001, metadata !DIExpression()), !dbg !12002
  store float* %axis, float** %axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axis.addr, metadata !12003, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.declare(metadata float* %xn, metadata !12005, metadata !DIExpression()), !dbg !12006
  %0 = load float*, float** %axis.addr, align 8, !dbg !12007
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12007
  %1 = load float, float* %arrayidx, align 4, !dbg !12007
  %2 = call float @llvm.fabs.f32(float %1), !dbg !12008
  store float %2, float* %xn, align 4, !dbg !12006
  call void @llvm.dbg.declare(metadata float* %yn, metadata !12009, metadata !DIExpression()), !dbg !12010
  %3 = load float*, float** %axis.addr, align 8, !dbg !12011
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !12011
  %4 = load float, float* %arrayidx1, align 4, !dbg !12011
  %5 = call float @llvm.fabs.f32(float %4), !dbg !12012
  store float %5, float* %yn, align 4, !dbg !12010
  call void @llvm.dbg.declare(metadata float* %zn, metadata !12013, metadata !DIExpression()), !dbg !12014
  %6 = load float*, float** %axis.addr, align 8, !dbg !12015
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 2, !dbg !12015
  %7 = load float, float* %arrayidx2, align 4, !dbg !12015
  %8 = call float @llvm.fabs.f32(float %7), !dbg !12016
  store float %8, float* %zn, align 4, !dbg !12014
  %9 = load float, float* %zn, align 4, !dbg !12017
  %10 = load float, float* %xn, align 4, !dbg !12019
  %cmp = fcmp oge float %9, %10, !dbg !12020
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12021

land.lhs.true:                                    ; preds = %entry
  %11 = load float, float* %zn, align 4, !dbg !12022
  %12 = load float, float* %yn, align 4, !dbg !12023
  %cmp3 = fcmp oge float %11, %12, !dbg !12024
  br i1 %cmp3, label %if.then, label %if.else, !dbg !12025

if.then:                                          ; preds = %land.lhs.true
  %13 = load i32*, i32** %r_axis_a.addr, align 8, !dbg !12026
  store i32 0, i32* %13, align 4, !dbg !12028
  %14 = load i32*, i32** %r_axis_b.addr, align 8, !dbg !12029
  store i32 1, i32* %14, align 4, !dbg !12030
  br label %if.end9, !dbg !12031

if.else:                                          ; preds = %land.lhs.true, %entry
  %15 = load float, float* %yn, align 4, !dbg !12032
  %16 = load float, float* %xn, align 4, !dbg !12034
  %cmp4 = fcmp oge float %15, %16, !dbg !12035
  br i1 %cmp4, label %land.lhs.true5, label %if.else8, !dbg !12036

land.lhs.true5:                                   ; preds = %if.else
  %17 = load float, float* %yn, align 4, !dbg !12037
  %18 = load float, float* %zn, align 4, !dbg !12038
  %cmp6 = fcmp oge float %17, %18, !dbg !12039
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !12040

if.then7:                                         ; preds = %land.lhs.true5
  %19 = load i32*, i32** %r_axis_a.addr, align 8, !dbg !12041
  store i32 0, i32* %19, align 4, !dbg !12043
  %20 = load i32*, i32** %r_axis_b.addr, align 8, !dbg !12044
  store i32 2, i32* %20, align 4, !dbg !12045
  br label %if.end, !dbg !12046

if.else8:                                         ; preds = %land.lhs.true5, %if.else
  %21 = load i32*, i32** %r_axis_a.addr, align 8, !dbg !12047
  store i32 1, i32* %21, align 4, !dbg !12049
  %22 = load i32*, i32** %r_axis_b.addr, align 8, !dbg !12050
  store i32 2, i32* %22, align 4, !dbg !12051
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then7
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  ret void, !dbg !12052
}

declare dso_local i32 @isect_line_line_v2(float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !12053 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !12056, metadata !DIExpression()), !dbg !12057
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !12058, metadata !DIExpression()), !dbg !12059
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !12060, metadata !DIExpression()), !dbg !12061
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12062, metadata !DIExpression()), !dbg !12063
  %0 = load i8, i8* %itype.addr, align 1, !dbg !12064
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12065
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !12066
  store i8 %0, i8* %itype1, align 4, !dbg !12067
  %2 = load i8, i8* %itype.addr, align 1, !dbg !12068
  %conv = zext i8 %2 to i32, !dbg !12069
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !12070

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12071
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !12073
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !12074
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12075
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !12076
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !12077
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !12078
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !12079
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !12079
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12080
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !12081
  %elem_of_mesh = bitcast %union.anon.0* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !12082
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !12083
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !12084
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !12085
  br label %sw.epilog, !dbg !12086

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12087
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !12088
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !12089
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12090
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !12091
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !12092
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !12093
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !12094
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !12094
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12095
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !12096
  %elem_of_mesh7 = bitcast %union.anon.0* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !12097
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !12098
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !12099
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !12100
  br label %sw.epilog, !dbg !12101

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12102
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !12103
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !12104
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12105
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !12106
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !12107
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !12108
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !12109
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !12109
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12110
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !12111
  %elem_of_mesh14 = bitcast %union.anon.0* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !12112
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !12113
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !12114
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !12115
  br label %sw.epilog, !dbg !12116

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12117
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !12118
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !12119
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12120
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !12121
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !12122
  %20 = load i8*, i8** %data.addr, align 8, !dbg !12123
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !12124
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12125
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !12126
  %edge_of_vert = bitcast %union.anon.0* %data20 to %struct.BMIter__edge_of_vert*, !dbg !12127
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !12128
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !12129
  br label %sw.epilog, !dbg !12130

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12131
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !12132
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !12133
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12134
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !12135
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !12136
  %25 = load i8*, i8** %data.addr, align 8, !dbg !12137
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !12138
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12139
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !12140
  %face_of_vert = bitcast %union.anon.0* %data24 to %struct.BMIter__face_of_vert*, !dbg !12141
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !12142
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !12143
  br label %sw.epilog, !dbg !12144

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12145
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !12146
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !12147
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12148
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !12149
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !12150
  %30 = load i8*, i8** %data.addr, align 8, !dbg !12151
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !12152
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12153
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !12154
  %loop_of_vert = bitcast %union.anon.0* %data29 to %struct.BMIter__loop_of_vert*, !dbg !12155
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !12156
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !12157
  br label %sw.epilog, !dbg !12158

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12159
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !12160
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !12161
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12162
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !12163
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !12164
  %35 = load i8*, i8** %data.addr, align 8, !dbg !12165
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !12166
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12167
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !12168
  %vert_of_edge = bitcast %union.anon.0* %data34 to %struct.BMIter__vert_of_edge*, !dbg !12169
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !12170
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !12171
  br label %sw.epilog, !dbg !12172

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12173
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !12174
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !12175
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12176
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !12177
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !12178
  %40 = load i8*, i8** %data.addr, align 8, !dbg !12179
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !12180
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12181
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !12182
  %face_of_edge = bitcast %union.anon.0* %data38 to %struct.BMIter__face_of_edge*, !dbg !12183
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !12184
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !12185
  br label %sw.epilog, !dbg !12186

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12187
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !12188
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !12189
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12190
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !12191
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !12192
  %45 = load i8*, i8** %data.addr, align 8, !dbg !12193
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !12194
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12195
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !12196
  %vert_of_face = bitcast %union.anon.0* %data43 to %struct.BMIter__vert_of_face*, !dbg !12197
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !12198
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !12199
  br label %sw.epilog, !dbg !12200

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12201
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !12202
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !12203
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12204
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !12205
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !12206
  %50 = load i8*, i8** %data.addr, align 8, !dbg !12207
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !12208
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12209
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !12210
  %edge_of_face = bitcast %union.anon.0* %data47 to %struct.BMIter__edge_of_face*, !dbg !12211
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !12212
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !12213
  br label %sw.epilog, !dbg !12214

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12215
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !12216
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !12217
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12218
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !12219
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !12220
  %55 = load i8*, i8** %data.addr, align 8, !dbg !12221
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !12222
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12223
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !12224
  %loop_of_face = bitcast %union.anon.0* %data52 to %struct.BMIter__loop_of_face*, !dbg !12225
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !12226
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !12227
  br label %sw.epilog, !dbg !12228

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12229
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !12230
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !12231
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12232
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !12233
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !12234
  %60 = load i8*, i8** %data.addr, align 8, !dbg !12235
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !12236
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12237
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !12238
  %loop_of_loop = bitcast %union.anon.0* %data57 to %struct.BMIter__loop_of_loop*, !dbg !12239
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !12240
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !12241
  br label %sw.epilog, !dbg !12242

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12243
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !12244
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !12245
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12246
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !12247
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !12248
  %65 = load i8*, i8** %data.addr, align 8, !dbg !12249
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !12250
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12251
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !12252
  %loop_of_edge = bitcast %union.anon.0* %data61 to %struct.BMIter__loop_of_edge*, !dbg !12253
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !12254
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !12255
  br label %sw.epilog, !dbg !12256

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12257
  br label %return, !dbg !12257

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12258
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !12259
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !12259
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !12260
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !12260
  call void %69(i8* %71), !dbg !12258
  store i8 1, i8* %retval, align 1, !dbg !12261
  br label %return, !dbg !12261

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !12262
  ret i8 %72, !dbg !12262
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @edvm_mesh_knife_face_point(%struct.BMFace* %f, float* %r_cent) #0 !dbg !12263 {
entry:
  %f.addr = alloca %struct.BMFace*, align 8
  %r_cent.addr = alloca float*, align 8
  %tottri = alloca i32, align 4
  %loops = alloca %struct.BMLoop**, align 8
  %index = alloca [3 x i32]*, align 8
  %j = alloca i32, align 4
  %best_co = alloca [3 x float*], align 16
  %best_area = alloca float, align 4
  %ok = alloca i8, align 1
  %p1 = alloca float*, align 8
  %p2 = alloca float*, align 8
  %p3 = alloca float*, align 8
  %area = alloca float, align 4
  %cross = alloca [3 x float], align 4
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !12266, metadata !DIExpression()), !dbg !12267
  store float* %r_cent, float** %r_cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_cent.addr, metadata !12268, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.declare(metadata i32* %tottri, metadata !12270, metadata !DIExpression()), !dbg !12271
  %0 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !12272
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %0, i32 0, i32 3, !dbg !12273
  %1 = load i32, i32* %len, align 8, !dbg !12273
  %sub = sub nsw i32 %1, 2, !dbg !12274
  store i32 %sub, i32* %tottri, align 4, !dbg !12271
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %loops, metadata !12275, metadata !DIExpression()), !dbg !12276
  %2 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !12277
  %len1 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %2, i32 0, i32 3, !dbg !12277
  %3 = load i32, i32* %len1, align 8, !dbg !12277
  %conv = sext i32 %3 to i64, !dbg !12277
  %mul = mul i64 8, %conv, !dbg !12277
  %4 = alloca i8, i64 %mul, align 16, !dbg !12277
  %5 = bitcast i8* %4 to %struct.BMLoop**, !dbg !12277
  store %struct.BMLoop** %5, %struct.BMLoop*** %loops, align 8, !dbg !12276
  call void @llvm.dbg.declare(metadata [3 x i32]** %index, metadata !12278, metadata !DIExpression()), !dbg !12281
  %6 = load i32, i32* %tottri, align 4, !dbg !12282
  %conv2 = sext i32 %6 to i64, !dbg !12282
  %mul3 = mul i64 12, %conv2, !dbg !12282
  %7 = alloca i8, i64 %mul3, align 16, !dbg !12282
  %8 = bitcast i8* %7 to [3 x i32]*, !dbg !12282
  store [3 x i32]* %8, [3 x i32]** %index, align 8, !dbg !12281
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12283, metadata !DIExpression()), !dbg !12284
  call void @llvm.dbg.declare(metadata [3 x float*]* %best_co, metadata !12285, metadata !DIExpression()), !dbg !12287
  %9 = bitcast [3 x float*]* %best_co to i8*, !dbg !12287
  call void @llvm.memset.p0i8.i64(i8* align 16 %9, i8 0, i64 24, i1 false), !dbg !12287
  call void @llvm.dbg.declare(metadata float* %best_area, metadata !12288, metadata !DIExpression()), !dbg !12289
  store float -1.000000e+00, float* %best_area, align 4, !dbg !12289
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !12290, metadata !DIExpression()), !dbg !12291
  store i8 0, i8* %ok, align 1, !dbg !12291
  %10 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !12292
  %11 = load %struct.BMLoop**, %struct.BMLoop*** %loops, align 8, !dbg !12293
  %12 = load [3 x i32]*, [3 x i32]** %index, align 8, !dbg !12294
  call void @BM_face_calc_tessellation(%struct.BMFace* %10, %struct.BMLoop** %11, [3 x i32]* %12), !dbg !12295
  store i32 0, i32* %j, align 4, !dbg !12296
  br label %for.cond, !dbg !12298

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load i32, i32* %j, align 4, !dbg !12299
  %14 = load i32, i32* %tottri, align 4, !dbg !12301
  %cmp = icmp slt i32 %13, %14, !dbg !12302
  br i1 %cmp, label %for.body, label %for.end, !dbg !12303

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %p1, metadata !12304, metadata !DIExpression()), !dbg !12306
  %15 = load %struct.BMLoop**, %struct.BMLoop*** %loops, align 8, !dbg !12307
  %16 = load [3 x i32]*, [3 x i32]** %index, align 8, !dbg !12308
  %17 = load i32, i32* %j, align 4, !dbg !12309
  %idxprom = sext i32 %17 to i64, !dbg !12308
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %16, i64 %idxprom, !dbg !12308
  %arrayidx5 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx, i64 0, i64 0, !dbg !12308
  %18 = load i32, i32* %arrayidx5, align 4, !dbg !12308
  %idxprom6 = zext i32 %18 to i64, !dbg !12307
  %arrayidx7 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %15, i64 %idxprom6, !dbg !12307
  %19 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx7, align 8, !dbg !12307
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %19, i32 0, i32 1, !dbg !12310
  %20 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !12310
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 2, !dbg !12311
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12307
  store float* %arraydecay, float** %p1, align 8, !dbg !12306
  call void @llvm.dbg.declare(metadata float** %p2, metadata !12312, metadata !DIExpression()), !dbg !12313
  %21 = load %struct.BMLoop**, %struct.BMLoop*** %loops, align 8, !dbg !12314
  %22 = load [3 x i32]*, [3 x i32]** %index, align 8, !dbg !12315
  %23 = load i32, i32* %j, align 4, !dbg !12316
  %idxprom8 = sext i32 %23 to i64, !dbg !12315
  %arrayidx9 = getelementptr inbounds [3 x i32], [3 x i32]* %22, i64 %idxprom8, !dbg !12315
  %arrayidx10 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx9, i64 0, i64 1, !dbg !12315
  %24 = load i32, i32* %arrayidx10, align 4, !dbg !12315
  %idxprom11 = zext i32 %24 to i64, !dbg !12314
  %arrayidx12 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %21, i64 %idxprom11, !dbg !12314
  %25 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx12, align 8, !dbg !12314
  %v13 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %25, i32 0, i32 1, !dbg !12317
  %26 = load %struct.BMVert*, %struct.BMVert** %v13, align 8, !dbg !12317
  %co14 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %26, i32 0, i32 2, !dbg !12318
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !12314
  store float* %arraydecay15, float** %p2, align 8, !dbg !12313
  call void @llvm.dbg.declare(metadata float** %p3, metadata !12319, metadata !DIExpression()), !dbg !12320
  %27 = load %struct.BMLoop**, %struct.BMLoop*** %loops, align 8, !dbg !12321
  %28 = load [3 x i32]*, [3 x i32]** %index, align 8, !dbg !12322
  %29 = load i32, i32* %j, align 4, !dbg !12323
  %idxprom16 = sext i32 %29 to i64, !dbg !12322
  %arrayidx17 = getelementptr inbounds [3 x i32], [3 x i32]* %28, i64 %idxprom16, !dbg !12322
  %arrayidx18 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx17, i64 0, i64 2, !dbg !12322
  %30 = load i32, i32* %arrayidx18, align 4, !dbg !12322
  %idxprom19 = zext i32 %30 to i64, !dbg !12321
  %arrayidx20 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %27, i64 %idxprom19, !dbg !12321
  %31 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx20, align 8, !dbg !12321
  %v21 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %31, i32 0, i32 1, !dbg !12324
  %32 = load %struct.BMVert*, %struct.BMVert** %v21, align 8, !dbg !12324
  %co22 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %32, i32 0, i32 2, !dbg !12325
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %co22, i64 0, i64 0, !dbg !12321
  store float* %arraydecay23, float** %p3, align 8, !dbg !12320
  call void @llvm.dbg.declare(metadata float* %area, metadata !12326, metadata !DIExpression()), !dbg !12327
  call void @llvm.dbg.declare(metadata [3 x float]* %cross, metadata !12328, metadata !DIExpression()), !dbg !12329
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !12330
  %33 = load float*, float** %p2, align 8, !dbg !12331
  %34 = load float*, float** %p3, align 8, !dbg !12332
  call void @cross_v3_v3v3(float* %arraydecay24, float* %33, float* %34), !dbg !12333
  %35 = load float*, float** %p1, align 8, !dbg !12334
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !12335
  %call = call float @dot_v3v3(float* %35, float* %arraydecay25), !dbg !12336
  %36 = call float @llvm.fabs.f32(float %call), !dbg !12337
  store float %36, float* %area, align 4, !dbg !12338
  %37 = load float, float* %area, align 4, !dbg !12339
  %38 = load float, float* %best_area, align 4, !dbg !12341
  %cmp26 = fcmp ogt float %37, %38, !dbg !12342
  br i1 %cmp26, label %if.then, label %if.end, !dbg !12343

if.then:                                          ; preds = %for.body
  %39 = load float*, float** %p1, align 8, !dbg !12344
  %arrayidx28 = getelementptr inbounds [3 x float*], [3 x float*]* %best_co, i64 0, i64 0, !dbg !12346
  store float* %39, float** %arrayidx28, align 16, !dbg !12347
  %40 = load float*, float** %p2, align 8, !dbg !12348
  %arrayidx29 = getelementptr inbounds [3 x float*], [3 x float*]* %best_co, i64 0, i64 1, !dbg !12349
  store float* %40, float** %arrayidx29, align 8, !dbg !12350
  %41 = load float*, float** %p3, align 8, !dbg !12351
  %arrayidx30 = getelementptr inbounds [3 x float*], [3 x float*]* %best_co, i64 0, i64 2, !dbg !12352
  store float* %41, float** %arrayidx30, align 16, !dbg !12353
  %42 = load float, float* %area, align 4, !dbg !12354
  store float %42, float* %best_area, align 4, !dbg !12355
  store i8 1, i8* %ok, align 1, !dbg !12356
  br label %if.end, !dbg !12357

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !12358

for.inc:                                          ; preds = %if.end
  %43 = load i32, i32* %j, align 4, !dbg !12359
  %inc = add nsw i32 %43, 1, !dbg !12359
  store i32 %inc, i32* %j, align 4, !dbg !12359
  br label %for.cond, !dbg !12360, !llvm.loop !12361

for.end:                                          ; preds = %for.cond
  %44 = load i8, i8* %ok, align 1, !dbg !12363
  %tobool = icmp ne i8 %44, 0, !dbg !12363
  br i1 %tobool, label %if.then31, label %if.else, !dbg !12365

if.then31:                                        ; preds = %for.end
  %45 = load float*, float** %r_cent.addr, align 8, !dbg !12366
  %arrayidx32 = getelementptr inbounds [3 x float*], [3 x float*]* %best_co, i64 0, i64 0, !dbg !12368
  %46 = load float*, float** %arrayidx32, align 16, !dbg !12368
  %arrayidx33 = getelementptr inbounds [3 x float*], [3 x float*]* %best_co, i64 0, i64 1, !dbg !12369
  %47 = load float*, float** %arrayidx33, align 8, !dbg !12369
  %arrayidx34 = getelementptr inbounds [3 x float*], [3 x float*]* %best_co, i64 0, i64 2, !dbg !12370
  %48 = load float*, float** %arrayidx34, align 16, !dbg !12370
  call void @mid_v3_v3v3v3(float* %45, float* %46, float* %47, float* %48), !dbg !12371
  br label %if.end47, !dbg !12372

if.else:                                          ; preds = %for.end
  %49 = load float*, float** %r_cent.addr, align 8, !dbg !12373
  %50 = load %struct.BMLoop**, %struct.BMLoop*** %loops, align 8, !dbg !12375
  %arrayidx35 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %50, i64 0, !dbg !12375
  %51 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx35, align 8, !dbg !12375
  %v36 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %51, i32 0, i32 1, !dbg !12376
  %52 = load %struct.BMVert*, %struct.BMVert** %v36, align 8, !dbg !12376
  %co37 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %52, i32 0, i32 2, !dbg !12377
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %co37, i64 0, i64 0, !dbg !12375
  %53 = load %struct.BMLoop**, %struct.BMLoop*** %loops, align 8, !dbg !12378
  %arrayidx39 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %53, i64 1, !dbg !12378
  %54 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx39, align 8, !dbg !12378
  %v40 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %54, i32 0, i32 1, !dbg !12379
  %55 = load %struct.BMVert*, %struct.BMVert** %v40, align 8, !dbg !12379
  %co41 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %55, i32 0, i32 2, !dbg !12380
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co41, i64 0, i64 0, !dbg !12378
  %56 = load %struct.BMLoop**, %struct.BMLoop*** %loops, align 8, !dbg !12381
  %arrayidx43 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %56, i64 2, !dbg !12381
  %57 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx43, align 8, !dbg !12381
  %v44 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %57, i32 0, i32 1, !dbg !12382
  %58 = load %struct.BMVert*, %struct.BMVert** %v44, align 8, !dbg !12382
  %co45 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %58, i32 0, i32 2, !dbg !12383
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %co45, i64 0, i64 0, !dbg !12381
  call void @mid_v3_v3v3v3(float* %49, float* %arraydecay38, float* %arraydecay42, float* %arraydecay46), !dbg !12384
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.then31
  ret void, !dbg !12385
}

declare dso_local zeroext i8 @isect_point_poly_v2(float*, [2 x float]*, i32, i8 zeroext) #2

declare dso_local void @BM_face_calc_tessellation(%struct.BMFace*, %struct.BMLoop**, [3 x i32]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !12386 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12387, metadata !DIExpression()), !dbg !12388
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12389, metadata !DIExpression()), !dbg !12390
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !12391, metadata !DIExpression()), !dbg !12392
  %0 = load float*, float** %a.addr, align 8, !dbg !12393
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !12393
  %1 = load float, float* %arrayidx, align 4, !dbg !12393
  %2 = load float*, float** %b.addr, align 8, !dbg !12394
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !12394
  %3 = load float, float* %arrayidx1, align 4, !dbg !12394
  %mul = fmul float %1, %3, !dbg !12395
  %4 = load float*, float** %a.addr, align 8, !dbg !12396
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !12396
  %5 = load float, float* %arrayidx2, align 4, !dbg !12396
  %6 = load float*, float** %b.addr, align 8, !dbg !12397
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !12397
  %7 = load float, float* %arrayidx3, align 4, !dbg !12397
  %mul4 = fmul float %5, %7, !dbg !12398
  %sub = fsub float %mul, %mul4, !dbg !12399
  %8 = load float*, float** %r.addr, align 8, !dbg !12400
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !12400
  store float %sub, float* %arrayidx5, align 4, !dbg !12401
  %9 = load float*, float** %a.addr, align 8, !dbg !12402
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !12402
  %10 = load float, float* %arrayidx6, align 4, !dbg !12402
  %11 = load float*, float** %b.addr, align 8, !dbg !12403
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !12403
  %12 = load float, float* %arrayidx7, align 4, !dbg !12403
  %mul8 = fmul float %10, %12, !dbg !12404
  %13 = load float*, float** %a.addr, align 8, !dbg !12405
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !12405
  %14 = load float, float* %arrayidx9, align 4, !dbg !12405
  %15 = load float*, float** %b.addr, align 8, !dbg !12406
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !12406
  %16 = load float, float* %arrayidx10, align 4, !dbg !12406
  %mul11 = fmul float %14, %16, !dbg !12407
  %sub12 = fsub float %mul8, %mul11, !dbg !12408
  %17 = load float*, float** %r.addr, align 8, !dbg !12409
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !12409
  store float %sub12, float* %arrayidx13, align 4, !dbg !12410
  %18 = load float*, float** %a.addr, align 8, !dbg !12411
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !12411
  %19 = load float, float* %arrayidx14, align 4, !dbg !12411
  %20 = load float*, float** %b.addr, align 8, !dbg !12412
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !12412
  %21 = load float, float* %arrayidx15, align 4, !dbg !12412
  %mul16 = fmul float %19, %21, !dbg !12413
  %22 = load float*, float** %a.addr, align 8, !dbg !12414
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !12414
  %23 = load float, float* %arrayidx17, align 4, !dbg !12414
  %24 = load float*, float** %b.addr, align 8, !dbg !12415
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !12415
  %25 = load float, float* %arrayidx18, align 4, !dbg !12415
  %mul19 = fmul float %23, %25, !dbg !12416
  %sub20 = fsub float %mul16, %mul19, !dbg !12417
  %26 = load float*, float** %r.addr, align 8, !dbg !12418
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !12418
  store float %sub20, float* %arrayidx21, align 4, !dbg !12419
  ret void, !dbg !12420
}

declare dso_local void @mid_v3_v3v3v3(float*, float*, float*, float*) #2

declare dso_local void @WM_cursor_modal_restore(%struct.wmWindow*) #2

declare dso_local void @ED_region_draw_cb_exit(%struct.ARegionType*, i8*) #2

declare dso_local void @BLI_mempool_destroy(%struct.BLI_mempool*) #2

declare dso_local void @BKE_bmbvh_free(%struct.BMBVHTree*) #2

declare dso_local void @BLI_memarena_free(%struct.MemArena*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!52}
!llvm.module.flags = !{!3278, !3279, !3280}
!llvm.ident = !{!3281}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "modal_items", scope: !2, file: !3, line: 2817, type: !3267, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "knifetool_modal_keymap", scope: !3, file: !3, line: 2815, type: !4, scopeLine: 2816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!3 = !DIFile(filename: "blender/source/blender/editors/mesh/editmesh_knife.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !40}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !8, line: 281, size: 1088, elements: !9)
!8 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = !{!10, !11, !12, !20, !21, !26, !28, !29, !30, !31, !39}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7, file: !8, line: 282, baseType: !6, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7, file: !8, line: 282, baseType: !6, size: 64, offset: 64)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !7, file: !8, line: 284, baseType: !13, size: 128, offset: 128)
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !14, line: 71, baseType: !15)
!14 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!15 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !14, line: 69, size: 128, elements: !16)
!16 = !{!17, !19}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !15, file: !14, line: 70, baseType: !18, size: 64)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !15, file: !14, line: 70, baseType: !18, size: 64, offset: 64)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !7, file: !8, line: 285, baseType: !13, size: 128, offset: 256)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !7, file: !8, line: 287, baseType: !22, size: 512, offset: 384)
!22 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 512, elements: !24)
!23 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!24 = !{!25}
!25 = !DISubrange(count: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !7, file: !8, line: 288, baseType: !27, size: 16, offset: 896)
!27 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !7, file: !8, line: 289, baseType: !27, size: 16, offset: 912)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7, file: !8, line: 291, baseType: !27, size: 16, offset: 928)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !7, file: !8, line: 292, baseType: !27, size: 16, offset: 944)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7, file: !8, line: 295, baseType: !32, size: 64, offset: 960)
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64)
!33 = !DISubroutineType(types: !34)
!34 = !{!35, !36}
!35 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!37 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !38, line: 44, flags: DIFlagFwdDecl)
!38 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!39 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !7, file: !8, line: 296, baseType: !18, size: 64, offset: 1024)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyConfig", file: !8, line: 318, baseType: !42)
!42 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !8, line: 310, size: 1344, elements: !43)
!43 = !{!44, !46, !47, !48, !49, !50, !51}
!44 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !42, file: !8, line: 311, baseType: !45, size: 64)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !42, file: !8, line: 311, baseType: !45, size: 64, offset: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !42, file: !8, line: 313, baseType: !22, size: 512, offset: 128)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !42, file: !8, line: 314, baseType: !22, size: 512, offset: 640)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !42, file: !8, line: 316, baseType: !13, size: 128, offset: 1152)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !42, file: !8, line: 317, baseType: !35, size: 32, offset: 1280)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !42, file: !8, line: 317, baseType: !35, size: 32, offset: 1312)
!52 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !53, retainedTypes: !3236, globals: !3265, splitDebugInlining: false, nameTableKind: None)
!53 = !{!54, !256, !269, !275, !280, !284, !290, !296, !307, !313, !319, !327, !334, !2931, !2946, !2952, !2961, !2978, !2989, !2997, !3018, !3031, !3036, !3040}
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !55, line: 54, baseType: !56, size: 32, elements: !57)
!55 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!56 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!57 = !{!58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255}
!58 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!59 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!60 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!61 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!62 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!63 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!64 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!65 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!66 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!67 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!68 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!69 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!70 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!71 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!72 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!73 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!74 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!75 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!76 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!77 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!78 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!79 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!80 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!81 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!82 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!83 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!84 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!85 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!86 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!87 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!88 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!89 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!90 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!91 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!92 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!93 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!94 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!95 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!96 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!97 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!98 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!99 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!100 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!101 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!102 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!103 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!104 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!105 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!106 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!107 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!108 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!109 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!110 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!111 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!112 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!113 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!114 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!115 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!116 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!117 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!118 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!119 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!120 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!121 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!122 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!123 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!124 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!125 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!126 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!127 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!128 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!129 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!130 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!131 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!132 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!133 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!134 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!135 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!136 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!137 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!138 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!139 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!140 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!141 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!142 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!143 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!144 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!145 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!146 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!147 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!148 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!149 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!150 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!151 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!152 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!153 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!154 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!155 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!156 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!157 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!158 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!159 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!160 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!161 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!162 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!163 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!164 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!165 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!166 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!167 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!168 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!169 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!170 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!171 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!172 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!173 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!174 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!175 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!176 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!177 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!178 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!179 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!180 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!181 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!182 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!183 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!184 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!185 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!186 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!187 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!188 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!189 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!190 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!191 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!192 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!193 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!194 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!195 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!196 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!197 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!198 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!199 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!200 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!201 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!202 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!203 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!204 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!205 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!206 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!207 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!208 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!209 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!210 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!211 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!212 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!213 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!214 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!215 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!216 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!217 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!218 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!219 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!220 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!221 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!222 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!223 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!224 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!225 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!226 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!227 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!228 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!229 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!230 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!231 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!232 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!233 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!234 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!235 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!236 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!237 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!238 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!239 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!240 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!241 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!242 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!243 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!244 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!245 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!246 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!247 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!248 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!249 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!250 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!251 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!252 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!253 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!254 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!255 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!256 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 2801, baseType: !56, size: 32, elements: !257)
!257 = !{!258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268}
!258 = !DIEnumerator(name: "KNF_MODAL_CANCEL", value: 1, isUnsigned: true)
!259 = !DIEnumerator(name: "KNF_MODAL_CONFIRM", value: 2, isUnsigned: true)
!260 = !DIEnumerator(name: "KNF_MODAL_MIDPOINT_ON", value: 3, isUnsigned: true)
!261 = !DIEnumerator(name: "KNF_MODAL_MIDPOINT_OFF", value: 4, isUnsigned: true)
!262 = !DIEnumerator(name: "KNF_MODAL_NEW_CUT", value: 5, isUnsigned: true)
!263 = !DIEnumerator(name: "KNF_MODEL_IGNORE_SNAP_ON", value: 6, isUnsigned: true)
!264 = !DIEnumerator(name: "KNF_MODEL_IGNORE_SNAP_OFF", value: 7, isUnsigned: true)
!265 = !DIEnumerator(name: "KNF_MODAL_ADD_CUT", value: 8, isUnsigned: true)
!266 = !DIEnumerator(name: "KNF_MODAL_ANGLE_SNAP_TOGGLE", value: 9, isUnsigned: true)
!267 = !DIEnumerator(name: "KNF_MODAL_CUT_THROUGH_TOGGLE", value: 10, isUnsigned: true)
!268 = !DIEnumerator(name: "KNF_MODAL_PANNING", value: 11, isUnsigned: true)
!269 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !270, line: 128, baseType: !56, size: 32, elements: !271)
!270 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!271 = !{!272, !273, !274}
!272 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!273 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!274 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!275 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !270, line: 164, baseType: !56, size: 32, elements: !276)
!276 = !{!277, !278, !279}
!277 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!278 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!279 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!280 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !270, line: 159, baseType: !56, size: 32, elements: !281)
!281 = !{!282, !283}
!282 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!283 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!284 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !270, line: 134, baseType: !56, size: 32, elements: !285)
!285 = !{!286, !287, !288, !289}
!286 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!287 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!288 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!289 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!290 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !270, line: 152, baseType: !56, size: 32, elements: !291)
!291 = !{!292, !293, !294, !295}
!292 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!293 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!294 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!295 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!296 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !297, line: 94, baseType: !56, size: 32, elements: !298)
!297 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!298 = !{!299, !300, !301, !302, !303, !304, !305, !306}
!299 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!300 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!301 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!302 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!303 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!304 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!305 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!306 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!307 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !297, line: 116, baseType: !56, size: 32, elements: !308)
!308 = !{!309, !310, !311, !312}
!309 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!310 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!311 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!312 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!313 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !297, line: 131, baseType: !56, size: 32, elements: !314)
!314 = !{!315, !316, !317, !318}
!315 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!316 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!317 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!318 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!319 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !297, line: 123, baseType: !56, size: 32, elements: !320)
!320 = !{!321, !322, !323, !324, !325, !326}
!321 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!322 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!323 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!324 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!325 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!326 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!327 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !297, line: 182, baseType: !56, size: 32, elements: !328)
!328 = !{!329, !330, !331, !332, !333}
!329 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!330 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!331 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!332 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!333 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!334 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !335, file: !3, line: 203, baseType: !56, size: 32, elements: !2941)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KnifeTool_OpData", file: !3, line: 148, size: 4352, elements: !336)
!336 = !{!337, !2477, !2478, !2822, !2823, !2826, !2829, !2833, !2834, !2835, !2836, !2837, !2842, !2846, !2847, !2848, !2849, !2886, !2887, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2938}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !335, file: !3, line: 149, baseType: !338, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !340, line: 267, baseType: !341)
!340 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !340, line: 230, size: 3072, elements: !342)
!342 = !{!343, !345, !346, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !341, file: !340, line: 231, baseType: !344, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !341, file: !340, line: 231, baseType: !344, size: 64, offset: 64)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !341, file: !340, line: 233, baseType: !347, size: 1280, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !348, line: 71, baseType: !349)
!348 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !348, line: 40, size: 1280, elements: !350)
!350 = !{!351, !361, !362, !370, !371, !372, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !393, !394, !395, !398}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !349, file: !348, line: 41, baseType: !352, size: 128)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !353, line: 95, baseType: !354)
!353 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !353, line: 92, size: 128, elements: !355)
!355 = !{!356, !358, !359, !360}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !354, file: !353, line: 93, baseType: !357, size: 32)
!357 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !354, file: !353, line: 93, baseType: !357, size: 32, offset: 32)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !354, file: !353, line: 94, baseType: !357, size: 32, offset: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !354, file: !353, line: 94, baseType: !357, size: 32, offset: 96)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !349, file: !348, line: 41, baseType: !352, size: 128, offset: 128)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !349, file: !348, line: 42, baseType: !363, size: 128, offset: 256)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !353, line: 89, baseType: !364)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !353, line: 86, size: 128, elements: !365)
!365 = !{!366, !367, !368, !369}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !364, file: !353, line: 87, baseType: !35, size: 32)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !364, file: !353, line: 87, baseType: !35, size: 32, offset: 32)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !364, file: !353, line: 88, baseType: !35, size: 32, offset: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !364, file: !353, line: 88, baseType: !35, size: 32, offset: 96)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !349, file: !348, line: 42, baseType: !363, size: 128, offset: 384)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !349, file: !348, line: 43, baseType: !363, size: 128, offset: 512)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !349, file: !348, line: 45, baseType: !373, size: 64, offset: 640)
!373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 64, elements: !374)
!374 = !{!375}
!375 = !DISubrange(count: 2)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !349, file: !348, line: 45, baseType: !373, size: 64, offset: 704)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !349, file: !348, line: 46, baseType: !357, size: 32, offset: 768)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !349, file: !348, line: 46, baseType: !357, size: 32, offset: 800)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !349, file: !348, line: 48, baseType: !27, size: 16, offset: 832)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !349, file: !348, line: 49, baseType: !27, size: 16, offset: 848)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !349, file: !348, line: 51, baseType: !27, size: 16, offset: 864)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !349, file: !348, line: 52, baseType: !27, size: 16, offset: 880)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !349, file: !348, line: 53, baseType: !27, size: 16, offset: 896)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !349, file: !348, line: 55, baseType: !27, size: 16, offset: 912)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !349, file: !348, line: 56, baseType: !27, size: 16, offset: 928)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !349, file: !348, line: 58, baseType: !27, size: 16, offset: 944)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !349, file: !348, line: 58, baseType: !27, size: 16, offset: 960)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !349, file: !348, line: 59, baseType: !27, size: 16, offset: 976)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !349, file: !348, line: 59, baseType: !27, size: 16, offset: 992)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !349, file: !348, line: 61, baseType: !27, size: 16, offset: 1008)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !349, file: !348, line: 63, baseType: !392, size: 64, offset: 1024)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !349, file: !348, line: 64, baseType: !35, size: 32, offset: 1088)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !349, file: !348, line: 65, baseType: !35, size: 32, offset: 1120)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !349, file: !348, line: 68, baseType: !396, size: 64, offset: 1152)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !348, line: 68, flags: DIFlagFwdDecl)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !349, file: !348, line: 69, baseType: !399, size: 64, offset: 1216)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !401, line: 490, size: 768, elements: !402)
!401 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!402 = !{!403, !404, !405, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !400, file: !401, line: 491, baseType: !399, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !400, file: !401, line: 491, baseType: !399, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !400, file: !401, line: 493, baseType: !406, size: 64, offset: 128)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !8, line: 169, size: 2048, elements: !408)
!408 = !{!409, !410, !411, !412, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2413, !2416, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !407, file: !8, line: 170, baseType: !406, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !407, file: !8, line: 170, baseType: !406, size: 64, offset: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !407, file: !8, line: 172, baseType: !18, size: 64, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !407, file: !8, line: 174, baseType: !413, size: 64, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !340, line: 49, size: 1984, elements: !415)
!415 = !{!416, !475, !476, !477, !478, !479, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !414, file: !340, line: 50, baseType: !417, size: 960)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !418, line: 130, baseType: !419)
!418 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !418, line: 117, size: 960, elements: !420)
!420 = !{!421, !422, !423, !425, !444, !448, !449, !450, !451, !452}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !419, file: !418, line: 118, baseType: !18, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !419, file: !418, line: 118, baseType: !18, size: 64, offset: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !419, file: !418, line: 119, baseType: !424, size: 64, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !419, file: !418, line: 120, baseType: !426, size: 64, offset: 192)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !418, line: 136, size: 17600, elements: !428)
!428 = !{!429, !430, !432, !435, !439, !440, !441}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !427, file: !418, line: 137, baseType: !417, size: 960)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !427, file: !418, line: 138, baseType: !431, size: 64, offset: 960)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !427, file: !418, line: 139, baseType: !433, size: 64, offset: 1024)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !418, line: 43, flags: DIFlagFwdDecl)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !427, file: !418, line: 140, baseType: !436, size: 8192, offset: 1088)
!436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 8192, elements: !437)
!437 = !{!438}
!438 = !DISubrange(count: 1024)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !427, file: !418, line: 141, baseType: !436, size: 8192, offset: 9280)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !427, file: !418, line: 148, baseType: !426, size: 64, offset: 17472)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !427, file: !418, line: 150, baseType: !442, size: 64, offset: 17536)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !418, line: 45, flags: DIFlagFwdDecl)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !419, file: !418, line: 121, baseType: !445, size: 528, offset: 256)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 528, elements: !446)
!446 = !{!447}
!447 = !DISubrange(count: 66)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !419, file: !418, line: 126, baseType: !27, size: 16, offset: 784)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !419, file: !418, line: 127, baseType: !35, size: 32, offset: 800)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !419, file: !418, line: 128, baseType: !35, size: 32, offset: 832)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !419, file: !418, line: 128, baseType: !35, size: 32, offset: 864)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !419, file: !418, line: 129, baseType: !453, size: 64, offset: 896)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !418, line: 75, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !418, line: 62, size: 1024, elements: !456)
!456 = !{!457, !459, !460, !461, !462, !463, !464, !465, !473, !474}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !455, file: !418, line: 63, baseType: !458, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !455, file: !418, line: 63, baseType: !458, size: 64, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !455, file: !418, line: 64, baseType: !23, size: 8, offset: 128)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !455, file: !418, line: 64, baseType: !23, size: 8, offset: 136)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !455, file: !418, line: 65, baseType: !27, size: 16, offset: 144)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !455, file: !418, line: 66, baseType: !22, size: 512, offset: 160)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !455, file: !418, line: 67, baseType: !35, size: 32, offset: 672)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !455, file: !418, line: 69, baseType: !466, size: 256, offset: 704)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !418, line: 60, baseType: !467)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !418, line: 48, size: 256, elements: !468)
!468 = !{!469, !470, !471, !472}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !467, file: !418, line: 49, baseType: !18, size: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !467, file: !418, line: 58, baseType: !13, size: 128, offset: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !467, file: !418, line: 59, baseType: !35, size: 32, offset: 192)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !467, file: !418, line: 59, baseType: !35, size: 32, offset: 224)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !455, file: !418, line: 70, baseType: !35, size: 32, offset: 960)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !455, file: !418, line: 74, baseType: !35, size: 32, offset: 992)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !414, file: !340, line: 52, baseType: !13, size: 128, offset: 960)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !414, file: !340, line: 53, baseType: !13, size: 128, offset: 1088)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !414, file: !340, line: 54, baseType: !13, size: 128, offset: 1216)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !414, file: !340, line: 55, baseType: !13, size: 128, offset: 1344)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !414, file: !340, line: 57, baseType: !480, size: 64, offset: 1472)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !482, line: 1216, size: 39680, elements: !483)
!482 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!483 = !{!484, !485, !489, !1266, !1269, !1270, !1271, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1297, !1362, !1705, !1928, !1931, !2212, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2234, !2235, !2236, !2237, !2238, !2246, !2312, !2319, !2320, !2327, !2328, !2329, !2330, !2331, !2332, !2333}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !481, file: !482, line: 1217, baseType: !417, size: 960)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !481, file: !482, line: 1218, baseType: !486, size: 64, offset: 960)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !488, line: 43, flags: DIFlagFwdDecl)
!488 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!489 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !481, file: !482, line: 1220, baseType: !490, size: 64, offset: 1024)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !492, line: 115, size: 11392, elements: !493)
!492 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!493 = !{!494, !495, !496, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !514, !525, !539, !540, !584, !585, !589, !590, !606, !607, !608, !609, !610, !611, !612, !616, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !632, !633, !634, !635, !636, !637, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !697, !698, !699, !700, !701, !702, !703, !704, !705, !708, !711, !715, !716, !717, !718, !719, !722, !725, !1214, !1215, !1221, !1222, !1223, !1224, !1225, !1226, !1228, !1231, !1234, !1235, !1254, !1255}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !491, file: !492, line: 116, baseType: !417, size: 960)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !491, file: !492, line: 117, baseType: !486, size: 64, offset: 960)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !491, file: !492, line: 119, baseType: !497, size: 64, offset: 1024)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !492, line: 57, flags: DIFlagFwdDecl)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !491, file: !492, line: 121, baseType: !27, size: 16, offset: 1088)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !491, file: !492, line: 121, baseType: !27, size: 16, offset: 1104)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !491, file: !492, line: 122, baseType: !35, size: 32, offset: 1120)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !491, file: !492, line: 122, baseType: !35, size: 32, offset: 1152)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !491, file: !492, line: 122, baseType: !35, size: 32, offset: 1184)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !491, file: !492, line: 123, baseType: !22, size: 512, offset: 1216)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !491, file: !492, line: 124, baseType: !490, size: 64, offset: 1728)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !491, file: !492, line: 124, baseType: !490, size: 64, offset: 1792)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !491, file: !492, line: 127, baseType: !490, size: 64, offset: 1856)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !491, file: !492, line: 127, baseType: !490, size: 64, offset: 1920)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !491, file: !492, line: 127, baseType: !490, size: 64, offset: 1984)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !491, file: !492, line: 128, baseType: !511, size: 64, offset: 2048)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !513, line: 49, flags: DIFlagFwdDecl)
!513 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!514 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !491, file: !492, line: 130, baseType: !515, size: 64, offset: 2112)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !492, line: 97, size: 832, elements: !517)
!517 = !{!518, !523, !524}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !516, file: !492, line: 98, baseType: !519, size: 768)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 768, elements: !520)
!520 = !{!521, !522}
!521 = !DISubrange(count: 8)
!522 = !DISubrange(count: 3)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !516, file: !492, line: 99, baseType: !35, size: 32, offset: 768)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !516, file: !492, line: 99, baseType: !35, size: 32, offset: 800)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !491, file: !492, line: 131, baseType: !526, size: 64, offset: 2176)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !528, line: 486, size: 1600, elements: !529)
!528 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!529 = !{!530, !531, !532, !533, !534, !535, !536, !537, !538}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !527, file: !528, line: 487, baseType: !417, size: 960)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !527, file: !528, line: 489, baseType: !13, size: 128, offset: 960)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !527, file: !528, line: 490, baseType: !13, size: 128, offset: 1088)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !527, file: !528, line: 491, baseType: !13, size: 128, offset: 1216)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !527, file: !528, line: 492, baseType: !13, size: 128, offset: 1344)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !527, file: !528, line: 494, baseType: !35, size: 32, offset: 1472)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !527, file: !528, line: 495, baseType: !35, size: 32, offset: 1504)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !527, file: !528, line: 497, baseType: !35, size: 32, offset: 1536)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !527, file: !528, line: 498, baseType: !35, size: 32, offset: 1568)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !491, file: !492, line: 132, baseType: !526, size: 64, offset: 2240)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !491, file: !492, line: 133, baseType: !541, size: 64, offset: 2304)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !528, line: 334, size: 1728, elements: !543)
!543 = !{!544, !545, !549, !550, !551, !552, !553, !554, !557, !558, !559, !560, !561, !562, !563, !583}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !542, file: !528, line: 335, baseType: !13, size: 128)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !542, file: !528, line: 336, baseType: !546, size: 64, offset: 128)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !548, line: 48, flags: DIFlagFwdDecl)
!548 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!549 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !542, file: !528, line: 338, baseType: !27, size: 16, offset: 192)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !542, file: !528, line: 338, baseType: !27, size: 16, offset: 208)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !542, file: !528, line: 339, baseType: !56, size: 32, offset: 224)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !542, file: !528, line: 340, baseType: !35, size: 32, offset: 256)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !542, file: !528, line: 342, baseType: !357, size: 32, offset: 288)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !542, file: !528, line: 343, baseType: !555, size: 96, offset: 320)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 96, elements: !556)
!556 = !{!522}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !542, file: !528, line: 344, baseType: !555, size: 96, offset: 416)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !542, file: !528, line: 347, baseType: !13, size: 128, offset: 512)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !542, file: !528, line: 349, baseType: !35, size: 32, offset: 640)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !542, file: !528, line: 350, baseType: !35, size: 32, offset: 672)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !542, file: !528, line: 351, baseType: !18, size: 64, offset: 704)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !542, file: !528, line: 352, baseType: !18, size: 64, offset: 768)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !542, file: !528, line: 354, baseType: !564, size: 384, offset: 832)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !528, line: 116, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !528, line: 94, size: 384, elements: !566)
!566 = !{!567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !565, file: !528, line: 96, baseType: !35, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !565, file: !528, line: 96, baseType: !35, size: 32, offset: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !565, file: !528, line: 97, baseType: !35, size: 32, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !565, file: !528, line: 97, baseType: !35, size: 32, offset: 96)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !565, file: !528, line: 99, baseType: !27, size: 16, offset: 128)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !565, file: !528, line: 100, baseType: !27, size: 16, offset: 144)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !565, file: !528, line: 102, baseType: !27, size: 16, offset: 160)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !565, file: !528, line: 105, baseType: !27, size: 16, offset: 176)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !565, file: !528, line: 108, baseType: !27, size: 16, offset: 192)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !565, file: !528, line: 109, baseType: !27, size: 16, offset: 208)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !565, file: !528, line: 111, baseType: !27, size: 16, offset: 224)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !565, file: !528, line: 112, baseType: !27, size: 16, offset: 240)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !565, file: !528, line: 114, baseType: !35, size: 32, offset: 256)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !565, file: !528, line: 114, baseType: !35, size: 32, offset: 288)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !565, file: !528, line: 115, baseType: !35, size: 32, offset: 320)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !565, file: !528, line: 115, baseType: !35, size: 32, offset: 352)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !542, file: !528, line: 355, baseType: !22, size: 512, offset: 1216)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !491, file: !492, line: 134, baseType: !18, size: 64, offset: 2368)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !491, file: !492, line: 136, baseType: !586, size: 64, offset: 2432)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !588, line: 45, flags: DIFlagFwdDecl)
!588 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!589 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !491, file: !492, line: 138, baseType: !564, size: 384, offset: 2496)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !491, file: !492, line: 139, baseType: !591, size: 64, offset: 2880)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !528, line: 80, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !528, line: 72, size: 192, elements: !594)
!594 = !{!595, !602, !603, !604, !605}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !593, file: !528, line: 73, baseType: !596, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !528, line: 59, baseType: !598)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !528, line: 56, size: 128, elements: !599)
!599 = !{!600, !601}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !598, file: !528, line: 57, baseType: !555, size: 96)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !598, file: !528, line: 58, baseType: !35, size: 32, offset: 96)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !593, file: !528, line: 74, baseType: !35, size: 32, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !593, file: !528, line: 76, baseType: !35, size: 32, offset: 96)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !593, file: !528, line: 77, baseType: !35, size: 32, offset: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !593, file: !528, line: 79, baseType: !35, size: 32, offset: 160)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !491, file: !492, line: 141, baseType: !13, size: 128, offset: 2944)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !491, file: !492, line: 142, baseType: !13, size: 128, offset: 3072)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !491, file: !492, line: 143, baseType: !13, size: 128, offset: 3200)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !491, file: !492, line: 144, baseType: !13, size: 128, offset: 3328)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !491, file: !492, line: 146, baseType: !35, size: 32, offset: 3456)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !491, file: !492, line: 147, baseType: !35, size: 32, offset: 3488)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !491, file: !492, line: 150, baseType: !613, size: 64, offset: 3520)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !270, line: 190, flags: DIFlagFwdDecl)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !491, file: !492, line: 151, baseType: !617, size: 64, offset: 3584)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !491, file: !492, line: 152, baseType: !35, size: 32, offset: 3648)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !491, file: !492, line: 153, baseType: !35, size: 32, offset: 3680)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !491, file: !492, line: 156, baseType: !555, size: 96, offset: 3712)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !491, file: !492, line: 156, baseType: !555, size: 96, offset: 3808)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !491, file: !492, line: 156, baseType: !555, size: 96, offset: 3904)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !491, file: !492, line: 157, baseType: !555, size: 96, offset: 4000)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !491, file: !492, line: 158, baseType: !555, size: 96, offset: 4096)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !491, file: !492, line: 159, baseType: !555, size: 96, offset: 4192)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !491, file: !492, line: 160, baseType: !555, size: 96, offset: 4288)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !491, file: !492, line: 160, baseType: !555, size: 96, offset: 4384)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !491, file: !492, line: 161, baseType: !629, size: 128, offset: 4480)
!629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 128, elements: !630)
!630 = !{!631}
!631 = !DISubrange(count: 4)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !491, file: !492, line: 161, baseType: !629, size: 128, offset: 4608)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !491, file: !492, line: 162, baseType: !555, size: 96, offset: 4736)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !491, file: !492, line: 162, baseType: !555, size: 96, offset: 4832)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !491, file: !492, line: 163, baseType: !357, size: 32, offset: 4928)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !491, file: !492, line: 163, baseType: !357, size: 32, offset: 4960)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !491, file: !492, line: 164, baseType: !638, size: 512, offset: 4992)
!638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 512, elements: !639)
!639 = !{!631, !631}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !491, file: !492, line: 165, baseType: !638, size: 512, offset: 5504)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !491, file: !492, line: 166, baseType: !638, size: 512, offset: 6016)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !491, file: !492, line: 167, baseType: !638, size: 512, offset: 6528)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !491, file: !492, line: 176, baseType: !638, size: 512, offset: 7040)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !491, file: !492, line: 178, baseType: !56, size: 32, offset: 7552)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !491, file: !492, line: 180, baseType: !27, size: 16, offset: 7584)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !491, file: !492, line: 181, baseType: !27, size: 16, offset: 7600)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !491, file: !492, line: 183, baseType: !27, size: 16, offset: 7616)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !491, file: !492, line: 183, baseType: !27, size: 16, offset: 7632)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !491, file: !492, line: 184, baseType: !27, size: 16, offset: 7648)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !491, file: !492, line: 184, baseType: !27, size: 16, offset: 7664)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !491, file: !492, line: 185, baseType: !27, size: 16, offset: 7680)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !491, file: !492, line: 186, baseType: !27, size: 16, offset: 7696)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !491, file: !492, line: 187, baseType: !27, size: 16, offset: 7712)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !491, file: !492, line: 188, baseType: !23, size: 8, offset: 7728)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !491, file: !492, line: 189, baseType: !23, size: 8, offset: 7736)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !491, file: !492, line: 192, baseType: !35, size: 32, offset: 7744)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !491, file: !492, line: 192, baseType: !35, size: 32, offset: 7776)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !491, file: !492, line: 192, baseType: !35, size: 32, offset: 7808)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !491, file: !492, line: 192, baseType: !35, size: 32, offset: 7840)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !491, file: !492, line: 194, baseType: !35, size: 32, offset: 7872)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !491, file: !492, line: 202, baseType: !357, size: 32, offset: 7904)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !491, file: !492, line: 202, baseType: !357, size: 32, offset: 7936)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !491, file: !492, line: 202, baseType: !357, size: 32, offset: 7968)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !491, file: !492, line: 211, baseType: !357, size: 32, offset: 8000)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !491, file: !492, line: 212, baseType: !357, size: 32, offset: 8032)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !491, file: !492, line: 213, baseType: !357, size: 32, offset: 8064)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !491, file: !492, line: 214, baseType: !357, size: 32, offset: 8096)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !491, file: !492, line: 215, baseType: !357, size: 32, offset: 8128)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !491, file: !492, line: 216, baseType: !357, size: 32, offset: 8160)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !491, file: !492, line: 219, baseType: !357, size: 32, offset: 8192)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !491, file: !492, line: 220, baseType: !357, size: 32, offset: 8224)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !491, file: !492, line: 221, baseType: !357, size: 32, offset: 8256)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !491, file: !492, line: 224, baseType: !674, size: 16, offset: 8288)
!674 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !491, file: !492, line: 224, baseType: !674, size: 16, offset: 8304)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !491, file: !492, line: 226, baseType: !27, size: 16, offset: 8320)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !491, file: !492, line: 228, baseType: !23, size: 8, offset: 8336)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !491, file: !492, line: 229, baseType: !23, size: 8, offset: 8344)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !491, file: !492, line: 231, baseType: !27, size: 16, offset: 8352)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !491, file: !492, line: 232, baseType: !23, size: 8, offset: 8368)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !491, file: !492, line: 233, baseType: !23, size: 8, offset: 8376)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !491, file: !492, line: 234, baseType: !357, size: 32, offset: 8384)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !491, file: !492, line: 235, baseType: !357, size: 32, offset: 8416)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !491, file: !492, line: 237, baseType: !13, size: 128, offset: 8448)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !491, file: !492, line: 238, baseType: !13, size: 128, offset: 8576)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !491, file: !492, line: 239, baseType: !13, size: 128, offset: 8704)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !491, file: !492, line: 240, baseType: !13, size: 128, offset: 8832)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !491, file: !492, line: 242, baseType: !357, size: 32, offset: 8960)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !491, file: !492, line: 244, baseType: !27, size: 16, offset: 8992)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !491, file: !492, line: 245, baseType: !674, size: 16, offset: 9008)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !491, file: !492, line: 246, baseType: !629, size: 128, offset: 9024)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !491, file: !492, line: 248, baseType: !35, size: 32, offset: 9152)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !491, file: !492, line: 249, baseType: !35, size: 32, offset: 9184)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !491, file: !492, line: 251, baseType: !695, size: 64, offset: 9216)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !492, line: 251, flags: DIFlagFwdDecl)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !491, file: !492, line: 253, baseType: !23, size: 8, offset: 9280)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !491, file: !492, line: 254, baseType: !23, size: 8, offset: 9288)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !491, file: !492, line: 255, baseType: !27, size: 16, offset: 9296)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !491, file: !492, line: 256, baseType: !555, size: 96, offset: 9312)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !491, file: !492, line: 258, baseType: !13, size: 128, offset: 9408)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !491, file: !492, line: 259, baseType: !13, size: 128, offset: 9536)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !491, file: !492, line: 260, baseType: !13, size: 128, offset: 9664)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !491, file: !492, line: 261, baseType: !13, size: 128, offset: 9792)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !491, file: !492, line: 263, baseType: !706, size: 64, offset: 9920)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !492, line: 52, flags: DIFlagFwdDecl)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !491, file: !492, line: 264, baseType: !709, size: 64, offset: 9984)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !492, line: 53, flags: DIFlagFwdDecl)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !491, file: !492, line: 265, baseType: !712, size: 64, offset: 10048)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !714, line: 43, flags: DIFlagFwdDecl)
!714 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!715 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !491, file: !492, line: 267, baseType: !23, size: 8, offset: 10112)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !491, file: !492, line: 268, baseType: !23, size: 8, offset: 10120)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !491, file: !492, line: 269, baseType: !27, size: 16, offset: 10128)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !491, file: !492, line: 270, baseType: !357, size: 32, offset: 10144)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !491, file: !492, line: 272, baseType: !720, size: 64, offset: 10176)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !492, line: 54, flags: DIFlagFwdDecl)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !491, file: !492, line: 275, baseType: !723, size: 64, offset: 10240)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !492, line: 275, flags: DIFlagFwdDecl)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !491, file: !492, line: 277, baseType: !726, size: 64, offset: 10304)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !270, line: 178, size: 13504, elements: !728)
!728 = !{!729, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !785, !788, !790, !791, !793, !794, !795, !796, !802, !807, !808, !812, !813, !814, !815, !816, !829, !841, !855, !859, !863, !867, !876, !888, !892, !896, !900, !904, !908, !909, !910, !911, !912, !913, !917, !918, !919, !920, !924, !925, !926, !927, !928, !933, !934, !935, !936, !937, !941, !942, !943, !944, !945, !952, !963, !968, !974, !984, !990, !1001, !1008, !1015, !1019, !1023, !1027, !1032, !1033, !1034, !1041, !1047, !1048, !1049, !1054, !1055, !1064, !1171, !1175, !1183, !1187, !1191, !1195, !1203, !1213}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !727, file: !270, line: 180, baseType: !730, size: 1600)
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !731, line: 73, baseType: !732)
!731 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !731, line: 64, size: 1600, elements: !733)
!733 = !{!734, !749, !753, !754, !755, !756, !760}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !732, file: !731, line: 65, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !731, line: 53, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !731, line: 42, size: 832, elements: !738)
!738 = !{!739, !740, !741, !742, !743, !744, !745, !746, !747, !748}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !737, file: !731, line: 43, baseType: !35, size: 32)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !737, file: !731, line: 44, baseType: !35, size: 32, offset: 32)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !737, file: !731, line: 45, baseType: !35, size: 32, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !737, file: !731, line: 46, baseType: !35, size: 32, offset: 96)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !737, file: !731, line: 47, baseType: !35, size: 32, offset: 128)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !737, file: !731, line: 48, baseType: !35, size: 32, offset: 160)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !737, file: !731, line: 49, baseType: !35, size: 32, offset: 192)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !737, file: !731, line: 50, baseType: !35, size: 32, offset: 224)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !737, file: !731, line: 51, baseType: !22, size: 512, offset: 256)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !737, file: !731, line: 52, baseType: !18, size: 64, offset: 768)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !732, file: !731, line: 66, baseType: !750, size: 1312, offset: 64)
!750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 1312, elements: !751)
!751 = !{!752}
!752 = !DISubrange(count: 41)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !732, file: !731, line: 69, baseType: !35, size: 32, offset: 1376)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !732, file: !731, line: 69, baseType: !35, size: 32, offset: 1408)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !732, file: !731, line: 70, baseType: !35, size: 32, offset: 1440)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !732, file: !731, line: 71, baseType: !757, size: 64, offset: 1472)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !759, line: 39, flags: DIFlagFwdDecl)
!759 = !DIFile(filename: "blender/source/blender/blenlib/BLI_linklist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!760 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !732, file: !731, line: 72, baseType: !761, size: 64, offset: 1536)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !731, line: 59, baseType: !763)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !731, line: 57, size: 8192, elements: !764)
!764 = !{!765}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !763, file: !731, line: 58, baseType: !436, size: 8192)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !727, file: !270, line: 180, baseType: !730, size: 1600, offset: 1600)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !727, file: !270, line: 180, baseType: !730, size: 1600, offset: 3200)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !727, file: !270, line: 180, baseType: !730, size: 1600, offset: 4800)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !727, file: !270, line: 180, baseType: !730, size: 1600, offset: 6400)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !727, file: !270, line: 181, baseType: !35, size: 32, offset: 8000)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !727, file: !270, line: 181, baseType: !35, size: 32, offset: 8032)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !727, file: !270, line: 181, baseType: !35, size: 32, offset: 8064)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !727, file: !270, line: 181, baseType: !35, size: 32, offset: 8096)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !727, file: !270, line: 181, baseType: !35, size: 32, offset: 8128)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !727, file: !270, line: 182, baseType: !35, size: 32, offset: 8160)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !727, file: !270, line: 183, baseType: !35, size: 32, offset: 8192)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !727, file: !270, line: 184, baseType: !778, size: 64, offset: 8256)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !779, line: 124, baseType: !780)
!779 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !759, line: 45, size: 128, elements: !782)
!782 = !{!783, !784}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !781, file: !759, line: 46, baseType: !780, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !781, file: !759, line: 47, baseType: !18, size: 64, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !727, file: !270, line: 185, baseType: !786, size: 64, offset: 8320)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !270, line: 97, flags: DIFlagFwdDecl)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !727, file: !270, line: 186, baseType: !789, size: 32, offset: 8384)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !270, line: 132, baseType: !269)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !727, file: !270, line: 187, baseType: !357, size: 32, offset: 8416)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !727, file: !270, line: 188, baseType: !792, size: 32, offset: 8448)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !270, line: 175, baseType: !275)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !727, file: !270, line: 189, baseType: !35, size: 32, offset: 8480)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !727, file: !270, line: 190, baseType: !613, size: 64, offset: 8512)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !727, file: !270, line: 193, baseType: !23, size: 8, offset: 8576)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !727, file: !270, line: 196, baseType: !797, size: 64, offset: 8640)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DISubroutineType(types: !799)
!799 = !{null, !800}
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !270, line: 177, baseType: !727)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !727, file: !270, line: 199, baseType: !803, size: 64, offset: 8704)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DISubroutineType(types: !805)
!805 = !{null, !800, !806}
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !357)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !727, file: !270, line: 202, baseType: !797, size: 64, offset: 8768)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !727, file: !270, line: 207, baseType: !809, size: 64, offset: 8832)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!35, !800}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !727, file: !270, line: 208, baseType: !809, size: 64, offset: 8896)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !727, file: !270, line: 209, baseType: !809, size: 64, offset: 8960)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !727, file: !270, line: 210, baseType: !809, size: 64, offset: 9024)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !727, file: !270, line: 211, baseType: !809, size: 64, offset: 9088)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !727, file: !270, line: 218, baseType: !817, size: 64, offset: 9152)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DISubroutineType(types: !819)
!819 = !{null, !800, !35, !820}
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !822, line: 65, size: 160, elements: !823)
!822 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!823 = !{!824, !825, !827, !828}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !821, file: !822, line: 66, baseType: !555, size: 96)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !821, file: !822, line: 67, baseType: !826, size: 48, offset: 96)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 48, elements: !556)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !821, file: !822, line: 68, baseType: !23, size: 8, offset: 144)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !821, file: !822, line: 68, baseType: !23, size: 8, offset: 152)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !727, file: !270, line: 219, baseType: !830, size: 64, offset: 9216)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DISubroutineType(types: !832)
!832 = !{null, !800, !35, !833}
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !822, line: 48, size: 96, elements: !835)
!835 = !{!836, !837, !838, !839, !840}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !834, file: !822, line: 49, baseType: !56, size: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !834, file: !822, line: 49, baseType: !56, size: 32, offset: 32)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !834, file: !822, line: 50, baseType: !23, size: 8, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !834, file: !822, line: 50, baseType: !23, size: 8, offset: 72)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !834, file: !822, line: 51, baseType: !27, size: 16, offset: 80)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !727, file: !270, line: 220, baseType: !842, size: 64, offset: 9280)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DISubroutineType(types: !844)
!844 = !{null, !800, !35, !845}
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !822, line: 42, size: 160, elements: !847)
!847 = !{!848, !849, !850, !851, !852, !853, !854}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !846, file: !822, line: 43, baseType: !56, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !846, file: !822, line: 43, baseType: !56, size: 32, offset: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !846, file: !822, line: 43, baseType: !56, size: 32, offset: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !846, file: !822, line: 43, baseType: !56, size: 32, offset: 96)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !846, file: !822, line: 44, baseType: !27, size: 16, offset: 128)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !846, file: !822, line: 45, baseType: !23, size: 8, offset: 144)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !846, file: !822, line: 45, baseType: !23, size: 8, offset: 152)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !727, file: !270, line: 227, baseType: !856, size: 64, offset: 9344)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DISubroutineType(types: !858)
!858 = !{!820, !800}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !727, file: !270, line: 228, baseType: !860, size: 64, offset: 9408)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DISubroutineType(types: !862)
!862 = !{!833, !800}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !727, file: !270, line: 229, baseType: !864, size: 64, offset: 9472)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DISubroutineType(types: !866)
!866 = !{!845, !800}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !727, file: !270, line: 230, baseType: !868, size: 64, offset: 9536)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DISubroutineType(types: !870)
!870 = !{!871, !800}
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !822, line: 88, size: 64, elements: !873)
!873 = !{!874, !875}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !872, file: !822, line: 89, baseType: !56, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !872, file: !822, line: 90, baseType: !56, size: 32, offset: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !727, file: !270, line: 231, baseType: !877, size: 64, offset: 9600)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DISubroutineType(types: !879)
!879 = !{!880, !800}
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !822, line: 79, size: 96, elements: !882)
!882 = !{!883, !884, !885, !886, !887}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !881, file: !822, line: 81, baseType: !35, size: 32)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !881, file: !822, line: 82, baseType: !35, size: 32, offset: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !881, file: !822, line: 83, baseType: !27, size: 16, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !881, file: !822, line: 84, baseType: !23, size: 8, offset: 80)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !881, file: !822, line: 84, baseType: !23, size: 8, offset: 88)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !727, file: !270, line: 236, baseType: !889, size: 64, offset: 9664)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DISubroutineType(types: !891)
!891 = !{null, !800, !820}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !727, file: !270, line: 237, baseType: !893, size: 64, offset: 9728)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{null, !800, !833}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !727, file: !270, line: 238, baseType: !897, size: 64, offset: 9792)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DISubroutineType(types: !899)
!899 = !{null, !800, !845}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !727, file: !270, line: 239, baseType: !901, size: 64, offset: 9856)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DISubroutineType(types: !903)
!903 = !{null, !800, !871}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !727, file: !270, line: 240, baseType: !905, size: 64, offset: 9920)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DISubroutineType(types: !907)
!907 = !{null, !800, !880}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !727, file: !270, line: 245, baseType: !856, size: 64, offset: 9984)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !727, file: !270, line: 246, baseType: !860, size: 64, offset: 10048)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !727, file: !270, line: 247, baseType: !864, size: 64, offset: 10112)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !727, file: !270, line: 248, baseType: !868, size: 64, offset: 10176)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !727, file: !270, line: 249, baseType: !877, size: 64, offset: 10240)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !727, file: !270, line: 255, baseType: !914, size: 64, offset: 10304)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DISubroutineType(types: !916)
!916 = !{!18, !800, !35, !35}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !727, file: !270, line: 256, baseType: !914, size: 64, offset: 10368)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !727, file: !270, line: 257, baseType: !914, size: 64, offset: 10432)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !727, file: !270, line: 258, baseType: !914, size: 64, offset: 10496)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !727, file: !270, line: 264, baseType: !921, size: 64, offset: 10560)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!18, !800, !35}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !727, file: !270, line: 265, baseType: !921, size: 64, offset: 10624)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !727, file: !270, line: 266, baseType: !921, size: 64, offset: 10688)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !727, file: !270, line: 267, baseType: !921, size: 64, offset: 10752)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !727, file: !270, line: 268, baseType: !921, size: 64, offset: 10816)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !727, file: !270, line: 272, baseType: !929, size: 64, offset: 10880)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!932, !800}
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !727, file: !270, line: 273, baseType: !929, size: 64, offset: 10944)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !727, file: !270, line: 274, baseType: !929, size: 64, offset: 11008)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !727, file: !270, line: 275, baseType: !929, size: 64, offset: 11072)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !727, file: !270, line: 276, baseType: !929, size: 64, offset: 11136)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !727, file: !270, line: 279, baseType: !938, size: 64, offset: 11200)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{null, !800, !35, !932, !35}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !727, file: !270, line: 280, baseType: !938, size: 64, offset: 11264)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !727, file: !270, line: 281, baseType: !938, size: 64, offset: 11328)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !727, file: !270, line: 284, baseType: !809, size: 64, offset: 11392)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !727, file: !270, line: 285, baseType: !809, size: 64, offset: 11456)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !727, file: !270, line: 286, baseType: !946, size: 64, offset: 11520)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DISubroutineType(types: !948)
!948 = !{!949, !800}
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !270, line: 82, flags: DIFlagFwdDecl)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !727, file: !270, line: 287, baseType: !953, size: 64, offset: 11584)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!956, !800}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !270, line: 120, baseType: !958)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !270, line: 117, size: 256, elements: !959)
!959 = !{!960, !962}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !958, file: !270, line: 118, baseType: !961, size: 128)
!961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 128, elements: !630)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !958, file: !270, line: 119, baseType: !961, size: 128, offset: 128)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !727, file: !270, line: 288, baseType: !964, size: 64, offset: 11648)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{!967, !800}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !727, file: !270, line: 289, baseType: !969, size: 64, offset: 11712)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{null, !800, !972}
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !270, line: 83, flags: DIFlagFwdDecl)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !727, file: !270, line: 290, baseType: !975, size: 64, offset: 11776)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!978, !800}
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !270, line: 126, baseType: !980)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !270, line: 123, size: 32, elements: !981)
!981 = !{!982, !983}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !980, file: !270, line: 124, baseType: !27, size: 16)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !980, file: !270, line: 125, baseType: !23, size: 8, offset: 16)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !727, file: !270, line: 291, baseType: !985, size: 64, offset: 11840)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{!988, !800}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !727, file: !270, line: 299, baseType: !991, size: 64, offset: 11904)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DISubroutineType(types: !993)
!993 = !{null, !800, !994, !18, !1000}
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DISubroutineType(types: !996)
!996 = !{null, !18, !35, !997, !997, !998}
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !270, line: 162, baseType: !280)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !727, file: !270, line: 309, baseType: !1002, size: 64, offset: 11968)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{null, !800, !1005, !18}
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !18, !35, !997, !997}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !727, file: !270, line: 317, baseType: !1009, size: 64, offset: 12032)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{null, !800, !1012, !18, !1000}
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{null, !18, !35, !35, !997, !997}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !727, file: !270, line: 327, baseType: !1016, size: 64, offset: 12096)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{null, !800, !1005, !18, !1000}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !727, file: !270, line: 337, baseType: !1020, size: 64, offset: 12160)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{null, !800, !392, !392}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !727, file: !270, line: 344, baseType: !1024, size: 64, offset: 12224)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{null, !800, !35, !392}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !727, file: !270, line: 347, baseType: !1028, size: 64, offset: 12288)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{null, !800, !1031}
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !727, file: !270, line: 350, baseType: !1024, size: 64, offset: 12352)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !727, file: !270, line: 351, baseType: !1024, size: 64, offset: 12416)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !727, file: !270, line: 355, baseType: !1035, size: 64, offset: 12480)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!1038, !490, !800}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1040 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !270, line: 355, flags: DIFlagFwdDecl)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !727, file: !270, line: 359, baseType: !1042, size: 64, offset: 12544)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!1045, !490, !800}
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !270, line: 100, flags: DIFlagFwdDecl)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !727, file: !270, line: 364, baseType: !797, size: 64, offset: 12608)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !727, file: !270, line: 367, baseType: !797, size: 64, offset: 12672)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !727, file: !270, line: 373, baseType: !1050, size: 64, offset: 12736)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{null, !800, !1053, !1053}
!1053 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !727, file: !270, line: 376, baseType: !797, size: 64, offset: 12800)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !727, file: !270, line: 385, baseType: !1056, size: 64, offset: 12864)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !800, !1059, !1053, !1060}
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !270, line: 146, baseType: !1061)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!35, !35, !18}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !727, file: !270, line: 391, baseType: !1065, size: 64, offset: 12928)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{null, !800, !1068, !1166, !18, !1170}
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !270, line: 150, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!1072, !1073, !1165, !35}
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !270, line: 143, baseType: !284)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !822, line: 160, size: 384, elements: !1075)
!1075 = !{!1076, !1079, !1160, !1161, !1162, !1163, !1164}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1074, file: !822, line: 161, baseType: !1077, size: 256)
!1077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 256, elements: !1078)
!1078 = !{!631, !375}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1074, file: !822, line: 162, baseType: !1080, size: 64, offset: 256)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1082, line: 77, size: 15424, elements: !1083)
!1082 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1083 = !{!1084, !1085, !1086, !1089, !1092, !1095, !1098, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1149, !1150, !1154}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1081, file: !1082, line: 78, baseType: !417, size: 960)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1081, file: !1082, line: 80, baseType: !436, size: 8192, offset: 960)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1081, file: !1082, line: 82, baseType: !1087, size: 64, offset: 9152)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1082, line: 43, flags: DIFlagFwdDecl)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1081, file: !1082, line: 83, baseType: !1090, size: 64, offset: 9216)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !418, line: 46, flags: DIFlagFwdDecl)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1081, file: !1082, line: 86, baseType: !1093, size: 64, offset: 9280)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1082, line: 41, flags: DIFlagFwdDecl)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1081, file: !1082, line: 87, baseType: !1096, size: 64, offset: 9344)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1082, line: 44, flags: DIFlagFwdDecl)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1081, file: !1082, line: 89, baseType: !1099, size: 512, offset: 9408)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1096, size: 512, elements: !1100)
!1100 = !{!521}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1081, file: !1082, line: 90, baseType: !27, size: 16, offset: 9920)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1081, file: !1082, line: 90, baseType: !27, size: 16, offset: 9936)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1081, file: !1082, line: 92, baseType: !27, size: 16, offset: 9952)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1081, file: !1082, line: 92, baseType: !27, size: 16, offset: 9968)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1081, file: !1082, line: 93, baseType: !27, size: 16, offset: 9984)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1081, file: !1082, line: 93, baseType: !27, size: 16, offset: 10000)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1081, file: !1082, line: 94, baseType: !35, size: 32, offset: 10016)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1081, file: !1082, line: 97, baseType: !27, size: 16, offset: 10048)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1081, file: !1082, line: 97, baseType: !27, size: 16, offset: 10064)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1081, file: !1082, line: 98, baseType: !27, size: 16, offset: 10080)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1081, file: !1082, line: 98, baseType: !27, size: 16, offset: 10096)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1081, file: !1082, line: 99, baseType: !27, size: 16, offset: 10112)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1081, file: !1082, line: 99, baseType: !27, size: 16, offset: 10128)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1081, file: !1082, line: 100, baseType: !56, size: 32, offset: 10144)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1081, file: !1082, line: 101, baseType: !989, size: 64, offset: 10176)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1081, file: !1082, line: 103, baseType: !442, size: 64, offset: 10240)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1081, file: !1082, line: 104, baseType: !1118, size: 64, offset: 10304)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !418, line: 159, size: 448, elements: !1120)
!1120 = !{!1121, !1123, !1124, !1126, !1127, !1129}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1119, file: !418, line: 161, baseType: !1122, size: 64)
!1122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 64, elements: !374)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1119, file: !418, line: 162, baseType: !1122, size: 64, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1119, file: !418, line: 163, baseType: !1125, size: 32, offset: 128)
!1125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 32, elements: !374)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1119, file: !418, line: 164, baseType: !1125, size: 32, offset: 160)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1119, file: !418, line: 165, baseType: !1128, size: 128, offset: 192)
!1128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, size: 128, elements: !374)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1119, file: !418, line: 166, baseType: !1130, size: 128, offset: 320)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1090, size: 128, elements: !374)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1081, file: !1082, line: 107, baseType: !357, size: 32, offset: 10368)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1081, file: !1082, line: 108, baseType: !35, size: 32, offset: 10400)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1081, file: !1082, line: 109, baseType: !27, size: 16, offset: 10432)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1081, file: !1082, line: 110, baseType: !27, size: 16, offset: 10448)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1081, file: !1082, line: 113, baseType: !35, size: 32, offset: 10464)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1081, file: !1082, line: 113, baseType: !35, size: 32, offset: 10496)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1081, file: !1082, line: 114, baseType: !23, size: 8, offset: 10528)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1081, file: !1082, line: 114, baseType: !23, size: 8, offset: 10536)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1081, file: !1082, line: 115, baseType: !27, size: 16, offset: 10544)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1081, file: !1082, line: 116, baseType: !629, size: 128, offset: 10560)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1081, file: !1082, line: 119, baseType: !357, size: 32, offset: 10688)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1081, file: !1082, line: 119, baseType: !357, size: 32, offset: 10720)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1081, file: !1082, line: 122, baseType: !1144, size: 512, offset: 10752)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1145, line: 182, baseType: !1146)
!1145 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1145, line: 180, size: 512, elements: !1147)
!1147 = !{!1148}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1146, file: !1145, line: 181, baseType: !22, size: 512)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1081, file: !1082, line: 123, baseType: !23, size: 8, offset: 11264)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1081, file: !1082, line: 125, baseType: !1151, size: 56, offset: 11272)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 56, elements: !1152)
!1152 = !{!1153}
!1153 = !DISubrange(count: 7)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1081, file: !1082, line: 126, baseType: !1155, size: 4096, offset: 11328)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1156, size: 4096, elements: !1100)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1082, line: 69, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1082, line: 67, size: 512, elements: !1158)
!1158 = !{!1159}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1157, file: !1082, line: 68, baseType: !22, size: 512)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1074, file: !822, line: 163, baseType: !23, size: 8, offset: 320)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1074, file: !822, line: 163, baseType: !23, size: 8, offset: 328)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1074, file: !822, line: 164, baseType: !27, size: 16, offset: 336)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1074, file: !822, line: 164, baseType: !27, size: 16, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1074, file: !822, line: 164, baseType: !27, size: 16, offset: 368)
!1165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1053)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !270, line: 147, baseType: !1167)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!35, !18, !35, !35}
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !270, line: 157, baseType: !290)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !727, file: !270, line: 400, baseType: !1172, size: 64, offset: 12992)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{null, !800, !1060}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !727, file: !270, line: 415, baseType: !1176, size: 64, offset: 13056)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{null, !800, !1179, !1060, !1166, !18, !1170}
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !270, line: 149, baseType: !1180)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!1072, !18, !35}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !727, file: !270, line: 425, baseType: !1184, size: 64, offset: 13120)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{null, !800, !1179, !1166, !18, !1170}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !727, file: !270, line: 435, baseType: !1188, size: 64, offset: 13184)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{null, !800, !1060, !1179, !18}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !727, file: !270, line: 444, baseType: !1192, size: 64, offset: 13248)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{null, !800, !1179, !18}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !727, file: !270, line: 455, baseType: !1196, size: 64, offset: 13312)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{null, !800, !1179, !1199, !18}
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !270, line: 148, baseType: !1200)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{null, !18, !35, !357}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !727, file: !270, line: 464, baseType: !1204, size: 64, offset: 13376)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{null, !800, !1207, !1210, !18}
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{null, !18, !35, !18}
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!1053, !18, !35}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !727, file: !270, line: 470, baseType: !797, size: 64, offset: 13440)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !491, file: !492, line: 277, baseType: !726, size: 64, offset: 10368)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !491, file: !492, line: 278, baseType: !1216, size: 64, offset: 10432)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1217, line: 27, baseType: !1218)
!1217 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1219, line: 45, baseType: !1220)
!1219 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1220 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !491, file: !492, line: 279, baseType: !1216, size: 64, offset: 10496)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !491, file: !492, line: 280, baseType: !56, size: 32, offset: 10560)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !491, file: !492, line: 281, baseType: !56, size: 32, offset: 10592)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !491, file: !492, line: 283, baseType: !13, size: 128, offset: 10624)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !491, file: !492, line: 284, baseType: !13, size: 128, offset: 10752)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !491, file: !492, line: 285, baseType: !1227, size: 64, offset: 10880)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !491, file: !492, line: 287, baseType: !1229, size: 64, offset: 10944)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !492, line: 59, flags: DIFlagFwdDecl)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !491, file: !492, line: 288, baseType: !1232, size: 64, offset: 11008)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !492, line: 288, flags: DIFlagFwdDecl)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !491, file: !492, line: 290, baseType: !373, size: 64, offset: 11072)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !491, file: !492, line: 291, baseType: !1236, size: 64, offset: 11136)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1082, line: 65, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1082, line: 50, size: 320, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1238, file: !1082, line: 51, baseType: !480, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1238, file: !1082, line: 53, baseType: !35, size: 32, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1238, file: !1082, line: 54, baseType: !35, size: 32, offset: 96)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1238, file: !1082, line: 55, baseType: !35, size: 32, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1238, file: !1082, line: 55, baseType: !35, size: 32, offset: 160)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1238, file: !1082, line: 56, baseType: !23, size: 8, offset: 192)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1238, file: !1082, line: 56, baseType: !23, size: 8, offset: 200)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1238, file: !1082, line: 57, baseType: !23, size: 8, offset: 208)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1238, file: !1082, line: 57, baseType: !23, size: 8, offset: 216)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1238, file: !1082, line: 59, baseType: !27, size: 16, offset: 224)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1238, file: !1082, line: 59, baseType: !27, size: 16, offset: 240)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1238, file: !1082, line: 59, baseType: !27, size: 16, offset: 256)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1238, file: !1082, line: 61, baseType: !27, size: 16, offset: 272)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1238, file: !1082, line: 63, baseType: !35, size: 32, offset: 288)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !491, file: !492, line: 293, baseType: !13, size: 128, offset: 11200)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !491, file: !492, line: 294, baseType: !1256, size: 64, offset: 11328)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !492, line: 113, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !492, line: 108, size: 256, elements: !1259)
!1259 = !{!1260, !1262, !1263, !1264, !1265}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1258, file: !492, line: 109, baseType: !1261, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1258, file: !492, line: 109, baseType: !1261, size: 64, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1258, file: !492, line: 110, baseType: !490, size: 64, offset: 128)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1258, file: !492, line: 111, baseType: !35, size: 32, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1258, file: !492, line: 112, baseType: !357, size: 32, offset: 224)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !481, file: !482, line: 1221, baseType: !1267, size: 64, offset: 1088)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !482, line: 52, flags: DIFlagFwdDecl)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !481, file: !482, line: 1223, baseType: !480, size: 64, offset: 1152)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !481, file: !482, line: 1225, baseType: !13, size: 128, offset: 1216)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !481, file: !482, line: 1226, baseType: !1272, size: 64, offset: 1344)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !482, line: 69, size: 320, elements: !1274)
!1274 = !{!1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1273, file: !482, line: 70, baseType: !1272, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1273, file: !482, line: 70, baseType: !1272, size: 64, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1273, file: !482, line: 71, baseType: !56, size: 32, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1273, file: !482, line: 71, baseType: !56, size: 32, offset: 160)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1273, file: !482, line: 72, baseType: !35, size: 32, offset: 192)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1273, file: !482, line: 73, baseType: !27, size: 16, offset: 224)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1273, file: !482, line: 73, baseType: !27, size: 16, offset: 240)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1273, file: !482, line: 74, baseType: !490, size: 64, offset: 256)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !481, file: !482, line: 1227, baseType: !490, size: 64, offset: 1408)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !481, file: !482, line: 1229, baseType: !555, size: 96, offset: 1472)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !481, file: !482, line: 1230, baseType: !555, size: 96, offset: 1568)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !481, file: !482, line: 1231, baseType: !555, size: 96, offset: 1664)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !481, file: !482, line: 1231, baseType: !555, size: 96, offset: 1760)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !481, file: !482, line: 1233, baseType: !56, size: 32, offset: 1856)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !481, file: !482, line: 1234, baseType: !35, size: 32, offset: 1888)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !481, file: !482, line: 1235, baseType: !56, size: 32, offset: 1920)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !481, file: !482, line: 1237, baseType: !27, size: 16, offset: 1952)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !481, file: !482, line: 1239, baseType: !23, size: 8, offset: 1968)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !481, file: !482, line: 1240, baseType: !1294, size: 8, offset: 1976)
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 8, elements: !1295)
!1295 = !{!1296}
!1296 = !DISubrange(count: 1)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !481, file: !482, line: 1242, baseType: !1298, size: 64, offset: 1984)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1300, line: 328, size: 3456, elements: !1301)
!1300 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1301 = !{!1302, !1303, !1304, !1307, !1308, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1333, !1338, !1339, !1342, !1346, !1350, !1354, !1358, !1359, !1360, !1361}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1299, file: !1300, line: 329, baseType: !417, size: 960)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1299, file: !1300, line: 330, baseType: !486, size: 64, offset: 960)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1299, file: !1300, line: 332, baseType: !1305, size: 64, offset: 1024)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1300, line: 332, flags: DIFlagFwdDecl)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1299, file: !1300, line: 333, baseType: !22, size: 512, offset: 1088)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1299, file: !1300, line: 335, baseType: !1309, size: 64, offset: 1600)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !38, line: 41, flags: DIFlagFwdDecl)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1299, file: !1300, line: 337, baseType: !586, size: 64, offset: 1664)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1299, file: !1300, line: 338, baseType: !373, size: 64, offset: 1728)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1299, file: !1300, line: 340, baseType: !13, size: 128, offset: 1792)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1299, file: !1300, line: 340, baseType: !13, size: 128, offset: 1920)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1299, file: !1300, line: 342, baseType: !35, size: 32, offset: 2048)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1299, file: !1300, line: 342, baseType: !35, size: 32, offset: 2080)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1299, file: !1300, line: 343, baseType: !35, size: 32, offset: 2112)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1299, file: !1300, line: 345, baseType: !35, size: 32, offset: 2144)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1299, file: !1300, line: 346, baseType: !35, size: 32, offset: 2176)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1299, file: !1300, line: 347, baseType: !27, size: 16, offset: 2208)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1299, file: !1300, line: 348, baseType: !27, size: 16, offset: 2224)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1299, file: !1300, line: 349, baseType: !35, size: 32, offset: 2240)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1299, file: !1300, line: 351, baseType: !35, size: 32, offset: 2272)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1299, file: !1300, line: 353, baseType: !27, size: 16, offset: 2304)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1299, file: !1300, line: 354, baseType: !27, size: 16, offset: 2320)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1299, file: !1300, line: 355, baseType: !35, size: 32, offset: 2336)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1299, file: !1300, line: 357, baseType: !352, size: 128, offset: 2368)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1299, file: !1300, line: 363, baseType: !13, size: 128, offset: 2496)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1299, file: !1300, line: 363, baseType: !13, size: 128, offset: 2624)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1299, file: !1300, line: 368, baseType: !1331, size: 64, offset: 2752)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1300, line: 48, flags: DIFlagFwdDecl)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1299, file: !1300, line: 372, baseType: !1334, size: 32, offset: 2816)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1300, line: 274, baseType: !1335)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1300, line: 271, size: 32, elements: !1336)
!1336 = !{!1337}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1335, file: !1300, line: 273, baseType: !56, size: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1299, file: !1300, line: 373, baseType: !35, size: 32, offset: 2848)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1299, file: !1300, line: 382, baseType: !1340, size: 64, offset: 2880)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1300, line: 46, flags: DIFlagFwdDecl)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1299, file: !1300, line: 385, baseType: !1343, size: 64, offset: 2944)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{null, !18, !357}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1299, file: !1300, line: 386, baseType: !1347, size: 64, offset: 3008)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{null, !18, !617}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1299, file: !1300, line: 387, baseType: !1351, size: 64, offset: 3072)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!35, !18}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1299, file: !1300, line: 388, baseType: !1355, size: 64, offset: 3136)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{null, !18}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1299, file: !1300, line: 389, baseType: !18, size: 64, offset: 3200)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1299, file: !1300, line: 389, baseType: !18, size: 64, offset: 3264)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1299, file: !1300, line: 389, baseType: !18, size: 64, offset: 3328)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1299, file: !1300, line: 389, baseType: !18, size: 64, offset: 3392)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !481, file: !482, line: 1244, baseType: !1363, size: 64, offset: 2048)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !513, line: 200, size: 17024, elements: !1365)
!1365 = !{!1366, !1367, !1368, !1369, !1698, !1699, !1700, !1701, !1702, !1703, !1704}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1364, file: !513, line: 201, baseType: !1227, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1364, file: !513, line: 202, baseType: !13, size: 128, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1364, file: !513, line: 203, baseType: !13, size: 128, offset: 192)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1364, file: !513, line: 206, baseType: !1370, size: 64, offset: 320)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !513, line: 190, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !513, line: 126, size: 2816, elements: !1373)
!1373 = !{!1374, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1465, !1466, !1467, !1468, !1669, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1697}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1372, file: !513, line: 127, baseType: !1375, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1372, file: !513, line: 127, baseType: !1375, size: 64, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1372, file: !513, line: 128, baseType: !18, size: 64, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1372, file: !513, line: 129, baseType: !18, size: 64, offset: 192)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1372, file: !513, line: 130, baseType: !22, size: 512, offset: 256)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1372, file: !513, line: 132, baseType: !35, size: 32, offset: 768)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1372, file: !513, line: 132, baseType: !35, size: 32, offset: 800)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1372, file: !513, line: 133, baseType: !35, size: 32, offset: 832)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1372, file: !513, line: 134, baseType: !35, size: 32, offset: 864)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1372, file: !513, line: 134, baseType: !35, size: 32, offset: 896)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1372, file: !513, line: 134, baseType: !35, size: 32, offset: 928)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1372, file: !513, line: 135, baseType: !35, size: 32, offset: 960)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1372, file: !513, line: 135, baseType: !35, size: 32, offset: 992)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1372, file: !513, line: 136, baseType: !35, size: 32, offset: 1024)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1372, file: !513, line: 136, baseType: !35, size: 32, offset: 1056)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1372, file: !513, line: 137, baseType: !35, size: 32, offset: 1088)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1372, file: !513, line: 137, baseType: !35, size: 32, offset: 1120)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1372, file: !513, line: 138, baseType: !357, size: 32, offset: 1152)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1372, file: !513, line: 139, baseType: !357, size: 32, offset: 1184)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1372, file: !513, line: 139, baseType: !357, size: 32, offset: 1216)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1372, file: !513, line: 141, baseType: !27, size: 16, offset: 1248)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1372, file: !513, line: 142, baseType: !27, size: 16, offset: 1264)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1372, file: !513, line: 143, baseType: !35, size: 32, offset: 1280)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1372, file: !513, line: 144, baseType: !35, size: 32, offset: 1312)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1372, file: !513, line: 146, baseType: !1400, size: 64, offset: 1344)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !513, line: 114, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !513, line: 99, size: 7232, elements: !1403)
!1403 = !{!1404, !1406, !1407, !1408, !1409, !1410, !1411, !1422, !1426, !1438, !1447, !1454, !1464}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1402, file: !513, line: 100, baseType: !1405, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1402, file: !513, line: 100, baseType: !1405, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1402, file: !513, line: 101, baseType: !35, size: 32, offset: 128)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1402, file: !513, line: 101, baseType: !35, size: 32, offset: 160)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1402, file: !513, line: 102, baseType: !35, size: 32, offset: 192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1402, file: !513, line: 102, baseType: !35, size: 32, offset: 224)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1402, file: !513, line: 103, baseType: !1412, size: 64, offset: 256)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !513, line: 59, baseType: !1414)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !513, line: 56, size: 2112, elements: !1415)
!1415 = !{!1416, !1420, !1421}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1414, file: !513, line: 57, baseType: !1417, size: 2048)
!1417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 2048, elements: !1418)
!1418 = !{!1419}
!1419 = !DISubrange(count: 256)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1414, file: !513, line: 58, baseType: !35, size: 32, offset: 2048)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1414, file: !513, line: 58, baseType: !35, size: 32, offset: 2080)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1402, file: !513, line: 106, baseType: !1423, size: 6144, offset: 320)
!1423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 6144, elements: !1424)
!1424 = !{!1425}
!1425 = !DISubrange(count: 768)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1402, file: !513, line: 107, baseType: !1427, size: 64, offset: 6464)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !513, line: 97, baseType: !1429)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !513, line: 83, size: 8320, elements: !1430)
!1430 = !{!1431, !1432, !1433, !1434, !1435, !1436, !1437}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1429, file: !513, line: 84, baseType: !1423, size: 6144)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1429, file: !513, line: 87, baseType: !1417, size: 2048, offset: 6144)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1429, file: !513, line: 88, baseType: !1093, size: 64, offset: 8192)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1429, file: !513, line: 90, baseType: !27, size: 16, offset: 8256)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1429, file: !513, line: 92, baseType: !27, size: 16, offset: 8272)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1429, file: !513, line: 93, baseType: !27, size: 16, offset: 8288)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1429, file: !513, line: 95, baseType: !27, size: 16, offset: 8304)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1402, file: !513, line: 108, baseType: !1439, size: 64, offset: 6528)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !513, line: 66, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !513, line: 61, size: 128, elements: !1442)
!1442 = !{!1443, !1444, !1445, !1446}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1441, file: !513, line: 62, baseType: !35, size: 32)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1441, file: !513, line: 63, baseType: !35, size: 32, offset: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1441, file: !513, line: 64, baseType: !35, size: 32, offset: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1441, file: !513, line: 65, baseType: !35, size: 32, offset: 96)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1402, file: !513, line: 109, baseType: !1448, size: 64, offset: 6592)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !513, line: 71, baseType: !1450)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !513, line: 68, size: 64, elements: !1451)
!1451 = !{!1452, !1453}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1450, file: !513, line: 69, baseType: !35, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1450, file: !513, line: 70, baseType: !35, size: 32, offset: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1402, file: !513, line: 110, baseType: !1455, size: 64, offset: 6656)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !513, line: 81, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !513, line: 73, size: 352, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1463}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1457, file: !513, line: 74, baseType: !555, size: 96)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1457, file: !513, line: 75, baseType: !555, size: 96, offset: 96)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1457, file: !513, line: 76, baseType: !555, size: 96, offset: 192)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1457, file: !513, line: 77, baseType: !35, size: 32, offset: 288)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1457, file: !513, line: 78, baseType: !35, size: 32, offset: 320)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1402, file: !513, line: 113, baseType: !1144, size: 512, offset: 6720)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1372, file: !513, line: 148, baseType: !511, size: 64, offset: 1408)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1372, file: !513, line: 151, baseType: !480, size: 64, offset: 1472)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1372, file: !513, line: 152, baseType: !490, size: 64, offset: 1536)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1372, file: !513, line: 153, baseType: !1469, size: 64, offset: 1600)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !488, line: 64, size: 19136, elements: !1471)
!1471 = !{!1472, !1473, !1474, !1475, !1476, !1477, !1479, !1480, !1481, !1482, !1485, !1486, !1655, !1656, !1664, !1665, !1666, !1667, !1668}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1470, file: !488, line: 65, baseType: !417, size: 960)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1470, file: !488, line: 66, baseType: !486, size: 64, offset: 960)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1470, file: !488, line: 68, baseType: !436, size: 8192, offset: 1024)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1470, file: !488, line: 70, baseType: !35, size: 32, offset: 9216)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1470, file: !488, line: 71, baseType: !35, size: 32, offset: 9248)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1470, file: !488, line: 72, baseType: !1478, size: 64, offset: 9280)
!1478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 64, elements: !374)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1470, file: !488, line: 74, baseType: !357, size: 32, offset: 9344)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1470, file: !488, line: 74, baseType: !357, size: 32, offset: 9376)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1470, file: !488, line: 76, baseType: !1093, size: 64, offset: 9408)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1470, file: !488, line: 77, baseType: !1483, size: 64, offset: 9472)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !488, line: 77, flags: DIFlagFwdDecl)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1470, file: !488, line: 78, baseType: !586, size: 64, offset: 9536)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1470, file: !488, line: 80, baseType: !1487, size: 2624, offset: 9600)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !588, line: 340, size: 2624, elements: !1488)
!1488 = !{!1489, !1517, !1535, !1536, !1537, !1552, !1608, !1609, !1635, !1636, !1637, !1638, !1644}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1487, file: !588, line: 341, baseType: !1490, size: 576)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !588, line: 251, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !588, line: 207, size: 576, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1491, file: !588, line: 208, baseType: !35, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1491, file: !588, line: 211, baseType: !27, size: 16, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1491, file: !588, line: 212, baseType: !27, size: 16, offset: 48)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1491, file: !588, line: 213, baseType: !357, size: 32, offset: 64)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1491, file: !588, line: 214, baseType: !27, size: 16, offset: 96)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1491, file: !588, line: 215, baseType: !27, size: 16, offset: 112)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1491, file: !588, line: 216, baseType: !27, size: 16, offset: 128)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1491, file: !588, line: 217, baseType: !27, size: 16, offset: 144)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1491, file: !588, line: 218, baseType: !27, size: 16, offset: 160)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1491, file: !588, line: 219, baseType: !27, size: 16, offset: 176)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1491, file: !588, line: 220, baseType: !357, size: 32, offset: 192)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1491, file: !588, line: 222, baseType: !27, size: 16, offset: 224)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1491, file: !588, line: 225, baseType: !27, size: 16, offset: 240)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1491, file: !588, line: 228, baseType: !35, size: 32, offset: 256)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1491, file: !588, line: 229, baseType: !35, size: 32, offset: 288)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1491, file: !588, line: 233, baseType: !35, size: 32, offset: 320)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1491, file: !588, line: 236, baseType: !27, size: 16, offset: 352)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1491, file: !588, line: 236, baseType: !27, size: 16, offset: 368)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1491, file: !588, line: 241, baseType: !357, size: 32, offset: 384)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1491, file: !588, line: 244, baseType: !35, size: 32, offset: 416)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1491, file: !588, line: 244, baseType: !35, size: 32, offset: 448)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1491, file: !588, line: 245, baseType: !357, size: 32, offset: 480)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1491, file: !588, line: 248, baseType: !357, size: 32, offset: 512)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1491, file: !588, line: 250, baseType: !35, size: 32, offset: 544)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1487, file: !588, line: 342, baseType: !1518, size: 448, offset: 576)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !588, line: 79, baseType: !1519)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !588, line: 61, size: 448, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1519, file: !588, line: 62, baseType: !18, size: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1519, file: !588, line: 64, baseType: !27, size: 16, offset: 64)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1519, file: !588, line: 65, baseType: !27, size: 16, offset: 80)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1519, file: !588, line: 67, baseType: !357, size: 32, offset: 96)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1519, file: !588, line: 68, baseType: !357, size: 32, offset: 128)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1519, file: !588, line: 69, baseType: !357, size: 32, offset: 160)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1519, file: !588, line: 70, baseType: !27, size: 16, offset: 192)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1519, file: !588, line: 71, baseType: !27, size: 16, offset: 208)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1519, file: !588, line: 72, baseType: !373, size: 64, offset: 224)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1519, file: !588, line: 75, baseType: !357, size: 32, offset: 288)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1519, file: !588, line: 75, baseType: !357, size: 32, offset: 320)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1519, file: !588, line: 75, baseType: !357, size: 32, offset: 352)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1519, file: !588, line: 78, baseType: !357, size: 32, offset: 384)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1519, file: !588, line: 78, baseType: !357, size: 32, offset: 416)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1487, file: !588, line: 343, baseType: !13, size: 128, offset: 1024)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1487, file: !588, line: 344, baseType: !13, size: 128, offset: 1152)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1487, file: !588, line: 345, baseType: !1538, size: 192, offset: 1280)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !588, line: 278, baseType: !1539)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !588, line: 270, size: 192, elements: !1540)
!1540 = !{!1541, !1542, !1543, !1544, !1545}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1539, file: !588, line: 271, baseType: !35, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1539, file: !588, line: 273, baseType: !357, size: 32, offset: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1539, file: !588, line: 275, baseType: !35, size: 32, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1539, file: !588, line: 276, baseType: !35, size: 32, offset: 96)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1539, file: !588, line: 277, baseType: !1546, size: 64, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !588, line: 55, size: 576, elements: !1548)
!1548 = !{!1549, !1550, !1551}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1547, file: !588, line: 56, baseType: !35, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1547, file: !588, line: 57, baseType: !357, size: 32, offset: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1547, file: !588, line: 58, baseType: !638, size: 512, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1487, file: !588, line: 346, baseType: !1553, size: 384, offset: 1472)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !588, line: 268, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !588, line: 253, size: 384, elements: !1555)
!1555 = !{!1556, !1557, !1558, !1559, !1560, !1602, !1603, !1604, !1605, !1606, !1607}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1554, file: !588, line: 254, baseType: !35, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1554, file: !588, line: 255, baseType: !35, size: 32, offset: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1554, file: !588, line: 255, baseType: !35, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1554, file: !588, line: 258, baseType: !357, size: 32, offset: 96)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1554, file: !588, line: 259, baseType: !1561, size: 64, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !588, line: 164, baseType: !1563)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !588, line: 108, size: 1664, elements: !1564)
!1564 = !{!1565, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1563, file: !588, line: 109, baseType: !1566, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1563, file: !588, line: 109, baseType: !1566, size: 64, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1563, file: !588, line: 111, baseType: !22, size: 512, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1563, file: !588, line: 119, baseType: !373, size: 64, offset: 640)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1563, file: !588, line: 119, baseType: !373, size: 64, offset: 704)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1563, file: !588, line: 125, baseType: !373, size: 64, offset: 768)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1563, file: !588, line: 125, baseType: !373, size: 64, offset: 832)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1563, file: !588, line: 127, baseType: !373, size: 64, offset: 896)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1563, file: !588, line: 130, baseType: !35, size: 32, offset: 960)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1563, file: !588, line: 131, baseType: !35, size: 32, offset: 992)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1563, file: !588, line: 132, baseType: !1577, size: 64, offset: 1024)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !588, line: 106, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !588, line: 81, size: 512, elements: !1580)
!1580 = !{!1581, !1582, !1583, !1584, !1585, !1586}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1579, file: !588, line: 82, baseType: !373, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1579, file: !588, line: 97, baseType: !1077, size: 256, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1579, file: !588, line: 102, baseType: !373, size: 64, offset: 320)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1579, file: !588, line: 102, baseType: !373, size: 64, offset: 384)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1579, file: !588, line: 104, baseType: !35, size: 32, offset: 448)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1579, file: !588, line: 105, baseType: !35, size: 32, offset: 480)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1563, file: !588, line: 135, baseType: !555, size: 96, offset: 1088)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1563, file: !588, line: 136, baseType: !357, size: 32, offset: 1184)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1563, file: !588, line: 139, baseType: !35, size: 32, offset: 1216)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1563, file: !588, line: 139, baseType: !35, size: 32, offset: 1248)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1563, file: !588, line: 139, baseType: !35, size: 32, offset: 1280)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1563, file: !588, line: 140, baseType: !555, size: 96, offset: 1312)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1563, file: !588, line: 143, baseType: !27, size: 16, offset: 1408)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1563, file: !588, line: 144, baseType: !27, size: 16, offset: 1424)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1563, file: !588, line: 145, baseType: !27, size: 16, offset: 1440)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1563, file: !588, line: 148, baseType: !27, size: 16, offset: 1456)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1563, file: !588, line: 149, baseType: !35, size: 32, offset: 1472)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1563, file: !588, line: 150, baseType: !357, size: 32, offset: 1504)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1563, file: !588, line: 152, baseType: !586, size: 64, offset: 1536)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1563, file: !588, line: 163, baseType: !357, size: 32, offset: 1600)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1563, file: !588, line: 163, baseType: !357, size: 32, offset: 1632)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1554, file: !588, line: 261, baseType: !357, size: 32, offset: 192)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1554, file: !588, line: 261, baseType: !357, size: 32, offset: 224)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1554, file: !588, line: 261, baseType: !357, size: 32, offset: 256)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1554, file: !588, line: 263, baseType: !35, size: 32, offset: 288)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1554, file: !588, line: 266, baseType: !35, size: 32, offset: 320)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1554, file: !588, line: 267, baseType: !357, size: 32, offset: 352)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1487, file: !588, line: 347, baseType: !1561, size: 64, offset: 1856)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1487, file: !588, line: 348, baseType: !1610, size: 64, offset: 1920)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !588, line: 205, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !588, line: 186, size: 1024, elements: !1613)
!1613 = !{!1614, !1616, !1617, !1618, !1620, !1621, !1622, !1630, !1631, !1632, !1633, !1634}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1612, file: !588, line: 187, baseType: !1615, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1612, file: !588, line: 187, baseType: !1615, size: 64, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1612, file: !588, line: 189, baseType: !22, size: 512, offset: 128)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1612, file: !588, line: 191, baseType: !1619, size: 64, offset: 640)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1612, file: !588, line: 193, baseType: !35, size: 32, offset: 704)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1612, file: !588, line: 193, baseType: !35, size: 32, offset: 736)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1612, file: !588, line: 195, baseType: !1623, size: 64, offset: 768)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !588, line: 184, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !588, line: 166, size: 320, elements: !1626)
!1626 = !{!1627, !1628, !1629}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1625, file: !588, line: 180, baseType: !1077, size: 256)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1625, file: !588, line: 182, baseType: !35, size: 32, offset: 256)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1625, file: !588, line: 183, baseType: !35, size: 32, offset: 288)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1612, file: !588, line: 196, baseType: !35, size: 32, offset: 832)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1612, file: !588, line: 198, baseType: !35, size: 32, offset: 864)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1612, file: !588, line: 200, baseType: !1080, size: 64, offset: 896)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1612, file: !588, line: 201, baseType: !357, size: 32, offset: 960)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1612, file: !588, line: 204, baseType: !35, size: 32, offset: 992)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1487, file: !588, line: 350, baseType: !13, size: 128, offset: 1984)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1487, file: !588, line: 351, baseType: !35, size: 32, offset: 2112)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1487, file: !588, line: 351, baseType: !35, size: 32, offset: 2144)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1487, file: !588, line: 353, baseType: !1639, size: 64, offset: 2176)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !588, line: 297, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !588, line: 295, size: 2048, elements: !1642)
!1642 = !{!1643}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1641, file: !588, line: 296, baseType: !1417, size: 2048)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1487, file: !588, line: 355, baseType: !1645, size: 384, offset: 2240)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !588, line: 338, baseType: !1646)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !588, line: 322, size: 384, elements: !1647)
!1647 = !{!1648, !1649, !1650, !1651, !1652, !1653, !1654}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1646, file: !588, line: 323, baseType: !35, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1646, file: !588, line: 325, baseType: !27, size: 16, offset: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1646, file: !588, line: 326, baseType: !27, size: 16, offset: 48)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1646, file: !588, line: 331, baseType: !13, size: 128, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1646, file: !588, line: 334, baseType: !13, size: 128, offset: 192)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1646, file: !588, line: 335, baseType: !35, size: 32, offset: 320)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1646, file: !588, line: 337, baseType: !35, size: 32, offset: 352)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1470, file: !488, line: 81, baseType: !18, size: 64, offset: 12224)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1470, file: !488, line: 85, baseType: !1657, size: 6208, offset: 12288)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !488, line: 55, size: 6208, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662, !1663}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1657, file: !488, line: 56, baseType: !1423, size: 6144)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1657, file: !488, line: 58, baseType: !27, size: 16, offset: 6144)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1657, file: !488, line: 59, baseType: !27, size: 16, offset: 6160)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1657, file: !488, line: 60, baseType: !27, size: 16, offset: 6176)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1657, file: !488, line: 61, baseType: !27, size: 16, offset: 6192)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1470, file: !488, line: 86, baseType: !35, size: 32, offset: 18496)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1470, file: !488, line: 88, baseType: !35, size: 32, offset: 18528)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1470, file: !488, line: 90, baseType: !35, size: 32, offset: 18560)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1470, file: !488, line: 94, baseType: !35, size: 32, offset: 18592)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1470, file: !488, line: 100, baseType: !1144, size: 512, offset: 18624)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1372, file: !513, line: 154, baseType: !1670, size: 64, offset: 1664)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1672, line: 264, flags: DIFlagFwdDecl)
!1672 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1372, file: !513, line: 156, baseType: !1093, size: 64, offset: 1728)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1372, file: !513, line: 158, baseType: !357, size: 32, offset: 1792)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1372, file: !513, line: 159, baseType: !357, size: 32, offset: 1824)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1372, file: !513, line: 162, baseType: !1375, size: 64, offset: 1856)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1372, file: !513, line: 162, baseType: !1375, size: 64, offset: 1920)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1372, file: !513, line: 162, baseType: !1375, size: 64, offset: 1984)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1372, file: !513, line: 164, baseType: !13, size: 128, offset: 2048)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1372, file: !513, line: 166, baseType: !1681, size: 64, offset: 2176)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !513, line: 51, flags: DIFlagFwdDecl)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1372, file: !513, line: 167, baseType: !18, size: 64, offset: 2240)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1372, file: !513, line: 168, baseType: !357, size: 32, offset: 2304)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1372, file: !513, line: 170, baseType: !357, size: 32, offset: 2336)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1372, file: !513, line: 170, baseType: !357, size: 32, offset: 2368)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1372, file: !513, line: 171, baseType: !357, size: 32, offset: 2400)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1372, file: !513, line: 173, baseType: !18, size: 64, offset: 2432)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1372, file: !513, line: 175, baseType: !35, size: 32, offset: 2496)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1372, file: !513, line: 176, baseType: !35, size: 32, offset: 2528)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1372, file: !513, line: 179, baseType: !35, size: 32, offset: 2560)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1372, file: !513, line: 180, baseType: !357, size: 32, offset: 2592)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1372, file: !513, line: 183, baseType: !35, size: 32, offset: 2624)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1372, file: !513, line: 185, baseType: !23, size: 8, offset: 2656)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1372, file: !513, line: 186, baseType: !1696, size: 24, offset: 2664)
!1696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 24, elements: !556)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1372, file: !513, line: 189, baseType: !13, size: 128, offset: 2688)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1364, file: !513, line: 207, baseType: !436, size: 8192, offset: 384)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1364, file: !513, line: 208, baseType: !436, size: 8192, offset: 8576)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1364, file: !513, line: 210, baseType: !35, size: 32, offset: 16768)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1364, file: !513, line: 210, baseType: !35, size: 32, offset: 16800)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1364, file: !513, line: 211, baseType: !35, size: 32, offset: 16832)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1364, file: !513, line: 211, baseType: !35, size: 32, offset: 16864)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1364, file: !513, line: 212, baseType: !352, size: 128, offset: 16896)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !481, file: !482, line: 1246, baseType: !1706, size: 64, offset: 2112)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !482, line: 1067, size: 5184, elements: !1708)
!1708 = !{!1709, !1747, !1748, !1763, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1785, !1801, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1911}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1707, file: !482, line: 1068, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !482, line: 934, baseType: !1712)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !482, line: 925, size: 576, elements: !1713)
!1713 = !{!1714, !1730, !1731, !1732, !1733, !1734, !1746}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1712, file: !482, line: 926, baseType: !1715, size: 320)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !482, line: 830, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !482, line: 813, size: 320, elements: !1717)
!1717 = !{!1718, !1721, !1724, !1725, !1727, !1728, !1729}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1716, file: !482, line: 814, baseType: !1719, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !482, line: 51, flags: DIFlagFwdDecl)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1716, file: !482, line: 815, baseType: !1722, size: 64, offset: 64)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !482, line: 815, flags: DIFlagFwdDecl)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1716, file: !482, line: 818, baseType: !18, size: 64, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1716, file: !482, line: 819, baseType: !1726, size: 32, offset: 192)
!1726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 32, elements: !630)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1716, file: !482, line: 822, baseType: !35, size: 32, offset: 224)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1716, file: !482, line: 826, baseType: !35, size: 32, offset: 256)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1716, file: !482, line: 829, baseType: !35, size: 32, offset: 288)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1712, file: !482, line: 928, baseType: !27, size: 16, offset: 320)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1712, file: !482, line: 928, baseType: !27, size: 16, offset: 336)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1712, file: !482, line: 929, baseType: !35, size: 32, offset: 352)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1712, file: !482, line: 930, baseType: !989, size: 64, offset: 384)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1712, file: !482, line: 931, baseType: !1735, size: 64, offset: 448)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !822, line: 59, size: 128, elements: !1737)
!1737 = !{!1738, !1744, !1745}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1736, file: !822, line: 60, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !822, line: 54, size: 64, elements: !1741)
!1741 = !{!1742, !1743}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1740, file: !822, line: 55, baseType: !35, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1740, file: !822, line: 56, baseType: !357, size: 32, offset: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1736, file: !822, line: 61, baseType: !35, size: 32, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1736, file: !822, line: 62, baseType: !35, size: 32, offset: 96)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1712, file: !482, line: 933, baseType: !18, size: 64, offset: 512)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1707, file: !482, line: 1069, baseType: !1710, size: 64, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1707, file: !482, line: 1070, baseType: !1749, size: 64, offset: 128)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !482, line: 916, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !482, line: 891, size: 704, elements: !1752)
!1752 = !{!1753, !1754, !1755, !1757, !1758, !1759, !1760, !1761, !1762}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1751, file: !482, line: 892, baseType: !1715, size: 320)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1751, file: !482, line: 896, baseType: !35, size: 32, offset: 320)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1751, file: !482, line: 900, baseType: !1756, size: 96, offset: 352)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 96, elements: !556)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1751, file: !482, line: 903, baseType: !357, size: 32, offset: 448)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1751, file: !482, line: 906, baseType: !35, size: 32, offset: 480)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1751, file: !482, line: 909, baseType: !357, size: 32, offset: 512)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1751, file: !482, line: 912, baseType: !357, size: 32, offset: 544)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1751, file: !482, line: 914, baseType: !490, size: 64, offset: 576)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1751, file: !482, line: 915, baseType: !18, size: 64, offset: 640)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1707, file: !482, line: 1071, baseType: !1764, size: 64, offset: 192)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !482, line: 920, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !482, line: 918, size: 320, elements: !1767)
!1767 = !{!1768}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1766, file: !482, line: 919, baseType: !1715, size: 320)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1707, file: !482, line: 1075, baseType: !357, size: 32, offset: 256)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1707, file: !482, line: 1077, baseType: !357, size: 32, offset: 288)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1707, file: !482, line: 1078, baseType: !357, size: 32, offset: 320)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1707, file: !482, line: 1079, baseType: !27, size: 16, offset: 352)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1707, file: !482, line: 1082, baseType: !27, size: 16, offset: 368)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1707, file: !482, line: 1085, baseType: !23, size: 8, offset: 384)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1707, file: !482, line: 1086, baseType: !23, size: 8, offset: 392)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1707, file: !482, line: 1087, baseType: !23, size: 8, offset: 400)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1707, file: !482, line: 1088, baseType: !23, size: 8, offset: 408)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1707, file: !482, line: 1090, baseType: !357, size: 32, offset: 416)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1707, file: !482, line: 1093, baseType: !27, size: 16, offset: 448)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1707, file: !482, line: 1096, baseType: !23, size: 8, offset: 464)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1707, file: !482, line: 1098, baseType: !1782, size: 40, offset: 472)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 40, elements: !1783)
!1783 = !{!1784}
!1784 = !DISubrange(count: 5)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1707, file: !482, line: 1101, baseType: !1786, size: 832, offset: 512)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !482, line: 836, size: 832, elements: !1787)
!1787 = !{!1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1786, file: !482, line: 837, baseType: !1715, size: 320)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1786, file: !482, line: 839, baseType: !27, size: 16, offset: 320)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1786, file: !482, line: 839, baseType: !27, size: 16, offset: 336)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1786, file: !482, line: 842, baseType: !27, size: 16, offset: 352)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1786, file: !482, line: 842, baseType: !27, size: 16, offset: 368)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1786, file: !482, line: 843, baseType: !1125, size: 32, offset: 384)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1786, file: !482, line: 845, baseType: !35, size: 32, offset: 416)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1786, file: !482, line: 847, baseType: !18, size: 64, offset: 448)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1786, file: !482, line: 848, baseType: !1080, size: 64, offset: 512)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1786, file: !482, line: 849, baseType: !1080, size: 64, offset: 576)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1786, file: !482, line: 850, baseType: !1080, size: 64, offset: 640)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1786, file: !482, line: 851, baseType: !555, size: 96, offset: 704)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1786, file: !482, line: 852, baseType: !357, size: 32, offset: 800)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1707, file: !482, line: 1104, baseType: !1802, size: 1344, offset: 1344)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !482, line: 867, size: 1344, elements: !1803)
!1803 = !{!1804, !1805, !1806, !1807, !1808, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1802, file: !482, line: 868, baseType: !27, size: 16)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1802, file: !482, line: 869, baseType: !27, size: 16, offset: 16)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1802, file: !482, line: 870, baseType: !27, size: 16, offset: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1802, file: !482, line: 871, baseType: !27, size: 16, offset: 48)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1802, file: !482, line: 873, baseType: !1809, size: 896, offset: 64)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1810, size: 896, elements: !1152)
!1810 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !482, line: 864, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !482, line: 859, size: 128, elements: !1812)
!1812 = !{!1813, !1814, !1815, !1816, !1817, !1818}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1811, file: !482, line: 860, baseType: !27, size: 16)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1811, file: !482, line: 861, baseType: !27, size: 16, offset: 16)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1811, file: !482, line: 861, baseType: !27, size: 16, offset: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1811, file: !482, line: 861, baseType: !27, size: 16, offset: 48)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1811, file: !482, line: 862, baseType: !35, size: 32, offset: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1811, file: !482, line: 863, baseType: !357, size: 32, offset: 96)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1802, file: !482, line: 874, baseType: !18, size: 64, offset: 960)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1802, file: !482, line: 876, baseType: !357, size: 32, offset: 1024)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1802, file: !482, line: 876, baseType: !357, size: 32, offset: 1056)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1802, file: !482, line: 878, baseType: !35, size: 32, offset: 1088)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1802, file: !482, line: 879, baseType: !35, size: 32, offset: 1120)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1802, file: !482, line: 881, baseType: !35, size: 32, offset: 1152)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1802, file: !482, line: 881, baseType: !35, size: 32, offset: 1184)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1802, file: !482, line: 883, baseType: !480, size: 64, offset: 1216)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1802, file: !482, line: 884, baseType: !490, size: 64, offset: 1280)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1707, file: !482, line: 1107, baseType: !357, size: 32, offset: 2688)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1707, file: !482, line: 1110, baseType: !357, size: 32, offset: 2720)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1707, file: !482, line: 1113, baseType: !27, size: 16, offset: 2752)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1707, file: !482, line: 1113, baseType: !27, size: 16, offset: 2768)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1707, file: !482, line: 1116, baseType: !23, size: 8, offset: 2784)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1707, file: !482, line: 1117, baseType: !1294, size: 8, offset: 2792)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1707, file: !482, line: 1120, baseType: !27, size: 16, offset: 2800)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1707, file: !482, line: 1121, baseType: !357, size: 32, offset: 2816)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1707, file: !482, line: 1122, baseType: !357, size: 32, offset: 2848)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1707, file: !482, line: 1123, baseType: !357, size: 32, offset: 2880)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1707, file: !482, line: 1124, baseType: !357, size: 32, offset: 2912)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1707, file: !482, line: 1125, baseType: !357, size: 32, offset: 2944)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1707, file: !482, line: 1126, baseType: !357, size: 32, offset: 2976)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1707, file: !482, line: 1127, baseType: !357, size: 32, offset: 3008)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1707, file: !482, line: 1128, baseType: !357, size: 32, offset: 3040)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1707, file: !482, line: 1129, baseType: !357, size: 32, offset: 3072)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1707, file: !482, line: 1130, baseType: !357, size: 32, offset: 3104)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1707, file: !482, line: 1131, baseType: !27, size: 16, offset: 3136)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1707, file: !482, line: 1132, baseType: !23, size: 8, offset: 3152)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1707, file: !482, line: 1133, baseType: !23, size: 8, offset: 3160)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1707, file: !482, line: 1134, baseType: !1696, size: 24, offset: 3168)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1707, file: !482, line: 1135, baseType: !23, size: 8, offset: 3192)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1707, file: !482, line: 1138, baseType: !490, size: 64, offset: 3200)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1707, file: !482, line: 1139, baseType: !23, size: 8, offset: 3264)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1707, file: !482, line: 1140, baseType: !23, size: 8, offset: 3272)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1707, file: !482, line: 1141, baseType: !23, size: 8, offset: 3280)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1707, file: !482, line: 1142, baseType: !23, size: 8, offset: 3288)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1707, file: !482, line: 1143, baseType: !23, size: 8, offset: 3296)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1707, file: !482, line: 1144, baseType: !1857, size: 64, offset: 3304)
!1857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 64, elements: !1100)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1707, file: !482, line: 1145, baseType: !1857, size: 64, offset: 3368)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1707, file: !482, line: 1148, baseType: !23, size: 8, offset: 3432)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1707, file: !482, line: 1149, baseType: !23, size: 8, offset: 3440)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1707, file: !482, line: 1152, baseType: !23, size: 8, offset: 3448)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1707, file: !482, line: 1152, baseType: !23, size: 8, offset: 3456)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1707, file: !482, line: 1153, baseType: !23, size: 8, offset: 3464)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1707, file: !482, line: 1154, baseType: !27, size: 16, offset: 3472)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1707, file: !482, line: 1154, baseType: !27, size: 16, offset: 3488)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1707, file: !482, line: 1155, baseType: !27, size: 16, offset: 3504)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1707, file: !482, line: 1155, baseType: !27, size: 16, offset: 3520)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1707, file: !482, line: 1156, baseType: !23, size: 8, offset: 3536)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1707, file: !482, line: 1157, baseType: !23, size: 8, offset: 3544)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1707, file: !482, line: 1159, baseType: !23, size: 8, offset: 3552)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1707, file: !482, line: 1160, baseType: !23, size: 8, offset: 3560)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1707, file: !482, line: 1161, baseType: !23, size: 8, offset: 3568)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1707, file: !482, line: 1162, baseType: !23, size: 8, offset: 3576)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1707, file: !482, line: 1165, baseType: !35, size: 32, offset: 3584)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1707, file: !482, line: 1166, baseType: !35, size: 32, offset: 3616)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1707, file: !482, line: 1167, baseType: !35, size: 32, offset: 3648)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1707, file: !482, line: 1168, baseType: !35, size: 32, offset: 3680)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1707, file: !482, line: 1171, baseType: !27, size: 16, offset: 3712)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1707, file: !482, line: 1171, baseType: !27, size: 16, offset: 3728)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1707, file: !482, line: 1172, baseType: !35, size: 32, offset: 3744)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1707, file: !482, line: 1173, baseType: !357, size: 32, offset: 3776)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1707, file: !482, line: 1174, baseType: !357, size: 32, offset: 3808)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1707, file: !482, line: 1177, baseType: !1884, size: 1024, offset: 3840)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !482, line: 963, size: 1024, elements: !1885)
!1885 = !{!1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1909, !1910}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1884, file: !482, line: 965, baseType: !35, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1884, file: !482, line: 968, baseType: !357, size: 32, offset: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1884, file: !482, line: 971, baseType: !357, size: 32, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1884, file: !482, line: 974, baseType: !357, size: 32, offset: 96)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1884, file: !482, line: 977, baseType: !555, size: 96, offset: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1884, file: !482, line: 979, baseType: !555, size: 96, offset: 224)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1884, file: !482, line: 982, baseType: !35, size: 32, offset: 320)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1884, file: !482, line: 987, baseType: !373, size: 64, offset: 352)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1884, file: !482, line: 989, baseType: !357, size: 32, offset: 416)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1884, file: !482, line: 994, baseType: !35, size: 32, offset: 448)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1884, file: !482, line: 995, baseType: !35, size: 32, offset: 480)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1884, file: !482, line: 997, baseType: !23, size: 8, offset: 512)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1884, file: !482, line: 998, baseType: !1151, size: 56, offset: 520)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1884, file: !482, line: 1000, baseType: !357, size: 32, offset: 576)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1884, file: !482, line: 1003, baseType: !373, size: 64, offset: 608)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1884, file: !482, line: 1006, baseType: !35, size: 32, offset: 672)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1884, file: !482, line: 1009, baseType: !357, size: 32, offset: 704)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1884, file: !482, line: 1012, baseType: !373, size: 64, offset: 736)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1884, file: !482, line: 1015, baseType: !373, size: 64, offset: 800)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1884, file: !482, line: 1018, baseType: !35, size: 32, offset: 864)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1884, file: !482, line: 1019, baseType: !1907, size: 64, offset: 896)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !482, line: 63, flags: DIFlagFwdDecl)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1884, file: !482, line: 1023, baseType: !357, size: 32, offset: 960)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1884, file: !482, line: 1024, baseType: !35, size: 32, offset: 992)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1707, file: !482, line: 1179, baseType: !1912, size: 320, offset: 4864)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !482, line: 1043, size: 320, elements: !1913)
!1913 = !{!1914, !1915, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1912, file: !482, line: 1044, baseType: !23, size: 8)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1912, file: !482, line: 1045, baseType: !1916, size: 16, offset: 8)
!1916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 16, elements: !374)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1912, file: !482, line: 1048, baseType: !23, size: 8, offset: 24)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1912, file: !482, line: 1049, baseType: !357, size: 32, offset: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1912, file: !482, line: 1049, baseType: !357, size: 32, offset: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1912, file: !482, line: 1052, baseType: !357, size: 32, offset: 96)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1912, file: !482, line: 1052, baseType: !357, size: 32, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1912, file: !482, line: 1053, baseType: !23, size: 8, offset: 160)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1912, file: !482, line: 1054, baseType: !1696, size: 24, offset: 168)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1912, file: !482, line: 1057, baseType: !357, size: 32, offset: 192)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1912, file: !482, line: 1057, baseType: !357, size: 32, offset: 224)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1912, file: !482, line: 1060, baseType: !357, size: 32, offset: 256)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1912, file: !482, line: 1060, baseType: !357, size: 32, offset: 288)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !481, file: !482, line: 1247, baseType: !1929, size: 64, offset: 2176)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !482, line: 60, flags: DIFlagFwdDecl)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !481, file: !482, line: 1251, baseType: !1932, size: 31872, offset: 2240)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !482, line: 403, size: 31872, elements: !1933)
!1933 = !{!1934, !2009, !2029, !2038, !2058, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2188, !2189, !2190, !2194, !2210, !2211}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1932, file: !482, line: 404, baseType: !1935, size: 1984)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !482, line: 259, size: 1984, elements: !1936)
!1936 = !{!1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1954, !2004}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1935, file: !482, line: 260, baseType: !23, size: 8)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1935, file: !482, line: 263, baseType: !23, size: 8, offset: 8)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1935, file: !482, line: 266, baseType: !23, size: 8, offset: 16)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1935, file: !482, line: 267, baseType: !23, size: 8, offset: 24)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1935, file: !482, line: 269, baseType: !23, size: 8, offset: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1935, file: !482, line: 270, baseType: !23, size: 8, offset: 40)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1935, file: !482, line: 276, baseType: !23, size: 8, offset: 48)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1935, file: !482, line: 279, baseType: !23, size: 8, offset: 56)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1935, file: !482, line: 280, baseType: !27, size: 16, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1935, file: !482, line: 280, baseType: !27, size: 16, offset: 80)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1935, file: !482, line: 281, baseType: !357, size: 32, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1935, file: !482, line: 284, baseType: !23, size: 8, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1935, file: !482, line: 285, baseType: !23, size: 8, offset: 136)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1935, file: !482, line: 287, baseType: !1951, size: 48, offset: 144)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 48, elements: !1952)
!1952 = !{!1953}
!1953 = !DISubrange(count: 6)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1935, file: !482, line: 290, baseType: !1955, size: 1280, offset: 192)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1145, line: 174, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1145, line: 166, size: 1280, elements: !1957)
!1957 = !{!1958, !1959, !1960, !1961, !1962, !1963, !1964, !2003}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1956, file: !1145, line: 167, baseType: !35, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1956, file: !1145, line: 167, baseType: !35, size: 32, offset: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1956, file: !1145, line: 168, baseType: !22, size: 512, offset: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1956, file: !1145, line: 169, baseType: !22, size: 512, offset: 576)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1956, file: !1145, line: 170, baseType: !357, size: 32, offset: 1088)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1956, file: !1145, line: 171, baseType: !357, size: 32, offset: 1120)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1956, file: !1145, line: 172, baseType: !1965, size: 64, offset: 1152)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1145, line: 72, size: 3072, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971, !1972, !1973, !1974, !1999, !2000, !2001, !2002}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1966, file: !1145, line: 73, baseType: !35, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1966, file: !1145, line: 73, baseType: !35, size: 32, offset: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1966, file: !1145, line: 74, baseType: !35, size: 32, offset: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1966, file: !1145, line: 75, baseType: !35, size: 32, offset: 96)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1966, file: !1145, line: 77, baseType: !352, size: 128, offset: 128)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1966, file: !1145, line: 77, baseType: !352, size: 128, offset: 256)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1966, file: !1145, line: 79, baseType: !1975, size: 2304, offset: 384)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1976, size: 2304, elements: !630)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1145, line: 67, baseType: !1977)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1145, line: 55, size: 576, elements: !1978)
!1978 = !{!1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1995, !1996, !1997, !1998}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1977, file: !1145, line: 56, baseType: !27, size: 16)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1977, file: !1145, line: 56, baseType: !27, size: 16, offset: 16)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1977, file: !1145, line: 58, baseType: !357, size: 32, offset: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1977, file: !1145, line: 59, baseType: !357, size: 32, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1977, file: !1145, line: 59, baseType: !357, size: 32, offset: 96)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1977, file: !1145, line: 60, baseType: !373, size: 64, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1977, file: !1145, line: 60, baseType: !373, size: 64, offset: 192)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1977, file: !1145, line: 61, baseType: !1987, size: 64, offset: 256)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1145, line: 47, baseType: !1989)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1145, line: 44, size: 96, elements: !1990)
!1990 = !{!1991, !1992, !1993, !1994}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1989, file: !1145, line: 45, baseType: !357, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1989, file: !1145, line: 45, baseType: !357, size: 32, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1989, file: !1145, line: 46, baseType: !27, size: 16, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1989, file: !1145, line: 46, baseType: !27, size: 16, offset: 80)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1977, file: !1145, line: 62, baseType: !1987, size: 64, offset: 320)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1977, file: !1145, line: 64, baseType: !1987, size: 64, offset: 384)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1977, file: !1145, line: 65, baseType: !373, size: 64, offset: 448)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1977, file: !1145, line: 66, baseType: !373, size: 64, offset: 512)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1966, file: !1145, line: 80, baseType: !555, size: 96, offset: 2688)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1966, file: !1145, line: 80, baseType: !555, size: 96, offset: 2784)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1966, file: !1145, line: 81, baseType: !555, size: 96, offset: 2880)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1966, file: !1145, line: 83, baseType: !555, size: 96, offset: 2976)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1956, file: !1145, line: 173, baseType: !18, size: 64, offset: 1216)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1935, file: !482, line: 291, baseType: !2005, size: 512, offset: 1472)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1145, line: 178, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1145, line: 176, size: 512, elements: !2007)
!2007 = !{!2008}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2006, file: !1145, line: 177, baseType: !22, size: 512)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1932, file: !482, line: 406, baseType: !2010, size: 64, offset: 1984)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !482, line: 80, size: 1472, elements: !2012)
!2012 = !{!2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2011, file: !482, line: 81, baseType: !18, size: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2011, file: !482, line: 82, baseType: !18, size: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2011, file: !482, line: 83, baseType: !56, size: 32, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2011, file: !482, line: 84, baseType: !56, size: 32, offset: 160)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2011, file: !482, line: 86, baseType: !56, size: 32, offset: 192)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2011, file: !482, line: 87, baseType: !56, size: 32, offset: 224)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2011, file: !482, line: 88, baseType: !56, size: 32, offset: 256)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2011, file: !482, line: 89, baseType: !56, size: 32, offset: 288)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2011, file: !482, line: 90, baseType: !56, size: 32, offset: 320)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2011, file: !482, line: 91, baseType: !56, size: 32, offset: 352)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2011, file: !482, line: 92, baseType: !56, size: 32, offset: 384)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2011, file: !482, line: 93, baseType: !56, size: 32, offset: 416)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2011, file: !482, line: 95, baseType: !2026, size: 1024, offset: 448)
!2026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 1024, elements: !2027)
!2027 = !{!2028}
!2028 = !DISubrange(count: 128)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1932, file: !482, line: 407, baseType: !2030, size: 64, offset: 2048)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !482, line: 98, size: 1216, elements: !2032)
!2032 = !{!2033, !2034, !2035, !2036, !2037}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2031, file: !482, line: 100, baseType: !18, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2031, file: !482, line: 101, baseType: !18, size: 64, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2031, file: !482, line: 103, baseType: !56, size: 32, offset: 128)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2031, file: !482, line: 104, baseType: !56, size: 32, offset: 160)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2031, file: !482, line: 106, baseType: !2026, size: 1024, offset: 192)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1932, file: !482, line: 408, baseType: !2039, size: 512, offset: 2112)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !482, line: 109, size: 512, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2039, file: !482, line: 111, baseType: !35, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2039, file: !482, line: 112, baseType: !35, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2039, file: !482, line: 115, baseType: !35, size: 32, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2039, file: !482, line: 116, baseType: !35, size: 32, offset: 96)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2039, file: !482, line: 117, baseType: !35, size: 32, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2039, file: !482, line: 118, baseType: !35, size: 32, offset: 160)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2039, file: !482, line: 119, baseType: !35, size: 32, offset: 192)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2039, file: !482, line: 120, baseType: !35, size: 32, offset: 224)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2039, file: !482, line: 121, baseType: !35, size: 32, offset: 256)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2039, file: !482, line: 122, baseType: !35, size: 32, offset: 288)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2039, file: !482, line: 125, baseType: !35, size: 32, offset: 320)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2039, file: !482, line: 126, baseType: !35, size: 32, offset: 352)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2039, file: !482, line: 127, baseType: !27, size: 16, offset: 384)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2039, file: !482, line: 128, baseType: !27, size: 16, offset: 400)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2039, file: !482, line: 129, baseType: !35, size: 32, offset: 416)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2039, file: !482, line: 130, baseType: !35, size: 32, offset: 448)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2039, file: !482, line: 131, baseType: !35, size: 32, offset: 480)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1932, file: !482, line: 409, baseType: !2059, size: 576, offset: 2624)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !482, line: 134, size: 576, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2059, file: !482, line: 135, baseType: !35, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2059, file: !482, line: 136, baseType: !35, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2059, file: !482, line: 137, baseType: !35, size: 32, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2059, file: !482, line: 138, baseType: !35, size: 32, offset: 96)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2059, file: !482, line: 139, baseType: !35, size: 32, offset: 128)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2059, file: !482, line: 140, baseType: !35, size: 32, offset: 160)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2059, file: !482, line: 141, baseType: !35, size: 32, offset: 192)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2059, file: !482, line: 142, baseType: !35, size: 32, offset: 224)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2059, file: !482, line: 143, baseType: !357, size: 32, offset: 256)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2059, file: !482, line: 144, baseType: !35, size: 32, offset: 288)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2059, file: !482, line: 145, baseType: !35, size: 32, offset: 320)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2059, file: !482, line: 147, baseType: !35, size: 32, offset: 352)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2059, file: !482, line: 148, baseType: !35, size: 32, offset: 384)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2059, file: !482, line: 149, baseType: !35, size: 32, offset: 416)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2059, file: !482, line: 150, baseType: !35, size: 32, offset: 448)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2059, file: !482, line: 151, baseType: !35, size: 32, offset: 480)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2059, file: !482, line: 152, baseType: !453, size: 64, offset: 512)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1932, file: !482, line: 411, baseType: !35, size: 32, offset: 3200)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1932, file: !482, line: 411, baseType: !35, size: 32, offset: 3232)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1932, file: !482, line: 411, baseType: !35, size: 32, offset: 3264)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1932, file: !482, line: 412, baseType: !357, size: 32, offset: 3296)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1932, file: !482, line: 413, baseType: !35, size: 32, offset: 3328)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1932, file: !482, line: 413, baseType: !35, size: 32, offset: 3360)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1932, file: !482, line: 415, baseType: !35, size: 32, offset: 3392)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1932, file: !482, line: 415, baseType: !35, size: 32, offset: 3424)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1932, file: !482, line: 416, baseType: !27, size: 16, offset: 3456)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1932, file: !482, line: 416, baseType: !27, size: 16, offset: 3472)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1932, file: !482, line: 418, baseType: !357, size: 32, offset: 3488)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1932, file: !482, line: 418, baseType: !357, size: 32, offset: 3520)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1932, file: !482, line: 421, baseType: !357, size: 32, offset: 3552)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1932, file: !482, line: 421, baseType: !357, size: 32, offset: 3584)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1932, file: !482, line: 421, baseType: !357, size: 32, offset: 3616)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1932, file: !482, line: 425, baseType: !27, size: 16, offset: 3648)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1932, file: !482, line: 425, baseType: !27, size: 16, offset: 3664)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1932, file: !482, line: 425, baseType: !27, size: 16, offset: 3680)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1932, file: !482, line: 426, baseType: !27, size: 16, offset: 3696)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1932, file: !482, line: 428, baseType: !27, size: 16, offset: 3712)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1932, file: !482, line: 428, baseType: !27, size: 16, offset: 3728)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1932, file: !482, line: 431, baseType: !35, size: 32, offset: 3744)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1932, file: !482, line: 433, baseType: !27, size: 16, offset: 3776)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1932, file: !482, line: 435, baseType: !27, size: 16, offset: 3792)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1932, file: !482, line: 437, baseType: !27, size: 16, offset: 3808)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1932, file: !482, line: 439, baseType: !27, size: 16, offset: 3824)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1932, file: !482, line: 441, baseType: !27, size: 16, offset: 3840)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1932, file: !482, line: 443, baseType: !27, size: 16, offset: 3856)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1932, file: !482, line: 449, baseType: !35, size: 32, offset: 3872)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1932, file: !482, line: 453, baseType: !35, size: 32, offset: 3904)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1932, file: !482, line: 458, baseType: !27, size: 16, offset: 3936)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1932, file: !482, line: 462, baseType: !27, size: 16, offset: 3952)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1932, file: !482, line: 467, baseType: !35, size: 32, offset: 3968)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1932, file: !482, line: 467, baseType: !35, size: 32, offset: 4000)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1932, file: !482, line: 469, baseType: !27, size: 16, offset: 4032)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1932, file: !482, line: 469, baseType: !27, size: 16, offset: 4048)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1932, file: !482, line: 469, baseType: !27, size: 16, offset: 4064)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1932, file: !482, line: 469, baseType: !27, size: 16, offset: 4080)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1932, file: !482, line: 474, baseType: !27, size: 16, offset: 4096)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1932, file: !482, line: 475, baseType: !23, size: 8, offset: 4112)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1932, file: !482, line: 476, baseType: !23, size: 8, offset: 4120)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1932, file: !482, line: 481, baseType: !35, size: 32, offset: 4128)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1932, file: !482, line: 486, baseType: !35, size: 32, offset: 4160)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1932, file: !482, line: 491, baseType: !35, size: 32, offset: 4192)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1932, file: !482, line: 496, baseType: !27, size: 16, offset: 4224)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1932, file: !482, line: 498, baseType: !27, size: 16, offset: 4240)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1932, file: !482, line: 501, baseType: !27, size: 16, offset: 4256)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1932, file: !482, line: 502, baseType: !27, size: 16, offset: 4272)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1932, file: !482, line: 508, baseType: !27, size: 16, offset: 4288)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1932, file: !482, line: 513, baseType: !27, size: 16, offset: 4304)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1932, file: !482, line: 515, baseType: !27, size: 16, offset: 4320)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1932, file: !482, line: 515, baseType: !27, size: 16, offset: 4336)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1932, file: !482, line: 519, baseType: !352, size: 128, offset: 4352)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1932, file: !482, line: 519, baseType: !352, size: 128, offset: 4480)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1932, file: !482, line: 520, baseType: !363, size: 128, offset: 4608)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1932, file: !482, line: 523, baseType: !13, size: 128, offset: 4736)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1932, file: !482, line: 524, baseType: !27, size: 16, offset: 4864)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1932, file: !482, line: 527, baseType: !27, size: 16, offset: 4880)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1932, file: !482, line: 532, baseType: !357, size: 32, offset: 4896)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1932, file: !482, line: 532, baseType: !357, size: 32, offset: 4928)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1932, file: !482, line: 534, baseType: !357, size: 32, offset: 4960)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1932, file: !482, line: 538, baseType: !357, size: 32, offset: 4992)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1932, file: !482, line: 542, baseType: !35, size: 32, offset: 5024)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1932, file: !482, line: 545, baseType: !357, size: 32, offset: 5056)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1932, file: !482, line: 545, baseType: !357, size: 32, offset: 5088)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1932, file: !482, line: 545, baseType: !357, size: 32, offset: 5120)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1932, file: !482, line: 548, baseType: !357, size: 32, offset: 5152)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1932, file: !482, line: 551, baseType: !27, size: 16, offset: 5184)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1932, file: !482, line: 551, baseType: !27, size: 16, offset: 5200)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1932, file: !482, line: 551, baseType: !27, size: 16, offset: 5216)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1932, file: !482, line: 551, baseType: !27, size: 16, offset: 5232)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1932, file: !482, line: 552, baseType: !27, size: 16, offset: 5248)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1932, file: !482, line: 552, baseType: !27, size: 16, offset: 5264)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1932, file: !482, line: 553, baseType: !357, size: 32, offset: 5280)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1932, file: !482, line: 553, baseType: !357, size: 32, offset: 5312)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1932, file: !482, line: 554, baseType: !27, size: 16, offset: 5344)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1932, file: !482, line: 554, baseType: !27, size: 16, offset: 5360)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1932, file: !482, line: 555, baseType: !357, size: 32, offset: 5376)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1932, file: !482, line: 555, baseType: !357, size: 32, offset: 5408)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1932, file: !482, line: 558, baseType: !436, size: 8192, offset: 5440)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1932, file: !482, line: 561, baseType: !35, size: 32, offset: 13632)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1932, file: !482, line: 562, baseType: !27, size: 16, offset: 13664)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1932, file: !482, line: 562, baseType: !27, size: 16, offset: 13680)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1932, file: !482, line: 565, baseType: !1423, size: 6144, offset: 13696)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1932, file: !482, line: 568, baseType: !629, size: 128, offset: 19840)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1932, file: !482, line: 569, baseType: !629, size: 128, offset: 19968)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1932, file: !482, line: 572, baseType: !23, size: 8, offset: 20096)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1932, file: !482, line: 573, baseType: !23, size: 8, offset: 20104)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1932, file: !482, line: 574, baseType: !23, size: 8, offset: 20112)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1932, file: !482, line: 575, baseType: !1782, size: 40, offset: 20120)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1932, file: !482, line: 578, baseType: !35, size: 32, offset: 20160)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1932, file: !482, line: 579, baseType: !27, size: 16, offset: 20192)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1932, file: !482, line: 580, baseType: !27, size: 16, offset: 20208)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1932, file: !482, line: 581, baseType: !357, size: 32, offset: 20224)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1932, file: !482, line: 582, baseType: !357, size: 32, offset: 20256)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1932, file: !482, line: 585, baseType: !27, size: 16, offset: 20288)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1932, file: !482, line: 585, baseType: !27, size: 16, offset: 20304)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1932, file: !482, line: 586, baseType: !357, size: 32, offset: 20320)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1932, file: !482, line: 589, baseType: !27, size: 16, offset: 20352)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1932, file: !482, line: 589, baseType: !27, size: 16, offset: 20368)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1932, file: !482, line: 590, baseType: !35, size: 32, offset: 20384)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1932, file: !482, line: 593, baseType: !27, size: 16, offset: 20416)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1932, file: !482, line: 593, baseType: !27, size: 16, offset: 20432)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1932, file: !482, line: 594, baseType: !27, size: 16, offset: 20448)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1932, file: !482, line: 594, baseType: !27, size: 16, offset: 20464)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1932, file: !482, line: 595, baseType: !357, size: 32, offset: 20480)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1932, file: !482, line: 596, baseType: !357, size: 32, offset: 20512)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1932, file: !482, line: 597, baseType: !2186, size: 64, offset: 20544)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1672, line: 55, flags: DIFlagFwdDecl)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1932, file: !482, line: 600, baseType: !35, size: 32, offset: 20608)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1932, file: !482, line: 601, baseType: !357, size: 32, offset: 20640)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1932, file: !482, line: 604, baseType: !2191, size: 256, offset: 20672)
!2191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 256, elements: !2192)
!2192 = !{!2193}
!2193 = !DISubrange(count: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1932, file: !482, line: 607, baseType: !2195, size: 10880, offset: 20928)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !482, line: 364, size: 10880, elements: !2196)
!2196 = !{!2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2195, file: !482, line: 365, baseType: !1935, size: 1984)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2195, file: !482, line: 367, baseType: !436, size: 8192, offset: 1984)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2195, file: !482, line: 369, baseType: !27, size: 16, offset: 10176)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2195, file: !482, line: 369, baseType: !27, size: 16, offset: 10192)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2195, file: !482, line: 370, baseType: !27, size: 16, offset: 10208)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2195, file: !482, line: 370, baseType: !27, size: 16, offset: 10224)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2195, file: !482, line: 372, baseType: !357, size: 32, offset: 10240)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2195, file: !482, line: 373, baseType: !357, size: 32, offset: 10272)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2195, file: !482, line: 375, baseType: !1696, size: 24, offset: 10304)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2195, file: !482, line: 376, baseType: !23, size: 8, offset: 10328)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2195, file: !482, line: 378, baseType: !23, size: 8, offset: 10336)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2195, file: !482, line: 379, baseType: !1696, size: 24, offset: 10344)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2195, file: !482, line: 381, baseType: !22, size: 512, offset: 10368)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1932, file: !482, line: 609, baseType: !35, size: 32, offset: 31808)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1932, file: !482, line: 610, baseType: !35, size: 32, offset: 31840)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !481, file: !482, line: 1252, baseType: !2213, size: 256, offset: 34112)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !482, line: 158, size: 256, elements: !2214)
!2214 = !{!2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2213, file: !482, line: 159, baseType: !35, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2213, file: !482, line: 160, baseType: !357, size: 32, offset: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2213, file: !482, line: 161, baseType: !357, size: 32, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2213, file: !482, line: 162, baseType: !357, size: 32, offset: 96)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2213, file: !482, line: 163, baseType: !35, size: 32, offset: 128)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2213, file: !482, line: 164, baseType: !27, size: 16, offset: 160)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2213, file: !482, line: 165, baseType: !27, size: 16, offset: 176)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2213, file: !482, line: 166, baseType: !357, size: 32, offset: 192)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2213, file: !482, line: 167, baseType: !357, size: 32, offset: 224)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !481, file: !482, line: 1254, baseType: !13, size: 128, offset: 34368)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !481, file: !482, line: 1255, baseType: !13, size: 128, offset: 34496)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !481, file: !482, line: 1257, baseType: !18, size: 64, offset: 34624)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !481, file: !482, line: 1258, baseType: !18, size: 64, offset: 34688)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !481, file: !482, line: 1259, baseType: !18, size: 64, offset: 34752)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !481, file: !482, line: 1260, baseType: !18, size: 64, offset: 34816)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !481, file: !482, line: 1262, baseType: !18, size: 64, offset: 34880)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !481, file: !482, line: 1265, baseType: !2232, size: 64, offset: 34944)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !482, line: 1265, flags: DIFlagFwdDecl)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !481, file: !482, line: 1266, baseType: !27, size: 16, offset: 35008)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !481, file: !482, line: 1267, baseType: !27, size: 16, offset: 35024)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !481, file: !482, line: 1270, baseType: !35, size: 32, offset: 35040)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !481, file: !482, line: 1271, baseType: !13, size: 128, offset: 35072)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !481, file: !482, line: 1274, baseType: !2239, size: 128, offset: 35200)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !482, line: 650, size: 128, elements: !2240)
!2240 = !{!2241, !2242, !2243, !2244, !2245}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2239, file: !482, line: 651, baseType: !555, size: 96)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2239, file: !482, line: 652, baseType: !23, size: 8, offset: 96)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2239, file: !482, line: 652, baseType: !23, size: 8, offset: 104)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2239, file: !482, line: 652, baseType: !23, size: 8, offset: 112)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2239, file: !482, line: 652, baseType: !23, size: 8, offset: 120)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !481, file: !482, line: 1275, baseType: !2247, size: 1472, offset: 35328)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !482, line: 676, size: 1472, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2270, !2271, !2272, !2273, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2247, file: !482, line: 679, baseType: !2239, size: 128)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2247, file: !482, line: 680, baseType: !27, size: 16, offset: 128)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2247, file: !482, line: 680, baseType: !27, size: 16, offset: 144)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2247, file: !482, line: 680, baseType: !27, size: 16, offset: 160)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2247, file: !482, line: 680, baseType: !27, size: 16, offset: 176)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2247, file: !482, line: 681, baseType: !27, size: 16, offset: 192)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2247, file: !482, line: 681, baseType: !27, size: 16, offset: 208)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2247, file: !482, line: 681, baseType: !27, size: 16, offset: 224)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2247, file: !482, line: 681, baseType: !27, size: 16, offset: 240)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2247, file: !482, line: 682, baseType: !27, size: 16, offset: 256)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2247, file: !482, line: 682, baseType: !826, size: 48, offset: 272)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2247, file: !482, line: 685, baseType: !2261, size: 192, offset: 320)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !482, line: 633, size: 192, elements: !2262)
!2262 = !{!2263, !2264, !2265, !2266, !2267, !2268, !2269}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2261, file: !482, line: 634, baseType: !27, size: 16)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2261, file: !482, line: 634, baseType: !27, size: 16, offset: 16)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2261, file: !482, line: 635, baseType: !27, size: 16, offset: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2261, file: !482, line: 635, baseType: !27, size: 16, offset: 48)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2261, file: !482, line: 636, baseType: !357, size: 32, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2261, file: !482, line: 636, baseType: !357, size: 32, offset: 96)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2261, file: !482, line: 637, baseType: !2186, size: 64, offset: 128)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2247, file: !482, line: 686, baseType: !27, size: 16, offset: 512)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2247, file: !482, line: 686, baseType: !27, size: 16, offset: 528)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2247, file: !482, line: 687, baseType: !357, size: 32, offset: 544)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2247, file: !482, line: 688, baseType: !2274, size: 448, offset: 576)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !482, line: 674, baseType: !2275)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !482, line: 659, size: 448, elements: !2276)
!2276 = !{!2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2275, file: !482, line: 660, baseType: !357, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2275, file: !482, line: 661, baseType: !357, size: 32, offset: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2275, file: !482, line: 662, baseType: !357, size: 32, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2275, file: !482, line: 663, baseType: !357, size: 32, offset: 96)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2275, file: !482, line: 664, baseType: !357, size: 32, offset: 128)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2275, file: !482, line: 665, baseType: !357, size: 32, offset: 160)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2275, file: !482, line: 666, baseType: !357, size: 32, offset: 192)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2275, file: !482, line: 667, baseType: !357, size: 32, offset: 224)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2275, file: !482, line: 668, baseType: !357, size: 32, offset: 256)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2275, file: !482, line: 669, baseType: !357, size: 32, offset: 288)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2275, file: !482, line: 670, baseType: !35, size: 32, offset: 320)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2275, file: !482, line: 671, baseType: !357, size: 32, offset: 352)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2275, file: !482, line: 672, baseType: !357, size: 32, offset: 384)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2275, file: !482, line: 673, baseType: !27, size: 16, offset: 416)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2275, file: !482, line: 673, baseType: !27, size: 16, offset: 432)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2247, file: !482, line: 692, baseType: !357, size: 32, offset: 1024)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2247, file: !482, line: 697, baseType: !357, size: 32, offset: 1056)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2247, file: !482, line: 703, baseType: !35, size: 32, offset: 1088)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2247, file: !482, line: 704, baseType: !27, size: 16, offset: 1120)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2247, file: !482, line: 704, baseType: !27, size: 16, offset: 1136)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2247, file: !482, line: 705, baseType: !27, size: 16, offset: 1152)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2247, file: !482, line: 706, baseType: !27, size: 16, offset: 1168)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2247, file: !482, line: 707, baseType: !27, size: 16, offset: 1184)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2247, file: !482, line: 708, baseType: !27, size: 16, offset: 1200)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2247, file: !482, line: 709, baseType: !27, size: 16, offset: 1216)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2247, file: !482, line: 709, baseType: !27, size: 16, offset: 1232)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2247, file: !482, line: 709, baseType: !27, size: 16, offset: 1248)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2247, file: !482, line: 709, baseType: !27, size: 16, offset: 1264)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2247, file: !482, line: 710, baseType: !27, size: 16, offset: 1280)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2247, file: !482, line: 711, baseType: !27, size: 16, offset: 1296)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2247, file: !482, line: 712, baseType: !357, size: 32, offset: 1312)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2247, file: !482, line: 713, baseType: !357, size: 32, offset: 1344)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2247, file: !482, line: 713, baseType: !357, size: 32, offset: 1376)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2247, file: !482, line: 713, baseType: !357, size: 32, offset: 1408)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2247, file: !482, line: 713, baseType: !357, size: 32, offset: 1440)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !481, file: !482, line: 1278, baseType: !2313, size: 64, offset: 36800)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !482, line: 1197, size: 64, elements: !2314)
!2314 = !{!2315, !2316, !2317, !2318}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2313, file: !482, line: 1199, baseType: !357, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2313, file: !482, line: 1200, baseType: !23, size: 8, offset: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2313, file: !482, line: 1201, baseType: !23, size: 8, offset: 40)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2313, file: !482, line: 1202, baseType: !27, size: 16, offset: 48)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !481, file: !482, line: 1281, baseType: !586, size: 64, offset: 36864)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !481, file: !482, line: 1284, baseType: !2321, size: 192, offset: 36928)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !482, line: 1208, size: 192, elements: !2322)
!2322 = !{!2323, !2324, !2325, !2326}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2321, file: !482, line: 1209, baseType: !555, size: 96)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2321, file: !482, line: 1210, baseType: !35, size: 32, offset: 96)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2321, file: !482, line: 1210, baseType: !35, size: 32, offset: 128)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2321, file: !482, line: 1210, baseType: !35, size: 32, offset: 160)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !481, file: !482, line: 1287, baseType: !1469, size: 64, offset: 37120)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !481, file: !482, line: 1289, baseType: !1216, size: 64, offset: 37184)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !481, file: !482, line: 1290, baseType: !1216, size: 64, offset: 37248)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !481, file: !482, line: 1293, baseType: !1955, size: 1280, offset: 37312)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !481, file: !482, line: 1294, baseType: !2005, size: 512, offset: 38592)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !481, file: !482, line: 1295, baseType: !1144, size: 512, offset: 39104)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !481, file: !482, line: 1298, baseType: !2334, size: 64, offset: 39616)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !482, line: 1298, flags: DIFlagFwdDecl)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !414, file: !340, line: 58, baseType: !480, size: 64, offset: 1536)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !414, file: !340, line: 60, baseType: !35, size: 32, offset: 1600)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !414, file: !340, line: 61, baseType: !35, size: 32, offset: 1632)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !414, file: !340, line: 63, baseType: !27, size: 16, offset: 1664)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !414, file: !340, line: 64, baseType: !27, size: 16, offset: 1680)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !414, file: !340, line: 65, baseType: !27, size: 16, offset: 1696)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !414, file: !340, line: 66, baseType: !27, size: 16, offset: 1712)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !414, file: !340, line: 67, baseType: !27, size: 16, offset: 1728)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !414, file: !340, line: 68, baseType: !27, size: 16, offset: 1744)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !414, file: !340, line: 69, baseType: !27, size: 16, offset: 1760)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !414, file: !340, line: 70, baseType: !27, size: 16, offset: 1776)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !414, file: !340, line: 71, baseType: !27, size: 16, offset: 1792)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !414, file: !340, line: 73, baseType: !27, size: 16, offset: 1808)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !414, file: !340, line: 74, baseType: !27, size: 16, offset: 1824)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !414, file: !340, line: 76, baseType: !27, size: 16, offset: 1840)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !414, file: !340, line: 78, baseType: !399, size: 64, offset: 1856)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !414, file: !340, line: 79, baseType: !18, size: 64, offset: 1920)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !407, file: !8, line: 175, baseType: !413, size: 64, offset: 256)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !407, file: !8, line: 176, baseType: !22, size: 512, offset: 320)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !407, file: !8, line: 178, baseType: !27, size: 16, offset: 832)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !407, file: !8, line: 178, baseType: !27, size: 16, offset: 848)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !407, file: !8, line: 178, baseType: !27, size: 16, offset: 864)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !407, file: !8, line: 178, baseType: !27, size: 16, offset: 880)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !407, file: !8, line: 179, baseType: !27, size: 16, offset: 896)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !407, file: !8, line: 180, baseType: !27, size: 16, offset: 912)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !407, file: !8, line: 181, baseType: !27, size: 16, offset: 928)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !407, file: !8, line: 182, baseType: !27, size: 16, offset: 944)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !407, file: !8, line: 183, baseType: !27, size: 16, offset: 960)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !407, file: !8, line: 184, baseType: !27, size: 16, offset: 976)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !407, file: !8, line: 185, baseType: !27, size: 16, offset: 992)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !407, file: !8, line: 186, baseType: !27, size: 16, offset: 1008)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !407, file: !8, line: 188, baseType: !35, size: 32, offset: 1024)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !407, file: !8, line: 190, baseType: !27, size: 16, offset: 1056)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !407, file: !8, line: 191, baseType: !27, size: 16, offset: 1072)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !407, file: !8, line: 194, baseType: !2371, size: 64, offset: 1088)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !401, line: 421, size: 960, elements: !2373)
!2373 = !{!2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2401, !2409, !2410, !2411, !2412}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2372, file: !401, line: 422, baseType: !2371, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2372, file: !401, line: 422, baseType: !2371, size: 64, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2372, file: !401, line: 424, baseType: !27, size: 16, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2372, file: !401, line: 425, baseType: !27, size: 16, offset: 144)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2372, file: !401, line: 426, baseType: !35, size: 32, offset: 160)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2372, file: !401, line: 426, baseType: !35, size: 32, offset: 192)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2372, file: !401, line: 427, baseType: !1478, size: 64, offset: 224)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !2372, file: !401, line: 428, baseType: !1951, size: 48, offset: 288)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !2372, file: !401, line: 431, baseType: !23, size: 8, offset: 336)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2372, file: !401, line: 432, baseType: !23, size: 8, offset: 344)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !2372, file: !401, line: 435, baseType: !27, size: 16, offset: 352)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !2372, file: !401, line: 436, baseType: !27, size: 16, offset: 368)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !2372, file: !401, line: 437, baseType: !35, size: 32, offset: 384)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !2372, file: !401, line: 437, baseType: !35, size: 32, offset: 416)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !2372, file: !401, line: 438, baseType: !2389, size: 64, offset: 448)
!2389 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !2372, file: !401, line: 439, baseType: !35, size: 32, offset: 512)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !2372, file: !401, line: 439, baseType: !35, size: 32, offset: 544)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2372, file: !401, line: 442, baseType: !27, size: 16, offset: 576)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !2372, file: !401, line: 442, baseType: !27, size: 16, offset: 592)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2372, file: !401, line: 442, baseType: !27, size: 16, offset: 608)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !2372, file: !401, line: 442, baseType: !27, size: 16, offset: 624)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !2372, file: !401, line: 443, baseType: !27, size: 16, offset: 640)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !2372, file: !401, line: 446, baseType: !27, size: 16, offset: 656)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !2372, file: !401, line: 449, baseType: !2399, size: 64, offset: 704)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !2372, file: !401, line: 452, baseType: !2402, size: 64, offset: 768)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !401, line: 463, size: 128, elements: !2404)
!2404 = !{!2405, !2406, !2407, !2408}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !2403, file: !401, line: 464, baseType: !35, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !2403, file: !401, line: 465, baseType: !357, size: 32, offset: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !2403, file: !401, line: 466, baseType: !357, size: 32, offset: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !2403, file: !401, line: 467, baseType: !357, size: 32, offset: 96)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2372, file: !401, line: 455, baseType: !27, size: 16, offset: 832)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !2372, file: !401, line: 456, baseType: !27, size: 16, offset: 848)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2372, file: !401, line: 457, baseType: !35, size: 32, offset: 864)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2372, file: !401, line: 458, baseType: !18, size: 64, offset: 896)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !407, file: !8, line: 196, baseType: !2414, size: 64, offset: 1152)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !8, line: 55, flags: DIFlagFwdDecl)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !407, file: !8, line: 198, baseType: !2417, size: 64, offset: 1216)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !401, line: 398, size: 448, elements: !2419)
!2419 = !{!2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2418, file: !401, line: 399, baseType: !2417, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2418, file: !401, line: 399, baseType: !2417, size: 64, offset: 64)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2418, file: !401, line: 400, baseType: !35, size: 32, offset: 128)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2418, file: !401, line: 401, baseType: !35, size: 32, offset: 160)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2418, file: !401, line: 402, baseType: !35, size: 32, offset: 192)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2418, file: !401, line: 403, baseType: !35, size: 32, offset: 224)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2418, file: !401, line: 404, baseType: !35, size: 32, offset: 256)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2418, file: !401, line: 405, baseType: !35, size: 32, offset: 288)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2418, file: !401, line: 407, baseType: !18, size: 64, offset: 320)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2418, file: !401, line: 414, baseType: !18, size: 64, offset: 384)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !407, file: !8, line: 200, baseType: !35, size: 32, offset: 1280)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !407, file: !8, line: 200, baseType: !35, size: 32, offset: 1312)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !407, file: !8, line: 201, baseType: !18, size: 64, offset: 1344)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !407, file: !8, line: 203, baseType: !13, size: 128, offset: 1408)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !407, file: !8, line: 204, baseType: !13, size: 128, offset: 1536)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !407, file: !8, line: 205, baseType: !13, size: 128, offset: 1664)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !407, file: !8, line: 207, baseType: !13, size: 128, offset: 1792)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !407, file: !8, line: 208, baseType: !13, size: 128, offset: 1920)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !400, file: !401, line: 495, baseType: !2389, size: 64, offset: 192)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !400, file: !401, line: 496, baseType: !35, size: 32, offset: 256)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !400, file: !401, line: 497, baseType: !18, size: 64, offset: 320)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !400, file: !401, line: 499, baseType: !2389, size: 64, offset: 384)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !400, file: !401, line: 500, baseType: !2389, size: 64, offset: 448)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !400, file: !401, line: 502, baseType: !2389, size: 64, offset: 512)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !400, file: !401, line: 503, baseType: !2389, size: 64, offset: 576)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !400, file: !401, line: 504, baseType: !2389, size: 64, offset: 640)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !400, file: !401, line: 505, baseType: !35, size: 32, offset: 704)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !341, file: !340, line: 234, baseType: !363, size: 128, offset: 1408)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !341, file: !340, line: 235, baseType: !363, size: 128, offset: 1536)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !341, file: !340, line: 236, baseType: !27, size: 16, offset: 1664)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !341, file: !340, line: 236, baseType: !27, size: 16, offset: 1680)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !341, file: !340, line: 238, baseType: !27, size: 16, offset: 1696)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !341, file: !340, line: 239, baseType: !27, size: 16, offset: 1712)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !341, file: !340, line: 240, baseType: !27, size: 16, offset: 1728)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !341, file: !340, line: 241, baseType: !27, size: 16, offset: 1744)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !341, file: !340, line: 243, baseType: !357, size: 32, offset: 1760)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !341, file: !340, line: 244, baseType: !27, size: 16, offset: 1792)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !341, file: !340, line: 244, baseType: !27, size: 16, offset: 1808)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !341, file: !340, line: 246, baseType: !27, size: 16, offset: 1824)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !341, file: !340, line: 247, baseType: !27, size: 16, offset: 1840)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !341, file: !340, line: 248, baseType: !27, size: 16, offset: 1856)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !341, file: !340, line: 249, baseType: !27, size: 16, offset: 1872)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !341, file: !340, line: 250, baseType: !27, size: 16, offset: 1888)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !341, file: !340, line: 251, baseType: !27, size: 16, offset: 1904)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !341, file: !340, line: 253, baseType: !2465, size: 64, offset: 1920)
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 64)
!2466 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !340, line: 42, flags: DIFlagFwdDecl)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !341, file: !340, line: 255, baseType: !13, size: 128, offset: 1984)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !341, file: !340, line: 256, baseType: !13, size: 128, offset: 2112)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !341, file: !340, line: 257, baseType: !13, size: 128, offset: 2240)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !341, file: !340, line: 258, baseType: !13, size: 128, offset: 2368)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !341, file: !340, line: 259, baseType: !13, size: 128, offset: 2496)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !341, file: !340, line: 260, baseType: !13, size: 128, offset: 2624)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !341, file: !340, line: 261, baseType: !13, size: 128, offset: 2752)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !341, file: !340, line: 263, baseType: !399, size: 64, offset: 2880)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !341, file: !340, line: 265, baseType: !617, size: 64, offset: 2944)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !341, file: !340, line: 266, baseType: !18, size: 64, offset: 3008)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "draw_handle", scope: !335, file: !3, line: 150, baseType: !18, size: 64, offset: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "vc", scope: !335, file: !3, line: 151, baseType: !2479, size: 512, offset: 128)
!2479 = !DIDerivedType(tag: DW_TAG_typedef, name: "ViewContext", file: !2480, line: 75, baseType: !2481)
!2480 = !DIFile(filename: "blender/source/blender/editors/include/ED_view3d.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewContext", file: !2480, line: 66, size: 512, elements: !2482)
!2482 = !{!2483, !2484, !2485, !2486, !2487, !2579, !2640, !2821}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2481, file: !2480, line: 67, baseType: !480, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "obact", scope: !2481, file: !2480, line: 68, baseType: !490, size: 64, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !2481, file: !2480, line: 69, baseType: !490, size: 64, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !2481, file: !2480, line: 70, baseType: !344, size: 64, offset: 192)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "v3d", scope: !2481, file: !2480, line: 71, baseType: !2488, size: 64, offset: 256)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !2490, line: 151, size: 3008, elements: !2491)
!2490 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2491 = !{!2492, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2489, file: !2490, line: 152, baseType: !2493, size: 64)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !2495, line: 85, size: 448, elements: !2496)
!2495 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2496 = !{!2497, !2498, !2499, !2500, !2501, !2502}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2494, file: !2495, line: 86, baseType: !2493, size: 64)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2494, file: !2495, line: 86, baseType: !2493, size: 64, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2494, file: !2495, line: 87, baseType: !13, size: 128, offset: 128)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2494, file: !2495, line: 88, baseType: !35, size: 32, offset: 256)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2494, file: !2495, line: 89, baseType: !357, size: 32, offset: 288)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2494, file: !2495, line: 90, baseType: !2503, size: 128, offset: 320)
!2503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 128, elements: !1100)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2489, file: !2490, line: 152, baseType: !2493, size: 64, offset: 64)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2489, file: !2490, line: 153, baseType: !13, size: 128, offset: 128)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2489, file: !2490, line: 154, baseType: !35, size: 32, offset: 256)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2489, file: !2490, line: 155, baseType: !357, size: 32, offset: 288)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2489, file: !2490, line: 156, baseType: !2503, size: 128, offset: 320)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !2489, file: !2490, line: 158, baseType: !629, size: 128, offset: 448)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2489, file: !2490, line: 159, baseType: !357, size: 32, offset: 576)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !2489, file: !2490, line: 161, baseType: !357, size: 32, offset: 608)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !2489, file: !2490, line: 162, baseType: !23, size: 8, offset: 640)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2489, file: !2490, line: 163, baseType: !1696, size: 24, offset: 648)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !2489, file: !2490, line: 165, baseType: !56, size: 32, offset: 672)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !2489, file: !2490, line: 166, baseType: !56, size: 32, offset: 704)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !2489, file: !2490, line: 168, baseType: !27, size: 16, offset: 736)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2489, file: !2490, line: 169, baseType: !27, size: 16, offset: 752)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2489, file: !2490, line: 171, baseType: !490, size: 64, offset: 768)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !2489, file: !2490, line: 171, baseType: !490, size: 64, offset: 832)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !2489, file: !2490, line: 172, baseType: !352, size: 128, offset: 896)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !2489, file: !2490, line: 174, baseType: !15, size: 128, offset: 1024)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !2489, file: !2490, line: 175, baseType: !2523, size: 64, offset: 1152)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !2490, line: 70, size: 832, elements: !2525)
!2525 = !{!2526, !2527, !2528, !2529, !2530, !2531, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2524, file: !2490, line: 71, baseType: !2523, size: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2524, file: !2490, line: 71, baseType: !2523, size: 64, offset: 64)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2524, file: !2490, line: 73, baseType: !1080, size: 64, offset: 128)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2524, file: !2490, line: 74, baseType: !1238, size: 320, offset: 192)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2524, file: !2490, line: 75, baseType: !1469, size: 64, offset: 512)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !2524, file: !2490, line: 76, baseType: !2532, size: 64, offset: 576)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !488, line: 50, size: 64, elements: !2533)
!2533 = !{!2534, !2535, !2536}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2532, file: !488, line: 51, baseType: !35, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !2532, file: !488, line: 52, baseType: !27, size: 16, offset: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !2532, file: !488, line: 52, baseType: !27, size: 16, offset: 48)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !2524, file: !2490, line: 77, baseType: !357, size: 32, offset: 640)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !2524, file: !2490, line: 77, baseType: !357, size: 32, offset: 672)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2524, file: !2490, line: 77, baseType: !357, size: 32, offset: 704)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !2524, file: !2490, line: 77, baseType: !357, size: 32, offset: 736)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2524, file: !2490, line: 78, baseType: !27, size: 16, offset: 768)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2524, file: !2490, line: 79, baseType: !27, size: 16, offset: 784)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2524, file: !2490, line: 80, baseType: !27, size: 16, offset: 800)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2524, file: !2490, line: 80, baseType: !27, size: 16, offset: 816)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !2489, file: !2490, line: 177, baseType: !2488, size: 64, offset: 1216)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !2489, file: !2490, line: 179, baseType: !22, size: 512, offset: 1280)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2489, file: !2490, line: 181, baseType: !56, size: 32, offset: 1792)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !2489, file: !2490, line: 182, baseType: !35, size: 32, offset: 1824)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !2489, file: !2490, line: 187, baseType: !27, size: 16, offset: 1856)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !2489, file: !2490, line: 188, baseType: !27, size: 16, offset: 1872)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !2489, file: !2490, line: 189, baseType: !27, size: 16, offset: 1888)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !2489, file: !2490, line: 189, baseType: !27, size: 16, offset: 1904)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2489, file: !2490, line: 190, baseType: !27, size: 16, offset: 1920)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !2489, file: !2490, line: 190, baseType: !27, size: 16, offset: 1936)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !2489, file: !2490, line: 192, baseType: !357, size: 32, offset: 1952)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !2489, file: !2490, line: 192, baseType: !357, size: 32, offset: 1984)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !2489, file: !2490, line: 193, baseType: !357, size: 32, offset: 2016)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !2489, file: !2490, line: 193, baseType: !357, size: 32, offset: 2048)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !2489, file: !2490, line: 194, baseType: !555, size: 96, offset: 2080)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2489, file: !2490, line: 195, baseType: !555, size: 96, offset: 2176)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !2489, file: !2490, line: 197, baseType: !27, size: 16, offset: 2272)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !2489, file: !2490, line: 199, baseType: !27, size: 16, offset: 2288)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !2489, file: !2490, line: 200, baseType: !27, size: 16, offset: 2304)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !2489, file: !2490, line: 201, baseType: !23, size: 8, offset: 2320)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !2489, file: !2490, line: 204, baseType: !23, size: 8, offset: 2328)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !2489, file: !2490, line: 204, baseType: !23, size: 8, offset: 2336)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !2489, file: !2490, line: 204, baseType: !23, size: 8, offset: 2344)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2489, file: !2490, line: 204, baseType: !1916, size: 16, offset: 2352)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !2489, file: !2490, line: 207, baseType: !15, size: 128, offset: 2368)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !2489, file: !2490, line: 208, baseType: !15, size: 128, offset: 2496)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !2489, file: !2490, line: 209, baseType: !15, size: 128, offset: 2624)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !2489, file: !2490, line: 212, baseType: !23, size: 8, offset: 2752)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2489, file: !2490, line: 212, baseType: !23, size: 8, offset: 2760)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !2489, file: !2490, line: 212, baseType: !23, size: 8, offset: 2768)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2489, file: !2490, line: 213, baseType: !1782, size: 40, offset: 2776)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !2489, file: !2490, line: 215, baseType: !18, size: 64, offset: 2816)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !2489, file: !2490, line: 216, baseType: !614, size: 64, offset: 2880)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2489, file: !2490, line: 219, baseType: !586, size: 64, offset: 2944)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "rv3d", scope: !2481, file: !2480, line: 72, baseType: !2580, size: 64, offset: 320)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !2490, line: 85, size: 7040, elements: !2582)
!2582 = !{!2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2593, !2594, !2595, !2596, !2599, !2611, !2612, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2581, file: !2490, line: 87, baseType: !638, size: 512)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !2581, file: !2490, line: 88, baseType: !638, size: 512, offset: 512)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !2581, file: !2490, line: 89, baseType: !638, size: 512, offset: 1024)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !2581, file: !2490, line: 90, baseType: !638, size: 512, offset: 1536)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !2581, file: !2490, line: 91, baseType: !638, size: 512, offset: 2048)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !2581, file: !2490, line: 94, baseType: !638, size: 512, offset: 2560)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !2581, file: !2490, line: 95, baseType: !638, size: 512, offset: 3072)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2581, file: !2490, line: 99, baseType: !2591, size: 768, offset: 3584)
!2591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 768, elements: !2592)
!2592 = !{!1953, !631}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !2581, file: !2490, line: 100, baseType: !2591, size: 768, offset: 4352)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !2581, file: !2490, line: 101, baseType: !515, size: 64, offset: 5120)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !2581, file: !2490, line: 103, baseType: !2580, size: 64, offset: 5184)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !2581, file: !2490, line: 104, baseType: !2597, size: 64, offset: 5248)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !2490, line: 44, flags: DIFlagFwdDecl)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !2581, file: !2490, line: 105, baseType: !2600, size: 64, offset: 5312)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 64)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !2480, line: 77, size: 320, elements: !2602)
!2602 = !{!2603, !2604, !2605, !2606, !2607, !2608, !2610}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2601, file: !2480, line: 78, baseType: !674, size: 16)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2601, file: !2480, line: 78, baseType: !674, size: 16, offset: 16)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2601, file: !2480, line: 79, baseType: !27, size: 16, offset: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2601, file: !2480, line: 79, baseType: !27, size: 16, offset: 48)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !2601, file: !2480, line: 80, baseType: !392, size: 64, offset: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "depth_range", scope: !2601, file: !2480, line: 81, baseType: !2609, size: 128, offset: 128)
!2609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2389, size: 128, elements: !374)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "damaged", scope: !2601, file: !2480, line: 83, baseType: !1053, size: 8, offset: 256)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !2581, file: !2490, line: 106, baseType: !18, size: 64, offset: 5376)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !2581, file: !2490, line: 109, baseType: !2613, size: 64, offset: 5440)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !2490, line: 46, flags: DIFlagFwdDecl)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !2581, file: !2490, line: 110, baseType: !399, size: 64, offset: 5504)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !2581, file: !2490, line: 114, baseType: !638, size: 512, offset: 5568)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !2581, file: !2490, line: 116, baseType: !629, size: 128, offset: 6080)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2581, file: !2490, line: 117, baseType: !357, size: 32, offset: 6208)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !2581, file: !2490, line: 118, baseType: !357, size: 32, offset: 6240)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !2581, file: !2490, line: 118, baseType: !357, size: 32, offset: 6272)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !2581, file: !2490, line: 119, baseType: !357, size: 32, offset: 6304)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !2581, file: !2490, line: 120, baseType: !555, size: 96, offset: 6336)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !2581, file: !2490, line: 122, baseType: !357, size: 32, offset: 6432)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !2581, file: !2490, line: 123, baseType: !23, size: 8, offset: 6464)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !2581, file: !2490, line: 125, baseType: !23, size: 8, offset: 6472)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !2581, file: !2490, line: 126, baseType: !23, size: 8, offset: 6480)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !2581, file: !2490, line: 127, baseType: !23, size: 8, offset: 6488)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !2581, file: !2490, line: 128, baseType: !23, size: 8, offset: 6496)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2581, file: !2490, line: 129, baseType: !1696, size: 24, offset: 6504)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !2581, file: !2490, line: 130, baseType: !373, size: 64, offset: 6528)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !2581, file: !2490, line: 132, baseType: !27, size: 16, offset: 6592)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !2581, file: !2490, line: 133, baseType: !27, size: 16, offset: 6608)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !2581, file: !2490, line: 137, baseType: !629, size: 128, offset: 6624)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !2581, file: !2490, line: 138, baseType: !27, size: 16, offset: 6752)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !2581, file: !2490, line: 138, baseType: !27, size: 16, offset: 6768)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !2581, file: !2490, line: 140, baseType: !357, size: 32, offset: 6784)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !2581, file: !2490, line: 141, baseType: !555, size: 96, offset: 6816)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !2581, file: !2490, line: 145, baseType: !357, size: 32, offset: 6912)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !2581, file: !2490, line: 146, baseType: !555, size: 96, offset: 6944)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "em", scope: !2481, file: !2480, line: 73, baseType: !2641, size: 64, offset: 384)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !2643, line: 54, size: 896, elements: !2644)
!2643 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2644 = !{!2645, !2801, !2802, !2803, !2806, !2807, !2808, !2809, !2812, !2814, !2815, !2816, !2817, !2818, !2819, !2820}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !2642, file: !2643, line: 55, baseType: !2646, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !2648, line: 186, size: 8064, elements: !2649)
!2648 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2649 = !{!2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2724, !2728, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2647, file: !2648, line: 187, baseType: !35, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !2647, file: !2648, line: 187, baseType: !35, size: 32, offset: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !2647, file: !2648, line: 187, baseType: !35, size: 32, offset: 64)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2647, file: !2648, line: 187, baseType: !35, size: 32, offset: 96)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !2647, file: !2648, line: 188, baseType: !35, size: 32, offset: 128)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !2647, file: !2648, line: 188, baseType: !35, size: 32, offset: 160)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !2647, file: !2648, line: 188, baseType: !35, size: 32, offset: 192)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !2647, file: !2648, line: 193, baseType: !23, size: 8, offset: 224)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !2647, file: !2648, line: 197, baseType: !23, size: 8, offset: 232)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !2647, file: !2648, line: 201, baseType: !757, size: 64, offset: 256)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !2647, file: !2648, line: 201, baseType: !757, size: 64, offset: 320)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !2647, file: !2648, line: 201, baseType: !757, size: 64, offset: 384)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !2647, file: !2648, line: 201, baseType: !757, size: 64, offset: 448)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2647, file: !2648, line: 208, baseType: !2664, size: 64, offset: 512)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !2648, line: 103, baseType: !2667)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !2648, line: 90, size: 448, elements: !2668)
!2668 = !{!2669, !2678, !2683, !2684, !2685}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2667, file: !2648, line: 91, baseType: !2670, size: 128)
!2670 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !2648, line: 82, baseType: !2671)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !2648, line: 64, size: 128, elements: !2672)
!2672 = !{!2673, !2674, !2675, !2676, !2677}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2671, file: !2648, line: 65, baseType: !18, size: 64)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2671, file: !2648, line: 66, baseType: !35, size: 32, offset: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !2671, file: !2648, line: 73, baseType: !23, size: 8, offset: 96)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !2671, file: !2648, line: 74, baseType: !23, size: 8, offset: 104)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !2671, file: !2648, line: 80, baseType: !23, size: 8, offset: 112)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2667, file: !2648, line: 92, baseType: !2679, size: 64, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !2648, line: 180, size: 16, elements: !2681)
!2681 = !{!2682}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2680, file: !2648, line: 181, baseType: !27, size: 16)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2667, file: !2648, line: 94, baseType: !555, size: 96, offset: 192)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2667, file: !2648, line: 95, baseType: !555, size: 96, offset: 288)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2667, file: !2648, line: 102, baseType: !2686, size: 64, offset: 384)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !2648, line: 110, size: 640, elements: !2688)
!2688 = !{!2689, !2690, !2691, !2693, !2694, !2717, !2723}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2687, file: !2648, line: 111, baseType: !2670, size: 128)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2687, file: !2648, line: 112, baseType: !2679, size: 64, offset: 128)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2687, file: !2648, line: 114, baseType: !2692, size: 64, offset: 192)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2687, file: !2648, line: 114, baseType: !2692, size: 64, offset: 256)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2687, file: !2648, line: 118, baseType: !2695, size: 64, offset: 320)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !2648, line: 125, size: 576, elements: !2697)
!2697 = !{!2698, !2699, !2700, !2701, !2713, !2714, !2715, !2716}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2696, file: !2648, line: 126, baseType: !2670, size: 128)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2696, file: !2648, line: 129, baseType: !2692, size: 64, offset: 128)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2696, file: !2648, line: 130, baseType: !2686, size: 64, offset: 192)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2696, file: !2648, line: 131, baseType: !2702, size: 64, offset: 256)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !2648, line: 164, size: 448, elements: !2704)
!2704 = !{!2705, !2706, !2707, !2710, !2711, !2712}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2703, file: !2648, line: 165, baseType: !2670, size: 128)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2703, file: !2648, line: 166, baseType: !2679, size: 64, offset: 128)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2703, file: !2648, line: 172, baseType: !2708, size: 64, offset: 192)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !2648, line: 140, baseType: !2696)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2703, file: !2648, line: 174, baseType: !35, size: 32, offset: 256)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2703, file: !2648, line: 175, baseType: !555, size: 96, offset: 288)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2703, file: !2648, line: 176, baseType: !27, size: 16, offset: 384)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !2696, file: !2648, line: 135, baseType: !2695, size: 64, offset: 320)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !2696, file: !2648, line: 135, baseType: !2695, size: 64, offset: 384)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2696, file: !2648, line: 139, baseType: !2695, size: 64, offset: 448)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2696, file: !2648, line: 139, baseType: !2695, size: 64, offset: 512)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !2687, file: !2648, line: 122, baseType: !2718, size: 128, offset: 384)
!2718 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !2648, line: 108, baseType: !2719)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !2648, line: 106, size: 128, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2719, file: !2648, line: 107, baseType: !2686, size: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2719, file: !2648, line: 107, baseType: !2686, size: 64, offset: 64)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !2687, file: !2648, line: 122, baseType: !2718, size: 128, offset: 512)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !2647, file: !2648, line: 209, baseType: !2725, size: 64, offset: 576)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !2648, line: 123, baseType: !2687)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !2647, file: !2648, line: 210, baseType: !2729, size: 64, offset: 640)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !2648, line: 178, baseType: !2703)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !2647, file: !2648, line: 213, baseType: !35, size: 32, offset: 704)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !2647, file: !2648, line: 214, baseType: !35, size: 32, offset: 736)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !2647, file: !2648, line: 215, baseType: !35, size: 32, offset: 768)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !2647, file: !2648, line: 218, baseType: !757, size: 64, offset: 832)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !2647, file: !2648, line: 218, baseType: !757, size: 64, offset: 896)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !2647, file: !2648, line: 218, baseType: !757, size: 64, offset: 960)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !2647, file: !2648, line: 220, baseType: !35, size: 32, offset: 1024)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !2647, file: !2648, line: 221, baseType: !2740, size: 64, offset: 1088)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !297, line: 190, size: 10496, elements: !2742)
!2742 = !{!2743, !2775, !2776, !2782, !2785, !2786, !2788}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !2741, file: !297, line: 191, baseType: !2744, size: 5120)
!2744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2745, size: 5120, elements: !2773)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !297, line: 147, size: 320, elements: !2746)
!2746 = !{!2747, !2748, !2750, !2760, !2761}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !2745, file: !297, line: 148, baseType: !2399, size: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !2745, file: !297, line: 149, baseType: !2749, size: 32, offset: 64)
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !297, line: 112, baseType: !296)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !2745, file: !297, line: 150, baseType: !2751, size: 32, offset: 96)
!2751 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !297, line: 142, baseType: !2752)
!2752 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !297, line: 138, size: 32, elements: !2753)
!2753 = !{!2754, !2756, !2758}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !2752, file: !297, line: 139, baseType: !2755, size: 32)
!2755 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !297, line: 122, baseType: !307)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2752, file: !297, line: 140, baseType: !2757, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !297, line: 136, baseType: !313)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2752, file: !297, line: 141, baseType: !2759, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !297, line: 130, baseType: !319)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2745, file: !297, line: 152, baseType: !35, size: 32, offset: 128)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2745, file: !297, line: 162, baseType: !2762, size: 128, offset: 192)
!2762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2745, file: !297, line: 155, size: 128, elements: !2763)
!2763 = !{!2764, !2765, !2766, !2767, !2768, !2770}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2762, file: !297, line: 156, baseType: !35, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2762, file: !297, line: 157, baseType: !357, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2762, file: !297, line: 158, baseType: !18, size: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2762, file: !297, line: 159, baseType: !555, size: 96)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2762, file: !297, line: 160, baseType: !2769, size: 64)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !2762, file: !297, line: 161, baseType: !2771, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !548, line: 48, baseType: !547)
!2773 = !{!2774}
!2774 = !DISubrange(count: 16)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !2741, file: !297, line: 192, baseType: !2744, size: 5120, offset: 5120)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !2741, file: !297, line: 193, baseType: !2777, size: 64, offset: 10240)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 64)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{null, !2780, !2740}
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !2648, line: 246, baseType: !2647)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !2741, file: !297, line: 194, baseType: !2783, size: 64, offset: 10304)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !759, line: 38, flags: DIFlagFwdDecl)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2741, file: !297, line: 195, baseType: !35, size: 32, offset: 10368)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !2741, file: !297, line: 196, baseType: !2787, size: 32, offset: 10400)
!2787 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !297, line: 188, baseType: !327)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2741, file: !297, line: 197, baseType: !35, size: 32, offset: 10432)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2647, file: !2648, line: 223, baseType: !730, size: 1600, offset: 1152)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !2647, file: !2648, line: 223, baseType: !730, size: 1600, offset: 2752)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !2647, file: !2648, line: 223, baseType: !730, size: 1600, offset: 4352)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !2647, file: !2648, line: 223, baseType: !730, size: 1600, offset: 5952)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2647, file: !2648, line: 233, baseType: !27, size: 16, offset: 7552)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !2647, file: !2648, line: 236, baseType: !35, size: 32, offset: 7584)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !2647, file: !2648, line: 238, baseType: !35, size: 32, offset: 7616)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !2647, file: !2648, line: 238, baseType: !35, size: 32, offset: 7648)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !2647, file: !2648, line: 239, baseType: !13, size: 128, offset: 7680)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !2647, file: !2648, line: 241, baseType: !2730, size: 64, offset: 7808)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !2647, file: !2648, line: 243, baseType: !13, size: 128, offset: 7872)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !2647, file: !2648, line: 245, baseType: !18, size: 64, offset: 8000)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !2642, file: !2643, line: 58, baseType: !2641, size: 64, offset: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !2642, file: !2643, line: 59, baseType: !35, size: 32, offset: 128)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !2642, file: !2643, line: 63, baseType: !2804, size: 64, offset: 192)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2695, size: 192, elements: !556)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !2642, file: !2643, line: 64, baseType: !35, size: 32, offset: 256)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !2642, file: !2643, line: 67, baseType: !726, size: 64, offset: 320)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !2642, file: !2643, line: 67, baseType: !726, size: 64, offset: 384)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !2642, file: !2643, line: 68, baseType: !2810, size: 64, offset: 448)
!2810 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !2811, line: 48, baseType: !1216)
!2811 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !2642, file: !2643, line: 69, baseType: !2813, size: 64, offset: 512)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !2642, file: !2643, line: 70, baseType: !35, size: 32, offset: 576)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !2642, file: !2643, line: 71, baseType: !2813, size: 64, offset: 640)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !2642, file: !2643, line: 72, baseType: !35, size: 32, offset: 704)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2642, file: !2643, line: 75, baseType: !27, size: 16, offset: 736)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2642, file: !2643, line: 76, baseType: !27, size: 16, offset: 752)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2642, file: !2643, line: 79, baseType: !490, size: 64, offset: 768)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !2642, file: !2643, line: 82, baseType: !35, size: 32, offset: 832)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2481, file: !2480, line: 74, baseType: !1478, size: 64, offset: 448)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !335, file: !3, line: 152, baseType: !373, size: 64, offset: 640)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !335, file: !3, line: 155, baseType: !2824, size: 64, offset: 704)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !492, line: 295, baseType: !491)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "em", scope: !335, file: !3, line: 156, baseType: !2827, size: 64, offset: 768)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !2643, line: 83, baseType: !2642)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !335, file: !3, line: 158, baseType: !2830, size: 64, offset: 832)
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 64)
!2831 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemArena", file: !2832, line: 53, baseType: !2784)
!2832 = !DIFile(filename: "blender/source/blender/blenlib/BLI_memarena.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "origvertmap", scope: !335, file: !3, line: 160, baseType: !2771, size: 64, offset: 896)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "origedgemap", scope: !335, file: !3, line: 161, baseType: !2771, size: 64, offset: 960)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "kedgefacemap", scope: !335, file: !3, line: 162, baseType: !2771, size: 64, offset: 1024)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "facetrimap", scope: !335, file: !3, line: 163, baseType: !2771, size: 64, offset: 1088)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "bmbvh", scope: !335, file: !3, line: 165, baseType: !2838, size: 64, offset: 1152)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMBVHTree", file: !2840, line: 44, baseType: !2841)
!2840 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh_bvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2841 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMBVHTree", file: !2840, line: 40, flags: DIFlagFwdDecl)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "kverts", scope: !335, file: !3, line: 167, baseType: !2843, size: 64, offset: 1216)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !2845, line: 47, baseType: !758)
!2845 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "kedges", scope: !335, file: !3, line: 168, baseType: !2843, size: 64, offset: 1280)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "vthresh", scope: !335, file: !3, line: 170, baseType: !357, size: 32, offset: 1344)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "ethresh", scope: !335, file: !3, line: 171, baseType: !357, size: 32, offset: 1376)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "linehits", scope: !335, file: !3, line: 174, baseType: !2850, size: 64, offset: 1408)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "KnifeLineHit", file: !3, line: 130, baseType: !2852)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KnifeLineHit", file: !3, line: 117, size: 576, elements: !2853)
!2853 = !{!2854, !2855, !2856, !2857, !2858, !2859, !2860, !2884, !2885}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "hit", scope: !2852, file: !3, line: 118, baseType: !555, size: 96)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "cagehit", scope: !2852, file: !3, line: 118, baseType: !555, size: 96, offset: 96)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "schit", scope: !2852, file: !3, line: 119, baseType: !373, size: 64, offset: 192)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2852, file: !3, line: 120, baseType: !357, size: 32, offset: 256)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "perc", scope: !2852, file: !3, line: 121, baseType: !357, size: 32, offset: 288)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2852, file: !3, line: 122, baseType: !357, size: 32, offset: 320)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "kfe", scope: !2852, file: !3, line: 127, baseType: !2861, size: 64, offset: 384)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_typedef, name: "KnifeEdge", file: !3, line: 115, baseType: !2863)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KnifeEdge", file: !3, line: 108, size: 448, elements: !2864)
!2864 = !{!2865, !2879, !2880, !2881, !2882, !2883}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2863, file: !3, line: 109, baseType: !2866, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2867 = !DIDerivedType(tag: DW_TAG_typedef, name: "KnifeVert", file: !3, line: 101, baseType: !2868)
!2868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KnifeVert", file: !3, line: 93, size: 640, elements: !2869)
!2869 = !{!2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878}
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2868, file: !3, line: 94, baseType: !2665, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !2868, file: !3, line: 95, baseType: !13, size: 128, offset: 64)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "faces", scope: !2868, file: !3, line: 96, baseType: !13, size: 128, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2868, file: !3, line: 98, baseType: !555, size: 96, offset: 320)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "cageco", scope: !2868, file: !3, line: 98, baseType: !555, size: 96, offset: 416)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "sco", scope: !2868, file: !3, line: 98, baseType: !373, size: 64, offset: 512)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "is_face", scope: !2868, file: !3, line: 99, baseType: !1053, size: 8, offset: 576)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "in_space", scope: !2868, file: !3, line: 99, baseType: !1053, size: 8, offset: 584)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !2868, file: !3, line: 100, baseType: !1053, size: 8, offset: 592)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2863, file: !3, line: 109, baseType: !2866, size: 64, offset: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "basef", scope: !2863, file: !3, line: 110, baseType: !2730, size: 64, offset: 128)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "faces", scope: !2863, file: !3, line: 111, baseType: !13, size: 128, offset: 192)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2863, file: !3, line: 113, baseType: !2726, size: 64, offset: 320)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !2863, file: !3, line: 114, baseType: !1053, size: 8, offset: 384)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2852, file: !3, line: 128, baseType: !2866, size: 64, offset: 448)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2852, file: !3, line: 129, baseType: !2730, size: 64, offset: 512)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "totlinehit", scope: !335, file: !3, line: 175, baseType: !35, size: 32, offset: 1472)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !335, file: !3, line: 178, baseType: !2888, size: 512, offset: 1536)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "KnifePosData", file: !3, line: 145, baseType: !2889)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KnifePosData", file: !3, line: 132, size: 512, elements: !2890)
!2890 = !{!2891, !2892, !2893, !2894, !2895, !2896, !2897}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2889, file: !3, line: 133, baseType: !555, size: 96)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2889, file: !3, line: 134, baseType: !555, size: 96, offset: 96)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2889, file: !3, line: 139, baseType: !2866, size: 64, offset: 192)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !2889, file: !3, line: 140, baseType: !2861, size: 64, offset: 256)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "bmface", scope: !2889, file: !3, line: 141, baseType: !2730, size: 64, offset: 320)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "is_space", scope: !2889, file: !3, line: 142, baseType: !1053, size: 8, offset: 384)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2889, file: !3, line: 144, baseType: !373, size: 64, offset: 416)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !335, file: !3, line: 178, baseType: !2888, size: 512, offset: 2048)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "totkedge", scope: !335, file: !3, line: 180, baseType: !35, size: 32, offset: 2560)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "totkvert", scope: !335, file: !3, line: 180, baseType: !35, size: 32, offset: 2592)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !335, file: !3, line: 182, baseType: !2843, size: 64, offset: 2624)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "projmat", scope: !335, file: !3, line: 184, baseType: !638, size: 512, offset: 2688)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "projmat_inv", scope: !335, file: !3, line: 185, baseType: !638, size: 512, offset: 3200)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "proj_zaxis", scope: !335, file: !3, line: 187, baseType: !555, size: 96, offset: 3712)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !335, file: !3, line: 189, baseType: !2906, size: 160, offset: 3808)
!2906 = !DIDerivedType(tag: DW_TAG_typedef, name: "KnifeColors", file: !3, line: 90, baseType: !2907)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KnifeColors", file: !3, line: 83, size: 160, elements: !2908)
!2908 = !{!2909, !2911, !2912, !2913, !2914, !2915}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !2907, file: !3, line: 84, baseType: !2910, size: 24)
!2910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 24, elements: !556)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !2907, file: !3, line: 85, baseType: !2910, size: 24, offset: 24)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "curpoint", scope: !2907, file: !3, line: 86, baseType: !2910, size: 24, offset: 48)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "curpoint_a", scope: !2907, file: !3, line: 87, baseType: !1726, size: 32, offset: 72)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "point", scope: !2907, file: !3, line: 88, baseType: !2910, size: 24, offset: 104)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "point_a", scope: !2907, file: !3, line: 89, baseType: !1726, size: 32, offset: 128)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "is_interactive", scope: !335, file: !3, line: 192, baseType: !1053, size: 8, offset: 3968)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "cut_through", scope: !335, file: !3, line: 195, baseType: !1053, size: 8, offset: 3976)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "only_select", scope: !335, file: !3, line: 196, baseType: !1053, size: 8, offset: 3984)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "select_result", scope: !335, file: !3, line: 197, baseType: !1053, size: 8, offset: 3992)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "is_ortho", scope: !335, file: !3, line: 199, baseType: !1053, size: 8, offset: 4000)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "ortho_extent", scope: !335, file: !3, line: 200, baseType: !357, size: 32, offset: 4032)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !335, file: !3, line: 201, baseType: !357, size: 32, offset: 4064)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !335, file: !3, line: 201, baseType: !357, size: 32, offset: 4096)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !335, file: !3, line: 208, baseType: !334, size: 32, offset: 4128)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "prevmode", scope: !335, file: !3, line: 210, baseType: !35, size: 32, offset: 4160)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "snap_midpoints", scope: !335, file: !3, line: 211, baseType: !1053, size: 8, offset: 4192)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_edge_snapping", scope: !335, file: !3, line: 212, baseType: !1053, size: 8, offset: 4200)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_vert_snapping", scope: !335, file: !3, line: 213, baseType: !1053, size: 8, offset: 4208)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "is_angle_snapping", scope: !335, file: !3, line: 216, baseType: !1053, size: 8, offset: 4216)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "angle_snapping", scope: !335, file: !3, line: 224, baseType: !2931, size: 32, offset: 4224)
!2931 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !335, file: !3, line: 218, baseType: !56, size: 32, elements: !2932)
!2932 = !{!2933, !2934, !2935, !2936, !2937}
!2933 = !DIEnumerator(name: "ANGLE_FREE", value: 0, isUnsigned: true)
!2934 = !DIEnumerator(name: "ANGLE_0", value: 1, isUnsigned: true)
!2935 = !DIEnumerator(name: "ANGLE_45", value: 2, isUnsigned: true)
!2936 = !DIEnumerator(name: "ANGLE_90", value: 3, isUnsigned: true)
!2937 = !DIEnumerator(name: "ANGLE_135", value: 4, isUnsigned: true)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "cagecos", scope: !335, file: !3, line: 226, baseType: !2939, size: 64, offset: 4288)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !806, size: 96, elements: !556)
!2941 = !{!2942, !2943, !2944, !2945}
!2942 = !DIEnumerator(name: "MODE_IDLE", value: 0, isUnsigned: true)
!2943 = !DIEnumerator(name: "MODE_DRAGGING", value: 1, isUnsigned: true)
!2944 = !DIEnumerator(name: "MODE_CONNECT", value: 2, isUnsigned: true)
!2945 = !DIEnumerator(name: "MODE_PANNING", value: 3, isUnsigned: true)
!2946 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2648, line: 249, baseType: !56, size: 32, elements: !2947)
!2947 = !{!2948, !2949, !2950, !2951}
!2948 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!2949 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!2950 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!2951 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!2952 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2648, line: 260, baseType: !56, size: 32, elements: !2953)
!2953 = !{!2954, !2955, !2956, !2957, !2958, !2959, !2960}
!2954 = !DIEnumerator(name: "BM_ELEM_SELECT", value: 1, isUnsigned: true)
!2955 = !DIEnumerator(name: "BM_ELEM_HIDDEN", value: 2, isUnsigned: true)
!2956 = !DIEnumerator(name: "BM_ELEM_SEAM", value: 4, isUnsigned: true)
!2957 = !DIEnumerator(name: "BM_ELEM_SMOOTH", value: 8, isUnsigned: true)
!2958 = !DIEnumerator(name: "BM_ELEM_TAG", value: 16, isUnsigned: true)
!2959 = !DIEnumerator(name: "BM_ELEM_DRAW", value: 32, isUnsigned: true)
!2960 = !DIEnumerator(name: "BM_ELEM_INTERNAL_TAG", value: 128, isUnsigned: true)
!2961 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !2962, line: 57, baseType: !56, size: 32, elements: !2963)
!2962 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2963 = !{!2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977}
!2964 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!2965 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!2966 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!2967 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!2968 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!2969 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!2970 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!2971 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!2972 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!2973 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!2974 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!2975 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!2976 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!2977 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!2978 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !8, line: 67, baseType: !56, size: 32, elements: !2979)
!2979 = !{!2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988}
!2980 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!2981 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!2982 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!2983 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!2984 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!2985 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!2986 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!2987 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!2988 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!2989 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8, line: 351, baseType: !56, size: 32, elements: !2990)
!2990 = !{!2991, !2992, !2993, !2994, !2995, !2996}
!2991 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!2992 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!2993 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!2994 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!2995 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!2996 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!2997 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2998, line: 82, baseType: !56, size: 32, elements: !2999)
!2998 = !DIFile(filename: "blender/source/blender/windowmanager/wm_cursors.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2999 = !{!3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017}
!3000 = !DIEnumerator(name: "BC_NW_ARROWCURSOR", value: 2, isUnsigned: true)
!3001 = !DIEnumerator(name: "BC_NS_ARROWCURSOR", value: 3, isUnsigned: true)
!3002 = !DIEnumerator(name: "BC_EW_ARROWCURSOR", value: 4, isUnsigned: true)
!3003 = !DIEnumerator(name: "BC_WAITCURSOR", value: 5, isUnsigned: true)
!3004 = !DIEnumerator(name: "BC_CROSSCURSOR", value: 6, isUnsigned: true)
!3005 = !DIEnumerator(name: "BC_EDITCROSSCURSOR", value: 7, isUnsigned: true)
!3006 = !DIEnumerator(name: "BC_BOXSELCURSOR", value: 8, isUnsigned: true)
!3007 = !DIEnumerator(name: "BC_KNIFECURSOR", value: 9, isUnsigned: true)
!3008 = !DIEnumerator(name: "BC_VLOOPCURSOR", value: 10, isUnsigned: true)
!3009 = !DIEnumerator(name: "BC_TEXTEDITCURSOR", value: 11, isUnsigned: true)
!3010 = !DIEnumerator(name: "BC_PAINTBRUSHCURSOR", value: 12, isUnsigned: true)
!3011 = !DIEnumerator(name: "BC_HANDCURSOR", value: 13, isUnsigned: true)
!3012 = !DIEnumerator(name: "BC_NSEW_SCROLLCURSOR", value: 14, isUnsigned: true)
!3013 = !DIEnumerator(name: "BC_NS_SCROLLCURSOR", value: 15, isUnsigned: true)
!3014 = !DIEnumerator(name: "BC_EW_SCROLLCURSOR", value: 16, isUnsigned: true)
!3015 = !DIEnumerator(name: "BC_EYEDROPPER_CURSOR", value: 17, isUnsigned: true)
!3016 = !DIEnumerator(name: "BC_SWAPAREA_CURSOR", value: 18, isUnsigned: true)
!3017 = !DIEnumerator(name: "BC_NUMCURSORS", value: 19, isUnsigned: true)
!3018 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !492, line: 339, baseType: !56, size: 32, elements: !3019)
!3019 = !{!3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030}
!3020 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!3021 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!3022 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!3023 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!3024 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!3025 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!3026 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!3027 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!3028 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!3029 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!3030 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!3031 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2840, line: 67, baseType: !56, size: 32, elements: !3032)
!3032 = !{!3033, !3034, !3035}
!3033 = !DIEnumerator(name: "BMBVH_RETURN_ORIG", value: 1, isUnsigned: true)
!3034 = !DIEnumerator(name: "BMBVH_RESPECT_SELECT", value: 2, isUnsigned: true)
!3035 = !DIEnumerator(name: "BMBVH_RESPECT_HIDDEN", value: 4, isUnsigned: true)
!3036 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2845, line: 83, baseType: !56, size: 32, elements: !3037)
!3037 = !{!3038, !3039}
!3038 = !DIEnumerator(name: "BLI_MEMPOOL_NOP", value: 0, isUnsigned: true)
!3039 = !DIEnumerator(name: "BLI_MEMPOOL_ALLOW_ITER", value: 1, isUnsigned: true)
!3040 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3041, line: 54, baseType: !56, size: 32, elements: !3042)
!3041 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3042 = !{!3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235}
!3043 = !DIEnumerator(name: "TH_REDALERT", value: 0, isUnsigned: true)
!3044 = !DIEnumerator(name: "TH_THEMEUI", value: 1, isUnsigned: true)
!3045 = !DIEnumerator(name: "TH_BACK", value: 2, isUnsigned: true)
!3046 = !DIEnumerator(name: "TH_TEXT", value: 3, isUnsigned: true)
!3047 = !DIEnumerator(name: "TH_TEXT_HI", value: 4, isUnsigned: true)
!3048 = !DIEnumerator(name: "TH_TITLE", value: 5, isUnsigned: true)
!3049 = !DIEnumerator(name: "TH_TAB_ACTIVE", value: 6, isUnsigned: true)
!3050 = !DIEnumerator(name: "TH_TAB_INACTIVE", value: 7, isUnsigned: true)
!3051 = !DIEnumerator(name: "TH_TAB_BACK", value: 8, isUnsigned: true)
!3052 = !DIEnumerator(name: "TH_TAB_OUTLINE", value: 9, isUnsigned: true)
!3053 = !DIEnumerator(name: "TH_HEADER", value: 10, isUnsigned: true)
!3054 = !DIEnumerator(name: "TH_HEADERDESEL", value: 11, isUnsigned: true)
!3055 = !DIEnumerator(name: "TH_HEADER_TEXT", value: 12, isUnsigned: true)
!3056 = !DIEnumerator(name: "TH_HEADER_TEXT_HI", value: 13, isUnsigned: true)
!3057 = !DIEnumerator(name: "TH_PANEL_HEADER", value: 14, isUnsigned: true)
!3058 = !DIEnumerator(name: "TH_PANEL_BACK", value: 15, isUnsigned: true)
!3059 = !DIEnumerator(name: "TH_PANEL_SHOW_HEADER", value: 16, isUnsigned: true)
!3060 = !DIEnumerator(name: "TH_PANEL_SHOW_BACK", value: 17, isUnsigned: true)
!3061 = !DIEnumerator(name: "TH_BUTBACK", value: 18, isUnsigned: true)
!3062 = !DIEnumerator(name: "TH_BUTBACK_TEXT", value: 19, isUnsigned: true)
!3063 = !DIEnumerator(name: "TH_BUTBACK_TEXT_HI", value: 20, isUnsigned: true)
!3064 = !DIEnumerator(name: "TH_SHADE1", value: 21, isUnsigned: true)
!3065 = !DIEnumerator(name: "TH_SHADE2", value: 22, isUnsigned: true)
!3066 = !DIEnumerator(name: "TH_HILITE", value: 23, isUnsigned: true)
!3067 = !DIEnumerator(name: "TH_GRID", value: 24, isUnsigned: true)
!3068 = !DIEnumerator(name: "TH_WIRE", value: 25, isUnsigned: true)
!3069 = !DIEnumerator(name: "TH_WIRE_INNER", value: 26, isUnsigned: true)
!3070 = !DIEnumerator(name: "TH_WIRE_EDIT", value: 27, isUnsigned: true)
!3071 = !DIEnumerator(name: "TH_SELECT", value: 28, isUnsigned: true)
!3072 = !DIEnumerator(name: "TH_ACTIVE", value: 29, isUnsigned: true)
!3073 = !DIEnumerator(name: "TH_GROUP", value: 30, isUnsigned: true)
!3074 = !DIEnumerator(name: "TH_GROUP_ACTIVE", value: 31, isUnsigned: true)
!3075 = !DIEnumerator(name: "TH_TRANSFORM", value: 32, isUnsigned: true)
!3076 = !DIEnumerator(name: "TH_VERTEX", value: 33, isUnsigned: true)
!3077 = !DIEnumerator(name: "TH_VERTEX_SELECT", value: 34, isUnsigned: true)
!3078 = !DIEnumerator(name: "TH_VERTEX_UNREFERENCED", value: 35, isUnsigned: true)
!3079 = !DIEnumerator(name: "TH_VERTEX_SIZE", value: 36, isUnsigned: true)
!3080 = !DIEnumerator(name: "TH_OUTLINE_WIDTH", value: 37, isUnsigned: true)
!3081 = !DIEnumerator(name: "TH_EDGE", value: 38, isUnsigned: true)
!3082 = !DIEnumerator(name: "TH_EDGE_SELECT", value: 39, isUnsigned: true)
!3083 = !DIEnumerator(name: "TH_EDGE_SEAM", value: 40, isUnsigned: true)
!3084 = !DIEnumerator(name: "TH_EDGE_FACESEL", value: 41, isUnsigned: true)
!3085 = !DIEnumerator(name: "TH_FACE", value: 42, isUnsigned: true)
!3086 = !DIEnumerator(name: "TH_FACE_SELECT", value: 43, isUnsigned: true)
!3087 = !DIEnumerator(name: "TH_NORMAL", value: 44, isUnsigned: true)
!3088 = !DIEnumerator(name: "TH_VNORMAL", value: 45, isUnsigned: true)
!3089 = !DIEnumerator(name: "TH_LNORMAL", value: 46, isUnsigned: true)
!3090 = !DIEnumerator(name: "TH_FACE_DOT", value: 47, isUnsigned: true)
!3091 = !DIEnumerator(name: "TH_FACEDOT_SIZE", value: 48, isUnsigned: true)
!3092 = !DIEnumerator(name: "TH_CFRAME", value: 49, isUnsigned: true)
!3093 = !DIEnumerator(name: "TH_NURB_ULINE", value: 50, isUnsigned: true)
!3094 = !DIEnumerator(name: "TH_NURB_VLINE", value: 51, isUnsigned: true)
!3095 = !DIEnumerator(name: "TH_NURB_SEL_ULINE", value: 52, isUnsigned: true)
!3096 = !DIEnumerator(name: "TH_NURB_SEL_VLINE", value: 53, isUnsigned: true)
!3097 = !DIEnumerator(name: "TH_HANDLE_FREE", value: 54, isUnsigned: true)
!3098 = !DIEnumerator(name: "TH_HANDLE_AUTO", value: 55, isUnsigned: true)
!3099 = !DIEnumerator(name: "TH_HANDLE_VECT", value: 56, isUnsigned: true)
!3100 = !DIEnumerator(name: "TH_HANDLE_ALIGN", value: 57, isUnsigned: true)
!3101 = !DIEnumerator(name: "TH_HANDLE_AUTOCLAMP", value: 58, isUnsigned: true)
!3102 = !DIEnumerator(name: "TH_HANDLE_SEL_FREE", value: 59, isUnsigned: true)
!3103 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTO", value: 60, isUnsigned: true)
!3104 = !DIEnumerator(name: "TH_HANDLE_SEL_VECT", value: 61, isUnsigned: true)
!3105 = !DIEnumerator(name: "TH_HANDLE_SEL_ALIGN", value: 62, isUnsigned: true)
!3106 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTOCLAMP", value: 63, isUnsigned: true)
!3107 = !DIEnumerator(name: "TH_ACTIVE_SPLINE", value: 64, isUnsigned: true)
!3108 = !DIEnumerator(name: "TH_ACTIVE_VERT", value: 65, isUnsigned: true)
!3109 = !DIEnumerator(name: "TH_SYNTAX_B", value: 66, isUnsigned: true)
!3110 = !DIEnumerator(name: "TH_SYNTAX_V", value: 67, isUnsigned: true)
!3111 = !DIEnumerator(name: "TH_SYNTAX_R", value: 68, isUnsigned: true)
!3112 = !DIEnumerator(name: "TH_SYNTAX_C", value: 69, isUnsigned: true)
!3113 = !DIEnumerator(name: "TH_SYNTAX_L", value: 70, isUnsigned: true)
!3114 = !DIEnumerator(name: "TH_SYNTAX_D", value: 71, isUnsigned: true)
!3115 = !DIEnumerator(name: "TH_SYNTAX_N", value: 72, isUnsigned: true)
!3116 = !DIEnumerator(name: "TH_SYNTAX_S", value: 73, isUnsigned: true)
!3117 = !DIEnumerator(name: "TH_BONE_SOLID", value: 74, isUnsigned: true)
!3118 = !DIEnumerator(name: "TH_BONE_POSE", value: 75, isUnsigned: true)
!3119 = !DIEnumerator(name: "TH_BONE_POSE_ACTIVE", value: 76, isUnsigned: true)
!3120 = !DIEnumerator(name: "TH_STRIP", value: 77, isUnsigned: true)
!3121 = !DIEnumerator(name: "TH_STRIP_SELECT", value: 78, isUnsigned: true)
!3122 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME", value: 79, isUnsigned: true)
!3123 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME_SELECT", value: 80, isUnsigned: true)
!3124 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME", value: 81, isUnsigned: true)
!3125 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME_SELECT", value: 82, isUnsigned: true)
!3126 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN", value: 83, isUnsigned: true)
!3127 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN_SELECT", value: 84, isUnsigned: true)
!3128 = !DIEnumerator(name: "TH_KEYTYPE_JITTER", value: 85, isUnsigned: true)
!3129 = !DIEnumerator(name: "TH_KEYTYPE_JITTER_SELECT", value: 86, isUnsigned: true)
!3130 = !DIEnumerator(name: "TH_KEYBORDER", value: 87, isUnsigned: true)
!3131 = !DIEnumerator(name: "TH_KEYBORDER_SELECT", value: 88, isUnsigned: true)
!3132 = !DIEnumerator(name: "TH_LAMP", value: 89, isUnsigned: true)
!3133 = !DIEnumerator(name: "TH_SPEAKER", value: 90, isUnsigned: true)
!3134 = !DIEnumerator(name: "TH_CAMERA", value: 91, isUnsigned: true)
!3135 = !DIEnumerator(name: "TH_EMPTY", value: 92, isUnsigned: true)
!3136 = !DIEnumerator(name: "TH_NODE", value: 93, isUnsigned: true)
!3137 = !DIEnumerator(name: "TH_NODE_INPUT", value: 94, isUnsigned: true)
!3138 = !DIEnumerator(name: "TH_NODE_OUTPUT", value: 95, isUnsigned: true)
!3139 = !DIEnumerator(name: "TH_NODE_COLOR", value: 96, isUnsigned: true)
!3140 = !DIEnumerator(name: "TH_NODE_FILTER", value: 97, isUnsigned: true)
!3141 = !DIEnumerator(name: "TH_NODE_VECTOR", value: 98, isUnsigned: true)
!3142 = !DIEnumerator(name: "TH_NODE_TEXTURE", value: 99, isUnsigned: true)
!3143 = !DIEnumerator(name: "TH_NODE_PATTERN", value: 100, isUnsigned: true)
!3144 = !DIEnumerator(name: "TH_NODE_SCRIPT", value: 101, isUnsigned: true)
!3145 = !DIEnumerator(name: "TH_NODE_LAYOUT", value: 102, isUnsigned: true)
!3146 = !DIEnumerator(name: "TH_NODE_SHADER", value: 103, isUnsigned: true)
!3147 = !DIEnumerator(name: "TH_NODE_INTERFACE", value: 104, isUnsigned: true)
!3148 = !DIEnumerator(name: "TH_NODE_CONVERTOR", value: 105, isUnsigned: true)
!3149 = !DIEnumerator(name: "TH_NODE_GROUP", value: 106, isUnsigned: true)
!3150 = !DIEnumerator(name: "TH_NODE_FRAME", value: 107, isUnsigned: true)
!3151 = !DIEnumerator(name: "TH_NODE_MATTE", value: 108, isUnsigned: true)
!3152 = !DIEnumerator(name: "TH_NODE_DISTORT", value: 109, isUnsigned: true)
!3153 = !DIEnumerator(name: "TH_CONSOLE_OUTPUT", value: 110, isUnsigned: true)
!3154 = !DIEnumerator(name: "TH_CONSOLE_INPUT", value: 111, isUnsigned: true)
!3155 = !DIEnumerator(name: "TH_CONSOLE_INFO", value: 112, isUnsigned: true)
!3156 = !DIEnumerator(name: "TH_CONSOLE_ERROR", value: 113, isUnsigned: true)
!3157 = !DIEnumerator(name: "TH_CONSOLE_CURSOR", value: 114, isUnsigned: true)
!3158 = !DIEnumerator(name: "TH_CONSOLE_SELECT", value: 115, isUnsigned: true)
!3159 = !DIEnumerator(name: "TH_SEQ_MOVIE", value: 116, isUnsigned: true)
!3160 = !DIEnumerator(name: "TH_SEQ_MOVIECLIP", value: 117, isUnsigned: true)
!3161 = !DIEnumerator(name: "TH_SEQ_MASK", value: 118, isUnsigned: true)
!3162 = !DIEnumerator(name: "TH_SEQ_IMAGE", value: 119, isUnsigned: true)
!3163 = !DIEnumerator(name: "TH_SEQ_SCENE", value: 120, isUnsigned: true)
!3164 = !DIEnumerator(name: "TH_SEQ_AUDIO", value: 121, isUnsigned: true)
!3165 = !DIEnumerator(name: "TH_SEQ_EFFECT", value: 122, isUnsigned: true)
!3166 = !DIEnumerator(name: "TH_SEQ_TRANSITION", value: 123, isUnsigned: true)
!3167 = !DIEnumerator(name: "TH_SEQ_META", value: 124, isUnsigned: true)
!3168 = !DIEnumerator(name: "TH_SEQ_PREVIEW", value: 125, isUnsigned: true)
!3169 = !DIEnumerator(name: "TH_EDGE_SHARP", value: 126, isUnsigned: true)
!3170 = !DIEnumerator(name: "TH_EDITMESH_ACTIVE", value: 127, isUnsigned: true)
!3171 = !DIEnumerator(name: "TH_HANDLE_VERTEX", value: 128, isUnsigned: true)
!3172 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SELECT", value: 129, isUnsigned: true)
!3173 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SIZE", value: 130, isUnsigned: true)
!3174 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELOB", value: 131, isUnsigned: true)
!3175 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELSUBOB", value: 132, isUnsigned: true)
!3176 = !DIEnumerator(name: "TH_PREVIEW_BACK", value: 133, isUnsigned: true)
!3177 = !DIEnumerator(name: "TH_EDGE_CREASE", value: 134, isUnsigned: true)
!3178 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGELEN", value: 135, isUnsigned: true)
!3179 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGEANG", value: 136, isUnsigned: true)
!3180 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEAREA", value: 137, isUnsigned: true)
!3181 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEANG", value: 138, isUnsigned: true)
!3182 = !DIEnumerator(name: "TH_NODE_CURVING", value: 139, isUnsigned: true)
!3183 = !DIEnumerator(name: "TH_MARKER_OUTLINE", value: 140, isUnsigned: true)
!3184 = !DIEnumerator(name: "TH_MARKER", value: 141, isUnsigned: true)
!3185 = !DIEnumerator(name: "TH_ACT_MARKER", value: 142, isUnsigned: true)
!3186 = !DIEnumerator(name: "TH_SEL_MARKER", value: 143, isUnsigned: true)
!3187 = !DIEnumerator(name: "TH_BUNDLE_SOLID", value: 144, isUnsigned: true)
!3188 = !DIEnumerator(name: "TH_DIS_MARKER", value: 145, isUnsigned: true)
!3189 = !DIEnumerator(name: "TH_PATH_BEFORE", value: 146, isUnsigned: true)
!3190 = !DIEnumerator(name: "TH_PATH_AFTER", value: 147, isUnsigned: true)
!3191 = !DIEnumerator(name: "TH_CAMERA_PATH", value: 148, isUnsigned: true)
!3192 = !DIEnumerator(name: "TH_LOCK_MARKER", value: 149, isUnsigned: true)
!3193 = !DIEnumerator(name: "TH_STITCH_PREVIEW_FACE", value: 150, isUnsigned: true)
!3194 = !DIEnumerator(name: "TH_STITCH_PREVIEW_EDGE", value: 151, isUnsigned: true)
!3195 = !DIEnumerator(name: "TH_STITCH_PREVIEW_VERT", value: 152, isUnsigned: true)
!3196 = !DIEnumerator(name: "TH_STITCH_PREVIEW_STITCHABLE", value: 153, isUnsigned: true)
!3197 = !DIEnumerator(name: "TH_STITCH_PREVIEW_UNSTITCHABLE", value: 154, isUnsigned: true)
!3198 = !DIEnumerator(name: "TH_STITCH_PREVIEW_ACTIVE", value: 155, isUnsigned: true)
!3199 = !DIEnumerator(name: "TH_PAINT_CURVE_HANDLE", value: 156, isUnsigned: true)
!3200 = !DIEnumerator(name: "TH_PAINT_CURVE_PIVOT", value: 157, isUnsigned: true)
!3201 = !DIEnumerator(name: "TH_UV_SHADOW", value: 158, isUnsigned: true)
!3202 = !DIEnumerator(name: "TH_UV_OTHERS", value: 159, isUnsigned: true)
!3203 = !DIEnumerator(name: "TH_FREESTYLE_EDGE_MARK", value: 160, isUnsigned: true)
!3204 = !DIEnumerator(name: "TH_FREESTYLE_FACE_MARK", value: 161, isUnsigned: true)
!3205 = !DIEnumerator(name: "TH_MATCH", value: 162, isUnsigned: true)
!3206 = !DIEnumerator(name: "TH_SELECT_HIGHLIGHT", value: 163, isUnsigned: true)
!3207 = !DIEnumerator(name: "TH_SKIN_ROOT", value: 164, isUnsigned: true)
!3208 = !DIEnumerator(name: "TH_ANIM_ACTIVE", value: 165, isUnsigned: true)
!3209 = !DIEnumerator(name: "TH_ANIM_INACTIVE", value: 166, isUnsigned: true)
!3210 = !DIEnumerator(name: "TH_NLA_TWEAK", value: 167, isUnsigned: true)
!3211 = !DIEnumerator(name: "TH_NLA_TWEAK_DUPLI", value: 168, isUnsigned: true)
!3212 = !DIEnumerator(name: "TH_NLA_TRANSITION", value: 169, isUnsigned: true)
!3213 = !DIEnumerator(name: "TH_NLA_TRANSITION_SEL", value: 170, isUnsigned: true)
!3214 = !DIEnumerator(name: "TH_NLA_META", value: 171, isUnsigned: true)
!3215 = !DIEnumerator(name: "TH_NLA_META_SEL", value: 172, isUnsigned: true)
!3216 = !DIEnumerator(name: "TH_NLA_SOUND", value: 173, isUnsigned: true)
!3217 = !DIEnumerator(name: "TH_NLA_SOUND_SEL", value: 174, isUnsigned: true)
!3218 = !DIEnumerator(name: "TH_EMBOSS", value: 175, isUnsigned: true)
!3219 = !DIEnumerator(name: "TH_AXIS_X", value: 176, isUnsigned: true)
!3220 = !DIEnumerator(name: "TH_AXIS_Y", value: 177, isUnsigned: true)
!3221 = !DIEnumerator(name: "TH_AXIS_Z", value: 178, isUnsigned: true)
!3222 = !DIEnumerator(name: "TH_LOW_GRAD", value: 179, isUnsigned: true)
!3223 = !DIEnumerator(name: "TH_HIGH_GRAD", value: 180, isUnsigned: true)
!3224 = !DIEnumerator(name: "TH_SHOW_BACK_GRAD", value: 181, isUnsigned: true)
!3225 = !DIEnumerator(name: "TH_INFO_SELECTED", value: 182, isUnsigned: true)
!3226 = !DIEnumerator(name: "TH_INFO_SELECTED_TEXT", value: 183, isUnsigned: true)
!3227 = !DIEnumerator(name: "TH_INFO_ERROR", value: 184, isUnsigned: true)
!3228 = !DIEnumerator(name: "TH_INFO_ERROR_TEXT", value: 185, isUnsigned: true)
!3229 = !DIEnumerator(name: "TH_INFO_WARNING", value: 186, isUnsigned: true)
!3230 = !DIEnumerator(name: "TH_INFO_WARNING_TEXT", value: 187, isUnsigned: true)
!3231 = !DIEnumerator(name: "TH_INFO_INFO", value: 188, isUnsigned: true)
!3232 = !DIEnumerator(name: "TH_INFO_INFO_TEXT", value: 189, isUnsigned: true)
!3233 = !DIEnumerator(name: "TH_INFO_DEBUG", value: 190, isUnsigned: true)
!3234 = !DIEnumerator(name: "TH_INFO_DEBUG_TEXT", value: 191, isUnsigned: true)
!3235 = !DIEnumerator(name: "TH_VIEW_OVERLAY", value: 192, isUnsigned: true)
!3236 = !{!18, !1059, !357, !3237, !3238, !3240, !3241, !2769, !3243, !35, !2939, !392, !2730, !1227, !3245, !2850, !3251, !3259, !3260, !3261, !2665, !2726, !2708, !23}
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !3239, line: 90, baseType: !1220)
!3239 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !3242, line: 46, baseType: !1220)
!3242 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!3243 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !3239, line: 87, baseType: !3244)
!3244 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gh_Entry", file: !548, line: 94, size: 192, elements: !3247)
!3247 = !{!3248, !3249, !3250}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3246, file: !548, line: 94, baseType: !18, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3246, file: !548, line: 94, baseType: !18, size: 64, offset: 64)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3246, file: !548, line: 94, baseType: !18, size: 64, offset: 128)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ref", file: !3, line: 106, baseType: !3253)
!3253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Ref", file: !3, line: 103, size: 192, elements: !3254)
!3254 = !{!3255, !3257, !3258}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3253, file: !3, line: 104, baseType: !3256, size: 64)
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3253, file: !3, line: 104, baseType: !3256, size: 64, offset: 64)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3253, file: !3, line: 105, baseType: !18, size: 64, offset: 128)
!3259 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !2962, line: 79, baseType: !2961)
!3260 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !2962, line: 158, baseType: !1355)
!3261 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !2962, line: 159, baseType: !3262)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!18, !18}
!3265 = !{!0}
!3266 = !{}
!3267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3268, size: 3840, elements: !3276)
!3268 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !38, line: 308, baseType: !3269)
!3269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !38, line: 302, size: 320, elements: !3270)
!3270 = !{!3271, !3272, !3273, !3274, !3275}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3269, file: !38, line: 303, baseType: !35, size: 32)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !3269, file: !38, line: 304, baseType: !2399, size: 64, offset: 64)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !3269, file: !38, line: 305, baseType: !35, size: 32, offset: 128)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3269, file: !38, line: 306, baseType: !2399, size: 64, offset: 192)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3269, file: !38, line: 307, baseType: !2399, size: 64, offset: 256)
!3276 = !{!3277}
!3277 = !DISubrange(count: 12)
!3278 = !{i32 7, !"Dwarf Version", i32 4}
!3279 = !{i32 2, !"Debug Info Version", i32 3}
!3280 = !{i32 1, !"wchar_size", i32 4}
!3281 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3282 = !DILocalVariable(name: "keyconf", arg: 1, scope: !2, file: !3, line: 2815, type: !40)
!3283 = !DILocation(line: 2815, column: 47, scope: !2)
!3284 = !DILocalVariable(name: "keymap", scope: !2, file: !3, line: 2832, type: !3285)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 64)
!3286 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMap", file: !8, line: 297, baseType: !7)
!3287 = !DILocation(line: 2832, column: 12, scope: !2)
!3288 = !DILocation(line: 2832, column: 40, scope: !2)
!3289 = !DILocation(line: 2832, column: 21, scope: !2)
!3290 = !DILocation(line: 2835, column: 6, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2835, column: 6)
!3292 = !DILocation(line: 2835, column: 13, scope: !3291)
!3293 = !DILocation(line: 2835, column: 16, scope: !3291)
!3294 = !DILocation(line: 2835, column: 24, scope: !3291)
!3295 = !DILocation(line: 2835, column: 6, scope: !2)
!3296 = !DILocation(line: 2836, column: 3, scope: !3291)
!3297 = !DILocation(line: 2838, column: 30, scope: !2)
!3298 = !DILocation(line: 2838, column: 11, scope: !2)
!3299 = !DILocation(line: 2838, column: 9, scope: !2)
!3300 = !DILocation(line: 2841, column: 26, scope: !2)
!3301 = !DILocation(line: 2841, column: 2, scope: !2)
!3302 = !DILocation(line: 2842, column: 26, scope: !2)
!3303 = !DILocation(line: 2842, column: 2, scope: !2)
!3304 = !DILocation(line: 2843, column: 26, scope: !2)
!3305 = !DILocation(line: 2843, column: 2, scope: !2)
!3306 = !DILocation(line: 2844, column: 26, scope: !2)
!3307 = !DILocation(line: 2844, column: 2, scope: !2)
!3308 = !DILocation(line: 2845, column: 26, scope: !2)
!3309 = !DILocation(line: 2845, column: 2, scope: !2)
!3310 = !DILocation(line: 2846, column: 26, scope: !2)
!3311 = !DILocation(line: 2846, column: 2, scope: !2)
!3312 = !DILocation(line: 2847, column: 26, scope: !2)
!3313 = !DILocation(line: 2847, column: 2, scope: !2)
!3314 = !DILocation(line: 2848, column: 26, scope: !2)
!3315 = !DILocation(line: 2848, column: 2, scope: !2)
!3316 = !DILocation(line: 2850, column: 26, scope: !2)
!3317 = !DILocation(line: 2850, column: 2, scope: !2)
!3318 = !DILocation(line: 2851, column: 26, scope: !2)
!3319 = !DILocation(line: 2851, column: 2, scope: !2)
!3320 = !DILocation(line: 2852, column: 26, scope: !2)
!3321 = !DILocation(line: 2852, column: 2, scope: !2)
!3322 = !DILocation(line: 2853, column: 26, scope: !2)
!3323 = !DILocation(line: 2853, column: 2, scope: !2)
!3324 = !DILocation(line: 2855, column: 26, scope: !2)
!3325 = !DILocation(line: 2855, column: 2, scope: !2)
!3326 = !DILocation(line: 2856, column: 26, scope: !2)
!3327 = !DILocation(line: 2856, column: 2, scope: !2)
!3328 = !DILocation(line: 2857, column: 26, scope: !2)
!3329 = !DILocation(line: 2857, column: 2, scope: !2)
!3330 = !DILocation(line: 2858, column: 26, scope: !2)
!3331 = !DILocation(line: 2858, column: 2, scope: !2)
!3332 = !DILocation(line: 2860, column: 26, scope: !2)
!3333 = !DILocation(line: 2860, column: 2, scope: !2)
!3334 = !DILocation(line: 2861, column: 26, scope: !2)
!3335 = !DILocation(line: 2861, column: 2, scope: !2)
!3336 = !DILocation(line: 2863, column: 24, scope: !2)
!3337 = !DILocation(line: 2863, column: 2, scope: !2)
!3338 = !DILocation(line: 2865, column: 9, scope: !2)
!3339 = !DILocation(line: 2865, column: 2, scope: !2)
!3340 = !DILocation(line: 2866, column: 1, scope: !2)
!3341 = distinct !DISubprogram(name: "MESH_OT_knife_tool", scope: !3, file: !3, line: 3006, type: !3342, scopeLine: 3007, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{null, !3344}
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !401, line: 568, baseType: !3346)
!3346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !401, line: 508, size: 1536, elements: !3347)
!3347 = !{!3348, !3349, !3350, !3351, !3352, !3394, !3398, !3404, !3408, !3409, !3410, !3411, !3412, !3413, !3417, !3418, !3419, !3420, !3424, !3450}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3346, file: !401, line: 509, baseType: !2399, size: 64)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3346, file: !401, line: 510, baseType: !2399, size: 64, offset: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !3346, file: !401, line: 511, baseType: !2399, size: 64, offset: 128)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3346, file: !401, line: 512, baseType: !2399, size: 64, offset: 192)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3346, file: !401, line: 518, baseType: !3353, size: 64, offset: 256)
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3354, size: 64)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{!35, !36, !3356}
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !8, line: 328, size: 1344, elements: !3358)
!3358 = !{!3359, !3360, !3361, !3362, !3363, !3365, !3366, !3367, !3377, !3387, !3388, !3389, !3392, !3393}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3357, file: !8, line: 329, baseType: !3356, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3357, file: !8, line: 329, baseType: !3356, size: 64, offset: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3357, file: !8, line: 332, baseType: !22, size: 512, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3357, file: !8, line: 333, baseType: !453, size: 64, offset: 640)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3357, file: !8, line: 336, baseType: !3364, size: 64, offset: 704)
!3364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3357, file: !8, line: 337, baseType: !18, size: 64, offset: 768)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !3357, file: !8, line: 338, baseType: !18, size: 64, offset: 832)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3357, file: !8, line: 340, baseType: !3368, size: 64, offset: 896)
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3369, size: 64)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !38, line: 55, size: 192, elements: !3370)
!3370 = !{!3371, !3375, !3376}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3369, file: !38, line: 58, baseType: !3372, size: 64)
!3372 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3369, file: !38, line: 56, size: 64, elements: !3373)
!3373 = !{!3374}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3372, file: !38, line: 57, baseType: !18, size: 64)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3369, file: !38, line: 60, baseType: !1309, size: 64, offset: 64)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3369, file: !38, line: 61, baseType: !18, size: 64, offset: 128)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3357, file: !8, line: 341, baseType: !3378, size: 64, offset: 960)
!3378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3379, size: 64)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !8, line: 106, size: 320, elements: !3380)
!3380 = !{!3381, !3382, !3383, !3384, !3385, !3386}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3379, file: !8, line: 107, baseType: !13, size: 128)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !3379, file: !8, line: 108, baseType: !35, size: 32, offset: 128)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !3379, file: !8, line: 109, baseType: !35, size: 32, offset: 160)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3379, file: !8, line: 110, baseType: !35, size: 32, offset: 192)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3379, file: !8, line: 110, baseType: !35, size: 32, offset: 224)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !3379, file: !8, line: 111, baseType: !399, size: 64, offset: 256)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3357, file: !8, line: 343, baseType: !13, size: 128, offset: 1024)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !3357, file: !8, line: 344, baseType: !3356, size: 64, offset: 1152)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !3357, file: !8, line: 345, baseType: !3390, size: 64, offset: 1216)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !8, line: 61, flags: DIFlagFwdDecl)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3357, file: !8, line: 346, baseType: !27, size: 16, offset: 1280)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3357, file: !8, line: 346, baseType: !826, size: 48, offset: 1296)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3346, file: !401, line: 524, baseType: !3395, size: 64, offset: 320)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 64)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!1053, !36, !3356}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !3346, file: !401, line: 530, baseType: !3399, size: 64, offset: 384)
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3400, size: 64)
!3400 = !DISubroutineType(types: !3401)
!3401 = !{!35, !36, !3356, !3402}
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2372)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3346, file: !401, line: 531, baseType: !3405, size: 64, offset: 448)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{null, !36, !3356}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !3346, file: !401, line: 532, baseType: !3399, size: 64, offset: 512)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3346, file: !401, line: 536, baseType: !32, size: 64, offset: 576)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !3346, file: !401, line: 539, baseType: !3405, size: 64, offset: 640)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3346, file: !401, line: 542, baseType: !1309, size: 64, offset: 704)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !3346, file: !401, line: 545, baseType: !458, size: 64, offset: 768)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3346, file: !401, line: 549, baseType: !3414, size: 64, offset: 832)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !38, line: 333, baseType: !3416)
!3416 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !38, line: 39, flags: DIFlagFwdDecl)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3346, file: !401, line: 552, baseType: !13, size: 128, offset: 896)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !3346, file: !401, line: 555, baseType: !6, size: 64, offset: 1024)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !3346, file: !401, line: 559, baseType: !18, size: 64, offset: 1088)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !3346, file: !401, line: 560, baseType: !3421, size: 64, offset: 1152)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 64)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!35, !36, !3364}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3346, file: !401, line: 563, baseType: !3425, size: 256, offset: 1216)
!3425 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !38, line: 436, baseType: !3426)
!3426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !38, line: 430, size: 256, elements: !3427)
!3427 = !{!3428, !3429, !3432, !3448}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3426, file: !38, line: 431, baseType: !18, size: 64)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3426, file: !38, line: 432, baseType: !3430, size: 64, offset: 64)
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3431 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !38, line: 417, baseType: !1310)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !3426, file: !38, line: 433, baseType: !3433, size: 64, offset: 128)
!3433 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !38, line: 408, baseType: !3434)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = !DISubroutineType(types: !3436)
!3436 = !{!35, !36, !3368, !3437, !3439}
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !38, line: 38, flags: DIFlagFwdDecl)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !38, line: 348, baseType: !3441)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !38, line: 337, size: 256, elements: !3442)
!3442 = !{!3443, !3444, !3445, !3446, !3447}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3441, file: !38, line: 339, baseType: !18, size: 64)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3441, file: !38, line: 342, baseType: !3437, size: 64, offset: 64)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !3441, file: !38, line: 345, baseType: !35, size: 32, offset: 128)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !3441, file: !38, line: 347, baseType: !35, size: 32, offset: 160)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !3441, file: !38, line: 347, baseType: !35, size: 32, offset: 192)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3426, file: !38, line: 434, baseType: !3449, size: 64, offset: 192)
!3449 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !38, line: 409, baseType: !1355)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3346, file: !401, line: 566, baseType: !27, size: 16, offset: 1472)
!3451 = !DILocalVariable(name: "ot", arg: 1, scope: !3341, file: !3, line: 3006, type: !3344)
!3452 = !DILocation(line: 3006, column: 41, scope: !3341)
!3453 = !DILocation(line: 3009, column: 2, scope: !3341)
!3454 = !DILocation(line: 3009, column: 6, scope: !3341)
!3455 = !DILocation(line: 3009, column: 11, scope: !3341)
!3456 = !DILocation(line: 3010, column: 2, scope: !3341)
!3457 = !DILocation(line: 3010, column: 6, scope: !3341)
!3458 = !DILocation(line: 3010, column: 13, scope: !3341)
!3459 = !DILocation(line: 3011, column: 2, scope: !3341)
!3460 = !DILocation(line: 3011, column: 6, scope: !3341)
!3461 = !DILocation(line: 3011, column: 18, scope: !3341)
!3462 = !DILocation(line: 3014, column: 2, scope: !3341)
!3463 = !DILocation(line: 3014, column: 6, scope: !3341)
!3464 = !DILocation(line: 3014, column: 13, scope: !3341)
!3465 = !DILocation(line: 3015, column: 2, scope: !3341)
!3466 = !DILocation(line: 3015, column: 6, scope: !3341)
!3467 = !DILocation(line: 3015, column: 12, scope: !3341)
!3468 = !DILocation(line: 3016, column: 2, scope: !3341)
!3469 = !DILocation(line: 3016, column: 6, scope: !3341)
!3470 = !DILocation(line: 3016, column: 13, scope: !3341)
!3471 = !DILocation(line: 3017, column: 2, scope: !3341)
!3472 = !DILocation(line: 3017, column: 6, scope: !3341)
!3473 = !DILocation(line: 3017, column: 11, scope: !3341)
!3474 = !DILocation(line: 3020, column: 2, scope: !3341)
!3475 = !DILocation(line: 3020, column: 6, scope: !3341)
!3476 = !DILocation(line: 3020, column: 11, scope: !3341)
!3477 = !DILocation(line: 3022, column: 18, scope: !3341)
!3478 = !DILocation(line: 3022, column: 22, scope: !3341)
!3479 = !DILocation(line: 3022, column: 2, scope: !3341)
!3480 = !DILocation(line: 3023, column: 18, scope: !3341)
!3481 = !DILocation(line: 3023, column: 22, scope: !3341)
!3482 = !DILocation(line: 3023, column: 2, scope: !3341)
!3483 = !DILocation(line: 3024, column: 1, scope: !3341)
!3484 = distinct !DISubprogram(name: "knifetool_invoke", scope: !3, file: !3, line: 2767, type: !3485, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!35, !3487, !3489, !3491}
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1672, line: 69, baseType: !37)
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 64)
!3490 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !8, line: 348, baseType: !3357)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3493)
!3493 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !401, line: 460, baseType: !2372)
!3494 = !DILocalVariable(name: "C", arg: 1, scope: !3484, file: !3, line: 2767, type: !3487)
!3495 = !DILocation(line: 2767, column: 39, scope: !3484)
!3496 = !DILocalVariable(name: "op", arg: 2, scope: !3484, file: !3, line: 2767, type: !3489)
!3497 = !DILocation(line: 2767, column: 54, scope: !3484)
!3498 = !DILocalVariable(name: "event", arg: 3, scope: !3484, file: !3, line: 2767, type: !3491)
!3499 = !DILocation(line: 2767, column: 73, scope: !3484)
!3500 = !DILocalVariable(name: "only_select", scope: !3484, file: !3, line: 2769, type: !1165)
!3501 = !DILocation(line: 2769, column: 13, scope: !3484)
!3502 = !DILocation(line: 2769, column: 43, scope: !3484)
!3503 = !DILocation(line: 2769, column: 47, scope: !3484)
!3504 = !DILocation(line: 2769, column: 27, scope: !3484)
!3505 = !DILocalVariable(name: "cut_through", scope: !3484, file: !3, line: 2770, type: !1165)
!3506 = !DILocation(line: 2770, column: 13, scope: !3484)
!3507 = !DILocation(line: 2770, column: 44, scope: !3484)
!3508 = !DILocation(line: 2770, column: 48, scope: !3484)
!3509 = !DILocation(line: 2770, column: 28, scope: !3484)
!3510 = !DILocation(line: 2770, column: 27, scope: !3484)
!3511 = !DILocalVariable(name: "kcd", scope: !3484, file: !3, line: 2772, type: !3512)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DIDerivedType(tag: DW_TAG_typedef, name: "KnifeTool_OpData", file: !3, line: 227, baseType: !335)
!3514 = !DILocation(line: 2772, column: 20, scope: !3484)
!3515 = !DILocation(line: 2774, column: 6, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3484, file: !3, line: 2774, column: 6)
!3517 = !DILocation(line: 2774, column: 6, scope: !3484)
!3518 = !DILocalVariable(name: "obedit", scope: !3519, file: !3, line: 2775, type: !2824)
!3519 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 2774, column: 19)
!3520 = !DILocation(line: 2775, column: 11, scope: !3519)
!3521 = !DILocation(line: 2775, column: 41, scope: !3519)
!3522 = !DILocation(line: 2775, column: 20, scope: !3519)
!3523 = !DILocalVariable(name: "em", scope: !3519, file: !3, line: 2776, type: !2827)
!3524 = !DILocation(line: 2776, column: 15, scope: !3519)
!3525 = !DILocation(line: 2776, column: 45, scope: !3519)
!3526 = !DILocation(line: 2776, column: 20, scope: !3519)
!3527 = !DILocation(line: 2777, column: 7, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3519, file: !3, line: 2777, column: 7)
!3529 = !DILocation(line: 2777, column: 11, scope: !3528)
!3530 = !DILocation(line: 2777, column: 15, scope: !3528)
!3531 = !DILocation(line: 2777, column: 26, scope: !3528)
!3532 = !DILocation(line: 2777, column: 7, scope: !3519)
!3533 = !DILocation(line: 2778, column: 15, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 2777, column: 32)
!3535 = !DILocation(line: 2778, column: 19, scope: !3534)
!3536 = !DILocation(line: 2778, column: 4, scope: !3534)
!3537 = !DILocation(line: 2779, column: 4, scope: !3534)
!3538 = !DILocation(line: 2781, column: 2, scope: !3519)
!3539 = !DILocation(line: 2783, column: 31, scope: !3484)
!3540 = !DILocation(line: 2783, column: 2, scope: !3484)
!3541 = !DILocation(line: 2786, column: 25, scope: !3484)
!3542 = !DILocation(line: 2786, column: 8, scope: !3484)
!3543 = !DILocation(line: 2786, column: 12, scope: !3484)
!3544 = !DILocation(line: 2786, column: 23, scope: !3484)
!3545 = !DILocation(line: 2786, column: 6, scope: !3484)
!3546 = !DILocation(line: 2788, column: 17, scope: !3484)
!3547 = !DILocation(line: 2788, column: 20, scope: !3484)
!3548 = !DILocation(line: 2788, column: 25, scope: !3484)
!3549 = !DILocation(line: 2788, column: 38, scope: !3484)
!3550 = !DILocation(line: 2788, column: 2, scope: !3484)
!3551 = !DILocation(line: 2791, column: 36, scope: !3484)
!3552 = !DILocation(line: 2791, column: 22, scope: !3484)
!3553 = !DILocation(line: 2791, column: 2, scope: !3484)
!3554 = !DILocation(line: 2792, column: 29, scope: !3484)
!3555 = !DILocation(line: 2792, column: 32, scope: !3484)
!3556 = !DILocation(line: 2792, column: 2, scope: !3484)
!3557 = !DILocation(line: 2794, column: 26, scope: !3484)
!3558 = !DILocation(line: 2794, column: 31, scope: !3484)
!3559 = !DILocation(line: 2794, column: 38, scope: !3484)
!3560 = !DILocation(line: 2794, column: 2, scope: !3484)
!3561 = !DILocation(line: 2796, column: 22, scope: !3484)
!3562 = !DILocation(line: 2796, column: 25, scope: !3484)
!3563 = !DILocation(line: 2796, column: 2, scope: !3484)
!3564 = !DILocation(line: 2798, column: 2, scope: !3484)
!3565 = !DILocation(line: 2799, column: 1, scope: !3484)
!3566 = distinct !DISubprogram(name: "knifetool_modal", scope: !3, file: !3, line: 2868, type: !3485, scopeLine: 2869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!3567 = !DILocalVariable(name: "C", arg: 1, scope: !3566, file: !3, line: 2868, type: !3487)
!3568 = !DILocation(line: 2868, column: 38, scope: !3566)
!3569 = !DILocalVariable(name: "op", arg: 2, scope: !3566, file: !3, line: 2868, type: !3489)
!3570 = !DILocation(line: 2868, column: 53, scope: !3566)
!3571 = !DILocalVariable(name: "event", arg: 3, scope: !3566, file: !3, line: 2868, type: !3491)
!3572 = !DILocation(line: 2868, column: 72, scope: !3566)
!3573 = !DILocalVariable(name: "obedit", scope: !3566, file: !3, line: 2870, type: !2824)
!3574 = !DILocation(line: 2870, column: 10, scope: !3566)
!3575 = !DILocation(line: 2870, column: 40, scope: !3566)
!3576 = !DILocation(line: 2870, column: 19, scope: !3566)
!3577 = !DILocalVariable(name: "kcd", scope: !3566, file: !3, line: 2871, type: !3512)
!3578 = !DILocation(line: 2871, column: 20, scope: !3566)
!3579 = !DILocation(line: 2871, column: 26, scope: !3566)
!3580 = !DILocation(line: 2871, column: 30, scope: !3566)
!3581 = !DILocalVariable(name: "do_refresh", scope: !3566, file: !3, line: 2872, type: !1053)
!3582 = !DILocation(line: 2872, column: 7, scope: !3566)
!3583 = !DILocation(line: 2874, column: 7, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3566, file: !3, line: 2874, column: 6)
!3585 = !DILocation(line: 2874, column: 14, scope: !3584)
!3586 = !DILocation(line: 2874, column: 17, scope: !3584)
!3587 = !DILocation(line: 2874, column: 25, scope: !3584)
!3588 = !DILocation(line: 2874, column: 30, scope: !3584)
!3589 = !DILocation(line: 2874, column: 41, scope: !3584)
!3590 = !DILocation(line: 2874, column: 69, scope: !3584)
!3591 = !DILocation(line: 2874, column: 44, scope: !3584)
!3592 = !DILocation(line: 2874, column: 80, scope: !3584)
!3593 = !DILocation(line: 2874, column: 85, scope: !3584)
!3594 = !DILocation(line: 2874, column: 77, scope: !3584)
!3595 = !DILocation(line: 2874, column: 6, scope: !3566)
!3596 = !DILocation(line: 2875, column: 18, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3584, file: !3, line: 2874, column: 89)
!3598 = !DILocation(line: 2875, column: 21, scope: !3597)
!3599 = !DILocation(line: 2875, column: 3, scope: !3597)
!3600 = !DILocation(line: 2876, column: 35, scope: !3597)
!3601 = !DILocation(line: 2876, column: 23, scope: !3597)
!3602 = !DILocation(line: 2876, column: 3, scope: !3597)
!3603 = !DILocation(line: 2877, column: 3, scope: !3597)
!3604 = !DILocation(line: 2880, column: 31, scope: !3566)
!3605 = !DILocation(line: 2880, column: 2, scope: !3566)
!3606 = !DILocation(line: 2881, column: 27, scope: !3566)
!3607 = !DILocation(line: 2881, column: 35, scope: !3566)
!3608 = !DILocation(line: 2881, column: 40, scope: !3566)
!3609 = !DILocation(line: 2881, column: 43, scope: !3566)
!3610 = !DILocation(line: 2881, column: 2, scope: !3566)
!3611 = !DILocation(line: 2883, column: 6, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3566, file: !3, line: 2883, column: 6)
!3613 = !DILocation(line: 2883, column: 11, scope: !3612)
!3614 = !DILocation(line: 2883, column: 16, scope: !3612)
!3615 = !DILocation(line: 2883, column: 6, scope: !3566)
!3616 = !DILocation(line: 2884, column: 15, scope: !3612)
!3617 = !DILocation(line: 2884, column: 20, scope: !3612)
!3618 = !DILocation(line: 2884, column: 3, scope: !3612)
!3619 = !DILocation(line: 2884, column: 8, scope: !3612)
!3620 = !DILocation(line: 2884, column: 13, scope: !3612)
!3621 = !DILocation(line: 2887, column: 6, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3566, file: !3, line: 2887, column: 6)
!3623 = !DILocation(line: 2887, column: 13, scope: !3622)
!3624 = !DILocation(line: 2887, column: 18, scope: !3622)
!3625 = !DILocation(line: 2887, column: 6, scope: !3566)
!3626 = !DILocation(line: 2888, column: 11, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 2887, column: 36)
!3628 = !DILocation(line: 2888, column: 18, scope: !3627)
!3629 = !DILocation(line: 2888, column: 3, scope: !3627)
!3630 = !DILocation(line: 2891, column: 26, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 2888, column: 23)
!3632 = !DILocation(line: 2891, column: 31, scope: !3631)
!3633 = !DILocation(line: 2891, column: 5, scope: !3631)
!3634 = !DILocation(line: 2893, column: 20, scope: !3631)
!3635 = !DILocation(line: 2893, column: 23, scope: !3631)
!3636 = !DILocation(line: 2893, column: 5, scope: !3631)
!3637 = !DILocation(line: 2894, column: 37, scope: !3631)
!3638 = !DILocation(line: 2894, column: 25, scope: !3631)
!3639 = !DILocation(line: 2894, column: 5, scope: !3631)
!3640 = !DILocation(line: 2896, column: 5, scope: !3631)
!3641 = !DILocation(line: 2899, column: 26, scope: !3631)
!3642 = !DILocation(line: 2899, column: 31, scope: !3631)
!3643 = !DILocation(line: 2899, column: 5, scope: !3631)
!3644 = !DILocation(line: 2901, column: 22, scope: !3631)
!3645 = !DILocation(line: 2901, column: 5, scope: !3631)
!3646 = !DILocation(line: 2902, column: 20, scope: !3631)
!3647 = !DILocation(line: 2902, column: 23, scope: !3631)
!3648 = !DILocation(line: 2902, column: 5, scope: !3631)
!3649 = !DILocation(line: 2903, column: 37, scope: !3631)
!3650 = !DILocation(line: 2903, column: 25, scope: !3631)
!3651 = !DILocation(line: 2903, column: 5, scope: !3631)
!3652 = !DILocation(line: 2905, column: 5, scope: !3631)
!3653 = !DILocation(line: 2907, column: 5, scope: !3631)
!3654 = !DILocation(line: 2907, column: 10, scope: !3631)
!3655 = !DILocation(line: 2907, column: 25, scope: !3631)
!3656 = !DILocation(line: 2909, column: 26, scope: !3631)
!3657 = !DILocation(line: 2909, column: 5, scope: !3631)
!3658 = !DILocation(line: 2910, column: 25, scope: !3631)
!3659 = !DILocation(line: 2910, column: 5, scope: !3631)
!3660 = !DILocation(line: 2911, column: 25, scope: !3631)
!3661 = !DILocation(line: 2911, column: 28, scope: !3631)
!3662 = !DILocation(line: 2911, column: 5, scope: !3631)
!3663 = !DILocation(line: 2912, column: 26, scope: !3631)
!3664 = !DILocation(line: 2912, column: 31, scope: !3631)
!3665 = !DILocation(line: 2912, column: 5, scope: !3631)
!3666 = !DILocation(line: 2913, column: 16, scope: !3631)
!3667 = !DILocation(line: 2914, column: 5, scope: !3631)
!3668 = !DILocation(line: 2916, column: 5, scope: !3631)
!3669 = !DILocation(line: 2916, column: 10, scope: !3631)
!3670 = !DILocation(line: 2916, column: 25, scope: !3631)
!3671 = !DILocation(line: 2918, column: 26, scope: !3631)
!3672 = !DILocation(line: 2918, column: 5, scope: !3631)
!3673 = !DILocation(line: 2919, column: 25, scope: !3631)
!3674 = !DILocation(line: 2919, column: 5, scope: !3631)
!3675 = !DILocation(line: 2920, column: 25, scope: !3631)
!3676 = !DILocation(line: 2920, column: 28, scope: !3631)
!3677 = !DILocation(line: 2920, column: 5, scope: !3631)
!3678 = !DILocation(line: 2921, column: 26, scope: !3631)
!3679 = !DILocation(line: 2921, column: 31, scope: !3631)
!3680 = !DILocation(line: 2921, column: 5, scope: !3631)
!3681 = !DILocation(line: 2922, column: 16, scope: !3631)
!3682 = !DILocation(line: 2923, column: 5, scope: !3631)
!3683 = !DILocation(line: 2925, column: 26, scope: !3631)
!3684 = !DILocation(line: 2925, column: 31, scope: !3631)
!3685 = !DILocation(line: 2925, column: 5, scope: !3631)
!3686 = !DILocation(line: 2926, column: 33, scope: !3631)
!3687 = !DILocation(line: 2926, column: 38, scope: !3631)
!3688 = !DILocation(line: 2926, column: 59, scope: !3631)
!3689 = !DILocation(line: 2926, column: 5, scope: !3631)
!3690 = !DILocation(line: 2926, column: 10, scope: !3631)
!3691 = !DILocation(line: 2926, column: 31, scope: !3631)
!3692 = !DILocation(line: 2927, column: 25, scope: !3631)
!3693 = !DILocation(line: 2927, column: 28, scope: !3631)
!3694 = !DILocation(line: 2927, column: 5, scope: !3631)
!3695 = !DILocation(line: 2928, column: 16, scope: !3631)
!3696 = !DILocation(line: 2929, column: 5, scope: !3631)
!3697 = !DILocation(line: 2931, column: 26, scope: !3631)
!3698 = !DILocation(line: 2931, column: 31, scope: !3631)
!3699 = !DILocation(line: 2931, column: 5, scope: !3631)
!3700 = !DILocation(line: 2932, column: 33, scope: !3631)
!3701 = !DILocation(line: 2932, column: 38, scope: !3631)
!3702 = !DILocation(line: 2932, column: 59, scope: !3631)
!3703 = !DILocation(line: 2932, column: 5, scope: !3631)
!3704 = !DILocation(line: 2932, column: 10, scope: !3631)
!3705 = !DILocation(line: 2932, column: 31, scope: !3631)
!3706 = !DILocation(line: 2933, column: 25, scope: !3631)
!3707 = !DILocation(line: 2933, column: 28, scope: !3631)
!3708 = !DILocation(line: 2933, column: 5, scope: !3631)
!3709 = !DILocation(line: 2934, column: 16, scope: !3631)
!3710 = !DILocation(line: 2935, column: 5, scope: !3631)
!3711 = !DILocation(line: 2937, column: 28, scope: !3631)
!3712 = !DILocation(line: 2937, column: 33, scope: !3631)
!3713 = !DILocation(line: 2937, column: 27, scope: !3631)
!3714 = !DILocation(line: 2937, column: 5, scope: !3631)
!3715 = !DILocation(line: 2937, column: 10, scope: !3631)
!3716 = !DILocation(line: 2937, column: 25, scope: !3631)
!3717 = !DILocation(line: 2938, column: 25, scope: !3631)
!3718 = !DILocation(line: 2938, column: 28, scope: !3631)
!3719 = !DILocation(line: 2938, column: 5, scope: !3631)
!3720 = !DILocation(line: 2939, column: 16, scope: !3631)
!3721 = !DILocation(line: 2940, column: 5, scope: !3631)
!3722 = !DILocation(line: 2942, column: 25, scope: !3631)
!3723 = !DILocation(line: 2942, column: 30, scope: !3631)
!3724 = !DILocation(line: 2942, column: 24, scope: !3631)
!3725 = !DILocation(line: 2942, column: 5, scope: !3631)
!3726 = !DILocation(line: 2942, column: 10, scope: !3631)
!3727 = !DILocation(line: 2942, column: 22, scope: !3631)
!3728 = !DILocation(line: 2943, column: 25, scope: !3631)
!3729 = !DILocation(line: 2943, column: 28, scope: !3631)
!3730 = !DILocation(line: 2943, column: 5, scope: !3631)
!3731 = !DILocation(line: 2944, column: 16, scope: !3631)
!3732 = !DILocation(line: 2945, column: 5, scope: !3631)
!3733 = !DILocation(line: 2947, column: 26, scope: !3631)
!3734 = !DILocation(line: 2947, column: 31, scope: !3631)
!3735 = !DILocation(line: 2947, column: 5, scope: !3631)
!3736 = !DILocation(line: 2948, column: 22, scope: !3631)
!3737 = !DILocation(line: 2948, column: 5, scope: !3631)
!3738 = !DILocation(line: 2949, column: 5, scope: !3631)
!3739 = !DILocation(line: 2949, column: 10, scope: !3631)
!3740 = !DILocation(line: 2949, column: 15, scope: !3631)
!3741 = !DILocation(line: 2950, column: 5, scope: !3631)
!3742 = !DILocation(line: 2952, column: 26, scope: !3631)
!3743 = !DILocation(line: 2952, column: 5, scope: !3631)
!3744 = !DILocation(line: 2954, column: 9, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 2954, column: 9)
!3746 = !DILocation(line: 2954, column: 14, scope: !3745)
!3747 = !DILocation(line: 2954, column: 19, scope: !3745)
!3748 = !DILocation(line: 2954, column: 9, scope: !3631)
!3749 = !DILocation(line: 2955, column: 20, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 2954, column: 37)
!3751 = !DILocation(line: 2955, column: 6, scope: !3750)
!3752 = !DILocation(line: 2956, column: 5, scope: !3750)
!3753 = !DILocation(line: 2957, column: 14, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 2957, column: 14)
!3755 = !DILocation(line: 2957, column: 19, scope: !3754)
!3756 = !DILocation(line: 2957, column: 24, scope: !3754)
!3757 = !DILocation(line: 2957, column: 14, scope: !3745)
!3758 = !DILocation(line: 2958, column: 22, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 2957, column: 41)
!3760 = !DILocation(line: 2958, column: 6, scope: !3759)
!3761 = !DILocation(line: 2959, column: 6, scope: !3759)
!3762 = !DILocation(line: 2959, column: 11, scope: !3759)
!3763 = !DILocation(line: 2959, column: 16, scope: !3759)
!3764 = !DILocation(line: 2960, column: 5, scope: !3759)
!3765 = !DILocation(line: 2962, column: 26, scope: !3631)
!3766 = !DILocation(line: 2962, column: 31, scope: !3631)
!3767 = !DILocation(line: 2962, column: 5, scope: !3631)
!3768 = !DILocation(line: 2963, column: 5, scope: !3631)
!3769 = !DILocation(line: 2965, column: 9, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 2965, column: 9)
!3771 = !DILocation(line: 2965, column: 16, scope: !3770)
!3772 = !DILocation(line: 2965, column: 20, scope: !3770)
!3773 = !DILocation(line: 2965, column: 9, scope: !3631)
!3774 = !DILocation(line: 2966, column: 10, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 2966, column: 10)
!3776 = distinct !DILexicalBlock(scope: !3770, file: !3, line: 2965, column: 35)
!3777 = !DILocation(line: 2966, column: 15, scope: !3775)
!3778 = !DILocation(line: 2966, column: 20, scope: !3775)
!3779 = !DILocation(line: 2966, column: 10, scope: !3776)
!3780 = !DILocation(line: 2967, column: 23, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3775, file: !3, line: 2966, column: 37)
!3782 = !DILocation(line: 2967, column: 28, scope: !3781)
!3783 = !DILocation(line: 2967, column: 7, scope: !3781)
!3784 = !DILocation(line: 2967, column: 12, scope: !3781)
!3785 = !DILocation(line: 2967, column: 21, scope: !3781)
!3786 = !DILocation(line: 2968, column: 7, scope: !3781)
!3787 = !DILocation(line: 2968, column: 12, scope: !3781)
!3788 = !DILocation(line: 2968, column: 17, scope: !3781)
!3789 = !DILocation(line: 2969, column: 6, scope: !3781)
!3790 = !DILocation(line: 2970, column: 5, scope: !3776)
!3791 = !DILocation(line: 2972, column: 18, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3770, file: !3, line: 2971, column: 10)
!3793 = !DILocation(line: 2972, column: 23, scope: !3792)
!3794 = !DILocation(line: 2972, column: 6, scope: !3792)
!3795 = !DILocation(line: 2972, column: 11, scope: !3792)
!3796 = !DILocation(line: 2972, column: 16, scope: !3792)
!3797 = !DILocation(line: 2975, column: 26, scope: !3631)
!3798 = !DILocation(line: 2975, column: 31, scope: !3631)
!3799 = !DILocation(line: 2975, column: 5, scope: !3631)
!3800 = !DILocation(line: 2976, column: 5, scope: !3631)
!3801 = !DILocation(line: 2978, column: 2, scope: !3627)
!3802 = !DILocation(line: 2980, column: 11, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 2979, column: 7)
!3804 = !DILocation(line: 2980, column: 18, scope: !3803)
!3805 = !DILocation(line: 2980, column: 3, scope: !3803)
!3806 = !DILocation(line: 2986, column: 5, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 2980, column: 24)
!3808 = !DILocation(line: 2988, column: 9, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 2988, column: 9)
!3810 = !DILocation(line: 2988, column: 14, scope: !3809)
!3811 = !DILocation(line: 2988, column: 19, scope: !3809)
!3812 = !DILocation(line: 2988, column: 9, scope: !3807)
!3813 = !DILocation(line: 2989, column: 30, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 2988, column: 36)
!3815 = !DILocation(line: 2989, column: 35, scope: !3814)
!3816 = !DILocation(line: 2989, column: 42, scope: !3814)
!3817 = !DILocation(line: 2989, column: 6, scope: !3814)
!3818 = !DILocation(line: 2990, column: 5, scope: !3814)
!3819 = !DILocation(line: 2992, column: 5, scope: !3807)
!3820 = !DILocation(line: 2996, column: 6, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3566, file: !3, line: 2996, column: 6)
!3822 = !DILocation(line: 2996, column: 6, scope: !3566)
!3823 = !DILocation(line: 2999, column: 27, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3821, file: !3, line: 2996, column: 18)
!3825 = !DILocation(line: 2999, column: 32, scope: !3824)
!3826 = !DILocation(line: 2999, column: 39, scope: !3824)
!3827 = !DILocation(line: 2999, column: 3, scope: !3824)
!3828 = !DILocation(line: 3000, column: 2, scope: !3824)
!3829 = !DILocation(line: 3003, column: 2, scope: !3566)
!3830 = !DILocation(line: 3004, column: 1, scope: !3566)
!3831 = distinct !DISubprogram(name: "knifetool_cancel", scope: !3, file: !3, line: 2761, type: !3832, scopeLine: 2762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!3832 = !DISubroutineType(types: !3833)
!3833 = !{null, !3487, !3489}
!3834 = !DILocalVariable(name: "C", arg: 1, scope: !3831, file: !3, line: 2761, type: !3487)
!3835 = !DILocation(line: 2761, column: 40, scope: !3831)
!3836 = !DILocalVariable(name: "op", arg: 2, scope: !3831, file: !3, line: 2761, type: !3489)
!3837 = !DILocation(line: 2761, column: 55, scope: !3831)
!3838 = !DILocation(line: 2764, column: 17, scope: !3831)
!3839 = !DILocation(line: 2764, column: 20, scope: !3831)
!3840 = !DILocation(line: 2764, column: 2, scope: !3831)
!3841 = !DILocation(line: 2765, column: 1, scope: !3831)
!3842 = distinct !DISubprogram(name: "EDBM_mesh_knife", scope: !3, file: !3, line: 3108, type: !3843, scopeLine: 3109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{null, !3487, !3845, !1053, !1053}
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkNode", file: !759, line: 48, baseType: !781)
!3847 = !DILocalVariable(name: "C", arg: 1, scope: !3842, file: !3, line: 3108, type: !3487)
!3848 = !DILocation(line: 3108, column: 32, scope: !3842)
!3849 = !DILocalVariable(name: "polys", arg: 2, scope: !3842, file: !3, line: 3108, type: !3845)
!3850 = !DILocation(line: 3108, column: 45, scope: !3842)
!3851 = !DILocalVariable(name: "use_tag", arg: 3, scope: !3842, file: !3, line: 3108, type: !1053)
!3852 = !DILocation(line: 3108, column: 57, scope: !3842)
!3853 = !DILocalVariable(name: "cut_through", arg: 4, scope: !3842, file: !3, line: 3108, type: !1053)
!3854 = !DILocation(line: 3108, column: 71, scope: !3842)
!3855 = !DILocalVariable(name: "kcd", scope: !3842, file: !3, line: 3110, type: !3512)
!3856 = !DILocation(line: 3110, column: 20, scope: !3842)
!3857 = !DILocation(line: 3112, column: 31, scope: !3842)
!3858 = !DILocation(line: 3112, column: 2, scope: !3842)
!3859 = !DILocalVariable(name: "only_select", scope: !3860, file: !3, line: 3116, type: !1165)
!3860 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 3115, column: 2)
!3861 = !DILocation(line: 3116, column: 14, scope: !3860)
!3862 = !DILocalVariable(name: "is_interactive", scope: !3860, file: !3, line: 3117, type: !1165)
!3863 = !DILocation(line: 3117, column: 14, scope: !3860)
!3864 = !DILocation(line: 3119, column: 9, scope: !3860)
!3865 = !DILocation(line: 3119, column: 7, scope: !3860)
!3866 = !DILocation(line: 3121, column: 18, scope: !3860)
!3867 = !DILocation(line: 3121, column: 21, scope: !3860)
!3868 = !DILocation(line: 3121, column: 39, scope: !3860)
!3869 = !DILocation(line: 3121, column: 3, scope: !3860)
!3870 = !DILocation(line: 3123, column: 3, scope: !3860)
!3871 = !DILocation(line: 3123, column: 8, scope: !3860)
!3872 = !DILocation(line: 3123, column: 29, scope: !3860)
!3873 = !DILocation(line: 3124, column: 3, scope: !3860)
!3874 = !DILocation(line: 3124, column: 8, scope: !3860)
!3875 = !DILocation(line: 3124, column: 29, scope: !3860)
!3876 = !DILocation(line: 3126, column: 7, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 3126, column: 7)
!3878 = !DILocation(line: 3126, column: 7, scope: !3860)
!3879 = !DILocation(line: 3127, column: 34, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3877, file: !3, line: 3126, column: 16)
!3881 = !DILocation(line: 3127, column: 39, scope: !3880)
!3882 = !DILocation(line: 3127, column: 43, scope: !3880)
!3883 = !DILocation(line: 3127, column: 4, scope: !3880)
!3884 = !DILocation(line: 3128, column: 3, scope: !3880)
!3885 = !DILocalVariable(name: "p", scope: !3886, file: !3, line: 3133, type: !3845)
!3886 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 3132, column: 2)
!3887 = !DILocation(line: 3133, column: 13, scope: !3886)
!3888 = !DILocation(line: 3133, column: 17, scope: !3886)
!3889 = !DILocation(line: 3135, column: 24, scope: !3886)
!3890 = !DILocation(line: 3135, column: 3, scope: !3886)
!3891 = !DILocation(line: 3137, column: 3, scope: !3886)
!3892 = !DILocation(line: 3137, column: 10, scope: !3886)
!3893 = !DILocalVariable(name: "mval_fl", scope: !3894, file: !3, line: 3138, type: !3895)
!3894 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 3137, column: 13)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !806, size: 64, elements: !374)
!3897 = !DILocation(line: 3138, column: 18, scope: !3894)
!3898 = !DILocation(line: 3138, column: 32, scope: !3894)
!3899 = !DILocation(line: 3138, column: 35, scope: !3894)
!3900 = !DILocalVariable(name: "mval_tot", scope: !3894, file: !3, line: 3139, type: !3901)
!3901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !35)
!3902 = !DILocation(line: 3139, column: 14, scope: !3894)
!3903 = !DILocation(line: 3139, column: 25, scope: !3894)
!3904 = !DILocation(line: 3139, column: 40, scope: !3894)
!3905 = !DILocation(line: 3139, column: 49, scope: !3894)
!3906 = !DILocalVariable(name: "i", scope: !3894, file: !3, line: 3140, type: !35)
!3907 = !DILocation(line: 3140, column: 8, scope: !3894)
!3908 = !DILocation(line: 3142, column: 11, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 3142, column: 4)
!3910 = !DILocation(line: 3142, column: 9, scope: !3909)
!3911 = !DILocation(line: 3142, column: 16, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 3142, column: 4)
!3913 = !DILocation(line: 3142, column: 20, scope: !3912)
!3914 = !DILocation(line: 3142, column: 18, scope: !3912)
!3915 = !DILocation(line: 3142, column: 4, scope: !3909)
!3916 = !DILocation(line: 3143, column: 27, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 3142, column: 35)
!3918 = !DILocation(line: 3143, column: 32, scope: !3917)
!3919 = !DILocation(line: 3143, column: 40, scope: !3917)
!3920 = !DILocation(line: 3143, column: 5, scope: !3917)
!3921 = !DILocation(line: 3144, column: 9, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 3144, column: 9)
!3923 = !DILocation(line: 3144, column: 11, scope: !3922)
!3924 = !DILocation(line: 3144, column: 9, scope: !3917)
!3925 = !DILocation(line: 3145, column: 22, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 3144, column: 17)
!3927 = !DILocation(line: 3145, column: 6, scope: !3926)
!3928 = !DILocation(line: 3146, column: 6, scope: !3926)
!3929 = !DILocation(line: 3146, column: 11, scope: !3926)
!3930 = !DILocation(line: 3146, column: 16, scope: !3926)
!3931 = !DILocation(line: 3147, column: 5, scope: !3926)
!3932 = !DILocation(line: 3149, column: 20, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 3148, column: 10)
!3934 = !DILocation(line: 3149, column: 6, scope: !3933)
!3935 = !DILocation(line: 3151, column: 4, scope: !3917)
!3936 = !DILocation(line: 3142, column: 31, scope: !3912)
!3937 = !DILocation(line: 3142, column: 4, scope: !3912)
!3938 = distinct !{!3938, !3915, !3939}
!3939 = !DILocation(line: 3151, column: 4, scope: !3909)
!3940 = !DILocation(line: 3152, column: 21, scope: !3894)
!3941 = !DILocation(line: 3152, column: 4, scope: !3894)
!3942 = !DILocation(line: 3153, column: 4, scope: !3894)
!3943 = !DILocation(line: 3153, column: 9, scope: !3894)
!3944 = !DILocation(line: 3153, column: 14, scope: !3894)
!3945 = !DILocation(line: 3154, column: 8, scope: !3894)
!3946 = !DILocation(line: 3154, column: 11, scope: !3894)
!3947 = !DILocation(line: 3154, column: 6, scope: !3894)
!3948 = distinct !{!3948, !3891, !3949}
!3949 = !DILocation(line: 3155, column: 3, scope: !3886)
!3950 = !DILocation(line: 3160, column: 23, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 3159, column: 2)
!3952 = !DILocation(line: 3160, column: 3, scope: !3951)
!3953 = !DILocation(line: 3163, column: 7, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3951, file: !3, line: 3163, column: 7)
!3955 = !DILocation(line: 3163, column: 7, scope: !3951)
!3956 = !DILocalVariable(name: "bm", scope: !3957, file: !3, line: 3164, type: !2780)
!3957 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 3163, column: 16)
!3958 = !DILocation(line: 3164, column: 11, scope: !3957)
!3959 = !DILocation(line: 3164, column: 16, scope: !3957)
!3960 = !DILocation(line: 3164, column: 21, scope: !3957)
!3961 = !DILocation(line: 3164, column: 25, scope: !3957)
!3962 = !DILocalVariable(name: "projmat", scope: !3957, file: !3, line: 3165, type: !638)
!3963 = !DILocation(line: 3165, column: 10, scope: !3957)
!3964 = !DILocalVariable(name: "e", scope: !3957, file: !3, line: 3167, type: !2726)
!3965 = !DILocation(line: 3167, column: 12, scope: !3957)
!3966 = !DILocalVariable(name: "iter", scope: !3957, file: !3, line: 3168, type: !3967)
!3967 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !2962, line: 186, baseType: !3968)
!3968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !2962, line: 164, size: 512, elements: !3969)
!3969 = !{!3970, !4047, !4048, !4049, !4050}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3968, file: !2962, line: 179, baseType: !3971, size: 320)
!3971 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3968, file: !2962, line: 166, size: 320, elements: !3972)
!3972 = !{!3973, !3985, !3991, !3999, !4007, !4013, !4019, !4025, !4029, !4035, !4041}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !3971, file: !2962, line: 167, baseType: !3974, size: 192)
!3974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !2962, line: 113, size: 192, elements: !3975)
!3975 = !{!3976}
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !3974, file: !2962, line: 114, baseType: !3977, size: 192)
!3977 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !2845, line: 80, baseType: !3978)
!3978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !2845, line: 76, size: 192, elements: !3979)
!3979 = !{!3980, !3981, !3984}
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3978, file: !2845, line: 77, baseType: !2843, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !3978, file: !2845, line: 78, baseType: !3982, size: 64, offset: 64)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !2845, line: 45, flags: DIFlagFwdDecl)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !3978, file: !2845, line: 79, baseType: !56, size: 32, offset: 128)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !3971, file: !2962, line: 169, baseType: !3986, size: 192)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !2962, line: 116, size: 192, elements: !3987)
!3987 = !{!3988, !3989, !3990}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3986, file: !2962, line: 117, baseType: !2665, size: 64)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3986, file: !2962, line: 118, baseType: !2726, size: 64, offset: 64)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3986, file: !2962, line: 118, baseType: !2726, size: 64, offset: 128)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !3971, file: !2962, line: 170, baseType: !3992, size: 320)
!3992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !2962, line: 120, size: 320, elements: !3993)
!3993 = !{!3994, !3995, !3996, !3997, !3998}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3992, file: !2962, line: 121, baseType: !2665, size: 64)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3992, file: !2962, line: 122, baseType: !2708, size: 64, offset: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3992, file: !2962, line: 122, baseType: !2708, size: 64, offset: 128)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3992, file: !2962, line: 123, baseType: !2726, size: 64, offset: 192)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3992, file: !2962, line: 123, baseType: !2726, size: 64, offset: 256)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !3971, file: !2962, line: 171, baseType: !4000, size: 320)
!4000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !2962, line: 125, size: 320, elements: !4001)
!4001 = !{!4002, !4003, !4004, !4005, !4006}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4000, file: !2962, line: 126, baseType: !2665, size: 64)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4000, file: !2962, line: 127, baseType: !2708, size: 64, offset: 64)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4000, file: !2962, line: 127, baseType: !2708, size: 64, offset: 128)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !4000, file: !2962, line: 128, baseType: !2726, size: 64, offset: 192)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !4000, file: !2962, line: 128, baseType: !2726, size: 64, offset: 256)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !3971, file: !2962, line: 172, baseType: !4008, size: 192)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !2962, line: 130, size: 192, elements: !4009)
!4009 = !{!4010, !4011, !4012}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !4008, file: !2962, line: 131, baseType: !2726, size: 64)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4008, file: !2962, line: 132, baseType: !2708, size: 64, offset: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4008, file: !2962, line: 132, baseType: !2708, size: 64, offset: 128)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !3971, file: !2962, line: 173, baseType: !4014, size: 192)
!4014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !2962, line: 134, size: 192, elements: !4015)
!4015 = !{!4016, !4017, !4018}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !4014, file: !2962, line: 135, baseType: !2708, size: 64)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4014, file: !2962, line: 136, baseType: !2708, size: 64, offset: 64)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4014, file: !2962, line: 136, baseType: !2708, size: 64, offset: 128)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !3971, file: !2962, line: 174, baseType: !4020, size: 192)
!4020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !2962, line: 138, size: 192, elements: !4021)
!4021 = !{!4022, !4023, !4024}
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !4020, file: !2962, line: 139, baseType: !2726, size: 64)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4020, file: !2962, line: 140, baseType: !2708, size: 64, offset: 64)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4020, file: !2962, line: 140, baseType: !2708, size: 64, offset: 128)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !3971, file: !2962, line: 175, baseType: !4026, size: 64)
!4026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !2962, line: 142, size: 64, elements: !4027)
!4027 = !{!4028}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !4026, file: !2962, line: 143, baseType: !2726, size: 64)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !3971, file: !2962, line: 176, baseType: !4030, size: 192)
!4030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !2962, line: 145, size: 192, elements: !4031)
!4031 = !{!4032, !4033, !4034}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !4030, file: !2962, line: 146, baseType: !2730, size: 64)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4030, file: !2962, line: 147, baseType: !2708, size: 64, offset: 64)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4030, file: !2962, line: 147, baseType: !2708, size: 64, offset: 128)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !3971, file: !2962, line: 177, baseType: !4036, size: 192)
!4036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !2962, line: 149, size: 192, elements: !4037)
!4037 = !{!4038, !4039, !4040}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !4036, file: !2962, line: 150, baseType: !2730, size: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4036, file: !2962, line: 151, baseType: !2708, size: 64, offset: 64)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4036, file: !2962, line: 151, baseType: !2708, size: 64, offset: 128)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !3971, file: !2962, line: 178, baseType: !4042, size: 192)
!4042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !2962, line: 153, size: 192, elements: !4043)
!4043 = !{!4044, !4045, !4046}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !4042, file: !2962, line: 154, baseType: !2730, size: 64)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4042, file: !2962, line: 155, baseType: !2708, size: 64, offset: 64)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4042, file: !2962, line: 155, baseType: !2708, size: 64, offset: 128)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !3968, file: !2962, line: 181, baseType: !3260, size: 64, offset: 320)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !3968, file: !2962, line: 182, baseType: !3261, size: 64, offset: 384)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3968, file: !2962, line: 184, baseType: !35, size: 32, offset: 448)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !3968, file: !2962, line: 185, baseType: !23, size: 8, offset: 480)
!4051 = !DILocation(line: 3168, column: 11, scope: !3957)
!4052 = !DILocalVariable(name: "keep_search", scope: !3957, file: !3, line: 3170, type: !1053)
!4053 = !DILocation(line: 3170, column: 9, scope: !3957)
!4054 = !DILocation(line: 3172, column: 33, scope: !3957)
!4055 = !DILocation(line: 3172, column: 38, scope: !3957)
!4056 = !DILocation(line: 3172, column: 42, scope: !3957)
!4057 = !DILocation(line: 3172, column: 54, scope: !3957)
!4058 = !DILocation(line: 3172, column: 59, scope: !3957)
!4059 = !DILocation(line: 3172, column: 63, scope: !3957)
!4060 = !DILocation(line: 3172, column: 4, scope: !3957)
!4061 = !DILocalVariable(name: "f", scope: !4062, file: !3, line: 3179, type: !2730)
!4062 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 3178, column: 4)
!4063 = !DILocation(line: 3179, column: 13, scope: !4062)
!4064 = !DILocation(line: 3180, column: 5, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 3180, column: 5)
!4066 = !DILocation(line: 3180, column: 5, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 3180, column: 5)
!4068 = !DILocation(line: 3181, column: 6, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 3180, column: 51)
!4070 = !DILocation(line: 3182, column: 6, scope: !4069)
!4071 = !DILocation(line: 3183, column: 5, scope: !4069)
!4072 = distinct !{!4072, !4064, !4073}
!4073 = !DILocation(line: 3183, column: 5, scope: !4065)
!4074 = !DILocation(line: 3187, column: 4, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 3187, column: 4)
!4076 = !DILocation(line: 3187, column: 4, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4075, file: !3, line: 3187, column: 4)
!4078 = !DILocation(line: 3189, column: 9, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 3189, column: 9)
!4080 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 3187, column: 50)
!4081 = !DILocation(line: 3189, column: 43, scope: !4079)
!4082 = !DILocation(line: 3189, column: 9, scope: !4080)
!4083 = !DILocalVariable(name: "f", scope: !4084, file: !3, line: 3190, type: !2730)
!4084 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 3189, column: 53)
!4085 = !DILocation(line: 3190, column: 14, scope: !4084)
!4086 = !DILocalVariable(name: "fiter", scope: !4084, file: !3, line: 3191, type: !3967)
!4087 = !DILocation(line: 3191, column: 13, scope: !4084)
!4088 = !DILocation(line: 3192, column: 6, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 3192, column: 6)
!4090 = !DILocation(line: 3192, column: 6, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 3192, column: 6)
!4092 = !DILocation(line: 3193, column: 38, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 3193, column: 11)
!4094 = distinct !DILexicalBlock(scope: !4091, file: !3, line: 3192, column: 52)
!4095 = !DILocation(line: 3193, column: 43, scope: !4093)
!4096 = !DILocation(line: 3193, column: 47, scope: !4093)
!4097 = !DILocation(line: 3193, column: 54, scope: !4093)
!4098 = !DILocation(line: 3193, column: 57, scope: !4093)
!4099 = !DILocation(line: 3193, column: 11, scope: !4093)
!4100 = !DILocation(line: 3193, column: 11, scope: !4094)
!4101 = !DILocation(line: 3194, column: 8, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 3193, column: 67)
!4103 = !DILocation(line: 3195, column: 7, scope: !4102)
!4104 = !DILocation(line: 3196, column: 6, scope: !4094)
!4105 = distinct !{!4105, !4088, !4106}
!4106 = !DILocation(line: 3196, column: 6, scope: !4089)
!4107 = !DILocation(line: 3197, column: 5, scope: !4084)
!4108 = !DILocation(line: 3198, column: 4, scope: !4080)
!4109 = distinct !{!4109, !4074, !4110}
!4110 = !DILocation(line: 3198, column: 4, scope: !4075)
!4111 = !DILocation(line: 3201, column: 4, scope: !3957)
!4112 = !DILocalVariable(name: "f", scope: !4113, file: !3, line: 3202, type: !2730)
!4113 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 3201, column: 7)
!4114 = !DILocation(line: 3202, column: 13, scope: !4113)
!4115 = !DILocation(line: 3203, column: 17, scope: !4113)
!4116 = !DILocation(line: 3204, column: 5, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4113, file: !3, line: 3204, column: 5)
!4118 = !DILocation(line: 3204, column: 5, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 3204, column: 5)
!4120 = !DILocation(line: 3205, column: 10, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 3205, column: 10)
!4122 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 3204, column: 51)
!4123 = !DILocation(line: 3205, column: 44, scope: !4121)
!4124 = !DILocation(line: 3205, column: 53, scope: !4121)
!4125 = !DILocation(line: 3205, column: 57, scope: !4121)
!4126 = !DILocation(line: 3205, column: 56, scope: !4121)
!4127 = !DILocation(line: 3205, column: 10, scope: !4122)
!4128 = !DILocalVariable(name: "l_first", scope: !4129, file: !3, line: 3207, type: !2708)
!4129 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 3205, column: 81)
!4130 = !DILocation(line: 3207, column: 15, scope: !4129)
!4131 = !DILocation(line: 3207, column: 25, scope: !4129)
!4132 = !DILocalVariable(name: "l_iter", scope: !4129, file: !3, line: 3208, type: !2708)
!4133 = !DILocation(line: 3208, column: 15, scope: !4129)
!4134 = !DILocation(line: 3208, column: 24, scope: !4129)
!4135 = !DILocalVariable(name: "found", scope: !4129, file: !3, line: 3209, type: !1053)
!4136 = !DILocation(line: 3209, column: 12, scope: !4129)
!4137 = !DILocation(line: 3211, column: 7, scope: !4129)
!4138 = !DILocation(line: 3212, column: 12, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 3212, column: 12)
!4140 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3211, column: 10)
!4141 = !DILocation(line: 3212, column: 54, scope: !4139)
!4142 = !DILocation(line: 3212, column: 12, scope: !4140)
!4143 = !DILocalVariable(name: "l_radial_iter", scope: !4144, file: !3, line: 3214, type: !2708)
!4144 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 3212, column: 64)
!4145 = !DILocation(line: 3214, column: 17, scope: !4144)
!4146 = !DILocation(line: 3214, column: 33, scope: !4144)
!4147 = !DILocation(line: 3214, column: 41, scope: !4144)
!4148 = !DILocation(line: 3215, column: 13, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 3215, column: 13)
!4150 = !DILocation(line: 3215, column: 30, scope: !4149)
!4151 = !DILocation(line: 3215, column: 27, scope: !4149)
!4152 = !DILocation(line: 3215, column: 13, scope: !4144)
!4153 = !DILocation(line: 3216, column: 10, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4149, file: !3, line: 3215, column: 38)
!4155 = !DILocation(line: 3217, column: 15, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 3217, column: 15)
!4157 = distinct !DILexicalBlock(scope: !4154, file: !3, line: 3216, column: 13)
!4158 = !DILocation(line: 3217, column: 15, scope: !4157)
!4159 = !DILocation(line: 3218, column: 18, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4156, file: !3, line: 3217, column: 65)
!4161 = !DILocation(line: 3219, column: 11, scope: !4160)
!4162 = !DILocation(line: 3220, column: 10, scope: !4157)
!4163 = !DILocation(line: 3220, column: 36, scope: !4154)
!4164 = !DILocation(line: 3220, column: 51, scope: !4154)
!4165 = !DILocation(line: 3220, column: 34, scope: !4154)
!4166 = !DILocation(line: 3220, column: 67, scope: !4154)
!4167 = !DILocation(line: 3220, column: 64, scope: !4154)
!4168 = !DILocation(line: 3220, column: 74, scope: !4154)
!4169 = !DILocation(line: 3220, column: 78, scope: !4154)
!4170 = !DILocation(line: 3220, column: 84, scope: !4154)
!4171 = !DILocation(line: 0, scope: !4154)
!4172 = distinct !{!4172, !4153, !4173}
!4173 = !DILocation(line: 3220, column: 93, scope: !4154)
!4174 = !DILocation(line: 3221, column: 9, scope: !4154)
!4175 = !DILocation(line: 3222, column: 8, scope: !4144)
!4176 = !DILocation(line: 3223, column: 7, scope: !4140)
!4177 = !DILocation(line: 3223, column: 26, scope: !4129)
!4178 = !DILocation(line: 3223, column: 34, scope: !4129)
!4179 = !DILocation(line: 3223, column: 24, scope: !4129)
!4180 = !DILocation(line: 3223, column: 43, scope: !4129)
!4181 = !DILocation(line: 3223, column: 40, scope: !4129)
!4182 = !DILocation(line: 3223, column: 51, scope: !4129)
!4183 = !DILocation(line: 3223, column: 55, scope: !4129)
!4184 = !DILocation(line: 3223, column: 61, scope: !4129)
!4185 = !DILocation(line: 0, scope: !4129)
!4186 = distinct !{!4186, !4137, !4187}
!4187 = !DILocation(line: 3223, column: 70, scope: !4129)
!4188 = !DILocation(line: 3225, column: 11, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 3225, column: 11)
!4190 = !DILocation(line: 3225, column: 11, scope: !4129)
!4191 = !DILocation(line: 3226, column: 39, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !3, line: 3226, column: 12)
!4193 = distinct !DILexicalBlock(scope: !4189, file: !3, line: 3225, column: 18)
!4194 = !DILocation(line: 3226, column: 44, scope: !4192)
!4195 = !DILocation(line: 3226, column: 48, scope: !4192)
!4196 = !DILocation(line: 3226, column: 55, scope: !4192)
!4197 = !DILocation(line: 3226, column: 58, scope: !4192)
!4198 = !DILocation(line: 3226, column: 12, scope: !4192)
!4199 = !DILocation(line: 3226, column: 12, scope: !4193)
!4200 = !DILocation(line: 3227, column: 9, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 3226, column: 68)
!4202 = !DILocation(line: 3228, column: 21, scope: !4201)
!4203 = !DILocation(line: 3229, column: 8, scope: !4201)
!4204 = !DILocation(line: 3232, column: 9, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 3230, column: 13)
!4206 = !DILocation(line: 3234, column: 7, scope: !4193)
!4207 = !DILocation(line: 3235, column: 6, scope: !4129)
!4208 = !DILocation(line: 3236, column: 5, scope: !4122)
!4209 = distinct !{!4209, !4116, !4210}
!4210 = !DILocation(line: 3236, column: 5, scope: !4117)
!4211 = !DILocation(line: 3237, column: 4, scope: !4113)
!4212 = !DILocation(line: 3237, column: 13, scope: !3957)
!4213 = distinct !{!4213, !4111, !4214}
!4214 = !DILocation(line: 3237, column: 24, scope: !3957)
!4215 = !DILocation(line: 3243, column: 3, scope: !3957)
!4216 = !DILocation(line: 3245, column: 21, scope: !3951)
!4217 = !DILocation(line: 3245, column: 24, scope: !3951)
!4218 = !DILocation(line: 3245, column: 3, scope: !3951)
!4219 = !DILocation(line: 3246, column: 7, scope: !3951)
!4220 = !DILocation(line: 3248, column: 1, scope: !3842)
!4221 = distinct !DISubprogram(name: "knifetool_init", scope: !3, file: !3, line: 2703, type: !4222, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{null, !3487, !3512, !1165, !1165, !1165}
!4224 = !DILocalVariable(name: "C", arg: 1, scope: !4221, file: !3, line: 2703, type: !3487)
!4225 = !DILocation(line: 2703, column: 38, scope: !4221)
!4226 = !DILocalVariable(name: "kcd", arg: 2, scope: !4221, file: !3, line: 2703, type: !3512)
!4227 = !DILocation(line: 2703, column: 59, scope: !4221)
!4228 = !DILocalVariable(name: "only_select", arg: 3, scope: !4221, file: !3, line: 2704, type: !1165)
!4229 = !DILocation(line: 2704, column: 39, scope: !4221)
!4230 = !DILocalVariable(name: "cut_through", arg: 4, scope: !4221, file: !3, line: 2704, type: !1165)
!4231 = !DILocation(line: 2704, column: 63, scope: !4221)
!4232 = !DILocalVariable(name: "is_interactive", arg: 5, scope: !4221, file: !3, line: 2704, type: !1165)
!4233 = !DILocation(line: 2704, column: 87, scope: !4221)
!4234 = !DILocalVariable(name: "scene", scope: !4221, file: !3, line: 2706, type: !4235)
!4235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4236, size: 64)
!4236 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !482, line: 1299, baseType: !481)
!4237 = !DILocation(line: 2706, column: 9, scope: !4221)
!4238 = !DILocation(line: 2706, column: 32, scope: !4221)
!4239 = !DILocation(line: 2706, column: 17, scope: !4221)
!4240 = !DILocalVariable(name: "obedit", scope: !4221, file: !3, line: 2707, type: !2824)
!4241 = !DILocation(line: 2707, column: 10, scope: !4221)
!4242 = !DILocation(line: 2707, column: 40, scope: !4221)
!4243 = !DILocation(line: 2707, column: 19, scope: !4221)
!4244 = !DILocation(line: 2710, column: 12, scope: !4221)
!4245 = !DILocation(line: 2710, column: 2, scope: !4221)
!4246 = !DILocation(line: 2710, column: 7, scope: !4221)
!4247 = !DILocation(line: 2710, column: 10, scope: !4221)
!4248 = !DILocation(line: 2711, column: 26, scope: !4221)
!4249 = !DILocation(line: 2711, column: 12, scope: !4221)
!4250 = !DILocation(line: 2711, column: 2, scope: !4221)
!4251 = !DILocation(line: 2711, column: 7, scope: !4221)
!4252 = !DILocation(line: 2711, column: 10, scope: !4221)
!4253 = !DILocation(line: 2713, column: 23, scope: !4221)
!4254 = !DILocation(line: 2713, column: 27, scope: !4221)
!4255 = !DILocation(line: 2713, column: 32, scope: !4221)
!4256 = !DILocation(line: 2713, column: 2, scope: !4221)
!4257 = !DILocation(line: 2715, column: 37, scope: !4221)
!4258 = !DILocation(line: 2715, column: 42, scope: !4221)
!4259 = !DILocation(line: 2715, column: 12, scope: !4221)
!4260 = !DILocation(line: 2715, column: 2, scope: !4221)
!4261 = !DILocation(line: 2715, column: 7, scope: !4221)
!4262 = !DILocation(line: 2715, column: 10, scope: !4221)
!4263 = !DILocation(line: 2717, column: 28, scope: !4221)
!4264 = !DILocation(line: 2717, column: 33, scope: !4221)
!4265 = !DILocation(line: 2717, column: 37, scope: !4221)
!4266 = !DILocation(line: 2717, column: 2, scope: !4221)
!4267 = !DILocation(line: 2719, column: 64, scope: !4221)
!4268 = !DILocation(line: 2719, column: 69, scope: !4221)
!4269 = !DILocation(line: 2719, column: 73, scope: !4221)
!4270 = !DILocation(line: 2719, column: 37, scope: !4221)
!4271 = !DILocation(line: 2719, column: 2, scope: !4221)
!4272 = !DILocation(line: 2719, column: 7, scope: !4221)
!4273 = !DILocation(line: 2719, column: 15, scope: !4221)
!4274 = !DILocation(line: 2721, column: 43, scope: !4221)
!4275 = !DILocation(line: 2721, column: 48, scope: !4221)
!4276 = !DILocation(line: 2723, column: 44, scope: !4221)
!4277 = !DILocation(line: 2722, column: 61, scope: !4221)
!4278 = !DILocation(line: 2724, column: 43, scope: !4221)
!4279 = !DILocation(line: 2724, column: 48, scope: !4221)
!4280 = !DILocation(line: 2721, column: 15, scope: !4221)
!4281 = !DILocation(line: 2721, column: 2, scope: !4221)
!4282 = !DILocation(line: 2721, column: 7, scope: !4221)
!4283 = !DILocation(line: 2721, column: 13, scope: !4221)
!4284 = !DILocation(line: 2726, column: 15, scope: !4221)
!4285 = !DILocation(line: 2726, column: 2, scope: !4221)
!4286 = !DILocation(line: 2726, column: 7, scope: !4221)
!4287 = !DILocation(line: 2726, column: 13, scope: !4221)
!4288 = !DILocation(line: 2727, column: 2, scope: !4221)
!4289 = !DILocation(line: 2727, column: 7, scope: !4221)
!4290 = !DILocation(line: 2727, column: 15, scope: !4221)
!4291 = !DILocation(line: 2728, column: 2, scope: !4221)
!4292 = !DILocation(line: 2728, column: 7, scope: !4221)
!4293 = !DILocation(line: 2728, column: 15, scope: !4221)
!4294 = !DILocation(line: 2730, column: 23, scope: !4221)
!4295 = !DILocation(line: 2730, column: 2, scope: !4221)
!4296 = !DILocation(line: 2732, column: 23, scope: !4221)
!4297 = !DILocation(line: 2732, column: 28, scope: !4221)
!4298 = !DILocation(line: 2732, column: 2, scope: !4221)
!4299 = !DILocation(line: 2734, column: 14, scope: !4221)
!4300 = !DILocation(line: 2734, column: 2, scope: !4221)
!4301 = !DILocation(line: 2734, column: 7, scope: !4221)
!4302 = !DILocation(line: 2734, column: 12, scope: !4221)
!4303 = !DILocation(line: 2735, column: 16, scope: !4221)
!4304 = !DILocation(line: 2735, column: 2, scope: !4221)
!4305 = !DILocation(line: 2735, column: 7, scope: !4221)
!4306 = !DILocation(line: 2735, column: 14, scope: !4221)
!4307 = !DILocation(line: 2736, column: 16, scope: !4221)
!4308 = !DILocation(line: 2736, column: 2, scope: !4221)
!4309 = !DILocation(line: 2736, column: 7, scope: !4221)
!4310 = !DILocation(line: 2736, column: 14, scope: !4221)
!4311 = !DILocation(line: 2738, column: 21, scope: !4221)
!4312 = !DILocation(line: 2738, column: 2, scope: !4221)
!4313 = !DILocation(line: 2738, column: 7, scope: !4221)
!4314 = !DILocation(line: 2738, column: 19, scope: !4221)
!4315 = !DILocation(line: 2739, column: 21, scope: !4221)
!4316 = !DILocation(line: 2739, column: 2, scope: !4221)
!4317 = !DILocation(line: 2739, column: 7, scope: !4221)
!4318 = !DILocation(line: 2739, column: 19, scope: !4221)
!4319 = !DILocation(line: 2740, column: 22, scope: !4221)
!4320 = !DILocation(line: 2740, column: 2, scope: !4221)
!4321 = !DILocation(line: 2740, column: 7, scope: !4221)
!4322 = !DILocation(line: 2740, column: 20, scope: !4221)
!4323 = !DILocation(line: 2741, column: 20, scope: !4221)
!4324 = !DILocation(line: 2741, column: 2, scope: !4221)
!4325 = !DILocation(line: 2741, column: 7, scope: !4221)
!4326 = !DILocation(line: 2741, column: 18, scope: !4221)
!4327 = !DILocation(line: 2744, column: 24, scope: !4221)
!4328 = !DILocation(line: 2744, column: 2, scope: !4221)
!4329 = !DILocation(line: 2744, column: 7, scope: !4221)
!4330 = !DILocation(line: 2744, column: 22, scope: !4221)
!4331 = !DILocation(line: 2745, column: 21, scope: !4221)
!4332 = !DILocation(line: 2745, column: 2, scope: !4221)
!4333 = !DILocation(line: 2745, column: 7, scope: !4221)
!4334 = !DILocation(line: 2745, column: 19, scope: !4221)
!4335 = !DILocation(line: 2746, column: 21, scope: !4221)
!4336 = !DILocation(line: 2746, column: 2, scope: !4221)
!4337 = !DILocation(line: 2746, column: 7, scope: !4221)
!4338 = !DILocation(line: 2746, column: 19, scope: !4221)
!4339 = !DILocation(line: 2749, column: 24, scope: !4221)
!4340 = !DILocation(line: 2749, column: 29, scope: !4221)
!4341 = !DILocation(line: 2749, column: 33, scope: !4221)
!4342 = !DILocation(line: 2749, column: 44, scope: !4221)
!4343 = !DILocation(line: 2749, column: 23, scope: !4221)
!4344 = !DILocation(line: 2749, column: 2, scope: !4221)
!4345 = !DILocation(line: 2749, column: 7, scope: !4221)
!4346 = !DILocation(line: 2749, column: 21, scope: !4221)
!4347 = !DILocation(line: 2751, column: 24, scope: !4221)
!4348 = !DILocation(line: 2751, column: 29, scope: !4221)
!4349 = !DILocation(line: 2751, column: 2, scope: !4221)
!4350 = !DILocation(line: 2752, column: 24, scope: !4221)
!4351 = !DILocation(line: 2752, column: 29, scope: !4221)
!4352 = !DILocation(line: 2752, column: 2, scope: !4221)
!4353 = !DILocation(line: 2754, column: 6, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 2754, column: 6)
!4355 = !DILocation(line: 2754, column: 6, scope: !4221)
!4356 = !DILocation(line: 2755, column: 49, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 2754, column: 22)
!4358 = !DILocation(line: 2755, column: 54, scope: !4357)
!4359 = !DILocation(line: 2755, column: 58, scope: !4357)
!4360 = !DILocation(line: 2755, column: 80, scope: !4357)
!4361 = !DILocation(line: 2755, column: 22, scope: !4357)
!4362 = !DILocation(line: 2755, column: 3, scope: !4357)
!4363 = !DILocation(line: 2755, column: 8, scope: !4357)
!4364 = !DILocation(line: 2755, column: 20, scope: !4357)
!4365 = !DILocation(line: 2757, column: 22, scope: !4357)
!4366 = !DILocation(line: 2757, column: 27, scope: !4357)
!4367 = !DILocation(line: 2757, column: 3, scope: !4357)
!4368 = !DILocation(line: 2758, column: 2, scope: !4357)
!4369 = !DILocation(line: 2759, column: 1, scope: !4221)
!4370 = distinct !DISubprogram(name: "knife_recalc_projmat", scope: !3, file: !3, line: 2627, type: !4371, scopeLine: 2628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4371 = !DISubroutineType(types: !4372)
!4372 = !{null, !3512}
!4373 = !DILocalVariable(name: "kcd", arg: 1, scope: !4370, file: !3, line: 2627, type: !3512)
!4374 = !DILocation(line: 2627, column: 52, scope: !4370)
!4375 = !DILocation(line: 2629, column: 15, scope: !4370)
!4376 = !DILocation(line: 2629, column: 20, scope: !4370)
!4377 = !DILocation(line: 2629, column: 24, scope: !4370)
!4378 = !DILocation(line: 2629, column: 30, scope: !4370)
!4379 = !DILocation(line: 2629, column: 35, scope: !4370)
!4380 = !DILocation(line: 2629, column: 39, scope: !4370)
!4381 = !DILocation(line: 2629, column: 2, scope: !4370)
!4382 = !DILocation(line: 2630, column: 31, scope: !4370)
!4383 = !DILocation(line: 2630, column: 36, scope: !4370)
!4384 = !DILocation(line: 2630, column: 40, scope: !4370)
!4385 = !DILocation(line: 2630, column: 52, scope: !4370)
!4386 = !DILocation(line: 2630, column: 57, scope: !4370)
!4387 = !DILocation(line: 2630, column: 61, scope: !4370)
!4388 = !DILocation(line: 2630, column: 66, scope: !4370)
!4389 = !DILocation(line: 2630, column: 2, scope: !4370)
!4390 = !DILocation(line: 2631, column: 15, scope: !4370)
!4391 = !DILocation(line: 2631, column: 20, scope: !4370)
!4392 = !DILocation(line: 2631, column: 33, scope: !4370)
!4393 = !DILocation(line: 2631, column: 38, scope: !4370)
!4394 = !DILocation(line: 2631, column: 2, scope: !4370)
!4395 = !DILocation(line: 2633, column: 13, scope: !4370)
!4396 = !DILocation(line: 2633, column: 18, scope: !4370)
!4397 = !DILocation(line: 2633, column: 30, scope: !4370)
!4398 = !DILocation(line: 2633, column: 35, scope: !4370)
!4399 = !DILocation(line: 2633, column: 38, scope: !4370)
!4400 = !DILocation(line: 2633, column: 44, scope: !4370)
!4401 = !DILocation(line: 2633, column: 2, scope: !4370)
!4402 = !DILocation(line: 2634, column: 17, scope: !4370)
!4403 = !DILocation(line: 2634, column: 22, scope: !4370)
!4404 = !DILocation(line: 2634, column: 26, scope: !4370)
!4405 = !DILocation(line: 2634, column: 32, scope: !4370)
!4406 = !DILocation(line: 2634, column: 37, scope: !4370)
!4407 = !DILocation(line: 2634, column: 2, scope: !4370)
!4408 = !DILocation(line: 2635, column: 15, scope: !4370)
!4409 = !DILocation(line: 2635, column: 20, scope: !4370)
!4410 = !DILocation(line: 2635, column: 2, scope: !4370)
!4411 = !DILocation(line: 2637, column: 43, scope: !4370)
!4412 = !DILocation(line: 2637, column: 48, scope: !4370)
!4413 = !DILocation(line: 2637, column: 51, scope: !4370)
!4414 = !DILocation(line: 2637, column: 56, scope: !4370)
!4415 = !DILocation(line: 2637, column: 61, scope: !4370)
!4416 = !DILocation(line: 2637, column: 64, scope: !4370)
!4417 = !DILocation(line: 2638, column: 44, scope: !4370)
!4418 = !DILocation(line: 2638, column: 49, scope: !4370)
!4419 = !DILocation(line: 2638, column: 59, scope: !4370)
!4420 = !DILocation(line: 2638, column: 64, scope: !4370)
!4421 = !DILocation(line: 2637, column: 18, scope: !4370)
!4422 = !DILocation(line: 2637, column: 2, scope: !4370)
!4423 = !DILocation(line: 2637, column: 7, scope: !4370)
!4424 = !DILocation(line: 2637, column: 16, scope: !4370)
!4425 = !DILocation(line: 2639, column: 1, scope: !4370)
!4426 = distinct !DISubprogram(name: "knifetool_update_mval", scope: !3, file: !3, line: 2686, type: !4427, scopeLine: 2687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{null, !3512, !997}
!4429 = !DILocalVariable(name: "kcd", arg: 1, scope: !4426, file: !3, line: 2686, type: !3512)
!4430 = !DILocation(line: 2686, column: 53, scope: !4426)
!4431 = !DILocalVariable(name: "mval", arg: 2, scope: !4426, file: !3, line: 2686, type: !997)
!4432 = !DILocation(line: 2686, column: 70, scope: !4426)
!4433 = !DILocation(line: 2688, column: 23, scope: !4426)
!4434 = !DILocation(line: 2688, column: 2, scope: !4426)
!4435 = !DILocation(line: 2689, column: 13, scope: !4426)
!4436 = !DILocation(line: 2689, column: 18, scope: !4426)
!4437 = !DILocation(line: 2689, column: 24, scope: !4426)
!4438 = !DILocation(line: 2689, column: 2, scope: !4426)
!4439 = !DILocation(line: 2691, column: 26, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 2691, column: 6)
!4441 = !DILocation(line: 2691, column: 6, scope: !4440)
!4442 = !DILocation(line: 2691, column: 6, scope: !4426)
!4443 = !DILocation(line: 2692, column: 24, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 2691, column: 32)
!4445 = !DILocation(line: 2692, column: 29, scope: !4444)
!4446 = !DILocation(line: 2692, column: 3, scope: !4444)
!4447 = !DILocation(line: 2693, column: 2, scope: !4444)
!4448 = !DILocation(line: 2694, column: 1, scope: !4426)
!4449 = distinct !DISubprogram(name: "knife_start_cut", scope: !3, file: !3, line: 467, type: !4371, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4450 = !DILocalVariable(name: "kcd", arg: 1, scope: !4449, file: !3, line: 467, type: !3512)
!4451 = !DILocation(line: 467, column: 47, scope: !4449)
!4452 = !DILocation(line: 469, column: 2, scope: !4449)
!4453 = !DILocation(line: 469, column: 7, scope: !4449)
!4454 = !DILocation(line: 469, column: 14, scope: !4449)
!4455 = !DILocation(line: 469, column: 19, scope: !4449)
!4456 = !DILocation(line: 470, column: 2, scope: !4449)
!4457 = !DILocation(line: 470, column: 7, scope: !4449)
!4458 = !DILocation(line: 470, column: 12, scope: !4449)
!4459 = !DILocation(line: 470, column: 21, scope: !4449)
!4460 = !DILocation(line: 472, column: 6, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 472, column: 6)
!4462 = !DILocation(line: 472, column: 11, scope: !4461)
!4463 = !DILocation(line: 472, column: 16, scope: !4461)
!4464 = !DILocation(line: 472, column: 21, scope: !4461)
!4465 = !DILocation(line: 472, column: 29, scope: !4461)
!4466 = !DILocation(line: 472, column: 32, scope: !4461)
!4467 = !DILocation(line: 472, column: 37, scope: !4461)
!4468 = !DILocation(line: 472, column: 42, scope: !4461)
!4469 = !DILocation(line: 472, column: 47, scope: !4461)
!4470 = !DILocation(line: 472, column: 6, scope: !4449)
!4471 = !DILocalVariable(name: "origin", scope: !4472, file: !3, line: 473, type: !555)
!4472 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 472, column: 56)
!4473 = !DILocation(line: 473, column: 9, scope: !4472)
!4474 = !DILocalVariable(name: "origin_ofs", scope: !4472, file: !3, line: 473, type: !555)
!4475 = !DILocation(line: 473, column: 20, scope: !4472)
!4476 = !DILocalVariable(name: "ofs_local", scope: !4472, file: !3, line: 474, type: !555)
!4477 = !DILocation(line: 474, column: 9, scope: !4472)
!4478 = !DILocation(line: 476, column: 16, scope: !4472)
!4479 = !DILocation(line: 476, column: 27, scope: !4472)
!4480 = !DILocation(line: 476, column: 32, scope: !4472)
!4481 = !DILocation(line: 476, column: 35, scope: !4472)
!4482 = !DILocation(line: 476, column: 41, scope: !4472)
!4483 = !DILocation(line: 476, column: 3, scope: !4472)
!4484 = !DILocation(line: 477, column: 16, scope: !4472)
!4485 = !DILocation(line: 477, column: 21, scope: !4472)
!4486 = !DILocation(line: 477, column: 25, scope: !4472)
!4487 = !DILocation(line: 477, column: 31, scope: !4472)
!4488 = !DILocation(line: 477, column: 36, scope: !4472)
!4489 = !DILocation(line: 477, column: 40, scope: !4472)
!4490 = !DILocation(line: 477, column: 3, scope: !4472)
!4491 = !DILocation(line: 478, column: 13, scope: !4472)
!4492 = !DILocation(line: 478, column: 18, scope: !4472)
!4493 = !DILocation(line: 478, column: 22, scope: !4472)
!4494 = !DILocation(line: 478, column: 28, scope: !4472)
!4495 = !DILocation(line: 478, column: 3, scope: !4472)
!4496 = !DILocation(line: 480, column: 27, scope: !4472)
!4497 = !DILocation(line: 480, column: 32, scope: !4472)
!4498 = !DILocation(line: 480, column: 37, scope: !4472)
!4499 = !DILocation(line: 480, column: 42, scope: !4472)
!4500 = !DILocation(line: 480, column: 54, scope: !4472)
!4501 = !DILocation(line: 480, column: 62, scope: !4472)
!4502 = !DILocation(line: 480, column: 3, scope: !4472)
!4503 = !DILocation(line: 482, column: 28, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 482, column: 7)
!4505 = !DILocation(line: 482, column: 33, scope: !4504)
!4506 = !DILocation(line: 482, column: 38, scope: !4504)
!4507 = !DILocation(line: 482, column: 44, scope: !4504)
!4508 = !DILocation(line: 482, column: 52, scope: !4504)
!4509 = !DILocation(line: 482, column: 64, scope: !4504)
!4510 = !DILocation(line: 482, column: 75, scope: !4504)
!4511 = !DILocation(line: 482, column: 80, scope: !4504)
!4512 = !DILocation(line: 482, column: 8, scope: !4504)
!4513 = !DILocation(line: 482, column: 7, scope: !4472)
!4514 = !DILocation(line: 483, column: 12, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4504, file: !3, line: 482, column: 93)
!4516 = !DILocation(line: 483, column: 17, scope: !4515)
!4517 = !DILocation(line: 483, column: 22, scope: !4515)
!4518 = !DILocation(line: 483, column: 4, scope: !4515)
!4519 = !DILocation(line: 484, column: 3, scope: !4515)
!4520 = !DILocation(line: 486, column: 14, scope: !4472)
!4521 = !DILocation(line: 486, column: 19, scope: !4472)
!4522 = !DILocation(line: 486, column: 24, scope: !4472)
!4523 = !DILocation(line: 486, column: 28, scope: !4472)
!4524 = !DILocation(line: 486, column: 33, scope: !4472)
!4525 = !DILocation(line: 486, column: 38, scope: !4472)
!4526 = !DILocation(line: 486, column: 3, scope: !4472)
!4527 = !DILocation(line: 487, column: 14, scope: !4472)
!4528 = !DILocation(line: 487, column: 19, scope: !4472)
!4529 = !DILocation(line: 487, column: 24, scope: !4472)
!4530 = !DILocation(line: 487, column: 30, scope: !4472)
!4531 = !DILocation(line: 487, column: 35, scope: !4472)
!4532 = !DILocation(line: 487, column: 40, scope: !4472)
!4533 = !DILocation(line: 487, column: 3, scope: !4472)
!4534 = !DILocation(line: 488, column: 14, scope: !4472)
!4535 = !DILocation(line: 488, column: 19, scope: !4472)
!4536 = !DILocation(line: 488, column: 24, scope: !4472)
!4537 = !DILocation(line: 488, column: 28, scope: !4472)
!4538 = !DILocation(line: 488, column: 33, scope: !4472)
!4539 = !DILocation(line: 488, column: 38, scope: !4472)
!4540 = !DILocation(line: 488, column: 3, scope: !4472)
!4541 = !DILocation(line: 489, column: 2, scope: !4472)
!4542 = !DILocation(line: 490, column: 1, scope: !4449)
!4543 = distinct !DISubprogram(name: "knife_add_cut", scope: !3, file: !3, line: 762, type: !4371, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4544 = !DILocalVariable(name: "kcd", arg: 1, scope: !4543, file: !3, line: 762, type: !3512)
!4545 = !DILocation(line: 762, column: 45, scope: !4543)
!4546 = !DILocalVariable(name: "i", scope: !4543, file: !3, line: 764, type: !35)
!4547 = !DILocation(line: 764, column: 6, scope: !4543)
!4548 = !DILocalVariable(name: "lh", scope: !4543, file: !3, line: 765, type: !2850)
!4549 = !DILocation(line: 765, column: 16, scope: !4543)
!4550 = !DILocalVariable(name: "facehits", scope: !4543, file: !3, line: 766, type: !2771)
!4551 = !DILocation(line: 766, column: 9, scope: !4543)
!4552 = !DILocalVariable(name: "f", scope: !4543, file: !3, line: 767, type: !2730)
!4553 = !DILocation(line: 767, column: 10, scope: !4543)
!4554 = !DILocalVariable(name: "r", scope: !4543, file: !3, line: 768, type: !3251)
!4555 = !DILocation(line: 768, column: 7, scope: !4543)
!4556 = !DILocalVariable(name: "giter", scope: !4543, file: !3, line: 769, type: !4557)
!4557 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashIterator", file: !548, line: 54, baseType: !4558)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GHashIterator", file: !548, line: 50, size: 192, elements: !4559)
!4559 = !{!4560, !4561, !4564}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "gh", scope: !4558, file: !548, line: 51, baseType: !2771, size: 64)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !4558, file: !548, line: 52, baseType: !4562, size: 64, offset: 64)
!4562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4563, size: 64)
!4563 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", file: !548, line: 52, flags: DIFlagFwdDecl)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !4558, file: !548, line: 53, baseType: !56, size: 32, offset: 128)
!4565 = !DILocation(line: 769, column: 16, scope: !4543)
!4566 = !DILocalVariable(name: "lst", scope: !4543, file: !3, line: 770, type: !1227)
!4567 = !DILocation(line: 770, column: 12, scope: !4543)
!4568 = !DILocation(line: 772, column: 27, scope: !4543)
!4569 = !DILocation(line: 772, column: 2, scope: !4543)
!4570 = !DILocation(line: 773, column: 6, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 773, column: 6)
!4572 = !DILocation(line: 773, column: 11, scope: !4571)
!4573 = !DILocation(line: 773, column: 22, scope: !4571)
!4574 = !DILocation(line: 773, column: 6, scope: !4543)
!4575 = !DILocation(line: 774, column: 3, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 773, column: 28)
!4577 = !DILocation(line: 774, column: 8, scope: !4576)
!4578 = !DILocation(line: 774, column: 15, scope: !4576)
!4579 = !DILocation(line: 774, column: 20, scope: !4576)
!4580 = !DILocation(line: 775, column: 3, scope: !4576)
!4581 = !DILocation(line: 779, column: 13, scope: !4543)
!4582 = !DILocation(line: 779, column: 11, scope: !4543)
!4583 = !DILocation(line: 780, column: 9, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 780, column: 2)
!4585 = !DILocation(line: 780, column: 7, scope: !4584)
!4586 = !DILocation(line: 780, column: 14, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 780, column: 2)
!4588 = !DILocation(line: 780, column: 18, scope: !4587)
!4589 = !DILocation(line: 780, column: 23, scope: !4587)
!4590 = !DILocation(line: 780, column: 16, scope: !4587)
!4591 = !DILocation(line: 780, column: 2, scope: !4584)
!4592 = !DILocation(line: 781, column: 9, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 780, column: 40)
!4594 = !DILocation(line: 781, column: 14, scope: !4593)
!4595 = !DILocation(line: 781, column: 23, scope: !4593)
!4596 = !DILocation(line: 781, column: 6, scope: !4593)
!4597 = !DILocation(line: 782, column: 7, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 782, column: 7)
!4599 = !DILocation(line: 782, column: 11, scope: !4598)
!4600 = !DILocation(line: 782, column: 7, scope: !4593)
!4601 = !DILocation(line: 783, column: 24, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 782, column: 14)
!4603 = !DILocation(line: 783, column: 29, scope: !4602)
!4604 = !DILocation(line: 783, column: 39, scope: !4602)
!4605 = !DILocation(line: 783, column: 43, scope: !4602)
!4606 = !DILocation(line: 783, column: 46, scope: !4602)
!4607 = !DILocation(line: 783, column: 4, scope: !4602)
!4608 = !DILocation(line: 784, column: 3, scope: !4602)
!4609 = !DILocation(line: 785, column: 7, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 785, column: 7)
!4611 = !DILocation(line: 785, column: 11, scope: !4610)
!4612 = !DILocation(line: 785, column: 7, scope: !4593)
!4613 = !DILocation(line: 786, column: 13, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 786, column: 4)
!4615 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 785, column: 14)
!4616 = !DILocation(line: 786, column: 17, scope: !4614)
!4617 = !DILocation(line: 786, column: 20, scope: !4614)
!4618 = !DILocation(line: 786, column: 26, scope: !4614)
!4619 = !DILocation(line: 786, column: 11, scope: !4614)
!4620 = !DILocation(line: 786, column: 9, scope: !4614)
!4621 = !DILocation(line: 786, column: 33, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 786, column: 4)
!4623 = !DILocation(line: 786, column: 4, scope: !4614)
!4624 = !DILocation(line: 787, column: 25, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 786, column: 49)
!4626 = !DILocation(line: 787, column: 30, scope: !4625)
!4627 = !DILocation(line: 787, column: 40, scope: !4625)
!4628 = !DILocation(line: 787, column: 43, scope: !4625)
!4629 = !DILocation(line: 787, column: 48, scope: !4625)
!4630 = !DILocation(line: 787, column: 5, scope: !4625)
!4631 = !DILocation(line: 788, column: 4, scope: !4625)
!4632 = !DILocation(line: 786, column: 40, scope: !4622)
!4633 = !DILocation(line: 786, column: 43, scope: !4622)
!4634 = !DILocation(line: 786, column: 38, scope: !4622)
!4635 = !DILocation(line: 786, column: 4, scope: !4622)
!4636 = distinct !{!4636, !4623, !4637}
!4637 = !DILocation(line: 788, column: 4, scope: !4614)
!4638 = !DILocation(line: 789, column: 3, scope: !4615)
!4639 = !DILocation(line: 790, column: 7, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 790, column: 7)
!4641 = !DILocation(line: 790, column: 11, scope: !4640)
!4642 = !DILocation(line: 790, column: 7, scope: !4593)
!4643 = !DILocation(line: 791, column: 13, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 791, column: 4)
!4645 = distinct !DILexicalBlock(scope: !4640, file: !3, line: 790, column: 16)
!4646 = !DILocation(line: 791, column: 17, scope: !4644)
!4647 = !DILocation(line: 791, column: 22, scope: !4644)
!4648 = !DILocation(line: 791, column: 28, scope: !4644)
!4649 = !DILocation(line: 791, column: 11, scope: !4644)
!4650 = !DILocation(line: 791, column: 9, scope: !4644)
!4651 = !DILocation(line: 791, column: 35, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 791, column: 4)
!4653 = !DILocation(line: 791, column: 4, scope: !4644)
!4654 = !DILocation(line: 792, column: 25, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4652, file: !3, line: 791, column: 51)
!4656 = !DILocation(line: 792, column: 30, scope: !4655)
!4657 = !DILocation(line: 792, column: 40, scope: !4655)
!4658 = !DILocation(line: 792, column: 43, scope: !4655)
!4659 = !DILocation(line: 792, column: 48, scope: !4655)
!4660 = !DILocation(line: 792, column: 5, scope: !4655)
!4661 = !DILocation(line: 793, column: 4, scope: !4655)
!4662 = !DILocation(line: 791, column: 42, scope: !4652)
!4663 = !DILocation(line: 791, column: 45, scope: !4652)
!4664 = !DILocation(line: 791, column: 40, scope: !4652)
!4665 = !DILocation(line: 791, column: 4, scope: !4652)
!4666 = distinct !{!4666, !4653, !4667}
!4667 = !DILocation(line: 793, column: 4, scope: !4644)
!4668 = !DILocation(line: 794, column: 3, scope: !4645)
!4669 = !DILocation(line: 795, column: 2, scope: !4593)
!4670 = !DILocation(line: 780, column: 36, scope: !4587)
!4671 = !DILocation(line: 780, column: 2, scope: !4587)
!4672 = distinct !{!4672, !4591, !4673}
!4673 = !DILocation(line: 795, column: 2, scope: !4584)
!4674 = !DILocation(line: 801, column: 2, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 801, column: 2)
!4676 = !DILocation(line: 801, column: 2, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 801, column: 2)
!4678 = !DILocation(line: 802, column: 17, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4677, file: !3, line: 801, column: 31)
!4680 = !DILocation(line: 802, column: 7, scope: !4679)
!4681 = !DILocation(line: 802, column: 5, scope: !4679)
!4682 = !DILocation(line: 803, column: 21, scope: !4679)
!4683 = !DILocation(line: 803, column: 9, scope: !4679)
!4684 = !DILocation(line: 803, column: 7, scope: !4679)
!4685 = !DILocation(line: 804, column: 18, scope: !4679)
!4686 = !DILocation(line: 804, column: 23, scope: !4679)
!4687 = !DILocation(line: 804, column: 26, scope: !4679)
!4688 = !DILocation(line: 804, column: 3, scope: !4679)
!4689 = !DILocation(line: 805, column: 2, scope: !4679)
!4690 = distinct !{!4690, !4674, !4691}
!4691 = !DILocation(line: 805, column: 2, scope: !4675)
!4692 = !DILocation(line: 808, column: 2, scope: !4543)
!4693 = !DILocation(line: 808, column: 7, scope: !4543)
!4694 = !DILocation(line: 808, column: 14, scope: !4543)
!4695 = !DILocation(line: 808, column: 19, scope: !4543)
!4696 = !DILocation(line: 809, column: 6, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 809, column: 6)
!4698 = !DILocation(line: 809, column: 11, scope: !4697)
!4699 = !DILocation(line: 809, column: 16, scope: !4697)
!4700 = !DILocation(line: 809, column: 6, scope: !4543)
!4701 = !DILocation(line: 811, column: 3, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 809, column: 24)
!4703 = !DILocation(line: 811, column: 8, scope: !4702)
!4704 = !DILocation(line: 811, column: 13, scope: !4702)
!4705 = !DILocation(line: 811, column: 20, scope: !4702)
!4706 = !DILocation(line: 812, column: 20, scope: !4702)
!4707 = !DILocation(line: 812, column: 25, scope: !4702)
!4708 = !DILocation(line: 812, column: 34, scope: !4702)
!4709 = !DILocation(line: 812, column: 39, scope: !4702)
!4710 = !DILocation(line: 812, column: 50, scope: !4702)
!4711 = !DILocation(line: 812, column: 55, scope: !4702)
!4712 = !DILocation(line: 812, column: 3, scope: !4702)
!4713 = !DILocation(line: 812, column: 8, scope: !4702)
!4714 = !DILocation(line: 812, column: 13, scope: !4702)
!4715 = !DILocation(line: 812, column: 18, scope: !4702)
!4716 = !DILocation(line: 813, column: 2, scope: !4702)
!4717 = !DILocation(line: 815, column: 17, scope: !4543)
!4718 = !DILocation(line: 815, column: 2, scope: !4543)
!4719 = !DILocation(line: 816, column: 2, scope: !4543)
!4720 = !DILocation(line: 816, column: 12, scope: !4543)
!4721 = !DILocation(line: 816, column: 17, scope: !4543)
!4722 = !DILocation(line: 817, column: 2, scope: !4543)
!4723 = !DILocation(line: 817, column: 7, scope: !4543)
!4724 = !DILocation(line: 817, column: 16, scope: !4543)
!4725 = !DILocation(line: 818, column: 2, scope: !4543)
!4726 = !DILocation(line: 818, column: 7, scope: !4543)
!4727 = !DILocation(line: 818, column: 18, scope: !4543)
!4728 = !DILocation(line: 819, column: 1, scope: !4543)
!4729 = distinct !DISubprogram(name: "knife_finish_cut", scope: !3, file: !3, line: 821, type: !4371, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4730 = !DILocalVariable(name: "kcd", arg: 1, scope: !4729, file: !3, line: 821, type: !3512)
!4731 = !DILocation(line: 821, column: 48, scope: !4729)
!4732 = !DILocation(line: 823, column: 6, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4729, file: !3, line: 823, column: 6)
!4734 = !DILocation(line: 823, column: 11, scope: !4733)
!4735 = !DILocation(line: 823, column: 6, scope: !4729)
!4736 = !DILocation(line: 824, column: 3, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 823, column: 21)
!4738 = !DILocation(line: 824, column: 13, scope: !4737)
!4739 = !DILocation(line: 824, column: 18, scope: !4737)
!4740 = !DILocation(line: 825, column: 3, scope: !4737)
!4741 = !DILocation(line: 825, column: 8, scope: !4737)
!4742 = !DILocation(line: 825, column: 17, scope: !4737)
!4743 = !DILocation(line: 826, column: 3, scope: !4737)
!4744 = !DILocation(line: 826, column: 8, scope: !4737)
!4745 = !DILocation(line: 826, column: 19, scope: !4737)
!4746 = !DILocation(line: 827, column: 2, scope: !4737)
!4747 = !DILocation(line: 828, column: 1, scope: !4729)
!4748 = distinct !DISubprogram(name: "knifetool_finish_ex", scope: !3, file: !3, line: 2613, type: !4371, scopeLine: 2614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4749 = !DILocalVariable(name: "kcd", arg: 1, scope: !4748, file: !3, line: 2613, type: !3512)
!4750 = !DILocation(line: 2613, column: 51, scope: !4748)
!4751 = !DILocation(line: 2615, column: 18, scope: !4748)
!4752 = !DILocation(line: 2615, column: 2, scope: !4748)
!4753 = !DILocation(line: 2617, column: 24, scope: !4748)
!4754 = !DILocation(line: 2617, column: 29, scope: !4748)
!4755 = !DILocation(line: 2617, column: 2, scope: !4748)
!4756 = !DILocation(line: 2618, column: 27, scope: !4748)
!4757 = !DILocation(line: 2618, column: 32, scope: !4748)
!4758 = !DILocation(line: 2618, column: 2, scope: !4748)
!4759 = !DILocation(line: 2619, column: 22, scope: !4748)
!4760 = !DILocation(line: 2619, column: 27, scope: !4748)
!4761 = !DILocation(line: 2619, column: 2, scope: !4748)
!4762 = !DILocation(line: 2620, column: 1, scope: !4748)
!4763 = distinct !DISubprogram(name: "BM_iter_new", scope: !4764, file: !4764, line: 172, type: !4765, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4764 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4765 = !DISubroutineType(types: !4766)
!4766 = !{!18, !4767, !2780, !2400, !18}
!4767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!4768 = !DILocalVariable(name: "iter", arg: 1, scope: !4763, file: !4764, line: 172, type: !4767)
!4769 = !DILocation(line: 172, column: 38, scope: !4763)
!4770 = !DILocalVariable(name: "bm", arg: 2, scope: !4763, file: !4764, line: 172, type: !2780)
!4771 = !DILocation(line: 172, column: 51, scope: !4763)
!4772 = !DILocalVariable(name: "itype", arg: 3, scope: !4763, file: !4764, line: 172, type: !2400)
!4773 = !DILocation(line: 172, column: 66, scope: !4763)
!4774 = !DILocalVariable(name: "data", arg: 4, scope: !4763, file: !4764, line: 172, type: !18)
!4775 = !DILocation(line: 172, column: 79, scope: !4763)
!4776 = !DILocation(line: 174, column: 6, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4763, file: !4764, line: 174, column: 6)
!4778 = !DILocation(line: 174, column: 6, scope: !4763)
!4779 = !DILocation(line: 175, column: 23, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4777, file: !4764, line: 174, column: 51)
!4781 = !DILocation(line: 175, column: 10, scope: !4780)
!4782 = !DILocation(line: 175, column: 3, scope: !4780)
!4783 = !DILocation(line: 178, column: 3, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4777, file: !4764, line: 177, column: 7)
!4785 = !DILocation(line: 180, column: 1, scope: !4763)
!4786 = distinct !DISubprogram(name: "_bm_elem_flag_enable", scope: !4787, file: !4787, line: 52, type: !4788, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4787 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4788 = !DISubroutineType(types: !4789)
!4789 = !{null, !4790, !2400}
!4790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!4791 = !DILocalVariable(name: "head", arg: 1, scope: !4786, file: !4787, line: 52, type: !4790)
!4792 = !DILocation(line: 52, column: 48, scope: !4786)
!4793 = !DILocalVariable(name: "hflag", arg: 2, scope: !4786, file: !4787, line: 52, type: !2400)
!4794 = !DILocation(line: 52, column: 65, scope: !4786)
!4795 = !DILocation(line: 54, column: 17, scope: !4786)
!4796 = !DILocation(line: 54, column: 2, scope: !4786)
!4797 = !DILocation(line: 54, column: 8, scope: !4786)
!4798 = !DILocation(line: 54, column: 14, scope: !4786)
!4799 = !DILocation(line: 55, column: 1, scope: !4786)
!4800 = distinct !DISubprogram(name: "_bm_elem_flag_disable", scope: !4787, file: !4787, line: 57, type: !4788, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4801 = !DILocalVariable(name: "head", arg: 1, scope: !4800, file: !4787, line: 57, type: !4790)
!4802 = !DILocation(line: 57, column: 49, scope: !4800)
!4803 = !DILocalVariable(name: "hflag", arg: 2, scope: !4800, file: !4787, line: 57, type: !2400)
!4804 = !DILocation(line: 57, column: 66, scope: !4800)
!4805 = !DILocation(line: 59, column: 24, scope: !4800)
!4806 = !DILocation(line: 59, column: 23, scope: !4800)
!4807 = !DILocation(line: 59, column: 17, scope: !4800)
!4808 = !DILocation(line: 59, column: 2, scope: !4800)
!4809 = !DILocation(line: 59, column: 8, scope: !4800)
!4810 = !DILocation(line: 59, column: 14, scope: !4800)
!4811 = !DILocation(line: 60, column: 1, scope: !4800)
!4812 = distinct !DISubprogram(name: "BM_iter_step", scope: !4764, file: !4764, line: 40, type: !4813, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4813 = !DISubroutineType(types: !4814)
!4814 = !{!18, !4767}
!4815 = !DILocalVariable(name: "iter", arg: 1, scope: !4812, file: !4764, line: 40, type: !4767)
!4816 = !DILocation(line: 40, column: 39, scope: !4812)
!4817 = !DILocation(line: 42, column: 9, scope: !4812)
!4818 = !DILocation(line: 42, column: 15, scope: !4812)
!4819 = !DILocation(line: 42, column: 20, scope: !4812)
!4820 = !DILocation(line: 42, column: 2, scope: !4812)
!4821 = distinct !DISubprogram(name: "_bm_elem_flag_test", scope: !4787, file: !4787, line: 42, type: !4822, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4822 = !DISubroutineType(types: !4823)
!4823 = !{!23, !4824, !2400}
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2670)
!4826 = !DILocalVariable(name: "head", arg: 1, scope: !4821, file: !4787, line: 42, type: !4824)
!4827 = !DILocation(line: 42, column: 52, scope: !4821)
!4828 = !DILocalVariable(name: "hflag", arg: 2, scope: !4821, file: !4787, line: 42, type: !2400)
!4829 = !DILocation(line: 42, column: 69, scope: !4821)
!4830 = !DILocation(line: 44, column: 9, scope: !4821)
!4831 = !DILocation(line: 44, column: 15, scope: !4821)
!4832 = !DILocation(line: 44, column: 23, scope: !4821)
!4833 = !DILocation(line: 44, column: 21, scope: !4821)
!4834 = !DILocation(line: 44, column: 2, scope: !4821)
!4835 = distinct !DISubprogram(name: "edbm_mesh_knife_face_isect", scope: !3, file: !3, line: 3076, type: !4836, scopeLine: 3077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4836 = !DISubroutineType(types: !4837)
!4837 = !{!1053, !338, !3845, !2730, !1059}
!4838 = !DILocalVariable(name: "ar", arg: 1, scope: !4835, file: !3, line: 3076, type: !338)
!4839 = !DILocation(line: 3076, column: 49, scope: !4835)
!4840 = !DILocalVariable(name: "polys", arg: 2, scope: !4835, file: !3, line: 3076, type: !3845)
!4841 = !DILocation(line: 3076, column: 63, scope: !4835)
!4842 = !DILocalVariable(name: "f", arg: 3, scope: !4835, file: !3, line: 3076, type: !2730)
!4843 = !DILocation(line: 3076, column: 78, scope: !4835)
!4844 = !DILocalVariable(name: "projmat", arg: 4, scope: !4835, file: !3, line: 3076, type: !1059)
!4845 = !DILocation(line: 3076, column: 87, scope: !4835)
!4846 = !DILocalVariable(name: "cent_ss", scope: !4835, file: !3, line: 3078, type: !373)
!4847 = !DILocation(line: 3078, column: 8, scope: !4835)
!4848 = !DILocalVariable(name: "cent", scope: !4835, file: !3, line: 3079, type: !555)
!4849 = !DILocation(line: 3079, column: 8, scope: !4835)
!4850 = !DILocation(line: 3081, column: 29, scope: !4835)
!4851 = !DILocation(line: 3081, column: 32, scope: !4835)
!4852 = !DILocation(line: 3081, column: 2, scope: !4835)
!4853 = !DILocation(line: 3083, column: 32, scope: !4835)
!4854 = !DILocation(line: 3083, column: 36, scope: !4835)
!4855 = !DILocation(line: 3083, column: 42, scope: !4835)
!4856 = !DILocation(line: 3083, column: 51, scope: !4835)
!4857 = !DILocation(line: 3083, column: 2, scope: !4835)
!4858 = !DILocalVariable(name: "p", scope: !4859, file: !3, line: 3087, type: !3845)
!4859 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 3086, column: 2)
!4860 = !DILocation(line: 3087, column: 13, scope: !4859)
!4861 = !DILocation(line: 3087, column: 17, scope: !4859)
!4862 = !DILocalVariable(name: "isect", scope: !4859, file: !3, line: 3088, type: !35)
!4863 = !DILocation(line: 3088, column: 7, scope: !4859)
!4864 = !DILocation(line: 3090, column: 3, scope: !4859)
!4865 = !DILocation(line: 3090, column: 10, scope: !4859)
!4866 = !DILocalVariable(name: "mval_fl", scope: !4867, file: !3, line: 3091, type: !3895)
!4867 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 3090, column: 13)
!4868 = !DILocation(line: 3091, column: 18, scope: !4867)
!4869 = !DILocation(line: 3091, column: 32, scope: !4867)
!4870 = !DILocation(line: 3091, column: 35, scope: !4867)
!4871 = !DILocalVariable(name: "mval_tot", scope: !4867, file: !3, line: 3092, type: !3901)
!4872 = !DILocation(line: 3092, column: 14, scope: !4867)
!4873 = !DILocation(line: 3092, column: 25, scope: !4867)
!4874 = !DILocation(line: 3092, column: 40, scope: !4867)
!4875 = !DILocation(line: 3092, column: 49, scope: !4867)
!4876 = !DILocation(line: 3093, column: 38, scope: !4867)
!4877 = !DILocation(line: 3093, column: 47, scope: !4867)
!4878 = !DILocation(line: 3093, column: 56, scope: !4867)
!4879 = !DILocation(line: 3093, column: 65, scope: !4867)
!4880 = !DILocation(line: 3093, column: 18, scope: !4867)
!4881 = !DILocation(line: 3093, column: 13, scope: !4867)
!4882 = !DILocation(line: 3093, column: 10, scope: !4867)
!4883 = !DILocation(line: 3094, column: 8, scope: !4867)
!4884 = !DILocation(line: 3094, column: 11, scope: !4867)
!4885 = !DILocation(line: 3094, column: 6, scope: !4867)
!4886 = distinct !{!4886, !4864, !4887}
!4887 = !DILocation(line: 3095, column: 3, scope: !4859)
!4888 = !DILocation(line: 3097, column: 7, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 3097, column: 7)
!4890 = !DILocation(line: 3097, column: 13, scope: !4889)
!4891 = !DILocation(line: 3097, column: 7, scope: !4859)
!4892 = !DILocation(line: 3098, column: 4, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 3097, column: 18)
!4894 = !DILocation(line: 3102, column: 2, scope: !4835)
!4895 = !DILocation(line: 3103, column: 1, scope: !4835)
!4896 = distinct !DISubprogram(name: "knifetool_exit_ex", scope: !3, file: !3, line: 2642, type: !4897, scopeLine: 2643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4897 = !DISubroutineType(types: !4898)
!4898 = !{null, !3487, !3512}
!4899 = !DILocalVariable(name: "C", arg: 1, scope: !4896, file: !3, line: 2642, type: !3487)
!4900 = !DILocation(line: 2642, column: 41, scope: !4896)
!4901 = !DILocalVariable(name: "kcd", arg: 2, scope: !4896, file: !3, line: 2642, type: !3512)
!4902 = !DILocation(line: 2642, column: 62, scope: !4896)
!4903 = !DILocation(line: 2644, column: 7, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 2644, column: 6)
!4905 = !DILocation(line: 2644, column: 6, scope: !4896)
!4906 = !DILocation(line: 2645, column: 3, scope: !4904)
!4907 = !DILocation(line: 2647, column: 6, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 2647, column: 6)
!4909 = !DILocation(line: 2647, column: 11, scope: !4908)
!4910 = !DILocation(line: 2647, column: 6, scope: !4896)
!4911 = !DILocation(line: 2648, column: 41, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4908, file: !3, line: 2647, column: 27)
!4913 = !DILocation(line: 2648, column: 27, scope: !4912)
!4914 = !DILocation(line: 2648, column: 3, scope: !4912)
!4915 = !DILocation(line: 2651, column: 26, scope: !4912)
!4916 = !DILocation(line: 2651, column: 31, scope: !4912)
!4917 = !DILocation(line: 2651, column: 35, scope: !4912)
!4918 = !DILocation(line: 2651, column: 41, scope: !4912)
!4919 = !DILocation(line: 2651, column: 46, scope: !4912)
!4920 = !DILocation(line: 2651, column: 3, scope: !4912)
!4921 = !DILocation(line: 2652, column: 2, scope: !4912)
!4922 = !DILocation(line: 2655, column: 22, scope: !4896)
!4923 = !DILocation(line: 2655, column: 27, scope: !4896)
!4924 = !DILocation(line: 2655, column: 2, scope: !4896)
!4925 = !DILocation(line: 2656, column: 22, scope: !4896)
!4926 = !DILocation(line: 2656, column: 27, scope: !4896)
!4927 = !DILocation(line: 2656, column: 2, scope: !4896)
!4928 = !DILocation(line: 2657, column: 22, scope: !4896)
!4929 = !DILocation(line: 2657, column: 27, scope: !4896)
!4930 = !DILocation(line: 2657, column: 2, scope: !4896)
!4931 = !DILocation(line: 2659, column: 17, scope: !4896)
!4932 = !DILocation(line: 2659, column: 22, scope: !4896)
!4933 = !DILocation(line: 2659, column: 2, scope: !4896)
!4934 = !DILocation(line: 2660, column: 17, scope: !4896)
!4935 = !DILocation(line: 2660, column: 22, scope: !4896)
!4936 = !DILocation(line: 2660, column: 2, scope: !4896)
!4937 = !DILocation(line: 2661, column: 17, scope: !4896)
!4938 = !DILocation(line: 2661, column: 22, scope: !4896)
!4939 = !DILocation(line: 2661, column: 2, scope: !4896)
!4940 = !DILocation(line: 2662, column: 17, scope: !4896)
!4941 = !DILocation(line: 2662, column: 22, scope: !4896)
!4942 = !DILocation(line: 2662, column: 2, scope: !4896)
!4943 = !DILocation(line: 2664, column: 17, scope: !4896)
!4944 = !DILocation(line: 2664, column: 22, scope: !4896)
!4945 = !DILocation(line: 2664, column: 2, scope: !4896)
!4946 = !DILocation(line: 2665, column: 20, scope: !4896)
!4947 = !DILocation(line: 2665, column: 25, scope: !4896)
!4948 = !DILocation(line: 2665, column: 2, scope: !4896)
!4949 = !DILocation(line: 2668, column: 23, scope: !4896)
!4950 = !DILocation(line: 2668, column: 28, scope: !4896)
!4951 = !DILocation(line: 2668, column: 2, scope: !4896)
!4952 = !DILocation(line: 2670, column: 6, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 2670, column: 6)
!4954 = !DILocation(line: 2670, column: 11, scope: !4953)
!4955 = !DILocation(line: 2670, column: 6, scope: !4896)
!4956 = !DILocation(line: 2671, column: 3, scope: !4953)
!4957 = !DILocation(line: 2671, column: 21, scope: !4953)
!4958 = !DILocation(line: 2671, column: 26, scope: !4953)
!4959 = !DILocation(line: 2671, column: 13, scope: !4953)
!4960 = !DILocation(line: 2673, column: 6, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 2673, column: 6)
!4962 = !DILocation(line: 2673, column: 11, scope: !4961)
!4963 = !DILocation(line: 2673, column: 6, scope: !4896)
!4964 = !DILocation(line: 2674, column: 3, scope: !4961)
!4965 = !DILocation(line: 2674, column: 13, scope: !4961)
!4966 = !DILocation(line: 2674, column: 18, scope: !4961)
!4967 = !DILocation(line: 2677, column: 2, scope: !4896)
!4968 = !DILocation(line: 2677, column: 12, scope: !4896)
!4969 = !DILocation(line: 2678, column: 1, scope: !4896)
!4970 = distinct !DISubprogram(name: "knifetool_update_mval_i", scope: !3, file: !3, line: 2696, type: !4971, scopeLine: 2697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{null, !3512, !4973}
!4973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!4974 = !DILocalVariable(name: "kcd", arg: 1, scope: !4970, file: !3, line: 2696, type: !3512)
!4975 = !DILocation(line: 2696, column: 55, scope: !4970)
!4976 = !DILocalVariable(name: "mval_i", arg: 2, scope: !4970, file: !3, line: 2696, type: !4973)
!4977 = !DILocation(line: 2696, column: 70, scope: !4970)
!4978 = !DILocalVariable(name: "mval", scope: !4970, file: !3, line: 2698, type: !373)
!4979 = !DILocation(line: 2698, column: 8, scope: !4970)
!4980 = !DILocation(line: 2698, column: 18, scope: !4970)
!4981 = !DILocation(line: 2698, column: 19, scope: !4970)
!4982 = !DILocation(line: 2699, column: 24, scope: !4970)
!4983 = !DILocation(line: 2699, column: 29, scope: !4970)
!4984 = !DILocation(line: 2699, column: 2, scope: !4970)
!4985 = !DILocation(line: 2700, column: 1, scope: !4970)
!4986 = distinct !DISubprogram(name: "knife_update_header", scope: !3, file: !3, line: 236, type: !4897, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!4987 = !DILocalVariable(name: "C", arg: 1, scope: !4986, file: !3, line: 236, type: !3487)
!4988 = !DILocation(line: 236, column: 43, scope: !4986)
!4989 = !DILocalVariable(name: "kcd", arg: 2, scope: !4986, file: !3, line: 236, type: !3512)
!4990 = !DILocation(line: 236, column: 64, scope: !4986)
!4991 = !DILocalVariable(name: "header", scope: !4986, file: !3, line: 239, type: !1417)
!4992 = !DILocation(line: 239, column: 7, scope: !4986)
!4993 = !DILocation(line: 241, column: 15, scope: !4986)
!4994 = !DILocation(line: 244, column: 33, scope: !4986)
!4995 = !DILocation(line: 244, column: 38, scope: !4986)
!4996 = !DILocation(line: 244, column: 15, scope: !4986)
!4997 = !DILocation(line: 245, column: 33, scope: !4986)
!4998 = !DILocation(line: 245, column: 38, scope: !4986)
!4999 = !DILocation(line: 245, column: 15, scope: !4986)
!5000 = !DILocation(line: 246, column: 33, scope: !4986)
!5001 = !DILocation(line: 246, column: 38, scope: !4986)
!5002 = !DILocation(line: 246, column: 15, scope: !4986)
!5003 = !DILocation(line: 247, column: 33, scope: !4986)
!5004 = !DILocation(line: 247, column: 38, scope: !4986)
!5005 = !DILocation(line: 247, column: 15, scope: !4986)
!5006 = !DILocation(line: 241, column: 2, scope: !4986)
!5007 = !DILocation(line: 248, column: 34, scope: !4986)
!5008 = !DILocation(line: 248, column: 22, scope: !4986)
!5009 = !DILocation(line: 248, column: 38, scope: !4986)
!5010 = !DILocation(line: 248, column: 2, scope: !4986)
!5011 = !DILocation(line: 250, column: 1, scope: !4986)
!5012 = distinct !DISubprogram(name: "knifetool_exit", scope: !3, file: !3, line: 2679, type: !3832, scopeLine: 2680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!5013 = !DILocalVariable(name: "C", arg: 1, scope: !5012, file: !3, line: 2679, type: !3487)
!5014 = !DILocation(line: 2679, column: 38, scope: !5012)
!5015 = !DILocalVariable(name: "op", arg: 2, scope: !5012, file: !3, line: 2679, type: !3489)
!5016 = !DILocation(line: 2679, column: 53, scope: !5012)
!5017 = !DILocalVariable(name: "kcd", scope: !5012, file: !3, line: 2681, type: !3512)
!5018 = !DILocation(line: 2681, column: 20, scope: !5012)
!5019 = !DILocation(line: 2681, column: 26, scope: !5012)
!5020 = !DILocation(line: 2681, column: 30, scope: !5012)
!5021 = !DILocation(line: 2682, column: 20, scope: !5012)
!5022 = !DILocation(line: 2682, column: 23, scope: !5012)
!5023 = !DILocation(line: 2682, column: 2, scope: !5012)
!5024 = !DILocation(line: 2683, column: 2, scope: !5012)
!5025 = !DILocation(line: 2683, column: 6, scope: !5012)
!5026 = !DILocation(line: 2683, column: 17, scope: !5012)
!5027 = !DILocation(line: 2684, column: 1, scope: !5012)
!5028 = distinct !DISubprogram(name: "knifetool_finish", scope: !3, file: !3, line: 2621, type: !5029, scopeLine: 2622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{null, !3489}
!5031 = !DILocalVariable(name: "op", arg: 1, scope: !5028, file: !3, line: 2621, type: !3489)
!5032 = !DILocation(line: 2621, column: 42, scope: !5028)
!5033 = !DILocalVariable(name: "kcd", scope: !5028, file: !3, line: 2623, type: !3512)
!5034 = !DILocation(line: 2623, column: 20, scope: !5028)
!5035 = !DILocation(line: 2623, column: 26, scope: !5028)
!5036 = !DILocation(line: 2623, column: 30, scope: !5028)
!5037 = !DILocation(line: 2624, column: 22, scope: !5028)
!5038 = !DILocation(line: 2624, column: 2, scope: !5028)
!5039 = !DILocation(line: 2625, column: 1, scope: !5028)
!5040 = distinct !DISubprogram(name: "knife_update_active", scope: !3, file: !3, line: 1899, type: !5041, scopeLine: 1900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{!35, !3512}
!5043 = !DILocalVariable(name: "kcd", arg: 1, scope: !5040, file: !3, line: 1899, type: !3512)
!5044 = !DILocation(line: 1899, column: 50, scope: !5040)
!5045 = !DILocation(line: 1901, column: 24, scope: !5040)
!5046 = !DILocation(line: 1901, column: 29, scope: !5040)
!5047 = !DILocation(line: 1901, column: 2, scope: !5040)
!5048 = !DILocation(line: 1902, column: 13, scope: !5040)
!5049 = !DILocation(line: 1902, column: 18, scope: !5040)
!5050 = !DILocation(line: 1902, column: 23, scope: !5040)
!5051 = !DILocation(line: 1902, column: 29, scope: !5040)
!5052 = !DILocation(line: 1902, column: 34, scope: !5040)
!5053 = !DILocation(line: 1902, column: 2, scope: !5040)
!5054 = !DILocation(line: 1905, column: 19, scope: !5040)
!5055 = !DILocation(line: 1905, column: 24, scope: !5040)
!5056 = !DILocation(line: 1905, column: 29, scope: !5040)
!5057 = !DILocation(line: 1905, column: 34, scope: !5040)
!5058 = !DILocation(line: 1905, column: 40, scope: !5040)
!5059 = !DILocation(line: 1905, column: 45, scope: !5040)
!5060 = !DILocation(line: 1905, column: 50, scope: !5040)
!5061 = !DILocation(line: 1905, column: 2, scope: !5040)
!5062 = !DILocation(line: 1907, column: 6, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 1907, column: 6)
!5064 = !DILocation(line: 1907, column: 11, scope: !5063)
!5065 = !DILocation(line: 1907, column: 26, scope: !5063)
!5066 = !DILocation(line: 1907, column: 40, scope: !5063)
!5067 = !DILocation(line: 1907, column: 43, scope: !5063)
!5068 = !DILocation(line: 1907, column: 48, scope: !5063)
!5069 = !DILocation(line: 1907, column: 53, scope: !5063)
!5070 = !DILocation(line: 1907, column: 6, scope: !5040)
!5071 = !DILocation(line: 1908, column: 45, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 1907, column: 71)
!5073 = !DILocation(line: 1908, column: 28, scope: !5072)
!5074 = !DILocation(line: 1908, column: 3, scope: !5072)
!5075 = !DILocation(line: 1908, column: 8, scope: !5072)
!5076 = !DILocation(line: 1908, column: 26, scope: !5072)
!5077 = !DILocation(line: 1909, column: 2, scope: !5072)
!5078 = !DILocation(line: 1911, column: 3, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 1910, column: 7)
!5080 = !DILocation(line: 1911, column: 8, scope: !5079)
!5081 = !DILocation(line: 1911, column: 26, scope: !5079)
!5082 = !DILocation(line: 1914, column: 43, scope: !5040)
!5083 = !DILocation(line: 1914, column: 48, scope: !5040)
!5084 = !DILocation(line: 1914, column: 53, scope: !5040)
!5085 = !DILocation(line: 1914, column: 58, scope: !5040)
!5086 = !DILocation(line: 1914, column: 62, scope: !5040)
!5087 = !DILocation(line: 1914, column: 67, scope: !5040)
!5088 = !DILocation(line: 1914, column: 72, scope: !5040)
!5089 = !DILocation(line: 1914, column: 79, scope: !5040)
!5090 = !DILocation(line: 1914, column: 84, scope: !5040)
!5091 = !DILocation(line: 1914, column: 89, scope: !5040)
!5092 = !DILocation(line: 1914, column: 98, scope: !5040)
!5093 = !DILocation(line: 1914, column: 103, scope: !5040)
!5094 = !DILocation(line: 1914, column: 108, scope: !5040)
!5095 = !DILocation(line: 1914, column: 19, scope: !5040)
!5096 = !DILocation(line: 1914, column: 2, scope: !5040)
!5097 = !DILocation(line: 1914, column: 7, scope: !5040)
!5098 = !DILocation(line: 1914, column: 12, scope: !5040)
!5099 = !DILocation(line: 1914, column: 17, scope: !5040)
!5100 = !DILocation(line: 1916, column: 7, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 1916, column: 6)
!5102 = !DILocation(line: 1916, column: 12, scope: !5101)
!5103 = !DILocation(line: 1916, column: 17, scope: !5101)
!5104 = !DILocation(line: 1916, column: 6, scope: !5040)
!5105 = !DILocation(line: 1917, column: 44, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1916, column: 23)
!5107 = !DILocation(line: 1917, column: 49, scope: !5106)
!5108 = !DILocation(line: 1917, column: 54, scope: !5106)
!5109 = !DILocation(line: 1917, column: 59, scope: !5106)
!5110 = !DILocation(line: 1917, column: 63, scope: !5106)
!5111 = !DILocation(line: 1917, column: 68, scope: !5106)
!5112 = !DILocation(line: 1917, column: 73, scope: !5106)
!5113 = !DILocation(line: 1918, column: 45, scope: !5106)
!5114 = !DILocation(line: 1918, column: 50, scope: !5106)
!5115 = !DILocation(line: 1918, column: 55, scope: !5106)
!5116 = !DILocation(line: 1918, column: 64, scope: !5106)
!5117 = !DILocation(line: 1918, column: 69, scope: !5106)
!5118 = !DILocation(line: 1918, column: 74, scope: !5106)
!5119 = !DILocation(line: 1917, column: 20, scope: !5106)
!5120 = !DILocation(line: 1917, column: 3, scope: !5106)
!5121 = !DILocation(line: 1917, column: 8, scope: !5106)
!5122 = !DILocation(line: 1917, column: 13, scope: !5106)
!5123 = !DILocation(line: 1917, column: 18, scope: !5106)
!5124 = !DILocation(line: 1919, column: 2, scope: !5106)
!5125 = !DILocation(line: 1925, column: 6, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 1925, column: 6)
!5127 = !DILocation(line: 1925, column: 11, scope: !5126)
!5128 = !DILocation(line: 1925, column: 16, scope: !5126)
!5129 = !DILocation(line: 1925, column: 21, scope: !5126)
!5130 = !DILocation(line: 1925, column: 29, scope: !5126)
!5131 = !DILocation(line: 1925, column: 32, scope: !5126)
!5132 = !DILocation(line: 1925, column: 37, scope: !5126)
!5133 = !DILocation(line: 1925, column: 42, scope: !5126)
!5134 = !DILocation(line: 1925, column: 47, scope: !5126)
!5135 = !DILocation(line: 1925, column: 55, scope: !5126)
!5136 = !DILocation(line: 1925, column: 58, scope: !5126)
!5137 = !DILocation(line: 1925, column: 63, scope: !5126)
!5138 = !DILocation(line: 1925, column: 68, scope: !5126)
!5139 = !DILocation(line: 1925, column: 75, scope: !5126)
!5140 = !DILocation(line: 1925, column: 6, scope: !5040)
!5141 = !DILocalVariable(name: "origin", scope: !5142, file: !3, line: 1926, type: !555)
!5142 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 1925, column: 84)
!5143 = !DILocation(line: 1926, column: 9, scope: !5142)
!5144 = !DILocalVariable(name: "origin_ofs", scope: !5142, file: !3, line: 1927, type: !555)
!5145 = !DILocation(line: 1927, column: 9, scope: !5142)
!5146 = !DILocation(line: 1929, column: 27, scope: !5142)
!5147 = !DILocation(line: 1929, column: 32, scope: !5142)
!5148 = !DILocation(line: 1929, column: 37, scope: !5142)
!5149 = !DILocation(line: 1929, column: 42, scope: !5142)
!5150 = !DILocation(line: 1929, column: 54, scope: !5142)
!5151 = !DILocation(line: 1929, column: 62, scope: !5142)
!5152 = !DILocation(line: 1929, column: 3, scope: !5142)
!5153 = !DILocation(line: 1931, column: 28, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1931, column: 7)
!5155 = !DILocation(line: 1931, column: 33, scope: !5154)
!5156 = !DILocation(line: 1931, column: 38, scope: !5154)
!5157 = !DILocation(line: 1931, column: 44, scope: !5154)
!5158 = !DILocation(line: 1931, column: 52, scope: !5154)
!5159 = !DILocation(line: 1931, column: 64, scope: !5154)
!5160 = !DILocation(line: 1931, column: 69, scope: !5154)
!5161 = !DILocation(line: 1931, column: 74, scope: !5154)
!5162 = !DILocation(line: 1931, column: 80, scope: !5154)
!5163 = !DILocation(line: 1931, column: 85, scope: !5154)
!5164 = !DILocation(line: 1931, column: 8, scope: !5154)
!5165 = !DILocation(line: 1931, column: 7, scope: !5142)
!5166 = !DILocation(line: 1932, column: 15, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1931, column: 98)
!5168 = !DILocation(line: 1932, column: 20, scope: !5167)
!5169 = !DILocation(line: 1932, column: 25, scope: !5167)
!5170 = !DILocation(line: 1932, column: 31, scope: !5167)
!5171 = !DILocation(line: 1932, column: 36, scope: !5167)
!5172 = !DILocation(line: 1932, column: 41, scope: !5167)
!5173 = !DILocation(line: 1932, column: 4, scope: !5167)
!5174 = !DILocation(line: 1936, column: 3, scope: !5167)
!5175 = !DILocation(line: 1937, column: 2, scope: !5142)
!5176 = !DILocation(line: 1939, column: 6, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 1939, column: 6)
!5178 = !DILocation(line: 1939, column: 11, scope: !5177)
!5179 = !DILocation(line: 1939, column: 16, scope: !5177)
!5180 = !DILocation(line: 1939, column: 6, scope: !5040)
!5181 = !DILocation(line: 1940, column: 24, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 1939, column: 34)
!5183 = !DILocation(line: 1940, column: 3, scope: !5182)
!5184 = !DILocation(line: 1941, column: 2, scope: !5182)
!5185 = !DILocation(line: 1942, column: 2, scope: !5040)
!5186 = distinct !DISubprogram(name: "knife_pos_data_clear", scope: !3, file: !3, line: 278, type: !5187, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!5187 = !DISubroutineType(types: !5188)
!5188 = !{null, !5189}
!5189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!5190 = !DILocalVariable(name: "kpd", arg: 1, scope: !5186, file: !3, line: 278, type: !5189)
!5191 = !DILocation(line: 278, column: 48, scope: !5186)
!5192 = !DILocation(line: 280, column: 10, scope: !5186)
!5193 = !DILocation(line: 280, column: 15, scope: !5186)
!5194 = !DILocation(line: 280, column: 2, scope: !5186)
!5195 = !DILocation(line: 281, column: 10, scope: !5186)
!5196 = !DILocation(line: 281, column: 15, scope: !5186)
!5197 = !DILocation(line: 281, column: 2, scope: !5186)
!5198 = !DILocation(line: 282, column: 2, scope: !5186)
!5199 = !DILocation(line: 282, column: 7, scope: !5186)
!5200 = !DILocation(line: 282, column: 12, scope: !5186)
!5201 = !DILocation(line: 283, column: 2, scope: !5186)
!5202 = !DILocation(line: 283, column: 7, scope: !5186)
!5203 = !DILocation(line: 283, column: 12, scope: !5186)
!5204 = !DILocation(line: 284, column: 2, scope: !5186)
!5205 = !DILocation(line: 284, column: 7, scope: !5186)
!5206 = !DILocation(line: 284, column: 14, scope: !5186)
!5207 = !DILocation(line: 285, column: 10, scope: !5186)
!5208 = !DILocation(line: 285, column: 15, scope: !5186)
!5209 = !DILocation(line: 285, column: 2, scope: !5186)
!5210 = !DILocation(line: 286, column: 1, scope: !5186)
!5211 = distinct !DISubprogram(name: "copy_v2_v2", scope: !5212, file: !5212, line: 58, type: !5213, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!5212 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5213 = !DISubroutineType(types: !5214)
!5214 = !{null, !392, !997}
!5215 = !DILocalVariable(name: "r", arg: 1, scope: !5211, file: !5212, line: 58, type: !392)
!5216 = !DILocation(line: 58, column: 31, scope: !5211)
!5217 = !DILocalVariable(name: "a", arg: 2, scope: !5211, file: !5212, line: 58, type: !997)
!5218 = !DILocation(line: 58, column: 49, scope: !5211)
!5219 = !DILocation(line: 60, column: 9, scope: !5211)
!5220 = !DILocation(line: 60, column: 2, scope: !5211)
!5221 = !DILocation(line: 60, column: 7, scope: !5211)
!5222 = !DILocation(line: 61, column: 9, scope: !5211)
!5223 = !DILocation(line: 61, column: 2, scope: !5211)
!5224 = !DILocation(line: 61, column: 7, scope: !5211)
!5225 = !DILocation(line: 62, column: 1, scope: !5211)
!5226 = distinct !DISubprogram(name: "knife_project_v2", scope: !3, file: !3, line: 252, type: !5227, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!5227 = !DISubroutineType(types: !5228)
!5228 = !{null, !5229, !997, !392}
!5229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5230, size: 64)
!5230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3513)
!5231 = !DILocalVariable(name: "kcd", arg: 1, scope: !5226, file: !3, line: 252, type: !5229)
!5232 = !DILocation(line: 252, column: 54, scope: !5226)
!5233 = !DILocalVariable(name: "co", arg: 2, scope: !5226, file: !3, line: 252, type: !997)
!5234 = !DILocation(line: 252, column: 71, scope: !5226)
!5235 = !DILocalVariable(name: "sco", arg: 3, scope: !5226, file: !3, line: 252, type: !392)
!5236 = !DILocation(line: 252, column: 84, scope: !5226)
!5237 = !DILocation(line: 254, column: 32, scope: !5226)
!5238 = !DILocation(line: 254, column: 37, scope: !5226)
!5239 = !DILocation(line: 254, column: 41, scope: !5226)
!5240 = !DILocation(line: 254, column: 45, scope: !5226)
!5241 = !DILocation(line: 254, column: 64, scope: !5226)
!5242 = !DILocation(line: 254, column: 69, scope: !5226)
!5243 = !DILocation(line: 254, column: 2, scope: !5226)
!5244 = !DILocation(line: 255, column: 1, scope: !5226)
!5245 = distinct !DISubprogram(name: "knife_snap_angle", scope: !3, file: !3, line: 1857, type: !5246, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!5246 = !DISubroutineType(types: !5247)
!5247 = !{!1053, !3512}
!5248 = !DILocalVariable(name: "kcd", arg: 1, scope: !5245, file: !3, line: 1857, type: !3512)
!5249 = !DILocation(line: 1857, column: 48, scope: !5245)
!5250 = !DILocalVariable(name: "dx", scope: !5245, file: !3, line: 1859, type: !357)
!5251 = !DILocation(line: 1859, column: 8, scope: !5245)
!5252 = !DILocalVariable(name: "dy", scope: !5245, file: !3, line: 1859, type: !357)
!5253 = !DILocation(line: 1859, column: 12, scope: !5245)
!5254 = !DILocalVariable(name: "w", scope: !5245, file: !3, line: 1860, type: !357)
!5255 = !DILocation(line: 1860, column: 8, scope: !5245)
!5256 = !DILocalVariable(name: "abs_tan", scope: !5245, file: !3, line: 1860, type: !357)
!5257 = !DILocation(line: 1860, column: 11, scope: !5245)
!5258 = !DILocation(line: 1862, column: 7, scope: !5245)
!5259 = !DILocation(line: 1862, column: 12, scope: !5245)
!5260 = !DILocation(line: 1862, column: 17, scope: !5245)
!5261 = !DILocation(line: 1862, column: 27, scope: !5245)
!5262 = !DILocation(line: 1862, column: 32, scope: !5245)
!5263 = !DILocation(line: 1862, column: 37, scope: !5245)
!5264 = !DILocation(line: 1862, column: 25, scope: !5245)
!5265 = !DILocation(line: 1862, column: 5, scope: !5245)
!5266 = !DILocation(line: 1863, column: 7, scope: !5245)
!5267 = !DILocation(line: 1863, column: 12, scope: !5245)
!5268 = !DILocation(line: 1863, column: 17, scope: !5245)
!5269 = !DILocation(line: 1863, column: 27, scope: !5245)
!5270 = !DILocation(line: 1863, column: 32, scope: !5245)
!5271 = !DILocation(line: 1863, column: 37, scope: !5245)
!5272 = !DILocation(line: 1863, column: 25, scope: !5245)
!5273 = !DILocation(line: 1863, column: 5, scope: !5245)
!5274 = !DILocation(line: 1864, column: 6, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 1864, column: 6)
!5276 = !DILocation(line: 1864, column: 9, scope: !5275)
!5277 = !DILocation(line: 1864, column: 17, scope: !5275)
!5278 = !DILocation(line: 1864, column: 20, scope: !5275)
!5279 = !DILocation(line: 1864, column: 23, scope: !5275)
!5280 = !DILocation(line: 1864, column: 6, scope: !5245)
!5281 = !DILocation(line: 1865, column: 3, scope: !5275)
!5282 = !DILocation(line: 1867, column: 6, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 1867, column: 6)
!5284 = !DILocation(line: 1867, column: 9, scope: !5283)
!5285 = !DILocation(line: 1867, column: 6, scope: !5245)
!5286 = !DILocation(line: 1868, column: 3, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 1867, column: 18)
!5288 = !DILocation(line: 1868, column: 8, scope: !5287)
!5289 = !DILocation(line: 1868, column: 23, scope: !5287)
!5290 = !DILocation(line: 1869, column: 23, scope: !5287)
!5291 = !DILocation(line: 1869, column: 28, scope: !5287)
!5292 = !DILocation(line: 1869, column: 33, scope: !5287)
!5293 = !DILocation(line: 1869, column: 3, scope: !5287)
!5294 = !DILocation(line: 1869, column: 8, scope: !5287)
!5295 = !DILocation(line: 1869, column: 13, scope: !5287)
!5296 = !DILocation(line: 1869, column: 21, scope: !5287)
!5297 = !DILocation(line: 1870, column: 2, scope: !5287)
!5298 = !DILocation(line: 1872, column: 6, scope: !5245)
!5299 = !DILocation(line: 1872, column: 11, scope: !5245)
!5300 = !DILocation(line: 1872, column: 9, scope: !5245)
!5301 = !DILocation(line: 1872, column: 4, scope: !5245)
!5302 = !DILocation(line: 1873, column: 18, scope: !5245)
!5303 = !DILocation(line: 1873, column: 12, scope: !5245)
!5304 = !DILocation(line: 1873, column: 10, scope: !5245)
!5305 = !DILocation(line: 1874, column: 6, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 1874, column: 6)
!5307 = !DILocation(line: 1874, column: 14, scope: !5306)
!5308 = !DILocation(line: 1874, column: 6, scope: !5245)
!5309 = !DILocation(line: 1875, column: 3, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 1874, column: 26)
!5311 = !DILocation(line: 1875, column: 8, scope: !5310)
!5312 = !DILocation(line: 1875, column: 23, scope: !5310)
!5313 = !DILocation(line: 1876, column: 23, scope: !5310)
!5314 = !DILocation(line: 1876, column: 28, scope: !5310)
!5315 = !DILocation(line: 1876, column: 33, scope: !5310)
!5316 = !DILocation(line: 1876, column: 3, scope: !5310)
!5317 = !DILocation(line: 1876, column: 8, scope: !5310)
!5318 = !DILocation(line: 1876, column: 13, scope: !5310)
!5319 = !DILocation(line: 1876, column: 21, scope: !5310)
!5320 = !DILocation(line: 1877, column: 2, scope: !5310)
!5321 = !DILocation(line: 1878, column: 11, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 1878, column: 11)
!5323 = !DILocation(line: 1878, column: 19, scope: !5322)
!5324 = !DILocation(line: 1878, column: 11, scope: !5306)
!5325 = !DILocation(line: 1879, column: 7, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 1879, column: 7)
!5327 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 1878, column: 30)
!5328 = !DILocation(line: 1879, column: 9, scope: !5326)
!5329 = !DILocation(line: 1879, column: 7, scope: !5327)
!5330 = !DILocation(line: 1880, column: 4, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5326, file: !3, line: 1879, column: 14)
!5332 = !DILocation(line: 1880, column: 9, scope: !5331)
!5333 = !DILocation(line: 1880, column: 24, scope: !5331)
!5334 = !DILocation(line: 1881, column: 24, scope: !5331)
!5335 = !DILocation(line: 1881, column: 29, scope: !5331)
!5336 = !DILocation(line: 1881, column: 34, scope: !5331)
!5337 = !DILocation(line: 1881, column: 44, scope: !5331)
!5338 = !DILocation(line: 1881, column: 42, scope: !5331)
!5339 = !DILocation(line: 1881, column: 4, scope: !5331)
!5340 = !DILocation(line: 1881, column: 9, scope: !5331)
!5341 = !DILocation(line: 1881, column: 14, scope: !5331)
!5342 = !DILocation(line: 1881, column: 22, scope: !5331)
!5343 = !DILocation(line: 1882, column: 3, scope: !5331)
!5344 = !DILocation(line: 1884, column: 4, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5326, file: !3, line: 1883, column: 8)
!5346 = !DILocation(line: 1884, column: 9, scope: !5345)
!5347 = !DILocation(line: 1884, column: 24, scope: !5345)
!5348 = !DILocation(line: 1885, column: 24, scope: !5345)
!5349 = !DILocation(line: 1885, column: 29, scope: !5345)
!5350 = !DILocation(line: 1885, column: 34, scope: !5345)
!5351 = !DILocation(line: 1885, column: 44, scope: !5345)
!5352 = !DILocation(line: 1885, column: 42, scope: !5345)
!5353 = !DILocation(line: 1885, column: 4, scope: !5345)
!5354 = !DILocation(line: 1885, column: 9, scope: !5345)
!5355 = !DILocation(line: 1885, column: 14, scope: !5345)
!5356 = !DILocation(line: 1885, column: 22, scope: !5345)
!5357 = !DILocation(line: 1887, column: 2, scope: !5327)
!5358 = !DILocation(line: 1889, column: 3, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 1888, column: 7)
!5360 = !DILocation(line: 1889, column: 8, scope: !5359)
!5361 = !DILocation(line: 1889, column: 23, scope: !5359)
!5362 = !DILocation(line: 1890, column: 23, scope: !5359)
!5363 = !DILocation(line: 1890, column: 28, scope: !5359)
!5364 = !DILocation(line: 1890, column: 33, scope: !5359)
!5365 = !DILocation(line: 1890, column: 3, scope: !5359)
!5366 = !DILocation(line: 1890, column: 8, scope: !5359)
!5367 = !DILocation(line: 1890, column: 13, scope: !5359)
!5368 = !DILocation(line: 1890, column: 21, scope: !5359)
!5369 = !DILocation(line: 1893, column: 13, scope: !5245)
!5370 = !DILocation(line: 1893, column: 18, scope: !5245)
!5371 = !DILocation(line: 1893, column: 24, scope: !5245)
!5372 = !DILocation(line: 1893, column: 29, scope: !5245)
!5373 = !DILocation(line: 1893, column: 34, scope: !5245)
!5374 = !DILocation(line: 1893, column: 2, scope: !5245)
!5375 = !DILocation(line: 1895, column: 2, scope: !5245)
!5376 = !DILocation(line: 1896, column: 1, scope: !5245)
!5377 = distinct !DISubprogram(name: "knife_find_closest_vert", scope: !3, file: !3, line: 1767, type: !5378, scopeLine: 1769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!5378 = !DISubroutineType(types: !5379)
!5379 = !{!2866, !3512, !392, !392, !2729, !5380}
!5380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!5381 = !DILocalVariable(name: "kcd", arg: 1, scope: !5377, file: !3, line: 1767, type: !3512)
!5382 = !DILocation(line: 1767, column: 61, scope: !5377)
!5383 = !DILocalVariable(name: "p", arg: 2, scope: !5377, file: !3, line: 1767, type: !392)
!5384 = !DILocation(line: 1767, column: 72, scope: !5377)
!5385 = !DILocalVariable(name: "cagep", arg: 3, scope: !5377, file: !3, line: 1767, type: !392)
!5386 = !DILocation(line: 1767, column: 84, scope: !5377)
!5387 = !DILocalVariable(name: "fptr", arg: 4, scope: !5377, file: !3, line: 1767, type: !2729)
!5388 = !DILocation(line: 1767, column: 103, scope: !5377)
!5389 = !DILocalVariable(name: "is_space", arg: 5, scope: !5377, file: !3, line: 1768, type: !5380)
!5390 = !DILocation(line: 1768, column: 49, scope: !5377)
!5391 = !DILocalVariable(name: "f", scope: !5377, file: !3, line: 1770, type: !2730)
!5392 = !DILocation(line: 1770, column: 10, scope: !5377)
!5393 = !DILocalVariable(name: "co", scope: !5377, file: !3, line: 1771, type: !555)
!5394 = !DILocation(line: 1771, column: 8, scope: !5377)
!5395 = !DILocalVariable(name: "cageco", scope: !5377, file: !3, line: 1771, type: !555)
!5396 = !DILocation(line: 1771, column: 15, scope: !5377)
!5397 = !DILocalVariable(name: "sco", scope: !5377, file: !3, line: 1771, type: !373)
!5398 = !DILocation(line: 1771, column: 26, scope: !5377)
!5399 = !DILocalVariable(name: "maxdist", scope: !5377, file: !3, line: 1771, type: !357)
!5400 = !DILocation(line: 1771, column: 34, scope: !5377)
!5401 = !DILocation(line: 1771, column: 60, scope: !5377)
!5402 = !DILocation(line: 1771, column: 65, scope: !5377)
!5403 = !DILocation(line: 1771, column: 70, scope: !5377)
!5404 = !DILocation(line: 1771, column: 44, scope: !5377)
!5405 = !DILocation(line: 1773, column: 6, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 1773, column: 6)
!5407 = !DILocation(line: 1773, column: 11, scope: !5406)
!5408 = !DILocation(line: 1773, column: 6, scope: !5377)
!5409 = !DILocation(line: 1774, column: 11, scope: !5406)
!5410 = !DILocation(line: 1774, column: 3, scope: !5406)
!5411 = !DILocation(line: 1776, column: 30, scope: !5377)
!5412 = !DILocation(line: 1776, column: 35, scope: !5377)
!5413 = !DILocation(line: 1776, column: 39, scope: !5377)
!5414 = !DILocation(line: 1776, column: 47, scope: !5377)
!5415 = !DILocation(line: 1776, column: 6, scope: !5377)
!5416 = !DILocation(line: 1776, column: 4, scope: !5377)
!5417 = !DILocation(line: 1778, column: 21, scope: !5377)
!5418 = !DILocation(line: 1778, column: 2, scope: !5377)
!5419 = !DILocation(line: 1778, column: 7, scope: !5377)
!5420 = !DILocation(line: 1778, column: 12, scope: !5377)
!5421 = !DILocation(line: 1778, column: 19, scope: !5377)
!5422 = !DILocation(line: 1780, column: 6, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 1780, column: 6)
!5424 = !DILocation(line: 1780, column: 6, scope: !5377)
!5425 = !DILocalVariable(name: "maxdist_sq", scope: !5426, file: !3, line: 1781, type: !806)
!5426 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 1780, column: 9)
!5427 = !DILocation(line: 1781, column: 15, scope: !5426)
!5428 = !DILocation(line: 1781, column: 28, scope: !5426)
!5429 = !DILocation(line: 1781, column: 38, scope: !5426)
!5430 = !DILocation(line: 1781, column: 36, scope: !5426)
!5431 = !DILocalVariable(name: "lst", scope: !5426, file: !3, line: 1782, type: !1227)
!5432 = !DILocation(line: 1782, column: 13, scope: !5426)
!5433 = !DILocalVariable(name: "ref", scope: !5426, file: !3, line: 1783, type: !3251)
!5434 = !DILocation(line: 1783, column: 8, scope: !5426)
!5435 = !DILocalVariable(name: "curv", scope: !5426, file: !3, line: 1784, type: !2866)
!5436 = !DILocation(line: 1784, column: 14, scope: !5426)
!5437 = !DILocalVariable(name: "dis_sq", scope: !5426, file: !3, line: 1785, type: !357)
!5438 = !DILocation(line: 1785, column: 9, scope: !5426)
!5439 = !DILocalVariable(name: "curdis_sq", scope: !5426, file: !3, line: 1785, type: !357)
!5440 = !DILocation(line: 1785, column: 17, scope: !5426)
!5441 = !DILocation(line: 1788, column: 14, scope: !5426)
!5442 = !DILocation(line: 1788, column: 17, scope: !5426)
!5443 = !DILocation(line: 1788, column: 3, scope: !5426)
!5444 = !DILocation(line: 1789, column: 14, scope: !5426)
!5445 = !DILocation(line: 1789, column: 21, scope: !5426)
!5446 = !DILocation(line: 1789, column: 3, scope: !5426)
!5447 = !DILocation(line: 1791, column: 20, scope: !5426)
!5448 = !DILocation(line: 1791, column: 25, scope: !5426)
!5449 = !DILocation(line: 1791, column: 33, scope: !5426)
!5450 = !DILocation(line: 1791, column: 3, scope: !5426)
!5451 = !DILocation(line: 1793, column: 31, scope: !5426)
!5452 = !DILocation(line: 1793, column: 36, scope: !5426)
!5453 = !DILocation(line: 1793, column: 9, scope: !5426)
!5454 = !DILocation(line: 1793, column: 7, scope: !5426)
!5455 = !DILocation(line: 1794, column: 14, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 1794, column: 3)
!5457 = !DILocation(line: 1794, column: 19, scope: !5456)
!5458 = !DILocation(line: 1794, column: 12, scope: !5456)
!5459 = !DILocation(line: 1794, column: 8, scope: !5456)
!5460 = !DILocation(line: 1794, column: 26, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 1794, column: 3)
!5462 = !DILocation(line: 1794, column: 3, scope: !5456)
!5463 = !DILocalVariable(name: "kfe", scope: !5464, file: !3, line: 1795, type: !2861)
!5464 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 1794, column: 48)
!5465 = !DILocation(line: 1795, column: 15, scope: !5464)
!5466 = !DILocation(line: 1795, column: 21, scope: !5464)
!5467 = !DILocation(line: 1795, column: 26, scope: !5464)
!5468 = !DILocalVariable(name: "i", scope: !5464, file: !3, line: 1796, type: !35)
!5469 = !DILocation(line: 1796, column: 8, scope: !5464)
!5470 = !DILocation(line: 1798, column: 11, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 1798, column: 4)
!5472 = !DILocation(line: 1798, column: 9, scope: !5471)
!5473 = !DILocation(line: 1798, column: 16, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 1798, column: 4)
!5475 = !DILocation(line: 1798, column: 18, scope: !5474)
!5476 = !DILocation(line: 1798, column: 4, scope: !5471)
!5477 = !DILocalVariable(name: "kfv", scope: !5478, file: !3, line: 1799, type: !2866)
!5478 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 1798, column: 28)
!5479 = !DILocation(line: 1799, column: 16, scope: !5478)
!5480 = !DILocation(line: 1799, column: 22, scope: !5478)
!5481 = !DILocation(line: 1799, column: 26, scope: !5478)
!5482 = !DILocation(line: 1799, column: 31, scope: !5478)
!5483 = !DILocation(line: 1799, column: 36, scope: !5478)
!5484 = !DILocation(line: 1799, column: 41, scope: !5478)
!5485 = !DILocation(line: 1801, column: 22, scope: !5478)
!5486 = !DILocation(line: 1801, column: 27, scope: !5478)
!5487 = !DILocation(line: 1801, column: 32, scope: !5478)
!5488 = !DILocation(line: 1801, column: 40, scope: !5478)
!5489 = !DILocation(line: 1801, column: 45, scope: !5478)
!5490 = !DILocation(line: 1801, column: 5, scope: !5478)
!5491 = !DILocation(line: 1804, column: 9, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 1804, column: 9)
!5493 = !DILocation(line: 1804, column: 14, scope: !5492)
!5494 = !DILocation(line: 1804, column: 9, scope: !5478)
!5495 = !DILocation(line: 1805, column: 42, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 1805, column: 10)
!5497 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 1804, column: 33)
!5498 = !DILocation(line: 1805, column: 47, scope: !5496)
!5499 = !DILocation(line: 1805, column: 52, scope: !5496)
!5500 = !DILocation(line: 1805, column: 57, scope: !5496)
!5501 = !DILocation(line: 1805, column: 62, scope: !5496)
!5502 = !DILocation(line: 1805, column: 68, scope: !5496)
!5503 = !DILocation(line: 1805, column: 73, scope: !5496)
!5504 = !DILocation(line: 1805, column: 78, scope: !5496)
!5505 = !DILocation(line: 1805, column: 10, scope: !5496)
!5506 = !DILocation(line: 1805, column: 84, scope: !5496)
!5507 = !DILocation(line: 1805, column: 10, scope: !5497)
!5508 = !DILocation(line: 1806, column: 7, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 1805, column: 104)
!5510 = !DILocation(line: 1808, column: 5, scope: !5497)
!5511 = !DILocation(line: 1810, column: 31, scope: !5478)
!5512 = !DILocation(line: 1810, column: 36, scope: !5478)
!5513 = !DILocation(line: 1810, column: 41, scope: !5478)
!5514 = !DILocation(line: 1810, column: 14, scope: !5478)
!5515 = !DILocation(line: 1810, column: 12, scope: !5478)
!5516 = !DILocation(line: 1811, column: 9, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 1811, column: 9)
!5518 = !DILocation(line: 1811, column: 18, scope: !5517)
!5519 = !DILocation(line: 1811, column: 16, scope: !5517)
!5520 = !DILocation(line: 1811, column: 28, scope: !5517)
!5521 = !DILocation(line: 1811, column: 31, scope: !5517)
!5522 = !DILocation(line: 1811, column: 40, scope: !5517)
!5523 = !DILocation(line: 1811, column: 38, scope: !5517)
!5524 = !DILocation(line: 1811, column: 9, scope: !5478)
!5525 = !DILocation(line: 1812, column: 10, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1812, column: 10)
!5527 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 1811, column: 52)
!5528 = !DILocation(line: 1812, column: 15, scope: !5526)
!5529 = !DILocation(line: 1812, column: 18, scope: !5526)
!5530 = !DILocation(line: 1812, column: 24, scope: !5526)
!5531 = !DILocation(line: 1812, column: 30, scope: !5526)
!5532 = !DILocation(line: 1812, column: 10, scope: !5527)
!5533 = !DILocation(line: 1813, column: 35, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 1813, column: 11)
!5535 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 1812, column: 47)
!5536 = !DILocation(line: 1813, column: 40, scope: !5534)
!5537 = !DILocation(line: 1813, column: 43, scope: !5534)
!5538 = !DILocation(line: 1813, column: 49, scope: !5534)
!5539 = !DILocation(line: 1813, column: 54, scope: !5534)
!5540 = !DILocation(line: 1813, column: 11, scope: !5534)
!5541 = !DILocation(line: 1813, column: 68, scope: !5534)
!5542 = !DILocation(line: 1813, column: 11, scope: !5535)
!5543 = !DILocation(line: 1814, column: 15, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 1813, column: 74)
!5545 = !DILocation(line: 1814, column: 13, scope: !5544)
!5546 = !DILocation(line: 1815, column: 20, scope: !5544)
!5547 = !DILocation(line: 1815, column: 18, scope: !5544)
!5548 = !DILocation(line: 1816, column: 7, scope: !5544)
!5549 = !DILocation(line: 1817, column: 6, scope: !5535)
!5550 = !DILocation(line: 1819, column: 14, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 1818, column: 11)
!5552 = !DILocation(line: 1819, column: 12, scope: !5551)
!5553 = !DILocation(line: 1820, column: 19, scope: !5551)
!5554 = !DILocation(line: 1820, column: 17, scope: !5551)
!5555 = !DILocation(line: 1822, column: 5, scope: !5527)
!5556 = !DILocation(line: 1823, column: 4, scope: !5478)
!5557 = !DILocation(line: 1798, column: 24, scope: !5474)
!5558 = !DILocation(line: 1798, column: 4, scope: !5474)
!5559 = distinct !{!5559, !5476, !5560}
!5560 = !DILocation(line: 1823, column: 4, scope: !5471)
!5561 = !DILocation(line: 1824, column: 3, scope: !5464)
!5562 = !DILocation(line: 1794, column: 37, scope: !5461)
!5563 = !DILocation(line: 1794, column: 42, scope: !5461)
!5564 = !DILocation(line: 1794, column: 35, scope: !5461)
!5565 = !DILocation(line: 1794, column: 3, scope: !5461)
!5566 = distinct !{!5566, !5462, !5567}
!5567 = !DILocation(line: 1824, column: 3, scope: !5456)
!5568 = !DILocation(line: 1826, column: 8, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 1826, column: 7)
!5570 = !DILocation(line: 1826, column: 13, scope: !5569)
!5571 = !DILocation(line: 1826, column: 34, scope: !5569)
!5572 = !DILocation(line: 1826, column: 39, scope: !5569)
!5573 = !DILocation(line: 1826, column: 44, scope: !5569)
!5574 = !DILocation(line: 1826, column: 47, scope: !5569)
!5575 = !DILocation(line: 1826, column: 53, scope: !5569)
!5576 = !DILocation(line: 1826, column: 7, scope: !5426)
!5577 = !DILocation(line: 1827, column: 8, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 1827, column: 8)
!5579 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1826, column: 57)
!5580 = !DILocation(line: 1827, column: 8, scope: !5579)
!5581 = !DILocation(line: 1828, column: 13, scope: !5578)
!5582 = !DILocation(line: 1828, column: 6, scope: !5578)
!5583 = !DILocation(line: 1828, column: 11, scope: !5578)
!5584 = !DILocation(line: 1828, column: 5, scope: !5578)
!5585 = !DILocation(line: 1830, column: 8, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 1830, column: 8)
!5587 = !DILocation(line: 1830, column: 8, scope: !5579)
!5588 = !DILocation(line: 1831, column: 16, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5586, file: !3, line: 1830, column: 14)
!5590 = !DILocation(line: 1831, column: 19, scope: !5589)
!5591 = !DILocation(line: 1831, column: 25, scope: !5589)
!5592 = !DILocation(line: 1831, column: 5, scope: !5589)
!5593 = !DILocation(line: 1832, column: 16, scope: !5589)
!5594 = !DILocation(line: 1832, column: 23, scope: !5589)
!5595 = !DILocation(line: 1832, column: 29, scope: !5589)
!5596 = !DILocation(line: 1832, column: 5, scope: !5589)
!5597 = !DILocation(line: 1836, column: 25, scope: !5589)
!5598 = !DILocation(line: 1836, column: 31, scope: !5589)
!5599 = !DILocation(line: 1836, column: 5, scope: !5589)
!5600 = !DILocation(line: 1836, column: 10, scope: !5589)
!5601 = !DILocation(line: 1836, column: 15, scope: !5589)
!5602 = !DILocation(line: 1836, column: 23, scope: !5589)
!5603 = !DILocation(line: 1837, column: 25, scope: !5589)
!5604 = !DILocation(line: 1837, column: 31, scope: !5589)
!5605 = !DILocation(line: 1837, column: 5, scope: !5589)
!5606 = !DILocation(line: 1837, column: 10, scope: !5589)
!5607 = !DILocation(line: 1837, column: 15, scope: !5589)
!5608 = !DILocation(line: 1837, column: 23, scope: !5589)
!5609 = !DILocation(line: 1838, column: 4, scope: !5589)
!5610 = !DILocation(line: 1840, column: 11, scope: !5579)
!5611 = !DILocation(line: 1840, column: 4, scope: !5579)
!5612 = !DILocation(line: 1843, column: 8, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 1843, column: 8)
!5614 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1842, column: 8)
!5615 = !DILocation(line: 1843, column: 8, scope: !5614)
!5616 = !DILocation(line: 1844, column: 13, scope: !5613)
!5617 = !DILocation(line: 1844, column: 6, scope: !5613)
!5618 = !DILocation(line: 1844, column: 11, scope: !5613)
!5619 = !DILocation(line: 1844, column: 5, scope: !5613)
!5620 = !DILocation(line: 1846, column: 4, scope: !5614)
!5621 = !DILocation(line: 1850, column: 6, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5377, file: !3, line: 1850, column: 6)
!5623 = !DILocation(line: 1850, column: 6, scope: !5377)
!5624 = !DILocation(line: 1851, column: 4, scope: !5622)
!5625 = !DILocation(line: 1851, column: 9, scope: !5622)
!5626 = !DILocation(line: 1851, column: 3, scope: !5622)
!5627 = !DILocation(line: 1853, column: 2, scope: !5377)
!5628 = !DILocation(line: 1854, column: 1, scope: !5377)
!5629 = distinct !DISubprogram(name: "knife_find_closest_edge", scope: !3, file: !3, line: 1643, type: !5630, scopeLine: 1645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!5630 = !DISubroutineType(types: !5631)
!5631 = !{!2861, !3512, !392, !392, !2729, !5380}
!5632 = !DILocalVariable(name: "kcd", arg: 1, scope: !5629, file: !3, line: 1643, type: !3512)
!5633 = !DILocation(line: 1643, column: 61, scope: !5629)
!5634 = !DILocalVariable(name: "p", arg: 2, scope: !5629, file: !3, line: 1643, type: !392)
!5635 = !DILocation(line: 1643, column: 72, scope: !5629)
!5636 = !DILocalVariable(name: "cagep", arg: 3, scope: !5629, file: !3, line: 1643, type: !392)
!5637 = !DILocation(line: 1643, column: 84, scope: !5629)
!5638 = !DILocalVariable(name: "fptr", arg: 4, scope: !5629, file: !3, line: 1644, type: !2729)
!5639 = !DILocation(line: 1644, column: 52, scope: !5629)
!5640 = !DILocalVariable(name: "is_space", arg: 5, scope: !5629, file: !3, line: 1644, type: !5380)
!5641 = !DILocation(line: 1644, column: 64, scope: !5629)
!5642 = !DILocalVariable(name: "f", scope: !5629, file: !3, line: 1646, type: !2730)
!5643 = !DILocation(line: 1646, column: 10, scope: !5629)
!5644 = !DILocalVariable(name: "co", scope: !5629, file: !3, line: 1647, type: !555)
!5645 = !DILocation(line: 1647, column: 8, scope: !5629)
!5646 = !DILocalVariable(name: "cageco", scope: !5629, file: !3, line: 1647, type: !555)
!5647 = !DILocation(line: 1647, column: 15, scope: !5629)
!5648 = !DILocalVariable(name: "sco", scope: !5629, file: !3, line: 1647, type: !373)
!5649 = !DILocation(line: 1647, column: 26, scope: !5629)
!5650 = !DILocalVariable(name: "maxdist", scope: !5629, file: !3, line: 1648, type: !357)
!5651 = !DILocation(line: 1648, column: 8, scope: !5629)
!5652 = !DILocation(line: 1648, column: 34, scope: !5629)
!5653 = !DILocation(line: 1648, column: 39, scope: !5629)
!5654 = !DILocation(line: 1648, column: 44, scope: !5629)
!5655 = !DILocation(line: 1648, column: 18, scope: !5629)
!5656 = !DILocation(line: 1650, column: 6, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 1650, column: 6)
!5658 = !DILocation(line: 1650, column: 11, scope: !5657)
!5659 = !DILocation(line: 1650, column: 6, scope: !5629)
!5660 = !DILocation(line: 1651, column: 11, scope: !5657)
!5661 = !DILocation(line: 1651, column: 3, scope: !5657)
!5662 = !DILocation(line: 1653, column: 30, scope: !5629)
!5663 = !DILocation(line: 1653, column: 35, scope: !5629)
!5664 = !DILocation(line: 1653, column: 39, scope: !5629)
!5665 = !DILocation(line: 1653, column: 6, scope: !5629)
!5666 = !DILocation(line: 1653, column: 4, scope: !5629)
!5667 = !DILocation(line: 1654, column: 15, scope: !5629)
!5668 = !DILocation(line: 1654, column: 14, scope: !5629)
!5669 = !DILocation(line: 1654, column: 3, scope: !5629)
!5670 = !DILocation(line: 1654, column: 12, scope: !5629)
!5671 = !DILocation(line: 1656, column: 21, scope: !5629)
!5672 = !DILocation(line: 1656, column: 2, scope: !5629)
!5673 = !DILocation(line: 1656, column: 7, scope: !5629)
!5674 = !DILocation(line: 1656, column: 12, scope: !5629)
!5675 = !DILocation(line: 1656, column: 19, scope: !5629)
!5676 = !DILocation(line: 1658, column: 6, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 1658, column: 6)
!5678 = !DILocation(line: 1658, column: 6, scope: !5629)
!5679 = !DILocalVariable(name: "maxdist_sq", scope: !5680, file: !3, line: 1659, type: !806)
!5680 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1658, column: 9)
!5681 = !DILocation(line: 1659, column: 15, scope: !5680)
!5682 = !DILocation(line: 1659, column: 28, scope: !5680)
!5683 = !DILocation(line: 1659, column: 38, scope: !5680)
!5684 = !DILocation(line: 1659, column: 36, scope: !5680)
!5685 = !DILocalVariable(name: "cure", scope: !5680, file: !3, line: 1660, type: !2861)
!5686 = !DILocation(line: 1660, column: 14, scope: !5680)
!5687 = !DILocalVariable(name: "cur_cagep", scope: !5680, file: !3, line: 1661, type: !555)
!5688 = !DILocation(line: 1661, column: 9, scope: !5680)
!5689 = !DILocalVariable(name: "lst", scope: !5680, file: !3, line: 1662, type: !1227)
!5690 = !DILocation(line: 1662, column: 13, scope: !5680)
!5691 = !DILocalVariable(name: "ref", scope: !5680, file: !3, line: 1663, type: !3251)
!5692 = !DILocation(line: 1663, column: 8, scope: !5680)
!5693 = !DILocalVariable(name: "dis_sq", scope: !5680, file: !3, line: 1664, type: !357)
!5694 = !DILocation(line: 1664, column: 9, scope: !5680)
!5695 = !DILocalVariable(name: "curdis_sq", scope: !5680, file: !3, line: 1664, type: !357)
!5696 = !DILocation(line: 1664, column: 17, scope: !5680)
!5697 = !DILocation(line: 1667, column: 14, scope: !5680)
!5698 = !DILocation(line: 1667, column: 17, scope: !5680)
!5699 = !DILocation(line: 1667, column: 3, scope: !5680)
!5700 = !DILocation(line: 1668, column: 14, scope: !5680)
!5701 = !DILocation(line: 1668, column: 21, scope: !5680)
!5702 = !DILocation(line: 1668, column: 3, scope: !5680)
!5703 = !DILocation(line: 1670, column: 20, scope: !5680)
!5704 = !DILocation(line: 1670, column: 25, scope: !5680)
!5705 = !DILocation(line: 1670, column: 33, scope: !5680)
!5706 = !DILocation(line: 1670, column: 3, scope: !5680)
!5707 = !DILocation(line: 1673, column: 31, scope: !5680)
!5708 = !DILocation(line: 1673, column: 36, scope: !5680)
!5709 = !DILocation(line: 1673, column: 9, scope: !5680)
!5710 = !DILocation(line: 1673, column: 7, scope: !5680)
!5711 = !DILocation(line: 1674, column: 14, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 1674, column: 3)
!5713 = !DILocation(line: 1674, column: 19, scope: !5712)
!5714 = !DILocation(line: 1674, column: 12, scope: !5712)
!5715 = !DILocation(line: 1674, column: 8, scope: !5712)
!5716 = !DILocation(line: 1674, column: 26, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 1674, column: 3)
!5718 = !DILocation(line: 1674, column: 3, scope: !5712)
!5719 = !DILocalVariable(name: "kfe", scope: !5720, file: !3, line: 1675, type: !2861)
!5720 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 1674, column: 48)
!5721 = !DILocation(line: 1675, column: 15, scope: !5720)
!5722 = !DILocation(line: 1675, column: 21, scope: !5720)
!5723 = !DILocation(line: 1675, column: 26, scope: !5720)
!5724 = !DILocalVariable(name: "test_cagep", scope: !5720, file: !3, line: 1676, type: !555)
!5725 = !DILocation(line: 1676, column: 10, scope: !5720)
!5726 = !DILocalVariable(name: "lambda", scope: !5720, file: !3, line: 1677, type: !357)
!5727 = !DILocation(line: 1677, column: 10, scope: !5720)
!5728 = !DILocation(line: 1680, column: 21, scope: !5720)
!5729 = !DILocation(line: 1680, column: 26, scope: !5720)
!5730 = !DILocation(line: 1680, column: 31, scope: !5720)
!5731 = !DILocation(line: 1680, column: 35, scope: !5720)
!5732 = !DILocation(line: 1680, column: 43, scope: !5720)
!5733 = !DILocation(line: 1680, column: 48, scope: !5720)
!5734 = !DILocation(line: 1680, column: 52, scope: !5720)
!5735 = !DILocation(line: 1680, column: 4, scope: !5720)
!5736 = !DILocation(line: 1681, column: 21, scope: !5720)
!5737 = !DILocation(line: 1681, column: 26, scope: !5720)
!5738 = !DILocation(line: 1681, column: 31, scope: !5720)
!5739 = !DILocation(line: 1681, column: 35, scope: !5720)
!5740 = !DILocation(line: 1681, column: 43, scope: !5720)
!5741 = !DILocation(line: 1681, column: 48, scope: !5720)
!5742 = !DILocation(line: 1681, column: 52, scope: !5720)
!5743 = !DILocation(line: 1681, column: 4, scope: !5720)
!5744 = !DILocation(line: 1684, column: 8, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 1684, column: 8)
!5746 = !DILocation(line: 1684, column: 13, scope: !5745)
!5747 = !DILocation(line: 1684, column: 8, scope: !5720)
!5748 = !DILocalVariable(name: "sco_snap", scope: !5749, file: !3, line: 1686, type: !373)
!5749 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 1684, column: 32)
!5750 = !DILocation(line: 1686, column: 11, scope: !5749)
!5751 = !DILocation(line: 1687, column: 30, scope: !5749)
!5752 = !DILocation(line: 1687, column: 35, scope: !5749)
!5753 = !DILocation(line: 1687, column: 39, scope: !5749)
!5754 = !DILocation(line: 1687, column: 44, scope: !5749)
!5755 = !DILocation(line: 1687, column: 49, scope: !5749)
!5756 = !DILocation(line: 1687, column: 53, scope: !5749)
!5757 = !DILocation(line: 1687, column: 58, scope: !5749)
!5758 = !DILocation(line: 1687, column: 63, scope: !5749)
!5759 = !DILocation(line: 1687, column: 68, scope: !5749)
!5760 = !DILocation(line: 1687, column: 74, scope: !5749)
!5761 = !DILocation(line: 1687, column: 79, scope: !5749)
!5762 = !DILocation(line: 1687, column: 84, scope: !5749)
!5763 = !DILocation(line: 1687, column: 90, scope: !5749)
!5764 = !DILocation(line: 1687, column: 5, scope: !5749)
!5765 = !DILocation(line: 1688, column: 35, scope: !5749)
!5766 = !DILocation(line: 1688, column: 45, scope: !5749)
!5767 = !DILocation(line: 1688, column: 50, scope: !5749)
!5768 = !DILocation(line: 1688, column: 54, scope: !5749)
!5769 = !DILocation(line: 1688, column: 59, scope: !5749)
!5770 = !DILocation(line: 1688, column: 64, scope: !5749)
!5771 = !DILocation(line: 1688, column: 68, scope: !5749)
!5772 = !DILocation(line: 1688, column: 14, scope: !5749)
!5773 = !DILocation(line: 1688, column: 12, scope: !5749)
!5774 = !DILocation(line: 1691, column: 10, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5749, file: !3, line: 1691, column: 9)
!5776 = !DILocation(line: 1691, column: 17, scope: !5775)
!5777 = !DILocation(line: 1691, column: 44, scope: !5775)
!5778 = !DILocation(line: 1691, column: 48, scope: !5775)
!5779 = !DILocation(line: 1691, column: 55, scope: !5775)
!5780 = !DILocation(line: 1691, column: 9, scope: !5749)
!5781 = !DILocation(line: 1692, column: 6, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 1691, column: 83)
!5783 = !DILocation(line: 1695, column: 31, scope: !5749)
!5784 = !DILocation(line: 1695, column: 36, scope: !5749)
!5785 = !DILocation(line: 1695, column: 14, scope: !5749)
!5786 = !DILocation(line: 1695, column: 12, scope: !5749)
!5787 = !DILocation(line: 1696, column: 9, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5749, file: !3, line: 1696, column: 9)
!5789 = !DILocation(line: 1696, column: 18, scope: !5788)
!5790 = !DILocation(line: 1696, column: 16, scope: !5788)
!5791 = !DILocation(line: 1696, column: 28, scope: !5788)
!5792 = !DILocation(line: 1696, column: 31, scope: !5788)
!5793 = !DILocation(line: 1696, column: 40, scope: !5788)
!5794 = !DILocation(line: 1696, column: 38, scope: !5788)
!5795 = !DILocation(line: 1696, column: 9, scope: !5749)
!5796 = !DILocation(line: 1698, column: 5, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 1696, column: 52)
!5798 = !DILocation(line: 1700, column: 6, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 1699, column: 10)
!5800 = !DILocation(line: 1702, column: 4, scope: !5749)
!5801 = !DILocation(line: 1704, column: 46, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 1703, column: 9)
!5803 = !DILocation(line: 1704, column: 51, scope: !5802)
!5804 = !DILocation(line: 1704, column: 56, scope: !5802)
!5805 = !DILocation(line: 1704, column: 60, scope: !5802)
!5806 = !DILocation(line: 1704, column: 65, scope: !5802)
!5807 = !DILocation(line: 1704, column: 70, scope: !5802)
!5808 = !DILocation(line: 1704, column: 74, scope: !5802)
!5809 = !DILocation(line: 1704, column: 14, scope: !5802)
!5810 = !DILocation(line: 1704, column: 12, scope: !5802)
!5811 = !DILocation(line: 1705, column: 9, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1705, column: 9)
!5813 = !DILocation(line: 1705, column: 18, scope: !5812)
!5814 = !DILocation(line: 1705, column: 16, scope: !5812)
!5815 = !DILocation(line: 1705, column: 28, scope: !5812)
!5816 = !DILocation(line: 1705, column: 31, scope: !5812)
!5817 = !DILocation(line: 1705, column: 40, scope: !5812)
!5818 = !DILocation(line: 1705, column: 38, scope: !5812)
!5819 = !DILocation(line: 1705, column: 9, scope: !5802)
!5820 = !DILocation(line: 1706, column: 36, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 1705, column: 52)
!5822 = !DILocation(line: 1706, column: 41, scope: !5821)
!5823 = !DILocation(line: 1706, column: 46, scope: !5821)
!5824 = !DILocation(line: 1706, column: 50, scope: !5821)
!5825 = !DILocation(line: 1706, column: 55, scope: !5821)
!5826 = !DILocation(line: 1706, column: 60, scope: !5821)
!5827 = !DILocation(line: 1706, column: 64, scope: !5821)
!5828 = !DILocation(line: 1706, column: 15, scope: !5821)
!5829 = !DILocation(line: 1706, column: 13, scope: !5821)
!5830 = !DILocation(line: 1707, column: 5, scope: !5821)
!5831 = !DILocation(line: 1709, column: 6, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 1708, column: 10)
!5833 = !DILocation(line: 1714, column: 25, scope: !5720)
!5834 = !DILocation(line: 1714, column: 30, scope: !5720)
!5835 = !DILocation(line: 1714, column: 42, scope: !5720)
!5836 = !DILocation(line: 1714, column: 47, scope: !5720)
!5837 = !DILocation(line: 1714, column: 51, scope: !5720)
!5838 = !DILocation(line: 1714, column: 59, scope: !5720)
!5839 = !DILocation(line: 1714, column: 64, scope: !5720)
!5840 = !DILocation(line: 1714, column: 68, scope: !5720)
!5841 = !DILocation(line: 1714, column: 76, scope: !5720)
!5842 = !DILocation(line: 1714, column: 4, scope: !5720)
!5843 = !DILocation(line: 1716, column: 8, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 1716, column: 8)
!5845 = !DILocation(line: 1716, column: 13, scope: !5844)
!5846 = !DILocation(line: 1716, column: 16, scope: !5844)
!5847 = !DILocation(line: 1716, column: 22, scope: !5844)
!5848 = !DILocation(line: 1716, column: 28, scope: !5844)
!5849 = !DILocation(line: 1716, column: 8, scope: !5720)
!5850 = !DILocation(line: 1718, column: 33, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 1718, column: 9)
!5852 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1716, column: 45)
!5853 = !DILocation(line: 1718, column: 38, scope: !5851)
!5854 = !DILocation(line: 1718, column: 41, scope: !5851)
!5855 = !DILocation(line: 1718, column: 47, scope: !5851)
!5856 = !DILocation(line: 1718, column: 9, scope: !5851)
!5857 = !DILocation(line: 1718, column: 9, scope: !5852)
!5858 = !DILocation(line: 1719, column: 6, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 1718, column: 66)
!5860 = !DILocation(line: 1721, column: 4, scope: !5852)
!5861 = !DILocation(line: 1723, column: 11, scope: !5720)
!5862 = !DILocation(line: 1723, column: 9, scope: !5720)
!5863 = !DILocation(line: 1724, column: 16, scope: !5720)
!5864 = !DILocation(line: 1724, column: 14, scope: !5720)
!5865 = !DILocation(line: 1725, column: 15, scope: !5720)
!5866 = !DILocation(line: 1725, column: 26, scope: !5720)
!5867 = !DILocation(line: 1725, column: 4, scope: !5720)
!5868 = !DILocation(line: 1726, column: 3, scope: !5720)
!5869 = !DILocation(line: 1674, column: 37, scope: !5717)
!5870 = !DILocation(line: 1674, column: 42, scope: !5717)
!5871 = !DILocation(line: 1674, column: 35, scope: !5717)
!5872 = !DILocation(line: 1674, column: 3, scope: !5717)
!5873 = distinct !{!5873, !5718, !5874}
!5874 = !DILocation(line: 1726, column: 3, scope: !5712)
!5875 = !DILocation(line: 1728, column: 7, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 1728, column: 7)
!5877 = !DILocation(line: 1728, column: 7, scope: !5680)
!5878 = !DILocation(line: 1729, column: 12, scope: !5876)
!5879 = !DILocation(line: 1729, column: 5, scope: !5876)
!5880 = !DILocation(line: 1729, column: 10, scope: !5876)
!5881 = !DILocation(line: 1729, column: 4, scope: !5876)
!5882 = !DILocation(line: 1731, column: 7, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 1731, column: 7)
!5884 = !DILocation(line: 1731, column: 7, scope: !5680)
!5885 = !DILocation(line: 1732, column: 9, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 1732, column: 8)
!5887 = distinct !DILexicalBlock(scope: !5883, file: !3, line: 1731, column: 13)
!5888 = !DILocation(line: 1732, column: 14, scope: !5886)
!5889 = !DILocation(line: 1732, column: 35, scope: !5886)
!5890 = !DILocation(line: 1732, column: 40, scope: !5886)
!5891 = !DILocation(line: 1732, column: 46, scope: !5886)
!5892 = !DILocation(line: 1732, column: 39, scope: !5886)
!5893 = !DILocation(line: 1732, column: 8, scope: !5887)
!5894 = !DILocalVariable(name: "edgesnap", scope: !5895, file: !3, line: 1733, type: !2866)
!5895 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 1732, column: 50)
!5896 = !DILocation(line: 1733, column: 16, scope: !5895)
!5897 = !DILocation(line: 1735, column: 9, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 1735, column: 9)
!5899 = !DILocation(line: 1735, column: 14, scope: !5898)
!5900 = !DILocation(line: 1735, column: 9, scope: !5895)
!5901 = !DILocation(line: 1736, column: 18, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 1735, column: 30)
!5903 = !DILocation(line: 1736, column: 21, scope: !5902)
!5904 = !DILocation(line: 1736, column: 27, scope: !5902)
!5905 = !DILocation(line: 1736, column: 31, scope: !5902)
!5906 = !DILocation(line: 1736, column: 35, scope: !5902)
!5907 = !DILocation(line: 1736, column: 41, scope: !5902)
!5908 = !DILocation(line: 1736, column: 45, scope: !5902)
!5909 = !DILocation(line: 1736, column: 6, scope: !5902)
!5910 = !DILocation(line: 1737, column: 18, scope: !5902)
!5911 = !DILocation(line: 1737, column: 25, scope: !5902)
!5912 = !DILocation(line: 1737, column: 31, scope: !5902)
!5913 = !DILocation(line: 1737, column: 35, scope: !5902)
!5914 = !DILocation(line: 1737, column: 43, scope: !5902)
!5915 = !DILocation(line: 1737, column: 49, scope: !5902)
!5916 = !DILocation(line: 1737, column: 53, scope: !5902)
!5917 = !DILocation(line: 1737, column: 6, scope: !5902)
!5918 = !DILocation(line: 1738, column: 5, scope: !5902)
!5919 = !DILocalVariable(name: "lambda", scope: !5920, file: !3, line: 1740, type: !357)
!5920 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 1739, column: 10)
!5921 = !DILocation(line: 1740, column: 12, scope: !5920)
!5922 = !DILocation(line: 1740, column: 42, scope: !5920)
!5923 = !DILocation(line: 1740, column: 53, scope: !5920)
!5924 = !DILocation(line: 1740, column: 59, scope: !5920)
!5925 = !DILocation(line: 1740, column: 63, scope: !5920)
!5926 = !DILocation(line: 1740, column: 71, scope: !5920)
!5927 = !DILocation(line: 1740, column: 77, scope: !5920)
!5928 = !DILocation(line: 1740, column: 81, scope: !5920)
!5929 = !DILocation(line: 1740, column: 21, scope: !5920)
!5930 = !DILocation(line: 1741, column: 17, scope: !5920)
!5931 = !DILocation(line: 1741, column: 24, scope: !5920)
!5932 = !DILocation(line: 1741, column: 6, scope: !5920)
!5933 = !DILocation(line: 1742, column: 21, scope: !5920)
!5934 = !DILocation(line: 1742, column: 24, scope: !5920)
!5935 = !DILocation(line: 1742, column: 30, scope: !5920)
!5936 = !DILocation(line: 1742, column: 34, scope: !5920)
!5937 = !DILocation(line: 1742, column: 38, scope: !5920)
!5938 = !DILocation(line: 1742, column: 44, scope: !5920)
!5939 = !DILocation(line: 1742, column: 48, scope: !5920)
!5940 = !DILocation(line: 1742, column: 52, scope: !5920)
!5941 = !DILocation(line: 1742, column: 6, scope: !5920)
!5942 = !DILocation(line: 1747, column: 31, scope: !5895)
!5943 = !DILocation(line: 1747, column: 36, scope: !5895)
!5944 = !DILocation(line: 1747, column: 39, scope: !5895)
!5945 = !DILocation(line: 1747, column: 16, scope: !5895)
!5946 = !DILocation(line: 1747, column: 14, scope: !5895)
!5947 = !DILocation(line: 1748, column: 25, scope: !5895)
!5948 = !DILocation(line: 1748, column: 35, scope: !5895)
!5949 = !DILocation(line: 1748, column: 5, scope: !5895)
!5950 = !DILocation(line: 1748, column: 10, scope: !5895)
!5951 = !DILocation(line: 1748, column: 15, scope: !5895)
!5952 = !DILocation(line: 1748, column: 23, scope: !5895)
!5953 = !DILocation(line: 1749, column: 25, scope: !5895)
!5954 = !DILocation(line: 1749, column: 35, scope: !5895)
!5955 = !DILocation(line: 1749, column: 5, scope: !5895)
!5956 = !DILocation(line: 1749, column: 10, scope: !5895)
!5957 = !DILocation(line: 1749, column: 15, scope: !5895)
!5958 = !DILocation(line: 1749, column: 23, scope: !5895)
!5959 = !DILocation(line: 1751, column: 4, scope: !5895)
!5960 = !DILocation(line: 1753, column: 5, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 1752, column: 9)
!5962 = !DILocation(line: 1755, column: 3, scope: !5887)
!5963 = !DILocation(line: 1757, column: 10, scope: !5680)
!5964 = !DILocation(line: 1757, column: 3, scope: !5680)
!5965 = !DILocation(line: 1760, column: 6, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 1760, column: 6)
!5967 = !DILocation(line: 1760, column: 6, scope: !5629)
!5968 = !DILocation(line: 1761, column: 4, scope: !5966)
!5969 = !DILocation(line: 1761, column: 9, scope: !5966)
!5970 = !DILocation(line: 1761, column: 3, scope: !5966)
!5971 = !DILocation(line: 1763, column: 2, scope: !5629)
!5972 = !DILocation(line: 1764, column: 1, scope: !5629)
!5973 = distinct !DISubprogram(name: "knife_input_ray_segment", scope: !3, file: !3, line: 1522, type: !5974, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{null, !3512, !997, !806, !392, !392}
!5976 = !DILocalVariable(name: "kcd", arg: 1, scope: !5973, file: !3, line: 1522, type: !3512)
!5977 = !DILocation(line: 1522, column: 55, scope: !5973)
!5978 = !DILocalVariable(name: "mval", arg: 2, scope: !5973, file: !3, line: 1522, type: !997)
!5979 = !DILocation(line: 1522, column: 72, scope: !5973)
!5980 = !DILocalVariable(name: "ofs", arg: 3, scope: !5973, file: !3, line: 1522, type: !806)
!5981 = !DILocation(line: 1522, column: 93, scope: !5973)
!5982 = !DILocalVariable(name: "r_origin", arg: 4, scope: !5973, file: !3, line: 1523, type: !392)
!5983 = !DILocation(line: 1523, column: 43, scope: !5973)
!5984 = !DILocalVariable(name: "r_origin_ofs", arg: 5, scope: !5973, file: !3, line: 1523, type: !392)
!5985 = !DILocation(line: 1523, column: 62, scope: !5973)
!5986 = !DILocalVariable(name: "mats", scope: !5973, file: !3, line: 1525, type: !5987)
!5987 = !DIDerivedType(tag: DW_TAG_typedef, name: "bglMats", file: !5988, line: 214, baseType: !5989)
!5988 = !DIFile(filename: "blender/source/blender/editors/include/BIF_glutil.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bglMats", file: !5988, line: 210, size: 2176, elements: !5990)
!5990 = !{!5991, !5993, !5994}
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "modelview", scope: !5989, file: !5988, line: 211, baseType: !5992, size: 1024)
!5992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2389, size: 1024, elements: !2773)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "projection", scope: !5989, file: !5988, line: 212, baseType: !5992, size: 1024, offset: 1024)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "viewport", scope: !5989, file: !5988, line: 213, baseType: !961, size: 128, offset: 2048)
!5995 = !DILocation(line: 1525, column: 10, scope: !5973)
!5996 = !DILocation(line: 1527, column: 2, scope: !5973)
!5997 = !DILocation(line: 1530, column: 29, scope: !5973)
!5998 = !DILocation(line: 1530, column: 43, scope: !5973)
!5999 = !DILocation(line: 1530, column: 52, scope: !5973)
!6000 = !DILocation(line: 1530, column: 2, scope: !5973)
!6001 = !DILocation(line: 1531, column: 29, scope: !5973)
!6002 = !DILocation(line: 1531, column: 43, scope: !5973)
!6003 = !DILocation(line: 1531, column: 52, scope: !5973)
!6004 = !DILocation(line: 1531, column: 61, scope: !5973)
!6005 = !DILocation(line: 1531, column: 2, scope: !5973)
!6006 = !DILocation(line: 1534, column: 15, scope: !5973)
!6007 = !DILocation(line: 1534, column: 20, scope: !5973)
!6008 = !DILocation(line: 1534, column: 24, scope: !5973)
!6009 = !DILocation(line: 1534, column: 30, scope: !5973)
!6010 = !DILocation(line: 1534, column: 35, scope: !5973)
!6011 = !DILocation(line: 1534, column: 39, scope: !5973)
!6012 = !DILocation(line: 1534, column: 2, scope: !5973)
!6013 = !DILocation(line: 1536, column: 12, scope: !5973)
!6014 = !DILocation(line: 1536, column: 17, scope: !5973)
!6015 = !DILocation(line: 1536, column: 21, scope: !5973)
!6016 = !DILocation(line: 1536, column: 27, scope: !5973)
!6017 = !DILocation(line: 1536, column: 2, scope: !5973)
!6018 = !DILocation(line: 1537, column: 12, scope: !5973)
!6019 = !DILocation(line: 1537, column: 17, scope: !5973)
!6020 = !DILocation(line: 1537, column: 21, scope: !5973)
!6021 = !DILocation(line: 1537, column: 27, scope: !5973)
!6022 = !DILocation(line: 1537, column: 2, scope: !5973)
!6023 = !DILocation(line: 1538, column: 1, scope: !5973)
!6024 = distinct !DISubprogram(name: "copy_v3_v3", scope: !5212, file: !5212, line: 64, type: !5213, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!6025 = !DILocalVariable(name: "r", arg: 1, scope: !6024, file: !5212, line: 64, type: !392)
!6026 = !DILocation(line: 64, column: 31, scope: !6024)
!6027 = !DILocalVariable(name: "a", arg: 2, scope: !6024, file: !5212, line: 64, type: !997)
!6028 = !DILocation(line: 64, column: 49, scope: !6024)
!6029 = !DILocation(line: 66, column: 9, scope: !6024)
!6030 = !DILocation(line: 66, column: 2, scope: !6024)
!6031 = !DILocation(line: 66, column: 7, scope: !6024)
!6032 = !DILocation(line: 67, column: 9, scope: !6024)
!6033 = !DILocation(line: 67, column: 2, scope: !6024)
!6034 = !DILocation(line: 67, column: 7, scope: !6024)
!6035 = !DILocation(line: 68, column: 9, scope: !6024)
!6036 = !DILocation(line: 68, column: 2, scope: !6024)
!6037 = !DILocation(line: 68, column: 7, scope: !6024)
!6038 = !DILocation(line: 69, column: 1, scope: !6024)
!6039 = distinct !DISubprogram(name: "knife_find_line_hits", scope: !3, file: !3, line: 1259, type: !4371, scopeLine: 1260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!6040 = !DILocalVariable(name: "kcd", arg: 1, scope: !6039, file: !3, line: 1259, type: !3512)
!6041 = !DILocation(line: 1259, column: 52, scope: !6039)
!6042 = !DILocalVariable(name: "mats", scope: !6039, file: !3, line: 1261, type: !5987)
!6043 = !DILocation(line: 1261, column: 10, scope: !6039)
!6044 = !DILocalVariable(name: "faces", scope: !6039, file: !3, line: 1262, type: !6045)
!6045 = !DIDerivedType(tag: DW_TAG_typedef, name: "SmallHash", file: !6046, line: 52, baseType: !6047)
!6046 = !DIFile(filename: "blender/source/blender/blenlib/BLI_smallhash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmallHash", file: !6046, line: 45, size: 16960, elements: !6048)
!6048 = !{!6049, !6050, !6051, !6052, !6059}
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "nbuckets", scope: !6047, file: !6046, line: 46, baseType: !56, size: 32)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "nentries", scope: !6047, file: !6046, line: 47, baseType: !56, size: 32, offset: 32)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "cursize", scope: !6047, file: !6046, line: 48, baseType: !56, size: 32, offset: 64)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !6047, file: !6046, line: 50, baseType: !6053, size: 64, offset: 128)
!6053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6054, size: 64)
!6054 = !DIDerivedType(tag: DW_TAG_typedef, name: "SmallHashEntry", file: !6046, line: 40, baseType: !6055)
!6055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6046, line: 37, size: 128, elements: !6056)
!6056 = !{!6057, !6058}
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6055, file: !6046, line: 38, baseType: !3238, size: 64)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6055, file: !6046, line: 39, baseType: !18, size: 64, offset: 64)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "buckets_stack", scope: !6047, file: !6046, line: 51, baseType: !6060, size: 16768, offset: 192)
!6060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6054, size: 16768, elements: !6061)
!6061 = !{!6062}
!6062 = !DISubrange(count: 131)
!6063 = !DILocation(line: 1262, column: 12, scope: !6039)
!6064 = !DILocalVariable(name: "kfes", scope: !6039, file: !3, line: 1262, type: !6045)
!6065 = !DILocation(line: 1262, column: 19, scope: !6039)
!6066 = !DILocalVariable(name: "kfvs", scope: !6039, file: !3, line: 1262, type: !6045)
!6067 = !DILocation(line: 1262, column: 25, scope: !6039)
!6068 = !DILocalVariable(name: "v1", scope: !6039, file: !3, line: 1263, type: !555)
!6069 = !DILocation(line: 1263, column: 8, scope: !6039)
!6070 = !DILocalVariable(name: "v2", scope: !6039, file: !3, line: 1263, type: !555)
!6071 = !DILocation(line: 1263, column: 15, scope: !6039)
!6072 = !DILocalVariable(name: "v3", scope: !6039, file: !3, line: 1263, type: !555)
!6073 = !DILocation(line: 1263, column: 22, scope: !6039)
!6074 = !DILocalVariable(name: "v4", scope: !6039, file: !3, line: 1263, type: !555)
!6075 = !DILocation(line: 1263, column: 29, scope: !6039)
!6076 = !DILocalVariable(name: "s1", scope: !6039, file: !3, line: 1263, type: !373)
!6077 = !DILocation(line: 1263, column: 36, scope: !6039)
!6078 = !DILocalVariable(name: "s2", scope: !6039, file: !3, line: 1263, type: !373)
!6079 = !DILocation(line: 1263, column: 43, scope: !6039)
!6080 = !DILocalVariable(name: "planetree", scope: !6039, file: !3, line: 1264, type: !6081)
!6081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6082, size: 64)
!6082 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTree", file: !6083, line: 43, baseType: !6084)
!6083 = !DIFile(filename: "blender/source/blender/blenlib/BLI_kdopbvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6084 = !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTree", file: !6083, line: 42, flags: DIFlagFwdDecl)
!6085 = !DILocation(line: 1264, column: 11, scope: !6039)
!6086 = !DILocalVariable(name: "tree", scope: !6039, file: !3, line: 1264, type: !6081)
!6087 = !DILocation(line: 1264, column: 23, scope: !6039)
!6088 = !DILocalVariable(name: "results", scope: !6039, file: !3, line: 1265, type: !6089)
!6089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6090, size: 64)
!6090 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeOverlap", file: !6083, line: 48, baseType: !6091)
!6091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeOverlap", file: !6083, line: 45, size: 64, elements: !6092)
!6092 = !{!6093, !6094}
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "indexA", scope: !6091, file: !6083, line: 46, baseType: !35, size: 32)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "indexB", scope: !6091, file: !6083, line: 47, baseType: !35, size: 32, offset: 32)
!6095 = !DILocation(line: 1265, column: 18, scope: !6039)
!6096 = !DILocalVariable(name: "result", scope: !6039, file: !3, line: 1265, type: !6089)
!6097 = !DILocation(line: 1265, column: 28, scope: !6039)
!6098 = !DILocalVariable(name: "ls", scope: !6039, file: !3, line: 1266, type: !3237)
!6099 = !DILocation(line: 1266, column: 11, scope: !6039)
!6100 = !DILocalVariable(name: "f", scope: !6039, file: !3, line: 1267, type: !2730)
!6101 = !DILocation(line: 1267, column: 10, scope: !6039)
!6102 = !DILocalVariable(name: "kfe", scope: !6039, file: !3, line: 1268, type: !2861)
!6103 = !DILocation(line: 1268, column: 13, scope: !6039)
!6104 = !DILocalVariable(name: "v", scope: !6039, file: !3, line: 1269, type: !2866)
!6105 = !DILocation(line: 1269, column: 13, scope: !6039)
!6106 = !DILocalVariable(name: "lst", scope: !6039, file: !3, line: 1270, type: !1227)
!6107 = !DILocation(line: 1270, column: 12, scope: !6039)
!6108 = !DILocalVariable(name: "ref", scope: !6039, file: !3, line: 1271, type: !3251)
!6109 = !DILocation(line: 1271, column: 7, scope: !6039)
!6110 = !DILocalVariable(name: "linehits", scope: !6039, file: !3, line: 1272, type: !2850)
!6111 = !DILocation(line: 1272, column: 16, scope: !6039)
!6112 = !DILocalVariable(name: "_linehits_count", scope: !6039, file: !3, line: 1273, type: !35)
!6113 = !DILocation(line: 1273, column: 2, scope: !6039)
!6114 = !DILocalVariable(name: "_linehits_static", scope: !6039, file: !3, line: 1273, type: !18)
!6115 = !DILocalVariable(name: "hiter", scope: !6039, file: !3, line: 1274, type: !6116)
!6116 = !DIDerivedType(tag: DW_TAG_typedef, name: "SmallHashIter", file: !6046, line: 57, baseType: !6117)
!6117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6046, line: 54, size: 128, elements: !6118)
!6118 = !{!6119, !6121}
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "sh", scope: !6117, file: !6046, line: 55, baseType: !6120, size: 64)
!6120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 64)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !6117, file: !6046, line: 56, baseType: !56, size: 32, offset: 64)
!6122 = !DILocation(line: 1274, column: 16, scope: !6039)
!6123 = !DILocalVariable(name: "hit", scope: !6039, file: !3, line: 1275, type: !2851)
!6124 = !DILocation(line: 1275, column: 15, scope: !6039)
!6125 = !DILocalVariable(name: "val", scope: !6039, file: !3, line: 1276, type: !18)
!6126 = !DILocation(line: 1276, column: 8, scope: !6039)
!6127 = !DILocalVariable(name: "plane_cos", scope: !6039, file: !3, line: 1277, type: !6128)
!6128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 384, elements: !3276)
!6129 = !DILocation(line: 1277, column: 8, scope: !6039)
!6130 = !DILocalVariable(name: "s", scope: !6039, file: !3, line: 1278, type: !373)
!6131 = !DILocation(line: 1278, column: 8, scope: !6039)
!6132 = !DILocalVariable(name: "se1", scope: !6039, file: !3, line: 1278, type: !373)
!6133 = !DILocation(line: 1278, column: 14, scope: !6039)
!6134 = !DILocalVariable(name: "se2", scope: !6039, file: !3, line: 1278, type: !373)
!6135 = !DILocation(line: 1278, column: 22, scope: !6039)
!6136 = !DILocalVariable(name: "sint", scope: !6039, file: !3, line: 1278, type: !373)
!6137 = !DILocation(line: 1278, column: 30, scope: !6039)
!6138 = !DILocalVariable(name: "r1", scope: !6039, file: !3, line: 1279, type: !555)
!6139 = !DILocation(line: 1279, column: 8, scope: !6039)
!6140 = !DILocalVariable(name: "r2", scope: !6039, file: !3, line: 1279, type: !555)
!6141 = !DILocation(line: 1279, column: 15, scope: !6039)
!6142 = !DILocalVariable(name: "d", scope: !6039, file: !3, line: 1280, type: !357)
!6143 = !DILocation(line: 1280, column: 8, scope: !6039)
!6144 = !DILocalVariable(name: "d1", scope: !6039, file: !3, line: 1280, type: !357)
!6145 = !DILocation(line: 1280, column: 11, scope: !6039)
!6146 = !DILocalVariable(name: "d2", scope: !6039, file: !3, line: 1280, type: !357)
!6147 = !DILocation(line: 1280, column: 15, scope: !6039)
!6148 = !DILocalVariable(name: "lambda", scope: !6039, file: !3, line: 1280, type: !357)
!6149 = !DILocation(line: 1280, column: 19, scope: !6039)
!6150 = !DILocalVariable(name: "vert_tol", scope: !6039, file: !3, line: 1281, type: !357)
!6151 = !DILocation(line: 1281, column: 8, scope: !6039)
!6152 = !DILocalVariable(name: "vert_tol_sq", scope: !6039, file: !3, line: 1281, type: !357)
!6153 = !DILocation(line: 1281, column: 18, scope: !6039)
!6154 = !DILocalVariable(name: "line_tol", scope: !6039, file: !3, line: 1282, type: !357)
!6155 = !DILocation(line: 1282, column: 8, scope: !6039)
!6156 = !DILocalVariable(name: "line_tol_sq", scope: !6039, file: !3, line: 1282, type: !357)
!6157 = !DILocation(line: 1282, column: 18, scope: !6039)
!6158 = !DILocalVariable(name: "face_tol", scope: !6039, file: !3, line: 1283, type: !357)
!6159 = !DILocation(line: 1283, column: 8, scope: !6039)
!6160 = !DILocalVariable(name: "face_tol_sq", scope: !6039, file: !3, line: 1283, type: !357)
!6161 = !DILocation(line: 1283, column: 18, scope: !6039)
!6162 = !DILocalVariable(name: "eps_scale", scope: !6039, file: !3, line: 1284, type: !357)
!6163 = !DILocation(line: 1284, column: 8, scope: !6039)
!6164 = !DILocalVariable(name: "isect_kind", scope: !6039, file: !3, line: 1285, type: !35)
!6165 = !DILocation(line: 1285, column: 6, scope: !6039)
!6166 = !DILocalVariable(name: "tot", scope: !6039, file: !3, line: 1286, type: !56)
!6167 = !DILocation(line: 1286, column: 15, scope: !6039)
!6168 = !DILocalVariable(name: "i", scope: !6039, file: !3, line: 1287, type: !35)
!6169 = !DILocation(line: 1287, column: 6, scope: !6039)
!6170 = !DILocation(line: 1289, column: 2, scope: !6039)
!6171 = !DILocation(line: 1291, column: 6, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1291, column: 6)
!6173 = !DILocation(line: 1291, column: 11, scope: !6172)
!6174 = !DILocation(line: 1291, column: 6, scope: !6039)
!6175 = !DILocation(line: 1292, column: 3, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6172, file: !3, line: 1291, column: 21)
!6177 = !DILocation(line: 1292, column: 13, scope: !6176)
!6178 = !DILocation(line: 1292, column: 18, scope: !6176)
!6179 = !DILocation(line: 1293, column: 3, scope: !6176)
!6180 = !DILocation(line: 1293, column: 8, scope: !6176)
!6181 = !DILocation(line: 1293, column: 17, scope: !6176)
!6182 = !DILocation(line: 1294, column: 3, scope: !6176)
!6183 = !DILocation(line: 1294, column: 8, scope: !6176)
!6184 = !DILocation(line: 1294, column: 19, scope: !6176)
!6185 = !DILocation(line: 1295, column: 2, scope: !6176)
!6186 = !DILocation(line: 1297, column: 13, scope: !6039)
!6187 = !DILocation(line: 1297, column: 17, scope: !6039)
!6188 = !DILocation(line: 1297, column: 22, scope: !6039)
!6189 = !DILocation(line: 1297, column: 27, scope: !6039)
!6190 = !DILocation(line: 1297, column: 2, scope: !6039)
!6191 = !DILocation(line: 1298, column: 13, scope: !6039)
!6192 = !DILocation(line: 1298, column: 17, scope: !6039)
!6193 = !DILocation(line: 1298, column: 22, scope: !6039)
!6194 = !DILocation(line: 1298, column: 27, scope: !6039)
!6195 = !DILocation(line: 1298, column: 2, scope: !6039)
!6196 = !DILocation(line: 1301, column: 19, scope: !6039)
!6197 = !DILocation(line: 1301, column: 24, scope: !6039)
!6198 = !DILocation(line: 1301, column: 28, scope: !6039)
!6199 = !DILocation(line: 1301, column: 2, scope: !6039)
!6200 = !DILocation(line: 1302, column: 19, scope: !6039)
!6201 = !DILocation(line: 1302, column: 24, scope: !6039)
!6202 = !DILocation(line: 1302, column: 28, scope: !6039)
!6203 = !DILocation(line: 1302, column: 2, scope: !6039)
!6204 = !DILocation(line: 1304, column: 6, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1304, column: 6)
!6206 = !DILocation(line: 1304, column: 11, scope: !6205)
!6207 = !DILocation(line: 1304, column: 6, scope: !6039)
!6208 = !DILocation(line: 1305, column: 24, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 1305, column: 7)
!6210 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 1304, column: 27)
!6211 = !DILocation(line: 1305, column: 28, scope: !6209)
!6212 = !DILocation(line: 1305, column: 7, scope: !6209)
!6213 = !DILocation(line: 1305, column: 32, scope: !6209)
!6214 = !DILocation(line: 1305, column: 7, scope: !6210)
!6215 = !DILocation(line: 1306, column: 4, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 1305, column: 40)
!6217 = !DILocation(line: 1308, column: 2, scope: !6210)
!6218 = !DILocation(line: 1310, column: 24, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 1310, column: 7)
!6220 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 1309, column: 7)
!6221 = !DILocation(line: 1310, column: 28, scope: !6219)
!6222 = !DILocation(line: 1310, column: 7, scope: !6219)
!6223 = !DILocation(line: 1310, column: 32, scope: !6219)
!6224 = !DILocation(line: 1310, column: 7, scope: !6220)
!6225 = !DILocation(line: 1311, column: 4, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 1310, column: 57)
!6227 = !DILocation(line: 1316, column: 27, scope: !6039)
!6228 = !DILocation(line: 1316, column: 32, scope: !6039)
!6229 = !DILocation(line: 1316, column: 36, scope: !6039)
!6230 = !DILocation(line: 1316, column: 41, scope: !6039)
!6231 = !DILocation(line: 1316, column: 44, scope: !6039)
!6232 = !DILocation(line: 1316, column: 49, scope: !6039)
!6233 = !DILocation(line: 1316, column: 53, scope: !6039)
!6234 = !DILocation(line: 1316, column: 57, scope: !6039)
!6235 = !DILocation(line: 1316, column: 2, scope: !6039)
!6236 = !DILocation(line: 1317, column: 27, scope: !6039)
!6237 = !DILocation(line: 1317, column: 32, scope: !6039)
!6238 = !DILocation(line: 1317, column: 36, scope: !6039)
!6239 = !DILocation(line: 1317, column: 41, scope: !6039)
!6240 = !DILocation(line: 1317, column: 44, scope: !6039)
!6241 = !DILocation(line: 1317, column: 49, scope: !6039)
!6242 = !DILocation(line: 1317, column: 53, scope: !6039)
!6243 = !DILocation(line: 1317, column: 57, scope: !6039)
!6244 = !DILocation(line: 1317, column: 2, scope: !6039)
!6245 = !DILocation(line: 1319, column: 12, scope: !6039)
!6246 = !DILocation(line: 1319, column: 17, scope: !6039)
!6247 = !DILocation(line: 1319, column: 21, scope: !6039)
!6248 = !DILocation(line: 1319, column: 27, scope: !6039)
!6249 = !DILocation(line: 1319, column: 2, scope: !6039)
!6250 = !DILocation(line: 1320, column: 12, scope: !6039)
!6251 = !DILocation(line: 1320, column: 17, scope: !6039)
!6252 = !DILocation(line: 1320, column: 21, scope: !6039)
!6253 = !DILocation(line: 1320, column: 27, scope: !6039)
!6254 = !DILocation(line: 1320, column: 2, scope: !6039)
!6255 = !DILocation(line: 1321, column: 12, scope: !6039)
!6256 = !DILocation(line: 1321, column: 17, scope: !6039)
!6257 = !DILocation(line: 1321, column: 21, scope: !6039)
!6258 = !DILocation(line: 1321, column: 27, scope: !6039)
!6259 = !DILocation(line: 1321, column: 2, scope: !6039)
!6260 = !DILocation(line: 1322, column: 12, scope: !6039)
!6261 = !DILocation(line: 1322, column: 17, scope: !6039)
!6262 = !DILocation(line: 1322, column: 21, scope: !6039)
!6263 = !DILocation(line: 1322, column: 27, scope: !6039)
!6264 = !DILocation(line: 1322, column: 2, scope: !6039)
!6265 = !DILocation(line: 1329, column: 6, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1329, column: 6)
!6267 = !DILocation(line: 1329, column: 11, scope: !6266)
!6268 = !DILocation(line: 1329, column: 20, scope: !6266)
!6269 = !DILocation(line: 1329, column: 24, scope: !6266)
!6270 = !DILocation(line: 1329, column: 29, scope: !6266)
!6271 = !DILocation(line: 1329, column: 32, scope: !6266)
!6272 = !DILocation(line: 1329, column: 38, scope: !6266)
!6273 = !DILocation(line: 1329, column: 44, scope: !6266)
!6274 = !DILocation(line: 1329, column: 6, scope: !6039)
!6275 = !DILocation(line: 1330, column: 7, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1330, column: 7)
!6277 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 1329, column: 60)
!6278 = !DILocation(line: 1330, column: 12, scope: !6276)
!6279 = !DILocation(line: 1330, column: 25, scope: !6276)
!6280 = !DILocation(line: 1330, column: 7, scope: !6277)
!6281 = !DILocation(line: 1331, column: 22, scope: !6276)
!6282 = !DILocation(line: 1331, column: 4, scope: !6276)
!6283 = !DILocation(line: 1332, column: 24, scope: !6277)
!6284 = !DILocation(line: 1332, column: 28, scope: !6277)
!6285 = !DILocation(line: 1332, column: 32, scope: !6277)
!6286 = !DILocation(line: 1332, column: 37, scope: !6277)
!6287 = !DILocation(line: 1332, column: 50, scope: !6277)
!6288 = !DILocation(line: 1332, column: 3, scope: !6277)
!6289 = !DILocation(line: 1333, column: 24, scope: !6277)
!6290 = !DILocation(line: 1333, column: 28, scope: !6277)
!6291 = !DILocation(line: 1333, column: 32, scope: !6277)
!6292 = !DILocation(line: 1333, column: 37, scope: !6277)
!6293 = !DILocation(line: 1333, column: 50, scope: !6277)
!6294 = !DILocation(line: 1333, column: 3, scope: !6277)
!6295 = !DILocation(line: 1334, column: 2, scope: !6277)
!6296 = !DILocation(line: 1340, column: 28, scope: !6039)
!6297 = !DILocation(line: 1340, column: 33, scope: !6039)
!6298 = !DILocation(line: 1340, column: 9, scope: !6039)
!6299 = !DILocation(line: 1340, column: 7, scope: !6039)
!6300 = !DILocation(line: 1341, column: 14, scope: !6039)
!6301 = !DILocation(line: 1341, column: 12, scope: !6039)
!6302 = !DILocation(line: 1342, column: 13, scope: !6039)
!6303 = !DILocation(line: 1342, column: 23, scope: !6039)
!6304 = !DILocation(line: 1342, column: 28, scope: !6039)
!6305 = !DILocation(line: 1342, column: 2, scope: !6039)
!6306 = !DILocation(line: 1343, column: 13, scope: !6039)
!6307 = !DILocation(line: 1343, column: 23, scope: !6039)
!6308 = !DILocation(line: 1343, column: 28, scope: !6039)
!6309 = !DILocation(line: 1343, column: 2, scope: !6039)
!6310 = !DILocation(line: 1344, column: 13, scope: !6039)
!6311 = !DILocation(line: 1344, column: 23, scope: !6039)
!6312 = !DILocation(line: 1344, column: 28, scope: !6039)
!6313 = !DILocation(line: 1344, column: 2, scope: !6039)
!6314 = !DILocation(line: 1345, column: 13, scope: !6039)
!6315 = !DILocation(line: 1345, column: 23, scope: !6039)
!6316 = !DILocation(line: 1345, column: 28, scope: !6039)
!6317 = !DILocation(line: 1345, column: 2, scope: !6039)
!6318 = !DILocation(line: 1346, column: 21, scope: !6039)
!6319 = !DILocation(line: 1346, column: 35, scope: !6039)
!6320 = !DILocation(line: 1346, column: 2, scope: !6039)
!6321 = !DILocation(line: 1347, column: 22, scope: !6039)
!6322 = !DILocation(line: 1347, column: 2, scope: !6039)
!6323 = !DILocation(line: 1349, column: 32, scope: !6039)
!6324 = !DILocation(line: 1349, column: 38, scope: !6039)
!6325 = !DILocation(line: 1349, column: 12, scope: !6039)
!6326 = !DILocation(line: 1349, column: 10, scope: !6039)
!6327 = !DILocation(line: 1350, column: 7, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1350, column: 6)
!6329 = !DILocation(line: 1350, column: 6, scope: !6039)
!6330 = !DILocation(line: 1351, column: 20, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 1350, column: 16)
!6332 = !DILocation(line: 1351, column: 3, scope: !6331)
!6333 = !DILocation(line: 1352, column: 3, scope: !6331)
!6334 = !DILocation(line: 1355, column: 2, scope: !6039)
!6335 = !DILocation(line: 1356, column: 2, scope: !6039)
!6336 = !DILocation(line: 1357, column: 2, scope: !6039)
!6337 = !DILocation(line: 1359, column: 9, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1359, column: 2)
!6339 = !DILocation(line: 1359, column: 23, scope: !6338)
!6340 = !DILocation(line: 1359, column: 21, scope: !6338)
!6341 = !DILocation(line: 1359, column: 7, scope: !6338)
!6342 = !DILocation(line: 1359, column: 32, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 1359, column: 2)
!6344 = !DILocation(line: 1359, column: 36, scope: !6343)
!6345 = !DILocation(line: 1359, column: 34, scope: !6343)
!6346 = !DILocation(line: 1359, column: 2, scope: !6338)
!6347 = !DILocation(line: 1360, column: 19, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 1359, column: 56)
!6349 = !DILocation(line: 1360, column: 24, scope: !6348)
!6350 = !DILocation(line: 1360, column: 28, scope: !6348)
!6351 = !DILocation(line: 1360, column: 37, scope: !6348)
!6352 = !DILocation(line: 1360, column: 45, scope: !6348)
!6353 = !DILocation(line: 1360, column: 6, scope: !6348)
!6354 = !DILocation(line: 1361, column: 7, scope: !6348)
!6355 = !DILocation(line: 1361, column: 14, scope: !6348)
!6356 = !DILocation(line: 1361, column: 5, scope: !6348)
!6357 = !DILocation(line: 1362, column: 23, scope: !6348)
!6358 = !DILocation(line: 1362, column: 28, scope: !6348)
!6359 = !DILocation(line: 1362, column: 31, scope: !6348)
!6360 = !DILocation(line: 1362, column: 39, scope: !6348)
!6361 = !DILocation(line: 1362, column: 3, scope: !6348)
!6362 = !DILocation(line: 1364, column: 47, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 1364, column: 7)
!6364 = !DILocation(line: 1364, column: 36, scope: !6363)
!6365 = !DILocation(line: 1364, column: 7, scope: !6363)
!6366 = !DILocation(line: 1364, column: 7, scope: !6348)
!6367 = !DILocation(line: 1365, column: 4, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 1364, column: 51)
!6369 = !DILocation(line: 1368, column: 43, scope: !6348)
!6370 = !DILocation(line: 1368, column: 32, scope: !6348)
!6371 = !DILocation(line: 1368, column: 46, scope: !6348)
!6372 = !DILocation(line: 1368, column: 3, scope: !6348)
!6373 = !DILocation(line: 1370, column: 31, scope: !6348)
!6374 = !DILocation(line: 1370, column: 36, scope: !6348)
!6375 = !DILocation(line: 1370, column: 9, scope: !6348)
!6376 = !DILocation(line: 1370, column: 7, scope: !6348)
!6377 = !DILocation(line: 1371, column: 14, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 1371, column: 3)
!6379 = !DILocation(line: 1371, column: 19, scope: !6378)
!6380 = !DILocation(line: 1371, column: 12, scope: !6378)
!6381 = !DILocation(line: 1371, column: 8, scope: !6378)
!6382 = !DILocation(line: 1371, column: 26, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 1371, column: 3)
!6384 = !DILocation(line: 1371, column: 3, scope: !6378)
!6385 = !DILocation(line: 1372, column: 10, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 1371, column: 48)
!6387 = !DILocation(line: 1372, column: 15, scope: !6386)
!6388 = !DILocation(line: 1372, column: 8, scope: !6386)
!6389 = !DILocation(line: 1373, column: 47, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 1373, column: 8)
!6391 = !DILocation(line: 1373, column: 36, scope: !6390)
!6392 = !DILocation(line: 1373, column: 8, scope: !6390)
!6393 = !DILocation(line: 1373, column: 8, scope: !6386)
!6394 = !DILocation(line: 1374, column: 5, scope: !6390)
!6395 = !DILocation(line: 1375, column: 43, scope: !6386)
!6396 = !DILocation(line: 1375, column: 32, scope: !6386)
!6397 = !DILocation(line: 1375, column: 48, scope: !6386)
!6398 = !DILocation(line: 1375, column: 4, scope: !6386)
!6399 = !DILocation(line: 1376, column: 8, scope: !6386)
!6400 = !DILocation(line: 1376, column: 13, scope: !6386)
!6401 = !DILocation(line: 1376, column: 6, scope: !6386)
!6402 = !DILocation(line: 1377, column: 48, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 1377, column: 8)
!6404 = !DILocation(line: 1377, column: 37, scope: !6403)
!6405 = !DILocation(line: 1377, column: 9, scope: !6403)
!6406 = !DILocation(line: 1377, column: 8, scope: !6386)
!6407 = !DILocation(line: 1378, column: 44, scope: !6403)
!6408 = !DILocation(line: 1378, column: 33, scope: !6403)
!6409 = !DILocation(line: 1378, column: 47, scope: !6403)
!6410 = !DILocation(line: 1378, column: 5, scope: !6403)
!6411 = !DILocation(line: 1379, column: 8, scope: !6386)
!6412 = !DILocation(line: 1379, column: 13, scope: !6386)
!6413 = !DILocation(line: 1379, column: 6, scope: !6386)
!6414 = !DILocation(line: 1380, column: 48, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 1380, column: 8)
!6416 = !DILocation(line: 1380, column: 37, scope: !6415)
!6417 = !DILocation(line: 1380, column: 9, scope: !6415)
!6418 = !DILocation(line: 1380, column: 8, scope: !6386)
!6419 = !DILocation(line: 1381, column: 44, scope: !6415)
!6420 = !DILocation(line: 1381, column: 33, scope: !6415)
!6421 = !DILocation(line: 1381, column: 47, scope: !6415)
!6422 = !DILocation(line: 1381, column: 5, scope: !6415)
!6423 = !DILocation(line: 1382, column: 3, scope: !6386)
!6424 = !DILocation(line: 1371, column: 37, scope: !6383)
!6425 = !DILocation(line: 1371, column: 42, scope: !6383)
!6426 = !DILocation(line: 1371, column: 35, scope: !6383)
!6427 = !DILocation(line: 1371, column: 3, scope: !6383)
!6428 = distinct !{!6428, !6384, !6429}
!6429 = !DILocation(line: 1382, column: 3, scope: !6378)
!6430 = !DILocation(line: 1383, column: 2, scope: !6348)
!6431 = !DILocation(line: 1359, column: 42, scope: !6343)
!6432 = !DILocation(line: 1359, column: 52, scope: !6343)
!6433 = !DILocation(line: 1359, column: 2, scope: !6343)
!6434 = distinct !{!6434, !6346, !6435}
!6435 = !DILocation(line: 1383, column: 2, scope: !6338)
!6436 = !DILocalVariable(name: "zoom_xy", scope: !6437, file: !3, line: 1390, type: !373)
!6437 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1387, column: 2)
!6438 = !DILocation(line: 1390, column: 9, scope: !6437)
!6439 = !DILocation(line: 1390, column: 22, scope: !6437)
!6440 = !DILocation(line: 1390, column: 23, scope: !6437)
!6441 = !DILocation(line: 1390, column: 28, scope: !6437)
!6442 = !DILocation(line: 1390, column: 31, scope: !6437)
!6443 = !DILocation(line: 1390, column: 37, scope: !6437)
!6444 = !DILocation(line: 1391, column: 23, scope: !6437)
!6445 = !DILocation(line: 1391, column: 28, scope: !6437)
!6446 = !DILocation(line: 1391, column: 31, scope: !6437)
!6447 = !DILocation(line: 1391, column: 37, scope: !6437)
!6448 = !DILocation(line: 1392, column: 22, scope: !6437)
!6449 = !DILocation(line: 1392, column: 15, scope: !6437)
!6450 = !DILocation(line: 1392, column: 13, scope: !6437)
!6451 = !DILocation(line: 1395, column: 32, scope: !6039)
!6452 = !DILocation(line: 1395, column: 30, scope: !6039)
!6453 = !DILocation(line: 1395, column: 11, scope: !6039)
!6454 = !DILocation(line: 1396, column: 32, scope: !6039)
!6455 = !DILocation(line: 1396, column: 30, scope: !6039)
!6456 = !DILocation(line: 1396, column: 11, scope: !6039)
!6457 = !DILocation(line: 1397, column: 20, scope: !6039)
!6458 = !DILocation(line: 1397, column: 30, scope: !6039)
!6459 = !DILocation(line: 1397, column: 13, scope: !6039)
!6460 = !DILocation(line: 1397, column: 11, scope: !6039)
!6461 = !DILocation(line: 1399, column: 16, scope: !6039)
!6462 = !DILocation(line: 1399, column: 27, scope: !6039)
!6463 = !DILocation(line: 1399, column: 25, scope: !6039)
!6464 = !DILocation(line: 1399, column: 14, scope: !6039)
!6465 = !DILocation(line: 1400, column: 16, scope: !6039)
!6466 = !DILocation(line: 1400, column: 27, scope: !6039)
!6467 = !DILocation(line: 1400, column: 25, scope: !6039)
!6468 = !DILocation(line: 1400, column: 14, scope: !6039)
!6469 = !DILocation(line: 1401, column: 16, scope: !6039)
!6470 = !DILocation(line: 1401, column: 27, scope: !6039)
!6471 = !DILocation(line: 1401, column: 25, scope: !6039)
!6472 = !DILocation(line: 1401, column: 14, scope: !6039)
!6473 = !DILocation(line: 1406, column: 50, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1406, column: 2)
!6475 = !DILocation(line: 1406, column: 13, scope: !6474)
!6476 = !DILocation(line: 1406, column: 11, scope: !6474)
!6477 = !DILocation(line: 1406, column: 7, scope: !6474)
!6478 = !DILocation(line: 1406, column: 68, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 1406, column: 2)
!6480 = !DILocation(line: 1406, column: 2, scope: !6474)
!6481 = !DILocation(line: 1409, column: 20, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6479, file: !3, line: 1408, column: 2)
!6483 = !DILocation(line: 1409, column: 25, scope: !6482)
!6484 = !DILocation(line: 1409, column: 28, scope: !6482)
!6485 = !DILocation(line: 1409, column: 36, scope: !6482)
!6486 = !DILocation(line: 1409, column: 3, scope: !6482)
!6487 = !DILocation(line: 1410, column: 39, scope: !6482)
!6488 = !DILocation(line: 1410, column: 42, scope: !6482)
!6489 = !DILocation(line: 1410, column: 46, scope: !6482)
!6490 = !DILocation(line: 1410, column: 7, scope: !6482)
!6491 = !DILocation(line: 1410, column: 5, scope: !6482)
!6492 = !DILocation(line: 1411, column: 7, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6482, file: !3, line: 1411, column: 7)
!6494 = !DILocation(line: 1411, column: 12, scope: !6493)
!6495 = !DILocation(line: 1411, column: 9, scope: !6493)
!6496 = !DILocation(line: 1411, column: 7, scope: !6482)
!6497 = !DILocation(line: 1412, column: 25, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 1412, column: 8)
!6499 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 1411, column: 25)
!6500 = !DILocation(line: 1412, column: 30, scope: !6498)
!6501 = !DILocation(line: 1412, column: 33, scope: !6498)
!6502 = !DILocation(line: 1412, column: 41, scope: !6498)
!6503 = !DILocation(line: 1412, column: 8, scope: !6498)
!6504 = !DILocation(line: 1412, column: 8, scope: !6499)
!6505 = !DILocation(line: 1413, column: 5, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 1412, column: 52)
!6507 = !DILocation(line: 1414, column: 13, scope: !6506)
!6508 = !DILocation(line: 1414, column: 9, scope: !6506)
!6509 = !DILocation(line: 1414, column: 11, scope: !6506)
!6510 = !DILocation(line: 1415, column: 20, scope: !6506)
!6511 = !DILocation(line: 1415, column: 16, scope: !6506)
!6512 = !DILocation(line: 1415, column: 25, scope: !6506)
!6513 = !DILocation(line: 1415, column: 28, scope: !6506)
!6514 = !DILocation(line: 1415, column: 5, scope: !6506)
!6515 = !DILocation(line: 1416, column: 20, scope: !6506)
!6516 = !DILocation(line: 1416, column: 16, scope: !6506)
!6517 = !DILocation(line: 1416, column: 29, scope: !6506)
!6518 = !DILocation(line: 1416, column: 32, scope: !6506)
!6519 = !DILocation(line: 1416, column: 5, scope: !6506)
!6520 = !DILocation(line: 1417, column: 20, scope: !6506)
!6521 = !DILocation(line: 1417, column: 16, scope: !6506)
!6522 = !DILocation(line: 1417, column: 27, scope: !6506)
!6523 = !DILocation(line: 1417, column: 5, scope: !6506)
!6524 = !DILocation(line: 1418, column: 23, scope: !6506)
!6525 = !DILocation(line: 1418, column: 5, scope: !6506)
!6526 = !DILocation(line: 1419, column: 5, scope: !6506)
!6527 = !DILocation(line: 1420, column: 4, scope: !6506)
!6528 = !DILocation(line: 1421, column: 3, scope: !6499)
!6529 = !DILocation(line: 1422, column: 2, scope: !6482)
!6530 = !DILocation(line: 1407, column: 44, scope: !6479)
!6531 = !DILocation(line: 1407, column: 13, scope: !6479)
!6532 = !DILocation(line: 1407, column: 11, scope: !6479)
!6533 = !DILocation(line: 1406, column: 2, scope: !6479)
!6534 = distinct !{!6534, !6480, !6535}
!6535 = !DILocation(line: 1422, column: 2, scope: !6474)
!6536 = !DILocation(line: 1424, column: 50, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1424, column: 2)
!6538 = !DILocation(line: 1424, column: 13, scope: !6537)
!6539 = !DILocation(line: 1424, column: 11, scope: !6537)
!6540 = !DILocation(line: 1424, column: 7, scope: !6537)
!6541 = !DILocation(line: 1424, column: 70, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 1424, column: 2)
!6543 = !DILocation(line: 1424, column: 2, scope: !6537)
!6544 = !DILocation(line: 1427, column: 20, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 1426, column: 2)
!6546 = !DILocation(line: 1427, column: 25, scope: !6545)
!6547 = !DILocation(line: 1427, column: 30, scope: !6545)
!6548 = !DILocation(line: 1427, column: 34, scope: !6545)
!6549 = !DILocation(line: 1427, column: 42, scope: !6545)
!6550 = !DILocation(line: 1427, column: 3, scope: !6545)
!6551 = !DILocation(line: 1428, column: 20, scope: !6545)
!6552 = !DILocation(line: 1428, column: 25, scope: !6545)
!6553 = !DILocation(line: 1428, column: 30, scope: !6545)
!6554 = !DILocation(line: 1428, column: 34, scope: !6545)
!6555 = !DILocation(line: 1428, column: 42, scope: !6545)
!6556 = !DILocation(line: 1428, column: 3, scope: !6545)
!6557 = !DILocation(line: 1429, column: 39, scope: !6545)
!6558 = !DILocation(line: 1429, column: 43, scope: !6545)
!6559 = !DILocation(line: 1429, column: 47, scope: !6545)
!6560 = !DILocation(line: 1429, column: 52, scope: !6545)
!6561 = !DILocation(line: 1429, column: 57, scope: !6545)
!6562 = !DILocation(line: 1429, column: 16, scope: !6545)
!6563 = !DILocation(line: 1429, column: 14, scope: !6545)
!6564 = !DILocation(line: 1430, column: 7, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1430, column: 7)
!6566 = !DILocation(line: 1430, column: 18, scope: !6565)
!6567 = !DILocation(line: 1430, column: 7, scope: !6545)
!6568 = !DILocation(line: 1432, column: 31, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 1430, column: 25)
!6570 = !DILocation(line: 1432, column: 37, scope: !6569)
!6571 = !DILocation(line: 1432, column: 41, scope: !6569)
!6572 = !DILocation(line: 1432, column: 46, scope: !6569)
!6573 = !DILocation(line: 1432, column: 4, scope: !6569)
!6574 = !DILocation(line: 1433, column: 25, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 1433, column: 8)
!6576 = !DILocation(line: 1433, column: 31, scope: !6575)
!6577 = !DILocation(line: 1433, column: 8, scope: !6575)
!6578 = !DILocation(line: 1433, column: 38, scope: !6575)
!6579 = !DILocation(line: 1433, column: 35, scope: !6575)
!6580 = !DILocation(line: 1433, column: 8, scope: !6569)
!6581 = !DILocation(line: 1434, column: 16, scope: !6575)
!6582 = !DILocation(line: 1434, column: 5, scope: !6575)
!6583 = !DILocation(line: 1436, column: 32, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 1435, column: 9)
!6585 = !DILocation(line: 1436, column: 38, scope: !6584)
!6586 = !DILocation(line: 1436, column: 42, scope: !6584)
!6587 = !DILocation(line: 1436, column: 47, scope: !6584)
!6588 = !DILocation(line: 1436, column: 5, scope: !6584)
!6589 = !DILocation(line: 1437, column: 26, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 1437, column: 9)
!6591 = !DILocation(line: 1437, column: 32, scope: !6590)
!6592 = !DILocation(line: 1437, column: 9, scope: !6590)
!6593 = !DILocation(line: 1437, column: 39, scope: !6590)
!6594 = !DILocation(line: 1437, column: 36, scope: !6590)
!6595 = !DILocation(line: 1437, column: 9, scope: !6584)
!6596 = !DILocation(line: 1438, column: 17, scope: !6590)
!6597 = !DILocation(line: 1438, column: 6, scope: !6590)
!6598 = !DILocation(line: 1440, column: 3, scope: !6569)
!6599 = !DILocation(line: 1441, column: 7, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1441, column: 7)
!6601 = !DILocation(line: 1441, column: 18, scope: !6600)
!6602 = !DILocation(line: 1441, column: 7, scope: !6545)
!6603 = !DILocation(line: 1442, column: 18, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 1441, column: 24)
!6605 = !DILocation(line: 1442, column: 24, scope: !6604)
!6606 = !DILocation(line: 1442, column: 9, scope: !6604)
!6607 = !DILocation(line: 1442, column: 7, scope: !6604)
!6608 = !DILocation(line: 1443, column: 18, scope: !6604)
!6609 = !DILocation(line: 1443, column: 23, scope: !6604)
!6610 = !DILocation(line: 1443, column: 9, scope: !6604)
!6611 = !DILocation(line: 1443, column: 7, scope: !6604)
!6612 = !DILocation(line: 1444, column: 10, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 1444, column: 8)
!6614 = !DILocation(line: 1444, column: 16, scope: !6613)
!6615 = !DILocation(line: 1444, column: 13, scope: !6613)
!6616 = !DILocation(line: 1444, column: 25, scope: !6613)
!6617 = !DILocation(line: 1444, column: 28, scope: !6613)
!6618 = !DILocation(line: 1444, column: 34, scope: !6613)
!6619 = !DILocation(line: 1444, column: 31, scope: !6613)
!6620 = !DILocation(line: 1444, column: 43, scope: !6613)
!6621 = !DILocation(line: 1444, column: 52, scope: !6613)
!6622 = !DILocation(line: 1444, column: 57, scope: !6613)
!6623 = !DILocation(line: 1444, column: 55, scope: !6613)
!6624 = !DILocation(line: 1444, column: 46, scope: !6613)
!6625 = !DILocation(line: 1444, column: 64, scope: !6613)
!6626 = !DILocation(line: 1444, column: 61, scope: !6613)
!6627 = !DILocation(line: 1444, column: 8, scope: !6604)
!6628 = !DILocalVariable(name: "p_cage", scope: !6629, file: !3, line: 1445, type: !555)
!6629 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 1444, column: 75)
!6630 = !DILocation(line: 1445, column: 11, scope: !6629)
!6631 = !DILocalVariable(name: "p_cage_tmp", scope: !6629, file: !3, line: 1445, type: !555)
!6632 = !DILocation(line: 1445, column: 22, scope: !6629)
!6633 = !DILocation(line: 1446, column: 14, scope: !6629)
!6634 = !DILocation(line: 1446, column: 19, scope: !6629)
!6635 = !DILocation(line: 1446, column: 17, scope: !6629)
!6636 = !DILocation(line: 1446, column: 12, scope: !6629)
!6637 = !DILocation(line: 1450, column: 29, scope: !6629)
!6638 = !DILocation(line: 1450, column: 34, scope: !6629)
!6639 = !DILocation(line: 1450, column: 46, scope: !6629)
!6640 = !DILocation(line: 1450, column: 50, scope: !6629)
!6641 = !DILocation(line: 1450, column: 5, scope: !6629)
!6642 = !DILocation(line: 1451, column: 37, scope: !6629)
!6643 = !DILocation(line: 1451, column: 42, scope: !6629)
!6644 = !DILocation(line: 1451, column: 46, scope: !6629)
!6645 = !DILocation(line: 1451, column: 54, scope: !6629)
!6646 = !DILocation(line: 1451, column: 59, scope: !6629)
!6647 = !DILocation(line: 1451, column: 63, scope: !6629)
!6648 = !DILocation(line: 1451, column: 71, scope: !6629)
!6649 = !DILocation(line: 1451, column: 75, scope: !6629)
!6650 = !DILocation(line: 1451, column: 79, scope: !6629)
!6651 = !DILocation(line: 1451, column: 87, scope: !6629)
!6652 = !DILocation(line: 1451, column: 18, scope: !6629)
!6653 = !DILocation(line: 1451, column: 16, scope: !6629)
!6654 = !DILocation(line: 1452, column: 9, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1452, column: 9)
!6656 = !DILocation(line: 1452, column: 20, scope: !6655)
!6657 = !DILocation(line: 1452, column: 25, scope: !6655)
!6658 = !DILocation(line: 1452, column: 45, scope: !6655)
!6659 = !DILocation(line: 1452, column: 50, scope: !6655)
!6660 = !DILocation(line: 1452, column: 58, scope: !6655)
!6661 = !DILocation(line: 1452, column: 28, scope: !6655)
!6662 = !DILocation(line: 1452, column: 9, scope: !6629)
!6663 = !DILocation(line: 1453, column: 6, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 1452, column: 72)
!6665 = !DILocation(line: 1454, column: 10, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1454, column: 10)
!6667 = !DILocation(line: 1454, column: 15, scope: !6666)
!6668 = !DILocation(line: 1454, column: 10, scope: !6664)
!6669 = !DILocation(line: 1456, column: 19, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 1454, column: 31)
!6671 = !DILocation(line: 1456, column: 27, scope: !6670)
!6672 = !DILocation(line: 1456, column: 32, scope: !6670)
!6673 = !DILocation(line: 1456, column: 36, scope: !6670)
!6674 = !DILocation(line: 1456, column: 44, scope: !6670)
!6675 = !DILocation(line: 1456, column: 49, scope: !6670)
!6676 = !DILocation(line: 1456, column: 53, scope: !6670)
!6677 = !DILocation(line: 1456, column: 7, scope: !6670)
!6678 = !DILocation(line: 1457, column: 19, scope: !6670)
!6679 = !DILocation(line: 1457, column: 25, scope: !6670)
!6680 = !DILocation(line: 1457, column: 30, scope: !6670)
!6681 = !DILocation(line: 1457, column: 7, scope: !6670)
!6682 = !DILocation(line: 1458, column: 14, scope: !6670)
!6683 = !DILocation(line: 1459, column: 6, scope: !6670)
!6684 = !DILocation(line: 1460, column: 16, scope: !6664)
!6685 = !DILocation(line: 1460, column: 10, scope: !6664)
!6686 = !DILocation(line: 1460, column: 14, scope: !6664)
!6687 = !DILocation(line: 1462, column: 18, scope: !6664)
!6688 = !DILocation(line: 1462, column: 14, scope: !6664)
!6689 = !DILocation(line: 1462, column: 23, scope: !6664)
!6690 = !DILocation(line: 1463, column: 14, scope: !6664)
!6691 = !DILocation(line: 1463, column: 19, scope: !6664)
!6692 = !DILocation(line: 1463, column: 23, scope: !6664)
!6693 = !DILocation(line: 1463, column: 27, scope: !6664)
!6694 = !DILocation(line: 1463, column: 32, scope: !6664)
!6695 = !DILocation(line: 1463, column: 36, scope: !6664)
!6696 = !DILocation(line: 1464, column: 14, scope: !6664)
!6697 = !DILocation(line: 1464, column: 19, scope: !6664)
!6698 = !DILocation(line: 1464, column: 23, scope: !6664)
!6699 = !DILocation(line: 1464, column: 31, scope: !6664)
!6700 = !DILocation(line: 1464, column: 36, scope: !6664)
!6701 = !DILocation(line: 1464, column: 40, scope: !6664)
!6702 = !DILocation(line: 1461, column: 6, scope: !6664)
!6703 = !DILocation(line: 1465, column: 21, scope: !6664)
!6704 = !DILocation(line: 1465, column: 17, scope: !6664)
!6705 = !DILocation(line: 1465, column: 30, scope: !6664)
!6706 = !DILocation(line: 1465, column: 6, scope: !6664)
!6707 = !DILocation(line: 1466, column: 21, scope: !6664)
!6708 = !DILocation(line: 1466, column: 17, scope: !6664)
!6709 = !DILocation(line: 1466, column: 28, scope: !6664)
!6710 = !DILocation(line: 1466, column: 6, scope: !6664)
!6711 = !DILocation(line: 1467, column: 17, scope: !6664)
!6712 = !DILocation(line: 1467, column: 10, scope: !6664)
!6713 = !DILocation(line: 1467, column: 15, scope: !6664)
!6714 = !DILocation(line: 1468, column: 24, scope: !6664)
!6715 = !DILocation(line: 1468, column: 6, scope: !6664)
!6716 = !DILocation(line: 1469, column: 6, scope: !6664)
!6717 = !DILocation(line: 1470, column: 5, scope: !6664)
!6718 = !DILocation(line: 1471, column: 4, scope: !6629)
!6719 = !DILocation(line: 1472, column: 3, scope: !6604)
!6720 = !DILocation(line: 1473, column: 2, scope: !6545)
!6721 = !DILocation(line: 1425, column: 44, scope: !6542)
!6722 = !DILocation(line: 1425, column: 13, scope: !6542)
!6723 = !DILocation(line: 1425, column: 11, scope: !6542)
!6724 = !DILocation(line: 1424, column: 2, scope: !6542)
!6725 = distinct !{!6725, !6543, !6726}
!6726 = !DILocation(line: 1473, column: 2, scope: !6537)
!6727 = !DILocation(line: 1475, column: 51, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1475, column: 2)
!6729 = !DILocation(line: 1475, column: 13, scope: !6728)
!6730 = !DILocation(line: 1475, column: 11, scope: !6728)
!6731 = !DILocation(line: 1475, column: 7, scope: !6728)
!6732 = !DILocation(line: 1475, column: 69, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 1475, column: 2)
!6734 = !DILocation(line: 1475, column: 2, scope: !6728)
!6735 = !DILocalVariable(name: "p", scope: !6736, file: !3, line: 1478, type: !555)
!6736 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1477, column: 2)
!6737 = !DILocation(line: 1478, column: 9, scope: !6736)
!6738 = !DILocalVariable(name: "p_cage", scope: !6736, file: !3, line: 1478, type: !555)
!6739 = !DILocation(line: 1478, column: 15, scope: !6736)
!6740 = !DILocation(line: 1480, column: 32, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 1480, column: 7)
!6742 = !DILocation(line: 1480, column: 37, scope: !6741)
!6743 = !DILocation(line: 1480, column: 41, scope: !6741)
!6744 = !DILocation(line: 1480, column: 45, scope: !6741)
!6745 = !DILocation(line: 1480, column: 49, scope: !6741)
!6746 = !DILocation(line: 1480, column: 52, scope: !6741)
!6747 = !DILocation(line: 1480, column: 65, scope: !6741)
!6748 = !DILocation(line: 1480, column: 68, scope: !6741)
!6749 = !DILocation(line: 1480, column: 7, scope: !6741)
!6750 = !DILocation(line: 1480, column: 7, scope: !6736)
!6751 = !DILocation(line: 1481, column: 25, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 1481, column: 8)
!6753 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 1480, column: 77)
!6754 = !DILocation(line: 1481, column: 30, scope: !6752)
!6755 = !DILocation(line: 1481, column: 38, scope: !6752)
!6756 = !DILocation(line: 1481, column: 8, scope: !6752)
!6757 = !DILocation(line: 1481, column: 8, scope: !6753)
!6758 = !DILocation(line: 1482, column: 5, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 1481, column: 50)
!6760 = !DILocation(line: 1483, column: 13, scope: !6759)
!6761 = !DILocation(line: 1483, column: 9, scope: !6759)
!6762 = !DILocation(line: 1483, column: 11, scope: !6759)
!6763 = !DILocation(line: 1484, column: 20, scope: !6759)
!6764 = !DILocation(line: 1484, column: 16, scope: !6759)
!6765 = !DILocation(line: 1484, column: 25, scope: !6759)
!6766 = !DILocation(line: 1484, column: 5, scope: !6759)
!6767 = !DILocation(line: 1485, column: 20, scope: !6759)
!6768 = !DILocation(line: 1485, column: 16, scope: !6759)
!6769 = !DILocation(line: 1485, column: 29, scope: !6759)
!6770 = !DILocation(line: 1485, column: 5, scope: !6759)
!6771 = !DILocation(line: 1486, column: 20, scope: !6759)
!6772 = !DILocation(line: 1486, column: 16, scope: !6759)
!6773 = !DILocation(line: 1486, column: 27, scope: !6759)
!6774 = !DILocation(line: 1486, column: 5, scope: !6759)
!6775 = !DILocation(line: 1487, column: 23, scope: !6759)
!6776 = !DILocation(line: 1487, column: 5, scope: !6759)
!6777 = !DILocation(line: 1488, column: 5, scope: !6759)
!6778 = !DILocation(line: 1489, column: 4, scope: !6759)
!6779 = !DILocation(line: 1490, column: 3, scope: !6753)
!6780 = !DILocation(line: 1491, column: 32, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 1491, column: 7)
!6782 = !DILocation(line: 1491, column: 37, scope: !6781)
!6783 = !DILocation(line: 1491, column: 41, scope: !6781)
!6784 = !DILocation(line: 1491, column: 45, scope: !6781)
!6785 = !DILocation(line: 1491, column: 49, scope: !6781)
!6786 = !DILocation(line: 1491, column: 52, scope: !6781)
!6787 = !DILocation(line: 1491, column: 65, scope: !6781)
!6788 = !DILocation(line: 1491, column: 68, scope: !6781)
!6789 = !DILocation(line: 1491, column: 7, scope: !6781)
!6790 = !DILocation(line: 1491, column: 7, scope: !6736)
!6791 = !DILocation(line: 1492, column: 25, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 1492, column: 8)
!6793 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 1491, column: 77)
!6794 = !DILocation(line: 1492, column: 30, scope: !6792)
!6795 = !DILocation(line: 1492, column: 38, scope: !6792)
!6796 = !DILocation(line: 1492, column: 8, scope: !6792)
!6797 = !DILocation(line: 1492, column: 8, scope: !6793)
!6798 = !DILocation(line: 1493, column: 5, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 1492, column: 50)
!6800 = !DILocation(line: 1494, column: 13, scope: !6799)
!6801 = !DILocation(line: 1494, column: 9, scope: !6799)
!6802 = !DILocation(line: 1494, column: 11, scope: !6799)
!6803 = !DILocation(line: 1495, column: 20, scope: !6799)
!6804 = !DILocation(line: 1495, column: 16, scope: !6799)
!6805 = !DILocation(line: 1495, column: 25, scope: !6799)
!6806 = !DILocation(line: 1495, column: 5, scope: !6799)
!6807 = !DILocation(line: 1496, column: 20, scope: !6799)
!6808 = !DILocation(line: 1496, column: 16, scope: !6799)
!6809 = !DILocation(line: 1496, column: 29, scope: !6799)
!6810 = !DILocation(line: 1496, column: 5, scope: !6799)
!6811 = !DILocation(line: 1497, column: 20, scope: !6799)
!6812 = !DILocation(line: 1497, column: 16, scope: !6799)
!6813 = !DILocation(line: 1497, column: 27, scope: !6799)
!6814 = !DILocation(line: 1497, column: 5, scope: !6799)
!6815 = !DILocation(line: 1498, column: 23, scope: !6799)
!6816 = !DILocation(line: 1498, column: 5, scope: !6799)
!6817 = !DILocation(line: 1499, column: 5, scope: !6799)
!6818 = !DILocation(line: 1500, column: 4, scope: !6799)
!6819 = !DILocation(line: 1501, column: 3, scope: !6793)
!6820 = !DILocation(line: 1502, column: 2, scope: !6736)
!6821 = !DILocation(line: 1476, column: 44, scope: !6733)
!6822 = !DILocation(line: 1476, column: 13, scope: !6733)
!6823 = !DILocation(line: 1476, column: 11, scope: !6733)
!6824 = !DILocation(line: 1475, column: 2, scope: !6733)
!6825 = distinct !{!6825, !6734, !6826}
!6826 = !DILocation(line: 1502, column: 2, scope: !6728)
!6827 = !DILocation(line: 1504, column: 18, scope: !6039)
!6828 = !DILocation(line: 1504, column: 2, scope: !6039)
!6829 = !DILocation(line: 1504, column: 7, scope: !6039)
!6830 = !DILocation(line: 1504, column: 16, scope: !6039)
!6831 = !DILocation(line: 1505, column: 20, scope: !6039)
!6832 = !DILocation(line: 1505, column: 2, scope: !6039)
!6833 = !DILocation(line: 1505, column: 7, scope: !6039)
!6834 = !DILocation(line: 1505, column: 18, scope: !6039)
!6835 = !DILocation(line: 1508, column: 9, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1508, column: 2)
!6837 = !DILocation(line: 1508, column: 7, scope: !6836)
!6838 = !DILocation(line: 1508, column: 14, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 1508, column: 2)
!6840 = !DILocation(line: 1508, column: 18, scope: !6839)
!6841 = !DILocation(line: 1508, column: 23, scope: !6839)
!6842 = !DILocation(line: 1508, column: 16, scope: !6839)
!6843 = !DILocation(line: 1508, column: 2, scope: !6836)
!6844 = !DILocalVariable(name: "lh", scope: !6845, file: !3, line: 1509, type: !2850)
!6845 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 1508, column: 40)
!6846 = !DILocation(line: 1509, column: 17, scope: !6845)
!6847 = !DILocation(line: 1509, column: 22, scope: !6845)
!6848 = !DILocation(line: 1509, column: 27, scope: !6845)
!6849 = !DILocation(line: 1509, column: 38, scope: !6845)
!6850 = !DILocation(line: 1509, column: 36, scope: !6845)
!6851 = !DILocation(line: 1511, column: 20, scope: !6845)
!6852 = !DILocation(line: 1511, column: 24, scope: !6845)
!6853 = !DILocation(line: 1511, column: 31, scope: !6845)
!6854 = !DILocation(line: 1511, column: 11, scope: !6845)
!6855 = !DILocation(line: 1511, column: 46, scope: !6845)
!6856 = !DILocation(line: 1511, column: 50, scope: !6845)
!6857 = !DILocation(line: 1511, column: 37, scope: !6845)
!6858 = !DILocation(line: 1511, column: 35, scope: !6845)
!6859 = !DILocation(line: 1511, column: 3, scope: !6845)
!6860 = !DILocation(line: 1511, column: 7, scope: !6845)
!6861 = !DILocation(line: 1511, column: 9, scope: !6845)
!6862 = !DILocation(line: 1512, column: 2, scope: !6845)
!6863 = !DILocation(line: 1508, column: 36, scope: !6839)
!6864 = !DILocation(line: 1508, column: 2, scope: !6839)
!6865 = distinct !{!6865, !6843, !6866}
!6866 = !DILocation(line: 1512, column: 2, scope: !6836)
!6867 = !DILocation(line: 1514, column: 2, scope: !6039)
!6868 = !DILocation(line: 1515, column: 2, scope: !6039)
!6869 = !DILocation(line: 1516, column: 2, scope: !6039)
!6870 = !DILocation(line: 1517, column: 19, scope: !6039)
!6871 = !DILocation(line: 1517, column: 2, scope: !6039)
!6872 = !DILocation(line: 1518, column: 6, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1518, column: 6)
!6874 = !DILocation(line: 1518, column: 6, scope: !6039)
!6875 = !DILocation(line: 1519, column: 3, scope: !6873)
!6876 = !DILocation(line: 1519, column: 13, scope: !6873)
!6877 = !DILocation(line: 1520, column: 1, scope: !6039)
!6878 = distinct !DISubprogram(name: "zero_v3", scope: !5212, file: !5212, line: 43, type: !6879, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!6879 = !DISubroutineType(types: !6880)
!6880 = !{null, !392}
!6881 = !DILocalVariable(name: "r", arg: 1, scope: !6878, file: !5212, line: 43, type: !392)
!6882 = !DILocation(line: 43, column: 28, scope: !6878)
!6883 = !DILocation(line: 45, column: 2, scope: !6878)
!6884 = !DILocation(line: 45, column: 7, scope: !6878)
!6885 = !DILocation(line: 46, column: 2, scope: !6878)
!6886 = !DILocation(line: 46, column: 7, scope: !6878)
!6887 = !DILocation(line: 47, column: 2, scope: !6878)
!6888 = !DILocation(line: 47, column: 7, scope: !6878)
!6889 = !DILocation(line: 48, column: 1, scope: !6878)
!6890 = distinct !DISubprogram(name: "zero_v2", scope: !5212, file: !5212, line: 37, type: !6879, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!6891 = !DILocalVariable(name: "r", arg: 1, scope: !6890, file: !5212, line: 37, type: !392)
!6892 = !DILocation(line: 37, column: 28, scope: !6890)
!6893 = !DILocation(line: 39, column: 2, scope: !6890)
!6894 = !DILocation(line: 39, column: 7, scope: !6890)
!6895 = !DILocation(line: 40, column: 2, scope: !6890)
!6896 = !DILocation(line: 40, column: 7, scope: !6890)
!6897 = !DILocation(line: 41, column: 1, scope: !6890)
!6898 = distinct !DISubprogram(name: "knife_snap_size", scope: !3, file: !3, line: 1625, type: !6899, scopeLine: 1626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!6899 = !DISubroutineType(types: !6900)
!6900 = !{!357, !3512, !357}
!6901 = !DILocalVariable(name: "kcd", arg: 1, scope: !6898, file: !3, line: 1625, type: !3512)
!6902 = !DILocation(line: 1625, column: 48, scope: !6898)
!6903 = !DILocalVariable(name: "maxsize", arg: 2, scope: !6898, file: !3, line: 1625, type: !357)
!6904 = !DILocation(line: 1625, column: 59, scope: !6898)
!6905 = !DILocalVariable(name: "density", scope: !6898, file: !3, line: 1627, type: !357)
!6906 = !DILocation(line: 1627, column: 8, scope: !6898)
!6907 = !DILocation(line: 1629, column: 6, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 1629, column: 6)
!6909 = !DILocation(line: 1629, column: 11, scope: !6908)
!6910 = !DILocation(line: 1629, column: 6, scope: !6898)
!6911 = !DILocation(line: 1630, column: 48, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 1629, column: 27)
!6913 = !DILocation(line: 1630, column: 53, scope: !6912)
!6914 = !DILocation(line: 1630, column: 61, scope: !6912)
!6915 = !DILocation(line: 1630, column: 20, scope: !6912)
!6916 = !DILocation(line: 1630, column: 13, scope: !6912)
!6917 = !DILocation(line: 1630, column: 11, scope: !6912)
!6918 = !DILocation(line: 1631, column: 2, scope: !6912)
!6919 = !DILocation(line: 1633, column: 11, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 1632, column: 7)
!6921 = !DILocation(line: 1636, column: 6, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 1636, column: 6)
!6923 = !DILocation(line: 1636, column: 14, scope: !6922)
!6924 = !DILocation(line: 1636, column: 6, scope: !6898)
!6925 = !DILocation(line: 1637, column: 11, scope: !6922)
!6926 = !DILocation(line: 1637, column: 3, scope: !6922)
!6927 = !DILocation(line: 1639, column: 16, scope: !6898)
!6928 = !DILocation(line: 1639, column: 27, scope: !6898)
!6929 = !DILocation(line: 1639, column: 35, scope: !6898)
!6930 = !DILocation(line: 1639, column: 24, scope: !6898)
!6931 = !DILocation(line: 1639, column: 44, scope: !6898)
!6932 = !DILocation(line: 1639, column: 9, scope: !6898)
!6933 = !DILocation(line: 1639, column: 2, scope: !6898)
!6934 = distinct !DISubprogram(name: "knife_find_closest_face", scope: !3, file: !3, line: 1540, type: !6935, scopeLine: 1541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!6935 = !DISubroutineType(types: !6936)
!6936 = !{!2730, !3512, !392, !392, !5380}
!6937 = !DILocalVariable(name: "kcd", arg: 1, scope: !6934, file: !3, line: 1540, type: !3512)
!6938 = !DILocation(line: 1540, column: 58, scope: !6934)
!6939 = !DILocalVariable(name: "co", arg: 2, scope: !6934, file: !3, line: 1540, type: !392)
!6940 = !DILocation(line: 1540, column: 69, scope: !6934)
!6941 = !DILocalVariable(name: "cageco", arg: 3, scope: !6934, file: !3, line: 1540, type: !392)
!6942 = !DILocation(line: 1540, column: 82, scope: !6934)
!6943 = !DILocalVariable(name: "is_space", arg: 4, scope: !6934, file: !3, line: 1540, type: !5380)
!6944 = !DILocation(line: 1540, column: 99, scope: !6934)
!6945 = !DILocalVariable(name: "f", scope: !6934, file: !3, line: 1542, type: !2730)
!6946 = !DILocation(line: 1542, column: 10, scope: !6934)
!6947 = !DILocalVariable(name: "dist", scope: !6934, file: !3, line: 1543, type: !357)
!6948 = !DILocation(line: 1543, column: 8, scope: !6934)
!6949 = !DILocalVariable(name: "origin", scope: !6934, file: !3, line: 1544, type: !555)
!6950 = !DILocation(line: 1544, column: 8, scope: !6934)
!6951 = !DILocalVariable(name: "origin_ofs", scope: !6934, file: !3, line: 1545, type: !555)
!6952 = !DILocation(line: 1545, column: 8, scope: !6934)
!6953 = !DILocalVariable(name: "ray", scope: !6934, file: !3, line: 1546, type: !555)
!6954 = !DILocation(line: 1546, column: 8, scope: !6934)
!6955 = !DILocation(line: 1549, column: 26, scope: !6934)
!6956 = !DILocation(line: 1549, column: 31, scope: !6934)
!6957 = !DILocation(line: 1549, column: 36, scope: !6934)
!6958 = !DILocation(line: 1549, column: 41, scope: !6934)
!6959 = !DILocation(line: 1549, column: 53, scope: !6934)
!6960 = !DILocation(line: 1549, column: 61, scope: !6934)
!6961 = !DILocation(line: 1549, column: 2, scope: !6934)
!6962 = !DILocation(line: 1550, column: 14, scope: !6934)
!6963 = !DILocation(line: 1550, column: 19, scope: !6934)
!6964 = !DILocation(line: 1550, column: 31, scope: !6934)
!6965 = !DILocation(line: 1550, column: 2, scope: !6934)
!6966 = !DILocation(line: 1552, column: 25, scope: !6934)
!6967 = !DILocation(line: 1552, column: 30, scope: !6934)
!6968 = !DILocation(line: 1552, column: 37, scope: !6934)
!6969 = !DILocation(line: 1552, column: 45, scope: !6934)
!6970 = !DILocation(line: 1552, column: 62, scope: !6934)
!6971 = !DILocation(line: 1552, column: 66, scope: !6934)
!6972 = !DILocation(line: 1552, column: 6, scope: !6934)
!6973 = !DILocation(line: 1552, column: 4, scope: !6934)
!6974 = !DILocation(line: 1554, column: 6, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6934, file: !3, line: 1554, column: 6)
!6976 = !DILocation(line: 1554, column: 6, scope: !6934)
!6977 = !DILocation(line: 1555, column: 16, scope: !6975)
!6978 = !DILocation(line: 1555, column: 15, scope: !6975)
!6979 = !DILocation(line: 1555, column: 4, scope: !6975)
!6980 = !DILocation(line: 1555, column: 13, scope: !6975)
!6981 = !DILocation(line: 1555, column: 3, scope: !6975)
!6982 = !DILocation(line: 1557, column: 7, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6934, file: !3, line: 1557, column: 6)
!6984 = !DILocation(line: 1557, column: 6, scope: !6934)
!6985 = !DILocation(line: 1558, column: 7, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6987, file: !3, line: 1558, column: 7)
!6987 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 1557, column: 10)
!6988 = !DILocation(line: 1558, column: 12, scope: !6986)
!6989 = !DILocation(line: 1558, column: 7, scope: !6987)
!6990 = !DILocation(line: 1560, column: 32, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 1558, column: 28)
!6992 = !DILocation(line: 1560, column: 37, scope: !6991)
!6993 = !DILocation(line: 1560, column: 8, scope: !6991)
!6994 = !DILocation(line: 1560, column: 6, scope: !6991)
!6995 = !DILocation(line: 1565, column: 16, scope: !6991)
!6996 = !DILocation(line: 1565, column: 20, scope: !6991)
!6997 = !DILocation(line: 1565, column: 28, scope: !6991)
!6998 = !DILocation(line: 1565, column: 4, scope: !6991)
!6999 = !DILocation(line: 1566, column: 3, scope: !6991)
!7000 = !DILocation(line: 1567, column: 2, scope: !6987)
!7001 = !DILocation(line: 1569, column: 9, scope: !6934)
!7002 = !DILocation(line: 1569, column: 2, scope: !6934)
!7003 = distinct !DISubprogram(name: "knife_get_face_kedges", scope: !3, file: !3, line: 492, type: !7004, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7004 = !DISubroutineType(types: !7005)
!7005 = !{!1227, !3512, !2730}
!7006 = !DILocalVariable(name: "kcd", arg: 1, scope: !7003, file: !3, line: 492, type: !3512)
!7007 = !DILocation(line: 492, column: 58, scope: !7003)
!7008 = !DILocalVariable(name: "f", arg: 2, scope: !7003, file: !3, line: 492, type: !2730)
!7009 = !DILocation(line: 492, column: 71, scope: !7003)
!7010 = !DILocalVariable(name: "lst", scope: !7003, file: !3, line: 494, type: !1227)
!7011 = !DILocation(line: 494, column: 12, scope: !7003)
!7012 = !DILocation(line: 494, column: 35, scope: !7003)
!7013 = !DILocation(line: 494, column: 40, scope: !7003)
!7014 = !DILocation(line: 494, column: 54, scope: !7003)
!7015 = !DILocation(line: 494, column: 18, scope: !7003)
!7016 = !DILocation(line: 496, column: 7, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 496, column: 6)
!7018 = !DILocation(line: 496, column: 6, scope: !7003)
!7019 = !DILocalVariable(name: "bmiter", scope: !7020, file: !3, line: 497, type: !3967)
!7020 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 496, column: 12)
!7021 = !DILocation(line: 497, column: 10, scope: !7020)
!7022 = !DILocalVariable(name: "e", scope: !7020, file: !3, line: 498, type: !2726)
!7023 = !DILocation(line: 498, column: 11, scope: !7020)
!7024 = !DILocation(line: 500, column: 26, scope: !7020)
!7025 = !DILocation(line: 500, column: 9, scope: !7020)
!7026 = !DILocation(line: 500, column: 7, scope: !7020)
!7027 = !DILocation(line: 502, column: 3, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7020, file: !3, line: 502, column: 3)
!7029 = !DILocation(line: 502, column: 3, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 502, column: 3)
!7031 = !DILocation(line: 503, column: 22, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 502, column: 50)
!7033 = !DILocation(line: 503, column: 27, scope: !7032)
!7034 = !DILocation(line: 503, column: 50, scope: !7032)
!7035 = !DILocation(line: 503, column: 55, scope: !7032)
!7036 = !DILocation(line: 503, column: 32, scope: !7032)
!7037 = !DILocation(line: 503, column: 4, scope: !7032)
!7038 = !DILocation(line: 504, column: 3, scope: !7032)
!7039 = distinct !{!7039, !7027, !7040}
!7040 = !DILocation(line: 504, column: 3, scope: !7028)
!7041 = !DILocation(line: 506, column: 20, scope: !7020)
!7042 = !DILocation(line: 506, column: 25, scope: !7020)
!7043 = !DILocation(line: 506, column: 39, scope: !7020)
!7044 = !DILocation(line: 506, column: 42, scope: !7020)
!7045 = !DILocation(line: 506, column: 3, scope: !7020)
!7046 = !DILocation(line: 507, column: 2, scope: !7020)
!7047 = !DILocation(line: 509, column: 9, scope: !7003)
!7048 = !DILocation(line: 509, column: 2, scope: !7003)
!7049 = distinct !DISubprogram(name: "len_squared_v2v2", scope: !5212, file: !5212, line: 719, type: !7050, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7050 = !DISubroutineType(types: !7051)
!7051 = !{!357, !997, !997}
!7052 = !DILocalVariable(name: "a", arg: 1, scope: !7049, file: !5212, line: 719, type: !997)
!7053 = !DILocation(line: 719, column: 44, scope: !7049)
!7054 = !DILocalVariable(name: "b", arg: 2, scope: !7049, file: !5212, line: 719, type: !997)
!7055 = !DILocation(line: 719, column: 62, scope: !7049)
!7056 = !DILocalVariable(name: "d", scope: !7049, file: !5212, line: 721, type: !373)
!7057 = !DILocation(line: 721, column: 8, scope: !7049)
!7058 = !DILocation(line: 723, column: 14, scope: !7049)
!7059 = !DILocation(line: 723, column: 17, scope: !7049)
!7060 = !DILocation(line: 723, column: 20, scope: !7049)
!7061 = !DILocation(line: 723, column: 2, scope: !7049)
!7062 = !DILocation(line: 724, column: 18, scope: !7049)
!7063 = !DILocation(line: 724, column: 21, scope: !7049)
!7064 = !DILocation(line: 724, column: 9, scope: !7049)
!7065 = !DILocation(line: 724, column: 2, scope: !7049)
!7066 = distinct !DISubprogram(name: "knife_sample_screen_density", scope: !3, file: !3, line: 1574, type: !7067, scopeLine: 1575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7067 = !DISubroutineType(types: !7068)
!7068 = !{!35, !3512, !806}
!7069 = !DILocalVariable(name: "kcd", arg: 1, scope: !7066, file: !3, line: 1574, type: !3512)
!7070 = !DILocation(line: 1574, column: 58, scope: !7066)
!7071 = !DILocalVariable(name: "radius", arg: 2, scope: !7066, file: !3, line: 1574, type: !806)
!7072 = !DILocation(line: 1574, column: 75, scope: !7066)
!7073 = !DILocalVariable(name: "f", scope: !7066, file: !3, line: 1576, type: !2730)
!7074 = !DILocation(line: 1576, column: 10, scope: !7066)
!7075 = !DILocalVariable(name: "is_space", scope: !7066, file: !3, line: 1577, type: !1053)
!7076 = !DILocation(line: 1577, column: 7, scope: !7066)
!7077 = !DILocalVariable(name: "co", scope: !7066, file: !3, line: 1578, type: !555)
!7078 = !DILocation(line: 1578, column: 8, scope: !7066)
!7079 = !DILocalVariable(name: "cageco", scope: !7066, file: !3, line: 1578, type: !555)
!7080 = !DILocation(line: 1578, column: 15, scope: !7066)
!7081 = !DILocalVariable(name: "sco", scope: !7066, file: !3, line: 1578, type: !373)
!7082 = !DILocation(line: 1578, column: 26, scope: !7066)
!7083 = !DILocation(line: 1582, column: 30, scope: !7066)
!7084 = !DILocation(line: 1582, column: 35, scope: !7066)
!7085 = !DILocation(line: 1582, column: 39, scope: !7066)
!7086 = !DILocation(line: 1582, column: 6, scope: !7066)
!7087 = !DILocation(line: 1582, column: 4, scope: !7066)
!7088 = !DILocation(line: 1584, column: 6, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 1584, column: 6)
!7090 = !DILocation(line: 1584, column: 8, scope: !7089)
!7091 = !DILocation(line: 1584, column: 12, scope: !7089)
!7092 = !DILocation(line: 1584, column: 6, scope: !7066)
!7093 = !DILocalVariable(name: "radius_sq", scope: !7094, file: !3, line: 1585, type: !806)
!7094 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 1584, column: 22)
!7095 = !DILocation(line: 1585, column: 15, scope: !7094)
!7096 = !DILocation(line: 1585, column: 27, scope: !7094)
!7097 = !DILocation(line: 1585, column: 36, scope: !7094)
!7098 = !DILocation(line: 1585, column: 34, scope: !7094)
!7099 = !DILocalVariable(name: "lst", scope: !7094, file: !3, line: 1586, type: !1227)
!7100 = !DILocation(line: 1586, column: 13, scope: !7094)
!7101 = !DILocalVariable(name: "ref", scope: !7094, file: !3, line: 1587, type: !3251)
!7102 = !DILocation(line: 1587, column: 8, scope: !7094)
!7103 = !DILocalVariable(name: "dis_sq", scope: !7094, file: !3, line: 1588, type: !357)
!7104 = !DILocation(line: 1588, column: 9, scope: !7094)
!7105 = !DILocalVariable(name: "c", scope: !7094, file: !3, line: 1589, type: !35)
!7106 = !DILocation(line: 1589, column: 7, scope: !7094)
!7107 = !DILocation(line: 1591, column: 20, scope: !7094)
!7108 = !DILocation(line: 1591, column: 25, scope: !7094)
!7109 = !DILocation(line: 1591, column: 33, scope: !7094)
!7110 = !DILocation(line: 1591, column: 3, scope: !7094)
!7111 = !DILocation(line: 1593, column: 31, scope: !7094)
!7112 = !DILocation(line: 1593, column: 36, scope: !7094)
!7113 = !DILocation(line: 1593, column: 9, scope: !7094)
!7114 = !DILocation(line: 1593, column: 7, scope: !7094)
!7115 = !DILocation(line: 1594, column: 14, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 1594, column: 3)
!7117 = !DILocation(line: 1594, column: 19, scope: !7116)
!7118 = !DILocation(line: 1594, column: 12, scope: !7116)
!7119 = !DILocation(line: 1594, column: 8, scope: !7116)
!7120 = !DILocation(line: 1594, column: 26, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 1594, column: 3)
!7122 = !DILocation(line: 1594, column: 3, scope: !7116)
!7123 = !DILocalVariable(name: "kfe", scope: !7124, file: !3, line: 1595, type: !2861)
!7124 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 1594, column: 48)
!7125 = !DILocation(line: 1595, column: 15, scope: !7124)
!7126 = !DILocation(line: 1595, column: 21, scope: !7124)
!7127 = !DILocation(line: 1595, column: 26, scope: !7124)
!7128 = !DILocalVariable(name: "i", scope: !7124, file: !3, line: 1596, type: !35)
!7129 = !DILocation(line: 1596, column: 8, scope: !7124)
!7130 = !DILocation(line: 1598, column: 11, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 1598, column: 4)
!7132 = !DILocation(line: 1598, column: 9, scope: !7131)
!7133 = !DILocation(line: 1598, column: 16, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7131, file: !3, line: 1598, column: 4)
!7135 = !DILocation(line: 1598, column: 18, scope: !7134)
!7136 = !DILocation(line: 1598, column: 4, scope: !7131)
!7137 = !DILocalVariable(name: "kfv", scope: !7138, file: !3, line: 1599, type: !2866)
!7138 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 1598, column: 28)
!7139 = !DILocation(line: 1599, column: 16, scope: !7138)
!7140 = !DILocation(line: 1599, column: 22, scope: !7138)
!7141 = !DILocation(line: 1599, column: 26, scope: !7138)
!7142 = !DILocation(line: 1599, column: 31, scope: !7138)
!7143 = !DILocation(line: 1599, column: 36, scope: !7138)
!7144 = !DILocation(line: 1599, column: 41, scope: !7138)
!7145 = !DILocation(line: 1601, column: 22, scope: !7138)
!7146 = !DILocation(line: 1601, column: 27, scope: !7138)
!7147 = !DILocation(line: 1601, column: 32, scope: !7138)
!7148 = !DILocation(line: 1601, column: 40, scope: !7138)
!7149 = !DILocation(line: 1601, column: 45, scope: !7138)
!7150 = !DILocation(line: 1601, column: 5, scope: !7138)
!7151 = !DILocation(line: 1603, column: 31, scope: !7138)
!7152 = !DILocation(line: 1603, column: 36, scope: !7138)
!7153 = !DILocation(line: 1603, column: 41, scope: !7138)
!7154 = !DILocation(line: 1603, column: 14, scope: !7138)
!7155 = !DILocation(line: 1603, column: 12, scope: !7138)
!7156 = !DILocation(line: 1604, column: 9, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1604, column: 9)
!7158 = !DILocation(line: 1604, column: 18, scope: !7157)
!7159 = !DILocation(line: 1604, column: 16, scope: !7157)
!7160 = !DILocation(line: 1604, column: 9, scope: !7138)
!7161 = !DILocation(line: 1605, column: 10, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 1605, column: 10)
!7163 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1604, column: 29)
!7164 = !DILocation(line: 1605, column: 15, scope: !7162)
!7165 = !DILocation(line: 1605, column: 18, scope: !7162)
!7166 = !DILocation(line: 1605, column: 24, scope: !7162)
!7167 = !DILocation(line: 1605, column: 30, scope: !7162)
!7168 = !DILocation(line: 1605, column: 10, scope: !7163)
!7169 = !DILocation(line: 1606, column: 35, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 1606, column: 11)
!7171 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 1605, column: 47)
!7172 = !DILocation(line: 1606, column: 40, scope: !7170)
!7173 = !DILocation(line: 1606, column: 43, scope: !7170)
!7174 = !DILocation(line: 1606, column: 49, scope: !7170)
!7175 = !DILocation(line: 1606, column: 54, scope: !7170)
!7176 = !DILocation(line: 1606, column: 11, scope: !7170)
!7177 = !DILocation(line: 1606, column: 68, scope: !7170)
!7178 = !DILocation(line: 1606, column: 11, scope: !7171)
!7179 = !DILocation(line: 1607, column: 9, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 1606, column: 74)
!7181 = !DILocation(line: 1608, column: 7, scope: !7180)
!7182 = !DILocation(line: 1609, column: 6, scope: !7171)
!7183 = !DILocation(line: 1611, column: 8, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 1610, column: 11)
!7185 = !DILocation(line: 1613, column: 5, scope: !7163)
!7186 = !DILocation(line: 1614, column: 4, scope: !7138)
!7187 = !DILocation(line: 1598, column: 24, scope: !7134)
!7188 = !DILocation(line: 1598, column: 4, scope: !7134)
!7189 = distinct !{!7189, !7136, !7190}
!7190 = !DILocation(line: 1614, column: 4, scope: !7131)
!7191 = !DILocation(line: 1615, column: 3, scope: !7124)
!7192 = !DILocation(line: 1594, column: 37, scope: !7121)
!7193 = !DILocation(line: 1594, column: 42, scope: !7121)
!7194 = !DILocation(line: 1594, column: 35, scope: !7121)
!7195 = !DILocation(line: 1594, column: 3, scope: !7121)
!7196 = distinct !{!7196, !7122, !7197}
!7197 = !DILocation(line: 1615, column: 3, scope: !7116)
!7198 = !DILocation(line: 1617, column: 10, scope: !7094)
!7199 = !DILocation(line: 1617, column: 3, scope: !7094)
!7200 = !DILocation(line: 1620, column: 2, scope: !7066)
!7201 = !DILocation(line: 1621, column: 1, scope: !7066)
!7202 = distinct !DISubprogram(name: "min_ff", scope: !7203, file: !7203, line: 202, type: !7204, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7203 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7204 = !DISubroutineType(types: !7205)
!7205 = !{!357, !357, !357}
!7206 = !DILocalVariable(name: "a", arg: 1, scope: !7202, file: !7203, line: 202, type: !357)
!7207 = !DILocation(line: 202, column: 28, scope: !7202)
!7208 = !DILocalVariable(name: "b", arg: 2, scope: !7202, file: !7203, line: 202, type: !357)
!7209 = !DILocation(line: 202, column: 37, scope: !7202)
!7210 = !DILocation(line: 204, column: 10, scope: !7202)
!7211 = !DILocation(line: 204, column: 14, scope: !7202)
!7212 = !DILocation(line: 204, column: 12, scope: !7202)
!7213 = !DILocation(line: 204, column: 9, scope: !7202)
!7214 = !DILocation(line: 204, column: 19, scope: !7202)
!7215 = !DILocation(line: 204, column: 23, scope: !7202)
!7216 = !DILocation(line: 204, column: 2, scope: !7202)
!7217 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !5212, file: !5212, line: 357, type: !7218, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7218 = !DISubroutineType(types: !7219)
!7219 = !{null, !392, !997, !997}
!7220 = !DILocalVariable(name: "r", arg: 1, scope: !7217, file: !5212, line: 357, type: !392)
!7221 = !DILocation(line: 357, column: 32, scope: !7217)
!7222 = !DILocalVariable(name: "a", arg: 2, scope: !7217, file: !5212, line: 357, type: !997)
!7223 = !DILocation(line: 357, column: 50, scope: !7217)
!7224 = !DILocalVariable(name: "b", arg: 3, scope: !7217, file: !5212, line: 357, type: !997)
!7225 = !DILocation(line: 357, column: 68, scope: !7217)
!7226 = !DILocation(line: 359, column: 9, scope: !7217)
!7227 = !DILocation(line: 359, column: 16, scope: !7217)
!7228 = !DILocation(line: 359, column: 14, scope: !7217)
!7229 = !DILocation(line: 359, column: 2, scope: !7217)
!7230 = !DILocation(line: 359, column: 7, scope: !7217)
!7231 = !DILocation(line: 360, column: 9, scope: !7217)
!7232 = !DILocation(line: 360, column: 16, scope: !7217)
!7233 = !DILocation(line: 360, column: 14, scope: !7217)
!7234 = !DILocation(line: 360, column: 2, scope: !7217)
!7235 = !DILocation(line: 360, column: 7, scope: !7217)
!7236 = !DILocation(line: 361, column: 9, scope: !7217)
!7237 = !DILocation(line: 361, column: 16, scope: !7217)
!7238 = !DILocation(line: 361, column: 14, scope: !7217)
!7239 = !DILocation(line: 361, column: 2, scope: !7217)
!7240 = !DILocation(line: 361, column: 7, scope: !7217)
!7241 = !DILocation(line: 362, column: 1, scope: !7217)
!7242 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !5212, file: !5212, line: 309, type: !7218, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7243 = !DILocalVariable(name: "r", arg: 1, scope: !7242, file: !5212, line: 309, type: !392)
!7244 = !DILocation(line: 309, column: 32, scope: !7242)
!7245 = !DILocalVariable(name: "a", arg: 2, scope: !7242, file: !5212, line: 309, type: !997)
!7246 = !DILocation(line: 309, column: 50, scope: !7242)
!7247 = !DILocalVariable(name: "b", arg: 3, scope: !7242, file: !5212, line: 309, type: !997)
!7248 = !DILocation(line: 309, column: 68, scope: !7242)
!7249 = !DILocation(line: 311, column: 9, scope: !7242)
!7250 = !DILocation(line: 311, column: 16, scope: !7242)
!7251 = !DILocation(line: 311, column: 14, scope: !7242)
!7252 = !DILocation(line: 311, column: 2, scope: !7242)
!7253 = !DILocation(line: 311, column: 7, scope: !7242)
!7254 = !DILocation(line: 312, column: 9, scope: !7242)
!7255 = !DILocation(line: 312, column: 16, scope: !7242)
!7256 = !DILocation(line: 312, column: 14, scope: !7242)
!7257 = !DILocation(line: 312, column: 2, scope: !7242)
!7258 = !DILocation(line: 312, column: 7, scope: !7242)
!7259 = !DILocation(line: 313, column: 9, scope: !7242)
!7260 = !DILocation(line: 313, column: 16, scope: !7242)
!7261 = !DILocation(line: 313, column: 14, scope: !7242)
!7262 = !DILocation(line: 313, column: 2, scope: !7242)
!7263 = !DILocation(line: 313, column: 7, scope: !7242)
!7264 = !DILocation(line: 314, column: 1, scope: !7242)
!7265 = distinct !DISubprogram(name: "knife_empty_list", scope: !3, file: !3, line: 288, type: !7266, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7266 = !DISubroutineType(types: !7267)
!7267 = !{!1227, !3512}
!7268 = !DILocalVariable(name: "kcd", arg: 1, scope: !7265, file: !3, line: 288, type: !3512)
!7269 = !DILocation(line: 288, column: 53, scope: !7265)
!7270 = !DILocalVariable(name: "lst", scope: !7265, file: !3, line: 290, type: !1227)
!7271 = !DILocation(line: 290, column: 12, scope: !7265)
!7272 = !DILocation(line: 292, column: 27, scope: !7265)
!7273 = !DILocation(line: 292, column: 32, scope: !7265)
!7274 = !DILocation(line: 292, column: 8, scope: !7265)
!7275 = !DILocation(line: 292, column: 6, scope: !7265)
!7276 = !DILocation(line: 293, column: 21, scope: !7265)
!7277 = !DILocation(line: 293, column: 2, scope: !7265)
!7278 = !DILocation(line: 294, column: 9, scope: !7265)
!7279 = !DILocation(line: 294, column: 2, scope: !7265)
!7280 = distinct !DISubprogram(name: "knife_append_list", scope: !3, file: !3, line: 297, type: !7281, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7281 = !DISubroutineType(types: !7282)
!7282 = !{null, !3512, !1227, !18}
!7283 = !DILocalVariable(name: "kcd", arg: 1, scope: !7280, file: !3, line: 297, type: !3512)
!7284 = !DILocation(line: 297, column: 49, scope: !7280)
!7285 = !DILocalVariable(name: "lst", arg: 2, scope: !7280, file: !3, line: 297, type: !1227)
!7286 = !DILocation(line: 297, column: 64, scope: !7280)
!7287 = !DILocalVariable(name: "elem", arg: 3, scope: !7280, file: !3, line: 297, type: !18)
!7288 = !DILocation(line: 297, column: 75, scope: !7280)
!7289 = !DILocalVariable(name: "ref", scope: !7280, file: !3, line: 299, type: !3251)
!7290 = !DILocation(line: 299, column: 7, scope: !7280)
!7291 = !DILocation(line: 301, column: 27, scope: !7280)
!7292 = !DILocation(line: 301, column: 32, scope: !7280)
!7293 = !DILocation(line: 301, column: 8, scope: !7280)
!7294 = !DILocation(line: 301, column: 6, scope: !7280)
!7295 = !DILocation(line: 302, column: 13, scope: !7280)
!7296 = !DILocation(line: 302, column: 2, scope: !7280)
!7297 = !DILocation(line: 302, column: 7, scope: !7280)
!7298 = !DILocation(line: 302, column: 11, scope: !7280)
!7299 = !DILocation(line: 303, column: 14, scope: !7280)
!7300 = !DILocation(line: 303, column: 19, scope: !7280)
!7301 = !DILocation(line: 303, column: 2, scope: !7280)
!7302 = !DILocation(line: 304, column: 1, scope: !7280)
!7303 = distinct !DISubprogram(name: "get_bm_knife_edge", scope: !3, file: !3, line: 402, type: !7304, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7304 = !DISubroutineType(types: !7305)
!7305 = !{!2861, !3512, !2726}
!7306 = !DILocalVariable(name: "kcd", arg: 1, scope: !7303, file: !3, line: 402, type: !3512)
!7307 = !DILocation(line: 402, column: 55, scope: !7303)
!7308 = !DILocalVariable(name: "e", arg: 2, scope: !7303, file: !3, line: 402, type: !2726)
!7309 = !DILocation(line: 402, column: 68, scope: !7303)
!7310 = !DILocalVariable(name: "kfe", scope: !7303, file: !3, line: 404, type: !2861)
!7311 = !DILocation(line: 404, column: 13, scope: !7303)
!7312 = !DILocation(line: 404, column: 36, scope: !7303)
!7313 = !DILocation(line: 404, column: 41, scope: !7303)
!7314 = !DILocation(line: 404, column: 54, scope: !7303)
!7315 = !DILocation(line: 404, column: 19, scope: !7303)
!7316 = !DILocation(line: 405, column: 7, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 405, column: 6)
!7318 = !DILocation(line: 405, column: 6, scope: !7303)
!7319 = !DILocalVariable(name: "bmiter", scope: !7320, file: !3, line: 406, type: !3967)
!7320 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 405, column: 12)
!7321 = !DILocation(line: 406, column: 10, scope: !7320)
!7322 = !DILocalVariable(name: "f", scope: !7320, file: !3, line: 407, type: !2730)
!7323 = !DILocation(line: 407, column: 11, scope: !7320)
!7324 = !DILocation(line: 409, column: 24, scope: !7320)
!7325 = !DILocation(line: 409, column: 9, scope: !7320)
!7326 = !DILocation(line: 409, column: 7, scope: !7320)
!7327 = !DILocation(line: 410, column: 12, scope: !7320)
!7328 = !DILocation(line: 410, column: 3, scope: !7320)
!7329 = !DILocation(line: 410, column: 8, scope: !7320)
!7330 = !DILocation(line: 410, column: 10, scope: !7320)
!7331 = !DILocation(line: 411, column: 31, scope: !7320)
!7332 = !DILocation(line: 411, column: 36, scope: !7320)
!7333 = !DILocation(line: 411, column: 39, scope: !7320)
!7334 = !DILocation(line: 411, column: 13, scope: !7320)
!7335 = !DILocation(line: 411, column: 3, scope: !7320)
!7336 = !DILocation(line: 411, column: 8, scope: !7320)
!7337 = !DILocation(line: 411, column: 11, scope: !7320)
!7338 = !DILocation(line: 412, column: 31, scope: !7320)
!7339 = !DILocation(line: 412, column: 36, scope: !7320)
!7340 = !DILocation(line: 412, column: 39, scope: !7320)
!7341 = !DILocation(line: 412, column: 13, scope: !7320)
!7342 = !DILocation(line: 412, column: 3, scope: !7320)
!7343 = !DILocation(line: 412, column: 8, scope: !7320)
!7344 = !DILocation(line: 412, column: 11, scope: !7320)
!7345 = !DILocation(line: 414, column: 27, scope: !7320)
!7346 = !DILocation(line: 414, column: 32, scope: !7320)
!7347 = !DILocation(line: 414, column: 3, scope: !7320)
!7348 = !DILocation(line: 416, column: 20, scope: !7320)
!7349 = !DILocation(line: 416, column: 25, scope: !7320)
!7350 = !DILocation(line: 416, column: 38, scope: !7320)
!7351 = !DILocation(line: 416, column: 41, scope: !7320)
!7352 = !DILocation(line: 416, column: 3, scope: !7320)
!7353 = !DILocation(line: 418, column: 3, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 418, column: 3)
!7355 = !DILocation(line: 418, column: 3, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 418, column: 3)
!7357 = !DILocation(line: 419, column: 22, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 418, column: 50)
!7359 = !DILocation(line: 419, column: 28, scope: !7358)
!7360 = !DILocation(line: 419, column: 33, scope: !7358)
!7361 = !DILocation(line: 419, column: 40, scope: !7358)
!7362 = !DILocation(line: 419, column: 4, scope: !7358)
!7363 = !DILocation(line: 420, column: 3, scope: !7358)
!7364 = distinct !{!7364, !7353, !7365}
!7365 = !DILocation(line: 420, column: 3, scope: !7354)
!7366 = !DILocation(line: 421, column: 2, scope: !7320)
!7367 = !DILocation(line: 423, column: 9, scope: !7303)
!7368 = !DILocation(line: 423, column: 2, scope: !7303)
!7369 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !7370, file: !7370, line: 89, type: !7371, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7370 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7371 = !DISubroutineType(types: !7372)
!7372 = !{null, !7373}
!7373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!7374 = !DILocalVariable(name: "lb", arg: 1, scope: !7369, file: !7370, line: 89, type: !7373)
!7375 = !DILocation(line: 89, column: 53, scope: !7369)
!7376 = !DILocation(line: 89, column: 71, scope: !7369)
!7377 = !DILocation(line: 89, column: 75, scope: !7369)
!7378 = !DILocation(line: 89, column: 80, scope: !7369)
!7379 = !DILocation(line: 89, column: 59, scope: !7369)
!7380 = !DILocation(line: 89, column: 63, scope: !7369)
!7381 = !DILocation(line: 89, column: 69, scope: !7369)
!7382 = !DILocation(line: 89, column: 93, scope: !7369)
!7383 = distinct !DISubprogram(name: "new_knife_edge", scope: !3, file: !3, line: 324, type: !7384, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7384 = !DISubroutineType(types: !7385)
!7385 = !{!2861, !3512}
!7386 = !DILocalVariable(name: "kcd", arg: 1, scope: !7383, file: !3, line: 324, type: !3512)
!7387 = !DILocation(line: 324, column: 52, scope: !7383)
!7388 = !DILocation(line: 326, column: 2, scope: !7383)
!7389 = !DILocation(line: 326, column: 7, scope: !7383)
!7390 = !DILocation(line: 326, column: 15, scope: !7383)
!7391 = !DILocation(line: 327, column: 28, scope: !7383)
!7392 = !DILocation(line: 327, column: 33, scope: !7383)
!7393 = !DILocation(line: 327, column: 9, scope: !7383)
!7394 = !DILocation(line: 327, column: 2, scope: !7383)
!7395 = distinct !DISubprogram(name: "get_bm_knife_vert", scope: !3, file: !3, line: 377, type: !7396, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7396 = !DISubroutineType(types: !7397)
!7397 = !{!2866, !3512, !2665}
!7398 = !DILocalVariable(name: "kcd", arg: 1, scope: !7395, file: !3, line: 377, type: !3512)
!7399 = !DILocation(line: 377, column: 55, scope: !7395)
!7400 = !DILocalVariable(name: "v", arg: 2, scope: !7395, file: !3, line: 377, type: !2665)
!7401 = !DILocation(line: 377, column: 68, scope: !7395)
!7402 = !DILocalVariable(name: "kfv", scope: !7395, file: !3, line: 379, type: !2866)
!7403 = !DILocation(line: 379, column: 13, scope: !7395)
!7404 = !DILocation(line: 379, column: 36, scope: !7395)
!7405 = !DILocation(line: 379, column: 41, scope: !7395)
!7406 = !DILocation(line: 379, column: 54, scope: !7395)
!7407 = !DILocation(line: 379, column: 19, scope: !7395)
!7408 = !DILocalVariable(name: "cageco", scope: !7395, file: !3, line: 380, type: !997)
!7409 = !DILocation(line: 380, column: 15, scope: !7395)
!7410 = !DILocation(line: 382, column: 7, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 382, column: 6)
!7412 = !DILocation(line: 382, column: 6, scope: !7395)
!7413 = !DILocalVariable(name: "bmiter", scope: !7414, file: !3, line: 383, type: !3967)
!7414 = distinct !DILexicalBlock(scope: !7411, file: !3, line: 382, column: 12)
!7415 = !DILocation(line: 383, column: 10, scope: !7414)
!7416 = !DILocalVariable(name: "f", scope: !7414, file: !3, line: 384, type: !2730)
!7417 = !DILocation(line: 384, column: 11, scope: !7414)
!7418 = !DILocation(line: 386, column: 7, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 386, column: 7)
!7420 = !DILocation(line: 386, column: 28, scope: !7419)
!7421 = !DILocation(line: 386, column: 7, scope: !7414)
!7422 = !DILocation(line: 387, column: 13, scope: !7419)
!7423 = !DILocation(line: 387, column: 18, scope: !7419)
!7424 = !DILocation(line: 387, column: 26, scope: !7419)
!7425 = !DILocation(line: 387, column: 11, scope: !7419)
!7426 = !DILocation(line: 387, column: 4, scope: !7419)
!7427 = !DILocation(line: 389, column: 13, scope: !7419)
!7428 = !DILocation(line: 389, column: 16, scope: !7419)
!7429 = !DILocation(line: 389, column: 11, scope: !7419)
!7430 = !DILocation(line: 390, column: 24, scope: !7414)
!7431 = !DILocation(line: 390, column: 29, scope: !7414)
!7432 = !DILocation(line: 390, column: 32, scope: !7414)
!7433 = !DILocation(line: 390, column: 36, scope: !7414)
!7434 = !DILocation(line: 390, column: 9, scope: !7414)
!7435 = !DILocation(line: 390, column: 7, scope: !7414)
!7436 = !DILocation(line: 391, column: 12, scope: !7414)
!7437 = !DILocation(line: 391, column: 3, scope: !7414)
!7438 = !DILocation(line: 391, column: 8, scope: !7414)
!7439 = !DILocation(line: 391, column: 10, scope: !7414)
!7440 = !DILocation(line: 392, column: 20, scope: !7414)
!7441 = !DILocation(line: 392, column: 25, scope: !7414)
!7442 = !DILocation(line: 392, column: 38, scope: !7414)
!7443 = !DILocation(line: 392, column: 41, scope: !7414)
!7444 = !DILocation(line: 392, column: 3, scope: !7414)
!7445 = !DILocation(line: 393, column: 3, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 393, column: 3)
!7447 = !DILocation(line: 393, column: 3, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 393, column: 3)
!7449 = !DILocation(line: 394, column: 22, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 393, column: 50)
!7451 = !DILocation(line: 394, column: 28, scope: !7450)
!7452 = !DILocation(line: 394, column: 33, scope: !7450)
!7453 = !DILocation(line: 394, column: 40, scope: !7450)
!7454 = !DILocation(line: 394, column: 4, scope: !7450)
!7455 = !DILocation(line: 395, column: 3, scope: !7450)
!7456 = distinct !{!7456, !7445, !7457}
!7457 = !DILocation(line: 395, column: 3, scope: !7446)
!7458 = !DILocation(line: 396, column: 2, scope: !7414)
!7459 = !DILocation(line: 398, column: 9, scope: !7395)
!7460 = !DILocation(line: 398, column: 2, scope: !7395)
!7461 = distinct !DISubprogram(name: "knife_add_to_vert_edges", scope: !3, file: !3, line: 330, type: !7462, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7462 = !DISubroutineType(types: !7463)
!7463 = !{null, !3512, !2861}
!7464 = !DILocalVariable(name: "kcd", arg: 1, scope: !7461, file: !3, line: 330, type: !3512)
!7465 = !DILocation(line: 330, column: 55, scope: !7461)
!7466 = !DILocalVariable(name: "kfe", arg: 2, scope: !7461, file: !3, line: 330, type: !2861)
!7467 = !DILocation(line: 330, column: 71, scope: !7461)
!7468 = !DILocation(line: 332, column: 20, scope: !7461)
!7469 = !DILocation(line: 332, column: 26, scope: !7461)
!7470 = !DILocation(line: 332, column: 31, scope: !7461)
!7471 = !DILocation(line: 332, column: 35, scope: !7461)
!7472 = !DILocation(line: 332, column: 42, scope: !7461)
!7473 = !DILocation(line: 332, column: 2, scope: !7461)
!7474 = !DILocation(line: 333, column: 20, scope: !7461)
!7475 = !DILocation(line: 333, column: 26, scope: !7461)
!7476 = !DILocation(line: 333, column: 31, scope: !7461)
!7477 = !DILocation(line: 333, column: 35, scope: !7461)
!7478 = !DILocation(line: 333, column: 42, scope: !7461)
!7479 = !DILocation(line: 333, column: 2, scope: !7461)
!7480 = !DILocation(line: 334, column: 1, scope: !7461)
!7481 = distinct !DISubprogram(name: "_bm_elem_index_get", scope: !4787, file: !4787, line: 119, type: !7482, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7482 = !DISubroutineType(types: !7483)
!7483 = !{!35, !4824}
!7484 = !DILocalVariable(name: "head", arg: 1, scope: !7481, file: !4787, line: 119, type: !4824)
!7485 = !DILocation(line: 119, column: 51, scope: !7481)
!7486 = !DILocation(line: 121, column: 9, scope: !7481)
!7487 = !DILocation(line: 121, column: 15, scope: !7481)
!7488 = !DILocation(line: 121, column: 2, scope: !7481)
!7489 = distinct !DISubprogram(name: "new_knife_vert", scope: !3, file: !3, line: 362, type: !7490, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7490 = !DISubroutineType(types: !7491)
!7491 = !{!2866, !3512, !997, !997}
!7492 = !DILocalVariable(name: "kcd", arg: 1, scope: !7489, file: !3, line: 362, type: !3512)
!7493 = !DILocation(line: 362, column: 52, scope: !7489)
!7494 = !DILocalVariable(name: "co", arg: 2, scope: !7489, file: !3, line: 362, type: !997)
!7495 = !DILocation(line: 362, column: 69, scope: !7489)
!7496 = !DILocalVariable(name: "cageco", arg: 3, scope: !7489, file: !3, line: 362, type: !997)
!7497 = !DILocation(line: 362, column: 88, scope: !7489)
!7498 = !DILocalVariable(name: "kfv", scope: !7489, file: !3, line: 364, type: !2866)
!7499 = !DILocation(line: 364, column: 13, scope: !7489)
!7500 = !DILocation(line: 364, column: 38, scope: !7489)
!7501 = !DILocation(line: 364, column: 43, scope: !7489)
!7502 = !DILocation(line: 364, column: 19, scope: !7489)
!7503 = !DILocation(line: 366, column: 2, scope: !7489)
!7504 = !DILocation(line: 366, column: 7, scope: !7489)
!7505 = !DILocation(line: 366, column: 15, scope: !7489)
!7506 = !DILocation(line: 368, column: 13, scope: !7489)
!7507 = !DILocation(line: 368, column: 18, scope: !7489)
!7508 = !DILocation(line: 368, column: 22, scope: !7489)
!7509 = !DILocation(line: 368, column: 2, scope: !7489)
!7510 = !DILocation(line: 369, column: 13, scope: !7489)
!7511 = !DILocation(line: 369, column: 18, scope: !7489)
!7512 = !DILocation(line: 369, column: 26, scope: !7489)
!7513 = !DILocation(line: 369, column: 2, scope: !7489)
!7514 = !DILocation(line: 371, column: 19, scope: !7489)
!7515 = !DILocation(line: 371, column: 24, scope: !7489)
!7516 = !DILocation(line: 371, column: 29, scope: !7489)
!7517 = !DILocation(line: 371, column: 37, scope: !7489)
!7518 = !DILocation(line: 371, column: 42, scope: !7489)
!7519 = !DILocation(line: 371, column: 2, scope: !7489)
!7520 = !DILocation(line: 373, column: 9, scope: !7489)
!7521 = !DILocation(line: 373, column: 2, scope: !7489)
!7522 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !5212, file: !5212, line: 338, type: !7218, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7523 = !DILocalVariable(name: "r", arg: 1, scope: !7522, file: !5212, line: 338, type: !392)
!7524 = !DILocation(line: 338, column: 32, scope: !7522)
!7525 = !DILocalVariable(name: "a", arg: 2, scope: !7522, file: !5212, line: 338, type: !997)
!7526 = !DILocation(line: 338, column: 50, scope: !7522)
!7527 = !DILocalVariable(name: "b", arg: 3, scope: !7522, file: !5212, line: 338, type: !997)
!7528 = !DILocation(line: 338, column: 68, scope: !7522)
!7529 = !DILocation(line: 340, column: 9, scope: !7522)
!7530 = !DILocation(line: 340, column: 16, scope: !7522)
!7531 = !DILocation(line: 340, column: 14, scope: !7522)
!7532 = !DILocation(line: 340, column: 2, scope: !7522)
!7533 = !DILocation(line: 340, column: 7, scope: !7522)
!7534 = !DILocation(line: 341, column: 9, scope: !7522)
!7535 = !DILocation(line: 341, column: 16, scope: !7522)
!7536 = !DILocation(line: 341, column: 14, scope: !7522)
!7537 = !DILocation(line: 341, column: 2, scope: !7522)
!7538 = !DILocation(line: 341, column: 7, scope: !7522)
!7539 = !DILocation(line: 342, column: 1, scope: !7522)
!7540 = distinct !DISubprogram(name: "dot_v2v2", scope: !5212, file: !5212, line: 614, type: !7050, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7541 = !DILocalVariable(name: "a", arg: 1, scope: !7540, file: !5212, line: 614, type: !997)
!7542 = !DILocation(line: 614, column: 36, scope: !7540)
!7543 = !DILocalVariable(name: "b", arg: 2, scope: !7540, file: !5212, line: 614, type: !997)
!7544 = !DILocation(line: 614, column: 54, scope: !7540)
!7545 = !DILocation(line: 616, column: 9, scope: !7540)
!7546 = !DILocation(line: 616, column: 16, scope: !7540)
!7547 = !DILocation(line: 616, column: 14, scope: !7540)
!7548 = !DILocation(line: 616, column: 23, scope: !7540)
!7549 = !DILocation(line: 616, column: 30, scope: !7540)
!7550 = !DILocation(line: 616, column: 28, scope: !7540)
!7551 = !DILocation(line: 616, column: 21, scope: !7540)
!7552 = !DILocation(line: 616, column: 2, scope: !7540)
!7553 = distinct !DISubprogram(name: "knife_interp_v3_v3v3", scope: !3, file: !3, line: 258, type: !7554, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7554 = !DISubroutineType(types: !7555)
!7555 = !{null, !5229, !392, !997, !997, !357}
!7556 = !DILocalVariable(name: "kcd", arg: 1, scope: !7553, file: !3, line: 259, type: !5229)
!7557 = !DILocation(line: 259, column: 33, scope: !7553)
!7558 = !DILocalVariable(name: "r_co", arg: 2, scope: !7553, file: !3, line: 260, type: !392)
!7559 = !DILocation(line: 260, column: 15, scope: !7553)
!7560 = !DILocalVariable(name: "v1", arg: 3, scope: !7553, file: !3, line: 260, type: !997)
!7561 = !DILocation(line: 260, column: 36, scope: !7553)
!7562 = !DILocalVariable(name: "v2", arg: 4, scope: !7553, file: !3, line: 260, type: !997)
!7563 = !DILocation(line: 260, column: 55, scope: !7553)
!7564 = !DILocalVariable(name: "lambda_ss", arg: 5, scope: !7553, file: !3, line: 260, type: !357)
!7565 = !DILocation(line: 260, column: 68, scope: !7553)
!7566 = !DILocation(line: 262, column: 6, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 262, column: 6)
!7568 = !DILocation(line: 262, column: 11, scope: !7567)
!7569 = !DILocation(line: 262, column: 6, scope: !7553)
!7570 = !DILocation(line: 263, column: 18, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 262, column: 21)
!7572 = !DILocation(line: 263, column: 24, scope: !7571)
!7573 = !DILocation(line: 263, column: 28, scope: !7571)
!7574 = !DILocation(line: 263, column: 32, scope: !7571)
!7575 = !DILocation(line: 263, column: 3, scope: !7571)
!7576 = !DILocation(line: 264, column: 2, scope: !7571)
!7577 = !DILocalVariable(name: "v1_ss", scope: !7578, file: !3, line: 267, type: !555)
!7578 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 265, column: 7)
!7579 = !DILocation(line: 267, column: 9, scope: !7578)
!7580 = !DILocalVariable(name: "v2_ss", scope: !7578, file: !3, line: 267, type: !555)
!7581 = !DILocation(line: 267, column: 19, scope: !7578)
!7582 = !DILocation(line: 269, column: 24, scope: !7578)
!7583 = !DILocation(line: 269, column: 45, scope: !7578)
!7584 = !DILocation(line: 269, column: 50, scope: !7578)
!7585 = !DILocation(line: 269, column: 59, scope: !7578)
!7586 = !DILocation(line: 269, column: 3, scope: !7578)
!7587 = !DILocation(line: 270, column: 24, scope: !7578)
!7588 = !DILocation(line: 270, column: 45, scope: !7578)
!7589 = !DILocation(line: 270, column: 50, scope: !7578)
!7590 = !DILocation(line: 270, column: 59, scope: !7578)
!7591 = !DILocation(line: 270, column: 3, scope: !7578)
!7592 = !DILocation(line: 272, column: 18, scope: !7578)
!7593 = !DILocation(line: 272, column: 24, scope: !7578)
!7594 = !DILocation(line: 272, column: 31, scope: !7578)
!7595 = !DILocation(line: 272, column: 38, scope: !7578)
!7596 = !DILocation(line: 272, column: 3, scope: !7578)
!7597 = !DILocation(line: 274, column: 35, scope: !7578)
!7598 = !DILocation(line: 274, column: 40, scope: !7578)
!7599 = !DILocation(line: 274, column: 53, scope: !7578)
!7600 = !DILocation(line: 274, column: 3, scope: !7578)
!7601 = !DILocation(line: 276, column: 1, scope: !7553)
!7602 = distinct !DISubprogram(name: "calc_ortho_extent", scope: !3, file: !3, line: 1173, type: !4371, scopeLine: 1174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7603 = !DILocalVariable(name: "kcd", arg: 1, scope: !7602, file: !3, line: 1173, type: !3512)
!7604 = !DILocation(line: 1173, column: 49, scope: !7602)
!7605 = !DILocalVariable(name: "iter", scope: !7602, file: !3, line: 1175, type: !3967)
!7606 = !DILocation(line: 1175, column: 9, scope: !7602)
!7607 = !DILocalVariable(name: "v", scope: !7602, file: !3, line: 1176, type: !2665)
!7608 = !DILocation(line: 1176, column: 10, scope: !7602)
!7609 = !DILocalVariable(name: "bm", scope: !7602, file: !3, line: 1177, type: !2780)
!7610 = !DILocation(line: 1177, column: 9, scope: !7602)
!7611 = !DILocation(line: 1177, column: 14, scope: !7602)
!7612 = !DILocation(line: 1177, column: 19, scope: !7602)
!7613 = !DILocation(line: 1177, column: 23, scope: !7602)
!7614 = !DILocalVariable(name: "max_xyz", scope: !7602, file: !3, line: 1178, type: !357)
!7615 = !DILocation(line: 1178, column: 8, scope: !7602)
!7616 = !DILocalVariable(name: "i", scope: !7602, file: !3, line: 1179, type: !35)
!7617 = !DILocation(line: 1179, column: 6, scope: !7602)
!7618 = !DILocation(line: 1181, column: 2, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 1181, column: 2)
!7620 = !DILocation(line: 1181, column: 2, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 1181, column: 2)
!7622 = !DILocation(line: 1182, column: 10, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 1182, column: 3)
!7624 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 1181, column: 48)
!7625 = !DILocation(line: 1182, column: 8, scope: !7623)
!7626 = !DILocation(line: 1182, column: 15, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 1182, column: 3)
!7628 = !DILocation(line: 1182, column: 17, scope: !7627)
!7629 = !DILocation(line: 1182, column: 3, scope: !7623)
!7630 = !DILocation(line: 1183, column: 21, scope: !7627)
!7631 = !DILocation(line: 1183, column: 36, scope: !7627)
!7632 = !DILocation(line: 1183, column: 39, scope: !7627)
!7633 = !DILocation(line: 1183, column: 42, scope: !7627)
!7634 = !DILocation(line: 1183, column: 30, scope: !7627)
!7635 = !DILocation(line: 1183, column: 14, scope: !7627)
!7636 = !DILocation(line: 1183, column: 12, scope: !7627)
!7637 = !DILocation(line: 1183, column: 4, scope: !7627)
!7638 = !DILocation(line: 1182, column: 23, scope: !7627)
!7639 = !DILocation(line: 1182, column: 3, scope: !7627)
!7640 = distinct !{!7640, !7629, !7641}
!7641 = !DILocation(line: 1183, column: 45, scope: !7623)
!7642 = !DILocation(line: 1184, column: 2, scope: !7624)
!7643 = distinct !{!7643, !7618, !7644}
!7644 = !DILocation(line: 1184, column: 2, scope: !7619)
!7645 = !DILocation(line: 1185, column: 22, scope: !7602)
!7646 = !DILocation(line: 1185, column: 2, scope: !7602)
!7647 = !DILocation(line: 1185, column: 7, scope: !7602)
!7648 = !DILocation(line: 1185, column: 20, scope: !7602)
!7649 = !DILocation(line: 1186, column: 1, scope: !7602)
!7650 = distinct !DISubprogram(name: "clip_to_ortho_planes", scope: !3, file: !3, line: 1243, type: !7651, scopeLine: 1244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7651 = !DISubroutineType(types: !7652)
!7652 = !{null, !392, !392, !357}
!7653 = !DILocalVariable(name: "v1", arg: 1, scope: !7650, file: !3, line: 1243, type: !392)
!7654 = !DILocation(line: 1243, column: 40, scope: !7650)
!7655 = !DILocalVariable(name: "v2", arg: 2, scope: !7650, file: !3, line: 1243, type: !392)
!7656 = !DILocation(line: 1243, column: 53, scope: !7650)
!7657 = !DILocalVariable(name: "d", arg: 3, scope: !7650, file: !3, line: 1243, type: !357)
!7658 = !DILocation(line: 1243, column: 66, scope: !7650)
!7659 = !DILocalVariable(name: "closest", scope: !7650, file: !3, line: 1245, type: !555)
!7660 = !DILocation(line: 1245, column: 8, scope: !7650)
!7661 = !DILocalVariable(name: "origin", scope: !7650, file: !3, line: 1246, type: !2940)
!7662 = !DILocation(line: 1246, column: 14, scope: !7650)
!7663 = !DILocation(line: 1248, column: 21, scope: !7650)
!7664 = !DILocation(line: 1248, column: 30, scope: !7650)
!7665 = !DILocation(line: 1248, column: 38, scope: !7650)
!7666 = !DILocation(line: 1248, column: 42, scope: !7650)
!7667 = !DILocation(line: 1248, column: 2, scope: !7650)
!7668 = !DILocation(line: 1249, column: 22, scope: !7650)
!7669 = !DILocation(line: 1249, column: 26, scope: !7650)
!7670 = !DILocation(line: 1249, column: 35, scope: !7650)
!7671 = !DILocation(line: 1249, column: 2, scope: !7650)
!7672 = !DILocation(line: 1250, column: 22, scope: !7650)
!7673 = !DILocation(line: 1250, column: 26, scope: !7650)
!7674 = !DILocation(line: 1250, column: 35, scope: !7650)
!7675 = !DILocation(line: 1250, column: 2, scope: !7650)
!7676 = !DILocation(line: 1251, column: 1, scope: !7650)
!7677 = distinct !DISubprogram(name: "set_lowest_face_tri", scope: !3, file: !3, line: 434, type: !7678, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7678 = !DISubroutineType(types: !7679)
!7679 = !{null, !3512, !2730, !35}
!7680 = !DILocalVariable(name: "kcd", arg: 1, scope: !7677, file: !3, line: 434, type: !3512)
!7681 = !DILocation(line: 434, column: 51, scope: !7677)
!7682 = !DILocalVariable(name: "f", arg: 2, scope: !7677, file: !3, line: 434, type: !2730)
!7683 = !DILocation(line: 434, column: 64, scope: !7677)
!7684 = !DILocalVariable(name: "index", arg: 3, scope: !7677, file: !3, line: 434, type: !35)
!7685 = !DILocation(line: 434, column: 71, scope: !7677)
!7686 = !DILocalVariable(name: "i", scope: !7677, file: !3, line: 436, type: !35)
!7687 = !DILocation(line: 436, column: 6, scope: !7677)
!7688 = !DILocation(line: 438, column: 23, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 438, column: 6)
!7690 = !DILocation(line: 438, column: 28, scope: !7689)
!7691 = !DILocation(line: 438, column: 40, scope: !7689)
!7692 = !DILocation(line: 438, column: 6, scope: !7689)
!7693 = !DILocation(line: 438, column: 6, scope: !7677)
!7694 = !DILocation(line: 439, column: 3, scope: !7689)
!7695 = !DILocation(line: 443, column: 11, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 443, column: 2)
!7697 = !DILocation(line: 443, column: 17, scope: !7696)
!7698 = !DILocation(line: 443, column: 9, scope: !7696)
!7699 = !DILocation(line: 443, column: 7, scope: !7696)
!7700 = !DILocation(line: 443, column: 22, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 443, column: 2)
!7702 = !DILocation(line: 443, column: 24, scope: !7701)
!7703 = !DILocation(line: 443, column: 2, scope: !7696)
!7704 = !DILocation(line: 444, column: 7, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 444, column: 7)
!7706 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 443, column: 35)
!7707 = !DILocation(line: 444, column: 12, scope: !7705)
!7708 = !DILocation(line: 444, column: 16, scope: !7705)
!7709 = !DILocation(line: 444, column: 25, scope: !7705)
!7710 = !DILocation(line: 444, column: 32, scope: !7705)
!7711 = !DILocation(line: 444, column: 37, scope: !7705)
!7712 = !DILocation(line: 444, column: 34, scope: !7705)
!7713 = !DILocation(line: 444, column: 7, scope: !7706)
!7714 = !DILocation(line: 445, column: 5, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 444, column: 40)
!7716 = !DILocation(line: 446, column: 4, scope: !7715)
!7717 = !DILocation(line: 448, column: 2, scope: !7706)
!7718 = !DILocation(line: 443, column: 31, scope: !7701)
!7719 = !DILocation(line: 443, column: 2, scope: !7701)
!7720 = distinct !{!7720, !7703, !7721}
!7721 = !DILocation(line: 448, column: 2, scope: !7696)
!7722 = !DILocation(line: 449, column: 6, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 449, column: 6)
!7724 = !DILocation(line: 449, column: 8, scope: !7723)
!7725 = !DILocation(line: 449, column: 6, scope: !7677)
!7726 = !DILocation(line: 450, column: 4, scope: !7723)
!7727 = !DILocation(line: 450, column: 3, scope: !7723)
!7728 = !DILocation(line: 452, column: 19, scope: !7677)
!7729 = !DILocation(line: 452, column: 24, scope: !7677)
!7730 = !DILocation(line: 452, column: 36, scope: !7677)
!7731 = !DILocation(line: 452, column: 39, scope: !7677)
!7732 = !DILocation(line: 452, column: 2, scope: !7677)
!7733 = !DILocation(line: 453, column: 1, scope: !7677)
!7734 = distinct !DISubprogram(name: "len_v2", scope: !5212, file: !5212, line: 691, type: !7735, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{!357, !997}
!7737 = !DILocalVariable(name: "v", arg: 1, scope: !7734, file: !5212, line: 691, type: !997)
!7738 = !DILocation(line: 691, column: 34, scope: !7734)
!7739 = !DILocation(line: 693, column: 15, scope: !7734)
!7740 = !DILocation(line: 693, column: 22, scope: !7734)
!7741 = !DILocation(line: 693, column: 20, scope: !7734)
!7742 = !DILocation(line: 693, column: 29, scope: !7734)
!7743 = !DILocation(line: 693, column: 36, scope: !7734)
!7744 = !DILocation(line: 693, column: 34, scope: !7734)
!7745 = !DILocation(line: 693, column: 27, scope: !7734)
!7746 = !DILocation(line: 693, column: 9, scope: !7734)
!7747 = !DILocation(line: 693, column: 2, scope: !7734)
!7748 = distinct !DISubprogram(name: "max_ff", scope: !7203, file: !7203, line: 206, type: !7204, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7749 = !DILocalVariable(name: "a", arg: 1, scope: !7748, file: !7203, line: 206, type: !357)
!7750 = !DILocation(line: 206, column: 28, scope: !7748)
!7751 = !DILocalVariable(name: "b", arg: 2, scope: !7748, file: !7203, line: 206, type: !357)
!7752 = !DILocation(line: 206, column: 37, scope: !7748)
!7753 = !DILocation(line: 208, column: 10, scope: !7748)
!7754 = !DILocation(line: 208, column: 14, scope: !7748)
!7755 = !DILocation(line: 208, column: 12, scope: !7748)
!7756 = !DILocation(line: 208, column: 9, scope: !7748)
!7757 = !DILocation(line: 208, column: 19, scope: !7748)
!7758 = !DILocation(line: 208, column: 23, scope: !7748)
!7759 = !DILocation(line: 208, column: 2, scope: !7748)
!7760 = distinct !DISubprogram(name: "point_is_visible", scope: !3, file: !3, line: 1190, type: !7761, scopeLine: 1191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7761 = !DISubroutineType(types: !7762)
!7762 = !{!1053, !3512, !997, !997, !7763}
!7763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5987, size: 64)
!7764 = !DILocalVariable(name: "kcd", arg: 1, scope: !7760, file: !3, line: 1190, type: !3512)
!7765 = !DILocation(line: 1190, column: 48, scope: !7760)
!7766 = !DILocalVariable(name: "p", arg: 2, scope: !7760, file: !3, line: 1190, type: !997)
!7767 = !DILocation(line: 1190, column: 65, scope: !7760)
!7768 = !DILocalVariable(name: "s", arg: 3, scope: !7760, file: !3, line: 1190, type: !997)
!7769 = !DILocation(line: 1190, column: 83, scope: !7760)
!7770 = !DILocalVariable(name: "mats", arg: 4, scope: !7760, file: !3, line: 1190, type: !7763)
!7771 = !DILocation(line: 1190, column: 98, scope: !7760)
!7772 = !DILocalVariable(name: "f_hit", scope: !7760, file: !3, line: 1192, type: !2730)
!7773 = !DILocation(line: 1192, column: 10, scope: !7760)
!7774 = !DILocation(line: 1195, column: 6, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 1195, column: 6)
!7776 = !DILocation(line: 1195, column: 11, scope: !7775)
!7777 = !DILocation(line: 1195, column: 14, scope: !7775)
!7778 = !DILocation(line: 1195, column: 20, scope: !7775)
!7779 = !DILocation(line: 1195, column: 26, scope: !7775)
!7780 = !DILocation(line: 1195, column: 42, scope: !7775)
!7781 = !DILocation(line: 1196, column: 30, scope: !7775)
!7782 = !DILocation(line: 1196, column: 35, scope: !7775)
!7783 = !DILocation(line: 1196, column: 38, scope: !7775)
!7784 = !DILocation(line: 1196, column: 44, scope: !7775)
!7785 = !DILocation(line: 1196, column: 6, scope: !7775)
!7786 = !DILocation(line: 1195, column: 6, scope: !7760)
!7787 = !DILocation(line: 1198, column: 3, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 1197, column: 2)
!7789 = !DILocation(line: 1202, column: 7, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 1202, column: 6)
!7791 = !DILocation(line: 1202, column: 12, scope: !7790)
!7792 = !DILocation(line: 1202, column: 6, scope: !7760)
!7793 = !DILocalVariable(name: "dist", scope: !7794, file: !3, line: 1203, type: !357)
!7794 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 1202, column: 25)
!7795 = !DILocation(line: 1203, column: 9, scope: !7794)
!7796 = !DILocalVariable(name: "view", scope: !7794, file: !3, line: 1204, type: !555)
!7797 = !DILocation(line: 1204, column: 9, scope: !7794)
!7798 = !DILocalVariable(name: "p_ofs", scope: !7794, file: !3, line: 1204, type: !555)
!7799 = !DILocation(line: 1204, column: 18, scope: !7794)
!7800 = !DILocation(line: 1207, column: 23, scope: !7794)
!7801 = !DILocation(line: 1207, column: 29, scope: !7794)
!7802 = !DILocation(line: 1207, column: 35, scope: !7794)
!7803 = !DILocation(line: 1207, column: 41, scope: !7794)
!7804 = !DILocation(line: 1207, column: 3, scope: !7794)
!7805 = !DILocation(line: 1209, column: 13, scope: !7794)
!7806 = !DILocation(line: 1209, column: 18, scope: !7794)
!7807 = !DILocation(line: 1209, column: 22, scope: !7794)
!7808 = !DILocation(line: 1209, column: 28, scope: !7794)
!7809 = !DILocation(line: 1209, column: 3, scope: !7794)
!7810 = !DILocation(line: 1212, column: 13, scope: !7794)
!7811 = !DILocation(line: 1212, column: 19, scope: !7794)
!7812 = !DILocation(line: 1212, column: 3, scope: !7794)
!7813 = !DILocation(line: 1213, column: 23, scope: !7794)
!7814 = !DILocation(line: 1213, column: 10, scope: !7794)
!7815 = !DILocation(line: 1213, column: 8, scope: !7794)
!7816 = !DILocation(line: 1214, column: 18, scope: !7794)
!7817 = !DILocation(line: 1214, column: 25, scope: !7794)
!7818 = !DILocation(line: 1214, column: 28, scope: !7794)
!7819 = !DILocation(line: 1214, column: 3, scope: !7794)
!7820 = !DILocation(line: 1217, column: 7, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 1217, column: 7)
!7822 = !DILocation(line: 1217, column: 12, scope: !7821)
!7823 = !DILocation(line: 1217, column: 21, scope: !7821)
!7824 = !DILocation(line: 1217, column: 25, scope: !7821)
!7825 = !DILocation(line: 1217, column: 30, scope: !7821)
!7826 = !DILocation(line: 1217, column: 33, scope: !7821)
!7827 = !DILocation(line: 1217, column: 39, scope: !7821)
!7828 = !DILocation(line: 1217, column: 45, scope: !7821)
!7829 = !DILocation(line: 1217, column: 7, scope: !7794)
!7830 = !DILocation(line: 1218, column: 11, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 1217, column: 61)
!7832 = !DILocation(line: 1218, column: 16, scope: !7831)
!7833 = !DILocation(line: 1218, column: 19, scope: !7831)
!7834 = !DILocation(line: 1218, column: 24, scope: !7831)
!7835 = !DILocation(line: 1218, column: 28, scope: !7831)
!7836 = !DILocation(line: 1218, column: 9, scope: !7831)
!7837 = !DILocation(line: 1219, column: 3, scope: !7831)
!7838 = !DILocation(line: 1221, column: 7, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 1221, column: 7)
!7840 = !DILocation(line: 1221, column: 12, scope: !7839)
!7841 = !DILocation(line: 1221, column: 15, scope: !7839)
!7842 = !DILocation(line: 1221, column: 21, scope: !7839)
!7843 = !DILocation(line: 1221, column: 27, scope: !7839)
!7844 = !DILocation(line: 1221, column: 7, scope: !7794)
!7845 = !DILocalVariable(name: "view_clip", scope: !7846, file: !3, line: 1222, type: !7847)
!7846 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1221, column: 44)
!7847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 192, elements: !7848)
!7848 = !{!375, !522}
!7849 = !DILocation(line: 1222, column: 10, scope: !7846)
!7850 = !DILocation(line: 1224, column: 15, scope: !7846)
!7851 = !DILocation(line: 1224, column: 29, scope: !7846)
!7852 = !DILocation(line: 1224, column: 4, scope: !7846)
!7853 = !DILocation(line: 1225, column: 19, scope: !7846)
!7854 = !DILocation(line: 1225, column: 33, scope: !7846)
!7855 = !DILocation(line: 1225, column: 40, scope: !7846)
!7856 = !DILocation(line: 1225, column: 46, scope: !7846)
!7857 = !DILocation(line: 1225, column: 4, scope: !7846)
!7858 = !DILocation(line: 1227, column: 32, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7846, file: !3, line: 1227, column: 8)
!7860 = !DILocation(line: 1227, column: 46, scope: !7859)
!7861 = !DILocation(line: 1227, column: 60, scope: !7859)
!7862 = !DILocation(line: 1227, column: 65, scope: !7859)
!7863 = !DILocation(line: 1227, column: 68, scope: !7859)
!7864 = !DILocation(line: 1227, column: 74, scope: !7859)
!7865 = !DILocation(line: 1227, column: 8, scope: !7859)
!7866 = !DILocation(line: 1227, column: 8, scope: !7846)
!7867 = !DILocation(line: 1228, column: 21, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7859, file: !3, line: 1227, column: 90)
!7869 = !DILocation(line: 1228, column: 28, scope: !7868)
!7870 = !DILocation(line: 1228, column: 12, scope: !7868)
!7871 = !DILocation(line: 1228, column: 10, scope: !7868)
!7872 = !DILocation(line: 1229, column: 4, scope: !7868)
!7873 = !DILocation(line: 1230, column: 3, scope: !7846)
!7874 = !DILocation(line: 1233, column: 30, scope: !7794)
!7875 = !DILocation(line: 1233, column: 35, scope: !7794)
!7876 = !DILocation(line: 1233, column: 42, scope: !7794)
!7877 = !DILocation(line: 1233, column: 49, scope: !7794)
!7878 = !DILocation(line: 1233, column: 11, scope: !7794)
!7879 = !DILocation(line: 1233, column: 9, scope: !7794)
!7880 = !DILocation(line: 1234, column: 7, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 1234, column: 7)
!7882 = !DILocation(line: 1234, column: 7, scope: !7794)
!7883 = !DILocation(line: 1235, column: 4, scope: !7881)
!7884 = !DILocation(line: 1236, column: 2, scope: !7794)
!7885 = !DILocation(line: 1238, column: 2, scope: !7760)
!7886 = !DILocation(line: 1239, column: 1, scope: !7760)
!7887 = distinct !DISubprogram(name: "set_linehit_depth", scope: !3, file: !3, line: 1253, type: !7888, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7888 = !DISubroutineType(types: !7889)
!7889 = !{null, !3512, !2850}
!7890 = !DILocalVariable(name: "kcd", arg: 1, scope: !7887, file: !3, line: 1253, type: !3512)
!7891 = !DILocation(line: 1253, column: 49, scope: !7887)
!7892 = !DILocalVariable(name: "lh", arg: 2, scope: !7887, file: !3, line: 1253, type: !2850)
!7893 = !DILocation(line: 1253, column: 68, scope: !7887)
!7894 = !DILocation(line: 1255, column: 26, scope: !7887)
!7895 = !DILocation(line: 1255, column: 31, scope: !7887)
!7896 = !DILocation(line: 1255, column: 34, scope: !7887)
!7897 = !DILocation(line: 1255, column: 40, scope: !7887)
!7898 = !DILocation(line: 1255, column: 51, scope: !7887)
!7899 = !DILocation(line: 1255, column: 55, scope: !7887)
!7900 = !DILocation(line: 1255, column: 10, scope: !7887)
!7901 = !DILocation(line: 1255, column: 2, scope: !7887)
!7902 = !DILocation(line: 1255, column: 6, scope: !7887)
!7903 = !DILocation(line: 1255, column: 8, scope: !7887)
!7904 = !DILocation(line: 1256, column: 1, scope: !7887)
!7905 = distinct !DISubprogram(name: "len_v2v2", scope: !5212, file: !5212, line: 696, type: !7050, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7906 = !DILocalVariable(name: "v1", arg: 1, scope: !7905, file: !5212, line: 696, type: !997)
!7907 = !DILocation(line: 696, column: 36, scope: !7905)
!7908 = !DILocalVariable(name: "v2", arg: 2, scope: !7905, file: !5212, line: 696, type: !997)
!7909 = !DILocation(line: 696, column: 55, scope: !7905)
!7910 = !DILocalVariable(name: "x", scope: !7905, file: !5212, line: 698, type: !357)
!7911 = !DILocation(line: 698, column: 8, scope: !7905)
!7912 = !DILocalVariable(name: "y", scope: !7905, file: !5212, line: 698, type: !357)
!7913 = !DILocation(line: 698, column: 11, scope: !7905)
!7914 = !DILocation(line: 700, column: 6, scope: !7905)
!7915 = !DILocation(line: 700, column: 14, scope: !7905)
!7916 = !DILocation(line: 700, column: 12, scope: !7905)
!7917 = !DILocation(line: 700, column: 4, scope: !7905)
!7918 = !DILocation(line: 701, column: 6, scope: !7905)
!7919 = !DILocation(line: 701, column: 14, scope: !7905)
!7920 = !DILocation(line: 701, column: 12, scope: !7905)
!7921 = !DILocation(line: 701, column: 4, scope: !7905)
!7922 = !DILocation(line: 702, column: 15, scope: !7905)
!7923 = !DILocation(line: 702, column: 19, scope: !7905)
!7924 = !DILocation(line: 702, column: 17, scope: !7905)
!7925 = !DILocation(line: 702, column: 23, scope: !7905)
!7926 = !DILocation(line: 702, column: 27, scope: !7905)
!7927 = !DILocation(line: 702, column: 25, scope: !7905)
!7928 = !DILocation(line: 702, column: 21, scope: !7905)
!7929 = !DILocation(line: 702, column: 9, scope: !7905)
!7930 = !DILocation(line: 702, column: 2, scope: !7905)
!7931 = distinct !DISubprogram(name: "knife_ray_intersect_face", scope: !3, file: !3, line: 1104, type: !7932, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!7932 = !DISubroutineType(types: !7933)
!7933 = !{!1053, !3512, !997, !997, !997, !2730, !806, !392, !392}
!7934 = !DILocalVariable(name: "kcd", arg: 1, scope: !7931, file: !3, line: 1105, type: !3512)
!7935 = !DILocation(line: 1105, column: 27, scope: !7931)
!7936 = !DILocalVariable(name: "s", arg: 2, scope: !7931, file: !3, line: 1106, type: !997)
!7937 = !DILocation(line: 1106, column: 21, scope: !7931)
!7938 = !DILocalVariable(name: "v1", arg: 3, scope: !7931, file: !3, line: 1106, type: !997)
!7939 = !DILocation(line: 1106, column: 39, scope: !7931)
!7940 = !DILocalVariable(name: "v2", arg: 4, scope: !7931, file: !3, line: 1106, type: !997)
!7941 = !DILocation(line: 1106, column: 58, scope: !7931)
!7942 = !DILocalVariable(name: "f", arg: 5, scope: !7931, file: !3, line: 1107, type: !2730)
!7943 = !DILocation(line: 1107, column: 17, scope: !7931)
!7944 = !DILocalVariable(name: "face_tol_sq", arg: 6, scope: !7931, file: !3, line: 1107, type: !806)
!7945 = !DILocation(line: 1107, column: 32, scope: !7931)
!7946 = !DILocalVariable(name: "hit_co", arg: 7, scope: !7931, file: !3, line: 1108, type: !392)
!7947 = !DILocation(line: 1108, column: 15, scope: !7931)
!7948 = !DILocalVariable(name: "hit_cageco", arg: 8, scope: !7931, file: !3, line: 1108, type: !392)
!7949 = !DILocation(line: 1108, column: 32, scope: !7931)
!7950 = !DILocalVariable(name: "tottri", scope: !7931, file: !3, line: 1110, type: !35)
!7951 = !DILocation(line: 1110, column: 6, scope: !7931)
!7952 = !DILocalVariable(name: "tri_i", scope: !7931, file: !3, line: 1110, type: !35)
!7953 = !DILocation(line: 1110, column: 14, scope: !7931)
!7954 = !DILocalVariable(name: "raydir", scope: !7931, file: !3, line: 1111, type: !555)
!7955 = !DILocation(line: 1111, column: 8, scope: !7931)
!7956 = !DILocalVariable(name: "tri_norm", scope: !7931, file: !3, line: 1112, type: !555)
!7957 = !DILocation(line: 1112, column: 8, scope: !7931)
!7958 = !DILocalVariable(name: "tri_plane", scope: !7931, file: !3, line: 1112, type: !629)
!7959 = !DILocation(line: 1112, column: 21, scope: !7931)
!7960 = !DILocalVariable(name: "se1", scope: !7931, file: !3, line: 1113, type: !373)
!7961 = !DILocation(line: 1113, column: 8, scope: !7931)
!7962 = !DILocalVariable(name: "se2", scope: !7931, file: !3, line: 1113, type: !373)
!7963 = !DILocation(line: 1113, column: 16, scope: !7931)
!7964 = !DILocalVariable(name: "d", scope: !7931, file: !3, line: 1114, type: !357)
!7965 = !DILocation(line: 1114, column: 8, scope: !7931)
!7966 = !DILocalVariable(name: "lambda", scope: !7931, file: !3, line: 1114, type: !357)
!7967 = !DILocation(line: 1114, column: 11, scope: !7931)
!7968 = !DILocalVariable(name: "tri", scope: !7931, file: !3, line: 1115, type: !3237)
!7969 = !DILocation(line: 1115, column: 11, scope: !7931)
!7970 = !DILocalVariable(name: "lst", scope: !7931, file: !3, line: 1116, type: !1227)
!7971 = !DILocation(line: 1116, column: 12, scope: !7931)
!7972 = !DILocalVariable(name: "ref", scope: !7931, file: !3, line: 1117, type: !3251)
!7973 = !DILocation(line: 1117, column: 7, scope: !7931)
!7974 = !DILocalVariable(name: "kfe", scope: !7931, file: !3, line: 1118, type: !2861)
!7975 = !DILocation(line: 1118, column: 13, scope: !7931)
!7976 = !DILocation(line: 1120, column: 14, scope: !7931)
!7977 = !DILocation(line: 1120, column: 22, scope: !7931)
!7978 = !DILocation(line: 1120, column: 26, scope: !7931)
!7979 = !DILocation(line: 1120, column: 2, scope: !7931)
!7980 = !DILocation(line: 1121, column: 15, scope: !7931)
!7981 = !DILocation(line: 1121, column: 2, scope: !7931)
!7982 = !DILocation(line: 1122, column: 30, scope: !7931)
!7983 = !DILocation(line: 1122, column: 35, scope: !7931)
!7984 = !DILocation(line: 1122, column: 10, scope: !7931)
!7985 = !DILocation(line: 1122, column: 8, scope: !7931)
!7986 = !DILocation(line: 1123, column: 11, scope: !7931)
!7987 = !DILocation(line: 1123, column: 16, scope: !7931)
!7988 = !DILocation(line: 1123, column: 20, scope: !7931)
!7989 = !DILocation(line: 1123, column: 9, scope: !7931)
!7990 = !DILocation(line: 1126, column: 2, scope: !7931)
!7991 = !DILocation(line: 1126, column: 9, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 1126, column: 2)
!7993 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1126, column: 2)
!7994 = !DILocation(line: 1126, column: 17, scope: !7992)
!7995 = !DILocation(line: 1126, column: 15, scope: !7992)
!7996 = !DILocation(line: 1126, column: 2, scope: !7993)
!7997 = !DILocalVariable(name: "lv1", scope: !7998, file: !3, line: 1127, type: !997)
!7998 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 1126, column: 34)
!7999 = !DILocation(line: 1127, column: 16, scope: !7998)
!8000 = !DILocalVariable(name: "lv2", scope: !7998, file: !3, line: 1127, type: !997)
!8001 = !DILocation(line: 1127, column: 22, scope: !7998)
!8002 = !DILocalVariable(name: "lv3", scope: !7998, file: !3, line: 1127, type: !997)
!8003 = !DILocation(line: 1127, column: 28, scope: !7998)
!8004 = !DILocation(line: 1129, column: 9, scope: !7998)
!8005 = !DILocation(line: 1129, column: 14, scope: !7998)
!8006 = !DILocation(line: 1129, column: 18, scope: !7998)
!8007 = !DILocation(line: 1129, column: 27, scope: !7998)
!8008 = !DILocation(line: 1129, column: 7, scope: !7998)
!8009 = !DILocation(line: 1130, column: 7, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 1130, column: 7)
!8011 = !DILocation(line: 1130, column: 15, scope: !8010)
!8012 = !DILocation(line: 1130, column: 20, scope: !8010)
!8013 = !DILocation(line: 1130, column: 17, scope: !8010)
!8014 = !DILocation(line: 1130, column: 7, scope: !7998)
!8015 = !DILocation(line: 1131, column: 4, scope: !8010)
!8016 = !DILocation(line: 1132, column: 9, scope: !7998)
!8017 = !DILocation(line: 1132, column: 14, scope: !7998)
!8018 = !DILocation(line: 1132, column: 22, scope: !7998)
!8019 = !DILocation(line: 1132, column: 7, scope: !7998)
!8020 = !DILocation(line: 1133, column: 9, scope: !7998)
!8021 = !DILocation(line: 1133, column: 14, scope: !7998)
!8022 = !DILocation(line: 1133, column: 22, scope: !7998)
!8023 = !DILocation(line: 1133, column: 7, scope: !7998)
!8024 = !DILocation(line: 1134, column: 9, scope: !7998)
!8025 = !DILocation(line: 1134, column: 14, scope: !7998)
!8026 = !DILocation(line: 1134, column: 22, scope: !7998)
!8027 = !DILocation(line: 1134, column: 7, scope: !7998)
!8028 = !DILocation(line: 1139, column: 32, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 1139, column: 7)
!8030 = !DILocation(line: 1139, column: 36, scope: !8029)
!8031 = !DILocation(line: 1139, column: 44, scope: !8029)
!8032 = !DILocation(line: 1139, column: 49, scope: !8029)
!8033 = !DILocation(line: 1139, column: 54, scope: !8029)
!8034 = !DILocation(line: 1139, column: 7, scope: !8029)
!8035 = !DILocation(line: 1139, column: 7, scope: !7998)
!8036 = !DILocation(line: 1141, column: 18, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 1139, column: 90)
!8038 = !DILocation(line: 1141, column: 28, scope: !8037)
!8039 = !DILocation(line: 1141, column: 33, scope: !8037)
!8040 = !DILocation(line: 1141, column: 38, scope: !8037)
!8041 = !DILocation(line: 1141, column: 4, scope: !8037)
!8042 = !DILocation(line: 1142, column: 31, scope: !8037)
!8043 = !DILocation(line: 1142, column: 42, scope: !8037)
!8044 = !DILocation(line: 1142, column: 47, scope: !8037)
!8045 = !DILocation(line: 1142, column: 4, scope: !8037)
!8046 = !DILocation(line: 1143, column: 34, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 1143, column: 8)
!8048 = !DILocation(line: 1143, column: 38, scope: !8047)
!8049 = !DILocation(line: 1143, column: 9, scope: !8047)
!8050 = !DILocation(line: 1143, column: 49, scope: !8047)
!8051 = !DILocation(line: 1143, column: 66, scope: !8047)
!8052 = !DILocation(line: 1144, column: 34, scope: !8047)
!8053 = !DILocation(line: 1144, column: 38, scope: !8047)
!8054 = !DILocation(line: 1144, column: 9, scope: !8047)
!8055 = !DILocation(line: 1144, column: 49, scope: !8047)
!8056 = !DILocation(line: 1143, column: 8, scope: !8037)
!8057 = !DILocation(line: 1146, column: 5, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 1145, column: 4)
!8059 = !DILocation(line: 1148, column: 15, scope: !8037)
!8060 = !DILocation(line: 1148, column: 27, scope: !8037)
!8061 = !DILocation(line: 1148, column: 4, scope: !8037)
!8062 = !DILocation(line: 1149, column: 17, scope: !8037)
!8063 = !DILocation(line: 1149, column: 29, scope: !8037)
!8064 = !DILocation(line: 1149, column: 37, scope: !8037)
!8065 = !DILocation(line: 1149, column: 4, scope: !8037)
!8066 = !DILocation(line: 1151, column: 32, scope: !8037)
!8067 = !DILocation(line: 1151, column: 37, scope: !8037)
!8068 = !DILocation(line: 1151, column: 10, scope: !8037)
!8069 = !DILocation(line: 1151, column: 8, scope: !8037)
!8070 = !DILocation(line: 1152, column: 15, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 1152, column: 4)
!8072 = !DILocation(line: 1152, column: 20, scope: !8071)
!8073 = !DILocation(line: 1152, column: 13, scope: !8071)
!8074 = !DILocation(line: 1152, column: 9, scope: !8071)
!8075 = !DILocation(line: 1152, column: 27, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 1152, column: 4)
!8077 = !DILocation(line: 1152, column: 4, scope: !8071)
!8078 = !DILocation(line: 1153, column: 11, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 1152, column: 49)
!8080 = !DILocation(line: 1153, column: 16, scope: !8079)
!8081 = !DILocation(line: 1153, column: 9, scope: !8079)
!8082 = !DILocation(line: 1154, column: 22, scope: !8079)
!8083 = !DILocation(line: 1154, column: 27, scope: !8079)
!8084 = !DILocation(line: 1154, column: 32, scope: !8079)
!8085 = !DILocation(line: 1154, column: 36, scope: !8079)
!8086 = !DILocation(line: 1154, column: 44, scope: !8079)
!8087 = !DILocation(line: 1154, column: 5, scope: !8079)
!8088 = !DILocation(line: 1155, column: 22, scope: !8079)
!8089 = !DILocation(line: 1155, column: 27, scope: !8079)
!8090 = !DILocation(line: 1155, column: 32, scope: !8079)
!8091 = !DILocation(line: 1155, column: 36, scope: !8079)
!8092 = !DILocation(line: 1155, column: 44, scope: !8079)
!8093 = !DILocation(line: 1155, column: 5, scope: !8079)
!8094 = !DILocation(line: 1156, column: 41, scope: !8079)
!8095 = !DILocation(line: 1156, column: 44, scope: !8079)
!8096 = !DILocation(line: 1156, column: 49, scope: !8079)
!8097 = !DILocation(line: 1156, column: 9, scope: !8079)
!8098 = !DILocation(line: 1156, column: 7, scope: !8079)
!8099 = !DILocation(line: 1157, column: 9, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 1157, column: 9)
!8101 = !DILocation(line: 1157, column: 13, scope: !8100)
!8102 = !DILocation(line: 1157, column: 11, scope: !8100)
!8103 = !DILocation(line: 1157, column: 9, scope: !8079)
!8104 = !DILocation(line: 1158, column: 6, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 1157, column: 26)
!8106 = !DILocation(line: 1160, column: 4, scope: !8079)
!8107 = !DILocation(line: 1152, column: 38, scope: !8076)
!8108 = !DILocation(line: 1152, column: 43, scope: !8076)
!8109 = !DILocation(line: 1152, column: 36, scope: !8076)
!8110 = !DILocation(line: 1152, column: 4, scope: !8076)
!8111 = distinct !{!8111, !8077, !8112}
!8112 = !DILocation(line: 1160, column: 4, scope: !8071)
!8113 = !DILocation(line: 1163, column: 12, scope: !8037)
!8114 = !DILocation(line: 1163, column: 20, scope: !8037)
!8115 = !DILocation(line: 1164, column: 12, scope: !8037)
!8116 = !DILocation(line: 1164, column: 20, scope: !8037)
!8117 = !DILocation(line: 1164, column: 23, scope: !8037)
!8118 = !DILocation(line: 1164, column: 27, scope: !8037)
!8119 = !DILocation(line: 1164, column: 35, scope: !8037)
!8120 = !DILocation(line: 1164, column: 38, scope: !8037)
!8121 = !DILocation(line: 1164, column: 42, scope: !8037)
!8122 = !DILocation(line: 1164, column: 50, scope: !8037)
!8123 = !DILocation(line: 1164, column: 53, scope: !8037)
!8124 = !DILocation(line: 1165, column: 12, scope: !8037)
!8125 = !DILocation(line: 1165, column: 17, scope: !8037)
!8126 = !DILocation(line: 1165, column: 22, scope: !8037)
!8127 = !DILocation(line: 1162, column: 4, scope: !8037)
!8128 = !DILocation(line: 1166, column: 4, scope: !8037)
!8129 = !DILocation(line: 1168, column: 2, scope: !7998)
!8130 = !DILocation(line: 1126, column: 30, scope: !7992)
!8131 = !DILocation(line: 1126, column: 2, scope: !7992)
!8132 = distinct !{!8132, !7996, !8133}
!8133 = !DILocation(line: 1168, column: 2, scope: !7993)
!8134 = !DILocation(line: 1169, column: 2, scope: !7931)
!8135 = !DILocation(line: 1170, column: 1, scope: !7931)
!8136 = distinct !DISubprogram(name: "sub_v3_v3", scope: !5212, file: !5212, line: 350, type: !5213, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8137 = !DILocalVariable(name: "r", arg: 1, scope: !8136, file: !5212, line: 350, type: !392)
!8138 = !DILocation(line: 350, column: 30, scope: !8136)
!8139 = !DILocalVariable(name: "a", arg: 2, scope: !8136, file: !5212, line: 350, type: !997)
!8140 = !DILocation(line: 350, column: 48, scope: !8136)
!8141 = !DILocation(line: 352, column: 10, scope: !8136)
!8142 = !DILocation(line: 352, column: 2, scope: !8136)
!8143 = !DILocation(line: 352, column: 7, scope: !8136)
!8144 = !DILocation(line: 353, column: 10, scope: !8136)
!8145 = !DILocation(line: 353, column: 2, scope: !8136)
!8146 = !DILocation(line: 353, column: 7, scope: !8136)
!8147 = !DILocation(line: 354, column: 10, scope: !8136)
!8148 = !DILocation(line: 354, column: 2, scope: !8136)
!8149 = !DILocation(line: 354, column: 7, scope: !8136)
!8150 = !DILocation(line: 355, column: 1, scope: !8136)
!8151 = distinct !DISubprogram(name: "normalize_v3", scope: !5212, file: !5212, line: 830, type: !8152, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8152 = !DISubroutineType(types: !8153)
!8153 = !{!357, !392}
!8154 = !DILocalVariable(name: "n", arg: 1, scope: !8151, file: !5212, line: 830, type: !392)
!8155 = !DILocation(line: 830, column: 34, scope: !8151)
!8156 = !DILocation(line: 832, column: 25, scope: !8151)
!8157 = !DILocation(line: 832, column: 28, scope: !8151)
!8158 = !DILocation(line: 832, column: 9, scope: !8151)
!8159 = !DILocation(line: 832, column: 2, scope: !8151)
!8160 = distinct !DISubprogram(name: "madd_v3_v3v3fl", scope: !5212, file: !5212, line: 527, type: !8161, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8161 = !DISubroutineType(types: !8162)
!8162 = !{null, !392, !997, !997, !357}
!8163 = !DILocalVariable(name: "r", arg: 1, scope: !8160, file: !5212, line: 527, type: !392)
!8164 = !DILocation(line: 527, column: 35, scope: !8160)
!8165 = !DILocalVariable(name: "a", arg: 2, scope: !8160, file: !5212, line: 527, type: !997)
!8166 = !DILocation(line: 527, column: 53, scope: !8160)
!8167 = !DILocalVariable(name: "b", arg: 3, scope: !8160, file: !5212, line: 527, type: !997)
!8168 = !DILocation(line: 527, column: 71, scope: !8160)
!8169 = !DILocalVariable(name: "f", arg: 4, scope: !8160, file: !5212, line: 527, type: !357)
!8170 = !DILocation(line: 527, column: 83, scope: !8160)
!8171 = !DILocation(line: 529, column: 9, scope: !8160)
!8172 = !DILocation(line: 529, column: 16, scope: !8160)
!8173 = !DILocation(line: 529, column: 23, scope: !8160)
!8174 = !DILocation(line: 529, column: 21, scope: !8160)
!8175 = !DILocation(line: 529, column: 14, scope: !8160)
!8176 = !DILocation(line: 529, column: 2, scope: !8160)
!8177 = !DILocation(line: 529, column: 7, scope: !8160)
!8178 = !DILocation(line: 530, column: 9, scope: !8160)
!8179 = !DILocation(line: 530, column: 16, scope: !8160)
!8180 = !DILocation(line: 530, column: 23, scope: !8160)
!8181 = !DILocation(line: 530, column: 21, scope: !8160)
!8182 = !DILocation(line: 530, column: 14, scope: !8160)
!8183 = !DILocation(line: 530, column: 2, scope: !8160)
!8184 = !DILocation(line: 530, column: 7, scope: !8160)
!8185 = !DILocation(line: 531, column: 9, scope: !8160)
!8186 = !DILocation(line: 531, column: 16, scope: !8160)
!8187 = !DILocation(line: 531, column: 23, scope: !8160)
!8188 = !DILocation(line: 531, column: 21, scope: !8160)
!8189 = !DILocation(line: 531, column: 14, scope: !8160)
!8190 = !DILocation(line: 531, column: 2, scope: !8160)
!8191 = !DILocation(line: 531, column: 7, scope: !8160)
!8192 = !DILocation(line: 532, column: 1, scope: !8160)
!8193 = distinct !DISubprogram(name: "len_v3v3", scope: !5212, file: !5212, line: 759, type: !7050, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8194 = !DILocalVariable(name: "a", arg: 1, scope: !8193, file: !5212, line: 759, type: !997)
!8195 = !DILocation(line: 759, column: 36, scope: !8193)
!8196 = !DILocalVariable(name: "b", arg: 2, scope: !8193, file: !5212, line: 759, type: !997)
!8197 = !DILocation(line: 759, column: 54, scope: !8193)
!8198 = !DILocalVariable(name: "d", scope: !8193, file: !5212, line: 761, type: !555)
!8199 = !DILocation(line: 761, column: 8, scope: !8193)
!8200 = !DILocation(line: 763, column: 14, scope: !8193)
!8201 = !DILocation(line: 763, column: 17, scope: !8193)
!8202 = !DILocation(line: 763, column: 20, scope: !8193)
!8203 = !DILocation(line: 763, column: 2, scope: !8193)
!8204 = !DILocation(line: 764, column: 16, scope: !8193)
!8205 = !DILocation(line: 764, column: 9, scope: !8193)
!8206 = !DILocation(line: 764, column: 2, scope: !8193)
!8207 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !5212, file: !5212, line: 788, type: !8208, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8208 = !DISubroutineType(types: !8209)
!8209 = !{!357, !392, !997}
!8210 = !DILocalVariable(name: "r", arg: 1, scope: !8207, file: !5212, line: 788, type: !392)
!8211 = !DILocation(line: 788, column: 37, scope: !8207)
!8212 = !DILocalVariable(name: "a", arg: 2, scope: !8207, file: !5212, line: 788, type: !997)
!8213 = !DILocation(line: 788, column: 55, scope: !8207)
!8214 = !DILocalVariable(name: "d", scope: !8207, file: !5212, line: 790, type: !357)
!8215 = !DILocation(line: 790, column: 8, scope: !8207)
!8216 = !DILocation(line: 790, column: 21, scope: !8207)
!8217 = !DILocation(line: 790, column: 24, scope: !8207)
!8218 = !DILocation(line: 790, column: 12, scope: !8207)
!8219 = !DILocation(line: 794, column: 6, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8207, file: !5212, line: 794, column: 6)
!8221 = !DILocation(line: 794, column: 8, scope: !8220)
!8222 = !DILocation(line: 794, column: 6, scope: !8207)
!8223 = !DILocation(line: 795, column: 13, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8220, file: !5212, line: 794, column: 20)
!8225 = !DILocation(line: 795, column: 7, scope: !8224)
!8226 = !DILocation(line: 795, column: 5, scope: !8224)
!8227 = !DILocation(line: 796, column: 15, scope: !8224)
!8228 = !DILocation(line: 796, column: 18, scope: !8224)
!8229 = !DILocation(line: 796, column: 28, scope: !8224)
!8230 = !DILocation(line: 796, column: 26, scope: !8224)
!8231 = !DILocation(line: 796, column: 3, scope: !8224)
!8232 = !DILocation(line: 797, column: 2, scope: !8224)
!8233 = !DILocation(line: 799, column: 11, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8220, file: !5212, line: 798, column: 7)
!8235 = !DILocation(line: 799, column: 3, scope: !8234)
!8236 = !DILocation(line: 800, column: 5, scope: !8234)
!8237 = !DILocation(line: 803, column: 9, scope: !8207)
!8238 = !DILocation(line: 803, column: 2, scope: !8207)
!8239 = distinct !DISubprogram(name: "dot_v3v3", scope: !5212, file: !5212, line: 619, type: !7050, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8240 = !DILocalVariable(name: "a", arg: 1, scope: !8239, file: !5212, line: 619, type: !997)
!8241 = !DILocation(line: 619, column: 36, scope: !8239)
!8242 = !DILocalVariable(name: "b", arg: 2, scope: !8239, file: !5212, line: 619, type: !997)
!8243 = !DILocation(line: 619, column: 54, scope: !8239)
!8244 = !DILocation(line: 621, column: 9, scope: !8239)
!8245 = !DILocation(line: 621, column: 16, scope: !8239)
!8246 = !DILocation(line: 621, column: 14, scope: !8239)
!8247 = !DILocation(line: 621, column: 23, scope: !8239)
!8248 = !DILocation(line: 621, column: 30, scope: !8239)
!8249 = !DILocation(line: 621, column: 28, scope: !8239)
!8250 = !DILocation(line: 621, column: 21, scope: !8239)
!8251 = !DILocation(line: 621, column: 37, scope: !8239)
!8252 = !DILocation(line: 621, column: 44, scope: !8239)
!8253 = !DILocation(line: 621, column: 42, scope: !8239)
!8254 = !DILocation(line: 621, column: 35, scope: !8239)
!8255 = !DILocation(line: 621, column: 2, scope: !8239)
!8256 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !5212, file: !5212, line: 399, type: !8257, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8257 = !DISubroutineType(types: !8258)
!8258 = !{null, !392, !997, !357}
!8259 = !DILocalVariable(name: "r", arg: 1, scope: !8256, file: !5212, line: 399, type: !392)
!8260 = !DILocation(line: 399, column: 32, scope: !8256)
!8261 = !DILocalVariable(name: "a", arg: 2, scope: !8256, file: !5212, line: 399, type: !997)
!8262 = !DILocation(line: 399, column: 50, scope: !8256)
!8263 = !DILocalVariable(name: "f", arg: 3, scope: !8256, file: !5212, line: 399, type: !357)
!8264 = !DILocation(line: 399, column: 62, scope: !8256)
!8265 = !DILocation(line: 401, column: 9, scope: !8256)
!8266 = !DILocation(line: 401, column: 16, scope: !8256)
!8267 = !DILocation(line: 401, column: 14, scope: !8256)
!8268 = !DILocation(line: 401, column: 2, scope: !8256)
!8269 = !DILocation(line: 401, column: 7, scope: !8256)
!8270 = !DILocation(line: 402, column: 9, scope: !8256)
!8271 = !DILocation(line: 402, column: 16, scope: !8256)
!8272 = !DILocation(line: 402, column: 14, scope: !8256)
!8273 = !DILocation(line: 402, column: 2, scope: !8256)
!8274 = !DILocation(line: 402, column: 7, scope: !8256)
!8275 = !DILocation(line: 403, column: 9, scope: !8256)
!8276 = !DILocation(line: 403, column: 16, scope: !8256)
!8277 = !DILocation(line: 403, column: 14, scope: !8256)
!8278 = !DILocation(line: 403, column: 2, scope: !8256)
!8279 = !DILocation(line: 403, column: 7, scope: !8256)
!8280 = !DILocation(line: 404, column: 1, scope: !8256)
!8281 = distinct !DISubprogram(name: "len_v3", scope: !5212, file: !5212, line: 714, type: !7735, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8282 = !DILocalVariable(name: "a", arg: 1, scope: !8281, file: !5212, line: 714, type: !997)
!8283 = !DILocation(line: 714, column: 34, scope: !8281)
!8284 = !DILocation(line: 716, column: 24, scope: !8281)
!8285 = !DILocation(line: 716, column: 27, scope: !8281)
!8286 = !DILocation(line: 716, column: 15, scope: !8281)
!8287 = !DILocation(line: 716, column: 9, scope: !8281)
!8288 = !DILocation(line: 716, column: 2, scope: !8281)
!8289 = distinct !DISubprogram(name: "dot_m4_v3_row_z", scope: !5212, file: !5212, line: 496, type: !8290, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8290 = !DISubroutineType(types: !8291)
!8291 = !{!357, !1059, !997}
!8292 = !DILocalVariable(name: "M", arg: 1, scope: !8289, file: !5212, line: 496, type: !1059)
!8293 = !DILocation(line: 496, column: 37, scope: !8289)
!8294 = !DILocalVariable(name: "a", arg: 2, scope: !8289, file: !5212, line: 496, type: !997)
!8295 = !DILocation(line: 496, column: 58, scope: !8289)
!8296 = !DILocation(line: 498, column: 9, scope: !8289)
!8297 = !DILocation(line: 498, column: 19, scope: !8289)
!8298 = !DILocation(line: 498, column: 17, scope: !8289)
!8299 = !DILocation(line: 498, column: 26, scope: !8289)
!8300 = !DILocation(line: 498, column: 36, scope: !8289)
!8301 = !DILocation(line: 498, column: 34, scope: !8289)
!8302 = !DILocation(line: 498, column: 24, scope: !8289)
!8303 = !DILocation(line: 498, column: 43, scope: !8289)
!8304 = !DILocation(line: 498, column: 53, scope: !8289)
!8305 = !DILocation(line: 498, column: 51, scope: !8289)
!8306 = !DILocation(line: 498, column: 41, scope: !8289)
!8307 = !DILocation(line: 498, column: 2, scope: !8289)
!8308 = distinct !DISubprogram(name: "get_lowest_face_tri", scope: !3, file: !3, line: 456, type: !8309, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8309 = !DISubroutineType(types: !8310)
!8310 = !{!35, !3512, !2730}
!8311 = !DILocalVariable(name: "kcd", arg: 1, scope: !8308, file: !3, line: 456, type: !3512)
!8312 = !DILocation(line: 456, column: 50, scope: !8308)
!8313 = !DILocalVariable(name: "f", arg: 2, scope: !8308, file: !3, line: 456, type: !2730)
!8314 = !DILocation(line: 456, column: 63, scope: !8308)
!8315 = !DILocalVariable(name: "ans", scope: !8308, file: !3, line: 458, type: !35)
!8316 = !DILocation(line: 458, column: 6, scope: !8308)
!8317 = !DILocation(line: 460, column: 8, scope: !8308)
!8318 = !DILocation(line: 460, column: 6, scope: !8308)
!8319 = !DILocation(line: 462, column: 9, scope: !8308)
!8320 = !DILocation(line: 462, column: 13, scope: !8308)
!8321 = !DILocation(line: 462, column: 2, scope: !8308)
!8322 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !5212, file: !5212, line: 507, type: !8257, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8323 = !DILocalVariable(name: "r", arg: 1, scope: !8322, file: !5212, line: 507, type: !392)
!8324 = !DILocation(line: 507, column: 33, scope: !8322)
!8325 = !DILocalVariable(name: "a", arg: 2, scope: !8322, file: !5212, line: 507, type: !997)
!8326 = !DILocation(line: 507, column: 51, scope: !8322)
!8327 = !DILocalVariable(name: "f", arg: 3, scope: !8322, file: !5212, line: 507, type: !357)
!8328 = !DILocation(line: 507, column: 63, scope: !8322)
!8329 = !DILocation(line: 509, column: 10, scope: !8322)
!8330 = !DILocation(line: 509, column: 17, scope: !8322)
!8331 = !DILocation(line: 509, column: 15, scope: !8322)
!8332 = !DILocation(line: 509, column: 2, scope: !8322)
!8333 = !DILocation(line: 509, column: 7, scope: !8322)
!8334 = !DILocation(line: 510, column: 10, scope: !8322)
!8335 = !DILocation(line: 510, column: 17, scope: !8322)
!8336 = !DILocation(line: 510, column: 15, scope: !8322)
!8337 = !DILocation(line: 510, column: 2, scope: !8322)
!8338 = !DILocation(line: 510, column: 7, scope: !8322)
!8339 = !DILocation(line: 511, column: 10, scope: !8322)
!8340 = !DILocation(line: 511, column: 17, scope: !8322)
!8341 = !DILocation(line: 511, column: 15, scope: !8322)
!8342 = !DILocation(line: 511, column: 2, scope: !8322)
!8343 = !DILocation(line: 511, column: 7, scope: !8322)
!8344 = !DILocation(line: 512, column: 1, scope: !8322)
!8345 = distinct !DISubprogram(name: "knifetool_draw", scope: !3, file: !3, line: 943, type: !8346, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8346 = !DISubroutineType(types: !8347)
!8347 = !{null, !8348, !338, !18}
!8348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8349, size: 64)
!8349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3488)
!8350 = !DILocalVariable(name: "C", arg: 1, scope: !8345, file: !3, line: 943, type: !8348)
!8351 = !DILocation(line: 943, column: 44, scope: !8345)
!8352 = !DILocalVariable(name: "UNUSED_ar", arg: 2, scope: !8345, file: !3, line: 943, type: !338)
!8353 = !DILocation(line: 943, column: 56, scope: !8345)
!8354 = !DILocalVariable(name: "arg", arg: 3, scope: !8345, file: !3, line: 943, type: !18)
!8355 = !DILocation(line: 943, column: 74, scope: !8345)
!8356 = !DILocalVariable(name: "v3d", scope: !8345, file: !3, line: 945, type: !8357)
!8357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8358, size: 64)
!8358 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !2490, line: 221, baseType: !2489)
!8359 = !DILocation(line: 945, column: 10, scope: !8345)
!8360 = !DILocation(line: 945, column: 30, scope: !8345)
!8361 = !DILocation(line: 945, column: 16, scope: !8345)
!8362 = !DILocalVariable(name: "kcd", scope: !8345, file: !3, line: 946, type: !5229)
!8363 = !DILocation(line: 946, column: 26, scope: !8345)
!8364 = !DILocation(line: 946, column: 32, scope: !8345)
!8365 = !DILocation(line: 948, column: 6, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 948, column: 6)
!8367 = !DILocation(line: 948, column: 11, scope: !8366)
!8368 = !DILocation(line: 948, column: 6, scope: !8345)
!8369 = !DILocation(line: 948, column: 17, scope: !8366)
!8370 = !DILocation(line: 950, column: 2, scope: !8345)
!8371 = !DILocation(line: 952, column: 2, scope: !8345)
!8372 = !DILocation(line: 953, column: 2, scope: !8345)
!8373 = !DILocation(line: 955, column: 6, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 955, column: 6)
!8375 = !DILocation(line: 955, column: 11, scope: !8374)
!8376 = !DILocation(line: 955, column: 16, scope: !8374)
!8377 = !DILocation(line: 955, column: 6, scope: !8345)
!8378 = !DILocation(line: 956, column: 7, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 956, column: 7)
!8380 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 955, column: 34)
!8381 = !DILocation(line: 956, column: 12, scope: !8379)
!8382 = !DILocation(line: 956, column: 27, scope: !8379)
!8383 = !DILocation(line: 956, column: 7, scope: !8380)
!8384 = !DILocation(line: 957, column: 34, scope: !8379)
!8385 = !DILocation(line: 957, column: 4, scope: !8379)
!8386 = !DILocation(line: 959, column: 15, scope: !8380)
!8387 = !DILocation(line: 959, column: 20, scope: !8380)
!8388 = !DILocation(line: 959, column: 27, scope: !8380)
!8389 = !DILocation(line: 959, column: 3, scope: !8380)
!8390 = !DILocation(line: 961, column: 3, scope: !8380)
!8391 = !DILocation(line: 963, column: 3, scope: !8380)
!8392 = !DILocation(line: 964, column: 15, scope: !8380)
!8393 = !DILocation(line: 964, column: 20, scope: !8380)
!8394 = !DILocation(line: 964, column: 25, scope: !8380)
!8395 = !DILocation(line: 964, column: 3, scope: !8380)
!8396 = !DILocation(line: 965, column: 15, scope: !8380)
!8397 = !DILocation(line: 965, column: 20, scope: !8380)
!8398 = !DILocation(line: 965, column: 25, scope: !8380)
!8399 = !DILocation(line: 965, column: 3, scope: !8380)
!8400 = !DILocation(line: 966, column: 3, scope: !8380)
!8401 = !DILocation(line: 968, column: 3, scope: !8380)
!8402 = !DILocation(line: 969, column: 2, scope: !8380)
!8403 = !DILocation(line: 971, column: 6, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 971, column: 6)
!8405 = !DILocation(line: 971, column: 11, scope: !8404)
!8406 = !DILocation(line: 971, column: 16, scope: !8404)
!8407 = !DILocation(line: 971, column: 6, scope: !8345)
!8408 = !DILocation(line: 972, column: 15, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 971, column: 22)
!8410 = !DILocation(line: 972, column: 20, scope: !8409)
!8411 = !DILocation(line: 972, column: 27, scope: !8409)
!8412 = !DILocation(line: 972, column: 3, scope: !8409)
!8413 = !DILocation(line: 973, column: 3, scope: !8409)
!8414 = !DILocation(line: 975, column: 3, scope: !8409)
!8415 = !DILocation(line: 976, column: 15, scope: !8409)
!8416 = !DILocation(line: 976, column: 20, scope: !8409)
!8417 = !DILocation(line: 976, column: 25, scope: !8409)
!8418 = !DILocation(line: 976, column: 3, scope: !8409)
!8419 = !DILocation(line: 977, column: 3, scope: !8409)
!8420 = !DILocation(line: 978, column: 2, scope: !8409)
!8421 = !DILocation(line: 980, column: 6, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 980, column: 6)
!8423 = !DILocation(line: 980, column: 11, scope: !8422)
!8424 = !DILocation(line: 980, column: 16, scope: !8422)
!8425 = !DILocation(line: 980, column: 6, scope: !8345)
!8426 = !DILocation(line: 981, column: 15, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 980, column: 24)
!8428 = !DILocation(line: 981, column: 20, scope: !8427)
!8429 = !DILocation(line: 981, column: 27, scope: !8427)
!8430 = !DILocation(line: 981, column: 3, scope: !8427)
!8431 = !DILocation(line: 982, column: 3, scope: !8427)
!8432 = !DILocation(line: 984, column: 3, scope: !8427)
!8433 = !DILocation(line: 985, column: 15, scope: !8427)
!8434 = !DILocation(line: 985, column: 20, scope: !8427)
!8435 = !DILocation(line: 985, column: 25, scope: !8427)
!8436 = !DILocation(line: 985, column: 3, scope: !8427)
!8437 = !DILocation(line: 986, column: 3, scope: !8427)
!8438 = !DILocation(line: 987, column: 2, scope: !8427)
!8439 = !DILocation(line: 989, column: 6, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 989, column: 6)
!8441 = !DILocation(line: 989, column: 11, scope: !8440)
!8442 = !DILocation(line: 989, column: 16, scope: !8440)
!8443 = !DILocation(line: 989, column: 6, scope: !8345)
!8444 = !DILocation(line: 990, column: 15, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 989, column: 22)
!8446 = !DILocation(line: 990, column: 20, scope: !8445)
!8447 = !DILocation(line: 990, column: 27, scope: !8445)
!8448 = !DILocation(line: 990, column: 3, scope: !8445)
!8449 = !DILocation(line: 991, column: 3, scope: !8445)
!8450 = !DILocation(line: 993, column: 3, scope: !8445)
!8451 = !DILocation(line: 994, column: 15, scope: !8445)
!8452 = !DILocation(line: 994, column: 20, scope: !8445)
!8453 = !DILocation(line: 994, column: 25, scope: !8445)
!8454 = !DILocation(line: 994, column: 31, scope: !8445)
!8455 = !DILocation(line: 994, column: 35, scope: !8445)
!8456 = !DILocation(line: 994, column: 3, scope: !8445)
!8457 = !DILocation(line: 995, column: 15, scope: !8445)
!8458 = !DILocation(line: 995, column: 20, scope: !8445)
!8459 = !DILocation(line: 995, column: 25, scope: !8445)
!8460 = !DILocation(line: 995, column: 31, scope: !8445)
!8461 = !DILocation(line: 995, column: 35, scope: !8445)
!8462 = !DILocation(line: 995, column: 3, scope: !8445)
!8463 = !DILocation(line: 996, column: 3, scope: !8445)
!8464 = !DILocation(line: 998, column: 3, scope: !8445)
!8465 = !DILocation(line: 999, column: 2, scope: !8445)
!8466 = !DILocation(line: 1000, column: 11, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 1000, column: 11)
!8468 = !DILocation(line: 1000, column: 16, scope: !8467)
!8469 = !DILocation(line: 1000, column: 21, scope: !8467)
!8470 = !DILocation(line: 1000, column: 11, scope: !8440)
!8471 = !DILocation(line: 1001, column: 15, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 1000, column: 27)
!8473 = !DILocation(line: 1001, column: 20, scope: !8472)
!8474 = !DILocation(line: 1001, column: 27, scope: !8472)
!8475 = !DILocation(line: 1001, column: 3, scope: !8472)
!8476 = !DILocation(line: 1002, column: 3, scope: !8472)
!8477 = !DILocation(line: 1004, column: 3, scope: !8472)
!8478 = !DILocation(line: 1005, column: 15, scope: !8472)
!8479 = !DILocation(line: 1005, column: 20, scope: !8472)
!8480 = !DILocation(line: 1005, column: 25, scope: !8472)
!8481 = !DILocation(line: 1005, column: 3, scope: !8472)
!8482 = !DILocation(line: 1006, column: 3, scope: !8472)
!8483 = !DILocation(line: 1007, column: 2, scope: !8472)
!8484 = !DILocation(line: 1009, column: 6, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 1009, column: 6)
!8486 = !DILocation(line: 1009, column: 11, scope: !8485)
!8487 = !DILocation(line: 1009, column: 16, scope: !8485)
!8488 = !DILocation(line: 1009, column: 6, scope: !8345)
!8489 = !DILocation(line: 1010, column: 15, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 1009, column: 24)
!8491 = !DILocation(line: 1010, column: 20, scope: !8490)
!8492 = !DILocation(line: 1010, column: 27, scope: !8490)
!8493 = !DILocation(line: 1010, column: 3, scope: !8490)
!8494 = !DILocation(line: 1011, column: 3, scope: !8490)
!8495 = !DILocation(line: 1013, column: 3, scope: !8490)
!8496 = !DILocation(line: 1014, column: 15, scope: !8490)
!8497 = !DILocation(line: 1014, column: 20, scope: !8490)
!8498 = !DILocation(line: 1014, column: 25, scope: !8490)
!8499 = !DILocation(line: 1014, column: 3, scope: !8490)
!8500 = !DILocation(line: 1015, column: 3, scope: !8490)
!8501 = !DILocation(line: 1016, column: 2, scope: !8490)
!8502 = !DILocation(line: 1018, column: 6, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 1018, column: 6)
!8504 = !DILocation(line: 1018, column: 11, scope: !8503)
!8505 = !DILocation(line: 1018, column: 22, scope: !8503)
!8506 = !DILocation(line: 1018, column: 6, scope: !8345)
!8507 = !DILocalVariable(name: "lh", scope: !8508, file: !3, line: 1019, type: !2850)
!8508 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 1018, column: 27)
!8509 = !DILocation(line: 1019, column: 17, scope: !8508)
!8510 = !DILocalVariable(name: "i", scope: !8508, file: !3, line: 1020, type: !35)
!8511 = !DILocation(line: 1020, column: 7, scope: !8508)
!8512 = !DILocation(line: 1022, column: 3, scope: !8508)
!8513 = !DILocation(line: 1023, column: 3, scope: !8508)
!8514 = !DILocation(line: 1026, column: 15, scope: !8508)
!8515 = !DILocation(line: 1026, column: 20, scope: !8508)
!8516 = !DILocation(line: 1026, column: 27, scope: !8508)
!8517 = !DILocation(line: 1026, column: 3, scope: !8508)
!8518 = !DILocation(line: 1027, column: 3, scope: !8508)
!8519 = !DILocation(line: 1028, column: 3, scope: !8508)
!8520 = !DILocation(line: 1029, column: 8, scope: !8508)
!8521 = !DILocation(line: 1029, column: 13, scope: !8508)
!8522 = !DILocation(line: 1029, column: 6, scope: !8508)
!8523 = !DILocation(line: 1030, column: 10, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8508, file: !3, line: 1030, column: 3)
!8525 = !DILocation(line: 1030, column: 8, scope: !8524)
!8526 = !DILocation(line: 1030, column: 15, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 1030, column: 3)
!8528 = !DILocation(line: 1030, column: 19, scope: !8527)
!8529 = !DILocation(line: 1030, column: 24, scope: !8527)
!8530 = !DILocation(line: 1030, column: 17, scope: !8527)
!8531 = !DILocation(line: 1030, column: 3, scope: !8524)
!8532 = !DILocation(line: 1031, column: 8, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 1031, column: 8)
!8534 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 1030, column: 47)
!8535 = !DILocation(line: 1031, column: 12, scope: !8533)
!8536 = !DILocation(line: 1031, column: 8, scope: !8534)
!8537 = !DILocation(line: 1032, column: 17, scope: !8533)
!8538 = !DILocation(line: 1032, column: 21, scope: !8533)
!8539 = !DILocation(line: 1032, column: 5, scope: !8533)
!8540 = !DILocation(line: 1033, column: 3, scope: !8534)
!8541 = !DILocation(line: 1030, column: 37, scope: !8527)
!8542 = !DILocation(line: 1030, column: 43, scope: !8527)
!8543 = !DILocation(line: 1030, column: 3, scope: !8527)
!8544 = distinct !{!8544, !8531, !8545}
!8545 = !DILocation(line: 1033, column: 3, scope: !8524)
!8546 = !DILocation(line: 1034, column: 3, scope: !8508)
!8547 = !DILocation(line: 1037, column: 15, scope: !8508)
!8548 = !DILocation(line: 1037, column: 20, scope: !8508)
!8549 = !DILocation(line: 1037, column: 27, scope: !8508)
!8550 = !DILocation(line: 1037, column: 3, scope: !8508)
!8551 = !DILocation(line: 1038, column: 3, scope: !8508)
!8552 = !DILocation(line: 1039, column: 3, scope: !8508)
!8553 = !DILocation(line: 1040, column: 8, scope: !8508)
!8554 = !DILocation(line: 1040, column: 13, scope: !8508)
!8555 = !DILocation(line: 1040, column: 6, scope: !8508)
!8556 = !DILocation(line: 1041, column: 10, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8508, file: !3, line: 1041, column: 3)
!8558 = !DILocation(line: 1041, column: 8, scope: !8557)
!8559 = !DILocation(line: 1041, column: 15, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 1041, column: 3)
!8561 = !DILocation(line: 1041, column: 19, scope: !8560)
!8562 = !DILocation(line: 1041, column: 24, scope: !8560)
!8563 = !DILocation(line: 1041, column: 17, scope: !8560)
!8564 = !DILocation(line: 1041, column: 3, scope: !8557)
!8565 = !DILocation(line: 1042, column: 9, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8567, file: !3, line: 1042, column: 8)
!8567 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 1041, column: 47)
!8568 = !DILocation(line: 1042, column: 13, scope: !8566)
!8569 = !DILocation(line: 1042, column: 8, scope: !8567)
!8570 = !DILocation(line: 1043, column: 17, scope: !8566)
!8571 = !DILocation(line: 1043, column: 21, scope: !8566)
!8572 = !DILocation(line: 1043, column: 5, scope: !8566)
!8573 = !DILocation(line: 1044, column: 3, scope: !8567)
!8574 = !DILocation(line: 1041, column: 37, scope: !8560)
!8575 = !DILocation(line: 1041, column: 43, scope: !8560)
!8576 = !DILocation(line: 1041, column: 3, scope: !8560)
!8577 = distinct !{!8577, !8564, !8578}
!8578 = !DILocation(line: 1044, column: 3, scope: !8557)
!8579 = !DILocation(line: 1045, column: 3, scope: !8508)
!8580 = !DILocation(line: 1046, column: 3, scope: !8508)
!8581 = !DILocation(line: 1047, column: 2, scope: !8508)
!8582 = !DILocation(line: 1049, column: 6, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 1049, column: 6)
!8584 = !DILocation(line: 1049, column: 11, scope: !8583)
!8585 = !DILocation(line: 1049, column: 20, scope: !8583)
!8586 = !DILocation(line: 1049, column: 6, scope: !8345)
!8587 = !DILocalVariable(name: "iter", scope: !8588, file: !3, line: 1050, type: !3977)
!8588 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 1049, column: 25)
!8589 = !DILocation(line: 1050, column: 20, scope: !8588)
!8590 = !DILocalVariable(name: "kfe", scope: !8588, file: !3, line: 1051, type: !2861)
!8591 = !DILocation(line: 1051, column: 14, scope: !8588)
!8592 = !DILocation(line: 1053, column: 3, scope: !8588)
!8593 = !DILocation(line: 1054, column: 3, scope: !8588)
!8594 = !DILocation(line: 1056, column: 23, scope: !8588)
!8595 = !DILocation(line: 1056, column: 28, scope: !8588)
!8596 = !DILocation(line: 1056, column: 3, scope: !8588)
!8597 = !DILocation(line: 1057, column: 14, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8588, file: !3, line: 1057, column: 3)
!8599 = !DILocation(line: 1057, column: 12, scope: !8598)
!8600 = !DILocation(line: 1057, column: 8, scope: !8598)
!8601 = !DILocation(line: 1057, column: 43, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8598, file: !3, line: 1057, column: 3)
!8603 = !DILocation(line: 1057, column: 3, scope: !8598)
!8604 = !DILocation(line: 1058, column: 9, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 1058, column: 8)
!8606 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 1057, column: 83)
!8607 = !DILocation(line: 1058, column: 14, scope: !8605)
!8608 = !DILocation(line: 1058, column: 8, scope: !8606)
!8609 = !DILocation(line: 1059, column: 5, scope: !8605)
!8610 = !DILocation(line: 1061, column: 16, scope: !8606)
!8611 = !DILocation(line: 1061, column: 21, scope: !8606)
!8612 = !DILocation(line: 1061, column: 28, scope: !8606)
!8613 = !DILocation(line: 1061, column: 4, scope: !8606)
!8614 = !DILocation(line: 1063, column: 16, scope: !8606)
!8615 = !DILocation(line: 1063, column: 21, scope: !8606)
!8616 = !DILocation(line: 1063, column: 25, scope: !8606)
!8617 = !DILocation(line: 1063, column: 4, scope: !8606)
!8618 = !DILocation(line: 1064, column: 16, scope: !8606)
!8619 = !DILocation(line: 1064, column: 21, scope: !8606)
!8620 = !DILocation(line: 1064, column: 25, scope: !8606)
!8621 = !DILocation(line: 1064, column: 4, scope: !8606)
!8622 = !DILocation(line: 1065, column: 3, scope: !8606)
!8623 = !DILocation(line: 1057, column: 54, scope: !8602)
!8624 = !DILocation(line: 1057, column: 52, scope: !8602)
!8625 = !DILocation(line: 1057, column: 3, scope: !8602)
!8626 = distinct !{!8626, !8603, !8627}
!8627 = !DILocation(line: 1065, column: 3, scope: !8598)
!8628 = !DILocation(line: 1067, column: 3, scope: !8588)
!8629 = !DILocation(line: 1068, column: 3, scope: !8588)
!8630 = !DILocation(line: 1069, column: 2, scope: !8588)
!8631 = !DILocation(line: 1071, column: 6, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 1071, column: 6)
!8633 = !DILocation(line: 1071, column: 11, scope: !8632)
!8634 = !DILocation(line: 1071, column: 20, scope: !8632)
!8635 = !DILocation(line: 1071, column: 6, scope: !8345)
!8636 = !DILocalVariable(name: "iter", scope: !8637, file: !3, line: 1072, type: !3977)
!8637 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 1071, column: 25)
!8638 = !DILocation(line: 1072, column: 20, scope: !8637)
!8639 = !DILocalVariable(name: "kfv", scope: !8637, file: !3, line: 1073, type: !2866)
!8640 = !DILocation(line: 1073, column: 14, scope: !8637)
!8641 = !DILocation(line: 1075, column: 3, scope: !8637)
!8642 = !DILocation(line: 1077, column: 3, scope: !8637)
!8643 = !DILocation(line: 1078, column: 23, scope: !8637)
!8644 = !DILocation(line: 1078, column: 28, scope: !8637)
!8645 = !DILocation(line: 1078, column: 3, scope: !8637)
!8646 = !DILocation(line: 1079, column: 14, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 1079, column: 3)
!8648 = !DILocation(line: 1079, column: 12, scope: !8647)
!8649 = !DILocation(line: 1079, column: 8, scope: !8647)
!8650 = !DILocation(line: 1079, column: 43, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 1079, column: 3)
!8652 = !DILocation(line: 1079, column: 3, scope: !8647)
!8653 = !DILocation(line: 1080, column: 9, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8655, file: !3, line: 1080, column: 8)
!8655 = distinct !DILexicalBlock(scope: !8651, file: !3, line: 1079, column: 83)
!8656 = !DILocation(line: 1080, column: 14, scope: !8654)
!8657 = !DILocation(line: 1080, column: 8, scope: !8655)
!8658 = !DILocation(line: 1081, column: 5, scope: !8654)
!8659 = !DILocation(line: 1083, column: 16, scope: !8655)
!8660 = !DILocation(line: 1083, column: 21, scope: !8655)
!8661 = !DILocation(line: 1083, column: 28, scope: !8655)
!8662 = !DILocation(line: 1083, column: 4, scope: !8655)
!8663 = !DILocation(line: 1085, column: 16, scope: !8655)
!8664 = !DILocation(line: 1085, column: 21, scope: !8655)
!8665 = !DILocation(line: 1085, column: 4, scope: !8655)
!8666 = !DILocation(line: 1086, column: 3, scope: !8655)
!8667 = !DILocation(line: 1079, column: 54, scope: !8651)
!8668 = !DILocation(line: 1079, column: 52, scope: !8651)
!8669 = !DILocation(line: 1079, column: 3, scope: !8651)
!8670 = distinct !{!8670, !8652, !8671}
!8671 = !DILocation(line: 1086, column: 3, scope: !8647)
!8672 = !DILocation(line: 1088, column: 3, scope: !8637)
!8673 = !DILocation(line: 1089, column: 2, scope: !8637)
!8674 = !DILocation(line: 1091, column: 2, scope: !8345)
!8675 = !DILocation(line: 1093, column: 6, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 1093, column: 6)
!8677 = !DILocation(line: 1093, column: 11, scope: !8676)
!8678 = !DILocation(line: 1093, column: 6, scope: !8345)
!8679 = !DILocation(line: 1093, column: 17, scope: !8676)
!8680 = !DILocation(line: 1094, column: 1, scope: !8345)
!8681 = distinct !DISubprogram(name: "knife_init_colors", scope: !3, file: !3, line: 927, type: !8682, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8682 = !DISubroutineType(types: !8683)
!8683 = !{null, !8684}
!8684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!8685 = !DILocalVariable(name: "colors", arg: 1, scope: !8681, file: !3, line: 927, type: !8684)
!8686 = !DILocation(line: 927, column: 44, scope: !8681)
!8687 = !DILocation(line: 932, column: 38, scope: !8681)
!8688 = !DILocation(line: 932, column: 46, scope: !8681)
!8689 = !DILocation(line: 932, column: 2, scope: !8681)
!8690 = !DILocation(line: 933, column: 38, scope: !8681)
!8691 = !DILocation(line: 933, column: 46, scope: !8681)
!8692 = !DILocation(line: 933, column: 2, scope: !8681)
!8693 = !DILocation(line: 934, column: 43, scope: !8681)
!8694 = !DILocation(line: 934, column: 51, scope: !8681)
!8695 = !DILocation(line: 934, column: 2, scope: !8681)
!8696 = !DILocation(line: 935, column: 43, scope: !8681)
!8697 = !DILocation(line: 935, column: 51, scope: !8681)
!8698 = !DILocation(line: 935, column: 2, scope: !8681)
!8699 = !DILocation(line: 936, column: 2, scope: !8681)
!8700 = !DILocation(line: 936, column: 10, scope: !8681)
!8701 = !DILocation(line: 936, column: 24, scope: !8681)
!8702 = !DILocation(line: 937, column: 41, scope: !8681)
!8703 = !DILocation(line: 937, column: 49, scope: !8681)
!8704 = !DILocation(line: 937, column: 2, scope: !8681)
!8705 = !DILocation(line: 938, column: 41, scope: !8681)
!8706 = !DILocation(line: 938, column: 49, scope: !8681)
!8707 = !DILocation(line: 938, column: 2, scope: !8681)
!8708 = !DILocation(line: 939, column: 2, scope: !8681)
!8709 = !DILocation(line: 939, column: 10, scope: !8681)
!8710 = !DILocation(line: 939, column: 21, scope: !8681)
!8711 = !DILocation(line: 940, column: 1, scope: !8681)
!8712 = distinct !DISubprogram(name: "knifetool_draw_angle_snapping", scope: !3, file: !3, line: 830, type: !8713, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8713 = !DISubroutineType(types: !8714)
!8714 = !{null, !5229}
!8715 = !DILocalVariable(name: "kcd", arg: 1, scope: !8712, file: !3, line: 830, type: !5229)
!8716 = !DILocation(line: 830, column: 67, scope: !8712)
!8717 = !DILocalVariable(name: "mats", scope: !8712, file: !3, line: 832, type: !5987)
!8718 = !DILocation(line: 832, column: 10, scope: !8712)
!8719 = !DILocalVariable(name: "u", scope: !8712, file: !3, line: 833, type: !8720)
!8720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2389, size: 192, elements: !556)
!8721 = !DILocation(line: 833, column: 9, scope: !8712)
!8722 = !DILocalVariable(name: "u1", scope: !8712, file: !3, line: 833, type: !2609)
!8723 = !DILocation(line: 833, column: 15, scope: !8712)
!8724 = !DILocalVariable(name: "u2", scope: !8712, file: !3, line: 833, type: !2609)
!8725 = !DILocation(line: 833, column: 22, scope: !8712)
!8726 = !DILocalVariable(name: "v1", scope: !8712, file: !3, line: 833, type: !8720)
!8727 = !DILocation(line: 833, column: 29, scope: !8712)
!8728 = !DILocalVariable(name: "v2", scope: !8712, file: !3, line: 833, type: !8720)
!8729 = !DILocation(line: 833, column: 36, scope: !8712)
!8730 = !DILocalVariable(name: "dx", scope: !8712, file: !3, line: 833, type: !2389)
!8731 = !DILocation(line: 833, column: 43, scope: !8712)
!8732 = !DILocalVariable(name: "dy", scope: !8712, file: !3, line: 833, type: !2389)
!8733 = !DILocation(line: 833, column: 47, scope: !8712)
!8734 = !DILocalVariable(name: "wminx", scope: !8712, file: !3, line: 834, type: !2389)
!8735 = !DILocation(line: 834, column: 9, scope: !8712)
!8736 = !DILocalVariable(name: "wminy", scope: !8712, file: !3, line: 834, type: !2389)
!8737 = !DILocation(line: 834, column: 16, scope: !8712)
!8738 = !DILocalVariable(name: "wmaxx", scope: !8712, file: !3, line: 834, type: !2389)
!8739 = !DILocation(line: 834, column: 23, scope: !8712)
!8740 = !DILocalVariable(name: "wmaxy", scope: !8712, file: !3, line: 834, type: !2389)
!8741 = !DILocation(line: 834, column: 30, scope: !8712)
!8742 = !DILocation(line: 837, column: 28, scope: !8712)
!8743 = !DILocation(line: 837, column: 33, scope: !8712)
!8744 = !DILocation(line: 837, column: 37, scope: !8712)
!8745 = !DILocation(line: 837, column: 42, scope: !8712)
!8746 = !DILocation(line: 837, column: 45, scope: !8712)
!8747 = !DILocation(line: 837, column: 51, scope: !8712)
!8748 = !DILocation(line: 837, column: 56, scope: !8712)
!8749 = !DILocation(line: 837, column: 2, scope: !8712)
!8750 = !DILocation(line: 838, column: 13, scope: !8712)
!8751 = !DILocation(line: 838, column: 18, scope: !8712)
!8752 = !DILocation(line: 838, column: 23, scope: !8712)
!8753 = !DILocation(line: 838, column: 32, scope: !8712)
!8754 = !DILocation(line: 838, column: 37, scope: !8712)
!8755 = !DILocation(line: 838, column: 42, scope: !8712)
!8756 = !DILocation(line: 838, column: 51, scope: !8712)
!8757 = !DILocation(line: 838, column: 56, scope: !8712)
!8758 = !DILocation(line: 838, column: 61, scope: !8712)
!8759 = !DILocation(line: 839, column: 18, scope: !8712)
!8760 = !DILocation(line: 839, column: 13, scope: !8712)
!8761 = !DILocation(line: 839, column: 34, scope: !8712)
!8762 = !DILocation(line: 839, column: 29, scope: !8712)
!8763 = !DILocation(line: 839, column: 51, scope: !8712)
!8764 = !DILocation(line: 839, column: 46, scope: !8712)
!8765 = !DILocation(line: 840, column: 14, scope: !8712)
!8766 = !DILocation(line: 840, column: 21, scope: !8712)
!8767 = !DILocation(line: 840, column: 28, scope: !8712)
!8768 = !DILocation(line: 838, column: 2, scope: !8712)
!8769 = !DILocation(line: 843, column: 10, scope: !8712)
!8770 = !DILocation(line: 843, column: 15, scope: !8712)
!8771 = !DILocation(line: 843, column: 19, scope: !8712)
!8772 = !DILocation(line: 843, column: 26, scope: !8712)
!8773 = !DILocation(line: 843, column: 8, scope: !8712)
!8774 = !DILocation(line: 844, column: 10, scope: !8712)
!8775 = !DILocation(line: 844, column: 15, scope: !8712)
!8776 = !DILocation(line: 844, column: 19, scope: !8712)
!8777 = !DILocation(line: 844, column: 26, scope: !8712)
!8778 = !DILocation(line: 844, column: 33, scope: !8712)
!8779 = !DILocation(line: 844, column: 38, scope: !8712)
!8780 = !DILocation(line: 844, column: 42, scope: !8712)
!8781 = !DILocation(line: 844, column: 31, scope: !8712)
!8782 = !DILocation(line: 844, column: 8, scope: !8712)
!8783 = !DILocation(line: 845, column: 10, scope: !8712)
!8784 = !DILocation(line: 845, column: 15, scope: !8712)
!8785 = !DILocation(line: 845, column: 19, scope: !8712)
!8786 = !DILocation(line: 845, column: 26, scope: !8712)
!8787 = !DILocation(line: 845, column: 8, scope: !8712)
!8788 = !DILocation(line: 846, column: 10, scope: !8712)
!8789 = !DILocation(line: 846, column: 15, scope: !8712)
!8790 = !DILocation(line: 846, column: 19, scope: !8712)
!8791 = !DILocation(line: 846, column: 26, scope: !8712)
!8792 = !DILocation(line: 846, column: 33, scope: !8712)
!8793 = !DILocation(line: 846, column: 38, scope: !8712)
!8794 = !DILocation(line: 846, column: 42, scope: !8712)
!8795 = !DILocation(line: 846, column: 31, scope: !8712)
!8796 = !DILocation(line: 846, column: 8, scope: !8712)
!8797 = !DILocation(line: 848, column: 10, scope: !8712)
!8798 = !DILocation(line: 848, column: 15, scope: !8712)
!8799 = !DILocation(line: 848, column: 2, scope: !8712)
!8800 = !DILocation(line: 850, column: 12, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8712, file: !3, line: 848, column: 31)
!8802 = !DILocation(line: 850, column: 4, scope: !8801)
!8803 = !DILocation(line: 850, column: 10, scope: !8801)
!8804 = !DILocation(line: 851, column: 12, scope: !8801)
!8805 = !DILocation(line: 851, column: 4, scope: !8801)
!8806 = !DILocation(line: 851, column: 10, scope: !8801)
!8807 = !DILocation(line: 852, column: 20, scope: !8801)
!8808 = !DILocation(line: 852, column: 12, scope: !8801)
!8809 = !DILocation(line: 852, column: 18, scope: !8801)
!8810 = !DILocation(line: 852, column: 4, scope: !8801)
!8811 = !DILocation(line: 852, column: 10, scope: !8801)
!8812 = !DILocation(line: 853, column: 4, scope: !8801)
!8813 = !DILocation(line: 855, column: 20, scope: !8801)
!8814 = !DILocation(line: 855, column: 12, scope: !8801)
!8815 = !DILocation(line: 855, column: 18, scope: !8801)
!8816 = !DILocation(line: 855, column: 4, scope: !8801)
!8817 = !DILocation(line: 855, column: 10, scope: !8801)
!8818 = !DILocation(line: 856, column: 12, scope: !8801)
!8819 = !DILocation(line: 856, column: 4, scope: !8801)
!8820 = !DILocation(line: 856, column: 10, scope: !8801)
!8821 = !DILocation(line: 857, column: 12, scope: !8801)
!8822 = !DILocation(line: 857, column: 4, scope: !8801)
!8823 = !DILocation(line: 857, column: 10, scope: !8801)
!8824 = !DILocation(line: 858, column: 4, scope: !8801)
!8825 = !DILocation(line: 861, column: 9, scope: !8801)
!8826 = !DILocation(line: 861, column: 16, scope: !8801)
!8827 = !DILocation(line: 861, column: 14, scope: !8801)
!8828 = !DILocation(line: 861, column: 7, scope: !8801)
!8829 = !DILocation(line: 862, column: 9, scope: !8801)
!8830 = !DILocation(line: 862, column: 16, scope: !8801)
!8831 = !DILocation(line: 862, column: 14, scope: !8801)
!8832 = !DILocation(line: 862, column: 7, scope: !8801)
!8833 = !DILocation(line: 863, column: 8, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 863, column: 8)
!8835 = !DILocation(line: 863, column: 13, scope: !8834)
!8836 = !DILocation(line: 863, column: 11, scope: !8834)
!8837 = !DILocation(line: 863, column: 8, scope: !8801)
!8838 = !DILocation(line: 864, column: 13, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 863, column: 17)
!8840 = !DILocation(line: 864, column: 5, scope: !8839)
!8841 = !DILocation(line: 864, column: 11, scope: !8839)
!8842 = !DILocation(line: 865, column: 13, scope: !8839)
!8843 = !DILocation(line: 865, column: 20, scope: !8839)
!8844 = !DILocation(line: 865, column: 18, scope: !8839)
!8845 = !DILocation(line: 865, column: 5, scope: !8839)
!8846 = !DILocation(line: 865, column: 11, scope: !8839)
!8847 = !DILocation(line: 866, column: 4, scope: !8839)
!8848 = !DILocation(line: 868, column: 13, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 867, column: 9)
!8850 = !DILocation(line: 868, column: 20, scope: !8849)
!8851 = !DILocation(line: 868, column: 18, scope: !8849)
!8852 = !DILocation(line: 868, column: 5, scope: !8849)
!8853 = !DILocation(line: 868, column: 11, scope: !8849)
!8854 = !DILocation(line: 869, column: 13, scope: !8849)
!8855 = !DILocation(line: 869, column: 5, scope: !8849)
!8856 = !DILocation(line: 869, column: 11, scope: !8849)
!8857 = !DILocation(line: 872, column: 9, scope: !8801)
!8858 = !DILocation(line: 872, column: 17, scope: !8801)
!8859 = !DILocation(line: 872, column: 15, scope: !8801)
!8860 = !DILocation(line: 872, column: 7, scope: !8801)
!8861 = !DILocation(line: 873, column: 9, scope: !8801)
!8862 = !DILocation(line: 873, column: 17, scope: !8801)
!8863 = !DILocation(line: 873, column: 15, scope: !8801)
!8864 = !DILocation(line: 873, column: 7, scope: !8801)
!8865 = !DILocation(line: 874, column: 8, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 874, column: 8)
!8867 = !DILocation(line: 874, column: 13, scope: !8866)
!8868 = !DILocation(line: 874, column: 11, scope: !8866)
!8869 = !DILocation(line: 874, column: 8, scope: !8801)
!8870 = !DILocation(line: 875, column: 13, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 874, column: 17)
!8872 = !DILocation(line: 875, column: 5, scope: !8871)
!8873 = !DILocation(line: 875, column: 11, scope: !8871)
!8874 = !DILocation(line: 876, column: 13, scope: !8871)
!8875 = !DILocation(line: 876, column: 20, scope: !8871)
!8876 = !DILocation(line: 876, column: 18, scope: !8871)
!8877 = !DILocation(line: 876, column: 5, scope: !8871)
!8878 = !DILocation(line: 876, column: 11, scope: !8871)
!8879 = !DILocation(line: 877, column: 4, scope: !8871)
!8880 = !DILocation(line: 879, column: 13, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 878, column: 9)
!8882 = !DILocation(line: 879, column: 20, scope: !8881)
!8883 = !DILocation(line: 879, column: 18, scope: !8881)
!8884 = !DILocation(line: 879, column: 5, scope: !8881)
!8885 = !DILocation(line: 879, column: 11, scope: !8881)
!8886 = !DILocation(line: 880, column: 13, scope: !8881)
!8887 = !DILocation(line: 880, column: 5, scope: !8881)
!8888 = !DILocation(line: 880, column: 11, scope: !8881)
!8889 = !DILocation(line: 882, column: 4, scope: !8801)
!8890 = !DILocation(line: 885, column: 9, scope: !8801)
!8891 = !DILocation(line: 885, column: 17, scope: !8801)
!8892 = !DILocation(line: 885, column: 15, scope: !8801)
!8893 = !DILocation(line: 885, column: 7, scope: !8801)
!8894 = !DILocation(line: 886, column: 9, scope: !8801)
!8895 = !DILocation(line: 886, column: 16, scope: !8801)
!8896 = !DILocation(line: 886, column: 14, scope: !8801)
!8897 = !DILocation(line: 886, column: 7, scope: !8801)
!8898 = !DILocation(line: 887, column: 8, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 887, column: 8)
!8900 = !DILocation(line: 887, column: 13, scope: !8899)
!8901 = !DILocation(line: 887, column: 11, scope: !8899)
!8902 = !DILocation(line: 887, column: 8, scope: !8801)
!8903 = !DILocation(line: 888, column: 13, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 887, column: 17)
!8905 = !DILocation(line: 888, column: 5, scope: !8904)
!8906 = !DILocation(line: 888, column: 11, scope: !8904)
!8907 = !DILocation(line: 889, column: 13, scope: !8904)
!8908 = !DILocation(line: 889, column: 20, scope: !8904)
!8909 = !DILocation(line: 889, column: 18, scope: !8904)
!8910 = !DILocation(line: 889, column: 5, scope: !8904)
!8911 = !DILocation(line: 889, column: 11, scope: !8904)
!8912 = !DILocation(line: 890, column: 4, scope: !8904)
!8913 = !DILocation(line: 892, column: 13, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 891, column: 9)
!8915 = !DILocation(line: 892, column: 20, scope: !8914)
!8916 = !DILocation(line: 892, column: 18, scope: !8914)
!8917 = !DILocation(line: 892, column: 5, scope: !8914)
!8918 = !DILocation(line: 892, column: 11, scope: !8914)
!8919 = !DILocation(line: 893, column: 13, scope: !8914)
!8920 = !DILocation(line: 893, column: 5, scope: !8914)
!8921 = !DILocation(line: 893, column: 11, scope: !8914)
!8922 = !DILocation(line: 896, column: 9, scope: !8801)
!8923 = !DILocation(line: 896, column: 16, scope: !8801)
!8924 = !DILocation(line: 896, column: 14, scope: !8801)
!8925 = !DILocation(line: 896, column: 7, scope: !8801)
!8926 = !DILocation(line: 897, column: 9, scope: !8801)
!8927 = !DILocation(line: 897, column: 17, scope: !8801)
!8928 = !DILocation(line: 897, column: 15, scope: !8801)
!8929 = !DILocation(line: 897, column: 7, scope: !8801)
!8930 = !DILocation(line: 898, column: 8, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 898, column: 8)
!8932 = !DILocation(line: 898, column: 13, scope: !8931)
!8933 = !DILocation(line: 898, column: 11, scope: !8931)
!8934 = !DILocation(line: 898, column: 8, scope: !8801)
!8935 = !DILocation(line: 899, column: 13, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 898, column: 17)
!8937 = !DILocation(line: 899, column: 5, scope: !8936)
!8938 = !DILocation(line: 899, column: 11, scope: !8936)
!8939 = !DILocation(line: 900, column: 13, scope: !8936)
!8940 = !DILocation(line: 900, column: 20, scope: !8936)
!8941 = !DILocation(line: 900, column: 18, scope: !8936)
!8942 = !DILocation(line: 900, column: 5, scope: !8936)
!8943 = !DILocation(line: 900, column: 11, scope: !8936)
!8944 = !DILocation(line: 901, column: 4, scope: !8936)
!8945 = !DILocation(line: 903, column: 13, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 902, column: 9)
!8947 = !DILocation(line: 903, column: 20, scope: !8946)
!8948 = !DILocation(line: 903, column: 18, scope: !8946)
!8949 = !DILocation(line: 903, column: 5, scope: !8946)
!8950 = !DILocation(line: 903, column: 11, scope: !8946)
!8951 = !DILocation(line: 904, column: 13, scope: !8946)
!8952 = !DILocation(line: 904, column: 5, scope: !8946)
!8953 = !DILocation(line: 904, column: 11, scope: !8946)
!8954 = !DILocation(line: 906, column: 4, scope: !8801)
!8955 = !DILocation(line: 908, column: 4, scope: !8801)
!8956 = !DILocation(line: 912, column: 15, scope: !8712)
!8957 = !DILocation(line: 912, column: 22, scope: !8712)
!8958 = !DILocation(line: 913, column: 20, scope: !8712)
!8959 = !DILocation(line: 913, column: 15, scope: !8712)
!8960 = !DILocation(line: 913, column: 36, scope: !8712)
!8961 = !DILocation(line: 913, column: 31, scope: !8712)
!8962 = !DILocation(line: 913, column: 53, scope: !8712)
!8963 = !DILocation(line: 913, column: 48, scope: !8712)
!8964 = !DILocation(line: 914, column: 16, scope: !8712)
!8965 = !DILocation(line: 914, column: 24, scope: !8712)
!8966 = !DILocation(line: 914, column: 32, scope: !8712)
!8967 = !DILocation(line: 912, column: 2, scope: !8712)
!8968 = !DILocation(line: 915, column: 15, scope: !8712)
!8969 = !DILocation(line: 915, column: 22, scope: !8712)
!8970 = !DILocation(line: 916, column: 20, scope: !8712)
!8971 = !DILocation(line: 916, column: 15, scope: !8712)
!8972 = !DILocation(line: 916, column: 36, scope: !8712)
!8973 = !DILocation(line: 916, column: 31, scope: !8712)
!8974 = !DILocation(line: 916, column: 53, scope: !8712)
!8975 = !DILocation(line: 916, column: 48, scope: !8712)
!8976 = !DILocation(line: 917, column: 16, scope: !8712)
!8977 = !DILocation(line: 917, column: 24, scope: !8712)
!8978 = !DILocation(line: 917, column: 32, scope: !8712)
!8979 = !DILocation(line: 915, column: 2, scope: !8712)
!8980 = !DILocation(line: 919, column: 2, scope: !8712)
!8981 = !DILocation(line: 920, column: 2, scope: !8712)
!8982 = !DILocation(line: 921, column: 2, scope: !8712)
!8983 = !DILocation(line: 922, column: 14, scope: !8712)
!8984 = !DILocation(line: 922, column: 2, scope: !8712)
!8985 = !DILocation(line: 923, column: 14, scope: !8712)
!8986 = !DILocation(line: 923, column: 2, scope: !8712)
!8987 = !DILocation(line: 924, column: 2, scope: !8712)
!8988 = !DILocation(line: 925, column: 1, scope: !8712)
!8989 = distinct !DISubprogram(name: "negate_v3_v3", scope: !5212, file: !5212, line: 583, type: !5213, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!8990 = !DILocalVariable(name: "r", arg: 1, scope: !8989, file: !5212, line: 583, type: !392)
!8991 = !DILocation(line: 583, column: 33, scope: !8989)
!8992 = !DILocalVariable(name: "a", arg: 2, scope: !8989, file: !5212, line: 583, type: !997)
!8993 = !DILocation(line: 583, column: 51, scope: !8989)
!8994 = !DILocation(line: 585, column: 10, scope: !8989)
!8995 = !DILocation(line: 585, column: 9, scope: !8989)
!8996 = !DILocation(line: 585, column: 2, scope: !8989)
!8997 = !DILocation(line: 585, column: 7, scope: !8989)
!8998 = !DILocation(line: 586, column: 10, scope: !8989)
!8999 = !DILocation(line: 586, column: 9, scope: !8989)
!9000 = !DILocation(line: 586, column: 2, scope: !8989)
!9001 = !DILocation(line: 586, column: 7, scope: !8989)
!9002 = !DILocation(line: 587, column: 10, scope: !8989)
!9003 = !DILocation(line: 587, column: 9, scope: !8989)
!9004 = !DILocation(line: 587, column: 2, scope: !8989)
!9005 = !DILocation(line: 587, column: 7, scope: !8989)
!9006 = !DILocation(line: 588, column: 1, scope: !8989)
!9007 = distinct !DISubprogram(name: "prepare_linehits_for_cut", scope: !3, file: !3, line: 589, type: !4371, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9008 = !DILocalVariable(name: "kcd", arg: 1, scope: !9007, file: !3, line: 589, type: !3512)
!9009 = !DILocation(line: 589, column: 56, scope: !9007)
!9010 = !DILocalVariable(name: "linehits", scope: !9007, file: !3, line: 591, type: !2850)
!9011 = !DILocation(line: 591, column: 16, scope: !9007)
!9012 = !DILocalVariable(name: "lhi", scope: !9007, file: !3, line: 591, type: !2850)
!9013 = !DILocation(line: 591, column: 27, scope: !9007)
!9014 = !DILocalVariable(name: "lhj", scope: !9007, file: !3, line: 591, type: !2850)
!9015 = !DILocation(line: 591, column: 33, scope: !9007)
!9016 = !DILocalVariable(name: "i", scope: !9007, file: !3, line: 592, type: !35)
!9017 = !DILocation(line: 592, column: 6, scope: !9007)
!9018 = !DILocalVariable(name: "j", scope: !9007, file: !3, line: 592, type: !35)
!9019 = !DILocation(line: 592, column: 9, scope: !9007)
!9020 = !DILocalVariable(name: "n", scope: !9007, file: !3, line: 592, type: !35)
!9021 = !DILocation(line: 592, column: 12, scope: !9007)
!9022 = !DILocation(line: 594, column: 6, scope: !9007)
!9023 = !DILocation(line: 594, column: 11, scope: !9007)
!9024 = !DILocation(line: 594, column: 4, scope: !9007)
!9025 = !DILocation(line: 595, column: 13, scope: !9007)
!9026 = !DILocation(line: 595, column: 18, scope: !9007)
!9027 = !DILocation(line: 595, column: 11, scope: !9007)
!9028 = !DILocation(line: 596, column: 6, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9007, file: !3, line: 596, column: 6)
!9030 = !DILocation(line: 596, column: 8, scope: !9029)
!9031 = !DILocation(line: 596, column: 6, scope: !9007)
!9032 = !DILocation(line: 597, column: 3, scope: !9029)
!9033 = !DILocation(line: 599, column: 8, scope: !9007)
!9034 = !DILocation(line: 599, column: 18, scope: !9007)
!9035 = !DILocation(line: 599, column: 2, scope: !9007)
!9036 = !DILocation(line: 605, column: 9, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9007, file: !3, line: 605, column: 2)
!9038 = !DILocation(line: 605, column: 7, scope: !9037)
!9039 = !DILocation(line: 605, column: 14, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 605, column: 2)
!9041 = !DILocation(line: 605, column: 18, scope: !9040)
!9042 = !DILocation(line: 605, column: 16, scope: !9040)
!9043 = !DILocation(line: 605, column: 2, scope: !9037)
!9044 = !DILocation(line: 606, column: 10, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 605, column: 26)
!9046 = !DILocation(line: 606, column: 19, scope: !9045)
!9047 = !DILocation(line: 606, column: 7, scope: !9045)
!9048 = !DILocation(line: 607, column: 7, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 607, column: 7)
!9050 = !DILocation(line: 607, column: 12, scope: !9049)
!9051 = !DILocation(line: 607, column: 7, scope: !9045)
!9052 = !DILocation(line: 608, column: 13, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 608, column: 4)
!9054 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 607, column: 15)
!9055 = !DILocation(line: 608, column: 15, scope: !9053)
!9056 = !DILocation(line: 608, column: 11, scope: !9053)
!9057 = !DILocation(line: 608, column: 9, scope: !9053)
!9058 = !DILocation(line: 608, column: 20, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 608, column: 4)
!9060 = !DILocation(line: 608, column: 22, scope: !9059)
!9061 = !DILocation(line: 608, column: 4, scope: !9053)
!9062 = !DILocation(line: 609, column: 12, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 608, column: 33)
!9064 = !DILocation(line: 609, column: 21, scope: !9063)
!9065 = !DILocation(line: 609, column: 9, scope: !9063)
!9066 = !DILocation(line: 610, column: 10, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 610, column: 9)
!9068 = !DILocation(line: 610, column: 15, scope: !9067)
!9069 = !DILocation(line: 610, column: 19, scope: !9067)
!9070 = !DILocation(line: 611, column: 15, scope: !9067)
!9071 = !DILocation(line: 611, column: 20, scope: !9067)
!9072 = !DILocation(line: 611, column: 24, scope: !9067)
!9073 = !DILocation(line: 611, column: 29, scope: !9067)
!9074 = !DILocation(line: 611, column: 22, scope: !9067)
!9075 = !DILocation(line: 611, column: 9, scope: !9067)
!9076 = !DILocation(line: 611, column: 32, scope: !9067)
!9077 = !DILocation(line: 611, column: 51, scope: !9067)
!9078 = !DILocation(line: 612, column: 15, scope: !9067)
!9079 = !DILocation(line: 612, column: 20, scope: !9067)
!9080 = !DILocation(line: 612, column: 24, scope: !9067)
!9081 = !DILocation(line: 612, column: 29, scope: !9067)
!9082 = !DILocation(line: 612, column: 22, scope: !9067)
!9083 = !DILocation(line: 612, column: 9, scope: !9067)
!9084 = !DILocation(line: 612, column: 32, scope: !9067)
!9085 = !DILocation(line: 610, column: 9, scope: !9063)
!9086 = !DILocation(line: 614, column: 6, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 613, column: 5)
!9088 = !DILocation(line: 616, column: 5, scope: !9063)
!9089 = !DILocation(line: 616, column: 10, scope: !9063)
!9090 = !DILocation(line: 616, column: 12, scope: !9063)
!9091 = !DILocation(line: 617, column: 4, scope: !9063)
!9092 = !DILocation(line: 608, column: 29, scope: !9059)
!9093 = !DILocation(line: 608, column: 4, scope: !9059)
!9094 = distinct !{!9094, !9061, !9095}
!9095 = !DILocation(line: 617, column: 4, scope: !9053)
!9096 = !DILocation(line: 618, column: 13, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 618, column: 4)
!9098 = !DILocation(line: 618, column: 15, scope: !9097)
!9099 = !DILocation(line: 618, column: 11, scope: !9097)
!9100 = !DILocation(line: 618, column: 9, scope: !9097)
!9101 = !DILocation(line: 618, column: 20, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 618, column: 4)
!9103 = !DILocation(line: 618, column: 24, scope: !9102)
!9104 = !DILocation(line: 618, column: 22, scope: !9102)
!9105 = !DILocation(line: 618, column: 4, scope: !9097)
!9106 = !DILocation(line: 619, column: 12, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9102, file: !3, line: 618, column: 32)
!9108 = !DILocation(line: 619, column: 21, scope: !9107)
!9109 = !DILocation(line: 619, column: 9, scope: !9107)
!9110 = !DILocation(line: 620, column: 15, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9107, file: !3, line: 620, column: 9)
!9112 = !DILocation(line: 620, column: 20, scope: !9111)
!9113 = !DILocation(line: 620, column: 24, scope: !9111)
!9114 = !DILocation(line: 620, column: 29, scope: !9111)
!9115 = !DILocation(line: 620, column: 22, scope: !9111)
!9116 = !DILocation(line: 620, column: 9, scope: !9111)
!9117 = !DILocation(line: 620, column: 32, scope: !9111)
!9118 = !DILocation(line: 620, column: 51, scope: !9111)
!9119 = !DILocation(line: 621, column: 15, scope: !9111)
!9120 = !DILocation(line: 621, column: 20, scope: !9111)
!9121 = !DILocation(line: 621, column: 24, scope: !9111)
!9122 = !DILocation(line: 621, column: 29, scope: !9111)
!9123 = !DILocation(line: 621, column: 22, scope: !9111)
!9124 = !DILocation(line: 621, column: 9, scope: !9111)
!9125 = !DILocation(line: 621, column: 32, scope: !9111)
!9126 = !DILocation(line: 620, column: 9, scope: !9107)
!9127 = !DILocation(line: 623, column: 6, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9111, file: !3, line: 622, column: 5)
!9129 = !DILocation(line: 625, column: 9, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9107, file: !3, line: 625, column: 9)
!9131 = !DILocation(line: 625, column: 14, scope: !9130)
!9132 = !DILocation(line: 625, column: 18, scope: !9130)
!9133 = !DILocation(line: 625, column: 21, scope: !9130)
!9134 = !DILocation(line: 625, column: 26, scope: !9130)
!9135 = !DILocation(line: 625, column: 31, scope: !9130)
!9136 = !DILocation(line: 625, column: 36, scope: !9130)
!9137 = !DILocation(line: 625, column: 28, scope: !9130)
!9138 = !DILocation(line: 625, column: 9, scope: !9107)
!9139 = !DILocation(line: 626, column: 6, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 625, column: 39)
!9141 = !DILocation(line: 626, column: 11, scope: !9140)
!9142 = !DILocation(line: 626, column: 13, scope: !9140)
!9143 = !DILocation(line: 627, column: 5, scope: !9140)
!9144 = !DILocation(line: 628, column: 4, scope: !9107)
!9145 = !DILocation(line: 618, column: 28, scope: !9102)
!9146 = !DILocation(line: 618, column: 4, scope: !9102)
!9147 = distinct !{!9147, !9105, !9148}
!9148 = !DILocation(line: 628, column: 4, scope: !9097)
!9149 = !DILocation(line: 629, column: 3, scope: !9054)
!9150 = !DILocation(line: 630, column: 2, scope: !9045)
!9151 = !DILocation(line: 605, column: 22, scope: !9040)
!9152 = !DILocation(line: 605, column: 2, scope: !9040)
!9153 = distinct !{!9153, !9043, !9154}
!9154 = !DILocation(line: 630, column: 2, scope: !9037)
!9155 = !DILocation(line: 633, column: 4, scope: !9007)
!9156 = !DILocation(line: 634, column: 4, scope: !9007)
!9157 = !DILocation(line: 635, column: 2, scope: !9007)
!9158 = !DILocation(line: 635, column: 9, scope: !9007)
!9159 = !DILocation(line: 635, column: 13, scope: !9007)
!9160 = !DILocation(line: 635, column: 11, scope: !9007)
!9161 = !DILocation(line: 636, column: 10, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9007, file: !3, line: 635, column: 16)
!9163 = !DILocation(line: 636, column: 19, scope: !9162)
!9164 = !DILocation(line: 636, column: 7, scope: !9162)
!9165 = !DILocation(line: 637, column: 10, scope: !9162)
!9166 = !DILocation(line: 637, column: 19, scope: !9162)
!9167 = !DILocation(line: 637, column: 7, scope: !9162)
!9168 = !DILocation(line: 638, column: 7, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9162, file: !3, line: 638, column: 7)
!9170 = !DILocation(line: 638, column: 12, scope: !9169)
!9171 = !DILocation(line: 638, column: 14, scope: !9169)
!9172 = !DILocation(line: 638, column: 7, scope: !9162)
!9173 = !DILocation(line: 639, column: 5, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 638, column: 24)
!9175 = !DILocation(line: 640, column: 3, scope: !9174)
!9176 = !DILocation(line: 643, column: 8, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9178, file: !3, line: 643, column: 8)
!9178 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 641, column: 8)
!9179 = !DILocation(line: 643, column: 13, scope: !9177)
!9180 = !DILocation(line: 643, column: 15, scope: !9177)
!9181 = !DILocation(line: 643, column: 8, scope: !9178)
!9182 = !DILocation(line: 645, column: 13, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 643, column: 25)
!9184 = !DILocation(line: 645, column: 22, scope: !9183)
!9185 = !DILocation(line: 645, column: 5, scope: !9183)
!9186 = !DILocation(line: 645, column: 27, scope: !9183)
!9187 = !DILocation(line: 645, column: 36, scope: !9183)
!9188 = !DILocation(line: 646, column: 4, scope: !9183)
!9189 = !DILocation(line: 648, column: 9, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 648, column: 9)
!9191 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 647, column: 9)
!9192 = !DILocation(line: 648, column: 11, scope: !9190)
!9193 = !DILocation(line: 648, column: 18, scope: !9190)
!9194 = !DILocation(line: 648, column: 15, scope: !9190)
!9195 = !DILocation(line: 648, column: 9, scope: !9191)
!9196 = !DILocation(line: 649, column: 14, scope: !9190)
!9197 = !DILocation(line: 649, column: 23, scope: !9190)
!9198 = !DILocation(line: 649, column: 25, scope: !9190)
!9199 = !DILocation(line: 649, column: 6, scope: !9190)
!9200 = !DILocation(line: 649, column: 32, scope: !9190)
!9201 = !DILocation(line: 649, column: 41, scope: !9190)
!9202 = !DILocation(line: 650, column: 6, scope: !9191)
!9203 = !DILocation(line: 652, column: 5, scope: !9178)
!9204 = distinct !{!9204, !9157, !9205}
!9205 = !DILocation(line: 654, column: 2, scope: !9007)
!9206 = !DILocation(line: 655, column: 20, scope: !9007)
!9207 = !DILocation(line: 655, column: 22, scope: !9007)
!9208 = !DILocation(line: 655, column: 2, scope: !9007)
!9209 = !DILocation(line: 655, column: 7, scope: !9007)
!9210 = !DILocation(line: 655, column: 18, scope: !9007)
!9211 = !DILocation(line: 656, column: 1, scope: !9007)
!9212 = distinct !DISubprogram(name: "add_hit_to_facehits", scope: !3, file: !3, line: 659, type: !9213, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9213 = !DISubroutineType(types: !9214)
!9214 = !{null, !3512, !2771, !2730, !2850}
!9215 = !DILocalVariable(name: "kcd", arg: 1, scope: !9212, file: !3, line: 659, type: !3512)
!9216 = !DILocation(line: 659, column: 51, scope: !9212)
!9217 = !DILocalVariable(name: "facehits", arg: 2, scope: !9212, file: !3, line: 659, type: !2771)
!9218 = !DILocation(line: 659, column: 63, scope: !9212)
!9219 = !DILocalVariable(name: "f", arg: 3, scope: !9212, file: !3, line: 659, type: !2730)
!9220 = !DILocation(line: 659, column: 81, scope: !9212)
!9221 = !DILocalVariable(name: "hit", arg: 4, scope: !9212, file: !3, line: 659, type: !2850)
!9222 = !DILocation(line: 659, column: 98, scope: !9212)
!9223 = !DILocalVariable(name: "lst", scope: !9212, file: !3, line: 661, type: !1227)
!9224 = !DILocation(line: 661, column: 12, scope: !9212)
!9225 = !DILocation(line: 661, column: 35, scope: !9212)
!9226 = !DILocation(line: 661, column: 45, scope: !9212)
!9227 = !DILocation(line: 661, column: 18, scope: !9212)
!9228 = !DILocation(line: 663, column: 7, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 663, column: 6)
!9230 = !DILocation(line: 663, column: 6, scope: !9212)
!9231 = !DILocation(line: 664, column: 26, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 663, column: 12)
!9233 = !DILocation(line: 664, column: 9, scope: !9232)
!9234 = !DILocation(line: 664, column: 7, scope: !9232)
!9235 = !DILocation(line: 665, column: 20, scope: !9232)
!9236 = !DILocation(line: 665, column: 30, scope: !9232)
!9237 = !DILocation(line: 665, column: 33, scope: !9232)
!9238 = !DILocation(line: 665, column: 3, scope: !9232)
!9239 = !DILocation(line: 666, column: 2, scope: !9232)
!9240 = !DILocation(line: 667, column: 27, scope: !9212)
!9241 = !DILocation(line: 667, column: 32, scope: !9212)
!9242 = !DILocation(line: 667, column: 37, scope: !9212)
!9243 = !DILocation(line: 667, column: 2, scope: !9212)
!9244 = !DILocation(line: 668, column: 1, scope: !9212)
!9245 = distinct !DISubprogram(name: "BLI_ghashIterator_done", scope: !548, file: !548, line: 98, type: !9246, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9246 = !DISubroutineType(types: !9247)
!9247 = !{!1053, !9248}
!9248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4557, size: 64)
!9249 = !DILocalVariable(name: "ghi", arg: 1, scope: !9245, file: !548, line: 98, type: !9248)
!9250 = !DILocation(line: 98, column: 57, scope: !9245)
!9251 = !DILocation(line: 98, column: 78, scope: !9245)
!9252 = !DILocation(line: 98, column: 83, scope: !9245)
!9253 = !DILocation(line: 98, column: 77, scope: !9245)
!9254 = !DILocation(line: 98, column: 70, scope: !9245)
!9255 = distinct !DISubprogram(name: "BLI_ghashIterator_getKey", scope: !548, file: !548, line: 95, type: !9256, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9256 = !DISubroutineType(types: !9257)
!9257 = !{!18, !9248}
!9258 = !DILocalVariable(name: "ghi", arg: 1, scope: !9255, file: !548, line: 95, type: !9248)
!9259 = !DILocation(line: 95, column: 59, scope: !9255)
!9260 = !DILocation(line: 95, column: 99, scope: !9255)
!9261 = !DILocation(line: 95, column: 104, scope: !9255)
!9262 = !DILocation(line: 95, column: 115, scope: !9255)
!9263 = !DILocation(line: 95, column: 70, scope: !9255)
!9264 = distinct !DISubprogram(name: "BLI_ghashIterator_getValue", scope: !548, file: !548, line: 96, type: !9256, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9265 = !DILocalVariable(name: "ghi", arg: 1, scope: !9264, file: !548, line: 96, type: !9248)
!9266 = !DILocation(line: 96, column: 61, scope: !9264)
!9267 = !DILocation(line: 96, column: 99, scope: !9264)
!9268 = !DILocation(line: 96, column: 104, scope: !9264)
!9269 = !DILocation(line: 96, column: 115, scope: !9264)
!9270 = !DILocation(line: 96, column: 70, scope: !9264)
!9271 = distinct !DISubprogram(name: "knife_cut_face", scope: !3, file: !3, line: 735, type: !9272, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9272 = !DISubroutineType(types: !9273)
!9273 = !{null, !3512, !2730, !1227}
!9274 = !DILocalVariable(name: "kcd", arg: 1, scope: !9271, file: !3, line: 735, type: !3512)
!9275 = !DILocation(line: 735, column: 46, scope: !9271)
!9276 = !DILocalVariable(name: "f", arg: 2, scope: !9271, file: !3, line: 735, type: !2730)
!9277 = !DILocation(line: 735, column: 59, scope: !9271)
!9278 = !DILocalVariable(name: "hits", arg: 3, scope: !9271, file: !3, line: 735, type: !1227)
!9279 = !DILocation(line: 735, column: 72, scope: !9271)
!9280 = !DILocalVariable(name: "r", scope: !9271, file: !3, line: 737, type: !3251)
!9281 = !DILocation(line: 737, column: 7, scope: !9271)
!9282 = !DILocalVariable(name: "lh", scope: !9271, file: !3, line: 738, type: !2850)
!9283 = !DILocation(line: 738, column: 16, scope: !9271)
!9284 = !DILocalVariable(name: "prevlh", scope: !9271, file: !3, line: 738, type: !2850)
!9285 = !DILocation(line: 738, column: 21, scope: !9271)
!9286 = !DILocalVariable(name: "n", scope: !9271, file: !3, line: 739, type: !35)
!9287 = !DILocation(line: 739, column: 6, scope: !9271)
!9288 = !DILocation(line: 741, column: 9, scope: !9271)
!9289 = !DILocation(line: 743, column: 20, scope: !9271)
!9290 = !DILocation(line: 743, column: 6, scope: !9271)
!9291 = !DILocation(line: 743, column: 4, scope: !9271)
!9292 = !DILocation(line: 744, column: 6, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9271, file: !3, line: 744, column: 6)
!9294 = !DILocation(line: 744, column: 8, scope: !9293)
!9295 = !DILocation(line: 744, column: 6, scope: !9271)
!9296 = !DILocation(line: 745, column: 3, scope: !9293)
!9297 = !DILocation(line: 747, column: 9, scope: !9271)
!9298 = !DILocation(line: 748, column: 11, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9271, file: !3, line: 748, column: 2)
!9300 = !DILocation(line: 748, column: 17, scope: !9299)
!9301 = !DILocation(line: 748, column: 9, scope: !9299)
!9302 = !DILocation(line: 748, column: 7, scope: !9299)
!9303 = !DILocation(line: 748, column: 24, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 748, column: 2)
!9305 = !DILocation(line: 748, column: 2, scope: !9299)
!9306 = !DILocation(line: 749, column: 24, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9304, file: !3, line: 748, column: 40)
!9308 = !DILocation(line: 749, column: 27, scope: !9307)
!9309 = !DILocation(line: 749, column: 8, scope: !9307)
!9310 = !DILocation(line: 749, column: 6, scope: !9307)
!9311 = !DILocation(line: 750, column: 7, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 750, column: 7)
!9313 = !DILocation(line: 750, column: 7, scope: !9307)
!9314 = !DILocation(line: 751, column: 25, scope: !9312)
!9315 = !DILocation(line: 751, column: 30, scope: !9312)
!9316 = !DILocation(line: 751, column: 38, scope: !9312)
!9317 = !DILocation(line: 751, column: 42, scope: !9312)
!9318 = !DILocation(line: 751, column: 4, scope: !9312)
!9319 = !DILocation(line: 752, column: 12, scope: !9307)
!9320 = !DILocation(line: 752, column: 10, scope: !9307)
!9321 = !DILocation(line: 753, column: 2, scope: !9307)
!9322 = !DILocation(line: 748, column: 31, scope: !9304)
!9323 = !DILocation(line: 748, column: 34, scope: !9304)
!9324 = !DILocation(line: 748, column: 29, scope: !9304)
!9325 = !DILocation(line: 748, column: 2, scope: !9304)
!9326 = distinct !{!9326, !9305, !9327}
!9327 = !DILocation(line: 753, column: 2, scope: !9299)
!9328 = !DILocation(line: 755, column: 1, scope: !9271)
!9329 = distinct !DISubprogram(name: "linehit_compare", scope: !3, file: !3, line: 566, type: !9330, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9330 = !DISubroutineType(types: !9331)
!9331 = !{!35, !9332, !9332}
!9332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9333, size: 64)
!9333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!9334 = !DILocalVariable(name: "vlh1", arg: 1, scope: !9329, file: !3, line: 566, type: !9332)
!9335 = !DILocation(line: 566, column: 40, scope: !9329)
!9336 = !DILocalVariable(name: "vlh2", arg: 2, scope: !9329, file: !3, line: 566, type: !9332)
!9337 = !DILocation(line: 566, column: 58, scope: !9329)
!9338 = !DILocalVariable(name: "lh1", scope: !9329, file: !3, line: 568, type: !9339)
!9339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9340, size: 64)
!9340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2851)
!9341 = !DILocation(line: 568, column: 22, scope: !9329)
!9342 = !DILocation(line: 568, column: 28, scope: !9329)
!9343 = !DILocalVariable(name: "lh2", scope: !9329, file: !3, line: 569, type: !9339)
!9344 = !DILocation(line: 569, column: 22, scope: !9329)
!9345 = !DILocation(line: 569, column: 28, scope: !9329)
!9346 = !DILocation(line: 571, column: 11, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 571, column: 11)
!9348 = !DILocation(line: 571, column: 16, scope: !9347)
!9349 = !DILocation(line: 571, column: 20, scope: !9347)
!9350 = !DILocation(line: 571, column: 25, scope: !9347)
!9351 = !DILocation(line: 571, column: 18, scope: !9347)
!9352 = !DILocation(line: 571, column: 11, scope: !9329)
!9353 = !DILocation(line: 571, column: 28, scope: !9347)
!9354 = !DILocation(line: 572, column: 11, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 572, column: 11)
!9356 = !DILocation(line: 572, column: 16, scope: !9355)
!9357 = !DILocation(line: 572, column: 20, scope: !9355)
!9358 = !DILocation(line: 572, column: 25, scope: !9355)
!9359 = !DILocation(line: 572, column: 18, scope: !9355)
!9360 = !DILocation(line: 572, column: 11, scope: !9347)
!9361 = !DILocation(line: 572, column: 28, scope: !9355)
!9362 = !DILocation(line: 574, column: 12, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 574, column: 12)
!9364 = distinct !DILexicalBlock(scope: !9355, file: !3, line: 573, column: 7)
!9365 = !DILocation(line: 574, column: 17, scope: !9363)
!9366 = !DILocation(line: 574, column: 21, scope: !9363)
!9367 = !DILocation(line: 574, column: 26, scope: !9363)
!9368 = !DILocation(line: 574, column: 19, scope: !9363)
!9369 = !DILocation(line: 574, column: 12, scope: !9364)
!9370 = !DILocation(line: 574, column: 29, scope: !9363)
!9371 = !DILocation(line: 575, column: 12, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 575, column: 12)
!9373 = !DILocation(line: 575, column: 17, scope: !9372)
!9374 = !DILocation(line: 575, column: 21, scope: !9372)
!9375 = !DILocation(line: 575, column: 26, scope: !9372)
!9376 = !DILocation(line: 575, column: 19, scope: !9372)
!9377 = !DILocation(line: 575, column: 12, scope: !9363)
!9378 = !DILocation(line: 575, column: 29, scope: !9372)
!9379 = !DILocation(line: 577, column: 13, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 577, column: 13)
!9381 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 576, column: 8)
!9382 = !DILocation(line: 577, column: 18, scope: !9380)
!9383 = !DILocation(line: 577, column: 22, scope: !9380)
!9384 = !DILocation(line: 577, column: 27, scope: !9380)
!9385 = !DILocation(line: 577, column: 20, scope: !9380)
!9386 = !DILocation(line: 577, column: 13, scope: !9381)
!9387 = !DILocation(line: 577, column: 30, scope: !9380)
!9388 = !DILocation(line: 578, column: 13, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9380, file: !3, line: 578, column: 13)
!9390 = !DILocation(line: 578, column: 18, scope: !9389)
!9391 = !DILocation(line: 578, column: 22, scope: !9389)
!9392 = !DILocation(line: 578, column: 27, scope: !9389)
!9393 = !DILocation(line: 578, column: 20, scope: !9389)
!9394 = !DILocation(line: 578, column: 13, scope: !9380)
!9395 = !DILocation(line: 578, column: 30, scope: !9389)
!9396 = !DILocation(line: 579, column: 9, scope: !9389)
!9397 = !DILocation(line: 582, column: 1, scope: !9329)
!9398 = distinct !DISubprogram(name: "knife_append_list_no_dup", scope: !3, file: !3, line: 318, type: !7281, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9399 = !DILocalVariable(name: "kcd", arg: 1, scope: !9398, file: !3, line: 318, type: !3512)
!9400 = !DILocation(line: 318, column: 56, scope: !9398)
!9401 = !DILocalVariable(name: "lst", arg: 2, scope: !9398, file: !3, line: 318, type: !1227)
!9402 = !DILocation(line: 318, column: 71, scope: !9398)
!9403 = !DILocalVariable(name: "elem", arg: 3, scope: !9398, file: !3, line: 318, type: !18)
!9404 = !DILocation(line: 318, column: 82, scope: !9398)
!9405 = !DILocation(line: 320, column: 16, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 320, column: 6)
!9407 = !DILocation(line: 320, column: 21, scope: !9406)
!9408 = !DILocation(line: 320, column: 7, scope: !9406)
!9409 = !DILocation(line: 320, column: 6, scope: !9398)
!9410 = !DILocation(line: 321, column: 21, scope: !9406)
!9411 = !DILocation(line: 321, column: 26, scope: !9406)
!9412 = !DILocation(line: 321, column: 31, scope: !9406)
!9413 = !DILocation(line: 321, column: 3, scope: !9406)
!9414 = !DILocation(line: 322, column: 1, scope: !9398)
!9415 = distinct !DISubprogram(name: "find_ref", scope: !3, file: !3, line: 306, type: !9416, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9416 = !DISubroutineType(types: !9417)
!9417 = !{!3251, !1227, !18}
!9418 = !DILocalVariable(name: "lb", arg: 1, scope: !9415, file: !3, line: 306, type: !1227)
!9419 = !DILocation(line: 306, column: 32, scope: !9415)
!9420 = !DILocalVariable(name: "ref", arg: 2, scope: !9415, file: !3, line: 306, type: !18)
!9421 = !DILocation(line: 306, column: 42, scope: !9415)
!9422 = !DILocalVariable(name: "ref1", scope: !9415, file: !3, line: 308, type: !3251)
!9423 = !DILocation(line: 308, column: 7, scope: !9415)
!9424 = !DILocation(line: 310, column: 14, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 310, column: 2)
!9426 = !DILocation(line: 310, column: 18, scope: !9425)
!9427 = !DILocation(line: 310, column: 12, scope: !9425)
!9428 = !DILocation(line: 310, column: 7, scope: !9425)
!9429 = !DILocation(line: 310, column: 25, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9425, file: !3, line: 310, column: 2)
!9431 = !DILocation(line: 310, column: 2, scope: !9425)
!9432 = !DILocation(line: 311, column: 7, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9434, file: !3, line: 311, column: 7)
!9434 = distinct !DILexicalBlock(scope: !9430, file: !3, line: 310, column: 50)
!9435 = !DILocation(line: 311, column: 13, scope: !9433)
!9436 = !DILocation(line: 311, column: 20, scope: !9433)
!9437 = !DILocation(line: 311, column: 17, scope: !9433)
!9438 = !DILocation(line: 311, column: 7, scope: !9434)
!9439 = !DILocation(line: 312, column: 11, scope: !9433)
!9440 = !DILocation(line: 312, column: 4, scope: !9433)
!9441 = !DILocation(line: 313, column: 2, scope: !9434)
!9442 = !DILocation(line: 310, column: 38, scope: !9430)
!9443 = !DILocation(line: 310, column: 44, scope: !9430)
!9444 = !DILocation(line: 310, column: 36, scope: !9430)
!9445 = !DILocation(line: 310, column: 2, scope: !9430)
!9446 = distinct !{!9446, !9431, !9447}
!9447 = !DILocation(line: 313, column: 2, scope: !9425)
!9448 = !DILocation(line: 315, column: 2, scope: !9415)
!9449 = !DILocation(line: 316, column: 1, scope: !9415)
!9450 = distinct !DISubprogram(name: "knife_add_single_cut", scope: !3, file: !3, line: 670, type: !9451, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9451 = !DISubroutineType(types: !9452)
!9452 = !{null, !3512, !2850, !2850, !2730}
!9453 = !DILocalVariable(name: "kcd", arg: 1, scope: !9450, file: !3, line: 670, type: !3512)
!9454 = !DILocation(line: 670, column: 52, scope: !9450)
!9455 = !DILocalVariable(name: "lh1", arg: 2, scope: !9450, file: !3, line: 670, type: !2850)
!9456 = !DILocation(line: 670, column: 71, scope: !9450)
!9457 = !DILocalVariable(name: "lh2", arg: 3, scope: !9450, file: !3, line: 670, type: !2850)
!9458 = !DILocation(line: 670, column: 90, scope: !9450)
!9459 = !DILocalVariable(name: "f", arg: 4, scope: !9450, file: !3, line: 670, type: !2730)
!9460 = !DILocation(line: 670, column: 103, scope: !9450)
!9461 = !DILocalVariable(name: "kfe", scope: !9450, file: !3, line: 672, type: !2861)
!9462 = !DILocation(line: 672, column: 13, scope: !9450)
!9463 = !DILocalVariable(name: "kfe2", scope: !9450, file: !3, line: 672, type: !2861)
!9464 = !DILocation(line: 672, column: 19, scope: !9450)
!9465 = !DILocation(line: 674, column: 7, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9450, file: !3, line: 674, column: 6)
!9467 = !DILocation(line: 674, column: 12, scope: !9466)
!9468 = !DILocation(line: 674, column: 14, scope: !9466)
!9469 = !DILocation(line: 674, column: 17, scope: !9466)
!9470 = !DILocation(line: 674, column: 22, scope: !9466)
!9471 = !DILocation(line: 674, column: 27, scope: !9466)
!9472 = !DILocation(line: 674, column: 32, scope: !9466)
!9473 = !DILocation(line: 674, column: 24, scope: !9466)
!9474 = !DILocation(line: 674, column: 35, scope: !9466)
!9475 = !DILocation(line: 675, column: 7, scope: !9466)
!9476 = !DILocation(line: 675, column: 12, scope: !9466)
!9477 = !DILocation(line: 675, column: 16, scope: !9466)
!9478 = !DILocation(line: 675, column: 19, scope: !9466)
!9479 = !DILocation(line: 675, column: 24, scope: !9466)
!9480 = !DILocation(line: 675, column: 31, scope: !9466)
!9481 = !DILocation(line: 675, column: 36, scope: !9466)
!9482 = !DILocation(line: 675, column: 28, scope: !9466)
!9483 = !DILocation(line: 674, column: 6, scope: !9450)
!9484 = !DILocation(line: 677, column: 3, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 676, column: 2)
!9486 = !DILocation(line: 681, column: 7, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9450, file: !3, line: 681, column: 6)
!9488 = !DILocation(line: 681, column: 12, scope: !9487)
!9489 = !DILocation(line: 681, column: 14, scope: !9487)
!9490 = !DILocation(line: 681, column: 18, scope: !9487)
!9491 = !DILocation(line: 681, column: 23, scope: !9487)
!9492 = !DILocation(line: 681, column: 28, scope: !9487)
!9493 = !DILocation(line: 681, column: 32, scope: !9487)
!9494 = !DILocation(line: 681, column: 37, scope: !9487)
!9495 = !DILocation(line: 681, column: 39, scope: !9487)
!9496 = !DILocation(line: 681, column: 43, scope: !9487)
!9497 = !DILocation(line: 681, column: 48, scope: !9487)
!9498 = !DILocation(line: 681, column: 6, scope: !9450)
!9499 = !DILocation(line: 682, column: 33, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 682, column: 7)
!9501 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 681, column: 54)
!9502 = !DILocation(line: 682, column: 38, scope: !9500)
!9503 = !DILocation(line: 682, column: 41, scope: !9500)
!9504 = !DILocation(line: 682, column: 46, scope: !9500)
!9505 = !DILocation(line: 682, column: 49, scope: !9500)
!9506 = !DILocation(line: 682, column: 8, scope: !9500)
!9507 = !DILocation(line: 682, column: 7, scope: !9501)
!9508 = !DILocation(line: 683, column: 4, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 682, column: 53)
!9510 = !DILocation(line: 685, column: 2, scope: !9501)
!9511 = !DILocation(line: 687, column: 23, scope: !9450)
!9512 = !DILocation(line: 687, column: 8, scope: !9450)
!9513 = !DILocation(line: 687, column: 6, scope: !9450)
!9514 = !DILocation(line: 688, column: 2, scope: !9450)
!9515 = !DILocation(line: 688, column: 7, scope: !9450)
!9516 = !DILocation(line: 688, column: 12, scope: !9450)
!9517 = !DILocation(line: 689, column: 15, scope: !9450)
!9518 = !DILocation(line: 689, column: 2, scope: !9450)
!9519 = !DILocation(line: 689, column: 7, scope: !9450)
!9520 = !DILocation(line: 689, column: 13, scope: !9450)
!9521 = !DILocation(line: 691, column: 6, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9450, file: !3, line: 691, column: 6)
!9523 = !DILocation(line: 691, column: 11, scope: !9522)
!9524 = !DILocation(line: 691, column: 6, scope: !9450)
!9525 = !DILocation(line: 692, column: 13, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9522, file: !3, line: 691, column: 14)
!9527 = !DILocation(line: 692, column: 18, scope: !9526)
!9528 = !DILocation(line: 692, column: 3, scope: !9526)
!9529 = !DILocation(line: 692, column: 8, scope: !9526)
!9530 = !DILocation(line: 692, column: 11, scope: !9526)
!9531 = !DILocation(line: 693, column: 2, scope: !9526)
!9532 = !DILocation(line: 694, column: 11, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9522, file: !3, line: 694, column: 11)
!9534 = !DILocation(line: 694, column: 16, scope: !9533)
!9535 = !DILocation(line: 694, column: 11, scope: !9522)
!9536 = !DILocation(line: 695, column: 30, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 694, column: 21)
!9538 = !DILocation(line: 695, column: 35, scope: !9537)
!9539 = !DILocation(line: 695, column: 40, scope: !9537)
!9540 = !DILocation(line: 695, column: 45, scope: !9537)
!9541 = !DILocation(line: 695, column: 50, scope: !9537)
!9542 = !DILocation(line: 695, column: 55, scope: !9537)
!9543 = !DILocation(line: 695, column: 60, scope: !9537)
!9544 = !DILocation(line: 695, column: 13, scope: !9537)
!9545 = !DILocation(line: 695, column: 3, scope: !9537)
!9546 = !DILocation(line: 695, column: 8, scope: !9537)
!9547 = !DILocation(line: 695, column: 11, scope: !9537)
!9548 = !DILocation(line: 696, column: 12, scope: !9537)
!9549 = !DILocation(line: 696, column: 17, scope: !9537)
!9550 = !DILocation(line: 696, column: 3, scope: !9537)
!9551 = !DILocation(line: 696, column: 8, scope: !9537)
!9552 = !DILocation(line: 696, column: 10, scope: !9537)
!9553 = !DILocation(line: 697, column: 2, scope: !9537)
!9554 = !DILocation(line: 700, column: 28, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 698, column: 7)
!9556 = !DILocation(line: 700, column: 33, scope: !9555)
!9557 = !DILocation(line: 700, column: 38, scope: !9555)
!9558 = !DILocation(line: 700, column: 43, scope: !9555)
!9559 = !DILocation(line: 700, column: 48, scope: !9555)
!9560 = !DILocation(line: 700, column: 13, scope: !9555)
!9561 = !DILocation(line: 700, column: 3, scope: !9555)
!9562 = !DILocation(line: 700, column: 8, scope: !9555)
!9563 = !DILocation(line: 700, column: 11, scope: !9555)
!9564 = !DILocation(line: 701, column: 3, scope: !9555)
!9565 = !DILocation(line: 701, column: 8, scope: !9555)
!9566 = !DILocation(line: 701, column: 12, scope: !9555)
!9567 = !DILocation(line: 701, column: 17, scope: !9555)
!9568 = !DILocation(line: 702, column: 3, scope: !9555)
!9569 = !DILocation(line: 702, column: 8, scope: !9555)
!9570 = !DILocation(line: 702, column: 12, scope: !9555)
!9571 = !DILocation(line: 702, column: 20, scope: !9555)
!9572 = !DILocation(line: 703, column: 21, scope: !9555)
!9573 = !DILocation(line: 703, column: 27, scope: !9555)
!9574 = !DILocation(line: 703, column: 32, scope: !9555)
!9575 = !DILocation(line: 703, column: 36, scope: !9555)
!9576 = !DILocation(line: 703, column: 43, scope: !9555)
!9577 = !DILocation(line: 703, column: 48, scope: !9555)
!9578 = !DILocation(line: 703, column: 3, scope: !9555)
!9579 = !DILocation(line: 704, column: 12, scope: !9555)
!9580 = !DILocation(line: 704, column: 17, scope: !9555)
!9581 = !DILocation(line: 704, column: 3, scope: !9555)
!9582 = !DILocation(line: 704, column: 8, scope: !9555)
!9583 = !DILocation(line: 704, column: 10, scope: !9555)
!9584 = !DILocation(line: 707, column: 6, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9450, file: !3, line: 707, column: 6)
!9586 = !DILocation(line: 707, column: 11, scope: !9585)
!9587 = !DILocation(line: 707, column: 6, scope: !9450)
!9588 = !DILocation(line: 708, column: 13, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9585, file: !3, line: 707, column: 14)
!9590 = !DILocation(line: 708, column: 18, scope: !9589)
!9591 = !DILocation(line: 708, column: 3, scope: !9589)
!9592 = !DILocation(line: 708, column: 8, scope: !9589)
!9593 = !DILocation(line: 708, column: 11, scope: !9589)
!9594 = !DILocation(line: 709, column: 2, scope: !9589)
!9595 = !DILocation(line: 710, column: 11, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9585, file: !3, line: 710, column: 11)
!9597 = !DILocation(line: 710, column: 16, scope: !9596)
!9598 = !DILocation(line: 710, column: 11, scope: !9585)
!9599 = !DILocation(line: 711, column: 30, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9596, file: !3, line: 710, column: 21)
!9601 = !DILocation(line: 711, column: 35, scope: !9600)
!9602 = !DILocation(line: 711, column: 40, scope: !9600)
!9603 = !DILocation(line: 711, column: 45, scope: !9600)
!9604 = !DILocation(line: 711, column: 50, scope: !9600)
!9605 = !DILocation(line: 711, column: 55, scope: !9600)
!9606 = !DILocation(line: 711, column: 60, scope: !9600)
!9607 = !DILocation(line: 711, column: 13, scope: !9600)
!9608 = !DILocation(line: 711, column: 3, scope: !9600)
!9609 = !DILocation(line: 711, column: 8, scope: !9600)
!9610 = !DILocation(line: 711, column: 11, scope: !9600)
!9611 = !DILocation(line: 712, column: 12, scope: !9600)
!9612 = !DILocation(line: 712, column: 17, scope: !9600)
!9613 = !DILocation(line: 712, column: 3, scope: !9600)
!9614 = !DILocation(line: 712, column: 8, scope: !9600)
!9615 = !DILocation(line: 712, column: 10, scope: !9600)
!9616 = !DILocation(line: 713, column: 2, scope: !9600)
!9617 = !DILocation(line: 716, column: 28, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9596, file: !3, line: 714, column: 7)
!9619 = !DILocation(line: 716, column: 33, scope: !9618)
!9620 = !DILocation(line: 716, column: 38, scope: !9618)
!9621 = !DILocation(line: 716, column: 43, scope: !9618)
!9622 = !DILocation(line: 716, column: 48, scope: !9618)
!9623 = !DILocation(line: 716, column: 13, scope: !9618)
!9624 = !DILocation(line: 716, column: 3, scope: !9618)
!9625 = !DILocation(line: 716, column: 8, scope: !9618)
!9626 = !DILocation(line: 716, column: 11, scope: !9618)
!9627 = !DILocation(line: 717, column: 3, scope: !9618)
!9628 = !DILocation(line: 717, column: 8, scope: !9618)
!9629 = !DILocation(line: 717, column: 12, scope: !9618)
!9630 = !DILocation(line: 717, column: 17, scope: !9618)
!9631 = !DILocation(line: 718, column: 3, scope: !9618)
!9632 = !DILocation(line: 718, column: 8, scope: !9618)
!9633 = !DILocation(line: 718, column: 12, scope: !9618)
!9634 = !DILocation(line: 718, column: 20, scope: !9618)
!9635 = !DILocation(line: 719, column: 21, scope: !9618)
!9636 = !DILocation(line: 719, column: 27, scope: !9618)
!9637 = !DILocation(line: 719, column: 32, scope: !9618)
!9638 = !DILocation(line: 719, column: 36, scope: !9618)
!9639 = !DILocation(line: 719, column: 43, scope: !9618)
!9640 = !DILocation(line: 719, column: 48, scope: !9618)
!9641 = !DILocation(line: 719, column: 3, scope: !9618)
!9642 = !DILocation(line: 720, column: 12, scope: !9618)
!9643 = !DILocation(line: 720, column: 17, scope: !9618)
!9644 = !DILocation(line: 720, column: 3, scope: !9618)
!9645 = !DILocation(line: 720, column: 8, scope: !9618)
!9646 = !DILocation(line: 720, column: 10, scope: !9618)
!9647 = !DILocation(line: 723, column: 26, scope: !9450)
!9648 = !DILocation(line: 723, column: 31, scope: !9450)
!9649 = !DILocation(line: 723, column: 2, scope: !9450)
!9650 = !DILocation(line: 726, column: 6, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9450, file: !3, line: 726, column: 6)
!9652 = !DILocation(line: 726, column: 11, scope: !9651)
!9653 = !DILocation(line: 726, column: 17, scope: !9651)
!9654 = !DILocation(line: 726, column: 31, scope: !9651)
!9655 = !DILocation(line: 726, column: 36, scope: !9651)
!9656 = !DILocation(line: 726, column: 43, scope: !9651)
!9657 = !DILocation(line: 726, column: 48, scope: !9651)
!9658 = !DILocation(line: 726, column: 21, scope: !9651)
!9659 = !DILocation(line: 726, column: 6, scope: !9450)
!9660 = !DILocation(line: 727, column: 26, scope: !9651)
!9661 = !DILocation(line: 727, column: 31, scope: !9651)
!9662 = !DILocation(line: 727, column: 36, scope: !9651)
!9663 = !DILocation(line: 727, column: 41, scope: !9651)
!9664 = !DILocation(line: 727, column: 3, scope: !9651)
!9665 = !DILocation(line: 729, column: 1, scope: !9450)
!9666 = distinct !DISubprogram(name: "knife_verts_edge_in_face", scope: !3, file: !3, line: 2299, type: !9667, scopeLine: 2300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9667 = !DISubroutineType(types: !9668)
!9668 = !{!1053, !2866, !2866, !2730}
!9669 = !DILocalVariable(name: "v1", arg: 1, scope: !9666, file: !3, line: 2299, type: !2866)
!9670 = !DILocation(line: 2299, column: 49, scope: !9666)
!9671 = !DILocalVariable(name: "v2", arg: 2, scope: !9666, file: !3, line: 2299, type: !2866)
!9672 = !DILocation(line: 2299, column: 64, scope: !9666)
!9673 = !DILocalVariable(name: "f", arg: 3, scope: !9666, file: !3, line: 2299, type: !2730)
!9674 = !DILocation(line: 2299, column: 76, scope: !9666)
!9675 = !DILocalVariable(name: "v1_inside", scope: !9666, file: !3, line: 2301, type: !1053)
!9676 = !DILocation(line: 2301, column: 7, scope: !9666)
!9677 = !DILocalVariable(name: "v2_inside", scope: !9666, file: !3, line: 2301, type: !1053)
!9678 = !DILocation(line: 2301, column: 18, scope: !9666)
!9679 = !DILocalVariable(name: "v1_inface", scope: !9666, file: !3, line: 2302, type: !1053)
!9680 = !DILocation(line: 2302, column: 7, scope: !9666)
!9681 = !DILocalVariable(name: "v2_inface", scope: !9666, file: !3, line: 2302, type: !1053)
!9682 = !DILocation(line: 2302, column: 18, scope: !9666)
!9683 = !DILocation(line: 2304, column: 7, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 2304, column: 6)
!9685 = !DILocation(line: 2304, column: 9, scope: !9684)
!9686 = !DILocation(line: 2304, column: 13, scope: !9684)
!9687 = !DILocation(line: 2304, column: 16, scope: !9684)
!9688 = !DILocation(line: 2304, column: 20, scope: !9684)
!9689 = !DILocation(line: 2304, column: 6, scope: !9666)
!9690 = !DILocation(line: 2305, column: 3, scope: !9684)
!9691 = !DILocation(line: 2308, column: 14, scope: !9666)
!9692 = !DILocation(line: 2308, column: 18, scope: !9666)
!9693 = !DILocation(line: 2308, column: 38, scope: !9666)
!9694 = !DILocation(line: 2308, column: 41, scope: !9666)
!9695 = !DILocation(line: 2308, column: 45, scope: !9666)
!9696 = !DILocation(line: 2308, column: 22, scope: !9666)
!9697 = !DILocation(line: 2308, column: 12, scope: !9666)
!9698 = !DILocation(line: 2309, column: 14, scope: !9666)
!9699 = !DILocation(line: 2309, column: 18, scope: !9666)
!9700 = !DILocation(line: 2309, column: 38, scope: !9666)
!9701 = !DILocation(line: 2309, column: 41, scope: !9666)
!9702 = !DILocation(line: 2309, column: 45, scope: !9666)
!9703 = !DILocation(line: 2309, column: 22, scope: !9666)
!9704 = !DILocation(line: 2309, column: 12, scope: !9666)
!9705 = !DILocation(line: 2312, column: 14, scope: !9666)
!9706 = !DILocation(line: 2312, column: 60, scope: !9666)
!9707 = !DILocation(line: 2312, column: 63, scope: !9666)
!9708 = !DILocation(line: 2312, column: 67, scope: !9666)
!9709 = !DILocation(line: 2312, column: 34, scope: !9666)
!9710 = !DILocation(line: 2312, column: 12, scope: !9666)
!9711 = !DILocation(line: 2313, column: 14, scope: !9666)
!9712 = !DILocation(line: 2313, column: 60, scope: !9666)
!9713 = !DILocation(line: 2313, column: 63, scope: !9666)
!9714 = !DILocation(line: 2313, column: 67, scope: !9666)
!9715 = !DILocation(line: 2313, column: 34, scope: !9666)
!9716 = !DILocation(line: 2313, column: 12, scope: !9666)
!9717 = !DILocation(line: 2314, column: 7, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 2314, column: 6)
!9719 = !DILocation(line: 2314, column: 17, scope: !9718)
!9720 = !DILocation(line: 2314, column: 20, scope: !9718)
!9721 = !DILocation(line: 2314, column: 31, scope: !9718)
!9722 = !DILocation(line: 2315, column: 7, scope: !9718)
!9723 = !DILocation(line: 2315, column: 17, scope: !9718)
!9724 = !DILocation(line: 2315, column: 20, scope: !9718)
!9725 = !DILocation(line: 2315, column: 31, scope: !9718)
!9726 = !DILocation(line: 2316, column: 7, scope: !9718)
!9727 = !DILocation(line: 2316, column: 17, scope: !9718)
!9728 = !DILocation(line: 2316, column: 20, scope: !9718)
!9729 = !DILocation(line: 2314, column: 6, scope: !9666)
!9730 = !DILocation(line: 2318, column: 3, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 2317, column: 2)
!9732 = !DILocation(line: 2321, column: 6, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 2321, column: 6)
!9734 = !DILocation(line: 2321, column: 16, scope: !9733)
!9735 = !DILocation(line: 2321, column: 19, scope: !9733)
!9736 = !DILocation(line: 2321, column: 6, scope: !9666)
!9737 = !DILocalVariable(name: "mid", scope: !9738, file: !3, line: 2322, type: !555)
!9738 = distinct !DILexicalBlock(scope: !9733, file: !3, line: 2321, column: 30)
!9739 = !DILocation(line: 2322, column: 9, scope: !9738)
!9740 = !DILocation(line: 2327, column: 15, scope: !9738)
!9741 = !DILocation(line: 2327, column: 20, scope: !9738)
!9742 = !DILocation(line: 2327, column: 24, scope: !9738)
!9743 = !DILocation(line: 2327, column: 28, scope: !9738)
!9744 = !DILocation(line: 2327, column: 32, scope: !9738)
!9745 = !DILocation(line: 2327, column: 3, scope: !9738)
!9746 = !DILocation(line: 2328, column: 36, scope: !9738)
!9747 = !DILocation(line: 2328, column: 39, scope: !9738)
!9748 = !DILocation(line: 2328, column: 10, scope: !9738)
!9749 = !DILocation(line: 2328, column: 3, scope: !9738)
!9750 = !DILocation(line: 2330, column: 2, scope: !9666)
!9751 = !DILocation(line: 2331, column: 1, scope: !9666)
!9752 = distinct !DISubprogram(name: "knife_split_edge", scope: !3, file: !3, line: 518, type: !9753, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9753 = !DISubroutineType(types: !9754)
!9754 = !{!2866, !3512, !2861, !997, !997, !9755}
!9755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!9756 = !DILocalVariable(name: "kcd", arg: 1, scope: !9752, file: !3, line: 519, type: !3512)
!9757 = !DILocation(line: 519, column: 27, scope: !9752)
!9758 = !DILocalVariable(name: "kfe", arg: 2, scope: !9752, file: !3, line: 519, type: !2861)
!9759 = !DILocation(line: 519, column: 43, scope: !9752)
!9760 = !DILocalVariable(name: "co", arg: 3, scope: !9752, file: !3, line: 520, type: !997)
!9761 = !DILocation(line: 520, column: 21, scope: !9752)
!9762 = !DILocalVariable(name: "cageco", arg: 4, scope: !9752, file: !3, line: 520, type: !997)
!9763 = !DILocation(line: 520, column: 40, scope: !9752)
!9764 = !DILocalVariable(name: "r_kfe", arg: 5, scope: !9752, file: !3, line: 521, type: !9755)
!9765 = !DILocation(line: 521, column: 21, scope: !9752)
!9766 = !DILocalVariable(name: "newkfe", scope: !9752, file: !3, line: 523, type: !2861)
!9767 = !DILocation(line: 523, column: 13, scope: !9752)
!9768 = !DILocation(line: 523, column: 37, scope: !9752)
!9769 = !DILocation(line: 523, column: 22, scope: !9752)
!9770 = !DILocalVariable(name: "ref", scope: !9752, file: !3, line: 524, type: !3251)
!9771 = !DILocation(line: 524, column: 7, scope: !9752)
!9772 = !DILocalVariable(name: "f", scope: !9752, file: !3, line: 525, type: !2730)
!9773 = !DILocation(line: 525, column: 10, scope: !9752)
!9774 = !DILocation(line: 527, column: 15, scope: !9752)
!9775 = !DILocation(line: 527, column: 20, scope: !9752)
!9776 = !DILocation(line: 527, column: 2, scope: !9752)
!9777 = !DILocation(line: 527, column: 10, scope: !9752)
!9778 = !DILocation(line: 527, column: 13, scope: !9752)
!9779 = !DILocation(line: 528, column: 30, scope: !9752)
!9780 = !DILocation(line: 528, column: 35, scope: !9752)
!9781 = !DILocation(line: 528, column: 39, scope: !9752)
!9782 = !DILocation(line: 528, column: 15, scope: !9752)
!9783 = !DILocation(line: 528, column: 2, scope: !9752)
!9784 = !DILocation(line: 528, column: 10, scope: !9752)
!9785 = !DILocation(line: 528, column: 13, scope: !9752)
!9786 = !DILocation(line: 529, column: 2, scope: !9752)
!9787 = !DILocation(line: 529, column: 10, scope: !9752)
!9788 = !DILocation(line: 529, column: 14, scope: !9752)
!9789 = !DILocation(line: 529, column: 19, scope: !9752)
!9790 = !DILocation(line: 530, column: 6, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9752, file: !3, line: 530, column: 6)
!9792 = !DILocation(line: 530, column: 11, scope: !9791)
!9793 = !DILocation(line: 530, column: 6, scope: !9752)
!9794 = !DILocation(line: 531, column: 32, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9791, file: !3, line: 530, column: 14)
!9796 = !DILocation(line: 531, column: 37, scope: !9795)
!9797 = !DILocation(line: 531, column: 45, scope: !9795)
!9798 = !DILocation(line: 531, column: 49, scope: !9795)
!9799 = !DILocation(line: 531, column: 54, scope: !9795)
!9800 = !DILocation(line: 531, column: 3, scope: !9795)
!9801 = !DILocation(line: 532, column: 2, scope: !9795)
!9802 = !DILocation(line: 537, column: 31, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9791, file: !3, line: 533, column: 7)
!9804 = !DILocation(line: 537, column: 36, scope: !9803)
!9805 = !DILocation(line: 537, column: 40, scope: !9803)
!9806 = !DILocation(line: 537, column: 48, scope: !9803)
!9807 = !DILocation(line: 537, column: 53, scope: !9803)
!9808 = !DILocation(line: 537, column: 57, scope: !9803)
!9809 = !DILocation(line: 537, column: 7, scope: !9803)
!9810 = !DILocation(line: 537, column: 5, scope: !9803)
!9811 = !DILocation(line: 538, column: 7, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9803, file: !3, line: 538, column: 7)
!9813 = !DILocation(line: 538, column: 7, scope: !9803)
!9814 = !DILocation(line: 539, column: 22, scope: !9812)
!9815 = !DILocation(line: 539, column: 28, scope: !9812)
!9816 = !DILocation(line: 539, column: 36, scope: !9812)
!9817 = !DILocation(line: 539, column: 40, scope: !9812)
!9818 = !DILocation(line: 539, column: 47, scope: !9812)
!9819 = !DILocation(line: 539, column: 4, scope: !9812)
!9820 = !DILocation(line: 541, column: 18, scope: !9752)
!9821 = !DILocation(line: 541, column: 23, scope: !9752)
!9822 = !DILocation(line: 541, column: 2, scope: !9752)
!9823 = !DILocation(line: 541, column: 10, scope: !9752)
!9824 = !DILocation(line: 541, column: 16, scope: !9752)
!9825 = !DILocation(line: 543, column: 18, scope: !9752)
!9826 = !DILocation(line: 543, column: 23, scope: !9752)
!9827 = !DILocation(line: 543, column: 27, scope: !9752)
!9828 = !DILocation(line: 543, column: 34, scope: !9752)
!9829 = !DILocation(line: 543, column: 8, scope: !9752)
!9830 = !DILocation(line: 543, column: 6, scope: !9752)
!9831 = !DILocation(line: 544, column: 15, scope: !9752)
!9832 = !DILocation(line: 544, column: 20, scope: !9752)
!9833 = !DILocation(line: 544, column: 24, scope: !9752)
!9834 = !DILocation(line: 544, column: 31, scope: !9752)
!9835 = !DILocation(line: 544, column: 2, scope: !9752)
!9836 = !DILocation(line: 546, column: 12, scope: !9752)
!9837 = !DILocation(line: 546, column: 20, scope: !9752)
!9838 = !DILocation(line: 546, column: 2, scope: !9752)
!9839 = !DILocation(line: 546, column: 7, scope: !9752)
!9840 = !DILocation(line: 546, column: 10, scope: !9752)
!9841 = !DILocation(line: 547, column: 15, scope: !9752)
!9842 = !DILocation(line: 547, column: 20, scope: !9752)
!9843 = !DILocation(line: 547, column: 24, scope: !9752)
!9844 = !DILocation(line: 547, column: 31, scope: !9752)
!9845 = !DILocation(line: 547, column: 2, scope: !9752)
!9846 = !DILocation(line: 549, column: 13, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9752, file: !3, line: 549, column: 2)
!9848 = !DILocation(line: 549, column: 18, scope: !9847)
!9849 = !DILocation(line: 549, column: 24, scope: !9847)
!9850 = !DILocation(line: 549, column: 11, scope: !9847)
!9851 = !DILocation(line: 549, column: 7, scope: !9847)
!9852 = !DILocation(line: 549, column: 31, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 549, column: 2)
!9854 = !DILocation(line: 549, column: 2, scope: !9847)
!9855 = !DILocation(line: 550, column: 26, scope: !9853)
!9856 = !DILocation(line: 550, column: 31, scope: !9853)
!9857 = !DILocation(line: 550, column: 39, scope: !9853)
!9858 = !DILocation(line: 550, column: 44, scope: !9853)
!9859 = !DILocation(line: 550, column: 3, scope: !9853)
!9860 = !DILocation(line: 549, column: 42, scope: !9853)
!9861 = !DILocation(line: 549, column: 47, scope: !9853)
!9862 = !DILocation(line: 549, column: 40, scope: !9853)
!9863 = !DILocation(line: 549, column: 2, scope: !9853)
!9864 = distinct !{!9864, !9854, !9865}
!9865 = !DILocation(line: 550, column: 47, scope: !9847)
!9866 = !DILocation(line: 552, column: 26, scope: !9752)
!9867 = !DILocation(line: 552, column: 31, scope: !9752)
!9868 = !DILocation(line: 552, column: 2, scope: !9752)
!9869 = !DILocation(line: 554, column: 17, scope: !9752)
!9870 = !DILocation(line: 554, column: 22, scope: !9752)
!9871 = !DILocation(line: 554, column: 2, scope: !9752)
!9872 = !DILocation(line: 554, column: 10, scope: !9752)
!9873 = !DILocation(line: 554, column: 15, scope: !9752)
!9874 = !DILocation(line: 555, column: 14, scope: !9752)
!9875 = !DILocation(line: 555, column: 19, scope: !9752)
!9876 = !DILocation(line: 555, column: 2, scope: !9752)
!9877 = !DILocation(line: 555, column: 10, scope: !9752)
!9878 = !DILocation(line: 555, column: 12, scope: !9752)
!9879 = !DILocation(line: 557, column: 11, scope: !9752)
!9880 = !DILocation(line: 557, column: 3, scope: !9752)
!9881 = !DILocation(line: 557, column: 9, scope: !9752)
!9882 = !DILocation(line: 559, column: 9, scope: !9752)
!9883 = !DILocation(line: 559, column: 17, scope: !9752)
!9884 = !DILocation(line: 559, column: 2, scope: !9752)
!9885 = distinct !DISubprogram(name: "knife_edge_append_face", scope: !3, file: !3, line: 512, type: !9886, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9886 = !DISubroutineType(types: !9887)
!9887 = !{null, !3512, !2861, !2730}
!9888 = !DILocalVariable(name: "kcd", arg: 1, scope: !9885, file: !3, line: 512, type: !3512)
!9889 = !DILocation(line: 512, column: 54, scope: !9885)
!9890 = !DILocalVariable(name: "kfe", arg: 2, scope: !9885, file: !3, line: 512, type: !2861)
!9891 = !DILocation(line: 512, column: 70, scope: !9885)
!9892 = !DILocalVariable(name: "f", arg: 3, scope: !9885, file: !3, line: 512, type: !2730)
!9893 = !DILocation(line: 512, column: 83, scope: !9885)
!9894 = !DILocation(line: 514, column: 20, scope: !9885)
!9895 = !DILocation(line: 514, column: 47, scope: !9885)
!9896 = !DILocation(line: 514, column: 52, scope: !9885)
!9897 = !DILocation(line: 514, column: 25, scope: !9885)
!9898 = !DILocation(line: 514, column: 56, scope: !9885)
!9899 = !DILocation(line: 514, column: 2, scope: !9885)
!9900 = !DILocation(line: 515, column: 20, scope: !9885)
!9901 = !DILocation(line: 515, column: 26, scope: !9885)
!9902 = !DILocation(line: 515, column: 31, scope: !9885)
!9903 = !DILocation(line: 515, column: 38, scope: !9885)
!9904 = !DILocation(line: 515, column: 2, scope: !9885)
!9905 = !DILocation(line: 516, column: 1, scope: !9885)
!9906 = distinct !DISubprogram(name: "knife_add_edge_faces_to_vert", scope: !3, file: !3, line: 337, type: !9907, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9907 = !DISubroutineType(types: !9908)
!9908 = !{null, !3512, !2866, !2726}
!9909 = !DILocalVariable(name: "kcd", arg: 1, scope: !9906, file: !3, line: 337, type: !3512)
!9910 = !DILocation(line: 337, column: 60, scope: !9906)
!9911 = !DILocalVariable(name: "kfv", arg: 2, scope: !9906, file: !3, line: 337, type: !2866)
!9912 = !DILocation(line: 337, column: 76, scope: !9906)
!9913 = !DILocalVariable(name: "e", arg: 3, scope: !9906, file: !3, line: 337, type: !2726)
!9914 = !DILocation(line: 337, column: 89, scope: !9906)
!9915 = !DILocalVariable(name: "bmiter", scope: !9906, file: !3, line: 339, type: !3967)
!9916 = !DILocation(line: 339, column: 9, scope: !9906)
!9917 = !DILocalVariable(name: "f", scope: !9906, file: !3, line: 340, type: !2730)
!9918 = !DILocation(line: 340, column: 10, scope: !9906)
!9919 = !DILocation(line: 342, column: 2, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 342, column: 2)
!9921 = !DILocation(line: 342, column: 2, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 342, column: 2)
!9923 = !DILocation(line: 343, column: 21, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9922, file: !3, line: 342, column: 49)
!9925 = !DILocation(line: 343, column: 27, scope: !9924)
!9926 = !DILocation(line: 343, column: 32, scope: !9924)
!9927 = !DILocation(line: 343, column: 39, scope: !9924)
!9928 = !DILocation(line: 343, column: 3, scope: !9924)
!9929 = !DILocation(line: 344, column: 2, scope: !9924)
!9930 = distinct !{!9930, !9919, !9931}
!9931 = !DILocation(line: 344, column: 2, scope: !9920)
!9932 = !DILocation(line: 345, column: 1, scope: !9906)
!9933 = distinct !DISubprogram(name: "knife_find_common_face", scope: !3, file: !3, line: 349, type: !9934, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9934 = !DISubroutineType(types: !9935)
!9935 = !{!2730, !1227, !1227}
!9936 = !DILocalVariable(name: "faces1", arg: 1, scope: !9933, file: !3, line: 349, type: !1227)
!9937 = !DILocation(line: 349, column: 49, scope: !9933)
!9938 = !DILocalVariable(name: "faces2", arg: 2, scope: !9933, file: !3, line: 349, type: !1227)
!9939 = !DILocation(line: 349, column: 67, scope: !9933)
!9940 = !DILocalVariable(name: "ref1", scope: !9933, file: !3, line: 351, type: !3251)
!9941 = !DILocation(line: 351, column: 7, scope: !9933)
!9942 = !DILocalVariable(name: "ref2", scope: !9933, file: !3, line: 351, type: !3251)
!9943 = !DILocation(line: 351, column: 14, scope: !9933)
!9944 = !DILocation(line: 353, column: 14, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 353, column: 2)
!9946 = !DILocation(line: 353, column: 22, scope: !9945)
!9947 = !DILocation(line: 353, column: 12, scope: !9945)
!9948 = !DILocation(line: 353, column: 7, scope: !9945)
!9949 = !DILocation(line: 353, column: 29, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 353, column: 2)
!9951 = !DILocation(line: 353, column: 2, scope: !9945)
!9952 = !DILocation(line: 354, column: 15, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 354, column: 3)
!9954 = distinct !DILexicalBlock(scope: !9950, file: !3, line: 353, column: 54)
!9955 = !DILocation(line: 354, column: 23, scope: !9953)
!9956 = !DILocation(line: 354, column: 13, scope: !9953)
!9957 = !DILocation(line: 354, column: 8, scope: !9953)
!9958 = !DILocation(line: 354, column: 30, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 354, column: 3)
!9960 = !DILocation(line: 354, column: 3, scope: !9953)
!9961 = !DILocation(line: 355, column: 8, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9963, file: !3, line: 355, column: 8)
!9963 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 354, column: 55)
!9964 = !DILocation(line: 355, column: 14, scope: !9962)
!9965 = !DILocation(line: 355, column: 21, scope: !9962)
!9966 = !DILocation(line: 355, column: 27, scope: !9962)
!9967 = !DILocation(line: 355, column: 18, scope: !9962)
!9968 = !DILocation(line: 355, column: 8, scope: !9963)
!9969 = !DILocation(line: 356, column: 23, scope: !9962)
!9970 = !DILocation(line: 356, column: 29, scope: !9962)
!9971 = !DILocation(line: 356, column: 12, scope: !9962)
!9972 = !DILocation(line: 356, column: 5, scope: !9962)
!9973 = !DILocation(line: 357, column: 3, scope: !9963)
!9974 = !DILocation(line: 354, column: 43, scope: !9959)
!9975 = !DILocation(line: 354, column: 49, scope: !9959)
!9976 = !DILocation(line: 354, column: 41, scope: !9959)
!9977 = !DILocation(line: 354, column: 3, scope: !9959)
!9978 = distinct !{!9978, !9960, !9979}
!9979 = !DILocation(line: 357, column: 3, scope: !9953)
!9980 = !DILocation(line: 358, column: 2, scope: !9954)
!9981 = !DILocation(line: 353, column: 42, scope: !9950)
!9982 = !DILocation(line: 353, column: 48, scope: !9950)
!9983 = !DILocation(line: 353, column: 40, scope: !9950)
!9984 = !DILocation(line: 353, column: 2, scope: !9950)
!9985 = distinct !{!9985, !9951, !9986}
!9986 = !DILocation(line: 358, column: 2, scope: !9945)
!9987 = !DILocation(line: 359, column: 2, scope: !9933)
!9988 = !DILocation(line: 360, column: 1, scope: !9933)
!9989 = distinct !DISubprogram(name: "knife_make_cuts", scope: !3, file: !3, line: 2532, type: !4371, scopeLine: 2533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!9990 = !DILocalVariable(name: "kcd", arg: 1, scope: !9989, file: !3, line: 2532, type: !3512)
!9991 = !DILocation(line: 2532, column: 47, scope: !9989)
!9992 = !DILocalVariable(name: "bm", scope: !9989, file: !3, line: 2534, type: !2780)
!9993 = !DILocation(line: 2534, column: 9, scope: !9989)
!9994 = !DILocation(line: 2534, column: 14, scope: !9989)
!9995 = !DILocation(line: 2534, column: 19, scope: !9989)
!9996 = !DILocation(line: 2534, column: 23, scope: !9989)
!9997 = !DILocalVariable(name: "kfe", scope: !9989, file: !3, line: 2535, type: !2861)
!9998 = !DILocation(line: 2535, column: 13, scope: !9989)
!9999 = !DILocalVariable(name: "kfv", scope: !9989, file: !3, line: 2536, type: !2866)
!10000 = !DILocation(line: 2536, column: 13, scope: !9989)
!10001 = !DILocalVariable(name: "f", scope: !9989, file: !3, line: 2537, type: !2730)
!10002 = !DILocation(line: 2537, column: 10, scope: !9989)
!10003 = !DILocalVariable(name: "e", scope: !9989, file: !3, line: 2538, type: !2726)
!10004 = !DILocation(line: 2538, column: 10, scope: !9989)
!10005 = !DILocalVariable(name: "enew", scope: !9989, file: !3, line: 2538, type: !2726)
!10006 = !DILocation(line: 2538, column: 14, scope: !9989)
!10007 = !DILocalVariable(name: "lst", scope: !9989, file: !3, line: 2539, type: !1227)
!10008 = !DILocation(line: 2539, column: 12, scope: !9989)
!10009 = !DILocalVariable(name: "ref", scope: !9989, file: !3, line: 2540, type: !3251)
!10010 = !DILocation(line: 2540, column: 7, scope: !9989)
!10011 = !DILocalVariable(name: "pct", scope: !9989, file: !3, line: 2541, type: !357)
!10012 = !DILocation(line: 2541, column: 8, scope: !9989)
!10013 = !DILocalVariable(name: "hiter", scope: !9989, file: !3, line: 2542, type: !6116)
!10014 = !DILocation(line: 2542, column: 16, scope: !9989)
!10015 = !DILocalVariable(name: "iter", scope: !9989, file: !3, line: 2543, type: !3977)
!10016 = !DILocation(line: 2543, column: 19, scope: !9989)
!10017 = !DILocalVariable(name: "fhash_", scope: !9989, file: !3, line: 2544, type: !6045)
!10018 = !DILocation(line: 2544, column: 12, scope: !9989)
!10019 = !DILocalVariable(name: "fhash", scope: !9989, file: !3, line: 2544, type: !6120)
!10020 = !DILocation(line: 2544, column: 21, scope: !9989)
!10021 = !DILocalVariable(name: "ehash_", scope: !9989, file: !3, line: 2545, type: !6045)
!10022 = !DILocation(line: 2545, column: 12, scope: !9989)
!10023 = !DILocalVariable(name: "ehash", scope: !9989, file: !3, line: 2545, type: !6120)
!10024 = !DILocation(line: 2545, column: 21, scope: !9989)
!10025 = !DILocation(line: 2547, column: 21, scope: !9989)
!10026 = !DILocation(line: 2547, column: 2, scope: !9989)
!10027 = !DILocation(line: 2548, column: 21, scope: !9989)
!10028 = !DILocation(line: 2548, column: 2, scope: !9989)
!10029 = !DILocation(line: 2551, column: 22, scope: !9989)
!10030 = !DILocation(line: 2551, column: 27, scope: !9989)
!10031 = !DILocation(line: 2551, column: 2, scope: !9989)
!10032 = !DILocation(line: 2552, column: 13, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 2552, column: 2)
!10034 = !DILocation(line: 2552, column: 11, scope: !10033)
!10035 = !DILocation(line: 2552, column: 7, scope: !10033)
!10036 = !DILocation(line: 2552, column: 42, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 2552, column: 2)
!10038 = !DILocation(line: 2552, column: 2, scope: !10033)
!10039 = !DILocation(line: 2553, column: 7, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10037, file: !3, line: 2552, column: 82)
!10041 = !DILocation(line: 2553, column: 12, scope: !10040)
!10042 = !DILocation(line: 2553, column: 5, scope: !10040)
!10043 = !DILocation(line: 2554, column: 8, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 2554, column: 7)
!10045 = !DILocation(line: 2554, column: 10, scope: !10044)
!10046 = !DILocation(line: 2554, column: 13, scope: !10044)
!10047 = !DILocation(line: 2554, column: 18, scope: !10044)
!10048 = !DILocation(line: 2554, column: 7, scope: !10040)
!10049 = !DILocation(line: 2555, column: 4, scope: !10044)
!10050 = !DILocation(line: 2556, column: 30, scope: !10040)
!10051 = !DILocation(line: 2556, column: 48, scope: !10040)
!10052 = !DILocation(line: 2556, column: 37, scope: !10040)
!10053 = !DILocation(line: 2556, column: 9, scope: !10040)
!10054 = !DILocation(line: 2556, column: 7, scope: !10040)
!10055 = !DILocation(line: 2557, column: 8, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 2557, column: 7)
!10057 = !DILocation(line: 2557, column: 7, scope: !10040)
!10058 = !DILocation(line: 2558, column: 27, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10056, file: !3, line: 2557, column: 13)
!10060 = !DILocation(line: 2558, column: 10, scope: !10059)
!10061 = !DILocation(line: 2558, column: 8, scope: !10059)
!10062 = !DILocation(line: 2559, column: 25, scope: !10059)
!10063 = !DILocation(line: 2559, column: 43, scope: !10059)
!10064 = !DILocation(line: 2559, column: 32, scope: !10059)
!10065 = !DILocation(line: 2559, column: 46, scope: !10059)
!10066 = !DILocation(line: 2559, column: 4, scope: !10059)
!10067 = !DILocation(line: 2560, column: 3, scope: !10059)
!10068 = !DILocation(line: 2561, column: 21, scope: !10040)
!10069 = !DILocation(line: 2561, column: 26, scope: !10040)
!10070 = !DILocation(line: 2561, column: 31, scope: !10040)
!10071 = !DILocation(line: 2561, column: 3, scope: !10040)
!10072 = !DILocation(line: 2562, column: 2, scope: !10040)
!10073 = !DILocation(line: 2552, column: 53, scope: !10037)
!10074 = !DILocation(line: 2552, column: 51, scope: !10037)
!10075 = !DILocation(line: 2552, column: 2, scope: !10037)
!10076 = distinct !{!10076, !10038, !10077}
!10077 = !DILocation(line: 2562, column: 2, scope: !10033)
!10078 = !DILocation(line: 2565, column: 22, scope: !9989)
!10079 = !DILocation(line: 2565, column: 27, scope: !9989)
!10080 = !DILocation(line: 2565, column: 2, scope: !9989)
!10081 = !DILocation(line: 2566, column: 13, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 2566, column: 2)
!10083 = !DILocation(line: 2566, column: 11, scope: !10082)
!10084 = !DILocation(line: 2566, column: 7, scope: !10082)
!10085 = !DILocation(line: 2566, column: 42, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10082, file: !3, line: 2566, column: 2)
!10087 = !DILocation(line: 2566, column: 2, scope: !10082)
!10088 = !DILocation(line: 2567, column: 7, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 2567, column: 7)
!10090 = distinct !DILexicalBlock(scope: !10086, file: !3, line: 2566, column: 82)
!10091 = !DILocation(line: 2567, column: 12, scope: !10089)
!10092 = !DILocation(line: 2567, column: 7, scope: !10090)
!10093 = !DILocation(line: 2568, column: 4, scope: !10089)
!10094 = !DILocation(line: 2569, column: 14, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 2569, column: 3)
!10096 = !DILocation(line: 2569, column: 19, scope: !10095)
!10097 = !DILocation(line: 2569, column: 25, scope: !10095)
!10098 = !DILocation(line: 2569, column: 12, scope: !10095)
!10099 = !DILocation(line: 2569, column: 8, scope: !10095)
!10100 = !DILocation(line: 2569, column: 32, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 2569, column: 3)
!10102 = !DILocation(line: 2569, column: 3, scope: !10095)
!10103 = !DILocation(line: 2570, column: 10, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10101, file: !3, line: 2569, column: 54)
!10105 = !DILocation(line: 2570, column: 15, scope: !10104)
!10106 = !DILocation(line: 2570, column: 8, scope: !10104)
!10107 = !DILocation(line: 2571, column: 8, scope: !10104)
!10108 = !DILocation(line: 2571, column: 13, scope: !10104)
!10109 = !DILocation(line: 2571, column: 6, scope: !10104)
!10110 = !DILocation(line: 2572, column: 9, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 2572, column: 8)
!10112 = !DILocation(line: 2572, column: 8, scope: !10104)
!10113 = !DILocation(line: 2573, column: 5, scope: !10111)
!10114 = !DILocation(line: 2574, column: 31, scope: !10104)
!10115 = !DILocation(line: 2574, column: 49, scope: !10104)
!10116 = !DILocation(line: 2574, column: 38, scope: !10104)
!10117 = !DILocation(line: 2574, column: 10, scope: !10104)
!10118 = !DILocation(line: 2574, column: 8, scope: !10104)
!10119 = !DILocation(line: 2575, column: 9, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 2575, column: 8)
!10121 = !DILocation(line: 2575, column: 8, scope: !10104)
!10122 = !DILocation(line: 2576, column: 28, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 2575, column: 14)
!10124 = !DILocation(line: 2576, column: 11, scope: !10123)
!10125 = !DILocation(line: 2576, column: 9, scope: !10123)
!10126 = !DILocation(line: 2577, column: 26, scope: !10123)
!10127 = !DILocation(line: 2577, column: 44, scope: !10123)
!10128 = !DILocation(line: 2577, column: 33, scope: !10123)
!10129 = !DILocation(line: 2577, column: 47, scope: !10123)
!10130 = !DILocation(line: 2577, column: 5, scope: !10123)
!10131 = !DILocation(line: 2578, column: 4, scope: !10123)
!10132 = !DILocation(line: 2580, column: 18, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 2580, column: 8)
!10134 = !DILocation(line: 2580, column: 23, scope: !10133)
!10135 = !DILocation(line: 2580, column: 9, scope: !10133)
!10136 = !DILocation(line: 2580, column: 8, scope: !10104)
!10137 = !DILocation(line: 2581, column: 23, scope: !10133)
!10138 = !DILocation(line: 2581, column: 28, scope: !10133)
!10139 = !DILocation(line: 2581, column: 33, scope: !10133)
!10140 = !DILocation(line: 2581, column: 5, scope: !10133)
!10141 = !DILocation(line: 2582, column: 3, scope: !10104)
!10142 = !DILocation(line: 2569, column: 43, scope: !10101)
!10143 = !DILocation(line: 2569, column: 48, scope: !10101)
!10144 = !DILocation(line: 2569, column: 41, scope: !10101)
!10145 = !DILocation(line: 2569, column: 3, scope: !10101)
!10146 = distinct !{!10146, !10102, !10147}
!10147 = !DILocation(line: 2582, column: 3, scope: !10095)
!10148 = !DILocation(line: 2583, column: 2, scope: !10090)
!10149 = !DILocation(line: 2566, column: 53, scope: !10086)
!10150 = !DILocation(line: 2566, column: 51, scope: !10086)
!10151 = !DILocation(line: 2566, column: 2, scope: !10086)
!10152 = distinct !{!10152, !10087, !10153}
!10153 = !DILocation(line: 2583, column: 2, scope: !10082)
!10154 = !DILocation(line: 2586, column: 35, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 2586, column: 2)
!10156 = !DILocation(line: 2586, column: 50, scope: !10155)
!10157 = !DILocation(line: 2586, column: 13, scope: !10155)
!10158 = !DILocation(line: 2586, column: 11, scope: !10155)
!10159 = !DILocation(line: 2586, column: 7, scope: !10155)
!10160 = !DILocation(line: 2586, column: 68, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10155, file: !3, line: 2586, column: 2)
!10162 = !DILocation(line: 2586, column: 2, scope: !10155)
!10163 = !DILocation(line: 2589, column: 22, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 2588, column: 2)
!10165 = !DILocation(line: 2589, column: 27, scope: !10164)
!10166 = !DILocation(line: 2589, column: 3, scope: !10164)
!10167 = !DILocation(line: 2590, column: 14, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10164, file: !3, line: 2590, column: 3)
!10169 = !DILocation(line: 2590, column: 19, scope: !10168)
!10170 = !DILocation(line: 2590, column: 12, scope: !10168)
!10171 = !DILocation(line: 2590, column: 8, scope: !10168)
!10172 = !DILocation(line: 2590, column: 26, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10168, file: !3, line: 2590, column: 3)
!10174 = !DILocation(line: 2590, column: 3, scope: !10168)
!10175 = !DILocation(line: 2591, column: 10, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10173, file: !3, line: 2590, column: 48)
!10177 = !DILocation(line: 2591, column: 15, scope: !10176)
!10178 = !DILocation(line: 2591, column: 8, scope: !10176)
!10179 = !DILocation(line: 2592, column: 31, scope: !10176)
!10180 = !DILocation(line: 2592, column: 36, scope: !10176)
!10181 = !DILocation(line: 2592, column: 40, scope: !10176)
!10182 = !DILocation(line: 2592, column: 43, scope: !10176)
!10183 = !DILocation(line: 2592, column: 47, scope: !10176)
!10184 = !DILocation(line: 2592, column: 51, scope: !10176)
!10185 = !DILocation(line: 2592, column: 54, scope: !10176)
!10186 = !DILocation(line: 2592, column: 58, scope: !10176)
!10187 = !DILocation(line: 2592, column: 10, scope: !10176)
!10188 = !DILocation(line: 2592, column: 8, scope: !10176)
!10189 = !DILocation(line: 2593, column: 27, scope: !10176)
!10190 = !DILocation(line: 2593, column: 31, scope: !10176)
!10191 = !DILocation(line: 2593, column: 34, scope: !10176)
!10192 = !DILocation(line: 2593, column: 37, scope: !10176)
!10193 = !DILocation(line: 2593, column: 48, scope: !10176)
!10194 = !DILocation(line: 2593, column: 13, scope: !10176)
!10195 = !DILocation(line: 2593, column: 4, scope: !10176)
!10196 = !DILocation(line: 2593, column: 9, scope: !10176)
!10197 = !DILocation(line: 2593, column: 11, scope: !10176)
!10198 = !DILocation(line: 2594, column: 3, scope: !10176)
!10199 = !DILocation(line: 2590, column: 37, scope: !10173)
!10200 = !DILocation(line: 2590, column: 42, scope: !10173)
!10201 = !DILocation(line: 2590, column: 35, scope: !10173)
!10202 = !DILocation(line: 2590, column: 3, scope: !10173)
!10203 = distinct !{!10203, !10174, !10204}
!10204 = !DILocation(line: 2594, column: 3, scope: !10168)
!10205 = !DILocation(line: 2595, column: 2, scope: !10164)
!10206 = !DILocation(line: 2587, column: 44, scope: !10161)
!10207 = !DILocation(line: 2587, column: 13, scope: !10161)
!10208 = !DILocation(line: 2587, column: 11, scope: !10161)
!10209 = !DILocation(line: 2586, column: 2, scope: !10161)
!10210 = distinct !{!10210, !10162, !10211}
!10211 = !DILocation(line: 2595, column: 2, scope: !10155)
!10212 = !DILocation(line: 2597, column: 6, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 2597, column: 6)
!10214 = !DILocation(line: 2597, column: 11, scope: !10213)
!10215 = !DILocation(line: 2597, column: 6, scope: !9989)
!10216 = !DILocation(line: 2598, column: 25, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10213, file: !3, line: 2597, column: 24)
!10218 = !DILocation(line: 2598, column: 30, scope: !10217)
!10219 = !DILocation(line: 2598, column: 3, scope: !10217)
!10220 = !DILocation(line: 2599, column: 2, scope: !10217)
!10221 = !DILocation(line: 2602, column: 35, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !9989, file: !3, line: 2602, column: 2)
!10223 = !DILocation(line: 2602, column: 50, scope: !10222)
!10224 = !DILocation(line: 2602, column: 13, scope: !10222)
!10225 = !DILocation(line: 2602, column: 11, scope: !10222)
!10226 = !DILocation(line: 2602, column: 7, scope: !10222)
!10227 = !DILocation(line: 2602, column: 68, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10222, file: !3, line: 2602, column: 2)
!10229 = !DILocation(line: 2602, column: 2, scope: !10222)
!10230 = !DILocation(line: 2605, column: 24, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 2604, column: 2)
!10232 = !DILocation(line: 2605, column: 29, scope: !10231)
!10233 = !DILocation(line: 2605, column: 32, scope: !10231)
!10234 = !DILocation(line: 2605, column: 3, scope: !10231)
!10235 = !DILocation(line: 2606, column: 2, scope: !10231)
!10236 = !DILocation(line: 2603, column: 44, scope: !10228)
!10237 = !DILocation(line: 2603, column: 13, scope: !10228)
!10238 = !DILocation(line: 2603, column: 11, scope: !10228)
!10239 = !DILocation(line: 2602, column: 2, scope: !10228)
!10240 = distinct !{!10240, !10229, !10241}
!10241 = !DILocation(line: 2606, column: 2, scope: !10222)
!10242 = !DILocation(line: 2608, column: 24, scope: !9989)
!10243 = !DILocation(line: 2608, column: 2, scope: !9989)
!10244 = !DILocation(line: 2609, column: 24, scope: !9989)
!10245 = !DILocation(line: 2609, column: 2, scope: !9989)
!10246 = !DILocation(line: 2610, column: 1, scope: !9989)
!10247 = distinct !DISubprogram(name: "sort_by_frac_along", scope: !3, file: !3, line: 1946, type: !10248, scopeLine: 1947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!10248 = !DISubroutineType(types: !10249)
!10249 = !{null, !1227, !2726}
!10250 = !DILocalVariable(name: "lst", arg: 1, scope: !10247, file: !3, line: 1946, type: !1227)
!10251 = !DILocation(line: 1946, column: 42, scope: !10247)
!10252 = !DILocalVariable(name: "e", arg: 2, scope: !10247, file: !3, line: 1946, type: !2726)
!10253 = !DILocation(line: 1946, column: 55, scope: !10247)
!10254 = !DILocalVariable(name: "v1co", scope: !10247, file: !3, line: 1949, type: !997)
!10255 = !DILocation(line: 1949, column: 15, scope: !10247)
!10256 = !DILocation(line: 1949, column: 22, scope: !10247)
!10257 = !DILocation(line: 1949, column: 25, scope: !10247)
!10258 = !DILocation(line: 1949, column: 29, scope: !10247)
!10259 = !DILocalVariable(name: "cur", scope: !10247, file: !3, line: 1950, type: !3251)
!10260 = !DILocation(line: 1950, column: 7, scope: !10247)
!10261 = !DILocalVariable(name: "prev", scope: !10247, file: !3, line: 1950, type: !3251)
!10262 = !DILocation(line: 1950, column: 20, scope: !10247)
!10263 = !DILocalVariable(name: "next", scope: !10247, file: !3, line: 1950, type: !3251)
!10264 = !DILocation(line: 1950, column: 34, scope: !10247)
!10265 = !DILocation(line: 1952, column: 6, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10247, file: !3, line: 1952, column: 6)
!10267 = !DILocation(line: 1952, column: 11, scope: !10266)
!10268 = !DILocation(line: 1952, column: 20, scope: !10266)
!10269 = !DILocation(line: 1952, column: 25, scope: !10266)
!10270 = !DILocation(line: 1952, column: 17, scope: !10266)
!10271 = !DILocation(line: 1952, column: 6, scope: !10247)
!10272 = !DILocation(line: 1953, column: 3, scope: !10266)
!10273 = !DILocation(line: 1955, column: 21, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10247, file: !3, line: 1955, column: 2)
!10275 = !DILocation(line: 1955, column: 26, scope: !10274)
!10276 = !DILocation(line: 1955, column: 14, scope: !10274)
!10277 = !DILocation(line: 1955, column: 34, scope: !10274)
!10278 = !DILocation(line: 1955, column: 11, scope: !10274)
!10279 = !DILocation(line: 1955, column: 7, scope: !10274)
!10280 = !DILocation(line: 1955, column: 40, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 1955, column: 2)
!10282 = !DILocation(line: 1955, column: 2, scope: !10274)
!10283 = !DILocalVariable(name: "vcur", scope: !10284, file: !3, line: 1956, type: !2866)
!10284 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 1955, column: 57)
!10285 = !DILocation(line: 1956, column: 14, scope: !10284)
!10286 = !DILocation(line: 1956, column: 21, scope: !10284)
!10287 = !DILocation(line: 1956, column: 26, scope: !10284)
!10288 = !DILocalVariable(name: "vcur_fac_sq", scope: !10284, file: !3, line: 1957, type: !806)
!10289 = !DILocation(line: 1957, column: 15, scope: !10284)
!10290 = !DILocation(line: 1957, column: 46, scope: !10284)
!10291 = !DILocation(line: 1957, column: 52, scope: !10284)
!10292 = !DILocation(line: 1957, column: 58, scope: !10284)
!10293 = !DILocation(line: 1957, column: 29, scope: !10284)
!10294 = !DILocation(line: 1959, column: 10, scope: !10284)
!10295 = !DILocation(line: 1959, column: 15, scope: !10284)
!10296 = !DILocation(line: 1959, column: 8, scope: !10284)
!10297 = !DILocation(line: 1960, column: 10, scope: !10284)
!10298 = !DILocation(line: 1960, column: 15, scope: !10284)
!10299 = !DILocation(line: 1960, column: 8, scope: !10284)
!10300 = !DILocation(line: 1962, column: 15, scope: !10284)
!10301 = !DILocation(line: 1962, column: 20, scope: !10284)
!10302 = !DILocation(line: 1962, column: 3, scope: !10284)
!10303 = !DILocation(line: 1964, column: 3, scope: !10284)
!10304 = !DILocation(line: 1964, column: 10, scope: !10284)
!10305 = !DILocalVariable(name: "vprev", scope: !10306, file: !3, line: 1965, type: !2866)
!10306 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 1964, column: 16)
!10307 = !DILocation(line: 1965, column: 15, scope: !10306)
!10308 = !DILocation(line: 1965, column: 23, scope: !10306)
!10309 = !DILocation(line: 1965, column: 29, scope: !10306)
!10310 = !DILocation(line: 1966, column: 25, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 1966, column: 8)
!10312 = !DILocation(line: 1966, column: 31, scope: !10311)
!10313 = !DILocation(line: 1966, column: 38, scope: !10311)
!10314 = !DILocation(line: 1966, column: 8, scope: !10311)
!10315 = !DILocation(line: 1966, column: 45, scope: !10311)
!10316 = !DILocation(line: 1966, column: 42, scope: !10311)
!10317 = !DILocation(line: 1966, column: 8, scope: !10306)
!10318 = !DILocation(line: 1967, column: 5, scope: !10311)
!10319 = !DILocation(line: 1968, column: 11, scope: !10306)
!10320 = !DILocation(line: 1968, column: 17, scope: !10306)
!10321 = !DILocation(line: 1968, column: 9, scope: !10306)
!10322 = distinct !{!10322, !10303, !10323}
!10323 = !DILocation(line: 1969, column: 3, scope: !10284)
!10324 = !DILocation(line: 1971, column: 23, scope: !10284)
!10325 = !DILocation(line: 1971, column: 28, scope: !10284)
!10326 = !DILocation(line: 1971, column: 34, scope: !10284)
!10327 = !DILocation(line: 1971, column: 3, scope: !10284)
!10328 = !DILocation(line: 1972, column: 2, scope: !10284)
!10329 = !DILocation(line: 1955, column: 51, scope: !10281)
!10330 = !DILocation(line: 1955, column: 49, scope: !10281)
!10331 = !DILocation(line: 1955, column: 2, scope: !10281)
!10332 = distinct !{!10332, !10282, !10333}
!10333 = !DILocation(line: 1972, column: 2, scope: !10274)
!10334 = !DILocation(line: 1973, column: 1, scope: !10247)
!10335 = distinct !DISubprogram(name: "knife_make_face_cuts", scope: !3, file: !3, line: 2415, type: !9272, scopeLine: 2416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!10336 = !DILocalVariable(name: "kcd", arg: 1, scope: !10335, file: !3, line: 2415, type: !3512)
!10337 = !DILocation(line: 2415, column: 52, scope: !10335)
!10338 = !DILocalVariable(name: "f", arg: 2, scope: !10335, file: !3, line: 2415, type: !2730)
!10339 = !DILocation(line: 2415, column: 65, scope: !10335)
!10340 = !DILocalVariable(name: "kfedges", arg: 3, scope: !10335, file: !3, line: 2415, type: !1227)
!10341 = !DILocation(line: 2415, column: 78, scope: !10335)
!10342 = !DILocalVariable(name: "bm", scope: !10335, file: !3, line: 2417, type: !2780)
!10343 = !DILocation(line: 2417, column: 9, scope: !10335)
!10344 = !DILocation(line: 2417, column: 14, scope: !10335)
!10345 = !DILocation(line: 2417, column: 19, scope: !10335)
!10346 = !DILocation(line: 2417, column: 23, scope: !10335)
!10347 = !DILocalVariable(name: "kfe", scope: !10335, file: !3, line: 2418, type: !2861)
!10348 = !DILocation(line: 2418, column: 13, scope: !10335)
!10349 = !DILocalVariable(name: "fnew", scope: !10335, file: !3, line: 2419, type: !2730)
!10350 = !DILocation(line: 2419, column: 10, scope: !10335)
!10351 = !DILocalVariable(name: "fnew2", scope: !10335, file: !3, line: 2419, type: !2730)
!10352 = !DILocation(line: 2419, column: 17, scope: !10335)
!10353 = !DILocalVariable(name: "fhole", scope: !10335, file: !3, line: 2419, type: !2730)
!10354 = !DILocation(line: 2419, column: 25, scope: !10335)
!10355 = !DILocalVariable(name: "chain", scope: !10335, file: !3, line: 2420, type: !1227)
!10356 = !DILocation(line: 2420, column: 12, scope: !10335)
!10357 = !DILocalVariable(name: "hole", scope: !10335, file: !3, line: 2420, type: !1227)
!10358 = !DILocation(line: 2420, column: 20, scope: !10335)
!10359 = !DILocalVariable(name: "sidechain", scope: !10335, file: !3, line: 2420, type: !1227)
!10360 = !DILocation(line: 2420, column: 27, scope: !10335)
!10361 = !DILocalVariable(name: "ref", scope: !10335, file: !3, line: 2421, type: !3251)
!10362 = !DILocation(line: 2421, column: 7, scope: !10335)
!10363 = !DILocalVariable(name: "refnext", scope: !10335, file: !3, line: 2421, type: !3251)
!10364 = !DILocation(line: 2421, column: 13, scope: !10335)
!10365 = !DILocalVariable(name: "count", scope: !10335, file: !3, line: 2422, type: !35)
!10366 = !DILocation(line: 2422, column: 6, scope: !10335)
!10367 = !DILocalVariable(name: "oldcount", scope: !10335, file: !3, line: 2422, type: !35)
!10368 = !DILocation(line: 2422, column: 13, scope: !10335)
!10369 = !DILocation(line: 2424, column: 27, scope: !10335)
!10370 = !DILocation(line: 2424, column: 13, scope: !10335)
!10371 = !DILocation(line: 2424, column: 11, scope: !10335)
!10372 = !DILocation(line: 2425, column: 2, scope: !10335)
!10373 = !DILocation(line: 2425, column: 29, scope: !10335)
!10374 = !DILocation(line: 2425, column: 34, scope: !10335)
!10375 = !DILocation(line: 2425, column: 18, scope: !10335)
!10376 = !DILocation(line: 2425, column: 16, scope: !10335)
!10377 = !DILocation(line: 2425, column: 44, scope: !10335)
!10378 = !DILocalVariable(name: "fnew_kfedges", scope: !10379, file: !3, line: 2426, type: !13)
!10379 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 2425, column: 53)
!10380 = !DILocation(line: 2426, column: 12, scope: !10379)
!10381 = !DILocation(line: 2427, column: 24, scope: !10379)
!10382 = !DILocation(line: 2427, column: 29, scope: !10379)
!10383 = !DILocation(line: 2427, column: 32, scope: !10379)
!10384 = !DILocation(line: 2427, column: 3, scope: !10379)
!10385 = !DILocation(line: 2428, column: 8, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 2428, column: 7)
!10387 = !DILocation(line: 2428, column: 7, scope: !10379)
!10388 = !DILocation(line: 2429, column: 4, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 2428, column: 14)
!10390 = !DILocation(line: 2434, column: 3, scope: !10379)
!10391 = !DILocation(line: 2435, column: 14, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 2435, column: 3)
!10393 = !DILocation(line: 2435, column: 23, scope: !10392)
!10394 = !DILocation(line: 2435, column: 12, scope: !10392)
!10395 = !DILocation(line: 2435, column: 8, scope: !10392)
!10396 = !DILocation(line: 2435, column: 30, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10392, file: !3, line: 2435, column: 3)
!10398 = !DILocation(line: 2435, column: 3, scope: !10392)
!10399 = !DILocation(line: 2436, column: 10, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10397, file: !3, line: 2435, column: 50)
!10401 = !DILocation(line: 2436, column: 15, scope: !10400)
!10402 = !DILocation(line: 2436, column: 8, scope: !10400)
!10403 = !DILocation(line: 2437, column: 14, scope: !10400)
!10404 = !DILocation(line: 2437, column: 19, scope: !10400)
!10405 = !DILocation(line: 2437, column: 12, scope: !10400)
!10406 = !DILocation(line: 2438, column: 27, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 2438, column: 8)
!10408 = !DILocation(line: 2438, column: 32, scope: !10407)
!10409 = !DILocation(line: 2438, column: 8, scope: !10407)
!10410 = !DILocation(line: 2438, column: 8, scope: !10400)
!10411 = !DILocation(line: 2439, column: 17, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 2438, column: 39)
!10413 = !DILocation(line: 2439, column: 26, scope: !10412)
!10414 = !DILocation(line: 2439, column: 5, scope: !10412)
!10415 = !DILocation(line: 2440, column: 18, scope: !10412)
!10416 = !DILocation(line: 2440, column: 5, scope: !10412)
!10417 = !DILocation(line: 2440, column: 10, scope: !10412)
!10418 = !DILocation(line: 2440, column: 16, scope: !10412)
!10419 = !DILocation(line: 2441, column: 32, scope: !10412)
!10420 = !DILocation(line: 2441, column: 5, scope: !10412)
!10421 = !DILocation(line: 2442, column: 4, scope: !10412)
!10422 = !DILocation(line: 2443, column: 33, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 2443, column: 13)
!10424 = !DILocation(line: 2443, column: 38, scope: !10423)
!10425 = !DILocation(line: 2443, column: 14, scope: !10423)
!10426 = !DILocation(line: 2443, column: 13, scope: !10407)
!10427 = !DILocation(line: 2445, column: 17, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2443, column: 42)
!10429 = !DILocation(line: 2445, column: 26, scope: !10428)
!10430 = !DILocation(line: 2445, column: 5, scope: !10428)
!10431 = !DILocation(line: 2446, column: 4, scope: !10428)
!10432 = !DILocation(line: 2447, column: 3, scope: !10400)
!10433 = !DILocation(line: 2435, column: 41, scope: !10397)
!10434 = !DILocation(line: 2435, column: 39, scope: !10397)
!10435 = !DILocation(line: 2435, column: 3, scope: !10397)
!10436 = distinct !{!10436, !10398, !10437}
!10437 = !DILocation(line: 2447, column: 3, scope: !10392)
!10438 = !DILocation(line: 2448, column: 20, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 2448, column: 7)
!10440 = !DILocation(line: 2448, column: 7, scope: !10439)
!10441 = !DILocation(line: 2448, column: 7, scope: !10379)
!10442 = !DILocation(line: 2449, column: 25, scope: !10439)
!10443 = !DILocation(line: 2449, column: 30, scope: !10439)
!10444 = !DILocation(line: 2449, column: 4, scope: !10439)
!10445 = !DILocation(line: 2453, column: 25, scope: !10379)
!10446 = !DILocation(line: 2453, column: 11, scope: !10379)
!10447 = !DILocation(line: 2453, column: 9, scope: !10379)
!10448 = !DILocation(line: 2454, column: 7, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 2454, column: 7)
!10450 = !DILocation(line: 2454, column: 16, scope: !10449)
!10451 = !DILocation(line: 2454, column: 13, scope: !10449)
!10452 = !DILocation(line: 2454, column: 7, scope: !10379)
!10453 = !DILocation(line: 2456, column: 4, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 2454, column: 26)
!10455 = !DILocation(line: 2458, column: 14, scope: !10379)
!10456 = !DILocation(line: 2458, column: 12, scope: !10379)
!10457 = distinct !{!10457, !10372, !10458}
!10458 = !DILocation(line: 2459, column: 2, scope: !10335)
!10459 = !DILocation(line: 2461, column: 2, scope: !10335)
!10460 = !DILocation(line: 2461, column: 27, scope: !10335)
!10461 = !DILocation(line: 2461, column: 32, scope: !10335)
!10462 = !DILocation(line: 2461, column: 17, scope: !10335)
!10463 = !DILocation(line: 2461, column: 15, scope: !10335)
!10464 = !DILocation(line: 2461, column: 42, scope: !10335)
!10465 = !DILocation(line: 2462, column: 24, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 2462, column: 7)
!10467 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 2461, column: 51)
!10468 = !DILocation(line: 2462, column: 29, scope: !10466)
!10469 = !DILocation(line: 2462, column: 35, scope: !10466)
!10470 = !DILocation(line: 2462, column: 7, scope: !10466)
!10471 = !DILocation(line: 2462, column: 7, scope: !10467)
!10472 = !DILocalVariable(name: "fnew_kfedges", scope: !10473, file: !3, line: 2463, type: !13)
!10473 = distinct !DILexicalBlock(scope: !10466, file: !3, line: 2462, column: 59)
!10474 = !DILocation(line: 2463, column: 13, scope: !10473)
!10475 = !DILocalVariable(name: "fnew2_kfedges", scope: !10473, file: !3, line: 2463, type: !13)
!10476 = !DILocation(line: 2463, column: 27, scope: !10473)
!10477 = !DILocation(line: 2468, column: 25, scope: !10473)
!10478 = !DILocation(line: 2468, column: 30, scope: !10473)
!10479 = !DILocation(line: 2468, column: 33, scope: !10473)
!10480 = !DILocation(line: 2468, column: 4, scope: !10473)
!10481 = !DILocation(line: 2469, column: 9, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 2469, column: 8)
!10483 = !DILocation(line: 2469, column: 8, scope: !10473)
!10484 = !DILocation(line: 2471, column: 5, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10482, file: !3, line: 2469, column: 15)
!10486 = !DILocation(line: 2473, column: 18, scope: !10473)
!10487 = !DILocation(line: 2473, column: 29, scope: !10473)
!10488 = !DILocation(line: 2473, column: 11, scope: !10473)
!10489 = !DILocation(line: 2473, column: 37, scope: !10473)
!10490 = !DILocation(line: 2473, column: 10, scope: !10473)
!10491 = !DILocation(line: 2473, column: 8, scope: !10473)
!10492 = !DILocation(line: 2474, column: 27, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 2474, column: 8)
!10494 = !DILocation(line: 2474, column: 32, scope: !10493)
!10495 = !DILocation(line: 2474, column: 8, scope: !10493)
!10496 = !DILocation(line: 2474, column: 8, scope: !10473)
!10497 = !DILocation(line: 2475, column: 26, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 2474, column: 36)
!10499 = !DILocation(line: 2475, column: 31, scope: !10498)
!10500 = !DILocation(line: 2475, column: 34, scope: !10498)
!10501 = !DILocation(line: 2475, column: 5, scope: !10498)
!10502 = !DILocation(line: 2476, column: 9, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 2476, column: 9)
!10504 = !DILocation(line: 2476, column: 15, scope: !10503)
!10505 = !DILocation(line: 2476, column: 9, scope: !10498)
!10506 = !DILocation(line: 2477, column: 6, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 2476, column: 24)
!10508 = !DILocation(line: 2479, column: 13, scope: !10498)
!10509 = !DILocation(line: 2479, column: 11, scope: !10498)
!10510 = !DILocation(line: 2480, column: 4, scope: !10498)
!10511 = !DILocation(line: 2481, column: 32, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 2481, column: 13)
!10513 = !DILocation(line: 2481, column: 37, scope: !10512)
!10514 = !DILocation(line: 2481, column: 13, scope: !10512)
!10515 = !DILocation(line: 2481, column: 13, scope: !10493)
!10516 = !DILocation(line: 2482, column: 26, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10512, file: !3, line: 2481, column: 44)
!10518 = !DILocation(line: 2482, column: 31, scope: !10517)
!10519 = !DILocation(line: 2482, column: 37, scope: !10517)
!10520 = !DILocation(line: 2482, column: 5, scope: !10517)
!10521 = !DILocation(line: 2483, column: 9, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 2483, column: 9)
!10523 = !DILocation(line: 2483, column: 15, scope: !10522)
!10524 = !DILocation(line: 2483, column: 9, scope: !10517)
!10525 = !DILocation(line: 2484, column: 6, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 2483, column: 24)
!10527 = !DILocation(line: 2486, column: 13, scope: !10517)
!10528 = !DILocation(line: 2486, column: 11, scope: !10517)
!10529 = !DILocation(line: 2487, column: 4, scope: !10517)
!10530 = !DILocation(line: 2490, column: 5, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10512, file: !3, line: 2488, column: 9)
!10532 = !DILocation(line: 2492, column: 17, scope: !10473)
!10533 = !DILocation(line: 2492, column: 21, scope: !10473)
!10534 = !DILocation(line: 2492, column: 4, scope: !10473)
!10535 = !DILocation(line: 2495, column: 4, scope: !10473)
!10536 = !DILocation(line: 2496, column: 4, scope: !10473)
!10537 = !DILocation(line: 2497, column: 15, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 2497, column: 4)
!10539 = !DILocation(line: 2497, column: 24, scope: !10538)
!10540 = !DILocation(line: 2497, column: 13, scope: !10538)
!10541 = !DILocation(line: 2497, column: 9, scope: !10538)
!10542 = !DILocation(line: 2497, column: 31, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10538, file: !3, line: 2497, column: 4)
!10544 = !DILocation(line: 2497, column: 4, scope: !10538)
!10545 = !DILocation(line: 2498, column: 11, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10543, file: !3, line: 2497, column: 51)
!10547 = !DILocation(line: 2498, column: 16, scope: !10546)
!10548 = !DILocation(line: 2498, column: 9, scope: !10546)
!10549 = !DILocation(line: 2499, column: 15, scope: !10546)
!10550 = !DILocation(line: 2499, column: 20, scope: !10546)
!10551 = !DILocation(line: 2499, column: 13, scope: !10546)
!10552 = !DILocation(line: 2500, column: 28, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10546, file: !3, line: 2500, column: 9)
!10554 = !DILocation(line: 2500, column: 33, scope: !10553)
!10555 = !DILocation(line: 2500, column: 9, scope: !10553)
!10556 = !DILocation(line: 2500, column: 9, scope: !10546)
!10557 = !DILocation(line: 2501, column: 18, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 2500, column: 40)
!10559 = !DILocation(line: 2501, column: 27, scope: !10558)
!10560 = !DILocation(line: 2501, column: 6, scope: !10558)
!10561 = !DILocation(line: 2502, column: 19, scope: !10558)
!10562 = !DILocation(line: 2502, column: 6, scope: !10558)
!10563 = !DILocation(line: 2502, column: 11, scope: !10558)
!10564 = !DILocation(line: 2502, column: 17, scope: !10558)
!10565 = !DILocation(line: 2503, column: 33, scope: !10558)
!10566 = !DILocation(line: 2503, column: 6, scope: !10558)
!10567 = !DILocation(line: 2504, column: 5, scope: !10558)
!10568 = !DILocation(line: 2505, column: 33, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 2505, column: 14)
!10570 = !DILocation(line: 2505, column: 38, scope: !10569)
!10571 = !DILocation(line: 2505, column: 14, scope: !10569)
!10572 = !DILocation(line: 2505, column: 14, scope: !10553)
!10573 = !DILocation(line: 2506, column: 18, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 2505, column: 46)
!10575 = !DILocation(line: 2506, column: 27, scope: !10574)
!10576 = !DILocation(line: 2506, column: 6, scope: !10574)
!10577 = !DILocation(line: 2507, column: 19, scope: !10574)
!10578 = !DILocation(line: 2507, column: 6, scope: !10574)
!10579 = !DILocation(line: 2507, column: 11, scope: !10574)
!10580 = !DILocation(line: 2507, column: 17, scope: !10574)
!10581 = !DILocation(line: 2508, column: 34, scope: !10574)
!10582 = !DILocation(line: 2508, column: 6, scope: !10574)
!10583 = !DILocation(line: 2509, column: 5, scope: !10574)
!10584 = !DILocation(line: 2510, column: 4, scope: !10546)
!10585 = !DILocation(line: 2497, column: 42, scope: !10543)
!10586 = !DILocation(line: 2497, column: 40, scope: !10543)
!10587 = !DILocation(line: 2497, column: 4, scope: !10543)
!10588 = distinct !{!10588, !10544, !10589}
!10589 = !DILocation(line: 2510, column: 4, scope: !10538)
!10590 = !DILocation(line: 2513, column: 8, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 2513, column: 8)
!10592 = !DILocation(line: 2513, column: 16, scope: !10591)
!10593 = !DILocation(line: 2513, column: 13, scope: !10591)
!10594 = !DILocation(line: 2513, column: 22, scope: !10591)
!10595 = !DILocation(line: 2513, column: 38, scope: !10591)
!10596 = !DILocation(line: 2513, column: 25, scope: !10591)
!10597 = !DILocation(line: 2513, column: 8, scope: !10473)
!10598 = !DILocation(line: 2514, column: 26, scope: !10591)
!10599 = !DILocation(line: 2514, column: 31, scope: !10591)
!10600 = !DILocation(line: 2514, column: 5, scope: !10591)
!10601 = !DILocation(line: 2515, column: 8, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 2515, column: 8)
!10603 = !DILocation(line: 2515, column: 17, scope: !10602)
!10604 = !DILocation(line: 2515, column: 14, scope: !10602)
!10605 = !DILocation(line: 2515, column: 23, scope: !10602)
!10606 = !DILocation(line: 2515, column: 40, scope: !10602)
!10607 = !DILocation(line: 2515, column: 26, scope: !10602)
!10608 = !DILocation(line: 2515, column: 8, scope: !10473)
!10609 = !DILocation(line: 2516, column: 26, scope: !10602)
!10610 = !DILocation(line: 2516, column: 31, scope: !10602)
!10611 = !DILocation(line: 2516, column: 5, scope: !10602)
!10612 = !DILocation(line: 2517, column: 8, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 2517, column: 8)
!10614 = !DILocation(line: 2517, column: 13, scope: !10613)
!10615 = !DILocation(line: 2517, column: 10, scope: !10613)
!10616 = !DILocation(line: 2517, column: 8, scope: !10473)
!10617 = !DILocation(line: 2518, column: 5, scope: !10613)
!10618 = !DILocation(line: 2521, column: 26, scope: !10473)
!10619 = !DILocation(line: 2521, column: 12, scope: !10473)
!10620 = !DILocation(line: 2521, column: 10, scope: !10473)
!10621 = !DILocation(line: 2522, column: 8, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 2522, column: 8)
!10623 = !DILocation(line: 2522, column: 17, scope: !10622)
!10624 = !DILocation(line: 2522, column: 14, scope: !10622)
!10625 = !DILocation(line: 2522, column: 8, scope: !10473)
!10626 = !DILocation(line: 2524, column: 5, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 2522, column: 27)
!10628 = !DILocation(line: 2526, column: 15, scope: !10473)
!10629 = !DILocation(line: 2526, column: 13, scope: !10473)
!10630 = !DILocation(line: 2527, column: 3, scope: !10473)
!10631 = distinct !{!10631, !10459, !10632}
!10632 = !DILocation(line: 2528, column: 2, scope: !10335)
!10633 = !DILocation(line: 2529, column: 1, scope: !10335)
!10634 = distinct !DISubprogram(name: "len_squared_v3v3", scope: !5212, file: !5212, line: 727, type: !7050, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!10635 = !DILocalVariable(name: "a", arg: 1, scope: !10634, file: !5212, line: 727, type: !997)
!10636 = !DILocation(line: 727, column: 44, scope: !10634)
!10637 = !DILocalVariable(name: "b", arg: 2, scope: !10634, file: !5212, line: 727, type: !997)
!10638 = !DILocation(line: 727, column: 62, scope: !10634)
!10639 = !DILocalVariable(name: "d", scope: !10634, file: !5212, line: 729, type: !555)
!10640 = !DILocation(line: 729, column: 8, scope: !10634)
!10641 = !DILocation(line: 731, column: 14, scope: !10634)
!10642 = !DILocation(line: 731, column: 17, scope: !10634)
!10643 = !DILocation(line: 731, column: 20, scope: !10634)
!10644 = !DILocation(line: 731, column: 2, scope: !10634)
!10645 = !DILocation(line: 732, column: 18, scope: !10634)
!10646 = !DILocation(line: 732, column: 21, scope: !10634)
!10647 = !DILocation(line: 732, column: 9, scope: !10634)
!10648 = !DILocation(line: 732, column: 2, scope: !10634)
!10649 = distinct !DISubprogram(name: "find_chain", scope: !3, file: !3, line: 2040, type: !10650, scopeLine: 2041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!10650 = !DISubroutineType(types: !10651)
!10651 = !{!1227, !3512, !1227}
!10652 = !DILocalVariable(name: "kcd", arg: 1, scope: !10649, file: !3, line: 2040, type: !3512)
!10653 = !DILocation(line: 2040, column: 47, scope: !10649)
!10654 = !DILocalVariable(name: "fedges", arg: 2, scope: !10649, file: !3, line: 2040, type: !1227)
!10655 = !DILocation(line: 2040, column: 62, scope: !10649)
!10656 = !DILocalVariable(name: "r", scope: !10649, file: !3, line: 2042, type: !3251)
!10657 = !DILocation(line: 2042, column: 7, scope: !10649)
!10658 = !DILocalVariable(name: "ref", scope: !10649, file: !3, line: 2042, type: !3251)
!10659 = !DILocation(line: 2042, column: 11, scope: !10649)
!10660 = !DILocalVariable(name: "kfe", scope: !10649, file: !3, line: 2043, type: !2861)
!10661 = !DILocation(line: 2043, column: 13, scope: !10649)
!10662 = !DILocalVariable(name: "v1", scope: !10649, file: !3, line: 2044, type: !2665)
!10663 = !DILocation(line: 2044, column: 10, scope: !10649)
!10664 = !DILocalVariable(name: "v2", scope: !10649, file: !3, line: 2044, type: !2665)
!10665 = !DILocation(line: 2044, column: 15, scope: !10649)
!10666 = !DILocalVariable(name: "ans", scope: !10649, file: !3, line: 2045, type: !1227)
!10667 = !DILocation(line: 2045, column: 12, scope: !10649)
!10668 = !DILocation(line: 2047, column: 6, scope: !10649)
!10669 = !DILocation(line: 2049, column: 11, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10649, file: !3, line: 2049, column: 2)
!10671 = !DILocation(line: 2049, column: 19, scope: !10670)
!10672 = !DILocation(line: 2049, column: 9, scope: !10670)
!10673 = !DILocation(line: 2049, column: 7, scope: !10670)
!10674 = !DILocation(line: 2049, column: 26, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10670, file: !3, line: 2049, column: 2)
!10676 = !DILocation(line: 2049, column: 2, scope: !10670)
!10677 = !DILocation(line: 2050, column: 9, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 2049, column: 42)
!10679 = !DILocation(line: 2050, column: 12, scope: !10678)
!10680 = !DILocation(line: 2050, column: 7, scope: !10678)
!10681 = !DILocation(line: 2051, column: 8, scope: !10678)
!10682 = !DILocation(line: 2051, column: 13, scope: !10678)
!10683 = !DILocation(line: 2051, column: 17, scope: !10678)
!10684 = !DILocation(line: 2051, column: 6, scope: !10678)
!10685 = !DILocation(line: 2052, column: 8, scope: !10678)
!10686 = !DILocation(line: 2052, column: 13, scope: !10678)
!10687 = !DILocation(line: 2052, column: 17, scope: !10678)
!10688 = !DILocation(line: 2052, column: 6, scope: !10678)
!10689 = !DILocation(line: 2053, column: 7, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10678, file: !3, line: 2053, column: 7)
!10691 = !DILocation(line: 2053, column: 10, scope: !10690)
!10692 = !DILocation(line: 2053, column: 13, scope: !10690)
!10693 = !DILocation(line: 2053, column: 7, scope: !10678)
!10694 = !DILocation(line: 2054, column: 27, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10690, file: !3, line: 2053, column: 17)
!10696 = !DILocation(line: 2054, column: 10, scope: !10695)
!10697 = !DILocation(line: 2054, column: 8, scope: !10695)
!10698 = !DILocation(line: 2055, column: 22, scope: !10695)
!10699 = !DILocation(line: 2055, column: 27, scope: !10695)
!10700 = !DILocation(line: 2055, column: 32, scope: !10695)
!10701 = !DILocation(line: 2055, column: 4, scope: !10695)
!10702 = !DILocation(line: 2056, column: 4, scope: !10695)
!10703 = !DILocation(line: 2058, column: 7, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10678, file: !3, line: 2058, column: 7)
!10705 = !DILocation(line: 2058, column: 7, scope: !10678)
!10706 = !DILocation(line: 2059, column: 33, scope: !10704)
!10707 = !DILocation(line: 2059, column: 38, scope: !10704)
!10708 = !DILocation(line: 2059, column: 43, scope: !10704)
!10709 = !DILocation(line: 2059, column: 47, scope: !10704)
!10710 = !DILocation(line: 2059, column: 10, scope: !10704)
!10711 = !DILocation(line: 2059, column: 8, scope: !10704)
!10712 = !DILocation(line: 2059, column: 4, scope: !10704)
!10713 = !DILocation(line: 2060, column: 12, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10704, file: !3, line: 2060, column: 12)
!10715 = !DILocation(line: 2060, column: 12, scope: !10704)
!10716 = !DILocation(line: 2061, column: 33, scope: !10714)
!10717 = !DILocation(line: 2061, column: 38, scope: !10714)
!10718 = !DILocation(line: 2061, column: 43, scope: !10714)
!10719 = !DILocation(line: 2061, column: 47, scope: !10714)
!10720 = !DILocation(line: 2061, column: 10, scope: !10714)
!10721 = !DILocation(line: 2061, column: 8, scope: !10714)
!10722 = !DILocation(line: 2061, column: 4, scope: !10714)
!10723 = !DILocation(line: 2062, column: 7, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10678, file: !3, line: 2062, column: 7)
!10725 = !DILocation(line: 2062, column: 7, scope: !10678)
!10726 = !DILocation(line: 2063, column: 4, scope: !10724)
!10727 = !DILocation(line: 2064, column: 2, scope: !10678)
!10728 = !DILocation(line: 2049, column: 33, scope: !10675)
!10729 = !DILocation(line: 2049, column: 36, scope: !10675)
!10730 = !DILocation(line: 2049, column: 31, scope: !10675)
!10731 = !DILocation(line: 2049, column: 2, scope: !10675)
!10732 = distinct !{!10732, !10676, !10733}
!10733 = !DILocation(line: 2064, column: 2, scope: !10670)
!10734 = !DILocation(line: 2065, column: 6, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10649, file: !3, line: 2065, column: 6)
!10736 = !DILocation(line: 2065, column: 6, scope: !10649)
!10737 = !DILocation(line: 2067, column: 12, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10739, file: !3, line: 2067, column: 3)
!10739 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 2065, column: 11)
!10740 = !DILocation(line: 2067, column: 17, scope: !10738)
!10741 = !DILocation(line: 2067, column: 10, scope: !10738)
!10742 = !DILocation(line: 2067, column: 8, scope: !10738)
!10743 = !DILocation(line: 2067, column: 24, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10738, file: !3, line: 2067, column: 3)
!10745 = !DILocation(line: 2067, column: 3, scope: !10738)
!10746 = !DILocation(line: 2068, column: 19, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10744, file: !3, line: 2067, column: 40)
!10748 = !DILocation(line: 2068, column: 27, scope: !10747)
!10749 = !DILocation(line: 2068, column: 30, scope: !10747)
!10750 = !DILocation(line: 2068, column: 10, scope: !10747)
!10751 = !DILocation(line: 2068, column: 8, scope: !10747)
!10752 = !DILocation(line: 2070, column: 16, scope: !10747)
!10753 = !DILocation(line: 2070, column: 24, scope: !10747)
!10754 = !DILocation(line: 2070, column: 4, scope: !10747)
!10755 = !DILocation(line: 2071, column: 3, scope: !10747)
!10756 = !DILocation(line: 2067, column: 31, scope: !10744)
!10757 = !DILocation(line: 2067, column: 34, scope: !10744)
!10758 = !DILocation(line: 2067, column: 29, scope: !10744)
!10759 = !DILocation(line: 2067, column: 3, scope: !10744)
!10760 = distinct !{!10760, !10745, !10761}
!10761 = !DILocation(line: 2071, column: 3, scope: !10738)
!10762 = !DILocation(line: 2072, column: 2, scope: !10739)
!10763 = !DILocation(line: 2073, column: 9, scope: !10649)
!10764 = !DILocation(line: 2073, column: 2, scope: !10649)
!10765 = distinct !DISubprogram(name: "knife_make_chain_cut", scope: !3, file: !3, line: 2340, type: !10766, scopeLine: 2341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!10766 = !DISubroutineType(types: !10767)
!10767 = !{null, !3512, !2730, !1227, !2729}
!10768 = !DILocalVariable(name: "kcd", arg: 1, scope: !10765, file: !3, line: 2340, type: !3512)
!10769 = !DILocation(line: 2340, column: 52, scope: !10765)
!10770 = !DILocalVariable(name: "f", arg: 2, scope: !10765, file: !3, line: 2340, type: !2730)
!10771 = !DILocation(line: 2340, column: 65, scope: !10765)
!10772 = !DILocalVariable(name: "chain", arg: 3, scope: !10765, file: !3, line: 2340, type: !1227)
!10773 = !DILocation(line: 2340, column: 78, scope: !10765)
!10774 = !DILocalVariable(name: "r_f_new", arg: 4, scope: !10765, file: !3, line: 2340, type: !2729)
!10775 = !DILocation(line: 2340, column: 94, scope: !10765)
!10776 = !DILocalVariable(name: "bm", scope: !10765, file: !3, line: 2342, type: !2780)
!10777 = !DILocation(line: 2342, column: 9, scope: !10765)
!10778 = !DILocation(line: 2342, column: 14, scope: !10765)
!10779 = !DILocation(line: 2342, column: 19, scope: !10765)
!10780 = !DILocation(line: 2342, column: 23, scope: !10765)
!10781 = !DILocalVariable(name: "kfe", scope: !10765, file: !3, line: 2343, type: !2861)
!10782 = !DILocation(line: 2343, column: 13, scope: !10765)
!10783 = !DILocalVariable(name: "kfelast", scope: !10765, file: !3, line: 2343, type: !2861)
!10784 = !DILocation(line: 2343, column: 19, scope: !10765)
!10785 = !DILocalVariable(name: "v1", scope: !10765, file: !3, line: 2344, type: !2665)
!10786 = !DILocation(line: 2344, column: 10, scope: !10765)
!10787 = !DILocalVariable(name: "v2", scope: !10765, file: !3, line: 2344, type: !2665)
!10788 = !DILocation(line: 2344, column: 15, scope: !10765)
!10789 = !DILocalVariable(name: "l_v1", scope: !10765, file: !3, line: 2345, type: !2708)
!10790 = !DILocation(line: 2345, column: 10, scope: !10765)
!10791 = !DILocalVariable(name: "l_v2", scope: !10765, file: !3, line: 2345, type: !2708)
!10792 = !DILocation(line: 2345, column: 17, scope: !10765)
!10793 = !DILocalVariable(name: "f_new", scope: !10765, file: !3, line: 2346, type: !2730)
!10794 = !DILocation(line: 2346, column: 10, scope: !10765)
!10795 = !DILocalVariable(name: "ref", scope: !10765, file: !3, line: 2347, type: !3251)
!10796 = !DILocation(line: 2347, column: 7, scope: !10765)
!10797 = !DILocalVariable(name: "kfv", scope: !10765, file: !3, line: 2348, type: !2866)
!10798 = !DILocation(line: 2348, column: 13, scope: !10765)
!10799 = !DILocalVariable(name: "kfvprev", scope: !10765, file: !3, line: 2348, type: !2866)
!10800 = !DILocation(line: 2348, column: 19, scope: !10765)
!10801 = !DILocalVariable(name: "l_new", scope: !10765, file: !3, line: 2349, type: !2708)
!10802 = !DILocation(line: 2349, column: 10, scope: !10765)
!10803 = !DILocalVariable(name: "l_iter", scope: !10765, file: !3, line: 2349, type: !2708)
!10804 = !DILocation(line: 2349, column: 18, scope: !10765)
!10805 = !DILocalVariable(name: "i", scope: !10765, file: !3, line: 2350, type: !35)
!10806 = !DILocation(line: 2350, column: 6, scope: !10765)
!10807 = !DILocalVariable(name: "nco", scope: !10765, file: !3, line: 2351, type: !35)
!10808 = !DILocation(line: 2351, column: 6, scope: !10765)
!10809 = !DILocation(line: 2351, column: 26, scope: !10765)
!10810 = !DILocation(line: 2351, column: 12, scope: !10765)
!10811 = !DILocation(line: 2351, column: 33, scope: !10765)
!10812 = !DILocalVariable(name: "cos", scope: !10765, file: !3, line: 2352, type: !1031)
!10813 = !DILocation(line: 2352, column: 10, scope: !10765)
!10814 = !DILocation(line: 2352, column: 20, scope: !10765)
!10815 = !DILocalVariable(name: "kverts", scope: !10765, file: !3, line: 2353, type: !10816)
!10816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 64)
!10817 = !DILocation(line: 2353, column: 14, scope: !10765)
!10818 = !DILocation(line: 2353, column: 23, scope: !10765)
!10819 = !DILocation(line: 2355, column: 16, scope: !10765)
!10820 = !DILocation(line: 2355, column: 23, scope: !10765)
!10821 = !DILocation(line: 2355, column: 9, scope: !10765)
!10822 = !DILocation(line: 2355, column: 31, scope: !10765)
!10823 = !DILocation(line: 2355, column: 8, scope: !10765)
!10824 = !DILocation(line: 2355, column: 6, scope: !10765)
!10825 = !DILocation(line: 2356, column: 7, scope: !10765)
!10826 = !DILocation(line: 2356, column: 12, scope: !10765)
!10827 = !DILocation(line: 2356, column: 16, scope: !10765)
!10828 = !DILocation(line: 2356, column: 20, scope: !10765)
!10829 = !DILocation(line: 2356, column: 25, scope: !10765)
!10830 = !DILocation(line: 2356, column: 29, scope: !10765)
!10831 = !DILocation(line: 2356, column: 33, scope: !10765)
!10832 = !DILocation(line: 2356, column: 38, scope: !10765)
!10833 = !DILocation(line: 2356, column: 42, scope: !10765)
!10834 = !DILocation(line: 2356, column: 5, scope: !10765)
!10835 = !DILocation(line: 2357, column: 20, scope: !10765)
!10836 = !DILocation(line: 2357, column: 27, scope: !10765)
!10837 = !DILocation(line: 2357, column: 13, scope: !10765)
!10838 = !DILocation(line: 2357, column: 34, scope: !10765)
!10839 = !DILocation(line: 2357, column: 12, scope: !10765)
!10840 = !DILocation(line: 2357, column: 10, scope: !10765)
!10841 = !DILocation(line: 2358, column: 7, scope: !10765)
!10842 = !DILocation(line: 2358, column: 16, scope: !10765)
!10843 = !DILocation(line: 2358, column: 20, scope: !10765)
!10844 = !DILocation(line: 2358, column: 24, scope: !10765)
!10845 = !DILocation(line: 2358, column: 33, scope: !10765)
!10846 = !DILocation(line: 2358, column: 37, scope: !10765)
!10847 = !DILocation(line: 2358, column: 41, scope: !10765)
!10848 = !DILocation(line: 2358, column: 50, scope: !10765)
!10849 = !DILocation(line: 2358, column: 54, scope: !10765)
!10850 = !DILocation(line: 2358, column: 5, scope: !10765)
!10851 = !DILocation(line: 2360, column: 12, scope: !10765)
!10852 = !DILocation(line: 2360, column: 17, scope: !10765)
!10853 = !DILocation(line: 2360, column: 21, scope: !10765)
!10854 = !DILocation(line: 2360, column: 26, scope: !10765)
!10855 = !DILocation(line: 2360, column: 23, scope: !10765)
!10856 = !DILocation(line: 2360, column: 31, scope: !10765)
!10857 = !DILocation(line: 2360, column: 36, scope: !10765)
!10858 = !DILocation(line: 2360, column: 41, scope: !10765)
!10859 = !DILocation(line: 2360, column: 46, scope: !10765)
!10860 = !DILocation(line: 2360, column: 10, scope: !10765)
!10861 = !DILocation(line: 2361, column: 13, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 2361, column: 2)
!10863 = !DILocation(line: 2361, column: 20, scope: !10862)
!10864 = !DILocation(line: 2361, column: 11, scope: !10862)
!10865 = !DILocation(line: 2361, column: 29, scope: !10862)
!10866 = !DILocation(line: 2361, column: 7, scope: !10862)
!10867 = !DILocation(line: 2361, column: 34, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10862, file: !3, line: 2361, column: 2)
!10869 = !DILocation(line: 2361, column: 38, scope: !10868)
!10870 = !DILocation(line: 2361, column: 36, scope: !10868)
!10871 = !DILocation(line: 2361, column: 42, scope: !10868)
!10872 = !DILocation(line: 2361, column: 45, scope: !10868)
!10873 = !DILocation(line: 2361, column: 52, scope: !10868)
!10874 = !DILocation(line: 2361, column: 59, scope: !10868)
!10875 = !DILocation(line: 2361, column: 49, scope: !10868)
!10876 = !DILocation(line: 0, scope: !10868)
!10877 = !DILocation(line: 2361, column: 2, scope: !10862)
!10878 = !DILocation(line: 2362, column: 9, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10868, file: !3, line: 2361, column: 87)
!10880 = !DILocation(line: 2362, column: 14, scope: !10879)
!10881 = !DILocation(line: 2362, column: 7, scope: !10879)
!10882 = !DILocation(line: 2364, column: 9, scope: !10879)
!10883 = !DILocation(line: 2364, column: 14, scope: !10879)
!10884 = !DILocation(line: 2364, column: 20, scope: !10879)
!10885 = !DILocation(line: 2364, column: 17, scope: !10879)
!10886 = !DILocation(line: 2364, column: 30, scope: !10879)
!10887 = !DILocation(line: 2364, column: 35, scope: !10879)
!10888 = !DILocation(line: 2364, column: 40, scope: !10879)
!10889 = !DILocation(line: 2364, column: 45, scope: !10879)
!10890 = !DILocation(line: 2364, column: 7, scope: !10879)
!10891 = !DILocation(line: 2365, column: 14, scope: !10879)
!10892 = !DILocation(line: 2365, column: 18, scope: !10879)
!10893 = !DILocation(line: 2365, column: 22, scope: !10879)
!10894 = !DILocation(line: 2365, column: 27, scope: !10879)
!10895 = !DILocation(line: 2365, column: 3, scope: !10879)
!10896 = !DILocation(line: 2366, column: 15, scope: !10879)
!10897 = !DILocation(line: 2366, column: 3, scope: !10879)
!10898 = !DILocation(line: 2366, column: 10, scope: !10879)
!10899 = !DILocation(line: 2366, column: 13, scope: !10879)
!10900 = !DILocation(line: 2367, column: 13, scope: !10879)
!10901 = !DILocation(line: 2367, column: 11, scope: !10879)
!10902 = !DILocation(line: 2368, column: 2, scope: !10879)
!10903 = !DILocation(line: 2361, column: 71, scope: !10868)
!10904 = !DILocation(line: 2361, column: 76, scope: !10868)
!10905 = !DILocation(line: 2361, column: 69, scope: !10868)
!10906 = !DILocation(line: 2361, column: 83, scope: !10868)
!10907 = !DILocation(line: 2361, column: 2, scope: !10868)
!10908 = distinct !{!10908, !10877, !10909}
!10909 = !DILocation(line: 2368, column: 2, scope: !10862)
!10910 = !DILocation(line: 2370, column: 8, scope: !10765)
!10911 = !DILocation(line: 2372, column: 38, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 2372, column: 6)
!10913 = !DILocation(line: 2372, column: 41, scope: !10912)
!10914 = !DILocation(line: 2372, column: 14, scope: !10912)
!10915 = !DILocation(line: 2372, column: 12, scope: !10912)
!10916 = !DILocation(line: 2372, column: 46, scope: !10912)
!10917 = !DILocation(line: 2373, column: 38, scope: !10912)
!10918 = !DILocation(line: 2373, column: 41, scope: !10912)
!10919 = !DILocation(line: 2373, column: 14, scope: !10912)
!10920 = !DILocation(line: 2373, column: 12, scope: !10912)
!10921 = !DILocation(line: 2372, column: 6, scope: !10765)
!10922 = !DILocation(line: 2375, column: 7, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10924, file: !3, line: 2375, column: 7)
!10924 = distinct !DILexicalBlock(scope: !10912, file: !3, line: 2374, column: 2)
!10925 = !DILocation(line: 2375, column: 11, scope: !10923)
!10926 = !DILocation(line: 2375, column: 7, scope: !10924)
!10927 = !DILocation(line: 2377, column: 8, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 2377, column: 8)
!10929 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 2375, column: 17)
!10930 = !DILocation(line: 2377, column: 14, scope: !10928)
!10931 = !DILocation(line: 2377, column: 11, scope: !10928)
!10932 = !DILocation(line: 2377, column: 17, scope: !10928)
!10933 = !DILocation(line: 2377, column: 35, scope: !10928)
!10934 = !DILocation(line: 2377, column: 39, scope: !10928)
!10935 = !DILocation(line: 2377, column: 20, scope: !10928)
!10936 = !DILocation(line: 2377, column: 8, scope: !10929)
!10937 = !DILocation(line: 2378, column: 11, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10928, file: !3, line: 2377, column: 44)
!10939 = !DILocation(line: 2379, column: 4, scope: !10938)
!10940 = !DILocation(line: 2381, column: 27, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10928, file: !3, line: 2380, column: 9)
!10942 = !DILocation(line: 2381, column: 31, scope: !10941)
!10943 = !DILocation(line: 2381, column: 34, scope: !10941)
!10944 = !DILocation(line: 2381, column: 40, scope: !10941)
!10945 = !DILocation(line: 2381, column: 13, scope: !10941)
!10946 = !DILocation(line: 2381, column: 11, scope: !10941)
!10947 = !DILocation(line: 2383, column: 3, scope: !10929)
!10948 = !DILocation(line: 2385, column: 28, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 2384, column: 8)
!10950 = !DILocation(line: 2385, column: 32, scope: !10949)
!10951 = !DILocation(line: 2385, column: 35, scope: !10949)
!10952 = !DILocation(line: 2385, column: 41, scope: !10949)
!10953 = !DILocation(line: 2385, column: 47, scope: !10949)
!10954 = !DILocation(line: 2385, column: 52, scope: !10949)
!10955 = !DILocation(line: 2385, column: 12, scope: !10949)
!10956 = !DILocation(line: 2385, column: 10, scope: !10949)
!10957 = !DILocation(line: 2386, column: 8, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 2386, column: 8)
!10959 = !DILocation(line: 2386, column: 8, scope: !10949)
!10960 = !DILocation(line: 2388, column: 19, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 2388, column: 5)
!10962 = distinct !DILexicalBlock(scope: !10958, file: !3, line: 2386, column: 15)
!10963 = !DILocation(line: 2388, column: 26, scope: !10961)
!10964 = !DILocation(line: 2388, column: 17, scope: !10961)
!10965 = !DILocation(line: 2388, column: 34, scope: !10961)
!10966 = !DILocation(line: 2388, column: 10, scope: !10961)
!10967 = !DILocation(line: 2388, column: 39, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10961, file: !3, line: 2388, column: 5)
!10969 = !DILocation(line: 2388, column: 43, scope: !10968)
!10970 = !DILocation(line: 2388, column: 41, scope: !10968)
!10971 = !DILocation(line: 2388, column: 5, scope: !10961)
!10972 = !DILocation(line: 2390, column: 10, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 2390, column: 10)
!10974 = distinct !DILexicalBlock(scope: !10968, file: !3, line: 2388, column: 76)
!10975 = !DILocation(line: 2390, column: 15, scope: !10973)
!10976 = !DILocation(line: 2390, column: 10, scope: !10974)
!10977 = !DILocation(line: 2391, column: 26, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10973, file: !3, line: 2390, column: 30)
!10979 = !DILocation(line: 2391, column: 30, scope: !10978)
!10980 = !DILocation(line: 2391, column: 38, scope: !10978)
!10981 = !DILocation(line: 2391, column: 7, scope: !10978)
!10982 = !DILocation(line: 2392, column: 6, scope: !10978)
!10983 = !DILocation(line: 2393, column: 21, scope: !10974)
!10984 = !DILocation(line: 2393, column: 29, scope: !10974)
!10985 = !DILocation(line: 2393, column: 6, scope: !10974)
!10986 = !DILocation(line: 2393, column: 13, scope: !10974)
!10987 = !DILocation(line: 2393, column: 17, scope: !10974)
!10988 = !DILocation(line: 2393, column: 19, scope: !10974)
!10989 = !DILocation(line: 2394, column: 5, scope: !10974)
!10990 = !DILocation(line: 2388, column: 57, scope: !10968)
!10991 = !DILocation(line: 2388, column: 65, scope: !10968)
!10992 = !DILocation(line: 2388, column: 55, scope: !10968)
!10993 = !DILocation(line: 2388, column: 72, scope: !10968)
!10994 = !DILocation(line: 2388, column: 5, scope: !10968)
!10995 = distinct !{!10995, !10971, !10996}
!10996 = !DILocation(line: 2394, column: 5, scope: !10961)
!10997 = !DILocation(line: 2395, column: 4, scope: !10962)
!10998 = !DILocation(line: 2397, column: 2, scope: !10924)
!10999 = !DILocation(line: 2399, column: 9, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10912, file: !3, line: 2398, column: 7)
!11001 = !DILocation(line: 2403, column: 6, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 2403, column: 6)
!11003 = !DILocation(line: 2403, column: 11, scope: !11002)
!11004 = !DILocation(line: 2403, column: 6, scope: !10765)
!11005 = !DILocation(line: 2404, column: 7, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 2404, column: 7)
!11007 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 2403, column: 26)
!11008 = !DILocation(line: 2404, column: 7, scope: !11007)
!11009 = !DILocation(line: 2405, column: 23, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 2404, column: 14)
!11011 = !DILocation(line: 2405, column: 27, scope: !11010)
!11012 = !DILocation(line: 2405, column: 34, scope: !11010)
!11013 = !DILocation(line: 2405, column: 4, scope: !11010)
!11014 = !DILocation(line: 2406, column: 3, scope: !11010)
!11015 = !DILocation(line: 2407, column: 2, scope: !11007)
!11016 = !DILocation(line: 2408, column: 11, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 2408, column: 11)
!11018 = !DILocation(line: 2408, column: 11, scope: !11002)
!11019 = !DILocation(line: 2409, column: 23, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 2408, column: 18)
!11021 = !DILocation(line: 2409, column: 27, scope: !11020)
!11022 = !DILocation(line: 2409, column: 31, scope: !11020)
!11023 = !DILocation(line: 2409, column: 38, scope: !11020)
!11024 = !DILocation(line: 2409, column: 3, scope: !11020)
!11025 = !DILocation(line: 2410, column: 2, scope: !11020)
!11026 = !DILocation(line: 2412, column: 13, scope: !10765)
!11027 = !DILocation(line: 2412, column: 3, scope: !10765)
!11028 = !DILocation(line: 2412, column: 11, scope: !10765)
!11029 = !DILocation(line: 2413, column: 1, scope: !10765)
!11030 = distinct !DISubprogram(name: "knife_edge_in_face", scope: !3, file: !3, line: 2333, type: !11031, scopeLine: 2334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!11031 = !DISubroutineType(types: !11032)
!11032 = !{!1053, !2861, !2730}
!11033 = !DILocalVariable(name: "kfe", arg: 1, scope: !11030, file: !3, line: 2333, type: !2861)
!11034 = !DILocation(line: 2333, column: 43, scope: !11030)
!11035 = !DILocalVariable(name: "f", arg: 2, scope: !11030, file: !3, line: 2333, type: !2730)
!11036 = !DILocation(line: 2333, column: 56, scope: !11030)
!11037 = !DILocation(line: 2335, column: 34, scope: !11030)
!11038 = !DILocation(line: 2335, column: 39, scope: !11030)
!11039 = !DILocation(line: 2335, column: 43, scope: !11030)
!11040 = !DILocation(line: 2335, column: 48, scope: !11030)
!11041 = !DILocation(line: 2335, column: 52, scope: !11030)
!11042 = !DILocation(line: 2335, column: 9, scope: !11030)
!11043 = !DILocation(line: 2335, column: 2, scope: !11030)
!11044 = distinct !DISubprogram(name: "find_hole", scope: !3, file: !3, line: 2114, type: !10650, scopeLine: 2115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!11045 = !DILocalVariable(name: "kcd", arg: 1, scope: !11044, file: !3, line: 2114, type: !3512)
!11046 = !DILocation(line: 2114, column: 46, scope: !11044)
!11047 = !DILocalVariable(name: "fedges", arg: 2, scope: !11044, file: !3, line: 2114, type: !1227)
!11048 = !DILocation(line: 2114, column: 61, scope: !11044)
!11049 = !DILocalVariable(name: "ans", scope: !11044, file: !3, line: 2116, type: !1227)
!11050 = !DILocation(line: 2116, column: 12, scope: !11044)
!11051 = !DILocalVariable(name: "r", scope: !11044, file: !3, line: 2117, type: !3251)
!11052 = !DILocation(line: 2117, column: 7, scope: !11044)
!11053 = !DILocalVariable(name: "ref", scope: !11044, file: !3, line: 2117, type: !3251)
!11054 = !DILocation(line: 2117, column: 11, scope: !11044)
!11055 = !DILocalVariable(name: "kfe", scope: !11044, file: !3, line: 2118, type: !2861)
!11056 = !DILocation(line: 2118, column: 13, scope: !11044)
!11057 = !DILocalVariable(name: "visited_", scope: !11044, file: !3, line: 2119, type: !6045)
!11058 = !DILocation(line: 2119, column: 12, scope: !11044)
!11059 = !DILocalVariable(name: "visited", scope: !11044, file: !3, line: 2119, type: !6120)
!11060 = !DILocation(line: 2119, column: 23, scope: !11044)
!11061 = !DILocalVariable(name: "found", scope: !11044, file: !3, line: 2120, type: !1053)
!11062 = !DILocation(line: 2120, column: 7, scope: !11044)
!11063 = !DILocation(line: 2122, column: 6, scope: !11044)
!11064 = !DILocation(line: 2123, column: 8, scope: !11044)
!11065 = !DILocation(line: 2125, column: 11, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11044, file: !3, line: 2125, column: 2)
!11067 = !DILocation(line: 2125, column: 19, scope: !11066)
!11068 = !DILocation(line: 2125, column: 9, scope: !11066)
!11069 = !DILocation(line: 2125, column: 7, scope: !11066)
!11070 = !DILocation(line: 2125, column: 26, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11066, file: !3, line: 2125, column: 2)
!11072 = !DILocation(line: 2125, column: 28, scope: !11071)
!11073 = !DILocation(line: 2125, column: 32, scope: !11071)
!11074 = !DILocation(line: 2125, column: 31, scope: !11071)
!11075 = !DILocation(line: 0, scope: !11071)
!11076 = !DILocation(line: 2125, column: 2, scope: !11066)
!11077 = !DILocation(line: 2126, column: 9, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11071, file: !3, line: 2125, column: 52)
!11079 = !DILocation(line: 2126, column: 12, scope: !11078)
!11080 = !DILocation(line: 2126, column: 7, scope: !11078)
!11081 = !DILocation(line: 2127, column: 7, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11078, file: !3, line: 2127, column: 7)
!11083 = !DILocation(line: 2127, column: 12, scope: !11082)
!11084 = !DILocation(line: 2127, column: 16, scope: !11082)
!11085 = !DILocation(line: 2127, column: 18, scope: !11082)
!11086 = !DILocation(line: 2127, column: 21, scope: !11082)
!11087 = !DILocation(line: 2127, column: 26, scope: !11082)
!11088 = !DILocation(line: 2127, column: 30, scope: !11082)
!11089 = !DILocation(line: 2127, column: 32, scope: !11082)
!11090 = !DILocation(line: 2127, column: 35, scope: !11082)
!11091 = !DILocation(line: 2127, column: 40, scope: !11082)
!11092 = !DILocation(line: 2127, column: 46, scope: !11082)
!11093 = !DILocation(line: 2127, column: 51, scope: !11082)
!11094 = !DILocation(line: 2127, column: 43, scope: !11082)
!11095 = !DILocation(line: 2127, column: 7, scope: !11078)
!11096 = !DILocation(line: 2128, column: 4, scope: !11082)
!11097 = !DILocation(line: 2130, column: 22, scope: !11078)
!11098 = !DILocation(line: 2130, column: 3, scope: !11078)
!11099 = !DILocation(line: 2131, column: 26, scope: !11078)
!11100 = !DILocation(line: 2131, column: 9, scope: !11078)
!11101 = !DILocation(line: 2131, column: 7, scope: !11078)
!11102 = !DILocation(line: 2132, column: 21, scope: !11078)
!11103 = !DILocation(line: 2132, column: 26, scope: !11078)
!11104 = !DILocation(line: 2132, column: 31, scope: !11078)
!11105 = !DILocation(line: 2132, column: 3, scope: !11078)
!11106 = !DILocation(line: 2134, column: 28, scope: !11078)
!11107 = !DILocation(line: 2134, column: 33, scope: !11078)
!11108 = !DILocation(line: 2134, column: 38, scope: !11078)
!11109 = !DILocation(line: 2134, column: 42, scope: !11078)
!11110 = !DILocation(line: 2134, column: 47, scope: !11078)
!11111 = !DILocation(line: 2134, column: 51, scope: !11078)
!11112 = !DILocation(line: 2134, column: 59, scope: !11078)
!11113 = !DILocation(line: 2134, column: 68, scope: !11078)
!11114 = !DILocation(line: 2134, column: 11, scope: !11078)
!11115 = !DILocation(line: 2134, column: 9, scope: !11078)
!11116 = !DILocation(line: 2136, column: 25, scope: !11078)
!11117 = !DILocation(line: 2136, column: 3, scope: !11078)
!11118 = !DILocation(line: 2137, column: 2, scope: !11078)
!11119 = !DILocation(line: 2125, column: 43, scope: !11071)
!11120 = !DILocation(line: 2125, column: 46, scope: !11071)
!11121 = !DILocation(line: 2125, column: 41, scope: !11071)
!11122 = !DILocation(line: 2125, column: 2, scope: !11071)
!11123 = distinct !{!11123, !11076, !11124}
!11124 = !DILocation(line: 2137, column: 2, scope: !11066)
!11125 = !DILocation(line: 2139, column: 6, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11044, file: !3, line: 2139, column: 6)
!11127 = !DILocation(line: 2139, column: 6, scope: !11044)
!11128 = !DILocation(line: 2140, column: 12, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 2140, column: 3)
!11130 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 2139, column: 13)
!11131 = !DILocation(line: 2140, column: 17, scope: !11129)
!11132 = !DILocation(line: 2140, column: 10, scope: !11129)
!11133 = !DILocation(line: 2140, column: 8, scope: !11129)
!11134 = !DILocation(line: 2140, column: 24, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 2140, column: 3)
!11136 = !DILocation(line: 2140, column: 3, scope: !11129)
!11137 = !DILocation(line: 2141, column: 10, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11135, file: !3, line: 2140, column: 40)
!11139 = !DILocation(line: 2141, column: 13, scope: !11138)
!11140 = !DILocation(line: 2141, column: 8, scope: !11138)
!11141 = !DILocation(line: 2142, column: 19, scope: !11138)
!11142 = !DILocation(line: 2142, column: 27, scope: !11138)
!11143 = !DILocation(line: 2142, column: 30, scope: !11138)
!11144 = !DILocation(line: 2142, column: 10, scope: !11138)
!11145 = !DILocation(line: 2142, column: 8, scope: !11138)
!11146 = !DILocation(line: 2143, column: 8, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11138, file: !3, line: 2143, column: 8)
!11148 = !DILocation(line: 2143, column: 8, scope: !11138)
!11149 = !DILocation(line: 2144, column: 17, scope: !11147)
!11150 = !DILocation(line: 2144, column: 25, scope: !11147)
!11151 = !DILocation(line: 2144, column: 5, scope: !11147)
!11152 = !DILocation(line: 2145, column: 3, scope: !11138)
!11153 = !DILocation(line: 2140, column: 31, scope: !11135)
!11154 = !DILocation(line: 2140, column: 34, scope: !11135)
!11155 = !DILocation(line: 2140, column: 29, scope: !11135)
!11156 = !DILocation(line: 2140, column: 3, scope: !11135)
!11157 = distinct !{!11157, !11136, !11158}
!11158 = !DILocation(line: 2145, column: 3, scope: !11129)
!11159 = !DILocation(line: 2146, column: 10, scope: !11130)
!11160 = !DILocation(line: 2146, column: 3, scope: !11130)
!11161 = !DILocation(line: 2149, column: 3, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 2148, column: 7)
!11163 = !DILocation(line: 2151, column: 1, scope: !11044)
!11164 = distinct !DISubprogram(name: "find_hole_chains", scope: !3, file: !3, line: 2157, type: !11165, scopeLine: 2159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!11165 = !DISubroutineType(types: !11166)
!11166 = !{!1053, !3512, !1227, !2730, !11167, !11167}
!11167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!11168 = !DILocalVariable(name: "kcd", arg: 1, scope: !11164, file: !3, line: 2157, type: !3512)
!11169 = !DILocation(line: 2157, column: 48, scope: !11164)
!11170 = !DILocalVariable(name: "hole", arg: 2, scope: !11164, file: !3, line: 2157, type: !1227)
!11171 = !DILocation(line: 2157, column: 63, scope: !11164)
!11172 = !DILocalVariable(name: "f", arg: 3, scope: !11164, file: !3, line: 2157, type: !2730)
!11173 = !DILocation(line: 2157, column: 77, scope: !11164)
!11174 = !DILocalVariable(name: "mainchain", arg: 4, scope: !11164, file: !3, line: 2157, type: !11167)
!11175 = !DILocation(line: 2157, column: 91, scope: !11164)
!11176 = !DILocalVariable(name: "sidechain", arg: 5, scope: !11164, file: !3, line: 2158, type: !11167)
!11177 = !DILocation(line: 2158, column: 41, scope: !11164)
!11178 = !DILocalVariable(name: "fco", scope: !11164, file: !3, line: 2160, type: !11179)
!11179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!11180 = !DILocation(line: 2160, column: 10, scope: !11164)
!11181 = !DILocalVariable(name: "hco", scope: !11164, file: !3, line: 2160, type: !11179)
!11182 = !DILocation(line: 2160, column: 21, scope: !11164)
!11183 = !DILocalVariable(name: "fv", scope: !11164, file: !3, line: 2161, type: !2664)
!11184 = !DILocation(line: 2161, column: 11, scope: !11164)
!11185 = !DILocalVariable(name: "hv", scope: !11164, file: !3, line: 2162, type: !10816)
!11186 = !DILocation(line: 2162, column: 14, scope: !11164)
!11187 = !DILocalVariable(name: "he", scope: !11164, file: !3, line: 2163, type: !9755)
!11188 = !DILocation(line: 2163, column: 14, scope: !11164)
!11189 = !DILocalVariable(name: "r", scope: !11164, file: !3, line: 2164, type: !3251)
!11190 = !DILocation(line: 2164, column: 7, scope: !11164)
!11191 = !DILocalVariable(name: "kfv", scope: !11164, file: !3, line: 2165, type: !2866)
!11192 = !DILocation(line: 2165, column: 13, scope: !11164)
!11193 = !DILocalVariable(name: "kfvother", scope: !11164, file: !3, line: 2165, type: !2866)
!11194 = !DILocation(line: 2165, column: 19, scope: !11164)
!11195 = !DILocalVariable(name: "kfe", scope: !11164, file: !3, line: 2166, type: !2861)
!11196 = !DILocation(line: 2166, column: 13, scope: !11164)
!11197 = !DILocalVariable(name: "chain", scope: !11164, file: !3, line: 2167, type: !1227)
!11198 = !DILocation(line: 2167, column: 12, scope: !11164)
!11199 = !DILocalVariable(name: "v", scope: !11164, file: !3, line: 2168, type: !2665)
!11200 = !DILocation(line: 2168, column: 10, scope: !11164)
!11201 = !DILocalVariable(name: "iter", scope: !11164, file: !3, line: 2169, type: !3967)
!11202 = !DILocation(line: 2169, column: 9, scope: !11164)
!11203 = !DILocalVariable(name: "nh", scope: !11164, file: !3, line: 2170, type: !35)
!11204 = !DILocation(line: 2170, column: 6, scope: !11164)
!11205 = !DILocalVariable(name: "nf", scope: !11164, file: !3, line: 2170, type: !35)
!11206 = !DILocation(line: 2170, column: 10, scope: !11164)
!11207 = !DILocalVariable(name: "i", scope: !11164, file: !3, line: 2170, type: !35)
!11208 = !DILocation(line: 2170, column: 14, scope: !11164)
!11209 = !DILocalVariable(name: "j", scope: !11164, file: !3, line: 2170, type: !35)
!11210 = !DILocation(line: 2170, column: 17, scope: !11164)
!11211 = !DILocalVariable(name: "k", scope: !11164, file: !3, line: 2170, type: !35)
!11212 = !DILocation(line: 2170, column: 20, scope: !11164)
!11213 = !DILocalVariable(name: "m", scope: !11164, file: !3, line: 2170, type: !35)
!11214 = !DILocation(line: 2170, column: 23, scope: !11164)
!11215 = !DILocalVariable(name: "ax", scope: !11164, file: !3, line: 2170, type: !35)
!11216 = !DILocation(line: 2170, column: 26, scope: !11164)
!11217 = !DILocalVariable(name: "ay", scope: !11164, file: !3, line: 2170, type: !35)
!11218 = !DILocation(line: 2170, column: 30, scope: !11164)
!11219 = !DILocalVariable(name: "sep", scope: !11164, file: !3, line: 2170, type: !35)
!11220 = !DILocation(line: 2170, column: 34, scope: !11164)
!11221 = !DILocalVariable(name: "bestsep", scope: !11164, file: !3, line: 2170, type: !35)
!11222 = !DILocation(line: 2170, column: 64, scope: !11164)
!11223 = !DILocalVariable(name: "besti", scope: !11164, file: !3, line: 2171, type: !1478)
!11224 = !DILocation(line: 2171, column: 6, scope: !11164)
!11225 = !DILocalVariable(name: "bestj", scope: !11164, file: !3, line: 2171, type: !1478)
!11226 = !DILocation(line: 2171, column: 16, scope: !11164)
!11227 = !DILocalVariable(name: "dist_sq", scope: !11164, file: !3, line: 2172, type: !357)
!11228 = !DILocation(line: 2172, column: 8, scope: !11164)
!11229 = !DILocalVariable(name: "dist_best_sq", scope: !11164, file: !3, line: 2172, type: !357)
!11230 = !DILocation(line: 2172, column: 17, scope: !11164)
!11231 = !DILocation(line: 2174, column: 21, scope: !11164)
!11232 = !DILocation(line: 2174, column: 7, scope: !11164)
!11233 = !DILocation(line: 2174, column: 5, scope: !11164)
!11234 = !DILocation(line: 2175, column: 7, scope: !11164)
!11235 = !DILocation(line: 2175, column: 10, scope: !11164)
!11236 = !DILocation(line: 2175, column: 5, scope: !11164)
!11237 = !DILocation(line: 2176, column: 6, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 2176, column: 6)
!11239 = !DILocation(line: 2176, column: 9, scope: !11238)
!11240 = !DILocation(line: 2176, column: 13, scope: !11238)
!11241 = !DILocation(line: 2176, column: 16, scope: !11238)
!11242 = !DILocation(line: 2176, column: 19, scope: !11238)
!11243 = !DILocation(line: 2176, column: 6, scope: !11164)
!11244 = !DILocation(line: 2177, column: 3, scope: !11238)
!11245 = !DILocation(line: 2181, column: 29, scope: !11164)
!11246 = !DILocation(line: 2181, column: 32, scope: !11164)
!11247 = !DILocation(line: 2181, column: 2, scope: !11164)
!11248 = !DILocation(line: 2182, column: 27, scope: !11164)
!11249 = !DILocation(line: 2182, column: 32, scope: !11164)
!11250 = !DILocation(line: 2182, column: 39, scope: !11164)
!11251 = !DILocation(line: 2182, column: 42, scope: !11164)
!11252 = !DILocation(line: 2182, column: 8, scope: !11164)
!11253 = !DILocation(line: 2182, column: 6, scope: !11164)
!11254 = !DILocation(line: 2183, column: 27, scope: !11164)
!11255 = !DILocation(line: 2183, column: 32, scope: !11164)
!11256 = !DILocation(line: 2183, column: 39, scope: !11164)
!11257 = !DILocation(line: 2183, column: 42, scope: !11164)
!11258 = !DILocation(line: 2183, column: 8, scope: !11164)
!11259 = !DILocation(line: 2183, column: 6, scope: !11164)
!11260 = !DILocation(line: 2184, column: 26, scope: !11164)
!11261 = !DILocation(line: 2184, column: 31, scope: !11164)
!11262 = !DILocation(line: 2184, column: 38, scope: !11164)
!11263 = !DILocation(line: 2184, column: 41, scope: !11164)
!11264 = !DILocation(line: 2184, column: 7, scope: !11164)
!11265 = !DILocation(line: 2184, column: 5, scope: !11164)
!11266 = !DILocation(line: 2185, column: 26, scope: !11164)
!11267 = !DILocation(line: 2185, column: 31, scope: !11164)
!11268 = !DILocation(line: 2185, column: 38, scope: !11164)
!11269 = !DILocation(line: 2185, column: 41, scope: !11164)
!11270 = !DILocation(line: 2185, column: 7, scope: !11164)
!11271 = !DILocation(line: 2185, column: 5, scope: !11164)
!11272 = !DILocation(line: 2186, column: 26, scope: !11164)
!11273 = !DILocation(line: 2186, column: 31, scope: !11164)
!11274 = !DILocation(line: 2186, column: 38, scope: !11164)
!11275 = !DILocation(line: 2186, column: 41, scope: !11164)
!11276 = !DILocation(line: 2186, column: 7, scope: !11164)
!11277 = !DILocation(line: 2186, column: 5, scope: !11164)
!11278 = !DILocation(line: 2188, column: 4, scope: !11164)
!11279 = !DILocation(line: 2189, column: 6, scope: !11164)
!11280 = !DILocation(line: 2190, column: 11, scope: !11164)
!11281 = !DILocation(line: 2191, column: 11, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 2191, column: 2)
!11283 = !DILocation(line: 2191, column: 17, scope: !11282)
!11284 = !DILocation(line: 2191, column: 9, scope: !11282)
!11285 = !DILocation(line: 2191, column: 7, scope: !11282)
!11286 = !DILocation(line: 2191, column: 24, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11282, file: !3, line: 2191, column: 2)
!11288 = !DILocation(line: 2191, column: 2, scope: !11282)
!11289 = !DILocation(line: 2192, column: 9, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 2191, column: 40)
!11291 = !DILocation(line: 2192, column: 12, scope: !11290)
!11292 = !DILocation(line: 2192, column: 7, scope: !11290)
!11293 = !DILocation(line: 2193, column: 11, scope: !11290)
!11294 = !DILocation(line: 2193, column: 3, scope: !11290)
!11295 = !DILocation(line: 2193, column: 6, scope: !11290)
!11296 = !DILocation(line: 2193, column: 9, scope: !11290)
!11297 = !DILocation(line: 2194, column: 7, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11290, file: !3, line: 2194, column: 7)
!11299 = !DILocation(line: 2194, column: 16, scope: !11298)
!11300 = !DILocation(line: 2194, column: 7, scope: !11290)
!11301 = !DILocation(line: 2195, column: 10, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11298, file: !3, line: 2194, column: 25)
!11303 = !DILocation(line: 2195, column: 15, scope: !11302)
!11304 = !DILocation(line: 2195, column: 8, scope: !11302)
!11305 = !DILocation(line: 2196, column: 3, scope: !11302)
!11306 = !DILocation(line: 2198, column: 10, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11298, file: !3, line: 2197, column: 8)
!11308 = !DILocation(line: 2198, column: 8, scope: !11307)
!11309 = !DILocation(line: 2201, column: 15, scope: !11290)
!11310 = !DILocation(line: 2201, column: 20, scope: !11290)
!11311 = !DILocation(line: 2201, column: 23, scope: !11290)
!11312 = !DILocation(line: 2201, column: 3, scope: !11290)
!11313 = !DILocation(line: 2201, column: 7, scope: !11290)
!11314 = !DILocation(line: 2201, column: 13, scope: !11290)
!11315 = !DILocation(line: 2202, column: 15, scope: !11290)
!11316 = !DILocation(line: 2202, column: 20, scope: !11290)
!11317 = !DILocation(line: 2202, column: 23, scope: !11290)
!11318 = !DILocation(line: 2202, column: 3, scope: !11290)
!11319 = !DILocation(line: 2202, column: 7, scope: !11290)
!11320 = !DILocation(line: 2202, column: 13, scope: !11290)
!11321 = !DILocation(line: 2203, column: 11, scope: !11290)
!11322 = !DILocation(line: 2203, column: 3, scope: !11290)
!11323 = !DILocation(line: 2203, column: 6, scope: !11290)
!11324 = !DILocation(line: 2203, column: 9, scope: !11290)
!11325 = !DILocation(line: 2204, column: 15, scope: !11290)
!11326 = !DILocation(line: 2204, column: 20, scope: !11290)
!11327 = !DILocation(line: 2204, column: 26, scope: !11290)
!11328 = !DILocation(line: 2204, column: 23, scope: !11290)
!11329 = !DILocation(line: 2204, column: 14, scope: !11290)
!11330 = !DILocation(line: 2204, column: 33, scope: !11290)
!11331 = !DILocation(line: 2204, column: 38, scope: !11290)
!11332 = !DILocation(line: 2204, column: 43, scope: !11290)
!11333 = !DILocation(line: 2204, column: 48, scope: !11290)
!11334 = !DILocation(line: 2204, column: 12, scope: !11290)
!11335 = !DILocation(line: 2205, column: 4, scope: !11290)
!11336 = !DILocation(line: 2206, column: 2, scope: !11290)
!11337 = !DILocation(line: 2191, column: 31, scope: !11287)
!11338 = !DILocation(line: 2191, column: 34, scope: !11287)
!11339 = !DILocation(line: 2191, column: 29, scope: !11287)
!11340 = !DILocation(line: 2191, column: 2, scope: !11287)
!11341 = distinct !{!11341, !11288, !11342}
!11342 = !DILocation(line: 2206, column: 2, scope: !11282)
!11343 = !DILocation(line: 2208, column: 4, scope: !11164)
!11344 = !DILocation(line: 2209, column: 2, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 2209, column: 2)
!11346 = !DILocation(line: 2209, column: 2, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 2209, column: 2)
!11348 = !DILocation(line: 2210, column: 15, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11347, file: !3, line: 2209, column: 47)
!11350 = !DILocation(line: 2210, column: 18, scope: !11349)
!11351 = !DILocation(line: 2210, column: 21, scope: !11349)
!11352 = !DILocation(line: 2210, column: 3, scope: !11349)
!11353 = !DILocation(line: 2210, column: 7, scope: !11349)
!11354 = !DILocation(line: 2210, column: 13, scope: !11349)
!11355 = !DILocation(line: 2211, column: 15, scope: !11349)
!11356 = !DILocation(line: 2211, column: 18, scope: !11349)
!11357 = !DILocation(line: 2211, column: 21, scope: !11349)
!11358 = !DILocation(line: 2211, column: 3, scope: !11349)
!11359 = !DILocation(line: 2211, column: 7, scope: !11349)
!11360 = !DILocation(line: 2211, column: 13, scope: !11349)
!11361 = !DILocation(line: 2212, column: 11, scope: !11349)
!11362 = !DILocation(line: 2212, column: 3, scope: !11349)
!11363 = !DILocation(line: 2212, column: 6, scope: !11349)
!11364 = !DILocation(line: 2212, column: 9, scope: !11349)
!11365 = !DILocation(line: 2213, column: 4, scope: !11349)
!11366 = !DILocation(line: 2214, column: 2, scope: !11349)
!11367 = distinct !{!11367, !11344, !11368}
!11368 = !DILocation(line: 2214, column: 2, scope: !11345)
!11369 = !DILocation(line: 2220, column: 9, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 2220, column: 2)
!11371 = !DILocation(line: 2220, column: 7, scope: !11370)
!11372 = !DILocation(line: 2220, column: 14, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11370, file: !3, line: 2220, column: 2)
!11374 = !DILocation(line: 2220, column: 16, scope: !11373)
!11375 = !DILocation(line: 2220, column: 2, scope: !11370)
!11376 = !DILocation(line: 2221, column: 9, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 2220, column: 26)
!11378 = !DILocation(line: 2221, column: 3, scope: !11377)
!11379 = !DILocation(line: 2221, column: 12, scope: !11377)
!11380 = !DILocation(line: 2222, column: 9, scope: !11377)
!11381 = !DILocation(line: 2222, column: 3, scope: !11377)
!11382 = !DILocation(line: 2222, column: 12, scope: !11377)
!11383 = !DILocation(line: 2223, column: 16, scope: !11377)
!11384 = !DILocation(line: 2224, column: 11, scope: !11377)
!11385 = !DILocation(line: 2225, column: 10, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 2225, column: 3)
!11387 = !DILocation(line: 2225, column: 8, scope: !11386)
!11388 = !DILocation(line: 2225, column: 15, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11386, file: !3, line: 2225, column: 3)
!11390 = !DILocation(line: 2225, column: 19, scope: !11389)
!11391 = !DILocation(line: 2225, column: 17, scope: !11389)
!11392 = !DILocation(line: 2225, column: 3, scope: !11386)
!11393 = !DILocation(line: 2226, column: 8, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 2226, column: 8)
!11395 = distinct !DILexicalBlock(scope: !11389, file: !3, line: 2225, column: 28)
!11396 = !DILocation(line: 2226, column: 10, scope: !11394)
!11397 = !DILocation(line: 2226, column: 8, scope: !11395)
!11398 = !DILocation(line: 2227, column: 9, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 2227, column: 9)
!11400 = distinct !DILexicalBlock(scope: !11394, file: !3, line: 2226, column: 16)
!11401 = !DILocation(line: 2227, column: 14, scope: !11399)
!11402 = !DILocation(line: 2227, column: 11, scope: !11399)
!11403 = !DILocation(line: 2227, column: 9, scope: !11400)
!11404 = !DILocation(line: 2228, column: 6, scope: !11399)
!11405 = !DILocation(line: 2229, column: 12, scope: !11400)
!11406 = !DILocation(line: 2229, column: 16, scope: !11400)
!11407 = !DILocation(line: 2229, column: 14, scope: !11400)
!11408 = !DILocation(line: 2229, column: 21, scope: !11400)
!11409 = !DILocation(line: 2229, column: 19, scope: !11400)
!11410 = !DILocation(line: 2229, column: 33, scope: !11400)
!11411 = !DILocation(line: 2229, column: 31, scope: !11400)
!11412 = !DILocation(line: 2229, column: 9, scope: !11400)
!11413 = !DILocation(line: 2230, column: 11, scope: !11400)
!11414 = !DILocation(line: 2230, column: 9, scope: !11400)
!11415 = !DILocation(line: 2231, column: 9, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 2231, column: 9)
!11417 = !DILocation(line: 2231, column: 15, scope: !11416)
!11418 = !DILocation(line: 2231, column: 13, scope: !11416)
!11419 = !DILocation(line: 2231, column: 9, scope: !11400)
!11420 = !DILocation(line: 2232, column: 6, scope: !11416)
!11421 = !DILocation(line: 2233, column: 18, scope: !11400)
!11422 = !DILocation(line: 2234, column: 4, scope: !11400)
!11423 = !DILocation(line: 2235, column: 11, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 2235, column: 4)
!11425 = !DILocation(line: 2235, column: 9, scope: !11424)
!11426 = !DILocation(line: 2235, column: 16, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11424, file: !3, line: 2235, column: 4)
!11428 = !DILocation(line: 2235, column: 20, scope: !11427)
!11429 = !DILocation(line: 2235, column: 18, scope: !11427)
!11430 = !DILocation(line: 2235, column: 4, scope: !11424)
!11431 = !DILocalVariable(name: "ok", scope: !11432, file: !3, line: 2236, type: !1053)
!11432 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 2235, column: 29)
!11433 = !DILocation(line: 2236, column: 10, scope: !11432)
!11434 = !DILocation(line: 2238, column: 9, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 2238, column: 9)
!11436 = !DILocation(line: 2238, column: 11, scope: !11435)
!11437 = !DILocation(line: 2238, column: 16, scope: !11435)
!11438 = !DILocation(line: 2238, column: 19, scope: !11435)
!11439 = !DILocation(line: 2238, column: 24, scope: !11435)
!11440 = !DILocation(line: 2238, column: 21, scope: !11435)
!11441 = !DILocation(line: 2238, column: 9, scope: !11432)
!11442 = !DILocation(line: 2239, column: 6, scope: !11435)
!11443 = !DILocation(line: 2240, column: 32, scope: !11432)
!11444 = !DILocation(line: 2240, column: 36, scope: !11432)
!11445 = !DILocation(line: 2240, column: 40, scope: !11432)
!11446 = !DILocation(line: 2240, column: 44, scope: !11432)
!11447 = !DILocation(line: 2240, column: 15, scope: !11432)
!11448 = !DILocation(line: 2240, column: 13, scope: !11432)
!11449 = !DILocation(line: 2241, column: 9, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 2241, column: 9)
!11451 = !DILocation(line: 2241, column: 19, scope: !11450)
!11452 = !DILocation(line: 2241, column: 17, scope: !11450)
!11453 = !DILocation(line: 2241, column: 9, scope: !11432)
!11454 = !DILocation(line: 2242, column: 6, scope: !11450)
!11455 = !DILocation(line: 2244, column: 8, scope: !11432)
!11456 = !DILocation(line: 2245, column: 12, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 2245, column: 5)
!11458 = !DILocation(line: 2245, column: 10, scope: !11457)
!11459 = !DILocation(line: 2245, column: 17, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11457, file: !3, line: 2245, column: 5)
!11461 = !DILocation(line: 2245, column: 21, scope: !11460)
!11462 = !DILocation(line: 2245, column: 19, scope: !11460)
!11463 = !DILocation(line: 2245, column: 24, scope: !11460)
!11464 = !DILocation(line: 2245, column: 27, scope: !11460)
!11465 = !DILocation(line: 0, scope: !11460)
!11466 = !DILocation(line: 2245, column: 5, scope: !11457)
!11467 = !DILocation(line: 2246, column: 10, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11469, file: !3, line: 2246, column: 10)
!11469 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 2245, column: 36)
!11470 = !DILocation(line: 2246, column: 15, scope: !11468)
!11471 = !DILocation(line: 2246, column: 12, scope: !11468)
!11472 = !DILocation(line: 2246, column: 17, scope: !11468)
!11473 = !DILocation(line: 2246, column: 21, scope: !11468)
!11474 = !DILocation(line: 2246, column: 23, scope: !11468)
!11475 = !DILocation(line: 2246, column: 30, scope: !11468)
!11476 = !DILocation(line: 2246, column: 28, scope: !11468)
!11477 = !DILocation(line: 2246, column: 36, scope: !11468)
!11478 = !DILocation(line: 2246, column: 33, scope: !11468)
!11479 = !DILocation(line: 2246, column: 10, scope: !11469)
!11480 = !DILocation(line: 2247, column: 7, scope: !11468)
!11481 = !DILocation(line: 2248, column: 29, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11469, file: !3, line: 2248, column: 10)
!11483 = !DILocation(line: 2248, column: 33, scope: !11482)
!11484 = !DILocation(line: 2248, column: 37, scope: !11482)
!11485 = !DILocation(line: 2248, column: 41, scope: !11482)
!11486 = !DILocation(line: 2248, column: 45, scope: !11482)
!11487 = !DILocation(line: 2248, column: 49, scope: !11482)
!11488 = !DILocation(line: 2248, column: 53, scope: !11482)
!11489 = !DILocation(line: 2248, column: 58, scope: !11482)
!11490 = !DILocation(line: 2248, column: 60, scope: !11482)
!11491 = !DILocation(line: 2248, column: 67, scope: !11482)
!11492 = !DILocation(line: 2248, column: 65, scope: !11482)
!11493 = !DILocation(line: 2248, column: 10, scope: !11482)
!11494 = !DILocation(line: 2248, column: 10, scope: !11469)
!11495 = !DILocation(line: 2249, column: 10, scope: !11482)
!11496 = !DILocation(line: 2249, column: 7, scope: !11482)
!11497 = !DILocation(line: 2250, column: 5, scope: !11469)
!11498 = !DILocation(line: 2245, column: 32, scope: !11460)
!11499 = !DILocation(line: 2245, column: 5, scope: !11460)
!11500 = distinct !{!11500, !11466, !11501}
!11501 = !DILocation(line: 2250, column: 5, scope: !11457)
!11502 = !DILocation(line: 2251, column: 10, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 2251, column: 9)
!11504 = !DILocation(line: 2251, column: 9, scope: !11432)
!11505 = !DILocation(line: 2252, column: 6, scope: !11503)
!11506 = !DILocation(line: 2253, column: 12, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 2253, column: 5)
!11508 = !DILocation(line: 2253, column: 10, scope: !11507)
!11509 = !DILocation(line: 2253, column: 17, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 2253, column: 5)
!11511 = !DILocation(line: 2253, column: 21, scope: !11510)
!11512 = !DILocation(line: 2253, column: 19, scope: !11510)
!11513 = !DILocation(line: 2253, column: 24, scope: !11510)
!11514 = !DILocation(line: 2253, column: 27, scope: !11510)
!11515 = !DILocation(line: 0, scope: !11510)
!11516 = !DILocation(line: 2253, column: 5, scope: !11507)
!11517 = !DILocation(line: 2254, column: 10, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 2254, column: 10)
!11519 = distinct !DILexicalBlock(scope: !11510, file: !3, line: 2253, column: 36)
!11520 = !DILocation(line: 2254, column: 15, scope: !11518)
!11521 = !DILocation(line: 2254, column: 12, scope: !11518)
!11522 = !DILocation(line: 2254, column: 17, scope: !11518)
!11523 = !DILocation(line: 2254, column: 21, scope: !11518)
!11524 = !DILocation(line: 2254, column: 23, scope: !11518)
!11525 = !DILocation(line: 2254, column: 30, scope: !11518)
!11526 = !DILocation(line: 2254, column: 28, scope: !11518)
!11527 = !DILocation(line: 2254, column: 36, scope: !11518)
!11528 = !DILocation(line: 2254, column: 33, scope: !11518)
!11529 = !DILocation(line: 2254, column: 10, scope: !11519)
!11530 = !DILocation(line: 2255, column: 7, scope: !11518)
!11531 = !DILocation(line: 2256, column: 29, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 2256, column: 10)
!11533 = !DILocation(line: 2256, column: 33, scope: !11532)
!11534 = !DILocation(line: 2256, column: 37, scope: !11532)
!11535 = !DILocation(line: 2256, column: 41, scope: !11532)
!11536 = !DILocation(line: 2256, column: 45, scope: !11532)
!11537 = !DILocation(line: 2256, column: 49, scope: !11532)
!11538 = !DILocation(line: 2256, column: 53, scope: !11532)
!11539 = !DILocation(line: 2256, column: 58, scope: !11532)
!11540 = !DILocation(line: 2256, column: 60, scope: !11532)
!11541 = !DILocation(line: 2256, column: 67, scope: !11532)
!11542 = !DILocation(line: 2256, column: 65, scope: !11532)
!11543 = !DILocation(line: 2256, column: 10, scope: !11532)
!11544 = !DILocation(line: 2256, column: 10, scope: !11519)
!11545 = !DILocation(line: 2257, column: 10, scope: !11532)
!11546 = !DILocation(line: 2257, column: 7, scope: !11532)
!11547 = !DILocation(line: 2258, column: 5, scope: !11519)
!11548 = !DILocation(line: 2253, column: 32, scope: !11510)
!11549 = !DILocation(line: 2253, column: 5, scope: !11510)
!11550 = distinct !{!11550, !11516, !11551}
!11551 = !DILocation(line: 2258, column: 5, scope: !11507)
!11552 = !DILocation(line: 2259, column: 9, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 2259, column: 9)
!11554 = !DILocation(line: 2259, column: 9, scope: !11432)
!11555 = !DILocation(line: 2260, column: 17, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11553, file: !3, line: 2259, column: 13)
!11557 = !DILocation(line: 2260, column: 12, scope: !11556)
!11558 = !DILocation(line: 2260, column: 6, scope: !11556)
!11559 = !DILocation(line: 2260, column: 15, scope: !11556)
!11560 = !DILocation(line: 2261, column: 17, scope: !11556)
!11561 = !DILocation(line: 2261, column: 12, scope: !11556)
!11562 = !DILocation(line: 2261, column: 6, scope: !11556)
!11563 = !DILocation(line: 2261, column: 15, scope: !11556)
!11564 = !DILocation(line: 2262, column: 10, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 2262, column: 10)
!11566 = !DILocation(line: 2262, column: 12, scope: !11565)
!11567 = !DILocation(line: 2262, column: 10, scope: !11556)
!11568 = !DILocation(line: 2263, column: 17, scope: !11565)
!11569 = !DILocation(line: 2263, column: 15, scope: !11565)
!11570 = !DILocation(line: 2263, column: 7, scope: !11565)
!11571 = !DILocation(line: 2264, column: 21, scope: !11556)
!11572 = !DILocation(line: 2264, column: 19, scope: !11556)
!11573 = !DILocation(line: 2265, column: 5, scope: !11556)
!11574 = !DILocation(line: 2266, column: 4, scope: !11432)
!11575 = !DILocation(line: 2235, column: 25, scope: !11427)
!11576 = !DILocation(line: 2235, column: 4, scope: !11427)
!11577 = distinct !{!11577, !11430, !11578}
!11578 = !DILocation(line: 2266, column: 4, scope: !11424)
!11579 = !DILocation(line: 2267, column: 3, scope: !11395)
!11580 = !DILocation(line: 2225, column: 24, scope: !11389)
!11581 = !DILocation(line: 2225, column: 3, scope: !11389)
!11582 = distinct !{!11582, !11392, !11583}
!11583 = !DILocation(line: 2267, column: 3, scope: !11386)
!11584 = !DILocation(line: 2268, column: 2, scope: !11377)
!11585 = !DILocation(line: 2220, column: 22, scope: !11373)
!11586 = !DILocation(line: 2220, column: 2, scope: !11373)
!11587 = distinct !{!11587, !11375, !11588}
!11588 = !DILocation(line: 2268, column: 2, scope: !11370)
!11589 = !DILocation(line: 2270, column: 6, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 2270, column: 6)
!11591 = !DILocation(line: 2270, column: 15, scope: !11590)
!11592 = !DILocation(line: 2270, column: 21, scope: !11590)
!11593 = !DILocation(line: 2270, column: 24, scope: !11590)
!11594 = !DILocation(line: 2270, column: 33, scope: !11590)
!11595 = !DILocation(line: 2270, column: 6, scope: !11164)
!11596 = !DILocation(line: 2272, column: 24, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 2270, column: 40)
!11598 = !DILocation(line: 2272, column: 9, scope: !11597)
!11599 = !DILocation(line: 2272, column: 7, scope: !11597)
!11600 = !DILocation(line: 2273, column: 31, scope: !11597)
!11601 = !DILocation(line: 2273, column: 36, scope: !11597)
!11602 = !DILocation(line: 2273, column: 39, scope: !11597)
!11603 = !DILocation(line: 2273, column: 13, scope: !11597)
!11604 = !DILocation(line: 2273, column: 3, scope: !11597)
!11605 = !DILocation(line: 2273, column: 8, scope: !11597)
!11606 = !DILocation(line: 2273, column: 11, scope: !11597)
!11607 = !DILocation(line: 2274, column: 13, scope: !11597)
!11608 = !DILocation(line: 2274, column: 16, scope: !11597)
!11609 = !DILocation(line: 2274, column: 3, scope: !11597)
!11610 = !DILocation(line: 2274, column: 8, scope: !11597)
!11611 = !DILocation(line: 2274, column: 11, scope: !11597)
!11612 = !DILocation(line: 2275, column: 28, scope: !11597)
!11613 = !DILocation(line: 2275, column: 11, scope: !11597)
!11614 = !DILocation(line: 2275, column: 9, scope: !11597)
!11615 = !DILocation(line: 2276, column: 21, scope: !11597)
!11616 = !DILocation(line: 2276, column: 26, scope: !11597)
!11617 = !DILocation(line: 2276, column: 33, scope: !11597)
!11618 = !DILocation(line: 2276, column: 3, scope: !11597)
!11619 = !DILocation(line: 2277, column: 12, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 2277, column: 3)
!11621 = !DILocation(line: 2277, column: 10, scope: !11620)
!11622 = !DILocation(line: 2277, column: 8, scope: !11620)
!11623 = !DILocation(line: 2277, column: 22, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 2277, column: 3)
!11625 = !DILocation(line: 2277, column: 27, scope: !11624)
!11626 = !DILocation(line: 2277, column: 24, scope: !11624)
!11627 = !DILocation(line: 2277, column: 3, scope: !11620)
!11628 = !DILocation(line: 2278, column: 22, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 2277, column: 55)
!11630 = !DILocation(line: 2278, column: 27, scope: !11629)
!11631 = !DILocation(line: 2278, column: 34, scope: !11629)
!11632 = !DILocation(line: 2278, column: 37, scope: !11629)
!11633 = !DILocation(line: 2278, column: 4, scope: !11629)
!11634 = !DILocation(line: 2279, column: 3, scope: !11629)
!11635 = !DILocation(line: 2277, column: 42, scope: !11624)
!11636 = !DILocation(line: 2277, column: 44, scope: !11624)
!11637 = !DILocation(line: 2277, column: 51, scope: !11624)
!11638 = !DILocation(line: 2277, column: 49, scope: !11624)
!11639 = !DILocation(line: 2277, column: 39, scope: !11624)
!11640 = !DILocation(line: 2277, column: 3, scope: !11624)
!11641 = distinct !{!11641, !11627, !11642}
!11642 = !DILocation(line: 2279, column: 3, scope: !11620)
!11643 = !DILocation(line: 2280, column: 24, scope: !11597)
!11644 = !DILocation(line: 2280, column: 9, scope: !11597)
!11645 = !DILocation(line: 2280, column: 7, scope: !11597)
!11646 = !DILocation(line: 2281, column: 13, scope: !11597)
!11647 = !DILocation(line: 2281, column: 16, scope: !11597)
!11648 = !DILocation(line: 2281, column: 3, scope: !11597)
!11649 = !DILocation(line: 2281, column: 8, scope: !11597)
!11650 = !DILocation(line: 2281, column: 11, scope: !11597)
!11651 = !DILocation(line: 2282, column: 31, scope: !11597)
!11652 = !DILocation(line: 2282, column: 36, scope: !11597)
!11653 = !DILocation(line: 2282, column: 39, scope: !11597)
!11654 = !DILocation(line: 2282, column: 13, scope: !11597)
!11655 = !DILocation(line: 2282, column: 3, scope: !11597)
!11656 = !DILocation(line: 2282, column: 8, scope: !11597)
!11657 = !DILocation(line: 2282, column: 11, scope: !11597)
!11658 = !DILocation(line: 2283, column: 21, scope: !11597)
!11659 = !DILocation(line: 2283, column: 26, scope: !11597)
!11660 = !DILocation(line: 2283, column: 33, scope: !11597)
!11661 = !DILocation(line: 2283, column: 3, scope: !11597)
!11662 = !DILocation(line: 2284, column: 16, scope: !11597)
!11663 = !DILocation(line: 2284, column: 4, scope: !11597)
!11664 = !DILocation(line: 2284, column: 14, scope: !11597)
!11665 = !DILocation(line: 2286, column: 28, scope: !11597)
!11666 = !DILocation(line: 2286, column: 11, scope: !11597)
!11667 = !DILocation(line: 2286, column: 9, scope: !11597)
!11668 = !DILocation(line: 2287, column: 12, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 2287, column: 3)
!11670 = !DILocation(line: 2287, column: 10, scope: !11669)
!11671 = !DILocation(line: 2287, column: 8, scope: !11669)
!11672 = !DILocation(line: 2287, column: 22, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11669, file: !3, line: 2287, column: 3)
!11674 = !DILocation(line: 2287, column: 27, scope: !11673)
!11675 = !DILocation(line: 2287, column: 24, scope: !11673)
!11676 = !DILocation(line: 2287, column: 3, scope: !11669)
!11677 = !DILocation(line: 2288, column: 22, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11673, file: !3, line: 2287, column: 55)
!11679 = !DILocation(line: 2288, column: 27, scope: !11678)
!11680 = !DILocation(line: 2288, column: 34, scope: !11678)
!11681 = !DILocation(line: 2288, column: 37, scope: !11678)
!11682 = !DILocation(line: 2288, column: 4, scope: !11678)
!11683 = !DILocation(line: 2289, column: 3, scope: !11678)
!11684 = !DILocation(line: 2287, column: 42, scope: !11673)
!11685 = !DILocation(line: 2287, column: 44, scope: !11673)
!11686 = !DILocation(line: 2287, column: 51, scope: !11673)
!11687 = !DILocation(line: 2287, column: 49, scope: !11673)
!11688 = !DILocation(line: 2287, column: 39, scope: !11673)
!11689 = !DILocation(line: 2287, column: 3, scope: !11673)
!11690 = distinct !{!11690, !11676, !11691}
!11691 = !DILocation(line: 2289, column: 3, scope: !11669)
!11692 = !DILocation(line: 2290, column: 16, scope: !11597)
!11693 = !DILocation(line: 2290, column: 4, scope: !11597)
!11694 = !DILocation(line: 2290, column: 14, scope: !11597)
!11695 = !DILocation(line: 2292, column: 3, scope: !11597)
!11696 = !DILocation(line: 2295, column: 3, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 2294, column: 7)
!11698 = !DILocation(line: 2297, column: 1, scope: !11164)
!11699 = distinct !DISubprogram(name: "find_chain_from_vertex", scope: !3, file: !3, line: 2010, type: !11700, scopeLine: 2011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!11700 = !DISubroutineType(types: !11701)
!11701 = !{!1227, !3512, !2861, !2665, !1227}
!11702 = !DILocalVariable(name: "kcd", arg: 1, scope: !11699, file: !3, line: 2010, type: !3512)
!11703 = !DILocation(line: 2010, column: 59, scope: !11699)
!11704 = !DILocalVariable(name: "kfe", arg: 2, scope: !11699, file: !3, line: 2010, type: !2861)
!11705 = !DILocation(line: 2010, column: 75, scope: !11699)
!11706 = !DILocalVariable(name: "v", arg: 3, scope: !11699, file: !3, line: 2010, type: !2665)
!11707 = !DILocation(line: 2010, column: 88, scope: !11699)
!11708 = !DILocalVariable(name: "fedges", arg: 4, scope: !11699, file: !3, line: 2010, type: !1227)
!11709 = !DILocation(line: 2010, column: 101, scope: !11699)
!11710 = !DILocalVariable(name: "visited_", scope: !11699, file: !3, line: 2012, type: !6045)
!11711 = !DILocation(line: 2012, column: 12, scope: !11699)
!11712 = !DILocalVariable(name: "visited", scope: !11699, file: !3, line: 2012, type: !6120)
!11713 = !DILocation(line: 2012, column: 23, scope: !11699)
!11714 = !DILocalVariable(name: "ans", scope: !11699, file: !3, line: 2013, type: !1227)
!11715 = !DILocation(line: 2013, column: 12, scope: !11699)
!11716 = !DILocalVariable(name: "found", scope: !11699, file: !3, line: 2014, type: !1053)
!11717 = !DILocation(line: 2014, column: 7, scope: !11699)
!11718 = !DILocation(line: 2016, column: 25, scope: !11699)
!11719 = !DILocation(line: 2016, column: 8, scope: !11699)
!11720 = !DILocation(line: 2016, column: 6, scope: !11699)
!11721 = !DILocation(line: 2017, column: 20, scope: !11699)
!11722 = !DILocation(line: 2017, column: 25, scope: !11699)
!11723 = !DILocation(line: 2017, column: 30, scope: !11699)
!11724 = !DILocation(line: 2017, column: 2, scope: !11699)
!11725 = !DILocation(line: 2018, column: 8, scope: !11699)
!11726 = !DILocation(line: 2019, column: 21, scope: !11699)
!11727 = !DILocation(line: 2019, column: 2, scope: !11699)
!11728 = !DILocation(line: 2020, column: 6, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 2020, column: 6)
!11730 = !DILocation(line: 2020, column: 11, scope: !11729)
!11731 = !DILocation(line: 2020, column: 15, scope: !11729)
!11732 = !DILocation(line: 2020, column: 20, scope: !11729)
!11733 = !DILocation(line: 2020, column: 17, scope: !11729)
!11734 = !DILocation(line: 2020, column: 6, scope: !11699)
!11735 = !DILocation(line: 2021, column: 24, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2020, column: 23)
!11737 = !DILocation(line: 2021, column: 45, scope: !11736)
!11738 = !DILocation(line: 2021, column: 50, scope: !11736)
!11739 = !DILocation(line: 2021, column: 33, scope: !11736)
!11740 = !DILocation(line: 2021, column: 3, scope: !11736)
!11741 = !DILocation(line: 2022, column: 29, scope: !11736)
!11742 = !DILocation(line: 2022, column: 34, scope: !11736)
!11743 = !DILocation(line: 2022, column: 39, scope: !11736)
!11744 = !DILocation(line: 2022, column: 43, scope: !11736)
!11745 = !DILocation(line: 2022, column: 51, scope: !11736)
!11746 = !DILocation(line: 2022, column: 60, scope: !11736)
!11747 = !DILocation(line: 2022, column: 11, scope: !11736)
!11748 = !DILocation(line: 2022, column: 9, scope: !11736)
!11749 = !DILocation(line: 2023, column: 2, scope: !11736)
!11750 = !DILocation(line: 2026, column: 24, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 2024, column: 7)
!11752 = !DILocation(line: 2026, column: 45, scope: !11751)
!11753 = !DILocation(line: 2026, column: 50, scope: !11751)
!11754 = !DILocation(line: 2026, column: 33, scope: !11751)
!11755 = !DILocation(line: 2026, column: 3, scope: !11751)
!11756 = !DILocation(line: 2027, column: 29, scope: !11751)
!11757 = !DILocation(line: 2027, column: 34, scope: !11751)
!11758 = !DILocation(line: 2027, column: 39, scope: !11751)
!11759 = !DILocation(line: 2027, column: 43, scope: !11751)
!11760 = !DILocation(line: 2027, column: 51, scope: !11751)
!11761 = !DILocation(line: 2027, column: 60, scope: !11751)
!11762 = !DILocation(line: 2027, column: 11, scope: !11751)
!11763 = !DILocation(line: 2027, column: 9, scope: !11751)
!11764 = !DILocation(line: 2030, column: 24, scope: !11699)
!11765 = !DILocation(line: 2030, column: 2, scope: !11699)
!11766 = !DILocation(line: 2032, column: 6, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 2032, column: 6)
!11768 = !DILocation(line: 2032, column: 6, scope: !11699)
!11769 = !DILocation(line: 2033, column: 10, scope: !11767)
!11770 = !DILocation(line: 2033, column: 3, scope: !11767)
!11771 = !DILocation(line: 2035, column: 3, scope: !11767)
!11772 = !DILocation(line: 2036, column: 1, scope: !11699)
!11773 = distinct !DISubprogram(name: "find_chain_search", scope: !3, file: !3, line: 1978, type: !11774, scopeLine: 1980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!11774 = !DISubroutineType(types: !11775)
!11775 = !{!1053, !3512, !2866, !1227, !6120, !1227}
!11776 = !DILocalVariable(name: "kcd", arg: 1, scope: !11773, file: !3, line: 1978, type: !3512)
!11777 = !DILocation(line: 1978, column: 49, scope: !11773)
!11778 = !DILocalVariable(name: "kfv", arg: 2, scope: !11773, file: !3, line: 1978, type: !2866)
!11779 = !DILocation(line: 1978, column: 65, scope: !11773)
!11780 = !DILocalVariable(name: "fedges", arg: 3, scope: !11773, file: !3, line: 1978, type: !1227)
!11781 = !DILocation(line: 1978, column: 80, scope: !11773)
!11782 = !DILocalVariable(name: "visited", arg: 4, scope: !11773, file: !3, line: 1978, type: !6120)
!11783 = !DILocation(line: 1978, column: 99, scope: !11773)
!11784 = !DILocalVariable(name: "chain", arg: 5, scope: !11773, file: !3, line: 1979, type: !1227)
!11785 = !DILocation(line: 1979, column: 41, scope: !11773)
!11786 = !DILocalVariable(name: "r", scope: !11773, file: !3, line: 1981, type: !3251)
!11787 = !DILocation(line: 1981, column: 7, scope: !11773)
!11788 = !DILocalVariable(name: "kfe", scope: !11773, file: !3, line: 1982, type: !2861)
!11789 = !DILocation(line: 1982, column: 13, scope: !11773)
!11790 = !DILocalVariable(name: "kfv_other", scope: !11773, file: !3, line: 1983, type: !2866)
!11791 = !DILocation(line: 1983, column: 13, scope: !11773)
!11792 = !DILocation(line: 1985, column: 6, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11773, file: !3, line: 1985, column: 6)
!11794 = !DILocation(line: 1985, column: 11, scope: !11793)
!11795 = !DILocation(line: 1985, column: 6, scope: !11773)
!11796 = !DILocation(line: 1986, column: 3, scope: !11793)
!11797 = !DILocation(line: 1988, column: 23, scope: !11773)
!11798 = !DILocation(line: 1988, column: 43, scope: !11773)
!11799 = !DILocation(line: 1988, column: 32, scope: !11773)
!11800 = !DILocation(line: 1988, column: 2, scope: !11773)
!11801 = !DILocation(line: 1993, column: 11, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11773, file: !3, line: 1993, column: 2)
!11803 = !DILocation(line: 1993, column: 19, scope: !11802)
!11804 = !DILocation(line: 1993, column: 9, scope: !11802)
!11805 = !DILocation(line: 1993, column: 7, scope: !11802)
!11806 = !DILocation(line: 1993, column: 26, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11802, file: !3, line: 1993, column: 2)
!11808 = !DILocation(line: 1993, column: 2, scope: !11802)
!11809 = !DILocation(line: 1994, column: 9, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 1993, column: 42)
!11811 = !DILocation(line: 1994, column: 12, scope: !11810)
!11812 = !DILocation(line: 1994, column: 7, scope: !11810)
!11813 = !DILocation(line: 1995, column: 13, scope: !11810)
!11814 = !DILocation(line: 1996, column: 7, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11810, file: !3, line: 1996, column: 7)
!11816 = !DILocation(line: 1996, column: 12, scope: !11815)
!11817 = !DILocation(line: 1996, column: 18, scope: !11815)
!11818 = !DILocation(line: 1996, column: 15, scope: !11815)
!11819 = !DILocation(line: 1996, column: 7, scope: !11810)
!11820 = !DILocation(line: 1997, column: 16, scope: !11815)
!11821 = !DILocation(line: 1997, column: 21, scope: !11815)
!11822 = !DILocation(line: 1997, column: 14, scope: !11815)
!11823 = !DILocation(line: 1997, column: 4, scope: !11815)
!11824 = !DILocation(line: 1998, column: 12, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 1998, column: 12)
!11826 = !DILocation(line: 1998, column: 17, scope: !11825)
!11827 = !DILocation(line: 1998, column: 23, scope: !11825)
!11828 = !DILocation(line: 1998, column: 20, scope: !11825)
!11829 = !DILocation(line: 1998, column: 12, scope: !11815)
!11830 = !DILocation(line: 1999, column: 16, scope: !11825)
!11831 = !DILocation(line: 1999, column: 21, scope: !11825)
!11832 = !DILocation(line: 1999, column: 14, scope: !11825)
!11833 = !DILocation(line: 1999, column: 4, scope: !11825)
!11834 = !DILocation(line: 2000, column: 7, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11810, file: !3, line: 2000, column: 7)
!11836 = !DILocation(line: 2000, column: 17, scope: !11835)
!11837 = !DILocation(line: 2000, column: 42, scope: !11835)
!11838 = !DILocation(line: 2000, column: 62, scope: !11835)
!11839 = !DILocation(line: 2000, column: 51, scope: !11835)
!11840 = !DILocation(line: 2000, column: 21, scope: !11835)
!11841 = !DILocation(line: 2000, column: 7, scope: !11810)
!11842 = !DILocation(line: 2001, column: 22, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 2000, column: 74)
!11844 = !DILocation(line: 2001, column: 27, scope: !11843)
!11845 = !DILocation(line: 2001, column: 34, scope: !11843)
!11846 = !DILocation(line: 2001, column: 4, scope: !11843)
!11847 = !DILocation(line: 2002, column: 26, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !11843, file: !3, line: 2002, column: 8)
!11849 = !DILocation(line: 2002, column: 31, scope: !11848)
!11850 = !DILocation(line: 2002, column: 42, scope: !11848)
!11851 = !DILocation(line: 2002, column: 50, scope: !11848)
!11852 = !DILocation(line: 2002, column: 59, scope: !11848)
!11853 = !DILocation(line: 2002, column: 8, scope: !11848)
!11854 = !DILocation(line: 2002, column: 8, scope: !11843)
!11855 = !DILocation(line: 2003, column: 5, scope: !11848)
!11856 = !DILocation(line: 2004, column: 16, scope: !11843)
!11857 = !DILocation(line: 2004, column: 23, scope: !11843)
!11858 = !DILocation(line: 2004, column: 30, scope: !11843)
!11859 = !DILocation(line: 2004, column: 4, scope: !11843)
!11860 = !DILocation(line: 2005, column: 3, scope: !11843)
!11861 = !DILocation(line: 2006, column: 2, scope: !11810)
!11862 = !DILocation(line: 1993, column: 33, scope: !11807)
!11863 = !DILocation(line: 1993, column: 36, scope: !11807)
!11864 = !DILocation(line: 1993, column: 31, scope: !11807)
!11865 = !DILocation(line: 1993, column: 2, scope: !11807)
!11866 = distinct !{!11866, !11808, !11867}
!11867 = !DILocation(line: 2006, column: 2, scope: !11802)
!11868 = !DILocation(line: 2007, column: 2, scope: !11773)
!11869 = !DILocation(line: 2008, column: 1, scope: !11773)
!11870 = distinct !DISubprogram(name: "find_hole_search", scope: !3, file: !3, line: 2079, type: !11871, scopeLine: 2081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!11871 = !DISubroutineType(types: !11872)
!11872 = !{!1053, !3512, !2866, !2866, !1227, !6120, !1227}
!11873 = !DILocalVariable(name: "kcd", arg: 1, scope: !11870, file: !3, line: 2079, type: !3512)
!11874 = !DILocation(line: 2079, column: 48, scope: !11870)
!11875 = !DILocalVariable(name: "kfvfirst", arg: 2, scope: !11870, file: !3, line: 2079, type: !2866)
!11876 = !DILocation(line: 2079, column: 64, scope: !11870)
!11877 = !DILocalVariable(name: "kfv", arg: 3, scope: !11870, file: !3, line: 2079, type: !2866)
!11878 = !DILocation(line: 2079, column: 85, scope: !11870)
!11879 = !DILocalVariable(name: "fedges", arg: 4, scope: !11870, file: !3, line: 2079, type: !1227)
!11880 = !DILocation(line: 2079, column: 100, scope: !11870)
!11881 = !DILocalVariable(name: "visited", arg: 5, scope: !11870, file: !3, line: 2080, type: !6120)
!11882 = !DILocation(line: 2080, column: 41, scope: !11870)
!11883 = !DILocalVariable(name: "hole", arg: 6, scope: !11870, file: !3, line: 2080, type: !1227)
!11884 = !DILocation(line: 2080, column: 60, scope: !11870)
!11885 = !DILocalVariable(name: "r", scope: !11870, file: !3, line: 2082, type: !3251)
!11886 = !DILocation(line: 2082, column: 7, scope: !11870)
!11887 = !DILocalVariable(name: "kfe", scope: !11870, file: !3, line: 2083, type: !2861)
!11888 = !DILocation(line: 2083, column: 13, scope: !11870)
!11889 = !DILocalVariable(name: "kfelast", scope: !11870, file: !3, line: 2083, type: !2861)
!11890 = !DILocation(line: 2083, column: 19, scope: !11870)
!11891 = !DILocalVariable(name: "kfv_other", scope: !11870, file: !3, line: 2084, type: !2866)
!11892 = !DILocation(line: 2084, column: 13, scope: !11870)
!11893 = !DILocation(line: 2086, column: 6, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 2086, column: 6)
!11895 = !DILocation(line: 2086, column: 13, scope: !11894)
!11896 = !DILocation(line: 2086, column: 10, scope: !11894)
!11897 = !DILocation(line: 2086, column: 6, scope: !11870)
!11898 = !DILocation(line: 2087, column: 3, scope: !11894)
!11899 = !DILocation(line: 2089, column: 23, scope: !11870)
!11900 = !DILocation(line: 2089, column: 43, scope: !11870)
!11901 = !DILocation(line: 2089, column: 32, scope: !11870)
!11902 = !DILocation(line: 2089, column: 2, scope: !11870)
!11903 = !DILocation(line: 2090, column: 20, scope: !11870)
!11904 = !DILocation(line: 2090, column: 26, scope: !11870)
!11905 = !DILocation(line: 2090, column: 13, scope: !11870)
!11906 = !DILocation(line: 2090, column: 33, scope: !11870)
!11907 = !DILocation(line: 2090, column: 12, scope: !11870)
!11908 = !DILocation(line: 2090, column: 10, scope: !11870)
!11909 = !DILocation(line: 2091, column: 11, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 2091, column: 2)
!11911 = !DILocation(line: 2091, column: 19, scope: !11910)
!11912 = !DILocation(line: 2091, column: 9, scope: !11910)
!11913 = !DILocation(line: 2091, column: 7, scope: !11910)
!11914 = !DILocation(line: 2091, column: 26, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11910, file: !3, line: 2091, column: 2)
!11916 = !DILocation(line: 2091, column: 2, scope: !11910)
!11917 = !DILocation(line: 2092, column: 9, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11915, file: !3, line: 2091, column: 42)
!11919 = !DILocation(line: 2092, column: 12, scope: !11918)
!11920 = !DILocation(line: 2092, column: 7, scope: !11918)
!11921 = !DILocation(line: 2093, column: 7, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11918, file: !3, line: 2093, column: 7)
!11923 = !DILocation(line: 2093, column: 14, scope: !11922)
!11924 = !DILocation(line: 2093, column: 11, scope: !11922)
!11925 = !DILocation(line: 2093, column: 7, scope: !11918)
!11926 = !DILocation(line: 2094, column: 4, scope: !11922)
!11927 = !DILocation(line: 2095, column: 7, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11918, file: !3, line: 2095, column: 7)
!11929 = !DILocation(line: 2095, column: 12, scope: !11928)
!11930 = !DILocation(line: 2095, column: 16, scope: !11928)
!11931 = !DILocation(line: 2095, column: 18, scope: !11928)
!11932 = !DILocation(line: 2095, column: 21, scope: !11928)
!11933 = !DILocation(line: 2095, column: 26, scope: !11928)
!11934 = !DILocation(line: 2095, column: 30, scope: !11928)
!11935 = !DILocation(line: 2095, column: 7, scope: !11918)
!11936 = !DILocation(line: 2096, column: 4, scope: !11928)
!11937 = !DILocation(line: 2097, column: 13, scope: !11918)
!11938 = !DILocation(line: 2098, column: 7, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11918, file: !3, line: 2098, column: 7)
!11940 = !DILocation(line: 2098, column: 12, scope: !11939)
!11941 = !DILocation(line: 2098, column: 18, scope: !11939)
!11942 = !DILocation(line: 2098, column: 15, scope: !11939)
!11943 = !DILocation(line: 2098, column: 7, scope: !11918)
!11944 = !DILocation(line: 2099, column: 16, scope: !11939)
!11945 = !DILocation(line: 2099, column: 21, scope: !11939)
!11946 = !DILocation(line: 2099, column: 14, scope: !11939)
!11947 = !DILocation(line: 2099, column: 4, scope: !11939)
!11948 = !DILocation(line: 2100, column: 12, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11939, file: !3, line: 2100, column: 12)
!11950 = !DILocation(line: 2100, column: 17, scope: !11949)
!11951 = !DILocation(line: 2100, column: 23, scope: !11949)
!11952 = !DILocation(line: 2100, column: 20, scope: !11949)
!11953 = !DILocation(line: 2100, column: 12, scope: !11939)
!11954 = !DILocation(line: 2101, column: 16, scope: !11949)
!11955 = !DILocation(line: 2101, column: 21, scope: !11949)
!11956 = !DILocation(line: 2101, column: 14, scope: !11949)
!11957 = !DILocation(line: 2101, column: 4, scope: !11949)
!11958 = !DILocation(line: 2102, column: 7, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11918, file: !3, line: 2102, column: 7)
!11960 = !DILocation(line: 2102, column: 17, scope: !11959)
!11961 = !DILocation(line: 2102, column: 42, scope: !11959)
!11962 = !DILocation(line: 2102, column: 62, scope: !11959)
!11963 = !DILocation(line: 2102, column: 51, scope: !11959)
!11964 = !DILocation(line: 2102, column: 21, scope: !11959)
!11965 = !DILocation(line: 2102, column: 7, scope: !11918)
!11966 = !DILocation(line: 2103, column: 22, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2102, column: 74)
!11968 = !DILocation(line: 2103, column: 27, scope: !11967)
!11969 = !DILocation(line: 2103, column: 33, scope: !11967)
!11970 = !DILocation(line: 2103, column: 4, scope: !11967)
!11971 = !DILocation(line: 2104, column: 25, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11967, file: !3, line: 2104, column: 8)
!11973 = !DILocation(line: 2104, column: 30, scope: !11972)
!11974 = !DILocation(line: 2104, column: 40, scope: !11972)
!11975 = !DILocation(line: 2104, column: 51, scope: !11972)
!11976 = !DILocation(line: 2104, column: 59, scope: !11972)
!11977 = !DILocation(line: 2104, column: 68, scope: !11972)
!11978 = !DILocation(line: 2104, column: 8, scope: !11972)
!11979 = !DILocation(line: 2104, column: 8, scope: !11967)
!11980 = !DILocation(line: 2105, column: 5, scope: !11972)
!11981 = !DILocation(line: 2106, column: 16, scope: !11967)
!11982 = !DILocation(line: 2106, column: 22, scope: !11967)
!11983 = !DILocation(line: 2106, column: 28, scope: !11967)
!11984 = !DILocation(line: 2106, column: 4, scope: !11967)
!11985 = !DILocation(line: 2107, column: 3, scope: !11967)
!11986 = !DILocation(line: 2108, column: 2, scope: !11918)
!11987 = !DILocation(line: 2091, column: 33, scope: !11915)
!11988 = !DILocation(line: 2091, column: 36, scope: !11915)
!11989 = !DILocation(line: 2091, column: 31, scope: !11915)
!11990 = !DILocation(line: 2091, column: 2, scope: !11915)
!11991 = distinct !{!11991, !11916, !11992}
!11992 = !DILocation(line: 2108, column: 2, scope: !11910)
!11993 = !DILocation(line: 2109, column: 2, scope: !11870)
!11994 = !DILocation(line: 2110, column: 1, scope: !11870)
!11995 = distinct !DISubprogram(name: "axis_dominant_v3", scope: !11996, file: !11996, line: 162, type: !11997, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!11996 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_geom_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11997 = !DISubroutineType(types: !11998)
!11998 = !{null, !967, !967, !997}
!11999 = !DILocalVariable(name: "r_axis_a", arg: 1, scope: !11995, file: !11996, line: 162, type: !967)
!12000 = !DILocation(line: 162, column: 36, scope: !11995)
!12001 = !DILocalVariable(name: "r_axis_b", arg: 2, scope: !11995, file: !11996, line: 162, type: !967)
!12002 = !DILocation(line: 162, column: 51, scope: !11995)
!12003 = !DILocalVariable(name: "axis", arg: 3, scope: !11995, file: !11996, line: 162, type: !997)
!12004 = !DILocation(line: 162, column: 73, scope: !11995)
!12005 = !DILocalVariable(name: "xn", scope: !11995, file: !11996, line: 164, type: !806)
!12006 = !DILocation(line: 164, column: 14, scope: !11995)
!12007 = !DILocation(line: 164, column: 25, scope: !11995)
!12008 = !DILocation(line: 164, column: 19, scope: !11995)
!12009 = !DILocalVariable(name: "yn", scope: !11995, file: !11996, line: 165, type: !806)
!12010 = !DILocation(line: 165, column: 14, scope: !11995)
!12011 = !DILocation(line: 165, column: 25, scope: !11995)
!12012 = !DILocation(line: 165, column: 19, scope: !11995)
!12013 = !DILocalVariable(name: "zn", scope: !11995, file: !11996, line: 166, type: !806)
!12014 = !DILocation(line: 166, column: 14, scope: !11995)
!12015 = !DILocation(line: 166, column: 25, scope: !11995)
!12016 = !DILocation(line: 166, column: 19, scope: !11995)
!12017 = !DILocation(line: 168, column: 11, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !11995, file: !11996, line: 168, column: 11)
!12019 = !DILocation(line: 168, column: 17, scope: !12018)
!12020 = !DILocation(line: 168, column: 14, scope: !12018)
!12021 = !DILocation(line: 168, column: 20, scope: !12018)
!12022 = !DILocation(line: 168, column: 23, scope: !12018)
!12023 = !DILocation(line: 168, column: 29, scope: !12018)
!12024 = !DILocation(line: 168, column: 26, scope: !12018)
!12025 = !DILocation(line: 168, column: 11, scope: !11995)
!12026 = !DILocation(line: 168, column: 36, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12018, file: !11996, line: 168, column: 33)
!12028 = !DILocation(line: 168, column: 45, scope: !12027)
!12029 = !DILocation(line: 168, column: 51, scope: !12027)
!12030 = !DILocation(line: 168, column: 60, scope: !12027)
!12031 = !DILocation(line: 168, column: 65, scope: !12027)
!12032 = !DILocation(line: 169, column: 11, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12018, file: !11996, line: 169, column: 11)
!12034 = !DILocation(line: 169, column: 17, scope: !12033)
!12035 = !DILocation(line: 169, column: 14, scope: !12033)
!12036 = !DILocation(line: 169, column: 20, scope: !12033)
!12037 = !DILocation(line: 169, column: 23, scope: !12033)
!12038 = !DILocation(line: 169, column: 29, scope: !12033)
!12039 = !DILocation(line: 169, column: 26, scope: !12033)
!12040 = !DILocation(line: 169, column: 11, scope: !12018)
!12041 = !DILocation(line: 169, column: 36, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12033, file: !11996, line: 169, column: 33)
!12043 = !DILocation(line: 169, column: 45, scope: !12042)
!12044 = !DILocation(line: 169, column: 51, scope: !12042)
!12045 = !DILocation(line: 169, column: 60, scope: !12042)
!12046 = !DILocation(line: 169, column: 65, scope: !12042)
!12047 = !DILocation(line: 170, column: 36, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12033, file: !11996, line: 170, column: 33)
!12049 = !DILocation(line: 170, column: 45, scope: !12048)
!12050 = !DILocation(line: 170, column: 51, scope: !12048)
!12051 = !DILocation(line: 170, column: 60, scope: !12048)
!12052 = !DILocation(line: 171, column: 1, scope: !11995)
!12053 = distinct !DISubprogram(name: "BM_iter_init", scope: !4764, file: !4764, line: 53, type: !12054, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!12054 = !DISubroutineType(types: !12055)
!12055 = !{!1053, !4767, !2780, !2400, !18}
!12056 = !DILocalVariable(name: "iter", arg: 1, scope: !12053, file: !4764, line: 53, type: !4767)
!12057 = !DILocation(line: 53, column: 38, scope: !12053)
!12058 = !DILocalVariable(name: "bm", arg: 2, scope: !12053, file: !4764, line: 53, type: !2780)
!12059 = !DILocation(line: 53, column: 51, scope: !12053)
!12060 = !DILocalVariable(name: "itype", arg: 3, scope: !12053, file: !4764, line: 53, type: !2400)
!12061 = !DILocation(line: 53, column: 66, scope: !12053)
!12062 = !DILocalVariable(name: "data", arg: 4, scope: !12053, file: !4764, line: 53, type: !18)
!12063 = !DILocation(line: 53, column: 79, scope: !12053)
!12064 = !DILocation(line: 56, column: 16, scope: !12053)
!12065 = !DILocation(line: 56, column: 2, scope: !12053)
!12066 = !DILocation(line: 56, column: 8, scope: !12053)
!12067 = !DILocation(line: 56, column: 14, scope: !12053)
!12068 = !DILocation(line: 59, column: 22, scope: !12053)
!12069 = !DILocation(line: 59, column: 10, scope: !12053)
!12070 = !DILocation(line: 59, column: 2, scope: !12053)
!12071 = !DILocation(line: 63, column: 4, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12053, file: !4764, line: 59, column: 29)
!12073 = !DILocation(line: 63, column: 10, scope: !12072)
!12074 = !DILocation(line: 63, column: 16, scope: !12072)
!12075 = !DILocation(line: 64, column: 4, scope: !12072)
!12076 = !DILocation(line: 64, column: 10, scope: !12072)
!12077 = !DILocation(line: 64, column: 16, scope: !12072)
!12078 = !DILocation(line: 65, column: 44, scope: !12072)
!12079 = !DILocation(line: 65, column: 48, scope: !12072)
!12080 = !DILocation(line: 65, column: 4, scope: !12072)
!12081 = !DILocation(line: 65, column: 10, scope: !12072)
!12082 = !DILocation(line: 65, column: 15, scope: !12072)
!12083 = !DILocation(line: 65, column: 28, scope: !12072)
!12084 = !DILocation(line: 65, column: 37, scope: !12072)
!12085 = !DILocation(line: 65, column: 42, scope: !12072)
!12086 = !DILocation(line: 66, column: 4, scope: !12072)
!12087 = !DILocation(line: 70, column: 4, scope: !12072)
!12088 = !DILocation(line: 70, column: 10, scope: !12072)
!12089 = !DILocation(line: 70, column: 16, scope: !12072)
!12090 = !DILocation(line: 71, column: 4, scope: !12072)
!12091 = !DILocation(line: 71, column: 10, scope: !12072)
!12092 = !DILocation(line: 71, column: 16, scope: !12072)
!12093 = !DILocation(line: 72, column: 44, scope: !12072)
!12094 = !DILocation(line: 72, column: 48, scope: !12072)
!12095 = !DILocation(line: 72, column: 4, scope: !12072)
!12096 = !DILocation(line: 72, column: 10, scope: !12072)
!12097 = !DILocation(line: 72, column: 15, scope: !12072)
!12098 = !DILocation(line: 72, column: 28, scope: !12072)
!12099 = !DILocation(line: 72, column: 37, scope: !12072)
!12100 = !DILocation(line: 72, column: 42, scope: !12072)
!12101 = !DILocation(line: 73, column: 4, scope: !12072)
!12102 = !DILocation(line: 77, column: 4, scope: !12072)
!12103 = !DILocation(line: 77, column: 10, scope: !12072)
!12104 = !DILocation(line: 77, column: 16, scope: !12072)
!12105 = !DILocation(line: 78, column: 4, scope: !12072)
!12106 = !DILocation(line: 78, column: 10, scope: !12072)
!12107 = !DILocation(line: 78, column: 16, scope: !12072)
!12108 = !DILocation(line: 79, column: 44, scope: !12072)
!12109 = !DILocation(line: 79, column: 48, scope: !12072)
!12110 = !DILocation(line: 79, column: 4, scope: !12072)
!12111 = !DILocation(line: 79, column: 10, scope: !12072)
!12112 = !DILocation(line: 79, column: 15, scope: !12072)
!12113 = !DILocation(line: 79, column: 28, scope: !12072)
!12114 = !DILocation(line: 79, column: 37, scope: !12072)
!12115 = !DILocation(line: 79, column: 42, scope: !12072)
!12116 = !DILocation(line: 80, column: 4, scope: !12072)
!12117 = !DILocation(line: 84, column: 4, scope: !12072)
!12118 = !DILocation(line: 84, column: 10, scope: !12072)
!12119 = !DILocation(line: 84, column: 16, scope: !12072)
!12120 = !DILocation(line: 85, column: 4, scope: !12072)
!12121 = !DILocation(line: 85, column: 10, scope: !12072)
!12122 = !DILocation(line: 85, column: 16, scope: !12072)
!12123 = !DILocation(line: 86, column: 46, scope: !12072)
!12124 = !DILocation(line: 86, column: 36, scope: !12072)
!12125 = !DILocation(line: 86, column: 4, scope: !12072)
!12126 = !DILocation(line: 86, column: 10, scope: !12072)
!12127 = !DILocation(line: 86, column: 15, scope: !12072)
!12128 = !DILocation(line: 86, column: 28, scope: !12072)
!12129 = !DILocation(line: 86, column: 34, scope: !12072)
!12130 = !DILocation(line: 87, column: 4, scope: !12072)
!12131 = !DILocation(line: 91, column: 4, scope: !12072)
!12132 = !DILocation(line: 91, column: 10, scope: !12072)
!12133 = !DILocation(line: 91, column: 16, scope: !12072)
!12134 = !DILocation(line: 92, column: 4, scope: !12072)
!12135 = !DILocation(line: 92, column: 10, scope: !12072)
!12136 = !DILocation(line: 92, column: 16, scope: !12072)
!12137 = !DILocation(line: 93, column: 46, scope: !12072)
!12138 = !DILocation(line: 93, column: 36, scope: !12072)
!12139 = !DILocation(line: 93, column: 4, scope: !12072)
!12140 = !DILocation(line: 93, column: 10, scope: !12072)
!12141 = !DILocation(line: 93, column: 15, scope: !12072)
!12142 = !DILocation(line: 93, column: 28, scope: !12072)
!12143 = !DILocation(line: 93, column: 34, scope: !12072)
!12144 = !DILocation(line: 94, column: 4, scope: !12072)
!12145 = !DILocation(line: 98, column: 4, scope: !12072)
!12146 = !DILocation(line: 98, column: 10, scope: !12072)
!12147 = !DILocation(line: 98, column: 16, scope: !12072)
!12148 = !DILocation(line: 99, column: 4, scope: !12072)
!12149 = !DILocation(line: 99, column: 10, scope: !12072)
!12150 = !DILocation(line: 99, column: 16, scope: !12072)
!12151 = !DILocation(line: 100, column: 46, scope: !12072)
!12152 = !DILocation(line: 100, column: 36, scope: !12072)
!12153 = !DILocation(line: 100, column: 4, scope: !12072)
!12154 = !DILocation(line: 100, column: 10, scope: !12072)
!12155 = !DILocation(line: 100, column: 15, scope: !12072)
!12156 = !DILocation(line: 100, column: 28, scope: !12072)
!12157 = !DILocation(line: 100, column: 34, scope: !12072)
!12158 = !DILocation(line: 101, column: 4, scope: !12072)
!12159 = !DILocation(line: 105, column: 4, scope: !12072)
!12160 = !DILocation(line: 105, column: 10, scope: !12072)
!12161 = !DILocation(line: 105, column: 16, scope: !12072)
!12162 = !DILocation(line: 106, column: 4, scope: !12072)
!12163 = !DILocation(line: 106, column: 10, scope: !12072)
!12164 = !DILocation(line: 106, column: 16, scope: !12072)
!12165 = !DILocation(line: 107, column: 46, scope: !12072)
!12166 = !DILocation(line: 107, column: 36, scope: !12072)
!12167 = !DILocation(line: 107, column: 4, scope: !12072)
!12168 = !DILocation(line: 107, column: 10, scope: !12072)
!12169 = !DILocation(line: 107, column: 15, scope: !12072)
!12170 = !DILocation(line: 107, column: 28, scope: !12072)
!12171 = !DILocation(line: 107, column: 34, scope: !12072)
!12172 = !DILocation(line: 108, column: 4, scope: !12072)
!12173 = !DILocation(line: 112, column: 4, scope: !12072)
!12174 = !DILocation(line: 112, column: 10, scope: !12072)
!12175 = !DILocation(line: 112, column: 16, scope: !12072)
!12176 = !DILocation(line: 113, column: 4, scope: !12072)
!12177 = !DILocation(line: 113, column: 10, scope: !12072)
!12178 = !DILocation(line: 113, column: 16, scope: !12072)
!12179 = !DILocation(line: 114, column: 46, scope: !12072)
!12180 = !DILocation(line: 114, column: 36, scope: !12072)
!12181 = !DILocation(line: 114, column: 4, scope: !12072)
!12182 = !DILocation(line: 114, column: 10, scope: !12072)
!12183 = !DILocation(line: 114, column: 15, scope: !12072)
!12184 = !DILocation(line: 114, column: 28, scope: !12072)
!12185 = !DILocation(line: 114, column: 34, scope: !12072)
!12186 = !DILocation(line: 115, column: 4, scope: !12072)
!12187 = !DILocation(line: 119, column: 4, scope: !12072)
!12188 = !DILocation(line: 119, column: 10, scope: !12072)
!12189 = !DILocation(line: 119, column: 16, scope: !12072)
!12190 = !DILocation(line: 120, column: 4, scope: !12072)
!12191 = !DILocation(line: 120, column: 10, scope: !12072)
!12192 = !DILocation(line: 120, column: 16, scope: !12072)
!12193 = !DILocation(line: 121, column: 46, scope: !12072)
!12194 = !DILocation(line: 121, column: 36, scope: !12072)
!12195 = !DILocation(line: 121, column: 4, scope: !12072)
!12196 = !DILocation(line: 121, column: 10, scope: !12072)
!12197 = !DILocation(line: 121, column: 15, scope: !12072)
!12198 = !DILocation(line: 121, column: 28, scope: !12072)
!12199 = !DILocation(line: 121, column: 34, scope: !12072)
!12200 = !DILocation(line: 122, column: 4, scope: !12072)
!12201 = !DILocation(line: 126, column: 4, scope: !12072)
!12202 = !DILocation(line: 126, column: 10, scope: !12072)
!12203 = !DILocation(line: 126, column: 16, scope: !12072)
!12204 = !DILocation(line: 127, column: 4, scope: !12072)
!12205 = !DILocation(line: 127, column: 10, scope: !12072)
!12206 = !DILocation(line: 127, column: 16, scope: !12072)
!12207 = !DILocation(line: 128, column: 46, scope: !12072)
!12208 = !DILocation(line: 128, column: 36, scope: !12072)
!12209 = !DILocation(line: 128, column: 4, scope: !12072)
!12210 = !DILocation(line: 128, column: 10, scope: !12072)
!12211 = !DILocation(line: 128, column: 15, scope: !12072)
!12212 = !DILocation(line: 128, column: 28, scope: !12072)
!12213 = !DILocation(line: 128, column: 34, scope: !12072)
!12214 = !DILocation(line: 129, column: 4, scope: !12072)
!12215 = !DILocation(line: 133, column: 4, scope: !12072)
!12216 = !DILocation(line: 133, column: 10, scope: !12072)
!12217 = !DILocation(line: 133, column: 16, scope: !12072)
!12218 = !DILocation(line: 134, column: 4, scope: !12072)
!12219 = !DILocation(line: 134, column: 10, scope: !12072)
!12220 = !DILocation(line: 134, column: 16, scope: !12072)
!12221 = !DILocation(line: 135, column: 46, scope: !12072)
!12222 = !DILocation(line: 135, column: 36, scope: !12072)
!12223 = !DILocation(line: 135, column: 4, scope: !12072)
!12224 = !DILocation(line: 135, column: 10, scope: !12072)
!12225 = !DILocation(line: 135, column: 15, scope: !12072)
!12226 = !DILocation(line: 135, column: 28, scope: !12072)
!12227 = !DILocation(line: 135, column: 34, scope: !12072)
!12228 = !DILocation(line: 136, column: 4, scope: !12072)
!12229 = !DILocation(line: 140, column: 4, scope: !12072)
!12230 = !DILocation(line: 140, column: 10, scope: !12072)
!12231 = !DILocation(line: 140, column: 16, scope: !12072)
!12232 = !DILocation(line: 141, column: 4, scope: !12072)
!12233 = !DILocation(line: 141, column: 10, scope: !12072)
!12234 = !DILocation(line: 141, column: 16, scope: !12072)
!12235 = !DILocation(line: 142, column: 46, scope: !12072)
!12236 = !DILocation(line: 142, column: 36, scope: !12072)
!12237 = !DILocation(line: 142, column: 4, scope: !12072)
!12238 = !DILocation(line: 142, column: 10, scope: !12072)
!12239 = !DILocation(line: 142, column: 15, scope: !12072)
!12240 = !DILocation(line: 142, column: 28, scope: !12072)
!12241 = !DILocation(line: 142, column: 34, scope: !12072)
!12242 = !DILocation(line: 143, column: 4, scope: !12072)
!12243 = !DILocation(line: 147, column: 4, scope: !12072)
!12244 = !DILocation(line: 147, column: 10, scope: !12072)
!12245 = !DILocation(line: 147, column: 16, scope: !12072)
!12246 = !DILocation(line: 148, column: 4, scope: !12072)
!12247 = !DILocation(line: 148, column: 10, scope: !12072)
!12248 = !DILocation(line: 148, column: 16, scope: !12072)
!12249 = !DILocation(line: 149, column: 46, scope: !12072)
!12250 = !DILocation(line: 149, column: 36, scope: !12072)
!12251 = !DILocation(line: 149, column: 4, scope: !12072)
!12252 = !DILocation(line: 149, column: 10, scope: !12072)
!12253 = !DILocation(line: 149, column: 15, scope: !12072)
!12254 = !DILocation(line: 149, column: 28, scope: !12072)
!12255 = !DILocation(line: 149, column: 34, scope: !12072)
!12256 = !DILocation(line: 150, column: 4, scope: !12072)
!12257 = !DILocation(line: 154, column: 4, scope: !12072)
!12258 = !DILocation(line: 158, column: 2, scope: !12053)
!12259 = !DILocation(line: 158, column: 8, scope: !12053)
!12260 = !DILocation(line: 158, column: 14, scope: !12053)
!12261 = !DILocation(line: 160, column: 2, scope: !12053)
!12262 = !DILocation(line: 161, column: 1, scope: !12053)
!12263 = distinct !DISubprogram(name: "edvm_mesh_knife_face_point", scope: !3, file: !3, line: 3037, type: !12264, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!12264 = !DISubroutineType(types: !12265)
!12265 = !{null, !2730, !392}
!12266 = !DILocalVariable(name: "f", arg: 1, scope: !12263, file: !3, line: 3037, type: !2730)
!12267 = !DILocation(line: 3037, column: 48, scope: !12263)
!12268 = !DILocalVariable(name: "r_cent", arg: 2, scope: !12263, file: !3, line: 3037, type: !392)
!12269 = !DILocation(line: 3037, column: 57, scope: !12263)
!12270 = !DILocalVariable(name: "tottri", scope: !12263, file: !3, line: 3039, type: !3901)
!12271 = !DILocation(line: 3039, column: 12, scope: !12263)
!12272 = !DILocation(line: 3039, column: 21, scope: !12263)
!12273 = !DILocation(line: 3039, column: 24, scope: !12263)
!12274 = !DILocation(line: 3039, column: 28, scope: !12263)
!12275 = !DILocalVariable(name: "loops", scope: !12263, file: !3, line: 3040, type: !3237)
!12276 = !DILocation(line: 3040, column: 11, scope: !12263)
!12277 = !DILocation(line: 3040, column: 19, scope: !12263)
!12278 = !DILocalVariable(name: "index", scope: !12263, file: !3, line: 3041, type: !12279)
!12279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12280, size: 64)
!12280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 96, elements: !556)
!12281 = !DILocation(line: 3041, column: 18, scope: !12263)
!12282 = !DILocation(line: 3041, column: 30, scope: !12263)
!12283 = !DILocalVariable(name: "j", scope: !12263, file: !3, line: 3042, type: !35)
!12284 = !DILocation(line: 3042, column: 6, scope: !12263)
!12285 = !DILocalVariable(name: "best_co", scope: !12263, file: !3, line: 3044, type: !12286)
!12286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !997, size: 192, elements: !556)
!12287 = !DILocation(line: 3044, column: 15, scope: !12263)
!12288 = !DILocalVariable(name: "best_area", scope: !12263, file: !3, line: 3045, type: !357)
!12289 = !DILocation(line: 3045, column: 8, scope: !12263)
!12290 = !DILocalVariable(name: "ok", scope: !12263, file: !3, line: 3046, type: !1053)
!12291 = !DILocation(line: 3046, column: 7, scope: !12263)
!12292 = !DILocation(line: 3048, column: 28, scope: !12263)
!12293 = !DILocation(line: 3048, column: 31, scope: !12263)
!12294 = !DILocation(line: 3048, column: 38, scope: !12263)
!12295 = !DILocation(line: 3048, column: 2, scope: !12263)
!12296 = !DILocation(line: 3050, column: 9, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12263, file: !3, line: 3050, column: 2)
!12298 = !DILocation(line: 3050, column: 7, scope: !12297)
!12299 = !DILocation(line: 3050, column: 14, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12297, file: !3, line: 3050, column: 2)
!12301 = !DILocation(line: 3050, column: 18, scope: !12300)
!12302 = !DILocation(line: 3050, column: 16, scope: !12300)
!12303 = !DILocation(line: 3050, column: 2, scope: !12297)
!12304 = !DILocalVariable(name: "p1", scope: !12305, file: !3, line: 3051, type: !997)
!12305 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 3050, column: 31)
!12306 = !DILocation(line: 3051, column: 16, scope: !12305)
!12307 = !DILocation(line: 3051, column: 21, scope: !12305)
!12308 = !DILocation(line: 3051, column: 27, scope: !12305)
!12309 = !DILocation(line: 3051, column: 33, scope: !12305)
!12310 = !DILocation(line: 3051, column: 41, scope: !12305)
!12311 = !DILocation(line: 3051, column: 44, scope: !12305)
!12312 = !DILocalVariable(name: "p2", scope: !12305, file: !3, line: 3052, type: !997)
!12313 = !DILocation(line: 3052, column: 16, scope: !12305)
!12314 = !DILocation(line: 3052, column: 21, scope: !12305)
!12315 = !DILocation(line: 3052, column: 27, scope: !12305)
!12316 = !DILocation(line: 3052, column: 33, scope: !12305)
!12317 = !DILocation(line: 3052, column: 41, scope: !12305)
!12318 = !DILocation(line: 3052, column: 44, scope: !12305)
!12319 = !DILocalVariable(name: "p3", scope: !12305, file: !3, line: 3053, type: !997)
!12320 = !DILocation(line: 3053, column: 16, scope: !12305)
!12321 = !DILocation(line: 3053, column: 21, scope: !12305)
!12322 = !DILocation(line: 3053, column: 27, scope: !12305)
!12323 = !DILocation(line: 3053, column: 33, scope: !12305)
!12324 = !DILocation(line: 3053, column: 41, scope: !12305)
!12325 = !DILocation(line: 3053, column: 44, scope: !12305)
!12326 = !DILocalVariable(name: "area", scope: !12305, file: !3, line: 3054, type: !357)
!12327 = !DILocation(line: 3054, column: 9, scope: !12305)
!12328 = !DILocalVariable(name: "cross", scope: !12305, file: !3, line: 3056, type: !555)
!12329 = !DILocation(line: 3056, column: 9, scope: !12305)
!12330 = !DILocation(line: 3057, column: 17, scope: !12305)
!12331 = !DILocation(line: 3057, column: 24, scope: !12305)
!12332 = !DILocation(line: 3057, column: 28, scope: !12305)
!12333 = !DILocation(line: 3057, column: 3, scope: !12305)
!12334 = !DILocation(line: 3058, column: 25, scope: !12305)
!12335 = !DILocation(line: 3058, column: 29, scope: !12305)
!12336 = !DILocation(line: 3058, column: 16, scope: !12305)
!12337 = !DILocation(line: 3058, column: 10, scope: !12305)
!12338 = !DILocation(line: 3058, column: 8, scope: !12305)
!12339 = !DILocation(line: 3059, column: 7, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12305, file: !3, line: 3059, column: 7)
!12341 = !DILocation(line: 3059, column: 14, scope: !12340)
!12342 = !DILocation(line: 3059, column: 12, scope: !12340)
!12343 = !DILocation(line: 3059, column: 7, scope: !12305)
!12344 = !DILocation(line: 3060, column: 17, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12340, file: !3, line: 3059, column: 25)
!12346 = !DILocation(line: 3060, column: 4, scope: !12345)
!12347 = !DILocation(line: 3060, column: 15, scope: !12345)
!12348 = !DILocation(line: 3061, column: 17, scope: !12345)
!12349 = !DILocation(line: 3061, column: 4, scope: !12345)
!12350 = !DILocation(line: 3061, column: 15, scope: !12345)
!12351 = !DILocation(line: 3062, column: 17, scope: !12345)
!12352 = !DILocation(line: 3062, column: 4, scope: !12345)
!12353 = !DILocation(line: 3062, column: 15, scope: !12345)
!12354 = !DILocation(line: 3063, column: 16, scope: !12345)
!12355 = !DILocation(line: 3063, column: 14, scope: !12345)
!12356 = !DILocation(line: 3064, column: 7, scope: !12345)
!12357 = !DILocation(line: 3065, column: 3, scope: !12345)
!12358 = !DILocation(line: 3066, column: 2, scope: !12305)
!12359 = !DILocation(line: 3050, column: 27, scope: !12300)
!12360 = !DILocation(line: 3050, column: 2, scope: !12300)
!12361 = distinct !{!12361, !12303, !12362}
!12362 = !DILocation(line: 3066, column: 2, scope: !12297)
!12363 = !DILocation(line: 3068, column: 6, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12263, file: !3, line: 3068, column: 6)
!12365 = !DILocation(line: 3068, column: 6, scope: !12263)
!12366 = !DILocation(line: 3069, column: 17, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 3068, column: 10)
!12368 = !DILocation(line: 3069, column: 25, scope: !12367)
!12369 = !DILocation(line: 3069, column: 37, scope: !12367)
!12370 = !DILocation(line: 3069, column: 49, scope: !12367)
!12371 = !DILocation(line: 3069, column: 3, scope: !12367)
!12372 = !DILocation(line: 3070, column: 2, scope: !12367)
!12373 = !DILocation(line: 3072, column: 17, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 3071, column: 7)
!12375 = !DILocation(line: 3072, column: 25, scope: !12374)
!12376 = !DILocation(line: 3072, column: 35, scope: !12374)
!12377 = !DILocation(line: 3072, column: 38, scope: !12374)
!12378 = !DILocation(line: 3072, column: 42, scope: !12374)
!12379 = !DILocation(line: 3072, column: 52, scope: !12374)
!12380 = !DILocation(line: 3072, column: 55, scope: !12374)
!12381 = !DILocation(line: 3072, column: 59, scope: !12374)
!12382 = !DILocation(line: 3072, column: 69, scope: !12374)
!12383 = !DILocation(line: 3072, column: 72, scope: !12374)
!12384 = !DILocation(line: 3072, column: 3, scope: !12374)
!12385 = !DILocation(line: 3074, column: 1, scope: !12263)
!12386 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !5212, file: !5212, line: 634, type: !7218, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !52, retainedNodes: !3266)
!12387 = !DILocalVariable(name: "r", arg: 1, scope: !12386, file: !5212, line: 634, type: !392)
!12388 = !DILocation(line: 634, column: 34, scope: !12386)
!12389 = !DILocalVariable(name: "a", arg: 2, scope: !12386, file: !5212, line: 634, type: !997)
!12390 = !DILocation(line: 634, column: 52, scope: !12386)
!12391 = !DILocalVariable(name: "b", arg: 3, scope: !12386, file: !5212, line: 634, type: !997)
!12392 = !DILocation(line: 634, column: 70, scope: !12386)
!12393 = !DILocation(line: 637, column: 9, scope: !12386)
!12394 = !DILocation(line: 637, column: 16, scope: !12386)
!12395 = !DILocation(line: 637, column: 14, scope: !12386)
!12396 = !DILocation(line: 637, column: 23, scope: !12386)
!12397 = !DILocation(line: 637, column: 30, scope: !12386)
!12398 = !DILocation(line: 637, column: 28, scope: !12386)
!12399 = !DILocation(line: 637, column: 21, scope: !12386)
!12400 = !DILocation(line: 637, column: 2, scope: !12386)
!12401 = !DILocation(line: 637, column: 7, scope: !12386)
!12402 = !DILocation(line: 638, column: 9, scope: !12386)
!12403 = !DILocation(line: 638, column: 16, scope: !12386)
!12404 = !DILocation(line: 638, column: 14, scope: !12386)
!12405 = !DILocation(line: 638, column: 23, scope: !12386)
!12406 = !DILocation(line: 638, column: 30, scope: !12386)
!12407 = !DILocation(line: 638, column: 28, scope: !12386)
!12408 = !DILocation(line: 638, column: 21, scope: !12386)
!12409 = !DILocation(line: 638, column: 2, scope: !12386)
!12410 = !DILocation(line: 638, column: 7, scope: !12386)
!12411 = !DILocation(line: 639, column: 9, scope: !12386)
!12412 = !DILocation(line: 639, column: 16, scope: !12386)
!12413 = !DILocation(line: 639, column: 14, scope: !12386)
!12414 = !DILocation(line: 639, column: 23, scope: !12386)
!12415 = !DILocation(line: 639, column: 30, scope: !12386)
!12416 = !DILocation(line: 639, column: 28, scope: !12386)
!12417 = !DILocation(line: 639, column: 21, scope: !12386)
!12418 = !DILocation(line: 639, column: 2, scope: !12386)
!12419 = !DILocation(line: 639, column: 7, scope: !12386)
!12420 = !DILocation(line: 640, column: 1, scope: !12386)
