; ModuleID = 'libpng/pngrutil.c'
source_filename = "libpng/pngrutil.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.png_struct_def = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)*, i8*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, %struct.z_stream_s, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i32, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, void (%struct.png_struct_def*)*, i32, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i8*, i8*, i16*, i8, i8, i8*, i16*, i16*, i16*, i16*, [29 x i8], i32, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32, i8*, i8, i8, i8, i16, i16, i32, i8, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*, i8*, i8*, i8*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type { i32 }
%struct.png_color_struct = type { i8, i8, i8 }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%struct.png_color_16_struct = type { i8, i16, i16, i16, i16 }
%struct.png_info_def = type { i32, i32, i32, i64, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], i32, i8, i32, i32, %struct.png_text_struct*, %struct.png_time_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, %struct.png_color_16_struct, i32, i32, i8, i32, i32, i8, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i8*, i8**, i8, i8, i32, %struct.png_unknown_chunk_t*, i32, i8*, i8*, i32, i8, %struct.png_sPLT_struct*, i32, i8, i8*, i8*, i8** }
%struct.png_text_struct = type { i32, i8*, i8*, i64, i64, i8*, i8* }
%struct.png_time_struct = type { i16, i8, i8, i8, i8, i8 }
%struct.png_sPLT_struct = type { i8*, i8, %struct.png_sPLT_entry_struct*, i32 }
%struct.png_sPLT_entry_struct = type { i16, i16, i16, i16, i16 }
%struct.png_unknown_chunk_t = type { [5 x i8], i8*, i64, i8 }
%struct.png_XYZ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_xy = type { i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [34 x i8] c"PNG unsigned integer out of range\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"Not a PNG file\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"PNG file corrupted by ASCII conversion\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"CRC error\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"invalid chunklength\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"Exceeded size limit while expanding chunk\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"png_inflate logic error\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"Not enough memory to decompress chunk\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"Unknown compression type @1\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"Out of place IHDR\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"Invalid IHDR chunk\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"Missing IHDR before PLTE\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"Invalid PLTE after IDAT\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"Duplicate PLTE chunk\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c"Ignoring PLTE chunk in grayscale PNG\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"Invalid palette chunk\00", align 1
@.str.16 = private unnamed_addr constant [39 x i8] c"Truncating incorrect tRNS chunk length\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"Truncating incorrect info tRNS chunk length\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"No image in file\00", align 1
@.str.19 = private unnamed_addr constant [28 x i8] c"Incorrect IEND chunk length\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"Missing IHDR before gAMA\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"Invalid gAMA after IDAT\00", align 1
@.str.22 = private unnamed_addr constant [24 x i8] c"Out of place gAMA chunk\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"Duplicate gAMA chunk\00", align 1
@.str.24 = private unnamed_addr constant [28 x i8] c"Incorrect gAMA chunk length\00", align 1
@.str.25 = private unnamed_addr constant [44 x i8] c"Ignoring gAMA chunk with out of range gamma\00", align 1
@.str.26 = private unnamed_addr constant [59 x i8] c"Ignoring incorrect gAMA value @1 when sRGB is also present\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"Missing IHDR before sBIT\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"Invalid sBIT after IDAT\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"Out of place sBIT chunk\00", align 1
@.str.30 = private unnamed_addr constant [21 x i8] c"Duplicate sBIT chunk\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"Incorrect sBIT chunk length\00", align 1
@.str.32 = private unnamed_addr constant [25 x i8] c"Missing IHDR before cHRM\00", align 1
@.str.33 = private unnamed_addr constant [24 x i8] c"Invalid cHRM after IDAT\00", align 1
@.str.34 = private unnamed_addr constant [24 x i8] c"Out of place cHRM chunk\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"Duplicate cHRM chunk\00", align 1
@.str.36 = private unnamed_addr constant [28 x i8] c"Incorrect cHRM chunk length\00", align 1
@.str.37 = private unnamed_addr constant [49 x i8] c"Ignoring cHRM chunk with negative chromaticities\00", align 1
@.str.38 = private unnamed_addr constant [88 x i8] c"Ignoring incorrect cHRM white(@1,@2) r(@3,@4)g(@5,@6)b(@7,@8) when sRGB is also present\00", align 1
@.str.39 = private unnamed_addr constant [42 x i8] c"internal error handling cHRM coefficients\00", align 1
@.str.40 = private unnamed_addr constant [34 x i8] c"internal error handling cHRM->XYZ\00", align 1
@.str.41 = private unnamed_addr constant [25 x i8] c"Missing IHDR before sRGB\00", align 1
@.str.42 = private unnamed_addr constant [24 x i8] c"Invalid sRGB after IDAT\00", align 1
@.str.43 = private unnamed_addr constant [24 x i8] c"Out of place sRGB chunk\00", align 1
@.str.44 = private unnamed_addr constant [21 x i8] c"Duplicate sRGB chunk\00", align 1
@.str.45 = private unnamed_addr constant [28 x i8] c"Incorrect sRGB chunk length\00", align 1
@.str.46 = private unnamed_addr constant [20 x i8] c"Unknown sRGB intent\00", align 1
@.str.47 = private unnamed_addr constant [56 x i8] c"Ignoring incorrect cHRM value when sRGB is also present\00", align 1
@.str.48 = private unnamed_addr constant [25 x i8] c"Missing IHDR before iCCP\00", align 1
@.str.49 = private unnamed_addr constant [24 x i8] c"Invalid iCCP after IDAT\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"Out of place iCCP chunk\00", align 1
@.str.51 = private unnamed_addr constant [21 x i8] c"Duplicate iCCP chunk\00", align 1
@.str.52 = private unnamed_addr constant [21 x i8] c"Malformed iCCP chunk\00", align 1
@.str.53 = private unnamed_addr constant [48 x i8] c"Ignoring nonzero compression type in iCCP chunk\00", align 1
@.str.54 = private unnamed_addr constant [43 x i8] c"Profile size field missing from iCCP chunk\00", align 1
@.str.55 = private unnamed_addr constant [67 x i8] c"Ignoring iCCP chunk with declared size = @1 and actual length = @2\00", align 1
@.str.56 = private unnamed_addr constant [33 x i8] c"No space in chunk cache for sPLT\00", align 1
@.str.57 = private unnamed_addr constant [25 x i8] c"Missing IHDR before sPLT\00", align 1
@.str.58 = private unnamed_addr constant [24 x i8] c"Invalid sPLT after IDAT\00", align 1
@.str.59 = private unnamed_addr constant [21 x i8] c"malformed sPLT chunk\00", align 1
@.str.60 = private unnamed_addr constant [26 x i8] c"sPLT chunk has bad length\00", align 1
@.str.61 = private unnamed_addr constant [20 x i8] c"sPLT chunk too long\00", align 1
@.str.62 = private unnamed_addr constant [36 x i8] c"sPLT chunk requires too much memory\00", align 1
@.str.63 = private unnamed_addr constant [25 x i8] c"Missing IHDR before tRNS\00", align 1
@.str.64 = private unnamed_addr constant [24 x i8] c"Invalid tRNS after IDAT\00", align 1
@.str.65 = private unnamed_addr constant [21 x i8] c"Duplicate tRNS chunk\00", align 1
@.str.66 = private unnamed_addr constant [28 x i8] c"Incorrect tRNS chunk length\00", align 1
@.str.67 = private unnamed_addr constant [25 x i8] c"Missing PLTE before tRNS\00", align 1
@.str.68 = private unnamed_addr constant [23 x i8] c"Zero length tRNS chunk\00", align 1
@.str.69 = private unnamed_addr constant [42 x i8] c"tRNS chunk not allowed with alpha channel\00", align 1
@.str.70 = private unnamed_addr constant [25 x i8] c"Missing IHDR before bKGD\00", align 1
@.str.71 = private unnamed_addr constant [24 x i8] c"Invalid bKGD after IDAT\00", align 1
@.str.72 = private unnamed_addr constant [25 x i8] c"Missing PLTE before bKGD\00", align 1
@.str.73 = private unnamed_addr constant [21 x i8] c"Duplicate bKGD chunk\00", align 1
@.str.74 = private unnamed_addr constant [28 x i8] c"Incorrect bKGD chunk length\00", align 1
@.str.75 = private unnamed_addr constant [33 x i8] c"Incorrect bKGD chunk index value\00", align 1
@.str.76 = private unnamed_addr constant [25 x i8] c"Missing IHDR before hIST\00", align 1
@.str.77 = private unnamed_addr constant [24 x i8] c"Invalid hIST after IDAT\00", align 1
@.str.78 = private unnamed_addr constant [25 x i8] c"Missing PLTE before hIST\00", align 1
@.str.79 = private unnamed_addr constant [21 x i8] c"Duplicate hIST chunk\00", align 1
@.str.80 = private unnamed_addr constant [28 x i8] c"Incorrect hIST chunk length\00", align 1
@.str.81 = private unnamed_addr constant [25 x i8] c"Missing IHDR before pHYs\00", align 1
@.str.82 = private unnamed_addr constant [24 x i8] c"Invalid pHYs after IDAT\00", align 1
@.str.83 = private unnamed_addr constant [21 x i8] c"Duplicate pHYs chunk\00", align 1
@.str.84 = private unnamed_addr constant [28 x i8] c"Incorrect pHYs chunk length\00", align 1
@.str.85 = private unnamed_addr constant [25 x i8] c"Missing IHDR before oFFs\00", align 1
@.str.86 = private unnamed_addr constant [24 x i8] c"Invalid oFFs after IDAT\00", align 1
@.str.87 = private unnamed_addr constant [21 x i8] c"Duplicate oFFs chunk\00", align 1
@.str.88 = private unnamed_addr constant [28 x i8] c"Incorrect oFFs chunk length\00", align 1
@.str.89 = private unnamed_addr constant [25 x i8] c"Missing IHDR before pCAL\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"Invalid pCAL after IDAT\00", align 1
@.str.91 = private unnamed_addr constant [21 x i8] c"Duplicate pCAL chunk\00", align 1
@.str.92 = private unnamed_addr constant [27 x i8] c"No memory for pCAL purpose\00", align 1
@.str.93 = private unnamed_addr constant [18 x i8] c"Invalid pCAL data\00", align 1
@.str.94 = private unnamed_addr constant [42 x i8] c"Invalid pCAL parameters for equation type\00", align 1
@.str.95 = private unnamed_addr constant [42 x i8] c"Unrecognized equation type for pCAL chunk\00", align 1
@.str.96 = private unnamed_addr constant [26 x i8] c"No memory for pCAL params\00", align 1
@.str.97 = private unnamed_addr constant [25 x i8] c"Missing IHDR before sCAL\00", align 1
@.str.98 = private unnamed_addr constant [24 x i8] c"Invalid sCAL after IDAT\00", align 1
@.str.99 = private unnamed_addr constant [21 x i8] c"Duplicate sCAL chunk\00", align 1
@.str.100 = private unnamed_addr constant [21 x i8] c"sCAL chunk too short\00", align 1
@.str.101 = private unnamed_addr constant [42 x i8] c"Out of memory while processing sCAL chunk\00", align 1
@.str.102 = private unnamed_addr constant [35 x i8] c"Invalid sCAL ignored: invalid unit\00", align 1
@.str.103 = private unnamed_addr constant [45 x i8] c"Invalid sCAL chunk ignored: bad width format\00", align 1
@.str.104 = private unnamed_addr constant [47 x i8] c"Invalid sCAL chunk ignored: non-positive width\00", align 1
@.str.105 = private unnamed_addr constant [46 x i8] c"Invalid sCAL chunk ignored: bad height format\00", align 1
@.str.106 = private unnamed_addr constant [48 x i8] c"Invalid sCAL chunk ignored: non-positive height\00", align 1
@.str.107 = private unnamed_addr constant [24 x i8] c"Out of place tIME chunk\00", align 1
@.str.108 = private unnamed_addr constant [21 x i8] c"Duplicate tIME chunk\00", align 1
@.str.109 = private unnamed_addr constant [28 x i8] c"Incorrect tIME chunk length\00", align 1
@.str.110 = private unnamed_addr constant [33 x i8] c"No space in chunk cache for tEXt\00", align 1
@.str.111 = private unnamed_addr constant [25 x i8] c"Missing IHDR before tEXt\00", align 1
@.str.112 = private unnamed_addr constant [32 x i8] c"No memory to process text chunk\00", align 1
@.str.113 = private unnamed_addr constant [40 x i8] c"Not enough memory to process text chunk\00", align 1
@.str.114 = private unnamed_addr constant [42 x i8] c"Insufficient memory to process text chunk\00", align 1
@.str.115 = private unnamed_addr constant [33 x i8] c"No space in chunk cache for zTXt\00", align 1
@.str.116 = private unnamed_addr constant [25 x i8] c"Missing IHDR before zTXt\00", align 1
@.str.117 = private unnamed_addr constant [36 x i8] c"Out of memory processing zTXt chunk\00", align 1
@.str.118 = private unnamed_addr constant [21 x i8] c"Truncated zTXt chunk\00", align 1
@.str.119 = private unnamed_addr constant [39 x i8] c"Unknown compression type in zTXt chunk\00", align 1
@.str.120 = private unnamed_addr constant [40 x i8] c"Not enough memory to process zTXt chunk\00", align 1
@.str.121 = private unnamed_addr constant [40 x i8] c"Insufficient memory to store zTXt chunk\00", align 1
@.str.122 = private unnamed_addr constant [33 x i8] c"No space in chunk cache for iTXt\00", align 1
@.str.123 = private unnamed_addr constant [25 x i8] c"Missing IHDR before iTXt\00", align 1
@.str.124 = private unnamed_addr constant [32 x i8] c"No memory to process iTXt chunk\00", align 1
@.str.125 = private unnamed_addr constant [21 x i8] c"Truncated iTXt chunk\00", align 1
@.str.126 = private unnamed_addr constant [40 x i8] c"Unknown iTXt compression type or method\00", align 1
@.str.127 = private unnamed_addr constant [21 x i8] c"Malformed iTXt chunk\00", align 1
@.str.128 = private unnamed_addr constant [40 x i8] c"Not enough memory to process iTXt chunk\00", align 1
@.str.129 = private unnamed_addr constant [40 x i8] c"Insufficient memory to store iTXt chunk\00", align 1
@.str.130 = private unnamed_addr constant [42 x i8] c"No space in chunk cache for unknown chunk\00", align 1
@.str.131 = private unnamed_addr constant [23 x i8] c"unknown critical chunk\00", align 1
@.str.132 = private unnamed_addr constant [20 x i8] c"error in user chunk\00", align 1
@.str.133 = private unnamed_addr constant [19 x i8] c"invalid chunk type\00", align 1
@.str.134 = private unnamed_addr constant [25 x i8] c"internal row logic error\00", align 1
@.str.135 = private unnamed_addr constant [36 x i8] c"internal row size calculation error\00", align 1
@.str.136 = private unnamed_addr constant [25 x i8] c"internal row width error\00", align 1
@png_combine_row.row_mask = internal constant [2 x [3 x [6 x i32]]] [[3 x [6 x i32]] [[6 x i32] [i32 16843009, i32 269488144, i32 286331153, i32 1145324612, i32 1431655765, i32 -1431655766], [6 x i32] [i32 196611, i32 50332416, i32 50529027, i32 808464432, i32 858993459, i32 -858993460], [6 x i32] [i32 15, i32 983040, i32 983055, i32 251662080, i32 252645135, i32 -252645136]], [3 x [6 x i32]] [[6 x i32] [i32 -2139062144, i32 134744072, i32 -2004318072, i32 572662306, i32 -1431655766, i32 1431655765], [6 x i32] [i32 12583104, i32 -1073692672, i32 -1061109568, i32 202116108, i32 -858993460, i32 858993459], [6 x i32] [i32 240, i32 15728640, i32 15728880, i32 -268374016, i32 -252645136, i32 252645135]]], align 16, !dbg !0
@png_combine_row.display_mask = internal constant [2 x [3 x [3 x i32]]] [[3 x [3 x i32]] [[3 x i32] [i32 -252645136, i32 1145324612, i32 -1431655766], [3 x i32] [i32 -16711936, i32 808464432, i32 -858993460], [3 x i32] [i32 -65536, i32 251662080, i32 -252645136]], [3 x [3 x i32]] [[3 x i32] [i32 252645135, i32 572662306, i32 1431655765], [3 x i32] [i32 -16711936, i32 202116108, i32 858993459], [3 x i32] [i32 -65536, i32 -268374016, i32 252645135]]], align 16, !dbg !479
@.str.137 = private unnamed_addr constant [35 x i8] c"invalid user transform pixel depth\00", align 1
@png_do_read_interlace.png_pass_inc = internal constant [7 x i32] [i32 8, i32 8, i32 4, i32 4, i32 2, i32 2, i32 1], align 16, !dbg !485
@png_read_finish_row.png_pass_start = internal constant [7 x i8] c"\00\04\00\02\00\01\00", align 1, !dbg !494
@png_read_finish_row.png_pass_inc = internal constant [7 x i8] c"\08\08\04\04\02\02\01", align 1, !dbg !498
@png_read_finish_row.png_pass_ystart = internal constant [7 x i8] c"\00\00\04\00\02\00\01", align 1, !dbg !500
@png_read_finish_row.png_pass_yinc = internal constant [7 x i8] c"\08\08\08\04\04\02\02", align 1, !dbg !502
@.str.138 = private unnamed_addr constant [22 x i8] c"Not enough image data\00", align 1
@.str.139 = private unnamed_addr constant [22 x i8] c"Extra compressed data\00", align 1
@.str.140 = private unnamed_addr constant [20 x i8] c"Decompression Error\00", align 1
@.str.141 = private unnamed_addr constant [23 x i8] c"Extra compression data\00", align 1
@png_read_start_row.png_pass_start = internal constant [7 x i8] c"\00\04\00\02\00\01\00", align 1, !dbg !504
@png_read_start_row.png_pass_inc = internal constant [7 x i8] c"\08\08\04\04\02\02\01", align 1, !dbg !507
@png_read_start_row.png_pass_ystart = internal constant [7 x i8] c"\00\00\04\00\02\00\01", align 1, !dbg !509
@png_read_start_row.png_pass_yinc = internal constant [7 x i8] c"\08\08\08\04\04\02\02", align 1, !dbg !511
@.str.142 = private unnamed_addr constant [45 x i8] c"Row has too many bytes to allocate in memory\00", align 1
@.str.143 = private unnamed_addr constant [38 x i8] c"Buffer error in compressed datastream\00", align 1
@.str.144 = private unnamed_addr constant [36 x i8] c"Data error in compressed datastream\00", align 1
@.str.145 = private unnamed_addr constant [33 x i8] c"Incomplete compressed datastream\00", align 1
@.str.146 = private unnamed_addr constant [37 x i8] c"PNG fixed point integer out of range\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @png_get_uint_31(%struct.png_struct_def* %png_ptr, i8* %buf) #0 !dbg !520 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %buf.addr = alloca i8*, align 8
  %uval = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !523, metadata !DIExpression()), !dbg !524
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !525, metadata !DIExpression()), !dbg !526
  call void @llvm.dbg.declare(metadata i32* %uval, metadata !527, metadata !DIExpression()), !dbg !528
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !529
  %1 = load i8, i8* %0, align 1, !dbg !529
  %conv = zext i8 %1 to i32, !dbg !529
  %shl = shl i32 %conv, 24, !dbg !529
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !529
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 1, !dbg !529
  %3 = load i8, i8* %add.ptr, align 1, !dbg !529
  %conv1 = zext i8 %3 to i32, !dbg !529
  %shl2 = shl i32 %conv1, 16, !dbg !529
  %add = add i32 %shl, %shl2, !dbg !529
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !529
  %add.ptr3 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !529
  %5 = load i8, i8* %add.ptr3, align 1, !dbg !529
  %conv4 = zext i8 %5 to i32, !dbg !529
  %shl5 = shl i32 %conv4, 8, !dbg !529
  %add6 = add i32 %add, %shl5, !dbg !529
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !529
  %add.ptr7 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !529
  %7 = load i8, i8* %add.ptr7, align 1, !dbg !529
  %conv8 = zext i8 %7 to i32, !dbg !529
  %add9 = add i32 %add6, %conv8, !dbg !529
  store i32 %add9, i32* %uval, align 4, !dbg !528
  %8 = load i32, i32* %uval, align 4, !dbg !530
  %cmp = icmp ugt i32 %8, 2147483647, !dbg !532
  br i1 %cmp, label %if.then, label %if.end, !dbg !533

if.then:                                          ; preds = %entry
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !534
  call void @png_error(%struct.png_struct_def* %9, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0)) #6, !dbg !535
  unreachable, !dbg !535

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %uval, align 4, !dbg !536
  ret i32 %10, !dbg !537
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noreturn
declare dso_local void @png_error(%struct.png_struct_def*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @png_get_uint_32(i8* %buf) #0 !dbg !538 {
entry:
  %buf.addr = alloca i8*, align 8
  %uval = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !541, metadata !DIExpression()), !dbg !542
  call void @llvm.dbg.declare(metadata i32* %uval, metadata !543, metadata !DIExpression()), !dbg !544
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !545
  %1 = load i8, i8* %0, align 1, !dbg !546
  %conv = zext i8 %1 to i32, !dbg !547
  %shl = shl i32 %conv, 24, !dbg !548
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !549
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 1, !dbg !550
  %3 = load i8, i8* %add.ptr, align 1, !dbg !551
  %conv1 = zext i8 %3 to i32, !dbg !552
  %shl2 = shl i32 %conv1, 16, !dbg !553
  %add = add i32 %shl, %shl2, !dbg !554
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !555
  %add.ptr3 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !556
  %5 = load i8, i8* %add.ptr3, align 1, !dbg !557
  %conv4 = zext i8 %5 to i32, !dbg !558
  %shl5 = shl i32 %conv4, 8, !dbg !559
  %add6 = add i32 %add, %shl5, !dbg !560
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !561
  %add.ptr7 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !562
  %7 = load i8, i8* %add.ptr7, align 1, !dbg !563
  %conv8 = zext i8 %7 to i32, !dbg !564
  %add9 = add i32 %add6, %conv8, !dbg !565
  store i32 %add9, i32* %uval, align 4, !dbg !544
  %8 = load i32, i32* %uval, align 4, !dbg !566
  ret i32 %8, !dbg !567
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @png_get_int_32(i8* %buf) #0 !dbg !568 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %uval = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !571, metadata !DIExpression()), !dbg !572
  call void @llvm.dbg.declare(metadata i32* %uval, metadata !573, metadata !DIExpression()), !dbg !574
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !575
  %1 = load i8, i8* %0, align 1, !dbg !575
  %conv = zext i8 %1 to i32, !dbg !575
  %shl = shl i32 %conv, 24, !dbg !575
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !575
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 1, !dbg !575
  %3 = load i8, i8* %add.ptr, align 1, !dbg !575
  %conv1 = zext i8 %3 to i32, !dbg !575
  %shl2 = shl i32 %conv1, 16, !dbg !575
  %add = add i32 %shl, %shl2, !dbg !575
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !575
  %add.ptr3 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !575
  %5 = load i8, i8* %add.ptr3, align 1, !dbg !575
  %conv4 = zext i8 %5 to i32, !dbg !575
  %shl5 = shl i32 %conv4, 8, !dbg !575
  %add6 = add i32 %add, %shl5, !dbg !575
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !575
  %add.ptr7 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !575
  %7 = load i8, i8* %add.ptr7, align 1, !dbg !575
  %conv8 = zext i8 %7 to i32, !dbg !575
  %add9 = add i32 %add6, %conv8, !dbg !575
  store i32 %add9, i32* %uval, align 4, !dbg !574
  %8 = load i32, i32* %uval, align 4, !dbg !576
  %and = and i32 %8, -2147483648, !dbg !578
  %cmp = icmp eq i32 %and, 0, !dbg !579
  br i1 %cmp, label %if.then, label %if.end, !dbg !580

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %uval, align 4, !dbg !581
  store i32 %9, i32* %retval, align 4, !dbg !582
  br label %return, !dbg !582

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %uval, align 4, !dbg !583
  %xor = xor i32 %10, -1, !dbg !584
  %add11 = add i32 %xor, 1, !dbg !585
  store i32 %add11, i32* %uval, align 4, !dbg !586
  %11 = load i32, i32* %uval, align 4, !dbg !587
  %sub = sub nsw i32 0, %11, !dbg !588
  store i32 %sub, i32* %retval, align 4, !dbg !589
  br label %return, !dbg !589

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !590
  ret i32 %12, !dbg !590
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i16 @png_get_uint_16(i8* %buf) #0 !dbg !591 {
entry:
  %buf.addr = alloca i8*, align 8
  %val = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !594, metadata !DIExpression()), !dbg !595
  call void @llvm.dbg.declare(metadata i32* %val, metadata !596, metadata !DIExpression()), !dbg !597
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !598
  %1 = load i8, i8* %0, align 1, !dbg !599
  %conv = zext i8 %1 to i32, !dbg !600
  %shl = shl i32 %conv, 8, !dbg !601
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !602
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 1, !dbg !603
  %3 = load i8, i8* %add.ptr, align 1, !dbg !604
  %conv1 = zext i8 %3 to i32, !dbg !605
  %add = add i32 %shl, %conv1, !dbg !606
  store i32 %add, i32* %val, align 4, !dbg !597
  %4 = load i32, i32* %val, align 4, !dbg !607
  %conv2 = trunc i32 %4 to i16, !dbg !608
  ret i16 %conv2, !dbg !609
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_read_sig(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr) #0 !dbg !610 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %num_checked = alloca i64, align 8
  %num_to_check = alloca i64, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !611, metadata !DIExpression()), !dbg !612
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !613, metadata !DIExpression()), !dbg !614
  call void @llvm.dbg.declare(metadata i64* %num_checked, metadata !615, metadata !DIExpression()), !dbg !616
  call void @llvm.dbg.declare(metadata i64* %num_to_check, metadata !617, metadata !DIExpression()), !dbg !618
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !619
  %sig_bytes = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 62, !dbg !621
  %1 = load i8, i8* %sig_bytes, align 1, !dbg !621
  %conv = zext i8 %1 to i32, !dbg !619
  %cmp = icmp sge i32 %conv, 8, !dbg !622
  br i1 %cmp, label %if.then, label %if.end, !dbg !623

if.then:                                          ; preds = %entry
  br label %if.end19, !dbg !624

if.end:                                           ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !625
  %sig_bytes2 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 62, !dbg !626
  %3 = load i8, i8* %sig_bytes2, align 1, !dbg !626
  %conv3 = zext i8 %3 to i64, !dbg !625
  store i64 %conv3, i64* %num_checked, align 8, !dbg !627
  %4 = load i64, i64* %num_checked, align 8, !dbg !628
  %sub = sub i64 8, %4, !dbg !629
  store i64 %sub, i64* %num_to_check, align 8, !dbg !630
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !631
  %io_state = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 142, !dbg !632
  store i32 17, i32* %io_state, align 8, !dbg !633
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !634
  %7 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !635
  %signature = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %7, i32 0, i32 15, !dbg !636
  %8 = load i64, i64* %num_checked, align 8, !dbg !637
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %signature, i64 0, i64 %8, !dbg !635
  %9 = load i64, i64* %num_to_check, align 8, !dbg !638
  call void @png_read_data(%struct.png_struct_def* %6, i8* %arrayidx, i64 %9), !dbg !639
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !640
  %sig_bytes4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 62, !dbg !641
  store i8 8, i8* %sig_bytes4, align 1, !dbg !642
  %11 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !643
  %signature5 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %11, i32 0, i32 15, !dbg !645
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %signature5, i64 0, i64 0, !dbg !643
  %12 = load i64, i64* %num_checked, align 8, !dbg !646
  %13 = load i64, i64* %num_to_check, align 8, !dbg !647
  %call = call i32 @png_sig_cmp(i8* %arraydecay, i64 %12, i64 %13), !dbg !648
  %tobool = icmp ne i32 %call, 0, !dbg !648
  br i1 %tobool, label %if.then6, label %if.end15, !dbg !649

if.then6:                                         ; preds = %if.end
  %14 = load i64, i64* %num_checked, align 8, !dbg !650
  %cmp7 = icmp ult i64 %14, 4, !dbg !653
  br i1 %cmp7, label %land.lhs.true, label %if.else, !dbg !654

land.lhs.true:                                    ; preds = %if.then6
  %15 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !655
  %signature9 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %15, i32 0, i32 15, !dbg !656
  %arraydecay10 = getelementptr inbounds [8 x i8], [8 x i8]* %signature9, i64 0, i64 0, !dbg !655
  %16 = load i64, i64* %num_checked, align 8, !dbg !657
  %17 = load i64, i64* %num_to_check, align 8, !dbg !658
  %sub11 = sub i64 %17, 4, !dbg !659
  %call12 = call i32 @png_sig_cmp(i8* %arraydecay10, i64 %16, i64 %sub11), !dbg !660
  %tobool13 = icmp ne i32 %call12, 0, !dbg !660
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !661

if.then14:                                        ; preds = %land.lhs.true
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !662
  call void @png_error(%struct.png_struct_def* %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !663
  unreachable, !dbg !663

if.else:                                          ; preds = %land.lhs.true, %if.then6
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !664
  call void @png_error(%struct.png_struct_def* %19, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !665
  unreachable, !dbg !665

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %num_checked, align 8, !dbg !666
  %cmp16 = icmp ult i64 %20, 3, !dbg !668
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !669

if.then18:                                        ; preds = %if.end15
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !670
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 13, !dbg !671
  %22 = load i32, i32* %mode, align 4, !dbg !672
  %or = or i32 %22, 4096, !dbg !672
  store i32 %or, i32* %mode, align 4, !dbg !672
  br label %if.end19, !dbg !670

if.end19:                                         ; preds = %if.then, %if.then18, %if.end15
  ret void, !dbg !673
}

declare dso_local void @png_read_data(%struct.png_struct_def*, i8*, i64) #3

declare dso_local i32 @png_sig_cmp(i8*, i64, i64) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @png_read_chunk_header(%struct.png_struct_def* %png_ptr) #0 !dbg !674 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %buf = alloca [8 x i8], align 1
  %length = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !677, metadata !DIExpression()), !dbg !678
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !679, metadata !DIExpression()), !dbg !680
  call void @llvm.dbg.declare(metadata i32* %length, metadata !681, metadata !DIExpression()), !dbg !682
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !683
  %io_state = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 142, !dbg !684
  store i32 33, i32* %io_state, align 8, !dbg !685
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !686
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !687
  call void @png_read_data(%struct.png_struct_def* %1, i8* %arraydecay, i64 8), !dbg !688
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !689
  %arraydecay1 = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !690
  %call = call i32 @png_get_uint_31(%struct.png_struct_def* %2, i8* %arraydecay1), !dbg !691
  store i32 %call, i32* %length, align 4, !dbg !692
  %arraydecay2 = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !693
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay2, i64 4, !dbg !693
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr, i64 0, !dbg !693
  %3 = load i8, i8* %arrayidx, align 1, !dbg !693
  %conv = zext i8 %3 to i32, !dbg !693
  %and = and i32 255, %conv, !dbg !693
  %shl = shl i32 %and, 24, !dbg !693
  %arraydecay3 = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !693
  %add.ptr4 = getelementptr inbounds i8, i8* %arraydecay3, i64 4, !dbg !693
  %arrayidx5 = getelementptr inbounds i8, i8* %add.ptr4, i64 1, !dbg !693
  %4 = load i8, i8* %arrayidx5, align 1, !dbg !693
  %conv6 = zext i8 %4 to i32, !dbg !693
  %and7 = and i32 255, %conv6, !dbg !693
  %shl8 = shl i32 %and7, 16, !dbg !693
  %or = or i32 %shl, %shl8, !dbg !693
  %arraydecay9 = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !693
  %add.ptr10 = getelementptr inbounds i8, i8* %arraydecay9, i64 4, !dbg !693
  %arrayidx11 = getelementptr inbounds i8, i8* %add.ptr10, i64 2, !dbg !693
  %5 = load i8, i8* %arrayidx11, align 1, !dbg !693
  %conv12 = zext i8 %5 to i32, !dbg !693
  %and13 = and i32 255, %conv12, !dbg !693
  %shl14 = shl i32 %and13, 8, !dbg !693
  %or15 = or i32 %or, %shl14, !dbg !693
  %arraydecay16 = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !693
  %add.ptr17 = getelementptr inbounds i8, i8* %arraydecay16, i64 4, !dbg !693
  %arrayidx18 = getelementptr inbounds i8, i8* %add.ptr17, i64 3, !dbg !693
  %6 = load i8, i8* %arrayidx18, align 1, !dbg !693
  %conv19 = zext i8 %6 to i32, !dbg !693
  %and20 = and i32 255, %conv19, !dbg !693
  %shl21 = shl i32 %and20, 0, !dbg !693
  %or22 = or i32 %or15, %shl21, !dbg !693
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !694
  %chunk_name = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 37, !dbg !695
  store i32 %or22, i32* %chunk_name, align 8, !dbg !696
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !697
  call void @png_reset_crc(%struct.png_struct_def* %8), !dbg !698
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !699
  %arraydecay23 = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !700
  %add.ptr24 = getelementptr inbounds i8, i8* %arraydecay23, i64 4, !dbg !701
  call void @png_calculate_crc(%struct.png_struct_def* %9, i8* %add.ptr24, i64 4), !dbg !702
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !703
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !704
  %chunk_name25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 37, !dbg !705
  %12 = load i32, i32* %chunk_name25, align 8, !dbg !705
  call void @png_check_chunk_name(%struct.png_struct_def* %10, i32 %12), !dbg !706
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !707
  %io_state26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 142, !dbg !708
  store i32 65, i32* %io_state26, align 8, !dbg !709
  %14 = load i32, i32* %length, align 4, !dbg !710
  ret i32 %14, !dbg !711
}

declare dso_local void @png_reset_crc(%struct.png_struct_def*) #3

declare dso_local void @png_calculate_crc(%struct.png_struct_def*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_check_chunk_name(%struct.png_struct_def* %png_ptr, i32 %chunk_name) #0 !dbg !712 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %chunk_name.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !715, metadata !DIExpression()), !dbg !716
  store i32 %chunk_name, i32* %chunk_name.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chunk_name.addr, metadata !717, metadata !DIExpression()), !dbg !718
  call void @llvm.dbg.declare(metadata i32* %i, metadata !719, metadata !DIExpression()), !dbg !720
  store i32 1, i32* %i, align 4, !dbg !721
  br label %for.cond, !dbg !723

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !724
  %cmp = icmp sle i32 %0, 4, !dbg !726
  br i1 %cmp, label %for.body, label %for.end, !dbg !727

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %c, metadata !728, metadata !DIExpression()), !dbg !730
  %1 = load i32, i32* %chunk_name.addr, align 4, !dbg !731
  %and = and i32 %1, 255, !dbg !732
  store i32 %and, i32* %c, align 4, !dbg !730
  %2 = load i32, i32* %c, align 4, !dbg !733
  %cmp1 = icmp slt i32 %2, 65, !dbg !735
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !736

lor.lhs.false:                                    ; preds = %for.body
  %3 = load i32, i32* %c, align 4, !dbg !737
  %cmp2 = icmp sgt i32 %3, 122, !dbg !738
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !739

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load i32, i32* %c, align 4, !dbg !740
  %cmp4 = icmp sgt i32 %4, 90, !dbg !741
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !742

land.lhs.true:                                    ; preds = %lor.lhs.false3
  %5 = load i32, i32* %c, align 4, !dbg !743
  %cmp5 = icmp slt i32 %5, 97, !dbg !744
  br i1 %cmp5, label %if.then, label %if.end, !dbg !745

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %for.body
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !746
  call void @png_chunk_error(%struct.png_struct_def* %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.133, i64 0, i64 0)) #6, !dbg !747
  unreachable, !dbg !747

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false3
  %7 = load i32, i32* %chunk_name.addr, align 4, !dbg !748
  %shr = lshr i32 %7, 8, !dbg !748
  store i32 %shr, i32* %chunk_name.addr, align 4, !dbg !748
  br label %for.inc, !dbg !749

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !750
  %inc = add nsw i32 %8, 1, !dbg !750
  store i32 %inc, i32* %i, align 4, !dbg !750
  br label %for.cond, !dbg !751, !llvm.loop !752

for.end:                                          ; preds = %for.cond
  ret void, !dbg !754
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_crc_read(%struct.png_struct_def* %png_ptr, i8* %buf, i64 %length) #0 !dbg !755 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !756, metadata !DIExpression()), !dbg !757
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !758, metadata !DIExpression()), !dbg !759
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !760, metadata !DIExpression()), !dbg !761
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !762
  %cmp = icmp eq %struct.png_struct_def* %0, null, !dbg !764
  br i1 %cmp, label %if.then, label %if.end, !dbg !765

if.then:                                          ; preds = %entry
  br label %return, !dbg !766

if.end:                                           ; preds = %entry
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !767
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !768
  %3 = load i64, i64* %length.addr, align 8, !dbg !769
  call void @png_read_data(%struct.png_struct_def* %1, i8* %2, i64 %3), !dbg !770
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !771
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !772
  %6 = load i64, i64* %length.addr, align 8, !dbg !773
  call void @png_calculate_crc(%struct.png_struct_def* %4, i8* %5, i64 %6), !dbg !774
  br label %return, !dbg !775

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !775
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @png_crc_finish(%struct.png_struct_def* %png_ptr, i32 %skip) #0 !dbg !776 {
entry:
  %retval = alloca i32, align 4
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %skip.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %istop = alloca i64, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !779, metadata !DIExpression()), !dbg !780
  store i32 %skip, i32* %skip.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %skip.addr, metadata !781, metadata !DIExpression()), !dbg !782
  call void @llvm.dbg.declare(metadata i64* %i, metadata !783, metadata !DIExpression()), !dbg !784
  call void @llvm.dbg.declare(metadata i64* %istop, metadata !785, metadata !DIExpression()), !dbg !786
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !787
  %zbuf_size = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 18, !dbg !788
  %1 = load i32, i32* %zbuf_size, align 8, !dbg !788
  %conv = zext i32 %1 to i64, !dbg !787
  store i64 %conv, i64* %istop, align 8, !dbg !786
  %2 = load i32, i32* %skip.addr, align 4, !dbg !789
  %conv1 = zext i32 %2 to i64, !dbg !791
  store i64 %conv1, i64* %i, align 8, !dbg !792
  br label %for.cond, !dbg !793

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %i, align 8, !dbg !794
  %4 = load i64, i64* %istop, align 8, !dbg !796
  %cmp = icmp ugt i64 %3, %4, !dbg !797
  br i1 %cmp, label %for.body, label %for.end, !dbg !798

for.body:                                         ; preds = %for.cond
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !799
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !801
  %zbuf = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 17, !dbg !802
  %7 = load i8*, i8** %zbuf, align 8, !dbg !802
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !803
  %zbuf_size3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 18, !dbg !804
  %9 = load i32, i32* %zbuf_size3, align 8, !dbg !804
  %conv4 = zext i32 %9 to i64, !dbg !803
  call void @png_crc_read(%struct.png_struct_def* %5, i8* %7, i64 %conv4), !dbg !805
  br label %for.inc, !dbg !806

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %istop, align 8, !dbg !807
  %11 = load i64, i64* %i, align 8, !dbg !808
  %sub = sub i64 %11, %10, !dbg !808
  store i64 %sub, i64* %i, align 8, !dbg !808
  br label %for.cond, !dbg !809, !llvm.loop !810

for.end:                                          ; preds = %for.cond
  %12 = load i64, i64* %i, align 8, !dbg !812
  %tobool = icmp ne i64 %12, 0, !dbg !812
  br i1 %tobool, label %if.then, label %if.end, !dbg !814

if.then:                                          ; preds = %for.end
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !815
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !817
  %zbuf5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 17, !dbg !818
  %15 = load i8*, i8** %zbuf5, align 8, !dbg !818
  %16 = load i64, i64* %i, align 8, !dbg !819
  call void @png_crc_read(%struct.png_struct_def* %13, i8* %15, i64 %16), !dbg !820
  br label %if.end, !dbg !821

if.end:                                           ; preds = %if.then, %for.end
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !822
  %call = call i32 @png_crc_error(%struct.png_struct_def* %17), !dbg !824
  %tobool6 = icmp ne i32 %call, 0, !dbg !824
  br i1 %tobool6, label %if.then7, label %if.end16, !dbg !825

if.then7:                                         ; preds = %if.end
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !826
  %chunk_name = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 37, !dbg !826
  %19 = load i32, i32* %chunk_name, align 8, !dbg !826
  %shr = lshr i32 %19, 29, !dbg !826
  %and = and i32 1, %shr, !dbg !826
  %tobool8 = icmp ne i32 %and, 0, !dbg !826
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !829

cond.true:                                        ; preds = %if.then7
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !830
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 14, !dbg !831
  %21 = load i32, i32* %flags, align 8, !dbg !831
  %and9 = and i32 %21, 512, !dbg !832
  %tobool10 = icmp ne i32 %and9, 0, !dbg !833
  %lnot = xor i1 %tobool10, true, !dbg !833
  br i1 %lnot, label %if.then14, label %if.else, !dbg !826

cond.false:                                       ; preds = %if.then7
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !834
  %flags11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 14, !dbg !835
  %23 = load i32, i32* %flags11, align 8, !dbg !835
  %and12 = and i32 %23, 1024, !dbg !836
  %tobool13 = icmp ne i32 %and12, 0, !dbg !836
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !829

if.then14:                                        ; preds = %cond.false, %cond.true
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !837
  call void @png_chunk_warning(%struct.png_struct_def* %24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)), !dbg !839
  br label %if.end15, !dbg !840

if.else:                                          ; preds = %cond.false, %cond.true
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !841
  call void @png_chunk_benign_error(%struct.png_struct_def* %25, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)), !dbg !843
  store i32 0, i32* %retval, align 4, !dbg !844
  br label %return, !dbg !844

if.end15:                                         ; preds = %if.then14
  store i32 1, i32* %retval, align 4, !dbg !845
  br label %return, !dbg !845

if.end16:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !846
  br label %return, !dbg !846

return:                                           ; preds = %if.end16, %if.end15, %if.else
  %26 = load i32, i32* %retval, align 4, !dbg !847
  ret i32 %26, !dbg !847
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @png_crc_error(%struct.png_struct_def* %png_ptr) #0 !dbg !848 {
entry:
  %retval = alloca i32, align 4
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %crc_bytes = alloca [4 x i8], align 1
  %crc = alloca i32, align 4
  %need_crc = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !851, metadata !DIExpression()), !dbg !852
  call void @llvm.dbg.declare(metadata [4 x i8]* %crc_bytes, metadata !853, metadata !DIExpression()), !dbg !855
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !856, metadata !DIExpression()), !dbg !857
  call void @llvm.dbg.declare(metadata i32* %need_crc, metadata !858, metadata !DIExpression()), !dbg !859
  store i32 1, i32* %need_crc, align 4, !dbg !859
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !860
  %chunk_name = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 37, !dbg !860
  %1 = load i32, i32* %chunk_name, align 8, !dbg !860
  %shr = lshr i32 %1, 29, !dbg !860
  %and = and i32 1, %shr, !dbg !860
  %tobool = icmp ne i32 %and, 0, !dbg !860
  br i1 %tobool, label %if.then, label %if.else, !dbg !862

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !863
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 14, !dbg !866
  %3 = load i32, i32* %flags, align 8, !dbg !866
  %and1 = and i32 %3, 768, !dbg !867
  %cmp = icmp eq i32 %and1, 768, !dbg !868
  br i1 %cmp, label %if.then2, label %if.end, !dbg !869

if.then2:                                         ; preds = %if.then
  store i32 0, i32* %need_crc, align 4, !dbg !870
  br label %if.end, !dbg !871

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end8, !dbg !872

if.else:                                          ; preds = %entry
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !873
  %flags3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 14, !dbg !876
  %5 = load i32, i32* %flags3, align 8, !dbg !876
  %and4 = and i32 %5, 2048, !dbg !877
  %tobool5 = icmp ne i32 %and4, 0, !dbg !877
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !878

if.then6:                                         ; preds = %if.else
  store i32 0, i32* %need_crc, align 4, !dbg !879
  br label %if.end7, !dbg !880

if.end7:                                          ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !881
  %io_state = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 142, !dbg !882
  store i32 129, i32* %io_state, align 8, !dbg !883
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !884
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %crc_bytes, i64 0, i64 0, !dbg !885
  call void @png_read_data(%struct.png_struct_def* %7, i8* %arraydecay, i64 4), !dbg !886
  %8 = load i32, i32* %need_crc, align 4, !dbg !887
  %tobool9 = icmp ne i32 %8, 0, !dbg !887
  br i1 %tobool9, label %if.then10, label %if.else27, !dbg !889

if.then10:                                        ; preds = %if.end8
  %arraydecay11 = getelementptr inbounds [4 x i8], [4 x i8]* %crc_bytes, i64 0, i64 0, !dbg !890
  %9 = load i8, i8* %arraydecay11, align 1, !dbg !890
  %conv = zext i8 %9 to i32, !dbg !890
  %shl = shl i32 %conv, 24, !dbg !890
  %arraydecay12 = getelementptr inbounds [4 x i8], [4 x i8]* %crc_bytes, i64 0, i64 0, !dbg !890
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay12, i64 1, !dbg !890
  %10 = load i8, i8* %add.ptr, align 1, !dbg !890
  %conv13 = zext i8 %10 to i32, !dbg !890
  %shl14 = shl i32 %conv13, 16, !dbg !890
  %add = add i32 %shl, %shl14, !dbg !890
  %arraydecay15 = getelementptr inbounds [4 x i8], [4 x i8]* %crc_bytes, i64 0, i64 0, !dbg !890
  %add.ptr16 = getelementptr inbounds i8, i8* %arraydecay15, i64 2, !dbg !890
  %11 = load i8, i8* %add.ptr16, align 1, !dbg !890
  %conv17 = zext i8 %11 to i32, !dbg !890
  %shl18 = shl i32 %conv17, 8, !dbg !890
  %add19 = add i32 %add, %shl18, !dbg !890
  %arraydecay20 = getelementptr inbounds [4 x i8], [4 x i8]* %crc_bytes, i64 0, i64 0, !dbg !890
  %add.ptr21 = getelementptr inbounds i8, i8* %arraydecay20, i64 3, !dbg !890
  %12 = load i8, i8* %add.ptr21, align 1, !dbg !890
  %conv22 = zext i8 %12 to i32, !dbg !890
  %add23 = add i32 %add19, %conv22, !dbg !890
  store i32 %add23, i32* %crc, align 4, !dbg !892
  %13 = load i32, i32* %crc, align 4, !dbg !893
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !894
  %crc24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 46, !dbg !895
  %15 = load i32, i32* %crc24, align 4, !dbg !895
  %cmp25 = icmp ne i32 %13, %15, !dbg !896
  %conv26 = zext i1 %cmp25 to i32, !dbg !896
  store i32 %conv26, i32* %retval, align 4, !dbg !897
  br label %return, !dbg !897

if.else27:                                        ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !898
  br label %return, !dbg !898

return:                                           ; preds = %if.else27, %if.then10
  %16 = load i32, i32* %retval, align 4, !dbg !899
  ret i32 %16, !dbg !899
}

declare dso_local void @png_chunk_warning(%struct.png_struct_def*, i8*) #3

declare dso_local void @png_chunk_benign_error(%struct.png_struct_def*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_decompress_chunk(%struct.png_struct_def* %png_ptr, i32 %comp_type, i64 %chunklength, i64 %prefix_size, i64* %newlength) #0 !dbg !900 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %comp_type.addr = alloca i32, align 4
  %chunklength.addr = alloca i64, align 8
  %prefix_size.addr = alloca i64, align 8
  %newlength.addr = alloca i64*, align 8
  %expanded_size = alloca i64, align 8
  %new_size = alloca i64, align 8
  %text = alloca i8*, align 8
  %p = alloca [8 x [32 x i8]], align 16
  %text39 = alloca i8*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !904, metadata !DIExpression()), !dbg !905
  store i32 %comp_type, i32* %comp_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %comp_type.addr, metadata !906, metadata !DIExpression()), !dbg !907
  store i64 %chunklength, i64* %chunklength.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %chunklength.addr, metadata !908, metadata !DIExpression()), !dbg !909
  store i64 %prefix_size, i64* %prefix_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %prefix_size.addr, metadata !910, metadata !DIExpression()), !dbg !911
  store i64* %newlength, i64** %newlength.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %newlength.addr, metadata !912, metadata !DIExpression()), !dbg !913
  %0 = load i64, i64* %prefix_size.addr, align 8, !dbg !914
  %1 = load i64, i64* %chunklength.addr, align 8, !dbg !916
  %cmp = icmp ugt i64 %0, %1, !dbg !917
  br i1 %cmp, label %if.then, label %if.else, !dbg !918

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !919
  call void @png_warning(%struct.png_struct_def* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0)), !dbg !921
  store i64 0, i64* %prefix_size.addr, align 8, !dbg !922
  br label %if.end38, !dbg !923

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %comp_type.addr, align 4, !dbg !924
  %cmp1 = icmp eq i32 %3, 0, !dbg !926
  br i1 %cmp1, label %if.then2, label %if.else35, !dbg !927

if.then2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %expanded_size, metadata !928, metadata !DIExpression()), !dbg !930
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !931
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !932
  %chunkdata = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 141, !dbg !933
  %6 = load i8*, i8** %chunkdata, align 8, !dbg !933
  %7 = load i64, i64* %prefix_size.addr, align 8, !dbg !934
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %7, !dbg !935
  %8 = load i64, i64* %chunklength.addr, align 8, !dbg !936
  %9 = load i64, i64* %prefix_size.addr, align 8, !dbg !937
  %sub = sub i64 %8, %9, !dbg !938
  %call = call i64 @png_inflate(%struct.png_struct_def* %4, i8* %add.ptr, i64 %sub, i8* null, i64 0), !dbg !939
  store i64 %call, i64* %expanded_size, align 8, !dbg !930
  %10 = load i64, i64* %prefix_size.addr, align 8, !dbg !940
  %cmp3 = icmp uge i64 %10, -2, !dbg !942
  br i1 %cmp3, label %if.then10, label %lor.lhs.false, !dbg !943

lor.lhs.false:                                    ; preds = %if.then2
  %11 = load i64, i64* %expanded_size, align 8, !dbg !944
  %12 = load i64, i64* %prefix_size.addr, align 8, !dbg !945
  %sub4 = sub i64 -2, %12, !dbg !946
  %cmp5 = icmp uge i64 %11, %sub4, !dbg !947
  br i1 %cmp5, label %if.then10, label %lor.lhs.false6, !dbg !948

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !949
  %user_chunk_malloc_max = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 138, !dbg !950
  %14 = load i64, i64* %user_chunk_malloc_max, align 8, !dbg !950
  %tobool = icmp ne i64 %14, 0, !dbg !949
  br i1 %tobool, label %land.lhs.true, label %if.else11, !dbg !951

land.lhs.true:                                    ; preds = %lor.lhs.false6
  %15 = load i64, i64* %prefix_size.addr, align 8, !dbg !952
  %16 = load i64, i64* %expanded_size, align 8, !dbg !953
  %add = add i64 %15, %16, !dbg !954
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !955
  %user_chunk_malloc_max7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 138, !dbg !956
  %18 = load i64, i64* %user_chunk_malloc_max7, align 8, !dbg !956
  %sub8 = sub i64 %18, 1, !dbg !957
  %cmp9 = icmp uge i64 %add, %sub8, !dbg !958
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !959

if.then10:                                        ; preds = %land.lhs.true, %lor.lhs.false, %if.then2
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !960
  call void @png_warning(%struct.png_struct_def* %19, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)), !dbg !961
  br label %if.end34, !dbg !961

if.else11:                                        ; preds = %land.lhs.true, %lor.lhs.false6
  %20 = load i64, i64* %expanded_size, align 8, !dbg !962
  %cmp12 = icmp ugt i64 %20, 0, !dbg !964
  br i1 %cmp12, label %if.then13, label %if.end33, !dbg !965

if.then13:                                        ; preds = %if.else11
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !966, metadata !DIExpression()), !dbg !968
  store i64 0, i64* %new_size, align 8, !dbg !968
  call void @llvm.dbg.declare(metadata i8** %text, metadata !969, metadata !DIExpression()), !dbg !970
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !971
  %22 = load i64, i64* %prefix_size.addr, align 8, !dbg !972
  %23 = load i64, i64* %expanded_size, align 8, !dbg !973
  %add14 = add i64 %22, %23, !dbg !974
  %add15 = add i64 %add14, 1, !dbg !975
  %call16 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %21, i64 %add15), !dbg !976
  store i8* %call16, i8** %text, align 8, !dbg !970
  %24 = load i8*, i8** %text, align 8, !dbg !977
  %cmp17 = icmp ne i8* %24, null, !dbg !979
  br i1 %cmp17, label %if.then18, label %if.else31, !dbg !980

if.then18:                                        ; preds = %if.then13
  %25 = load i8*, i8** %text, align 8, !dbg !981
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !983
  %chunkdata19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 141, !dbg !984
  %27 = load i8*, i8** %chunkdata19, align 8, !dbg !984
  %28 = load i64, i64* %prefix_size.addr, align 8, !dbg !985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %27, i64 %28, i1 false), !dbg !986
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !987
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !988
  %chunkdata20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 141, !dbg !989
  %31 = load i8*, i8** %chunkdata20, align 8, !dbg !989
  %32 = load i64, i64* %prefix_size.addr, align 8, !dbg !990
  %add.ptr21 = getelementptr inbounds i8, i8* %31, i64 %32, !dbg !991
  %33 = load i64, i64* %chunklength.addr, align 8, !dbg !992
  %34 = load i64, i64* %prefix_size.addr, align 8, !dbg !993
  %sub22 = sub i64 %33, %34, !dbg !994
  %35 = load i8*, i8** %text, align 8, !dbg !995
  %36 = load i64, i64* %prefix_size.addr, align 8, !dbg !996
  %add.ptr23 = getelementptr inbounds i8, i8* %35, i64 %36, !dbg !997
  %37 = load i64, i64* %expanded_size, align 8, !dbg !998
  %call24 = call i64 @png_inflate(%struct.png_struct_def* %29, i8* %add.ptr21, i64 %sub22, i8* %add.ptr23, i64 %37), !dbg !999
  store i64 %call24, i64* %new_size, align 8, !dbg !1000
  %38 = load i8*, i8** %text, align 8, !dbg !1001
  %39 = load i64, i64* %prefix_size.addr, align 8, !dbg !1002
  %40 = load i64, i64* %expanded_size, align 8, !dbg !1003
  %add25 = add i64 %39, %40, !dbg !1004
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %add25, !dbg !1001
  store i8 0, i8* %arrayidx, align 1, !dbg !1005
  %41 = load i64, i64* %new_size, align 8, !dbg !1006
  %42 = load i64, i64* %expanded_size, align 8, !dbg !1008
  %cmp26 = icmp eq i64 %41, %42, !dbg !1009
  br i1 %cmp26, label %if.then27, label %if.end, !dbg !1010

if.then27:                                        ; preds = %if.then18
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1011
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1013
  %chunkdata28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %44, i32 0, i32 141, !dbg !1014
  %45 = load i8*, i8** %chunkdata28, align 8, !dbg !1014
  call void @png_free(%struct.png_struct_def* %43, i8* %45), !dbg !1015
  %46 = load i8*, i8** %text, align 8, !dbg !1016
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1017
  %chunkdata29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 141, !dbg !1018
  store i8* %46, i8** %chunkdata29, align 8, !dbg !1019
  %48 = load i64, i64* %prefix_size.addr, align 8, !dbg !1020
  %49 = load i64, i64* %expanded_size, align 8, !dbg !1021
  %add30 = add i64 %48, %49, !dbg !1022
  %50 = load i64*, i64** %newlength.addr, align 8, !dbg !1023
  store i64 %add30, i64* %50, align 8, !dbg !1024
  br label %return, !dbg !1025

if.end:                                           ; preds = %if.then18
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1026
  call void @png_warning(%struct.png_struct_def* %51, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0)), !dbg !1027
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1028
  %53 = load i8*, i8** %text, align 8, !dbg !1029
  call void @png_free(%struct.png_struct_def* %52, i8* %53), !dbg !1030
  br label %if.end32, !dbg !1031

if.else31:                                        ; preds = %if.then13
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1032
  call void @png_warning(%struct.png_struct_def* %54, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)), !dbg !1033
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.end
  br label %if.end33, !dbg !1034

if.end33:                                         ; preds = %if.end32, %if.else11
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then10
  br label %if.end37, !dbg !1035

if.else35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata [8 x [32 x i8]]* %p, metadata !1036, metadata !DIExpression()), !dbg !1043
  %arraydecay = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !1044
  %55 = load i32, i32* %comp_type.addr, align 4, !dbg !1045
  call void @png_warning_parameter_signed([32 x i8]* %arraydecay, i32 1, i32 1, i32 %55), !dbg !1046
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1047
  %arraydecay36 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !1048
  call void @png_formatted_warning(%struct.png_struct_def* %56, [32 x i8]* %arraydecay36, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0)), !dbg !1049
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.end34
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then
  call void @llvm.dbg.declare(metadata i8** %text39, metadata !1050, metadata !DIExpression()), !dbg !1052
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1053
  %58 = load i64, i64* %prefix_size.addr, align 8, !dbg !1054
  %add40 = add i64 %58, 1, !dbg !1055
  %call41 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %57, i64 %add40), !dbg !1056
  store i8* %call41, i8** %text39, align 8, !dbg !1052
  %59 = load i8*, i8** %text39, align 8, !dbg !1057
  %cmp42 = icmp ne i8* %59, null, !dbg !1059
  br i1 %cmp42, label %if.then43, label %if.end52, !dbg !1060

if.then43:                                        ; preds = %if.end38
  %60 = load i64, i64* %prefix_size.addr, align 8, !dbg !1061
  %cmp44 = icmp ugt i64 %60, 0, !dbg !1064
  br i1 %cmp44, label %if.then45, label %if.end47, !dbg !1065

if.then45:                                        ; preds = %if.then43
  %61 = load i8*, i8** %text39, align 8, !dbg !1066
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1067
  %chunkdata46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %62, i32 0, i32 141, !dbg !1068
  %63 = load i8*, i8** %chunkdata46, align 8, !dbg !1068
  %64 = load i64, i64* %prefix_size.addr, align 8, !dbg !1069
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %63, i64 %64, i1 false), !dbg !1070
  br label %if.end47, !dbg !1070

if.end47:                                         ; preds = %if.then45, %if.then43
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1071
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1072
  %chunkdata48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 141, !dbg !1073
  %67 = load i8*, i8** %chunkdata48, align 8, !dbg !1073
  call void @png_free(%struct.png_struct_def* %65, i8* %67), !dbg !1074
  %68 = load i8*, i8** %text39, align 8, !dbg !1075
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1076
  %chunkdata49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %69, i32 0, i32 141, !dbg !1077
  store i8* %68, i8** %chunkdata49, align 8, !dbg !1078
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1079
  %chunkdata50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %70, i32 0, i32 141, !dbg !1080
  %71 = load i8*, i8** %chunkdata50, align 8, !dbg !1080
  %72 = load i64, i64* %prefix_size.addr, align 8, !dbg !1081
  %add.ptr51 = getelementptr inbounds i8, i8* %71, i64 %72, !dbg !1082
  store i8 0, i8* %add.ptr51, align 1, !dbg !1083
  br label %if.end52, !dbg !1084

if.end52:                                         ; preds = %if.end47, %if.end38
  %73 = load i64, i64* %prefix_size.addr, align 8, !dbg !1085
  %74 = load i64*, i64** %newlength.addr, align 8, !dbg !1086
  store i64 %73, i64* %74, align 8, !dbg !1087
  br label %return, !dbg !1088

return:                                           ; preds = %if.end52, %if.then27
  ret void, !dbg !1088
}

declare dso_local void @png_warning(%struct.png_struct_def*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal i64 @png_inflate(%struct.png_struct_def* %png_ptr, i8* %data, i64 %size, i8* %output, i64 %output_size) #0 !dbg !1089 {
entry:
  %retval = alloca i64, align 8
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %output.addr = alloca i8*, align 8
  %output_size.addr = alloca i64, align 8
  %count = alloca i64, align 8
  %ret = alloca i32, align 4
  %avail = alloca i32, align 4
  %space = alloca i64, align 8
  %copy = alloca i64, align 8
  %msg = alloca i8*, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1092, metadata !DIExpression()), !dbg !1093
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !1094, metadata !DIExpression()), !dbg !1095
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !1096, metadata !DIExpression()), !dbg !1097
  store i8* %output, i8** %output.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %output.addr, metadata !1098, metadata !DIExpression()), !dbg !1099
  store i64 %output_size, i64* %output_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %output_size.addr, metadata !1100, metadata !DIExpression()), !dbg !1101
  call void @llvm.dbg.declare(metadata i64* %count, metadata !1102, metadata !DIExpression()), !dbg !1103
  store i64 0, i64* %count, align 8, !dbg !1103
  %0 = load i8*, i8** %data.addr, align 8, !dbg !1104
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1105
  %zstream = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %1, i32 0, i32 16, !dbg !1106
  %next_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream, i32 0, i32 0, !dbg !1107
  store i8* %0, i8** %next_in, align 8, !dbg !1108
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1109
  %zstream1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 16, !dbg !1110
  %avail_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream1, i32 0, i32 1, !dbg !1111
  store i32 0, i32* %avail_in, align 8, !dbg !1112
  br label %while.body, !dbg !1113

while.body:                                       ; preds = %entry, %if.then44
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1114, metadata !DIExpression()), !dbg !1116
  call void @llvm.dbg.declare(metadata i32* %avail, metadata !1117, metadata !DIExpression()), !dbg !1118
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1119
  %zstream2 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 16, !dbg !1121
  %avail_in3 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream2, i32 0, i32 1, !dbg !1122
  %4 = load i32, i32* %avail_in3, align 8, !dbg !1122
  %cmp = icmp eq i32 %4, 0, !dbg !1123
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !1124

land.lhs.true:                                    ; preds = %while.body
  %5 = load i64, i64* %size.addr, align 8, !dbg !1125
  %cmp4 = icmp ugt i64 %5, 0, !dbg !1126
  br i1 %cmp4, label %if.then, label %if.end11, !dbg !1127

if.then:                                          ; preds = %land.lhs.true
  %6 = load i64, i64* %size.addr, align 8, !dbg !1128
  %cmp5 = icmp ule i64 %6, 4294967295, !dbg !1131
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !1132

if.then6:                                         ; preds = %if.then
  %7 = load i64, i64* %size.addr, align 8, !dbg !1133
  %conv = trunc i64 %7 to i32, !dbg !1135
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1136
  %zstream7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 16, !dbg !1137
  %avail_in8 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream7, i32 0, i32 1, !dbg !1138
  store i32 %conv, i32* %avail_in8, align 8, !dbg !1139
  store i64 0, i64* %size.addr, align 8, !dbg !1140
  br label %if.end, !dbg !1141

if.else:                                          ; preds = %if.then
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1142
  %zstream9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 16, !dbg !1144
  %avail_in10 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream9, i32 0, i32 1, !dbg !1145
  store i32 -1, i32* %avail_in10, align 8, !dbg !1146
  %10 = load i64, i64* %size.addr, align 8, !dbg !1147
  %sub = sub i64 %10, 4294967295, !dbg !1147
  store i64 %sub, i64* %size.addr, align 8, !dbg !1147
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  br label %if.end11, !dbg !1148

if.end11:                                         ; preds = %if.end, %land.lhs.true, %while.body
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1149
  %zbuf = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 17, !dbg !1150
  %12 = load i8*, i8** %zbuf, align 8, !dbg !1150
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1151
  %zstream12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 16, !dbg !1152
  %next_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream12, i32 0, i32 3, !dbg !1153
  store i8* %12, i8** %next_out, align 8, !dbg !1154
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1155
  %zbuf_size = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 18, !dbg !1156
  %15 = load i32, i32* %zbuf_size, align 8, !dbg !1156
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1157
  %zstream13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 16, !dbg !1158
  %avail_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream13, i32 0, i32 4, !dbg !1159
  store i32 %15, i32* %avail_out, align 8, !dbg !1160
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1161
  %zstream14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 16, !dbg !1162
  %call = call i32 @inflate(%struct.z_stream_s* %zstream14, i32 0), !dbg !1163
  store i32 %call, i32* %ret, align 4, !dbg !1164
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1165
  %zbuf_size15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %18, i32 0, i32 18, !dbg !1166
  %19 = load i32, i32* %zbuf_size15, align 8, !dbg !1166
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1167
  %zstream16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 16, !dbg !1168
  %avail_out17 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream16, i32 0, i32 4, !dbg !1169
  %21 = load i32, i32* %avail_out17, align 8, !dbg !1169
  %sub18 = sub i32 %19, %21, !dbg !1170
  store i32 %sub18, i32* %avail, align 4, !dbg !1171
  %22 = load i32, i32* %ret, align 4, !dbg !1172
  %cmp19 = icmp eq i32 %22, 0, !dbg !1174
  br i1 %cmp19, label %land.lhs.true23, label %lor.lhs.false, !dbg !1175

lor.lhs.false:                                    ; preds = %if.end11
  %23 = load i32, i32* %ret, align 4, !dbg !1176
  %cmp21 = icmp eq i32 %23, 1, !dbg !1177
  br i1 %cmp21, label %land.lhs.true23, label %if.end41, !dbg !1178

land.lhs.true23:                                  ; preds = %lor.lhs.false, %if.end11
  %24 = load i32, i32* %avail, align 4, !dbg !1179
  %cmp24 = icmp sgt i32 %24, 0, !dbg !1180
  br i1 %cmp24, label %if.then26, label %if.end41, !dbg !1181

if.then26:                                        ; preds = %land.lhs.true23
  call void @llvm.dbg.declare(metadata i64* %space, metadata !1182, metadata !DIExpression()), !dbg !1184
  %25 = load i32, i32* %avail, align 4, !dbg !1185
  %conv27 = sext i32 %25 to i64, !dbg !1185
  store i64 %conv27, i64* %space, align 8, !dbg !1184
  %26 = load i8*, i8** %output.addr, align 8, !dbg !1186
  %cmp28 = icmp ne i8* %26, null, !dbg !1188
  br i1 %cmp28, label %land.lhs.true30, label %if.end40, !dbg !1189

land.lhs.true30:                                  ; preds = %if.then26
  %27 = load i64, i64* %output_size.addr, align 8, !dbg !1190
  %28 = load i64, i64* %count, align 8, !dbg !1191
  %cmp31 = icmp ugt i64 %27, %28, !dbg !1192
  br i1 %cmp31, label %if.then33, label %if.end40, !dbg !1193

if.then33:                                        ; preds = %land.lhs.true30
  call void @llvm.dbg.declare(metadata i64* %copy, metadata !1194, metadata !DIExpression()), !dbg !1196
  %29 = load i64, i64* %output_size.addr, align 8, !dbg !1197
  %30 = load i64, i64* %count, align 8, !dbg !1198
  %sub34 = sub i64 %29, %30, !dbg !1199
  store i64 %sub34, i64* %copy, align 8, !dbg !1196
  %31 = load i64, i64* %space, align 8, !dbg !1200
  %32 = load i64, i64* %copy, align 8, !dbg !1202
  %cmp35 = icmp ult i64 %31, %32, !dbg !1203
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !1204

if.then37:                                        ; preds = %if.then33
  %33 = load i64, i64* %space, align 8, !dbg !1205
  store i64 %33, i64* %copy, align 8, !dbg !1206
  br label %if.end38, !dbg !1207

if.end38:                                         ; preds = %if.then37, %if.then33
  %34 = load i8*, i8** %output.addr, align 8, !dbg !1208
  %35 = load i64, i64* %count, align 8, !dbg !1209
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 %35, !dbg !1210
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1211
  %zbuf39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 17, !dbg !1212
  %37 = load i8*, i8** %zbuf39, align 8, !dbg !1212
  %38 = load i64, i64* %copy, align 8, !dbg !1213
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %37, i64 %38, i1 false), !dbg !1214
  br label %if.end40, !dbg !1215

if.end40:                                         ; preds = %if.end38, %land.lhs.true30, %if.then26
  %39 = load i64, i64* %space, align 8, !dbg !1216
  %40 = load i64, i64* %count, align 8, !dbg !1217
  %add = add i64 %40, %39, !dbg !1217
  store i64 %add, i64* %count, align 8, !dbg !1217
  br label %if.end41, !dbg !1218

if.end41:                                         ; preds = %if.end40, %land.lhs.true23, %lor.lhs.false
  %41 = load i32, i32* %ret, align 4, !dbg !1219
  %cmp42 = icmp eq i32 %41, 0, !dbg !1221
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !1222

if.then44:                                        ; preds = %if.end41
  br label %while.body, !dbg !1223, !llvm.loop !1224

if.end45:                                         ; preds = %if.end41
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1226
  %zstream46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 16, !dbg !1227
  %avail_in47 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream46, i32 0, i32 1, !dbg !1228
  store i32 0, i32* %avail_in47, align 8, !dbg !1229
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1230
  %zstream48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 16, !dbg !1231
  %call49 = call i32 @inflateReset(%struct.z_stream_s* %zstream48), !dbg !1232
  %44 = load i32, i32* %ret, align 4, !dbg !1233
  %cmp50 = icmp eq i32 %44, 1, !dbg !1235
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !1236

if.then52:                                        ; preds = %if.end45
  %45 = load i64, i64* %count, align 8, !dbg !1237
  store i64 %45, i64* %retval, align 8, !dbg !1238
  br label %return, !dbg !1238

if.end53:                                         ; preds = %if.end45
  call void @llvm.dbg.declare(metadata i8** %msg, metadata !1239, metadata !DIExpression()), !dbg !1241
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1242
  %zstream54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 16, !dbg !1244
  %msg55 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream54, i32 0, i32 6, !dbg !1245
  %47 = load i8*, i8** %msg55, align 8, !dbg !1245
  %cmp56 = icmp ne i8* %47, null, !dbg !1246
  br i1 %cmp56, label %if.then58, label %if.else61, !dbg !1247

if.then58:                                        ; preds = %if.end53
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1248
  %zstream59 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 16, !dbg !1249
  %msg60 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream59, i32 0, i32 6, !dbg !1250
  %49 = load i8*, i8** %msg60, align 8, !dbg !1250
  store i8* %49, i8** %msg, align 8, !dbg !1251
  br label %if.end63, !dbg !1252

if.else61:                                        ; preds = %if.end53
  %50 = load i32, i32* %ret, align 4, !dbg !1253
  switch i32 %50, label %sw.default [
    i32 -5, label %sw.bb
    i32 -3, label %sw.bb62
  ], !dbg !1254

sw.bb:                                            ; preds = %if.else61
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.143, i64 0, i64 0), i8** %msg, align 8, !dbg !1255
  br label %sw.epilog, !dbg !1257

sw.bb62:                                          ; preds = %if.else61
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.144, i64 0, i64 0), i8** %msg, align 8, !dbg !1258
  br label %sw.epilog, !dbg !1259

sw.default:                                       ; preds = %if.else61
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.145, i64 0, i64 0), i8** %msg, align 8, !dbg !1260
  br label %sw.epilog, !dbg !1261

sw.epilog:                                        ; preds = %sw.default, %sw.bb62, %sw.bb
  br label %if.end63

if.end63:                                         ; preds = %sw.epilog, %if.then58
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1262
  %52 = load i8*, i8** %msg, align 8, !dbg !1263
  call void @png_chunk_warning(%struct.png_struct_def* %51, i8* %52), !dbg !1264
  store i64 0, i64* %retval, align 8, !dbg !1265
  br label %return, !dbg !1265

return:                                           ; preds = %if.end63, %if.then52
  %53 = load i64, i64* %retval, align 8, !dbg !1266
  ret i64 %53, !dbg !1266
}

declare dso_local noalias i8* @png_malloc_warn(%struct.png_struct_def*, i64) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local void @png_free(%struct.png_struct_def*, i8*) #3

declare dso_local void @png_warning_parameter_signed([32 x i8]*, i32, i32, i32) #3

declare dso_local void @png_formatted_warning(%struct.png_struct_def*, [32 x i8]*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_IHDR(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !1267 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %buf = alloca [13 x i8], align 1
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %bit_depth = alloca i32, align 4
  %color_type = alloca i32, align 4
  %compression_type = alloca i32, align 4
  %filter_type = alloca i32, align 4
  %interlace_type = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1270, metadata !DIExpression()), !dbg !1271
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !1272, metadata !DIExpression()), !dbg !1273
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !1274, metadata !DIExpression()), !dbg !1275
  call void @llvm.dbg.declare(metadata [13 x i8]* %buf, metadata !1276, metadata !DIExpression()), !dbg !1280
  call void @llvm.dbg.declare(metadata i32* %width, metadata !1281, metadata !DIExpression()), !dbg !1282
  call void @llvm.dbg.declare(metadata i32* %height, metadata !1283, metadata !DIExpression()), !dbg !1284
  call void @llvm.dbg.declare(metadata i32* %bit_depth, metadata !1285, metadata !DIExpression()), !dbg !1286
  call void @llvm.dbg.declare(metadata i32* %color_type, metadata !1287, metadata !DIExpression()), !dbg !1288
  call void @llvm.dbg.declare(metadata i32* %compression_type, metadata !1289, metadata !DIExpression()), !dbg !1290
  call void @llvm.dbg.declare(metadata i32* %filter_type, metadata !1291, metadata !DIExpression()), !dbg !1292
  call void @llvm.dbg.declare(metadata i32* %interlace_type, metadata !1293, metadata !DIExpression()), !dbg !1294
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1295
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !1297
  %1 = load i32, i32* %mode, align 4, !dbg !1297
  %and = and i32 %1, 1, !dbg !1298
  %tobool = icmp ne i32 %and, 0, !dbg !1298
  br i1 %tobool, label %if.then, label %if.end, !dbg !1299

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1300
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !1301
  unreachable, !dbg !1301

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %length.addr, align 4, !dbg !1302
  %cmp = icmp ne i32 %3, 13, !dbg !1304
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !1305

if.then1:                                         ; preds = %if.end
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1306
  call void @png_error(%struct.png_struct_def* %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !1307
  unreachable, !dbg !1307

if.end2:                                          ; preds = %if.end
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1308
  %mode3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 13, !dbg !1309
  %6 = load i32, i32* %mode3, align 4, !dbg !1310
  %or = or i32 %6, 1, !dbg !1310
  store i32 %or, i32* %mode3, align 4, !dbg !1310
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1311
  %arraydecay = getelementptr inbounds [13 x i8], [13 x i8]* %buf, i64 0, i64 0, !dbg !1312
  call void @png_crc_read(%struct.png_struct_def* %7, i8* %arraydecay, i64 13), !dbg !1313
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1314
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %8, i32 0), !dbg !1315
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1316
  %arraydecay4 = getelementptr inbounds [13 x i8], [13 x i8]* %buf, i64 0, i64 0, !dbg !1317
  %call5 = call i32 @png_get_uint_31(%struct.png_struct_def* %9, i8* %arraydecay4), !dbg !1318
  store i32 %call5, i32* %width, align 4, !dbg !1319
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1320
  %arraydecay6 = getelementptr inbounds [13 x i8], [13 x i8]* %buf, i64 0, i64 0, !dbg !1321
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay6, i64 4, !dbg !1322
  %call7 = call i32 @png_get_uint_31(%struct.png_struct_def* %10, i8* %add.ptr), !dbg !1323
  store i32 %call7, i32* %height, align 4, !dbg !1324
  %arrayidx = getelementptr inbounds [13 x i8], [13 x i8]* %buf, i64 0, i64 8, !dbg !1325
  %11 = load i8, i8* %arrayidx, align 1, !dbg !1325
  %conv = zext i8 %11 to i32, !dbg !1325
  store i32 %conv, i32* %bit_depth, align 4, !dbg !1326
  %arrayidx8 = getelementptr inbounds [13 x i8], [13 x i8]* %buf, i64 0, i64 9, !dbg !1327
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !1327
  %conv9 = zext i8 %12 to i32, !dbg !1327
  store i32 %conv9, i32* %color_type, align 4, !dbg !1328
  %arrayidx10 = getelementptr inbounds [13 x i8], [13 x i8]* %buf, i64 0, i64 10, !dbg !1329
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !1329
  %conv11 = zext i8 %13 to i32, !dbg !1329
  store i32 %conv11, i32* %compression_type, align 4, !dbg !1330
  %arrayidx12 = getelementptr inbounds [13 x i8], [13 x i8]* %buf, i64 0, i64 11, !dbg !1331
  %14 = load i8, i8* %arrayidx12, align 1, !dbg !1331
  %conv13 = zext i8 %14 to i32, !dbg !1331
  store i32 %conv13, i32* %filter_type, align 4, !dbg !1332
  %arrayidx14 = getelementptr inbounds [13 x i8], [13 x i8]* %buf, i64 0, i64 12, !dbg !1333
  %15 = load i8, i8* %arrayidx14, align 1, !dbg !1333
  %conv15 = zext i8 %15 to i32, !dbg !1333
  store i32 %conv15, i32* %interlace_type, align 4, !dbg !1334
  %16 = load i32, i32* %width, align 4, !dbg !1335
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1336
  %width16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 30, !dbg !1337
  store i32 %16, i32* %width16, align 8, !dbg !1338
  %18 = load i32, i32* %height, align 4, !dbg !1339
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1340
  %height17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 31, !dbg !1341
  store i32 %18, i32* %height17, align 4, !dbg !1342
  %20 = load i32, i32* %bit_depth, align 4, !dbg !1343
  %conv18 = trunc i32 %20 to i8, !dbg !1344
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1345
  %bit_depth19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 57, !dbg !1346
  store i8 %conv18, i8* %bit_depth19, align 8, !dbg !1347
  %22 = load i32, i32* %interlace_type, align 4, !dbg !1348
  %conv20 = trunc i32 %22 to i8, !dbg !1349
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1350
  %interlaced = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 53, !dbg !1351
  store i8 %conv20, i8* %interlaced, align 4, !dbg !1352
  %24 = load i32, i32* %color_type, align 4, !dbg !1353
  %conv21 = trunc i32 %24 to i8, !dbg !1354
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1355
  %color_type22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 56, !dbg !1356
  store i8 %conv21, i8* %color_type22, align 1, !dbg !1357
  %26 = load i32, i32* %filter_type, align 4, !dbg !1358
  %conv23 = trunc i32 %26 to i8, !dbg !1359
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1360
  %filter_type24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 126, !dbg !1361
  store i8 %conv23, i8* %filter_type24, align 4, !dbg !1362
  %28 = load i32, i32* %compression_type, align 4, !dbg !1363
  %conv25 = trunc i32 %28 to i8, !dbg !1364
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1365
  %compression_type26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 134, !dbg !1366
  store i8 %conv25, i8* %compression_type26, align 8, !dbg !1367
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1368
  %color_type27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 56, !dbg !1369
  %31 = load i8, i8* %color_type27, align 1, !dbg !1369
  %conv28 = zext i8 %31 to i32, !dbg !1368
  switch i32 %conv28, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb29
    i32 4, label %sw.bb31
    i32 6, label %sw.bb33
  ], !dbg !1370

sw.default:                                       ; preds = %if.end2
  br label %sw.bb, !dbg !1371

sw.bb:                                            ; preds = %if.end2, %if.end2, %sw.default
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1372
  %channels = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 60, !dbg !1374
  store i8 1, i8* %channels, align 1, !dbg !1375
  br label %sw.epilog, !dbg !1376

sw.bb29:                                          ; preds = %if.end2
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1377
  %channels30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 60, !dbg !1378
  store i8 3, i8* %channels30, align 1, !dbg !1379
  br label %sw.epilog, !dbg !1380

sw.bb31:                                          ; preds = %if.end2
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1381
  %channels32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 60, !dbg !1382
  store i8 2, i8* %channels32, align 1, !dbg !1383
  br label %sw.epilog, !dbg !1384

sw.bb33:                                          ; preds = %if.end2
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1385
  %channels34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 60, !dbg !1386
  store i8 4, i8* %channels34, align 1, !dbg !1387
  br label %sw.epilog, !dbg !1388

sw.epilog:                                        ; preds = %sw.bb33, %sw.bb31, %sw.bb29, %sw.bb
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1389
  %bit_depth35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 57, !dbg !1390
  %37 = load i8, i8* %bit_depth35, align 8, !dbg !1390
  %conv36 = zext i8 %37 to i32, !dbg !1389
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1391
  %channels37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 60, !dbg !1392
  %39 = load i8, i8* %channels37, align 1, !dbg !1392
  %conv38 = zext i8 %39 to i32, !dbg !1391
  %mul = mul nsw i32 %conv36, %conv38, !dbg !1393
  %conv39 = trunc i32 %mul to i8, !dbg !1394
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1395
  %pixel_depth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 59, !dbg !1396
  store i8 %conv39, i8* %pixel_depth, align 2, !dbg !1397
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1398
  %pixel_depth40 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 59, !dbg !1398
  %42 = load i8, i8* %pixel_depth40, align 2, !dbg !1398
  %conv41 = zext i8 %42 to i32, !dbg !1398
  %cmp42 = icmp sge i32 %conv41, 8, !dbg !1398
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !1398

cond.true:                                        ; preds = %sw.epilog
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1398
  %width44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 30, !dbg !1398
  %44 = load i32, i32* %width44, align 8, !dbg !1398
  %conv45 = zext i32 %44 to i64, !dbg !1398
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1398
  %pixel_depth46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 59, !dbg !1398
  %46 = load i8, i8* %pixel_depth46, align 2, !dbg !1398
  %conv47 = zext i8 %46 to i64, !dbg !1398
  %shr = lshr i64 %conv47, 3, !dbg !1398
  %mul48 = mul i64 %conv45, %shr, !dbg !1398
  br label %cond.end, !dbg !1398

cond.false:                                       ; preds = %sw.epilog
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1398
  %width49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 30, !dbg !1398
  %48 = load i32, i32* %width49, align 8, !dbg !1398
  %conv50 = zext i32 %48 to i64, !dbg !1398
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1398
  %pixel_depth51 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 59, !dbg !1398
  %50 = load i8, i8* %pixel_depth51, align 2, !dbg !1398
  %conv52 = zext i8 %50 to i64, !dbg !1398
  %mul53 = mul i64 %conv50, %conv52, !dbg !1398
  %add = add i64 %mul53, 7, !dbg !1398
  %shr54 = lshr i64 %add, 3, !dbg !1398
  br label %cond.end, !dbg !1398

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %mul48, %cond.true ], [ %shr54, %cond.false ], !dbg !1398
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1399
  %rowbytes = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 34, !dbg !1400
  store i64 %cond, i64* %rowbytes, align 8, !dbg !1401
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1402
  %53 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1403
  %54 = load i32, i32* %width, align 4, !dbg !1404
  %55 = load i32, i32* %height, align 4, !dbg !1405
  %56 = load i32, i32* %bit_depth, align 4, !dbg !1406
  %57 = load i32, i32* %color_type, align 4, !dbg !1407
  %58 = load i32, i32* %interlace_type, align 4, !dbg !1408
  %59 = load i32, i32* %compression_type, align 4, !dbg !1409
  %60 = load i32, i32* %filter_type, align 4, !dbg !1410
  call void @png_set_IHDR(%struct.png_struct_def* %52, %struct.png_info_def* %53, i32 %54, i32 %55, i32 %56, i32 %57, i32 %58, i32 %59, i32 %60), !dbg !1411
  ret void, !dbg !1412
}

declare dso_local void @png_set_IHDR(%struct.png_struct_def*, %struct.png_info_def*, i32, i32, i32, i32, i32, i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_PLTE(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !1413 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %palette = alloca [256 x %struct.png_color_struct], align 16
  %num = alloca i32, align 4
  %i = alloca i32, align 4
  %pal_ptr = alloca %struct.png_color_struct*, align 8
  %buf = alloca [3 x i8], align 1
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1414, metadata !DIExpression()), !dbg !1415
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !1416, metadata !DIExpression()), !dbg !1417
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !1418, metadata !DIExpression()), !dbg !1419
  call void @llvm.dbg.declare(metadata [256 x %struct.png_color_struct]* %palette, metadata !1420, metadata !DIExpression()), !dbg !1424
  call void @llvm.dbg.declare(metadata i32* %num, metadata !1425, metadata !DIExpression()), !dbg !1426
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1427, metadata !DIExpression()), !dbg !1428
  call void @llvm.dbg.declare(metadata %struct.png_color_struct** %pal_ptr, metadata !1429, metadata !DIExpression()), !dbg !1430
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1431
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !1433
  %1 = load i32, i32* %mode, align 4, !dbg !1433
  %and = and i32 %1, 1, !dbg !1434
  %tobool = icmp ne i32 %and, 0, !dbg !1434
  br i1 %tobool, label %if.else, label %if.then, !dbg !1435

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1436
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !1437
  unreachable, !dbg !1437

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1438
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !1440
  %4 = load i32, i32* %mode1, align 4, !dbg !1440
  %and2 = and i32 %4, 4, !dbg !1441
  %tobool3 = icmp ne i32 %and2, 0, !dbg !1441
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !1442

if.then4:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1443
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)), !dbg !1445
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1446
  %7 = load i32, i32* %length.addr, align 4, !dbg !1447
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !1448
  br label %if.end66, !dbg !1449

if.else5:                                         ; preds = %if.else
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1450
  %mode6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 13, !dbg !1452
  %9 = load i32, i32* %mode6, align 4, !dbg !1452
  %and7 = and i32 %9, 2, !dbg !1453
  %tobool8 = icmp ne i32 %and7, 0, !dbg !1453
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !1454

if.then9:                                         ; preds = %if.else5
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1455
  call void @png_error(%struct.png_struct_def* %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !1456
  unreachable, !dbg !1456

if.end:                                           ; preds = %if.else5
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1457
  %mode12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 13, !dbg !1458
  %12 = load i32, i32* %mode12, align 4, !dbg !1459
  %or = or i32 %12, 2, !dbg !1459
  store i32 %or, i32* %mode12, align 4, !dbg !1459
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1460
  %color_type = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 56, !dbg !1462
  %14 = load i8, i8* %color_type, align 1, !dbg !1462
  %conv = zext i8 %14 to i32, !dbg !1460
  %and13 = and i32 %conv, 2, !dbg !1463
  %tobool14 = icmp ne i32 %and13, 0, !dbg !1463
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !1464

if.then15:                                        ; preds = %if.end11
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1465
  call void @png_warning(%struct.png_struct_def* %15, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i64 0, i64 0)), !dbg !1467
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1468
  %17 = load i32, i32* %length.addr, align 4, !dbg !1469
  %call16 = call i32 @png_crc_finish(%struct.png_struct_def* %16, i32 %17), !dbg !1470
  br label %if.end66, !dbg !1471

if.end17:                                         ; preds = %if.end11
  %18 = load i32, i32* %length.addr, align 4, !dbg !1472
  %cmp = icmp ugt i32 %18, 768, !dbg !1474
  br i1 %cmp, label %if.then20, label %lor.lhs.false, !dbg !1475

lor.lhs.false:                                    ; preds = %if.end17
  %19 = load i32, i32* %length.addr, align 4, !dbg !1476
  %rem = urem i32 %19, 3, !dbg !1477
  %tobool19 = icmp ne i32 %rem, 0, !dbg !1477
  br i1 %tobool19, label %if.then20, label %if.end28, !dbg !1478

if.then20:                                        ; preds = %lor.lhs.false, %if.end17
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1479
  %color_type21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 56, !dbg !1482
  %21 = load i8, i8* %color_type21, align 1, !dbg !1482
  %conv22 = zext i8 %21 to i32, !dbg !1479
  %cmp23 = icmp ne i32 %conv22, 3, !dbg !1483
  br i1 %cmp23, label %if.then25, label %if.else27, !dbg !1484

if.then25:                                        ; preds = %if.then20
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1485
  call void @png_warning(%struct.png_struct_def* %22, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0)), !dbg !1487
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1488
  %24 = load i32, i32* %length.addr, align 4, !dbg !1489
  %call26 = call i32 @png_crc_finish(%struct.png_struct_def* %23, i32 %24), !dbg !1490
  br label %if.end66, !dbg !1491

if.else27:                                        ; preds = %if.then20
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1492
  call void @png_error(%struct.png_struct_def* %25, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !1494
  unreachable, !dbg !1494

if.end28:                                         ; preds = %lor.lhs.false
  %26 = load i32, i32* %length.addr, align 4, !dbg !1495
  %div = sdiv i32 %26, 3, !dbg !1496
  store i32 %div, i32* %num, align 4, !dbg !1497
  store i32 0, i32* %i, align 4, !dbg !1498
  %arraydecay = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %palette, i64 0, i64 0, !dbg !1500
  store %struct.png_color_struct* %arraydecay, %struct.png_color_struct** %pal_ptr, align 8, !dbg !1501
  br label %for.cond, !dbg !1502

for.cond:                                         ; preds = %for.inc, %if.end28
  %27 = load i32, i32* %i, align 4, !dbg !1503
  %28 = load i32, i32* %num, align 4, !dbg !1505
  %cmp29 = icmp slt i32 %27, %28, !dbg !1506
  br i1 %cmp29, label %for.body, label %for.end, !dbg !1507

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x i8]* %buf, metadata !1508, metadata !DIExpression()), !dbg !1512
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1513
  %arraydecay31 = getelementptr inbounds [3 x i8], [3 x i8]* %buf, i64 0, i64 0, !dbg !1514
  call void @png_crc_read(%struct.png_struct_def* %29, i8* %arraydecay31, i64 3), !dbg !1515
  %arrayidx = getelementptr inbounds [3 x i8], [3 x i8]* %buf, i64 0, i64 0, !dbg !1516
  %30 = load i8, i8* %arrayidx, align 1, !dbg !1516
  %31 = load %struct.png_color_struct*, %struct.png_color_struct** %pal_ptr, align 8, !dbg !1517
  %red = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %31, i32 0, i32 0, !dbg !1518
  store i8 %30, i8* %red, align 1, !dbg !1519
  %arrayidx32 = getelementptr inbounds [3 x i8], [3 x i8]* %buf, i64 0, i64 1, !dbg !1520
  %32 = load i8, i8* %arrayidx32, align 1, !dbg !1520
  %33 = load %struct.png_color_struct*, %struct.png_color_struct** %pal_ptr, align 8, !dbg !1521
  %green = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %33, i32 0, i32 1, !dbg !1522
  store i8 %32, i8* %green, align 1, !dbg !1523
  %arrayidx33 = getelementptr inbounds [3 x i8], [3 x i8]* %buf, i64 0, i64 2, !dbg !1524
  %34 = load i8, i8* %arrayidx33, align 1, !dbg !1524
  %35 = load %struct.png_color_struct*, %struct.png_color_struct** %pal_ptr, align 8, !dbg !1525
  %blue = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %35, i32 0, i32 2, !dbg !1526
  store i8 %34, i8* %blue, align 1, !dbg !1527
  br label %for.inc, !dbg !1528

for.inc:                                          ; preds = %for.body
  %36 = load i32, i32* %i, align 4, !dbg !1529
  %inc = add nsw i32 %36, 1, !dbg !1529
  store i32 %inc, i32* %i, align 4, !dbg !1529
  %37 = load %struct.png_color_struct*, %struct.png_color_struct** %pal_ptr, align 8, !dbg !1530
  %incdec.ptr = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %37, i32 1, !dbg !1530
  store %struct.png_color_struct* %incdec.ptr, %struct.png_color_struct** %pal_ptr, align 8, !dbg !1530
  br label %for.cond, !dbg !1531, !llvm.loop !1532

for.end:                                          ; preds = %for.cond
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1534
  %call34 = call i32 @png_crc_finish(%struct.png_struct_def* %38, i32 0), !dbg !1536
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1537
  %40 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1538
  %arraydecay35 = getelementptr inbounds [256 x %struct.png_color_struct], [256 x %struct.png_color_struct]* %palette, i64 0, i64 0, !dbg !1539
  %41 = load i32, i32* %num, align 4, !dbg !1540
  call void @png_set_PLTE(%struct.png_struct_def* %39, %struct.png_info_def* %40, %struct.png_color_struct* %arraydecay35, i32 %41), !dbg !1541
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1542
  %color_type36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 56, !dbg !1544
  %43 = load i8, i8* %color_type36, align 1, !dbg !1544
  %conv37 = zext i8 %43 to i32, !dbg !1542
  %cmp38 = icmp eq i32 %conv37, 3, !dbg !1545
  br i1 %cmp38, label %if.then40, label %if.end66, !dbg !1546

if.then40:                                        ; preds = %for.end
  %44 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1547
  %cmp41 = icmp ne %struct.png_info_def* %44, null, !dbg !1550
  br i1 %cmp41, label %land.lhs.true, label %if.end65, !dbg !1551

land.lhs.true:                                    ; preds = %if.then40
  %45 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1552
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %45, i32 0, i32 2, !dbg !1553
  %46 = load i32, i32* %valid, align 8, !dbg !1553
  %and43 = and i32 %46, 16, !dbg !1554
  %tobool44 = icmp ne i32 %and43, 0, !dbg !1554
  br i1 %tobool44, label %if.then45, label %if.end65, !dbg !1555

if.then45:                                        ; preds = %land.lhs.true
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1556
  %num_trans = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 50, !dbg !1559
  %48 = load i16, i16* %num_trans, align 8, !dbg !1559
  %conv46 = zext i16 %48 to i32, !dbg !1556
  %49 = load i32, i32* %num, align 4, !dbg !1560
  %conv47 = trunc i32 %49 to i16, !dbg !1561
  %conv48 = zext i16 %conv47 to i32, !dbg !1561
  %cmp49 = icmp sgt i32 %conv46, %conv48, !dbg !1562
  br i1 %cmp49, label %if.then51, label %if.end54, !dbg !1563

if.then51:                                        ; preds = %if.then45
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1564
  call void @png_warning(%struct.png_struct_def* %50, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.16, i64 0, i64 0)), !dbg !1566
  %51 = load i32, i32* %num, align 4, !dbg !1567
  %conv52 = trunc i32 %51 to i16, !dbg !1568
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1569
  %num_trans53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 50, !dbg !1570
  store i16 %conv52, i16* %num_trans53, align 8, !dbg !1571
  br label %if.end54, !dbg !1572

if.end54:                                         ; preds = %if.then51, %if.then45
  %53 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1573
  %num_trans55 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %53, i32 0, i32 6, !dbg !1575
  %54 = load i16, i16* %num_trans55, align 2, !dbg !1575
  %conv56 = zext i16 %54 to i32, !dbg !1573
  %55 = load i32, i32* %num, align 4, !dbg !1576
  %conv57 = trunc i32 %55 to i16, !dbg !1577
  %conv58 = zext i16 %conv57 to i32, !dbg !1577
  %cmp59 = icmp sgt i32 %conv56, %conv58, !dbg !1578
  br i1 %cmp59, label %if.then61, label %if.end64, !dbg !1579

if.then61:                                        ; preds = %if.end54
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1580
  call void @png_warning(%struct.png_struct_def* %56, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0)), !dbg !1582
  %57 = load i32, i32* %num, align 4, !dbg !1583
  %conv62 = trunc i32 %57 to i16, !dbg !1584
  %58 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1585
  %num_trans63 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %58, i32 0, i32 6, !dbg !1586
  store i16 %conv62, i16* %num_trans63, align 2, !dbg !1587
  br label %if.end64, !dbg !1588

if.end64:                                         ; preds = %if.then61, %if.end54
  br label %if.end65, !dbg !1589

if.end65:                                         ; preds = %if.end64, %land.lhs.true, %if.then40
  br label %if.end66, !dbg !1590

if.end66:                                         ; preds = %if.then4, %if.then15, %if.then25, %if.end65, %for.end
  ret void, !dbg !1591
}

declare dso_local void @png_set_PLTE(%struct.png_struct_def*, %struct.png_info_def*, %struct.png_color_struct*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_IEND(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !1592 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1593, metadata !DIExpression()), !dbg !1594
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !1595, metadata !DIExpression()), !dbg !1596
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !1597, metadata !DIExpression()), !dbg !1598
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1599
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !1601
  %1 = load i32, i32* %mode, align 4, !dbg !1601
  %and = and i32 %1, 1, !dbg !1602
  %tobool = icmp ne i32 %and, 0, !dbg !1602
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !1603

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1604
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 13, !dbg !1605
  %3 = load i32, i32* %mode1, align 4, !dbg !1605
  %and2 = and i32 %3, 4, !dbg !1606
  %tobool3 = icmp ne i32 %and2, 0, !dbg !1606
  br i1 %tobool3, label %if.end, label %if.then, !dbg !1607

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1608
  call void @png_error(%struct.png_struct_def* %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !1610
  unreachable, !dbg !1610

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1611
  %mode4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 13, !dbg !1612
  %6 = load i32, i32* %mode4, align 4, !dbg !1613
  %or = or i32 %6, 24, !dbg !1613
  store i32 %or, i32* %mode4, align 4, !dbg !1613
  %7 = load i32, i32* %length.addr, align 4, !dbg !1614
  %cmp = icmp ne i32 %7, 0, !dbg !1616
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !1617

if.then5:                                         ; preds = %if.end
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1618
  call void @png_warning(%struct.png_struct_def* %8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i64 0, i64 0)), !dbg !1620
  br label %if.end6, !dbg !1621

if.end6:                                          ; preds = %if.then5, %if.end
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1622
  %10 = load i32, i32* %length.addr, align 4, !dbg !1623
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %9, i32 %10), !dbg !1624
  %11 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1625
  ret void, !dbg !1626
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_gAMA(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !1627 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %igamma = alloca i32, align 4
  %buf = alloca [4 x i8], align 1
  %p = alloca [8 x [32 x i8]], align 16
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1628, metadata !DIExpression()), !dbg !1629
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !1630, metadata !DIExpression()), !dbg !1631
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !1632, metadata !DIExpression()), !dbg !1633
  call void @llvm.dbg.declare(metadata i32* %igamma, metadata !1634, metadata !DIExpression()), !dbg !1635
  call void @llvm.dbg.declare(metadata [4 x i8]* %buf, metadata !1636, metadata !DIExpression()), !dbg !1637
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1638
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !1640
  %1 = load i32, i32* %mode, align 4, !dbg !1640
  %and = and i32 %1, 1, !dbg !1641
  %tobool = icmp ne i32 %and, 0, !dbg !1641
  br i1 %tobool, label %if.else, label %if.then, !dbg !1642

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1643
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !1644
  unreachable, !dbg !1644

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1645
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !1647
  %4 = load i32, i32* %mode1, align 4, !dbg !1647
  %and2 = and i32 %4, 4, !dbg !1648
  %tobool3 = icmp ne i32 %and2, 0, !dbg !1648
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !1649

if.then4:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1650
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i64 0, i64 0)), !dbg !1652
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1653
  %7 = load i32, i32* %length.addr, align 4, !dbg !1654
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !1655
  br label %return, !dbg !1656

if.else5:                                         ; preds = %if.else
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1657
  %mode6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 13, !dbg !1659
  %9 = load i32, i32* %mode6, align 4, !dbg !1659
  %and7 = and i32 %9, 2, !dbg !1660
  %tobool8 = icmp ne i32 %and7, 0, !dbg !1660
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !1661

if.then9:                                         ; preds = %if.else5
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1662
  call void @png_warning(%struct.png_struct_def* %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0)), !dbg !1663
  br label %if.end, !dbg !1663

if.end:                                           ; preds = %if.then9, %if.else5
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  %11 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1664
  %cmp = icmp ne %struct.png_info_def* %11, null, !dbg !1666
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !1667

land.lhs.true:                                    ; preds = %if.end11
  %12 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1668
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 2, !dbg !1669
  %13 = load i32, i32* %valid, align 8, !dbg !1669
  %and12 = and i32 %13, 1, !dbg !1670
  %tobool13 = icmp ne i32 %and12, 0, !dbg !1670
  br i1 %tobool13, label %land.lhs.true14, label %if.end20, !dbg !1671

land.lhs.true14:                                  ; preds = %land.lhs.true
  %14 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1672
  %valid15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 2, !dbg !1673
  %15 = load i32, i32* %valid15, align 8, !dbg !1673
  %and16 = and i32 %15, 2048, !dbg !1674
  %tobool17 = icmp ne i32 %and16, 0, !dbg !1674
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !1675

if.then18:                                        ; preds = %land.lhs.true14
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1676
  call void @png_warning(%struct.png_struct_def* %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0)), !dbg !1678
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1679
  %18 = load i32, i32* %length.addr, align 4, !dbg !1680
  %call19 = call i32 @png_crc_finish(%struct.png_struct_def* %17, i32 %18), !dbg !1681
  br label %return, !dbg !1682

if.end20:                                         ; preds = %land.lhs.true14, %land.lhs.true, %if.end11
  %19 = load i32, i32* %length.addr, align 4, !dbg !1683
  %cmp21 = icmp ne i32 %19, 4, !dbg !1685
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !1686

if.then22:                                        ; preds = %if.end20
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1687
  call void @png_warning(%struct.png_struct_def* %20, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.24, i64 0, i64 0)), !dbg !1689
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1690
  %22 = load i32, i32* %length.addr, align 4, !dbg !1691
  %call23 = call i32 @png_crc_finish(%struct.png_struct_def* %21, i32 %22), !dbg !1692
  br label %return, !dbg !1693

if.end24:                                         ; preds = %if.end20
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1694
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0, !dbg !1695
  call void @png_crc_read(%struct.png_struct_def* %23, i8* %arraydecay, i64 4), !dbg !1696
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1697
  %call25 = call i32 @png_crc_finish(%struct.png_struct_def* %24, i32 0), !dbg !1699
  %tobool26 = icmp ne i32 %call25, 0, !dbg !1699
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !1700

if.then27:                                        ; preds = %if.end24
  br label %return, !dbg !1701

if.end28:                                         ; preds = %if.end24
  %arraydecay29 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0, !dbg !1702
  %call30 = call i32 @png_get_fixed_point(%struct.png_struct_def* null, i8* %arraydecay29), !dbg !1703
  store i32 %call30, i32* %igamma, align 4, !dbg !1704
  %25 = load i32, i32* %igamma, align 4, !dbg !1705
  %cmp31 = icmp sle i32 %25, 0, !dbg !1707
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !1708

if.then32:                                        ; preds = %if.end28
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1709
  call void @png_warning(%struct.png_struct_def* %26, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.25, i64 0, i64 0)), !dbg !1711
  br label %return, !dbg !1712

if.end33:                                         ; preds = %if.end28
  %27 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1713
  %cmp34 = icmp ne %struct.png_info_def* %27, null, !dbg !1715
  br i1 %cmp34, label %land.lhs.true35, label %if.end46, !dbg !1716

land.lhs.true35:                                  ; preds = %if.end33
  %28 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1717
  %valid36 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %28, i32 0, i32 2, !dbg !1718
  %29 = load i32, i32* %valid36, align 8, !dbg !1718
  %and37 = and i32 %29, 2048, !dbg !1719
  %tobool38 = icmp ne i32 %and37, 0, !dbg !1719
  br i1 %tobool38, label %if.then39, label %if.end46, !dbg !1720

if.then39:                                        ; preds = %land.lhs.true35
  %30 = load i32, i32* %igamma, align 4, !dbg !1721
  %cmp40 = icmp slt i32 %30, 45000, !dbg !1721
  br i1 %cmp40, label %if.then42, label %lor.lhs.false, !dbg !1721

lor.lhs.false:                                    ; preds = %if.then39
  %31 = load i32, i32* %igamma, align 4, !dbg !1721
  %cmp41 = icmp sgt i32 %31, 46000, !dbg !1721
  br i1 %cmp41, label %if.then42, label %if.end45, !dbg !1724

if.then42:                                        ; preds = %lor.lhs.false, %if.then39
  call void @llvm.dbg.declare(metadata [8 x [32 x i8]]* %p, metadata !1725, metadata !DIExpression()), !dbg !1727
  %arraydecay43 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !1728
  %32 = load i32, i32* %igamma, align 4, !dbg !1729
  call void @png_warning_parameter_signed([32 x i8]* %arraydecay43, i32 1, i32 5, i32 %32), !dbg !1730
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1731
  %arraydecay44 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !1732
  call void @png_formatted_warning(%struct.png_struct_def* %33, [32 x i8]* %arraydecay44, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.26, i64 0, i64 0)), !dbg !1733
  br label %return, !dbg !1734

if.end45:                                         ; preds = %lor.lhs.false
  br label %if.end46, !dbg !1735

if.end46:                                         ; preds = %if.end45, %land.lhs.true35, %if.end33
  %34 = load i32, i32* %igamma, align 4, !dbg !1736
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1737
  %gamma = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 75, !dbg !1738
  store i32 %34, i32* %gamma, align 4, !dbg !1739
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1740
  %37 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1741
  %38 = load i32, i32* %igamma, align 4, !dbg !1742
  call void @png_set_gAMA_fixed(%struct.png_struct_def* %36, %struct.png_info_def* %37, i32 %38), !dbg !1743
  br label %return, !dbg !1744

return:                                           ; preds = %if.end46, %if.then42, %if.then32, %if.then27, %if.then22, %if.then18, %if.then4
  ret void, !dbg !1744
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @png_get_fixed_point(%struct.png_struct_def* %png_ptr, i8* %buf) #0 !dbg !1745 {
entry:
  %retval = alloca i32, align 4
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %buf.addr = alloca i8*, align 8
  %uval = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1748, metadata !DIExpression()), !dbg !1749
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !1750, metadata !DIExpression()), !dbg !1751
  call void @llvm.dbg.declare(metadata i32* %uval, metadata !1752, metadata !DIExpression()), !dbg !1753
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !1754
  %1 = load i8, i8* %0, align 1, !dbg !1754
  %conv = zext i8 %1 to i32, !dbg !1754
  %shl = shl i32 %conv, 24, !dbg !1754
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !1754
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 1, !dbg !1754
  %3 = load i8, i8* %add.ptr, align 1, !dbg !1754
  %conv1 = zext i8 %3 to i32, !dbg !1754
  %shl2 = shl i32 %conv1, 16, !dbg !1754
  %add = add i32 %shl, %shl2, !dbg !1754
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !1754
  %add.ptr3 = getelementptr inbounds i8, i8* %4, i64 2, !dbg !1754
  %5 = load i8, i8* %add.ptr3, align 1, !dbg !1754
  %conv4 = zext i8 %5 to i32, !dbg !1754
  %shl5 = shl i32 %conv4, 8, !dbg !1754
  %add6 = add i32 %add, %shl5, !dbg !1754
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !1754
  %add.ptr7 = getelementptr inbounds i8, i8* %6, i64 3, !dbg !1754
  %7 = load i8, i8* %add.ptr7, align 1, !dbg !1754
  %conv8 = zext i8 %7 to i32, !dbg !1754
  %add9 = add i32 %add6, %conv8, !dbg !1754
  store i32 %add9, i32* %uval, align 4, !dbg !1753
  %8 = load i32, i32* %uval, align 4, !dbg !1755
  %cmp = icmp ule i32 %8, 2147483647, !dbg !1757
  br i1 %cmp, label %if.then, label %if.end, !dbg !1758

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %uval, align 4, !dbg !1759
  store i32 %9, i32* %retval, align 4, !dbg !1760
  br label %return, !dbg !1760

if.end:                                           ; preds = %entry
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1761
  %cmp11 = icmp ne %struct.png_struct_def* %10, null, !dbg !1763
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !1764

if.then13:                                        ; preds = %if.end
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1765
  call void @png_warning(%struct.png_struct_def* %11, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.146, i64 0, i64 0)), !dbg !1766
  br label %if.end14, !dbg !1766

if.end14:                                         ; preds = %if.then13, %if.end
  store i32 -1, i32* %retval, align 4, !dbg !1767
  br label %return, !dbg !1767

return:                                           ; preds = %if.end14, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !1768
  ret i32 %12, !dbg !1768
}

declare dso_local void @png_set_gAMA_fixed(%struct.png_struct_def*, %struct.png_info_def*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_sBIT(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !1769 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %truelen = alloca i64, align 8
  %buf = alloca [4 x i8], align 1
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1770, metadata !DIExpression()), !dbg !1771
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !1772, metadata !DIExpression()), !dbg !1773
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !1774, metadata !DIExpression()), !dbg !1775
  call void @llvm.dbg.declare(metadata i64* %truelen, metadata !1776, metadata !DIExpression()), !dbg !1777
  call void @llvm.dbg.declare(metadata [4 x i8]* %buf, metadata !1778, metadata !DIExpression()), !dbg !1779
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 3, !dbg !1780
  store i8 0, i8* %arrayidx, align 1, !dbg !1781
  %arrayidx1 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 2, !dbg !1782
  store i8 0, i8* %arrayidx1, align 1, !dbg !1783
  %arrayidx2 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 1, !dbg !1784
  store i8 0, i8* %arrayidx2, align 1, !dbg !1785
  %arrayidx3 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0, !dbg !1786
  store i8 0, i8* %arrayidx3, align 1, !dbg !1787
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1788
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !1790
  %1 = load i32, i32* %mode, align 4, !dbg !1790
  %and = and i32 %1, 1, !dbg !1791
  %tobool = icmp ne i32 %and, 0, !dbg !1791
  br i1 %tobool, label %if.else, label %if.then, !dbg !1792

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1793
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !1794
  unreachable, !dbg !1794

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1795
  %mode4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !1797
  %4 = load i32, i32* %mode4, align 4, !dbg !1797
  %and5 = and i32 %4, 4, !dbg !1798
  %tobool6 = icmp ne i32 %and5, 0, !dbg !1798
  br i1 %tobool6, label %if.then7, label %if.else8, !dbg !1799

if.then7:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1800
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i64 0, i64 0)), !dbg !1802
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1803
  %7 = load i32, i32* %length.addr, align 4, !dbg !1804
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !1805
  br label %return, !dbg !1806

if.else8:                                         ; preds = %if.else
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1807
  %mode9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 13, !dbg !1809
  %9 = load i32, i32* %mode9, align 4, !dbg !1809
  %and10 = and i32 %9, 2, !dbg !1810
  %tobool11 = icmp ne i32 %and10, 0, !dbg !1810
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !1811

if.then12:                                        ; preds = %if.else8
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1812
  call void @png_warning(%struct.png_struct_def* %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i64 0, i64 0)), !dbg !1814
  br label %if.end, !dbg !1815

if.end:                                           ; preds = %if.then12, %if.else8
  br label %if.end13

if.end13:                                         ; preds = %if.end
  br label %if.end14

if.end14:                                         ; preds = %if.end13
  %11 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1816
  %cmp = icmp ne %struct.png_info_def* %11, null, !dbg !1818
  br i1 %cmp, label %land.lhs.true, label %if.end19, !dbg !1819

land.lhs.true:                                    ; preds = %if.end14
  %12 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1820
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 2, !dbg !1821
  %13 = load i32, i32* %valid, align 8, !dbg !1821
  %and15 = and i32 %13, 2, !dbg !1822
  %tobool16 = icmp ne i32 %and15, 0, !dbg !1822
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !1823

if.then17:                                        ; preds = %land.lhs.true
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1824
  call void @png_warning(%struct.png_struct_def* %14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0)), !dbg !1826
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1827
  %16 = load i32, i32* %length.addr, align 4, !dbg !1828
  %call18 = call i32 @png_crc_finish(%struct.png_struct_def* %15, i32 %16), !dbg !1829
  br label %return, !dbg !1830

if.end19:                                         ; preds = %land.lhs.true, %if.end14
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1831
  %color_type = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 56, !dbg !1833
  %18 = load i8, i8* %color_type, align 1, !dbg !1833
  %conv = zext i8 %18 to i32, !dbg !1831
  %cmp20 = icmp eq i32 %conv, 3, !dbg !1834
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !1835

if.then22:                                        ; preds = %if.end19
  store i64 3, i64* %truelen, align 8, !dbg !1836
  br label %if.end25, !dbg !1837

if.else23:                                        ; preds = %if.end19
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1838
  %channels = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 60, !dbg !1839
  %20 = load i8, i8* %channels, align 1, !dbg !1839
  %conv24 = zext i8 %20 to i64, !dbg !1840
  store i64 %conv24, i64* %truelen, align 8, !dbg !1841
  br label %if.end25

if.end25:                                         ; preds = %if.else23, %if.then22
  %21 = load i32, i32* %length.addr, align 4, !dbg !1842
  %conv26 = zext i32 %21 to i64, !dbg !1842
  %22 = load i64, i64* %truelen, align 8, !dbg !1844
  %cmp27 = icmp ne i64 %conv26, %22, !dbg !1845
  br i1 %cmp27, label %if.then31, label %lor.lhs.false, !dbg !1846

lor.lhs.false:                                    ; preds = %if.end25
  %23 = load i32, i32* %length.addr, align 4, !dbg !1847
  %cmp29 = icmp ugt i32 %23, 4, !dbg !1848
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !1849

if.then31:                                        ; preds = %lor.lhs.false, %if.end25
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1850
  call void @png_warning(%struct.png_struct_def* %24, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i64 0, i64 0)), !dbg !1852
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1853
  %26 = load i32, i32* %length.addr, align 4, !dbg !1854
  %call32 = call i32 @png_crc_finish(%struct.png_struct_def* %25, i32 %26), !dbg !1855
  br label %return, !dbg !1856

if.end33:                                         ; preds = %lor.lhs.false
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1857
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0, !dbg !1858
  %28 = load i64, i64* %truelen, align 8, !dbg !1859
  call void @png_crc_read(%struct.png_struct_def* %27, i8* %arraydecay, i64 %28), !dbg !1860
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1861
  %call34 = call i32 @png_crc_finish(%struct.png_struct_def* %29, i32 0), !dbg !1863
  %tobool35 = icmp ne i32 %call34, 0, !dbg !1863
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !1864

if.then36:                                        ; preds = %if.end33
  br label %return, !dbg !1865

if.end37:                                         ; preds = %if.end33
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1866
  %color_type38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 56, !dbg !1868
  %31 = load i8, i8* %color_type38, align 1, !dbg !1868
  %conv39 = zext i8 %31 to i32, !dbg !1866
  %and40 = and i32 %conv39, 2, !dbg !1869
  %tobool41 = icmp ne i32 %and40, 0, !dbg !1869
  br i1 %tobool41, label %if.then42, label %if.else50, !dbg !1870

if.then42:                                        ; preds = %if.end37
  %arrayidx43 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0, !dbg !1871
  %32 = load i8, i8* %arrayidx43, align 1, !dbg !1871
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1873
  %sig_bit = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 83, !dbg !1874
  %red = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %sig_bit, i32 0, i32 0, !dbg !1875
  store i8 %32, i8* %red, align 8, !dbg !1876
  %arrayidx44 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 1, !dbg !1877
  %34 = load i8, i8* %arrayidx44, align 1, !dbg !1877
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1878
  %sig_bit45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 83, !dbg !1879
  %green = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %sig_bit45, i32 0, i32 1, !dbg !1880
  store i8 %34, i8* %green, align 1, !dbg !1881
  %arrayidx46 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 2, !dbg !1882
  %36 = load i8, i8* %arrayidx46, align 1, !dbg !1882
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1883
  %sig_bit47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 83, !dbg !1884
  %blue = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %sig_bit47, i32 0, i32 2, !dbg !1885
  store i8 %36, i8* %blue, align 2, !dbg !1886
  %arrayidx48 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 3, !dbg !1887
  %38 = load i8, i8* %arrayidx48, align 1, !dbg !1887
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1888
  %sig_bit49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 83, !dbg !1889
  %alpha = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %sig_bit49, i32 0, i32 4, !dbg !1890
  store i8 %38, i8* %alpha, align 4, !dbg !1891
  br label %if.end65, !dbg !1892

if.else50:                                        ; preds = %if.end37
  %arrayidx51 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0, !dbg !1893
  %40 = load i8, i8* %arrayidx51, align 1, !dbg !1893
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1895
  %sig_bit52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 83, !dbg !1896
  %gray = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %sig_bit52, i32 0, i32 3, !dbg !1897
  store i8 %40, i8* %gray, align 1, !dbg !1898
  %arrayidx53 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0, !dbg !1899
  %42 = load i8, i8* %arrayidx53, align 1, !dbg !1899
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1900
  %sig_bit54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 83, !dbg !1901
  %red55 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %sig_bit54, i32 0, i32 0, !dbg !1902
  store i8 %42, i8* %red55, align 8, !dbg !1903
  %arrayidx56 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0, !dbg !1904
  %44 = load i8, i8* %arrayidx56, align 1, !dbg !1904
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1905
  %sig_bit57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 83, !dbg !1906
  %green58 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %sig_bit57, i32 0, i32 1, !dbg !1907
  store i8 %44, i8* %green58, align 1, !dbg !1908
  %arrayidx59 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 0, !dbg !1909
  %46 = load i8, i8* %arrayidx59, align 1, !dbg !1909
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1910
  %sig_bit60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 83, !dbg !1911
  %blue61 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %sig_bit60, i32 0, i32 2, !dbg !1912
  store i8 %46, i8* %blue61, align 2, !dbg !1913
  %arrayidx62 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i64 0, i64 1, !dbg !1914
  %48 = load i8, i8* %arrayidx62, align 1, !dbg !1914
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1915
  %sig_bit63 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 83, !dbg !1916
  %alpha64 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %sig_bit63, i32 0, i32 4, !dbg !1917
  store i8 %48, i8* %alpha64, align 4, !dbg !1918
  br label %if.end65

if.end65:                                         ; preds = %if.else50, %if.then42
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1919
  %51 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1920
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1921
  %sig_bit66 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 83, !dbg !1922
  call void @png_set_sBIT(%struct.png_struct_def* %50, %struct.png_info_def* %51, %struct.png_color_8_struct* %sig_bit66), !dbg !1923
  br label %return, !dbg !1924

return:                                           ; preds = %if.end65, %if.then36, %if.then31, %if.then17, %if.then7
  ret void, !dbg !1924
}

declare dso_local void @png_set_sBIT(%struct.png_struct_def*, %struct.png_info_def*, %struct.png_color_8_struct*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_cHRM(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !1925 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %buf = alloca [32 x i8], align 16
  %x_white = alloca i32, align 4
  %y_white = alloca i32, align 4
  %x_red = alloca i32, align 4
  %y_red = alloca i32, align 4
  %x_green = alloca i32, align 4
  %y_green = alloca i32, align 4
  %x_blue = alloca i32, align 4
  %y_blue = alloca i32, align 4
  %p = alloca [8 x [32 x i8]], align 16
  %XYZ = alloca %struct.png_XYZ, align 4
  %xy = alloca %struct.png_xy, align 8
  %r = alloca i32, align 4
  %g = alloca i32, align 4
  %b = alloca i32, align 4
  %add145 = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !1926, metadata !DIExpression()), !dbg !1927
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !1928, metadata !DIExpression()), !dbg !1929
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !1930, metadata !DIExpression()), !dbg !1931
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !1932, metadata !DIExpression()), !dbg !1935
  call void @llvm.dbg.declare(metadata i32* %x_white, metadata !1936, metadata !DIExpression()), !dbg !1937
  call void @llvm.dbg.declare(metadata i32* %y_white, metadata !1938, metadata !DIExpression()), !dbg !1939
  call void @llvm.dbg.declare(metadata i32* %x_red, metadata !1940, metadata !DIExpression()), !dbg !1941
  call void @llvm.dbg.declare(metadata i32* %y_red, metadata !1942, metadata !DIExpression()), !dbg !1943
  call void @llvm.dbg.declare(metadata i32* %x_green, metadata !1944, metadata !DIExpression()), !dbg !1945
  call void @llvm.dbg.declare(metadata i32* %y_green, metadata !1946, metadata !DIExpression()), !dbg !1947
  call void @llvm.dbg.declare(metadata i32* %x_blue, metadata !1948, metadata !DIExpression()), !dbg !1949
  call void @llvm.dbg.declare(metadata i32* %y_blue, metadata !1950, metadata !DIExpression()), !dbg !1951
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1952
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !1954
  %1 = load i32, i32* %mode, align 4, !dbg !1954
  %and = and i32 %1, 1, !dbg !1955
  %tobool = icmp ne i32 %and, 0, !dbg !1955
  br i1 %tobool, label %if.else, label %if.then, !dbg !1956

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1957
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !1958
  unreachable, !dbg !1958

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1959
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !1961
  %4 = load i32, i32* %mode1, align 4, !dbg !1961
  %and2 = and i32 %4, 4, !dbg !1962
  %tobool3 = icmp ne i32 %and2, 0, !dbg !1962
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !1963

if.then4:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1964
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.33, i64 0, i64 0)), !dbg !1966
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1967
  %7 = load i32, i32* %length.addr, align 4, !dbg !1968
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !1969
  br label %return, !dbg !1970

if.else5:                                         ; preds = %if.else
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1971
  %mode6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 13, !dbg !1973
  %9 = load i32, i32* %mode6, align 4, !dbg !1973
  %and7 = and i32 %9, 2, !dbg !1974
  %tobool8 = icmp ne i32 %and7, 0, !dbg !1974
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !1975

if.then9:                                         ; preds = %if.else5
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1976
  call void @png_warning(%struct.png_struct_def* %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i64 0, i64 0)), !dbg !1977
  br label %if.end, !dbg !1977

if.end:                                           ; preds = %if.then9, %if.else5
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  %11 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1978
  %cmp = icmp ne %struct.png_info_def* %11, null, !dbg !1980
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !1981

land.lhs.true:                                    ; preds = %if.end11
  %12 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1982
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 2, !dbg !1983
  %13 = load i32, i32* %valid, align 8, !dbg !1983
  %and12 = and i32 %13, 4, !dbg !1984
  %tobool13 = icmp ne i32 %and12, 0, !dbg !1984
  br i1 %tobool13, label %land.lhs.true14, label %if.end20, !dbg !1985

land.lhs.true14:                                  ; preds = %land.lhs.true
  %14 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !1986
  %valid15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 2, !dbg !1987
  %15 = load i32, i32* %valid15, align 8, !dbg !1987
  %and16 = and i32 %15, 2048, !dbg !1988
  %tobool17 = icmp ne i32 %and16, 0, !dbg !1988
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !1989

if.then18:                                        ; preds = %land.lhs.true14
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1990
  call void @png_warning(%struct.png_struct_def* %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0)), !dbg !1992
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !1993
  %18 = load i32, i32* %length.addr, align 4, !dbg !1994
  %call19 = call i32 @png_crc_finish(%struct.png_struct_def* %17, i32 %18), !dbg !1995
  br label %return, !dbg !1996

if.end20:                                         ; preds = %land.lhs.true14, %land.lhs.true, %if.end11
  %19 = load i32, i32* %length.addr, align 4, !dbg !1997
  %cmp21 = icmp ne i32 %19, 32, !dbg !1999
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !2000

if.then22:                                        ; preds = %if.end20
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2001
  call void @png_warning(%struct.png_struct_def* %20, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.36, i64 0, i64 0)), !dbg !2003
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2004
  %22 = load i32, i32* %length.addr, align 4, !dbg !2005
  %call23 = call i32 @png_crc_finish(%struct.png_struct_def* %21, i32 %22), !dbg !2006
  br label %return, !dbg !2007

if.end24:                                         ; preds = %if.end20
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2008
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !2009
  call void @png_crc_read(%struct.png_struct_def* %23, i8* %arraydecay, i64 32), !dbg !2010
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2011
  %call25 = call i32 @png_crc_finish(%struct.png_struct_def* %24, i32 0), !dbg !2013
  %tobool26 = icmp ne i32 %call25, 0, !dbg !2013
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !2014

if.then27:                                        ; preds = %if.end24
  br label %return, !dbg !2015

if.end28:                                         ; preds = %if.end24
  %arraydecay29 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !2016
  %call30 = call i32 @png_get_fixed_point(%struct.png_struct_def* null, i8* %arraydecay29), !dbg !2017
  store i32 %call30, i32* %x_white, align 4, !dbg !2018
  %arraydecay31 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !2019
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay31, i64 4, !dbg !2020
  %call32 = call i32 @png_get_fixed_point(%struct.png_struct_def* null, i8* %add.ptr), !dbg !2021
  store i32 %call32, i32* %y_white, align 4, !dbg !2022
  %arraydecay33 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !2023
  %add.ptr34 = getelementptr inbounds i8, i8* %arraydecay33, i64 8, !dbg !2024
  %call35 = call i32 @png_get_fixed_point(%struct.png_struct_def* null, i8* %add.ptr34), !dbg !2025
  store i32 %call35, i32* %x_red, align 4, !dbg !2026
  %arraydecay36 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !2027
  %add.ptr37 = getelementptr inbounds i8, i8* %arraydecay36, i64 12, !dbg !2028
  %call38 = call i32 @png_get_fixed_point(%struct.png_struct_def* null, i8* %add.ptr37), !dbg !2029
  store i32 %call38, i32* %y_red, align 4, !dbg !2030
  %arraydecay39 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !2031
  %add.ptr40 = getelementptr inbounds i8, i8* %arraydecay39, i64 16, !dbg !2032
  %call41 = call i32 @png_get_fixed_point(%struct.png_struct_def* null, i8* %add.ptr40), !dbg !2033
  store i32 %call41, i32* %x_green, align 4, !dbg !2034
  %arraydecay42 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !2035
  %add.ptr43 = getelementptr inbounds i8, i8* %arraydecay42, i64 20, !dbg !2036
  %call44 = call i32 @png_get_fixed_point(%struct.png_struct_def* null, i8* %add.ptr43), !dbg !2037
  store i32 %call44, i32* %y_green, align 4, !dbg !2038
  %arraydecay45 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !2039
  %add.ptr46 = getelementptr inbounds i8, i8* %arraydecay45, i64 24, !dbg !2040
  %call47 = call i32 @png_get_fixed_point(%struct.png_struct_def* null, i8* %add.ptr46), !dbg !2041
  store i32 %call47, i32* %x_blue, align 4, !dbg !2042
  %arraydecay48 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !2043
  %add.ptr49 = getelementptr inbounds i8, i8* %arraydecay48, i64 28, !dbg !2044
  %call50 = call i32 @png_get_fixed_point(%struct.png_struct_def* null, i8* %add.ptr49), !dbg !2045
  store i32 %call50, i32* %y_blue, align 4, !dbg !2046
  %25 = load i32, i32* %x_white, align 4, !dbg !2047
  %cmp51 = icmp eq i32 %25, -1, !dbg !2049
  br i1 %cmp51, label %if.then65, label %lor.lhs.false, !dbg !2050

lor.lhs.false:                                    ; preds = %if.end28
  %26 = load i32, i32* %y_white, align 4, !dbg !2051
  %cmp52 = icmp eq i32 %26, -1, !dbg !2052
  br i1 %cmp52, label %if.then65, label %lor.lhs.false53, !dbg !2053

lor.lhs.false53:                                  ; preds = %lor.lhs.false
  %27 = load i32, i32* %x_red, align 4, !dbg !2054
  %cmp54 = icmp eq i32 %27, -1, !dbg !2055
  br i1 %cmp54, label %if.then65, label %lor.lhs.false55, !dbg !2056

lor.lhs.false55:                                  ; preds = %lor.lhs.false53
  %28 = load i32, i32* %y_red, align 4, !dbg !2057
  %cmp56 = icmp eq i32 %28, -1, !dbg !2058
  br i1 %cmp56, label %if.then65, label %lor.lhs.false57, !dbg !2059

lor.lhs.false57:                                  ; preds = %lor.lhs.false55
  %29 = load i32, i32* %x_green, align 4, !dbg !2060
  %cmp58 = icmp eq i32 %29, -1, !dbg !2061
  br i1 %cmp58, label %if.then65, label %lor.lhs.false59, !dbg !2062

lor.lhs.false59:                                  ; preds = %lor.lhs.false57
  %30 = load i32, i32* %y_green, align 4, !dbg !2063
  %cmp60 = icmp eq i32 %30, -1, !dbg !2064
  br i1 %cmp60, label %if.then65, label %lor.lhs.false61, !dbg !2065

lor.lhs.false61:                                  ; preds = %lor.lhs.false59
  %31 = load i32, i32* %x_blue, align 4, !dbg !2066
  %cmp62 = icmp eq i32 %31, -1, !dbg !2067
  br i1 %cmp62, label %if.then65, label %lor.lhs.false63, !dbg !2068

lor.lhs.false63:                                  ; preds = %lor.lhs.false61
  %32 = load i32, i32* %y_blue, align 4, !dbg !2069
  %cmp64 = icmp eq i32 %32, -1, !dbg !2070
  br i1 %cmp64, label %if.then65, label %if.end66, !dbg !2071

if.then65:                                        ; preds = %lor.lhs.false63, %lor.lhs.false61, %lor.lhs.false59, %lor.lhs.false57, %lor.lhs.false55, %lor.lhs.false53, %lor.lhs.false, %if.end28
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2072
  call void @png_warning(%struct.png_struct_def* %33, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i64 0, i64 0)), !dbg !2074
  br label %return, !dbg !2075

if.end66:                                         ; preds = %lor.lhs.false63
  %34 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2076
  %cmp67 = icmp ne %struct.png_info_def* %34, null, !dbg !2078
  br i1 %cmp67, label %land.lhs.true68, label %if.end115, !dbg !2079

land.lhs.true68:                                  ; preds = %if.end66
  %35 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2080
  %valid69 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %35, i32 0, i32 2, !dbg !2081
  %36 = load i32, i32* %valid69, align 8, !dbg !2081
  %and70 = and i32 %36, 2048, !dbg !2082
  %tobool71 = icmp ne i32 %and70, 0, !dbg !2082
  br i1 %tobool71, label %if.then72, label %if.end115, !dbg !2083

if.then72:                                        ; preds = %land.lhs.true68
  %37 = load i32, i32* %x_white, align 4, !dbg !2084
  %cmp73 = icmp slt i32 %37, 30270, !dbg !2084
  br i1 %cmp73, label %if.then104, label %lor.lhs.false74, !dbg !2084

lor.lhs.false74:                                  ; preds = %if.then72
  %38 = load i32, i32* %x_white, align 4, !dbg !2084
  %cmp75 = icmp sgt i32 %38, 32270, !dbg !2084
  br i1 %cmp75, label %if.then104, label %lor.lhs.false76, !dbg !2087

lor.lhs.false76:                                  ; preds = %lor.lhs.false74
  %39 = load i32, i32* %y_white, align 4, !dbg !2088
  %cmp77 = icmp slt i32 %39, 31900, !dbg !2088
  br i1 %cmp77, label %if.then104, label %lor.lhs.false78, !dbg !2088

lor.lhs.false78:                                  ; preds = %lor.lhs.false76
  %40 = load i32, i32* %y_white, align 4, !dbg !2088
  %cmp79 = icmp sgt i32 %40, 33900, !dbg !2088
  br i1 %cmp79, label %if.then104, label %lor.lhs.false80, !dbg !2089

lor.lhs.false80:                                  ; preds = %lor.lhs.false78
  %41 = load i32, i32* %x_red, align 4, !dbg !2090
  %cmp81 = icmp slt i32 %41, 63000, !dbg !2090
  br i1 %cmp81, label %if.then104, label %lor.lhs.false82, !dbg !2090

lor.lhs.false82:                                  ; preds = %lor.lhs.false80
  %42 = load i32, i32* %x_red, align 4, !dbg !2090
  %cmp83 = icmp sgt i32 %42, 65000, !dbg !2090
  br i1 %cmp83, label %if.then104, label %lor.lhs.false84, !dbg !2091

lor.lhs.false84:                                  ; preds = %lor.lhs.false82
  %43 = load i32, i32* %y_red, align 4, !dbg !2092
  %cmp85 = icmp slt i32 %43, 32000, !dbg !2092
  br i1 %cmp85, label %if.then104, label %lor.lhs.false86, !dbg !2092

lor.lhs.false86:                                  ; preds = %lor.lhs.false84
  %44 = load i32, i32* %y_red, align 4, !dbg !2092
  %cmp87 = icmp sgt i32 %44, 34000, !dbg !2092
  br i1 %cmp87, label %if.then104, label %lor.lhs.false88, !dbg !2093

lor.lhs.false88:                                  ; preds = %lor.lhs.false86
  %45 = load i32, i32* %x_green, align 4, !dbg !2094
  %cmp89 = icmp slt i32 %45, 29000, !dbg !2094
  br i1 %cmp89, label %if.then104, label %lor.lhs.false90, !dbg !2094

lor.lhs.false90:                                  ; preds = %lor.lhs.false88
  %46 = load i32, i32* %x_green, align 4, !dbg !2094
  %cmp91 = icmp sgt i32 %46, 31000, !dbg !2094
  br i1 %cmp91, label %if.then104, label %lor.lhs.false92, !dbg !2095

lor.lhs.false92:                                  ; preds = %lor.lhs.false90
  %47 = load i32, i32* %y_green, align 4, !dbg !2096
  %cmp93 = icmp slt i32 %47, 59000, !dbg !2096
  br i1 %cmp93, label %if.then104, label %lor.lhs.false94, !dbg !2096

lor.lhs.false94:                                  ; preds = %lor.lhs.false92
  %48 = load i32, i32* %y_green, align 4, !dbg !2096
  %cmp95 = icmp sgt i32 %48, 61000, !dbg !2096
  br i1 %cmp95, label %if.then104, label %lor.lhs.false96, !dbg !2097

lor.lhs.false96:                                  ; preds = %lor.lhs.false94
  %49 = load i32, i32* %x_blue, align 4, !dbg !2098
  %cmp97 = icmp slt i32 %49, 14000, !dbg !2098
  br i1 %cmp97, label %if.then104, label %lor.lhs.false98, !dbg !2098

lor.lhs.false98:                                  ; preds = %lor.lhs.false96
  %50 = load i32, i32* %x_blue, align 4, !dbg !2098
  %cmp99 = icmp sgt i32 %50, 16000, !dbg !2098
  br i1 %cmp99, label %if.then104, label %lor.lhs.false100, !dbg !2099

lor.lhs.false100:                                 ; preds = %lor.lhs.false98
  %51 = load i32, i32* %y_blue, align 4, !dbg !2100
  %cmp101 = icmp slt i32 %51, 5000, !dbg !2100
  br i1 %cmp101, label %if.then104, label %lor.lhs.false102, !dbg !2100

lor.lhs.false102:                                 ; preds = %lor.lhs.false100
  %52 = load i32, i32* %y_blue, align 4, !dbg !2100
  %cmp103 = icmp sgt i32 %52, 7000, !dbg !2100
  br i1 %cmp103, label %if.then104, label %if.end114, !dbg !2101

if.then104:                                       ; preds = %lor.lhs.false102, %lor.lhs.false100, %lor.lhs.false98, %lor.lhs.false96, %lor.lhs.false94, %lor.lhs.false92, %lor.lhs.false90, %lor.lhs.false88, %lor.lhs.false86, %lor.lhs.false84, %lor.lhs.false82, %lor.lhs.false80, %lor.lhs.false78, %lor.lhs.false76, %lor.lhs.false74, %if.then72
  call void @llvm.dbg.declare(metadata [8 x [32 x i8]]* %p, metadata !2102, metadata !DIExpression()), !dbg !2104
  %arraydecay105 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2105
  %53 = load i32, i32* %x_white, align 4, !dbg !2106
  call void @png_warning_parameter_signed([32 x i8]* %arraydecay105, i32 1, i32 5, i32 %53), !dbg !2107
  %arraydecay106 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2108
  %54 = load i32, i32* %y_white, align 4, !dbg !2109
  call void @png_warning_parameter_signed([32 x i8]* %arraydecay106, i32 2, i32 5, i32 %54), !dbg !2110
  %arraydecay107 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2111
  %55 = load i32, i32* %x_red, align 4, !dbg !2112
  call void @png_warning_parameter_signed([32 x i8]* %arraydecay107, i32 3, i32 5, i32 %55), !dbg !2113
  %arraydecay108 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2114
  %56 = load i32, i32* %y_red, align 4, !dbg !2115
  call void @png_warning_parameter_signed([32 x i8]* %arraydecay108, i32 4, i32 5, i32 %56), !dbg !2116
  %arraydecay109 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2117
  %57 = load i32, i32* %x_green, align 4, !dbg !2118
  call void @png_warning_parameter_signed([32 x i8]* %arraydecay109, i32 5, i32 5, i32 %57), !dbg !2119
  %arraydecay110 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2120
  %58 = load i32, i32* %y_green, align 4, !dbg !2121
  call void @png_warning_parameter_signed([32 x i8]* %arraydecay110, i32 6, i32 5, i32 %58), !dbg !2122
  %arraydecay111 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2123
  %59 = load i32, i32* %x_blue, align 4, !dbg !2124
  call void @png_warning_parameter_signed([32 x i8]* %arraydecay111, i32 7, i32 5, i32 %59), !dbg !2125
  %arraydecay112 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2126
  %60 = load i32, i32* %y_blue, align 4, !dbg !2127
  call void @png_warning_parameter_signed([32 x i8]* %arraydecay112, i32 8, i32 5, i32 %60), !dbg !2128
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2129
  %arraydecay113 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2130
  call void @png_formatted_warning(%struct.png_struct_def* %61, [32 x i8]* %arraydecay113, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.38, i64 0, i64 0)), !dbg !2131
  br label %if.end114, !dbg !2132

if.end114:                                        ; preds = %if.then104, %lor.lhs.false102
  br label %return, !dbg !2133

if.end115:                                        ; preds = %land.lhs.true68, %if.end66
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2134
  %rgb_to_gray_coefficients_set = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %62, i32 0, i32 122, !dbg !2136
  %63 = load i8, i8* %rgb_to_gray_coefficients_set, align 2, !dbg !2136
  %tobool116 = icmp ne i8 %63, 0, !dbg !2134
  br i1 %tobool116, label %if.end184, label %if.then117, !dbg !2137

if.then117:                                       ; preds = %if.end115
  call void @llvm.dbg.declare(metadata %struct.png_XYZ* %XYZ, metadata !2138, metadata !DIExpression()), !dbg !2152
  call void @llvm.dbg.declare(metadata %struct.png_xy* %xy, metadata !2153, metadata !DIExpression()), !dbg !2165
  %64 = load i32, i32* %x_red, align 4, !dbg !2166
  %redx = getelementptr inbounds %struct.png_xy, %struct.png_xy* %xy, i32 0, i32 0, !dbg !2167
  store i32 %64, i32* %redx, align 4, !dbg !2168
  %65 = load i32, i32* %y_red, align 4, !dbg !2169
  %redy = getelementptr inbounds %struct.png_xy, %struct.png_xy* %xy, i32 0, i32 1, !dbg !2170
  store i32 %65, i32* %redy, align 4, !dbg !2171
  %66 = load i32, i32* %x_green, align 4, !dbg !2172
  %greenx = getelementptr inbounds %struct.png_xy, %struct.png_xy* %xy, i32 0, i32 2, !dbg !2173
  store i32 %66, i32* %greenx, align 4, !dbg !2174
  %67 = load i32, i32* %y_green, align 4, !dbg !2175
  %greeny = getelementptr inbounds %struct.png_xy, %struct.png_xy* %xy, i32 0, i32 3, !dbg !2176
  store i32 %67, i32* %greeny, align 4, !dbg !2177
  %68 = load i32, i32* %x_blue, align 4, !dbg !2178
  %bluex = getelementptr inbounds %struct.png_xy, %struct.png_xy* %xy, i32 0, i32 4, !dbg !2179
  store i32 %68, i32* %bluex, align 4, !dbg !2180
  %69 = load i32, i32* %y_blue, align 4, !dbg !2181
  %bluey = getelementptr inbounds %struct.png_xy, %struct.png_xy* %xy, i32 0, i32 5, !dbg !2182
  store i32 %69, i32* %bluey, align 4, !dbg !2183
  %70 = load i32, i32* %x_white, align 4, !dbg !2184
  %whitex = getelementptr inbounds %struct.png_xy, %struct.png_xy* %xy, i32 0, i32 6, !dbg !2185
  store i32 %70, i32* %whitex, align 4, !dbg !2186
  %71 = load i32, i32* %y_white, align 4, !dbg !2187
  %whitey = getelementptr inbounds %struct.png_xy, %struct.png_xy* %xy, i32 0, i32 7, !dbg !2188
  store i32 %71, i32* %whitey, align 4, !dbg !2189
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2190
  %call118 = call i32 @png_XYZ_from_xy_checked(%struct.png_struct_def* %72, %struct.png_XYZ* %XYZ, %struct.png_xy* byval(%struct.png_xy) align 8 %xy), !dbg !2192
  %tobool119 = icmp ne i32 %call118, 0, !dbg !2192
  br i1 %tobool119, label %if.then120, label %if.end183, !dbg !2193

if.then120:                                       ; preds = %if.then117
  call void @llvm.dbg.declare(metadata i32* %r, metadata !2194, metadata !DIExpression()), !dbg !2197
  call void @llvm.dbg.declare(metadata i32* %g, metadata !2198, metadata !DIExpression()), !dbg !2199
  call void @llvm.dbg.declare(metadata i32* %b, metadata !2200, metadata !DIExpression()), !dbg !2201
  %redY = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %XYZ, i32 0, i32 1, !dbg !2202
  %73 = load i32, i32* %redY, align 4, !dbg !2202
  %call121 = call i32 @png_muldiv(i32* %r, i32 %73, i32 32768, i32 100000), !dbg !2204
  %tobool122 = icmp ne i32 %call121, 0, !dbg !2204
  br i1 %tobool122, label %land.lhs.true123, label %if.else181, !dbg !2205

land.lhs.true123:                                 ; preds = %if.then120
  %74 = load i32, i32* %r, align 4, !dbg !2206
  %cmp124 = icmp sge i32 %74, 0, !dbg !2207
  br i1 %cmp124, label %land.lhs.true125, label %if.else181, !dbg !2208

land.lhs.true125:                                 ; preds = %land.lhs.true123
  %75 = load i32, i32* %r, align 4, !dbg !2209
  %cmp126 = icmp sle i32 %75, 32768, !dbg !2210
  br i1 %cmp126, label %land.lhs.true127, label %if.else181, !dbg !2211

land.lhs.true127:                                 ; preds = %land.lhs.true125
  %greenY = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %XYZ, i32 0, i32 4, !dbg !2212
  %76 = load i32, i32* %greenY, align 4, !dbg !2212
  %call128 = call i32 @png_muldiv(i32* %g, i32 %76, i32 32768, i32 100000), !dbg !2213
  %tobool129 = icmp ne i32 %call128, 0, !dbg !2213
  br i1 %tobool129, label %land.lhs.true130, label %if.else181, !dbg !2214

land.lhs.true130:                                 ; preds = %land.lhs.true127
  %77 = load i32, i32* %g, align 4, !dbg !2215
  %cmp131 = icmp sge i32 %77, 0, !dbg !2216
  br i1 %cmp131, label %land.lhs.true132, label %if.else181, !dbg !2217

land.lhs.true132:                                 ; preds = %land.lhs.true130
  %78 = load i32, i32* %g, align 4, !dbg !2218
  %cmp133 = icmp sle i32 %78, 32768, !dbg !2219
  br i1 %cmp133, label %land.lhs.true134, label %if.else181, !dbg !2220

land.lhs.true134:                                 ; preds = %land.lhs.true132
  %blueY = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %XYZ, i32 0, i32 7, !dbg !2221
  %79 = load i32, i32* %blueY, align 4, !dbg !2221
  %call135 = call i32 @png_muldiv(i32* %b, i32 %79, i32 32768, i32 100000), !dbg !2222
  %tobool136 = icmp ne i32 %call135, 0, !dbg !2222
  br i1 %tobool136, label %land.lhs.true137, label %if.else181, !dbg !2223

land.lhs.true137:                                 ; preds = %land.lhs.true134
  %80 = load i32, i32* %b, align 4, !dbg !2224
  %cmp138 = icmp sge i32 %80, 0, !dbg !2225
  br i1 %cmp138, label %land.lhs.true139, label %if.else181, !dbg !2226

land.lhs.true139:                                 ; preds = %land.lhs.true137
  %81 = load i32, i32* %b, align 4, !dbg !2227
  %cmp140 = icmp sle i32 %81, 32768, !dbg !2228
  br i1 %cmp140, label %land.lhs.true141, label %if.else181, !dbg !2229

land.lhs.true141:                                 ; preds = %land.lhs.true139
  %82 = load i32, i32* %r, align 4, !dbg !2230
  %83 = load i32, i32* %g, align 4, !dbg !2231
  %add = add nsw i32 %82, %83, !dbg !2232
  %84 = load i32, i32* %b, align 4, !dbg !2233
  %add142 = add nsw i32 %add, %84, !dbg !2234
  %cmp143 = icmp sle i32 %add142, 32769, !dbg !2235
  br i1 %cmp143, label %if.then144, label %if.else181, !dbg !2236

if.then144:                                       ; preds = %land.lhs.true141
  call void @llvm.dbg.declare(metadata i32* %add145, metadata !2237, metadata !DIExpression()), !dbg !2239
  store i32 0, i32* %add145, align 4, !dbg !2239
  %85 = load i32, i32* %r, align 4, !dbg !2240
  %86 = load i32, i32* %g, align 4, !dbg !2242
  %add146 = add nsw i32 %85, %86, !dbg !2243
  %87 = load i32, i32* %b, align 4, !dbg !2244
  %add147 = add nsw i32 %add146, %87, !dbg !2245
  %cmp148 = icmp sgt i32 %add147, 32768, !dbg !2246
  br i1 %cmp148, label %if.then149, label %if.else150, !dbg !2247

if.then149:                                       ; preds = %if.then144
  store i32 -1, i32* %add145, align 4, !dbg !2248
  br label %if.end156, !dbg !2249

if.else150:                                       ; preds = %if.then144
  %88 = load i32, i32* %r, align 4, !dbg !2250
  %89 = load i32, i32* %g, align 4, !dbg !2252
  %add151 = add nsw i32 %88, %89, !dbg !2253
  %90 = load i32, i32* %b, align 4, !dbg !2254
  %add152 = add nsw i32 %add151, %90, !dbg !2255
  %cmp153 = icmp slt i32 %add152, 32768, !dbg !2256
  br i1 %cmp153, label %if.then154, label %if.end155, !dbg !2257

if.then154:                                       ; preds = %if.else150
  store i32 1, i32* %add145, align 4, !dbg !2258
  br label %if.end155, !dbg !2259

if.end155:                                        ; preds = %if.then154, %if.else150
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.then149
  %91 = load i32, i32* %add145, align 4, !dbg !2260
  %cmp157 = icmp ne i32 %91, 0, !dbg !2262
  br i1 %cmp157, label %if.then158, label %if.end174, !dbg !2263

if.then158:                                       ; preds = %if.end156
  %92 = load i32, i32* %g, align 4, !dbg !2264
  %93 = load i32, i32* %r, align 4, !dbg !2267
  %cmp159 = icmp sge i32 %92, %93, !dbg !2268
  br i1 %cmp159, label %land.lhs.true160, label %if.else164, !dbg !2269

land.lhs.true160:                                 ; preds = %if.then158
  %94 = load i32, i32* %g, align 4, !dbg !2270
  %95 = load i32, i32* %b, align 4, !dbg !2271
  %cmp161 = icmp sge i32 %94, %95, !dbg !2272
  br i1 %cmp161, label %if.then162, label %if.else164, !dbg !2273

if.then162:                                       ; preds = %land.lhs.true160
  %96 = load i32, i32* %add145, align 4, !dbg !2274
  %97 = load i32, i32* %g, align 4, !dbg !2275
  %add163 = add nsw i32 %97, %96, !dbg !2275
  store i32 %add163, i32* %g, align 4, !dbg !2275
  br label %if.end173, !dbg !2276

if.else164:                                       ; preds = %land.lhs.true160, %if.then158
  %98 = load i32, i32* %r, align 4, !dbg !2277
  %99 = load i32, i32* %g, align 4, !dbg !2279
  %cmp165 = icmp sge i32 %98, %99, !dbg !2280
  br i1 %cmp165, label %land.lhs.true166, label %if.else170, !dbg !2281

land.lhs.true166:                                 ; preds = %if.else164
  %100 = load i32, i32* %r, align 4, !dbg !2282
  %101 = load i32, i32* %b, align 4, !dbg !2283
  %cmp167 = icmp sge i32 %100, %101, !dbg !2284
  br i1 %cmp167, label %if.then168, label %if.else170, !dbg !2285

if.then168:                                       ; preds = %land.lhs.true166
  %102 = load i32, i32* %add145, align 4, !dbg !2286
  %103 = load i32, i32* %r, align 4, !dbg !2287
  %add169 = add nsw i32 %103, %102, !dbg !2287
  store i32 %add169, i32* %r, align 4, !dbg !2287
  br label %if.end172, !dbg !2288

if.else170:                                       ; preds = %land.lhs.true166, %if.else164
  %104 = load i32, i32* %add145, align 4, !dbg !2289
  %105 = load i32, i32* %b, align 4, !dbg !2290
  %add171 = add nsw i32 %105, %104, !dbg !2290
  store i32 %add171, i32* %b, align 4, !dbg !2290
  br label %if.end172

if.end172:                                        ; preds = %if.else170, %if.then168
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.then162
  br label %if.end174, !dbg !2291

if.end174:                                        ; preds = %if.end173, %if.end156
  %106 = load i32, i32* %r, align 4, !dbg !2292
  %107 = load i32, i32* %g, align 4, !dbg !2294
  %add175 = add nsw i32 %106, %107, !dbg !2295
  %108 = load i32, i32* %b, align 4, !dbg !2296
  %add176 = add nsw i32 %add175, %108, !dbg !2297
  %cmp177 = icmp ne i32 %add176, 32768, !dbg !2298
  br i1 %cmp177, label %if.then178, label %if.end179, !dbg !2299

if.then178:                                       ; preds = %if.end174
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2300
  call void @png_error(%struct.png_struct_def* %109, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !2301
  unreachable, !dbg !2301

if.end179:                                        ; preds = %if.end174
  %110 = load i32, i32* %r, align 4, !dbg !2302
  %conv = trunc i32 %110 to i16, !dbg !2303
  %111 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2304
  %rgb_to_gray_red_coeff = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %111, i32 0, i32 123, !dbg !2305
  store i16 %conv, i16* %rgb_to_gray_red_coeff, align 4, !dbg !2306
  %112 = load i32, i32* %g, align 4, !dbg !2307
  %conv180 = trunc i32 %112 to i16, !dbg !2308
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2309
  %rgb_to_gray_green_coeff = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 124, !dbg !2310
  store i16 %conv180, i16* %rgb_to_gray_green_coeff, align 2, !dbg !2311
  br label %if.end182, !dbg !2312

if.else181:                                       ; preds = %land.lhs.true141, %land.lhs.true139, %land.lhs.true137, %land.lhs.true134, %land.lhs.true132, %land.lhs.true130, %land.lhs.true127, %land.lhs.true125, %land.lhs.true123, %if.then120
  %114 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2313
  call void @png_error(%struct.png_struct_def* %114, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !2314
  unreachable, !dbg !2314

if.end182:                                        ; preds = %if.end179
  br label %if.end183, !dbg !2315

if.end183:                                        ; preds = %if.end182, %if.then117
  br label %if.end184, !dbg !2316

if.end184:                                        ; preds = %if.end183, %if.end115
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2317
  %116 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2318
  %117 = load i32, i32* %x_white, align 4, !dbg !2319
  %118 = load i32, i32* %y_white, align 4, !dbg !2320
  %119 = load i32, i32* %x_red, align 4, !dbg !2321
  %120 = load i32, i32* %y_red, align 4, !dbg !2322
  %121 = load i32, i32* %x_green, align 4, !dbg !2323
  %122 = load i32, i32* %y_green, align 4, !dbg !2324
  %123 = load i32, i32* %x_blue, align 4, !dbg !2325
  %124 = load i32, i32* %y_blue, align 4, !dbg !2326
  call void @png_set_cHRM_fixed(%struct.png_struct_def* %115, %struct.png_info_def* %116, i32 %117, i32 %118, i32 %119, i32 %120, i32 %121, i32 %122, i32 %123, i32 %124), !dbg !2327
  br label %return, !dbg !2328

return:                                           ; preds = %if.end184, %if.end114, %if.then65, %if.then27, %if.then22, %if.then18, %if.then4
  ret void, !dbg !2328
}

declare dso_local i32 @png_XYZ_from_xy_checked(%struct.png_struct_def*, %struct.png_XYZ*, %struct.png_xy* byval(%struct.png_xy) align 8) #3

declare dso_local i32 @png_muldiv(i32*, i32, i32, i32) #3

declare dso_local void @png_set_cHRM_fixed(%struct.png_struct_def*, %struct.png_info_def*, i32, i32, i32, i32, i32, i32, i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_sRGB(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !2329 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %intent = alloca i32, align 4
  %buf = alloca [1 x i8], align 1
  %p = alloca [8 x [32 x i8]], align 16
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !2330, metadata !DIExpression()), !dbg !2331
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !2332, metadata !DIExpression()), !dbg !2333
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !2334, metadata !DIExpression()), !dbg !2335
  call void @llvm.dbg.declare(metadata i32* %intent, metadata !2336, metadata !DIExpression()), !dbg !2337
  call void @llvm.dbg.declare(metadata [1 x i8]* %buf, metadata !2338, metadata !DIExpression()), !dbg !2340
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2341
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !2343
  %1 = load i32, i32* %mode, align 4, !dbg !2343
  %and = and i32 %1, 1, !dbg !2344
  %tobool = icmp ne i32 %and, 0, !dbg !2344
  br i1 %tobool, label %if.else, label %if.then, !dbg !2345

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2346
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !2347
  unreachable, !dbg !2347

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2348
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !2350
  %4 = load i32, i32* %mode1, align 4, !dbg !2350
  %and2 = and i32 %4, 4, !dbg !2351
  %tobool3 = icmp ne i32 %and2, 0, !dbg !2351
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !2352

if.then4:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2353
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.42, i64 0, i64 0)), !dbg !2355
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2356
  %7 = load i32, i32* %length.addr, align 4, !dbg !2357
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !2358
  br label %return, !dbg !2359

if.else5:                                         ; preds = %if.else
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2360
  %mode6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 13, !dbg !2362
  %9 = load i32, i32* %mode6, align 4, !dbg !2362
  %and7 = and i32 %9, 2, !dbg !2363
  %tobool8 = icmp ne i32 %and7, 0, !dbg !2363
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !2364

if.then9:                                         ; preds = %if.else5
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2365
  call void @png_warning(%struct.png_struct_def* %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43, i64 0, i64 0)), !dbg !2366
  br label %if.end, !dbg !2366

if.end:                                           ; preds = %if.then9, %if.else5
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  %11 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2367
  %cmp = icmp ne %struct.png_info_def* %11, null, !dbg !2369
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !2370

land.lhs.true:                                    ; preds = %if.end11
  %12 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2371
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %12, i32 0, i32 2, !dbg !2372
  %13 = load i32, i32* %valid, align 8, !dbg !2372
  %and12 = and i32 %13, 2048, !dbg !2373
  %tobool13 = icmp ne i32 %and12, 0, !dbg !2373
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !2374

if.then14:                                        ; preds = %land.lhs.true
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2375
  call void @png_warning(%struct.png_struct_def* %14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0)), !dbg !2377
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2378
  %16 = load i32, i32* %length.addr, align 4, !dbg !2379
  %call15 = call i32 @png_crc_finish(%struct.png_struct_def* %15, i32 %16), !dbg !2380
  br label %return, !dbg !2381

if.end16:                                         ; preds = %land.lhs.true, %if.end11
  %17 = load i32, i32* %length.addr, align 4, !dbg !2382
  %cmp17 = icmp ne i32 %17, 1, !dbg !2384
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !2385

if.then18:                                        ; preds = %if.end16
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2386
  call void @png_warning(%struct.png_struct_def* %18, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45, i64 0, i64 0)), !dbg !2388
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2389
  %20 = load i32, i32* %length.addr, align 4, !dbg !2390
  %call19 = call i32 @png_crc_finish(%struct.png_struct_def* %19, i32 %20), !dbg !2391
  br label %return, !dbg !2392

if.end20:                                         ; preds = %if.end16
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2393
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %buf, i64 0, i64 0, !dbg !2394
  call void @png_crc_read(%struct.png_struct_def* %21, i8* %arraydecay, i64 1), !dbg !2395
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2396
  %call21 = call i32 @png_crc_finish(%struct.png_struct_def* %22, i32 0), !dbg !2398
  %tobool22 = icmp ne i32 %call21, 0, !dbg !2398
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !2399

if.then23:                                        ; preds = %if.end20
  br label %return, !dbg !2400

if.end24:                                         ; preds = %if.end20
  %arrayidx = getelementptr inbounds [1 x i8], [1 x i8]* %buf, i64 0, i64 0, !dbg !2401
  %23 = load i8, i8* %arrayidx, align 1, !dbg !2401
  %conv = zext i8 %23 to i32, !dbg !2401
  store i32 %conv, i32* %intent, align 4, !dbg !2402
  %24 = load i32, i32* %intent, align 4, !dbg !2403
  %cmp25 = icmp sge i32 %24, 4, !dbg !2405
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !2406

if.then27:                                        ; preds = %if.end24
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2407
  call void @png_warning(%struct.png_struct_def* %25, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46, i64 0, i64 0)), !dbg !2409
  br label %return, !dbg !2410

if.end28:                                         ; preds = %if.end24
  %26 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2411
  %cmp29 = icmp ne %struct.png_info_def* %26, null, !dbg !2413
  br i1 %cmp29, label %land.lhs.true31, label %if.end46, !dbg !2414

land.lhs.true31:                                  ; preds = %if.end28
  %27 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2415
  %valid32 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %27, i32 0, i32 2, !dbg !2416
  %28 = load i32, i32* %valid32, align 8, !dbg !2416
  %and33 = and i32 %28, 1, !dbg !2417
  %tobool34 = icmp ne i32 %and33, 0, !dbg !2417
  br i1 %tobool34, label %if.then35, label %if.end46, !dbg !2418

if.then35:                                        ; preds = %land.lhs.true31
  %29 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2419
  %gamma = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %29, i32 0, i32 16, !dbg !2419
  %30 = load i32, i32* %gamma, align 4, !dbg !2419
  %cmp36 = icmp slt i32 %30, 45000, !dbg !2419
  br i1 %cmp36, label %if.then41, label %lor.lhs.false, !dbg !2419

lor.lhs.false:                                    ; preds = %if.then35
  %31 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2419
  %gamma38 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %31, i32 0, i32 16, !dbg !2419
  %32 = load i32, i32* %gamma38, align 4, !dbg !2419
  %cmp39 = icmp sgt i32 %32, 46000, !dbg !2419
  br i1 %cmp39, label %if.then41, label %if.end45, !dbg !2422

if.then41:                                        ; preds = %lor.lhs.false, %if.then35
  call void @llvm.dbg.declare(metadata [8 x [32 x i8]]* %p, metadata !2423, metadata !DIExpression()), !dbg !2425
  %arraydecay42 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2426
  %33 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2427
  %gamma43 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %33, i32 0, i32 16, !dbg !2428
  %34 = load i32, i32* %gamma43, align 4, !dbg !2428
  call void @png_warning_parameter_signed([32 x i8]* %arraydecay42, i32 1, i32 5, i32 %34), !dbg !2429
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2430
  %arraydecay44 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2431
  call void @png_formatted_warning(%struct.png_struct_def* %35, [32 x i8]* %arraydecay44, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.26, i64 0, i64 0)), !dbg !2432
  br label %if.end45, !dbg !2433

if.end45:                                         ; preds = %if.then41, %lor.lhs.false
  br label %if.end46, !dbg !2434

if.end46:                                         ; preds = %if.end45, %land.lhs.true31, %if.end28
  %36 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2435
  %cmp47 = icmp ne %struct.png_info_def* %36, null, !dbg !2437
  br i1 %cmp47, label %land.lhs.true49, label %if.end111, !dbg !2438

land.lhs.true49:                                  ; preds = %if.end46
  %37 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2439
  %valid50 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %37, i32 0, i32 2, !dbg !2440
  %38 = load i32, i32* %valid50, align 8, !dbg !2440
  %and51 = and i32 %38, 4, !dbg !2441
  %tobool52 = icmp ne i32 %and51, 0, !dbg !2441
  br i1 %tobool52, label %if.then53, label %if.end111, !dbg !2442

if.then53:                                        ; preds = %land.lhs.true49
  %39 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2443
  %x_white = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %39, i32 0, i32 33, !dbg !2443
  %40 = load i32, i32* %x_white, align 8, !dbg !2443
  %cmp54 = icmp slt i32 %40, 30270, !dbg !2443
  br i1 %cmp54, label %if.then109, label %lor.lhs.false56, !dbg !2443

lor.lhs.false56:                                  ; preds = %if.then53
  %41 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2443
  %x_white57 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %41, i32 0, i32 33, !dbg !2443
  %42 = load i32, i32* %x_white57, align 8, !dbg !2443
  %cmp58 = icmp sgt i32 %42, 32270, !dbg !2443
  br i1 %cmp58, label %if.then109, label %lor.lhs.false60, !dbg !2445

lor.lhs.false60:                                  ; preds = %lor.lhs.false56
  %43 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2446
  %y_white = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %43, i32 0, i32 34, !dbg !2446
  %44 = load i32, i32* %y_white, align 4, !dbg !2446
  %cmp61 = icmp slt i32 %44, 31900, !dbg !2446
  br i1 %cmp61, label %if.then109, label %lor.lhs.false63, !dbg !2446

lor.lhs.false63:                                  ; preds = %lor.lhs.false60
  %45 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2446
  %y_white64 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %45, i32 0, i32 34, !dbg !2446
  %46 = load i32, i32* %y_white64, align 4, !dbg !2446
  %cmp65 = icmp sgt i32 %46, 33900, !dbg !2446
  br i1 %cmp65, label %if.then109, label %lor.lhs.false67, !dbg !2447

lor.lhs.false67:                                  ; preds = %lor.lhs.false63
  %47 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2448
  %x_red = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %47, i32 0, i32 35, !dbg !2448
  %48 = load i32, i32* %x_red, align 8, !dbg !2448
  %cmp68 = icmp slt i32 %48, 63000, !dbg !2448
  br i1 %cmp68, label %if.then109, label %lor.lhs.false70, !dbg !2448

lor.lhs.false70:                                  ; preds = %lor.lhs.false67
  %49 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2448
  %x_red71 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %49, i32 0, i32 35, !dbg !2448
  %50 = load i32, i32* %x_red71, align 8, !dbg !2448
  %cmp72 = icmp sgt i32 %50, 65000, !dbg !2448
  br i1 %cmp72, label %if.then109, label %lor.lhs.false74, !dbg !2449

lor.lhs.false74:                                  ; preds = %lor.lhs.false70
  %51 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2450
  %y_red = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %51, i32 0, i32 36, !dbg !2450
  %52 = load i32, i32* %y_red, align 4, !dbg !2450
  %cmp75 = icmp slt i32 %52, 32000, !dbg !2450
  br i1 %cmp75, label %if.then109, label %lor.lhs.false77, !dbg !2450

lor.lhs.false77:                                  ; preds = %lor.lhs.false74
  %53 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2450
  %y_red78 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %53, i32 0, i32 36, !dbg !2450
  %54 = load i32, i32* %y_red78, align 4, !dbg !2450
  %cmp79 = icmp sgt i32 %54, 34000, !dbg !2450
  br i1 %cmp79, label %if.then109, label %lor.lhs.false81, !dbg !2451

lor.lhs.false81:                                  ; preds = %lor.lhs.false77
  %55 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2452
  %x_green = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %55, i32 0, i32 37, !dbg !2452
  %56 = load i32, i32* %x_green, align 8, !dbg !2452
  %cmp82 = icmp slt i32 %56, 29000, !dbg !2452
  br i1 %cmp82, label %if.then109, label %lor.lhs.false84, !dbg !2452

lor.lhs.false84:                                  ; preds = %lor.lhs.false81
  %57 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2452
  %x_green85 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %57, i32 0, i32 37, !dbg !2452
  %58 = load i32, i32* %x_green85, align 8, !dbg !2452
  %cmp86 = icmp sgt i32 %58, 31000, !dbg !2452
  br i1 %cmp86, label %if.then109, label %lor.lhs.false88, !dbg !2453

lor.lhs.false88:                                  ; preds = %lor.lhs.false84
  %59 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2454
  %y_green = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %59, i32 0, i32 38, !dbg !2454
  %60 = load i32, i32* %y_green, align 4, !dbg !2454
  %cmp89 = icmp slt i32 %60, 59000, !dbg !2454
  br i1 %cmp89, label %if.then109, label %lor.lhs.false91, !dbg !2454

lor.lhs.false91:                                  ; preds = %lor.lhs.false88
  %61 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2454
  %y_green92 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %61, i32 0, i32 38, !dbg !2454
  %62 = load i32, i32* %y_green92, align 4, !dbg !2454
  %cmp93 = icmp sgt i32 %62, 61000, !dbg !2454
  br i1 %cmp93, label %if.then109, label %lor.lhs.false95, !dbg !2455

lor.lhs.false95:                                  ; preds = %lor.lhs.false91
  %63 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2456
  %x_blue = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %63, i32 0, i32 39, !dbg !2456
  %64 = load i32, i32* %x_blue, align 8, !dbg !2456
  %cmp96 = icmp slt i32 %64, 14000, !dbg !2456
  br i1 %cmp96, label %if.then109, label %lor.lhs.false98, !dbg !2456

lor.lhs.false98:                                  ; preds = %lor.lhs.false95
  %65 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2456
  %x_blue99 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %65, i32 0, i32 39, !dbg !2456
  %66 = load i32, i32* %x_blue99, align 8, !dbg !2456
  %cmp100 = icmp sgt i32 %66, 16000, !dbg !2456
  br i1 %cmp100, label %if.then109, label %lor.lhs.false102, !dbg !2457

lor.lhs.false102:                                 ; preds = %lor.lhs.false98
  %67 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2458
  %y_blue = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %67, i32 0, i32 40, !dbg !2458
  %68 = load i32, i32* %y_blue, align 4, !dbg !2458
  %cmp103 = icmp slt i32 %68, 5000, !dbg !2458
  br i1 %cmp103, label %if.then109, label %lor.lhs.false105, !dbg !2458

lor.lhs.false105:                                 ; preds = %lor.lhs.false102
  %69 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2458
  %y_blue106 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %69, i32 0, i32 40, !dbg !2458
  %70 = load i32, i32* %y_blue106, align 4, !dbg !2458
  %cmp107 = icmp sgt i32 %70, 7000, !dbg !2458
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !2459

if.then109:                                       ; preds = %lor.lhs.false105, %lor.lhs.false102, %lor.lhs.false98, %lor.lhs.false95, %lor.lhs.false91, %lor.lhs.false88, %lor.lhs.false84, %lor.lhs.false81, %lor.lhs.false77, %lor.lhs.false74, %lor.lhs.false70, %lor.lhs.false67, %lor.lhs.false63, %lor.lhs.false60, %lor.lhs.false56, %if.then53
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2460
  call void @png_warning(%struct.png_struct_def* %71, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.47, i64 0, i64 0)), !dbg !2462
  br label %if.end110, !dbg !2463

if.end110:                                        ; preds = %if.then109, %lor.lhs.false105
  br label %if.end111, !dbg !2458

if.end111:                                        ; preds = %if.end110, %land.lhs.true49, %if.end46
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2464
  %is_sRGB = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %72, i32 0, i32 120, !dbg !2465
  store i8 1, i8* %is_sRGB, align 8, !dbg !2466
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2467
  %rgb_to_gray_coefficients_set = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 122, !dbg !2469
  %74 = load i8, i8* %rgb_to_gray_coefficients_set, align 2, !dbg !2469
  %tobool112 = icmp ne i8 %74, 0, !dbg !2467
  br i1 %tobool112, label %if.end115, label %if.then113, !dbg !2470

if.then113:                                       ; preds = %if.end111
  %75 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2471
  %rgb_to_gray_red_coeff = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %75, i32 0, i32 123, !dbg !2473
  store i16 6968, i16* %rgb_to_gray_red_coeff, align 4, !dbg !2474
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2475
  %rgb_to_gray_green_coeff = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 124, !dbg !2476
  store i16 23434, i16* %rgb_to_gray_green_coeff, align 2, !dbg !2477
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2478
  %rgb_to_gray_coefficients_set114 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %77, i32 0, i32 122, !dbg !2479
  store i8 1, i8* %rgb_to_gray_coefficients_set114, align 2, !dbg !2480
  br label %if.end115, !dbg !2481

if.end115:                                        ; preds = %if.then113, %if.end111
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2482
  %79 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2483
  %80 = load i32, i32* %intent, align 4, !dbg !2484
  call void @png_set_sRGB_gAMA_and_cHRM(%struct.png_struct_def* %78, %struct.png_info_def* %79, i32 %80), !dbg !2485
  br label %return, !dbg !2486

return:                                           ; preds = %if.end115, %if.then27, %if.then23, %if.then18, %if.then14, %if.then4
  ret void, !dbg !2486
}

declare dso_local void @png_set_sRGB_gAMA_and_cHRM(%struct.png_struct_def*, %struct.png_info_def*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_iCCP(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !2487 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %compression_type = alloca i8, align 1
  %pC = alloca i8*, align 8
  %profile = alloca i8*, align 8
  %skip = alloca i32, align 4
  %profile_size = alloca i32, align 4
  %profile_length = alloca i64, align 8
  %slength = alloca i64, align 8
  %prefix_length = alloca i64, align 8
  %data_length = alloca i64, align 8
  %p = alloca [8 x [32 x i8]], align 16
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !2488, metadata !DIExpression()), !dbg !2489
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !2490, metadata !DIExpression()), !dbg !2491
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !2492, metadata !DIExpression()), !dbg !2493
  call void @llvm.dbg.declare(metadata i8* %compression_type, metadata !2494, metadata !DIExpression()), !dbg !2495
  call void @llvm.dbg.declare(metadata i8** %pC, metadata !2496, metadata !DIExpression()), !dbg !2497
  call void @llvm.dbg.declare(metadata i8** %profile, metadata !2498, metadata !DIExpression()), !dbg !2499
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !2500, metadata !DIExpression()), !dbg !2501
  store i32 0, i32* %skip, align 4, !dbg !2501
  call void @llvm.dbg.declare(metadata i32* %profile_size, metadata !2502, metadata !DIExpression()), !dbg !2503
  call void @llvm.dbg.declare(metadata i64* %profile_length, metadata !2504, metadata !DIExpression()), !dbg !2505
  call void @llvm.dbg.declare(metadata i64* %slength, metadata !2506, metadata !DIExpression()), !dbg !2507
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !2508, metadata !DIExpression()), !dbg !2509
  call void @llvm.dbg.declare(metadata i64* %data_length, metadata !2510, metadata !DIExpression()), !dbg !2511
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2512
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !2514
  %1 = load i32, i32* %mode, align 4, !dbg !2514
  %and = and i32 %1, 1, !dbg !2515
  %tobool = icmp ne i32 %and, 0, !dbg !2515
  br i1 %tobool, label %if.else, label %if.then, !dbg !2516

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2517
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !2518
  unreachable, !dbg !2518

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2519
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !2521
  %4 = load i32, i32* %mode1, align 4, !dbg !2521
  %and2 = and i32 %4, 4, !dbg !2522
  %tobool3 = icmp ne i32 %and2, 0, !dbg !2522
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !2523

if.then4:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2524
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.49, i64 0, i64 0)), !dbg !2526
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2527
  %7 = load i32, i32* %length.addr, align 4, !dbg !2528
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !2529
  br label %return, !dbg !2530

if.else5:                                         ; preds = %if.else
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2531
  %mode6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 13, !dbg !2533
  %9 = load i32, i32* %mode6, align 4, !dbg !2533
  %and7 = and i32 %9, 2, !dbg !2534
  %tobool8 = icmp ne i32 %and7, 0, !dbg !2534
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !2535

if.then9:                                         ; preds = %if.else5
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2536
  call void @png_warning(%struct.png_struct_def* %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i64 0, i64 0)), !dbg !2537
  br label %if.end, !dbg !2537

if.end:                                           ; preds = %if.then9, %if.else5
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2538
  %mode12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 13, !dbg !2540
  %12 = load i32, i32* %mode12, align 4, !dbg !2540
  %and13 = and i32 %12, 16384, !dbg !2541
  %tobool14 = icmp ne i32 %and13, 0, !dbg !2541
  br i1 %tobool14, label %if.then17, label %lor.lhs.false, !dbg !2542

lor.lhs.false:                                    ; preds = %if.end11
  %13 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2543
  %cmp = icmp ne %struct.png_info_def* %13, null, !dbg !2544
  br i1 %cmp, label %land.lhs.true, label %if.end19, !dbg !2545

land.lhs.true:                                    ; preds = %lor.lhs.false
  %14 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2546
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 2, !dbg !2547
  %15 = load i32, i32* %valid, align 8, !dbg !2547
  %and15 = and i32 %15, 6144, !dbg !2548
  %tobool16 = icmp ne i32 %and15, 0, !dbg !2548
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !2549

if.then17:                                        ; preds = %land.lhs.true, %if.end11
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2550
  call void @png_warning(%struct.png_struct_def* %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51, i64 0, i64 0)), !dbg !2552
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2553
  %18 = load i32, i32* %length.addr, align 4, !dbg !2554
  %call18 = call i32 @png_crc_finish(%struct.png_struct_def* %17, i32 %18), !dbg !2555
  br label %return, !dbg !2556

if.end19:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2557
  %mode20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 13, !dbg !2558
  %20 = load i32, i32* %mode20, align 4, !dbg !2559
  %or = or i32 %20, 16384, !dbg !2559
  store i32 %or, i32* %mode20, align 4, !dbg !2559
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2560
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2561
  %chunkdata = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 141, !dbg !2562
  %23 = load i8*, i8** %chunkdata, align 8, !dbg !2562
  call void @png_free(%struct.png_struct_def* %21, i8* %23), !dbg !2563
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2564
  %25 = load i32, i32* %length.addr, align 4, !dbg !2565
  %add = add i32 %25, 1, !dbg !2566
  %conv = zext i32 %add to i64, !dbg !2565
  %call21 = call noalias i8* @png_malloc(%struct.png_struct_def* %24, i64 %conv), !dbg !2567
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2568
  %chunkdata22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 141, !dbg !2569
  store i8* %call21, i8** %chunkdata22, align 8, !dbg !2570
  %27 = load i32, i32* %length.addr, align 4, !dbg !2571
  %conv23 = zext i32 %27 to i64, !dbg !2571
  store i64 %conv23, i64* %slength, align 8, !dbg !2572
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2573
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2574
  %chunkdata24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 141, !dbg !2575
  %30 = load i8*, i8** %chunkdata24, align 8, !dbg !2575
  %31 = load i64, i64* %slength, align 8, !dbg !2576
  call void @png_crc_read(%struct.png_struct_def* %28, i8* %30, i64 %31), !dbg !2577
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2578
  %33 = load i32, i32* %skip, align 4, !dbg !2580
  %call25 = call i32 @png_crc_finish(%struct.png_struct_def* %32, i32 %33), !dbg !2581
  %tobool26 = icmp ne i32 %call25, 0, !dbg !2581
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !2582

if.then27:                                        ; preds = %if.end19
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2583
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2585
  %chunkdata28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 141, !dbg !2586
  %36 = load i8*, i8** %chunkdata28, align 8, !dbg !2586
  call void @png_free(%struct.png_struct_def* %34, i8* %36), !dbg !2587
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2588
  %chunkdata29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 141, !dbg !2589
  store i8* null, i8** %chunkdata29, align 8, !dbg !2590
  br label %return, !dbg !2591

if.end30:                                         ; preds = %if.end19
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2592
  %chunkdata31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 141, !dbg !2593
  %39 = load i8*, i8** %chunkdata31, align 8, !dbg !2593
  %40 = load i64, i64* %slength, align 8, !dbg !2594
  %arrayidx = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !2592
  store i8 0, i8* %arrayidx, align 1, !dbg !2595
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2596
  %chunkdata32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 141, !dbg !2598
  %42 = load i8*, i8** %chunkdata32, align 8, !dbg !2598
  store i8* %42, i8** %profile, align 8, !dbg !2599
  br label %for.cond, !dbg !2600

for.cond:                                         ; preds = %for.inc, %if.end30
  %43 = load i8*, i8** %profile, align 8, !dbg !2601
  %44 = load i8, i8* %43, align 1, !dbg !2603
  %tobool33 = icmp ne i8 %44, 0, !dbg !2604
  br i1 %tobool33, label %for.body, label %for.end, !dbg !2604

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !2604

for.inc:                                          ; preds = %for.body
  %45 = load i8*, i8** %profile, align 8, !dbg !2605
  %incdec.ptr = getelementptr inbounds i8, i8* %45, i32 1, !dbg !2605
  store i8* %incdec.ptr, i8** %profile, align 8, !dbg !2605
  br label %for.cond, !dbg !2606, !llvm.loop !2607

for.end:                                          ; preds = %for.cond
  %46 = load i8*, i8** %profile, align 8, !dbg !2609
  %incdec.ptr34 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !2609
  store i8* %incdec.ptr34, i8** %profile, align 8, !dbg !2609
  %47 = load i8*, i8** %profile, align 8, !dbg !2610
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2612
  %chunkdata35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 141, !dbg !2613
  %49 = load i8*, i8** %chunkdata35, align 8, !dbg !2613
  %50 = load i64, i64* %slength, align 8, !dbg !2614
  %add.ptr = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !2615
  %add.ptr36 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !2616
  %cmp37 = icmp uge i8* %47, %add.ptr36, !dbg !2617
  br i1 %cmp37, label %if.then39, label %if.end42, !dbg !2618

if.then39:                                        ; preds = %for.end
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2619
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2621
  %chunkdata40 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 141, !dbg !2622
  %53 = load i8*, i8** %chunkdata40, align 8, !dbg !2622
  call void @png_free(%struct.png_struct_def* %51, i8* %53), !dbg !2623
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2624
  %chunkdata41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %54, i32 0, i32 141, !dbg !2625
  store i8* null, i8** %chunkdata41, align 8, !dbg !2626
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2627
  call void @png_warning(%struct.png_struct_def* %55, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i64 0, i64 0)), !dbg !2628
  br label %return, !dbg !2629

if.end42:                                         ; preds = %for.end
  %56 = load i8*, i8** %profile, align 8, !dbg !2630
  %incdec.ptr43 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !2630
  store i8* %incdec.ptr43, i8** %profile, align 8, !dbg !2630
  %57 = load i8, i8* %56, align 1, !dbg !2631
  store i8 %57, i8* %compression_type, align 1, !dbg !2632
  %58 = load i8, i8* %compression_type, align 1, !dbg !2633
  %tobool44 = icmp ne i8 %58, 0, !dbg !2633
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !2635

if.then45:                                        ; preds = %if.end42
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2636
  call void @png_warning(%struct.png_struct_def* %59, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.53, i64 0, i64 0)), !dbg !2638
  store i8 0, i8* %compression_type, align 1, !dbg !2639
  br label %if.end46, !dbg !2640

if.end46:                                         ; preds = %if.then45, %if.end42
  %60 = load i8*, i8** %profile, align 8, !dbg !2641
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2642
  %chunkdata47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %61, i32 0, i32 141, !dbg !2643
  %62 = load i8*, i8** %chunkdata47, align 8, !dbg !2643
  %sub.ptr.lhs.cast = ptrtoint i8* %60 to i64, !dbg !2644
  %sub.ptr.rhs.cast = ptrtoint i8* %62 to i64, !dbg !2644
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2644
  store i64 %sub.ptr.sub, i64* %prefix_length, align 8, !dbg !2645
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2646
  %64 = load i8, i8* %compression_type, align 1, !dbg !2647
  %conv48 = zext i8 %64 to i32, !dbg !2647
  %65 = load i64, i64* %slength, align 8, !dbg !2648
  %66 = load i64, i64* %prefix_length, align 8, !dbg !2649
  call void @png_decompress_chunk(%struct.png_struct_def* %63, i32 %conv48, i64 %65, i64 %66, i64* %data_length), !dbg !2650
  %67 = load i64, i64* %data_length, align 8, !dbg !2651
  %68 = load i64, i64* %prefix_length, align 8, !dbg !2652
  %sub = sub i64 %67, %68, !dbg !2653
  store i64 %sub, i64* %profile_length, align 8, !dbg !2654
  %69 = load i64, i64* %prefix_length, align 8, !dbg !2655
  %70 = load i64, i64* %data_length, align 8, !dbg !2657
  %cmp49 = icmp ugt i64 %69, %70, !dbg !2658
  br i1 %cmp49, label %if.then54, label %lor.lhs.false51, !dbg !2659

lor.lhs.false51:                                  ; preds = %if.end46
  %71 = load i64, i64* %profile_length, align 8, !dbg !2660
  %cmp52 = icmp ult i64 %71, 4, !dbg !2661
  br i1 %cmp52, label %if.then54, label %if.end57, !dbg !2662

if.then54:                                        ; preds = %lor.lhs.false51, %if.end46
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2663
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2665
  %chunkdata55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 141, !dbg !2666
  %74 = load i8*, i8** %chunkdata55, align 8, !dbg !2666
  call void @png_free(%struct.png_struct_def* %72, i8* %74), !dbg !2667
  %75 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2668
  %chunkdata56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %75, i32 0, i32 141, !dbg !2669
  store i8* null, i8** %chunkdata56, align 8, !dbg !2670
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2671
  call void @png_warning(%struct.png_struct_def* %76, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.54, i64 0, i64 0)), !dbg !2672
  br label %return, !dbg !2673

if.end57:                                         ; preds = %lor.lhs.false51
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2674
  %chunkdata58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %77, i32 0, i32 141, !dbg !2675
  %78 = load i8*, i8** %chunkdata58, align 8, !dbg !2675
  %79 = load i64, i64* %prefix_length, align 8, !dbg !2676
  %add.ptr59 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !2677
  store i8* %add.ptr59, i8** %pC, align 8, !dbg !2678
  %80 = load i8*, i8** %pC, align 8, !dbg !2679
  %81 = load i8, i8* %80, align 1, !dbg !2680
  %conv60 = zext i8 %81 to i32, !dbg !2681
  %shl = shl i32 %conv60, 24, !dbg !2682
  %82 = load i8*, i8** %pC, align 8, !dbg !2683
  %add.ptr61 = getelementptr inbounds i8, i8* %82, i64 1, !dbg !2684
  %83 = load i8, i8* %add.ptr61, align 1, !dbg !2685
  %conv62 = zext i8 %83 to i32, !dbg !2686
  %shl63 = shl i32 %conv62, 16, !dbg !2687
  %or64 = or i32 %shl, %shl63, !dbg !2688
  %84 = load i8*, i8** %pC, align 8, !dbg !2689
  %add.ptr65 = getelementptr inbounds i8, i8* %84, i64 2, !dbg !2690
  %85 = load i8, i8* %add.ptr65, align 1, !dbg !2691
  %conv66 = zext i8 %85 to i32, !dbg !2692
  %shl67 = shl i32 %conv66, 8, !dbg !2693
  %or68 = or i32 %or64, %shl67, !dbg !2694
  %86 = load i8*, i8** %pC, align 8, !dbg !2695
  %add.ptr69 = getelementptr inbounds i8, i8* %86, i64 3, !dbg !2696
  %87 = load i8, i8* %add.ptr69, align 1, !dbg !2697
  %conv70 = zext i8 %87 to i32, !dbg !2698
  %or71 = or i32 %or68, %conv70, !dbg !2699
  store i32 %or71, i32* %profile_size, align 4, !dbg !2700
  %88 = load i32, i32* %profile_size, align 4, !dbg !2701
  %conv72 = zext i32 %88 to i64, !dbg !2701
  %89 = load i64, i64* %profile_length, align 8, !dbg !2703
  %cmp73 = icmp ult i64 %conv72, %89, !dbg !2704
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !2705

if.then75:                                        ; preds = %if.end57
  %90 = load i32, i32* %profile_size, align 4, !dbg !2706
  %conv76 = zext i32 %90 to i64, !dbg !2706
  store i64 %conv76, i64* %profile_length, align 8, !dbg !2707
  br label %if.end77, !dbg !2708

if.end77:                                         ; preds = %if.then75, %if.end57
  %91 = load i32, i32* %profile_size, align 4, !dbg !2709
  %conv78 = zext i32 %91 to i64, !dbg !2709
  %92 = load i64, i64* %profile_length, align 8, !dbg !2711
  %cmp79 = icmp ugt i64 %conv78, %92, !dbg !2712
  br i1 %cmp79, label %if.then81, label %if.end87, !dbg !2713

if.then81:                                        ; preds = %if.end77
  call void @llvm.dbg.declare(metadata [8 x [32 x i8]]* %p, metadata !2714, metadata !DIExpression()), !dbg !2716
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2717
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2718
  %chunkdata82 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %94, i32 0, i32 141, !dbg !2719
  %95 = load i8*, i8** %chunkdata82, align 8, !dbg !2719
  call void @png_free(%struct.png_struct_def* %93, i8* %95), !dbg !2720
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2721
  %chunkdata83 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %96, i32 0, i32 141, !dbg !2722
  store i8* null, i8** %chunkdata83, align 8, !dbg !2723
  %arraydecay = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2724
  %97 = load i32, i32* %profile_size, align 4, !dbg !2725
  %conv84 = zext i32 %97 to i64, !dbg !2725
  call void @png_warning_parameter_unsigned([32 x i8]* %arraydecay, i32 1, i32 1, i64 %conv84), !dbg !2726
  %arraydecay85 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2727
  %98 = load i64, i64* %profile_length, align 8, !dbg !2728
  call void @png_warning_parameter_unsigned([32 x i8]* %arraydecay85, i32 2, i32 1, i64 %98), !dbg !2729
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2730
  %arraydecay86 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %p, i64 0, i64 0, !dbg !2731
  call void @png_formatted_warning(%struct.png_struct_def* %99, [32 x i8]* %arraydecay86, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.55, i64 0, i64 0)), !dbg !2732
  br label %return, !dbg !2733

if.end87:                                         ; preds = %if.end77
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2734
  %101 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !2735
  %102 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2736
  %chunkdata88 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %102, i32 0, i32 141, !dbg !2737
  %103 = load i8*, i8** %chunkdata88, align 8, !dbg !2737
  %104 = load i8, i8* %compression_type, align 1, !dbg !2738
  %conv89 = zext i8 %104 to i32, !dbg !2738
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2739
  %chunkdata90 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %105, i32 0, i32 141, !dbg !2740
  %106 = load i8*, i8** %chunkdata90, align 8, !dbg !2740
  %107 = load i64, i64* %prefix_length, align 8, !dbg !2741
  %add.ptr91 = getelementptr inbounds i8, i8* %106, i64 %107, !dbg !2742
  %108 = load i32, i32* %profile_size, align 4, !dbg !2743
  call void @png_set_iCCP(%struct.png_struct_def* %100, %struct.png_info_def* %101, i8* %103, i32 %conv89, i8* %add.ptr91, i32 %108), !dbg !2744
  %109 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2745
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2746
  %chunkdata92 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %110, i32 0, i32 141, !dbg !2747
  %111 = load i8*, i8** %chunkdata92, align 8, !dbg !2747
  call void @png_free(%struct.png_struct_def* %109, i8* %111), !dbg !2748
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2749
  %chunkdata93 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %112, i32 0, i32 141, !dbg !2750
  store i8* null, i8** %chunkdata93, align 8, !dbg !2751
  br label %return, !dbg !2752

return:                                           ; preds = %if.end87, %if.then81, %if.then54, %if.then39, %if.then27, %if.then17, %if.then4
  ret void, !dbg !2752
}

declare dso_local noalias i8* @png_malloc(%struct.png_struct_def*, i64) #3

declare dso_local void @png_warning_parameter_unsigned([32 x i8]*, i32, i32, i64) #3

declare dso_local void @png_set_iCCP(%struct.png_struct_def*, %struct.png_info_def*, i8*, i32, i8*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_sPLT(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !2753 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %entry_start = alloca i8*, align 8
  %new_palette = alloca %struct.png_sPLT_struct, align 8
  %pp = alloca %struct.png_sPLT_entry_struct*, align 8
  %data_length = alloca i32, align 4
  %entry_size = alloca i32, align 4
  %i = alloca i32, align 4
  %skip = alloca i32, align 4
  %slength = alloca i64, align 8
  %dl = alloca i32, align 4
  %max_dl = alloca i64, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !2754, metadata !DIExpression()), !dbg !2755
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !2756, metadata !DIExpression()), !dbg !2757
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !2758, metadata !DIExpression()), !dbg !2759
  call void @llvm.dbg.declare(metadata i8** %entry_start, metadata !2760, metadata !DIExpression()), !dbg !2761
  call void @llvm.dbg.declare(metadata %struct.png_sPLT_struct* %new_palette, metadata !2762, metadata !DIExpression()), !dbg !2763
  call void @llvm.dbg.declare(metadata %struct.png_sPLT_entry_struct** %pp, metadata !2764, metadata !DIExpression()), !dbg !2765
  call void @llvm.dbg.declare(metadata i32* %data_length, metadata !2766, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.declare(metadata i32* %entry_size, metadata !2768, metadata !DIExpression()), !dbg !2769
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2770, metadata !DIExpression()), !dbg !2771
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !2772, metadata !DIExpression()), !dbg !2773
  store i32 0, i32* %skip, align 4, !dbg !2773
  call void @llvm.dbg.declare(metadata i64* %slength, metadata !2774, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.declare(metadata i32* %dl, metadata !2776, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.declare(metadata i64* %max_dl, metadata !2778, metadata !DIExpression()), !dbg !2779
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2780
  %user_chunk_cache_max = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 137, !dbg !2782
  %1 = load i32, i32* %user_chunk_cache_max, align 4, !dbg !2782
  %cmp = icmp ne i32 %1, 0, !dbg !2783
  br i1 %cmp, label %if.then, label %if.end9, !dbg !2784

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2785
  %user_chunk_cache_max1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 137, !dbg !2788
  %3 = load i32, i32* %user_chunk_cache_max1, align 4, !dbg !2788
  %cmp2 = icmp eq i32 %3, 1, !dbg !2789
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !2790

if.then3:                                         ; preds = %if.then
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2791
  %5 = load i32, i32* %length.addr, align 4, !dbg !2793
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %4, i32 %5), !dbg !2794
  br label %return, !dbg !2795

if.end:                                           ; preds = %if.then
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2796
  %user_chunk_cache_max4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 137, !dbg !2798
  %7 = load i32, i32* %user_chunk_cache_max4, align 4, !dbg !2799
  %dec = add i32 %7, -1, !dbg !2799
  store i32 %dec, i32* %user_chunk_cache_max4, align 4, !dbg !2799
  %cmp5 = icmp eq i32 %dec, 1, !dbg !2800
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !2801

if.then6:                                         ; preds = %if.end
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2802
  call void @png_warning(%struct.png_struct_def* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.56, i64 0, i64 0)), !dbg !2804
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2805
  %10 = load i32, i32* %length.addr, align 4, !dbg !2806
  %call7 = call i32 @png_crc_finish(%struct.png_struct_def* %9, i32 %10), !dbg !2807
  br label %return, !dbg !2808

if.end8:                                          ; preds = %if.end
  br label %if.end9, !dbg !2809

if.end9:                                          ; preds = %if.end8, %entry
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2810
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 13, !dbg !2812
  %12 = load i32, i32* %mode, align 4, !dbg !2812
  %and = and i32 %12, 1, !dbg !2813
  %tobool = icmp ne i32 %and, 0, !dbg !2813
  br i1 %tobool, label %if.else, label %if.then10, !dbg !2814

if.then10:                                        ; preds = %if.end9
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2815
  call void @png_error(%struct.png_struct_def* %13, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.57, i64 0, i64 0)) #6, !dbg !2816
  unreachable, !dbg !2816

if.else:                                          ; preds = %if.end9
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2817
  %mode11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 13, !dbg !2819
  %15 = load i32, i32* %mode11, align 4, !dbg !2819
  %and12 = and i32 %15, 4, !dbg !2820
  %tobool13 = icmp ne i32 %and12, 0, !dbg !2820
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !2821

if.then14:                                        ; preds = %if.else
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2822
  call void @png_warning(%struct.png_struct_def* %16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.58, i64 0, i64 0)), !dbg !2824
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2825
  %18 = load i32, i32* %length.addr, align 4, !dbg !2826
  %call15 = call i32 @png_crc_finish(%struct.png_struct_def* %17, i32 %18), !dbg !2827
  br label %return, !dbg !2828

if.end16:                                         ; preds = %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2829
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2830
  %chunkdata = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 141, !dbg !2831
  %21 = load i8*, i8** %chunkdata, align 8, !dbg !2831
  call void @png_free(%struct.png_struct_def* %19, i8* %21), !dbg !2832
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2833
  %23 = load i32, i32* %length.addr, align 4, !dbg !2834
  %add = add i32 %23, 1, !dbg !2835
  %conv = zext i32 %add to i64, !dbg !2834
  %call18 = call noalias i8* @png_malloc(%struct.png_struct_def* %22, i64 %conv), !dbg !2836
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2837
  %chunkdata19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 141, !dbg !2838
  store i8* %call18, i8** %chunkdata19, align 8, !dbg !2839
  %25 = load i32, i32* %length.addr, align 4, !dbg !2840
  %conv20 = zext i32 %25 to i64, !dbg !2840
  store i64 %conv20, i64* %slength, align 8, !dbg !2841
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2842
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2843
  %chunkdata21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 141, !dbg !2844
  %28 = load i8*, i8** %chunkdata21, align 8, !dbg !2844
  %29 = load i64, i64* %slength, align 8, !dbg !2845
  call void @png_crc_read(%struct.png_struct_def* %26, i8* %28, i64 %29), !dbg !2846
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2847
  %31 = load i32, i32* %skip, align 4, !dbg !2849
  %call22 = call i32 @png_crc_finish(%struct.png_struct_def* %30, i32 %31), !dbg !2850
  %tobool23 = icmp ne i32 %call22, 0, !dbg !2850
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !2851

if.then24:                                        ; preds = %if.end17
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2852
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2854
  %chunkdata25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 141, !dbg !2855
  %34 = load i8*, i8** %chunkdata25, align 8, !dbg !2855
  call void @png_free(%struct.png_struct_def* %32, i8* %34), !dbg !2856
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2857
  %chunkdata26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 141, !dbg !2858
  store i8* null, i8** %chunkdata26, align 8, !dbg !2859
  br label %return, !dbg !2860

if.end27:                                         ; preds = %if.end17
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2861
  %chunkdata28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 141, !dbg !2862
  %37 = load i8*, i8** %chunkdata28, align 8, !dbg !2862
  %38 = load i64, i64* %slength, align 8, !dbg !2863
  %arrayidx = getelementptr inbounds i8, i8* %37, i64 %38, !dbg !2861
  store i8 0, i8* %arrayidx, align 1, !dbg !2864
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2865
  %chunkdata29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 141, !dbg !2867
  %40 = load i8*, i8** %chunkdata29, align 8, !dbg !2867
  store i8* %40, i8** %entry_start, align 8, !dbg !2868
  br label %for.cond, !dbg !2869

for.cond:                                         ; preds = %for.inc, %if.end27
  %41 = load i8*, i8** %entry_start, align 8, !dbg !2870
  %42 = load i8, i8* %41, align 1, !dbg !2872
  %tobool30 = icmp ne i8 %42, 0, !dbg !2873
  br i1 %tobool30, label %for.body, label %for.end, !dbg !2873

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !2873

for.inc:                                          ; preds = %for.body
  %43 = load i8*, i8** %entry_start, align 8, !dbg !2874
  %incdec.ptr = getelementptr inbounds i8, i8* %43, i32 1, !dbg !2874
  store i8* %incdec.ptr, i8** %entry_start, align 8, !dbg !2874
  br label %for.cond, !dbg !2875, !llvm.loop !2876

for.end:                                          ; preds = %for.cond
  %44 = load i8*, i8** %entry_start, align 8, !dbg !2878
  %incdec.ptr31 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !2878
  store i8* %incdec.ptr31, i8** %entry_start, align 8, !dbg !2878
  %45 = load i8*, i8** %entry_start, align 8, !dbg !2879
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2881
  %chunkdata32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 141, !dbg !2882
  %47 = load i8*, i8** %chunkdata32, align 8, !dbg !2882
  %48 = load i64, i64* %slength, align 8, !dbg !2883
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !2884
  %add.ptr33 = getelementptr inbounds i8, i8* %add.ptr, i64 -2, !dbg !2885
  %cmp34 = icmp ugt i8* %45, %add.ptr33, !dbg !2886
  br i1 %cmp34, label %if.then36, label %if.end39, !dbg !2887

if.then36:                                        ; preds = %for.end
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2888
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2890
  %chunkdata37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 141, !dbg !2891
  %51 = load i8*, i8** %chunkdata37, align 8, !dbg !2891
  call void @png_free(%struct.png_struct_def* %49, i8* %51), !dbg !2892
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2893
  %chunkdata38 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 141, !dbg !2894
  store i8* null, i8** %chunkdata38, align 8, !dbg !2895
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2896
  call void @png_warning(%struct.png_struct_def* %53, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59, i64 0, i64 0)), !dbg !2897
  br label %return, !dbg !2898

if.end39:                                         ; preds = %for.end
  %54 = load i8*, i8** %entry_start, align 8, !dbg !2899
  %incdec.ptr40 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !2899
  store i8* %incdec.ptr40, i8** %entry_start, align 8, !dbg !2899
  %55 = load i8, i8* %54, align 1, !dbg !2900
  %depth = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %new_palette, i32 0, i32 1, !dbg !2901
  store i8 %55, i8* %depth, align 8, !dbg !2902
  %depth41 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %new_palette, i32 0, i32 1, !dbg !2903
  %56 = load i8, i8* %depth41, align 8, !dbg !2903
  %conv42 = zext i8 %56 to i32, !dbg !2904
  %cmp43 = icmp eq i32 %conv42, 8, !dbg !2905
  %57 = zext i1 %cmp43 to i64, !dbg !2904
  %cond = select i1 %cmp43, i32 6, i32 10, !dbg !2904
  store i32 %cond, i32* %entry_size, align 4, !dbg !2906
  %58 = load i32, i32* %length.addr, align 4, !dbg !2907
  %59 = load i8*, i8** %entry_start, align 8, !dbg !2908
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2909
  %chunkdata45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %60, i32 0, i32 141, !dbg !2910
  %61 = load i8*, i8** %chunkdata45, align 8, !dbg !2910
  %sub.ptr.lhs.cast = ptrtoint i8* %59 to i64, !dbg !2911
  %sub.ptr.rhs.cast = ptrtoint i8* %61 to i64, !dbg !2911
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2911
  %conv46 = trunc i64 %sub.ptr.sub to i32, !dbg !2912
  %sub = sub i32 %58, %conv46, !dbg !2913
  store i32 %sub, i32* %data_length, align 4, !dbg !2914
  %62 = load i32, i32* %data_length, align 4, !dbg !2915
  %63 = load i32, i32* %entry_size, align 4, !dbg !2917
  %rem = urem i32 %62, %63, !dbg !2918
  %tobool47 = icmp ne i32 %rem, 0, !dbg !2918
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !2919

if.then48:                                        ; preds = %if.end39
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2920
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2922
  %chunkdata49 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %65, i32 0, i32 141, !dbg !2923
  %66 = load i8*, i8** %chunkdata49, align 8, !dbg !2923
  call void @png_free(%struct.png_struct_def* %64, i8* %66), !dbg !2924
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2925
  %chunkdata50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %67, i32 0, i32 141, !dbg !2926
  store i8* null, i8** %chunkdata50, align 8, !dbg !2927
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2928
  call void @png_warning(%struct.png_struct_def* %68, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0)), !dbg !2929
  br label %return, !dbg !2930

if.end51:                                         ; preds = %if.end39
  %69 = load i32, i32* %data_length, align 4, !dbg !2931
  %70 = load i32, i32* %entry_size, align 4, !dbg !2932
  %div = udiv i32 %69, %70, !dbg !2933
  store i32 %div, i32* %dl, align 4, !dbg !2934
  store i64 1844674407370955161, i64* %max_dl, align 8, !dbg !2935
  %71 = load i32, i32* %dl, align 4, !dbg !2936
  %conv52 = zext i32 %71 to i64, !dbg !2936
  %72 = load i64, i64* %max_dl, align 8, !dbg !2938
  %cmp53 = icmp ugt i64 %conv52, %72, !dbg !2939
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !2940

if.then55:                                        ; preds = %if.end51
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2941
  call void @png_warning(%struct.png_struct_def* %73, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i64 0, i64 0)), !dbg !2943
  br label %return, !dbg !2944

if.end56:                                         ; preds = %if.end51
  %74 = load i32, i32* %data_length, align 4, !dbg !2945
  %75 = load i32, i32* %entry_size, align 4, !dbg !2946
  %div57 = udiv i32 %74, %75, !dbg !2947
  %nentries = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %new_palette, i32 0, i32 3, !dbg !2948
  store i32 %div57, i32* %nentries, align 8, !dbg !2949
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2950
  %nentries58 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %new_palette, i32 0, i32 3, !dbg !2951
  %77 = load i32, i32* %nentries58, align 8, !dbg !2951
  %conv59 = sext i32 %77 to i64, !dbg !2952
  %mul = mul i64 %conv59, 10, !dbg !2953
  %call60 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %76, i64 %mul), !dbg !2954
  %78 = bitcast i8* %call60 to %struct.png_sPLT_entry_struct*, !dbg !2955
  %entries = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %new_palette, i32 0, i32 2, !dbg !2956
  store %struct.png_sPLT_entry_struct* %78, %struct.png_sPLT_entry_struct** %entries, align 8, !dbg !2957
  %entries61 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %new_palette, i32 0, i32 2, !dbg !2958
  %79 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %entries61, align 8, !dbg !2958
  %cmp62 = icmp eq %struct.png_sPLT_entry_struct* %79, null, !dbg !2960
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !2961

if.then64:                                        ; preds = %if.end56
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !2962
  call void @png_warning(%struct.png_struct_def* %80, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.62, i64 0, i64 0)), !dbg !2964
  br label %return, !dbg !2965

if.end65:                                         ; preds = %if.end56
  store i32 0, i32* %i, align 4, !dbg !2966
  br label %for.cond66, !dbg !2968

for.cond66:                                       ; preds = %for.inc126, %if.end65
  %81 = load i32, i32* %i, align 4, !dbg !2969
  %nentries67 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %new_palette, i32 0, i32 3, !dbg !2971
  %82 = load i32, i32* %nentries67, align 8, !dbg !2971
  %cmp68 = icmp slt i32 %81, %82, !dbg !2972
  br i1 %cmp68, label %for.body70, label %for.end127, !dbg !2973

for.body70:                                       ; preds = %for.cond66
  %entries71 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %new_palette, i32 0, i32 2, !dbg !2974
  %83 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %entries71, align 8, !dbg !2974
  %84 = load i32, i32* %i, align 4, !dbg !2976
  %idx.ext = sext i32 %84 to i64, !dbg !2977
  %add.ptr72 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %83, i64 %idx.ext, !dbg !2977
  store %struct.png_sPLT_entry_struct* %add.ptr72, %struct.png_sPLT_entry_struct** %pp, align 8, !dbg !2978
  %depth73 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %new_palette, i32 0, i32 1, !dbg !2979
  %85 = load i8, i8* %depth73, align 8, !dbg !2979
  %conv74 = zext i8 %85 to i32, !dbg !2981
  %cmp75 = icmp eq i32 %conv74, 8, !dbg !2982
  br i1 %cmp75, label %if.then77, label %if.else86, !dbg !2983

if.then77:                                        ; preds = %for.body70
  %86 = load i8*, i8** %entry_start, align 8, !dbg !2984
  %incdec.ptr78 = getelementptr inbounds i8, i8* %86, i32 1, !dbg !2984
  store i8* %incdec.ptr78, i8** %entry_start, align 8, !dbg !2984
  %87 = load i8, i8* %86, align 1, !dbg !2986
  %conv79 = zext i8 %87 to i16, !dbg !2986
  %88 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %pp, align 8, !dbg !2987
  %red = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %88, i32 0, i32 0, !dbg !2988
  store i16 %conv79, i16* %red, align 2, !dbg !2989
  %89 = load i8*, i8** %entry_start, align 8, !dbg !2990
  %incdec.ptr80 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !2990
  store i8* %incdec.ptr80, i8** %entry_start, align 8, !dbg !2990
  %90 = load i8, i8* %89, align 1, !dbg !2991
  %conv81 = zext i8 %90 to i16, !dbg !2991
  %91 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %pp, align 8, !dbg !2992
  %green = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %91, i32 0, i32 1, !dbg !2993
  store i16 %conv81, i16* %green, align 2, !dbg !2994
  %92 = load i8*, i8** %entry_start, align 8, !dbg !2995
  %incdec.ptr82 = getelementptr inbounds i8, i8* %92, i32 1, !dbg !2995
  store i8* %incdec.ptr82, i8** %entry_start, align 8, !dbg !2995
  %93 = load i8, i8* %92, align 1, !dbg !2996
  %conv83 = zext i8 %93 to i16, !dbg !2996
  %94 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %pp, align 8, !dbg !2997
  %blue = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %94, i32 0, i32 2, !dbg !2998
  store i16 %conv83, i16* %blue, align 2, !dbg !2999
  %95 = load i8*, i8** %entry_start, align 8, !dbg !3000
  %incdec.ptr84 = getelementptr inbounds i8, i8* %95, i32 1, !dbg !3000
  store i8* %incdec.ptr84, i8** %entry_start, align 8, !dbg !3000
  %96 = load i8, i8* %95, align 1, !dbg !3001
  %conv85 = zext i8 %96 to i16, !dbg !3001
  %97 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %pp, align 8, !dbg !3002
  %alpha = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %97, i32 0, i32 3, !dbg !3003
  store i16 %conv85, i16* %alpha, align 2, !dbg !3004
  br label %if.end118, !dbg !3005

if.else86:                                        ; preds = %for.body70
  %98 = load i8*, i8** %entry_start, align 8, !dbg !3006
  %99 = load i8, i8* %98, align 1, !dbg !3006
  %conv87 = zext i8 %99 to i32, !dbg !3006
  %shl = shl i32 %conv87, 8, !dbg !3006
  %100 = load i8*, i8** %entry_start, align 8, !dbg !3006
  %add.ptr88 = getelementptr inbounds i8, i8* %100, i64 1, !dbg !3006
  %101 = load i8, i8* %add.ptr88, align 1, !dbg !3006
  %conv89 = zext i8 %101 to i32, !dbg !3006
  %add90 = add i32 %shl, %conv89, !dbg !3006
  %conv91 = trunc i32 %add90 to i16, !dbg !3006
  %102 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %pp, align 8, !dbg !3008
  %red92 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %102, i32 0, i32 0, !dbg !3009
  store i16 %conv91, i16* %red92, align 2, !dbg !3010
  %103 = load i8*, i8** %entry_start, align 8, !dbg !3011
  %add.ptr93 = getelementptr inbounds i8, i8* %103, i64 2, !dbg !3011
  store i8* %add.ptr93, i8** %entry_start, align 8, !dbg !3011
  %104 = load i8*, i8** %entry_start, align 8, !dbg !3012
  %105 = load i8, i8* %104, align 1, !dbg !3012
  %conv94 = zext i8 %105 to i32, !dbg !3012
  %shl95 = shl i32 %conv94, 8, !dbg !3012
  %106 = load i8*, i8** %entry_start, align 8, !dbg !3012
  %add.ptr96 = getelementptr inbounds i8, i8* %106, i64 1, !dbg !3012
  %107 = load i8, i8* %add.ptr96, align 1, !dbg !3012
  %conv97 = zext i8 %107 to i32, !dbg !3012
  %add98 = add i32 %shl95, %conv97, !dbg !3012
  %conv99 = trunc i32 %add98 to i16, !dbg !3012
  %108 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %pp, align 8, !dbg !3013
  %green100 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %108, i32 0, i32 1, !dbg !3014
  store i16 %conv99, i16* %green100, align 2, !dbg !3015
  %109 = load i8*, i8** %entry_start, align 8, !dbg !3016
  %add.ptr101 = getelementptr inbounds i8, i8* %109, i64 2, !dbg !3016
  store i8* %add.ptr101, i8** %entry_start, align 8, !dbg !3016
  %110 = load i8*, i8** %entry_start, align 8, !dbg !3017
  %111 = load i8, i8* %110, align 1, !dbg !3017
  %conv102 = zext i8 %111 to i32, !dbg !3017
  %shl103 = shl i32 %conv102, 8, !dbg !3017
  %112 = load i8*, i8** %entry_start, align 8, !dbg !3017
  %add.ptr104 = getelementptr inbounds i8, i8* %112, i64 1, !dbg !3017
  %113 = load i8, i8* %add.ptr104, align 1, !dbg !3017
  %conv105 = zext i8 %113 to i32, !dbg !3017
  %add106 = add i32 %shl103, %conv105, !dbg !3017
  %conv107 = trunc i32 %add106 to i16, !dbg !3017
  %114 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %pp, align 8, !dbg !3018
  %blue108 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %114, i32 0, i32 2, !dbg !3019
  store i16 %conv107, i16* %blue108, align 2, !dbg !3020
  %115 = load i8*, i8** %entry_start, align 8, !dbg !3021
  %add.ptr109 = getelementptr inbounds i8, i8* %115, i64 2, !dbg !3021
  store i8* %add.ptr109, i8** %entry_start, align 8, !dbg !3021
  %116 = load i8*, i8** %entry_start, align 8, !dbg !3022
  %117 = load i8, i8* %116, align 1, !dbg !3022
  %conv110 = zext i8 %117 to i32, !dbg !3022
  %shl111 = shl i32 %conv110, 8, !dbg !3022
  %118 = load i8*, i8** %entry_start, align 8, !dbg !3022
  %add.ptr112 = getelementptr inbounds i8, i8* %118, i64 1, !dbg !3022
  %119 = load i8, i8* %add.ptr112, align 1, !dbg !3022
  %conv113 = zext i8 %119 to i32, !dbg !3022
  %add114 = add i32 %shl111, %conv113, !dbg !3022
  %conv115 = trunc i32 %add114 to i16, !dbg !3022
  %120 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %pp, align 8, !dbg !3023
  %alpha116 = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %120, i32 0, i32 3, !dbg !3024
  store i16 %conv115, i16* %alpha116, align 2, !dbg !3025
  %121 = load i8*, i8** %entry_start, align 8, !dbg !3026
  %add.ptr117 = getelementptr inbounds i8, i8* %121, i64 2, !dbg !3026
  store i8* %add.ptr117, i8** %entry_start, align 8, !dbg !3026
  br label %if.end118

if.end118:                                        ; preds = %if.else86, %if.then77
  %122 = load i8*, i8** %entry_start, align 8, !dbg !3027
  %123 = load i8, i8* %122, align 1, !dbg !3027
  %conv119 = zext i8 %123 to i32, !dbg !3027
  %shl120 = shl i32 %conv119, 8, !dbg !3027
  %124 = load i8*, i8** %entry_start, align 8, !dbg !3027
  %add.ptr121 = getelementptr inbounds i8, i8* %124, i64 1, !dbg !3027
  %125 = load i8, i8* %add.ptr121, align 1, !dbg !3027
  %conv122 = zext i8 %125 to i32, !dbg !3027
  %add123 = add i32 %shl120, %conv122, !dbg !3027
  %conv124 = trunc i32 %add123 to i16, !dbg !3027
  %126 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %pp, align 8, !dbg !3028
  %frequency = getelementptr inbounds %struct.png_sPLT_entry_struct, %struct.png_sPLT_entry_struct* %126, i32 0, i32 4, !dbg !3029
  store i16 %conv124, i16* %frequency, align 2, !dbg !3030
  %127 = load i8*, i8** %entry_start, align 8, !dbg !3031
  %add.ptr125 = getelementptr inbounds i8, i8* %127, i64 2, !dbg !3031
  store i8* %add.ptr125, i8** %entry_start, align 8, !dbg !3031
  br label %for.inc126, !dbg !3032

for.inc126:                                       ; preds = %if.end118
  %128 = load i32, i32* %i, align 4, !dbg !3033
  %inc = add nsw i32 %128, 1, !dbg !3033
  store i32 %inc, i32* %i, align 4, !dbg !3033
  br label %for.cond66, !dbg !3034, !llvm.loop !3035

for.end127:                                       ; preds = %for.cond66
  %129 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3037
  %chunkdata128 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %129, i32 0, i32 141, !dbg !3038
  %130 = load i8*, i8** %chunkdata128, align 8, !dbg !3038
  %name = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %new_palette, i32 0, i32 0, !dbg !3039
  store i8* %130, i8** %name, align 8, !dbg !3040
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3041
  %132 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3042
  call void @png_set_sPLT(%struct.png_struct_def* %131, %struct.png_info_def* %132, %struct.png_sPLT_struct* %new_palette, i32 1), !dbg !3043
  %133 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3044
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3045
  %chunkdata129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 141, !dbg !3046
  %135 = load i8*, i8** %chunkdata129, align 8, !dbg !3046
  call void @png_free(%struct.png_struct_def* %133, i8* %135), !dbg !3047
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3048
  %chunkdata130 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %136, i32 0, i32 141, !dbg !3049
  store i8* null, i8** %chunkdata130, align 8, !dbg !3050
  %137 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3051
  %entries131 = getelementptr inbounds %struct.png_sPLT_struct, %struct.png_sPLT_struct* %new_palette, i32 0, i32 2, !dbg !3052
  %138 = load %struct.png_sPLT_entry_struct*, %struct.png_sPLT_entry_struct** %entries131, align 8, !dbg !3052
  %139 = bitcast %struct.png_sPLT_entry_struct* %138 to i8*, !dbg !3053
  call void @png_free(%struct.png_struct_def* %137, i8* %139), !dbg !3054
  br label %return, !dbg !3055

return:                                           ; preds = %for.end127, %if.then64, %if.then55, %if.then48, %if.then36, %if.then24, %if.then14, %if.then6, %if.then3
  ret void, !dbg !3055
}

declare dso_local void @png_set_sPLT(%struct.png_struct_def*, %struct.png_info_def*, %struct.png_sPLT_struct*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_tRNS(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !3056 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %readbuf = alloca [256 x i8], align 16
  %buf = alloca [2 x i8], align 1
  %buf31 = alloca [6 x i8], align 1
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !3057, metadata !DIExpression()), !dbg !3058
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !3059, metadata !DIExpression()), !dbg !3060
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !3061, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.declare(metadata [256 x i8]* %readbuf, metadata !3063, metadata !DIExpression()), !dbg !3065
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3066
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !3068
  %1 = load i32, i32* %mode, align 4, !dbg !3068
  %and = and i32 %1, 1, !dbg !3069
  %tobool = icmp ne i32 %and, 0, !dbg !3069
  br i1 %tobool, label %if.else, label %if.then, !dbg !3070

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3071
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !3072
  unreachable, !dbg !3072

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3073
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !3075
  %4 = load i32, i32* %mode1, align 4, !dbg !3075
  %and2 = and i32 %4, 4, !dbg !3076
  %tobool3 = icmp ne i32 %and2, 0, !dbg !3076
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !3077

if.then4:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3078
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64, i64 0, i64 0)), !dbg !3080
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3081
  %7 = load i32, i32* %length.addr, align 4, !dbg !3082
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !3083
  br label %return, !dbg !3084

if.else5:                                         ; preds = %if.else
  %8 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3085
  %cmp = icmp ne %struct.png_info_def* %8, null, !dbg !3087
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3088

land.lhs.true:                                    ; preds = %if.else5
  %9 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3089
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i32 0, i32 2, !dbg !3090
  %10 = load i32, i32* %valid, align 8, !dbg !3090
  %and6 = and i32 %10, 16, !dbg !3091
  %tobool7 = icmp ne i32 %and6, 0, !dbg !3091
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !3092

if.then8:                                         ; preds = %land.lhs.true
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3093
  call void @png_warning(%struct.png_struct_def* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i64 0, i64 0)), !dbg !3095
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3096
  %13 = load i32, i32* %length.addr, align 4, !dbg !3097
  %call9 = call i32 @png_crc_finish(%struct.png_struct_def* %12, i32 %13), !dbg !3098
  br label %return, !dbg !3099

if.end:                                           ; preds = %land.lhs.true, %if.else5
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3100
  %color_type = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 56, !dbg !3102
  %15 = load i8, i8* %color_type, align 1, !dbg !3102
  %conv = zext i8 %15 to i32, !dbg !3100
  %cmp12 = icmp eq i32 %conv, 0, !dbg !3103
  br i1 %cmp12, label %if.then14, label %if.else25, !dbg !3104

if.then14:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata [2 x i8]* %buf, metadata !3105, metadata !DIExpression()), !dbg !3109
  %16 = load i32, i32* %length.addr, align 4, !dbg !3110
  %cmp15 = icmp ne i32 %16, 2, !dbg !3112
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !3113

if.then17:                                        ; preds = %if.then14
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3114
  call void @png_warning(%struct.png_struct_def* %17, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.66, i64 0, i64 0)), !dbg !3116
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3117
  %19 = load i32, i32* %length.addr, align 4, !dbg !3118
  %call18 = call i32 @png_crc_finish(%struct.png_struct_def* %18, i32 %19), !dbg !3119
  br label %return, !dbg !3120

if.end19:                                         ; preds = %if.then14
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3121
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !3122
  call void @png_crc_read(%struct.png_struct_def* %20, i8* %arraydecay, i64 2), !dbg !3123
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3124
  %num_trans = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 50, !dbg !3125
  store i16 1, i16* %num_trans, align 8, !dbg !3126
  %arraydecay20 = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !3127
  %22 = load i8, i8* %arraydecay20, align 1, !dbg !3127
  %conv21 = zext i8 %22 to i32, !dbg !3127
  %shl = shl i32 %conv21, 8, !dbg !3127
  %arraydecay22 = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !3127
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay22, i64 1, !dbg !3127
  %23 = load i8, i8* %add.ptr, align 1, !dbg !3127
  %conv23 = zext i8 %23 to i32, !dbg !3127
  %add = add i32 %shl, %conv23, !dbg !3127
  %conv24 = trunc i32 %add to i16, !dbg !3127
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3128
  %trans_color = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 86, !dbg !3129
  %gray = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color, i32 0, i32 4, !dbg !3130
  store i16 %conv24, i16* %gray, align 8, !dbg !3131
  br label %if.end103, !dbg !3132

if.else25:                                        ; preds = %if.end11
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3133
  %color_type26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 56, !dbg !3135
  %26 = load i8, i8* %color_type26, align 1, !dbg !3135
  %conv27 = zext i8 %26 to i32, !dbg !3133
  %cmp28 = icmp eq i32 %conv27, 2, !dbg !3136
  br i1 %cmp28, label %if.then30, label %if.else71, !dbg !3137

if.then30:                                        ; preds = %if.else25
  call void @llvm.dbg.declare(metadata [6 x i8]* %buf31, metadata !3138, metadata !DIExpression()), !dbg !3142
  %27 = load i32, i32* %length.addr, align 4, !dbg !3143
  %cmp32 = icmp ne i32 %27, 6, !dbg !3145
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !3146

if.then34:                                        ; preds = %if.then30
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3147
  call void @png_warning(%struct.png_struct_def* %28, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.66, i64 0, i64 0)), !dbg !3149
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3150
  %30 = load i32, i32* %length.addr, align 4, !dbg !3151
  %call35 = call i32 @png_crc_finish(%struct.png_struct_def* %29, i32 %30), !dbg !3152
  br label %return, !dbg !3153

if.end36:                                         ; preds = %if.then30
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3154
  %arraydecay37 = getelementptr inbounds [6 x i8], [6 x i8]* %buf31, i64 0, i64 0, !dbg !3155
  %32 = load i32, i32* %length.addr, align 4, !dbg !3156
  %conv38 = zext i32 %32 to i64, !dbg !3157
  call void @png_crc_read(%struct.png_struct_def* %31, i8* %arraydecay37, i64 %conv38), !dbg !3158
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3159
  %num_trans39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 50, !dbg !3160
  store i16 1, i16* %num_trans39, align 8, !dbg !3161
  %arraydecay40 = getelementptr inbounds [6 x i8], [6 x i8]* %buf31, i64 0, i64 0, !dbg !3162
  %34 = load i8, i8* %arraydecay40, align 1, !dbg !3162
  %conv41 = zext i8 %34 to i32, !dbg !3162
  %shl42 = shl i32 %conv41, 8, !dbg !3162
  %arraydecay43 = getelementptr inbounds [6 x i8], [6 x i8]* %buf31, i64 0, i64 0, !dbg !3162
  %add.ptr44 = getelementptr inbounds i8, i8* %arraydecay43, i64 1, !dbg !3162
  %35 = load i8, i8* %add.ptr44, align 1, !dbg !3162
  %conv45 = zext i8 %35 to i32, !dbg !3162
  %add46 = add i32 %shl42, %conv45, !dbg !3162
  %conv47 = trunc i32 %add46 to i16, !dbg !3162
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3163
  %trans_color48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 86, !dbg !3164
  %red = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color48, i32 0, i32 1, !dbg !3165
  store i16 %conv47, i16* %red, align 2, !dbg !3166
  %arraydecay49 = getelementptr inbounds [6 x i8], [6 x i8]* %buf31, i64 0, i64 0, !dbg !3167
  %add.ptr50 = getelementptr inbounds i8, i8* %arraydecay49, i64 2, !dbg !3167
  %37 = load i8, i8* %add.ptr50, align 1, !dbg !3167
  %conv51 = zext i8 %37 to i32, !dbg !3167
  %shl52 = shl i32 %conv51, 8, !dbg !3167
  %arraydecay53 = getelementptr inbounds [6 x i8], [6 x i8]* %buf31, i64 0, i64 0, !dbg !3167
  %add.ptr54 = getelementptr inbounds i8, i8* %arraydecay53, i64 2, !dbg !3167
  %add.ptr55 = getelementptr inbounds i8, i8* %add.ptr54, i64 1, !dbg !3167
  %38 = load i8, i8* %add.ptr55, align 1, !dbg !3167
  %conv56 = zext i8 %38 to i32, !dbg !3167
  %add57 = add i32 %shl52, %conv56, !dbg !3167
  %conv58 = trunc i32 %add57 to i16, !dbg !3167
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3168
  %trans_color59 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 86, !dbg !3169
  %green = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color59, i32 0, i32 2, !dbg !3170
  store i16 %conv58, i16* %green, align 4, !dbg !3171
  %arraydecay60 = getelementptr inbounds [6 x i8], [6 x i8]* %buf31, i64 0, i64 0, !dbg !3172
  %add.ptr61 = getelementptr inbounds i8, i8* %arraydecay60, i64 4, !dbg !3172
  %40 = load i8, i8* %add.ptr61, align 1, !dbg !3172
  %conv62 = zext i8 %40 to i32, !dbg !3172
  %shl63 = shl i32 %conv62, 8, !dbg !3172
  %arraydecay64 = getelementptr inbounds [6 x i8], [6 x i8]* %buf31, i64 0, i64 0, !dbg !3172
  %add.ptr65 = getelementptr inbounds i8, i8* %arraydecay64, i64 4, !dbg !3172
  %add.ptr66 = getelementptr inbounds i8, i8* %add.ptr65, i64 1, !dbg !3172
  %41 = load i8, i8* %add.ptr66, align 1, !dbg !3172
  %conv67 = zext i8 %41 to i32, !dbg !3172
  %add68 = add i32 %shl63, %conv67, !dbg !3172
  %conv69 = trunc i32 %add68 to i16, !dbg !3172
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3173
  %trans_color70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 86, !dbg !3174
  %blue = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %trans_color70, i32 0, i32 3, !dbg !3175
  store i16 %conv69, i16* %blue, align 2, !dbg !3176
  br label %if.end102, !dbg !3177

if.else71:                                        ; preds = %if.else25
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3178
  %color_type72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 56, !dbg !3180
  %44 = load i8, i8* %color_type72, align 1, !dbg !3180
  %conv73 = zext i8 %44 to i32, !dbg !3178
  %cmp74 = icmp eq i32 %conv73, 3, !dbg !3181
  br i1 %cmp74, label %if.then76, label %if.else99, !dbg !3182

if.then76:                                        ; preds = %if.else71
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3183
  %mode77 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 13, !dbg !3186
  %46 = load i32, i32* %mode77, align 4, !dbg !3186
  %and78 = and i32 %46, 2, !dbg !3187
  %tobool79 = icmp ne i32 %and78, 0, !dbg !3187
  br i1 %tobool79, label %if.end81, label %if.then80, !dbg !3188

if.then80:                                        ; preds = %if.then76
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3189
  call void @png_warning(%struct.png_struct_def* %47, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0)), !dbg !3191
  br label %if.end81, !dbg !3192

if.end81:                                         ; preds = %if.then80, %if.then76
  %48 = load i32, i32* %length.addr, align 4, !dbg !3193
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3195
  %num_palette = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 48, !dbg !3196
  %50 = load i16, i16* %num_palette, align 8, !dbg !3196
  %conv82 = zext i16 %50 to i32, !dbg !3197
  %cmp83 = icmp ugt i32 %48, %conv82, !dbg !3198
  br i1 %cmp83, label %if.then87, label %lor.lhs.false, !dbg !3199

lor.lhs.false:                                    ; preds = %if.end81
  %51 = load i32, i32* %length.addr, align 4, !dbg !3200
  %cmp85 = icmp ugt i32 %51, 256, !dbg !3201
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !3202

if.then87:                                        ; preds = %lor.lhs.false, %if.end81
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3203
  call void @png_warning(%struct.png_struct_def* %52, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.66, i64 0, i64 0)), !dbg !3205
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3206
  %54 = load i32, i32* %length.addr, align 4, !dbg !3207
  %call88 = call i32 @png_crc_finish(%struct.png_struct_def* %53, i32 %54), !dbg !3208
  br label %return, !dbg !3209

if.end89:                                         ; preds = %lor.lhs.false
  %55 = load i32, i32* %length.addr, align 4, !dbg !3210
  %cmp90 = icmp eq i32 %55, 0, !dbg !3212
  br i1 %cmp90, label %if.then92, label %if.end94, !dbg !3213

if.then92:                                        ; preds = %if.end89
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3214
  call void @png_warning(%struct.png_struct_def* %56, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.68, i64 0, i64 0)), !dbg !3216
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3217
  %58 = load i32, i32* %length.addr, align 4, !dbg !3218
  %call93 = call i32 @png_crc_finish(%struct.png_struct_def* %57, i32 %58), !dbg !3219
  br label %return, !dbg !3220

if.end94:                                         ; preds = %if.end89
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3221
  %arraydecay95 = getelementptr inbounds [256 x i8], [256 x i8]* %readbuf, i64 0, i64 0, !dbg !3222
  %60 = load i32, i32* %length.addr, align 4, !dbg !3223
  %conv96 = zext i32 %60 to i64, !dbg !3224
  call void @png_crc_read(%struct.png_struct_def* %59, i8* %arraydecay95, i64 %conv96), !dbg !3225
  %61 = load i32, i32* %length.addr, align 4, !dbg !3226
  %conv97 = trunc i32 %61 to i16, !dbg !3227
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3228
  %num_trans98 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %62, i32 0, i32 50, !dbg !3229
  store i16 %conv97, i16* %num_trans98, align 8, !dbg !3230
  br label %if.end101, !dbg !3231

if.else99:                                        ; preds = %if.else71
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3232
  call void @png_warning(%struct.png_struct_def* %63, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.69, i64 0, i64 0)), !dbg !3234
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3235
  %65 = load i32, i32* %length.addr, align 4, !dbg !3236
  %call100 = call i32 @png_crc_finish(%struct.png_struct_def* %64, i32 %65), !dbg !3237
  br label %return, !dbg !3238

if.end101:                                        ; preds = %if.end94
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end36
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.end19
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3239
  %call104 = call i32 @png_crc_finish(%struct.png_struct_def* %66, i32 0), !dbg !3241
  %tobool105 = icmp ne i32 %call104, 0, !dbg !3241
  br i1 %tobool105, label %if.then106, label %if.end108, !dbg !3242

if.then106:                                       ; preds = %if.end103
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3243
  %num_trans107 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %67, i32 0, i32 50, !dbg !3245
  store i16 0, i16* %num_trans107, align 8, !dbg !3246
  br label %return, !dbg !3247

if.end108:                                        ; preds = %if.end103
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3248
  %69 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3249
  %arraydecay109 = getelementptr inbounds [256 x i8], [256 x i8]* %readbuf, i64 0, i64 0, !dbg !3250
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3251
  %num_trans110 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %70, i32 0, i32 50, !dbg !3252
  %71 = load i16, i16* %num_trans110, align 8, !dbg !3252
  %conv111 = zext i16 %71 to i32, !dbg !3251
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3253
  %trans_color112 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %72, i32 0, i32 86, !dbg !3254
  call void @png_set_tRNS(%struct.png_struct_def* %68, %struct.png_info_def* %69, i8* %arraydecay109, i32 %conv111, %struct.png_color_16_struct* %trans_color112), !dbg !3255
  br label %return, !dbg !3256

return:                                           ; preds = %if.end108, %if.then106, %if.else99, %if.then92, %if.then87, %if.then34, %if.then17, %if.then8, %if.then4
  ret void, !dbg !3256
}

declare dso_local void @png_set_tRNS(%struct.png_struct_def*, %struct.png_info_def*, i8*, i32, %struct.png_color_16_struct*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_bKGD(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !3257 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %truelen = alloca i64, align 8
  %buf = alloca [6 x i8], align 1
  %background = alloca %struct.png_color_16_struct, align 2
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !3258, metadata !DIExpression()), !dbg !3259
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !3260, metadata !DIExpression()), !dbg !3261
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !3262, metadata !DIExpression()), !dbg !3263
  call void @llvm.dbg.declare(metadata i64* %truelen, metadata !3264, metadata !DIExpression()), !dbg !3265
  call void @llvm.dbg.declare(metadata [6 x i8]* %buf, metadata !3266, metadata !DIExpression()), !dbg !3267
  call void @llvm.dbg.declare(metadata %struct.png_color_16_struct* %background, metadata !3268, metadata !DIExpression()), !dbg !3269
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3270
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !3272
  %1 = load i32, i32* %mode, align 4, !dbg !3272
  %and = and i32 %1, 1, !dbg !3273
  %tobool = icmp ne i32 %and, 0, !dbg !3273
  br i1 %tobool, label %if.else, label %if.then, !dbg !3274

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3275
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.70, i64 0, i64 0)) #6, !dbg !3276
  unreachable, !dbg !3276

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3277
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !3279
  %4 = load i32, i32* %mode1, align 4, !dbg !3279
  %and2 = and i32 %4, 4, !dbg !3280
  %tobool3 = icmp ne i32 %and2, 0, !dbg !3280
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !3281

if.then4:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3282
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71, i64 0, i64 0)), !dbg !3284
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3285
  %7 = load i32, i32* %length.addr, align 4, !dbg !3286
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !3287
  br label %return, !dbg !3288

if.else5:                                         ; preds = %if.else
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3289
  %color_type = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 56, !dbg !3291
  %9 = load i8, i8* %color_type, align 1, !dbg !3291
  %conv = zext i8 %9 to i32, !dbg !3289
  %cmp = icmp eq i32 %conv, 3, !dbg !3292
  br i1 %cmp, label %land.lhs.true, label %if.else12, !dbg !3293

land.lhs.true:                                    ; preds = %if.else5
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3294
  %mode7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 13, !dbg !3295
  %11 = load i32, i32* %mode7, align 4, !dbg !3295
  %and8 = and i32 %11, 2, !dbg !3296
  %tobool9 = icmp ne i32 %and8, 0, !dbg !3296
  br i1 %tobool9, label %if.else12, label %if.then10, !dbg !3297

if.then10:                                        ; preds = %land.lhs.true
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3298
  call void @png_warning(%struct.png_struct_def* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i64 0, i64 0)), !dbg !3300
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3301
  %14 = load i32, i32* %length.addr, align 4, !dbg !3302
  %call11 = call i32 @png_crc_finish(%struct.png_struct_def* %13, i32 %14), !dbg !3303
  br label %return, !dbg !3304

if.else12:                                        ; preds = %land.lhs.true, %if.else5
  %15 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3305
  %cmp13 = icmp ne %struct.png_info_def* %15, null, !dbg !3307
  br i1 %cmp13, label %land.lhs.true15, label %if.end, !dbg !3308

land.lhs.true15:                                  ; preds = %if.else12
  %16 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3309
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %16, i32 0, i32 2, !dbg !3310
  %17 = load i32, i32* %valid, align 8, !dbg !3310
  %and16 = and i32 %17, 32, !dbg !3311
  %tobool17 = icmp ne i32 %and16, 0, !dbg !3311
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !3312

if.then18:                                        ; preds = %land.lhs.true15
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3313
  call void @png_warning(%struct.png_struct_def* %18, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.73, i64 0, i64 0)), !dbg !3315
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3316
  %20 = load i32, i32* %length.addr, align 4, !dbg !3317
  %call19 = call i32 @png_crc_finish(%struct.png_struct_def* %19, i32 %20), !dbg !3318
  br label %return, !dbg !3319

if.end:                                           ; preds = %land.lhs.true15, %if.else12
  br label %if.end20

if.end20:                                         ; preds = %if.end
  br label %if.end21

if.end21:                                         ; preds = %if.end20
  br label %if.end22

if.end22:                                         ; preds = %if.end21
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3320
  %color_type23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 56, !dbg !3322
  %22 = load i8, i8* %color_type23, align 1, !dbg !3322
  %conv24 = zext i8 %22 to i32, !dbg !3320
  %cmp25 = icmp eq i32 %conv24, 3, !dbg !3323
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !3324

if.then27:                                        ; preds = %if.end22
  store i64 1, i64* %truelen, align 8, !dbg !3325
  br label %if.end36, !dbg !3326

if.else28:                                        ; preds = %if.end22
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3327
  %color_type29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 56, !dbg !3329
  %24 = load i8, i8* %color_type29, align 1, !dbg !3329
  %conv30 = zext i8 %24 to i32, !dbg !3327
  %and31 = and i32 %conv30, 2, !dbg !3330
  %tobool32 = icmp ne i32 %and31, 0, !dbg !3330
  br i1 %tobool32, label %if.then33, label %if.else34, !dbg !3331

if.then33:                                        ; preds = %if.else28
  store i64 6, i64* %truelen, align 8, !dbg !3332
  br label %if.end35, !dbg !3333

if.else34:                                        ; preds = %if.else28
  store i64 2, i64* %truelen, align 8, !dbg !3334
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.then33
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then27
  %25 = load i32, i32* %length.addr, align 4, !dbg !3335
  %conv37 = zext i32 %25 to i64, !dbg !3335
  %26 = load i64, i64* %truelen, align 8, !dbg !3337
  %cmp38 = icmp ne i64 %conv37, %26, !dbg !3338
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !3339

if.then40:                                        ; preds = %if.end36
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3340
  call void @png_warning(%struct.png_struct_def* %27, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.74, i64 0, i64 0)), !dbg !3342
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3343
  %29 = load i32, i32* %length.addr, align 4, !dbg !3344
  %call41 = call i32 @png_crc_finish(%struct.png_struct_def* %28, i32 %29), !dbg !3345
  br label %return, !dbg !3346

if.end42:                                         ; preds = %if.end36
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3347
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3348
  %31 = load i64, i64* %truelen, align 8, !dbg !3349
  call void @png_crc_read(%struct.png_struct_def* %30, i8* %arraydecay, i64 %31), !dbg !3350
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3351
  %call43 = call i32 @png_crc_finish(%struct.png_struct_def* %32, i32 0), !dbg !3353
  %tobool44 = icmp ne i32 %call43, 0, !dbg !3353
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !3354

if.then45:                                        ; preds = %if.end42
  br label %return, !dbg !3355

if.end46:                                         ; preds = %if.end42
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3356
  %color_type47 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 56, !dbg !3358
  %34 = load i8, i8* %color_type47, align 1, !dbg !3358
  %conv48 = zext i8 %34 to i32, !dbg !3356
  %cmp49 = icmp eq i32 %conv48, 3, !dbg !3359
  br i1 %cmp49, label %if.then51, label %if.else86, !dbg !3360

if.then51:                                        ; preds = %if.end46
  %arrayidx = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3361
  %35 = load i8, i8* %arrayidx, align 1, !dbg !3361
  %index = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 0, !dbg !3363
  store i8 %35, i8* %index, align 2, !dbg !3364
  %36 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3365
  %tobool52 = icmp ne %struct.png_info_def* %36, null, !dbg !3365
  br i1 %tobool52, label %land.lhs.true53, label %if.else81, !dbg !3367

land.lhs.true53:                                  ; preds = %if.then51
  %37 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3368
  %num_palette = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %37, i32 0, i32 5, !dbg !3369
  %38 = load i16, i16* %num_palette, align 8, !dbg !3369
  %conv54 = zext i16 %38 to i32, !dbg !3368
  %tobool55 = icmp ne i32 %conv54, 0, !dbg !3368
  br i1 %tobool55, label %if.then56, label %if.else81, !dbg !3370

if.then56:                                        ; preds = %land.lhs.true53
  %arrayidx57 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3371
  %39 = load i8, i8* %arrayidx57, align 1, !dbg !3371
  %conv58 = zext i8 %39 to i32, !dbg !3371
  %40 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3374
  %num_palette59 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %40, i32 0, i32 5, !dbg !3375
  %41 = load i16, i16* %num_palette59, align 8, !dbg !3375
  %conv60 = zext i16 %41 to i32, !dbg !3374
  %cmp61 = icmp sge i32 %conv58, %conv60, !dbg !3376
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !3377

if.then63:                                        ; preds = %if.then56
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3378
  call void @png_warning(%struct.png_struct_def* %42, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.75, i64 0, i64 0)), !dbg !3380
  br label %return, !dbg !3381

if.end64:                                         ; preds = %if.then56
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3382
  %palette = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 47, !dbg !3383
  %44 = load %struct.png_color_struct*, %struct.png_color_struct** %palette, align 8, !dbg !3383
  %arrayidx65 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3384
  %45 = load i8, i8* %arrayidx65, align 1, !dbg !3384
  %idxprom = zext i8 %45 to i64, !dbg !3382
  %arrayidx66 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %44, i64 %idxprom, !dbg !3382
  %red = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx66, i32 0, i32 0, !dbg !3385
  %46 = load i8, i8* %red, align 1, !dbg !3385
  %conv67 = zext i8 %46 to i16, !dbg !3386
  %red68 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 1, !dbg !3387
  store i16 %conv67, i16* %red68, align 2, !dbg !3388
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3389
  %palette69 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 47, !dbg !3390
  %48 = load %struct.png_color_struct*, %struct.png_color_struct** %palette69, align 8, !dbg !3390
  %arrayidx70 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3391
  %49 = load i8, i8* %arrayidx70, align 1, !dbg !3391
  %idxprom71 = zext i8 %49 to i64, !dbg !3389
  %arrayidx72 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %48, i64 %idxprom71, !dbg !3389
  %green = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx72, i32 0, i32 1, !dbg !3392
  %50 = load i8, i8* %green, align 1, !dbg !3392
  %conv73 = zext i8 %50 to i16, !dbg !3393
  %green74 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 2, !dbg !3394
  store i16 %conv73, i16* %green74, align 2, !dbg !3395
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3396
  %palette75 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 47, !dbg !3397
  %52 = load %struct.png_color_struct*, %struct.png_color_struct** %palette75, align 8, !dbg !3397
  %arrayidx76 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3398
  %53 = load i8, i8* %arrayidx76, align 1, !dbg !3398
  %idxprom77 = zext i8 %53 to i64, !dbg !3396
  %arrayidx78 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %52, i64 %idxprom77, !dbg !3396
  %blue = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %arrayidx78, i32 0, i32 2, !dbg !3399
  %54 = load i8, i8* %blue, align 1, !dbg !3399
  %conv79 = zext i8 %54 to i16, !dbg !3400
  %blue80 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 3, !dbg !3401
  store i16 %conv79, i16* %blue80, align 2, !dbg !3402
  br label %if.end85, !dbg !3403

if.else81:                                        ; preds = %land.lhs.true53, %if.then51
  %blue82 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 3, !dbg !3404
  store i16 0, i16* %blue82, align 2, !dbg !3405
  %green83 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 2, !dbg !3406
  store i16 0, i16* %green83, align 2, !dbg !3407
  %red84 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 1, !dbg !3408
  store i16 0, i16* %red84, align 2, !dbg !3409
  br label %if.end85

if.end85:                                         ; preds = %if.else81, %if.end64
  %gray = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 4, !dbg !3410
  store i16 0, i16* %gray, align 2, !dbg !3411
  br label %if.end137, !dbg !3412

if.else86:                                        ; preds = %if.end46
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3413
  %color_type87 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %55, i32 0, i32 56, !dbg !3415
  %56 = load i8, i8* %color_type87, align 1, !dbg !3415
  %conv88 = zext i8 %56 to i32, !dbg !3413
  %and89 = and i32 %conv88, 2, !dbg !3416
  %tobool90 = icmp ne i32 %and89, 0, !dbg !3416
  br i1 %tobool90, label %if.else102, label %if.then91, !dbg !3417

if.then91:                                        ; preds = %if.else86
  %index92 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 0, !dbg !3418
  store i8 0, i8* %index92, align 2, !dbg !3420
  %arraydecay93 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3421
  %57 = load i8, i8* %arraydecay93, align 1, !dbg !3421
  %conv94 = zext i8 %57 to i32, !dbg !3421
  %shl = shl i32 %conv94, 8, !dbg !3421
  %arraydecay95 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3421
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay95, i64 1, !dbg !3421
  %58 = load i8, i8* %add.ptr, align 1, !dbg !3421
  %conv96 = zext i8 %58 to i32, !dbg !3421
  %add = add i32 %shl, %conv96, !dbg !3421
  %conv97 = trunc i32 %add to i16, !dbg !3421
  %gray98 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 4, !dbg !3422
  store i16 %conv97, i16* %gray98, align 2, !dbg !3423
  %blue99 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 3, !dbg !3424
  store i16 %conv97, i16* %blue99, align 2, !dbg !3425
  %green100 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 2, !dbg !3426
  store i16 %conv97, i16* %green100, align 2, !dbg !3427
  %red101 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 1, !dbg !3428
  store i16 %conv97, i16* %red101, align 2, !dbg !3429
  br label %if.end136, !dbg !3430

if.else102:                                       ; preds = %if.else86
  %index103 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 0, !dbg !3431
  store i8 0, i8* %index103, align 2, !dbg !3433
  %arraydecay104 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3434
  %59 = load i8, i8* %arraydecay104, align 1, !dbg !3434
  %conv105 = zext i8 %59 to i32, !dbg !3434
  %shl106 = shl i32 %conv105, 8, !dbg !3434
  %arraydecay107 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3434
  %add.ptr108 = getelementptr inbounds i8, i8* %arraydecay107, i64 1, !dbg !3434
  %60 = load i8, i8* %add.ptr108, align 1, !dbg !3434
  %conv109 = zext i8 %60 to i32, !dbg !3434
  %add110 = add i32 %shl106, %conv109, !dbg !3434
  %conv111 = trunc i32 %add110 to i16, !dbg !3434
  %red112 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 1, !dbg !3435
  store i16 %conv111, i16* %red112, align 2, !dbg !3436
  %arraydecay113 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3437
  %add.ptr114 = getelementptr inbounds i8, i8* %arraydecay113, i64 2, !dbg !3437
  %61 = load i8, i8* %add.ptr114, align 1, !dbg !3437
  %conv115 = zext i8 %61 to i32, !dbg !3437
  %shl116 = shl i32 %conv115, 8, !dbg !3437
  %arraydecay117 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3437
  %add.ptr118 = getelementptr inbounds i8, i8* %arraydecay117, i64 2, !dbg !3437
  %add.ptr119 = getelementptr inbounds i8, i8* %add.ptr118, i64 1, !dbg !3437
  %62 = load i8, i8* %add.ptr119, align 1, !dbg !3437
  %conv120 = zext i8 %62 to i32, !dbg !3437
  %add121 = add i32 %shl116, %conv120, !dbg !3437
  %conv122 = trunc i32 %add121 to i16, !dbg !3437
  %green123 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 2, !dbg !3438
  store i16 %conv122, i16* %green123, align 2, !dbg !3439
  %arraydecay124 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3440
  %add.ptr125 = getelementptr inbounds i8, i8* %arraydecay124, i64 4, !dbg !3440
  %63 = load i8, i8* %add.ptr125, align 1, !dbg !3440
  %conv126 = zext i8 %63 to i32, !dbg !3440
  %shl127 = shl i32 %conv126, 8, !dbg !3440
  %arraydecay128 = getelementptr inbounds [6 x i8], [6 x i8]* %buf, i64 0, i64 0, !dbg !3440
  %add.ptr129 = getelementptr inbounds i8, i8* %arraydecay128, i64 4, !dbg !3440
  %add.ptr130 = getelementptr inbounds i8, i8* %add.ptr129, i64 1, !dbg !3440
  %64 = load i8, i8* %add.ptr130, align 1, !dbg !3440
  %conv131 = zext i8 %64 to i32, !dbg !3440
  %add132 = add i32 %shl127, %conv131, !dbg !3440
  %conv133 = trunc i32 %add132 to i16, !dbg !3440
  %blue134 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 3, !dbg !3441
  store i16 %conv133, i16* %blue134, align 2, !dbg !3442
  %gray135 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %background, i32 0, i32 4, !dbg !3443
  store i16 0, i16* %gray135, align 2, !dbg !3444
  br label %if.end136

if.end136:                                        ; preds = %if.else102, %if.then91
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end85
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3445
  %66 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3446
  call void @png_set_bKGD(%struct.png_struct_def* %65, %struct.png_info_def* %66, %struct.png_color_16_struct* %background), !dbg !3447
  br label %return, !dbg !3448

return:                                           ; preds = %if.end137, %if.then63, %if.then45, %if.then40, %if.then18, %if.then10, %if.then4
  ret void, !dbg !3448
}

declare dso_local void @png_set_bKGD(%struct.png_struct_def*, %struct.png_info_def*, %struct.png_color_16_struct*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_hIST(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !3449 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %num = alloca i32, align 4
  %i = alloca i32, align 4
  %readbuf = alloca [256 x i16], align 16
  %buf = alloca [2 x i8], align 1
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !3450, metadata !DIExpression()), !dbg !3451
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !3452, metadata !DIExpression()), !dbg !3453
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !3454, metadata !DIExpression()), !dbg !3455
  call void @llvm.dbg.declare(metadata i32* %num, metadata !3456, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3458, metadata !DIExpression()), !dbg !3459
  call void @llvm.dbg.declare(metadata [256 x i16]* %readbuf, metadata !3460, metadata !DIExpression()), !dbg !3462
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3463
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !3465
  %1 = load i32, i32* %mode, align 4, !dbg !3465
  %and = and i32 %1, 1, !dbg !3466
  %tobool = icmp ne i32 %and, 0, !dbg !3466
  br i1 %tobool, label %if.else, label %if.then, !dbg !3467

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3468
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.76, i64 0, i64 0)) #6, !dbg !3469
  unreachable, !dbg !3469

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3470
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !3472
  %4 = load i32, i32* %mode1, align 4, !dbg !3472
  %and2 = and i32 %4, 4, !dbg !3473
  %tobool3 = icmp ne i32 %and2, 0, !dbg !3473
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !3474

if.then4:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3475
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.77, i64 0, i64 0)), !dbg !3477
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3478
  %7 = load i32, i32* %length.addr, align 4, !dbg !3479
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !3480
  br label %return, !dbg !3481

if.else5:                                         ; preds = %if.else
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3482
  %mode6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 13, !dbg !3484
  %9 = load i32, i32* %mode6, align 4, !dbg !3484
  %and7 = and i32 %9, 2, !dbg !3485
  %tobool8 = icmp ne i32 %and7, 0, !dbg !3485
  br i1 %tobool8, label %if.else11, label %if.then9, !dbg !3486

if.then9:                                         ; preds = %if.else5
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3487
  call void @png_warning(%struct.png_struct_def* %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.78, i64 0, i64 0)), !dbg !3489
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3490
  %12 = load i32, i32* %length.addr, align 4, !dbg !3491
  %call10 = call i32 @png_crc_finish(%struct.png_struct_def* %11, i32 %12), !dbg !3492
  br label %return, !dbg !3493

if.else11:                                        ; preds = %if.else5
  %13 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3494
  %cmp = icmp ne %struct.png_info_def* %13, null, !dbg !3496
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3497

land.lhs.true:                                    ; preds = %if.else11
  %14 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3498
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %14, i32 0, i32 2, !dbg !3499
  %15 = load i32, i32* %valid, align 8, !dbg !3499
  %and12 = and i32 %15, 64, !dbg !3500
  %tobool13 = icmp ne i32 %and12, 0, !dbg !3500
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !3501

if.then14:                                        ; preds = %land.lhs.true
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3502
  call void @png_warning(%struct.png_struct_def* %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.79, i64 0, i64 0)), !dbg !3504
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3505
  %18 = load i32, i32* %length.addr, align 4, !dbg !3506
  %call15 = call i32 @png_crc_finish(%struct.png_struct_def* %17, i32 %18), !dbg !3507
  br label %return, !dbg !3508

if.end:                                           ; preds = %land.lhs.true, %if.else11
  br label %if.end16

if.end16:                                         ; preds = %if.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18

if.end18:                                         ; preds = %if.end17
  %19 = load i32, i32* %length.addr, align 4, !dbg !3509
  %cmp19 = icmp ugt i32 %19, 512, !dbg !3511
  br i1 %cmp19, label %if.then22, label %lor.lhs.false, !dbg !3512

lor.lhs.false:                                    ; preds = %if.end18
  %20 = load i32, i32* %length.addr, align 4, !dbg !3513
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3514
  %num_palette = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 48, !dbg !3515
  %22 = load i16, i16* %num_palette, align 8, !dbg !3515
  %conv = zext i16 %22 to i32, !dbg !3514
  %mul = mul nsw i32 2, %conv, !dbg !3516
  %cmp20 = icmp ne i32 %20, %mul, !dbg !3517
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !3518

if.then22:                                        ; preds = %lor.lhs.false, %if.end18
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3519
  call void @png_warning(%struct.png_struct_def* %23, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.80, i64 0, i64 0)), !dbg !3521
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3522
  %25 = load i32, i32* %length.addr, align 4, !dbg !3523
  %call23 = call i32 @png_crc_finish(%struct.png_struct_def* %24, i32 %25), !dbg !3524
  br label %return, !dbg !3525

if.end24:                                         ; preds = %lor.lhs.false
  %26 = load i32, i32* %length.addr, align 4, !dbg !3526
  %div = udiv i32 %26, 2, !dbg !3527
  store i32 %div, i32* %num, align 4, !dbg !3528
  store i32 0, i32* %i, align 4, !dbg !3529
  br label %for.cond, !dbg !3531

for.cond:                                         ; preds = %for.inc, %if.end24
  %27 = load i32, i32* %i, align 4, !dbg !3532
  %28 = load i32, i32* %num, align 4, !dbg !3534
  %cmp25 = icmp ult i32 %27, %28, !dbg !3535
  br i1 %cmp25, label %for.body, label %for.end, !dbg !3536

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [2 x i8]* %buf, metadata !3537, metadata !DIExpression()), !dbg !3539
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3540
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !3541
  call void @png_crc_read(%struct.png_struct_def* %29, i8* %arraydecay, i64 2), !dbg !3542
  %arraydecay27 = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !3543
  %30 = load i8, i8* %arraydecay27, align 1, !dbg !3543
  %conv28 = zext i8 %30 to i32, !dbg !3543
  %shl = shl i32 %conv28, 8, !dbg !3543
  %arraydecay29 = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !3543
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay29, i64 1, !dbg !3543
  %31 = load i8, i8* %add.ptr, align 1, !dbg !3543
  %conv30 = zext i8 %31 to i32, !dbg !3543
  %add = add i32 %shl, %conv30, !dbg !3543
  %conv31 = trunc i32 %add to i16, !dbg !3543
  %32 = load i32, i32* %i, align 4, !dbg !3544
  %idxprom = zext i32 %32 to i64, !dbg !3545
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* %readbuf, i64 0, i64 %idxprom, !dbg !3545
  store i16 %conv31, i16* %arrayidx, align 2, !dbg !3546
  br label %for.inc, !dbg !3547

for.inc:                                          ; preds = %for.body
  %33 = load i32, i32* %i, align 4, !dbg !3548
  %inc = add i32 %33, 1, !dbg !3548
  store i32 %inc, i32* %i, align 4, !dbg !3548
  br label %for.cond, !dbg !3549, !llvm.loop !3550

for.end:                                          ; preds = %for.cond
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3552
  %call32 = call i32 @png_crc_finish(%struct.png_struct_def* %34, i32 0), !dbg !3554
  %tobool33 = icmp ne i32 %call32, 0, !dbg !3554
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !3555

if.then34:                                        ; preds = %for.end
  br label %return, !dbg !3556

if.end35:                                         ; preds = %for.end
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3557
  %36 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3558
  %arraydecay36 = getelementptr inbounds [256 x i16], [256 x i16]* %readbuf, i64 0, i64 0, !dbg !3559
  call void @png_set_hIST(%struct.png_struct_def* %35, %struct.png_info_def* %36, i16* %arraydecay36), !dbg !3560
  br label %return, !dbg !3561

return:                                           ; preds = %if.end35, %if.then34, %if.then22, %if.then14, %if.then9, %if.then4
  ret void, !dbg !3561
}

declare dso_local void @png_set_hIST(%struct.png_struct_def*, %struct.png_info_def*, i16*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_pHYs(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !3562 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %buf = alloca [9 x i8], align 1
  %res_x = alloca i32, align 4
  %res_y = alloca i32, align 4
  %unit_type = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !3563, metadata !DIExpression()), !dbg !3564
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !3565, metadata !DIExpression()), !dbg !3566
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !3567, metadata !DIExpression()), !dbg !3568
  call void @llvm.dbg.declare(metadata [9 x i8]* %buf, metadata !3569, metadata !DIExpression()), !dbg !3573
  call void @llvm.dbg.declare(metadata i32* %res_x, metadata !3574, metadata !DIExpression()), !dbg !3575
  call void @llvm.dbg.declare(metadata i32* %res_y, metadata !3576, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.declare(metadata i32* %unit_type, metadata !3578, metadata !DIExpression()), !dbg !3579
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3580
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !3582
  %1 = load i32, i32* %mode, align 4, !dbg !3582
  %and = and i32 %1, 1, !dbg !3583
  %tobool = icmp ne i32 %and, 0, !dbg !3583
  br i1 %tobool, label %if.else, label %if.then, !dbg !3584

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3585
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.81, i64 0, i64 0)) #6, !dbg !3586
  unreachable, !dbg !3586

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3587
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !3589
  %4 = load i32, i32* %mode1, align 4, !dbg !3589
  %and2 = and i32 %4, 4, !dbg !3590
  %tobool3 = icmp ne i32 %and2, 0, !dbg !3590
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !3591

if.then4:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3592
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.82, i64 0, i64 0)), !dbg !3594
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3595
  %7 = load i32, i32* %length.addr, align 4, !dbg !3596
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !3597
  br label %return, !dbg !3598

if.else5:                                         ; preds = %if.else
  %8 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3599
  %cmp = icmp ne %struct.png_info_def* %8, null, !dbg !3601
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3602

land.lhs.true:                                    ; preds = %if.else5
  %9 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3603
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i32 0, i32 2, !dbg !3604
  %10 = load i32, i32* %valid, align 8, !dbg !3604
  %and6 = and i32 %10, 128, !dbg !3605
  %tobool7 = icmp ne i32 %and6, 0, !dbg !3605
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !3606

if.then8:                                         ; preds = %land.lhs.true
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3607
  call void @png_warning(%struct.png_struct_def* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.83, i64 0, i64 0)), !dbg !3609
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3610
  %13 = load i32, i32* %length.addr, align 4, !dbg !3611
  %call9 = call i32 @png_crc_finish(%struct.png_struct_def* %12, i32 %13), !dbg !3612
  br label %return, !dbg !3613

if.end:                                           ; preds = %land.lhs.true, %if.else5
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  %14 = load i32, i32* %length.addr, align 4, !dbg !3614
  %cmp12 = icmp ne i32 %14, 9, !dbg !3616
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !3617

if.then13:                                        ; preds = %if.end11
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3618
  call void @png_warning(%struct.png_struct_def* %15, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.84, i64 0, i64 0)), !dbg !3620
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3621
  %17 = load i32, i32* %length.addr, align 4, !dbg !3622
  %call14 = call i32 @png_crc_finish(%struct.png_struct_def* %16, i32 %17), !dbg !3623
  br label %return, !dbg !3624

if.end15:                                         ; preds = %if.end11
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3625
  %arraydecay = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3626
  call void @png_crc_read(%struct.png_struct_def* %18, i8* %arraydecay, i64 9), !dbg !3627
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3628
  %call16 = call i32 @png_crc_finish(%struct.png_struct_def* %19, i32 0), !dbg !3630
  %tobool17 = icmp ne i32 %call16, 0, !dbg !3630
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !3631

if.then18:                                        ; preds = %if.end15
  br label %return, !dbg !3632

if.end19:                                         ; preds = %if.end15
  %arraydecay20 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3633
  %20 = load i8, i8* %arraydecay20, align 1, !dbg !3633
  %conv = zext i8 %20 to i32, !dbg !3633
  %shl = shl i32 %conv, 24, !dbg !3633
  %arraydecay21 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3633
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay21, i64 1, !dbg !3633
  %21 = load i8, i8* %add.ptr, align 1, !dbg !3633
  %conv22 = zext i8 %21 to i32, !dbg !3633
  %shl23 = shl i32 %conv22, 16, !dbg !3633
  %add = add i32 %shl, %shl23, !dbg !3633
  %arraydecay24 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3633
  %add.ptr25 = getelementptr inbounds i8, i8* %arraydecay24, i64 2, !dbg !3633
  %22 = load i8, i8* %add.ptr25, align 1, !dbg !3633
  %conv26 = zext i8 %22 to i32, !dbg !3633
  %shl27 = shl i32 %conv26, 8, !dbg !3633
  %add28 = add i32 %add, %shl27, !dbg !3633
  %arraydecay29 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3633
  %add.ptr30 = getelementptr inbounds i8, i8* %arraydecay29, i64 3, !dbg !3633
  %23 = load i8, i8* %add.ptr30, align 1, !dbg !3633
  %conv31 = zext i8 %23 to i32, !dbg !3633
  %add32 = add i32 %add28, %conv31, !dbg !3633
  store i32 %add32, i32* %res_x, align 4, !dbg !3634
  %arraydecay33 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3635
  %add.ptr34 = getelementptr inbounds i8, i8* %arraydecay33, i64 4, !dbg !3635
  %24 = load i8, i8* %add.ptr34, align 1, !dbg !3635
  %conv35 = zext i8 %24 to i32, !dbg !3635
  %shl36 = shl i32 %conv35, 24, !dbg !3635
  %arraydecay37 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3635
  %add.ptr38 = getelementptr inbounds i8, i8* %arraydecay37, i64 4, !dbg !3635
  %add.ptr39 = getelementptr inbounds i8, i8* %add.ptr38, i64 1, !dbg !3635
  %25 = load i8, i8* %add.ptr39, align 1, !dbg !3635
  %conv40 = zext i8 %25 to i32, !dbg !3635
  %shl41 = shl i32 %conv40, 16, !dbg !3635
  %add42 = add i32 %shl36, %shl41, !dbg !3635
  %arraydecay43 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3635
  %add.ptr44 = getelementptr inbounds i8, i8* %arraydecay43, i64 4, !dbg !3635
  %add.ptr45 = getelementptr inbounds i8, i8* %add.ptr44, i64 2, !dbg !3635
  %26 = load i8, i8* %add.ptr45, align 1, !dbg !3635
  %conv46 = zext i8 %26 to i32, !dbg !3635
  %shl47 = shl i32 %conv46, 8, !dbg !3635
  %add48 = add i32 %add42, %shl47, !dbg !3635
  %arraydecay49 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3635
  %add.ptr50 = getelementptr inbounds i8, i8* %arraydecay49, i64 4, !dbg !3635
  %add.ptr51 = getelementptr inbounds i8, i8* %add.ptr50, i64 3, !dbg !3635
  %27 = load i8, i8* %add.ptr51, align 1, !dbg !3635
  %conv52 = zext i8 %27 to i32, !dbg !3635
  %add53 = add i32 %add48, %conv52, !dbg !3635
  store i32 %add53, i32* %res_y, align 4, !dbg !3636
  %arrayidx = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 8, !dbg !3637
  %28 = load i8, i8* %arrayidx, align 1, !dbg !3637
  %conv54 = zext i8 %28 to i32, !dbg !3637
  store i32 %conv54, i32* %unit_type, align 4, !dbg !3638
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3639
  %30 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3640
  %31 = load i32, i32* %res_x, align 4, !dbg !3641
  %32 = load i32, i32* %res_y, align 4, !dbg !3642
  %33 = load i32, i32* %unit_type, align 4, !dbg !3643
  call void @png_set_pHYs(%struct.png_struct_def* %29, %struct.png_info_def* %30, i32 %31, i32 %32, i32 %33), !dbg !3644
  br label %return, !dbg !3645

return:                                           ; preds = %if.end19, %if.then18, %if.then13, %if.then8, %if.then4
  ret void, !dbg !3645
}

declare dso_local void @png_set_pHYs(%struct.png_struct_def*, %struct.png_info_def*, i32, i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_oFFs(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !3646 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %buf = alloca [9 x i8], align 1
  %offset_x = alloca i32, align 4
  %offset_y = alloca i32, align 4
  %unit_type = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !3647, metadata !DIExpression()), !dbg !3648
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !3649, metadata !DIExpression()), !dbg !3650
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !3651, metadata !DIExpression()), !dbg !3652
  call void @llvm.dbg.declare(metadata [9 x i8]* %buf, metadata !3653, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.declare(metadata i32* %offset_x, metadata !3655, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.declare(metadata i32* %offset_y, metadata !3657, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.declare(metadata i32* %unit_type, metadata !3659, metadata !DIExpression()), !dbg !3660
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3661
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !3663
  %1 = load i32, i32* %mode, align 4, !dbg !3663
  %and = and i32 %1, 1, !dbg !3664
  %tobool = icmp ne i32 %and, 0, !dbg !3664
  br i1 %tobool, label %if.else, label %if.then, !dbg !3665

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3666
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.85, i64 0, i64 0)) #6, !dbg !3667
  unreachable, !dbg !3667

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3668
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !3670
  %4 = load i32, i32* %mode1, align 4, !dbg !3670
  %and2 = and i32 %4, 4, !dbg !3671
  %tobool3 = icmp ne i32 %and2, 0, !dbg !3671
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !3672

if.then4:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3673
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.86, i64 0, i64 0)), !dbg !3675
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3676
  %7 = load i32, i32* %length.addr, align 4, !dbg !3677
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !3678
  br label %return, !dbg !3679

if.else5:                                         ; preds = %if.else
  %8 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3680
  %cmp = icmp ne %struct.png_info_def* %8, null, !dbg !3682
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3683

land.lhs.true:                                    ; preds = %if.else5
  %9 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3684
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i32 0, i32 2, !dbg !3685
  %10 = load i32, i32* %valid, align 8, !dbg !3685
  %and6 = and i32 %10, 256, !dbg !3686
  %tobool7 = icmp ne i32 %and6, 0, !dbg !3686
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !3687

if.then8:                                         ; preds = %land.lhs.true
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3688
  call void @png_warning(%struct.png_struct_def* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.87, i64 0, i64 0)), !dbg !3690
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3691
  %13 = load i32, i32* %length.addr, align 4, !dbg !3692
  %call9 = call i32 @png_crc_finish(%struct.png_struct_def* %12, i32 %13), !dbg !3693
  br label %return, !dbg !3694

if.end:                                           ; preds = %land.lhs.true, %if.else5
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  %14 = load i32, i32* %length.addr, align 4, !dbg !3695
  %cmp12 = icmp ne i32 %14, 9, !dbg !3697
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !3698

if.then13:                                        ; preds = %if.end11
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3699
  call void @png_warning(%struct.png_struct_def* %15, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0)), !dbg !3701
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3702
  %17 = load i32, i32* %length.addr, align 4, !dbg !3703
  %call14 = call i32 @png_crc_finish(%struct.png_struct_def* %16, i32 %17), !dbg !3704
  br label %return, !dbg !3705

if.end15:                                         ; preds = %if.end11
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3706
  %arraydecay = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3707
  call void @png_crc_read(%struct.png_struct_def* %18, i8* %arraydecay, i64 9), !dbg !3708
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3709
  %call16 = call i32 @png_crc_finish(%struct.png_struct_def* %19, i32 0), !dbg !3711
  %tobool17 = icmp ne i32 %call16, 0, !dbg !3711
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !3712

if.then18:                                        ; preds = %if.end15
  br label %return, !dbg !3713

if.end19:                                         ; preds = %if.end15
  %arraydecay20 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3714
  %20 = load i8, i8* %arraydecay20, align 1, !dbg !3714
  %conv = zext i8 %20 to i32, !dbg !3714
  %and21 = and i32 %conv, 128, !dbg !3714
  %tobool22 = icmp ne i32 %and21, 0, !dbg !3714
  br i1 %tobool22, label %cond.true, label %cond.false, !dbg !3714

cond.true:                                        ; preds = %if.end19
  %arraydecay23 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3714
  %21 = load i8, i8* %arraydecay23, align 1, !dbg !3714
  %conv24 = zext i8 %21 to i32, !dbg !3714
  %shl = shl i32 %conv24, 24, !dbg !3714
  %arraydecay25 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3714
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay25, i64 1, !dbg !3714
  %22 = load i8, i8* %add.ptr, align 1, !dbg !3714
  %conv26 = zext i8 %22 to i32, !dbg !3714
  %shl27 = shl i32 %conv26, 16, !dbg !3714
  %add = add i32 %shl, %shl27, !dbg !3714
  %arraydecay28 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3714
  %add.ptr29 = getelementptr inbounds i8, i8* %arraydecay28, i64 2, !dbg !3714
  %23 = load i8, i8* %add.ptr29, align 1, !dbg !3714
  %conv30 = zext i8 %23 to i32, !dbg !3714
  %shl31 = shl i32 %conv30, 8, !dbg !3714
  %add32 = add i32 %add, %shl31, !dbg !3714
  %arraydecay33 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3714
  %add.ptr34 = getelementptr inbounds i8, i8* %arraydecay33, i64 3, !dbg !3714
  %24 = load i8, i8* %add.ptr34, align 1, !dbg !3714
  %conv35 = zext i8 %24 to i32, !dbg !3714
  %add36 = add i32 %add32, %conv35, !dbg !3714
  %conv37 = zext i32 %add36 to i64, !dbg !3714
  %xor = xor i64 %conv37, 4294967295, !dbg !3714
  %add38 = add nsw i64 %xor, 1, !dbg !3714
  %conv39 = trunc i64 %add38 to i32, !dbg !3714
  %sub = sub nsw i32 0, %conv39, !dbg !3714
  br label %cond.end, !dbg !3714

cond.false:                                       ; preds = %if.end19
  %arraydecay40 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3714
  %25 = load i8, i8* %arraydecay40, align 1, !dbg !3714
  %conv41 = zext i8 %25 to i32, !dbg !3714
  %shl42 = shl i32 %conv41, 24, !dbg !3714
  %arraydecay43 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3714
  %add.ptr44 = getelementptr inbounds i8, i8* %arraydecay43, i64 1, !dbg !3714
  %26 = load i8, i8* %add.ptr44, align 1, !dbg !3714
  %conv45 = zext i8 %26 to i32, !dbg !3714
  %shl46 = shl i32 %conv45, 16, !dbg !3714
  %add47 = add i32 %shl42, %shl46, !dbg !3714
  %arraydecay48 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3714
  %add.ptr49 = getelementptr inbounds i8, i8* %arraydecay48, i64 2, !dbg !3714
  %27 = load i8, i8* %add.ptr49, align 1, !dbg !3714
  %conv50 = zext i8 %27 to i32, !dbg !3714
  %shl51 = shl i32 %conv50, 8, !dbg !3714
  %add52 = add i32 %add47, %shl51, !dbg !3714
  %arraydecay53 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3714
  %add.ptr54 = getelementptr inbounds i8, i8* %arraydecay53, i64 3, !dbg !3714
  %28 = load i8, i8* %add.ptr54, align 1, !dbg !3714
  %conv55 = zext i8 %28 to i32, !dbg !3714
  %add56 = add i32 %add52, %conv55, !dbg !3714
  br label %cond.end, !dbg !3714

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %add56, %cond.false ], !dbg !3714
  store i32 %cond, i32* %offset_x, align 4, !dbg !3715
  %arraydecay57 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3716
  %add.ptr58 = getelementptr inbounds i8, i8* %arraydecay57, i64 4, !dbg !3716
  %29 = load i8, i8* %add.ptr58, align 1, !dbg !3716
  %conv59 = zext i8 %29 to i32, !dbg !3716
  %and60 = and i32 %conv59, 128, !dbg !3716
  %tobool61 = icmp ne i32 %and60, 0, !dbg !3716
  br i1 %tobool61, label %cond.true62, label %cond.false89, !dbg !3716

cond.true62:                                      ; preds = %cond.end
  %arraydecay63 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3716
  %add.ptr64 = getelementptr inbounds i8, i8* %arraydecay63, i64 4, !dbg !3716
  %30 = load i8, i8* %add.ptr64, align 1, !dbg !3716
  %conv65 = zext i8 %30 to i32, !dbg !3716
  %shl66 = shl i32 %conv65, 24, !dbg !3716
  %arraydecay67 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3716
  %add.ptr68 = getelementptr inbounds i8, i8* %arraydecay67, i64 4, !dbg !3716
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 1, !dbg !3716
  %31 = load i8, i8* %add.ptr69, align 1, !dbg !3716
  %conv70 = zext i8 %31 to i32, !dbg !3716
  %shl71 = shl i32 %conv70, 16, !dbg !3716
  %add72 = add i32 %shl66, %shl71, !dbg !3716
  %arraydecay73 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3716
  %add.ptr74 = getelementptr inbounds i8, i8* %arraydecay73, i64 4, !dbg !3716
  %add.ptr75 = getelementptr inbounds i8, i8* %add.ptr74, i64 2, !dbg !3716
  %32 = load i8, i8* %add.ptr75, align 1, !dbg !3716
  %conv76 = zext i8 %32 to i32, !dbg !3716
  %shl77 = shl i32 %conv76, 8, !dbg !3716
  %add78 = add i32 %add72, %shl77, !dbg !3716
  %arraydecay79 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3716
  %add.ptr80 = getelementptr inbounds i8, i8* %arraydecay79, i64 4, !dbg !3716
  %add.ptr81 = getelementptr inbounds i8, i8* %add.ptr80, i64 3, !dbg !3716
  %33 = load i8, i8* %add.ptr81, align 1, !dbg !3716
  %conv82 = zext i8 %33 to i32, !dbg !3716
  %add83 = add i32 %add78, %conv82, !dbg !3716
  %conv84 = zext i32 %add83 to i64, !dbg !3716
  %xor85 = xor i64 %conv84, 4294967295, !dbg !3716
  %add86 = add nsw i64 %xor85, 1, !dbg !3716
  %conv87 = trunc i64 %add86 to i32, !dbg !3716
  %sub88 = sub nsw i32 0, %conv87, !dbg !3716
  br label %cond.end111, !dbg !3716

cond.false89:                                     ; preds = %cond.end
  %arraydecay90 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3716
  %add.ptr91 = getelementptr inbounds i8, i8* %arraydecay90, i64 4, !dbg !3716
  %34 = load i8, i8* %add.ptr91, align 1, !dbg !3716
  %conv92 = zext i8 %34 to i32, !dbg !3716
  %shl93 = shl i32 %conv92, 24, !dbg !3716
  %arraydecay94 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3716
  %add.ptr95 = getelementptr inbounds i8, i8* %arraydecay94, i64 4, !dbg !3716
  %add.ptr96 = getelementptr inbounds i8, i8* %add.ptr95, i64 1, !dbg !3716
  %35 = load i8, i8* %add.ptr96, align 1, !dbg !3716
  %conv97 = zext i8 %35 to i32, !dbg !3716
  %shl98 = shl i32 %conv97, 16, !dbg !3716
  %add99 = add i32 %shl93, %shl98, !dbg !3716
  %arraydecay100 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3716
  %add.ptr101 = getelementptr inbounds i8, i8* %arraydecay100, i64 4, !dbg !3716
  %add.ptr102 = getelementptr inbounds i8, i8* %add.ptr101, i64 2, !dbg !3716
  %36 = load i8, i8* %add.ptr102, align 1, !dbg !3716
  %conv103 = zext i8 %36 to i32, !dbg !3716
  %shl104 = shl i32 %conv103, 8, !dbg !3716
  %add105 = add i32 %add99, %shl104, !dbg !3716
  %arraydecay106 = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 0, !dbg !3716
  %add.ptr107 = getelementptr inbounds i8, i8* %arraydecay106, i64 4, !dbg !3716
  %add.ptr108 = getelementptr inbounds i8, i8* %add.ptr107, i64 3, !dbg !3716
  %37 = load i8, i8* %add.ptr108, align 1, !dbg !3716
  %conv109 = zext i8 %37 to i32, !dbg !3716
  %add110 = add i32 %add105, %conv109, !dbg !3716
  br label %cond.end111, !dbg !3716

cond.end111:                                      ; preds = %cond.false89, %cond.true62
  %cond112 = phi i32 [ %sub88, %cond.true62 ], [ %add110, %cond.false89 ], !dbg !3716
  store i32 %cond112, i32* %offset_y, align 4, !dbg !3717
  %arrayidx = getelementptr inbounds [9 x i8], [9 x i8]* %buf, i64 0, i64 8, !dbg !3718
  %38 = load i8, i8* %arrayidx, align 1, !dbg !3718
  %conv113 = zext i8 %38 to i32, !dbg !3718
  store i32 %conv113, i32* %unit_type, align 4, !dbg !3719
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3720
  %40 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3721
  %41 = load i32, i32* %offset_x, align 4, !dbg !3722
  %42 = load i32, i32* %offset_y, align 4, !dbg !3723
  %43 = load i32, i32* %unit_type, align 4, !dbg !3724
  call void @png_set_oFFs(%struct.png_struct_def* %39, %struct.png_info_def* %40, i32 %41, i32 %42, i32 %43), !dbg !3725
  br label %return, !dbg !3726

return:                                           ; preds = %cond.end111, %if.then18, %if.then13, %if.then8, %if.then4
  ret void, !dbg !3726
}

declare dso_local void @png_set_oFFs(%struct.png_struct_def*, %struct.png_info_def*, i32, i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_pCAL(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !3727 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %X0 = alloca i32, align 4
  %X1 = alloca i32, align 4
  %type = alloca i8, align 1
  %nparams = alloca i8, align 1
  %buf = alloca i8*, align 8
  %units = alloca i8*, align 8
  %endptr = alloca i8*, align 8
  %params = alloca i8**, align 8
  %slength = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !3728, metadata !DIExpression()), !dbg !3729
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !3730, metadata !DIExpression()), !dbg !3731
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !3732, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.declare(metadata i32* %X0, metadata !3734, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.declare(metadata i32* %X1, metadata !3736, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.declare(metadata i8* %type, metadata !3738, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.declare(metadata i8* %nparams, metadata !3740, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3742, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.declare(metadata i8** %units, metadata !3744, metadata !DIExpression()), !dbg !3745
  call void @llvm.dbg.declare(metadata i8** %endptr, metadata !3746, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.declare(metadata i8*** %params, metadata !3748, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.declare(metadata i64* %slength, metadata !3750, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3752, metadata !DIExpression()), !dbg !3753
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3754
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !3756
  %1 = load i32, i32* %mode, align 4, !dbg !3756
  %and = and i32 %1, 1, !dbg !3757
  %tobool = icmp ne i32 %and, 0, !dbg !3757
  br i1 %tobool, label %if.else, label %if.then, !dbg !3758

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3759
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.89, i64 0, i64 0)) #6, !dbg !3760
  unreachable, !dbg !3760

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3761
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !3763
  %4 = load i32, i32* %mode1, align 4, !dbg !3763
  %and2 = and i32 %4, 4, !dbg !3764
  %tobool3 = icmp ne i32 %and2, 0, !dbg !3764
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !3765

if.then4:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3766
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0)), !dbg !3768
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3769
  %7 = load i32, i32* %length.addr, align 4, !dbg !3770
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !3771
  br label %return, !dbg !3772

if.else5:                                         ; preds = %if.else
  %8 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3773
  %cmp = icmp ne %struct.png_info_def* %8, null, !dbg !3775
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3776

land.lhs.true:                                    ; preds = %if.else5
  %9 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !3777
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i32 0, i32 2, !dbg !3778
  %10 = load i32, i32* %valid, align 8, !dbg !3778
  %and6 = and i32 %10, 1024, !dbg !3779
  %tobool7 = icmp ne i32 %and6, 0, !dbg !3779
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !3780

if.then8:                                         ; preds = %land.lhs.true
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3781
  call void @png_warning(%struct.png_struct_def* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.91, i64 0, i64 0)), !dbg !3783
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3784
  %13 = load i32, i32* %length.addr, align 4, !dbg !3785
  %call9 = call i32 @png_crc_finish(%struct.png_struct_def* %12, i32 %13), !dbg !3786
  br label %return, !dbg !3787

if.end:                                           ; preds = %land.lhs.true, %if.else5
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3788
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3789
  %chunkdata = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 141, !dbg !3790
  %16 = load i8*, i8** %chunkdata, align 8, !dbg !3790
  call void @png_free(%struct.png_struct_def* %14, i8* %16), !dbg !3791
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3792
  %18 = load i32, i32* %length.addr, align 4, !dbg !3793
  %add = add i32 %18, 1, !dbg !3794
  %conv = zext i32 %add to i64, !dbg !3793
  %call12 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %17, i64 %conv), !dbg !3795
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3796
  %chunkdata13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 141, !dbg !3797
  store i8* %call12, i8** %chunkdata13, align 8, !dbg !3798
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3799
  %chunkdata14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 141, !dbg !3801
  %21 = load i8*, i8** %chunkdata14, align 8, !dbg !3801
  %cmp15 = icmp eq i8* %21, null, !dbg !3802
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !3803

if.then17:                                        ; preds = %if.end11
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3804
  call void @png_warning(%struct.png_struct_def* %22, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.92, i64 0, i64 0)), !dbg !3806
  br label %return, !dbg !3807

if.end18:                                         ; preds = %if.end11
  %23 = load i32, i32* %length.addr, align 4, !dbg !3808
  %conv19 = zext i32 %23 to i64, !dbg !3808
  store i64 %conv19, i64* %slength, align 8, !dbg !3809
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3810
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3811
  %chunkdata20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 141, !dbg !3812
  %26 = load i8*, i8** %chunkdata20, align 8, !dbg !3812
  %27 = load i64, i64* %slength, align 8, !dbg !3813
  call void @png_crc_read(%struct.png_struct_def* %24, i8* %26, i64 %27), !dbg !3814
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3815
  %call21 = call i32 @png_crc_finish(%struct.png_struct_def* %28, i32 0), !dbg !3817
  %tobool22 = icmp ne i32 %call21, 0, !dbg !3817
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !3818

if.then23:                                        ; preds = %if.end18
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3819
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3821
  %chunkdata24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 141, !dbg !3822
  %31 = load i8*, i8** %chunkdata24, align 8, !dbg !3822
  call void @png_free(%struct.png_struct_def* %29, i8* %31), !dbg !3823
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3824
  %chunkdata25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 141, !dbg !3825
  store i8* null, i8** %chunkdata25, align 8, !dbg !3826
  br label %return, !dbg !3827

if.end26:                                         ; preds = %if.end18
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3828
  %chunkdata27 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 141, !dbg !3829
  %34 = load i8*, i8** %chunkdata27, align 8, !dbg !3829
  %35 = load i64, i64* %slength, align 8, !dbg !3830
  %arrayidx = getelementptr inbounds i8, i8* %34, i64 %35, !dbg !3828
  store i8 0, i8* %arrayidx, align 1, !dbg !3831
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3832
  %chunkdata28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 141, !dbg !3834
  %37 = load i8*, i8** %chunkdata28, align 8, !dbg !3834
  store i8* %37, i8** %buf, align 8, !dbg !3835
  br label %for.cond, !dbg !3836

for.cond:                                         ; preds = %for.inc, %if.end26
  %38 = load i8*, i8** %buf, align 8, !dbg !3837
  %39 = load i8, i8* %38, align 1, !dbg !3839
  %tobool29 = icmp ne i8 %39, 0, !dbg !3840
  br i1 %tobool29, label %for.body, label %for.end, !dbg !3840

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !3840

for.inc:                                          ; preds = %for.body
  %40 = load i8*, i8** %buf, align 8, !dbg !3841
  %incdec.ptr = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3841
  store i8* %incdec.ptr, i8** %buf, align 8, !dbg !3841
  br label %for.cond, !dbg !3842, !llvm.loop !3843

for.end:                                          ; preds = %for.cond
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3845
  %chunkdata30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 141, !dbg !3846
  %42 = load i8*, i8** %chunkdata30, align 8, !dbg !3846
  %43 = load i64, i64* %slength, align 8, !dbg !3847
  %add.ptr = getelementptr inbounds i8, i8* %42, i64 %43, !dbg !3848
  store i8* %add.ptr, i8** %endptr, align 8, !dbg !3849
  %44 = load i8*, i8** %endptr, align 8, !dbg !3850
  %45 = load i8*, i8** %buf, align 8, !dbg !3852
  %add.ptr31 = getelementptr inbounds i8, i8* %45, i64 12, !dbg !3853
  %cmp32 = icmp ule i8* %44, %add.ptr31, !dbg !3854
  br i1 %cmp32, label %if.then34, label %if.end37, !dbg !3855

if.then34:                                        ; preds = %for.end
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3856
  call void @png_warning(%struct.png_struct_def* %46, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.93, i64 0, i64 0)), !dbg !3858
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3859
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3860
  %chunkdata35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 141, !dbg !3861
  %49 = load i8*, i8** %chunkdata35, align 8, !dbg !3861
  call void @png_free(%struct.png_struct_def* %47, i8* %49), !dbg !3862
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3863
  %chunkdata36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 141, !dbg !3864
  store i8* null, i8** %chunkdata36, align 8, !dbg !3865
  br label %return, !dbg !3866

if.end37:                                         ; preds = %for.end
  %51 = load i8*, i8** %buf, align 8, !dbg !3867
  %add.ptr38 = getelementptr inbounds i8, i8* %51, i64 1, !dbg !3867
  %52 = load i8, i8* %add.ptr38, align 1, !dbg !3867
  %conv39 = zext i8 %52 to i32, !dbg !3867
  %and40 = and i32 %conv39, 128, !dbg !3867
  %tobool41 = icmp ne i32 %and40, 0, !dbg !3867
  br i1 %tobool41, label %cond.true, label %cond.false, !dbg !3867

cond.true:                                        ; preds = %if.end37
  %53 = load i8*, i8** %buf, align 8, !dbg !3867
  %add.ptr42 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !3867
  %54 = load i8, i8* %add.ptr42, align 1, !dbg !3867
  %conv43 = zext i8 %54 to i32, !dbg !3867
  %shl = shl i32 %conv43, 24, !dbg !3867
  %55 = load i8*, i8** %buf, align 8, !dbg !3867
  %add.ptr44 = getelementptr inbounds i8, i8* %55, i64 1, !dbg !3867
  %add.ptr45 = getelementptr inbounds i8, i8* %add.ptr44, i64 1, !dbg !3867
  %56 = load i8, i8* %add.ptr45, align 1, !dbg !3867
  %conv46 = zext i8 %56 to i32, !dbg !3867
  %shl47 = shl i32 %conv46, 16, !dbg !3867
  %add48 = add i32 %shl, %shl47, !dbg !3867
  %57 = load i8*, i8** %buf, align 8, !dbg !3867
  %add.ptr49 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !3867
  %add.ptr50 = getelementptr inbounds i8, i8* %add.ptr49, i64 2, !dbg !3867
  %58 = load i8, i8* %add.ptr50, align 1, !dbg !3867
  %conv51 = zext i8 %58 to i32, !dbg !3867
  %shl52 = shl i32 %conv51, 8, !dbg !3867
  %add53 = add i32 %add48, %shl52, !dbg !3867
  %59 = load i8*, i8** %buf, align 8, !dbg !3867
  %add.ptr54 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !3867
  %add.ptr55 = getelementptr inbounds i8, i8* %add.ptr54, i64 3, !dbg !3867
  %60 = load i8, i8* %add.ptr55, align 1, !dbg !3867
  %conv56 = zext i8 %60 to i32, !dbg !3867
  %add57 = add i32 %add53, %conv56, !dbg !3867
  %conv58 = zext i32 %add57 to i64, !dbg !3867
  %xor = xor i64 %conv58, 4294967295, !dbg !3867
  %add59 = add nsw i64 %xor, 1, !dbg !3867
  %conv60 = trunc i64 %add59 to i32, !dbg !3867
  %sub = sub nsw i32 0, %conv60, !dbg !3867
  br label %cond.end, !dbg !3867

cond.false:                                       ; preds = %if.end37
  %61 = load i8*, i8** %buf, align 8, !dbg !3867
  %add.ptr61 = getelementptr inbounds i8, i8* %61, i64 1, !dbg !3867
  %62 = load i8, i8* %add.ptr61, align 1, !dbg !3867
  %conv62 = zext i8 %62 to i32, !dbg !3867
  %shl63 = shl i32 %conv62, 24, !dbg !3867
  %63 = load i8*, i8** %buf, align 8, !dbg !3867
  %add.ptr64 = getelementptr inbounds i8, i8* %63, i64 1, !dbg !3867
  %add.ptr65 = getelementptr inbounds i8, i8* %add.ptr64, i64 1, !dbg !3867
  %64 = load i8, i8* %add.ptr65, align 1, !dbg !3867
  %conv66 = zext i8 %64 to i32, !dbg !3867
  %shl67 = shl i32 %conv66, 16, !dbg !3867
  %add68 = add i32 %shl63, %shl67, !dbg !3867
  %65 = load i8*, i8** %buf, align 8, !dbg !3867
  %add.ptr69 = getelementptr inbounds i8, i8* %65, i64 1, !dbg !3867
  %add.ptr70 = getelementptr inbounds i8, i8* %add.ptr69, i64 2, !dbg !3867
  %66 = load i8, i8* %add.ptr70, align 1, !dbg !3867
  %conv71 = zext i8 %66 to i32, !dbg !3867
  %shl72 = shl i32 %conv71, 8, !dbg !3867
  %add73 = add i32 %add68, %shl72, !dbg !3867
  %67 = load i8*, i8** %buf, align 8, !dbg !3867
  %add.ptr74 = getelementptr inbounds i8, i8* %67, i64 1, !dbg !3867
  %add.ptr75 = getelementptr inbounds i8, i8* %add.ptr74, i64 3, !dbg !3867
  %68 = load i8, i8* %add.ptr75, align 1, !dbg !3867
  %conv76 = zext i8 %68 to i32, !dbg !3867
  %add77 = add i32 %add73, %conv76, !dbg !3867
  br label %cond.end, !dbg !3867

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %add77, %cond.false ], !dbg !3867
  store i32 %cond, i32* %X0, align 4, !dbg !3868
  %69 = load i8*, i8** %buf, align 8, !dbg !3869
  %add.ptr78 = getelementptr inbounds i8, i8* %69, i64 5, !dbg !3869
  %70 = load i8, i8* %add.ptr78, align 1, !dbg !3869
  %conv79 = zext i8 %70 to i32, !dbg !3869
  %and80 = and i32 %conv79, 128, !dbg !3869
  %tobool81 = icmp ne i32 %and80, 0, !dbg !3869
  br i1 %tobool81, label %cond.true82, label %cond.false105, !dbg !3869

cond.true82:                                      ; preds = %cond.end
  %71 = load i8*, i8** %buf, align 8, !dbg !3869
  %add.ptr83 = getelementptr inbounds i8, i8* %71, i64 5, !dbg !3869
  %72 = load i8, i8* %add.ptr83, align 1, !dbg !3869
  %conv84 = zext i8 %72 to i32, !dbg !3869
  %shl85 = shl i32 %conv84, 24, !dbg !3869
  %73 = load i8*, i8** %buf, align 8, !dbg !3869
  %add.ptr86 = getelementptr inbounds i8, i8* %73, i64 5, !dbg !3869
  %add.ptr87 = getelementptr inbounds i8, i8* %add.ptr86, i64 1, !dbg !3869
  %74 = load i8, i8* %add.ptr87, align 1, !dbg !3869
  %conv88 = zext i8 %74 to i32, !dbg !3869
  %shl89 = shl i32 %conv88, 16, !dbg !3869
  %add90 = add i32 %shl85, %shl89, !dbg !3869
  %75 = load i8*, i8** %buf, align 8, !dbg !3869
  %add.ptr91 = getelementptr inbounds i8, i8* %75, i64 5, !dbg !3869
  %add.ptr92 = getelementptr inbounds i8, i8* %add.ptr91, i64 2, !dbg !3869
  %76 = load i8, i8* %add.ptr92, align 1, !dbg !3869
  %conv93 = zext i8 %76 to i32, !dbg !3869
  %shl94 = shl i32 %conv93, 8, !dbg !3869
  %add95 = add i32 %add90, %shl94, !dbg !3869
  %77 = load i8*, i8** %buf, align 8, !dbg !3869
  %add.ptr96 = getelementptr inbounds i8, i8* %77, i64 5, !dbg !3869
  %add.ptr97 = getelementptr inbounds i8, i8* %add.ptr96, i64 3, !dbg !3869
  %78 = load i8, i8* %add.ptr97, align 1, !dbg !3869
  %conv98 = zext i8 %78 to i32, !dbg !3869
  %add99 = add i32 %add95, %conv98, !dbg !3869
  %conv100 = zext i32 %add99 to i64, !dbg !3869
  %xor101 = xor i64 %conv100, 4294967295, !dbg !3869
  %add102 = add nsw i64 %xor101, 1, !dbg !3869
  %conv103 = trunc i64 %add102 to i32, !dbg !3869
  %sub104 = sub nsw i32 0, %conv103, !dbg !3869
  br label %cond.end123, !dbg !3869

cond.false105:                                    ; preds = %cond.end
  %79 = load i8*, i8** %buf, align 8, !dbg !3869
  %add.ptr106 = getelementptr inbounds i8, i8* %79, i64 5, !dbg !3869
  %80 = load i8, i8* %add.ptr106, align 1, !dbg !3869
  %conv107 = zext i8 %80 to i32, !dbg !3869
  %shl108 = shl i32 %conv107, 24, !dbg !3869
  %81 = load i8*, i8** %buf, align 8, !dbg !3869
  %add.ptr109 = getelementptr inbounds i8, i8* %81, i64 5, !dbg !3869
  %add.ptr110 = getelementptr inbounds i8, i8* %add.ptr109, i64 1, !dbg !3869
  %82 = load i8, i8* %add.ptr110, align 1, !dbg !3869
  %conv111 = zext i8 %82 to i32, !dbg !3869
  %shl112 = shl i32 %conv111, 16, !dbg !3869
  %add113 = add i32 %shl108, %shl112, !dbg !3869
  %83 = load i8*, i8** %buf, align 8, !dbg !3869
  %add.ptr114 = getelementptr inbounds i8, i8* %83, i64 5, !dbg !3869
  %add.ptr115 = getelementptr inbounds i8, i8* %add.ptr114, i64 2, !dbg !3869
  %84 = load i8, i8* %add.ptr115, align 1, !dbg !3869
  %conv116 = zext i8 %84 to i32, !dbg !3869
  %shl117 = shl i32 %conv116, 8, !dbg !3869
  %add118 = add i32 %add113, %shl117, !dbg !3869
  %85 = load i8*, i8** %buf, align 8, !dbg !3869
  %add.ptr119 = getelementptr inbounds i8, i8* %85, i64 5, !dbg !3869
  %add.ptr120 = getelementptr inbounds i8, i8* %add.ptr119, i64 3, !dbg !3869
  %86 = load i8, i8* %add.ptr120, align 1, !dbg !3869
  %conv121 = zext i8 %86 to i32, !dbg !3869
  %add122 = add i32 %add118, %conv121, !dbg !3869
  br label %cond.end123, !dbg !3869

cond.end123:                                      ; preds = %cond.false105, %cond.true82
  %cond124 = phi i32 [ %sub104, %cond.true82 ], [ %add122, %cond.false105 ], !dbg !3869
  store i32 %cond124, i32* %X1, align 4, !dbg !3870
  %87 = load i8*, i8** %buf, align 8, !dbg !3871
  %arrayidx125 = getelementptr inbounds i8, i8* %87, i64 9, !dbg !3871
  %88 = load i8, i8* %arrayidx125, align 1, !dbg !3871
  store i8 %88, i8* %type, align 1, !dbg !3872
  %89 = load i8*, i8** %buf, align 8, !dbg !3873
  %arrayidx126 = getelementptr inbounds i8, i8* %89, i64 10, !dbg !3873
  %90 = load i8, i8* %arrayidx126, align 1, !dbg !3873
  store i8 %90, i8* %nparams, align 1, !dbg !3874
  %91 = load i8*, i8** %buf, align 8, !dbg !3875
  %add.ptr127 = getelementptr inbounds i8, i8* %91, i64 11, !dbg !3876
  store i8* %add.ptr127, i8** %units, align 8, !dbg !3877
  %92 = load i8, i8* %type, align 1, !dbg !3878
  %conv128 = zext i8 %92 to i32, !dbg !3878
  %cmp129 = icmp eq i32 %conv128, 0, !dbg !3880
  br i1 %cmp129, label %land.lhs.true131, label %lor.lhs.false, !dbg !3881

land.lhs.true131:                                 ; preds = %cond.end123
  %93 = load i8, i8* %nparams, align 1, !dbg !3882
  %conv132 = zext i8 %93 to i32, !dbg !3882
  %cmp133 = icmp ne i32 %conv132, 2, !dbg !3883
  br i1 %cmp133, label %if.then158, label %lor.lhs.false, !dbg !3884

lor.lhs.false:                                    ; preds = %land.lhs.true131, %cond.end123
  %94 = load i8, i8* %type, align 1, !dbg !3885
  %conv135 = zext i8 %94 to i32, !dbg !3885
  %cmp136 = icmp eq i32 %conv135, 1, !dbg !3886
  br i1 %cmp136, label %land.lhs.true138, label %lor.lhs.false142, !dbg !3887

land.lhs.true138:                                 ; preds = %lor.lhs.false
  %95 = load i8, i8* %nparams, align 1, !dbg !3888
  %conv139 = zext i8 %95 to i32, !dbg !3888
  %cmp140 = icmp ne i32 %conv139, 3, !dbg !3889
  br i1 %cmp140, label %if.then158, label %lor.lhs.false142, !dbg !3890

lor.lhs.false142:                                 ; preds = %land.lhs.true138, %lor.lhs.false
  %96 = load i8, i8* %type, align 1, !dbg !3891
  %conv143 = zext i8 %96 to i32, !dbg !3891
  %cmp144 = icmp eq i32 %conv143, 2, !dbg !3892
  br i1 %cmp144, label %land.lhs.true146, label %lor.lhs.false150, !dbg !3893

land.lhs.true146:                                 ; preds = %lor.lhs.false142
  %97 = load i8, i8* %nparams, align 1, !dbg !3894
  %conv147 = zext i8 %97 to i32, !dbg !3894
  %cmp148 = icmp ne i32 %conv147, 3, !dbg !3895
  br i1 %cmp148, label %if.then158, label %lor.lhs.false150, !dbg !3896

lor.lhs.false150:                                 ; preds = %land.lhs.true146, %lor.lhs.false142
  %98 = load i8, i8* %type, align 1, !dbg !3897
  %conv151 = zext i8 %98 to i32, !dbg !3897
  %cmp152 = icmp eq i32 %conv151, 3, !dbg !3898
  br i1 %cmp152, label %land.lhs.true154, label %if.else161, !dbg !3899

land.lhs.true154:                                 ; preds = %lor.lhs.false150
  %99 = load i8, i8* %nparams, align 1, !dbg !3900
  %conv155 = zext i8 %99 to i32, !dbg !3900
  %cmp156 = icmp ne i32 %conv155, 4, !dbg !3901
  br i1 %cmp156, label %if.then158, label %if.else161, !dbg !3902

if.then158:                                       ; preds = %land.lhs.true154, %land.lhs.true146, %land.lhs.true138, %land.lhs.true131
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3903
  call void @png_warning(%struct.png_struct_def* %100, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.94, i64 0, i64 0)), !dbg !3905
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3906
  %102 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3907
  %chunkdata159 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %102, i32 0, i32 141, !dbg !3908
  %103 = load i8*, i8** %chunkdata159, align 8, !dbg !3908
  call void @png_free(%struct.png_struct_def* %101, i8* %103), !dbg !3909
  %104 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3910
  %chunkdata160 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %104, i32 0, i32 141, !dbg !3911
  store i8* null, i8** %chunkdata160, align 8, !dbg !3912
  br label %return, !dbg !3913

if.else161:                                       ; preds = %land.lhs.true154, %lor.lhs.false150
  %105 = load i8, i8* %type, align 1, !dbg !3914
  %conv162 = zext i8 %105 to i32, !dbg !3914
  %cmp163 = icmp sge i32 %conv162, 4, !dbg !3916
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !3917

if.then165:                                       ; preds = %if.else161
  %106 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3918
  call void @png_warning(%struct.png_struct_def* %106, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.95, i64 0, i64 0)), !dbg !3920
  br label %if.end166, !dbg !3921

if.end166:                                        ; preds = %if.then165, %if.else161
  br label %if.end167

if.end167:                                        ; preds = %if.end166
  %107 = load i8*, i8** %units, align 8, !dbg !3922
  store i8* %107, i8** %buf, align 8, !dbg !3924
  br label %for.cond168, !dbg !3925

for.cond168:                                      ; preds = %for.inc171, %if.end167
  %108 = load i8*, i8** %buf, align 8, !dbg !3926
  %109 = load i8, i8* %108, align 1, !dbg !3928
  %tobool169 = icmp ne i8 %109, 0, !dbg !3929
  br i1 %tobool169, label %for.body170, label %for.end173, !dbg !3929

for.body170:                                      ; preds = %for.cond168
  br label %for.inc171, !dbg !3929

for.inc171:                                       ; preds = %for.body170
  %110 = load i8*, i8** %buf, align 8, !dbg !3930
  %incdec.ptr172 = getelementptr inbounds i8, i8* %110, i32 1, !dbg !3930
  store i8* %incdec.ptr172, i8** %buf, align 8, !dbg !3930
  br label %for.cond168, !dbg !3931, !llvm.loop !3932

for.end173:                                       ; preds = %for.cond168
  %111 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3934
  %112 = load i8, i8* %nparams, align 1, !dbg !3935
  %conv174 = zext i8 %112 to i64, !dbg !3935
  %mul = mul i64 %conv174, 8, !dbg !3936
  %call175 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %111, i64 %mul), !dbg !3937
  %113 = bitcast i8* %call175 to i8**, !dbg !3938
  store i8** %113, i8*** %params, align 8, !dbg !3939
  %114 = load i8**, i8*** %params, align 8, !dbg !3940
  %cmp176 = icmp eq i8** %114, null, !dbg !3942
  br i1 %cmp176, label %if.then178, label %if.end181, !dbg !3943

if.then178:                                       ; preds = %for.end173
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3944
  %116 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3946
  %chunkdata179 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %116, i32 0, i32 141, !dbg !3947
  %117 = load i8*, i8** %chunkdata179, align 8, !dbg !3947
  call void @png_free(%struct.png_struct_def* %115, i8* %117), !dbg !3948
  %118 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3949
  %chunkdata180 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %118, i32 0, i32 141, !dbg !3950
  store i8* null, i8** %chunkdata180, align 8, !dbg !3951
  %119 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3952
  call void @png_warning(%struct.png_struct_def* %119, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.96, i64 0, i64 0)), !dbg !3953
  br label %return, !dbg !3954

if.end181:                                        ; preds = %for.end173
  store i32 0, i32* %i, align 4, !dbg !3955
  br label %for.cond182, !dbg !3957

for.cond182:                                      ; preds = %for.inc205, %if.end181
  %120 = load i32, i32* %i, align 4, !dbg !3958
  %121 = load i8, i8* %nparams, align 1, !dbg !3960
  %conv183 = zext i8 %121 to i32, !dbg !3961
  %cmp184 = icmp slt i32 %120, %conv183, !dbg !3962
  br i1 %cmp184, label %for.body186, label %for.end206, !dbg !3963

for.body186:                                      ; preds = %for.cond182
  %122 = load i8*, i8** %buf, align 8, !dbg !3964
  %incdec.ptr187 = getelementptr inbounds i8, i8* %122, i32 1, !dbg !3964
  store i8* %incdec.ptr187, i8** %buf, align 8, !dbg !3964
  %123 = load i8*, i8** %buf, align 8, !dbg !3966
  %124 = load i8**, i8*** %params, align 8, !dbg !3968
  %125 = load i32, i32* %i, align 4, !dbg !3969
  %idxprom = sext i32 %125 to i64, !dbg !3968
  %arrayidx188 = getelementptr inbounds i8*, i8** %124, i64 %idxprom, !dbg !3968
  store i8* %123, i8** %arrayidx188, align 8, !dbg !3970
  br label %for.cond189, !dbg !3968

for.cond189:                                      ; preds = %for.inc196, %for.body186
  %126 = load i8*, i8** %buf, align 8, !dbg !3971
  %127 = load i8*, i8** %endptr, align 8, !dbg !3973
  %cmp190 = icmp ule i8* %126, %127, !dbg !3974
  br i1 %cmp190, label %land.rhs, label %land.end, !dbg !3975

land.rhs:                                         ; preds = %for.cond189
  %128 = load i8*, i8** %buf, align 8, !dbg !3976
  %129 = load i8, i8* %128, align 1, !dbg !3977
  %conv192 = zext i8 %129 to i32, !dbg !3977
  %cmp193 = icmp ne i32 %conv192, 0, !dbg !3978
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond189
  %130 = phi i1 [ false, %for.cond189 ], [ %cmp193, %land.rhs ], !dbg !3979
  br i1 %130, label %for.body195, label %for.end198, !dbg !3980

for.body195:                                      ; preds = %land.end
  br label %for.inc196, !dbg !3980

for.inc196:                                       ; preds = %for.body195
  %131 = load i8*, i8** %buf, align 8, !dbg !3981
  %incdec.ptr197 = getelementptr inbounds i8, i8* %131, i32 1, !dbg !3981
  store i8* %incdec.ptr197, i8** %buf, align 8, !dbg !3981
  br label %for.cond189, !dbg !3982, !llvm.loop !3983

for.end198:                                       ; preds = %land.end
  %132 = load i8*, i8** %buf, align 8, !dbg !3985
  %133 = load i8*, i8** %endptr, align 8, !dbg !3987
  %cmp199 = icmp ugt i8* %132, %133, !dbg !3988
  br i1 %cmp199, label %if.then201, label %if.end204, !dbg !3989

if.then201:                                       ; preds = %for.end198
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3990
  call void @png_warning(%struct.png_struct_def* %134, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.93, i64 0, i64 0)), !dbg !3992
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3993
  %136 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3994
  %chunkdata202 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %136, i32 0, i32 141, !dbg !3995
  %137 = load i8*, i8** %chunkdata202, align 8, !dbg !3995
  call void @png_free(%struct.png_struct_def* %135, i8* %137), !dbg !3996
  %138 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !3997
  %chunkdata203 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %138, i32 0, i32 141, !dbg !3998
  store i8* null, i8** %chunkdata203, align 8, !dbg !3999
  %139 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4000
  %140 = load i8**, i8*** %params, align 8, !dbg !4001
  %141 = bitcast i8** %140 to i8*, !dbg !4001
  call void @png_free(%struct.png_struct_def* %139, i8* %141), !dbg !4002
  br label %return, !dbg !4003

if.end204:                                        ; preds = %for.end198
  br label %for.inc205, !dbg !4004

for.inc205:                                       ; preds = %if.end204
  %142 = load i32, i32* %i, align 4, !dbg !4005
  %inc = add nsw i32 %142, 1, !dbg !4005
  store i32 %inc, i32* %i, align 4, !dbg !4005
  br label %for.cond182, !dbg !4006, !llvm.loop !4007

for.end206:                                       ; preds = %for.cond182
  %143 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4009
  %144 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !4010
  %145 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4011
  %chunkdata207 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %145, i32 0, i32 141, !dbg !4012
  %146 = load i8*, i8** %chunkdata207, align 8, !dbg !4012
  %147 = load i32, i32* %X0, align 4, !dbg !4013
  %148 = load i32, i32* %X1, align 4, !dbg !4014
  %149 = load i8, i8* %type, align 1, !dbg !4015
  %conv208 = zext i8 %149 to i32, !dbg !4015
  %150 = load i8, i8* %nparams, align 1, !dbg !4016
  %conv209 = zext i8 %150 to i32, !dbg !4016
  %151 = load i8*, i8** %units, align 8, !dbg !4017
  %152 = load i8**, i8*** %params, align 8, !dbg !4018
  call void @png_set_pCAL(%struct.png_struct_def* %143, %struct.png_info_def* %144, i8* %146, i32 %147, i32 %148, i32 %conv208, i32 %conv209, i8* %151, i8** %152), !dbg !4019
  %153 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4020
  %154 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4021
  %chunkdata210 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %154, i32 0, i32 141, !dbg !4022
  %155 = load i8*, i8** %chunkdata210, align 8, !dbg !4022
  call void @png_free(%struct.png_struct_def* %153, i8* %155), !dbg !4023
  %156 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4024
  %chunkdata211 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %156, i32 0, i32 141, !dbg !4025
  store i8* null, i8** %chunkdata211, align 8, !dbg !4026
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4027
  %158 = load i8**, i8*** %params, align 8, !dbg !4028
  %159 = bitcast i8** %158 to i8*, !dbg !4028
  call void @png_free(%struct.png_struct_def* %157, i8* %159), !dbg !4029
  br label %return, !dbg !4030

return:                                           ; preds = %for.end206, %if.then201, %if.then178, %if.then158, %if.then34, %if.then23, %if.then17, %if.then8, %if.then4
  ret void, !dbg !4030
}

declare dso_local void @png_set_pCAL(%struct.png_struct_def*, %struct.png_info_def*, i8*, i32, i32, i32, i32, i8*, i8**) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_sCAL(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !4031 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %slength = alloca i64, align 8
  %i = alloca i64, align 8
  %state = alloca i32, align 4
  %heighti = alloca i64, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !4032, metadata !DIExpression()), !dbg !4033
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !4034, metadata !DIExpression()), !dbg !4035
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !4036, metadata !DIExpression()), !dbg !4037
  call void @llvm.dbg.declare(metadata i64* %slength, metadata !4038, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4040, metadata !DIExpression()), !dbg !4041
  call void @llvm.dbg.declare(metadata i32* %state, metadata !4042, metadata !DIExpression()), !dbg !4043
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4044
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !4046
  %1 = load i32, i32* %mode, align 4, !dbg !4046
  %and = and i32 %1, 1, !dbg !4047
  %tobool = icmp ne i32 %and, 0, !dbg !4047
  br i1 %tobool, label %if.else, label %if.then, !dbg !4048

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4049
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.97, i64 0, i64 0)) #6, !dbg !4050
  unreachable, !dbg !4050

if.else:                                          ; preds = %entry
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4051
  %mode1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 13, !dbg !4053
  %4 = load i32, i32* %mode1, align 4, !dbg !4053
  %and2 = and i32 %4, 4, !dbg !4054
  %tobool3 = icmp ne i32 %and2, 0, !dbg !4054
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !4055

if.then4:                                         ; preds = %if.else
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4056
  call void @png_warning(%struct.png_struct_def* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.98, i64 0, i64 0)), !dbg !4058
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4059
  %7 = load i32, i32* %length.addr, align 4, !dbg !4060
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %6, i32 %7), !dbg !4061
  br label %return, !dbg !4062

if.else5:                                         ; preds = %if.else
  %8 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !4063
  %cmp = icmp ne %struct.png_info_def* %8, null, !dbg !4065
  br i1 %cmp, label %land.lhs.true, label %if.else10, !dbg !4066

land.lhs.true:                                    ; preds = %if.else5
  %9 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !4067
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i32 0, i32 2, !dbg !4068
  %10 = load i32, i32* %valid, align 8, !dbg !4068
  %and6 = and i32 %10, 16384, !dbg !4069
  %tobool7 = icmp ne i32 %and6, 0, !dbg !4069
  br i1 %tobool7, label %if.then8, label %if.else10, !dbg !4070

if.then8:                                         ; preds = %land.lhs.true
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4071
  call void @png_warning(%struct.png_struct_def* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.99, i64 0, i64 0)), !dbg !4073
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4074
  %13 = load i32, i32* %length.addr, align 4, !dbg !4075
  %call9 = call i32 @png_crc_finish(%struct.png_struct_def* %12, i32 %13), !dbg !4076
  br label %return, !dbg !4077

if.else10:                                        ; preds = %land.lhs.true, %if.else5
  %14 = load i32, i32* %length.addr, align 4, !dbg !4078
  %cmp11 = icmp ult i32 %14, 4, !dbg !4080
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !4081

if.then12:                                        ; preds = %if.else10
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4082
  call void @png_warning(%struct.png_struct_def* %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.100, i64 0, i64 0)), !dbg !4084
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4085
  %17 = load i32, i32* %length.addr, align 4, !dbg !4086
  %call13 = call i32 @png_crc_finish(%struct.png_struct_def* %16, i32 %17), !dbg !4087
  br label %return, !dbg !4088

if.end:                                           ; preds = %if.else10
  br label %if.end14

if.end14:                                         ; preds = %if.end
  br label %if.end15

if.end15:                                         ; preds = %if.end14
  br label %if.end16

if.end16:                                         ; preds = %if.end15
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4089
  %19 = load i32, i32* %length.addr, align 4, !dbg !4090
  %add = add i32 %19, 1, !dbg !4091
  %conv = zext i32 %add to i64, !dbg !4090
  %call17 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %18, i64 %conv), !dbg !4092
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4093
  %chunkdata = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 141, !dbg !4094
  store i8* %call17, i8** %chunkdata, align 8, !dbg !4095
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4096
  %chunkdata18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %21, i32 0, i32 141, !dbg !4098
  %22 = load i8*, i8** %chunkdata18, align 8, !dbg !4098
  %cmp19 = icmp eq i8* %22, null, !dbg !4099
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !4100

if.then21:                                        ; preds = %if.end16
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4101
  call void @png_warning(%struct.png_struct_def* %23, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.101, i64 0, i64 0)), !dbg !4103
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4104
  %25 = load i32, i32* %length.addr, align 4, !dbg !4105
  %call22 = call i32 @png_crc_finish(%struct.png_struct_def* %24, i32 %25), !dbg !4106
  br label %return, !dbg !4107

if.end23:                                         ; preds = %if.end16
  %26 = load i32, i32* %length.addr, align 4, !dbg !4108
  %conv24 = zext i32 %26 to i64, !dbg !4108
  store i64 %conv24, i64* %slength, align 8, !dbg !4109
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4110
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4111
  %chunkdata25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 141, !dbg !4112
  %29 = load i8*, i8** %chunkdata25, align 8, !dbg !4112
  %30 = load i64, i64* %slength, align 8, !dbg !4113
  call void @png_crc_read(%struct.png_struct_def* %27, i8* %29, i64 %30), !dbg !4114
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4115
  %chunkdata26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 141, !dbg !4116
  %32 = load i8*, i8** %chunkdata26, align 8, !dbg !4116
  %33 = load i64, i64* %slength, align 8, !dbg !4117
  %arrayidx = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !4115
  store i8 0, i8* %arrayidx, align 1, !dbg !4118
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4119
  %call27 = call i32 @png_crc_finish(%struct.png_struct_def* %34, i32 0), !dbg !4121
  %tobool28 = icmp ne i32 %call27, 0, !dbg !4121
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !4122

if.then29:                                        ; preds = %if.end23
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4123
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4125
  %chunkdata30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 141, !dbg !4126
  %37 = load i8*, i8** %chunkdata30, align 8, !dbg !4126
  call void @png_free(%struct.png_struct_def* %35, i8* %37), !dbg !4127
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4128
  %chunkdata31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 141, !dbg !4129
  store i8* null, i8** %chunkdata31, align 8, !dbg !4130
  br label %return, !dbg !4131

if.end32:                                         ; preds = %if.end23
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4132
  %chunkdata33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 141, !dbg !4134
  %40 = load i8*, i8** %chunkdata33, align 8, !dbg !4134
  %arrayidx34 = getelementptr inbounds i8, i8* %40, i64 0, !dbg !4132
  %41 = load i8, i8* %arrayidx34, align 1, !dbg !4132
  %conv35 = zext i8 %41 to i32, !dbg !4132
  %cmp36 = icmp ne i32 %conv35, 1, !dbg !4135
  br i1 %cmp36, label %land.lhs.true38, label %if.end47, !dbg !4136

land.lhs.true38:                                  ; preds = %if.end32
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4137
  %chunkdata39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 141, !dbg !4138
  %43 = load i8*, i8** %chunkdata39, align 8, !dbg !4138
  %arrayidx40 = getelementptr inbounds i8, i8* %43, i64 0, !dbg !4137
  %44 = load i8, i8* %arrayidx40, align 1, !dbg !4137
  %conv41 = zext i8 %44 to i32, !dbg !4137
  %cmp42 = icmp ne i32 %conv41, 2, !dbg !4139
  br i1 %cmp42, label %if.then44, label %if.end47, !dbg !4140

if.then44:                                        ; preds = %land.lhs.true38
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4141
  call void @png_warning(%struct.png_struct_def* %45, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.102, i64 0, i64 0)), !dbg !4143
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4144
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4145
  %chunkdata45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 141, !dbg !4146
  %48 = load i8*, i8** %chunkdata45, align 8, !dbg !4146
  call void @png_free(%struct.png_struct_def* %46, i8* %48), !dbg !4147
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4148
  %chunkdata46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %49, i32 0, i32 141, !dbg !4149
  store i8* null, i8** %chunkdata46, align 8, !dbg !4150
  br label %return, !dbg !4151

if.end47:                                         ; preds = %land.lhs.true38, %if.end32
  store i64 1, i64* %i, align 8, !dbg !4152
  store i32 0, i32* %state, align 4, !dbg !4153
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4154
  %chunkdata48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 141, !dbg !4156
  %51 = load i8*, i8** %chunkdata48, align 8, !dbg !4156
  %52 = load i64, i64* %slength, align 8, !dbg !4157
  %call49 = call i32 @png_check_fp_number(i8* %51, i64 %52, i32* %state, i64* %i), !dbg !4158
  %tobool50 = icmp ne i32 %call49, 0, !dbg !4158
  br i1 %tobool50, label %lor.lhs.false, label %if.then59, !dbg !4159

lor.lhs.false:                                    ; preds = %if.end47
  %53 = load i64, i64* %i, align 8, !dbg !4160
  %54 = load i64, i64* %slength, align 8, !dbg !4161
  %cmp51 = icmp uge i64 %53, %54, !dbg !4162
  br i1 %cmp51, label %if.then59, label %lor.lhs.false53, !dbg !4163

lor.lhs.false53:                                  ; preds = %lor.lhs.false
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4164
  %chunkdata54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %55, i32 0, i32 141, !dbg !4165
  %56 = load i8*, i8** %chunkdata54, align 8, !dbg !4165
  %57 = load i64, i64* %i, align 8, !dbg !4166
  %inc = add i64 %57, 1, !dbg !4166
  store i64 %inc, i64* %i, align 8, !dbg !4166
  %arrayidx55 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !4164
  %58 = load i8, i8* %arrayidx55, align 1, !dbg !4164
  %conv56 = zext i8 %58 to i32, !dbg !4164
  %cmp57 = icmp ne i32 %conv56, 0, !dbg !4167
  br i1 %cmp57, label %if.then59, label %if.else60, !dbg !4168

if.then59:                                        ; preds = %lor.lhs.false53, %lor.lhs.false, %if.end47
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4169
  call void @png_warning(%struct.png_struct_def* %59, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.103, i64 0, i64 0)), !dbg !4170
  br label %if.end88, !dbg !4170

if.else60:                                        ; preds = %lor.lhs.false53
  %60 = load i32, i32* %state, align 4, !dbg !4171
  %and61 = and i32 %60, 392, !dbg !4171
  %cmp62 = icmp eq i32 %and61, 264, !dbg !4171
  br i1 %cmp62, label %if.else65, label %if.then64, !dbg !4173

if.then64:                                        ; preds = %if.else60
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4174
  call void @png_warning(%struct.png_struct_def* %61, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.104, i64 0, i64 0)), !dbg !4175
  br label %if.end87, !dbg !4175

if.else65:                                        ; preds = %if.else60
  call void @llvm.dbg.declare(metadata i64* %heighti, metadata !4176, metadata !DIExpression()), !dbg !4178
  %62 = load i64, i64* %i, align 8, !dbg !4179
  store i64 %62, i64* %heighti, align 8, !dbg !4178
  store i32 0, i32* %state, align 4, !dbg !4180
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4181
  %chunkdata66 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %63, i32 0, i32 141, !dbg !4183
  %64 = load i8*, i8** %chunkdata66, align 8, !dbg !4183
  %65 = load i64, i64* %slength, align 8, !dbg !4184
  %call67 = call i32 @png_check_fp_number(i8* %64, i64 %65, i32* %state, i64* %i), !dbg !4185
  %tobool68 = icmp ne i32 %call67, 0, !dbg !4185
  br i1 %tobool68, label %lor.lhs.false69, label %if.then72, !dbg !4186

lor.lhs.false69:                                  ; preds = %if.else65
  %66 = load i64, i64* %i, align 8, !dbg !4187
  %67 = load i64, i64* %slength, align 8, !dbg !4188
  %cmp70 = icmp ne i64 %66, %67, !dbg !4189
  br i1 %cmp70, label %if.then72, label %if.else73, !dbg !4190

if.then72:                                        ; preds = %lor.lhs.false69, %if.else65
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4191
  call void @png_warning(%struct.png_struct_def* %68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.105, i64 0, i64 0)), !dbg !4192
  br label %if.end86, !dbg !4192

if.else73:                                        ; preds = %lor.lhs.false69
  %69 = load i32, i32* %state, align 4, !dbg !4193
  %and74 = and i32 %69, 392, !dbg !4193
  %cmp75 = icmp eq i32 %and74, 264, !dbg !4193
  br i1 %cmp75, label %if.else78, label %if.then77, !dbg !4195

if.then77:                                        ; preds = %if.else73
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4196
  call void @png_warning(%struct.png_struct_def* %70, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.106, i64 0, i64 0)), !dbg !4197
  br label %if.end85, !dbg !4197

if.else78:                                        ; preds = %if.else73
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4198
  %72 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !4199
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4200
  %chunkdata79 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 141, !dbg !4201
  %74 = load i8*, i8** %chunkdata79, align 8, !dbg !4201
  %arrayidx80 = getelementptr inbounds i8, i8* %74, i64 0, !dbg !4200
  %75 = load i8, i8* %arrayidx80, align 1, !dbg !4200
  %conv81 = zext i8 %75 to i32, !dbg !4200
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4202
  %chunkdata82 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 141, !dbg !4203
  %77 = load i8*, i8** %chunkdata82, align 8, !dbg !4203
  %add.ptr = getelementptr inbounds i8, i8* %77, i64 1, !dbg !4204
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4205
  %chunkdata83 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 141, !dbg !4206
  %79 = load i8*, i8** %chunkdata83, align 8, !dbg !4206
  %80 = load i64, i64* %heighti, align 8, !dbg !4207
  %add.ptr84 = getelementptr inbounds i8, i8* %79, i64 %80, !dbg !4208
  call void @png_set_sCAL_s(%struct.png_struct_def* %71, %struct.png_info_def* %72, i32 %conv81, i8* %add.ptr, i8* %add.ptr84), !dbg !4209
  br label %if.end85

if.end85:                                         ; preds = %if.else78, %if.then77
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then72
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then64
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then59
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4210
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4211
  %chunkdata89 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %82, i32 0, i32 141, !dbg !4212
  %83 = load i8*, i8** %chunkdata89, align 8, !dbg !4212
  call void @png_free(%struct.png_struct_def* %81, i8* %83), !dbg !4213
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4214
  %chunkdata90 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %84, i32 0, i32 141, !dbg !4215
  store i8* null, i8** %chunkdata90, align 8, !dbg !4216
  br label %return, !dbg !4217

return:                                           ; preds = %if.end88, %if.then44, %if.then29, %if.then21, %if.then12, %if.then8, %if.then4
  ret void, !dbg !4217
}

declare dso_local i32 @png_check_fp_number(i8*, i64, i32*, i64*) #3

declare dso_local void @png_set_sCAL_s(%struct.png_struct_def*, %struct.png_info_def*, i32, i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_tIME(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !4218 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %buf = alloca [7 x i8], align 1
  %mod_time = alloca %struct.png_time_struct, align 2
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !4219, metadata !DIExpression()), !dbg !4220
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !4221, metadata !DIExpression()), !dbg !4222
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !4223, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.declare(metadata [7 x i8]* %buf, metadata !4225, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.declare(metadata %struct.png_time_struct* %mod_time, metadata !4228, metadata !DIExpression()), !dbg !4229
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4230
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 13, !dbg !4232
  %1 = load i32, i32* %mode, align 4, !dbg !4232
  %and = and i32 %1, 1, !dbg !4233
  %tobool = icmp ne i32 %and, 0, !dbg !4233
  br i1 %tobool, label %if.else, label %if.then, !dbg !4234

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4235
  call void @png_error(%struct.png_struct_def* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.107, i64 0, i64 0)) #6, !dbg !4236
  unreachable, !dbg !4236

if.else:                                          ; preds = %entry
  %3 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !4237
  %cmp = icmp ne %struct.png_info_def* %3, null, !dbg !4239
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4240

land.lhs.true:                                    ; preds = %if.else
  %4 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !4241
  %valid = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %4, i32 0, i32 2, !dbg !4242
  %5 = load i32, i32* %valid, align 8, !dbg !4242
  %and1 = and i32 %5, 512, !dbg !4243
  %tobool2 = icmp ne i32 %and1, 0, !dbg !4243
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4244

if.then3:                                         ; preds = %land.lhs.true
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4245
  call void @png_warning(%struct.png_struct_def* %6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.108, i64 0, i64 0)), !dbg !4247
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4248
  %8 = load i32, i32* %length.addr, align 4, !dbg !4249
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %7, i32 %8), !dbg !4250
  br label %return, !dbg !4251

if.end:                                           ; preds = %land.lhs.true, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4252
  %mode5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 13, !dbg !4254
  %10 = load i32, i32* %mode5, align 4, !dbg !4254
  %and6 = and i32 %10, 4, !dbg !4255
  %tobool7 = icmp ne i32 %and6, 0, !dbg !4255
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !4256

if.then8:                                         ; preds = %if.end4
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4257
  %mode9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 13, !dbg !4258
  %12 = load i32, i32* %mode9, align 4, !dbg !4259
  %or = or i32 %12, 8, !dbg !4259
  store i32 %or, i32* %mode9, align 4, !dbg !4259
  br label %if.end10, !dbg !4257

if.end10:                                         ; preds = %if.then8, %if.end4
  %13 = load i32, i32* %length.addr, align 4, !dbg !4260
  %cmp11 = icmp ne i32 %13, 7, !dbg !4262
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !4263

if.then12:                                        ; preds = %if.end10
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4264
  call void @png_warning(%struct.png_struct_def* %14, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.109, i64 0, i64 0)), !dbg !4266
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4267
  %16 = load i32, i32* %length.addr, align 4, !dbg !4268
  %call13 = call i32 @png_crc_finish(%struct.png_struct_def* %15, i32 %16), !dbg !4269
  br label %return, !dbg !4270

if.end14:                                         ; preds = %if.end10
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4271
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %buf, i64 0, i64 0, !dbg !4272
  call void @png_crc_read(%struct.png_struct_def* %17, i8* %arraydecay, i64 7), !dbg !4273
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4274
  %call15 = call i32 @png_crc_finish(%struct.png_struct_def* %18, i32 0), !dbg !4276
  %tobool16 = icmp ne i32 %call15, 0, !dbg !4276
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !4277

if.then17:                                        ; preds = %if.end14
  br label %return, !dbg !4278

if.end18:                                         ; preds = %if.end14
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* %buf, i64 0, i64 6, !dbg !4279
  %19 = load i8, i8* %arrayidx, align 1, !dbg !4279
  %second = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %mod_time, i32 0, i32 5, !dbg !4280
  store i8 %19, i8* %second, align 2, !dbg !4281
  %arrayidx19 = getelementptr inbounds [7 x i8], [7 x i8]* %buf, i64 0, i64 5, !dbg !4282
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !4282
  %minute = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %mod_time, i32 0, i32 4, !dbg !4283
  store i8 %20, i8* %minute, align 1, !dbg !4284
  %arrayidx20 = getelementptr inbounds [7 x i8], [7 x i8]* %buf, i64 0, i64 4, !dbg !4285
  %21 = load i8, i8* %arrayidx20, align 1, !dbg !4285
  %hour = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %mod_time, i32 0, i32 3, !dbg !4286
  store i8 %21, i8* %hour, align 2, !dbg !4287
  %arrayidx21 = getelementptr inbounds [7 x i8], [7 x i8]* %buf, i64 0, i64 3, !dbg !4288
  %22 = load i8, i8* %arrayidx21, align 1, !dbg !4288
  %day = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %mod_time, i32 0, i32 2, !dbg !4289
  store i8 %22, i8* %day, align 1, !dbg !4290
  %arrayidx22 = getelementptr inbounds [7 x i8], [7 x i8]* %buf, i64 0, i64 2, !dbg !4291
  %23 = load i8, i8* %arrayidx22, align 1, !dbg !4291
  %month = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %mod_time, i32 0, i32 1, !dbg !4292
  store i8 %23, i8* %month, align 2, !dbg !4293
  %arraydecay23 = getelementptr inbounds [7 x i8], [7 x i8]* %buf, i64 0, i64 0, !dbg !4294
  %24 = load i8, i8* %arraydecay23, align 1, !dbg !4294
  %conv = zext i8 %24 to i32, !dbg !4294
  %shl = shl i32 %conv, 8, !dbg !4294
  %arraydecay24 = getelementptr inbounds [7 x i8], [7 x i8]* %buf, i64 0, i64 0, !dbg !4294
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay24, i64 1, !dbg !4294
  %25 = load i8, i8* %add.ptr, align 1, !dbg !4294
  %conv25 = zext i8 %25 to i32, !dbg !4294
  %add = add i32 %shl, %conv25, !dbg !4294
  %conv26 = trunc i32 %add to i16, !dbg !4294
  %year = getelementptr inbounds %struct.png_time_struct, %struct.png_time_struct* %mod_time, i32 0, i32 0, !dbg !4295
  store i16 %conv26, i16* %year, align 2, !dbg !4296
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4297
  %27 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !4298
  call void @png_set_tIME(%struct.png_struct_def* %26, %struct.png_info_def* %27, %struct.png_time_struct* %mod_time), !dbg !4299
  br label %return, !dbg !4300

return:                                           ; preds = %if.end18, %if.then17, %if.then12, %if.then3
  ret void, !dbg !4300
}

declare dso_local void @png_set_tIME(%struct.png_struct_def*, %struct.png_info_def*, %struct.png_time_struct*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_tEXt(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !4301 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %text_ptr = alloca %struct.png_text_struct*, align 8
  %key = alloca i8*, align 8
  %text = alloca i8*, align 8
  %skip = alloca i32, align 4
  %slength = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !4302, metadata !DIExpression()), !dbg !4303
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !4304, metadata !DIExpression()), !dbg !4305
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !4306, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.declare(metadata %struct.png_text_struct** %text_ptr, metadata !4308, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.declare(metadata i8** %key, metadata !4310, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.declare(metadata i8** %text, metadata !4312, metadata !DIExpression()), !dbg !4313
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !4314, metadata !DIExpression()), !dbg !4315
  store i32 0, i32* %skip, align 4, !dbg !4315
  call void @llvm.dbg.declare(metadata i64* %slength, metadata !4316, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4318, metadata !DIExpression()), !dbg !4319
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4320
  %user_chunk_cache_max = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 137, !dbg !4322
  %1 = load i32, i32* %user_chunk_cache_max, align 4, !dbg !4322
  %cmp = icmp ne i32 %1, 0, !dbg !4323
  br i1 %cmp, label %if.then, label %if.end9, !dbg !4324

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4325
  %user_chunk_cache_max1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 137, !dbg !4328
  %3 = load i32, i32* %user_chunk_cache_max1, align 4, !dbg !4328
  %cmp2 = icmp eq i32 %3, 1, !dbg !4329
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !4330

if.then3:                                         ; preds = %if.then
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4331
  %5 = load i32, i32* %length.addr, align 4, !dbg !4333
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %4, i32 %5), !dbg !4334
  br label %if.end55, !dbg !4335

if.end:                                           ; preds = %if.then
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4336
  %user_chunk_cache_max4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 137, !dbg !4338
  %7 = load i32, i32* %user_chunk_cache_max4, align 4, !dbg !4339
  %dec = add i32 %7, -1, !dbg !4339
  store i32 %dec, i32* %user_chunk_cache_max4, align 4, !dbg !4339
  %cmp5 = icmp eq i32 %dec, 1, !dbg !4340
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !4341

if.then6:                                         ; preds = %if.end
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4342
  call void @png_warning(%struct.png_struct_def* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.110, i64 0, i64 0)), !dbg !4344
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4345
  %10 = load i32, i32* %length.addr, align 4, !dbg !4346
  %call7 = call i32 @png_crc_finish(%struct.png_struct_def* %9, i32 %10), !dbg !4347
  br label %if.end55, !dbg !4348

if.end8:                                          ; preds = %if.end
  br label %if.end9, !dbg !4349

if.end9:                                          ; preds = %if.end8, %entry
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4350
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 13, !dbg !4352
  %12 = load i32, i32* %mode, align 4, !dbg !4352
  %and = and i32 %12, 1, !dbg !4353
  %tobool = icmp ne i32 %and, 0, !dbg !4353
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !4354

if.then10:                                        ; preds = %if.end9
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4355
  call void @png_error(%struct.png_struct_def* %13, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111, i64 0, i64 0)) #6, !dbg !4356
  unreachable, !dbg !4356

if.end11:                                         ; preds = %if.end9
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4357
  %mode12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 13, !dbg !4359
  %15 = load i32, i32* %mode12, align 4, !dbg !4359
  %and13 = and i32 %15, 4, !dbg !4360
  %tobool14 = icmp ne i32 %and13, 0, !dbg !4360
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !4361

if.then15:                                        ; preds = %if.end11
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4362
  %mode16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 13, !dbg !4363
  %17 = load i32, i32* %mode16, align 4, !dbg !4364
  %or = or i32 %17, 8, !dbg !4364
  store i32 %or, i32* %mode16, align 4, !dbg !4364
  br label %if.end17, !dbg !4362

if.end17:                                         ; preds = %if.then15, %if.end11
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4365
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4366
  %chunkdata = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 141, !dbg !4367
  %20 = load i8*, i8** %chunkdata, align 8, !dbg !4367
  call void @png_free(%struct.png_struct_def* %18, i8* %20), !dbg !4368
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4369
  %22 = load i32, i32* %length.addr, align 4, !dbg !4370
  %add = add i32 %22, 1, !dbg !4371
  %conv = zext i32 %add to i64, !dbg !4370
  %call18 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %21, i64 %conv), !dbg !4372
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4373
  %chunkdata19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 141, !dbg !4374
  store i8* %call18, i8** %chunkdata19, align 8, !dbg !4375
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4376
  %chunkdata20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 141, !dbg !4378
  %25 = load i8*, i8** %chunkdata20, align 8, !dbg !4378
  %cmp21 = icmp eq i8* %25, null, !dbg !4379
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !4380

if.then23:                                        ; preds = %if.end17
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4381
  call void @png_warning(%struct.png_struct_def* %26, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.112, i64 0, i64 0)), !dbg !4383
  br label %if.end55, !dbg !4384

if.end24:                                         ; preds = %if.end17
  %27 = load i32, i32* %length.addr, align 4, !dbg !4385
  %conv25 = zext i32 %27 to i64, !dbg !4385
  store i64 %conv25, i64* %slength, align 8, !dbg !4386
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4387
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4388
  %chunkdata26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 141, !dbg !4389
  %30 = load i8*, i8** %chunkdata26, align 8, !dbg !4389
  %31 = load i64, i64* %slength, align 8, !dbg !4390
  call void @png_crc_read(%struct.png_struct_def* %28, i8* %30, i64 %31), !dbg !4391
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4392
  %33 = load i32, i32* %skip, align 4, !dbg !4394
  %call27 = call i32 @png_crc_finish(%struct.png_struct_def* %32, i32 %33), !dbg !4395
  %tobool28 = icmp ne i32 %call27, 0, !dbg !4395
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !4396

if.then29:                                        ; preds = %if.end24
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4397
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4399
  %chunkdata30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 141, !dbg !4400
  %36 = load i8*, i8** %chunkdata30, align 8, !dbg !4400
  call void @png_free(%struct.png_struct_def* %34, i8* %36), !dbg !4401
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4402
  %chunkdata31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 141, !dbg !4403
  store i8* null, i8** %chunkdata31, align 8, !dbg !4404
  br label %if.end55, !dbg !4405

if.end32:                                         ; preds = %if.end24
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4406
  %chunkdata33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 141, !dbg !4407
  %39 = load i8*, i8** %chunkdata33, align 8, !dbg !4407
  store i8* %39, i8** %key, align 8, !dbg !4408
  %40 = load i8*, i8** %key, align 8, !dbg !4409
  %41 = load i64, i64* %slength, align 8, !dbg !4410
  %arrayidx = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !4409
  store i8 0, i8* %arrayidx, align 1, !dbg !4411
  %42 = load i8*, i8** %key, align 8, !dbg !4412
  store i8* %42, i8** %text, align 8, !dbg !4414
  br label %for.cond, !dbg !4415

for.cond:                                         ; preds = %for.inc, %if.end32
  %43 = load i8*, i8** %text, align 8, !dbg !4416
  %44 = load i8, i8* %43, align 1, !dbg !4418
  %tobool34 = icmp ne i8 %44, 0, !dbg !4419
  br i1 %tobool34, label %for.body, label %for.end, !dbg !4419

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !4419

for.inc:                                          ; preds = %for.body
  %45 = load i8*, i8** %text, align 8, !dbg !4420
  %incdec.ptr = getelementptr inbounds i8, i8* %45, i32 1, !dbg !4420
  store i8* %incdec.ptr, i8** %text, align 8, !dbg !4420
  br label %for.cond, !dbg !4421, !llvm.loop !4422

for.end:                                          ; preds = %for.cond
  %46 = load i8*, i8** %text, align 8, !dbg !4424
  %47 = load i8*, i8** %key, align 8, !dbg !4426
  %48 = load i64, i64* %slength, align 8, !dbg !4427
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !4428
  %cmp35 = icmp ne i8* %46, %add.ptr, !dbg !4429
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !4430

if.then37:                                        ; preds = %for.end
  %49 = load i8*, i8** %text, align 8, !dbg !4431
  %incdec.ptr38 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !4431
  store i8* %incdec.ptr38, i8** %text, align 8, !dbg !4431
  br label %if.end39, !dbg !4432

if.end39:                                         ; preds = %if.then37, %for.end
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4433
  %call40 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %50, i64 56), !dbg !4434
  %51 = bitcast i8* %call40 to %struct.png_text_struct*, !dbg !4435
  store %struct.png_text_struct* %51, %struct.png_text_struct** %text_ptr, align 8, !dbg !4436
  %52 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4437
  %cmp41 = icmp eq %struct.png_text_struct* %52, null, !dbg !4439
  br i1 %cmp41, label %if.then43, label %if.end46, !dbg !4440

if.then43:                                        ; preds = %if.end39
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4441
  call void @png_warning(%struct.png_struct_def* %53, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)), !dbg !4443
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4444
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4445
  %chunkdata44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %55, i32 0, i32 141, !dbg !4446
  %56 = load i8*, i8** %chunkdata44, align 8, !dbg !4446
  call void @png_free(%struct.png_struct_def* %54, i8* %56), !dbg !4447
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4448
  %chunkdata45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %57, i32 0, i32 141, !dbg !4449
  store i8* null, i8** %chunkdata45, align 8, !dbg !4450
  br label %if.end55, !dbg !4451

if.end46:                                         ; preds = %if.end39
  %58 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4452
  %compression = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %58, i32 0, i32 0, !dbg !4453
  store i32 -1, i32* %compression, align 8, !dbg !4454
  %59 = load i8*, i8** %key, align 8, !dbg !4455
  %60 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4456
  %key47 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %60, i32 0, i32 1, !dbg !4457
  store i8* %59, i8** %key47, align 8, !dbg !4458
  %61 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4459
  %lang = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %61, i32 0, i32 5, !dbg !4460
  store i8* null, i8** %lang, align 8, !dbg !4461
  %62 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4462
  %lang_key = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %62, i32 0, i32 6, !dbg !4463
  store i8* null, i8** %lang_key, align 8, !dbg !4464
  %63 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4465
  %itxt_length = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %63, i32 0, i32 4, !dbg !4466
  store i64 0, i64* %itxt_length, align 8, !dbg !4467
  %64 = load i8*, i8** %text, align 8, !dbg !4468
  %65 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4469
  %text48 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %65, i32 0, i32 2, !dbg !4470
  store i8* %64, i8** %text48, align 8, !dbg !4471
  %66 = load i8*, i8** %text, align 8, !dbg !4472
  %call49 = call i64 @strlen(i8* %66) #7, !dbg !4473
  %67 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4474
  %text_length = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %67, i32 0, i32 3, !dbg !4475
  store i64 %call49, i64* %text_length, align 8, !dbg !4476
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4477
  %69 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !4478
  %70 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4479
  %call50 = call i32 @png_set_text_2(%struct.png_struct_def* %68, %struct.png_info_def* %69, %struct.png_text_struct* %70, i32 1), !dbg !4480
  store i32 %call50, i32* %ret, align 4, !dbg !4481
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4482
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4483
  %chunkdata51 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %72, i32 0, i32 141, !dbg !4484
  %73 = load i8*, i8** %chunkdata51, align 8, !dbg !4484
  call void @png_free(%struct.png_struct_def* %71, i8* %73), !dbg !4485
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4486
  %chunkdata52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %74, i32 0, i32 141, !dbg !4487
  store i8* null, i8** %chunkdata52, align 8, !dbg !4488
  %75 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4489
  %76 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4490
  %77 = bitcast %struct.png_text_struct* %76 to i8*, !dbg !4490
  call void @png_free(%struct.png_struct_def* %75, i8* %77), !dbg !4491
  %78 = load i32, i32* %ret, align 4, !dbg !4492
  %tobool53 = icmp ne i32 %78, 0, !dbg !4492
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !4494

if.then54:                                        ; preds = %if.end46
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4495
  call void @png_warning(%struct.png_struct_def* %79, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.114, i64 0, i64 0)), !dbg !4496
  br label %if.end55, !dbg !4496

if.end55:                                         ; preds = %if.then3, %if.then6, %if.then23, %if.then29, %if.then43, %if.then54, %if.end46
  ret void, !dbg !4497
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

declare dso_local i32 @png_set_text_2(%struct.png_struct_def*, %struct.png_info_def*, %struct.png_text_struct*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_zTXt(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !4498 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %text_ptr = alloca %struct.png_text_struct*, align 8
  %text = alloca i8*, align 8
  %comp_type = alloca i32, align 4
  %ret = alloca i32, align 4
  %slength = alloca i64, align 8
  %prefix_len = alloca i64, align 8
  %data_len = alloca i64, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !4499, metadata !DIExpression()), !dbg !4500
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !4501, metadata !DIExpression()), !dbg !4502
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !4503, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.declare(metadata %struct.png_text_struct** %text_ptr, metadata !4505, metadata !DIExpression()), !dbg !4506
  call void @llvm.dbg.declare(metadata i8** %text, metadata !4507, metadata !DIExpression()), !dbg !4508
  call void @llvm.dbg.declare(metadata i32* %comp_type, metadata !4509, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4511, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.declare(metadata i64* %slength, metadata !4513, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !4515, metadata !DIExpression()), !dbg !4516
  call void @llvm.dbg.declare(metadata i64* %data_len, metadata !4517, metadata !DIExpression()), !dbg !4518
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4519
  %user_chunk_cache_max = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 137, !dbg !4521
  %1 = load i32, i32* %user_chunk_cache_max, align 4, !dbg !4521
  %cmp = icmp ne i32 %1, 0, !dbg !4522
  br i1 %cmp, label %if.then, label %if.end9, !dbg !4523

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4524
  %user_chunk_cache_max1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 137, !dbg !4527
  %3 = load i32, i32* %user_chunk_cache_max1, align 4, !dbg !4527
  %cmp2 = icmp eq i32 %3, 1, !dbg !4528
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !4529

if.then3:                                         ; preds = %if.then
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4530
  %5 = load i32, i32* %length.addr, align 4, !dbg !4532
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %4, i32 %5), !dbg !4533
  br label %if.end69, !dbg !4534

if.end:                                           ; preds = %if.then
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4535
  %user_chunk_cache_max4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 137, !dbg !4537
  %7 = load i32, i32* %user_chunk_cache_max4, align 4, !dbg !4538
  %dec = add i32 %7, -1, !dbg !4538
  store i32 %dec, i32* %user_chunk_cache_max4, align 4, !dbg !4538
  %cmp5 = icmp eq i32 %dec, 1, !dbg !4539
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !4540

if.then6:                                         ; preds = %if.end
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4541
  call void @png_warning(%struct.png_struct_def* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.115, i64 0, i64 0)), !dbg !4543
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4544
  %10 = load i32, i32* %length.addr, align 4, !dbg !4545
  %call7 = call i32 @png_crc_finish(%struct.png_struct_def* %9, i32 %10), !dbg !4546
  br label %if.end69, !dbg !4547

if.end8:                                          ; preds = %if.end
  br label %if.end9, !dbg !4548

if.end9:                                          ; preds = %if.end8, %entry
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4549
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 13, !dbg !4551
  %12 = load i32, i32* %mode, align 4, !dbg !4551
  %and = and i32 %12, 1, !dbg !4552
  %tobool = icmp ne i32 %and, 0, !dbg !4552
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !4553

if.then10:                                        ; preds = %if.end9
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4554
  call void @png_error(%struct.png_struct_def* %13, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.116, i64 0, i64 0)) #6, !dbg !4555
  unreachable, !dbg !4555

if.end11:                                         ; preds = %if.end9
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4556
  %mode12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 13, !dbg !4558
  %15 = load i32, i32* %mode12, align 4, !dbg !4558
  %and13 = and i32 %15, 4, !dbg !4559
  %tobool14 = icmp ne i32 %and13, 0, !dbg !4559
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !4560

if.then15:                                        ; preds = %if.end11
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4561
  %mode16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 13, !dbg !4562
  %17 = load i32, i32* %mode16, align 4, !dbg !4563
  %or = or i32 %17, 8, !dbg !4563
  store i32 %or, i32* %mode16, align 4, !dbg !4563
  br label %if.end17, !dbg !4561

if.end17:                                         ; preds = %if.then15, %if.end11
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4564
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4565
  %chunkdata = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 141, !dbg !4566
  %20 = load i8*, i8** %chunkdata, align 8, !dbg !4566
  call void @png_free(%struct.png_struct_def* %18, i8* %20), !dbg !4567
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4568
  %22 = load i32, i32* %length.addr, align 4, !dbg !4569
  %add = add i32 %22, 1, !dbg !4570
  %conv = zext i32 %add to i64, !dbg !4569
  %call18 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %21, i64 %conv), !dbg !4571
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4572
  %chunkdata19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 141, !dbg !4573
  store i8* %call18, i8** %chunkdata19, align 8, !dbg !4574
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4575
  %chunkdata20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 141, !dbg !4577
  %25 = load i8*, i8** %chunkdata20, align 8, !dbg !4577
  %cmp21 = icmp eq i8* %25, null, !dbg !4578
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !4579

if.then23:                                        ; preds = %if.end17
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4580
  call void @png_warning(%struct.png_struct_def* %26, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.117, i64 0, i64 0)), !dbg !4582
  br label %if.end69, !dbg !4583

if.end24:                                         ; preds = %if.end17
  %27 = load i32, i32* %length.addr, align 4, !dbg !4584
  %conv25 = zext i32 %27 to i64, !dbg !4584
  store i64 %conv25, i64* %slength, align 8, !dbg !4585
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4586
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4587
  %chunkdata26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 141, !dbg !4588
  %30 = load i8*, i8** %chunkdata26, align 8, !dbg !4588
  %31 = load i64, i64* %slength, align 8, !dbg !4589
  call void @png_crc_read(%struct.png_struct_def* %28, i8* %30, i64 %31), !dbg !4590
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4591
  %call27 = call i32 @png_crc_finish(%struct.png_struct_def* %32, i32 0), !dbg !4593
  %tobool28 = icmp ne i32 %call27, 0, !dbg !4593
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !4594

if.then29:                                        ; preds = %if.end24
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4595
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4597
  %chunkdata30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 141, !dbg !4598
  %35 = load i8*, i8** %chunkdata30, align 8, !dbg !4598
  call void @png_free(%struct.png_struct_def* %33, i8* %35), !dbg !4599
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4600
  %chunkdata31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 141, !dbg !4601
  store i8* null, i8** %chunkdata31, align 8, !dbg !4602
  br label %if.end69, !dbg !4603

if.end32:                                         ; preds = %if.end24
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4604
  %chunkdata33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 141, !dbg !4605
  %38 = load i8*, i8** %chunkdata33, align 8, !dbg !4605
  %39 = load i64, i64* %slength, align 8, !dbg !4606
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !4604
  store i8 0, i8* %arrayidx, align 1, !dbg !4607
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4608
  %chunkdata34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 141, !dbg !4610
  %41 = load i8*, i8** %chunkdata34, align 8, !dbg !4610
  store i8* %41, i8** %text, align 8, !dbg !4611
  br label %for.cond, !dbg !4612

for.cond:                                         ; preds = %for.inc, %if.end32
  %42 = load i8*, i8** %text, align 8, !dbg !4613
  %43 = load i8, i8* %42, align 1, !dbg !4615
  %tobool35 = icmp ne i8 %43, 0, !dbg !4616
  br i1 %tobool35, label %for.body, label %for.end, !dbg !4616

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !4616

for.inc:                                          ; preds = %for.body
  %44 = load i8*, i8** %text, align 8, !dbg !4617
  %incdec.ptr = getelementptr inbounds i8, i8* %44, i32 1, !dbg !4617
  store i8* %incdec.ptr, i8** %text, align 8, !dbg !4617
  br label %for.cond, !dbg !4618, !llvm.loop !4619

for.end:                                          ; preds = %for.cond
  %45 = load i8*, i8** %text, align 8, !dbg !4621
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4623
  %chunkdata36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %46, i32 0, i32 141, !dbg !4624
  %47 = load i8*, i8** %chunkdata36, align 8, !dbg !4624
  %48 = load i64, i64* %slength, align 8, !dbg !4625
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !4626
  %add.ptr37 = getelementptr inbounds i8, i8* %add.ptr, i64 -2, !dbg !4627
  %cmp38 = icmp uge i8* %45, %add.ptr37, !dbg !4628
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !4629

if.then40:                                        ; preds = %for.end
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4630
  call void @png_warning(%struct.png_struct_def* %49, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.118, i64 0, i64 0)), !dbg !4632
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4633
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4634
  %chunkdata41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 141, !dbg !4635
  %52 = load i8*, i8** %chunkdata41, align 8, !dbg !4635
  call void @png_free(%struct.png_struct_def* %50, i8* %52), !dbg !4636
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4637
  %chunkdata42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %53, i32 0, i32 141, !dbg !4638
  store i8* null, i8** %chunkdata42, align 8, !dbg !4639
  br label %if.end69, !dbg !4640

if.else:                                          ; preds = %for.end
  %54 = load i8*, i8** %text, align 8, !dbg !4641
  %incdec.ptr43 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !4641
  store i8* %incdec.ptr43, i8** %text, align 8, !dbg !4641
  %55 = load i8, i8* %incdec.ptr43, align 1, !dbg !4643
  %conv44 = zext i8 %55 to i32, !dbg !4643
  store i32 %conv44, i32* %comp_type, align 4, !dbg !4644
  %56 = load i32, i32* %comp_type, align 4, !dbg !4645
  %cmp45 = icmp ne i32 %56, 0, !dbg !4647
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !4648

if.then47:                                        ; preds = %if.else
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4649
  call void @png_warning(%struct.png_struct_def* %57, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.119, i64 0, i64 0)), !dbg !4651
  store i32 0, i32* %comp_type, align 4, !dbg !4652
  br label %if.end48, !dbg !4653

if.end48:                                         ; preds = %if.then47, %if.else
  %58 = load i8*, i8** %text, align 8, !dbg !4654
  %incdec.ptr49 = getelementptr inbounds i8, i8* %58, i32 1, !dbg !4654
  store i8* %incdec.ptr49, i8** %text, align 8, !dbg !4654
  br label %if.end50

if.end50:                                         ; preds = %if.end48
  %59 = load i8*, i8** %text, align 8, !dbg !4655
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4656
  %chunkdata51 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %60, i32 0, i32 141, !dbg !4657
  %61 = load i8*, i8** %chunkdata51, align 8, !dbg !4657
  %sub.ptr.lhs.cast = ptrtoint i8* %59 to i64, !dbg !4658
  %sub.ptr.rhs.cast = ptrtoint i8* %61 to i64, !dbg !4658
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4658
  store i64 %sub.ptr.sub, i64* %prefix_len, align 8, !dbg !4659
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4660
  %63 = load i32, i32* %comp_type, align 4, !dbg !4661
  %64 = load i32, i32* %length.addr, align 4, !dbg !4662
  %conv52 = zext i32 %64 to i64, !dbg !4663
  %65 = load i64, i64* %prefix_len, align 8, !dbg !4664
  call void @png_decompress_chunk(%struct.png_struct_def* %62, i32 %63, i64 %conv52, i64 %65, i64* %data_len), !dbg !4665
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4666
  %call53 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %66, i64 56), !dbg !4667
  %67 = bitcast i8* %call53 to %struct.png_text_struct*, !dbg !4668
  store %struct.png_text_struct* %67, %struct.png_text_struct** %text_ptr, align 8, !dbg !4669
  %68 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4670
  %cmp54 = icmp eq %struct.png_text_struct* %68, null, !dbg !4672
  br i1 %cmp54, label %if.then56, label %if.end59, !dbg !4673

if.then56:                                        ; preds = %if.end50
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4674
  call void @png_warning(%struct.png_struct_def* %69, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.120, i64 0, i64 0)), !dbg !4676
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4677
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4678
  %chunkdata57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 141, !dbg !4679
  %72 = load i8*, i8** %chunkdata57, align 8, !dbg !4679
  call void @png_free(%struct.png_struct_def* %70, i8* %72), !dbg !4680
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4681
  %chunkdata58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 141, !dbg !4682
  store i8* null, i8** %chunkdata58, align 8, !dbg !4683
  br label %if.end69, !dbg !4684

if.end59:                                         ; preds = %if.end50
  %74 = load i32, i32* %comp_type, align 4, !dbg !4685
  %75 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4686
  %compression = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %75, i32 0, i32 0, !dbg !4687
  store i32 %74, i32* %compression, align 8, !dbg !4688
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4689
  %chunkdata60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 141, !dbg !4690
  %77 = load i8*, i8** %chunkdata60, align 8, !dbg !4690
  %78 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4691
  %key = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %78, i32 0, i32 1, !dbg !4692
  store i8* %77, i8** %key, align 8, !dbg !4693
  %79 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4694
  %lang = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %79, i32 0, i32 5, !dbg !4695
  store i8* null, i8** %lang, align 8, !dbg !4696
  %80 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4697
  %lang_key = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %80, i32 0, i32 6, !dbg !4698
  store i8* null, i8** %lang_key, align 8, !dbg !4699
  %81 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4700
  %itxt_length = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %81, i32 0, i32 4, !dbg !4701
  store i64 0, i64* %itxt_length, align 8, !dbg !4702
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4703
  %chunkdata61 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %82, i32 0, i32 141, !dbg !4704
  %83 = load i8*, i8** %chunkdata61, align 8, !dbg !4704
  %84 = load i64, i64* %prefix_len, align 8, !dbg !4705
  %add.ptr62 = getelementptr inbounds i8, i8* %83, i64 %84, !dbg !4706
  %85 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4707
  %text63 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %85, i32 0, i32 2, !dbg !4708
  store i8* %add.ptr62, i8** %text63, align 8, !dbg !4709
  %86 = load i64, i64* %data_len, align 8, !dbg !4710
  %87 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4711
  %text_length = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %87, i32 0, i32 3, !dbg !4712
  store i64 %86, i64* %text_length, align 8, !dbg !4713
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4714
  %89 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !4715
  %90 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4716
  %call64 = call i32 @png_set_text_2(%struct.png_struct_def* %88, %struct.png_info_def* %89, %struct.png_text_struct* %90, i32 1), !dbg !4717
  store i32 %call64, i32* %ret, align 4, !dbg !4718
  %91 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4719
  %92 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !4720
  %93 = bitcast %struct.png_text_struct* %92 to i8*, !dbg !4720
  call void @png_free(%struct.png_struct_def* %91, i8* %93), !dbg !4721
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4722
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4723
  %chunkdata65 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 141, !dbg !4724
  %96 = load i8*, i8** %chunkdata65, align 8, !dbg !4724
  call void @png_free(%struct.png_struct_def* %94, i8* %96), !dbg !4725
  %97 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4726
  %chunkdata66 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %97, i32 0, i32 141, !dbg !4727
  store i8* null, i8** %chunkdata66, align 8, !dbg !4728
  %98 = load i32, i32* %ret, align 4, !dbg !4729
  %tobool67 = icmp ne i32 %98, 0, !dbg !4729
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !4731

if.then68:                                        ; preds = %if.end59
  %99 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4732
  call void @png_error(%struct.png_struct_def* %99, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.121, i64 0, i64 0)) #6, !dbg !4733
  unreachable, !dbg !4733

if.end69:                                         ; preds = %if.then3, %if.then6, %if.then23, %if.then29, %if.then40, %if.then56, %if.end59
  ret void, !dbg !4734
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_iTXt(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !4735 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %text_ptr = alloca %struct.png_text_struct*, align 8
  %key = alloca i8*, align 8
  %lang = alloca i8*, align 8
  %text = alloca i8*, align 8
  %lang_key = alloca i8*, align 8
  %comp_flag = alloca i32, align 4
  %comp_type = alloca i32, align 4
  %ret = alloca i32, align 4
  %slength = alloca i64, align 8
  %prefix_len = alloca i64, align 8
  %data_len = alloca i64, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !4736, metadata !DIExpression()), !dbg !4737
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !4738, metadata !DIExpression()), !dbg !4739
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !4740, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.declare(metadata %struct.png_text_struct** %text_ptr, metadata !4742, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.declare(metadata i8** %key, metadata !4744, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.declare(metadata i8** %lang, metadata !4746, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.declare(metadata i8** %text, metadata !4748, metadata !DIExpression()), !dbg !4749
  call void @llvm.dbg.declare(metadata i8** %lang_key, metadata !4750, metadata !DIExpression()), !dbg !4751
  call void @llvm.dbg.declare(metadata i32* %comp_flag, metadata !4752, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.declare(metadata i32* %comp_type, metadata !4754, metadata !DIExpression()), !dbg !4755
  store i32 0, i32* %comp_type, align 4, !dbg !4755
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4756, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.declare(metadata i64* %slength, metadata !4758, metadata !DIExpression()), !dbg !4759
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !4760, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.declare(metadata i64* %data_len, metadata !4762, metadata !DIExpression()), !dbg !4763
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4764
  %user_chunk_cache_max = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 137, !dbg !4766
  %1 = load i32, i32* %user_chunk_cache_max, align 4, !dbg !4766
  %cmp = icmp ne i32 %1, 0, !dbg !4767
  br i1 %cmp, label %if.then, label %if.end9, !dbg !4768

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4769
  %user_chunk_cache_max1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 137, !dbg !4772
  %3 = load i32, i32* %user_chunk_cache_max1, align 4, !dbg !4772
  %cmp2 = icmp eq i32 %3, 1, !dbg !4773
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !4774

if.then3:                                         ; preds = %if.then
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4775
  %5 = load i32, i32* %length.addr, align 4, !dbg !4777
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %4, i32 %5), !dbg !4778
  br label %if.end127, !dbg !4779

if.end:                                           ; preds = %if.then
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4780
  %user_chunk_cache_max4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 137, !dbg !4782
  %7 = load i32, i32* %user_chunk_cache_max4, align 4, !dbg !4783
  %dec = add i32 %7, -1, !dbg !4783
  store i32 %dec, i32* %user_chunk_cache_max4, align 4, !dbg !4783
  %cmp5 = icmp eq i32 %dec, 1, !dbg !4784
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !4785

if.then6:                                         ; preds = %if.end
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4786
  call void @png_warning(%struct.png_struct_def* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.122, i64 0, i64 0)), !dbg !4788
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4789
  %10 = load i32, i32* %length.addr, align 4, !dbg !4790
  %call7 = call i32 @png_crc_finish(%struct.png_struct_def* %9, i32 %10), !dbg !4791
  br label %if.end127, !dbg !4792

if.end8:                                          ; preds = %if.end
  br label %if.end9, !dbg !4793

if.end9:                                          ; preds = %if.end8, %entry
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4794
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 13, !dbg !4796
  %12 = load i32, i32* %mode, align 4, !dbg !4796
  %and = and i32 %12, 1, !dbg !4797
  %tobool = icmp ne i32 %and, 0, !dbg !4797
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !4798

if.then10:                                        ; preds = %if.end9
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4799
  call void @png_error(%struct.png_struct_def* %13, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #6, !dbg !4800
  unreachable, !dbg !4800

if.end11:                                         ; preds = %if.end9
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4801
  %mode12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 13, !dbg !4803
  %15 = load i32, i32* %mode12, align 4, !dbg !4803
  %and13 = and i32 %15, 4, !dbg !4804
  %tobool14 = icmp ne i32 %and13, 0, !dbg !4804
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !4805

if.then15:                                        ; preds = %if.end11
  %16 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4806
  %mode16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %16, i32 0, i32 13, !dbg !4807
  %17 = load i32, i32* %mode16, align 4, !dbg !4808
  %or = or i32 %17, 8, !dbg !4808
  store i32 %or, i32* %mode16, align 4, !dbg !4808
  br label %if.end17, !dbg !4806

if.end17:                                         ; preds = %if.then15, %if.end11
  %18 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4809
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4810
  %chunkdata = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 141, !dbg !4811
  %20 = load i8*, i8** %chunkdata, align 8, !dbg !4811
  call void @png_free(%struct.png_struct_def* %18, i8* %20), !dbg !4812
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4813
  %22 = load i32, i32* %length.addr, align 4, !dbg !4814
  %add = add i32 %22, 1, !dbg !4815
  %conv = zext i32 %add to i64, !dbg !4814
  %call18 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %21, i64 %conv), !dbg !4816
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4817
  %chunkdata19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 141, !dbg !4818
  store i8* %call18, i8** %chunkdata19, align 8, !dbg !4819
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4820
  %chunkdata20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %24, i32 0, i32 141, !dbg !4822
  %25 = load i8*, i8** %chunkdata20, align 8, !dbg !4822
  %cmp21 = icmp eq i8* %25, null, !dbg !4823
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !4824

if.then23:                                        ; preds = %if.end17
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4825
  call void @png_warning(%struct.png_struct_def* %26, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.124, i64 0, i64 0)), !dbg !4827
  br label %if.end127, !dbg !4828

if.end24:                                         ; preds = %if.end17
  %27 = load i32, i32* %length.addr, align 4, !dbg !4829
  %conv25 = zext i32 %27 to i64, !dbg !4829
  store i64 %conv25, i64* %slength, align 8, !dbg !4830
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4831
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4832
  %chunkdata26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 141, !dbg !4833
  %30 = load i8*, i8** %chunkdata26, align 8, !dbg !4833
  %31 = load i64, i64* %slength, align 8, !dbg !4834
  call void @png_crc_read(%struct.png_struct_def* %28, i8* %30, i64 %31), !dbg !4835
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4836
  %call27 = call i32 @png_crc_finish(%struct.png_struct_def* %32, i32 0), !dbg !4838
  %tobool28 = icmp ne i32 %call27, 0, !dbg !4838
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !4839

if.then29:                                        ; preds = %if.end24
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4840
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4842
  %chunkdata30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 141, !dbg !4843
  %35 = load i8*, i8** %chunkdata30, align 8, !dbg !4843
  call void @png_free(%struct.png_struct_def* %33, i8* %35), !dbg !4844
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4845
  %chunkdata31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 141, !dbg !4846
  store i8* null, i8** %chunkdata31, align 8, !dbg !4847
  br label %if.end127, !dbg !4848

if.end32:                                         ; preds = %if.end24
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4849
  %chunkdata33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 141, !dbg !4850
  %38 = load i8*, i8** %chunkdata33, align 8, !dbg !4850
  %39 = load i64, i64* %slength, align 8, !dbg !4851
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !4849
  store i8 0, i8* %arrayidx, align 1, !dbg !4852
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4853
  %chunkdata34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 141, !dbg !4855
  %41 = load i8*, i8** %chunkdata34, align 8, !dbg !4855
  store i8* %41, i8** %lang, align 8, !dbg !4856
  br label %for.cond, !dbg !4857

for.cond:                                         ; preds = %for.inc, %if.end32
  %42 = load i8*, i8** %lang, align 8, !dbg !4858
  %43 = load i8, i8* %42, align 1, !dbg !4860
  %tobool35 = icmp ne i8 %43, 0, !dbg !4861
  br i1 %tobool35, label %for.body, label %for.end, !dbg !4861

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !4861

for.inc:                                          ; preds = %for.body
  %44 = load i8*, i8** %lang, align 8, !dbg !4862
  %incdec.ptr = getelementptr inbounds i8, i8* %44, i32 1, !dbg !4862
  store i8* %incdec.ptr, i8** %lang, align 8, !dbg !4862
  br label %for.cond, !dbg !4863, !llvm.loop !4864

for.end:                                          ; preds = %for.cond
  %45 = load i8*, i8** %lang, align 8, !dbg !4866
  %incdec.ptr36 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !4866
  store i8* %incdec.ptr36, i8** %lang, align 8, !dbg !4866
  %46 = load i8*, i8** %lang, align 8, !dbg !4867
  %47 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4869
  %chunkdata37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %47, i32 0, i32 141, !dbg !4870
  %48 = load i8*, i8** %chunkdata37, align 8, !dbg !4870
  %49 = load i64, i64* %slength, align 8, !dbg !4871
  %add.ptr = getelementptr inbounds i8, i8* %48, i64 %49, !dbg !4872
  %add.ptr38 = getelementptr inbounds i8, i8* %add.ptr, i64 -3, !dbg !4873
  %cmp39 = icmp uge i8* %46, %add.ptr38, !dbg !4874
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !4875

if.then41:                                        ; preds = %for.end
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4876
  call void @png_warning(%struct.png_struct_def* %50, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.125, i64 0, i64 0)), !dbg !4878
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4879
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4880
  %chunkdata42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 141, !dbg !4881
  %53 = load i8*, i8** %chunkdata42, align 8, !dbg !4881
  call void @png_free(%struct.png_struct_def* %51, i8* %53), !dbg !4882
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4883
  %chunkdata43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %54, i32 0, i32 141, !dbg !4884
  store i8* null, i8** %chunkdata43, align 8, !dbg !4885
  br label %if.end127, !dbg !4886

if.else:                                          ; preds = %for.end
  %55 = load i8*, i8** %lang, align 8, !dbg !4887
  %incdec.ptr44 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4887
  store i8* %incdec.ptr44, i8** %lang, align 8, !dbg !4887
  %56 = load i8, i8* %55, align 1, !dbg !4889
  %conv45 = zext i8 %56 to i32, !dbg !4889
  store i32 %conv45, i32* %comp_flag, align 4, !dbg !4890
  %57 = load i8*, i8** %lang, align 8, !dbg !4891
  %incdec.ptr46 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !4891
  store i8* %incdec.ptr46, i8** %lang, align 8, !dbg !4891
  %58 = load i8, i8* %57, align 1, !dbg !4892
  %conv47 = zext i8 %58 to i32, !dbg !4892
  store i32 %conv47, i32* %comp_type, align 4, !dbg !4893
  br label %if.end48

if.end48:                                         ; preds = %if.else
  %59 = load i32, i32* %comp_type, align 4, !dbg !4894
  %tobool49 = icmp ne i32 %59, 0, !dbg !4894
  br i1 %tobool49, label %if.then53, label %lor.lhs.false, !dbg !4896

lor.lhs.false:                                    ; preds = %if.end48
  %60 = load i32, i32* %comp_flag, align 4, !dbg !4897
  %tobool50 = icmp ne i32 %60, 0, !dbg !4897
  br i1 %tobool50, label %land.lhs.true, label %if.end56, !dbg !4898

land.lhs.true:                                    ; preds = %lor.lhs.false
  %61 = load i32, i32* %comp_flag, align 4, !dbg !4899
  %cmp51 = icmp ne i32 %61, 0, !dbg !4900
  br i1 %cmp51, label %if.then53, label %if.end56, !dbg !4901

if.then53:                                        ; preds = %land.lhs.true, %if.end48
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4902
  call void @png_warning(%struct.png_struct_def* %62, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.126, i64 0, i64 0)), !dbg !4904
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4905
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4906
  %chunkdata54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 141, !dbg !4907
  %65 = load i8*, i8** %chunkdata54, align 8, !dbg !4907
  call void @png_free(%struct.png_struct_def* %63, i8* %65), !dbg !4908
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4909
  %chunkdata55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 141, !dbg !4910
  store i8* null, i8** %chunkdata55, align 8, !dbg !4911
  br label %if.end127, !dbg !4912

if.end56:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %67 = load i8*, i8** %lang, align 8, !dbg !4913
  store i8* %67, i8** %lang_key, align 8, !dbg !4915
  br label %for.cond57, !dbg !4916

for.cond57:                                       ; preds = %for.inc60, %if.end56
  %68 = load i8*, i8** %lang_key, align 8, !dbg !4917
  %69 = load i8, i8* %68, align 1, !dbg !4919
  %tobool58 = icmp ne i8 %69, 0, !dbg !4920
  br i1 %tobool58, label %for.body59, label %for.end62, !dbg !4920

for.body59:                                       ; preds = %for.cond57
  br label %for.inc60, !dbg !4920

for.inc60:                                        ; preds = %for.body59
  %70 = load i8*, i8** %lang_key, align 8, !dbg !4921
  %incdec.ptr61 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !4921
  store i8* %incdec.ptr61, i8** %lang_key, align 8, !dbg !4921
  br label %for.cond57, !dbg !4922, !llvm.loop !4923

for.end62:                                        ; preds = %for.cond57
  %71 = load i8*, i8** %lang_key, align 8, !dbg !4925
  %incdec.ptr63 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !4925
  store i8* %incdec.ptr63, i8** %lang_key, align 8, !dbg !4925
  %72 = load i8*, i8** %lang_key, align 8, !dbg !4926
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4928
  %chunkdata64 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 141, !dbg !4929
  %74 = load i8*, i8** %chunkdata64, align 8, !dbg !4929
  %75 = load i64, i64* %slength, align 8, !dbg !4930
  %add.ptr65 = getelementptr inbounds i8, i8* %74, i64 %75, !dbg !4931
  %cmp66 = icmp uge i8* %72, %add.ptr65, !dbg !4932
  br i1 %cmp66, label %if.then68, label %if.end71, !dbg !4933

if.then68:                                        ; preds = %for.end62
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4934
  call void @png_warning(%struct.png_struct_def* %76, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.125, i64 0, i64 0)), !dbg !4936
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4937
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4938
  %chunkdata69 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 141, !dbg !4939
  %79 = load i8*, i8** %chunkdata69, align 8, !dbg !4939
  call void @png_free(%struct.png_struct_def* %77, i8* %79), !dbg !4940
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4941
  %chunkdata70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 141, !dbg !4942
  store i8* null, i8** %chunkdata70, align 8, !dbg !4943
  br label %if.end127, !dbg !4944

if.end71:                                         ; preds = %for.end62
  %81 = load i8*, i8** %lang_key, align 8, !dbg !4945
  store i8* %81, i8** %text, align 8, !dbg !4947
  br label %for.cond72, !dbg !4948

for.cond72:                                       ; preds = %for.inc75, %if.end71
  %82 = load i8*, i8** %text, align 8, !dbg !4949
  %83 = load i8, i8* %82, align 1, !dbg !4951
  %tobool73 = icmp ne i8 %83, 0, !dbg !4952
  br i1 %tobool73, label %for.body74, label %for.end77, !dbg !4952

for.body74:                                       ; preds = %for.cond72
  br label %for.inc75, !dbg !4952

for.inc75:                                        ; preds = %for.body74
  %84 = load i8*, i8** %text, align 8, !dbg !4953
  %incdec.ptr76 = getelementptr inbounds i8, i8* %84, i32 1, !dbg !4953
  store i8* %incdec.ptr76, i8** %text, align 8, !dbg !4953
  br label %for.cond72, !dbg !4954, !llvm.loop !4955

for.end77:                                        ; preds = %for.cond72
  %85 = load i8*, i8** %text, align 8, !dbg !4957
  %incdec.ptr78 = getelementptr inbounds i8, i8* %85, i32 1, !dbg !4957
  store i8* %incdec.ptr78, i8** %text, align 8, !dbg !4957
  %86 = load i8*, i8** %text, align 8, !dbg !4958
  %87 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4960
  %chunkdata79 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %87, i32 0, i32 141, !dbg !4961
  %88 = load i8*, i8** %chunkdata79, align 8, !dbg !4961
  %89 = load i64, i64* %slength, align 8, !dbg !4962
  %add.ptr80 = getelementptr inbounds i8, i8* %88, i64 %89, !dbg !4963
  %cmp81 = icmp uge i8* %86, %add.ptr80, !dbg !4964
  br i1 %cmp81, label %if.then83, label %if.end86, !dbg !4965

if.then83:                                        ; preds = %for.end77
  %90 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4966
  call void @png_warning(%struct.png_struct_def* %90, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.127, i64 0, i64 0)), !dbg !4968
  %91 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4969
  %92 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4970
  %chunkdata84 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %92, i32 0, i32 141, !dbg !4971
  %93 = load i8*, i8** %chunkdata84, align 8, !dbg !4971
  call void @png_free(%struct.png_struct_def* %91, i8* %93), !dbg !4972
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4973
  %chunkdata85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %94, i32 0, i32 141, !dbg !4974
  store i8* null, i8** %chunkdata85, align 8, !dbg !4975
  br label %if.end127, !dbg !4976

if.end86:                                         ; preds = %for.end77
  %95 = load i8*, i8** %text, align 8, !dbg !4977
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4978
  %chunkdata87 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %96, i32 0, i32 141, !dbg !4979
  %97 = load i8*, i8** %chunkdata87, align 8, !dbg !4979
  %sub.ptr.lhs.cast = ptrtoint i8* %95 to i64, !dbg !4980
  %sub.ptr.rhs.cast = ptrtoint i8* %97 to i64, !dbg !4980
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4980
  store i64 %sub.ptr.sub, i64* %prefix_len, align 8, !dbg !4981
  %98 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4982
  %chunkdata88 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %98, i32 0, i32 141, !dbg !4983
  %99 = load i8*, i8** %chunkdata88, align 8, !dbg !4983
  store i8* %99, i8** %key, align 8, !dbg !4984
  %100 = load i32, i32* %comp_flag, align 4, !dbg !4985
  %tobool89 = icmp ne i32 %100, 0, !dbg !4985
  br i1 %tobool89, label %if.then90, label %if.else92, !dbg !4987

if.then90:                                        ; preds = %if.end86
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4988
  %102 = load i32, i32* %comp_type, align 4, !dbg !4989
  %103 = load i32, i32* %length.addr, align 4, !dbg !4990
  %conv91 = zext i32 %103 to i64, !dbg !4991
  %104 = load i64, i64* %prefix_len, align 8, !dbg !4992
  call void @png_decompress_chunk(%struct.png_struct_def* %101, i32 %102, i64 %conv91, i64 %104, i64* %data_len), !dbg !4993
  br label %if.end96, !dbg !4993

if.else92:                                        ; preds = %if.end86
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !4994
  %chunkdata93 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %105, i32 0, i32 141, !dbg !4995
  %106 = load i8*, i8** %chunkdata93, align 8, !dbg !4995
  %107 = load i64, i64* %prefix_len, align 8, !dbg !4996
  %add.ptr94 = getelementptr inbounds i8, i8* %106, i64 %107, !dbg !4997
  %call95 = call i64 @strlen(i8* %add.ptr94) #7, !dbg !4998
  store i64 %call95, i64* %data_len, align 8, !dbg !4999
  br label %if.end96

if.end96:                                         ; preds = %if.else92, %if.then90
  %108 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5000
  %call97 = call noalias i8* @png_malloc_warn(%struct.png_struct_def* %108, i64 56), !dbg !5001
  %109 = bitcast i8* %call97 to %struct.png_text_struct*, !dbg !5002
  store %struct.png_text_struct* %109, %struct.png_text_struct** %text_ptr, align 8, !dbg !5003
  %110 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !5004
  %cmp98 = icmp eq %struct.png_text_struct* %110, null, !dbg !5006
  br i1 %cmp98, label %if.then100, label %if.end103, !dbg !5007

if.then100:                                       ; preds = %if.end96
  %111 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5008
  call void @png_warning(%struct.png_struct_def* %111, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.128, i64 0, i64 0)), !dbg !5010
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5011
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5012
  %chunkdata101 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 141, !dbg !5013
  %114 = load i8*, i8** %chunkdata101, align 8, !dbg !5013
  call void @png_free(%struct.png_struct_def* %112, i8* %114), !dbg !5014
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5015
  %chunkdata102 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %115, i32 0, i32 141, !dbg !5016
  store i8* null, i8** %chunkdata102, align 8, !dbg !5017
  br label %if.end127, !dbg !5018

if.end103:                                        ; preds = %if.end96
  %116 = load i32, i32* %comp_flag, align 4, !dbg !5019
  %add104 = add nsw i32 %116, 1, !dbg !5020
  %117 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !5021
  %compression = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %117, i32 0, i32 0, !dbg !5022
  store i32 %add104, i32* %compression, align 8, !dbg !5023
  %118 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5024
  %chunkdata105 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %118, i32 0, i32 141, !dbg !5025
  %119 = load i8*, i8** %chunkdata105, align 8, !dbg !5025
  %120 = load i8*, i8** %lang_key, align 8, !dbg !5026
  %121 = load i8*, i8** %key, align 8, !dbg !5027
  %sub.ptr.lhs.cast106 = ptrtoint i8* %120 to i64, !dbg !5028
  %sub.ptr.rhs.cast107 = ptrtoint i8* %121 to i64, !dbg !5028
  %sub.ptr.sub108 = sub i64 %sub.ptr.lhs.cast106, %sub.ptr.rhs.cast107, !dbg !5028
  %add.ptr109 = getelementptr inbounds i8, i8* %119, i64 %sub.ptr.sub108, !dbg !5029
  %122 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !5030
  %lang_key110 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %122, i32 0, i32 6, !dbg !5031
  store i8* %add.ptr109, i8** %lang_key110, align 8, !dbg !5032
  %123 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5033
  %chunkdata111 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %123, i32 0, i32 141, !dbg !5034
  %124 = load i8*, i8** %chunkdata111, align 8, !dbg !5034
  %125 = load i8*, i8** %lang, align 8, !dbg !5035
  %126 = load i8*, i8** %key, align 8, !dbg !5036
  %sub.ptr.lhs.cast112 = ptrtoint i8* %125 to i64, !dbg !5037
  %sub.ptr.rhs.cast113 = ptrtoint i8* %126 to i64, !dbg !5037
  %sub.ptr.sub114 = sub i64 %sub.ptr.lhs.cast112, %sub.ptr.rhs.cast113, !dbg !5037
  %add.ptr115 = getelementptr inbounds i8, i8* %124, i64 %sub.ptr.sub114, !dbg !5038
  %127 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !5039
  %lang116 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %127, i32 0, i32 5, !dbg !5040
  store i8* %add.ptr115, i8** %lang116, align 8, !dbg !5041
  %128 = load i64, i64* %data_len, align 8, !dbg !5042
  %129 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !5043
  %itxt_length = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %129, i32 0, i32 4, !dbg !5044
  store i64 %128, i64* %itxt_length, align 8, !dbg !5045
  %130 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !5046
  %text_length = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %130, i32 0, i32 3, !dbg !5047
  store i64 0, i64* %text_length, align 8, !dbg !5048
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5049
  %chunkdata117 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %131, i32 0, i32 141, !dbg !5050
  %132 = load i8*, i8** %chunkdata117, align 8, !dbg !5050
  %133 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !5051
  %key118 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %133, i32 0, i32 1, !dbg !5052
  store i8* %132, i8** %key118, align 8, !dbg !5053
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5054
  %chunkdata119 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 141, !dbg !5055
  %135 = load i8*, i8** %chunkdata119, align 8, !dbg !5055
  %136 = load i64, i64* %prefix_len, align 8, !dbg !5056
  %add.ptr120 = getelementptr inbounds i8, i8* %135, i64 %136, !dbg !5057
  %137 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !5058
  %text121 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %137, i32 0, i32 2, !dbg !5059
  store i8* %add.ptr120, i8** %text121, align 8, !dbg !5060
  %138 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5061
  %139 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !5062
  %140 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !5063
  %call122 = call i32 @png_set_text_2(%struct.png_struct_def* %138, %struct.png_info_def* %139, %struct.png_text_struct* %140, i32 1), !dbg !5064
  store i32 %call122, i32* %ret, align 4, !dbg !5065
  %141 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5066
  %142 = load %struct.png_text_struct*, %struct.png_text_struct** %text_ptr, align 8, !dbg !5067
  %143 = bitcast %struct.png_text_struct* %142 to i8*, !dbg !5067
  call void @png_free(%struct.png_struct_def* %141, i8* %143), !dbg !5068
  %144 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5069
  %145 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5070
  %chunkdata123 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %145, i32 0, i32 141, !dbg !5071
  %146 = load i8*, i8** %chunkdata123, align 8, !dbg !5071
  call void @png_free(%struct.png_struct_def* %144, i8* %146), !dbg !5072
  %147 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5073
  %chunkdata124 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %147, i32 0, i32 141, !dbg !5074
  store i8* null, i8** %chunkdata124, align 8, !dbg !5075
  %148 = load i32, i32* %ret, align 4, !dbg !5076
  %tobool125 = icmp ne i32 %148, 0, !dbg !5076
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !5078

if.then126:                                       ; preds = %if.end103
  %149 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5079
  call void @png_error(%struct.png_struct_def* %149, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.129, i64 0, i64 0)) #6, !dbg !5080
  unreachable, !dbg !5080

if.end127:                                        ; preds = %if.then3, %if.then6, %if.then23, %if.then29, %if.then41, %if.then53, %if.then68, %if.then83, %if.then100, %if.end103
  ret void, !dbg !5081
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_handle_unknown(%struct.png_struct_def* %png_ptr, %struct.png_info_def* %info_ptr, i32 %length) #0 !dbg !5082 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %info_ptr.addr = alloca %struct.png_info_def*, align 8
  %length.addr = alloca i32, align 4
  %skip = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !5083, metadata !DIExpression()), !dbg !5084
  store %struct.png_info_def* %info_ptr, %struct.png_info_def** %info_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_info_def** %info_ptr.addr, metadata !5085, metadata !DIExpression()), !dbg !5086
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !5087, metadata !DIExpression()), !dbg !5088
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !5089, metadata !DIExpression()), !dbg !5090
  store i32 0, i32* %skip, align 4, !dbg !5090
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5091
  %user_chunk_cache_max = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 137, !dbg !5093
  %1 = load i32, i32* %user_chunk_cache_max, align 4, !dbg !5093
  %cmp = icmp ne i32 %1, 0, !dbg !5094
  br i1 %cmp, label %if.then, label %if.end9, !dbg !5095

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5096
  %user_chunk_cache_max1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 137, !dbg !5099
  %3 = load i32, i32* %user_chunk_cache_max1, align 4, !dbg !5099
  %cmp2 = icmp eq i32 %3, 1, !dbg !5100
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !5101

if.then3:                                         ; preds = %if.then
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5102
  %5 = load i32, i32* %length.addr, align 4, !dbg !5104
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %4, i32 %5), !dbg !5105
  br label %return, !dbg !5106

if.end:                                           ; preds = %if.then
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5107
  %user_chunk_cache_max4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 137, !dbg !5109
  %7 = load i32, i32* %user_chunk_cache_max4, align 4, !dbg !5110
  %dec = add i32 %7, -1, !dbg !5110
  store i32 %dec, i32* %user_chunk_cache_max4, align 4, !dbg !5110
  %cmp5 = icmp eq i32 %dec, 1, !dbg !5111
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !5112

if.then6:                                         ; preds = %if.end
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5113
  call void @png_warning(%struct.png_struct_def* %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.130, i64 0, i64 0)), !dbg !5115
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5116
  %10 = load i32, i32* %length.addr, align 4, !dbg !5117
  %call7 = call i32 @png_crc_finish(%struct.png_struct_def* %9, i32 %10), !dbg !5118
  br label %return, !dbg !5119

if.end8:                                          ; preds = %if.end
  br label %if.end9, !dbg !5120

if.end9:                                          ; preds = %if.end8, %entry
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5121
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 13, !dbg !5123
  %12 = load i32, i32* %mode, align 4, !dbg !5123
  %and = and i32 %12, 4, !dbg !5124
  %tobool = icmp ne i32 %and, 0, !dbg !5124
  br i1 %tobool, label %if.then10, label %if.end15, !dbg !5125

if.then10:                                        ; preds = %if.end9
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5126
  %chunk_name = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 37, !dbg !5129
  %14 = load i32, i32* %chunk_name, align 8, !dbg !5129
  %cmp11 = icmp ne i32 %14, 1229209940, !dbg !5130
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !5131

if.then12:                                        ; preds = %if.then10
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5132
  %mode13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 13, !dbg !5133
  %16 = load i32, i32* %mode13, align 4, !dbg !5134
  %or = or i32 %16, 8, !dbg !5134
  store i32 %or, i32* %mode13, align 4, !dbg !5134
  br label %if.end14, !dbg !5132

if.end14:                                         ; preds = %if.then12, %if.then10
  br label %if.end15, !dbg !5135

if.end15:                                         ; preds = %if.end14, %if.end9
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5136
  %chunk_name16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 37, !dbg !5136
  %18 = load i32, i32* %chunk_name16, align 8, !dbg !5136
  %shr = lshr i32 %18, 29, !dbg !5136
  %and17 = and i32 1, %shr, !dbg !5136
  %tobool18 = icmp ne i32 %and17, 0, !dbg !5136
  br i1 %tobool18, label %if.end26, label %if.then19, !dbg !5138

if.then19:                                        ; preds = %if.end15
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5139
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5142
  %chunk_name20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 37, !dbg !5143
  %21 = load i32, i32* %chunk_name20, align 8, !dbg !5143
  %call21 = call i32 @png_chunk_unknown_handling(%struct.png_struct_def* %19, i32 %21), !dbg !5144
  %cmp22 = icmp ne i32 %call21, 3, !dbg !5145
  br i1 %cmp22, label %land.lhs.true, label %if.end25, !dbg !5146

land.lhs.true:                                    ; preds = %if.then19
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5147
  %read_user_chunk_fn = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 117, !dbg !5148
  %23 = load i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)** %read_user_chunk_fn, align 8, !dbg !5148
  %cmp23 = icmp eq i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)* %23, null, !dbg !5149
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !5150

if.then24:                                        ; preds = %land.lhs.true
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5151
  call void @png_chunk_error(%struct.png_struct_def* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.131, i64 0, i64 0)) #6, !dbg !5152
  unreachable, !dbg !5152

if.end25:                                         ; preds = %land.lhs.true, %if.then19
  br label %if.end26, !dbg !5153

if.end26:                                         ; preds = %if.end25, %if.end15
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5154
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 14, !dbg !5156
  %26 = load i32, i32* %flags, align 8, !dbg !5156
  %and27 = and i32 %26, 32768, !dbg !5157
  %tobool28 = icmp ne i32 %and27, 0, !dbg !5157
  br i1 %tobool28, label %if.then31, label %lor.lhs.false, !dbg !5158

lor.lhs.false:                                    ; preds = %if.end26
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5159
  %read_user_chunk_fn29 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 117, !dbg !5160
  %28 = load i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)** %read_user_chunk_fn29, align 8, !dbg !5160
  %cmp30 = icmp ne i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)* %28, null, !dbg !5161
  br i1 %cmp30, label %if.then31, label %if.else107, !dbg !5162

if.then31:                                        ; preds = %lor.lhs.false, %if.end26
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5163
  %chunk_name32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 37, !dbg !5163
  %30 = load i32, i32* %chunk_name32, align 8, !dbg !5163
  %shr33 = lshr i32 %30, 24, !dbg !5163
  %conv = trunc i32 %shr33 to i8, !dbg !5163
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5163
  %unknown_chunk = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 139, !dbg !5163
  %name = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %unknown_chunk, i32 0, i32 0, !dbg !5163
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %name, i64 0, i64 0, !dbg !5163
  %arrayidx = getelementptr inbounds i8, i8* %arraydecay, i64 0, !dbg !5163
  store i8 %conv, i8* %arrayidx, align 8, !dbg !5163
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5163
  %chunk_name34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 37, !dbg !5163
  %33 = load i32, i32* %chunk_name34, align 8, !dbg !5163
  %shr35 = lshr i32 %33, 16, !dbg !5163
  %conv36 = trunc i32 %shr35 to i8, !dbg !5163
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5163
  %unknown_chunk37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %34, i32 0, i32 139, !dbg !5163
  %name38 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %unknown_chunk37, i32 0, i32 0, !dbg !5163
  %arraydecay39 = getelementptr inbounds [5 x i8], [5 x i8]* %name38, i64 0, i64 0, !dbg !5163
  %arrayidx40 = getelementptr inbounds i8, i8* %arraydecay39, i64 1, !dbg !5163
  store i8 %conv36, i8* %arrayidx40, align 1, !dbg !5163
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5163
  %chunk_name41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 37, !dbg !5163
  %36 = load i32, i32* %chunk_name41, align 8, !dbg !5163
  %shr42 = lshr i32 %36, 8, !dbg !5163
  %conv43 = trunc i32 %shr42 to i8, !dbg !5163
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5163
  %unknown_chunk44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 139, !dbg !5163
  %name45 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %unknown_chunk44, i32 0, i32 0, !dbg !5163
  %arraydecay46 = getelementptr inbounds [5 x i8], [5 x i8]* %name45, i64 0, i64 0, !dbg !5163
  %arrayidx47 = getelementptr inbounds i8, i8* %arraydecay46, i64 2, !dbg !5163
  store i8 %conv43, i8* %arrayidx47, align 2, !dbg !5163
  %38 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5163
  %chunk_name48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %38, i32 0, i32 37, !dbg !5163
  %39 = load i32, i32* %chunk_name48, align 8, !dbg !5163
  %conv49 = trunc i32 %39 to i8, !dbg !5163
  %40 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5163
  %unknown_chunk50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %40, i32 0, i32 139, !dbg !5163
  %name51 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %unknown_chunk50, i32 0, i32 0, !dbg !5163
  %arraydecay52 = getelementptr inbounds [5 x i8], [5 x i8]* %name51, i64 0, i64 0, !dbg !5163
  %arrayidx53 = getelementptr inbounds i8, i8* %arraydecay52, i64 3, !dbg !5163
  store i8 %conv49, i8* %arrayidx53, align 1, !dbg !5163
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5163
  %unknown_chunk54 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 139, !dbg !5163
  %name55 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %unknown_chunk54, i32 0, i32 0, !dbg !5163
  %arraydecay56 = getelementptr inbounds [5 x i8], [5 x i8]* %name55, i64 0, i64 0, !dbg !5163
  %arrayidx57 = getelementptr inbounds i8, i8* %arraydecay56, i64 4, !dbg !5163
  store i8 0, i8* %arrayidx57, align 4, !dbg !5163
  %42 = load i32, i32* %length.addr, align 4, !dbg !5165
  %conv58 = zext i32 %42 to i64, !dbg !5166
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5167
  %unknown_chunk59 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 139, !dbg !5168
  %size = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %unknown_chunk59, i32 0, i32 2, !dbg !5169
  store i64 %conv58, i64* %size, align 8, !dbg !5170
  %44 = load i32, i32* %length.addr, align 4, !dbg !5171
  %cmp60 = icmp eq i32 %44, 0, !dbg !5173
  br i1 %cmp60, label %if.then62, label %if.else, !dbg !5174

if.then62:                                        ; preds = %if.then31
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5175
  %unknown_chunk63 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 139, !dbg !5176
  %data = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %unknown_chunk63, i32 0, i32 1, !dbg !5177
  store i8* null, i8** %data, align 8, !dbg !5178
  br label %if.end71, !dbg !5175

if.else:                                          ; preds = %if.then31
  %46 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5179
  %47 = load i32, i32* %length.addr, align 4, !dbg !5181
  %conv64 = zext i32 %47 to i64, !dbg !5181
  %call65 = call noalias i8* @png_malloc(%struct.png_struct_def* %46, i64 %conv64), !dbg !5182
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5183
  %unknown_chunk66 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 139, !dbg !5184
  %data67 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %unknown_chunk66, i32 0, i32 1, !dbg !5185
  store i8* %call65, i8** %data67, align 8, !dbg !5186
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5187
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5188
  %unknown_chunk68 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 139, !dbg !5189
  %data69 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %unknown_chunk68, i32 0, i32 1, !dbg !5190
  %51 = load i8*, i8** %data69, align 8, !dbg !5190
  %52 = load i32, i32* %length.addr, align 4, !dbg !5191
  %conv70 = zext i32 %52 to i64, !dbg !5191
  call void @png_crc_read(%struct.png_struct_def* %49, i8* %51, i64 %conv70), !dbg !5192
  br label %if.end71

if.end71:                                         ; preds = %if.else, %if.then62
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5193
  %read_user_chunk_fn72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %53, i32 0, i32 117, !dbg !5195
  %54 = load i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)** %read_user_chunk_fn72, align 8, !dbg !5195
  %cmp73 = icmp ne i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)* %54, null, !dbg !5196
  br i1 %cmp73, label %if.then75, label %if.else100, !dbg !5197

if.then75:                                        ; preds = %if.end71
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5198, metadata !DIExpression()), !dbg !5200
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5201
  %read_user_chunk_fn76 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %55, i32 0, i32 117, !dbg !5202
  %56 = load i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)** %read_user_chunk_fn76, align 8, !dbg !5202
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5203
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5204
  %unknown_chunk77 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %58, i32 0, i32 139, !dbg !5205
  %call78 = call i32 %56(%struct.png_struct_def* %57, %struct.png_unknown_chunk_t* %unknown_chunk77), !dbg !5206
  store i32 %call78, i32* %ret, align 4, !dbg !5207
  %59 = load i32, i32* %ret, align 4, !dbg !5208
  %cmp79 = icmp slt i32 %59, 0, !dbg !5210
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !5211

if.then81:                                        ; preds = %if.then75
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5212
  call void @png_chunk_error(%struct.png_struct_def* %60, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.132, i64 0, i64 0)) #6, !dbg !5213
  unreachable, !dbg !5213

if.end82:                                         ; preds = %if.then75
  %61 = load i32, i32* %ret, align 4, !dbg !5214
  %cmp83 = icmp eq i32 %61, 0, !dbg !5216
  br i1 %cmp83, label %if.then85, label %if.end99, !dbg !5217

if.then85:                                        ; preds = %if.end82
  %62 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5218
  %chunk_name86 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %62, i32 0, i32 37, !dbg !5218
  %63 = load i32, i32* %chunk_name86, align 8, !dbg !5218
  %shr87 = lshr i32 %63, 29, !dbg !5218
  %and88 = and i32 1, %shr87, !dbg !5218
  %tobool89 = icmp ne i32 %and88, 0, !dbg !5218
  br i1 %tobool89, label %if.end97, label %if.then90, !dbg !5221

if.then90:                                        ; preds = %if.then85
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5222
  %65 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5225
  %chunk_name91 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %65, i32 0, i32 37, !dbg !5226
  %66 = load i32, i32* %chunk_name91, align 8, !dbg !5226
  %call92 = call i32 @png_chunk_unknown_handling(%struct.png_struct_def* %64, i32 %66), !dbg !5227
  %cmp93 = icmp ne i32 %call92, 3, !dbg !5228
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !5229

if.then95:                                        ; preds = %if.then90
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5230
  call void @png_chunk_error(%struct.png_struct_def* %67, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.131, i64 0, i64 0)) #6, !dbg !5231
  unreachable, !dbg !5231

if.end96:                                         ; preds = %if.then90
  br label %if.end97, !dbg !5232

if.end97:                                         ; preds = %if.end96, %if.then85
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5233
  %69 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !5234
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5235
  %unknown_chunk98 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %70, i32 0, i32 139, !dbg !5236
  call void @png_set_unknown_chunks(%struct.png_struct_def* %68, %struct.png_info_def* %69, %struct.png_unknown_chunk_t* %unknown_chunk98, i32 1), !dbg !5237
  br label %if.end99, !dbg !5238

if.end99:                                         ; preds = %if.end97, %if.end82
  br label %if.end102, !dbg !5239

if.else100:                                       ; preds = %if.end71
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5240
  %72 = load %struct.png_info_def*, %struct.png_info_def** %info_ptr.addr, align 8, !dbg !5241
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5242
  %unknown_chunk101 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 139, !dbg !5243
  call void @png_set_unknown_chunks(%struct.png_struct_def* %71, %struct.png_info_def* %72, %struct.png_unknown_chunk_t* %unknown_chunk101, i32 1), !dbg !5244
  br label %if.end102

if.end102:                                        ; preds = %if.else100, %if.end99
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5245
  %75 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5246
  %unknown_chunk103 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %75, i32 0, i32 139, !dbg !5247
  %data104 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %unknown_chunk103, i32 0, i32 1, !dbg !5248
  %76 = load i8*, i8** %data104, align 8, !dbg !5248
  call void @png_free(%struct.png_struct_def* %74, i8* %76), !dbg !5249
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5250
  %unknown_chunk105 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %77, i32 0, i32 139, !dbg !5251
  %data106 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %unknown_chunk105, i32 0, i32 1, !dbg !5252
  store i8* null, i8** %data106, align 8, !dbg !5253
  br label %if.end108, !dbg !5254

if.else107:                                       ; preds = %lor.lhs.false
  %78 = load i32, i32* %length.addr, align 4, !dbg !5255
  store i32 %78, i32* %skip, align 4, !dbg !5256
  br label %if.end108

if.end108:                                        ; preds = %if.else107, %if.end102
  %79 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5257
  %80 = load i32, i32* %skip, align 4, !dbg !5258
  %call109 = call i32 @png_crc_finish(%struct.png_struct_def* %79, i32 %80), !dbg !5259
  br label %return, !dbg !5260

return:                                           ; preds = %if.end108, %if.then6, %if.then3
  ret void, !dbg !5260
}

declare dso_local i32 @png_chunk_unknown_handling(%struct.png_struct_def*, i32) #3

; Function Attrs: noreturn
declare dso_local void @png_chunk_error(%struct.png_struct_def*, i8*) #2

declare dso_local void @png_set_unknown_chunks(%struct.png_struct_def*, %struct.png_info_def*, %struct.png_unknown_chunk_t*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_combine_row(%struct.png_struct_def* %png_ptr, i8* %dp, i32 %display) #0 !dbg !2 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %dp.addr = alloca i8*, align 8
  %display.addr = alloca i32, align 4
  %pixel_depth = alloca i32, align 4
  %sp = alloca i8*, align 8
  %row_width = alloca i32, align 4
  %pass = alloca i32, align 4
  %end_ptr = alloca i8*, align 8
  %end_byte = alloca i8, align 1
  %end_mask = alloca i32, align 4
  %pixels_per_byte = alloca i32, align 4
  %mask = alloca i32, align 4
  %m = alloca i32, align 4
  %bytes_to_copy = alloca i32, align 4
  %bytes_to_jump = alloca i32, align 4
  %offset = alloca i32, align 4
  %dp32 = alloca i32*, align 8
  %sp32 = alloca i32*, align 8
  %skip = alloca i32, align 4
  %c = alloca i64, align 8
  %dp16 = alloca i16*, align 8
  %sp16 = alloca i16*, align 8
  %skip328 = alloca i32, align 4
  %c334 = alloca i64, align 8
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !5261, metadata !DIExpression()), !dbg !5262
  store i8* %dp, i8** %dp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dp.addr, metadata !5263, metadata !DIExpression()), !dbg !5264
  store i32 %display, i32* %display.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %display.addr, metadata !5265, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.declare(metadata i32* %pixel_depth, metadata !5267, metadata !DIExpression()), !dbg !5268
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5269
  %transformed_pixel_depth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 64, !dbg !5270
  %1 = load i8, i8* %transformed_pixel_depth, align 1, !dbg !5270
  %conv = zext i8 %1 to i32, !dbg !5269
  store i32 %conv, i32* %pixel_depth, align 4, !dbg !5268
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !5271, metadata !DIExpression()), !dbg !5272
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5273
  %row_buf = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 39, !dbg !5274
  %3 = load i8*, i8** %row_buf, align 8, !dbg !5274
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 1, !dbg !5275
  store i8* %add.ptr, i8** %sp, align 8, !dbg !5272
  call void @llvm.dbg.declare(metadata i32* %row_width, metadata !5276, metadata !DIExpression()), !dbg !5277
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5278
  %width = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 30, !dbg !5279
  %5 = load i32, i32* %width, align 8, !dbg !5279
  store i32 %5, i32* %row_width, align 4, !dbg !5277
  call void @llvm.dbg.declare(metadata i32* %pass, metadata !5280, metadata !DIExpression()), !dbg !5281
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5282
  %pass1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 54, !dbg !5283
  %7 = load i8, i8* %pass1, align 1, !dbg !5283
  %conv2 = zext i8 %7 to i32, !dbg !5282
  store i32 %conv2, i32* %pass, align 4, !dbg !5281
  call void @llvm.dbg.declare(metadata i8** %end_ptr, metadata !5284, metadata !DIExpression()), !dbg !5285
  store i8* null, i8** %end_ptr, align 8, !dbg !5285
  call void @llvm.dbg.declare(metadata i8* %end_byte, metadata !5286, metadata !DIExpression()), !dbg !5287
  store i8 0, i8* %end_byte, align 1, !dbg !5287
  call void @llvm.dbg.declare(metadata i32* %end_mask, metadata !5288, metadata !DIExpression()), !dbg !5289
  %8 = load i32, i32* %pixel_depth, align 4, !dbg !5290
  %cmp = icmp eq i32 %8, 0, !dbg !5292
  br i1 %cmp, label %if.then, label %if.end, !dbg !5293

if.then:                                          ; preds = %entry
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5294
  call void @png_error(%struct.png_struct_def* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.134, i64 0, i64 0)) #6, !dbg !5295
  unreachable, !dbg !5295

if.end:                                           ; preds = %entry
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5296
  %info_rowbytes = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i32 0, i32 44, !dbg !5298
  %11 = load i64, i64* %info_rowbytes, align 8, !dbg !5298
  %cmp4 = icmp ne i64 %11, 0, !dbg !5299
  br i1 %cmp4, label %land.lhs.true, label %if.end18, !dbg !5300

land.lhs.true:                                    ; preds = %if.end
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5301
  %info_rowbytes6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 44, !dbg !5302
  %13 = load i64, i64* %info_rowbytes6, align 8, !dbg !5302
  %14 = load i32, i32* %pixel_depth, align 4, !dbg !5303
  %cmp7 = icmp uge i32 %14, 8, !dbg !5303
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !5303

cond.true:                                        ; preds = %land.lhs.true
  %15 = load i32, i32* %row_width, align 4, !dbg !5303
  %conv9 = zext i32 %15 to i64, !dbg !5303
  %16 = load i32, i32* %pixel_depth, align 4, !dbg !5303
  %conv10 = zext i32 %16 to i64, !dbg !5303
  %shr = lshr i64 %conv10, 3, !dbg !5303
  %mul = mul i64 %conv9, %shr, !dbg !5303
  br label %cond.end, !dbg !5303

cond.false:                                       ; preds = %land.lhs.true
  %17 = load i32, i32* %row_width, align 4, !dbg !5303
  %conv11 = zext i32 %17 to i64, !dbg !5303
  %18 = load i32, i32* %pixel_depth, align 4, !dbg !5303
  %conv12 = zext i32 %18 to i64, !dbg !5303
  %mul13 = mul i64 %conv11, %conv12, !dbg !5303
  %add = add i64 %mul13, 7, !dbg !5303
  %shr14 = lshr i64 %add, 3, !dbg !5303
  br label %cond.end, !dbg !5303

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %mul, %cond.true ], [ %shr14, %cond.false ], !dbg !5303
  %cmp15 = icmp ne i64 %13, %cond, !dbg !5304
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !5305

if.then17:                                        ; preds = %cond.end
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5306
  call void @png_error(%struct.png_struct_def* %19, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.135, i64 0, i64 0)) #6, !dbg !5307
  unreachable, !dbg !5307

if.end18:                                         ; preds = %cond.end, %if.end
  %20 = load i32, i32* %row_width, align 4, !dbg !5308
  %cmp19 = icmp eq i32 %20, 0, !dbg !5310
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !5311

if.then21:                                        ; preds = %if.end18
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5312
  call void @png_error(%struct.png_struct_def* %21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.136, i64 0, i64 0)) #6, !dbg !5313
  unreachable, !dbg !5313

if.end22:                                         ; preds = %if.end18
  %22 = load i32, i32* %pixel_depth, align 4, !dbg !5314
  %23 = load i32, i32* %row_width, align 4, !dbg !5315
  %mul23 = mul i32 %22, %23, !dbg !5316
  %and = and i32 %mul23, 7, !dbg !5317
  store i32 %and, i32* %end_mask, align 4, !dbg !5318
  %24 = load i32, i32* %end_mask, align 4, !dbg !5319
  %cmp24 = icmp ne i32 %24, 0, !dbg !5321
  br i1 %cmp24, label %if.then26, label %if.end48, !dbg !5322

if.then26:                                        ; preds = %if.end22
  %25 = load i8*, i8** %dp.addr, align 8, !dbg !5323
  %26 = load i32, i32* %pixel_depth, align 4, !dbg !5325
  %cmp27 = icmp uge i32 %26, 8, !dbg !5325
  br i1 %cmp27, label %cond.true29, label %cond.false34, !dbg !5325

cond.true29:                                      ; preds = %if.then26
  %27 = load i32, i32* %row_width, align 4, !dbg !5325
  %conv30 = zext i32 %27 to i64, !dbg !5325
  %28 = load i32, i32* %pixel_depth, align 4, !dbg !5325
  %conv31 = zext i32 %28 to i64, !dbg !5325
  %shr32 = lshr i64 %conv31, 3, !dbg !5325
  %mul33 = mul i64 %conv30, %shr32, !dbg !5325
  br label %cond.end40, !dbg !5325

cond.false34:                                     ; preds = %if.then26
  %29 = load i32, i32* %row_width, align 4, !dbg !5325
  %conv35 = zext i32 %29 to i64, !dbg !5325
  %30 = load i32, i32* %pixel_depth, align 4, !dbg !5325
  %conv36 = zext i32 %30 to i64, !dbg !5325
  %mul37 = mul i64 %conv35, %conv36, !dbg !5325
  %add38 = add i64 %mul37, 7, !dbg !5325
  %shr39 = lshr i64 %add38, 3, !dbg !5325
  br label %cond.end40, !dbg !5325

cond.end40:                                       ; preds = %cond.false34, %cond.true29
  %cond41 = phi i64 [ %mul33, %cond.true29 ], [ %shr39, %cond.false34 ], !dbg !5325
  %add.ptr42 = getelementptr inbounds i8, i8* %25, i64 %cond41, !dbg !5326
  %add.ptr43 = getelementptr inbounds i8, i8* %add.ptr42, i64 -1, !dbg !5327
  store i8* %add.ptr43, i8** %end_ptr, align 8, !dbg !5328
  %31 = load i8*, i8** %end_ptr, align 8, !dbg !5329
  %32 = load i8, i8* %31, align 1, !dbg !5330
  store i8 %32, i8* %end_byte, align 1, !dbg !5331
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5332
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 15, !dbg !5334
  %34 = load i32, i32* %transformations, align 4, !dbg !5334
  %and44 = and i32 %34, 65536, !dbg !5335
  %tobool = icmp ne i32 %and44, 0, !dbg !5335
  br i1 %tobool, label %if.then45, label %if.else, !dbg !5336

if.then45:                                        ; preds = %cond.end40
  %35 = load i32, i32* %end_mask, align 4, !dbg !5337
  %shl = shl i32 255, %35, !dbg !5338
  store i32 %shl, i32* %end_mask, align 4, !dbg !5339
  br label %if.end47, !dbg !5340

if.else:                                          ; preds = %cond.end40
  %36 = load i32, i32* %end_mask, align 4, !dbg !5341
  %shr46 = ashr i32 255, %36, !dbg !5342
  store i32 %shr46, i32* %end_mask, align 4, !dbg !5343
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.then45
  br label %if.end48, !dbg !5344

if.end48:                                         ; preds = %if.end47, %if.end22
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5345
  %interlaced = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 53, !dbg !5347
  %38 = load i8, i8* %interlaced, align 4, !dbg !5347
  %conv49 = zext i8 %38 to i32, !dbg !5345
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !5345
  br i1 %tobool50, label %land.lhs.true51, label %if.else382, !dbg !5348

land.lhs.true51:                                  ; preds = %if.end48
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5349
  %transformations52 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 15, !dbg !5350
  %40 = load i32, i32* %transformations52, align 4, !dbg !5350
  %and53 = and i32 %40, 2, !dbg !5351
  %tobool54 = icmp ne i32 %and53, 0, !dbg !5351
  br i1 %tobool54, label %land.lhs.true55, label %if.else382, !dbg !5352

land.lhs.true55:                                  ; preds = %land.lhs.true51
  %41 = load i32, i32* %pass, align 4, !dbg !5353
  %cmp56 = icmp ult i32 %41, 6, !dbg !5354
  br i1 %cmp56, label %land.lhs.true58, label %if.else382, !dbg !5355

land.lhs.true58:                                  ; preds = %land.lhs.true55
  %42 = load i32, i32* %display.addr, align 4, !dbg !5356
  %cmp59 = icmp eq i32 %42, 0, !dbg !5357
  br i1 %cmp59, label %if.then67, label %lor.lhs.false, !dbg !5358

lor.lhs.false:                                    ; preds = %land.lhs.true58
  %43 = load i32, i32* %display.addr, align 4, !dbg !5359
  %cmp61 = icmp eq i32 %43, 1, !dbg !5360
  br i1 %cmp61, label %land.lhs.true63, label %if.else382, !dbg !5361

land.lhs.true63:                                  ; preds = %lor.lhs.false
  %44 = load i32, i32* %pass, align 4, !dbg !5362
  %and64 = and i32 %44, 1, !dbg !5363
  %cmp65 = icmp ne i32 %and64, 0, !dbg !5364
  br i1 %cmp65, label %if.then67, label %if.else382, !dbg !5365

if.then67:                                        ; preds = %land.lhs.true63, %land.lhs.true58
  %45 = load i32, i32* %row_width, align 4, !dbg !5366
  %46 = load i32, i32* %pass, align 4, !dbg !5369
  %and68 = and i32 1, %46, !dbg !5369
  %47 = load i32, i32* %pass, align 4, !dbg !5369
  %add69 = add i32 %47, 1, !dbg !5369
  %shr70 = lshr i32 %add69, 1, !dbg !5369
  %sub = sub i32 3, %shr70, !dbg !5369
  %shl71 = shl i32 %and68, %sub, !dbg !5369
  %and72 = and i32 %shl71, 7, !dbg !5369
  %cmp73 = icmp ule i32 %45, %and72, !dbg !5370
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !5371

if.then75:                                        ; preds = %if.then67
  br label %if.end409, !dbg !5372

if.end76:                                         ; preds = %if.then67
  %48 = load i32, i32* %pixel_depth, align 4, !dbg !5373
  %cmp77 = icmp ult i32 %48, 8, !dbg !5375
  br i1 %cmp77, label %if.then79, label %if.else172, !dbg !5376

if.then79:                                        ; preds = %if.end76
  call void @llvm.dbg.declare(metadata i32* %pixels_per_byte, metadata !5377, metadata !DIExpression()), !dbg !5379
  %49 = load i32, i32* %pixel_depth, align 4, !dbg !5380
  %div = udiv i32 8, %49, !dbg !5381
  store i32 %div, i32* %pixels_per_byte, align 4, !dbg !5379
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !5382, metadata !DIExpression()), !dbg !5383
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5384
  %transformations80 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 15, !dbg !5386
  %51 = load i32, i32* %transformations80, align 4, !dbg !5386
  %and81 = and i32 %51, 65536, !dbg !5387
  %tobool82 = icmp ne i32 %and81, 0, !dbg !5387
  br i1 %tobool82, label %if.then83, label %if.else114, !dbg !5388

if.then83:                                        ; preds = %if.then79
  %52 = load i32, i32* %display.addr, align 4, !dbg !5389
  %tobool84 = icmp ne i32 %52, 0, !dbg !5389
  br i1 %tobool84, label %cond.true85, label %cond.false98, !dbg !5389

cond.true85:                                      ; preds = %if.then83
  %53 = load i32, i32* %pixel_depth, align 4, !dbg !5389
  %cmp86 = icmp eq i32 %53, 1, !dbg !5389
  br i1 %cmp86, label %cond.true88, label %cond.false89, !dbg !5389

cond.true88:                                      ; preds = %cond.true85
  br label %cond.end93, !dbg !5389

cond.false89:                                     ; preds = %cond.true85
  %54 = load i32, i32* %pixel_depth, align 4, !dbg !5389
  %cmp90 = icmp eq i32 %54, 2, !dbg !5389
  %55 = zext i1 %cmp90 to i64, !dbg !5389
  %cond92 = select i1 %cmp90, i32 1, i32 2, !dbg !5389
  br label %cond.end93, !dbg !5389

cond.end93:                                       ; preds = %cond.false89, %cond.true88
  %cond94 = phi i32 [ 0, %cond.true88 ], [ %cond92, %cond.false89 ], !dbg !5389
  %idxprom = sext i32 %cond94 to i64, !dbg !5389
  %arrayidx = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* getelementptr inbounds ([2 x [3 x [3 x i32]]], [2 x [3 x [3 x i32]]]* @png_combine_row.display_mask, i64 0, i64 0), i64 0, i64 %idxprom, !dbg !5389
  %56 = load i32, i32* %pass, align 4, !dbg !5389
  %shr95 = lshr i32 %56, 1, !dbg !5389
  %idxprom96 = zext i32 %shr95 to i64, !dbg !5389
  %arrayidx97 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx, i64 0, i64 %idxprom96, !dbg !5389
  %57 = load i32, i32* %arrayidx97, align 4, !dbg !5389
  br label %cond.end112, !dbg !5389

cond.false98:                                     ; preds = %if.then83
  %58 = load i32, i32* %pixel_depth, align 4, !dbg !5389
  %cmp99 = icmp eq i32 %58, 1, !dbg !5389
  br i1 %cmp99, label %cond.true101, label %cond.false102, !dbg !5389

cond.true101:                                     ; preds = %cond.false98
  br label %cond.end106, !dbg !5389

cond.false102:                                    ; preds = %cond.false98
  %59 = load i32, i32* %pixel_depth, align 4, !dbg !5389
  %cmp103 = icmp eq i32 %59, 2, !dbg !5389
  %60 = zext i1 %cmp103 to i64, !dbg !5389
  %cond105 = select i1 %cmp103, i32 1, i32 2, !dbg !5389
  br label %cond.end106, !dbg !5389

cond.end106:                                      ; preds = %cond.false102, %cond.true101
  %cond107 = phi i32 [ 0, %cond.true101 ], [ %cond105, %cond.false102 ], !dbg !5389
  %idxprom108 = sext i32 %cond107 to i64, !dbg !5389
  %arrayidx109 = getelementptr inbounds [3 x [6 x i32]], [3 x [6 x i32]]* getelementptr inbounds ([2 x [3 x [6 x i32]]], [2 x [3 x [6 x i32]]]* @png_combine_row.row_mask, i64 0, i64 0), i64 0, i64 %idxprom108, !dbg !5389
  %61 = load i32, i32* %pass, align 4, !dbg !5389
  %idxprom110 = zext i32 %61 to i64, !dbg !5389
  %arrayidx111 = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx109, i64 0, i64 %idxprom110, !dbg !5389
  %62 = load i32, i32* %arrayidx111, align 4, !dbg !5389
  br label %cond.end112, !dbg !5389

cond.end112:                                      ; preds = %cond.end106, %cond.end93
  %cond113 = phi i32 [ %57, %cond.end93 ], [ %62, %cond.end106 ], !dbg !5389
  store i32 %cond113, i32* %mask, align 4, !dbg !5390
  br label %if.end147, !dbg !5391

if.else114:                                       ; preds = %if.then79
  %63 = load i32, i32* %display.addr, align 4, !dbg !5392
  %tobool115 = icmp ne i32 %63, 0, !dbg !5392
  br i1 %tobool115, label %cond.true116, label %cond.false131, !dbg !5392

cond.true116:                                     ; preds = %if.else114
  %64 = load i32, i32* %pixel_depth, align 4, !dbg !5392
  %cmp117 = icmp eq i32 %64, 1, !dbg !5392
  br i1 %cmp117, label %cond.true119, label %cond.false120, !dbg !5392

cond.true119:                                     ; preds = %cond.true116
  br label %cond.end124, !dbg !5392

cond.false120:                                    ; preds = %cond.true116
  %65 = load i32, i32* %pixel_depth, align 4, !dbg !5392
  %cmp121 = icmp eq i32 %65, 2, !dbg !5392
  %66 = zext i1 %cmp121 to i64, !dbg !5392
  %cond123 = select i1 %cmp121, i32 1, i32 2, !dbg !5392
  br label %cond.end124, !dbg !5392

cond.end124:                                      ; preds = %cond.false120, %cond.true119
  %cond125 = phi i32 [ 0, %cond.true119 ], [ %cond123, %cond.false120 ], !dbg !5392
  %idxprom126 = sext i32 %cond125 to i64, !dbg !5392
  %arrayidx127 = getelementptr inbounds [3 x [3 x i32]], [3 x [3 x i32]]* getelementptr inbounds ([2 x [3 x [3 x i32]]], [2 x [3 x [3 x i32]]]* @png_combine_row.display_mask, i64 0, i64 1), i64 0, i64 %idxprom126, !dbg !5392
  %67 = load i32, i32* %pass, align 4, !dbg !5392
  %shr128 = lshr i32 %67, 1, !dbg !5392
  %idxprom129 = zext i32 %shr128 to i64, !dbg !5392
  %arrayidx130 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx127, i64 0, i64 %idxprom129, !dbg !5392
  %68 = load i32, i32* %arrayidx130, align 4, !dbg !5392
  br label %cond.end145, !dbg !5392

cond.false131:                                    ; preds = %if.else114
  %69 = load i32, i32* %pixel_depth, align 4, !dbg !5392
  %cmp132 = icmp eq i32 %69, 1, !dbg !5392
  br i1 %cmp132, label %cond.true134, label %cond.false135, !dbg !5392

cond.true134:                                     ; preds = %cond.false131
  br label %cond.end139, !dbg !5392

cond.false135:                                    ; preds = %cond.false131
  %70 = load i32, i32* %pixel_depth, align 4, !dbg !5392
  %cmp136 = icmp eq i32 %70, 2, !dbg !5392
  %71 = zext i1 %cmp136 to i64, !dbg !5392
  %cond138 = select i1 %cmp136, i32 1, i32 2, !dbg !5392
  br label %cond.end139, !dbg !5392

cond.end139:                                      ; preds = %cond.false135, %cond.true134
  %cond140 = phi i32 [ 0, %cond.true134 ], [ %cond138, %cond.false135 ], !dbg !5392
  %idxprom141 = sext i32 %cond140 to i64, !dbg !5392
  %arrayidx142 = getelementptr inbounds [3 x [6 x i32]], [3 x [6 x i32]]* getelementptr inbounds ([2 x [3 x [6 x i32]]], [2 x [3 x [6 x i32]]]* @png_combine_row.row_mask, i64 0, i64 1), i64 0, i64 %idxprom141, !dbg !5392
  %72 = load i32, i32* %pass, align 4, !dbg !5392
  %idxprom143 = zext i32 %72 to i64, !dbg !5392
  %arrayidx144 = getelementptr inbounds [6 x i32], [6 x i32]* %arrayidx142, i64 0, i64 %idxprom143, !dbg !5392
  %73 = load i32, i32* %arrayidx144, align 4, !dbg !5392
  br label %cond.end145, !dbg !5392

cond.end145:                                      ; preds = %cond.end139, %cond.end124
  %cond146 = phi i32 [ %68, %cond.end124 ], [ %73, %cond.end139 ], !dbg !5392
  store i32 %cond146, i32* %mask, align 4, !dbg !5393
  br label %if.end147

if.end147:                                        ; preds = %cond.end145, %cond.end112
  br label %for.cond, !dbg !5394

for.cond:                                         ; preds = %if.end169, %if.end147
  call void @llvm.dbg.declare(metadata i32* %m, metadata !5395, metadata !DIExpression()), !dbg !5399
  %74 = load i32, i32* %mask, align 4, !dbg !5400
  store i32 %74, i32* %m, align 4, !dbg !5401
  %75 = load i32, i32* %m, align 4, !dbg !5402
  %shr148 = lshr i32 %75, 8, !dbg !5403
  %76 = load i32, i32* %m, align 4, !dbg !5404
  %shl149 = shl i32 %76, 24, !dbg !5405
  %or = or i32 %shr148, %shl149, !dbg !5406
  store i32 %or, i32* %mask, align 4, !dbg !5407
  %77 = load i32, i32* %m, align 4, !dbg !5408
  %and150 = and i32 %77, 255, !dbg !5408
  store i32 %and150, i32* %m, align 4, !dbg !5408
  %78 = load i32, i32* %m, align 4, !dbg !5409
  %cmp151 = icmp ne i32 %78, 0, !dbg !5411
  br i1 %cmp151, label %if.then153, label %if.end165, !dbg !5412

if.then153:                                       ; preds = %for.cond
  %79 = load i32, i32* %m, align 4, !dbg !5413
  %cmp154 = icmp ne i32 %79, 255, !dbg !5416
  br i1 %cmp154, label %if.then156, label %if.else163, !dbg !5417

if.then156:                                       ; preds = %if.then153
  %80 = load i8*, i8** %dp.addr, align 8, !dbg !5418
  %81 = load i8, i8* %80, align 1, !dbg !5419
  %conv157 = zext i8 %81 to i32, !dbg !5419
  %82 = load i32, i32* %m, align 4, !dbg !5420
  %neg = xor i32 %82, -1, !dbg !5421
  %and158 = and i32 %conv157, %neg, !dbg !5422
  %83 = load i8*, i8** %sp, align 8, !dbg !5423
  %84 = load i8, i8* %83, align 1, !dbg !5424
  %conv159 = zext i8 %84 to i32, !dbg !5424
  %85 = load i32, i32* %m, align 4, !dbg !5425
  %and160 = and i32 %conv159, %85, !dbg !5426
  %or161 = or i32 %and158, %and160, !dbg !5427
  %conv162 = trunc i32 %or161 to i8, !dbg !5428
  %86 = load i8*, i8** %dp.addr, align 8, !dbg !5429
  store i8 %conv162, i8* %86, align 1, !dbg !5430
  br label %if.end164, !dbg !5431

if.else163:                                       ; preds = %if.then153
  %87 = load i8*, i8** %sp, align 8, !dbg !5432
  %88 = load i8, i8* %87, align 1, !dbg !5433
  %89 = load i8*, i8** %dp.addr, align 8, !dbg !5434
  store i8 %88, i8* %89, align 1, !dbg !5435
  br label %if.end164

if.end164:                                        ; preds = %if.else163, %if.then156
  br label %if.end165, !dbg !5436

if.end165:                                        ; preds = %if.end164, %for.cond
  %90 = load i32, i32* %row_width, align 4, !dbg !5437
  %91 = load i32, i32* %pixels_per_byte, align 4, !dbg !5439
  %cmp166 = icmp ule i32 %90, %91, !dbg !5440
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !5441

if.then168:                                       ; preds = %if.end165
  br label %for.end, !dbg !5442

if.end169:                                        ; preds = %if.end165
  %92 = load i32, i32* %pixels_per_byte, align 4, !dbg !5443
  %93 = load i32, i32* %row_width, align 4, !dbg !5444
  %sub170 = sub i32 %93, %92, !dbg !5444
  store i32 %sub170, i32* %row_width, align 4, !dbg !5444
  %94 = load i8*, i8** %dp.addr, align 8, !dbg !5445
  %incdec.ptr = getelementptr inbounds i8, i8* %94, i32 1, !dbg !5445
  store i8* %incdec.ptr, i8** %dp.addr, align 8, !dbg !5445
  %95 = load i8*, i8** %sp, align 8, !dbg !5446
  %incdec.ptr171 = getelementptr inbounds i8, i8* %95, i32 1, !dbg !5446
  store i8* %incdec.ptr171, i8** %sp, align 8, !dbg !5446
  br label %for.cond, !dbg !5447, !llvm.loop !5448

for.end:                                          ; preds = %if.then168
  br label %if.end381, !dbg !5451

if.else172:                                       ; preds = %if.end76
  call void @llvm.dbg.declare(metadata i32* %bytes_to_copy, metadata !5452, metadata !DIExpression()), !dbg !5454
  call void @llvm.dbg.declare(metadata i32* %bytes_to_jump, metadata !5455, metadata !DIExpression()), !dbg !5456
  %96 = load i32, i32* %pixel_depth, align 4, !dbg !5457
  %and173 = and i32 %96, 7, !dbg !5459
  %tobool174 = icmp ne i32 %and173, 0, !dbg !5459
  br i1 %tobool174, label %if.then175, label %if.end176, !dbg !5460

if.then175:                                       ; preds = %if.else172
  %97 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !5461
  call void @png_error(%struct.png_struct_def* %97, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.137, i64 0, i64 0)) #6, !dbg !5462
  unreachable, !dbg !5462

if.end176:                                        ; preds = %if.else172
  %98 = load i32, i32* %pixel_depth, align 4, !dbg !5463
  %shr177 = lshr i32 %98, 3, !dbg !5463
  store i32 %shr177, i32* %pixel_depth, align 4, !dbg !5463
  %99 = load i32, i32* %pixel_depth, align 4, !dbg !5464
  %100 = load i32, i32* %row_width, align 4, !dbg !5465
  %mul178 = mul i32 %100, %99, !dbg !5465
  store i32 %mul178, i32* %row_width, align 4, !dbg !5465
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5466, metadata !DIExpression()), !dbg !5468
  %101 = load i32, i32* %pass, align 4, !dbg !5469
  %and179 = and i32 1, %101, !dbg !5469
  %102 = load i32, i32* %pass, align 4, !dbg !5469
  %add180 = add i32 %102, 1, !dbg !5469
  %shr181 = lshr i32 %add180, 1, !dbg !5469
  %sub182 = sub i32 3, %shr181, !dbg !5469
  %shl183 = shl i32 %and179, %sub182, !dbg !5469
  %and184 = and i32 %shl183, 7, !dbg !5469
  %103 = load i32, i32* %pixel_depth, align 4, !dbg !5470
  %mul185 = mul i32 %and184, %103, !dbg !5471
  store i32 %mul185, i32* %offset, align 4, !dbg !5468
  %104 = load i32, i32* %offset, align 4, !dbg !5472
  %105 = load i32, i32* %row_width, align 4, !dbg !5473
  %sub186 = sub i32 %105, %104, !dbg !5473
  store i32 %sub186, i32* %row_width, align 4, !dbg !5473
  %106 = load i32, i32* %offset, align 4, !dbg !5474
  %107 = load i8*, i8** %dp.addr, align 8, !dbg !5475
  %idx.ext = zext i32 %106 to i64, !dbg !5475
  %add.ptr187 = getelementptr inbounds i8, i8* %107, i64 %idx.ext, !dbg !5475
  store i8* %add.ptr187, i8** %dp.addr, align 8, !dbg !5475
  %108 = load i32, i32* %offset, align 4, !dbg !5476
  %109 = load i8*, i8** %sp, align 8, !dbg !5477
  %idx.ext188 = zext i32 %108 to i64, !dbg !5477
  %add.ptr189 = getelementptr inbounds i8, i8* %109, i64 %idx.ext188, !dbg !5477
  store i8* %add.ptr189, i8** %sp, align 8, !dbg !5477
  %110 = load i32, i32* %display.addr, align 4, !dbg !5478
  %tobool190 = icmp ne i32 %110, 0, !dbg !5478
  br i1 %tobool190, label %if.then191, label %if.else200, !dbg !5480

if.then191:                                       ; preds = %if.end176
  %111 = load i32, i32* %pass, align 4, !dbg !5481
  %sub192 = sub i32 6, %111, !dbg !5483
  %shr193 = lshr i32 %sub192, 1, !dbg !5484
  %shl194 = shl i32 1, %shr193, !dbg !5485
  %112 = load i32, i32* %pixel_depth, align 4, !dbg !5486
  %mul195 = mul i32 %shl194, %112, !dbg !5487
  store i32 %mul195, i32* %bytes_to_copy, align 4, !dbg !5488
  %113 = load i32, i32* %bytes_to_copy, align 4, !dbg !5489
  %114 = load i32, i32* %row_width, align 4, !dbg !5491
  %cmp196 = icmp ugt i32 %113, %114, !dbg !5492
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !5493

if.then198:                                       ; preds = %if.then191
  %115 = load i32, i32* %row_width, align 4, !dbg !5494
  store i32 %115, i32* %bytes_to_copy, align 4, !dbg !5495
  br label %if.end199, !dbg !5496

if.end199:                                        ; preds = %if.then198, %if.then191
  br label %if.end201, !dbg !5497

if.else200:                                       ; preds = %if.end176
  %116 = load i32, i32* %pixel_depth, align 4, !dbg !5498
  store i32 %116, i32* %bytes_to_copy, align 4, !dbg !5499
  br label %if.end201

if.end201:                                        ; preds = %if.else200, %if.end199
  %117 = load i32, i32* %pass, align 4, !dbg !5500
  %sub202 = sub i32 7, %117, !dbg !5500
  %shr203 = lshr i32 %sub202, 1, !dbg !5500
  %shl204 = shl i32 1, %shr203, !dbg !5500
  %118 = load i32, i32* %pixel_depth, align 4, !dbg !5501
  %mul205 = mul i32 %shl204, %118, !dbg !5502
  store i32 %mul205, i32* %bytes_to_jump, align 4, !dbg !5503
  %119 = load i32, i32* %bytes_to_copy, align 4, !dbg !5504
  switch i32 %119, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb216
    i32 3, label %sw.bb232
  ], !dbg !5505

sw.bb:                                            ; preds = %if.end201
  br label %for.cond206, !dbg !5506

for.cond206:                                      ; preds = %if.end210, %sw.bb
  %120 = load i8*, i8** %sp, align 8, !dbg !5508
  %121 = load i8, i8* %120, align 1, !dbg !5512
  %122 = load i8*, i8** %dp.addr, align 8, !dbg !5513
  store i8 %121, i8* %122, align 1, !dbg !5514
  %123 = load i32, i32* %row_width, align 4, !dbg !5515
  %124 = load i32, i32* %bytes_to_jump, align 4, !dbg !5517
  %cmp207 = icmp ule i32 %123, %124, !dbg !5518
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !5519

if.then209:                                       ; preds = %for.cond206
  br label %if.end409, !dbg !5520

if.end210:                                        ; preds = %for.cond206
  %125 = load i32, i32* %bytes_to_jump, align 4, !dbg !5521
  %126 = load i8*, i8** %dp.addr, align 8, !dbg !5522
  %idx.ext211 = zext i32 %125 to i64, !dbg !5522
  %add.ptr212 = getelementptr inbounds i8, i8* %126, i64 %idx.ext211, !dbg !5522
  store i8* %add.ptr212, i8** %dp.addr, align 8, !dbg !5522
  %127 = load i32, i32* %bytes_to_jump, align 4, !dbg !5523
  %128 = load i8*, i8** %sp, align 8, !dbg !5524
  %idx.ext213 = zext i32 %127 to i64, !dbg !5524
  %add.ptr214 = getelementptr inbounds i8, i8* %128, i64 %idx.ext213, !dbg !5524
  store i8* %add.ptr214, i8** %sp, align 8, !dbg !5524
  %129 = load i32, i32* %bytes_to_jump, align 4, !dbg !5525
  %130 = load i32, i32* %row_width, align 4, !dbg !5526
  %sub215 = sub i32 %130, %129, !dbg !5526
  store i32 %sub215, i32* %row_width, align 4, !dbg !5526
  br label %for.cond206, !dbg !5527, !llvm.loop !5528

sw.bb216:                                         ; preds = %if.end201
  br label %do.body, !dbg !5531

do.body:                                          ; preds = %do.cond, %sw.bb216
  %131 = load i8*, i8** %sp, align 8, !dbg !5532
  %arrayidx217 = getelementptr inbounds i8, i8* %131, i64 0, !dbg !5532
  %132 = load i8, i8* %arrayidx217, align 1, !dbg !5532
  %133 = load i8*, i8** %dp.addr, align 8, !dbg !5534
  %arrayidx218 = getelementptr inbounds i8, i8* %133, i64 0, !dbg !5534
  store i8 %132, i8* %arrayidx218, align 1, !dbg !5535
  %134 = load i8*, i8** %sp, align 8, !dbg !5536
  %arrayidx219 = getelementptr inbounds i8, i8* %134, i64 1, !dbg !5536
  %135 = load i8, i8* %arrayidx219, align 1, !dbg !5536
  %136 = load i8*, i8** %dp.addr, align 8, !dbg !5537
  %arrayidx220 = getelementptr inbounds i8, i8* %136, i64 1, !dbg !5537
  store i8 %135, i8* %arrayidx220, align 1, !dbg !5538
  %137 = load i32, i32* %row_width, align 4, !dbg !5539
  %138 = load i32, i32* %bytes_to_jump, align 4, !dbg !5541
  %cmp221 = icmp ule i32 %137, %138, !dbg !5542
  br i1 %cmp221, label %if.then223, label %if.end224, !dbg !5543

if.then223:                                       ; preds = %do.body
  br label %if.end409, !dbg !5544

if.end224:                                        ; preds = %do.body
  %139 = load i32, i32* %bytes_to_jump, align 4, !dbg !5545
  %140 = load i8*, i8** %sp, align 8, !dbg !5546
  %idx.ext225 = zext i32 %139 to i64, !dbg !5546
  %add.ptr226 = getelementptr inbounds i8, i8* %140, i64 %idx.ext225, !dbg !5546
  store i8* %add.ptr226, i8** %sp, align 8, !dbg !5546
  %141 = load i32, i32* %bytes_to_jump, align 4, !dbg !5547
  %142 = load i8*, i8** %dp.addr, align 8, !dbg !5548
  %idx.ext227 = zext i32 %141 to i64, !dbg !5548
  %add.ptr228 = getelementptr inbounds i8, i8* %142, i64 %idx.ext227, !dbg !5548
  store i8* %add.ptr228, i8** %dp.addr, align 8, !dbg !5548
  %143 = load i32, i32* %bytes_to_jump, align 4, !dbg !5549
  %144 = load i32, i32* %row_width, align 4, !dbg !5550
  %sub229 = sub i32 %144, %143, !dbg !5550
  store i32 %sub229, i32* %row_width, align 4, !dbg !5550
  br label %do.cond, !dbg !5551

do.cond:                                          ; preds = %if.end224
  %145 = load i32, i32* %row_width, align 4, !dbg !5552
  %cmp230 = icmp ugt i32 %145, 1, !dbg !5553
  br i1 %cmp230, label %do.body, label %do.end, !dbg !5551, !llvm.loop !5554

do.end:                                           ; preds = %do.cond
  %146 = load i8*, i8** %sp, align 8, !dbg !5556
  %147 = load i8, i8* %146, align 1, !dbg !5557
  %148 = load i8*, i8** %dp.addr, align 8, !dbg !5558
  store i8 %147, i8* %148, align 1, !dbg !5559
  br label %if.end409, !dbg !5560

sw.bb232:                                         ; preds = %if.end201
  br label %for.cond233, !dbg !5561

for.cond233:                                      ; preds = %if.end243, %sw.bb232
  %149 = load i8*, i8** %sp, align 8, !dbg !5562
  %arrayidx234 = getelementptr inbounds i8, i8* %149, i64 0, !dbg !5562
  %150 = load i8, i8* %arrayidx234, align 1, !dbg !5562
  %151 = load i8*, i8** %dp.addr, align 8, !dbg !5566
  %arrayidx235 = getelementptr inbounds i8, i8* %151, i64 0, !dbg !5566
  store i8 %150, i8* %arrayidx235, align 1, !dbg !5567
  %152 = load i8*, i8** %sp, align 8, !dbg !5568
  %arrayidx236 = getelementptr inbounds i8, i8* %152, i64 1, !dbg !5568
  %153 = load i8, i8* %arrayidx236, align 1, !dbg !5568
  %154 = load i8*, i8** %dp.addr, align 8, !dbg !5569
  %arrayidx237 = getelementptr inbounds i8, i8* %154, i64 1, !dbg !5569
  store i8 %153, i8* %arrayidx237, align 1, !dbg !5570
  %155 = load i8*, i8** %sp, align 8, !dbg !5571
  %arrayidx238 = getelementptr inbounds i8, i8* %155, i64 2, !dbg !5571
  %156 = load i8, i8* %arrayidx238, align 1, !dbg !5571
  %157 = load i8*, i8** %dp.addr, align 8, !dbg !5572
  %arrayidx239 = getelementptr inbounds i8, i8* %157, i64 2, !dbg !5572
  store i8 %156, i8* %arrayidx239, align 1, !dbg !5573
  %158 = load i32, i32* %row_width, align 4, !dbg !5574
  %159 = load i32, i32* %bytes_to_jump, align 4, !dbg !5576
  %cmp240 = icmp ule i32 %158, %159, !dbg !5577
  br i1 %cmp240, label %if.then242, label %if.end243, !dbg !5578

if.then242:                                       ; preds = %for.cond233
  br label %if.end409, !dbg !5579

if.end243:                                        ; preds = %for.cond233
  %160 = load i32, i32* %bytes_to_jump, align 4, !dbg !5580
  %161 = load i8*, i8** %sp, align 8, !dbg !5581
  %idx.ext244 = zext i32 %160 to i64, !dbg !5581
  %add.ptr245 = getelementptr inbounds i8, i8* %161, i64 %idx.ext244, !dbg !5581
  store i8* %add.ptr245, i8** %sp, align 8, !dbg !5581
  %162 = load i32, i32* %bytes_to_jump, align 4, !dbg !5582
  %163 = load i8*, i8** %dp.addr, align 8, !dbg !5583
  %idx.ext246 = zext i32 %162 to i64, !dbg !5583
  %add.ptr247 = getelementptr inbounds i8, i8* %163, i64 %idx.ext246, !dbg !5583
  store i8* %add.ptr247, i8** %dp.addr, align 8, !dbg !5583
  %164 = load i32, i32* %bytes_to_jump, align 4, !dbg !5584
  %165 = load i32, i32* %row_width, align 4, !dbg !5585
  %sub248 = sub i32 %165, %164, !dbg !5585
  store i32 %sub248, i32* %row_width, align 4, !dbg !5585
  br label %for.cond233, !dbg !5586, !llvm.loop !5587

sw.default:                                       ; preds = %if.end201
  %166 = load i32, i32* %bytes_to_copy, align 4, !dbg !5590
  %cmp249 = icmp ult i32 %166, 16, !dbg !5592
  br i1 %cmp249, label %land.lhs.true251, label %if.end365, !dbg !5593

land.lhs.true251:                                 ; preds = %sw.default
  %167 = load i8*, i8** %dp.addr, align 8, !dbg !5594
  %sub.ptr.lhs.cast = ptrtoint i8* %167 to i64, !dbg !5594
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, 0, !dbg !5594
  %and252 = and i64 %sub.ptr.sub, 1, !dbg !5594
  %cmp253 = icmp eq i64 %and252, 0, !dbg !5594
  br i1 %cmp253, label %land.lhs.true255, label %if.end365, !dbg !5595

land.lhs.true255:                                 ; preds = %land.lhs.true251
  %168 = load i8*, i8** %sp, align 8, !dbg !5596
  %sub.ptr.lhs.cast256 = ptrtoint i8* %168 to i64, !dbg !5596
  %sub.ptr.sub257 = sub i64 %sub.ptr.lhs.cast256, 0, !dbg !5596
  %and258 = and i64 %sub.ptr.sub257, 1, !dbg !5596
  %cmp259 = icmp eq i64 %and258, 0, !dbg !5596
  br i1 %cmp259, label %land.lhs.true261, label %if.end365, !dbg !5597

land.lhs.true261:                                 ; preds = %land.lhs.true255
  %169 = load i32, i32* %bytes_to_copy, align 4, !dbg !5598
  %conv262 = zext i32 %169 to i64, !dbg !5598
  %rem = urem i64 %conv262, 2, !dbg !5599
  %cmp263 = icmp eq i64 %rem, 0, !dbg !5600
  br i1 %cmp263, label %land.lhs.true265, label %if.end365, !dbg !5601

land.lhs.true265:                                 ; preds = %land.lhs.true261
  %170 = load i32, i32* %bytes_to_jump, align 4, !dbg !5602
  %conv266 = zext i32 %170 to i64, !dbg !5602
  %rem267 = urem i64 %conv266, 2, !dbg !5603
  %cmp268 = icmp eq i64 %rem267, 0, !dbg !5604
  br i1 %cmp268, label %if.then270, label %if.end365, !dbg !5605

if.then270:                                       ; preds = %land.lhs.true265
  %171 = load i8*, i8** %dp.addr, align 8, !dbg !5606
  %sub.ptr.lhs.cast271 = ptrtoint i8* %171 to i64, !dbg !5606
  %sub.ptr.sub272 = sub i64 %sub.ptr.lhs.cast271, 0, !dbg !5606
  %and273 = and i64 %sub.ptr.sub272, 3, !dbg !5606
  %cmp274 = icmp eq i64 %and273, 0, !dbg !5606
  br i1 %cmp274, label %land.lhs.true276, label %if.else327, !dbg !5609

land.lhs.true276:                                 ; preds = %if.then270
  %172 = load i8*, i8** %sp, align 8, !dbg !5610
  %sub.ptr.lhs.cast277 = ptrtoint i8* %172 to i64, !dbg !5610
  %sub.ptr.sub278 = sub i64 %sub.ptr.lhs.cast277, 0, !dbg !5610
  %and279 = and i64 %sub.ptr.sub278, 3, !dbg !5610
  %cmp280 = icmp eq i64 %and279, 0, !dbg !5610
  br i1 %cmp280, label %land.lhs.true282, label %if.else327, !dbg !5611

land.lhs.true282:                                 ; preds = %land.lhs.true276
  %173 = load i32, i32* %bytes_to_copy, align 4, !dbg !5612
  %conv283 = zext i32 %173 to i64, !dbg !5612
  %rem284 = urem i64 %conv283, 4, !dbg !5613
  %cmp285 = icmp eq i64 %rem284, 0, !dbg !5614
  br i1 %cmp285, label %land.lhs.true287, label %if.else327, !dbg !5615

land.lhs.true287:                                 ; preds = %land.lhs.true282
  %174 = load i32, i32* %bytes_to_jump, align 4, !dbg !5616
  %conv288 = zext i32 %174 to i64, !dbg !5616
  %rem289 = urem i64 %conv288, 4, !dbg !5617
  %cmp290 = icmp eq i64 %rem289, 0, !dbg !5618
  br i1 %cmp290, label %if.then292, label %if.else327, !dbg !5619

if.then292:                                       ; preds = %land.lhs.true287
  call void @llvm.dbg.declare(metadata i32** %dp32, metadata !5620, metadata !DIExpression()), !dbg !5622
  %175 = load i8*, i8** %dp.addr, align 8, !dbg !5623
  %176 = bitcast i8* %175 to i32*, !dbg !5624
  store i32* %176, i32** %dp32, align 8, !dbg !5622
  call void @llvm.dbg.declare(metadata i32** %sp32, metadata !5625, metadata !DIExpression()), !dbg !5626
  %177 = load i8*, i8** %sp, align 8, !dbg !5627
  %178 = bitcast i8* %177 to i32*, !dbg !5628
  store i32* %178, i32** %sp32, align 8, !dbg !5626
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !5629, metadata !DIExpression()), !dbg !5630
  %179 = load i32, i32* %bytes_to_jump, align 4, !dbg !5631
  %180 = load i32, i32* %bytes_to_copy, align 4, !dbg !5632
  %sub293 = sub i32 %179, %180, !dbg !5633
  %conv294 = zext i32 %sub293 to i64, !dbg !5634
  %div295 = udiv i64 %conv294, 4, !dbg !5635
  %conv296 = trunc i64 %div295 to i32, !dbg !5634
  store i32 %conv296, i32* %skip, align 4, !dbg !5630
  br label %do.body297, !dbg !5636

do.body297:                                       ; preds = %do.cond316, %if.then292
  call void @llvm.dbg.declare(metadata i64* %c, metadata !5637, metadata !DIExpression()), !dbg !5639
  %181 = load i32, i32* %bytes_to_copy, align 4, !dbg !5640
  %conv298 = zext i32 %181 to i64, !dbg !5640
  store i64 %conv298, i64* %c, align 8, !dbg !5639
  br label %do.body299, !dbg !5641

do.body299:                                       ; preds = %do.cond303, %do.body297
  %182 = load i32*, i32** %sp32, align 8, !dbg !5642
  %incdec.ptr300 = getelementptr inbounds i32, i32* %182, i32 1, !dbg !5642
  store i32* %incdec.ptr300, i32** %sp32, align 8, !dbg !5642
  %183 = load i32, i32* %182, align 4, !dbg !5644
  %184 = load i32*, i32** %dp32, align 8, !dbg !5645
  %incdec.ptr301 = getelementptr inbounds i32, i32* %184, i32 1, !dbg !5645
  store i32* %incdec.ptr301, i32** %dp32, align 8, !dbg !5645
  store i32 %183, i32* %184, align 4, !dbg !5646
  %185 = load i64, i64* %c, align 8, !dbg !5647
  %sub302 = sub i64 %185, 4, !dbg !5647
  store i64 %sub302, i64* %c, align 8, !dbg !5647
  br label %do.cond303, !dbg !5648

do.cond303:                                       ; preds = %do.body299
  %186 = load i64, i64* %c, align 8, !dbg !5649
  %cmp304 = icmp ugt i64 %186, 0, !dbg !5650
  br i1 %cmp304, label %do.body299, label %do.end306, !dbg !5648, !llvm.loop !5651

do.end306:                                        ; preds = %do.cond303
  %187 = load i32, i32* %row_width, align 4, !dbg !5653
  %188 = load i32, i32* %bytes_to_jump, align 4, !dbg !5655
  %cmp307 = icmp ule i32 %187, %188, !dbg !5656
  br i1 %cmp307, label %if.then309, label %if.end310, !dbg !5657

if.then309:                                       ; preds = %do.end306
  br label %if.end409, !dbg !5658

if.end310:                                        ; preds = %do.end306
  %189 = load i32, i32* %skip, align 4, !dbg !5659
  %190 = load i32*, i32** %dp32, align 8, !dbg !5660
  %idx.ext311 = zext i32 %189 to i64, !dbg !5660
  %add.ptr312 = getelementptr inbounds i32, i32* %190, i64 %idx.ext311, !dbg !5660
  store i32* %add.ptr312, i32** %dp32, align 8, !dbg !5660
  %191 = load i32, i32* %skip, align 4, !dbg !5661
  %192 = load i32*, i32** %sp32, align 8, !dbg !5662
  %idx.ext313 = zext i32 %191 to i64, !dbg !5662
  %add.ptr314 = getelementptr inbounds i32, i32* %192, i64 %idx.ext313, !dbg !5662
  store i32* %add.ptr314, i32** %sp32, align 8, !dbg !5662
  %193 = load i32, i32* %bytes_to_jump, align 4, !dbg !5663
  %194 = load i32, i32* %row_width, align 4, !dbg !5664
  %sub315 = sub i32 %194, %193, !dbg !5664
  store i32 %sub315, i32* %row_width, align 4, !dbg !5664
  br label %do.cond316, !dbg !5665

do.cond316:                                       ; preds = %if.end310
  %195 = load i32, i32* %bytes_to_copy, align 4, !dbg !5666
  %196 = load i32, i32* %row_width, align 4, !dbg !5667
  %cmp317 = icmp ule i32 %195, %196, !dbg !5668
  br i1 %cmp317, label %do.body297, label %do.end319, !dbg !5665, !llvm.loop !5669

do.end319:                                        ; preds = %do.cond316
  %197 = load i32*, i32** %dp32, align 8, !dbg !5671
  %198 = bitcast i32* %197 to i8*, !dbg !5672
  store i8* %198, i8** %dp.addr, align 8, !dbg !5673
  %199 = load i32*, i32** %sp32, align 8, !dbg !5674
  %200 = bitcast i32* %199 to i8*, !dbg !5675
  store i8* %200, i8** %sp, align 8, !dbg !5676
  br label %do.body320, !dbg !5677

do.body320:                                       ; preds = %do.cond323, %do.end319
  %201 = load i8*, i8** %sp, align 8, !dbg !5678
  %incdec.ptr321 = getelementptr inbounds i8, i8* %201, i32 1, !dbg !5678
  store i8* %incdec.ptr321, i8** %sp, align 8, !dbg !5678
  %202 = load i8, i8* %201, align 1, !dbg !5679
  %203 = load i8*, i8** %dp.addr, align 8, !dbg !5680
  %incdec.ptr322 = getelementptr inbounds i8, i8* %203, i32 1, !dbg !5680
  store i8* %incdec.ptr322, i8** %dp.addr, align 8, !dbg !5680
  store i8 %202, i8* %203, align 1, !dbg !5681
  br label %do.cond323, !dbg !5682

do.cond323:                                       ; preds = %do.body320
  %204 = load i32, i32* %row_width, align 4, !dbg !5683
  %dec = add i32 %204, -1, !dbg !5683
  store i32 %dec, i32* %row_width, align 4, !dbg !5683
  %cmp324 = icmp ugt i32 %dec, 0, !dbg !5684
  br i1 %cmp324, label %do.body320, label %do.end326, !dbg !5682, !llvm.loop !5685

do.end326:                                        ; preds = %do.cond323
  br label %if.end409, !dbg !5687

if.else327:                                       ; preds = %land.lhs.true287, %land.lhs.true282, %land.lhs.true276, %if.then270
  call void @llvm.dbg.declare(metadata i16** %dp16, metadata !5688, metadata !DIExpression()), !dbg !5690
  %205 = load i8*, i8** %dp.addr, align 8, !dbg !5691
  %206 = bitcast i8* %205 to i16*, !dbg !5692
  store i16* %206, i16** %dp16, align 8, !dbg !5690
  call void @llvm.dbg.declare(metadata i16** %sp16, metadata !5693, metadata !DIExpression()), !dbg !5694
  %207 = load i8*, i8** %sp, align 8, !dbg !5695
  %208 = bitcast i8* %207 to i16*, !dbg !5696
  store i16* %208, i16** %sp16, align 8, !dbg !5694
  call void @llvm.dbg.declare(metadata i32* %skip328, metadata !5697, metadata !DIExpression()), !dbg !5698
  %209 = load i32, i32* %bytes_to_jump, align 4, !dbg !5699
  %210 = load i32, i32* %bytes_to_copy, align 4, !dbg !5700
  %sub329 = sub i32 %209, %210, !dbg !5701
  %conv330 = zext i32 %sub329 to i64, !dbg !5702
  %div331 = udiv i64 %conv330, 2, !dbg !5703
  %conv332 = trunc i64 %div331 to i32, !dbg !5702
  store i32 %conv332, i32* %skip328, align 4, !dbg !5698
  br label %do.body333, !dbg !5704

do.body333:                                       ; preds = %do.cond353, %if.else327
  call void @llvm.dbg.declare(metadata i64* %c334, metadata !5705, metadata !DIExpression()), !dbg !5707
  %211 = load i32, i32* %bytes_to_copy, align 4, !dbg !5708
  %conv335 = zext i32 %211 to i64, !dbg !5708
  store i64 %conv335, i64* %c334, align 8, !dbg !5707
  br label %do.body336, !dbg !5709

do.body336:                                       ; preds = %do.cond340, %do.body333
  %212 = load i16*, i16** %sp16, align 8, !dbg !5710
  %incdec.ptr337 = getelementptr inbounds i16, i16* %212, i32 1, !dbg !5710
  store i16* %incdec.ptr337, i16** %sp16, align 8, !dbg !5710
  %213 = load i16, i16* %212, align 2, !dbg !5712
  %214 = load i16*, i16** %dp16, align 8, !dbg !5713
  %incdec.ptr338 = getelementptr inbounds i16, i16* %214, i32 1, !dbg !5713
  store i16* %incdec.ptr338, i16** %dp16, align 8, !dbg !5713
  store i16 %213, i16* %214, align 2, !dbg !5714
  %215 = load i64, i64* %c334, align 8, !dbg !5715
  %sub339 = sub i64 %215, 2, !dbg !5715
  store i64 %sub339, i64* %c334, align 8, !dbg !5715
  br label %do.cond340, !dbg !5716

do.cond340:                                       ; preds = %do.body336
  %216 = load i64, i64* %c334, align 8, !dbg !5717
  %cmp341 = icmp ugt i64 %216, 0, !dbg !5718
  br i1 %cmp341, label %do.body336, label %do.end343, !dbg !5716, !llvm.loop !5719

do.end343:                                        ; preds = %do.cond340
  %217 = load i32, i32* %row_width, align 4, !dbg !5721
  %218 = load i32, i32* %bytes_to_jump, align 4, !dbg !5723
  %cmp344 = icmp ule i32 %217, %218, !dbg !5724
  br i1 %cmp344, label %if.then346, label %if.end347, !dbg !5725

if.then346:                                       ; preds = %do.end343
  br label %if.end409, !dbg !5726

if.end347:                                        ; preds = %do.end343
  %219 = load i32, i32* %skip328, align 4, !dbg !5727
  %220 = load i16*, i16** %dp16, align 8, !dbg !5728
  %idx.ext348 = zext i32 %219 to i64, !dbg !5728
  %add.ptr349 = getelementptr inbounds i16, i16* %220, i64 %idx.ext348, !dbg !5728
  store i16* %add.ptr349, i16** %dp16, align 8, !dbg !5728
  %221 = load i32, i32* %skip328, align 4, !dbg !5729
  %222 = load i16*, i16** %sp16, align 8, !dbg !5730
  %idx.ext350 = zext i32 %221 to i64, !dbg !5730
  %add.ptr351 = getelementptr inbounds i16, i16* %222, i64 %idx.ext350, !dbg !5730
  store i16* %add.ptr351, i16** %sp16, align 8, !dbg !5730
  %223 = load i32, i32* %bytes_to_jump, align 4, !dbg !5731
  %224 = load i32, i32* %row_width, align 4, !dbg !5732
  %sub352 = sub i32 %224, %223, !dbg !5732
  store i32 %sub352, i32* %row_width, align 4, !dbg !5732
  br label %do.cond353, !dbg !5733

do.cond353:                                       ; preds = %if.end347
  %225 = load i32, i32* %bytes_to_copy, align 4, !dbg !5734
  %226 = load i32, i32* %row_width, align 4, !dbg !5735
  %cmp354 = icmp ule i32 %225, %226, !dbg !5736
  br i1 %cmp354, label %do.body333, label %do.end356, !dbg !5733, !llvm.loop !5737

do.end356:                                        ; preds = %do.cond353
  %227 = load i16*, i16** %dp16, align 8, !dbg !5739
  %228 = bitcast i16* %227 to i8*, !dbg !5740
  store i8* %228, i8** %dp.addr, align 8, !dbg !5741
  %229 = load i16*, i16** %sp16, align 8, !dbg !5742
  %230 = bitcast i16* %229 to i8*, !dbg !5743
  store i8* %230, i8** %sp, align 8, !dbg !5744
  br label %do.body357, !dbg !5745

do.body357:                                       ; preds = %do.cond360, %do.end356
  %231 = load i8*, i8** %sp, align 8, !dbg !5746
  %incdec.ptr358 = getelementptr inbounds i8, i8* %231, i32 1, !dbg !5746
  store i8* %incdec.ptr358, i8** %sp, align 8, !dbg !5746
  %232 = load i8, i8* %231, align 1, !dbg !5747
  %233 = load i8*, i8** %dp.addr, align 8, !dbg !5748
  %incdec.ptr359 = getelementptr inbounds i8, i8* %233, i32 1, !dbg !5748
  store i8* %incdec.ptr359, i8** %dp.addr, align 8, !dbg !5748
  store i8 %232, i8* %233, align 1, !dbg !5749
  br label %do.cond360, !dbg !5750

do.cond360:                                       ; preds = %do.body357
  %234 = load i32, i32* %row_width, align 4, !dbg !5751
  %dec361 = add i32 %234, -1, !dbg !5751
  store i32 %dec361, i32* %row_width, align 4, !dbg !5751
  %cmp362 = icmp ugt i32 %dec361, 0, !dbg !5752
  br i1 %cmp362, label %do.body357, label %do.end364, !dbg !5750, !llvm.loop !5753

do.end364:                                        ; preds = %do.cond360
  br label %if.end409, !dbg !5755

if.end365:                                        ; preds = %land.lhs.true265, %land.lhs.true261, %land.lhs.true255, %land.lhs.true251, %sw.default
  br label %for.cond366, !dbg !5756

for.cond366:                                      ; preds = %if.end380, %if.end365
  %235 = load i8*, i8** %dp.addr, align 8, !dbg !5757
  %236 = load i8*, i8** %sp, align 8, !dbg !5761
  %237 = load i32, i32* %bytes_to_copy, align 4, !dbg !5762
  %conv367 = zext i32 %237 to i64, !dbg !5762
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %235, i8* align 1 %236, i64 %conv367, i1 false), !dbg !5763
  %238 = load i32, i32* %row_width, align 4, !dbg !5764
  %239 = load i32, i32* %bytes_to_jump, align 4, !dbg !5766
  %cmp368 = icmp ule i32 %238, %239, !dbg !5767
  br i1 %cmp368, label %if.then370, label %if.end371, !dbg !5768

if.then370:                                       ; preds = %for.cond366
  br label %if.end409, !dbg !5769

if.end371:                                        ; preds = %for.cond366
  %240 = load i32, i32* %bytes_to_jump, align 4, !dbg !5770
  %241 = load i8*, i8** %sp, align 8, !dbg !5771
  %idx.ext372 = zext i32 %240 to i64, !dbg !5771
  %add.ptr373 = getelementptr inbounds i8, i8* %241, i64 %idx.ext372, !dbg !5771
  store i8* %add.ptr373, i8** %sp, align 8, !dbg !5771
  %242 = load i32, i32* %bytes_to_jump, align 4, !dbg !5772
  %243 = load i8*, i8** %dp.addr, align 8, !dbg !5773
  %idx.ext374 = zext i32 %242 to i64, !dbg !5773
  %add.ptr375 = getelementptr inbounds i8, i8* %243, i64 %idx.ext374, !dbg !5773
  store i8* %add.ptr375, i8** %dp.addr, align 8, !dbg !5773
  %244 = load i32, i32* %bytes_to_jump, align 4, !dbg !5774
  %245 = load i32, i32* %row_width, align 4, !dbg !5775
  %sub376 = sub i32 %245, %244, !dbg !5775
  store i32 %sub376, i32* %row_width, align 4, !dbg !5775
  %246 = load i32, i32* %bytes_to_copy, align 4, !dbg !5776
  %247 = load i32, i32* %row_width, align 4, !dbg !5778
  %cmp377 = icmp ugt i32 %246, %247, !dbg !5779
  br i1 %cmp377, label %if.then379, label %if.end380, !dbg !5780

if.then379:                                       ; preds = %if.end371
  %248 = load i32, i32* %row_width, align 4, !dbg !5781
  store i32 %248, i32* %bytes_to_copy, align 4, !dbg !5782
  br label %if.end380, !dbg !5783

if.end380:                                        ; preds = %if.then379, %if.end371
  br label %for.cond366, !dbg !5784, !llvm.loop !5785

if.end381:                                        ; preds = %for.end
  br label %if.end398, !dbg !5788

if.else382:                                       ; preds = %land.lhs.true63, %lor.lhs.false, %land.lhs.true55, %land.lhs.true51, %if.end48
  %249 = load i8*, i8** %dp.addr, align 8, !dbg !5789
  %250 = load i8*, i8** %sp, align 8, !dbg !5790
  %251 = load i32, i32* %pixel_depth, align 4, !dbg !5791
  %cmp383 = icmp uge i32 %251, 8, !dbg !5791
  br i1 %cmp383, label %cond.true385, label %cond.false390, !dbg !5791

cond.true385:                                     ; preds = %if.else382
  %252 = load i32, i32* %row_width, align 4, !dbg !5791
  %conv386 = zext i32 %252 to i64, !dbg !5791
  %253 = load i32, i32* %pixel_depth, align 4, !dbg !5791
  %conv387 = zext i32 %253 to i64, !dbg !5791
  %shr388 = lshr i64 %conv387, 3, !dbg !5791
  %mul389 = mul i64 %conv386, %shr388, !dbg !5791
  br label %cond.end396, !dbg !5791

cond.false390:                                    ; preds = %if.else382
  %254 = load i32, i32* %row_width, align 4, !dbg !5791
  %conv391 = zext i32 %254 to i64, !dbg !5791
  %255 = load i32, i32* %pixel_depth, align 4, !dbg !5791
  %conv392 = zext i32 %255 to i64, !dbg !5791
  %mul393 = mul i64 %conv391, %conv392, !dbg !5791
  %add394 = add i64 %mul393, 7, !dbg !5791
  %shr395 = lshr i64 %add394, 3, !dbg !5791
  br label %cond.end396, !dbg !5791

cond.end396:                                      ; preds = %cond.false390, %cond.true385
  %cond397 = phi i64 [ %mul389, %cond.true385 ], [ %shr395, %cond.false390 ], !dbg !5791
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %249, i8* align 1 %250, i64 %cond397, i1 false), !dbg !5792
  br label %if.end398

if.end398:                                        ; preds = %cond.end396, %if.end381
  %256 = load i8*, i8** %end_ptr, align 8, !dbg !5793
  %cmp399 = icmp ne i8* %256, null, !dbg !5795
  br i1 %cmp399, label %if.then401, label %if.end409, !dbg !5796

if.then401:                                       ; preds = %if.end398
  %257 = load i8, i8* %end_byte, align 1, !dbg !5797
  %conv402 = zext i8 %257 to i32, !dbg !5797
  %258 = load i32, i32* %end_mask, align 4, !dbg !5798
  %and403 = and i32 %conv402, %258, !dbg !5799
  %259 = load i8*, i8** %end_ptr, align 8, !dbg !5800
  %260 = load i8, i8* %259, align 1, !dbg !5801
  %conv404 = zext i8 %260 to i32, !dbg !5801
  %261 = load i32, i32* %end_mask, align 4, !dbg !5802
  %neg405 = xor i32 %261, -1, !dbg !5803
  %and406 = and i32 %conv404, %neg405, !dbg !5804
  %or407 = or i32 %and403, %and406, !dbg !5805
  %conv408 = trunc i32 %or407 to i8, !dbg !5806
  %262 = load i8*, i8** %end_ptr, align 8, !dbg !5807
  store i8 %conv408, i8* %262, align 1, !dbg !5808
  br label %if.end409, !dbg !5809

if.end409:                                        ; preds = %if.then75, %if.then209, %if.then223, %do.end, %if.then242, %if.then309, %do.end326, %if.then346, %do.end364, %if.then370, %if.then401, %if.end398
  ret void, !dbg !5810
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_do_read_interlace(%struct.png_row_info_struct* %row_info, i8* %row, i32 %pass, i32 %transformations) #0 !dbg !487 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %pass.addr = alloca i32, align 4
  %transformations.addr = alloca i32, align 4
  %final_width = alloca i32, align 4
  %sp = alloca i8*, align 8
  %dp = alloca i8*, align 8
  %sshift = alloca i32, align 4
  %dshift = alloca i32, align 4
  %s_start = alloca i32, align 4
  %s_end = alloca i32, align 4
  %s_inc = alloca i32, align 4
  %jstop = alloca i32, align 4
  %v = alloca i8, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %sp63 = alloca i8*, align 8
  %dp68 = alloca i8*, align 8
  %sshift73 = alloca i32, align 4
  %dshift74 = alloca i32, align 4
  %s_start75 = alloca i32, align 4
  %s_end76 = alloca i32, align 4
  %s_inc77 = alloca i32, align 4
  %jstop78 = alloca i32, align 4
  %i81 = alloca i32, align 4
  %v108 = alloca i8, align 1
  %j109 = alloca i32, align 4
  %sp154 = alloca i8*, align 8
  %dp160 = alloca i8*, align 8
  %sshift165 = alloca i32, align 4
  %dshift166 = alloca i32, align 4
  %s_start167 = alloca i32, align 4
  %s_end168 = alloca i32, align 4
  %s_inc169 = alloca i32, align 4
  %i170 = alloca i32, align 4
  %jstop171 = alloca i32, align 4
  %v200 = alloca i8, align 1
  %j205 = alloca i32, align 4
  %pixel_bytes = alloca i64, align 8
  %sp249 = alloca i8*, align 8
  %dp255 = alloca i8*, align 8
  %jstop260 = alloca i32, align 4
  %i263 = alloca i32, align 4
  %v269 = alloca [8 x i8], align 1
  %j270 = alloca i32, align 4
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !5811, metadata !DIExpression()), !dbg !5812
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !5813, metadata !DIExpression()), !dbg !5814
  store i32 %pass, i32* %pass.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pass.addr, metadata !5815, metadata !DIExpression()), !dbg !5816
  store i32 %transformations, i32* %transformations.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %transformations.addr, metadata !5817, metadata !DIExpression()), !dbg !5818
  %0 = load i8*, i8** %row.addr, align 8, !dbg !5819
  %cmp = icmp ne i8* %0, null, !dbg !5821
  br i1 %cmp, label %land.lhs.true, label %if.end301, !dbg !5822

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5823
  %cmp1 = icmp ne %struct.png_row_info_struct* %1, null, !dbg !5824
  br i1 %cmp1, label %if.then, label %if.end301, !dbg !5825

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %final_width, metadata !5826, metadata !DIExpression()), !dbg !5828
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5829
  %width = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 0, !dbg !5830
  %3 = load i32, i32* %width, align 8, !dbg !5830
  %4 = load i32, i32* %pass.addr, align 4, !dbg !5831
  %idxprom = sext i32 %4 to i64, !dbg !5832
  %arrayidx = getelementptr inbounds [7 x i32], [7 x i32]* @png_do_read_interlace.png_pass_inc, i64 0, i64 %idxprom, !dbg !5832
  %5 = load i32, i32* %arrayidx, align 4, !dbg !5832
  %mul = mul i32 %3, %5, !dbg !5833
  store i32 %mul, i32* %final_width, align 4, !dbg !5834
  %6 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5835
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %6, i32 0, i32 5, !dbg !5836
  %7 = load i8, i8* %pixel_depth, align 1, !dbg !5836
  %conv = zext i8 %7 to i32, !dbg !5835
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb62
    i32 4, label %sw.bb153
  ], !dbg !5837

sw.bb:                                            ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %sp, metadata !5838, metadata !DIExpression()), !dbg !5841
  %8 = load i8*, i8** %row.addr, align 8, !dbg !5842
  %9 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5843
  %width2 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %9, i32 0, i32 0, !dbg !5844
  %10 = load i32, i32* %width2, align 8, !dbg !5844
  %sub = sub i32 %10, 1, !dbg !5845
  %shr = lshr i32 %sub, 3, !dbg !5846
  %conv3 = zext i32 %shr to i64, !dbg !5847
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %conv3, !dbg !5848
  store i8* %add.ptr, i8** %sp, align 8, !dbg !5841
  call void @llvm.dbg.declare(metadata i8** %dp, metadata !5849, metadata !DIExpression()), !dbg !5850
  %11 = load i8*, i8** %row.addr, align 8, !dbg !5851
  %12 = load i32, i32* %final_width, align 4, !dbg !5852
  %sub4 = sub i32 %12, 1, !dbg !5853
  %shr5 = lshr i32 %sub4, 3, !dbg !5854
  %conv6 = zext i32 %shr5 to i64, !dbg !5855
  %add.ptr7 = getelementptr inbounds i8, i8* %11, i64 %conv6, !dbg !5856
  store i8* %add.ptr7, i8** %dp, align 8, !dbg !5850
  call void @llvm.dbg.declare(metadata i32* %sshift, metadata !5857, metadata !DIExpression()), !dbg !5858
  call void @llvm.dbg.declare(metadata i32* %dshift, metadata !5859, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.declare(metadata i32* %s_start, metadata !5861, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.declare(metadata i32* %s_end, metadata !5863, metadata !DIExpression()), !dbg !5864
  call void @llvm.dbg.declare(metadata i32* %s_inc, metadata !5865, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.declare(metadata i32* %jstop, metadata !5867, metadata !DIExpression()), !dbg !5868
  %13 = load i32, i32* %pass.addr, align 4, !dbg !5869
  %idxprom8 = sext i32 %13 to i64, !dbg !5870
  %arrayidx9 = getelementptr inbounds [7 x i32], [7 x i32]* @png_do_read_interlace.png_pass_inc, i64 0, i64 %idxprom8, !dbg !5870
  %14 = load i32, i32* %arrayidx9, align 4, !dbg !5870
  store i32 %14, i32* %jstop, align 4, !dbg !5868
  call void @llvm.dbg.declare(metadata i8* %v, metadata !5871, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5873, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5875, metadata !DIExpression()), !dbg !5876
  %15 = load i32, i32* %transformations.addr, align 4, !dbg !5877
  %and = and i32 %15, 65536, !dbg !5879
  %tobool = icmp ne i32 %and, 0, !dbg !5879
  br i1 %tobool, label %if.then10, label %if.else, !dbg !5880

if.then10:                                        ; preds = %sw.bb
  %16 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5881
  %width11 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %16, i32 0, i32 0, !dbg !5883
  %17 = load i32, i32* %width11, align 8, !dbg !5883
  %add = add i32 %17, 7, !dbg !5884
  %and12 = and i32 %add, 7, !dbg !5885
  store i32 %and12, i32* %sshift, align 4, !dbg !5886
  %18 = load i32, i32* %final_width, align 4, !dbg !5887
  %add13 = add i32 %18, 7, !dbg !5888
  %and14 = and i32 %add13, 7, !dbg !5889
  store i32 %and14, i32* %dshift, align 4, !dbg !5890
  store i32 7, i32* %s_start, align 4, !dbg !5891
  store i32 0, i32* %s_end, align 4, !dbg !5892
  store i32 -1, i32* %s_inc, align 4, !dbg !5893
  br label %if.end, !dbg !5894

if.else:                                          ; preds = %sw.bb
  %19 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5895
  %width15 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %19, i32 0, i32 0, !dbg !5897
  %20 = load i32, i32* %width15, align 8, !dbg !5897
  %add16 = add i32 %20, 7, !dbg !5898
  %and17 = and i32 %add16, 7, !dbg !5899
  %sub18 = sub nsw i32 7, %and17, !dbg !5900
  store i32 %sub18, i32* %sshift, align 4, !dbg !5901
  %21 = load i32, i32* %final_width, align 4, !dbg !5902
  %add19 = add i32 %21, 7, !dbg !5903
  %and20 = and i32 %add19, 7, !dbg !5904
  %sub21 = sub nsw i32 7, %and20, !dbg !5905
  store i32 %sub21, i32* %dshift, align 4, !dbg !5906
  store i32 0, i32* %s_start, align 4, !dbg !5907
  store i32 7, i32* %s_end, align 4, !dbg !5908
  store i32 1, i32* %s_inc, align 4, !dbg !5909
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  store i32 0, i32* %i, align 4, !dbg !5910
  br label %for.cond, !dbg !5912

for.cond:                                         ; preds = %for.inc59, %if.end
  %22 = load i32, i32* %i, align 4, !dbg !5913
  %23 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5915
  %width22 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %23, i32 0, i32 0, !dbg !5916
  %24 = load i32, i32* %width22, align 8, !dbg !5916
  %cmp23 = icmp ult i32 %22, %24, !dbg !5917
  br i1 %cmp23, label %for.body, label %for.end61, !dbg !5918

for.body:                                         ; preds = %for.cond
  %25 = load i8*, i8** %sp, align 8, !dbg !5919
  %26 = load i8, i8* %25, align 1, !dbg !5921
  %conv25 = zext i8 %26 to i32, !dbg !5921
  %27 = load i32, i32* %sshift, align 4, !dbg !5922
  %shr26 = ashr i32 %conv25, %27, !dbg !5923
  %and27 = and i32 %shr26, 1, !dbg !5924
  %conv28 = trunc i32 %and27 to i8, !dbg !5925
  store i8 %conv28, i8* %v, align 1, !dbg !5926
  store i32 0, i32* %j, align 4, !dbg !5927
  br label %for.cond29, !dbg !5929

for.cond29:                                       ; preds = %for.inc, %for.body
  %28 = load i32, i32* %j, align 4, !dbg !5930
  %29 = load i32, i32* %jstop, align 4, !dbg !5932
  %cmp30 = icmp slt i32 %28, %29, !dbg !5933
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !5934

for.body32:                                       ; preds = %for.cond29
  %30 = load i32, i32* %dshift, align 4, !dbg !5935
  %sub33 = sub nsw i32 7, %30, !dbg !5937
  %shr34 = ashr i32 32639, %sub33, !dbg !5938
  %and35 = and i32 %shr34, 255, !dbg !5939
  %conv36 = trunc i32 %and35 to i8, !dbg !5940
  %conv37 = zext i8 %conv36 to i32, !dbg !5940
  %31 = load i8*, i8** %dp, align 8, !dbg !5941
  %32 = load i8, i8* %31, align 1, !dbg !5942
  %conv38 = zext i8 %32 to i32, !dbg !5942
  %and39 = and i32 %conv38, %conv37, !dbg !5942
  %conv40 = trunc i32 %and39 to i8, !dbg !5942
  store i8 %conv40, i8* %31, align 1, !dbg !5942
  %33 = load i8, i8* %v, align 1, !dbg !5943
  %conv41 = zext i8 %33 to i32, !dbg !5943
  %34 = load i32, i32* %dshift, align 4, !dbg !5944
  %shl = shl i32 %conv41, %34, !dbg !5945
  %conv42 = trunc i32 %shl to i8, !dbg !5946
  %conv43 = zext i8 %conv42 to i32, !dbg !5946
  %35 = load i8*, i8** %dp, align 8, !dbg !5947
  %36 = load i8, i8* %35, align 1, !dbg !5948
  %conv44 = zext i8 %36 to i32, !dbg !5948
  %or = or i32 %conv44, %conv43, !dbg !5948
  %conv45 = trunc i32 %or to i8, !dbg !5948
  store i8 %conv45, i8* %35, align 1, !dbg !5948
  %37 = load i32, i32* %dshift, align 4, !dbg !5949
  %38 = load i32, i32* %s_end, align 4, !dbg !5951
  %cmp46 = icmp eq i32 %37, %38, !dbg !5952
  br i1 %cmp46, label %if.then48, label %if.else49, !dbg !5953

if.then48:                                        ; preds = %for.body32
  %39 = load i32, i32* %s_start, align 4, !dbg !5954
  store i32 %39, i32* %dshift, align 4, !dbg !5956
  %40 = load i8*, i8** %dp, align 8, !dbg !5957
  %incdec.ptr = getelementptr inbounds i8, i8* %40, i32 -1, !dbg !5957
  store i8* %incdec.ptr, i8** %dp, align 8, !dbg !5957
  br label %if.end51, !dbg !5958

if.else49:                                        ; preds = %for.body32
  %41 = load i32, i32* %s_inc, align 4, !dbg !5959
  %42 = load i32, i32* %dshift, align 4, !dbg !5960
  %add50 = add nsw i32 %42, %41, !dbg !5960
  store i32 %add50, i32* %dshift, align 4, !dbg !5960
  br label %if.end51

if.end51:                                         ; preds = %if.else49, %if.then48
  br label %for.inc, !dbg !5961

for.inc:                                          ; preds = %if.end51
  %43 = load i32, i32* %j, align 4, !dbg !5962
  %inc = add nsw i32 %43, 1, !dbg !5962
  store i32 %inc, i32* %j, align 4, !dbg !5962
  br label %for.cond29, !dbg !5963, !llvm.loop !5964

for.end:                                          ; preds = %for.cond29
  %44 = load i32, i32* %sshift, align 4, !dbg !5966
  %45 = load i32, i32* %s_end, align 4, !dbg !5968
  %cmp52 = icmp eq i32 %44, %45, !dbg !5969
  br i1 %cmp52, label %if.then54, label %if.else56, !dbg !5970

if.then54:                                        ; preds = %for.end
  %46 = load i32, i32* %s_start, align 4, !dbg !5971
  store i32 %46, i32* %sshift, align 4, !dbg !5973
  %47 = load i8*, i8** %sp, align 8, !dbg !5974
  %incdec.ptr55 = getelementptr inbounds i8, i8* %47, i32 -1, !dbg !5974
  store i8* %incdec.ptr55, i8** %sp, align 8, !dbg !5974
  br label %if.end58, !dbg !5975

if.else56:                                        ; preds = %for.end
  %48 = load i32, i32* %s_inc, align 4, !dbg !5976
  %49 = load i32, i32* %sshift, align 4, !dbg !5977
  %add57 = add nsw i32 %49, %48, !dbg !5977
  store i32 %add57, i32* %sshift, align 4, !dbg !5977
  br label %if.end58

if.end58:                                         ; preds = %if.else56, %if.then54
  br label %for.inc59, !dbg !5978

for.inc59:                                        ; preds = %if.end58
  %50 = load i32, i32* %i, align 4, !dbg !5979
  %inc60 = add i32 %50, 1, !dbg !5979
  store i32 %inc60, i32* %i, align 4, !dbg !5979
  br label %for.cond, !dbg !5980, !llvm.loop !5981

for.end61:                                        ; preds = %for.cond
  br label %sw.epilog, !dbg !5983

sw.bb62:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %sp63, metadata !5984, metadata !DIExpression()), !dbg !5986
  %51 = load i8*, i8** %row.addr, align 8, !dbg !5987
  %52 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !5988
  %width64 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %52, i32 0, i32 0, !dbg !5989
  %53 = load i32, i32* %width64, align 8, !dbg !5989
  %sub65 = sub i32 %53, 1, !dbg !5990
  %shr66 = lshr i32 %sub65, 2, !dbg !5991
  %idx.ext = zext i32 %shr66 to i64, !dbg !5992
  %add.ptr67 = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !5992
  store i8* %add.ptr67, i8** %sp63, align 8, !dbg !5986
  call void @llvm.dbg.declare(metadata i8** %dp68, metadata !5993, metadata !DIExpression()), !dbg !5994
  %54 = load i8*, i8** %row.addr, align 8, !dbg !5995
  %55 = load i32, i32* %final_width, align 4, !dbg !5996
  %sub69 = sub i32 %55, 1, !dbg !5997
  %shr70 = lshr i32 %sub69, 2, !dbg !5998
  %idx.ext71 = zext i32 %shr70 to i64, !dbg !5999
  %add.ptr72 = getelementptr inbounds i8, i8* %54, i64 %idx.ext71, !dbg !5999
  store i8* %add.ptr72, i8** %dp68, align 8, !dbg !5994
  call void @llvm.dbg.declare(metadata i32* %sshift73, metadata !6000, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.declare(metadata i32* %dshift74, metadata !6002, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.declare(metadata i32* %s_start75, metadata !6004, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.declare(metadata i32* %s_end76, metadata !6006, metadata !DIExpression()), !dbg !6007
  call void @llvm.dbg.declare(metadata i32* %s_inc77, metadata !6008, metadata !DIExpression()), !dbg !6009
  call void @llvm.dbg.declare(metadata i32* %jstop78, metadata !6010, metadata !DIExpression()), !dbg !6011
  %56 = load i32, i32* %pass.addr, align 4, !dbg !6012
  %idxprom79 = sext i32 %56 to i64, !dbg !6013
  %arrayidx80 = getelementptr inbounds [7 x i32], [7 x i32]* @png_do_read_interlace.png_pass_inc, i64 0, i64 %idxprom79, !dbg !6013
  %57 = load i32, i32* %arrayidx80, align 4, !dbg !6013
  store i32 %57, i32* %jstop78, align 4, !dbg !6011
  call void @llvm.dbg.declare(metadata i32* %i81, metadata !6014, metadata !DIExpression()), !dbg !6015
  %58 = load i32, i32* %transformations.addr, align 4, !dbg !6016
  %and82 = and i32 %58, 65536, !dbg !6018
  %tobool83 = icmp ne i32 %and82, 0, !dbg !6018
  br i1 %tobool83, label %if.then84, label %if.else92, !dbg !6019

if.then84:                                        ; preds = %sw.bb62
  %59 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6020
  %width85 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %59, i32 0, i32 0, !dbg !6022
  %60 = load i32, i32* %width85, align 8, !dbg !6022
  %add86 = add i32 %60, 3, !dbg !6023
  %and87 = and i32 %add86, 3, !dbg !6024
  %shl88 = shl i32 %and87, 1, !dbg !6025
  store i32 %shl88, i32* %sshift73, align 4, !dbg !6026
  %61 = load i32, i32* %final_width, align 4, !dbg !6027
  %add89 = add i32 %61, 3, !dbg !6028
  %and90 = and i32 %add89, 3, !dbg !6029
  %shl91 = shl i32 %and90, 1, !dbg !6030
  store i32 %shl91, i32* %dshift74, align 4, !dbg !6031
  store i32 6, i32* %s_start75, align 4, !dbg !6032
  store i32 0, i32* %s_end76, align 4, !dbg !6033
  store i32 -2, i32* %s_inc77, align 4, !dbg !6034
  br label %if.end102, !dbg !6035

if.else92:                                        ; preds = %sw.bb62
  %62 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6036
  %width93 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %62, i32 0, i32 0, !dbg !6038
  %63 = load i32, i32* %width93, align 8, !dbg !6038
  %add94 = add i32 %63, 3, !dbg !6039
  %and95 = and i32 %add94, 3, !dbg !6040
  %sub96 = sub i32 3, %and95, !dbg !6041
  %shl97 = shl i32 %sub96, 1, !dbg !6042
  store i32 %shl97, i32* %sshift73, align 4, !dbg !6043
  %64 = load i32, i32* %final_width, align 4, !dbg !6044
  %add98 = add i32 %64, 3, !dbg !6045
  %and99 = and i32 %add98, 3, !dbg !6046
  %sub100 = sub i32 3, %and99, !dbg !6047
  %shl101 = shl i32 %sub100, 1, !dbg !6048
  store i32 %shl101, i32* %dshift74, align 4, !dbg !6049
  store i32 0, i32* %s_start75, align 4, !dbg !6050
  store i32 6, i32* %s_end76, align 4, !dbg !6051
  store i32 2, i32* %s_inc77, align 4, !dbg !6052
  br label %if.end102

if.end102:                                        ; preds = %if.else92, %if.then84
  store i32 0, i32* %i81, align 4, !dbg !6053
  br label %for.cond103, !dbg !6055

for.cond103:                                      ; preds = %for.inc150, %if.end102
  %65 = load i32, i32* %i81, align 4, !dbg !6056
  %66 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6058
  %width104 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %66, i32 0, i32 0, !dbg !6059
  %67 = load i32, i32* %width104, align 8, !dbg !6059
  %cmp105 = icmp ult i32 %65, %67, !dbg !6060
  br i1 %cmp105, label %for.body107, label %for.end152, !dbg !6061

for.body107:                                      ; preds = %for.cond103
  call void @llvm.dbg.declare(metadata i8* %v108, metadata !6062, metadata !DIExpression()), !dbg !6064
  call void @llvm.dbg.declare(metadata i32* %j109, metadata !6065, metadata !DIExpression()), !dbg !6066
  %68 = load i8*, i8** %sp63, align 8, !dbg !6067
  %69 = load i8, i8* %68, align 1, !dbg !6068
  %conv110 = zext i8 %69 to i32, !dbg !6068
  %70 = load i32, i32* %sshift73, align 4, !dbg !6069
  %shr111 = ashr i32 %conv110, %70, !dbg !6070
  %and112 = and i32 %shr111, 3, !dbg !6071
  %conv113 = trunc i32 %and112 to i8, !dbg !6072
  store i8 %conv113, i8* %v108, align 1, !dbg !6073
  store i32 0, i32* %j109, align 4, !dbg !6074
  br label %for.cond114, !dbg !6076

for.cond114:                                      ; preds = %for.inc140, %for.body107
  %71 = load i32, i32* %j109, align 4, !dbg !6077
  %72 = load i32, i32* %jstop78, align 4, !dbg !6079
  %cmp115 = icmp slt i32 %71, %72, !dbg !6080
  br i1 %cmp115, label %for.body117, label %for.end142, !dbg !6081

for.body117:                                      ; preds = %for.cond114
  %73 = load i32, i32* %dshift74, align 4, !dbg !6082
  %sub118 = sub nsw i32 6, %73, !dbg !6084
  %shr119 = ashr i32 16191, %sub118, !dbg !6085
  %and120 = and i32 %shr119, 255, !dbg !6086
  %conv121 = trunc i32 %and120 to i8, !dbg !6087
  %conv122 = zext i8 %conv121 to i32, !dbg !6087
  %74 = load i8*, i8** %dp68, align 8, !dbg !6088
  %75 = load i8, i8* %74, align 1, !dbg !6089
  %conv123 = zext i8 %75 to i32, !dbg !6089
  %and124 = and i32 %conv123, %conv122, !dbg !6089
  %conv125 = trunc i32 %and124 to i8, !dbg !6089
  store i8 %conv125, i8* %74, align 1, !dbg !6089
  %76 = load i8, i8* %v108, align 1, !dbg !6090
  %conv126 = zext i8 %76 to i32, !dbg !6090
  %77 = load i32, i32* %dshift74, align 4, !dbg !6091
  %shl127 = shl i32 %conv126, %77, !dbg !6092
  %conv128 = trunc i32 %shl127 to i8, !dbg !6093
  %conv129 = zext i8 %conv128 to i32, !dbg !6093
  %78 = load i8*, i8** %dp68, align 8, !dbg !6094
  %79 = load i8, i8* %78, align 1, !dbg !6095
  %conv130 = zext i8 %79 to i32, !dbg !6095
  %or131 = or i32 %conv130, %conv129, !dbg !6095
  %conv132 = trunc i32 %or131 to i8, !dbg !6095
  store i8 %conv132, i8* %78, align 1, !dbg !6095
  %80 = load i32, i32* %dshift74, align 4, !dbg !6096
  %81 = load i32, i32* %s_end76, align 4, !dbg !6098
  %cmp133 = icmp eq i32 %80, %81, !dbg !6099
  br i1 %cmp133, label %if.then135, label %if.else137, !dbg !6100

if.then135:                                       ; preds = %for.body117
  %82 = load i32, i32* %s_start75, align 4, !dbg !6101
  store i32 %82, i32* %dshift74, align 4, !dbg !6103
  %83 = load i8*, i8** %dp68, align 8, !dbg !6104
  %incdec.ptr136 = getelementptr inbounds i8, i8* %83, i32 -1, !dbg !6104
  store i8* %incdec.ptr136, i8** %dp68, align 8, !dbg !6104
  br label %if.end139, !dbg !6105

if.else137:                                       ; preds = %for.body117
  %84 = load i32, i32* %s_inc77, align 4, !dbg !6106
  %85 = load i32, i32* %dshift74, align 4, !dbg !6107
  %add138 = add nsw i32 %85, %84, !dbg !6107
  store i32 %add138, i32* %dshift74, align 4, !dbg !6107
  br label %if.end139

if.end139:                                        ; preds = %if.else137, %if.then135
  br label %for.inc140, !dbg !6108

for.inc140:                                       ; preds = %if.end139
  %86 = load i32, i32* %j109, align 4, !dbg !6109
  %inc141 = add nsw i32 %86, 1, !dbg !6109
  store i32 %inc141, i32* %j109, align 4, !dbg !6109
  br label %for.cond114, !dbg !6110, !llvm.loop !6111

for.end142:                                       ; preds = %for.cond114
  %87 = load i32, i32* %sshift73, align 4, !dbg !6113
  %88 = load i32, i32* %s_end76, align 4, !dbg !6115
  %cmp143 = icmp eq i32 %87, %88, !dbg !6116
  br i1 %cmp143, label %if.then145, label %if.else147, !dbg !6117

if.then145:                                       ; preds = %for.end142
  %89 = load i32, i32* %s_start75, align 4, !dbg !6118
  store i32 %89, i32* %sshift73, align 4, !dbg !6120
  %90 = load i8*, i8** %sp63, align 8, !dbg !6121
  %incdec.ptr146 = getelementptr inbounds i8, i8* %90, i32 -1, !dbg !6121
  store i8* %incdec.ptr146, i8** %sp63, align 8, !dbg !6121
  br label %if.end149, !dbg !6122

if.else147:                                       ; preds = %for.end142
  %91 = load i32, i32* %s_inc77, align 4, !dbg !6123
  %92 = load i32, i32* %sshift73, align 4, !dbg !6124
  %add148 = add nsw i32 %92, %91, !dbg !6124
  store i32 %add148, i32* %sshift73, align 4, !dbg !6124
  br label %if.end149

if.end149:                                        ; preds = %if.else147, %if.then145
  br label %for.inc150, !dbg !6125

for.inc150:                                       ; preds = %if.end149
  %93 = load i32, i32* %i81, align 4, !dbg !6126
  %inc151 = add i32 %93, 1, !dbg !6126
  store i32 %inc151, i32* %i81, align 4, !dbg !6126
  br label %for.cond103, !dbg !6127, !llvm.loop !6128

for.end152:                                       ; preds = %for.cond103
  br label %sw.epilog, !dbg !6130

sw.bb153:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %sp154, metadata !6131, metadata !DIExpression()), !dbg !6133
  %94 = load i8*, i8** %row.addr, align 8, !dbg !6134
  %95 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6135
  %width155 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %95, i32 0, i32 0, !dbg !6136
  %96 = load i32, i32* %width155, align 8, !dbg !6136
  %sub156 = sub i32 %96, 1, !dbg !6137
  %shr157 = lshr i32 %sub156, 1, !dbg !6138
  %conv158 = zext i32 %shr157 to i64, !dbg !6139
  %add.ptr159 = getelementptr inbounds i8, i8* %94, i64 %conv158, !dbg !6140
  store i8* %add.ptr159, i8** %sp154, align 8, !dbg !6133
  call void @llvm.dbg.declare(metadata i8** %dp160, metadata !6141, metadata !DIExpression()), !dbg !6142
  %97 = load i8*, i8** %row.addr, align 8, !dbg !6143
  %98 = load i32, i32* %final_width, align 4, !dbg !6144
  %sub161 = sub i32 %98, 1, !dbg !6145
  %shr162 = lshr i32 %sub161, 1, !dbg !6146
  %conv163 = zext i32 %shr162 to i64, !dbg !6147
  %add.ptr164 = getelementptr inbounds i8, i8* %97, i64 %conv163, !dbg !6148
  store i8* %add.ptr164, i8** %dp160, align 8, !dbg !6142
  call void @llvm.dbg.declare(metadata i32* %sshift165, metadata !6149, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.declare(metadata i32* %dshift166, metadata !6151, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.declare(metadata i32* %s_start167, metadata !6153, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.declare(metadata i32* %s_end168, metadata !6155, metadata !DIExpression()), !dbg !6156
  call void @llvm.dbg.declare(metadata i32* %s_inc169, metadata !6157, metadata !DIExpression()), !dbg !6158
  call void @llvm.dbg.declare(metadata i32* %i170, metadata !6159, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.declare(metadata i32* %jstop171, metadata !6161, metadata !DIExpression()), !dbg !6162
  %99 = load i32, i32* %pass.addr, align 4, !dbg !6163
  %idxprom172 = sext i32 %99 to i64, !dbg !6164
  %arrayidx173 = getelementptr inbounds [7 x i32], [7 x i32]* @png_do_read_interlace.png_pass_inc, i64 0, i64 %idxprom172, !dbg !6164
  %100 = load i32, i32* %arrayidx173, align 4, !dbg !6164
  store i32 %100, i32* %jstop171, align 4, !dbg !6162
  %101 = load i32, i32* %transformations.addr, align 4, !dbg !6165
  %and174 = and i32 %101, 65536, !dbg !6167
  %tobool175 = icmp ne i32 %and174, 0, !dbg !6167
  br i1 %tobool175, label %if.then176, label %if.else184, !dbg !6168

if.then176:                                       ; preds = %sw.bb153
  %102 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6169
  %width177 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %102, i32 0, i32 0, !dbg !6171
  %103 = load i32, i32* %width177, align 8, !dbg !6171
  %add178 = add i32 %103, 1, !dbg !6172
  %and179 = and i32 %add178, 1, !dbg !6173
  %shl180 = shl i32 %and179, 2, !dbg !6174
  store i32 %shl180, i32* %sshift165, align 4, !dbg !6175
  %104 = load i32, i32* %final_width, align 4, !dbg !6176
  %add181 = add i32 %104, 1, !dbg !6177
  %and182 = and i32 %add181, 1, !dbg !6178
  %shl183 = shl i32 %and182, 2, !dbg !6179
  store i32 %shl183, i32* %dshift166, align 4, !dbg !6180
  store i32 4, i32* %s_start167, align 4, !dbg !6181
  store i32 0, i32* %s_end168, align 4, !dbg !6182
  store i32 -4, i32* %s_inc169, align 4, !dbg !6183
  br label %if.end194, !dbg !6184

if.else184:                                       ; preds = %sw.bb153
  %105 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6185
  %width185 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %105, i32 0, i32 0, !dbg !6187
  %106 = load i32, i32* %width185, align 8, !dbg !6187
  %add186 = add i32 %106, 1, !dbg !6188
  %and187 = and i32 %add186, 1, !dbg !6189
  %sub188 = sub i32 1, %and187, !dbg !6190
  %shl189 = shl i32 %sub188, 2, !dbg !6191
  store i32 %shl189, i32* %sshift165, align 4, !dbg !6192
  %107 = load i32, i32* %final_width, align 4, !dbg !6193
  %add190 = add i32 %107, 1, !dbg !6194
  %and191 = and i32 %add190, 1, !dbg !6195
  %sub192 = sub i32 1, %and191, !dbg !6196
  %shl193 = shl i32 %sub192, 2, !dbg !6197
  store i32 %shl193, i32* %dshift166, align 4, !dbg !6198
  store i32 0, i32* %s_start167, align 4, !dbg !6199
  store i32 4, i32* %s_end168, align 4, !dbg !6200
  store i32 4, i32* %s_inc169, align 4, !dbg !6201
  br label %if.end194

if.end194:                                        ; preds = %if.else184, %if.then176
  store i32 0, i32* %i170, align 4, !dbg !6202
  br label %for.cond195, !dbg !6204

for.cond195:                                      ; preds = %for.inc242, %if.end194
  %108 = load i32, i32* %i170, align 4, !dbg !6205
  %109 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6207
  %width196 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %109, i32 0, i32 0, !dbg !6208
  %110 = load i32, i32* %width196, align 8, !dbg !6208
  %cmp197 = icmp ult i32 %108, %110, !dbg !6209
  br i1 %cmp197, label %for.body199, label %for.end244, !dbg !6210

for.body199:                                      ; preds = %for.cond195
  call void @llvm.dbg.declare(metadata i8* %v200, metadata !6211, metadata !DIExpression()), !dbg !6213
  %111 = load i8*, i8** %sp154, align 8, !dbg !6214
  %112 = load i8, i8* %111, align 1, !dbg !6215
  %conv201 = zext i8 %112 to i32, !dbg !6215
  %113 = load i32, i32* %sshift165, align 4, !dbg !6216
  %shr202 = ashr i32 %conv201, %113, !dbg !6217
  %and203 = and i32 %shr202, 15, !dbg !6218
  %conv204 = trunc i32 %and203 to i8, !dbg !6219
  store i8 %conv204, i8* %v200, align 1, !dbg !6213
  call void @llvm.dbg.declare(metadata i32* %j205, metadata !6220, metadata !DIExpression()), !dbg !6221
  store i32 0, i32* %j205, align 4, !dbg !6222
  br label %for.cond206, !dbg !6224

for.cond206:                                      ; preds = %for.inc232, %for.body199
  %114 = load i32, i32* %j205, align 4, !dbg !6225
  %115 = load i32, i32* %jstop171, align 4, !dbg !6227
  %cmp207 = icmp slt i32 %114, %115, !dbg !6228
  br i1 %cmp207, label %for.body209, label %for.end234, !dbg !6229

for.body209:                                      ; preds = %for.cond206
  %116 = load i32, i32* %dshift166, align 4, !dbg !6230
  %sub210 = sub nsw i32 4, %116, !dbg !6232
  %shr211 = ashr i32 3855, %sub210, !dbg !6233
  %and212 = and i32 %shr211, 255, !dbg !6234
  %conv213 = trunc i32 %and212 to i8, !dbg !6235
  %conv214 = zext i8 %conv213 to i32, !dbg !6235
  %117 = load i8*, i8** %dp160, align 8, !dbg !6236
  %118 = load i8, i8* %117, align 1, !dbg !6237
  %conv215 = zext i8 %118 to i32, !dbg !6237
  %and216 = and i32 %conv215, %conv214, !dbg !6237
  %conv217 = trunc i32 %and216 to i8, !dbg !6237
  store i8 %conv217, i8* %117, align 1, !dbg !6237
  %119 = load i8, i8* %v200, align 1, !dbg !6238
  %conv218 = zext i8 %119 to i32, !dbg !6238
  %120 = load i32, i32* %dshift166, align 4, !dbg !6239
  %shl219 = shl i32 %conv218, %120, !dbg !6240
  %conv220 = trunc i32 %shl219 to i8, !dbg !6241
  %conv221 = zext i8 %conv220 to i32, !dbg !6241
  %121 = load i8*, i8** %dp160, align 8, !dbg !6242
  %122 = load i8, i8* %121, align 1, !dbg !6243
  %conv222 = zext i8 %122 to i32, !dbg !6243
  %or223 = or i32 %conv222, %conv221, !dbg !6243
  %conv224 = trunc i32 %or223 to i8, !dbg !6243
  store i8 %conv224, i8* %121, align 1, !dbg !6243
  %123 = load i32, i32* %dshift166, align 4, !dbg !6244
  %124 = load i32, i32* %s_end168, align 4, !dbg !6246
  %cmp225 = icmp eq i32 %123, %124, !dbg !6247
  br i1 %cmp225, label %if.then227, label %if.else229, !dbg !6248

if.then227:                                       ; preds = %for.body209
  %125 = load i32, i32* %s_start167, align 4, !dbg !6249
  store i32 %125, i32* %dshift166, align 4, !dbg !6251
  %126 = load i8*, i8** %dp160, align 8, !dbg !6252
  %incdec.ptr228 = getelementptr inbounds i8, i8* %126, i32 -1, !dbg !6252
  store i8* %incdec.ptr228, i8** %dp160, align 8, !dbg !6252
  br label %if.end231, !dbg !6253

if.else229:                                       ; preds = %for.body209
  %127 = load i32, i32* %s_inc169, align 4, !dbg !6254
  %128 = load i32, i32* %dshift166, align 4, !dbg !6255
  %add230 = add nsw i32 %128, %127, !dbg !6255
  store i32 %add230, i32* %dshift166, align 4, !dbg !6255
  br label %if.end231

if.end231:                                        ; preds = %if.else229, %if.then227
  br label %for.inc232, !dbg !6256

for.inc232:                                       ; preds = %if.end231
  %129 = load i32, i32* %j205, align 4, !dbg !6257
  %inc233 = add nsw i32 %129, 1, !dbg !6257
  store i32 %inc233, i32* %j205, align 4, !dbg !6257
  br label %for.cond206, !dbg !6258, !llvm.loop !6259

for.end234:                                       ; preds = %for.cond206
  %130 = load i32, i32* %sshift165, align 4, !dbg !6261
  %131 = load i32, i32* %s_end168, align 4, !dbg !6263
  %cmp235 = icmp eq i32 %130, %131, !dbg !6264
  br i1 %cmp235, label %if.then237, label %if.else239, !dbg !6265

if.then237:                                       ; preds = %for.end234
  %132 = load i32, i32* %s_start167, align 4, !dbg !6266
  store i32 %132, i32* %sshift165, align 4, !dbg !6268
  %133 = load i8*, i8** %sp154, align 8, !dbg !6269
  %incdec.ptr238 = getelementptr inbounds i8, i8* %133, i32 -1, !dbg !6269
  store i8* %incdec.ptr238, i8** %sp154, align 8, !dbg !6269
  br label %if.end241, !dbg !6270

if.else239:                                       ; preds = %for.end234
  %134 = load i32, i32* %s_inc169, align 4, !dbg !6271
  %135 = load i32, i32* %sshift165, align 4, !dbg !6272
  %add240 = add nsw i32 %135, %134, !dbg !6272
  store i32 %add240, i32* %sshift165, align 4, !dbg !6272
  br label %if.end241

if.end241:                                        ; preds = %if.else239, %if.then237
  br label %for.inc242, !dbg !6273

for.inc242:                                       ; preds = %if.end241
  %136 = load i32, i32* %i170, align 4, !dbg !6274
  %inc243 = add i32 %136, 1, !dbg !6274
  store i32 %inc243, i32* %i170, align 4, !dbg !6274
  br label %for.cond195, !dbg !6275, !llvm.loop !6276

for.end244:                                       ; preds = %for.cond195
  br label %sw.epilog, !dbg !6278

sw.default:                                       ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %pixel_bytes, metadata !6279, metadata !DIExpression()), !dbg !6281
  %137 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6282
  %pixel_depth245 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %137, i32 0, i32 5, !dbg !6283
  %138 = load i8, i8* %pixel_depth245, align 1, !dbg !6283
  %conv246 = zext i8 %138 to i32, !dbg !6282
  %shr247 = ashr i32 %conv246, 3, !dbg !6284
  %conv248 = sext i32 %shr247 to i64, !dbg !6285
  store i64 %conv248, i64* %pixel_bytes, align 8, !dbg !6281
  call void @llvm.dbg.declare(metadata i8** %sp249, metadata !6286, metadata !DIExpression()), !dbg !6287
  %139 = load i8*, i8** %row.addr, align 8, !dbg !6288
  %140 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6289
  %width250 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %140, i32 0, i32 0, !dbg !6290
  %141 = load i32, i32* %width250, align 8, !dbg !6290
  %sub251 = sub i32 %141, 1, !dbg !6291
  %conv252 = zext i32 %sub251 to i64, !dbg !6292
  %142 = load i64, i64* %pixel_bytes, align 8, !dbg !6293
  %mul253 = mul i64 %conv252, %142, !dbg !6294
  %add.ptr254 = getelementptr inbounds i8, i8* %139, i64 %mul253, !dbg !6295
  store i8* %add.ptr254, i8** %sp249, align 8, !dbg !6287
  call void @llvm.dbg.declare(metadata i8** %dp255, metadata !6296, metadata !DIExpression()), !dbg !6297
  %143 = load i8*, i8** %row.addr, align 8, !dbg !6298
  %144 = load i32, i32* %final_width, align 4, !dbg !6299
  %sub256 = sub i32 %144, 1, !dbg !6300
  %conv257 = zext i32 %sub256 to i64, !dbg !6301
  %145 = load i64, i64* %pixel_bytes, align 8, !dbg !6302
  %mul258 = mul i64 %conv257, %145, !dbg !6303
  %add.ptr259 = getelementptr inbounds i8, i8* %143, i64 %mul258, !dbg !6304
  store i8* %add.ptr259, i8** %dp255, align 8, !dbg !6297
  call void @llvm.dbg.declare(metadata i32* %jstop260, metadata !6305, metadata !DIExpression()), !dbg !6306
  %146 = load i32, i32* %pass.addr, align 4, !dbg !6307
  %idxprom261 = sext i32 %146 to i64, !dbg !6308
  %arrayidx262 = getelementptr inbounds [7 x i32], [7 x i32]* @png_do_read_interlace.png_pass_inc, i64 0, i64 %idxprom261, !dbg !6308
  %147 = load i32, i32* %arrayidx262, align 4, !dbg !6308
  store i32 %147, i32* %jstop260, align 4, !dbg !6306
  call void @llvm.dbg.declare(metadata i32* %i263, metadata !6309, metadata !DIExpression()), !dbg !6310
  store i32 0, i32* %i263, align 4, !dbg !6311
  br label %for.cond264, !dbg !6313

for.cond264:                                      ; preds = %for.inc282, %sw.default
  %148 = load i32, i32* %i263, align 4, !dbg !6314
  %149 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6316
  %width265 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %149, i32 0, i32 0, !dbg !6317
  %150 = load i32, i32* %width265, align 8, !dbg !6317
  %cmp266 = icmp ult i32 %148, %150, !dbg !6318
  br i1 %cmp266, label %for.body268, label %for.end284, !dbg !6319

for.body268:                                      ; preds = %for.cond264
  call void @llvm.dbg.declare(metadata [8 x i8]* %v269, metadata !6320, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.declare(metadata i32* %j270, metadata !6323, metadata !DIExpression()), !dbg !6324
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %v269, i64 0, i64 0, !dbg !6325
  %151 = load i8*, i8** %sp249, align 8, !dbg !6326
  %152 = load i64, i64* %pixel_bytes, align 8, !dbg !6327
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %151, i64 %152, i1 false), !dbg !6325
  store i32 0, i32* %j270, align 4, !dbg !6328
  br label %for.cond271, !dbg !6330

for.cond271:                                      ; preds = %for.inc277, %for.body268
  %153 = load i32, i32* %j270, align 4, !dbg !6331
  %154 = load i32, i32* %jstop260, align 4, !dbg !6333
  %cmp272 = icmp slt i32 %153, %154, !dbg !6334
  br i1 %cmp272, label %for.body274, label %for.end279, !dbg !6335

for.body274:                                      ; preds = %for.cond271
  %155 = load i8*, i8** %dp255, align 8, !dbg !6336
  %arraydecay275 = getelementptr inbounds [8 x i8], [8 x i8]* %v269, i64 0, i64 0, !dbg !6338
  %156 = load i64, i64* %pixel_bytes, align 8, !dbg !6339
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %155, i8* align 1 %arraydecay275, i64 %156, i1 false), !dbg !6338
  %157 = load i64, i64* %pixel_bytes, align 8, !dbg !6340
  %158 = load i8*, i8** %dp255, align 8, !dbg !6341
  %idx.neg = sub i64 0, %157, !dbg !6341
  %add.ptr276 = getelementptr inbounds i8, i8* %158, i64 %idx.neg, !dbg !6341
  store i8* %add.ptr276, i8** %dp255, align 8, !dbg !6341
  br label %for.inc277, !dbg !6342

for.inc277:                                       ; preds = %for.body274
  %159 = load i32, i32* %j270, align 4, !dbg !6343
  %inc278 = add nsw i32 %159, 1, !dbg !6343
  store i32 %inc278, i32* %j270, align 4, !dbg !6343
  br label %for.cond271, !dbg !6344, !llvm.loop !6345

for.end279:                                       ; preds = %for.cond271
  %160 = load i64, i64* %pixel_bytes, align 8, !dbg !6347
  %161 = load i8*, i8** %sp249, align 8, !dbg !6348
  %idx.neg280 = sub i64 0, %160, !dbg !6348
  %add.ptr281 = getelementptr inbounds i8, i8* %161, i64 %idx.neg280, !dbg !6348
  store i8* %add.ptr281, i8** %sp249, align 8, !dbg !6348
  br label %for.inc282, !dbg !6349

for.inc282:                                       ; preds = %for.end279
  %162 = load i32, i32* %i263, align 4, !dbg !6350
  %inc283 = add i32 %162, 1, !dbg !6350
  store i32 %inc283, i32* %i263, align 4, !dbg !6350
  br label %for.cond264, !dbg !6351, !llvm.loop !6352

for.end284:                                       ; preds = %for.cond264
  br label %sw.epilog, !dbg !6354

sw.epilog:                                        ; preds = %for.end284, %for.end244, %for.end152, %for.end61
  %163 = load i32, i32* %final_width, align 4, !dbg !6355
  %164 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6356
  %width285 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %164, i32 0, i32 0, !dbg !6357
  store i32 %163, i32* %width285, align 8, !dbg !6358
  %165 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6359
  %pixel_depth286 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %165, i32 0, i32 5, !dbg !6359
  %166 = load i8, i8* %pixel_depth286, align 1, !dbg !6359
  %conv287 = zext i8 %166 to i32, !dbg !6359
  %cmp288 = icmp sge i32 %conv287, 8, !dbg !6359
  br i1 %cmp288, label %cond.true, label %cond.false, !dbg !6359

cond.true:                                        ; preds = %sw.epilog
  %167 = load i32, i32* %final_width, align 4, !dbg !6359
  %conv290 = zext i32 %167 to i64, !dbg !6359
  %168 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6359
  %pixel_depth291 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %168, i32 0, i32 5, !dbg !6359
  %169 = load i8, i8* %pixel_depth291, align 1, !dbg !6359
  %conv292 = zext i8 %169 to i64, !dbg !6359
  %shr293 = lshr i64 %conv292, 3, !dbg !6359
  %mul294 = mul i64 %conv290, %shr293, !dbg !6359
  br label %cond.end, !dbg !6359

cond.false:                                       ; preds = %sw.epilog
  %170 = load i32, i32* %final_width, align 4, !dbg !6359
  %conv295 = zext i32 %170 to i64, !dbg !6359
  %171 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6359
  %pixel_depth296 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %171, i32 0, i32 5, !dbg !6359
  %172 = load i8, i8* %pixel_depth296, align 1, !dbg !6359
  %conv297 = zext i8 %172 to i64, !dbg !6359
  %mul298 = mul i64 %conv295, %conv297, !dbg !6359
  %add299 = add i64 %mul298, 7, !dbg !6359
  %shr300 = lshr i64 %add299, 3, !dbg !6359
  br label %cond.end, !dbg !6359

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %mul294, %cond.true ], [ %shr300, %cond.false ], !dbg !6359
  %173 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6360
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %173, i32 0, i32 1, !dbg !6361
  store i64 %cond, i64* %rowbytes, align 8, !dbg !6362
  br label %if.end301, !dbg !6363

if.end301:                                        ; preds = %cond.end, %land.lhs.true, %entry
  ret void, !dbg !6364
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_read_filter_row(%struct.png_struct_def* %pp, %struct.png_row_info_struct* %row_info, i8* %row, i8* %prev_row, i32 %filter) #0 !dbg !6365 {
entry:
  %pp.addr = alloca %struct.png_struct_def*, align 8
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %prev_row.addr = alloca i8*, align 8
  %filter.addr = alloca i32, align 4
  store %struct.png_struct_def* %pp, %struct.png_struct_def** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %pp.addr, metadata !6368, metadata !DIExpression()), !dbg !6369
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !6370, metadata !DIExpression()), !dbg !6371
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !6372, metadata !DIExpression()), !dbg !6373
  store i8* %prev_row, i8** %prev_row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prev_row.addr, metadata !6374, metadata !DIExpression()), !dbg !6375
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !6376, metadata !DIExpression()), !dbg !6377
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %pp.addr, align 8, !dbg !6378
  %read_filter = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 144, !dbg !6380
  %arrayidx = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %read_filter, i64 0, i64 0, !dbg !6378
  %1 = load void (%struct.png_row_info_struct*, i8*, i8*)*, void (%struct.png_row_info_struct*, i8*, i8*)** %arrayidx, align 8, !dbg !6378
  %cmp = icmp eq void (%struct.png_row_info_struct*, i8*, i8*)* %1, null, !dbg !6381
  br i1 %cmp, label %if.then, label %if.end, !dbg !6382

if.then:                                          ; preds = %entry
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %pp.addr, align 8, !dbg !6383
  call void @png_init_filter_functions(%struct.png_struct_def* %2), !dbg !6384
  br label %if.end, !dbg !6384

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %filter.addr, align 4, !dbg !6385
  %cmp1 = icmp sgt i32 %3, 0, !dbg !6387
  br i1 %cmp1, label %land.lhs.true, label %if.end6, !dbg !6388

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32, i32* %filter.addr, align 4, !dbg !6389
  %cmp2 = icmp slt i32 %4, 5, !dbg !6390
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !6391

if.then3:                                         ; preds = %land.lhs.true
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %pp.addr, align 8, !dbg !6392
  %read_filter4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i32 0, i32 144, !dbg !6393
  %6 = load i32, i32* %filter.addr, align 4, !dbg !6394
  %sub = sub nsw i32 %6, 1, !dbg !6395
  %idxprom = sext i32 %sub to i64, !dbg !6392
  %arrayidx5 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %read_filter4, i64 0, i64 %idxprom, !dbg !6392
  %7 = load void (%struct.png_row_info_struct*, i8*, i8*)*, void (%struct.png_row_info_struct*, i8*, i8*)** %arrayidx5, align 8, !dbg !6392
  %8 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !6396
  %9 = load i8*, i8** %row.addr, align 8, !dbg !6397
  %10 = load i8*, i8** %prev_row.addr, align 8, !dbg !6398
  call void %7(%struct.png_row_info_struct* %8, i8* %9, i8* %10), !dbg !6392
  br label %if.end6, !dbg !6392

if.end6:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  ret void, !dbg !6399
}

; Function Attrs: noinline nounwind uwtable
define internal void @png_init_filter_functions(%struct.png_struct_def* %pp) #0 !dbg !6400 {
entry:
  %pp.addr = alloca %struct.png_struct_def*, align 8
  %bpp = alloca i32, align 4
  store %struct.png_struct_def* %pp, %struct.png_struct_def** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %pp.addr, metadata !6401, metadata !DIExpression()), !dbg !6402
  call void @llvm.dbg.declare(metadata i32* %bpp, metadata !6403, metadata !DIExpression()), !dbg !6404
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %pp.addr, align 8, !dbg !6405
  %pixel_depth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 59, !dbg !6406
  %1 = load i8, i8* %pixel_depth, align 2, !dbg !6406
  %conv = zext i8 %1 to i32, !dbg !6405
  %add = add nsw i32 %conv, 7, !dbg !6407
  %shr = ashr i32 %add, 3, !dbg !6408
  store i32 %shr, i32* %bpp, align 4, !dbg !6404
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %pp.addr, align 8, !dbg !6409
  %read_filter = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 144, !dbg !6410
  %arrayidx = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %read_filter, i64 0, i64 0, !dbg !6409
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_sub, void (%struct.png_row_info_struct*, i8*, i8*)** %arrayidx, align 8, !dbg !6411
  %3 = load %struct.png_struct_def*, %struct.png_struct_def** %pp.addr, align 8, !dbg !6412
  %read_filter1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %3, i32 0, i32 144, !dbg !6413
  %arrayidx2 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %read_filter1, i64 0, i64 1, !dbg !6412
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_up, void (%struct.png_row_info_struct*, i8*, i8*)** %arrayidx2, align 8, !dbg !6414
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %pp.addr, align 8, !dbg !6415
  %read_filter3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 144, !dbg !6416
  %arrayidx4 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %read_filter3, i64 0, i64 2, !dbg !6415
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_avg, void (%struct.png_row_info_struct*, i8*, i8*)** %arrayidx4, align 8, !dbg !6417
  %5 = load i32, i32* %bpp, align 4, !dbg !6418
  %cmp = icmp eq i32 %5, 1, !dbg !6420
  br i1 %cmp, label %if.then, label %if.else, !dbg !6421

if.then:                                          ; preds = %entry
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %pp.addr, align 8, !dbg !6422
  %read_filter6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 144, !dbg !6423
  %arrayidx7 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %read_filter6, i64 0, i64 3, !dbg !6422
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_paeth_1byte_pixel, void (%struct.png_row_info_struct*, i8*, i8*)** %arrayidx7, align 8, !dbg !6424
  br label %if.end, !dbg !6422

if.else:                                          ; preds = %entry
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %pp.addr, align 8, !dbg !6425
  %read_filter8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i32 0, i32 144, !dbg !6426
  %arrayidx9 = getelementptr inbounds [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], [4 x void (%struct.png_row_info_struct*, i8*, i8*)*]* %read_filter8, i64 0, i64 3, !dbg !6425
  store void (%struct.png_row_info_struct*, i8*, i8*)* @png_read_filter_row_paeth_multibyte_pixel, void (%struct.png_row_info_struct*, i8*, i8*)** %arrayidx9, align 8, !dbg !6427
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6428
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_read_finish_row(%struct.png_struct_def* %png_ptr) #0 !dbg !496 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %extra = alloca i8, align 1
  %ret = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !6429, metadata !DIExpression()), !dbg !6430
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6431
  %row_number = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 36, !dbg !6432
  %1 = load i32, i32* %row_number, align 4, !dbg !6433
  %inc = add i32 %1, 1, !dbg !6433
  store i32 %inc, i32* %row_number, align 4, !dbg !6433
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6434
  %row_number1 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 36, !dbg !6436
  %3 = load i32, i32* %row_number1, align 4, !dbg !6436
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6437
  %num_rows = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 32, !dbg !6438
  %5 = load i32, i32* %num_rows, align 8, !dbg !6438
  %cmp = icmp ult i32 %3, %5, !dbg !6439
  br i1 %cmp, label %if.then, label %if.end, !dbg !6440

if.then:                                          ; preds = %entry
  br label %return, !dbg !6441

if.end:                                           ; preds = %entry
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6442
  %interlaced = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 53, !dbg !6444
  %7 = load i8, i8* %interlaced, align 4, !dbg !6444
  %tobool = icmp ne i8 %7, 0, !dbg !6442
  br i1 %tobool, label %if.then2, label %if.end54, !dbg !6445

if.then2:                                         ; preds = %if.end
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6446
  %row_number3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i32 0, i32 36, !dbg !6448
  store i32 0, i32* %row_number3, align 4, !dbg !6449
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6450
  %prev_row = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i32 0, i32 38, !dbg !6451
  %10 = load i8*, i8** %prev_row, align 8, !dbg !6451
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6452
  %rowbytes = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 34, !dbg !6453
  %12 = load i64, i64* %rowbytes, align 8, !dbg !6453
  %add = add i64 %12, 1, !dbg !6454
  call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 %add, i1 false), !dbg !6455
  br label %do.body, !dbg !6456

do.body:                                          ; preds = %lor.end, %if.then2
  %13 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6457
  %pass = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %13, i32 0, i32 54, !dbg !6459
  %14 = load i8, i8* %pass, align 1, !dbg !6460
  %inc4 = add i8 %14, 1, !dbg !6460
  store i8 %inc4, i8* %pass, align 1, !dbg !6460
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6461
  %pass5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 54, !dbg !6463
  %16 = load i8, i8* %pass5, align 1, !dbg !6463
  %conv = zext i8 %16 to i32, !dbg !6461
  %cmp6 = icmp sge i32 %conv, 7, !dbg !6464
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !6465

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !6466

if.end9:                                          ; preds = %do.body
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6467
  %width = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 30, !dbg !6468
  %18 = load i32, i32* %width, align 8, !dbg !6468
  %19 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6469
  %pass10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %19, i32 0, i32 54, !dbg !6470
  %20 = load i8, i8* %pass10, align 1, !dbg !6470
  %idxprom = zext i8 %20 to i64, !dbg !6471
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_finish_row.png_pass_inc, i64 0, i64 %idxprom, !dbg !6471
  %21 = load i8, i8* %arrayidx, align 1, !dbg !6471
  %conv11 = zext i8 %21 to i32, !dbg !6471
  %add12 = add i32 %18, %conv11, !dbg !6472
  %sub = sub i32 %add12, 1, !dbg !6473
  %22 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6474
  %pass13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %22, i32 0, i32 54, !dbg !6475
  %23 = load i8, i8* %pass13, align 1, !dbg !6475
  %idxprom14 = zext i8 %23 to i64, !dbg !6476
  %arrayidx15 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_finish_row.png_pass_start, i64 0, i64 %idxprom14, !dbg !6476
  %24 = load i8, i8* %arrayidx15, align 1, !dbg !6476
  %conv16 = zext i8 %24 to i32, !dbg !6476
  %sub17 = sub i32 %sub, %conv16, !dbg !6477
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6478
  %pass18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i32 0, i32 54, !dbg !6479
  %26 = load i8, i8* %pass18, align 1, !dbg !6479
  %idxprom19 = zext i8 %26 to i64, !dbg !6480
  %arrayidx20 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_finish_row.png_pass_inc, i64 0, i64 %idxprom19, !dbg !6480
  %27 = load i8, i8* %arrayidx20, align 1, !dbg !6480
  %conv21 = zext i8 %27 to i32, !dbg !6480
  %div = udiv i32 %sub17, %conv21, !dbg !6481
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6482
  %iwidth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %28, i32 0, i32 35, !dbg !6483
  store i32 %div, i32* %iwidth, align 8, !dbg !6484
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6485
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 15, !dbg !6487
  %30 = load i32, i32* %transformations, align 4, !dbg !6487
  %and = and i32 %30, 2, !dbg !6488
  %tobool22 = icmp ne i32 %and, 0, !dbg !6488
  br i1 %tobool22, label %if.else, label %if.then23, !dbg !6489

if.then23:                                        ; preds = %if.end9
  %31 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6490
  %height = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %31, i32 0, i32 31, !dbg !6492
  %32 = load i32, i32* %height, align 4, !dbg !6492
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6493
  %pass24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 54, !dbg !6494
  %34 = load i8, i8* %pass24, align 1, !dbg !6494
  %idxprom25 = zext i8 %34 to i64, !dbg !6495
  %arrayidx26 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_finish_row.png_pass_yinc, i64 0, i64 %idxprom25, !dbg !6495
  %35 = load i8, i8* %arrayidx26, align 1, !dbg !6495
  %conv27 = zext i8 %35 to i32, !dbg !6495
  %add28 = add i32 %32, %conv27, !dbg !6496
  %sub29 = sub i32 %add28, 1, !dbg !6497
  %36 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6498
  %pass30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %36, i32 0, i32 54, !dbg !6499
  %37 = load i8, i8* %pass30, align 1, !dbg !6499
  %idxprom31 = zext i8 %37 to i64, !dbg !6500
  %arrayidx32 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_finish_row.png_pass_ystart, i64 0, i64 %idxprom31, !dbg !6500
  %38 = load i8, i8* %arrayidx32, align 1, !dbg !6500
  %conv33 = zext i8 %38 to i32, !dbg !6500
  %sub34 = sub i32 %sub29, %conv33, !dbg !6501
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6502
  %pass35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 54, !dbg !6503
  %40 = load i8, i8* %pass35, align 1, !dbg !6503
  %idxprom36 = zext i8 %40 to i64, !dbg !6504
  %arrayidx37 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_finish_row.png_pass_yinc, i64 0, i64 %idxprom36, !dbg !6504
  %41 = load i8, i8* %arrayidx37, align 1, !dbg !6504
  %conv38 = zext i8 %41 to i32, !dbg !6504
  %div39 = udiv i32 %sub34, %conv38, !dbg !6505
  %42 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6506
  %num_rows40 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %42, i32 0, i32 32, !dbg !6507
  store i32 %div39, i32* %num_rows40, align 8, !dbg !6508
  br label %if.end41, !dbg !6509

if.else:                                          ; preds = %if.end9
  br label %do.end, !dbg !6510

if.end41:                                         ; preds = %if.then23
  br label %do.cond, !dbg !6511

do.cond:                                          ; preds = %if.end41
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6512
  %num_rows42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 32, !dbg !6513
  %44 = load i32, i32* %num_rows42, align 8, !dbg !6513
  %cmp43 = icmp eq i32 %44, 0, !dbg !6514
  br i1 %cmp43, label %lor.end, label %lor.rhs, !dbg !6515

lor.rhs:                                          ; preds = %do.cond
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6516
  %iwidth45 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 35, !dbg !6517
  %46 = load i32, i32* %iwidth45, align 8, !dbg !6517
  %cmp46 = icmp eq i32 %46, 0, !dbg !6518
  br label %lor.end, !dbg !6515

lor.end:                                          ; preds = %lor.rhs, %do.cond
  %47 = phi i1 [ true, %do.cond ], [ %cmp46, %lor.rhs ]
  br i1 %47, label %do.body, label %do.end, !dbg !6511, !llvm.loop !6519

do.end:                                           ; preds = %lor.end, %if.else, %if.then8
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6521
  %pass48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 54, !dbg !6523
  %49 = load i8, i8* %pass48, align 1, !dbg !6523
  %conv49 = zext i8 %49 to i32, !dbg !6521
  %cmp50 = icmp slt i32 %conv49, 7, !dbg !6524
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !6525

if.then52:                                        ; preds = %do.end
  br label %return, !dbg !6526

if.end53:                                         ; preds = %do.end
  br label %if.end54, !dbg !6527

if.end54:                                         ; preds = %if.end53, %if.end
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6528
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %50, i32 0, i32 14, !dbg !6530
  %51 = load i32, i32* %flags, align 8, !dbg !6530
  %and55 = and i32 %51, 32, !dbg !6531
  %tobool56 = icmp ne i32 %and55, 0, !dbg !6531
  br i1 %tobool56, label %if.end128, label %if.then57, !dbg !6532

if.then57:                                        ; preds = %if.end54
  call void @llvm.dbg.declare(metadata i8* %extra, metadata !6533, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6536, metadata !DIExpression()), !dbg !6537
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6538
  %zstream = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %52, i32 0, i32 16, !dbg !6539
  %next_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream, i32 0, i32 3, !dbg !6540
  store i8* %extra, i8** %next_out, align 8, !dbg !6541
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6542
  %zstream58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %53, i32 0, i32 16, !dbg !6543
  %avail_out = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream58, i32 0, i32 4, !dbg !6544
  store i32 1, i32* %avail_out, align 8, !dbg !6545
  br label %for.cond, !dbg !6546

for.cond:                                         ; preds = %if.end125, %if.then57
  %54 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6547
  %zstream59 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %54, i32 0, i32 16, !dbg !6552
  %avail_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream59, i32 0, i32 1, !dbg !6553
  %55 = load i32, i32* %avail_in, align 8, !dbg !6553
  %tobool60 = icmp ne i32 %55, 0, !dbg !6554
  br i1 %tobool60, label %if.end89, label %if.then61, !dbg !6555

if.then61:                                        ; preds = %for.cond
  br label %while.cond, !dbg !6556

while.cond:                                       ; preds = %if.end68, %if.then61
  %56 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6558
  %idat_size = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %56, i32 0, i32 45, !dbg !6559
  %57 = load i32, i32* %idat_size, align 8, !dbg !6559
  %tobool62 = icmp ne i32 %57, 0, !dbg !6560
  %lnot = xor i1 %tobool62, true, !dbg !6560
  br i1 %lnot, label %while.body, label %while.end, !dbg !6556

while.body:                                       ; preds = %while.cond
  %58 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6561
  %call = call i32 @png_crc_finish(%struct.png_struct_def* %58, i32 0), !dbg !6563
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6564
  %call63 = call i32 @png_read_chunk_header(%struct.png_struct_def* %59), !dbg !6565
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6566
  %idat_size64 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %60, i32 0, i32 45, !dbg !6567
  store i32 %call63, i32* %idat_size64, align 8, !dbg !6568
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6569
  %chunk_name = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %61, i32 0, i32 37, !dbg !6571
  %62 = load i32, i32* %chunk_name, align 8, !dbg !6571
  %cmp65 = icmp ne i32 %62, 1229209940, !dbg !6572
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !6573

if.then67:                                        ; preds = %while.body
  %63 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6574
  call void @png_error(%struct.png_struct_def* %63, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.138, i64 0, i64 0)) #6, !dbg !6575
  unreachable, !dbg !6575

if.end68:                                         ; preds = %while.body
  br label %while.cond, !dbg !6556, !llvm.loop !6576

while.end:                                        ; preds = %while.cond
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6578
  %zbuf_size = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 18, !dbg !6579
  %65 = load i32, i32* %zbuf_size, align 8, !dbg !6579
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6580
  %zstream69 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 16, !dbg !6581
  %avail_in70 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream69, i32 0, i32 1, !dbg !6582
  store i32 %65, i32* %avail_in70, align 8, !dbg !6583
  %67 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6584
  %zbuf = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %67, i32 0, i32 17, !dbg !6585
  %68 = load i8*, i8** %zbuf, align 8, !dbg !6585
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6586
  %zstream71 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %69, i32 0, i32 16, !dbg !6587
  %next_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream71, i32 0, i32 0, !dbg !6588
  store i8* %68, i8** %next_in, align 8, !dbg !6589
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6590
  %zbuf_size72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %70, i32 0, i32 18, !dbg !6592
  %71 = load i32, i32* %zbuf_size72, align 8, !dbg !6592
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6593
  %idat_size73 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %72, i32 0, i32 45, !dbg !6594
  %73 = load i32, i32* %idat_size73, align 8, !dbg !6594
  %cmp74 = icmp ugt i32 %71, %73, !dbg !6595
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !6596

if.then76:                                        ; preds = %while.end
  %74 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6597
  %idat_size77 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %74, i32 0, i32 45, !dbg !6598
  %75 = load i32, i32* %idat_size77, align 8, !dbg !6598
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6599
  %zstream78 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 16, !dbg !6600
  %avail_in79 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream78, i32 0, i32 1, !dbg !6601
  store i32 %75, i32* %avail_in79, align 8, !dbg !6602
  br label %if.end80, !dbg !6599

if.end80:                                         ; preds = %if.then76, %while.end
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6603
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6604
  %zbuf81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 17, !dbg !6605
  %79 = load i8*, i8** %zbuf81, align 8, !dbg !6605
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6606
  %zstream82 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 16, !dbg !6607
  %avail_in83 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream82, i32 0, i32 1, !dbg !6608
  %81 = load i32, i32* %avail_in83, align 8, !dbg !6608
  %conv84 = zext i32 %81 to i64, !dbg !6606
  call void @png_crc_read(%struct.png_struct_def* %77, i8* %79, i64 %conv84), !dbg !6609
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6610
  %zstream85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %82, i32 0, i32 16, !dbg !6611
  %avail_in86 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream85, i32 0, i32 1, !dbg !6612
  %83 = load i32, i32* %avail_in86, align 8, !dbg !6612
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6613
  %idat_size87 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %84, i32 0, i32 45, !dbg !6614
  %85 = load i32, i32* %idat_size87, align 8, !dbg !6615
  %sub88 = sub i32 %85, %83, !dbg !6615
  store i32 %sub88, i32* %idat_size87, align 8, !dbg !6615
  br label %if.end89, !dbg !6616

if.end89:                                         ; preds = %if.end80, %for.cond
  %86 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6617
  %zstream90 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %86, i32 0, i32 16, !dbg !6618
  %call91 = call i32 @inflate(%struct.z_stream_s* %zstream90, i32 1), !dbg !6619
  store i32 %call91, i32* %ret, align 4, !dbg !6620
  %87 = load i32, i32* %ret, align 4, !dbg !6621
  %cmp92 = icmp eq i32 %87, 1, !dbg !6623
  br i1 %cmp92, label %if.then94, label %if.end108, !dbg !6624

if.then94:                                        ; preds = %if.end89
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6625
  %zstream95 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %88, i32 0, i32 16, !dbg !6628
  %avail_out96 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream95, i32 0, i32 4, !dbg !6629
  %89 = load i32, i32* %avail_out96, align 8, !dbg !6629
  %tobool97 = icmp ne i32 %89, 0, !dbg !6630
  br i1 %tobool97, label %lor.lhs.false, label %if.then104, !dbg !6631

lor.lhs.false:                                    ; preds = %if.then94
  %90 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6632
  %zstream98 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %90, i32 0, i32 16, !dbg !6633
  %avail_in99 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream98, i32 0, i32 1, !dbg !6634
  %91 = load i32, i32* %avail_in99, align 8, !dbg !6634
  %tobool100 = icmp ne i32 %91, 0, !dbg !6632
  br i1 %tobool100, label %if.then104, label %lor.lhs.false101, !dbg !6635

lor.lhs.false101:                                 ; preds = %lor.lhs.false
  %92 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6636
  %idat_size102 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %92, i32 0, i32 45, !dbg !6637
  %93 = load i32, i32* %idat_size102, align 8, !dbg !6637
  %tobool103 = icmp ne i32 %93, 0, !dbg !6636
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !6638

if.then104:                                       ; preds = %lor.lhs.false101, %lor.lhs.false, %if.then94
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6639
  call void @png_warning(%struct.png_struct_def* %94, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.139, i64 0, i64 0)), !dbg !6640
  br label %if.end105, !dbg !6640

if.end105:                                        ; preds = %if.then104, %lor.lhs.false101
  %95 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6641
  %mode = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %95, i32 0, i32 13, !dbg !6642
  %96 = load i32, i32* %mode, align 4, !dbg !6643
  %or = or i32 %96, 8, !dbg !6643
  store i32 %or, i32* %mode, align 4, !dbg !6643
  %97 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6644
  %flags106 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %97, i32 0, i32 14, !dbg !6645
  %98 = load i32, i32* %flags106, align 8, !dbg !6646
  %or107 = or i32 %98, 32, !dbg !6646
  store i32 %or107, i32* %flags106, align 8, !dbg !6646
  br label %for.end, !dbg !6647

if.end108:                                        ; preds = %if.end89
  %99 = load i32, i32* %ret, align 4, !dbg !6648
  %cmp109 = icmp ne i32 %99, 0, !dbg !6650
  br i1 %cmp109, label %if.then111, label %if.end116, !dbg !6651

if.then111:                                       ; preds = %if.end108
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6652
  %101 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6653
  %zstream112 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %101, i32 0, i32 16, !dbg !6654
  %msg = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream112, i32 0, i32 6, !dbg !6655
  %102 = load i8*, i8** %msg, align 8, !dbg !6655
  %tobool113 = icmp ne i8* %102, null, !dbg !6653
  br i1 %tobool113, label %cond.true, label %cond.false, !dbg !6653

cond.true:                                        ; preds = %if.then111
  %103 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6656
  %zstream114 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %103, i32 0, i32 16, !dbg !6657
  %msg115 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream114, i32 0, i32 6, !dbg !6658
  %104 = load i8*, i8** %msg115, align 8, !dbg !6658
  br label %cond.end, !dbg !6653

cond.false:                                       ; preds = %if.then111
  br label %cond.end, !dbg !6653

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %104, %cond.true ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.140, i64 0, i64 0), %cond.false ], !dbg !6653
  call void @png_error(%struct.png_struct_def* %100, i8* %cond) #6, !dbg !6659
  unreachable, !dbg !6659

if.end116:                                        ; preds = %if.end108
  %105 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6660
  %zstream117 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %105, i32 0, i32 16, !dbg !6662
  %avail_out118 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream117, i32 0, i32 4, !dbg !6663
  %106 = load i32, i32* %avail_out118, align 8, !dbg !6663
  %tobool119 = icmp ne i32 %106, 0, !dbg !6664
  br i1 %tobool119, label %if.end125, label %if.then120, !dbg !6665

if.then120:                                       ; preds = %if.end116
  %107 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6666
  call void @png_warning(%struct.png_struct_def* %107, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.139, i64 0, i64 0)), !dbg !6668
  %108 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6669
  %mode121 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %108, i32 0, i32 13, !dbg !6670
  %109 = load i32, i32* %mode121, align 4, !dbg !6671
  %or122 = or i32 %109, 8, !dbg !6671
  store i32 %or122, i32* %mode121, align 4, !dbg !6671
  %110 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6672
  %flags123 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %110, i32 0, i32 14, !dbg !6673
  %111 = load i32, i32* %flags123, align 8, !dbg !6674
  %or124 = or i32 %111, 32, !dbg !6674
  store i32 %or124, i32* %flags123, align 8, !dbg !6674
  br label %for.end, !dbg !6675

if.end125:                                        ; preds = %if.end116
  br label %for.cond, !dbg !6676, !llvm.loop !6677

for.end:                                          ; preds = %if.then120, %if.end105
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6680
  %zstream126 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %112, i32 0, i32 16, !dbg !6681
  %avail_out127 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream126, i32 0, i32 4, !dbg !6682
  store i32 0, i32* %avail_out127, align 8, !dbg !6683
  br label %if.end128, !dbg !6684

if.end128:                                        ; preds = %for.end, %if.end54
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6685
  %idat_size129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 45, !dbg !6687
  %114 = load i32, i32* %idat_size129, align 8, !dbg !6687
  %tobool130 = icmp ne i32 %114, 0, !dbg !6685
  br i1 %tobool130, label %if.then135, label %lor.lhs.false131, !dbg !6688

lor.lhs.false131:                                 ; preds = %if.end128
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6689
  %zstream132 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %115, i32 0, i32 16, !dbg !6690
  %avail_in133 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream132, i32 0, i32 1, !dbg !6691
  %116 = load i32, i32* %avail_in133, align 8, !dbg !6691
  %tobool134 = icmp ne i32 %116, 0, !dbg !6689
  br i1 %tobool134, label %if.then135, label %if.end136, !dbg !6692

if.then135:                                       ; preds = %lor.lhs.false131, %if.end128
  %117 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6693
  call void @png_warning(%struct.png_struct_def* %117, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.141, i64 0, i64 0)), !dbg !6694
  br label %if.end136, !dbg !6694

if.end136:                                        ; preds = %if.then135, %lor.lhs.false131
  %118 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6695
  %zstream137 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %118, i32 0, i32 16, !dbg !6696
  %call138 = call i32 @inflateReset(%struct.z_stream_s* %zstream137), !dbg !6697
  %119 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6698
  %mode139 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %119, i32 0, i32 13, !dbg !6699
  %120 = load i32, i32* %mode139, align 4, !dbg !6700
  %or140 = or i32 %120, 8, !dbg !6700
  store i32 %or140, i32* %mode139, align 4, !dbg !6700
  br label %return, !dbg !6701

return:                                           ; preds = %if.end136, %if.then52, %if.then
  ret void, !dbg !6701
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dso_local i32 @inflate(%struct.z_stream_s*, i32) #3

declare dso_local i32 @inflateReset(%struct.z_stream_s*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @png_read_start_row(%struct.png_struct_def* %png_ptr) #0 !dbg !506 {
entry:
  %png_ptr.addr = alloca %struct.png_struct_def*, align 8
  %max_pixel_depth = alloca i32, align 4
  %row_bytes = alloca i64, align 8
  %user_pixel_depth = alloca i32, align 4
  store %struct.png_struct_def* %png_ptr, %struct.png_struct_def** %png_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_struct_def** %png_ptr.addr, metadata !6702, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.declare(metadata i32* %max_pixel_depth, metadata !6704, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.declare(metadata i64* %row_bytes, metadata !6706, metadata !DIExpression()), !dbg !6707
  %0 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6708
  %zstream = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i32 0, i32 16, !dbg !6709
  %avail_in = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %zstream, i32 0, i32 1, !dbg !6710
  store i32 0, i32* %avail_in, align 8, !dbg !6711
  %1 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6712
  call void @png_init_read_transformations(%struct.png_struct_def* %1), !dbg !6713
  %2 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6714
  %interlaced = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %2, i32 0, i32 53, !dbg !6716
  %3 = load i8, i8* %interlaced, align 4, !dbg !6716
  %tobool = icmp ne i8 %3, 0, !dbg !6714
  br i1 %tobool, label %if.then, label %if.else21, !dbg !6717

if.then:                                          ; preds = %entry
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6718
  %transformations = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %4, i32 0, i32 15, !dbg !6721
  %5 = load i32, i32* %transformations, align 4, !dbg !6721
  %and = and i32 %5, 2, !dbg !6722
  %tobool1 = icmp ne i32 %and, 0, !dbg !6722
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !6723

if.then2:                                         ; preds = %if.then
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6724
  %height = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i32 0, i32 31, !dbg !6725
  %7 = load i32, i32* %height, align 4, !dbg !6725
  %8 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @png_read_start_row.png_pass_yinc, i64 0, i64 0), align 1, !dbg !6726
  %conv = zext i8 %8 to i32, !dbg !6726
  %add = add i32 %7, %conv, !dbg !6727
  %sub = sub i32 %add, 1, !dbg !6728
  %9 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @png_read_start_row.png_pass_ystart, i64 0, i64 0), align 1, !dbg !6729
  %conv3 = zext i8 %9 to i32, !dbg !6729
  %sub4 = sub i32 %sub, %conv3, !dbg !6730
  %10 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @png_read_start_row.png_pass_yinc, i64 0, i64 0), align 1, !dbg !6731
  %conv5 = zext i8 %10 to i32, !dbg !6731
  %div = udiv i32 %sub4, %conv5, !dbg !6732
  %11 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6733
  %num_rows = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %11, i32 0, i32 32, !dbg !6734
  store i32 %div, i32* %num_rows, align 8, !dbg !6735
  br label %if.end, !dbg !6733

if.else:                                          ; preds = %if.then
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6736
  %height6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i32 0, i32 31, !dbg !6737
  %13 = load i32, i32* %height6, align 4, !dbg !6737
  %14 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6738
  %num_rows7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %14, i32 0, i32 32, !dbg !6739
  store i32 %13, i32* %num_rows7, align 8, !dbg !6740
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6741
  %width = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %15, i32 0, i32 30, !dbg !6742
  %16 = load i32, i32* %width, align 8, !dbg !6742
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6743
  %pass = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i32 0, i32 54, !dbg !6744
  %18 = load i8, i8* %pass, align 1, !dbg !6744
  %idxprom = zext i8 %18 to i64, !dbg !6745
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_start_row.png_pass_inc, i64 0, i64 %idxprom, !dbg !6745
  %19 = load i8, i8* %arrayidx, align 1, !dbg !6745
  %conv8 = zext i8 %19 to i32, !dbg !6745
  %add9 = add i32 %16, %conv8, !dbg !6746
  %sub10 = sub i32 %add9, 1, !dbg !6747
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6748
  %pass11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i32 0, i32 54, !dbg !6749
  %21 = load i8, i8* %pass11, align 1, !dbg !6749
  %idxprom12 = zext i8 %21 to i64, !dbg !6750
  %arrayidx13 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_start_row.png_pass_start, i64 0, i64 %idxprom12, !dbg !6750
  %22 = load i8, i8* %arrayidx13, align 1, !dbg !6750
  %conv14 = zext i8 %22 to i32, !dbg !6750
  %sub15 = sub i32 %sub10, %conv14, !dbg !6751
  %23 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6752
  %pass16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %23, i32 0, i32 54, !dbg !6753
  %24 = load i8, i8* %pass16, align 1, !dbg !6753
  %idxprom17 = zext i8 %24 to i64, !dbg !6754
  %arrayidx18 = getelementptr inbounds [7 x i8], [7 x i8]* @png_read_start_row.png_pass_inc, i64 0, i64 %idxprom17, !dbg !6754
  %25 = load i8, i8* %arrayidx18, align 1, !dbg !6754
  %conv19 = zext i8 %25 to i32, !dbg !6754
  %div20 = udiv i32 %sub15, %conv19, !dbg !6755
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6756
  %iwidth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %26, i32 0, i32 35, !dbg !6757
  store i32 %div20, i32* %iwidth, align 8, !dbg !6758
  br label %if.end26, !dbg !6759

if.else21:                                        ; preds = %entry
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6760
  %height22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %27, i32 0, i32 31, !dbg !6762
  %28 = load i32, i32* %height22, align 4, !dbg !6762
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6763
  %num_rows23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %29, i32 0, i32 32, !dbg !6764
  store i32 %28, i32* %num_rows23, align 8, !dbg !6765
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6766
  %width24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i32 0, i32 30, !dbg !6767
  %31 = load i32, i32* %width24, align 8, !dbg !6767
  %32 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6768
  %iwidth25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %32, i32 0, i32 35, !dbg !6769
  store i32 %31, i32* %iwidth25, align 8, !dbg !6770
  br label %if.end26

if.end26:                                         ; preds = %if.else21, %if.end
  %33 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6771
  %pixel_depth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %33, i32 0, i32 59, !dbg !6772
  %34 = load i8, i8* %pixel_depth, align 2, !dbg !6772
  %conv27 = zext i8 %34 to i32, !dbg !6771
  store i32 %conv27, i32* %max_pixel_depth, align 4, !dbg !6773
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6774
  %transformations28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %35, i32 0, i32 15, !dbg !6776
  %36 = load i32, i32* %transformations28, align 4, !dbg !6776
  %and29 = and i32 %36, 4, !dbg !6777
  %tobool30 = icmp ne i32 %and29, 0, !dbg !6777
  br i1 %tobool30, label %land.lhs.true, label %if.end34, !dbg !6778

land.lhs.true:                                    ; preds = %if.end26
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6779
  %bit_depth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %37, i32 0, i32 57, !dbg !6780
  %38 = load i8, i8* %bit_depth, align 8, !dbg !6780
  %conv31 = zext i8 %38 to i32, !dbg !6779
  %cmp = icmp slt i32 %conv31, 8, !dbg !6781
  br i1 %cmp, label %if.then33, label %if.end34, !dbg !6782

if.then33:                                        ; preds = %land.lhs.true
  store i32 8, i32* %max_pixel_depth, align 4, !dbg !6783
  br label %if.end34, !dbg !6784

if.end34:                                         ; preds = %if.then33, %land.lhs.true, %if.end26
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6785
  %transformations35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i32 0, i32 15, !dbg !6787
  %40 = load i32, i32* %transformations35, align 4, !dbg !6787
  %and36 = and i32 %40, 4096, !dbg !6788
  %tobool37 = icmp ne i32 %and36, 0, !dbg !6788
  br i1 %tobool37, label %if.then38, label %if.end76, !dbg !6789

if.then38:                                        ; preds = %if.end34
  %41 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6790
  %color_type = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %41, i32 0, i32 56, !dbg !6793
  %42 = load i8, i8* %color_type, align 1, !dbg !6793
  %conv39 = zext i8 %42 to i32, !dbg !6790
  %cmp40 = icmp eq i32 %conv39, 3, !dbg !6794
  br i1 %cmp40, label %if.then42, label %if.else47, !dbg !6795

if.then42:                                        ; preds = %if.then38
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6796
  %num_trans = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %43, i32 0, i32 50, !dbg !6799
  %44 = load i16, i16* %num_trans, align 8, !dbg !6799
  %tobool43 = icmp ne i16 %44, 0, !dbg !6796
  br i1 %tobool43, label %if.then44, label %if.else45, !dbg !6800

if.then44:                                        ; preds = %if.then42
  store i32 32, i32* %max_pixel_depth, align 4, !dbg !6801
  br label %if.end46, !dbg !6802

if.else45:                                        ; preds = %if.then42
  store i32 24, i32* %max_pixel_depth, align 4, !dbg !6803
  br label %if.end46

if.end46:                                         ; preds = %if.else45, %if.then44
  br label %if.end75, !dbg !6804

if.else47:                                        ; preds = %if.then38
  %45 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6805
  %color_type48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %45, i32 0, i32 56, !dbg !6807
  %46 = load i8, i8* %color_type48, align 1, !dbg !6807
  %conv49 = zext i8 %46 to i32, !dbg !6805
  %cmp50 = icmp eq i32 %conv49, 0, !dbg !6808
  br i1 %cmp50, label %if.then52, label %if.else61, !dbg !6809

if.then52:                                        ; preds = %if.else47
  %47 = load i32, i32* %max_pixel_depth, align 4, !dbg !6810
  %cmp53 = icmp slt i32 %47, 8, !dbg !6813
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !6814

if.then55:                                        ; preds = %if.then52
  store i32 8, i32* %max_pixel_depth, align 4, !dbg !6815
  br label %if.end56, !dbg !6816

if.end56:                                         ; preds = %if.then55, %if.then52
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6817
  %num_trans57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %48, i32 0, i32 50, !dbg !6819
  %49 = load i16, i16* %num_trans57, align 8, !dbg !6819
  %tobool58 = icmp ne i16 %49, 0, !dbg !6817
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !6820

if.then59:                                        ; preds = %if.end56
  %50 = load i32, i32* %max_pixel_depth, align 4, !dbg !6821
  %mul = mul nsw i32 %50, 2, !dbg !6821
  store i32 %mul, i32* %max_pixel_depth, align 4, !dbg !6821
  br label %if.end60, !dbg !6822

if.end60:                                         ; preds = %if.then59, %if.end56
  br label %if.end74, !dbg !6823

if.else61:                                        ; preds = %if.else47
  %51 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6824
  %color_type62 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %51, i32 0, i32 56, !dbg !6826
  %52 = load i8, i8* %color_type62, align 1, !dbg !6826
  %conv63 = zext i8 %52 to i32, !dbg !6824
  %cmp64 = icmp eq i32 %conv63, 2, !dbg !6827
  br i1 %cmp64, label %if.then66, label %if.end73, !dbg !6828

if.then66:                                        ; preds = %if.else61
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6829
  %num_trans67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %53, i32 0, i32 50, !dbg !6832
  %54 = load i16, i16* %num_trans67, align 8, !dbg !6832
  %tobool68 = icmp ne i16 %54, 0, !dbg !6829
  br i1 %tobool68, label %if.then69, label %if.end72, !dbg !6833

if.then69:                                        ; preds = %if.then66
  %55 = load i32, i32* %max_pixel_depth, align 4, !dbg !6834
  %mul70 = mul nsw i32 %55, 4, !dbg !6834
  store i32 %mul70, i32* %max_pixel_depth, align 4, !dbg !6834
  %56 = load i32, i32* %max_pixel_depth, align 4, !dbg !6836
  %div71 = sdiv i32 %56, 3, !dbg !6836
  store i32 %div71, i32* %max_pixel_depth, align 4, !dbg !6836
  br label %if.end72, !dbg !6837

if.end72:                                         ; preds = %if.then69, %if.then66
  br label %if.end73, !dbg !6838

if.end73:                                         ; preds = %if.end72, %if.else61
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.end60
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end46
  br label %if.end76, !dbg !6839

if.end76:                                         ; preds = %if.end75, %if.end34
  %57 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6840
  %transformations77 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %57, i32 0, i32 15, !dbg !6842
  %58 = load i32, i32* %transformations77, align 4, !dbg !6842
  %and78 = and i32 %58, 512, !dbg !6843
  %tobool79 = icmp ne i32 %and78, 0, !dbg !6843
  br i1 %tobool79, label %if.then80, label %if.end96, !dbg !6844

if.then80:                                        ; preds = %if.end76
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6845
  %transformations81 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %59, i32 0, i32 15, !dbg !6848
  %60 = load i32, i32* %transformations81, align 4, !dbg !6848
  %and82 = and i32 %60, 4096, !dbg !6849
  %tobool83 = icmp ne i32 %and82, 0, !dbg !6849
  br i1 %tobool83, label %if.then84, label %if.else92, !dbg !6850

if.then84:                                        ; preds = %if.then80
  %61 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6851
  %bit_depth85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %61, i32 0, i32 57, !dbg !6854
  %62 = load i8, i8* %bit_depth85, align 8, !dbg !6854
  %conv86 = zext i8 %62 to i32, !dbg !6851
  %cmp87 = icmp slt i32 %conv86, 16, !dbg !6855
  br i1 %cmp87, label %if.then89, label %if.end91, !dbg !6856

if.then89:                                        ; preds = %if.then84
  %63 = load i32, i32* %max_pixel_depth, align 4, !dbg !6857
  %mul90 = mul nsw i32 %63, 2, !dbg !6857
  store i32 %mul90, i32* %max_pixel_depth, align 4, !dbg !6857
  br label %if.end91, !dbg !6858

if.end91:                                         ; preds = %if.then89, %if.then84
  br label %if.end95, !dbg !6859

if.else92:                                        ; preds = %if.then80
  %64 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6860
  %transformations93 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %64, i32 0, i32 15, !dbg !6861
  %65 = load i32, i32* %transformations93, align 4, !dbg !6862
  %and94 = and i32 %65, -513, !dbg !6862
  store i32 %and94, i32* %transformations93, align 4, !dbg !6862
  br label %if.end95

if.end95:                                         ; preds = %if.else92, %if.end91
  br label %if.end96, !dbg !6863

if.end96:                                         ; preds = %if.end95, %if.end76
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6864
  %transformations97 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %66, i32 0, i32 15, !dbg !6866
  %67 = load i32, i32* %transformations97, align 4, !dbg !6866
  %and98 = and i32 %67, 32768, !dbg !6867
  %tobool99 = icmp ne i32 %and98, 0, !dbg !6867
  br i1 %tobool99, label %if.then100, label %if.end128, !dbg !6868

if.then100:                                       ; preds = %if.end96
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6869
  %color_type101 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %68, i32 0, i32 56, !dbg !6872
  %69 = load i8, i8* %color_type101, align 1, !dbg !6872
  %conv102 = zext i8 %69 to i32, !dbg !6869
  %cmp103 = icmp eq i32 %conv102, 0, !dbg !6873
  br i1 %cmp103, label %if.then105, label %if.else111, !dbg !6874

if.then105:                                       ; preds = %if.then100
  %70 = load i32, i32* %max_pixel_depth, align 4, !dbg !6875
  %cmp106 = icmp sle i32 %70, 8, !dbg !6878
  br i1 %cmp106, label %if.then108, label %if.else109, !dbg !6879

if.then108:                                       ; preds = %if.then105
  store i32 16, i32* %max_pixel_depth, align 4, !dbg !6880
  br label %if.end110, !dbg !6881

if.else109:                                       ; preds = %if.then105
  store i32 32, i32* %max_pixel_depth, align 4, !dbg !6882
  br label %if.end110

if.end110:                                        ; preds = %if.else109, %if.then108
  br label %if.end127, !dbg !6883

if.else111:                                       ; preds = %if.then100
  %71 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6884
  %color_type112 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %71, i32 0, i32 56, !dbg !6886
  %72 = load i8, i8* %color_type112, align 1, !dbg !6886
  %conv113 = zext i8 %72 to i32, !dbg !6884
  %cmp114 = icmp eq i32 %conv113, 2, !dbg !6887
  br i1 %cmp114, label %if.then120, label %lor.lhs.false, !dbg !6888

lor.lhs.false:                                    ; preds = %if.else111
  %73 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6889
  %color_type116 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %73, i32 0, i32 56, !dbg !6890
  %74 = load i8, i8* %color_type116, align 1, !dbg !6890
  %conv117 = zext i8 %74 to i32, !dbg !6889
  %cmp118 = icmp eq i32 %conv117, 3, !dbg !6891
  br i1 %cmp118, label %if.then120, label %if.end126, !dbg !6892

if.then120:                                       ; preds = %lor.lhs.false, %if.else111
  %75 = load i32, i32* %max_pixel_depth, align 4, !dbg !6893
  %cmp121 = icmp sle i32 %75, 32, !dbg !6896
  br i1 %cmp121, label %if.then123, label %if.else124, !dbg !6897

if.then123:                                       ; preds = %if.then120
  store i32 32, i32* %max_pixel_depth, align 4, !dbg !6898
  br label %if.end125, !dbg !6899

if.else124:                                       ; preds = %if.then120
  store i32 64, i32* %max_pixel_depth, align 4, !dbg !6900
  br label %if.end125

if.end125:                                        ; preds = %if.else124, %if.then123
  br label %if.end126, !dbg !6901

if.end126:                                        ; preds = %if.end125, %lor.lhs.false
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.end110
  br label %if.end128, !dbg !6902

if.end128:                                        ; preds = %if.end127, %if.end96
  %76 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6903
  %transformations129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %76, i32 0, i32 15, !dbg !6905
  %77 = load i32, i32* %transformations129, align 4, !dbg !6905
  %and130 = and i32 %77, 16384, !dbg !6906
  %tobool131 = icmp ne i32 %and130, 0, !dbg !6906
  br i1 %tobool131, label %if.then132, label %if.end176, !dbg !6907

if.then132:                                       ; preds = %if.end128
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6908
  %num_trans133 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %78, i32 0, i32 50, !dbg !6911
  %79 = load i16, i16* %num_trans133, align 8, !dbg !6911
  %conv134 = zext i16 %79 to i32, !dbg !6908
  %tobool135 = icmp ne i32 %conv134, 0, !dbg !6908
  br i1 %tobool135, label %land.lhs.true136, label %lor.lhs.false140, !dbg !6912

land.lhs.true136:                                 ; preds = %if.then132
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6913
  %transformations137 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %80, i32 0, i32 15, !dbg !6914
  %81 = load i32, i32* %transformations137, align 4, !dbg !6914
  %and138 = and i32 %81, 4096, !dbg !6915
  %tobool139 = icmp ne i32 %and138, 0, !dbg !6915
  br i1 %tobool139, label %if.then149, label %lor.lhs.false140, !dbg !6916

lor.lhs.false140:                                 ; preds = %land.lhs.true136, %if.then132
  %82 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6917
  %transformations141 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %82, i32 0, i32 15, !dbg !6918
  %83 = load i32, i32* %transformations141, align 4, !dbg !6918
  %and142 = and i32 %83, 32768, !dbg !6919
  %tobool143 = icmp ne i32 %and142, 0, !dbg !6919
  br i1 %tobool143, label %if.then149, label %lor.lhs.false144, !dbg !6920

lor.lhs.false144:                                 ; preds = %lor.lhs.false140
  %84 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6921
  %color_type145 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %84, i32 0, i32 56, !dbg !6922
  %85 = load i8, i8* %color_type145, align 1, !dbg !6922
  %conv146 = zext i8 %85 to i32, !dbg !6921
  %cmp147 = icmp eq i32 %conv146, 4, !dbg !6923
  br i1 %cmp147, label %if.then149, label %if.else155, !dbg !6924

if.then149:                                       ; preds = %lor.lhs.false144, %lor.lhs.false140, %land.lhs.true136
  %86 = load i32, i32* %max_pixel_depth, align 4, !dbg !6925
  %cmp150 = icmp sle i32 %86, 16, !dbg !6928
  br i1 %cmp150, label %if.then152, label %if.else153, !dbg !6929

if.then152:                                       ; preds = %if.then149
  store i32 32, i32* %max_pixel_depth, align 4, !dbg !6930
  br label %if.end154, !dbg !6931

if.else153:                                       ; preds = %if.then149
  store i32 64, i32* %max_pixel_depth, align 4, !dbg !6932
  br label %if.end154

if.end154:                                        ; preds = %if.else153, %if.then152
  br label %if.end175, !dbg !6933

if.else155:                                       ; preds = %lor.lhs.false144
  %87 = load i32, i32* %max_pixel_depth, align 4, !dbg !6934
  %cmp156 = icmp sle i32 %87, 8, !dbg !6937
  br i1 %cmp156, label %if.then158, label %if.else166, !dbg !6938

if.then158:                                       ; preds = %if.else155
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6939
  %color_type159 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %88, i32 0, i32 56, !dbg !6942
  %89 = load i8, i8* %color_type159, align 1, !dbg !6942
  %conv160 = zext i8 %89 to i32, !dbg !6939
  %cmp161 = icmp eq i32 %conv160, 6, !dbg !6943
  br i1 %cmp161, label %if.then163, label %if.else164, !dbg !6944

if.then163:                                       ; preds = %if.then158
  store i32 32, i32* %max_pixel_depth, align 4, !dbg !6945
  br label %if.end165, !dbg !6946

if.else164:                                       ; preds = %if.then158
  store i32 24, i32* %max_pixel_depth, align 4, !dbg !6947
  br label %if.end165

if.end165:                                        ; preds = %if.else164, %if.then163
  br label %if.end174, !dbg !6948

if.else166:                                       ; preds = %if.else155
  %90 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6949
  %color_type167 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %90, i32 0, i32 56, !dbg !6951
  %91 = load i8, i8* %color_type167, align 1, !dbg !6951
  %conv168 = zext i8 %91 to i32, !dbg !6949
  %cmp169 = icmp eq i32 %conv168, 6, !dbg !6952
  br i1 %cmp169, label %if.then171, label %if.else172, !dbg !6953

if.then171:                                       ; preds = %if.else166
  store i32 64, i32* %max_pixel_depth, align 4, !dbg !6954
  br label %if.end173, !dbg !6955

if.else172:                                       ; preds = %if.else166
  store i32 48, i32* %max_pixel_depth, align 4, !dbg !6956
  br label %if.end173

if.end173:                                        ; preds = %if.else172, %if.then171
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.end165
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.end154
  br label %if.end176, !dbg !6957

if.end176:                                        ; preds = %if.end175, %if.end128
  %92 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6958
  %transformations177 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %92, i32 0, i32 15, !dbg !6960
  %93 = load i32, i32* %transformations177, align 4, !dbg !6960
  %and178 = and i32 %93, 1048576, !dbg !6961
  %tobool179 = icmp ne i32 %and178, 0, !dbg !6961
  br i1 %tobool179, label %if.then180, label %if.end188, !dbg !6962

if.then180:                                       ; preds = %if.end176
  call void @llvm.dbg.declare(metadata i32* %user_pixel_depth, metadata !6963, metadata !DIExpression()), !dbg !6965
  %94 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6966
  %user_transform_depth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %94, i32 0, i32 11, !dbg !6967
  %95 = load i8, i8* %user_transform_depth, align 8, !dbg !6967
  %conv181 = zext i8 %95 to i32, !dbg !6966
  %96 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6968
  %user_transform_channels = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %96, i32 0, i32 12, !dbg !6969
  %97 = load i8, i8* %user_transform_channels, align 1, !dbg !6969
  %conv182 = zext i8 %97 to i32, !dbg !6968
  %mul183 = mul nsw i32 %conv181, %conv182, !dbg !6970
  store i32 %mul183, i32* %user_pixel_depth, align 4, !dbg !6965
  %98 = load i32, i32* %user_pixel_depth, align 4, !dbg !6971
  %99 = load i32, i32* %max_pixel_depth, align 4, !dbg !6973
  %cmp184 = icmp sgt i32 %98, %99, !dbg !6974
  br i1 %cmp184, label %if.then186, label %if.end187, !dbg !6975

if.then186:                                       ; preds = %if.then180
  %100 = load i32, i32* %user_pixel_depth, align 4, !dbg !6976
  store i32 %100, i32* %max_pixel_depth, align 4, !dbg !6977
  br label %if.end187, !dbg !6978

if.end187:                                        ; preds = %if.then186, %if.then180
  br label %if.end188, !dbg !6979

if.end188:                                        ; preds = %if.end187, %if.end176
  %101 = load i32, i32* %max_pixel_depth, align 4, !dbg !6980
  %conv189 = trunc i32 %101 to i8, !dbg !6981
  %102 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6982
  %maximum_pixel_depth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %102, i32 0, i32 63, !dbg !6983
  store i8 %conv189, i8* %maximum_pixel_depth, align 2, !dbg !6984
  %103 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6985
  %transformed_pixel_depth = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %103, i32 0, i32 64, !dbg !6986
  store i8 0, i8* %transformed_pixel_depth, align 1, !dbg !6987
  %104 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !6988
  %width190 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %104, i32 0, i32 30, !dbg !6989
  %105 = load i32, i32* %width190, align 8, !dbg !6989
  %add191 = add i32 %105, 7, !dbg !6990
  %and192 = and i32 %add191, -8, !dbg !6991
  %conv193 = zext i32 %and192 to i64, !dbg !6992
  store i64 %conv193, i64* %row_bytes, align 8, !dbg !6993
  %106 = load i32, i32* %max_pixel_depth, align 4, !dbg !6994
  %cmp194 = icmp sge i32 %106, 8, !dbg !6994
  br i1 %cmp194, label %cond.true, label %cond.false, !dbg !6994

cond.true:                                        ; preds = %if.end188
  %107 = load i64, i64* %row_bytes, align 8, !dbg !6994
  %108 = load i32, i32* %max_pixel_depth, align 4, !dbg !6994
  %conv196 = sext i32 %108 to i64, !dbg !6994
  %shr = lshr i64 %conv196, 3, !dbg !6994
  %mul197 = mul i64 %107, %shr, !dbg !6994
  br label %cond.end, !dbg !6994

cond.false:                                       ; preds = %if.end188
  %109 = load i64, i64* %row_bytes, align 8, !dbg !6994
  %110 = load i32, i32* %max_pixel_depth, align 4, !dbg !6994
  %conv198 = sext i32 %110 to i64, !dbg !6994
  %mul199 = mul i64 %109, %conv198, !dbg !6994
  %add200 = add i64 %mul199, 7, !dbg !6994
  %shr201 = lshr i64 %add200, 3, !dbg !6994
  br label %cond.end, !dbg !6994

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %mul197, %cond.true ], [ %shr201, %cond.false ], !dbg !6994
  %add202 = add i64 %cond, 1, !dbg !6995
  %111 = load i32, i32* %max_pixel_depth, align 4, !dbg !6996
  %add203 = add nsw i32 %111, 7, !dbg !6997
  %shr204 = ashr i32 %add203, 3, !dbg !6998
  %conv205 = sext i32 %shr204 to i64, !dbg !6999
  %add206 = add i64 %add202, %conv205, !dbg !7000
  store i64 %add206, i64* %row_bytes, align 8, !dbg !7001
  %112 = load i64, i64* %row_bytes, align 8, !dbg !7002
  %add207 = add i64 %112, 48, !dbg !7004
  %113 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7005
  %old_big_row_buf_size = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %113, i32 0, i32 140, !dbg !7006
  %114 = load i64, i64* %old_big_row_buf_size, align 8, !dbg !7006
  %cmp208 = icmp ugt i64 %add207, %114, !dbg !7007
  br i1 %cmp208, label %if.then210, label %if.end229, !dbg !7008

if.then210:                                       ; preds = %cond.end
  %115 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7009
  %116 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7011
  %big_row_buf = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %116, i32 0, i32 130, !dbg !7012
  %117 = load i8*, i8** %big_row_buf, align 8, !dbg !7012
  call void @png_free(%struct.png_struct_def* %115, i8* %117), !dbg !7013
  %118 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7014
  %119 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7015
  %big_prev_row = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %119, i32 0, i32 143, !dbg !7016
  %120 = load i8*, i8** %big_prev_row, align 8, !dbg !7016
  call void @png_free(%struct.png_struct_def* %118, i8* %120), !dbg !7017
  %121 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7018
  %interlaced211 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %121, i32 0, i32 53, !dbg !7020
  %122 = load i8, i8* %interlaced211, align 4, !dbg !7020
  %tobool212 = icmp ne i8 %122, 0, !dbg !7018
  br i1 %tobool212, label %if.then213, label %if.else216, !dbg !7021

if.then213:                                       ; preds = %if.then210
  %123 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7022
  %124 = load i64, i64* %row_bytes, align 8, !dbg !7023
  %add214 = add i64 %124, 48, !dbg !7024
  %call = call noalias i8* @png_calloc(%struct.png_struct_def* %123, i64 %add214), !dbg !7025
  %125 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7026
  %big_row_buf215 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %125, i32 0, i32 130, !dbg !7027
  store i8* %call, i8** %big_row_buf215, align 8, !dbg !7028
  br label %if.end220, !dbg !7026

if.else216:                                       ; preds = %if.then210
  %126 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7029
  %127 = load i64, i64* %row_bytes, align 8, !dbg !7030
  %add217 = add i64 %127, 48, !dbg !7031
  %call218 = call noalias i8* @png_malloc(%struct.png_struct_def* %126, i64 %add217), !dbg !7032
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7033
  %big_row_buf219 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %128, i32 0, i32 130, !dbg !7034
  store i8* %call218, i8** %big_row_buf219, align 8, !dbg !7035
  br label %if.end220

if.end220:                                        ; preds = %if.else216, %if.then213
  %129 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7036
  %130 = load i64, i64* %row_bytes, align 8, !dbg !7037
  %add221 = add i64 %130, 48, !dbg !7038
  %call222 = call noalias i8* @png_malloc(%struct.png_struct_def* %129, i64 %add221), !dbg !7039
  %131 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7040
  %big_prev_row223 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %131, i32 0, i32 143, !dbg !7041
  store i8* %call222, i8** %big_prev_row223, align 8, !dbg !7042
  %132 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7043
  %big_row_buf224 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %132, i32 0, i32 130, !dbg !7044
  %133 = load i8*, i8** %big_row_buf224, align 8, !dbg !7044
  %add.ptr = getelementptr inbounds i8, i8* %133, i64 31, !dbg !7045
  %134 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7046
  %row_buf = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %134, i32 0, i32 39, !dbg !7047
  store i8* %add.ptr, i8** %row_buf, align 8, !dbg !7048
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7049
  %big_prev_row225 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %135, i32 0, i32 143, !dbg !7050
  %136 = load i8*, i8** %big_prev_row225, align 8, !dbg !7050
  %add.ptr226 = getelementptr inbounds i8, i8* %136, i64 31, !dbg !7051
  %137 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7052
  %prev_row = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %137, i32 0, i32 38, !dbg !7053
  store i8* %add.ptr226, i8** %prev_row, align 8, !dbg !7054
  %138 = load i64, i64* %row_bytes, align 8, !dbg !7055
  %add227 = add i64 %138, 48, !dbg !7056
  %139 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7057
  %old_big_row_buf_size228 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %139, i32 0, i32 140, !dbg !7058
  store i64 %add227, i64* %old_big_row_buf_size228, align 8, !dbg !7059
  br label %if.end229, !dbg !7060

if.end229:                                        ; preds = %if.end220, %cond.end
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7061
  %rowbytes = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %140, i32 0, i32 34, !dbg !7063
  %141 = load i64, i64* %rowbytes, align 8, !dbg !7063
  %cmp230 = icmp ugt i64 %141, -2, !dbg !7064
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !7065

if.then232:                                       ; preds = %if.end229
  %142 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7066
  call void @png_error(%struct.png_struct_def* %142, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.142, i64 0, i64 0)) #6, !dbg !7067
  unreachable, !dbg !7067

if.end233:                                        ; preds = %if.end229
  %143 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7068
  %prev_row234 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %143, i32 0, i32 38, !dbg !7069
  %144 = load i8*, i8** %prev_row234, align 8, !dbg !7069
  %145 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7070
  %rowbytes235 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %145, i32 0, i32 34, !dbg !7071
  %146 = load i64, i64* %rowbytes235, align 8, !dbg !7071
  %add236 = add i64 %146, 1, !dbg !7072
  call void @llvm.memset.p0i8.i64(i8* align 1 %144, i8 0, i64 %add236, i1 false), !dbg !7073
  %147 = load %struct.png_struct_def*, %struct.png_struct_def** %png_ptr.addr, align 8, !dbg !7074
  %flags = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %147, i32 0, i32 14, !dbg !7075
  %148 = load i32, i32* %flags, align 8, !dbg !7076
  %or = or i32 %148, 64, !dbg !7076
  store i32 %or, i32* %flags, align 8, !dbg !7076
  ret void, !dbg !7077
}

declare dso_local void @png_init_read_transformations(%struct.png_struct_def*) #3

declare dso_local noalias i8* @png_calloc(%struct.png_struct_def*, i64) #3

; Function Attrs: noinline nounwind uwtable
define internal void @png_read_filter_row_sub(%struct.png_row_info_struct* %row_info, i8* %row, i8* %prev_row) #0 !dbg !7078 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %prev_row.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  %istop = alloca i64, align 8
  %bpp = alloca i32, align 4
  %rp = alloca i8*, align 8
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !7079, metadata !DIExpression()), !dbg !7080
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !7081, metadata !DIExpression()), !dbg !7082
  store i8* %prev_row, i8** %prev_row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prev_row.addr, metadata !7083, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7085, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.declare(metadata i64* %istop, metadata !7087, metadata !DIExpression()), !dbg !7088
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !7089
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 1, !dbg !7090
  %1 = load i64, i64* %rowbytes, align 8, !dbg !7090
  store i64 %1, i64* %istop, align 8, !dbg !7088
  call void @llvm.dbg.declare(metadata i32* %bpp, metadata !7091, metadata !DIExpression()), !dbg !7092
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !7093
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 5, !dbg !7094
  %3 = load i8, i8* %pixel_depth, align 1, !dbg !7094
  %conv = zext i8 %3 to i32, !dbg !7093
  %add = add nsw i32 %conv, 7, !dbg !7095
  %shr = ashr i32 %add, 3, !dbg !7096
  store i32 %shr, i32* %bpp, align 4, !dbg !7092
  call void @llvm.dbg.declare(metadata i8** %rp, metadata !7097, metadata !DIExpression()), !dbg !7098
  %4 = load i8*, i8** %row.addr, align 8, !dbg !7099
  %5 = load i32, i32* %bpp, align 4, !dbg !7100
  %idx.ext = zext i32 %5 to i64, !dbg !7101
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext, !dbg !7101
  store i8* %add.ptr, i8** %rp, align 8, !dbg !7098
  %6 = load i8*, i8** %prev_row.addr, align 8, !dbg !7102
  %7 = load i32, i32* %bpp, align 4, !dbg !7103
  %conv1 = zext i32 %7 to i64, !dbg !7103
  store i64 %conv1, i64* %i, align 8, !dbg !7105
  br label %for.cond, !dbg !7106

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i64, i64* %i, align 8, !dbg !7107
  %9 = load i64, i64* %istop, align 8, !dbg !7109
  %cmp = icmp ult i64 %8, %9, !dbg !7110
  br i1 %cmp, label %for.body, label %for.end, !dbg !7111

for.body:                                         ; preds = %for.cond
  %10 = load i8*, i8** %rp, align 8, !dbg !7112
  %11 = load i8, i8* %10, align 1, !dbg !7114
  %conv3 = zext i8 %11 to i32, !dbg !7115
  %12 = load i8*, i8** %rp, align 8, !dbg !7116
  %13 = load i32, i32* %bpp, align 4, !dbg !7117
  %idx.ext4 = zext i32 %13 to i64, !dbg !7118
  %idx.neg = sub i64 0, %idx.ext4, !dbg !7118
  %add.ptr5 = getelementptr inbounds i8, i8* %12, i64 %idx.neg, !dbg !7118
  %14 = load i8, i8* %add.ptr5, align 1, !dbg !7119
  %conv6 = zext i8 %14 to i32, !dbg !7120
  %add7 = add nsw i32 %conv3, %conv6, !dbg !7121
  %and = and i32 %add7, 255, !dbg !7122
  %conv8 = trunc i32 %and to i8, !dbg !7123
  %15 = load i8*, i8** %rp, align 8, !dbg !7124
  store i8 %conv8, i8* %15, align 1, !dbg !7125
  %16 = load i8*, i8** %rp, align 8, !dbg !7126
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 1, !dbg !7126
  store i8* %incdec.ptr, i8** %rp, align 8, !dbg !7126
  br label %for.inc, !dbg !7127

for.inc:                                          ; preds = %for.body
  %17 = load i64, i64* %i, align 8, !dbg !7128
  %inc = add i64 %17, 1, !dbg !7128
  store i64 %inc, i64* %i, align 8, !dbg !7128
  br label %for.cond, !dbg !7129, !llvm.loop !7130

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7132
}

; Function Attrs: noinline nounwind uwtable
define internal void @png_read_filter_row_up(%struct.png_row_info_struct* %row_info, i8* %row, i8* %prev_row) #0 !dbg !7133 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %prev_row.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  %istop = alloca i64, align 8
  %rp = alloca i8*, align 8
  %pp = alloca i8*, align 8
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !7134, metadata !DIExpression()), !dbg !7135
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !7136, metadata !DIExpression()), !dbg !7137
  store i8* %prev_row, i8** %prev_row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prev_row.addr, metadata !7138, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7140, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.declare(metadata i64* %istop, metadata !7142, metadata !DIExpression()), !dbg !7143
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !7144
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 1, !dbg !7145
  %1 = load i64, i64* %rowbytes, align 8, !dbg !7145
  store i64 %1, i64* %istop, align 8, !dbg !7143
  call void @llvm.dbg.declare(metadata i8** %rp, metadata !7146, metadata !DIExpression()), !dbg !7147
  %2 = load i8*, i8** %row.addr, align 8, !dbg !7148
  store i8* %2, i8** %rp, align 8, !dbg !7147
  call void @llvm.dbg.declare(metadata i8** %pp, metadata !7149, metadata !DIExpression()), !dbg !7150
  %3 = load i8*, i8** %prev_row.addr, align 8, !dbg !7151
  store i8* %3, i8** %pp, align 8, !dbg !7150
  store i64 0, i64* %i, align 8, !dbg !7152
  br label %for.cond, !dbg !7154

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i64, i64* %i, align 8, !dbg !7155
  %5 = load i64, i64* %istop, align 8, !dbg !7157
  %cmp = icmp ult i64 %4, %5, !dbg !7158
  br i1 %cmp, label %for.body, label %for.end, !dbg !7159

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %rp, align 8, !dbg !7160
  %7 = load i8, i8* %6, align 1, !dbg !7162
  %conv = zext i8 %7 to i32, !dbg !7163
  %8 = load i8*, i8** %pp, align 8, !dbg !7164
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7164
  store i8* %incdec.ptr, i8** %pp, align 8, !dbg !7164
  %9 = load i8, i8* %8, align 1, !dbg !7165
  %conv1 = zext i8 %9 to i32, !dbg !7166
  %add = add nsw i32 %conv, %conv1, !dbg !7167
  %and = and i32 %add, 255, !dbg !7168
  %conv2 = trunc i32 %and to i8, !dbg !7169
  %10 = load i8*, i8** %rp, align 8, !dbg !7170
  store i8 %conv2, i8* %10, align 1, !dbg !7171
  %11 = load i8*, i8** %rp, align 8, !dbg !7172
  %incdec.ptr3 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !7172
  store i8* %incdec.ptr3, i8** %rp, align 8, !dbg !7172
  br label %for.inc, !dbg !7173

for.inc:                                          ; preds = %for.body
  %12 = load i64, i64* %i, align 8, !dbg !7174
  %inc = add i64 %12, 1, !dbg !7174
  store i64 %inc, i64* %i, align 8, !dbg !7174
  br label %for.cond, !dbg !7175, !llvm.loop !7176

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7178
}

; Function Attrs: noinline nounwind uwtable
define internal void @png_read_filter_row_avg(%struct.png_row_info_struct* %row_info, i8* %row, i8* %prev_row) #0 !dbg !7179 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %prev_row.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  %rp = alloca i8*, align 8
  %pp = alloca i8*, align 8
  %bpp = alloca i32, align 4
  %istop = alloca i64, align 8
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !7180, metadata !DIExpression()), !dbg !7181
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !7182, metadata !DIExpression()), !dbg !7183
  store i8* %prev_row, i8** %prev_row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prev_row.addr, metadata !7184, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7186, metadata !DIExpression()), !dbg !7187
  call void @llvm.dbg.declare(metadata i8** %rp, metadata !7188, metadata !DIExpression()), !dbg !7189
  %0 = load i8*, i8** %row.addr, align 8, !dbg !7190
  store i8* %0, i8** %rp, align 8, !dbg !7189
  call void @llvm.dbg.declare(metadata i8** %pp, metadata !7191, metadata !DIExpression()), !dbg !7192
  %1 = load i8*, i8** %prev_row.addr, align 8, !dbg !7193
  store i8* %1, i8** %pp, align 8, !dbg !7192
  call void @llvm.dbg.declare(metadata i32* %bpp, metadata !7194, metadata !DIExpression()), !dbg !7195
  %2 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !7196
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i32 0, i32 5, !dbg !7197
  %3 = load i8, i8* %pixel_depth, align 1, !dbg !7197
  %conv = zext i8 %3 to i32, !dbg !7196
  %add = add nsw i32 %conv, 7, !dbg !7198
  %shr = ashr i32 %add, 3, !dbg !7199
  store i32 %shr, i32* %bpp, align 4, !dbg !7195
  call void @llvm.dbg.declare(metadata i64* %istop, metadata !7200, metadata !DIExpression()), !dbg !7201
  %4 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !7202
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i32 0, i32 1, !dbg !7203
  %5 = load i64, i64* %rowbytes, align 8, !dbg !7203
  %6 = load i32, i32* %bpp, align 4, !dbg !7204
  %conv1 = zext i32 %6 to i64, !dbg !7204
  %sub = sub i64 %5, %conv1, !dbg !7205
  store i64 %sub, i64* %istop, align 8, !dbg !7201
  store i64 0, i64* %i, align 8, !dbg !7206
  br label %for.cond, !dbg !7208

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i64, i64* %i, align 8, !dbg !7209
  %8 = load i32, i32* %bpp, align 4, !dbg !7211
  %conv2 = zext i32 %8 to i64, !dbg !7211
  %cmp = icmp ult i64 %7, %conv2, !dbg !7212
  br i1 %cmp, label %for.body, label %for.end, !dbg !7213

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %rp, align 8, !dbg !7214
  %10 = load i8, i8* %9, align 1, !dbg !7216
  %conv4 = zext i8 %10 to i32, !dbg !7217
  %11 = load i8*, i8** %pp, align 8, !dbg !7218
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !7218
  store i8* %incdec.ptr, i8** %pp, align 8, !dbg !7218
  %12 = load i8, i8* %11, align 1, !dbg !7219
  %conv5 = zext i8 %12 to i32, !dbg !7220
  %div = sdiv i32 %conv5, 2, !dbg !7221
  %add6 = add nsw i32 %conv4, %div, !dbg !7222
  %and = and i32 %add6, 255, !dbg !7223
  %conv7 = trunc i32 %and to i8, !dbg !7224
  %13 = load i8*, i8** %rp, align 8, !dbg !7225
  store i8 %conv7, i8* %13, align 1, !dbg !7226
  %14 = load i8*, i8** %rp, align 8, !dbg !7227
  %incdec.ptr8 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7227
  store i8* %incdec.ptr8, i8** %rp, align 8, !dbg !7227
  br label %for.inc, !dbg !7228

for.inc:                                          ; preds = %for.body
  %15 = load i64, i64* %i, align 8, !dbg !7229
  %inc = add i64 %15, 1, !dbg !7229
  store i64 %inc, i64* %i, align 8, !dbg !7229
  br label %for.cond, !dbg !7230, !llvm.loop !7231

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !7233
  br label %for.cond9, !dbg !7235

for.cond9:                                        ; preds = %for.inc23, %for.end
  %16 = load i64, i64* %i, align 8, !dbg !7236
  %17 = load i64, i64* %istop, align 8, !dbg !7238
  %cmp10 = icmp ult i64 %16, %17, !dbg !7239
  br i1 %cmp10, label %for.body12, label %for.end25, !dbg !7240

for.body12:                                       ; preds = %for.cond9
  %18 = load i8*, i8** %rp, align 8, !dbg !7241
  %19 = load i8, i8* %18, align 1, !dbg !7243
  %conv13 = zext i8 %19 to i32, !dbg !7244
  %20 = load i8*, i8** %pp, align 8, !dbg !7245
  %incdec.ptr14 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !7245
  store i8* %incdec.ptr14, i8** %pp, align 8, !dbg !7245
  %21 = load i8, i8* %20, align 1, !dbg !7246
  %conv15 = zext i8 %21 to i32, !dbg !7246
  %22 = load i8*, i8** %rp, align 8, !dbg !7247
  %23 = load i32, i32* %bpp, align 4, !dbg !7248
  %idx.ext = zext i32 %23 to i64, !dbg !7249
  %idx.neg = sub i64 0, %idx.ext, !dbg !7249
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 %idx.neg, !dbg !7249
  %24 = load i8, i8* %add.ptr, align 1, !dbg !7250
  %conv16 = zext i8 %24 to i32, !dbg !7250
  %add17 = add nsw i32 %conv15, %conv16, !dbg !7251
  %div18 = sdiv i32 %add17, 2, !dbg !7252
  %add19 = add nsw i32 %conv13, %div18, !dbg !7253
  %and20 = and i32 %add19, 255, !dbg !7254
  %conv21 = trunc i32 %and20 to i8, !dbg !7255
  %25 = load i8*, i8** %rp, align 8, !dbg !7256
  store i8 %conv21, i8* %25, align 1, !dbg !7257
  %26 = load i8*, i8** %rp, align 8, !dbg !7258
  %incdec.ptr22 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !7258
  store i8* %incdec.ptr22, i8** %rp, align 8, !dbg !7258
  br label %for.inc23, !dbg !7259

for.inc23:                                        ; preds = %for.body12
  %27 = load i64, i64* %i, align 8, !dbg !7260
  %inc24 = add i64 %27, 1, !dbg !7260
  store i64 %inc24, i64* %i, align 8, !dbg !7260
  br label %for.cond9, !dbg !7261, !llvm.loop !7262

for.end25:                                        ; preds = %for.cond9
  ret void, !dbg !7264
}

; Function Attrs: noinline nounwind uwtable
define internal void @png_read_filter_row_paeth_1byte_pixel(%struct.png_row_info_struct* %row_info, i8* %row, i8* %prev_row) #0 !dbg !7265 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %prev_row.addr = alloca i8*, align 8
  %rp_end = alloca i8*, align 8
  %a = alloca i32, align 4
  %c = alloca i32, align 4
  %b = alloca i32, align 4
  %pa = alloca i32, align 4
  %pb = alloca i32, align 4
  %pc = alloca i32, align 4
  %p = alloca i32, align 4
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !7266, metadata !DIExpression()), !dbg !7267
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !7268, metadata !DIExpression()), !dbg !7269
  store i8* %prev_row, i8** %prev_row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prev_row.addr, metadata !7270, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.declare(metadata i8** %rp_end, metadata !7272, metadata !DIExpression()), !dbg !7273
  %0 = load i8*, i8** %row.addr, align 8, !dbg !7274
  %1 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !7275
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i32 0, i32 1, !dbg !7276
  %2 = load i64, i64* %rowbytes, align 8, !dbg !7276
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %2, !dbg !7277
  store i8* %add.ptr, i8** %rp_end, align 8, !dbg !7273
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7278, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7280, metadata !DIExpression()), !dbg !7281
  %3 = load i8*, i8** %prev_row.addr, align 8, !dbg !7282
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !7282
  store i8* %incdec.ptr, i8** %prev_row.addr, align 8, !dbg !7282
  %4 = load i8, i8* %3, align 1, !dbg !7283
  %conv = zext i8 %4 to i32, !dbg !7283
  store i32 %conv, i32* %c, align 4, !dbg !7284
  %5 = load i8*, i8** %row.addr, align 8, !dbg !7285
  %6 = load i8, i8* %5, align 1, !dbg !7286
  %conv1 = zext i8 %6 to i32, !dbg !7286
  %7 = load i32, i32* %c, align 4, !dbg !7287
  %add = add nsw i32 %conv1, %7, !dbg !7288
  store i32 %add, i32* %a, align 4, !dbg !7289
  %8 = load i32, i32* %a, align 4, !dbg !7290
  %conv2 = trunc i32 %8 to i8, !dbg !7291
  %9 = load i8*, i8** %row.addr, align 8, !dbg !7292
  %incdec.ptr3 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7292
  store i8* %incdec.ptr3, i8** %row.addr, align 8, !dbg !7292
  store i8 %conv2, i8* %9, align 1, !dbg !7293
  br label %while.cond, !dbg !7294

while.cond:                                       ; preds = %if.end33, %entry
  %10 = load i8*, i8** %row.addr, align 8, !dbg !7295
  %11 = load i8*, i8** %rp_end, align 8, !dbg !7296
  %cmp = icmp ult i8* %10, %11, !dbg !7297
  br i1 %cmp, label %while.body, label %while.end, !dbg !7294

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %b, metadata !7298, metadata !DIExpression()), !dbg !7300
  call void @llvm.dbg.declare(metadata i32* %pa, metadata !7301, metadata !DIExpression()), !dbg !7302
  call void @llvm.dbg.declare(metadata i32* %pb, metadata !7303, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.declare(metadata i32* %pc, metadata !7305, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.declare(metadata i32* %p, metadata !7307, metadata !DIExpression()), !dbg !7308
  %12 = load i32, i32* %a, align 4, !dbg !7309
  %and = and i32 %12, 255, !dbg !7309
  store i32 %and, i32* %a, align 4, !dbg !7309
  %13 = load i8*, i8** %prev_row.addr, align 8, !dbg !7310
  %incdec.ptr5 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7310
  store i8* %incdec.ptr5, i8** %prev_row.addr, align 8, !dbg !7310
  %14 = load i8, i8* %13, align 1, !dbg !7311
  %conv6 = zext i8 %14 to i32, !dbg !7311
  store i32 %conv6, i32* %b, align 4, !dbg !7312
  %15 = load i32, i32* %b, align 4, !dbg !7313
  %16 = load i32, i32* %c, align 4, !dbg !7314
  %sub = sub nsw i32 %15, %16, !dbg !7315
  store i32 %sub, i32* %p, align 4, !dbg !7316
  %17 = load i32, i32* %a, align 4, !dbg !7317
  %18 = load i32, i32* %c, align 4, !dbg !7318
  %sub7 = sub nsw i32 %17, %18, !dbg !7319
  store i32 %sub7, i32* %pc, align 4, !dbg !7320
  %19 = load i32, i32* %p, align 4, !dbg !7321
  %cmp8 = icmp slt i32 %19, 0, !dbg !7322
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !7321

cond.true:                                        ; preds = %while.body
  %20 = load i32, i32* %p, align 4, !dbg !7323
  %sub10 = sub nsw i32 0, %20, !dbg !7324
  br label %cond.end, !dbg !7321

cond.false:                                       ; preds = %while.body
  %21 = load i32, i32* %p, align 4, !dbg !7325
  br label %cond.end, !dbg !7321

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub10, %cond.true ], [ %21, %cond.false ], !dbg !7321
  store i32 %cond, i32* %pa, align 4, !dbg !7326
  %22 = load i32, i32* %pc, align 4, !dbg !7327
  %cmp11 = icmp slt i32 %22, 0, !dbg !7328
  br i1 %cmp11, label %cond.true13, label %cond.false15, !dbg !7327

cond.true13:                                      ; preds = %cond.end
  %23 = load i32, i32* %pc, align 4, !dbg !7329
  %sub14 = sub nsw i32 0, %23, !dbg !7330
  br label %cond.end16, !dbg !7327

cond.false15:                                     ; preds = %cond.end
  %24 = load i32, i32* %pc, align 4, !dbg !7331
  br label %cond.end16, !dbg !7327

cond.end16:                                       ; preds = %cond.false15, %cond.true13
  %cond17 = phi i32 [ %sub14, %cond.true13 ], [ %24, %cond.false15 ], !dbg !7327
  store i32 %cond17, i32* %pb, align 4, !dbg !7332
  %25 = load i32, i32* %p, align 4, !dbg !7333
  %26 = load i32, i32* %pc, align 4, !dbg !7334
  %add18 = add nsw i32 %25, %26, !dbg !7335
  %cmp19 = icmp slt i32 %add18, 0, !dbg !7336
  br i1 %cmp19, label %cond.true21, label %cond.false24, !dbg !7337

cond.true21:                                      ; preds = %cond.end16
  %27 = load i32, i32* %p, align 4, !dbg !7338
  %28 = load i32, i32* %pc, align 4, !dbg !7339
  %add22 = add nsw i32 %27, %28, !dbg !7340
  %sub23 = sub nsw i32 0, %add22, !dbg !7341
  br label %cond.end26, !dbg !7337

cond.false24:                                     ; preds = %cond.end16
  %29 = load i32, i32* %p, align 4, !dbg !7342
  %30 = load i32, i32* %pc, align 4, !dbg !7343
  %add25 = add nsw i32 %29, %30, !dbg !7344
  br label %cond.end26, !dbg !7337

cond.end26:                                       ; preds = %cond.false24, %cond.true21
  %cond27 = phi i32 [ %sub23, %cond.true21 ], [ %add25, %cond.false24 ], !dbg !7337
  store i32 %cond27, i32* %pc, align 4, !dbg !7345
  %31 = load i32, i32* %pb, align 4, !dbg !7346
  %32 = load i32, i32* %pa, align 4, !dbg !7348
  %cmp28 = icmp slt i32 %31, %32, !dbg !7349
  br i1 %cmp28, label %if.then, label %if.end, !dbg !7350

if.then:                                          ; preds = %cond.end26
  %33 = load i32, i32* %pb, align 4, !dbg !7351
  store i32 %33, i32* %pa, align 4, !dbg !7352
  %34 = load i32, i32* %b, align 4, !dbg !7353
  store i32 %34, i32* %a, align 4, !dbg !7354
  br label %if.end, !dbg !7355

if.end:                                           ; preds = %if.then, %cond.end26
  %35 = load i32, i32* %pc, align 4, !dbg !7356
  %36 = load i32, i32* %pa, align 4, !dbg !7358
  %cmp30 = icmp slt i32 %35, %36, !dbg !7359
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !7360

if.then32:                                        ; preds = %if.end
  %37 = load i32, i32* %c, align 4, !dbg !7361
  store i32 %37, i32* %a, align 4, !dbg !7362
  br label %if.end33, !dbg !7363

if.end33:                                         ; preds = %if.then32, %if.end
  %38 = load i32, i32* %b, align 4, !dbg !7364
  store i32 %38, i32* %c, align 4, !dbg !7365
  %39 = load i8*, i8** %row.addr, align 8, !dbg !7366
  %40 = load i8, i8* %39, align 1, !dbg !7367
  %conv34 = zext i8 %40 to i32, !dbg !7367
  %41 = load i32, i32* %a, align 4, !dbg !7368
  %add35 = add nsw i32 %41, %conv34, !dbg !7368
  store i32 %add35, i32* %a, align 4, !dbg !7368
  %42 = load i32, i32* %a, align 4, !dbg !7369
  %conv36 = trunc i32 %42 to i8, !dbg !7370
  %43 = load i8*, i8** %row.addr, align 8, !dbg !7371
  %incdec.ptr37 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !7371
  store i8* %incdec.ptr37, i8** %row.addr, align 8, !dbg !7371
  store i8 %conv36, i8* %43, align 1, !dbg !7372
  br label %while.cond, !dbg !7294, !llvm.loop !7373

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7375
}

; Function Attrs: noinline nounwind uwtable
define internal void @png_read_filter_row_paeth_multibyte_pixel(%struct.png_row_info_struct* %row_info, i8* %row, i8* %prev_row) #0 !dbg !7376 {
entry:
  %row_info.addr = alloca %struct.png_row_info_struct*, align 8
  %row.addr = alloca i8*, align 8
  %prev_row.addr = alloca i8*, align 8
  %bpp = alloca i32, align 4
  %rp_end = alloca i8*, align 8
  %a = alloca i32, align 4
  %a13 = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %pa = alloca i32, align 4
  %pb = alloca i32, align 4
  %pc = alloca i32, align 4
  %p = alloca i32, align 4
  store %struct.png_row_info_struct* %row_info, %struct.png_row_info_struct** %row_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.png_row_info_struct** %row_info.addr, metadata !7377, metadata !DIExpression()), !dbg !7378
  store i8* %row, i8** %row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %row.addr, metadata !7379, metadata !DIExpression()), !dbg !7380
  store i8* %prev_row, i8** %prev_row.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prev_row.addr, metadata !7381, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.declare(metadata i32* %bpp, metadata !7383, metadata !DIExpression()), !dbg !7384
  %0 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !7385
  %pixel_depth = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i32 0, i32 5, !dbg !7386
  %1 = load i8, i8* %pixel_depth, align 1, !dbg !7386
  %conv = zext i8 %1 to i32, !dbg !7385
  %add = add nsw i32 %conv, 7, !dbg !7387
  %shr = ashr i32 %add, 3, !dbg !7388
  store i32 %shr, i32* %bpp, align 4, !dbg !7384
  call void @llvm.dbg.declare(metadata i8** %rp_end, metadata !7389, metadata !DIExpression()), !dbg !7390
  %2 = load i8*, i8** %row.addr, align 8, !dbg !7391
  %3 = load i32, i32* %bpp, align 4, !dbg !7392
  %idx.ext = sext i32 %3 to i64, !dbg !7393
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !7393
  store i8* %add.ptr, i8** %rp_end, align 8, !dbg !7390
  br label %while.cond, !dbg !7394

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i8*, i8** %row.addr, align 8, !dbg !7395
  %5 = load i8*, i8** %rp_end, align 8, !dbg !7396
  %cmp = icmp ult i8* %4, %5, !dbg !7397
  br i1 %cmp, label %while.body, label %while.end, !dbg !7394

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7398, metadata !DIExpression()), !dbg !7400
  %6 = load i8*, i8** %row.addr, align 8, !dbg !7401
  %7 = load i8, i8* %6, align 1, !dbg !7402
  %conv2 = zext i8 %7 to i32, !dbg !7402
  %8 = load i8*, i8** %prev_row.addr, align 8, !dbg !7403
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7403
  store i8* %incdec.ptr, i8** %prev_row.addr, align 8, !dbg !7403
  %9 = load i8, i8* %8, align 1, !dbg !7404
  %conv3 = zext i8 %9 to i32, !dbg !7404
  %add4 = add nsw i32 %conv2, %conv3, !dbg !7405
  store i32 %add4, i32* %a, align 4, !dbg !7400
  %10 = load i32, i32* %a, align 4, !dbg !7406
  %conv5 = trunc i32 %10 to i8, !dbg !7407
  %11 = load i8*, i8** %row.addr, align 8, !dbg !7408
  %incdec.ptr6 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !7408
  store i8* %incdec.ptr6, i8** %row.addr, align 8, !dbg !7408
  store i8 %conv5, i8* %11, align 1, !dbg !7409
  br label %while.cond, !dbg !7394, !llvm.loop !7410

while.end:                                        ; preds = %while.cond
  %12 = load %struct.png_row_info_struct*, %struct.png_row_info_struct** %row_info.addr, align 8, !dbg !7412
  %rowbytes = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %12, i32 0, i32 1, !dbg !7413
  %13 = load i64, i64* %rowbytes, align 8, !dbg !7413
  %14 = load i32, i32* %bpp, align 4, !dbg !7414
  %conv7 = sext i32 %14 to i64, !dbg !7414
  %sub = sub i64 %13, %conv7, !dbg !7415
  %15 = load i8*, i8** %rp_end, align 8, !dbg !7416
  %add.ptr8 = getelementptr inbounds i8, i8* %15, i64 %sub, !dbg !7416
  store i8* %add.ptr8, i8** %rp_end, align 8, !dbg !7416
  br label %while.cond9, !dbg !7417

while.cond9:                                      ; preds = %if.end50, %while.end
  %16 = load i8*, i8** %row.addr, align 8, !dbg !7418
  %17 = load i8*, i8** %rp_end, align 8, !dbg !7419
  %cmp10 = icmp ult i8* %16, %17, !dbg !7420
  br i1 %cmp10, label %while.body12, label %while.end55, !dbg !7417

while.body12:                                     ; preds = %while.cond9
  call void @llvm.dbg.declare(metadata i32* %a13, metadata !7421, metadata !DIExpression()), !dbg !7423
  call void @llvm.dbg.declare(metadata i32* %b, metadata !7424, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.declare(metadata i32* %pa, metadata !7428, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.declare(metadata i32* %pb, metadata !7430, metadata !DIExpression()), !dbg !7431
  call void @llvm.dbg.declare(metadata i32* %pc, metadata !7432, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.declare(metadata i32* %p, metadata !7434, metadata !DIExpression()), !dbg !7435
  %18 = load i8*, i8** %prev_row.addr, align 8, !dbg !7436
  %19 = load i32, i32* %bpp, align 4, !dbg !7437
  %idx.ext14 = sext i32 %19 to i64, !dbg !7438
  %idx.neg = sub i64 0, %idx.ext14, !dbg !7438
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %idx.neg, !dbg !7438
  %20 = load i8, i8* %add.ptr15, align 1, !dbg !7439
  %conv16 = zext i8 %20 to i32, !dbg !7439
  store i32 %conv16, i32* %c, align 4, !dbg !7440
  %21 = load i8*, i8** %row.addr, align 8, !dbg !7441
  %22 = load i32, i32* %bpp, align 4, !dbg !7442
  %idx.ext17 = sext i32 %22 to i64, !dbg !7443
  %idx.neg18 = sub i64 0, %idx.ext17, !dbg !7443
  %add.ptr19 = getelementptr inbounds i8, i8* %21, i64 %idx.neg18, !dbg !7443
  %23 = load i8, i8* %add.ptr19, align 1, !dbg !7444
  %conv20 = zext i8 %23 to i32, !dbg !7444
  store i32 %conv20, i32* %a13, align 4, !dbg !7445
  %24 = load i8*, i8** %prev_row.addr, align 8, !dbg !7446
  %incdec.ptr21 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !7446
  store i8* %incdec.ptr21, i8** %prev_row.addr, align 8, !dbg !7446
  %25 = load i8, i8* %24, align 1, !dbg !7447
  %conv22 = zext i8 %25 to i32, !dbg !7447
  store i32 %conv22, i32* %b, align 4, !dbg !7448
  %26 = load i32, i32* %b, align 4, !dbg !7449
  %27 = load i32, i32* %c, align 4, !dbg !7450
  %sub23 = sub nsw i32 %26, %27, !dbg !7451
  store i32 %sub23, i32* %p, align 4, !dbg !7452
  %28 = load i32, i32* %a13, align 4, !dbg !7453
  %29 = load i32, i32* %c, align 4, !dbg !7454
  %sub24 = sub nsw i32 %28, %29, !dbg !7455
  store i32 %sub24, i32* %pc, align 4, !dbg !7456
  %30 = load i32, i32* %p, align 4, !dbg !7457
  %cmp25 = icmp slt i32 %30, 0, !dbg !7458
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !7457

cond.true:                                        ; preds = %while.body12
  %31 = load i32, i32* %p, align 4, !dbg !7459
  %sub27 = sub nsw i32 0, %31, !dbg !7460
  br label %cond.end, !dbg !7457

cond.false:                                       ; preds = %while.body12
  %32 = load i32, i32* %p, align 4, !dbg !7461
  br label %cond.end, !dbg !7457

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub27, %cond.true ], [ %32, %cond.false ], !dbg !7457
  store i32 %cond, i32* %pa, align 4, !dbg !7462
  %33 = load i32, i32* %pc, align 4, !dbg !7463
  %cmp28 = icmp slt i32 %33, 0, !dbg !7464
  br i1 %cmp28, label %cond.true30, label %cond.false32, !dbg !7463

cond.true30:                                      ; preds = %cond.end
  %34 = load i32, i32* %pc, align 4, !dbg !7465
  %sub31 = sub nsw i32 0, %34, !dbg !7466
  br label %cond.end33, !dbg !7463

cond.false32:                                     ; preds = %cond.end
  %35 = load i32, i32* %pc, align 4, !dbg !7467
  br label %cond.end33, !dbg !7463

cond.end33:                                       ; preds = %cond.false32, %cond.true30
  %cond34 = phi i32 [ %sub31, %cond.true30 ], [ %35, %cond.false32 ], !dbg !7463
  store i32 %cond34, i32* %pb, align 4, !dbg !7468
  %36 = load i32, i32* %p, align 4, !dbg !7469
  %37 = load i32, i32* %pc, align 4, !dbg !7470
  %add35 = add nsw i32 %36, %37, !dbg !7471
  %cmp36 = icmp slt i32 %add35, 0, !dbg !7472
  br i1 %cmp36, label %cond.true38, label %cond.false41, !dbg !7473

cond.true38:                                      ; preds = %cond.end33
  %38 = load i32, i32* %p, align 4, !dbg !7474
  %39 = load i32, i32* %pc, align 4, !dbg !7475
  %add39 = add nsw i32 %38, %39, !dbg !7476
  %sub40 = sub nsw i32 0, %add39, !dbg !7477
  br label %cond.end43, !dbg !7473

cond.false41:                                     ; preds = %cond.end33
  %40 = load i32, i32* %p, align 4, !dbg !7478
  %41 = load i32, i32* %pc, align 4, !dbg !7479
  %add42 = add nsw i32 %40, %41, !dbg !7480
  br label %cond.end43, !dbg !7473

cond.end43:                                       ; preds = %cond.false41, %cond.true38
  %cond44 = phi i32 [ %sub40, %cond.true38 ], [ %add42, %cond.false41 ], !dbg !7473
  store i32 %cond44, i32* %pc, align 4, !dbg !7481
  %42 = load i32, i32* %pb, align 4, !dbg !7482
  %43 = load i32, i32* %pa, align 4, !dbg !7484
  %cmp45 = icmp slt i32 %42, %43, !dbg !7485
  br i1 %cmp45, label %if.then, label %if.end, !dbg !7486

if.then:                                          ; preds = %cond.end43
  %44 = load i32, i32* %pb, align 4, !dbg !7487
  store i32 %44, i32* %pa, align 4, !dbg !7488
  %45 = load i32, i32* %b, align 4, !dbg !7489
  store i32 %45, i32* %a13, align 4, !dbg !7490
  br label %if.end, !dbg !7491

if.end:                                           ; preds = %if.then, %cond.end43
  %46 = load i32, i32* %pc, align 4, !dbg !7492
  %47 = load i32, i32* %pa, align 4, !dbg !7494
  %cmp47 = icmp slt i32 %46, %47, !dbg !7495
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !7496

if.then49:                                        ; preds = %if.end
  %48 = load i32, i32* %c, align 4, !dbg !7497
  store i32 %48, i32* %a13, align 4, !dbg !7498
  br label %if.end50, !dbg !7499

if.end50:                                         ; preds = %if.then49, %if.end
  %49 = load i32, i32* %b, align 4, !dbg !7500
  store i32 %49, i32* %c, align 4, !dbg !7501
  %50 = load i8*, i8** %row.addr, align 8, !dbg !7502
  %51 = load i8, i8* %50, align 1, !dbg !7503
  %conv51 = zext i8 %51 to i32, !dbg !7503
  %52 = load i32, i32* %a13, align 4, !dbg !7504
  %add52 = add nsw i32 %52, %conv51, !dbg !7504
  store i32 %add52, i32* %a13, align 4, !dbg !7504
  %53 = load i32, i32* %a13, align 4, !dbg !7505
  %conv53 = trunc i32 %53 to i8, !dbg !7506
  %54 = load i8*, i8** %row.addr, align 8, !dbg !7507
  %incdec.ptr54 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !7507
  store i8* %incdec.ptr54, i8** %row.addr, align 8, !dbg !7507
  store i8 %conv53, i8* %54, align 1, !dbg !7508
  br label %while.cond9, !dbg !7417, !llvm.loop !7509

while.end55:                                      ; preds = %while.cond9
  ret void, !dbg !7511
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn }
attributes #7 = { nounwind readonly }

!llvm.dbg.cu = !{!466}
!llvm.module.flags = !{!516, !517, !518}
!llvm.ident = !{!519}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "row_mask", scope: !2, file: !3, line: 2948, type: !513, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "png_combine_row", scope: !3, file: !3, line: 2785, type: !4, scopeLine: 2786, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!3 = !DIFile(filename: "libpng/pngrutil.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6, !65, !27}
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_structp", file: !7, line: 851, baseType: !8)
!7 = !DIFile(filename: "libpng/png.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_struct", file: !7, line: 849, baseType: !10)
!10 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_struct_def", file: !11, line: 29, size: 9728, elements: !12)
!11 = !DIFile(filename: "libpng/pngstruct.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12 = !{!13, !40, !46, !56, !57, !60, !72, !73, !74, !92, !93, !94, !95, !96, !97, !98, !99, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !177, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !200, !201, !202, !205, !214, !215, !220, !221, !222, !223, !224, !225, !226, !230, !231, !232, !233, !234, !243, !244, !245, !246, !251, !253, !381, !386, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !414, !415, !416, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !437, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456}
!13 = !DIDerivedType(tag: DW_TAG_member, name: "longjmp_buffer", scope: !10, file: !11, line: 32, baseType: !14, size: 1600)
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "jmp_buf", file: !15, line: 45, baseType: !16)
!15 = !DIFile(filename: "/usr/include/setjmp.h", directory: "")
!16 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 1600, elements: !38)
!17 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__jmp_buf_tag", file: !15, line: 33, size: 1600, elements: !18)
!18 = !{!19, !26, !28}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "__jmpbuf", scope: !17, file: !15, line: 39, baseType: !20, size: 512)
!20 = !DIDerivedType(tag: DW_TAG_typedef, name: "__jmp_buf", file: !21, line: 31, baseType: !22)
!21 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/setjmp.h", directory: "")
!22 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 512, elements: !24)
!23 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!24 = !{!25}
!25 = !DISubrange(count: 8)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "__mask_was_saved", scope: !17, file: !15, line: 40, baseType: !27, size: 32, offset: 512)
!27 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "__saved_mask", scope: !17, file: !15, line: 41, baseType: !29, size: 1024, offset: 576)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !30, line: 8, baseType: !31)
!30 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h", directory: "")
!31 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !30, line: 5, size: 1024, elements: !32)
!32 = !{!33}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !31, file: !30, line: 7, baseType: !34, size: 1024)
!34 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 1024, elements: !36)
!35 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!36 = !{!37}
!37 = !DISubrange(count: 16)
!38 = !{!39}
!39 = !DISubrange(count: 1)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "longjmp_fn", scope: !10, file: !11, line: 33, baseType: !41, size: 64, offset: 1600)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_longjmp_ptr", file: !7, line: 913, baseType: !42)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!43 = !DISubroutineType(types: !44)
!44 = !{null, !45, !27}
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "error_fn", scope: !10, file: !11, line: 35, baseType: !47, size: 64, offset: 1664)
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_error_ptr", file: !7, line: 861, baseType: !48)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64)
!49 = !DISubroutineType(types: !50)
!50 = !{null, !6, !51}
!51 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_const_charp", file: !52, line: 537, baseType: !53)
!52 = !DIFile(filename: "libpng/pngconf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !55)
!55 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "warning_fn", scope: !10, file: !11, line: 37, baseType: !47, size: 64, offset: 1728)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "error_ptr", scope: !10, file: !11, line: 39, baseType: !58, size: 64, offset: 1792)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_voidp", file: !52, line: 524, baseType: !59)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "write_data_fn", scope: !10, file: !11, line: 40, baseType: !61, size: 64, offset: 1856)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_rw_ptr", file: !7, line: 862, baseType: !62)
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !63, size: 64)
!63 = !DISubroutineType(types: !64)
!64 = !{null, !6, !65, !69}
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_bytep", file: !52, line: 526, baseType: !66)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_byte", file: !52, line: 449, baseType: !68)
!68 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_size_t", file: !52, line: 454, baseType: !70)
!70 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !71, line: 46, baseType: !35)
!71 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!72 = !DIDerivedType(tag: DW_TAG_member, name: "read_data_fn", scope: !10, file: !11, line: 41, baseType: !61, size: 64, offset: 1920)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "io_ptr", scope: !10, file: !11, line: 42, baseType: !58, size: 64, offset: 1984)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "read_user_transform_fn", scope: !10, file: !11, line: 45, baseType: !75, size: 64, offset: 2048)
!75 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_user_transform_ptr", file: !7, line: 889, baseType: !76)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!77 = !DISubroutineType(types: !78)
!78 = !{null, !6, !79, !65}
!79 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_row_infop", file: !7, line: 842, baseType: !80)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_row_info", file: !7, line: 840, baseType: !82)
!82 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_row_info_struct", file: !7, line: 832, size: 192, elements: !83)
!83 = !{!84, !87, !88, !89, !90, !91}
!84 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !82, file: !7, line: 834, baseType: !85, size: 32)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_uint_32", file: !52, line: 441, baseType: !86)
!86 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "rowbytes", scope: !82, file: !7, line: 835, baseType: !69, size: 64, offset: 64)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "color_type", scope: !82, file: !7, line: 836, baseType: !67, size: 8, offset: 128)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !82, file: !7, line: 837, baseType: !67, size: 8, offset: 136)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !82, file: !7, line: 838, baseType: !67, size: 8, offset: 144)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_depth", scope: !82, file: !7, line: 839, baseType: !67, size: 8, offset: 152)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "write_user_transform_fn", scope: !10, file: !11, line: 49, baseType: !75, size: 64, offset: 2112)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "user_transform_ptr", scope: !10, file: !11, line: 56, baseType: !58, size: 64, offset: 2176)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "user_transform_depth", scope: !10, file: !11, line: 57, baseType: !67, size: 8, offset: 2240)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "user_transform_channels", scope: !10, file: !11, line: 58, baseType: !67, size: 8, offset: 2248)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !10, file: !11, line: 62, baseType: !85, size: 32, offset: 2272)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10, file: !11, line: 63, baseType: !85, size: 32, offset: 2304)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "transformations", scope: !10, file: !11, line: 64, baseType: !85, size: 32, offset: 2336)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "zstream", scope: !10, file: !11, line: 66, baseType: !100, size: 896, offset: 2368)
!100 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_stream", file: !101, line: 104, baseType: !102)
!101 = !DIFile(filename: "zlib/zlib.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_stream_s", file: !101, line: 85, size: 896, elements: !103)
!103 = !{!104, !109, !111, !113, !114, !115, !116, !118, !123, !129, !134, !135, !136, !137}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "next_in", scope: !102, file: !101, line: 86, baseType: !105, size: 64)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bytef", file: !107, line: 374, baseType: !108)
!107 = !DIFile(filename: "zlib/zconf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !107, line: 365, baseType: !68)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "avail_in", scope: !102, file: !101, line: 87, baseType: !110, size: 32, offset: 64)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uInt", file: !107, line: 367, baseType: !86)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "total_in", scope: !102, file: !101, line: 88, baseType: !112, size: 64, offset: 128)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "uLong", file: !107, line: 368, baseType: !35)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "next_out", scope: !102, file: !101, line: 90, baseType: !105, size: 64, offset: 192)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "avail_out", scope: !102, file: !101, line: 91, baseType: !110, size: 32, offset: 256)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "total_out", scope: !102, file: !101, line: 92, baseType: !112, size: 64, offset: 320)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !102, file: !101, line: 94, baseType: !117, size: 64, offset: 384)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !102, file: !101, line: 95, baseType: !119, size: 64, offset: 448)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "internal_state", file: !101, line: 1714, size: 32, elements: !121)
!121 = !{!122}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !120, file: !101, line: 1714, baseType: !27, size: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "zalloc", scope: !102, file: !101, line: 97, baseType: !124, size: 64, offset: 512)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_func", file: !101, line: 80, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!126 = !DISubroutineType(types: !127)
!127 = !{!128, !128, !110, !110}
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "voidpf", file: !107, line: 383, baseType: !59)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "zfree", scope: !102, file: !101, line: 98, baseType: !130, size: 64, offset: 576)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "free_func", file: !101, line: 81, baseType: !131)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!132 = !DISubroutineType(types: !133)
!133 = !{null, !128, !128}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !102, file: !101, line: 99, baseType: !128, size: 64, offset: 640)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !102, file: !101, line: 101, baseType: !27, size: 32, offset: 704)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "adler", scope: !102, file: !101, line: 102, baseType: !112, size: 64, offset: 768)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !102, file: !101, line: 103, baseType: !112, size: 64, offset: 832)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !10, file: !11, line: 67, baseType: !65, size: 64, offset: 3264)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_size", scope: !10, file: !11, line: 68, baseType: !110, size: 32, offset: 3328)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_state", scope: !10, file: !11, line: 80, baseType: !85, size: 32, offset: 3360)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_level", scope: !10, file: !11, line: 83, baseType: !27, size: 32, offset: 3392)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_method", scope: !10, file: !11, line: 84, baseType: !27, size: 32, offset: 3424)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_window_bits", scope: !10, file: !11, line: 85, baseType: !27, size: 32, offset: 3456)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_mem_level", scope: !10, file: !11, line: 86, baseType: !27, size: 32, offset: 3488)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_strategy", scope: !10, file: !11, line: 87, baseType: !27, size: 32, offset: 3520)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_text_level", scope: !10, file: !11, line: 92, baseType: !27, size: 32, offset: 3552)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_text_method", scope: !10, file: !11, line: 93, baseType: !27, size: 32, offset: 3584)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_text_window_bits", scope: !10, file: !11, line: 94, baseType: !27, size: 32, offset: 3616)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_text_mem_level", scope: !10, file: !11, line: 95, baseType: !27, size: 32, offset: 3648)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "zlib_text_strategy", scope: !10, file: !11, line: 96, baseType: !27, size: 32, offset: 3680)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !10, file: !11, line: 100, baseType: !85, size: 32, offset: 3712)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !10, file: !11, line: 101, baseType: !85, size: 32, offset: 3744)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "num_rows", scope: !10, file: !11, line: 102, baseType: !85, size: 32, offset: 3776)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "usr_width", scope: !10, file: !11, line: 103, baseType: !85, size: 32, offset: 3808)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "rowbytes", scope: !10, file: !11, line: 104, baseType: !69, size: 64, offset: 3840)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "iwidth", scope: !10, file: !11, line: 105, baseType: !85, size: 32, offset: 3904)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "row_number", scope: !10, file: !11, line: 106, baseType: !85, size: 32, offset: 3936)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_name", scope: !10, file: !11, line: 107, baseType: !85, size: 32, offset: 3968)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "prev_row", scope: !10, file: !11, line: 108, baseType: !65, size: 64, offset: 4032)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "row_buf", scope: !10, file: !11, line: 111, baseType: !65, size: 64, offset: 4096)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "sub_row", scope: !10, file: !11, line: 114, baseType: !65, size: 64, offset: 4160)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "up_row", scope: !10, file: !11, line: 115, baseType: !65, size: 64, offset: 4224)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "avg_row", scope: !10, file: !11, line: 116, baseType: !65, size: 64, offset: 4288)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "paeth_row", scope: !10, file: !11, line: 117, baseType: !65, size: 64, offset: 4352)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "info_rowbytes", scope: !10, file: !11, line: 118, baseType: !69, size: 64, offset: 4416)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "idat_size", scope: !10, file: !11, line: 120, baseType: !85, size: 32, offset: 4480)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "crc", scope: !10, file: !11, line: 121, baseType: !85, size: 32, offset: 4512)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !10, file: !11, line: 122, baseType: !169, size: 64, offset: 4544)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_colorp", file: !7, line: 559, baseType: !170)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_color", file: !7, line: 558, baseType: !172)
!172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_color_struct", file: !7, line: 553, size: 24, elements: !173)
!173 = !{!174, !175, !176}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !172, file: !7, line: 555, baseType: !67, size: 8)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !172, file: !7, line: 556, baseType: !67, size: 8, offset: 8)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !172, file: !7, line: 557, baseType: !67, size: 8, offset: 16)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "num_palette", scope: !10, file: !11, line: 123, baseType: !178, size: 16, offset: 4608)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_uint_16", file: !52, line: 447, baseType: !179)
!179 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "num_palette_max", scope: !10, file: !11, line: 127, baseType: !27, size: 32, offset: 4640)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "num_trans", scope: !10, file: !11, line: 130, baseType: !178, size: 16, offset: 4672)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !10, file: !11, line: 131, baseType: !67, size: 8, offset: 4688)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !10, file: !11, line: 132, baseType: !67, size: 8, offset: 4696)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced", scope: !10, file: !11, line: 133, baseType: !67, size: 8, offset: 4704)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !10, file: !11, line: 134, baseType: !67, size: 8, offset: 4712)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "do_filter", scope: !10, file: !11, line: 135, baseType: !67, size: 8, offset: 4720)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "color_type", scope: !10, file: !11, line: 136, baseType: !67, size: 8, offset: 4728)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !10, file: !11, line: 137, baseType: !67, size: 8, offset: 4736)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "usr_bit_depth", scope: !10, file: !11, line: 138, baseType: !67, size: 8, offset: 4744)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_depth", scope: !10, file: !11, line: 139, baseType: !67, size: 8, offset: 4752)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !10, file: !11, line: 140, baseType: !67, size: 8, offset: 4760)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "usr_channels", scope: !10, file: !11, line: 141, baseType: !67, size: 8, offset: 4768)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "sig_bytes", scope: !10, file: !11, line: 142, baseType: !67, size: 8, offset: 4776)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "maximum_pixel_depth", scope: !10, file: !11, line: 143, baseType: !67, size: 8, offset: 4784)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "transformed_pixel_depth", scope: !10, file: !11, line: 145, baseType: !67, size: 8, offset: 4792)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "io_chunk_string", scope: !10, file: !11, line: 147, baseType: !197, size: 40, offset: 4800)
!197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 40, elements: !198)
!198 = !{!199}
!199 = !DISubrange(count: 5)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "filler", scope: !10, file: !11, line: 151, baseType: !178, size: 16, offset: 4848)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "background_gamma_type", scope: !10, file: !11, line: 156, baseType: !67, size: 8, offset: 4864)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "background_gamma", scope: !10, file: !11, line: 157, baseType: !203, size: 32, offset: 4896)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_fixed_point", file: !52, line: 521, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_int_32", file: !52, line: 442, baseType: !27)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "background", scope: !10, file: !11, line: 158, baseType: !206, size: 80, offset: 4928)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_color_16", file: !7, line: 570, baseType: !207)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_color_16_struct", file: !7, line: 563, size: 80, elements: !208)
!208 = !{!209, !210, !211, !212, !213}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !207, file: !7, line: 565, baseType: !67, size: 8)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !207, file: !7, line: 566, baseType: !178, size: 16, offset: 16)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !207, file: !7, line: 567, baseType: !178, size: 16, offset: 32)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !207, file: !7, line: 568, baseType: !178, size: 16, offset: 48)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "gray", scope: !207, file: !7, line: 569, baseType: !178, size: 16, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "background_1", scope: !10, file: !11, line: 160, baseType: !206, size: 80, offset: 5008)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "output_flush_fn", scope: !10, file: !11, line: 165, baseType: !216, size: 64, offset: 5120)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_flush_ptr", file: !7, line: 863, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!218 = !DISubroutineType(types: !219)
!219 = !{null, !6}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "flush_dist", scope: !10, file: !11, line: 166, baseType: !85, size: 32, offset: 5184)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "flush_rows", scope: !10, file: !11, line: 167, baseType: !85, size: 32, offset: 5216)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_shift", scope: !10, file: !11, line: 171, baseType: !27, size: 32, offset: 5248)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !10, file: !11, line: 172, baseType: !203, size: 32, offset: 5280)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "screen_gamma", scope: !10, file: !11, line: 173, baseType: !203, size: 32, offset: 5312)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_table", scope: !10, file: !11, line: 175, baseType: !65, size: 64, offset: 5376)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_16_table", scope: !10, file: !11, line: 176, baseType: !227, size: 64, offset: 5440)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_uint_16pp", file: !52, line: 556, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_from_1", scope: !10, file: !11, line: 180, baseType: !65, size: 64, offset: 5504)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_to_1", scope: !10, file: !11, line: 181, baseType: !65, size: 64, offset: 5568)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_16_from_1", scope: !10, file: !11, line: 182, baseType: !227, size: 64, offset: 5632)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_16_to_1", scope: !10, file: !11, line: 183, baseType: !227, size: 64, offset: 5696)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "sig_bit", scope: !10, file: !11, line: 188, baseType: !235, size: 40, offset: 5760)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_color_8", file: !7, line: 582, baseType: !236)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_color_8_struct", file: !7, line: 575, size: 40, elements: !237)
!237 = !{!238, !239, !240, !241, !242}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !236, file: !7, line: 577, baseType: !67, size: 8)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !236, file: !7, line: 578, baseType: !67, size: 8, offset: 8)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !236, file: !7, line: 579, baseType: !67, size: 8, offset: 16)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "gray", scope: !236, file: !7, line: 580, baseType: !67, size: 8, offset: 24)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !236, file: !7, line: 581, baseType: !67, size: 8, offset: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !10, file: !11, line: 192, baseType: !235, size: 40, offset: 5800)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "trans_alpha", scope: !10, file: !11, line: 197, baseType: !65, size: 64, offset: 5888)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "trans_color", scope: !10, file: !11, line: 198, baseType: !206, size: 80, offset: 5952)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "read_row_fn", scope: !10, file: !11, line: 201, baseType: !247, size: 64, offset: 6080)
!247 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_read_status_ptr", file: !7, line: 864, baseType: !248)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = !DISubroutineType(types: !250)
!250 = !{null, !6, !85, !27}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "write_row_fn", scope: !10, file: !11, line: 202, baseType: !252, size: 64, offset: 6144)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_write_status_ptr", file: !7, line: 866, baseType: !248)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "info_fn", scope: !10, file: !11, line: 204, baseType: !254, size: 64, offset: 6208)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_progressive_info_ptr", file: !7, line: 870, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DISubroutineType(types: !257)
!257 = !{null, !6, !258}
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_infop", file: !7, line: 723, baseType: !259)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_info", file: !7, line: 722, baseType: !261)
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_info_def", file: !262, line: 56, size: 2496, elements: !263)
!262 = !DIFile(filename: "libpng/pnginfo.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!263 = !{!264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !281, !282, !283, !284, !285, !299, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !336, !337, !338, !339, !349, !350, !351, !352, !353, !354, !374, !375, !376, !377, !378}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !261, file: !262, line: 59, baseType: !85, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !261, file: !262, line: 60, baseType: !85, size: 32, offset: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !261, file: !262, line: 61, baseType: !85, size: 32, offset: 64)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "rowbytes", scope: !261, file: !262, line: 62, baseType: !69, size: 64, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !261, file: !262, line: 63, baseType: !169, size: 64, offset: 192)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "num_palette", scope: !261, file: !262, line: 64, baseType: !178, size: 16, offset: 256)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "num_trans", scope: !261, file: !262, line: 65, baseType: !178, size: 16, offset: 272)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "bit_depth", scope: !261, file: !262, line: 66, baseType: !67, size: 8, offset: 288)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "color_type", scope: !261, file: !262, line: 67, baseType: !67, size: 8, offset: 296)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "compression_type", scope: !261, file: !262, line: 69, baseType: !67, size: 8, offset: 304)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "filter_type", scope: !261, file: !262, line: 70, baseType: !67, size: 8, offset: 312)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "interlace_type", scope: !261, file: !262, line: 71, baseType: !67, size: 8, offset: 320)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !261, file: !262, line: 74, baseType: !67, size: 8, offset: 328)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_depth", scope: !261, file: !262, line: 75, baseType: !67, size: 8, offset: 336)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "spare_byte", scope: !261, file: !262, line: 76, baseType: !67, size: 8, offset: 344)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !261, file: !262, line: 77, baseType: !280, size: 64, offset: 352)
!280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 64, elements: !24)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !261, file: !262, line: 90, baseType: !203, size: 32, offset: 416)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "srgb_intent", scope: !261, file: !262, line: 96, baseType: !67, size: 8, offset: 448)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "num_text", scope: !261, file: !262, line: 108, baseType: !27, size: 32, offset: 480)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "max_text", scope: !261, file: !262, line: 109, baseType: !27, size: 32, offset: 512)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !261, file: !262, line: 110, baseType: !286, size: 64, offset: 576)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_textp", file: !7, line: 654, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_text", file: !7, line: 653, baseType: !289)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_text_struct", file: !7, line: 637, size: 448, elements: !290)
!290 = !{!291, !292, !294, !295, !296, !297, !298}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !289, file: !7, line: 639, baseType: !27, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !289, file: !7, line: 644, baseType: !293, size: 64, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_charp", file: !52, line: 536, baseType: !117)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !289, file: !7, line: 645, baseType: !293, size: 64, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "text_length", scope: !289, file: !7, line: 647, baseType: !69, size: 64, offset: 192)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "itxt_length", scope: !289, file: !7, line: 648, baseType: !69, size: 64, offset: 256)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "lang", scope: !289, file: !7, line: 649, baseType: !293, size: 64, offset: 320)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "lang_key", scope: !289, file: !7, line: 651, baseType: !293, size: 64, offset: 384)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "mod_time", scope: !261, file: !262, line: 117, baseType: !300, size: 64, offset: 640)
!300 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_time", file: !7, line: 683, baseType: !301)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_time_struct", file: !7, line: 675, size: 64, elements: !302)
!302 = !{!303, !304, !305, !306, !307, !308}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "year", scope: !301, file: !7, line: 677, baseType: !178, size: 16)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "month", scope: !301, file: !7, line: 678, baseType: !67, size: 8, offset: 16)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "day", scope: !301, file: !7, line: 679, baseType: !67, size: 8, offset: 24)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "hour", scope: !301, file: !7, line: 680, baseType: !67, size: 8, offset: 32)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "minute", scope: !301, file: !7, line: 681, baseType: !67, size: 8, offset: 40)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "second", scope: !301, file: !7, line: 682, baseType: !67, size: 8, offset: 48)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "sig_bit", scope: !261, file: !262, line: 127, baseType: !235, size: 40, offset: 704)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "trans_alpha", scope: !261, file: !262, line: 141, baseType: !65, size: 64, offset: 768)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "trans_color", scope: !261, file: !262, line: 142, baseType: !206, size: 80, offset: 832)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "background", scope: !261, file: !262, line: 152, baseType: !206, size: 80, offset: 912)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "x_offset", scope: !261, file: !262, line: 161, baseType: !204, size: 32, offset: 992)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "y_offset", scope: !261, file: !262, line: 162, baseType: !204, size: 32, offset: 1024)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unit_type", scope: !261, file: !262, line: 163, baseType: !67, size: 8, offset: 1056)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "x_pixels_per_unit", scope: !261, file: !262, line: 171, baseType: !85, size: 32, offset: 1088)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "y_pixels_per_unit", scope: !261, file: !262, line: 172, baseType: !85, size: 32, offset: 1120)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "phys_unit_type", scope: !261, file: !262, line: 173, baseType: !67, size: 8, offset: 1152)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !261, file: !262, line: 183, baseType: !320, size: 64, offset: 1216)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_uint_16p", file: !52, line: 532, baseType: !229)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "x_white", scope: !261, file: !262, line: 193, baseType: !203, size: 32, offset: 1280)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "y_white", scope: !261, file: !262, line: 194, baseType: !203, size: 32, offset: 1312)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "x_red", scope: !261, file: !262, line: 195, baseType: !203, size: 32, offset: 1344)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "y_red", scope: !261, file: !262, line: 196, baseType: !203, size: 32, offset: 1376)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "x_green", scope: !261, file: !262, line: 197, baseType: !203, size: 32, offset: 1408)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "y_green", scope: !261, file: !262, line: 198, baseType: !203, size: 32, offset: 1440)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "x_blue", scope: !261, file: !262, line: 199, baseType: !203, size: 32, offset: 1472)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "y_blue", scope: !261, file: !262, line: 200, baseType: !203, size: 32, offset: 1504)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_purpose", scope: !261, file: !262, line: 215, baseType: !293, size: 64, offset: 1536)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_X0", scope: !261, file: !262, line: 216, baseType: !204, size: 32, offset: 1600)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_X1", scope: !261, file: !262, line: 217, baseType: !204, size: 32, offset: 1632)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_units", scope: !261, file: !262, line: 218, baseType: !293, size: 64, offset: 1664)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_params", scope: !261, file: !262, line: 219, baseType: !334, size: 64, offset: 1728)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_charpp", file: !52, line: 559, baseType: !335)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_type", scope: !261, file: !262, line: 220, baseType: !67, size: 8, offset: 1792)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "pcal_nparams", scope: !261, file: !262, line: 221, baseType: !67, size: 8, offset: 1800)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "free_me", scope: !261, file: !262, line: 225, baseType: !85, size: 32, offset: 1824)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "unknown_chunks", scope: !261, file: !262, line: 230, baseType: !340, size: 64, offset: 1856)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_unknown_chunkp", file: !7, line: 707, baseType: !341)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_unknown_chunk", file: !7, line: 706, baseType: !343)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_unknown_chunk_t", file: !7, line: 695, size: 256, elements: !344)
!344 = !{!345, !346, !347, !348}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !343, file: !7, line: 697, baseType: !197, size: 40)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !343, file: !7, line: 698, baseType: !66, size: 64, offset: 64)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !343, file: !7, line: 699, baseType: !69, size: 64, offset: 128)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !343, file: !7, line: 702, baseType: !67, size: 8, offset: 192)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "unknown_chunks_num", scope: !261, file: !262, line: 231, baseType: !27, size: 32, offset: 1920)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "iccp_name", scope: !261, file: !262, line: 236, baseType: !293, size: 64, offset: 1984)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "iccp_profile", scope: !261, file: !262, line: 237, baseType: !65, size: 64, offset: 2048)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "iccp_proflen", scope: !261, file: !262, line: 238, baseType: !85, size: 32, offset: 2112)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "iccp_compression", scope: !261, file: !262, line: 239, baseType: !67, size: 8, offset: 2144)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "splt_palettes", scope: !261, file: !262, line: 244, baseType: !355, size: 64, offset: 2176)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_sPLT_tp", file: !7, line: 615, baseType: !356)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_sPLT_t", file: !7, line: 614, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_sPLT_struct", file: !7, line: 608, size: 256, elements: !359)
!359 = !{!360, !361, !362, !373}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !358, file: !7, line: 610, baseType: !293, size: 64)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !358, file: !7, line: 611, baseType: !67, size: 8, offset: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !358, file: !7, line: 612, baseType: !363, size: 64, offset: 128)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_sPLT_entryp", file: !7, line: 599, baseType: !364)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_sPLT_entry", file: !7, line: 598, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_sPLT_entry_struct", file: !7, line: 591, size: 80, elements: !367)
!367 = !{!368, !369, !370, !371, !372}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !366, file: !7, line: 593, baseType: !178, size: 16)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !366, file: !7, line: 594, baseType: !178, size: 16, offset: 16)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !366, file: !7, line: 595, baseType: !178, size: 16, offset: 32)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !366, file: !7, line: 596, baseType: !178, size: 16, offset: 48)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !366, file: !7, line: 597, baseType: !178, size: 16, offset: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "nentries", scope: !358, file: !7, line: 613, baseType: !204, size: 32, offset: 192)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "splt_palettes_num", scope: !261, file: !262, line: 245, baseType: !85, size: 32, offset: 2240)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "scal_unit", scope: !261, file: !262, line: 256, baseType: !67, size: 8, offset: 2272)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "scal_s_width", scope: !261, file: !262, line: 257, baseType: !293, size: 64, offset: 2304)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "scal_s_height", scope: !261, file: !262, line: 258, baseType: !293, size: 64, offset: 2368)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "row_pointers", scope: !261, file: !262, line: 265, baseType: !379, size: 64, offset: 2432)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_bytepp", file: !52, line: 553, baseType: !380)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "row_fn", scope: !10, file: !11, line: 205, baseType: !382, size: 64, offset: 6272)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_progressive_row_ptr", file: !7, line: 883, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = !DISubroutineType(types: !385)
!385 = !{null, !6, !65, !85, !27}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "end_fn", scope: !10, file: !11, line: 206, baseType: !387, size: 64, offset: 6336)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_progressive_end_ptr", file: !7, line: 871, baseType: !255)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "save_buffer_ptr", scope: !10, file: !11, line: 207, baseType: !65, size: 64, offset: 6400)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "save_buffer", scope: !10, file: !11, line: 208, baseType: !65, size: 64, offset: 6464)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "current_buffer_ptr", scope: !10, file: !11, line: 209, baseType: !65, size: 64, offset: 6528)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "current_buffer", scope: !10, file: !11, line: 210, baseType: !65, size: 64, offset: 6592)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "push_length", scope: !10, file: !11, line: 211, baseType: !85, size: 32, offset: 6656)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "skip_length", scope: !10, file: !11, line: 212, baseType: !85, size: 32, offset: 6688)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "save_buffer_size", scope: !10, file: !11, line: 213, baseType: !69, size: 64, offset: 6720)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "save_buffer_max", scope: !10, file: !11, line: 214, baseType: !69, size: 64, offset: 6784)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !10, file: !11, line: 215, baseType: !69, size: 64, offset: 6848)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "current_buffer_size", scope: !10, file: !11, line: 216, baseType: !69, size: 64, offset: 6912)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "process_mode", scope: !10, file: !11, line: 217, baseType: !27, size: 32, offset: 6976)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "cur_palette", scope: !10, file: !11, line: 218, baseType: !27, size: 32, offset: 7008)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "palette_lookup", scope: !10, file: !11, line: 232, baseType: !65, size: 64, offset: 7040)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_index", scope: !10, file: !11, line: 233, baseType: !65, size: 64, offset: 7104)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !10, file: !11, line: 237, baseType: !320, size: 64, offset: 7168)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "heuristic_method", scope: !10, file: !11, line: 241, baseType: !67, size: 8, offset: 7232)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "num_prev_filters", scope: !10, file: !11, line: 242, baseType: !67, size: 8, offset: 7240)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "prev_filters", scope: !10, file: !11, line: 243, baseType: !65, size: 64, offset: 7296)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "filter_weights", scope: !10, file: !11, line: 244, baseType: !320, size: 64, offset: 7360)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "inv_filter_weights", scope: !10, file: !11, line: 245, baseType: !320, size: 64, offset: 7424)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "filter_costs", scope: !10, file: !11, line: 246, baseType: !320, size: 64, offset: 7488)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "inv_filter_costs", scope: !10, file: !11, line: 247, baseType: !320, size: 64, offset: 7552)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "time_buffer", scope: !10, file: !11, line: 251, baseType: !411, size: 232, offset: 7616)
!411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 232, elements: !412)
!412 = !{!413}
!413 = !DISubrange(count: 29)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "free_me", scope: !10, file: !11, line: 256, baseType: !85, size: 32, offset: 7872)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "user_chunk_ptr", scope: !10, file: !11, line: 259, baseType: !58, size: 64, offset: 7936)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "read_user_chunk_fn", scope: !10, file: !11, line: 260, baseType: !417, size: 64, offset: 8000)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_user_chunk_ptr", file: !7, line: 894, baseType: !418)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!419 = !DISubroutineType(types: !420)
!420 = !{!27, !6, !340}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "num_chunk_list", scope: !10, file: !11, line: 264, baseType: !27, size: 32, offset: 8064)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_list", scope: !10, file: !11, line: 265, baseType: !65, size: 64, offset: 8128)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "is_sRGB", scope: !10, file: !11, line: 270, baseType: !67, size: 8, offset: 8192)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "rgb_to_gray_status", scope: !10, file: !11, line: 275, baseType: !67, size: 8, offset: 8200)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "rgb_to_gray_coefficients_set", scope: !10, file: !11, line: 277, baseType: !67, size: 8, offset: 8208)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "rgb_to_gray_red_coeff", scope: !10, file: !11, line: 279, baseType: !178, size: 16, offset: 8224)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "rgb_to_gray_green_coeff", scope: !10, file: !11, line: 280, baseType: !178, size: 16, offset: 8240)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "mng_features_permitted", scope: !10, file: !11, line: 287, baseType: !85, size: 32, offset: 8256)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "filter_type", scope: !10, file: !11, line: 292, baseType: !67, size: 8, offset: 8288)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "mem_ptr", scope: !10, file: !11, line: 299, baseType: !58, size: 64, offset: 8320)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_fn", scope: !10, file: !11, line: 300, baseType: !432, size: 64, offset: 8384)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_malloc_ptr", file: !7, line: 950, baseType: !433)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DISubroutineType(types: !435)
!435 = !{!58, !6, !436}
!436 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_alloc_size_t", file: !52, line: 591, baseType: !69)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "free_fn", scope: !10, file: !11, line: 301, baseType: !438, size: 64, offset: 8448)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_free_ptr", file: !7, line: 952, baseType: !439)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DISubroutineType(types: !441)
!441 = !{null, !6, !58}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "big_row_buf", scope: !10, file: !11, line: 305, baseType: !65, size: 64, offset: 8512)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_sort", scope: !10, file: !11, line: 309, baseType: !65, size: 64, offset: 8576)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "index_to_palette", scope: !10, file: !11, line: 310, baseType: !65, size: 64, offset: 8640)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "palette_to_index", scope: !10, file: !11, line: 312, baseType: !65, size: 64, offset: 8704)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "compression_type", scope: !10, file: !11, line: 317, baseType: !67, size: 8, offset: 8768)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "user_width_max", scope: !10, file: !11, line: 320, baseType: !85, size: 32, offset: 8800)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "user_height_max", scope: !10, file: !11, line: 321, baseType: !85, size: 32, offset: 8832)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "user_chunk_cache_max", scope: !10, file: !11, line: 326, baseType: !85, size: 32, offset: 8864)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "user_chunk_malloc_max", scope: !10, file: !11, line: 331, baseType: !436, size: 64, offset: 8896)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "unknown_chunk", scope: !10, file: !11, line: 337, baseType: !342, size: 256, offset: 8960)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "old_big_row_buf_size", scope: !10, file: !11, line: 341, baseType: !69, size: 64, offset: 9216)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "chunkdata", scope: !10, file: !11, line: 344, baseType: !293, size: 64, offset: 9280)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "io_state", scope: !10, file: !11, line: 348, baseType: !85, size: 32, offset: 9344)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "big_prev_row", scope: !10, file: !11, line: 352, baseType: !65, size: 64, offset: 9408)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "read_filter", scope: !10, file: !11, line: 354, baseType: !457, size: 256, offset: 9472)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !458, size: 256, elements: !464)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DISubroutineType(types: !460)
!460 = !{null, !79, !65, !461}
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_const_bytep", file: !52, line: 527, baseType: !462)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !67)
!464 = !{!465}
!465 = !DISubrange(count: 4)
!466 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !467, retainedTypes: !468, globals: !478, splitDebugInlining: false, nameTableKind: None)
!467 = !{}
!468 = !{!85, !204, !86, !178, !59, !69, !27, !65, !293, !67, !363, !334, !286, !70, !55, !117, !53, !469, !471, !461, !320, !474, !477, !110, !203}
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_uint_32p", file: !52, line: 528, baseType: !470)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_const_uint_32p", file: !52, line: 529, baseType: !472)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !85)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_const_uint_16p", file: !52, line: 533, baseType: !475)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!478 = !{!0, !479, !485, !494, !498, !500, !502, !504, !507, !509, !511}
!479 = !DIGlobalVariableExpression(var: !480, expr: !DIExpression())
!480 = distinct !DIGlobalVariable(name: "display_mask", scope: !2, file: !3, line: 2959, type: !481, isLocal: true, isDefinition: true)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 576, elements: !482)
!482 = !{!483, !484, !484}
!483 = !DISubrange(count: 2)
!484 = !DISubrange(count: 3)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "png_pass_inc", scope: !487, file: !3, line: 3270, type: !490, isLocal: true, isDefinition: true)
!487 = distinct !DISubprogram(name: "png_do_read_interlace", scope: !3, file: !3, line: 3265, type: !488, scopeLine: 3267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!488 = !DISubroutineType(types: !489)
!489 = !{null, !79, !65, !27, !85}
!490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !491, size: 224, elements: !492)
!491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!492 = !{!493}
!493 = !DISubrange(count: 7)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "png_pass_start", scope: !496, file: !3, line: 3761, type: !497, isLocal: true, isDefinition: true)
!496 = distinct !DISubprogram(name: "png_read_finish_row", scope: !3, file: !3, line: 3755, type: !218, scopeLine: 3756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 56, elements: !492)
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "png_pass_inc", scope: !496, file: !3, line: 3764, type: !497, isLocal: true, isDefinition: true)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "png_pass_ystart", scope: !496, file: !3, line: 3767, type: !497, isLocal: true, isDefinition: true)
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "png_pass_yinc", scope: !496, file: !3, line: 3770, type: !497, isLocal: true, isDefinition: true)
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "png_pass_start", scope: !506, file: !3, line: 3893, type: !497, isLocal: true, isDefinition: true)
!506 = distinct !DISubprogram(name: "png_read_start_row", scope: !3, file: !3, line: 3887, type: !218, scopeLine: 3888, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "png_pass_inc", scope: !506, file: !3, line: 3896, type: !497, isLocal: true, isDefinition: true)
!509 = !DIGlobalVariableExpression(var: !510, expr: !DIExpression())
!510 = distinct !DIGlobalVariable(name: "png_pass_ystart", scope: !506, file: !3, line: 3899, type: !497, isLocal: true, isDefinition: true)
!511 = !DIGlobalVariableExpression(var: !512, expr: !DIExpression())
!512 = distinct !DIGlobalVariable(name: "png_pass_yinc", scope: !506, file: !3, line: 3902, type: !497, isLocal: true, isDefinition: true)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 1152, elements: !514)
!514 = !{!483, !484, !515}
!515 = !DISubrange(count: 6)
!516 = !{i32 7, !"Dwarf Version", i32 4}
!517 = !{i32 2, !"Debug Info Version", i32 3}
!518 = !{i32 1, !"wchar_size", i32 4}
!519 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!520 = distinct !DISubprogram(name: "png_get_uint_31", scope: !3, file: !3, line: 24, type: !521, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!521 = !DISubroutineType(types: !522)
!522 = !{!85, !6, !461}
!523 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !520, file: !3, line: 24, type: !6)
!524 = !DILocation(line: 24, column: 29, scope: !520)
!525 = !DILocalVariable(name: "buf", arg: 2, scope: !520, file: !3, line: 24, type: !461)
!526 = !DILocation(line: 24, column: 54, scope: !520)
!527 = !DILocalVariable(name: "uval", scope: !520, file: !3, line: 26, type: !85)
!528 = !DILocation(line: 26, column: 16, scope: !520)
!529 = !DILocation(line: 26, column: 23, scope: !520)
!530 = !DILocation(line: 28, column: 8, scope: !531)
!531 = distinct !DILexicalBlock(scope: !520, file: !3, line: 28, column: 8)
!532 = !DILocation(line: 28, column: 13, scope: !531)
!533 = !DILocation(line: 28, column: 8, scope: !520)
!534 = !DILocation(line: 29, column: 17, scope: !531)
!535 = !DILocation(line: 29, column: 7, scope: !531)
!536 = !DILocation(line: 31, column: 12, scope: !520)
!537 = !DILocation(line: 31, column: 4, scope: !520)
!538 = distinct !DISubprogram(name: "png_get_uint_32", scope: !3, file: !3, line: 70, type: !539, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!539 = !DISubroutineType(types: !540)
!540 = !{!85, !461}
!541 = !DILocalVariable(name: "buf", arg: 1, scope: !538, file: !3, line: 70, type: !461)
!542 = !DILocation(line: 70, column: 34, scope: !538)
!543 = !DILocalVariable(name: "uval", scope: !538, file: !3, line: 72, type: !85)
!544 = !DILocation(line: 72, column: 16, scope: !538)
!545 = !DILocation(line: 73, column: 25, scope: !538)
!546 = !DILocation(line: 73, column: 23, scope: !538)
!547 = !DILocation(line: 73, column: 9, scope: !538)
!548 = !DILocation(line: 73, column: 35, scope: !538)
!549 = !DILocation(line: 74, column: 25, scope: !538)
!550 = !DILocation(line: 74, column: 29, scope: !538)
!551 = !DILocation(line: 74, column: 23, scope: !538)
!552 = !DILocation(line: 74, column: 9, scope: !538)
!553 = !DILocation(line: 74, column: 35, scope: !538)
!554 = !DILocation(line: 73, column: 42, scope: !538)
!555 = !DILocation(line: 75, column: 25, scope: !538)
!556 = !DILocation(line: 75, column: 29, scope: !538)
!557 = !DILocation(line: 75, column: 23, scope: !538)
!558 = !DILocation(line: 75, column: 9, scope: !538)
!559 = !DILocation(line: 75, column: 35, scope: !538)
!560 = !DILocation(line: 74, column: 42, scope: !538)
!561 = !DILocation(line: 76, column: 25, scope: !538)
!562 = !DILocation(line: 76, column: 29, scope: !538)
!563 = !DILocation(line: 76, column: 23, scope: !538)
!564 = !DILocation(line: 76, column: 9, scope: !538)
!565 = !DILocation(line: 75, column: 42, scope: !538)
!566 = !DILocation(line: 78, column: 11, scope: !538)
!567 = !DILocation(line: 78, column: 4, scope: !538)
!568 = distinct !DISubprogram(name: "png_get_int_32", scope: !3, file: !3, line: 87, type: !569, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!569 = !DISubroutineType(types: !570)
!570 = !{!204, !461}
!571 = !DILocalVariable(name: "buf", arg: 1, scope: !568, file: !3, line: 87, type: !461)
!572 = !DILocation(line: 87, column: 33, scope: !568)
!573 = !DILocalVariable(name: "uval", scope: !568, file: !3, line: 89, type: !85)
!574 = !DILocation(line: 89, column: 16, scope: !568)
!575 = !DILocation(line: 89, column: 23, scope: !568)
!576 = !DILocation(line: 90, column: 9, scope: !577)
!577 = distinct !DILexicalBlock(scope: !568, file: !3, line: 90, column: 8)
!578 = !DILocation(line: 90, column: 14, scope: !577)
!579 = !DILocation(line: 90, column: 28, scope: !577)
!580 = !DILocation(line: 90, column: 8, scope: !568)
!581 = !DILocation(line: 91, column: 14, scope: !577)
!582 = !DILocation(line: 91, column: 7, scope: !577)
!583 = !DILocation(line: 93, column: 12, scope: !568)
!584 = !DILocation(line: 93, column: 17, scope: !568)
!585 = !DILocation(line: 93, column: 31, scope: !568)
!586 = !DILocation(line: 93, column: 9, scope: !568)
!587 = !DILocation(line: 94, column: 24, scope: !568)
!588 = !DILocation(line: 94, column: 11, scope: !568)
!589 = !DILocation(line: 94, column: 4, scope: !568)
!590 = !DILocation(line: 95, column: 1, scope: !568)
!591 = distinct !DISubprogram(name: "png_get_uint_16", scope: !3, file: !3, line: 99, type: !592, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!592 = !DISubroutineType(types: !593)
!593 = !{!178, !461}
!594 = !DILocalVariable(name: "buf", arg: 1, scope: !591, file: !3, line: 99, type: !461)
!595 = !DILocation(line: 99, column: 34, scope: !591)
!596 = !DILocalVariable(name: "val", scope: !591, file: !3, line: 106, type: !86)
!597 = !DILocation(line: 106, column: 17, scope: !591)
!598 = !DILocation(line: 107, column: 25, scope: !591)
!599 = !DILocation(line: 107, column: 24, scope: !591)
!600 = !DILocation(line: 107, column: 9, scope: !591)
!601 = !DILocation(line: 107, column: 30, scope: !591)
!602 = !DILocation(line: 108, column: 26, scope: !591)
!603 = !DILocation(line: 108, column: 30, scope: !591)
!604 = !DILocation(line: 108, column: 24, scope: !591)
!605 = !DILocation(line: 108, column: 9, scope: !591)
!606 = !DILocation(line: 107, column: 36, scope: !591)
!607 = !DILocation(line: 110, column: 24, scope: !591)
!608 = !DILocation(line: 110, column: 11, scope: !591)
!609 = !DILocation(line: 110, column: 4, scope: !591)
!610 = distinct !DISubprogram(name: "png_read_sig", scope: !3, file: !3, line: 117, type: !256, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!611 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !610, file: !3, line: 117, type: !6)
!612 = !DILocation(line: 117, column: 26, scope: !610)
!613 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !610, file: !3, line: 117, type: !258)
!614 = !DILocation(line: 117, column: 45, scope: !610)
!615 = !DILocalVariable(name: "num_checked", scope: !610, file: !3, line: 119, type: !69)
!616 = !DILocation(line: 119, column: 15, scope: !610)
!617 = !DILocalVariable(name: "num_to_check", scope: !610, file: !3, line: 119, type: !69)
!618 = !DILocation(line: 119, column: 28, scope: !610)
!619 = !DILocation(line: 122, column: 8, scope: !620)
!620 = distinct !DILexicalBlock(scope: !610, file: !3, line: 122, column: 8)
!621 = !DILocation(line: 122, column: 17, scope: !620)
!622 = !DILocation(line: 122, column: 27, scope: !620)
!623 = !DILocation(line: 122, column: 8, scope: !610)
!624 = !DILocation(line: 123, column: 7, scope: !620)
!625 = !DILocation(line: 125, column: 18, scope: !610)
!626 = !DILocation(line: 125, column: 27, scope: !610)
!627 = !DILocation(line: 125, column: 16, scope: !610)
!628 = !DILocation(line: 126, column: 23, scope: !610)
!629 = !DILocation(line: 126, column: 21, scope: !610)
!630 = !DILocation(line: 126, column: 17, scope: !610)
!631 = !DILocation(line: 129, column: 4, scope: !610)
!632 = !DILocation(line: 129, column: 13, scope: !610)
!633 = !DILocation(line: 129, column: 22, scope: !610)
!634 = !DILocation(line: 133, column: 18, scope: !610)
!635 = !DILocation(line: 133, column: 29, scope: !610)
!636 = !DILocation(line: 133, column: 39, scope: !610)
!637 = !DILocation(line: 133, column: 49, scope: !610)
!638 = !DILocation(line: 133, column: 64, scope: !610)
!639 = !DILocation(line: 133, column: 4, scope: !610)
!640 = !DILocation(line: 134, column: 4, scope: !610)
!641 = !DILocation(line: 134, column: 13, scope: !610)
!642 = !DILocation(line: 134, column: 23, scope: !610)
!643 = !DILocation(line: 136, column: 20, scope: !644)
!644 = distinct !DILexicalBlock(scope: !610, file: !3, line: 136, column: 8)
!645 = !DILocation(line: 136, column: 30, scope: !644)
!646 = !DILocation(line: 136, column: 41, scope: !644)
!647 = !DILocation(line: 136, column: 54, scope: !644)
!648 = !DILocation(line: 136, column: 8, scope: !644)
!649 = !DILocation(line: 136, column: 8, scope: !610)
!650 = !DILocation(line: 138, column: 11, scope: !651)
!651 = distinct !DILexicalBlock(scope: !652, file: !3, line: 138, column: 11)
!652 = distinct !DILexicalBlock(scope: !644, file: !3, line: 137, column: 4)
!653 = !DILocation(line: 138, column: 23, scope: !651)
!654 = !DILocation(line: 138, column: 27, scope: !651)
!655 = !DILocation(line: 139, column: 23, scope: !651)
!656 = !DILocation(line: 139, column: 33, scope: !651)
!657 = !DILocation(line: 139, column: 44, scope: !651)
!658 = !DILocation(line: 139, column: 57, scope: !651)
!659 = !DILocation(line: 139, column: 70, scope: !651)
!660 = !DILocation(line: 139, column: 11, scope: !651)
!661 = !DILocation(line: 138, column: 11, scope: !652)
!662 = !DILocation(line: 140, column: 20, scope: !651)
!663 = !DILocation(line: 140, column: 10, scope: !651)
!664 = !DILocation(line: 142, column: 20, scope: !651)
!665 = !DILocation(line: 142, column: 10, scope: !651)
!666 = !DILocation(line: 144, column: 8, scope: !667)
!667 = distinct !DILexicalBlock(scope: !610, file: !3, line: 144, column: 8)
!668 = !DILocation(line: 144, column: 20, scope: !667)
!669 = !DILocation(line: 144, column: 8, scope: !610)
!670 = !DILocation(line: 145, column: 7, scope: !667)
!671 = !DILocation(line: 145, column: 16, scope: !667)
!672 = !DILocation(line: 145, column: 21, scope: !667)
!673 = !DILocation(line: 146, column: 1, scope: !610)
!674 = distinct !DISubprogram(name: "png_read_chunk_header", scope: !3, file: !3, line: 152, type: !675, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!675 = !DISubroutineType(types: !676)
!676 = !{!85, !6}
!677 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !674, file: !3, line: 152, type: !6)
!678 = !DILocation(line: 152, column: 35, scope: !674)
!679 = !DILocalVariable(name: "buf", scope: !674, file: !3, line: 154, type: !280)
!680 = !DILocation(line: 154, column: 13, scope: !674)
!681 = !DILocalVariable(name: "length", scope: !674, file: !3, line: 155, type: !85)
!682 = !DILocation(line: 155, column: 16, scope: !674)
!683 = !DILocation(line: 158, column: 4, scope: !674)
!684 = !DILocation(line: 158, column: 13, scope: !674)
!685 = !DILocation(line: 158, column: 22, scope: !674)
!686 = !DILocation(line: 164, column: 18, scope: !674)
!687 = !DILocation(line: 164, column: 27, scope: !674)
!688 = !DILocation(line: 164, column: 4, scope: !674)
!689 = !DILocation(line: 165, column: 29, scope: !674)
!690 = !DILocation(line: 165, column: 38, scope: !674)
!691 = !DILocation(line: 165, column: 13, scope: !674)
!692 = !DILocation(line: 165, column: 11, scope: !674)
!693 = !DILocation(line: 168, column: 26, scope: !674)
!694 = !DILocation(line: 168, column: 4, scope: !674)
!695 = !DILocation(line: 168, column: 13, scope: !674)
!696 = !DILocation(line: 168, column: 24, scope: !674)
!697 = !DILocation(line: 174, column: 18, scope: !674)
!698 = !DILocation(line: 174, column: 4, scope: !674)
!699 = !DILocation(line: 175, column: 22, scope: !674)
!700 = !DILocation(line: 175, column: 31, scope: !674)
!701 = !DILocation(line: 175, column: 35, scope: !674)
!702 = !DILocation(line: 175, column: 4, scope: !674)
!703 = !DILocation(line: 178, column: 25, scope: !674)
!704 = !DILocation(line: 178, column: 34, scope: !674)
!705 = !DILocation(line: 178, column: 43, scope: !674)
!706 = !DILocation(line: 178, column: 4, scope: !674)
!707 = !DILocation(line: 181, column: 4, scope: !674)
!708 = !DILocation(line: 181, column: 13, scope: !674)
!709 = !DILocation(line: 181, column: 22, scope: !674)
!710 = !DILocation(line: 184, column: 11, scope: !674)
!711 = !DILocation(line: 184, column: 4, scope: !674)
!712 = distinct !DISubprogram(name: "png_check_chunk_name", scope: !3, file: !3, line: 2760, type: !713, scopeLine: 2761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!713 = !DISubroutineType(types: !714)
!714 = !{null, !6, !85}
!715 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !712, file: !3, line: 2760, type: !6)
!716 = !DILocation(line: 2760, column: 34, scope: !712)
!717 = !DILocalVariable(name: "chunk_name", arg: 2, scope: !712, file: !3, line: 2760, type: !85)
!718 = !DILocation(line: 2760, column: 55, scope: !712)
!719 = !DILocalVariable(name: "i", scope: !712, file: !3, line: 2762, type: !27)
!720 = !DILocation(line: 2762, column: 8, scope: !712)
!721 = !DILocation(line: 2766, column: 10, scope: !722)
!722 = distinct !DILexicalBlock(scope: !712, file: !3, line: 2766, column: 4)
!723 = !DILocation(line: 2766, column: 9, scope: !722)
!724 = !DILocation(line: 2766, column: 14, scope: !725)
!725 = distinct !DILexicalBlock(scope: !722, file: !3, line: 2766, column: 4)
!726 = !DILocation(line: 2766, column: 15, scope: !725)
!727 = !DILocation(line: 2766, column: 4, scope: !722)
!728 = !DILocalVariable(name: "c", scope: !729, file: !3, line: 2768, type: !27)
!729 = distinct !DILexicalBlock(scope: !725, file: !3, line: 2767, column: 4)
!730 = !DILocation(line: 2768, column: 11, scope: !729)
!731 = !DILocation(line: 2768, column: 15, scope: !729)
!732 = !DILocation(line: 2768, column: 26, scope: !729)
!733 = !DILocation(line: 2770, column: 11, scope: !734)
!734 = distinct !DILexicalBlock(scope: !729, file: !3, line: 2770, column: 11)
!735 = !DILocation(line: 2770, column: 13, scope: !734)
!736 = !DILocation(line: 2770, column: 18, scope: !734)
!737 = !DILocation(line: 2770, column: 21, scope: !734)
!738 = !DILocation(line: 2770, column: 23, scope: !734)
!739 = !DILocation(line: 2770, column: 29, scope: !734)
!740 = !DILocation(line: 2770, column: 33, scope: !734)
!741 = !DILocation(line: 2770, column: 35, scope: !734)
!742 = !DILocation(line: 2770, column: 40, scope: !734)
!743 = !DILocation(line: 2770, column: 43, scope: !734)
!744 = !DILocation(line: 2770, column: 45, scope: !734)
!745 = !DILocation(line: 2770, column: 11, scope: !729)
!746 = !DILocation(line: 2771, column: 26, scope: !734)
!747 = !DILocation(line: 2771, column: 10, scope: !734)
!748 = !DILocation(line: 2773, column: 18, scope: !729)
!749 = !DILocation(line: 2774, column: 4, scope: !729)
!750 = !DILocation(line: 2766, column: 20, scope: !725)
!751 = !DILocation(line: 2766, column: 4, scope: !725)
!752 = distinct !{!752, !727, !753}
!753 = !DILocation(line: 2774, column: 4, scope: !722)
!754 = !DILocation(line: 2775, column: 1, scope: !712)
!755 = distinct !DISubprogram(name: "png_crc_read", scope: !3, file: !3, line: 189, type: !63, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!756 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !755, file: !3, line: 189, type: !6)
!757 = !DILocation(line: 189, column: 26, scope: !755)
!758 = !DILocalVariable(name: "buf", arg: 2, scope: !755, file: !3, line: 189, type: !65)
!759 = !DILocation(line: 189, column: 45, scope: !755)
!760 = !DILocalVariable(name: "length", arg: 3, scope: !755, file: !3, line: 189, type: !69)
!761 = !DILocation(line: 189, column: 61, scope: !755)
!762 = !DILocation(line: 191, column: 8, scope: !763)
!763 = distinct !DILexicalBlock(scope: !755, file: !3, line: 191, column: 8)
!764 = !DILocation(line: 191, column: 16, scope: !763)
!765 = !DILocation(line: 191, column: 8, scope: !755)
!766 = !DILocation(line: 192, column: 7, scope: !763)
!767 = !DILocation(line: 194, column: 18, scope: !755)
!768 = !DILocation(line: 194, column: 27, scope: !755)
!769 = !DILocation(line: 194, column: 32, scope: !755)
!770 = !DILocation(line: 194, column: 4, scope: !755)
!771 = !DILocation(line: 195, column: 22, scope: !755)
!772 = !DILocation(line: 195, column: 31, scope: !755)
!773 = !DILocation(line: 195, column: 36, scope: !755)
!774 = !DILocation(line: 195, column: 4, scope: !755)
!775 = !DILocation(line: 196, column: 1, scope: !755)
!776 = distinct !DISubprogram(name: "png_crc_finish", scope: !3, file: !3, line: 204, type: !777, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!777 = !DISubroutineType(types: !778)
!778 = !{!27, !6, !85}
!779 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !776, file: !3, line: 204, type: !6)
!780 = !DILocation(line: 204, column: 28, scope: !776)
!781 = !DILocalVariable(name: "skip", arg: 2, scope: !776, file: !3, line: 204, type: !85)
!782 = !DILocation(line: 204, column: 49, scope: !776)
!783 = !DILocalVariable(name: "i", scope: !776, file: !3, line: 206, type: !69)
!784 = !DILocation(line: 206, column: 15, scope: !776)
!785 = !DILocalVariable(name: "istop", scope: !776, file: !3, line: 207, type: !69)
!786 = !DILocation(line: 207, column: 15, scope: !776)
!787 = !DILocation(line: 207, column: 23, scope: !776)
!788 = !DILocation(line: 207, column: 32, scope: !776)
!789 = !DILocation(line: 209, column: 25, scope: !790)
!790 = distinct !DILexicalBlock(scope: !776, file: !3, line: 209, column: 4)
!791 = !DILocation(line: 209, column: 13, scope: !790)
!792 = !DILocation(line: 209, column: 11, scope: !790)
!793 = !DILocation(line: 209, column: 9, scope: !790)
!794 = !DILocation(line: 209, column: 31, scope: !795)
!795 = distinct !DILexicalBlock(scope: !790, file: !3, line: 209, column: 4)
!796 = !DILocation(line: 209, column: 35, scope: !795)
!797 = !DILocation(line: 209, column: 33, scope: !795)
!798 = !DILocation(line: 209, column: 4, scope: !790)
!799 = !DILocation(line: 211, column: 20, scope: !800)
!800 = distinct !DILexicalBlock(scope: !795, file: !3, line: 210, column: 4)
!801 = !DILocation(line: 211, column: 29, scope: !800)
!802 = !DILocation(line: 211, column: 38, scope: !800)
!803 = !DILocation(line: 211, column: 44, scope: !800)
!804 = !DILocation(line: 211, column: 53, scope: !800)
!805 = !DILocation(line: 211, column: 7, scope: !800)
!806 = !DILocation(line: 212, column: 4, scope: !800)
!807 = !DILocation(line: 209, column: 47, scope: !795)
!808 = !DILocation(line: 209, column: 44, scope: !795)
!809 = !DILocation(line: 209, column: 4, scope: !795)
!810 = distinct !{!810, !798, !811}
!811 = !DILocation(line: 212, column: 4, scope: !790)
!812 = !DILocation(line: 214, column: 8, scope: !813)
!813 = distinct !DILexicalBlock(scope: !776, file: !3, line: 214, column: 8)
!814 = !DILocation(line: 214, column: 8, scope: !776)
!815 = !DILocation(line: 216, column: 20, scope: !816)
!816 = distinct !DILexicalBlock(scope: !813, file: !3, line: 215, column: 4)
!817 = !DILocation(line: 216, column: 29, scope: !816)
!818 = !DILocation(line: 216, column: 38, scope: !816)
!819 = !DILocation(line: 216, column: 44, scope: !816)
!820 = !DILocation(line: 216, column: 7, scope: !816)
!821 = !DILocation(line: 217, column: 4, scope: !816)
!822 = !DILocation(line: 219, column: 22, scope: !823)
!823 = distinct !DILexicalBlock(scope: !776, file: !3, line: 219, column: 8)
!824 = !DILocation(line: 219, column: 8, scope: !823)
!825 = !DILocation(line: 219, column: 8, scope: !776)
!826 = !DILocation(line: 221, column: 11, scope: !827)
!827 = distinct !DILexicalBlock(scope: !828, file: !3, line: 221, column: 11)
!828 = distinct !DILexicalBlock(scope: !823, file: !3, line: 220, column: 4)
!829 = !DILocation(line: 221, column: 11, scope: !828)
!830 = !DILocation(line: 222, column: 13, scope: !827)
!831 = !DILocation(line: 222, column: 22, scope: !827)
!832 = !DILocation(line: 222, column: 28, scope: !827)
!833 = !DILocation(line: 222, column: 11, scope: !827)
!834 = !DILocation(line: 223, column: 12, scope: !827)
!835 = !DILocation(line: 223, column: 21, scope: !827)
!836 = !DILocation(line: 223, column: 27, scope: !827)
!837 = !DILocation(line: 225, column: 28, scope: !838)
!838 = distinct !DILexicalBlock(scope: !827, file: !3, line: 224, column: 7)
!839 = !DILocation(line: 225, column: 10, scope: !838)
!840 = !DILocation(line: 226, column: 7, scope: !838)
!841 = !DILocation(line: 230, column: 33, scope: !842)
!842 = distinct !DILexicalBlock(scope: !827, file: !3, line: 229, column: 7)
!843 = !DILocation(line: 230, column: 10, scope: !842)
!844 = !DILocation(line: 231, column: 10, scope: !842)
!845 = !DILocation(line: 234, column: 7, scope: !828)
!846 = !DILocation(line: 237, column: 4, scope: !776)
!847 = !DILocation(line: 238, column: 1, scope: !776)
!848 = distinct !DISubprogram(name: "png_crc_error", scope: !3, file: !3, line: 244, type: !849, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!849 = !DISubroutineType(types: !850)
!850 = !{!27, !6}
!851 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !848, file: !3, line: 244, type: !6)
!852 = !DILocation(line: 244, column: 27, scope: !848)
!853 = !DILocalVariable(name: "crc_bytes", scope: !848, file: !3, line: 246, type: !854)
!854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 32, elements: !464)
!855 = !DILocation(line: 246, column: 13, scope: !848)
!856 = !DILocalVariable(name: "crc", scope: !848, file: !3, line: 247, type: !85)
!857 = !DILocation(line: 247, column: 16, scope: !848)
!858 = !DILocalVariable(name: "need_crc", scope: !848, file: !3, line: 248, type: !27)
!859 = !DILocation(line: 248, column: 8, scope: !848)
!860 = !DILocation(line: 250, column: 8, scope: !861)
!861 = distinct !DILexicalBlock(scope: !848, file: !3, line: 250, column: 8)
!862 = !DILocation(line: 250, column: 8, scope: !848)
!863 = !DILocation(line: 252, column: 12, scope: !864)
!864 = distinct !DILexicalBlock(scope: !865, file: !3, line: 252, column: 11)
!865 = distinct !DILexicalBlock(scope: !861, file: !3, line: 251, column: 4)
!866 = !DILocation(line: 252, column: 21, scope: !864)
!867 = !DILocation(line: 252, column: 27, scope: !864)
!868 = !DILocation(line: 252, column: 58, scope: !864)
!869 = !DILocation(line: 252, column: 11, scope: !865)
!870 = !DILocation(line: 254, column: 19, scope: !864)
!871 = !DILocation(line: 254, column: 10, scope: !864)
!872 = !DILocation(line: 255, column: 4, scope: !865)
!873 = !DILocation(line: 259, column: 11, scope: !874)
!874 = distinct !DILexicalBlock(scope: !875, file: !3, line: 259, column: 11)
!875 = distinct !DILexicalBlock(scope: !861, file: !3, line: 258, column: 4)
!876 = !DILocation(line: 259, column: 20, scope: !874)
!877 = !DILocation(line: 259, column: 26, scope: !874)
!878 = !DILocation(line: 259, column: 11, scope: !875)
!879 = !DILocation(line: 260, column: 19, scope: !874)
!880 = !DILocation(line: 260, column: 10, scope: !874)
!881 = !DILocation(line: 264, column: 4, scope: !848)
!882 = !DILocation(line: 264, column: 13, scope: !848)
!883 = !DILocation(line: 264, column: 22, scope: !848)
!884 = !DILocation(line: 268, column: 18, scope: !848)
!885 = !DILocation(line: 268, column: 27, scope: !848)
!886 = !DILocation(line: 268, column: 4, scope: !848)
!887 = !DILocation(line: 270, column: 8, scope: !888)
!888 = distinct !DILexicalBlock(scope: !848, file: !3, line: 270, column: 8)
!889 = !DILocation(line: 270, column: 8, scope: !848)
!890 = !DILocation(line: 272, column: 13, scope: !891)
!891 = distinct !DILexicalBlock(scope: !888, file: !3, line: 271, column: 4)
!892 = !DILocation(line: 272, column: 11, scope: !891)
!893 = !DILocation(line: 273, column: 21, scope: !891)
!894 = !DILocation(line: 273, column: 28, scope: !891)
!895 = !DILocation(line: 273, column: 37, scope: !891)
!896 = !DILocation(line: 273, column: 25, scope: !891)
!897 = !DILocation(line: 273, column: 7, scope: !891)
!898 = !DILocation(line: 277, column: 7, scope: !888)
!899 = !DILocation(line: 278, column: 1, scope: !848)
!900 = distinct !DISubprogram(name: "png_decompress_chunk", scope: !3, file: !3, line: 412, type: !901, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!901 = !DISubroutineType(types: !902)
!902 = !{null, !6, !27, !69, !69, !903}
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!904 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !900, file: !3, line: 412, type: !6)
!905 = !DILocation(line: 412, column: 34, scope: !900)
!906 = !DILocalVariable(name: "comp_type", arg: 2, scope: !900, file: !3, line: 412, type: !27)
!907 = !DILocation(line: 412, column: 47, scope: !900)
!908 = !DILocalVariable(name: "chunklength", arg: 3, scope: !900, file: !3, line: 413, type: !69)
!909 = !DILocation(line: 413, column: 16, scope: !900)
!910 = !DILocalVariable(name: "prefix_size", arg: 4, scope: !900, file: !3, line: 414, type: !69)
!911 = !DILocation(line: 414, column: 16, scope: !900)
!912 = !DILocalVariable(name: "newlength", arg: 5, scope: !900, file: !3, line: 414, type: !903)
!913 = !DILocation(line: 414, column: 41, scope: !900)
!914 = !DILocation(line: 417, column: 8, scope: !915)
!915 = distinct !DILexicalBlock(scope: !900, file: !3, line: 417, column: 8)
!916 = !DILocation(line: 417, column: 22, scope: !915)
!917 = !DILocation(line: 417, column: 20, scope: !915)
!918 = !DILocation(line: 417, column: 8, scope: !900)
!919 = !DILocation(line: 420, column: 19, scope: !920)
!920 = distinct !DILexicalBlock(scope: !915, file: !3, line: 418, column: 4)
!921 = !DILocation(line: 420, column: 7, scope: !920)
!922 = !DILocation(line: 421, column: 19, scope: !920)
!923 = !DILocation(line: 422, column: 4, scope: !920)
!924 = !DILocation(line: 424, column: 13, scope: !925)
!925 = distinct !DILexicalBlock(scope: !915, file: !3, line: 424, column: 13)
!926 = !DILocation(line: 424, column: 23, scope: !925)
!927 = !DILocation(line: 424, column: 13, scope: !915)
!928 = !DILocalVariable(name: "expanded_size", scope: !929, file: !3, line: 426, type: !69)
!929 = distinct !DILexicalBlock(scope: !925, file: !3, line: 425, column: 4)
!930 = !DILocation(line: 426, column: 18, scope: !929)
!931 = !DILocation(line: 426, column: 46, scope: !929)
!932 = !DILocation(line: 427, column: 23, scope: !929)
!933 = !DILocation(line: 427, column: 32, scope: !929)
!934 = !DILocation(line: 427, column: 44, scope: !929)
!935 = !DILocation(line: 427, column: 42, scope: !929)
!936 = !DILocation(line: 428, column: 11, scope: !929)
!937 = !DILocation(line: 428, column: 25, scope: !929)
!938 = !DILocation(line: 428, column: 23, scope: !929)
!939 = !DILocation(line: 426, column: 34, scope: !929)
!940 = !DILocation(line: 435, column: 11, scope: !941)
!941 = distinct !DILexicalBlock(scope: !929, file: !3, line: 435, column: 11)
!942 = !DILocation(line: 435, column: 23, scope: !941)
!943 = !DILocation(line: 435, column: 47, scope: !941)
!944 = !DILocation(line: 436, column: 10, scope: !941)
!945 = !DILocation(line: 436, column: 50, scope: !941)
!946 = !DILocation(line: 436, column: 48, scope: !941)
!947 = !DILocation(line: 436, column: 24, scope: !941)
!948 = !DILocation(line: 438, column: 10, scope: !941)
!949 = !DILocation(line: 438, column: 14, scope: !941)
!950 = !DILocation(line: 438, column: 23, scope: !941)
!951 = !DILocation(line: 438, column: 45, scope: !941)
!952 = !DILocation(line: 439, column: 12, scope: !941)
!953 = !DILocation(line: 439, column: 26, scope: !941)
!954 = !DILocation(line: 439, column: 24, scope: !941)
!955 = !DILocation(line: 439, column: 43, scope: !941)
!956 = !DILocation(line: 439, column: 52, scope: !941)
!957 = !DILocation(line: 439, column: 74, scope: !941)
!958 = !DILocation(line: 439, column: 40, scope: !941)
!959 = !DILocation(line: 435, column: 11, scope: !929)
!960 = !DILocation(line: 445, column: 22, scope: !941)
!961 = !DILocation(line: 445, column: 10, scope: !941)
!962 = !DILocation(line: 452, column: 16, scope: !963)
!963 = distinct !DILexicalBlock(scope: !941, file: !3, line: 452, column: 16)
!964 = !DILocation(line: 452, column: 30, scope: !963)
!965 = !DILocation(line: 452, column: 16, scope: !941)
!966 = !DILocalVariable(name: "new_size", scope: !967, file: !3, line: 455, type: !69)
!967 = distinct !DILexicalBlock(scope: !963, file: !3, line: 453, column: 7)
!968 = !DILocation(line: 455, column: 21, scope: !967)
!969 = !DILocalVariable(name: "text", scope: !967, file: !3, line: 456, type: !293)
!970 = !DILocation(line: 456, column: 20, scope: !967)
!971 = !DILocation(line: 456, column: 54, scope: !967)
!972 = !DILocation(line: 457, column: 14, scope: !967)
!973 = !DILocation(line: 457, column: 28, scope: !967)
!974 = !DILocation(line: 457, column: 26, scope: !967)
!975 = !DILocation(line: 457, column: 42, scope: !967)
!976 = !DILocation(line: 456, column: 38, scope: !967)
!977 = !DILocation(line: 459, column: 14, scope: !978)
!978 = distinct !DILexicalBlock(scope: !967, file: !3, line: 459, column: 14)
!979 = !DILocation(line: 459, column: 19, scope: !978)
!980 = !DILocation(line: 459, column: 14, scope: !967)
!981 = !DILocation(line: 461, column: 24, scope: !982)
!982 = distinct !DILexicalBlock(scope: !978, file: !3, line: 460, column: 10)
!983 = !DILocation(line: 461, column: 30, scope: !982)
!984 = !DILocation(line: 461, column: 39, scope: !982)
!985 = !DILocation(line: 461, column: 50, scope: !982)
!986 = !DILocation(line: 461, column: 13, scope: !982)
!987 = !DILocation(line: 462, column: 36, scope: !982)
!988 = !DILocation(line: 463, column: 29, scope: !982)
!989 = !DILocation(line: 463, column: 38, scope: !982)
!990 = !DILocation(line: 463, column: 50, scope: !982)
!991 = !DILocation(line: 463, column: 48, scope: !982)
!992 = !DILocation(line: 464, column: 17, scope: !982)
!993 = !DILocation(line: 464, column: 31, scope: !982)
!994 = !DILocation(line: 464, column: 29, scope: !982)
!995 = !DILocation(line: 465, column: 29, scope: !982)
!996 = !DILocation(line: 465, column: 36, scope: !982)
!997 = !DILocation(line: 465, column: 34, scope: !982)
!998 = !DILocation(line: 465, column: 50, scope: !982)
!999 = !DILocation(line: 462, column: 24, scope: !982)
!1000 = !DILocation(line: 462, column: 22, scope: !982)
!1001 = !DILocation(line: 466, column: 13, scope: !982)
!1002 = !DILocation(line: 466, column: 18, scope: !982)
!1003 = !DILocation(line: 466, column: 32, scope: !982)
!1004 = !DILocation(line: 466, column: 30, scope: !982)
!1005 = !DILocation(line: 466, column: 47, scope: !982)
!1006 = !DILocation(line: 468, column: 17, scope: !1007)
!1007 = distinct !DILexicalBlock(scope: !982, file: !3, line: 468, column: 17)
!1008 = !DILocation(line: 468, column: 29, scope: !1007)
!1009 = !DILocation(line: 468, column: 26, scope: !1007)
!1010 = !DILocation(line: 468, column: 17, scope: !982)
!1011 = !DILocation(line: 470, column: 25, scope: !1012)
!1012 = distinct !DILexicalBlock(scope: !1007, file: !3, line: 469, column: 13)
!1013 = !DILocation(line: 470, column: 34, scope: !1012)
!1014 = !DILocation(line: 470, column: 43, scope: !1012)
!1015 = !DILocation(line: 470, column: 16, scope: !1012)
!1016 = !DILocation(line: 471, column: 37, scope: !1012)
!1017 = !DILocation(line: 471, column: 16, scope: !1012)
!1018 = !DILocation(line: 471, column: 25, scope: !1012)
!1019 = !DILocation(line: 471, column: 35, scope: !1012)
!1020 = !DILocation(line: 472, column: 29, scope: !1012)
!1021 = !DILocation(line: 472, column: 43, scope: !1012)
!1022 = !DILocation(line: 472, column: 41, scope: !1012)
!1023 = !DILocation(line: 472, column: 17, scope: !1012)
!1024 = !DILocation(line: 472, column: 27, scope: !1012)
!1025 = !DILocation(line: 473, column: 16, scope: !1012)
!1026 = !DILocation(line: 476, column: 25, scope: !982)
!1027 = !DILocation(line: 476, column: 13, scope: !982)
!1028 = !DILocation(line: 477, column: 22, scope: !982)
!1029 = !DILocation(line: 477, column: 31, scope: !982)
!1030 = !DILocation(line: 477, column: 13, scope: !982)
!1031 = !DILocation(line: 478, column: 10, scope: !982)
!1032 = !DILocation(line: 481, column: 25, scope: !978)
!1033 = !DILocation(line: 481, column: 13, scope: !978)
!1034 = !DILocation(line: 482, column: 7, scope: !967)
!1035 = !DILocation(line: 483, column: 4, scope: !929)
!1036 = !DILocalVariable(name: "p", scope: !1037, file: !3, line: 487, type: !1038)
!1037 = distinct !DILexicalBlock(scope: !925, file: !3, line: 486, column: 4)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_warning_parameters", file: !1039, line: 1471, baseType: !1040)
!1039 = !DIFile(filename: "libpng/pngpriv.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 2048, elements: !1041)
!1041 = !{!25, !1042}
!1042 = !DISubrange(count: 32)
!1043 = !DILocation(line: 487, column: 7, scope: !1037)
!1044 = !DILocation(line: 488, column: 36, scope: !1037)
!1045 = !DILocation(line: 488, column: 63, scope: !1037)
!1046 = !DILocation(line: 488, column: 7, scope: !1037)
!1047 = !DILocation(line: 489, column: 29, scope: !1037)
!1048 = !DILocation(line: 489, column: 38, scope: !1037)
!1049 = !DILocation(line: 489, column: 7, scope: !1037)
!1050 = !DILocalVariable(name: "text", scope: !1051, file: !3, line: 499, type: !293)
!1051 = distinct !DILexicalBlock(scope: !900, file: !3, line: 498, column: 4)
!1052 = !DILocation(line: 499, column: 17, scope: !1051)
!1053 = !DILocation(line: 499, column: 51, scope: !1051)
!1054 = !DILocation(line: 499, column: 60, scope: !1051)
!1055 = !DILocation(line: 499, column: 72, scope: !1051)
!1056 = !DILocation(line: 499, column: 35, scope: !1051)
!1057 = !DILocation(line: 501, column: 11, scope: !1058)
!1058 = distinct !DILexicalBlock(scope: !1051, file: !3, line: 501, column: 11)
!1059 = !DILocation(line: 501, column: 16, scope: !1058)
!1060 = !DILocation(line: 501, column: 11, scope: !1051)
!1061 = !DILocation(line: 503, column: 14, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1063, file: !3, line: 503, column: 14)
!1063 = distinct !DILexicalBlock(scope: !1058, file: !3, line: 502, column: 7)
!1064 = !DILocation(line: 503, column: 26, scope: !1062)
!1065 = !DILocation(line: 503, column: 14, scope: !1063)
!1066 = !DILocation(line: 504, column: 24, scope: !1062)
!1067 = !DILocation(line: 504, column: 30, scope: !1062)
!1068 = !DILocation(line: 504, column: 39, scope: !1062)
!1069 = !DILocation(line: 504, column: 50, scope: !1062)
!1070 = !DILocation(line: 504, column: 13, scope: !1062)
!1071 = !DILocation(line: 506, column: 19, scope: !1063)
!1072 = !DILocation(line: 506, column: 28, scope: !1063)
!1073 = !DILocation(line: 506, column: 37, scope: !1063)
!1074 = !DILocation(line: 506, column: 10, scope: !1063)
!1075 = !DILocation(line: 507, column: 31, scope: !1063)
!1076 = !DILocation(line: 507, column: 10, scope: !1063)
!1077 = !DILocation(line: 507, column: 19, scope: !1063)
!1078 = !DILocation(line: 507, column: 29, scope: !1063)
!1079 = !DILocation(line: 510, column: 12, scope: !1063)
!1080 = !DILocation(line: 510, column: 21, scope: !1063)
!1081 = !DILocation(line: 510, column: 33, scope: !1063)
!1082 = !DILocation(line: 510, column: 31, scope: !1063)
!1083 = !DILocation(line: 510, column: 46, scope: !1063)
!1084 = !DILocation(line: 511, column: 7, scope: !1063)
!1085 = !DILocation(line: 515, column: 17, scope: !900)
!1086 = !DILocation(line: 515, column: 5, scope: !900)
!1087 = !DILocation(line: 515, column: 15, scope: !900)
!1088 = !DILocation(line: 516, column: 1, scope: !900)
!1089 = distinct !DISubprogram(name: "png_inflate", scope: !3, file: !3, line: 282, type: !1090, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !466, retainedNodes: !467)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!69, !6, !65, !69, !65, !69}
!1092 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1089, file: !3, line: 282, type: !6)
!1093 = !DILocation(line: 282, column: 25, scope: !1089)
!1094 = !DILocalVariable(name: "data", arg: 2, scope: !1089, file: !3, line: 282, type: !65)
!1095 = !DILocation(line: 282, column: 44, scope: !1089)
!1096 = !DILocalVariable(name: "size", arg: 3, scope: !1089, file: !3, line: 282, type: !69)
!1097 = !DILocation(line: 282, column: 61, scope: !1089)
!1098 = !DILocalVariable(name: "output", arg: 4, scope: !1089, file: !3, line: 283, type: !65)
!1099 = !DILocation(line: 283, column: 15, scope: !1089)
!1100 = !DILocalVariable(name: "output_size", arg: 5, scope: !1089, file: !3, line: 283, type: !69)
!1101 = !DILocation(line: 283, column: 34, scope: !1089)
!1102 = !DILocalVariable(name: "count", scope: !1089, file: !3, line: 285, type: !69)
!1103 = !DILocation(line: 285, column: 15, scope: !1089)
!1104 = !DILocation(line: 296, column: 31, scope: !1089)
!1105 = !DILocation(line: 296, column: 4, scope: !1089)
!1106 = !DILocation(line: 296, column: 13, scope: !1089)
!1107 = !DILocation(line: 296, column: 21, scope: !1089)
!1108 = !DILocation(line: 296, column: 29, scope: !1089)
!1109 = !DILocation(line: 298, column: 4, scope: !1089)
!1110 = !DILocation(line: 298, column: 13, scope: !1089)
!1111 = !DILocation(line: 298, column: 21, scope: !1089)
!1112 = !DILocation(line: 298, column: 30, scope: !1089)
!1113 = !DILocation(line: 300, column: 4, scope: !1089)
!1114 = !DILocalVariable(name: "ret", scope: !1115, file: !3, line: 302, type: !27)
!1115 = distinct !DILexicalBlock(scope: !1089, file: !3, line: 301, column: 4)
!1116 = !DILocation(line: 302, column: 11, scope: !1115)
!1117 = !DILocalVariable(name: "avail", scope: !1115, file: !3, line: 302, type: !27)
!1118 = !DILocation(line: 302, column: 16, scope: !1115)
!1119 = !DILocation(line: 311, column: 11, scope: !1120)
!1120 = distinct !DILexicalBlock(scope: !1115, file: !3, line: 311, column: 11)
!1121 = !DILocation(line: 311, column: 20, scope: !1120)
!1122 = !DILocation(line: 311, column: 28, scope: !1120)
!1123 = !DILocation(line: 311, column: 37, scope: !1120)
!1124 = !DILocation(line: 311, column: 42, scope: !1120)
!1125 = !DILocation(line: 311, column: 45, scope: !1120)
!1126 = !DILocation(line: 311, column: 50, scope: !1120)
!1127 = !DILocation(line: 311, column: 11, scope: !1115)
!1128 = !DILocation(line: 313, column: 14, scope: !1129)
!1129 = distinct !DILexicalBlock(scope: !1130, file: !3, line: 313, column: 14)
!1130 = distinct !DILexicalBlock(scope: !1120, file: !3, line: 312, column: 7)
!1131 = !DILocation(line: 313, column: 19, scope: !1129)
!1132 = !DILocation(line: 313, column: 14, scope: !1130)
!1133 = !DILocation(line: 316, column: 47, scope: !1134)
!1134 = distinct !DILexicalBlock(scope: !1129, file: !3, line: 314, column: 10)
!1135 = !DILocation(line: 316, column: 41, scope: !1134)
!1136 = !DILocation(line: 316, column: 13, scope: !1134)
!1137 = !DILocation(line: 316, column: 22, scope: !1134)
!1138 = !DILocation(line: 316, column: 30, scope: !1134)
!1139 = !DILocation(line: 316, column: 39, scope: !1134)
!1140 = !DILocation(line: 317, column: 18, scope: !1134)
!1141 = !DILocation(line: 318, column: 10, scope: !1134)
!1142 = !DILocation(line: 322, column: 13, scope: !1143)
!1143 = distinct !DILexicalBlock(scope: !1129, file: !3, line: 321, column: 10)
!1144 = !DILocation(line: 322, column: 22, scope: !1143)
!1145 = !DILocation(line: 322, column: 30, scope: !1143)
!1146 = !DILocation(line: 322, column: 39, scope: !1143)
!1147 = !DILocation(line: 323, column: 18, scope: !1143)
!1148 = !DILocation(line: 325, column: 7, scope: !1130)
!1149 = !DILocation(line: 330, column: 35, scope: !1115)
!1150 = !DILocation(line: 330, column: 44, scope: !1115)
!1151 = !DILocation(line: 330, column: 7, scope: !1115)
!1152 = !DILocation(line: 330, column: 16, scope: !1115)
!1153 = !DILocation(line: 330, column: 24, scope: !1115)
!1154 = !DILocation(line: 330, column: 33, scope: !1115)
!1155 = !DILocation(line: 331, column: 36, scope: !1115)
!1156 = !DILocation(line: 331, column: 45, scope: !1115)
!1157 = !DILocation(line: 331, column: 7, scope: !1115)
!1158 = !DILocation(line: 331, column: 16, scope: !1115)
!1159 = !DILocation(line: 331, column: 24, scope: !1115)
!1160 = !DILocation(line: 331, column: 34, scope: !1115)
!1161 = !DILocation(line: 333, column: 22, scope: !1115)
!1162 = !DILocation(line: 333, column: 31, scope: !1115)
!1163 = !DILocation(line: 333, column: 13, scope: !1115)
!1164 = !DILocation(line: 333, column: 11, scope: !1115)
!1165 = !DILocation(line: 334, column: 15, scope: !1115)
!1166 = !DILocation(line: 334, column: 24, scope: !1115)
!1167 = !DILocation(line: 334, column: 36, scope: !1115)
!1168 = !DILocation(line: 334, column: 45, scope: !1115)
!1169 = !DILocation(line: 334, column: 53, scope: !1115)
!1170 = !DILocation(line: 334, column: 34, scope: !1115)
!1171 = !DILocation(line: 334, column: 13, scope: !1115)
!1172 = !DILocation(line: 339, column: 12, scope: !1173)
!1173 = distinct !DILexicalBlock(scope: !1115, file: !3, line: 339, column: 11)
!1174 = !DILocation(line: 339, column: 16, scope: !1173)
!1175 = !DILocation(line: 339, column: 24, scope: !1173)
!1176 = !DILocation(line: 339, column: 27, scope: !1173)
!1177 = !DILocation(line: 339, column: 31, scope: !1173)
!1178 = !DILocation(line: 339, column: 48, scope: !1173)
!1179 = !DILocation(line: 339, column: 51, scope: !1173)
!1180 = !DILocation(line: 339, column: 57, scope: !1173)
!1181 = !DILocation(line: 339, column: 11, scope: !1115)
!1182 = !DILocalVariable(name: "space", scope: !1183, file: !3, line: 341, type: !69)
!1183 = distinct !DILexicalBlock(scope: !1173, file: !3, line: 340, column: 7)
!1184 = !DILocation(line: 341, column: 21, scope: !1183)
!1185 = !DILocation(line: 341, column: 29, scope: !1183)
!1186 = !DILocation(line: 343, column: 14, scope: !1187)
!1187 = distinct !DILexicalBlock(scope: !1183, file: !3, line: 343, column: 14)
!1188 = !DILocation(line: 343, column: 21, scope: !1187)
!1189 = !DILocation(line: 343, column: 26, scope: !1187)
!1190 = !DILocation(line: 343, column: 29, scope: !1187)
!1191 = !DILocation(line: 343, column: 43, scope: !1187)
!1192 = !DILocation(line: 343, column: 41, scope: !1187)
!1193 = !DILocation(line: 343, column: 14, scope: !1183)
!1194 = !DILocalVariable(name: "copy", scope: !1195, file: !3, line: 345, type: !69)
!1195 = distinct !DILexicalBlock(scope: !1187, file: !3, line: 344, column: 10)
!1196 = !DILocation(line: 345, column: 24, scope: !1195)
!1197 = !DILocation(line: 345, column: 31, scope: !1195)
!1198 = !DILocation(line: 345, column: 45, scope: !1195)
!1199 = !DILocation(line: 345, column: 43, scope: !1195)
!1200 = !DILocation(line: 347, column: 17, scope: !1201)
!1201 = distinct !DILexicalBlock(scope: !1195, file: !3, line: 347, column: 17)
!1202 = !DILocation(line: 347, column: 25, scope: !1201)
!1203 = !DILocation(line: 347, column: 23, scope: !1201)
!1204 = !DILocation(line: 347, column: 17, scope: !1195)
!1205 = !DILocation(line: 348, column: 23, scope: !1201)
!1206 = !DILocation(line: 348, column: 21, scope: !1201)
!1207 = !DILocation(line: 348, column: 16, scope: !1201)
!1208 = !DILocation(line: 350, column: 24, scope: !1195)
!1209 = !DILocation(line: 350, column: 33, scope: !1195)
!1210 = !DILocation(line: 350, column: 31, scope: !1195)
!1211 = !DILocation(line: 350, column: 40, scope: !1195)
!1212 = !DILocation(line: 350, column: 49, scope: !1195)
!1213 = !DILocation(line: 350, column: 55, scope: !1195)
!1214 = !DILocation(line: 350, column: 13, scope: !1195)
!1215 = !DILocation(line: 351, column: 10, scope: !1195)
!1216 = !DILocation(line: 352, column: 19, scope: !1183)
!1217 = !DILocation(line: 352, column: 16, scope: !1183)
!1218 = !DILocation(line: 353, column: 7, scope: !1183)
!1219 = !DILocation(line: 355, column: 11, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !1115, file: !3, line: 355, column: 11)
!1221 = !DILocation(line: 355, column: 15, scope: !1220)
!1222 = !DILocation(line: 355, column: 11, scope: !1115)
!1223 = !DILocation(line: 356, column: 10, scope: !1220)
!1224 = distinct !{!1224, !1113, !1225}
!1225 = !DILocation(line: 401, column: 4, scope: !1089)
!1226 = !DILocation(line: 361, column: 7, scope: !1115)
!1227 = !DILocation(line: 361, column: 16, scope: !1115)
!1228 = !DILocation(line: 361, column: 24, scope: !1115)
!1229 = !DILocation(line: 361, column: 33, scope: !1115)
!1230 = !DILocation(line: 362, column: 21, scope: !1115)
!1231 = !DILocation(line: 362, column: 30, scope: !1115)
!1232 = !DILocation(line: 362, column: 7, scope: !1115)
!1233 = !DILocation(line: 364, column: 11, scope: !1234)
!1234 = distinct !DILexicalBlock(scope: !1115, file: !3, line: 364, column: 11)
!1235 = !DILocation(line: 364, column: 15, scope: !1234)
!1236 = !DILocation(line: 364, column: 11, scope: !1115)
!1237 = !DILocation(line: 365, column: 17, scope: !1234)
!1238 = !DILocation(line: 365, column: 10, scope: !1234)
!1239 = !DILocalVariable(name: "msg", scope: !1240, file: !3, line: 373, type: !51)
!1240 = distinct !DILexicalBlock(scope: !1115, file: !3, line: 372, column: 7)
!1241 = !DILocation(line: 373, column: 26, scope: !1240)
!1242 = !DILocation(line: 375, column: 14, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !1240, file: !3, line: 375, column: 14)
!1244 = !DILocation(line: 375, column: 23, scope: !1243)
!1245 = !DILocation(line: 375, column: 31, scope: !1243)
!1246 = !DILocation(line: 375, column: 35, scope: !1243)
!1247 = !DILocation(line: 375, column: 14, scope: !1240)
!1248 = !DILocation(line: 376, column: 19, scope: !1243)
!1249 = !DILocation(line: 376, column: 28, scope: !1243)
!1250 = !DILocation(line: 376, column: 36, scope: !1243)
!1251 = !DILocation(line: 376, column: 17, scope: !1243)
!1252 = !DILocation(line: 376, column: 13, scope: !1243)
!1253 = !DILocation(line: 378, column: 23, scope: !1243)
!1254 = !DILocation(line: 378, column: 15, scope: !1243)
!1255 = !DILocation(line: 381, column: 20, scope: !1256)
!1256 = distinct !DILexicalBlock(scope: !1243, file: !3, line: 379, column: 10)
!1257 = !DILocation(line: 382, column: 16, scope: !1256)
!1258 = !DILocation(line: 385, column: 20, scope: !1256)
!1259 = !DILocation(line: 386, column: 16, scope: !1256)
!1260 = !DILocation(line: 389, column: 20, scope: !1256)
!1261 = !DILocation(line: 390, column: 16, scope: !1256)
!1262 = !DILocation(line: 393, column: 28, scope: !1240)
!1263 = !DILocation(line: 393, column: 37, scope: !1240)
!1264 = !DILocation(line: 393, column: 10, scope: !1240)
!1265 = !DILocation(line: 400, column: 7, scope: !1115)
!1266 = !DILocation(line: 402, column: 1, scope: !1089)
!1267 = distinct !DISubprogram(name: "png_handle_IHDR", scope: !3, file: !3, line: 521, type: !1268, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{null, !6, !258, !85}
!1270 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1267, file: !3, line: 521, type: !6)
!1271 = !DILocation(line: 521, column: 29, scope: !1267)
!1272 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !1267, file: !3, line: 521, type: !258)
!1273 = !DILocation(line: 521, column: 48, scope: !1267)
!1274 = !DILocalVariable(name: "length", arg: 3, scope: !1267, file: !3, line: 521, type: !85)
!1275 = !DILocation(line: 521, column: 70, scope: !1267)
!1276 = !DILocalVariable(name: "buf", scope: !1267, file: !3, line: 523, type: !1277)
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 104, elements: !1278)
!1278 = !{!1279}
!1279 = !DISubrange(count: 13)
!1280 = !DILocation(line: 523, column: 13, scope: !1267)
!1281 = !DILocalVariable(name: "width", scope: !1267, file: !3, line: 524, type: !85)
!1282 = !DILocation(line: 524, column: 16, scope: !1267)
!1283 = !DILocalVariable(name: "height", scope: !1267, file: !3, line: 524, type: !85)
!1284 = !DILocation(line: 524, column: 23, scope: !1267)
!1285 = !DILocalVariable(name: "bit_depth", scope: !1267, file: !3, line: 525, type: !27)
!1286 = !DILocation(line: 525, column: 8, scope: !1267)
!1287 = !DILocalVariable(name: "color_type", scope: !1267, file: !3, line: 525, type: !27)
!1288 = !DILocation(line: 525, column: 19, scope: !1267)
!1289 = !DILocalVariable(name: "compression_type", scope: !1267, file: !3, line: 525, type: !27)
!1290 = !DILocation(line: 525, column: 31, scope: !1267)
!1291 = !DILocalVariable(name: "filter_type", scope: !1267, file: !3, line: 525, type: !27)
!1292 = !DILocation(line: 525, column: 49, scope: !1267)
!1293 = !DILocalVariable(name: "interlace_type", scope: !1267, file: !3, line: 526, type: !27)
!1294 = !DILocation(line: 526, column: 8, scope: !1267)
!1295 = !DILocation(line: 530, column: 8, scope: !1296)
!1296 = distinct !DILexicalBlock(scope: !1267, file: !3, line: 530, column: 8)
!1297 = !DILocation(line: 530, column: 17, scope: !1296)
!1298 = !DILocation(line: 530, column: 22, scope: !1296)
!1299 = !DILocation(line: 530, column: 8, scope: !1267)
!1300 = !DILocation(line: 531, column: 17, scope: !1296)
!1301 = !DILocation(line: 531, column: 7, scope: !1296)
!1302 = !DILocation(line: 534, column: 8, scope: !1303)
!1303 = distinct !DILexicalBlock(scope: !1267, file: !3, line: 534, column: 8)
!1304 = !DILocation(line: 534, column: 15, scope: !1303)
!1305 = !DILocation(line: 534, column: 8, scope: !1267)
!1306 = !DILocation(line: 535, column: 17, scope: !1303)
!1307 = !DILocation(line: 535, column: 7, scope: !1303)
!1308 = !DILocation(line: 537, column: 4, scope: !1267)
!1309 = !DILocation(line: 537, column: 13, scope: !1267)
!1310 = !DILocation(line: 537, column: 18, scope: !1267)
!1311 = !DILocation(line: 539, column: 17, scope: !1267)
!1312 = !DILocation(line: 539, column: 26, scope: !1267)
!1313 = !DILocation(line: 539, column: 4, scope: !1267)
!1314 = !DILocation(line: 540, column: 19, scope: !1267)
!1315 = !DILocation(line: 540, column: 4, scope: !1267)
!1316 = !DILocation(line: 542, column: 28, scope: !1267)
!1317 = !DILocation(line: 542, column: 37, scope: !1267)
!1318 = !DILocation(line: 542, column: 12, scope: !1267)
!1319 = !DILocation(line: 542, column: 10, scope: !1267)
!1320 = !DILocation(line: 543, column: 29, scope: !1267)
!1321 = !DILocation(line: 543, column: 38, scope: !1267)
!1322 = !DILocation(line: 543, column: 42, scope: !1267)
!1323 = !DILocation(line: 543, column: 13, scope: !1267)
!1324 = !DILocation(line: 543, column: 11, scope: !1267)
!1325 = !DILocation(line: 544, column: 16, scope: !1267)
!1326 = !DILocation(line: 544, column: 14, scope: !1267)
!1327 = !DILocation(line: 545, column: 17, scope: !1267)
!1328 = !DILocation(line: 545, column: 15, scope: !1267)
!1329 = !DILocation(line: 546, column: 23, scope: !1267)
!1330 = !DILocation(line: 546, column: 21, scope: !1267)
!1331 = !DILocation(line: 547, column: 18, scope: !1267)
!1332 = !DILocation(line: 547, column: 16, scope: !1267)
!1333 = !DILocation(line: 548, column: 21, scope: !1267)
!1334 = !DILocation(line: 548, column: 19, scope: !1267)
!1335 = !DILocation(line: 551, column: 21, scope: !1267)
!1336 = !DILocation(line: 551, column: 4, scope: !1267)
!1337 = !DILocation(line: 551, column: 13, scope: !1267)
!1338 = !DILocation(line: 551, column: 19, scope: !1267)
!1339 = !DILocation(line: 552, column: 22, scope: !1267)
!1340 = !DILocation(line: 552, column: 4, scope: !1267)
!1341 = !DILocation(line: 552, column: 13, scope: !1267)
!1342 = !DILocation(line: 552, column: 20, scope: !1267)
!1343 = !DILocation(line: 553, column: 35, scope: !1267)
!1344 = !DILocation(line: 553, column: 25, scope: !1267)
!1345 = !DILocation(line: 553, column: 4, scope: !1267)
!1346 = !DILocation(line: 553, column: 13, scope: !1267)
!1347 = !DILocation(line: 553, column: 23, scope: !1267)
!1348 = !DILocation(line: 554, column: 36, scope: !1267)
!1349 = !DILocation(line: 554, column: 26, scope: !1267)
!1350 = !DILocation(line: 554, column: 4, scope: !1267)
!1351 = !DILocation(line: 554, column: 13, scope: !1267)
!1352 = !DILocation(line: 554, column: 24, scope: !1267)
!1353 = !DILocation(line: 555, column: 36, scope: !1267)
!1354 = !DILocation(line: 555, column: 26, scope: !1267)
!1355 = !DILocation(line: 555, column: 4, scope: !1267)
!1356 = !DILocation(line: 555, column: 13, scope: !1267)
!1357 = !DILocation(line: 555, column: 24, scope: !1267)
!1358 = !DILocation(line: 557, column: 37, scope: !1267)
!1359 = !DILocation(line: 557, column: 27, scope: !1267)
!1360 = !DILocation(line: 557, column: 4, scope: !1267)
!1361 = !DILocation(line: 557, column: 13, scope: !1267)
!1362 = !DILocation(line: 557, column: 25, scope: !1267)
!1363 = !DILocation(line: 559, column: 42, scope: !1267)
!1364 = !DILocation(line: 559, column: 32, scope: !1267)
!1365 = !DILocation(line: 559, column: 4, scope: !1267)
!1366 = !DILocation(line: 559, column: 13, scope: !1267)
!1367 = !DILocation(line: 559, column: 30, scope: !1267)
!1368 = !DILocation(line: 562, column: 12, scope: !1267)
!1369 = !DILocation(line: 562, column: 21, scope: !1267)
!1370 = !DILocation(line: 562, column: 4, scope: !1267)
!1371 = !DILocation(line: 563, column: 4, scope: !1267)
!1372 = !DILocation(line: 567, column: 10, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1267, file: !3, line: 563, column: 4)
!1374 = !DILocation(line: 567, column: 19, scope: !1373)
!1375 = !DILocation(line: 567, column: 28, scope: !1373)
!1376 = !DILocation(line: 568, column: 10, scope: !1373)
!1377 = !DILocation(line: 571, column: 10, scope: !1373)
!1378 = !DILocation(line: 571, column: 19, scope: !1373)
!1379 = !DILocation(line: 571, column: 28, scope: !1373)
!1380 = !DILocation(line: 572, column: 10, scope: !1373)
!1381 = !DILocation(line: 575, column: 10, scope: !1373)
!1382 = !DILocation(line: 575, column: 19, scope: !1373)
!1383 = !DILocation(line: 575, column: 28, scope: !1373)
!1384 = !DILocation(line: 576, column: 10, scope: !1373)
!1385 = !DILocation(line: 579, column: 10, scope: !1373)
!1386 = !DILocation(line: 579, column: 19, scope: !1373)
!1387 = !DILocation(line: 579, column: 28, scope: !1373)
!1388 = !DILocation(line: 580, column: 10, scope: !1373)
!1389 = !DILocation(line: 584, column: 38, scope: !1267)
!1390 = !DILocation(line: 584, column: 47, scope: !1267)
!1391 = !DILocation(line: 585, column: 4, scope: !1267)
!1392 = !DILocation(line: 585, column: 13, scope: !1267)
!1393 = !DILocation(line: 584, column: 57, scope: !1267)
!1394 = !DILocation(line: 584, column: 27, scope: !1267)
!1395 = !DILocation(line: 584, column: 4, scope: !1267)
!1396 = !DILocation(line: 584, column: 13, scope: !1267)
!1397 = !DILocation(line: 584, column: 25, scope: !1267)
!1398 = !DILocation(line: 586, column: 24, scope: !1267)
!1399 = !DILocation(line: 586, column: 4, scope: !1267)
!1400 = !DILocation(line: 586, column: 13, scope: !1267)
!1401 = !DILocation(line: 586, column: 22, scope: !1267)
!1402 = !DILocation(line: 590, column: 17, scope: !1267)
!1403 = !DILocation(line: 590, column: 26, scope: !1267)
!1404 = !DILocation(line: 590, column: 36, scope: !1267)
!1405 = !DILocation(line: 590, column: 43, scope: !1267)
!1406 = !DILocation(line: 590, column: 51, scope: !1267)
!1407 = !DILocation(line: 591, column: 8, scope: !1267)
!1408 = !DILocation(line: 591, column: 20, scope: !1267)
!1409 = !DILocation(line: 591, column: 36, scope: !1267)
!1410 = !DILocation(line: 591, column: 54, scope: !1267)
!1411 = !DILocation(line: 590, column: 4, scope: !1267)
!1412 = !DILocation(line: 592, column: 1, scope: !1267)
!1413 = distinct !DISubprogram(name: "png_handle_PLTE", scope: !3, file: !3, line: 596, type: !1268, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!1414 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1413, file: !3, line: 596, type: !6)
!1415 = !DILocation(line: 596, column: 29, scope: !1413)
!1416 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !1413, file: !3, line: 596, type: !258)
!1417 = !DILocation(line: 596, column: 48, scope: !1413)
!1418 = !DILocalVariable(name: "length", arg: 3, scope: !1413, file: !3, line: 596, type: !85)
!1419 = !DILocation(line: 596, column: 70, scope: !1413)
!1420 = !DILocalVariable(name: "palette", scope: !1413, file: !3, line: 598, type: !1421)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !171, size: 6144, elements: !1422)
!1422 = !{!1423}
!1423 = !DISubrange(count: 256)
!1424 = !DILocation(line: 598, column: 14, scope: !1413)
!1425 = !DILocalVariable(name: "num", scope: !1413, file: !3, line: 599, type: !27)
!1426 = !DILocation(line: 599, column: 8, scope: !1413)
!1427 = !DILocalVariable(name: "i", scope: !1413, file: !3, line: 599, type: !27)
!1428 = !DILocation(line: 599, column: 13, scope: !1413)
!1429 = !DILocalVariable(name: "pal_ptr", scope: !1413, file: !3, line: 601, type: !169)
!1430 = !DILocation(line: 601, column: 15, scope: !1413)
!1431 = !DILocation(line: 606, column: 10, scope: !1432)
!1432 = distinct !DILexicalBlock(scope: !1413, file: !3, line: 606, column: 8)
!1433 = !DILocation(line: 606, column: 19, scope: !1432)
!1434 = !DILocation(line: 606, column: 24, scope: !1432)
!1435 = !DILocation(line: 606, column: 8, scope: !1413)
!1436 = !DILocation(line: 607, column: 17, scope: !1432)
!1437 = !DILocation(line: 607, column: 7, scope: !1432)
!1438 = !DILocation(line: 609, column: 13, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !1432, file: !3, line: 609, column: 13)
!1440 = !DILocation(line: 609, column: 22, scope: !1439)
!1441 = !DILocation(line: 609, column: 27, scope: !1439)
!1442 = !DILocation(line: 609, column: 13, scope: !1432)
!1443 = !DILocation(line: 611, column: 19, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !1439, file: !3, line: 610, column: 4)
!1445 = !DILocation(line: 611, column: 7, scope: !1444)
!1446 = !DILocation(line: 612, column: 22, scope: !1444)
!1447 = !DILocation(line: 612, column: 31, scope: !1444)
!1448 = !DILocation(line: 612, column: 7, scope: !1444)
!1449 = !DILocation(line: 613, column: 7, scope: !1444)
!1450 = !DILocation(line: 616, column: 13, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !1439, file: !3, line: 616, column: 13)
!1452 = !DILocation(line: 616, column: 22, scope: !1451)
!1453 = !DILocation(line: 616, column: 27, scope: !1451)
!1454 = !DILocation(line: 616, column: 13, scope: !1439)
!1455 = !DILocation(line: 617, column: 17, scope: !1451)
!1456 = !DILocation(line: 617, column: 7, scope: !1451)
!1457 = !DILocation(line: 619, column: 4, scope: !1413)
!1458 = !DILocation(line: 619, column: 13, scope: !1413)
!1459 = !DILocation(line: 619, column: 18, scope: !1413)
!1460 = !DILocation(line: 621, column: 10, scope: !1461)
!1461 = distinct !DILexicalBlock(scope: !1413, file: !3, line: 621, column: 8)
!1462 = !DILocation(line: 621, column: 19, scope: !1461)
!1463 = !DILocation(line: 621, column: 29, scope: !1461)
!1464 = !DILocation(line: 621, column: 8, scope: !1413)
!1465 = !DILocation(line: 623, column: 19, scope: !1466)
!1466 = distinct !DILexicalBlock(scope: !1461, file: !3, line: 622, column: 4)
!1467 = !DILocation(line: 623, column: 7, scope: !1466)
!1468 = !DILocation(line: 625, column: 22, scope: !1466)
!1469 = !DILocation(line: 625, column: 31, scope: !1466)
!1470 = !DILocation(line: 625, column: 7, scope: !1466)
!1471 = !DILocation(line: 626, column: 7, scope: !1466)
!1472 = !DILocation(line: 637, column: 8, scope: !1473)
!1473 = distinct !DILexicalBlock(scope: !1413, file: !3, line: 637, column: 8)
!1474 = !DILocation(line: 637, column: 15, scope: !1473)
!1475 = !DILocation(line: 637, column: 42, scope: !1473)
!1476 = !DILocation(line: 637, column: 45, scope: !1473)
!1477 = !DILocation(line: 637, column: 52, scope: !1473)
!1478 = !DILocation(line: 637, column: 8, scope: !1413)
!1479 = !DILocation(line: 639, column: 11, scope: !1480)
!1480 = distinct !DILexicalBlock(scope: !1481, file: !3, line: 639, column: 11)
!1481 = distinct !DILexicalBlock(scope: !1473, file: !3, line: 638, column: 4)
!1482 = !DILocation(line: 639, column: 20, scope: !1480)
!1483 = !DILocation(line: 639, column: 31, scope: !1480)
!1484 = !DILocation(line: 639, column: 11, scope: !1481)
!1485 = !DILocation(line: 641, column: 22, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 640, column: 7)
!1487 = !DILocation(line: 641, column: 10, scope: !1486)
!1488 = !DILocation(line: 642, column: 25, scope: !1486)
!1489 = !DILocation(line: 642, column: 34, scope: !1486)
!1490 = !DILocation(line: 642, column: 10, scope: !1486)
!1491 = !DILocation(line: 643, column: 10, scope: !1486)
!1492 = !DILocation(line: 648, column: 20, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 647, column: 7)
!1494 = !DILocation(line: 648, column: 10, scope: !1493)
!1495 = !DILocation(line: 652, column: 15, scope: !1413)
!1496 = !DILocation(line: 652, column: 22, scope: !1413)
!1497 = !DILocation(line: 652, column: 8, scope: !1413)
!1498 = !DILocation(line: 655, column: 11, scope: !1499)
!1499 = distinct !DILexicalBlock(scope: !1413, file: !3, line: 655, column: 4)
!1500 = !DILocation(line: 655, column: 26, scope: !1499)
!1501 = !DILocation(line: 655, column: 24, scope: !1499)
!1502 = !DILocation(line: 655, column: 9, scope: !1499)
!1503 = !DILocation(line: 655, column: 35, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 655, column: 4)
!1505 = !DILocation(line: 655, column: 39, scope: !1504)
!1506 = !DILocation(line: 655, column: 37, scope: !1504)
!1507 = !DILocation(line: 655, column: 4, scope: !1499)
!1508 = !DILocalVariable(name: "buf", scope: !1509, file: !3, line: 657, type: !1510)
!1509 = distinct !DILexicalBlock(scope: !1504, file: !3, line: 656, column: 4)
!1510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 24, elements: !1511)
!1511 = !{!484}
!1512 = !DILocation(line: 657, column: 16, scope: !1509)
!1513 = !DILocation(line: 659, column: 20, scope: !1509)
!1514 = !DILocation(line: 659, column: 29, scope: !1509)
!1515 = !DILocation(line: 659, column: 7, scope: !1509)
!1516 = !DILocation(line: 660, column: 22, scope: !1509)
!1517 = !DILocation(line: 660, column: 7, scope: !1509)
!1518 = !DILocation(line: 660, column: 16, scope: !1509)
!1519 = !DILocation(line: 660, column: 20, scope: !1509)
!1520 = !DILocation(line: 661, column: 24, scope: !1509)
!1521 = !DILocation(line: 661, column: 7, scope: !1509)
!1522 = !DILocation(line: 661, column: 16, scope: !1509)
!1523 = !DILocation(line: 661, column: 22, scope: !1509)
!1524 = !DILocation(line: 662, column: 23, scope: !1509)
!1525 = !DILocation(line: 662, column: 7, scope: !1509)
!1526 = !DILocation(line: 662, column: 16, scope: !1509)
!1527 = !DILocation(line: 662, column: 21, scope: !1509)
!1528 = !DILocation(line: 663, column: 4, scope: !1509)
!1529 = !DILocation(line: 655, column: 45, scope: !1504)
!1530 = !DILocation(line: 655, column: 56, scope: !1504)
!1531 = !DILocation(line: 655, column: 4, scope: !1504)
!1532 = distinct !{!1532, !1507, !1533}
!1533 = !DILocation(line: 663, column: 4, scope: !1499)
!1534 = !DILocation(line: 686, column: 22, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1413, file: !3, line: 685, column: 4)
!1536 = !DILocation(line: 686, column: 7, scope: !1535)
!1537 = !DILocation(line: 719, column: 17, scope: !1413)
!1538 = !DILocation(line: 719, column: 26, scope: !1413)
!1539 = !DILocation(line: 719, column: 36, scope: !1413)
!1540 = !DILocation(line: 719, column: 45, scope: !1413)
!1541 = !DILocation(line: 719, column: 4, scope: !1413)
!1542 = !DILocation(line: 722, column: 8, scope: !1543)
!1543 = distinct !DILexicalBlock(scope: !1413, file: !3, line: 722, column: 8)
!1544 = !DILocation(line: 722, column: 17, scope: !1543)
!1545 = !DILocation(line: 722, column: 28, scope: !1543)
!1546 = !DILocation(line: 722, column: 8, scope: !1413)
!1547 = !DILocation(line: 724, column: 11, scope: !1548)
!1548 = distinct !DILexicalBlock(scope: !1549, file: !3, line: 724, column: 11)
!1549 = distinct !DILexicalBlock(scope: !1543, file: !3, line: 723, column: 4)
!1550 = !DILocation(line: 724, column: 20, scope: !1548)
!1551 = !DILocation(line: 724, column: 28, scope: !1548)
!1552 = !DILocation(line: 724, column: 32, scope: !1548)
!1553 = !DILocation(line: 724, column: 42, scope: !1548)
!1554 = !DILocation(line: 724, column: 48, scope: !1548)
!1555 = !DILocation(line: 724, column: 11, scope: !1549)
!1556 = !DILocation(line: 726, column: 14, scope: !1557)
!1557 = distinct !DILexicalBlock(scope: !1558, file: !3, line: 726, column: 14)
!1558 = distinct !DILexicalBlock(scope: !1548, file: !3, line: 725, column: 7)
!1559 = !DILocation(line: 726, column: 23, scope: !1557)
!1560 = !DILocation(line: 726, column: 48, scope: !1557)
!1561 = !DILocation(line: 726, column: 35, scope: !1557)
!1562 = !DILocation(line: 726, column: 33, scope: !1557)
!1563 = !DILocation(line: 726, column: 14, scope: !1558)
!1564 = !DILocation(line: 728, column: 25, scope: !1565)
!1565 = distinct !DILexicalBlock(scope: !1557, file: !3, line: 727, column: 10)
!1566 = !DILocation(line: 728, column: 13, scope: !1565)
!1567 = !DILocation(line: 729, column: 47, scope: !1565)
!1568 = !DILocation(line: 729, column: 34, scope: !1565)
!1569 = !DILocation(line: 729, column: 13, scope: !1565)
!1570 = !DILocation(line: 729, column: 22, scope: !1565)
!1571 = !DILocation(line: 729, column: 32, scope: !1565)
!1572 = !DILocation(line: 730, column: 10, scope: !1565)
!1573 = !DILocation(line: 732, column: 14, scope: !1574)
!1574 = distinct !DILexicalBlock(scope: !1558, file: !3, line: 732, column: 14)
!1575 = !DILocation(line: 732, column: 24, scope: !1574)
!1576 = !DILocation(line: 732, column: 49, scope: !1574)
!1577 = !DILocation(line: 732, column: 36, scope: !1574)
!1578 = !DILocation(line: 732, column: 34, scope: !1574)
!1579 = !DILocation(line: 732, column: 14, scope: !1558)
!1580 = !DILocation(line: 734, column: 25, scope: !1581)
!1581 = distinct !DILexicalBlock(scope: !1574, file: !3, line: 733, column: 10)
!1582 = !DILocation(line: 734, column: 13, scope: !1581)
!1583 = !DILocation(line: 735, column: 48, scope: !1581)
!1584 = !DILocation(line: 735, column: 35, scope: !1581)
!1585 = !DILocation(line: 735, column: 13, scope: !1581)
!1586 = !DILocation(line: 735, column: 23, scope: !1581)
!1587 = !DILocation(line: 735, column: 33, scope: !1581)
!1588 = !DILocation(line: 736, column: 10, scope: !1581)
!1589 = !DILocation(line: 737, column: 7, scope: !1558)
!1590 = !DILocation(line: 738, column: 4, scope: !1549)
!1591 = !DILocation(line: 741, column: 1, scope: !1413)
!1592 = distinct !DISubprogram(name: "png_handle_IEND", scope: !3, file: !3, line: 744, type: !1268, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!1593 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1592, file: !3, line: 744, type: !6)
!1594 = !DILocation(line: 744, column: 29, scope: !1592)
!1595 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !1592, file: !3, line: 744, type: !258)
!1596 = !DILocation(line: 744, column: 48, scope: !1592)
!1597 = !DILocalVariable(name: "length", arg: 3, scope: !1592, file: !3, line: 744, type: !85)
!1598 = !DILocation(line: 744, column: 70, scope: !1592)
!1599 = !DILocation(line: 748, column: 10, scope: !1600)
!1600 = distinct !DILexicalBlock(scope: !1592, file: !3, line: 748, column: 8)
!1601 = !DILocation(line: 748, column: 19, scope: !1600)
!1602 = !DILocation(line: 748, column: 24, scope: !1600)
!1603 = !DILocation(line: 748, column: 41, scope: !1600)
!1604 = !DILocation(line: 748, column: 46, scope: !1600)
!1605 = !DILocation(line: 748, column: 55, scope: !1600)
!1606 = !DILocation(line: 748, column: 60, scope: !1600)
!1607 = !DILocation(line: 748, column: 8, scope: !1592)
!1608 = !DILocation(line: 750, column: 17, scope: !1609)
!1609 = distinct !DILexicalBlock(scope: !1600, file: !3, line: 749, column: 4)
!1610 = !DILocation(line: 750, column: 7, scope: !1609)
!1611 = !DILocation(line: 753, column: 4, scope: !1592)
!1612 = !DILocation(line: 753, column: 13, scope: !1592)
!1613 = !DILocation(line: 753, column: 18, scope: !1592)
!1614 = !DILocation(line: 755, column: 8, scope: !1615)
!1615 = distinct !DILexicalBlock(scope: !1592, file: !3, line: 755, column: 8)
!1616 = !DILocation(line: 755, column: 15, scope: !1615)
!1617 = !DILocation(line: 755, column: 8, scope: !1592)
!1618 = !DILocation(line: 757, column: 19, scope: !1619)
!1619 = distinct !DILexicalBlock(scope: !1615, file: !3, line: 756, column: 4)
!1620 = !DILocation(line: 757, column: 7, scope: !1619)
!1621 = !DILocation(line: 758, column: 4, scope: !1619)
!1622 = !DILocation(line: 760, column: 19, scope: !1592)
!1623 = !DILocation(line: 760, column: 28, scope: !1592)
!1624 = !DILocation(line: 760, column: 4, scope: !1592)
!1625 = !DILocation(line: 762, column: 4, scope: !1592)
!1626 = !DILocation(line: 763, column: 1, scope: !1592)
!1627 = distinct !DISubprogram(name: "png_handle_gAMA", scope: !3, file: !3, line: 767, type: !1268, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!1628 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1627, file: !3, line: 767, type: !6)
!1629 = !DILocation(line: 767, column: 29, scope: !1627)
!1630 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !1627, file: !3, line: 767, type: !258)
!1631 = !DILocation(line: 767, column: 48, scope: !1627)
!1632 = !DILocalVariable(name: "length", arg: 3, scope: !1627, file: !3, line: 767, type: !85)
!1633 = !DILocation(line: 767, column: 70, scope: !1627)
!1634 = !DILocalVariable(name: "igamma", scope: !1627, file: !3, line: 769, type: !203)
!1635 = !DILocation(line: 769, column: 20, scope: !1627)
!1636 = !DILocalVariable(name: "buf", scope: !1627, file: !3, line: 770, type: !854)
!1637 = !DILocation(line: 770, column: 13, scope: !1627)
!1638 = !DILocation(line: 774, column: 10, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1627, file: !3, line: 774, column: 8)
!1640 = !DILocation(line: 774, column: 19, scope: !1639)
!1641 = !DILocation(line: 774, column: 24, scope: !1639)
!1642 = !DILocation(line: 774, column: 8, scope: !1627)
!1643 = !DILocation(line: 775, column: 17, scope: !1639)
!1644 = !DILocation(line: 775, column: 7, scope: !1639)
!1645 = !DILocation(line: 777, column: 13, scope: !1646)
!1646 = distinct !DILexicalBlock(scope: !1639, file: !3, line: 777, column: 13)
!1647 = !DILocation(line: 777, column: 22, scope: !1646)
!1648 = !DILocation(line: 777, column: 27, scope: !1646)
!1649 = !DILocation(line: 777, column: 13, scope: !1639)
!1650 = !DILocation(line: 779, column: 19, scope: !1651)
!1651 = distinct !DILexicalBlock(scope: !1646, file: !3, line: 778, column: 4)
!1652 = !DILocation(line: 779, column: 7, scope: !1651)
!1653 = !DILocation(line: 780, column: 22, scope: !1651)
!1654 = !DILocation(line: 780, column: 31, scope: !1651)
!1655 = !DILocation(line: 780, column: 7, scope: !1651)
!1656 = !DILocation(line: 781, column: 7, scope: !1651)
!1657 = !DILocation(line: 784, column: 13, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1646, file: !3, line: 784, column: 13)
!1659 = !DILocation(line: 784, column: 22, scope: !1658)
!1660 = !DILocation(line: 784, column: 27, scope: !1658)
!1661 = !DILocation(line: 784, column: 13, scope: !1646)
!1662 = !DILocation(line: 786, column: 19, scope: !1658)
!1663 = !DILocation(line: 786, column: 7, scope: !1658)
!1664 = !DILocation(line: 788, column: 8, scope: !1665)
!1665 = distinct !DILexicalBlock(scope: !1627, file: !3, line: 788, column: 8)
!1666 = !DILocation(line: 788, column: 17, scope: !1665)
!1667 = !DILocation(line: 788, column: 25, scope: !1665)
!1668 = !DILocation(line: 788, column: 29, scope: !1665)
!1669 = !DILocation(line: 788, column: 39, scope: !1665)
!1670 = !DILocation(line: 788, column: 45, scope: !1665)
!1671 = !DILocation(line: 790, column: 8, scope: !1665)
!1672 = !DILocation(line: 790, column: 13, scope: !1665)
!1673 = !DILocation(line: 790, column: 23, scope: !1665)
!1674 = !DILocation(line: 790, column: 29, scope: !1665)
!1675 = !DILocation(line: 788, column: 8, scope: !1627)
!1676 = !DILocation(line: 794, column: 19, scope: !1677)
!1677 = distinct !DILexicalBlock(scope: !1665, file: !3, line: 793, column: 4)
!1678 = !DILocation(line: 794, column: 7, scope: !1677)
!1679 = !DILocation(line: 795, column: 22, scope: !1677)
!1680 = !DILocation(line: 795, column: 31, scope: !1677)
!1681 = !DILocation(line: 795, column: 7, scope: !1677)
!1682 = !DILocation(line: 796, column: 7, scope: !1677)
!1683 = !DILocation(line: 799, column: 8, scope: !1684)
!1684 = distinct !DILexicalBlock(scope: !1627, file: !3, line: 799, column: 8)
!1685 = !DILocation(line: 799, column: 15, scope: !1684)
!1686 = !DILocation(line: 799, column: 8, scope: !1627)
!1687 = !DILocation(line: 801, column: 19, scope: !1688)
!1688 = distinct !DILexicalBlock(scope: !1684, file: !3, line: 800, column: 4)
!1689 = !DILocation(line: 801, column: 7, scope: !1688)
!1690 = !DILocation(line: 802, column: 22, scope: !1688)
!1691 = !DILocation(line: 802, column: 31, scope: !1688)
!1692 = !DILocation(line: 802, column: 7, scope: !1688)
!1693 = !DILocation(line: 803, column: 7, scope: !1688)
!1694 = !DILocation(line: 806, column: 17, scope: !1627)
!1695 = !DILocation(line: 806, column: 26, scope: !1627)
!1696 = !DILocation(line: 806, column: 4, scope: !1627)
!1697 = !DILocation(line: 808, column: 23, scope: !1698)
!1698 = distinct !DILexicalBlock(scope: !1627, file: !3, line: 808, column: 8)
!1699 = !DILocation(line: 808, column: 8, scope: !1698)
!1700 = !DILocation(line: 808, column: 8, scope: !1627)
!1701 = !DILocation(line: 809, column: 7, scope: !1698)
!1702 = !DILocation(line: 811, column: 39, scope: !1627)
!1703 = !DILocation(line: 811, column: 13, scope: !1627)
!1704 = !DILocation(line: 811, column: 11, scope: !1627)
!1705 = !DILocation(line: 814, column: 8, scope: !1706)
!1706 = distinct !DILexicalBlock(scope: !1627, file: !3, line: 814, column: 8)
!1707 = !DILocation(line: 814, column: 15, scope: !1706)
!1708 = !DILocation(line: 814, column: 8, scope: !1627)
!1709 = !DILocation(line: 816, column: 19, scope: !1710)
!1710 = distinct !DILexicalBlock(scope: !1706, file: !3, line: 815, column: 4)
!1711 = !DILocation(line: 816, column: 7, scope: !1710)
!1712 = !DILocation(line: 819, column: 7, scope: !1710)
!1713 = !DILocation(line: 823, column: 8, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !1627, file: !3, line: 823, column: 8)
!1715 = !DILocation(line: 823, column: 17, scope: !1714)
!1716 = !DILocation(line: 823, column: 25, scope: !1714)
!1717 = !DILocation(line: 823, column: 29, scope: !1714)
!1718 = !DILocation(line: 823, column: 39, scope: !1714)
!1719 = !DILocation(line: 823, column: 45, scope: !1714)
!1720 = !DILocation(line: 823, column: 8, scope: !1627)
!1721 = !DILocation(line: 825, column: 11, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !1723, file: !3, line: 825, column: 11)
!1723 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 824, column: 4)
!1724 = !DILocation(line: 825, column: 11, scope: !1723)
!1725 = !DILocalVariable(name: "p", scope: !1726, file: !3, line: 827, type: !1038)
!1726 = distinct !DILexicalBlock(scope: !1722, file: !3, line: 826, column: 7)
!1727 = !DILocation(line: 827, column: 10, scope: !1726)
!1728 = !DILocation(line: 828, column: 39, scope: !1726)
!1729 = !DILocation(line: 828, column: 70, scope: !1726)
!1730 = !DILocation(line: 828, column: 10, scope: !1726)
!1731 = !DILocation(line: 829, column: 32, scope: !1726)
!1732 = !DILocation(line: 829, column: 41, scope: !1726)
!1733 = !DILocation(line: 829, column: 10, scope: !1726)
!1734 = !DILocation(line: 831, column: 10, scope: !1726)
!1735 = !DILocation(line: 833, column: 4, scope: !1723)
!1736 = !DILocation(line: 838, column: 21, scope: !1627)
!1737 = !DILocation(line: 838, column: 4, scope: !1627)
!1738 = !DILocation(line: 838, column: 13, scope: !1627)
!1739 = !DILocation(line: 838, column: 19, scope: !1627)
!1740 = !DILocation(line: 841, column: 23, scope: !1627)
!1741 = !DILocation(line: 841, column: 32, scope: !1627)
!1742 = !DILocation(line: 841, column: 42, scope: !1627)
!1743 = !DILocation(line: 841, column: 4, scope: !1627)
!1744 = !DILocation(line: 842, column: 1, scope: !1627)
!1745 = distinct !DISubprogram(name: "png_get_fixed_point", scope: !3, file: !3, line: 43, type: !1746, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !466, retainedNodes: !467)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{!203, !6, !461}
!1748 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1745, file: !3, line: 43, type: !6)
!1749 = !DILocation(line: 43, column: 33, scope: !1745)
!1750 = !DILocalVariable(name: "buf", arg: 2, scope: !1745, file: !3, line: 43, type: !461)
!1751 = !DILocation(line: 43, column: 58, scope: !1745)
!1752 = !DILocalVariable(name: "uval", scope: !1745, file: !3, line: 45, type: !85)
!1753 = !DILocation(line: 45, column: 16, scope: !1745)
!1754 = !DILocation(line: 45, column: 23, scope: !1745)
!1755 = !DILocation(line: 47, column: 8, scope: !1756)
!1756 = distinct !DILexicalBlock(scope: !1745, file: !3, line: 47, column: 8)
!1757 = !DILocation(line: 47, column: 13, scope: !1756)
!1758 = !DILocation(line: 47, column: 8, scope: !1745)
!1759 = !DILocation(line: 48, column: 31, scope: !1756)
!1760 = !DILocation(line: 48, column: 7, scope: !1756)
!1761 = !DILocation(line: 51, column: 8, scope: !1762)
!1762 = distinct !DILexicalBlock(scope: !1745, file: !3, line: 51, column: 8)
!1763 = !DILocation(line: 51, column: 16, scope: !1762)
!1764 = !DILocation(line: 51, column: 8, scope: !1745)
!1765 = !DILocation(line: 52, column: 19, scope: !1762)
!1766 = !DILocation(line: 52, column: 7, scope: !1762)
!1767 = !DILocation(line: 54, column: 4, scope: !1745)
!1768 = !DILocation(line: 55, column: 1, scope: !1745)
!1769 = distinct !DISubprogram(name: "png_handle_sBIT", scope: !3, file: !3, line: 847, type: !1268, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!1770 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1769, file: !3, line: 847, type: !6)
!1771 = !DILocation(line: 847, column: 29, scope: !1769)
!1772 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !1769, file: !3, line: 847, type: !258)
!1773 = !DILocation(line: 847, column: 48, scope: !1769)
!1774 = !DILocalVariable(name: "length", arg: 3, scope: !1769, file: !3, line: 847, type: !85)
!1775 = !DILocation(line: 847, column: 70, scope: !1769)
!1776 = !DILocalVariable(name: "truelen", scope: !1769, file: !3, line: 849, type: !69)
!1777 = !DILocation(line: 849, column: 15, scope: !1769)
!1778 = !DILocalVariable(name: "buf", scope: !1769, file: !3, line: 850, type: !854)
!1779 = !DILocation(line: 850, column: 13, scope: !1769)
!1780 = !DILocation(line: 854, column: 31, scope: !1769)
!1781 = !DILocation(line: 854, column: 38, scope: !1769)
!1782 = !DILocation(line: 854, column: 22, scope: !1769)
!1783 = !DILocation(line: 854, column: 29, scope: !1769)
!1784 = !DILocation(line: 854, column: 13, scope: !1769)
!1785 = !DILocation(line: 854, column: 20, scope: !1769)
!1786 = !DILocation(line: 854, column: 4, scope: !1769)
!1787 = !DILocation(line: 854, column: 11, scope: !1769)
!1788 = !DILocation(line: 856, column: 10, scope: !1789)
!1789 = distinct !DILexicalBlock(scope: !1769, file: !3, line: 856, column: 8)
!1790 = !DILocation(line: 856, column: 19, scope: !1789)
!1791 = !DILocation(line: 856, column: 24, scope: !1789)
!1792 = !DILocation(line: 856, column: 8, scope: !1769)
!1793 = !DILocation(line: 857, column: 17, scope: !1789)
!1794 = !DILocation(line: 857, column: 7, scope: !1789)
!1795 = !DILocation(line: 859, column: 13, scope: !1796)
!1796 = distinct !DILexicalBlock(scope: !1789, file: !3, line: 859, column: 13)
!1797 = !DILocation(line: 859, column: 22, scope: !1796)
!1798 = !DILocation(line: 859, column: 27, scope: !1796)
!1799 = !DILocation(line: 859, column: 13, scope: !1789)
!1800 = !DILocation(line: 861, column: 19, scope: !1801)
!1801 = distinct !DILexicalBlock(scope: !1796, file: !3, line: 860, column: 4)
!1802 = !DILocation(line: 861, column: 7, scope: !1801)
!1803 = !DILocation(line: 862, column: 22, scope: !1801)
!1804 = !DILocation(line: 862, column: 31, scope: !1801)
!1805 = !DILocation(line: 862, column: 7, scope: !1801)
!1806 = !DILocation(line: 863, column: 7, scope: !1801)
!1807 = !DILocation(line: 866, column: 13, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1796, file: !3, line: 866, column: 13)
!1809 = !DILocation(line: 866, column: 22, scope: !1808)
!1810 = !DILocation(line: 866, column: 27, scope: !1808)
!1811 = !DILocation(line: 866, column: 13, scope: !1796)
!1812 = !DILocation(line: 869, column: 19, scope: !1813)
!1813 = distinct !DILexicalBlock(scope: !1808, file: !3, line: 867, column: 4)
!1814 = !DILocation(line: 869, column: 7, scope: !1813)
!1815 = !DILocation(line: 870, column: 4, scope: !1813)
!1816 = !DILocation(line: 872, column: 8, scope: !1817)
!1817 = distinct !DILexicalBlock(scope: !1769, file: !3, line: 872, column: 8)
!1818 = !DILocation(line: 872, column: 17, scope: !1817)
!1819 = !DILocation(line: 872, column: 25, scope: !1817)
!1820 = !DILocation(line: 872, column: 29, scope: !1817)
!1821 = !DILocation(line: 872, column: 39, scope: !1817)
!1822 = !DILocation(line: 872, column: 45, scope: !1817)
!1823 = !DILocation(line: 872, column: 8, scope: !1769)
!1824 = !DILocation(line: 874, column: 19, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !1817, file: !3, line: 873, column: 4)
!1826 = !DILocation(line: 874, column: 7, scope: !1825)
!1827 = !DILocation(line: 875, column: 22, scope: !1825)
!1828 = !DILocation(line: 875, column: 31, scope: !1825)
!1829 = !DILocation(line: 875, column: 7, scope: !1825)
!1830 = !DILocation(line: 876, column: 7, scope: !1825)
!1831 = !DILocation(line: 879, column: 8, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !1769, file: !3, line: 879, column: 8)
!1833 = !DILocation(line: 879, column: 17, scope: !1832)
!1834 = !DILocation(line: 879, column: 28, scope: !1832)
!1835 = !DILocation(line: 879, column: 8, scope: !1769)
!1836 = !DILocation(line: 880, column: 15, scope: !1832)
!1837 = !DILocation(line: 880, column: 7, scope: !1832)
!1838 = !DILocation(line: 883, column: 29, scope: !1832)
!1839 = !DILocation(line: 883, column: 38, scope: !1832)
!1840 = !DILocation(line: 883, column: 17, scope: !1832)
!1841 = !DILocation(line: 883, column: 15, scope: !1832)
!1842 = !DILocation(line: 885, column: 8, scope: !1843)
!1843 = distinct !DILexicalBlock(scope: !1769, file: !3, line: 885, column: 8)
!1844 = !DILocation(line: 885, column: 18, scope: !1843)
!1845 = !DILocation(line: 885, column: 15, scope: !1843)
!1846 = !DILocation(line: 885, column: 26, scope: !1843)
!1847 = !DILocation(line: 885, column: 29, scope: !1843)
!1848 = !DILocation(line: 885, column: 36, scope: !1843)
!1849 = !DILocation(line: 885, column: 8, scope: !1769)
!1850 = !DILocation(line: 887, column: 19, scope: !1851)
!1851 = distinct !DILexicalBlock(scope: !1843, file: !3, line: 886, column: 4)
!1852 = !DILocation(line: 887, column: 7, scope: !1851)
!1853 = !DILocation(line: 888, column: 22, scope: !1851)
!1854 = !DILocation(line: 888, column: 31, scope: !1851)
!1855 = !DILocation(line: 888, column: 7, scope: !1851)
!1856 = !DILocation(line: 889, column: 7, scope: !1851)
!1857 = !DILocation(line: 892, column: 17, scope: !1769)
!1858 = !DILocation(line: 892, column: 26, scope: !1769)
!1859 = !DILocation(line: 892, column: 31, scope: !1769)
!1860 = !DILocation(line: 892, column: 4, scope: !1769)
!1861 = !DILocation(line: 894, column: 23, scope: !1862)
!1862 = distinct !DILexicalBlock(scope: !1769, file: !3, line: 894, column: 8)
!1863 = !DILocation(line: 894, column: 8, scope: !1862)
!1864 = !DILocation(line: 894, column: 8, scope: !1769)
!1865 = !DILocation(line: 895, column: 7, scope: !1862)
!1866 = !DILocation(line: 897, column: 8, scope: !1867)
!1867 = distinct !DILexicalBlock(scope: !1769, file: !3, line: 897, column: 8)
!1868 = !DILocation(line: 897, column: 17, scope: !1867)
!1869 = !DILocation(line: 897, column: 28, scope: !1867)
!1870 = !DILocation(line: 897, column: 8, scope: !1769)
!1871 = !DILocation(line: 899, column: 30, scope: !1872)
!1872 = distinct !DILexicalBlock(scope: !1867, file: !3, line: 898, column: 4)
!1873 = !DILocation(line: 899, column: 7, scope: !1872)
!1874 = !DILocation(line: 899, column: 16, scope: !1872)
!1875 = !DILocation(line: 899, column: 24, scope: !1872)
!1876 = !DILocation(line: 899, column: 28, scope: !1872)
!1877 = !DILocation(line: 900, column: 32, scope: !1872)
!1878 = !DILocation(line: 900, column: 7, scope: !1872)
!1879 = !DILocation(line: 900, column: 16, scope: !1872)
!1880 = !DILocation(line: 900, column: 24, scope: !1872)
!1881 = !DILocation(line: 900, column: 30, scope: !1872)
!1882 = !DILocation(line: 901, column: 31, scope: !1872)
!1883 = !DILocation(line: 901, column: 7, scope: !1872)
!1884 = !DILocation(line: 901, column: 16, scope: !1872)
!1885 = !DILocation(line: 901, column: 24, scope: !1872)
!1886 = !DILocation(line: 901, column: 29, scope: !1872)
!1887 = !DILocation(line: 902, column: 32, scope: !1872)
!1888 = !DILocation(line: 902, column: 7, scope: !1872)
!1889 = !DILocation(line: 902, column: 16, scope: !1872)
!1890 = !DILocation(line: 902, column: 24, scope: !1872)
!1891 = !DILocation(line: 902, column: 30, scope: !1872)
!1892 = !DILocation(line: 903, column: 4, scope: !1872)
!1893 = !DILocation(line: 907, column: 31, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1867, file: !3, line: 906, column: 4)
!1895 = !DILocation(line: 907, column: 7, scope: !1894)
!1896 = !DILocation(line: 907, column: 16, scope: !1894)
!1897 = !DILocation(line: 907, column: 24, scope: !1894)
!1898 = !DILocation(line: 907, column: 29, scope: !1894)
!1899 = !DILocation(line: 908, column: 30, scope: !1894)
!1900 = !DILocation(line: 908, column: 7, scope: !1894)
!1901 = !DILocation(line: 908, column: 16, scope: !1894)
!1902 = !DILocation(line: 908, column: 24, scope: !1894)
!1903 = !DILocation(line: 908, column: 28, scope: !1894)
!1904 = !DILocation(line: 909, column: 32, scope: !1894)
!1905 = !DILocation(line: 909, column: 7, scope: !1894)
!1906 = !DILocation(line: 909, column: 16, scope: !1894)
!1907 = !DILocation(line: 909, column: 24, scope: !1894)
!1908 = !DILocation(line: 909, column: 30, scope: !1894)
!1909 = !DILocation(line: 910, column: 31, scope: !1894)
!1910 = !DILocation(line: 910, column: 7, scope: !1894)
!1911 = !DILocation(line: 910, column: 16, scope: !1894)
!1912 = !DILocation(line: 910, column: 24, scope: !1894)
!1913 = !DILocation(line: 910, column: 29, scope: !1894)
!1914 = !DILocation(line: 911, column: 32, scope: !1894)
!1915 = !DILocation(line: 911, column: 7, scope: !1894)
!1916 = !DILocation(line: 911, column: 16, scope: !1894)
!1917 = !DILocation(line: 911, column: 24, scope: !1894)
!1918 = !DILocation(line: 911, column: 30, scope: !1894)
!1919 = !DILocation(line: 914, column: 17, scope: !1769)
!1920 = !DILocation(line: 914, column: 26, scope: !1769)
!1921 = !DILocation(line: 914, column: 38, scope: !1769)
!1922 = !DILocation(line: 914, column: 47, scope: !1769)
!1923 = !DILocation(line: 914, column: 4, scope: !1769)
!1924 = !DILocation(line: 915, column: 1, scope: !1769)
!1925 = distinct !DISubprogram(name: "png_handle_cHRM", scope: !3, file: !3, line: 920, type: !1268, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!1926 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !1925, file: !3, line: 920, type: !6)
!1927 = !DILocation(line: 920, column: 29, scope: !1925)
!1928 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !1925, file: !3, line: 920, type: !258)
!1929 = !DILocation(line: 920, column: 48, scope: !1925)
!1930 = !DILocalVariable(name: "length", arg: 3, scope: !1925, file: !3, line: 920, type: !85)
!1931 = !DILocation(line: 920, column: 70, scope: !1925)
!1932 = !DILocalVariable(name: "buf", scope: !1925, file: !3, line: 922, type: !1933)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 256, elements: !1934)
!1934 = !{!1042}
!1935 = !DILocation(line: 922, column: 13, scope: !1925)
!1936 = !DILocalVariable(name: "x_white", scope: !1925, file: !3, line: 923, type: !203)
!1937 = !DILocation(line: 923, column: 20, scope: !1925)
!1938 = !DILocalVariable(name: "y_white", scope: !1925, file: !3, line: 923, type: !203)
!1939 = !DILocation(line: 923, column: 29, scope: !1925)
!1940 = !DILocalVariable(name: "x_red", scope: !1925, file: !3, line: 923, type: !203)
!1941 = !DILocation(line: 923, column: 38, scope: !1925)
!1942 = !DILocalVariable(name: "y_red", scope: !1925, file: !3, line: 923, type: !203)
!1943 = !DILocation(line: 923, column: 45, scope: !1925)
!1944 = !DILocalVariable(name: "x_green", scope: !1925, file: !3, line: 923, type: !203)
!1945 = !DILocation(line: 923, column: 52, scope: !1925)
!1946 = !DILocalVariable(name: "y_green", scope: !1925, file: !3, line: 923, type: !203)
!1947 = !DILocation(line: 923, column: 61, scope: !1925)
!1948 = !DILocalVariable(name: "x_blue", scope: !1925, file: !3, line: 923, type: !203)
!1949 = !DILocation(line: 923, column: 70, scope: !1925)
!1950 = !DILocalVariable(name: "y_blue", scope: !1925, file: !3, line: 924, type: !203)
!1951 = !DILocation(line: 924, column: 7, scope: !1925)
!1952 = !DILocation(line: 928, column: 10, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 928, column: 8)
!1954 = !DILocation(line: 928, column: 19, scope: !1953)
!1955 = !DILocation(line: 928, column: 24, scope: !1953)
!1956 = !DILocation(line: 928, column: 8, scope: !1925)
!1957 = !DILocation(line: 929, column: 17, scope: !1953)
!1958 = !DILocation(line: 929, column: 7, scope: !1953)
!1959 = !DILocation(line: 931, column: 13, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1953, file: !3, line: 931, column: 13)
!1961 = !DILocation(line: 931, column: 22, scope: !1960)
!1962 = !DILocation(line: 931, column: 27, scope: !1960)
!1963 = !DILocation(line: 931, column: 13, scope: !1953)
!1964 = !DILocation(line: 933, column: 19, scope: !1965)
!1965 = distinct !DILexicalBlock(scope: !1960, file: !3, line: 932, column: 4)
!1966 = !DILocation(line: 933, column: 7, scope: !1965)
!1967 = !DILocation(line: 934, column: 22, scope: !1965)
!1968 = !DILocation(line: 934, column: 31, scope: !1965)
!1969 = !DILocation(line: 934, column: 7, scope: !1965)
!1970 = !DILocation(line: 935, column: 7, scope: !1965)
!1971 = !DILocation(line: 938, column: 13, scope: !1972)
!1972 = distinct !DILexicalBlock(scope: !1960, file: !3, line: 938, column: 13)
!1973 = !DILocation(line: 938, column: 22, scope: !1972)
!1974 = !DILocation(line: 938, column: 27, scope: !1972)
!1975 = !DILocation(line: 938, column: 13, scope: !1960)
!1976 = !DILocation(line: 940, column: 19, scope: !1972)
!1977 = !DILocation(line: 940, column: 7, scope: !1972)
!1978 = !DILocation(line: 942, column: 8, scope: !1979)
!1979 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 942, column: 8)
!1980 = !DILocation(line: 942, column: 17, scope: !1979)
!1981 = !DILocation(line: 942, column: 25, scope: !1979)
!1982 = !DILocation(line: 942, column: 29, scope: !1979)
!1983 = !DILocation(line: 942, column: 39, scope: !1979)
!1984 = !DILocation(line: 942, column: 45, scope: !1979)
!1985 = !DILocation(line: 944, column: 8, scope: !1979)
!1986 = !DILocation(line: 944, column: 13, scope: !1979)
!1987 = !DILocation(line: 944, column: 23, scope: !1979)
!1988 = !DILocation(line: 944, column: 29, scope: !1979)
!1989 = !DILocation(line: 942, column: 8, scope: !1925)
!1990 = !DILocation(line: 948, column: 19, scope: !1991)
!1991 = distinct !DILexicalBlock(scope: !1979, file: !3, line: 947, column: 4)
!1992 = !DILocation(line: 948, column: 7, scope: !1991)
!1993 = !DILocation(line: 949, column: 22, scope: !1991)
!1994 = !DILocation(line: 949, column: 31, scope: !1991)
!1995 = !DILocation(line: 949, column: 7, scope: !1991)
!1996 = !DILocation(line: 950, column: 7, scope: !1991)
!1997 = !DILocation(line: 953, column: 8, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 953, column: 8)
!1999 = !DILocation(line: 953, column: 15, scope: !1998)
!2000 = !DILocation(line: 953, column: 8, scope: !1925)
!2001 = !DILocation(line: 955, column: 19, scope: !2002)
!2002 = distinct !DILexicalBlock(scope: !1998, file: !3, line: 954, column: 4)
!2003 = !DILocation(line: 955, column: 7, scope: !2002)
!2004 = !DILocation(line: 956, column: 22, scope: !2002)
!2005 = !DILocation(line: 956, column: 31, scope: !2002)
!2006 = !DILocation(line: 956, column: 7, scope: !2002)
!2007 = !DILocation(line: 957, column: 7, scope: !2002)
!2008 = !DILocation(line: 960, column: 17, scope: !1925)
!2009 = !DILocation(line: 960, column: 26, scope: !1925)
!2010 = !DILocation(line: 960, column: 4, scope: !1925)
!2011 = !DILocation(line: 962, column: 23, scope: !2012)
!2012 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 962, column: 8)
!2013 = !DILocation(line: 962, column: 8, scope: !2012)
!2014 = !DILocation(line: 962, column: 8, scope: !1925)
!2015 = !DILocation(line: 963, column: 7, scope: !2012)
!2016 = !DILocation(line: 965, column: 40, scope: !1925)
!2017 = !DILocation(line: 965, column: 14, scope: !1925)
!2018 = !DILocation(line: 965, column: 12, scope: !1925)
!2019 = !DILocation(line: 966, column: 40, scope: !1925)
!2020 = !DILocation(line: 966, column: 44, scope: !1925)
!2021 = !DILocation(line: 966, column: 14, scope: !1925)
!2022 = !DILocation(line: 966, column: 12, scope: !1925)
!2023 = !DILocation(line: 967, column: 40, scope: !1925)
!2024 = !DILocation(line: 967, column: 44, scope: !1925)
!2025 = !DILocation(line: 967, column: 14, scope: !1925)
!2026 = !DILocation(line: 967, column: 12, scope: !1925)
!2027 = !DILocation(line: 968, column: 40, scope: !1925)
!2028 = !DILocation(line: 968, column: 44, scope: !1925)
!2029 = !DILocation(line: 968, column: 14, scope: !1925)
!2030 = !DILocation(line: 968, column: 12, scope: !1925)
!2031 = !DILocation(line: 969, column: 40, scope: !1925)
!2032 = !DILocation(line: 969, column: 44, scope: !1925)
!2033 = !DILocation(line: 969, column: 14, scope: !1925)
!2034 = !DILocation(line: 969, column: 12, scope: !1925)
!2035 = !DILocation(line: 970, column: 40, scope: !1925)
!2036 = !DILocation(line: 970, column: 44, scope: !1925)
!2037 = !DILocation(line: 970, column: 14, scope: !1925)
!2038 = !DILocation(line: 970, column: 12, scope: !1925)
!2039 = !DILocation(line: 971, column: 40, scope: !1925)
!2040 = !DILocation(line: 971, column: 44, scope: !1925)
!2041 = !DILocation(line: 971, column: 14, scope: !1925)
!2042 = !DILocation(line: 971, column: 12, scope: !1925)
!2043 = !DILocation(line: 972, column: 40, scope: !1925)
!2044 = !DILocation(line: 972, column: 44, scope: !1925)
!2045 = !DILocation(line: 972, column: 14, scope: !1925)
!2046 = !DILocation(line: 972, column: 12, scope: !1925)
!2047 = !DILocation(line: 974, column: 8, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 974, column: 8)
!2049 = !DILocation(line: 974, column: 16, scope: !2048)
!2050 = !DILocation(line: 974, column: 35, scope: !2048)
!2051 = !DILocation(line: 975, column: 8, scope: !2048)
!2052 = !DILocation(line: 975, column: 16, scope: !2048)
!2053 = !DILocation(line: 975, column: 35, scope: !2048)
!2054 = !DILocation(line: 976, column: 8, scope: !2048)
!2055 = !DILocation(line: 976, column: 16, scope: !2048)
!2056 = !DILocation(line: 976, column: 35, scope: !2048)
!2057 = !DILocation(line: 977, column: 8, scope: !2048)
!2058 = !DILocation(line: 977, column: 16, scope: !2048)
!2059 = !DILocation(line: 977, column: 35, scope: !2048)
!2060 = !DILocation(line: 978, column: 8, scope: !2048)
!2061 = !DILocation(line: 978, column: 16, scope: !2048)
!2062 = !DILocation(line: 978, column: 35, scope: !2048)
!2063 = !DILocation(line: 979, column: 8, scope: !2048)
!2064 = !DILocation(line: 979, column: 16, scope: !2048)
!2065 = !DILocation(line: 979, column: 35, scope: !2048)
!2066 = !DILocation(line: 980, column: 8, scope: !2048)
!2067 = !DILocation(line: 980, column: 16, scope: !2048)
!2068 = !DILocation(line: 980, column: 35, scope: !2048)
!2069 = !DILocation(line: 981, column: 8, scope: !2048)
!2070 = !DILocation(line: 981, column: 16, scope: !2048)
!2071 = !DILocation(line: 974, column: 8, scope: !1925)
!2072 = !DILocation(line: 983, column: 19, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2048, file: !3, line: 982, column: 4)
!2074 = !DILocation(line: 983, column: 7, scope: !2073)
!2075 = !DILocation(line: 984, column: 7, scope: !2073)
!2076 = !DILocation(line: 988, column: 9, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 988, column: 8)
!2078 = !DILocation(line: 988, column: 18, scope: !2077)
!2079 = !DILocation(line: 988, column: 27, scope: !2077)
!2080 = !DILocation(line: 988, column: 31, scope: !2077)
!2081 = !DILocation(line: 988, column: 41, scope: !2077)
!2082 = !DILocation(line: 988, column: 47, scope: !2077)
!2083 = !DILocation(line: 988, column: 8, scope: !1925)
!2084 = !DILocation(line: 990, column: 11, scope: !2085)
!2085 = distinct !DILexicalBlock(scope: !2086, file: !3, line: 990, column: 11)
!2086 = distinct !DILexicalBlock(scope: !2077, file: !3, line: 989, column: 4)
!2087 = !DILocation(line: 990, column: 51, scope: !2085)
!2088 = !DILocation(line: 991, column: 11, scope: !2085)
!2089 = !DILocation(line: 991, column: 51, scope: !2085)
!2090 = !DILocation(line: 992, column: 11, scope: !2085)
!2091 = !DILocation(line: 992, column: 51, scope: !2085)
!2092 = !DILocation(line: 993, column: 11, scope: !2085)
!2093 = !DILocation(line: 993, column: 51, scope: !2085)
!2094 = !DILocation(line: 994, column: 11, scope: !2085)
!2095 = !DILocation(line: 994, column: 51, scope: !2085)
!2096 = !DILocation(line: 995, column: 11, scope: !2085)
!2097 = !DILocation(line: 995, column: 51, scope: !2085)
!2098 = !DILocation(line: 996, column: 11, scope: !2085)
!2099 = !DILocation(line: 996, column: 51, scope: !2085)
!2100 = !DILocation(line: 997, column: 11, scope: !2085)
!2101 = !DILocation(line: 990, column: 11, scope: !2086)
!2102 = !DILocalVariable(name: "p", scope: !2103, file: !3, line: 999, type: !1038)
!2103 = distinct !DILexicalBlock(scope: !2085, file: !3, line: 998, column: 7)
!2104 = !DILocation(line: 999, column: 10, scope: !2103)
!2105 = !DILocation(line: 1001, column: 39, scope: !2103)
!2106 = !DILocation(line: 1001, column: 70, scope: !2103)
!2107 = !DILocation(line: 1001, column: 10, scope: !2103)
!2108 = !DILocation(line: 1002, column: 39, scope: !2103)
!2109 = !DILocation(line: 1002, column: 70, scope: !2103)
!2110 = !DILocation(line: 1002, column: 10, scope: !2103)
!2111 = !DILocation(line: 1003, column: 39, scope: !2103)
!2112 = !DILocation(line: 1003, column: 70, scope: !2103)
!2113 = !DILocation(line: 1003, column: 10, scope: !2103)
!2114 = !DILocation(line: 1004, column: 39, scope: !2103)
!2115 = !DILocation(line: 1004, column: 70, scope: !2103)
!2116 = !DILocation(line: 1004, column: 10, scope: !2103)
!2117 = !DILocation(line: 1005, column: 39, scope: !2103)
!2118 = !DILocation(line: 1005, column: 70, scope: !2103)
!2119 = !DILocation(line: 1005, column: 10, scope: !2103)
!2120 = !DILocation(line: 1006, column: 39, scope: !2103)
!2121 = !DILocation(line: 1006, column: 70, scope: !2103)
!2122 = !DILocation(line: 1006, column: 10, scope: !2103)
!2123 = !DILocation(line: 1007, column: 39, scope: !2103)
!2124 = !DILocation(line: 1007, column: 70, scope: !2103)
!2125 = !DILocation(line: 1007, column: 10, scope: !2103)
!2126 = !DILocation(line: 1008, column: 39, scope: !2103)
!2127 = !DILocation(line: 1008, column: 70, scope: !2103)
!2128 = !DILocation(line: 1008, column: 10, scope: !2103)
!2129 = !DILocation(line: 1010, column: 32, scope: !2103)
!2130 = !DILocation(line: 1010, column: 41, scope: !2103)
!2131 = !DILocation(line: 1010, column: 10, scope: !2103)
!2132 = !DILocation(line: 1013, column: 7, scope: !2103)
!2133 = !DILocation(line: 1014, column: 7, scope: !2086)
!2134 = !DILocation(line: 1023, column: 9, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !1925, file: !3, line: 1023, column: 8)
!2136 = !DILocation(line: 1023, column: 18, scope: !2135)
!2137 = !DILocation(line: 1023, column: 8, scope: !1925)
!2138 = !DILocalVariable(name: "XYZ", scope: !2139, file: !3, line: 1028, type: !2140)
!2139 = distinct !DILexicalBlock(scope: !2135, file: !3, line: 1024, column: 4)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_XYZ", file: !1039, line: 1381, baseType: !2141)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_XYZ", file: !1039, line: 1376, size: 288, elements: !2142)
!2142 = !{!2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "redX", scope: !2141, file: !1039, line: 1378, baseType: !203, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "redY", scope: !2141, file: !1039, line: 1378, baseType: !203, size: 32, offset: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "redZ", scope: !2141, file: !1039, line: 1378, baseType: !203, size: 32, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "greenX", scope: !2141, file: !1039, line: 1379, baseType: !203, size: 32, offset: 96)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "greenY", scope: !2141, file: !1039, line: 1379, baseType: !203, size: 32, offset: 128)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "greenZ", scope: !2141, file: !1039, line: 1379, baseType: !203, size: 32, offset: 160)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "blueX", scope: !2141, file: !1039, line: 1380, baseType: !203, size: 32, offset: 192)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "blueY", scope: !2141, file: !1039, line: 1380, baseType: !203, size: 32, offset: 224)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "blueZ", scope: !2141, file: !1039, line: 1380, baseType: !203, size: 32, offset: 256)
!2152 = !DILocation(line: 1028, column: 15, scope: !2139)
!2153 = !DILocalVariable(name: "xy", scope: !2139, file: !3, line: 1029, type: !2154)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "png_xy", file: !1039, line: 1374, baseType: !2155)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "png_xy", file: !1039, line: 1368, size: 256, elements: !2156)
!2156 = !{!2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "redx", scope: !2155, file: !1039, line: 1370, baseType: !203, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "redy", scope: !2155, file: !1039, line: 1370, baseType: !203, size: 32, offset: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "greenx", scope: !2155, file: !1039, line: 1371, baseType: !203, size: 32, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "greeny", scope: !2155, file: !1039, line: 1371, baseType: !203, size: 32, offset: 96)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "bluex", scope: !2155, file: !1039, line: 1372, baseType: !203, size: 32, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "bluey", scope: !2155, file: !1039, line: 1372, baseType: !203, size: 32, offset: 160)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "whitex", scope: !2155, file: !1039, line: 1373, baseType: !203, size: 32, offset: 192)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "whitey", scope: !2155, file: !1039, line: 1373, baseType: !203, size: 32, offset: 224)
!2165 = !DILocation(line: 1029, column: 14, scope: !2139)
!2166 = !DILocation(line: 1031, column: 17, scope: !2139)
!2167 = !DILocation(line: 1031, column: 10, scope: !2139)
!2168 = !DILocation(line: 1031, column: 15, scope: !2139)
!2169 = !DILocation(line: 1032, column: 17, scope: !2139)
!2170 = !DILocation(line: 1032, column: 10, scope: !2139)
!2171 = !DILocation(line: 1032, column: 15, scope: !2139)
!2172 = !DILocation(line: 1033, column: 19, scope: !2139)
!2173 = !DILocation(line: 1033, column: 10, scope: !2139)
!2174 = !DILocation(line: 1033, column: 17, scope: !2139)
!2175 = !DILocation(line: 1034, column: 19, scope: !2139)
!2176 = !DILocation(line: 1034, column: 10, scope: !2139)
!2177 = !DILocation(line: 1034, column: 17, scope: !2139)
!2178 = !DILocation(line: 1035, column: 18, scope: !2139)
!2179 = !DILocation(line: 1035, column: 10, scope: !2139)
!2180 = !DILocation(line: 1035, column: 16, scope: !2139)
!2181 = !DILocation(line: 1036, column: 18, scope: !2139)
!2182 = !DILocation(line: 1036, column: 10, scope: !2139)
!2183 = !DILocation(line: 1036, column: 16, scope: !2139)
!2184 = !DILocation(line: 1037, column: 19, scope: !2139)
!2185 = !DILocation(line: 1037, column: 10, scope: !2139)
!2186 = !DILocation(line: 1037, column: 17, scope: !2139)
!2187 = !DILocation(line: 1038, column: 19, scope: !2139)
!2188 = !DILocation(line: 1038, column: 10, scope: !2139)
!2189 = !DILocation(line: 1038, column: 17, scope: !2139)
!2190 = !DILocation(line: 1040, column: 35, scope: !2191)
!2191 = distinct !DILexicalBlock(scope: !2139, file: !3, line: 1040, column: 11)
!2192 = !DILocation(line: 1040, column: 11, scope: !2191)
!2193 = !DILocation(line: 1040, column: 11, scope: !2139)
!2194 = !DILocalVariable(name: "r", scope: !2195, file: !3, line: 1047, type: !203)
!2195 = distinct !DILexicalBlock(scope: !2196, file: !3, line: 1046, column: 10)
!2196 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 1041, column: 7)
!2197 = !DILocation(line: 1047, column: 29, scope: !2195)
!2198 = !DILocalVariable(name: "g", scope: !2195, file: !3, line: 1047, type: !203)
!2199 = !DILocation(line: 1047, column: 32, scope: !2195)
!2200 = !DILocalVariable(name: "b", scope: !2195, file: !3, line: 1047, type: !203)
!2201 = !DILocation(line: 1047, column: 35, scope: !2195)
!2202 = !DILocation(line: 1048, column: 36, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2195, file: !3, line: 1048, column: 17)
!2204 = !DILocation(line: 1048, column: 17, scope: !2203)
!2205 = !DILocation(line: 1048, column: 59, scope: !2203)
!2206 = !DILocation(line: 1049, column: 16, scope: !2203)
!2207 = !DILocation(line: 1049, column: 18, scope: !2203)
!2208 = !DILocation(line: 1049, column: 23, scope: !2203)
!2209 = !DILocation(line: 1049, column: 26, scope: !2203)
!2210 = !DILocation(line: 1049, column: 28, scope: !2203)
!2211 = !DILocation(line: 1049, column: 37, scope: !2203)
!2212 = !DILocation(line: 1050, column: 35, scope: !2203)
!2213 = !DILocation(line: 1050, column: 16, scope: !2203)
!2214 = !DILocation(line: 1050, column: 60, scope: !2203)
!2215 = !DILocation(line: 1051, column: 16, scope: !2203)
!2216 = !DILocation(line: 1051, column: 18, scope: !2203)
!2217 = !DILocation(line: 1051, column: 23, scope: !2203)
!2218 = !DILocation(line: 1051, column: 26, scope: !2203)
!2219 = !DILocation(line: 1051, column: 28, scope: !2203)
!2220 = !DILocation(line: 1051, column: 37, scope: !2203)
!2221 = !DILocation(line: 1052, column: 35, scope: !2203)
!2222 = !DILocation(line: 1052, column: 16, scope: !2203)
!2223 = !DILocation(line: 1052, column: 59, scope: !2203)
!2224 = !DILocation(line: 1053, column: 16, scope: !2203)
!2225 = !DILocation(line: 1053, column: 18, scope: !2203)
!2226 = !DILocation(line: 1053, column: 23, scope: !2203)
!2227 = !DILocation(line: 1053, column: 26, scope: !2203)
!2228 = !DILocation(line: 1053, column: 28, scope: !2203)
!2229 = !DILocation(line: 1053, column: 37, scope: !2203)
!2230 = !DILocation(line: 1054, column: 16, scope: !2203)
!2231 = !DILocation(line: 1054, column: 18, scope: !2203)
!2232 = !DILocation(line: 1054, column: 17, scope: !2203)
!2233 = !DILocation(line: 1054, column: 20, scope: !2203)
!2234 = !DILocation(line: 1054, column: 19, scope: !2203)
!2235 = !DILocation(line: 1054, column: 22, scope: !2203)
!2236 = !DILocation(line: 1048, column: 17, scope: !2195)
!2237 = !DILocalVariable(name: "add", scope: !2238, file: !3, line: 1061, type: !27)
!2238 = distinct !DILexicalBlock(scope: !2203, file: !3, line: 1055, column: 13)
!2239 = !DILocation(line: 1061, column: 20, scope: !2238)
!2240 = !DILocation(line: 1063, column: 20, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2238, file: !3, line: 1063, column: 20)
!2242 = !DILocation(line: 1063, column: 22, scope: !2241)
!2243 = !DILocation(line: 1063, column: 21, scope: !2241)
!2244 = !DILocation(line: 1063, column: 24, scope: !2241)
!2245 = !DILocation(line: 1063, column: 23, scope: !2241)
!2246 = !DILocation(line: 1063, column: 26, scope: !2241)
!2247 = !DILocation(line: 1063, column: 20, scope: !2238)
!2248 = !DILocation(line: 1064, column: 23, scope: !2241)
!2249 = !DILocation(line: 1064, column: 19, scope: !2241)
!2250 = !DILocation(line: 1065, column: 25, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2241, file: !3, line: 1065, column: 25)
!2252 = !DILocation(line: 1065, column: 27, scope: !2251)
!2253 = !DILocation(line: 1065, column: 26, scope: !2251)
!2254 = !DILocation(line: 1065, column: 29, scope: !2251)
!2255 = !DILocation(line: 1065, column: 28, scope: !2251)
!2256 = !DILocation(line: 1065, column: 31, scope: !2251)
!2257 = !DILocation(line: 1065, column: 25, scope: !2241)
!2258 = !DILocation(line: 1066, column: 23, scope: !2251)
!2259 = !DILocation(line: 1066, column: 19, scope: !2251)
!2260 = !DILocation(line: 1068, column: 20, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2238, file: !3, line: 1068, column: 20)
!2262 = !DILocation(line: 1068, column: 24, scope: !2261)
!2263 = !DILocation(line: 1068, column: 20, scope: !2238)
!2264 = !DILocation(line: 1070, column: 23, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2266, file: !3, line: 1070, column: 23)
!2266 = distinct !DILexicalBlock(scope: !2261, file: !3, line: 1069, column: 16)
!2267 = !DILocation(line: 1070, column: 28, scope: !2265)
!2268 = !DILocation(line: 1070, column: 25, scope: !2265)
!2269 = !DILocation(line: 1070, column: 30, scope: !2265)
!2270 = !DILocation(line: 1070, column: 33, scope: !2265)
!2271 = !DILocation(line: 1070, column: 38, scope: !2265)
!2272 = !DILocation(line: 1070, column: 35, scope: !2265)
!2273 = !DILocation(line: 1070, column: 23, scope: !2266)
!2274 = !DILocation(line: 1071, column: 27, scope: !2265)
!2275 = !DILocation(line: 1071, column: 24, scope: !2265)
!2276 = !DILocation(line: 1071, column: 22, scope: !2265)
!2277 = !DILocation(line: 1072, column: 28, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !2265, file: !3, line: 1072, column: 28)
!2279 = !DILocation(line: 1072, column: 33, scope: !2278)
!2280 = !DILocation(line: 1072, column: 30, scope: !2278)
!2281 = !DILocation(line: 1072, column: 35, scope: !2278)
!2282 = !DILocation(line: 1072, column: 38, scope: !2278)
!2283 = !DILocation(line: 1072, column: 43, scope: !2278)
!2284 = !DILocation(line: 1072, column: 40, scope: !2278)
!2285 = !DILocation(line: 1072, column: 28, scope: !2265)
!2286 = !DILocation(line: 1073, column: 27, scope: !2278)
!2287 = !DILocation(line: 1073, column: 24, scope: !2278)
!2288 = !DILocation(line: 1073, column: 22, scope: !2278)
!2289 = !DILocation(line: 1075, column: 27, scope: !2278)
!2290 = !DILocation(line: 1075, column: 24, scope: !2278)
!2291 = !DILocation(line: 1076, column: 16, scope: !2266)
!2292 = !DILocation(line: 1079, column: 20, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2238, file: !3, line: 1079, column: 20)
!2294 = !DILocation(line: 1079, column: 22, scope: !2293)
!2295 = !DILocation(line: 1079, column: 21, scope: !2293)
!2296 = !DILocation(line: 1079, column: 24, scope: !2293)
!2297 = !DILocation(line: 1079, column: 23, scope: !2293)
!2298 = !DILocation(line: 1079, column: 26, scope: !2293)
!2299 = !DILocation(line: 1079, column: 20, scope: !2238)
!2300 = !DILocation(line: 1080, column: 29, scope: !2293)
!2301 = !DILocation(line: 1080, column: 19, scope: !2293)
!2302 = !DILocation(line: 1083, column: 64, scope: !2238)
!2303 = !DILocation(line: 1083, column: 51, scope: !2238)
!2304 = !DILocation(line: 1083, column: 16, scope: !2238)
!2305 = !DILocation(line: 1083, column: 25, scope: !2238)
!2306 = !DILocation(line: 1083, column: 49, scope: !2238)
!2307 = !DILocation(line: 1084, column: 64, scope: !2238)
!2308 = !DILocation(line: 1084, column: 51, scope: !2238)
!2309 = !DILocation(line: 1084, column: 16, scope: !2238)
!2310 = !DILocation(line: 1084, column: 25, scope: !2238)
!2311 = !DILocation(line: 1084, column: 49, scope: !2238)
!2312 = !DILocation(line: 1085, column: 13, scope: !2238)
!2313 = !DILocation(line: 1092, column: 26, scope: !2203)
!2314 = !DILocation(line: 1092, column: 16, scope: !2203)
!2315 = !DILocation(line: 1094, column: 7, scope: !2196)
!2316 = !DILocation(line: 1095, column: 4, scope: !2139)
!2317 = !DILocation(line: 1098, column: 23, scope: !1925)
!2318 = !DILocation(line: 1098, column: 32, scope: !1925)
!2319 = !DILocation(line: 1098, column: 42, scope: !1925)
!2320 = !DILocation(line: 1098, column: 51, scope: !1925)
!2321 = !DILocation(line: 1098, column: 60, scope: !1925)
!2322 = !DILocation(line: 1098, column: 67, scope: !1925)
!2323 = !DILocation(line: 1099, column: 7, scope: !1925)
!2324 = !DILocation(line: 1099, column: 16, scope: !1925)
!2325 = !DILocation(line: 1099, column: 25, scope: !1925)
!2326 = !DILocation(line: 1099, column: 33, scope: !1925)
!2327 = !DILocation(line: 1098, column: 4, scope: !1925)
!2328 = !DILocation(line: 1100, column: 1, scope: !1925)
!2329 = distinct !DISubprogram(name: "png_handle_sRGB", scope: !3, file: !3, line: 1105, type: !1268, scopeLine: 1106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!2330 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !2329, file: !3, line: 1105, type: !6)
!2331 = !DILocation(line: 1105, column: 29, scope: !2329)
!2332 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !2329, file: !3, line: 1105, type: !258)
!2333 = !DILocation(line: 1105, column: 48, scope: !2329)
!2334 = !DILocalVariable(name: "length", arg: 3, scope: !2329, file: !3, line: 1105, type: !85)
!2335 = !DILocation(line: 1105, column: 70, scope: !2329)
!2336 = !DILocalVariable(name: "intent", scope: !2329, file: !3, line: 1107, type: !27)
!2337 = !DILocation(line: 1107, column: 8, scope: !2329)
!2338 = !DILocalVariable(name: "buf", scope: !2329, file: !3, line: 1108, type: !2339)
!2339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 8, elements: !38)
!2340 = !DILocation(line: 1108, column: 13, scope: !2329)
!2341 = !DILocation(line: 1112, column: 10, scope: !2342)
!2342 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 1112, column: 8)
!2343 = !DILocation(line: 1112, column: 19, scope: !2342)
!2344 = !DILocation(line: 1112, column: 24, scope: !2342)
!2345 = !DILocation(line: 1112, column: 8, scope: !2329)
!2346 = !DILocation(line: 1113, column: 17, scope: !2342)
!2347 = !DILocation(line: 1113, column: 7, scope: !2342)
!2348 = !DILocation(line: 1115, column: 13, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2342, file: !3, line: 1115, column: 13)
!2350 = !DILocation(line: 1115, column: 22, scope: !2349)
!2351 = !DILocation(line: 1115, column: 27, scope: !2349)
!2352 = !DILocation(line: 1115, column: 13, scope: !2342)
!2353 = !DILocation(line: 1117, column: 19, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2349, file: !3, line: 1116, column: 4)
!2355 = !DILocation(line: 1117, column: 7, scope: !2354)
!2356 = !DILocation(line: 1118, column: 22, scope: !2354)
!2357 = !DILocation(line: 1118, column: 31, scope: !2354)
!2358 = !DILocation(line: 1118, column: 7, scope: !2354)
!2359 = !DILocation(line: 1119, column: 7, scope: !2354)
!2360 = !DILocation(line: 1122, column: 13, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2349, file: !3, line: 1122, column: 13)
!2362 = !DILocation(line: 1122, column: 22, scope: !2361)
!2363 = !DILocation(line: 1122, column: 27, scope: !2361)
!2364 = !DILocation(line: 1122, column: 13, scope: !2349)
!2365 = !DILocation(line: 1124, column: 19, scope: !2361)
!2366 = !DILocation(line: 1124, column: 7, scope: !2361)
!2367 = !DILocation(line: 1126, column: 8, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 1126, column: 8)
!2369 = !DILocation(line: 1126, column: 17, scope: !2368)
!2370 = !DILocation(line: 1126, column: 25, scope: !2368)
!2371 = !DILocation(line: 1126, column: 29, scope: !2368)
!2372 = !DILocation(line: 1126, column: 39, scope: !2368)
!2373 = !DILocation(line: 1126, column: 45, scope: !2368)
!2374 = !DILocation(line: 1126, column: 8, scope: !2329)
!2375 = !DILocation(line: 1128, column: 19, scope: !2376)
!2376 = distinct !DILexicalBlock(scope: !2368, file: !3, line: 1127, column: 4)
!2377 = !DILocation(line: 1128, column: 7, scope: !2376)
!2378 = !DILocation(line: 1129, column: 22, scope: !2376)
!2379 = !DILocation(line: 1129, column: 31, scope: !2376)
!2380 = !DILocation(line: 1129, column: 7, scope: !2376)
!2381 = !DILocation(line: 1130, column: 7, scope: !2376)
!2382 = !DILocation(line: 1133, column: 8, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 1133, column: 8)
!2384 = !DILocation(line: 1133, column: 15, scope: !2383)
!2385 = !DILocation(line: 1133, column: 8, scope: !2329)
!2386 = !DILocation(line: 1135, column: 19, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2383, file: !3, line: 1134, column: 4)
!2388 = !DILocation(line: 1135, column: 7, scope: !2387)
!2389 = !DILocation(line: 1136, column: 22, scope: !2387)
!2390 = !DILocation(line: 1136, column: 31, scope: !2387)
!2391 = !DILocation(line: 1136, column: 7, scope: !2387)
!2392 = !DILocation(line: 1137, column: 7, scope: !2387)
!2393 = !DILocation(line: 1140, column: 17, scope: !2329)
!2394 = !DILocation(line: 1140, column: 26, scope: !2329)
!2395 = !DILocation(line: 1140, column: 4, scope: !2329)
!2396 = !DILocation(line: 1142, column: 23, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 1142, column: 8)
!2398 = !DILocation(line: 1142, column: 8, scope: !2397)
!2399 = !DILocation(line: 1142, column: 8, scope: !2329)
!2400 = !DILocation(line: 1143, column: 7, scope: !2397)
!2401 = !DILocation(line: 1145, column: 13, scope: !2329)
!2402 = !DILocation(line: 1145, column: 11, scope: !2329)
!2403 = !DILocation(line: 1148, column: 8, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 1148, column: 8)
!2405 = !DILocation(line: 1148, column: 15, scope: !2404)
!2406 = !DILocation(line: 1148, column: 8, scope: !2329)
!2407 = !DILocation(line: 1150, column: 19, scope: !2408)
!2408 = distinct !DILexicalBlock(scope: !2404, file: !3, line: 1149, column: 4)
!2409 = !DILocation(line: 1150, column: 7, scope: !2408)
!2410 = !DILocation(line: 1151, column: 7, scope: !2408)
!2411 = !DILocation(line: 1155, column: 8, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 1155, column: 8)
!2413 = !DILocation(line: 1155, column: 17, scope: !2412)
!2414 = !DILocation(line: 1155, column: 25, scope: !2412)
!2415 = !DILocation(line: 1155, column: 29, scope: !2412)
!2416 = !DILocation(line: 1155, column: 39, scope: !2412)
!2417 = !DILocation(line: 1155, column: 45, scope: !2412)
!2418 = !DILocation(line: 1155, column: 8, scope: !2329)
!2419 = !DILocation(line: 1157, column: 11, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2421, file: !3, line: 1157, column: 11)
!2421 = distinct !DILexicalBlock(scope: !2412, file: !3, line: 1156, column: 4)
!2422 = !DILocation(line: 1157, column: 11, scope: !2421)
!2423 = !DILocalVariable(name: "p", scope: !2424, file: !3, line: 1159, type: !1038)
!2424 = distinct !DILexicalBlock(scope: !2420, file: !3, line: 1158, column: 7)
!2425 = !DILocation(line: 1159, column: 10, scope: !2424)
!2426 = !DILocation(line: 1161, column: 39, scope: !2424)
!2427 = !DILocation(line: 1162, column: 13, scope: !2424)
!2428 = !DILocation(line: 1162, column: 23, scope: !2424)
!2429 = !DILocation(line: 1161, column: 10, scope: !2424)
!2430 = !DILocation(line: 1164, column: 32, scope: !2424)
!2431 = !DILocation(line: 1164, column: 41, scope: !2424)
!2432 = !DILocation(line: 1164, column: 10, scope: !2424)
!2433 = !DILocation(line: 1166, column: 7, scope: !2424)
!2434 = !DILocation(line: 1167, column: 4, scope: !2421)
!2435 = !DILocation(line: 1171, column: 8, scope: !2436)
!2436 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 1171, column: 8)
!2437 = !DILocation(line: 1171, column: 17, scope: !2436)
!2438 = !DILocation(line: 1171, column: 25, scope: !2436)
!2439 = !DILocation(line: 1171, column: 29, scope: !2436)
!2440 = !DILocation(line: 1171, column: 39, scope: !2436)
!2441 = !DILocation(line: 1171, column: 45, scope: !2436)
!2442 = !DILocation(line: 1171, column: 8, scope: !2329)
!2443 = !DILocation(line: 1172, column: 11, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 1172, column: 11)
!2445 = !DILocation(line: 1172, column: 61, scope: !2444)
!2446 = !DILocation(line: 1173, column: 11, scope: !2444)
!2447 = !DILocation(line: 1173, column: 61, scope: !2444)
!2448 = !DILocation(line: 1174, column: 11, scope: !2444)
!2449 = !DILocation(line: 1174, column: 61, scope: !2444)
!2450 = !DILocation(line: 1175, column: 11, scope: !2444)
!2451 = !DILocation(line: 1175, column: 61, scope: !2444)
!2452 = !DILocation(line: 1176, column: 11, scope: !2444)
!2453 = !DILocation(line: 1176, column: 61, scope: !2444)
!2454 = !DILocation(line: 1177, column: 11, scope: !2444)
!2455 = !DILocation(line: 1177, column: 61, scope: !2444)
!2456 = !DILocation(line: 1178, column: 11, scope: !2444)
!2457 = !DILocation(line: 1178, column: 61, scope: !2444)
!2458 = !DILocation(line: 1179, column: 11, scope: !2444)
!2459 = !DILocation(line: 1172, column: 11, scope: !2436)
!2460 = !DILocation(line: 1181, column: 22, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2444, file: !3, line: 1180, column: 7)
!2462 = !DILocation(line: 1181, column: 10, scope: !2461)
!2463 = !DILocation(line: 1183, column: 7, scope: !2461)
!2464 = !DILocation(line: 1190, column: 4, scope: !2329)
!2465 = !DILocation(line: 1190, column: 13, scope: !2329)
!2466 = !DILocation(line: 1190, column: 21, scope: !2329)
!2467 = !DILocation(line: 1194, column: 12, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 1194, column: 11)
!2469 = !DILocation(line: 1194, column: 21, scope: !2468)
!2470 = !DILocation(line: 1194, column: 11, scope: !2329)
!2471 = !DILocation(line: 1216, column: 10, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2468, file: !3, line: 1195, column: 7)
!2473 = !DILocation(line: 1216, column: 19, scope: !2472)
!2474 = !DILocation(line: 1216, column: 43, scope: !2472)
!2475 = !DILocation(line: 1217, column: 10, scope: !2472)
!2476 = !DILocation(line: 1217, column: 19, scope: !2472)
!2477 = !DILocation(line: 1217, column: 43, scope: !2472)
!2478 = !DILocation(line: 1223, column: 10, scope: !2472)
!2479 = !DILocation(line: 1223, column: 19, scope: !2472)
!2480 = !DILocation(line: 1223, column: 48, scope: !2472)
!2481 = !DILocation(line: 1224, column: 7, scope: !2472)
!2482 = !DILocation(line: 1227, column: 31, scope: !2329)
!2483 = !DILocation(line: 1227, column: 40, scope: !2329)
!2484 = !DILocation(line: 1227, column: 50, scope: !2329)
!2485 = !DILocation(line: 1227, column: 4, scope: !2329)
!2486 = !DILocation(line: 1228, column: 1, scope: !2329)
!2487 = distinct !DISubprogram(name: "png_handle_iCCP", scope: !3, file: !3, line: 1233, type: !1268, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!2488 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !2487, file: !3, line: 1233, type: !6)
!2489 = !DILocation(line: 1233, column: 29, scope: !2487)
!2490 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !2487, file: !3, line: 1233, type: !258)
!2491 = !DILocation(line: 1233, column: 48, scope: !2487)
!2492 = !DILocalVariable(name: "length", arg: 3, scope: !2487, file: !3, line: 1233, type: !85)
!2493 = !DILocation(line: 1233, column: 70, scope: !2487)
!2494 = !DILocalVariable(name: "compression_type", scope: !2487, file: !3, line: 1236, type: !67)
!2495 = !DILocation(line: 1236, column: 13, scope: !2487)
!2496 = !DILocalVariable(name: "pC", scope: !2487, file: !3, line: 1237, type: !65)
!2497 = !DILocation(line: 1237, column: 14, scope: !2487)
!2498 = !DILocalVariable(name: "profile", scope: !2487, file: !3, line: 1238, type: !293)
!2499 = !DILocation(line: 1238, column: 14, scope: !2487)
!2500 = !DILocalVariable(name: "skip", scope: !2487, file: !3, line: 1239, type: !85)
!2501 = !DILocation(line: 1239, column: 16, scope: !2487)
!2502 = !DILocalVariable(name: "profile_size", scope: !2487, file: !3, line: 1240, type: !85)
!2503 = !DILocation(line: 1240, column: 16, scope: !2487)
!2504 = !DILocalVariable(name: "profile_length", scope: !2487, file: !3, line: 1241, type: !436)
!2505 = !DILocation(line: 1241, column: 21, scope: !2487)
!2506 = !DILocalVariable(name: "slength", scope: !2487, file: !3, line: 1242, type: !69)
!2507 = !DILocation(line: 1242, column: 15, scope: !2487)
!2508 = !DILocalVariable(name: "prefix_length", scope: !2487, file: !3, line: 1242, type: !69)
!2509 = !DILocation(line: 1242, column: 24, scope: !2487)
!2510 = !DILocalVariable(name: "data_length", scope: !2487, file: !3, line: 1242, type: !69)
!2511 = !DILocation(line: 1242, column: 39, scope: !2487)
!2512 = !DILocation(line: 1246, column: 10, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 1246, column: 8)
!2514 = !DILocation(line: 1246, column: 19, scope: !2513)
!2515 = !DILocation(line: 1246, column: 24, scope: !2513)
!2516 = !DILocation(line: 1246, column: 8, scope: !2487)
!2517 = !DILocation(line: 1247, column: 17, scope: !2513)
!2518 = !DILocation(line: 1247, column: 7, scope: !2513)
!2519 = !DILocation(line: 1249, column: 13, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2513, file: !3, line: 1249, column: 13)
!2521 = !DILocation(line: 1249, column: 22, scope: !2520)
!2522 = !DILocation(line: 1249, column: 27, scope: !2520)
!2523 = !DILocation(line: 1249, column: 13, scope: !2513)
!2524 = !DILocation(line: 1251, column: 19, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2520, file: !3, line: 1250, column: 4)
!2526 = !DILocation(line: 1251, column: 7, scope: !2525)
!2527 = !DILocation(line: 1252, column: 22, scope: !2525)
!2528 = !DILocation(line: 1252, column: 31, scope: !2525)
!2529 = !DILocation(line: 1252, column: 7, scope: !2525)
!2530 = !DILocation(line: 1253, column: 7, scope: !2525)
!2531 = !DILocation(line: 1256, column: 13, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2520, file: !3, line: 1256, column: 13)
!2533 = !DILocation(line: 1256, column: 22, scope: !2532)
!2534 = !DILocation(line: 1256, column: 27, scope: !2532)
!2535 = !DILocation(line: 1256, column: 13, scope: !2520)
!2536 = !DILocation(line: 1258, column: 19, scope: !2532)
!2537 = !DILocation(line: 1258, column: 7, scope: !2532)
!2538 = !DILocation(line: 1260, column: 9, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 1260, column: 8)
!2540 = !DILocation(line: 1260, column: 18, scope: !2539)
!2541 = !DILocation(line: 1260, column: 23, scope: !2539)
!2542 = !DILocation(line: 1260, column: 40, scope: !2539)
!2543 = !DILocation(line: 1260, column: 44, scope: !2539)
!2544 = !DILocation(line: 1260, column: 53, scope: !2539)
!2545 = !DILocation(line: 1260, column: 61, scope: !2539)
!2546 = !DILocation(line: 1261, column: 8, scope: !2539)
!2547 = !DILocation(line: 1261, column: 18, scope: !2539)
!2548 = !DILocation(line: 1261, column: 24, scope: !2539)
!2549 = !DILocation(line: 1260, column: 8, scope: !2487)
!2550 = !DILocation(line: 1263, column: 19, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2539, file: !3, line: 1262, column: 4)
!2552 = !DILocation(line: 1263, column: 7, scope: !2551)
!2553 = !DILocation(line: 1264, column: 22, scope: !2551)
!2554 = !DILocation(line: 1264, column: 31, scope: !2551)
!2555 = !DILocation(line: 1264, column: 7, scope: !2551)
!2556 = !DILocation(line: 1265, column: 7, scope: !2551)
!2557 = !DILocation(line: 1268, column: 4, scope: !2487)
!2558 = !DILocation(line: 1268, column: 13, scope: !2487)
!2559 = !DILocation(line: 1268, column: 18, scope: !2487)
!2560 = !DILocation(line: 1279, column: 13, scope: !2487)
!2561 = !DILocation(line: 1279, column: 22, scope: !2487)
!2562 = !DILocation(line: 1279, column: 31, scope: !2487)
!2563 = !DILocation(line: 1279, column: 4, scope: !2487)
!2564 = !DILocation(line: 1280, column: 47, scope: !2487)
!2565 = !DILocation(line: 1280, column: 56, scope: !2487)
!2566 = !DILocation(line: 1280, column: 63, scope: !2487)
!2567 = !DILocation(line: 1280, column: 36, scope: !2487)
!2568 = !DILocation(line: 1280, column: 4, scope: !2487)
!2569 = !DILocation(line: 1280, column: 13, scope: !2487)
!2570 = !DILocation(line: 1280, column: 23, scope: !2487)
!2571 = !DILocation(line: 1281, column: 14, scope: !2487)
!2572 = !DILocation(line: 1281, column: 12, scope: !2487)
!2573 = !DILocation(line: 1282, column: 17, scope: !2487)
!2574 = !DILocation(line: 1282, column: 37, scope: !2487)
!2575 = !DILocation(line: 1282, column: 46, scope: !2487)
!2576 = !DILocation(line: 1282, column: 57, scope: !2487)
!2577 = !DILocation(line: 1282, column: 4, scope: !2487)
!2578 = !DILocation(line: 1284, column: 23, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 1284, column: 8)
!2580 = !DILocation(line: 1284, column: 32, scope: !2579)
!2581 = !DILocation(line: 1284, column: 8, scope: !2579)
!2582 = !DILocation(line: 1284, column: 8, scope: !2487)
!2583 = !DILocation(line: 1286, column: 16, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2579, file: !3, line: 1285, column: 4)
!2585 = !DILocation(line: 1286, column: 25, scope: !2584)
!2586 = !DILocation(line: 1286, column: 34, scope: !2584)
!2587 = !DILocation(line: 1286, column: 7, scope: !2584)
!2588 = !DILocation(line: 1287, column: 7, scope: !2584)
!2589 = !DILocation(line: 1287, column: 16, scope: !2584)
!2590 = !DILocation(line: 1287, column: 26, scope: !2584)
!2591 = !DILocation(line: 1288, column: 7, scope: !2584)
!2592 = !DILocation(line: 1291, column: 4, scope: !2487)
!2593 = !DILocation(line: 1291, column: 13, scope: !2487)
!2594 = !DILocation(line: 1291, column: 23, scope: !2487)
!2595 = !DILocation(line: 1291, column: 32, scope: !2487)
!2596 = !DILocation(line: 1293, column: 19, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 1293, column: 4)
!2598 = !DILocation(line: 1293, column: 28, scope: !2597)
!2599 = !DILocation(line: 1293, column: 17, scope: !2597)
!2600 = !DILocation(line: 1293, column: 9, scope: !2597)
!2601 = !DILocation(line: 1293, column: 40, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2597, file: !3, line: 1293, column: 4)
!2603 = !DILocation(line: 1293, column: 39, scope: !2602)
!2604 = !DILocation(line: 1293, column: 4, scope: !2597)
!2605 = !DILocation(line: 1293, column: 56, scope: !2602)
!2606 = !DILocation(line: 1293, column: 4, scope: !2602)
!2607 = distinct !{!2607, !2604, !2608}
!2608 = !DILocation(line: 1294, column: 44, scope: !2597)
!2609 = !DILocation(line: 1296, column: 4, scope: !2487)
!2610 = !DILocation(line: 1301, column: 8, scope: !2611)
!2611 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 1301, column: 8)
!2612 = !DILocation(line: 1301, column: 19, scope: !2611)
!2613 = !DILocation(line: 1301, column: 28, scope: !2611)
!2614 = !DILocation(line: 1301, column: 40, scope: !2611)
!2615 = !DILocation(line: 1301, column: 38, scope: !2611)
!2616 = !DILocation(line: 1301, column: 48, scope: !2611)
!2617 = !DILocation(line: 1301, column: 16, scope: !2611)
!2618 = !DILocation(line: 1301, column: 8, scope: !2487)
!2619 = !DILocation(line: 1303, column: 16, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2611, file: !3, line: 1302, column: 4)
!2621 = !DILocation(line: 1303, column: 25, scope: !2620)
!2622 = !DILocation(line: 1303, column: 34, scope: !2620)
!2623 = !DILocation(line: 1303, column: 7, scope: !2620)
!2624 = !DILocation(line: 1304, column: 7, scope: !2620)
!2625 = !DILocation(line: 1304, column: 16, scope: !2620)
!2626 = !DILocation(line: 1304, column: 26, scope: !2620)
!2627 = !DILocation(line: 1305, column: 19, scope: !2620)
!2628 = !DILocation(line: 1305, column: 7, scope: !2620)
!2629 = !DILocation(line: 1306, column: 7, scope: !2620)
!2630 = !DILocation(line: 1310, column: 31, scope: !2487)
!2631 = !DILocation(line: 1310, column: 23, scope: !2487)
!2632 = !DILocation(line: 1310, column: 21, scope: !2487)
!2633 = !DILocation(line: 1312, column: 8, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 1312, column: 8)
!2635 = !DILocation(line: 1312, column: 8, scope: !2487)
!2636 = !DILocation(line: 1314, column: 19, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 1313, column: 4)
!2638 = !DILocation(line: 1314, column: 7, scope: !2637)
!2639 = !DILocation(line: 1315, column: 24, scope: !2637)
!2640 = !DILocation(line: 1317, column: 4, scope: !2637)
!2641 = !DILocation(line: 1319, column: 20, scope: !2487)
!2642 = !DILocation(line: 1319, column: 30, scope: !2487)
!2643 = !DILocation(line: 1319, column: 39, scope: !2487)
!2644 = !DILocation(line: 1319, column: 28, scope: !2487)
!2645 = !DILocation(line: 1319, column: 18, scope: !2487)
!2646 = !DILocation(line: 1320, column: 25, scope: !2487)
!2647 = !DILocation(line: 1320, column: 34, scope: !2487)
!2648 = !DILocation(line: 1321, column: 8, scope: !2487)
!2649 = !DILocation(line: 1321, column: 17, scope: !2487)
!2650 = !DILocation(line: 1320, column: 4, scope: !2487)
!2651 = !DILocation(line: 1323, column: 21, scope: !2487)
!2652 = !DILocation(line: 1323, column: 35, scope: !2487)
!2653 = !DILocation(line: 1323, column: 33, scope: !2487)
!2654 = !DILocation(line: 1323, column: 19, scope: !2487)
!2655 = !DILocation(line: 1325, column: 8, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 1325, column: 8)
!2657 = !DILocation(line: 1325, column: 24, scope: !2656)
!2658 = !DILocation(line: 1325, column: 22, scope: !2656)
!2659 = !DILocation(line: 1325, column: 36, scope: !2656)
!2660 = !DILocation(line: 1325, column: 39, scope: !2656)
!2661 = !DILocation(line: 1325, column: 54, scope: !2656)
!2662 = !DILocation(line: 1325, column: 8, scope: !2487)
!2663 = !DILocation(line: 1327, column: 16, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2656, file: !3, line: 1326, column: 4)
!2665 = !DILocation(line: 1327, column: 25, scope: !2664)
!2666 = !DILocation(line: 1327, column: 34, scope: !2664)
!2667 = !DILocation(line: 1327, column: 7, scope: !2664)
!2668 = !DILocation(line: 1328, column: 7, scope: !2664)
!2669 = !DILocation(line: 1328, column: 16, scope: !2664)
!2670 = !DILocation(line: 1328, column: 26, scope: !2664)
!2671 = !DILocation(line: 1329, column: 19, scope: !2664)
!2672 = !DILocation(line: 1329, column: 7, scope: !2664)
!2673 = !DILocation(line: 1330, column: 7, scope: !2664)
!2674 = !DILocation(line: 1334, column: 21, scope: !2487)
!2675 = !DILocation(line: 1334, column: 30, scope: !2487)
!2676 = !DILocation(line: 1334, column: 42, scope: !2487)
!2677 = !DILocation(line: 1334, column: 40, scope: !2487)
!2678 = !DILocation(line: 1334, column: 7, scope: !2487)
!2679 = !DILocation(line: 1335, column: 23, scope: !2487)
!2680 = !DILocation(line: 1335, column: 21, scope: !2487)
!2681 = !DILocation(line: 1335, column: 20, scope: !2487)
!2682 = !DILocation(line: 1335, column: 32, scope: !2487)
!2683 = !DILocation(line: 1336, column: 23, scope: !2487)
!2684 = !DILocation(line: 1336, column: 26, scope: !2487)
!2685 = !DILocation(line: 1336, column: 21, scope: !2487)
!2686 = !DILocation(line: 1336, column: 20, scope: !2487)
!2687 = !DILocation(line: 1336, column: 32, scope: !2487)
!2688 = !DILocation(line: 1335, column: 39, scope: !2487)
!2689 = !DILocation(line: 1337, column: 23, scope: !2487)
!2690 = !DILocation(line: 1337, column: 26, scope: !2487)
!2691 = !DILocation(line: 1337, column: 21, scope: !2487)
!2692 = !DILocation(line: 1337, column: 20, scope: !2487)
!2693 = !DILocation(line: 1337, column: 32, scope: !2487)
!2694 = !DILocation(line: 1336, column: 39, scope: !2487)
!2695 = !DILocation(line: 1338, column: 23, scope: !2487)
!2696 = !DILocation(line: 1338, column: 26, scope: !2487)
!2697 = !DILocation(line: 1338, column: 21, scope: !2487)
!2698 = !DILocation(line: 1338, column: 19, scope: !2487)
!2699 = !DILocation(line: 1337, column: 39, scope: !2487)
!2700 = !DILocation(line: 1335, column: 17, scope: !2487)
!2701 = !DILocation(line: 1343, column: 8, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 1343, column: 8)
!2703 = !DILocation(line: 1343, column: 23, scope: !2702)
!2704 = !DILocation(line: 1343, column: 21, scope: !2702)
!2705 = !DILocation(line: 1343, column: 8, scope: !2487)
!2706 = !DILocation(line: 1344, column: 24, scope: !2702)
!2707 = !DILocation(line: 1344, column: 22, scope: !2702)
!2708 = !DILocation(line: 1344, column: 7, scope: !2702)
!2709 = !DILocation(line: 1347, column: 8, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 1347, column: 8)
!2711 = !DILocation(line: 1347, column: 23, scope: !2710)
!2712 = !DILocation(line: 1347, column: 21, scope: !2710)
!2713 = !DILocation(line: 1347, column: 8, scope: !2487)
!2714 = !DILocalVariable(name: "p", scope: !2715, file: !3, line: 1349, type: !1038)
!2715 = distinct !DILexicalBlock(scope: !2710, file: !3, line: 1348, column: 4)
!2716 = !DILocation(line: 1349, column: 7, scope: !2715)
!2717 = !DILocation(line: 1351, column: 16, scope: !2715)
!2718 = !DILocation(line: 1351, column: 25, scope: !2715)
!2719 = !DILocation(line: 1351, column: 34, scope: !2715)
!2720 = !DILocation(line: 1351, column: 7, scope: !2715)
!2721 = !DILocation(line: 1352, column: 7, scope: !2715)
!2722 = !DILocation(line: 1352, column: 16, scope: !2715)
!2723 = !DILocation(line: 1352, column: 26, scope: !2715)
!2724 = !DILocation(line: 1354, column: 38, scope: !2715)
!2725 = !DILocation(line: 1354, column: 65, scope: !2715)
!2726 = !DILocation(line: 1354, column: 7, scope: !2715)
!2727 = !DILocation(line: 1355, column: 38, scope: !2715)
!2728 = !DILocation(line: 1355, column: 65, scope: !2715)
!2729 = !DILocation(line: 1355, column: 7, scope: !2715)
!2730 = !DILocation(line: 1356, column: 29, scope: !2715)
!2731 = !DILocation(line: 1356, column: 38, scope: !2715)
!2732 = !DILocation(line: 1356, column: 7, scope: !2715)
!2733 = !DILocation(line: 1358, column: 7, scope: !2715)
!2734 = !DILocation(line: 1361, column: 17, scope: !2487)
!2735 = !DILocation(line: 1361, column: 26, scope: !2487)
!2736 = !DILocation(line: 1361, column: 36, scope: !2487)
!2737 = !DILocation(line: 1361, column: 45, scope: !2487)
!2738 = !DILocation(line: 1362, column: 8, scope: !2487)
!2739 = !DILocation(line: 1362, column: 37, scope: !2487)
!2740 = !DILocation(line: 1362, column: 46, scope: !2487)
!2741 = !DILocation(line: 1362, column: 58, scope: !2487)
!2742 = !DILocation(line: 1362, column: 56, scope: !2487)
!2743 = !DILocation(line: 1363, column: 8, scope: !2487)
!2744 = !DILocation(line: 1361, column: 4, scope: !2487)
!2745 = !DILocation(line: 1364, column: 13, scope: !2487)
!2746 = !DILocation(line: 1364, column: 22, scope: !2487)
!2747 = !DILocation(line: 1364, column: 31, scope: !2487)
!2748 = !DILocation(line: 1364, column: 4, scope: !2487)
!2749 = !DILocation(line: 1365, column: 4, scope: !2487)
!2750 = !DILocation(line: 1365, column: 13, scope: !2487)
!2751 = !DILocation(line: 1365, column: 23, scope: !2487)
!2752 = !DILocation(line: 1366, column: 1, scope: !2487)
!2753 = distinct !DISubprogram(name: "png_handle_sPLT", scope: !3, file: !3, line: 1371, type: !1268, scopeLine: 1373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!2754 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !2753, file: !3, line: 1371, type: !6)
!2755 = !DILocation(line: 1371, column: 29, scope: !2753)
!2756 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !2753, file: !3, line: 1371, type: !258)
!2757 = !DILocation(line: 1371, column: 48, scope: !2753)
!2758 = !DILocalVariable(name: "length", arg: 3, scope: !2753, file: !3, line: 1371, type: !85)
!2759 = !DILocation(line: 1371, column: 70, scope: !2753)
!2760 = !DILocalVariable(name: "entry_start", scope: !2753, file: !3, line: 1374, type: !65)
!2761 = !DILocation(line: 1374, column: 14, scope: !2753)
!2762 = !DILocalVariable(name: "new_palette", scope: !2753, file: !3, line: 1375, type: !357)
!2763 = !DILocation(line: 1375, column: 15, scope: !2753)
!2764 = !DILocalVariable(name: "pp", scope: !2753, file: !3, line: 1376, type: !363)
!2765 = !DILocation(line: 1376, column: 20, scope: !2753)
!2766 = !DILocalVariable(name: "data_length", scope: !2753, file: !3, line: 1377, type: !85)
!2767 = !DILocation(line: 1377, column: 16, scope: !2753)
!2768 = !DILocalVariable(name: "entry_size", scope: !2753, file: !3, line: 1378, type: !27)
!2769 = !DILocation(line: 1378, column: 8, scope: !2753)
!2770 = !DILocalVariable(name: "i", scope: !2753, file: !3, line: 1378, type: !27)
!2771 = !DILocation(line: 1378, column: 20, scope: !2753)
!2772 = !DILocalVariable(name: "skip", scope: !2753, file: !3, line: 1379, type: !85)
!2773 = !DILocation(line: 1379, column: 16, scope: !2753)
!2774 = !DILocalVariable(name: "slength", scope: !2753, file: !3, line: 1380, type: !69)
!2775 = !DILocation(line: 1380, column: 15, scope: !2753)
!2776 = !DILocalVariable(name: "dl", scope: !2753, file: !3, line: 1381, type: !85)
!2777 = !DILocation(line: 1381, column: 16, scope: !2753)
!2778 = !DILocalVariable(name: "max_dl", scope: !2753, file: !3, line: 1382, type: !69)
!2779 = !DILocation(line: 1382, column: 15, scope: !2753)
!2780 = !DILocation(line: 1388, column: 8, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 1388, column: 8)
!2782 = !DILocation(line: 1388, column: 17, scope: !2781)
!2783 = !DILocation(line: 1388, column: 38, scope: !2781)
!2784 = !DILocation(line: 1388, column: 8, scope: !2753)
!2785 = !DILocation(line: 1390, column: 11, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 1390, column: 11)
!2787 = distinct !DILexicalBlock(scope: !2781, file: !3, line: 1389, column: 4)
!2788 = !DILocation(line: 1390, column: 20, scope: !2786)
!2789 = !DILocation(line: 1390, column: 41, scope: !2786)
!2790 = !DILocation(line: 1390, column: 11, scope: !2787)
!2791 = !DILocation(line: 1392, column: 25, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 1391, column: 7)
!2793 = !DILocation(line: 1392, column: 34, scope: !2792)
!2794 = !DILocation(line: 1392, column: 10, scope: !2792)
!2795 = !DILocation(line: 1393, column: 10, scope: !2792)
!2796 = !DILocation(line: 1396, column: 13, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 1396, column: 11)
!2798 = !DILocation(line: 1396, column: 22, scope: !2797)
!2799 = !DILocation(line: 1396, column: 11, scope: !2797)
!2800 = !DILocation(line: 1396, column: 43, scope: !2797)
!2801 = !DILocation(line: 1396, column: 11, scope: !2787)
!2802 = !DILocation(line: 1398, column: 22, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 1397, column: 7)
!2804 = !DILocation(line: 1398, column: 10, scope: !2803)
!2805 = !DILocation(line: 1399, column: 25, scope: !2803)
!2806 = !DILocation(line: 1399, column: 34, scope: !2803)
!2807 = !DILocation(line: 1399, column: 10, scope: !2803)
!2808 = !DILocation(line: 1400, column: 10, scope: !2803)
!2809 = !DILocation(line: 1402, column: 4, scope: !2787)
!2810 = !DILocation(line: 1405, column: 10, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 1405, column: 8)
!2812 = !DILocation(line: 1405, column: 19, scope: !2811)
!2813 = !DILocation(line: 1405, column: 24, scope: !2811)
!2814 = !DILocation(line: 1405, column: 8, scope: !2753)
!2815 = !DILocation(line: 1406, column: 17, scope: !2811)
!2816 = !DILocation(line: 1406, column: 7, scope: !2811)
!2817 = !DILocation(line: 1408, column: 13, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 1408, column: 13)
!2819 = !DILocation(line: 1408, column: 22, scope: !2818)
!2820 = !DILocation(line: 1408, column: 27, scope: !2818)
!2821 = !DILocation(line: 1408, column: 13, scope: !2811)
!2822 = !DILocation(line: 1410, column: 19, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 1409, column: 4)
!2824 = !DILocation(line: 1410, column: 7, scope: !2823)
!2825 = !DILocation(line: 1411, column: 22, scope: !2823)
!2826 = !DILocation(line: 1411, column: 31, scope: !2823)
!2827 = !DILocation(line: 1411, column: 7, scope: !2823)
!2828 = !DILocation(line: 1412, column: 7, scope: !2823)
!2829 = !DILocation(line: 1424, column: 13, scope: !2753)
!2830 = !DILocation(line: 1424, column: 22, scope: !2753)
!2831 = !DILocation(line: 1424, column: 31, scope: !2753)
!2832 = !DILocation(line: 1424, column: 4, scope: !2753)
!2833 = !DILocation(line: 1425, column: 47, scope: !2753)
!2834 = !DILocation(line: 1425, column: 56, scope: !2753)
!2835 = !DILocation(line: 1425, column: 63, scope: !2753)
!2836 = !DILocation(line: 1425, column: 36, scope: !2753)
!2837 = !DILocation(line: 1425, column: 4, scope: !2753)
!2838 = !DILocation(line: 1425, column: 13, scope: !2753)
!2839 = !DILocation(line: 1425, column: 23, scope: !2753)
!2840 = !DILocation(line: 1431, column: 14, scope: !2753)
!2841 = !DILocation(line: 1431, column: 12, scope: !2753)
!2842 = !DILocation(line: 1432, column: 17, scope: !2753)
!2843 = !DILocation(line: 1432, column: 37, scope: !2753)
!2844 = !DILocation(line: 1432, column: 46, scope: !2753)
!2845 = !DILocation(line: 1432, column: 57, scope: !2753)
!2846 = !DILocation(line: 1432, column: 4, scope: !2753)
!2847 = !DILocation(line: 1434, column: 23, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 1434, column: 8)
!2849 = !DILocation(line: 1434, column: 32, scope: !2848)
!2850 = !DILocation(line: 1434, column: 8, scope: !2848)
!2851 = !DILocation(line: 1434, column: 8, scope: !2753)
!2852 = !DILocation(line: 1436, column: 16, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2848, file: !3, line: 1435, column: 4)
!2854 = !DILocation(line: 1436, column: 25, scope: !2853)
!2855 = !DILocation(line: 1436, column: 34, scope: !2853)
!2856 = !DILocation(line: 1436, column: 7, scope: !2853)
!2857 = !DILocation(line: 1437, column: 7, scope: !2853)
!2858 = !DILocation(line: 1437, column: 16, scope: !2853)
!2859 = !DILocation(line: 1437, column: 26, scope: !2853)
!2860 = !DILocation(line: 1438, column: 7, scope: !2853)
!2861 = !DILocation(line: 1441, column: 4, scope: !2753)
!2862 = !DILocation(line: 1441, column: 13, scope: !2753)
!2863 = !DILocation(line: 1441, column: 23, scope: !2753)
!2864 = !DILocation(line: 1441, column: 32, scope: !2753)
!2865 = !DILocation(line: 1443, column: 34, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 1443, column: 4)
!2867 = !DILocation(line: 1443, column: 43, scope: !2866)
!2868 = !DILocation(line: 1443, column: 21, scope: !2866)
!2869 = !DILocation(line: 1443, column: 9, scope: !2866)
!2870 = !DILocation(line: 1443, column: 55, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2866, file: !3, line: 1443, column: 4)
!2872 = !DILocation(line: 1443, column: 54, scope: !2871)
!2873 = !DILocation(line: 1443, column: 4, scope: !2866)
!2874 = !DILocation(line: 1444, column: 19, scope: !2871)
!2875 = !DILocation(line: 1443, column: 4, scope: !2871)
!2876 = distinct !{!2876, !2873, !2877}
!2877 = !DILocation(line: 1445, column: 44, scope: !2866)
!2878 = !DILocation(line: 1447, column: 4, scope: !2753)
!2879 = !DILocation(line: 1450, column: 8, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 1450, column: 8)
!2881 = !DILocation(line: 1450, column: 33, scope: !2880)
!2882 = !DILocation(line: 1450, column: 42, scope: !2880)
!2883 = !DILocation(line: 1450, column: 54, scope: !2880)
!2884 = !DILocation(line: 1450, column: 52, scope: !2880)
!2885 = !DILocation(line: 1450, column: 62, scope: !2880)
!2886 = !DILocation(line: 1450, column: 20, scope: !2880)
!2887 = !DILocation(line: 1450, column: 8, scope: !2753)
!2888 = !DILocation(line: 1452, column: 16, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2880, file: !3, line: 1451, column: 4)
!2890 = !DILocation(line: 1452, column: 25, scope: !2889)
!2891 = !DILocation(line: 1452, column: 34, scope: !2889)
!2892 = !DILocation(line: 1452, column: 7, scope: !2889)
!2893 = !DILocation(line: 1453, column: 7, scope: !2889)
!2894 = !DILocation(line: 1453, column: 16, scope: !2889)
!2895 = !DILocation(line: 1453, column: 26, scope: !2889)
!2896 = !DILocation(line: 1454, column: 19, scope: !2889)
!2897 = !DILocation(line: 1454, column: 7, scope: !2889)
!2898 = !DILocation(line: 1455, column: 7, scope: !2889)
!2899 = !DILocation(line: 1458, column: 36, scope: !2753)
!2900 = !DILocation(line: 1458, column: 24, scope: !2753)
!2901 = !DILocation(line: 1458, column: 16, scope: !2753)
!2902 = !DILocation(line: 1458, column: 22, scope: !2753)
!2903 = !DILocation(line: 1459, column: 30, scope: !2753)
!2904 = !DILocation(line: 1459, column: 18, scope: !2753)
!2905 = !DILocation(line: 1459, column: 36, scope: !2753)
!2906 = !DILocation(line: 1459, column: 15, scope: !2753)
!2907 = !DILocation(line: 1464, column: 18, scope: !2753)
!2908 = !DILocation(line: 1464, column: 41, scope: !2753)
!2909 = !DILocation(line: 1465, column: 18, scope: !2753)
!2910 = !DILocation(line: 1465, column: 27, scope: !2753)
!2911 = !DILocation(line: 1464, column: 53, scope: !2753)
!2912 = !DILocation(line: 1464, column: 27, scope: !2753)
!2913 = !DILocation(line: 1464, column: 25, scope: !2753)
!2914 = !DILocation(line: 1464, column: 16, scope: !2753)
!2915 = !DILocation(line: 1468, column: 8, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 1468, column: 8)
!2917 = !DILocation(line: 1468, column: 22, scope: !2916)
!2918 = !DILocation(line: 1468, column: 20, scope: !2916)
!2919 = !DILocation(line: 1468, column: 8, scope: !2753)
!2920 = !DILocation(line: 1470, column: 16, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2916, file: !3, line: 1469, column: 4)
!2922 = !DILocation(line: 1470, column: 25, scope: !2921)
!2923 = !DILocation(line: 1470, column: 34, scope: !2921)
!2924 = !DILocation(line: 1470, column: 7, scope: !2921)
!2925 = !DILocation(line: 1471, column: 7, scope: !2921)
!2926 = !DILocation(line: 1471, column: 16, scope: !2921)
!2927 = !DILocation(line: 1471, column: 26, scope: !2921)
!2928 = !DILocation(line: 1472, column: 19, scope: !2921)
!2929 = !DILocation(line: 1472, column: 7, scope: !2921)
!2930 = !DILocation(line: 1473, column: 7, scope: !2921)
!2931 = !DILocation(line: 1476, column: 22, scope: !2753)
!2932 = !DILocation(line: 1476, column: 36, scope: !2753)
!2933 = !DILocation(line: 1476, column: 34, scope: !2753)
!2934 = !DILocation(line: 1476, column: 7, scope: !2753)
!2935 = !DILocation(line: 1477, column: 11, scope: !2753)
!2936 = !DILocation(line: 1479, column: 8, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 1479, column: 8)
!2938 = !DILocation(line: 1479, column: 13, scope: !2937)
!2939 = !DILocation(line: 1479, column: 11, scope: !2937)
!2940 = !DILocation(line: 1479, column: 8, scope: !2753)
!2941 = !DILocation(line: 1481, column: 20, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2937, file: !3, line: 1480, column: 4)
!2943 = !DILocation(line: 1481, column: 8, scope: !2942)
!2944 = !DILocation(line: 1482, column: 8, scope: !2942)
!2945 = !DILocation(line: 1485, column: 40, scope: !2753)
!2946 = !DILocation(line: 1485, column: 54, scope: !2753)
!2947 = !DILocation(line: 1485, column: 52, scope: !2753)
!2948 = !DILocation(line: 1485, column: 16, scope: !2753)
!2949 = !DILocation(line: 1485, column: 25, scope: !2753)
!2950 = !DILocation(line: 1488, column: 8, scope: !2753)
!2951 = !DILocation(line: 1488, column: 29, scope: !2753)
!2952 = !DILocation(line: 1488, column: 17, scope: !2753)
!2953 = !DILocation(line: 1488, column: 38, scope: !2753)
!2954 = !DILocation(line: 1487, column: 43, scope: !2753)
!2955 = !DILocation(line: 1487, column: 26, scope: !2753)
!2956 = !DILocation(line: 1487, column: 16, scope: !2753)
!2957 = !DILocation(line: 1487, column: 24, scope: !2753)
!2958 = !DILocation(line: 1490, column: 20, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 1490, column: 8)
!2960 = !DILocation(line: 1490, column: 28, scope: !2959)
!2961 = !DILocation(line: 1490, column: 8, scope: !2753)
!2962 = !DILocation(line: 1492, column: 20, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2959, file: !3, line: 1491, column: 4)
!2964 = !DILocation(line: 1492, column: 8, scope: !2963)
!2965 = !DILocation(line: 1493, column: 8, scope: !2963)
!2966 = !DILocation(line: 1497, column: 11, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 1497, column: 4)
!2968 = !DILocation(line: 1497, column: 9, scope: !2967)
!2969 = !DILocation(line: 1497, column: 16, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 1497, column: 4)
!2971 = !DILocation(line: 1497, column: 32, scope: !2970)
!2972 = !DILocation(line: 1497, column: 18, scope: !2970)
!2973 = !DILocation(line: 1497, column: 4, scope: !2967)
!2974 = !DILocation(line: 1499, column: 24, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2970, file: !3, line: 1498, column: 4)
!2976 = !DILocation(line: 1499, column: 34, scope: !2975)
!2977 = !DILocation(line: 1499, column: 32, scope: !2975)
!2978 = !DILocation(line: 1499, column: 10, scope: !2975)
!2979 = !DILocation(line: 1501, column: 23, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 1501, column: 11)
!2981 = !DILocation(line: 1501, column: 11, scope: !2980)
!2982 = !DILocation(line: 1501, column: 29, scope: !2980)
!2983 = !DILocation(line: 1501, column: 11, scope: !2975)
!2984 = !DILocation(line: 1503, column: 32, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 1502, column: 7)
!2986 = !DILocation(line: 1503, column: 20, scope: !2985)
!2987 = !DILocation(line: 1503, column: 10, scope: !2985)
!2988 = !DILocation(line: 1503, column: 14, scope: !2985)
!2989 = !DILocation(line: 1503, column: 18, scope: !2985)
!2990 = !DILocation(line: 1504, column: 34, scope: !2985)
!2991 = !DILocation(line: 1504, column: 22, scope: !2985)
!2992 = !DILocation(line: 1504, column: 10, scope: !2985)
!2993 = !DILocation(line: 1504, column: 14, scope: !2985)
!2994 = !DILocation(line: 1504, column: 20, scope: !2985)
!2995 = !DILocation(line: 1505, column: 33, scope: !2985)
!2996 = !DILocation(line: 1505, column: 21, scope: !2985)
!2997 = !DILocation(line: 1505, column: 10, scope: !2985)
!2998 = !DILocation(line: 1505, column: 14, scope: !2985)
!2999 = !DILocation(line: 1505, column: 19, scope: !2985)
!3000 = !DILocation(line: 1506, column: 34, scope: !2985)
!3001 = !DILocation(line: 1506, column: 22, scope: !2985)
!3002 = !DILocation(line: 1506, column: 10, scope: !2985)
!3003 = !DILocation(line: 1506, column: 14, scope: !2985)
!3004 = !DILocation(line: 1506, column: 20, scope: !2985)
!3005 = !DILocation(line: 1507, column: 7, scope: !2985)
!3006 = !DILocation(line: 1511, column: 22, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 1510, column: 7)
!3008 = !DILocation(line: 1511, column: 10, scope: !3007)
!3009 = !DILocation(line: 1511, column: 14, scope: !3007)
!3010 = !DILocation(line: 1511, column: 20, scope: !3007)
!3011 = !DILocation(line: 1511, column: 64, scope: !3007)
!3012 = !DILocation(line: 1512, column: 22, scope: !3007)
!3013 = !DILocation(line: 1512, column: 10, scope: !3007)
!3014 = !DILocation(line: 1512, column: 14, scope: !3007)
!3015 = !DILocation(line: 1512, column: 20, scope: !3007)
!3016 = !DILocation(line: 1512, column: 64, scope: !3007)
!3017 = !DILocation(line: 1513, column: 22, scope: !3007)
!3018 = !DILocation(line: 1513, column: 10, scope: !3007)
!3019 = !DILocation(line: 1513, column: 14, scope: !3007)
!3020 = !DILocation(line: 1513, column: 20, scope: !3007)
!3021 = !DILocation(line: 1513, column: 64, scope: !3007)
!3022 = !DILocation(line: 1514, column: 22, scope: !3007)
!3023 = !DILocation(line: 1514, column: 10, scope: !3007)
!3024 = !DILocation(line: 1514, column: 14, scope: !3007)
!3025 = !DILocation(line: 1514, column: 20, scope: !3007)
!3026 = !DILocation(line: 1514, column: 64, scope: !3007)
!3027 = !DILocation(line: 1517, column: 23, scope: !2975)
!3028 = !DILocation(line: 1517, column: 7, scope: !2975)
!3029 = !DILocation(line: 1517, column: 11, scope: !2975)
!3030 = !DILocation(line: 1517, column: 21, scope: !2975)
!3031 = !DILocation(line: 1517, column: 65, scope: !2975)
!3032 = !DILocation(line: 1518, column: 4, scope: !2975)
!3033 = !DILocation(line: 1497, column: 43, scope: !2970)
!3034 = !DILocation(line: 1497, column: 4, scope: !2970)
!3035 = distinct !{!3035, !2973, !3036}
!3036 = !DILocation(line: 1518, column: 4, scope: !2967)
!3037 = !DILocation(line: 1546, column: 23, scope: !2753)
!3038 = !DILocation(line: 1546, column: 32, scope: !2753)
!3039 = !DILocation(line: 1546, column: 16, scope: !2753)
!3040 = !DILocation(line: 1546, column: 21, scope: !2753)
!3041 = !DILocation(line: 1548, column: 17, scope: !2753)
!3042 = !DILocation(line: 1548, column: 26, scope: !2753)
!3043 = !DILocation(line: 1548, column: 4, scope: !2753)
!3044 = !DILocation(line: 1550, column: 13, scope: !2753)
!3045 = !DILocation(line: 1550, column: 22, scope: !2753)
!3046 = !DILocation(line: 1550, column: 31, scope: !2753)
!3047 = !DILocation(line: 1550, column: 4, scope: !2753)
!3048 = !DILocation(line: 1551, column: 4, scope: !2753)
!3049 = !DILocation(line: 1551, column: 13, scope: !2753)
!3050 = !DILocation(line: 1551, column: 23, scope: !2753)
!3051 = !DILocation(line: 1552, column: 13, scope: !2753)
!3052 = !DILocation(line: 1552, column: 34, scope: !2753)
!3053 = !DILocation(line: 1552, column: 22, scope: !2753)
!3054 = !DILocation(line: 1552, column: 4, scope: !2753)
!3055 = !DILocation(line: 1553, column: 1, scope: !2753)
!3056 = distinct !DISubprogram(name: "png_handle_tRNS", scope: !3, file: !3, line: 1558, type: !1268, scopeLine: 1559, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!3057 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !3056, file: !3, line: 1558, type: !6)
!3058 = !DILocation(line: 1558, column: 29, scope: !3056)
!3059 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !3056, file: !3, line: 1558, type: !258)
!3060 = !DILocation(line: 1558, column: 48, scope: !3056)
!3061 = !DILocalVariable(name: "length", arg: 3, scope: !3056, file: !3, line: 1558, type: !85)
!3062 = !DILocation(line: 1558, column: 70, scope: !3056)
!3063 = !DILocalVariable(name: "readbuf", scope: !3056, file: !3, line: 1560, type: !3064)
!3064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 2048, elements: !1422)
!3065 = !DILocation(line: 1560, column: 13, scope: !3056)
!3066 = !DILocation(line: 1564, column: 10, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 1564, column: 8)
!3068 = !DILocation(line: 1564, column: 19, scope: !3067)
!3069 = !DILocation(line: 1564, column: 24, scope: !3067)
!3070 = !DILocation(line: 1564, column: 8, scope: !3056)
!3071 = !DILocation(line: 1565, column: 17, scope: !3067)
!3072 = !DILocation(line: 1565, column: 7, scope: !3067)
!3073 = !DILocation(line: 1567, column: 13, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 1567, column: 13)
!3075 = !DILocation(line: 1567, column: 22, scope: !3074)
!3076 = !DILocation(line: 1567, column: 27, scope: !3074)
!3077 = !DILocation(line: 1567, column: 13, scope: !3067)
!3078 = !DILocation(line: 1569, column: 19, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3074, file: !3, line: 1568, column: 4)
!3080 = !DILocation(line: 1569, column: 7, scope: !3079)
!3081 = !DILocation(line: 1570, column: 22, scope: !3079)
!3082 = !DILocation(line: 1570, column: 31, scope: !3079)
!3083 = !DILocation(line: 1570, column: 7, scope: !3079)
!3084 = !DILocation(line: 1571, column: 7, scope: !3079)
!3085 = !DILocation(line: 1574, column: 13, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3074, file: !3, line: 1574, column: 13)
!3087 = !DILocation(line: 1574, column: 22, scope: !3086)
!3088 = !DILocation(line: 1574, column: 30, scope: !3086)
!3089 = !DILocation(line: 1574, column: 34, scope: !3086)
!3090 = !DILocation(line: 1574, column: 44, scope: !3086)
!3091 = !DILocation(line: 1574, column: 50, scope: !3086)
!3092 = !DILocation(line: 1574, column: 13, scope: !3074)
!3093 = !DILocation(line: 1576, column: 19, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 1575, column: 4)
!3095 = !DILocation(line: 1576, column: 7, scope: !3094)
!3096 = !DILocation(line: 1577, column: 22, scope: !3094)
!3097 = !DILocation(line: 1577, column: 31, scope: !3094)
!3098 = !DILocation(line: 1577, column: 7, scope: !3094)
!3099 = !DILocation(line: 1578, column: 7, scope: !3094)
!3100 = !DILocation(line: 1581, column: 8, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 1581, column: 8)
!3102 = !DILocation(line: 1581, column: 17, scope: !3101)
!3103 = !DILocation(line: 1581, column: 28, scope: !3101)
!3104 = !DILocation(line: 1581, column: 8, scope: !3056)
!3105 = !DILocalVariable(name: "buf", scope: !3106, file: !3, line: 1583, type: !3107)
!3106 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 1582, column: 4)
!3107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 16, elements: !3108)
!3108 = !{!483}
!3109 = !DILocation(line: 1583, column: 16, scope: !3106)
!3110 = !DILocation(line: 1585, column: 11, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 1585, column: 11)
!3112 = !DILocation(line: 1585, column: 18, scope: !3111)
!3113 = !DILocation(line: 1585, column: 11, scope: !3106)
!3114 = !DILocation(line: 1587, column: 22, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 1586, column: 7)
!3116 = !DILocation(line: 1587, column: 10, scope: !3115)
!3117 = !DILocation(line: 1588, column: 25, scope: !3115)
!3118 = !DILocation(line: 1588, column: 34, scope: !3115)
!3119 = !DILocation(line: 1588, column: 10, scope: !3115)
!3120 = !DILocation(line: 1589, column: 10, scope: !3115)
!3121 = !DILocation(line: 1592, column: 20, scope: !3106)
!3122 = !DILocation(line: 1592, column: 29, scope: !3106)
!3123 = !DILocation(line: 1592, column: 7, scope: !3106)
!3124 = !DILocation(line: 1593, column: 7, scope: !3106)
!3125 = !DILocation(line: 1593, column: 16, scope: !3106)
!3126 = !DILocation(line: 1593, column: 26, scope: !3106)
!3127 = !DILocation(line: 1594, column: 35, scope: !3106)
!3128 = !DILocation(line: 1594, column: 7, scope: !3106)
!3129 = !DILocation(line: 1594, column: 16, scope: !3106)
!3130 = !DILocation(line: 1594, column: 28, scope: !3106)
!3131 = !DILocation(line: 1594, column: 33, scope: !3106)
!3132 = !DILocation(line: 1595, column: 4, scope: !3106)
!3133 = !DILocation(line: 1597, column: 13, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 1597, column: 13)
!3135 = !DILocation(line: 1597, column: 22, scope: !3134)
!3136 = !DILocation(line: 1597, column: 33, scope: !3134)
!3137 = !DILocation(line: 1597, column: 13, scope: !3101)
!3138 = !DILocalVariable(name: "buf", scope: !3139, file: !3, line: 1599, type: !3140)
!3139 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 1598, column: 4)
!3140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 48, elements: !3141)
!3141 = !{!515}
!3142 = !DILocation(line: 1599, column: 16, scope: !3139)
!3143 = !DILocation(line: 1601, column: 11, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 1601, column: 11)
!3145 = !DILocation(line: 1601, column: 18, scope: !3144)
!3146 = !DILocation(line: 1601, column: 11, scope: !3139)
!3147 = !DILocation(line: 1603, column: 22, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3144, file: !3, line: 1602, column: 7)
!3149 = !DILocation(line: 1603, column: 10, scope: !3148)
!3150 = !DILocation(line: 1604, column: 25, scope: !3148)
!3151 = !DILocation(line: 1604, column: 34, scope: !3148)
!3152 = !DILocation(line: 1604, column: 10, scope: !3148)
!3153 = !DILocation(line: 1605, column: 10, scope: !3148)
!3154 = !DILocation(line: 1608, column: 20, scope: !3139)
!3155 = !DILocation(line: 1608, column: 29, scope: !3139)
!3156 = !DILocation(line: 1608, column: 46, scope: !3139)
!3157 = !DILocation(line: 1608, column: 34, scope: !3139)
!3158 = !DILocation(line: 1608, column: 7, scope: !3139)
!3159 = !DILocation(line: 1609, column: 7, scope: !3139)
!3160 = !DILocation(line: 1609, column: 16, scope: !3139)
!3161 = !DILocation(line: 1609, column: 26, scope: !3139)
!3162 = !DILocation(line: 1610, column: 34, scope: !3139)
!3163 = !DILocation(line: 1610, column: 7, scope: !3139)
!3164 = !DILocation(line: 1610, column: 16, scope: !3139)
!3165 = !DILocation(line: 1610, column: 28, scope: !3139)
!3166 = !DILocation(line: 1610, column: 32, scope: !3139)
!3167 = !DILocation(line: 1611, column: 36, scope: !3139)
!3168 = !DILocation(line: 1611, column: 7, scope: !3139)
!3169 = !DILocation(line: 1611, column: 16, scope: !3139)
!3170 = !DILocation(line: 1611, column: 28, scope: !3139)
!3171 = !DILocation(line: 1611, column: 34, scope: !3139)
!3172 = !DILocation(line: 1612, column: 35, scope: !3139)
!3173 = !DILocation(line: 1612, column: 7, scope: !3139)
!3174 = !DILocation(line: 1612, column: 16, scope: !3139)
!3175 = !DILocation(line: 1612, column: 28, scope: !3139)
!3176 = !DILocation(line: 1612, column: 33, scope: !3139)
!3177 = !DILocation(line: 1613, column: 4, scope: !3139)
!3178 = !DILocation(line: 1615, column: 13, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 1615, column: 13)
!3180 = !DILocation(line: 1615, column: 22, scope: !3179)
!3181 = !DILocation(line: 1615, column: 33, scope: !3179)
!3182 = !DILocation(line: 1615, column: 13, scope: !3134)
!3183 = !DILocation(line: 1617, column: 13, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 1617, column: 11)
!3185 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 1616, column: 4)
!3186 = !DILocation(line: 1617, column: 22, scope: !3184)
!3187 = !DILocation(line: 1617, column: 27, scope: !3184)
!3188 = !DILocation(line: 1617, column: 11, scope: !3185)
!3189 = !DILocation(line: 1620, column: 22, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3184, file: !3, line: 1618, column: 7)
!3191 = !DILocation(line: 1620, column: 10, scope: !3190)
!3192 = !DILocation(line: 1621, column: 7, scope: !3190)
!3193 = !DILocation(line: 1623, column: 11, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 1623, column: 11)
!3195 = !DILocation(line: 1623, column: 33, scope: !3194)
!3196 = !DILocation(line: 1623, column: 42, scope: !3194)
!3197 = !DILocation(line: 1623, column: 20, scope: !3194)
!3198 = !DILocation(line: 1623, column: 18, scope: !3194)
!3199 = !DILocation(line: 1623, column: 54, scope: !3194)
!3200 = !DILocation(line: 1624, column: 11, scope: !3194)
!3201 = !DILocation(line: 1624, column: 18, scope: !3194)
!3202 = !DILocation(line: 1623, column: 11, scope: !3185)
!3203 = !DILocation(line: 1626, column: 22, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3194, file: !3, line: 1625, column: 7)
!3205 = !DILocation(line: 1626, column: 10, scope: !3204)
!3206 = !DILocation(line: 1627, column: 25, scope: !3204)
!3207 = !DILocation(line: 1627, column: 34, scope: !3204)
!3208 = !DILocation(line: 1627, column: 10, scope: !3204)
!3209 = !DILocation(line: 1628, column: 10, scope: !3204)
!3210 = !DILocation(line: 1631, column: 11, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 1631, column: 11)
!3212 = !DILocation(line: 1631, column: 18, scope: !3211)
!3213 = !DILocation(line: 1631, column: 11, scope: !3185)
!3214 = !DILocation(line: 1633, column: 22, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 1632, column: 7)
!3216 = !DILocation(line: 1633, column: 10, scope: !3215)
!3217 = !DILocation(line: 1634, column: 25, scope: !3215)
!3218 = !DILocation(line: 1634, column: 34, scope: !3215)
!3219 = !DILocation(line: 1634, column: 10, scope: !3215)
!3220 = !DILocation(line: 1635, column: 10, scope: !3215)
!3221 = !DILocation(line: 1638, column: 20, scope: !3185)
!3222 = !DILocation(line: 1638, column: 29, scope: !3185)
!3223 = !DILocation(line: 1638, column: 50, scope: !3185)
!3224 = !DILocation(line: 1638, column: 38, scope: !3185)
!3225 = !DILocation(line: 1638, column: 7, scope: !3185)
!3226 = !DILocation(line: 1639, column: 41, scope: !3185)
!3227 = !DILocation(line: 1639, column: 28, scope: !3185)
!3228 = !DILocation(line: 1639, column: 7, scope: !3185)
!3229 = !DILocation(line: 1639, column: 16, scope: !3185)
!3230 = !DILocation(line: 1639, column: 26, scope: !3185)
!3231 = !DILocation(line: 1640, column: 4, scope: !3185)
!3232 = !DILocation(line: 1644, column: 19, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 1643, column: 4)
!3234 = !DILocation(line: 1644, column: 7, scope: !3233)
!3235 = !DILocation(line: 1645, column: 22, scope: !3233)
!3236 = !DILocation(line: 1645, column: 31, scope: !3233)
!3237 = !DILocation(line: 1645, column: 7, scope: !3233)
!3238 = !DILocation(line: 1646, column: 7, scope: !3233)
!3239 = !DILocation(line: 1649, column: 23, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 1649, column: 8)
!3241 = !DILocation(line: 1649, column: 8, scope: !3240)
!3242 = !DILocation(line: 1649, column: 8, scope: !3056)
!3243 = !DILocation(line: 1651, column: 7, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3240, file: !3, line: 1650, column: 4)
!3245 = !DILocation(line: 1651, column: 16, scope: !3244)
!3246 = !DILocation(line: 1651, column: 26, scope: !3244)
!3247 = !DILocation(line: 1652, column: 7, scope: !3244)
!3248 = !DILocation(line: 1655, column: 17, scope: !3056)
!3249 = !DILocation(line: 1655, column: 26, scope: !3056)
!3250 = !DILocation(line: 1655, column: 36, scope: !3056)
!3251 = !DILocation(line: 1655, column: 45, scope: !3056)
!3252 = !DILocation(line: 1655, column: 54, scope: !3056)
!3253 = !DILocation(line: 1656, column: 10, scope: !3056)
!3254 = !DILocation(line: 1656, column: 19, scope: !3056)
!3255 = !DILocation(line: 1655, column: 4, scope: !3056)
!3256 = !DILocation(line: 1657, column: 1, scope: !3056)
!3257 = distinct !DISubprogram(name: "png_handle_bKGD", scope: !3, file: !3, line: 1662, type: !1268, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!3258 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !3257, file: !3, line: 1662, type: !6)
!3259 = !DILocation(line: 1662, column: 29, scope: !3257)
!3260 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !3257, file: !3, line: 1662, type: !258)
!3261 = !DILocation(line: 1662, column: 48, scope: !3257)
!3262 = !DILocalVariable(name: "length", arg: 3, scope: !3257, file: !3, line: 1662, type: !85)
!3263 = !DILocation(line: 1662, column: 70, scope: !3257)
!3264 = !DILocalVariable(name: "truelen", scope: !3257, file: !3, line: 1664, type: !69)
!3265 = !DILocation(line: 1664, column: 15, scope: !3257)
!3266 = !DILocalVariable(name: "buf", scope: !3257, file: !3, line: 1665, type: !3140)
!3267 = !DILocation(line: 1665, column: 13, scope: !3257)
!3268 = !DILocalVariable(name: "background", scope: !3257, file: !3, line: 1666, type: !206)
!3269 = !DILocation(line: 1666, column: 17, scope: !3257)
!3270 = !DILocation(line: 1670, column: 10, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1670, column: 8)
!3272 = !DILocation(line: 1670, column: 19, scope: !3271)
!3273 = !DILocation(line: 1670, column: 24, scope: !3271)
!3274 = !DILocation(line: 1670, column: 8, scope: !3257)
!3275 = !DILocation(line: 1671, column: 17, scope: !3271)
!3276 = !DILocation(line: 1671, column: 7, scope: !3271)
!3277 = !DILocation(line: 1673, column: 13, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 1673, column: 13)
!3279 = !DILocation(line: 1673, column: 22, scope: !3278)
!3280 = !DILocation(line: 1673, column: 27, scope: !3278)
!3281 = !DILocation(line: 1673, column: 13, scope: !3271)
!3282 = !DILocation(line: 1675, column: 19, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 1674, column: 4)
!3284 = !DILocation(line: 1675, column: 7, scope: !3283)
!3285 = !DILocation(line: 1676, column: 22, scope: !3283)
!3286 = !DILocation(line: 1676, column: 31, scope: !3283)
!3287 = !DILocation(line: 1676, column: 7, scope: !3283)
!3288 = !DILocation(line: 1677, column: 7, scope: !3283)
!3289 = !DILocation(line: 1680, column: 13, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 1680, column: 13)
!3291 = !DILocation(line: 1680, column: 22, scope: !3290)
!3292 = !DILocation(line: 1680, column: 33, scope: !3290)
!3293 = !DILocation(line: 1680, column: 59, scope: !3290)
!3294 = !DILocation(line: 1681, column: 10, scope: !3290)
!3295 = !DILocation(line: 1681, column: 19, scope: !3290)
!3296 = !DILocation(line: 1681, column: 24, scope: !3290)
!3297 = !DILocation(line: 1680, column: 13, scope: !3278)
!3298 = !DILocation(line: 1683, column: 19, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3290, file: !3, line: 1682, column: 4)
!3300 = !DILocation(line: 1683, column: 7, scope: !3299)
!3301 = !DILocation(line: 1684, column: 22, scope: !3299)
!3302 = !DILocation(line: 1684, column: 31, scope: !3299)
!3303 = !DILocation(line: 1684, column: 7, scope: !3299)
!3304 = !DILocation(line: 1685, column: 7, scope: !3299)
!3305 = !DILocation(line: 1688, column: 13, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3290, file: !3, line: 1688, column: 13)
!3307 = !DILocation(line: 1688, column: 22, scope: !3306)
!3308 = !DILocation(line: 1688, column: 30, scope: !3306)
!3309 = !DILocation(line: 1688, column: 34, scope: !3306)
!3310 = !DILocation(line: 1688, column: 44, scope: !3306)
!3311 = !DILocation(line: 1688, column: 50, scope: !3306)
!3312 = !DILocation(line: 1688, column: 13, scope: !3290)
!3313 = !DILocation(line: 1690, column: 19, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 1689, column: 4)
!3315 = !DILocation(line: 1690, column: 7, scope: !3314)
!3316 = !DILocation(line: 1691, column: 22, scope: !3314)
!3317 = !DILocation(line: 1691, column: 31, scope: !3314)
!3318 = !DILocation(line: 1691, column: 7, scope: !3314)
!3319 = !DILocation(line: 1692, column: 7, scope: !3314)
!3320 = !DILocation(line: 1695, column: 8, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1695, column: 8)
!3322 = !DILocation(line: 1695, column: 17, scope: !3321)
!3323 = !DILocation(line: 1695, column: 28, scope: !3321)
!3324 = !DILocation(line: 1695, column: 8, scope: !3257)
!3325 = !DILocation(line: 1696, column: 15, scope: !3321)
!3326 = !DILocation(line: 1696, column: 7, scope: !3321)
!3327 = !DILocation(line: 1698, column: 13, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 1698, column: 13)
!3329 = !DILocation(line: 1698, column: 22, scope: !3328)
!3330 = !DILocation(line: 1698, column: 33, scope: !3328)
!3331 = !DILocation(line: 1698, column: 13, scope: !3321)
!3332 = !DILocation(line: 1699, column: 15, scope: !3328)
!3333 = !DILocation(line: 1699, column: 7, scope: !3328)
!3334 = !DILocation(line: 1702, column: 15, scope: !3328)
!3335 = !DILocation(line: 1704, column: 8, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1704, column: 8)
!3337 = !DILocation(line: 1704, column: 18, scope: !3336)
!3338 = !DILocation(line: 1704, column: 15, scope: !3336)
!3339 = !DILocation(line: 1704, column: 8, scope: !3257)
!3340 = !DILocation(line: 1706, column: 19, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 1705, column: 4)
!3342 = !DILocation(line: 1706, column: 7, scope: !3341)
!3343 = !DILocation(line: 1707, column: 22, scope: !3341)
!3344 = !DILocation(line: 1707, column: 31, scope: !3341)
!3345 = !DILocation(line: 1707, column: 7, scope: !3341)
!3346 = !DILocation(line: 1708, column: 7, scope: !3341)
!3347 = !DILocation(line: 1711, column: 17, scope: !3257)
!3348 = !DILocation(line: 1711, column: 26, scope: !3257)
!3349 = !DILocation(line: 1711, column: 31, scope: !3257)
!3350 = !DILocation(line: 1711, column: 4, scope: !3257)
!3351 = !DILocation(line: 1713, column: 23, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1713, column: 8)
!3353 = !DILocation(line: 1713, column: 8, scope: !3352)
!3354 = !DILocation(line: 1713, column: 8, scope: !3257)
!3355 = !DILocation(line: 1714, column: 7, scope: !3352)
!3356 = !DILocation(line: 1721, column: 8, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1721, column: 8)
!3358 = !DILocation(line: 1721, column: 17, scope: !3357)
!3359 = !DILocation(line: 1721, column: 28, scope: !3357)
!3360 = !DILocation(line: 1721, column: 8, scope: !3257)
!3361 = !DILocation(line: 1723, column: 26, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 1722, column: 4)
!3363 = !DILocation(line: 1723, column: 18, scope: !3362)
!3364 = !DILocation(line: 1723, column: 24, scope: !3362)
!3365 = !DILocation(line: 1725, column: 11, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 1725, column: 11)
!3367 = !DILocation(line: 1725, column: 20, scope: !3366)
!3368 = !DILocation(line: 1725, column: 23, scope: !3366)
!3369 = !DILocation(line: 1725, column: 33, scope: !3366)
!3370 = !DILocation(line: 1725, column: 11, scope: !3362)
!3371 = !DILocation(line: 1727, column: 14, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 1727, column: 14)
!3373 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 1726, column: 7)
!3374 = !DILocation(line: 1727, column: 24, scope: !3372)
!3375 = !DILocation(line: 1727, column: 34, scope: !3372)
!3376 = !DILocation(line: 1727, column: 21, scope: !3372)
!3377 = !DILocation(line: 1727, column: 14, scope: !3373)
!3378 = !DILocation(line: 1729, column: 25, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 1728, column: 10)
!3380 = !DILocation(line: 1729, column: 13, scope: !3379)
!3381 = !DILocation(line: 1730, column: 13, scope: !3379)
!3382 = !DILocation(line: 1733, column: 40, scope: !3373)
!3383 = !DILocation(line: 1733, column: 49, scope: !3373)
!3384 = !DILocation(line: 1733, column: 57, scope: !3373)
!3385 = !DILocation(line: 1733, column: 65, scope: !3373)
!3386 = !DILocation(line: 1733, column: 27, scope: !3373)
!3387 = !DILocation(line: 1733, column: 21, scope: !3373)
!3388 = !DILocation(line: 1733, column: 25, scope: !3373)
!3389 = !DILocation(line: 1734, column: 42, scope: !3373)
!3390 = !DILocation(line: 1734, column: 51, scope: !3373)
!3391 = !DILocation(line: 1734, column: 59, scope: !3373)
!3392 = !DILocation(line: 1734, column: 67, scope: !3373)
!3393 = !DILocation(line: 1734, column: 29, scope: !3373)
!3394 = !DILocation(line: 1734, column: 21, scope: !3373)
!3395 = !DILocation(line: 1734, column: 27, scope: !3373)
!3396 = !DILocation(line: 1735, column: 41, scope: !3373)
!3397 = !DILocation(line: 1735, column: 50, scope: !3373)
!3398 = !DILocation(line: 1735, column: 58, scope: !3373)
!3399 = !DILocation(line: 1735, column: 66, scope: !3373)
!3400 = !DILocation(line: 1735, column: 28, scope: !3373)
!3401 = !DILocation(line: 1735, column: 21, scope: !3373)
!3402 = !DILocation(line: 1735, column: 26, scope: !3373)
!3403 = !DILocation(line: 1736, column: 7, scope: !3373)
!3404 = !DILocation(line: 1739, column: 57, scope: !3366)
!3405 = !DILocation(line: 1739, column: 62, scope: !3366)
!3406 = !DILocation(line: 1739, column: 38, scope: !3366)
!3407 = !DILocation(line: 1739, column: 44, scope: !3366)
!3408 = !DILocation(line: 1739, column: 21, scope: !3366)
!3409 = !DILocation(line: 1739, column: 25, scope: !3366)
!3410 = !DILocation(line: 1741, column: 18, scope: !3362)
!3411 = !DILocation(line: 1741, column: 23, scope: !3362)
!3412 = !DILocation(line: 1742, column: 4, scope: !3362)
!3413 = !DILocation(line: 1744, column: 15, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 1744, column: 13)
!3415 = !DILocation(line: 1744, column: 24, scope: !3414)
!3416 = !DILocation(line: 1744, column: 35, scope: !3414)
!3417 = !DILocation(line: 1744, column: 13, scope: !3357)
!3418 = !DILocation(line: 1746, column: 18, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 1745, column: 4)
!3420 = !DILocation(line: 1746, column: 24, scope: !3419)
!3421 = !DILocation(line: 1750, column: 25, scope: !3419)
!3422 = !DILocation(line: 1750, column: 18, scope: !3419)
!3423 = !DILocation(line: 1750, column: 23, scope: !3419)
!3424 = !DILocation(line: 1749, column: 18, scope: !3419)
!3425 = !DILocation(line: 1749, column: 23, scope: !3419)
!3426 = !DILocation(line: 1748, column: 18, scope: !3419)
!3427 = !DILocation(line: 1748, column: 24, scope: !3419)
!3428 = !DILocation(line: 1747, column: 18, scope: !3419)
!3429 = !DILocation(line: 1747, column: 22, scope: !3419)
!3430 = !DILocation(line: 1751, column: 4, scope: !3419)
!3431 = !DILocation(line: 1755, column: 18, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 1754, column: 4)
!3433 = !DILocation(line: 1755, column: 24, scope: !3432)
!3434 = !DILocation(line: 1756, column: 24, scope: !3432)
!3435 = !DILocation(line: 1756, column: 18, scope: !3432)
!3436 = !DILocation(line: 1756, column: 22, scope: !3432)
!3437 = !DILocation(line: 1757, column: 26, scope: !3432)
!3438 = !DILocation(line: 1757, column: 18, scope: !3432)
!3439 = !DILocation(line: 1757, column: 24, scope: !3432)
!3440 = !DILocation(line: 1758, column: 25, scope: !3432)
!3441 = !DILocation(line: 1758, column: 18, scope: !3432)
!3442 = !DILocation(line: 1758, column: 23, scope: !3432)
!3443 = !DILocation(line: 1759, column: 18, scope: !3432)
!3444 = !DILocation(line: 1759, column: 23, scope: !3432)
!3445 = !DILocation(line: 1762, column: 17, scope: !3257)
!3446 = !DILocation(line: 1762, column: 26, scope: !3257)
!3447 = !DILocation(line: 1762, column: 4, scope: !3257)
!3448 = !DILocation(line: 1763, column: 1, scope: !3257)
!3449 = distinct !DISubprogram(name: "png_handle_hIST", scope: !3, file: !3, line: 1768, type: !1268, scopeLine: 1769, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!3450 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !3449, file: !3, line: 1768, type: !6)
!3451 = !DILocation(line: 1768, column: 29, scope: !3449)
!3452 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !3449, file: !3, line: 1768, type: !258)
!3453 = !DILocation(line: 1768, column: 48, scope: !3449)
!3454 = !DILocalVariable(name: "length", arg: 3, scope: !3449, file: !3, line: 1768, type: !85)
!3455 = !DILocation(line: 1768, column: 70, scope: !3449)
!3456 = !DILocalVariable(name: "num", scope: !3449, file: !3, line: 1770, type: !86)
!3457 = !DILocation(line: 1770, column: 17, scope: !3449)
!3458 = !DILocalVariable(name: "i", scope: !3449, file: !3, line: 1770, type: !86)
!3459 = !DILocation(line: 1770, column: 22, scope: !3449)
!3460 = !DILocalVariable(name: "readbuf", scope: !3449, file: !3, line: 1771, type: !3461)
!3461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 4096, elements: !1422)
!3462 = !DILocation(line: 1771, column: 16, scope: !3449)
!3463 = !DILocation(line: 1775, column: 10, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 1775, column: 8)
!3465 = !DILocation(line: 1775, column: 19, scope: !3464)
!3466 = !DILocation(line: 1775, column: 24, scope: !3464)
!3467 = !DILocation(line: 1775, column: 8, scope: !3449)
!3468 = !DILocation(line: 1776, column: 17, scope: !3464)
!3469 = !DILocation(line: 1776, column: 7, scope: !3464)
!3470 = !DILocation(line: 1778, column: 13, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3464, file: !3, line: 1778, column: 13)
!3472 = !DILocation(line: 1778, column: 22, scope: !3471)
!3473 = !DILocation(line: 1778, column: 27, scope: !3471)
!3474 = !DILocation(line: 1778, column: 13, scope: !3464)
!3475 = !DILocation(line: 1780, column: 19, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3471, file: !3, line: 1779, column: 4)
!3477 = !DILocation(line: 1780, column: 7, scope: !3476)
!3478 = !DILocation(line: 1781, column: 22, scope: !3476)
!3479 = !DILocation(line: 1781, column: 31, scope: !3476)
!3480 = !DILocation(line: 1781, column: 7, scope: !3476)
!3481 = !DILocation(line: 1782, column: 7, scope: !3476)
!3482 = !DILocation(line: 1785, column: 15, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3471, file: !3, line: 1785, column: 13)
!3484 = !DILocation(line: 1785, column: 24, scope: !3483)
!3485 = !DILocation(line: 1785, column: 29, scope: !3483)
!3486 = !DILocation(line: 1785, column: 13, scope: !3471)
!3487 = !DILocation(line: 1787, column: 19, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1786, column: 4)
!3489 = !DILocation(line: 1787, column: 7, scope: !3488)
!3490 = !DILocation(line: 1788, column: 22, scope: !3488)
!3491 = !DILocation(line: 1788, column: 31, scope: !3488)
!3492 = !DILocation(line: 1788, column: 7, scope: !3488)
!3493 = !DILocation(line: 1789, column: 7, scope: !3488)
!3494 = !DILocation(line: 1792, column: 13, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1792, column: 13)
!3496 = !DILocation(line: 1792, column: 22, scope: !3495)
!3497 = !DILocation(line: 1792, column: 30, scope: !3495)
!3498 = !DILocation(line: 1792, column: 34, scope: !3495)
!3499 = !DILocation(line: 1792, column: 44, scope: !3495)
!3500 = !DILocation(line: 1792, column: 50, scope: !3495)
!3501 = !DILocation(line: 1792, column: 13, scope: !3483)
!3502 = !DILocation(line: 1794, column: 19, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 1793, column: 4)
!3504 = !DILocation(line: 1794, column: 7, scope: !3503)
!3505 = !DILocation(line: 1795, column: 22, scope: !3503)
!3506 = !DILocation(line: 1795, column: 31, scope: !3503)
!3507 = !DILocation(line: 1795, column: 7, scope: !3503)
!3508 = !DILocation(line: 1796, column: 7, scope: !3503)
!3509 = !DILocation(line: 1799, column: 8, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 1799, column: 8)
!3511 = !DILocation(line: 1799, column: 15, scope: !3510)
!3512 = !DILocation(line: 1799, column: 42, scope: !3510)
!3513 = !DILocation(line: 1800, column: 8, scope: !3510)
!3514 = !DILocation(line: 1800, column: 36, scope: !3510)
!3515 = !DILocation(line: 1800, column: 45, scope: !3510)
!3516 = !DILocation(line: 1800, column: 35, scope: !3510)
!3517 = !DILocation(line: 1800, column: 15, scope: !3510)
!3518 = !DILocation(line: 1799, column: 8, scope: !3449)
!3519 = !DILocation(line: 1802, column: 19, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3510, file: !3, line: 1801, column: 4)
!3521 = !DILocation(line: 1802, column: 7, scope: !3520)
!3522 = !DILocation(line: 1803, column: 22, scope: !3520)
!3523 = !DILocation(line: 1803, column: 31, scope: !3520)
!3524 = !DILocation(line: 1803, column: 7, scope: !3520)
!3525 = !DILocation(line: 1804, column: 7, scope: !3520)
!3526 = !DILocation(line: 1807, column: 10, scope: !3449)
!3527 = !DILocation(line: 1807, column: 17, scope: !3449)
!3528 = !DILocation(line: 1807, column: 8, scope: !3449)
!3529 = !DILocation(line: 1809, column: 11, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 1809, column: 4)
!3531 = !DILocation(line: 1809, column: 9, scope: !3530)
!3532 = !DILocation(line: 1809, column: 16, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 1809, column: 4)
!3534 = !DILocation(line: 1809, column: 20, scope: !3533)
!3535 = !DILocation(line: 1809, column: 18, scope: !3533)
!3536 = !DILocation(line: 1809, column: 4, scope: !3530)
!3537 = !DILocalVariable(name: "buf", scope: !3538, file: !3, line: 1811, type: !3107)
!3538 = distinct !DILexicalBlock(scope: !3533, file: !3, line: 1810, column: 4)
!3539 = !DILocation(line: 1811, column: 16, scope: !3538)
!3540 = !DILocation(line: 1813, column: 20, scope: !3538)
!3541 = !DILocation(line: 1813, column: 29, scope: !3538)
!3542 = !DILocation(line: 1813, column: 7, scope: !3538)
!3543 = !DILocation(line: 1814, column: 20, scope: !3538)
!3544 = !DILocation(line: 1814, column: 15, scope: !3538)
!3545 = !DILocation(line: 1814, column: 7, scope: !3538)
!3546 = !DILocation(line: 1814, column: 18, scope: !3538)
!3547 = !DILocation(line: 1815, column: 4, scope: !3538)
!3548 = !DILocation(line: 1809, column: 26, scope: !3533)
!3549 = !DILocation(line: 1809, column: 4, scope: !3533)
!3550 = distinct !{!3550, !3536, !3551}
!3551 = !DILocation(line: 1815, column: 4, scope: !3530)
!3552 = !DILocation(line: 1817, column: 23, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 1817, column: 8)
!3554 = !DILocation(line: 1817, column: 8, scope: !3553)
!3555 = !DILocation(line: 1817, column: 8, scope: !3449)
!3556 = !DILocation(line: 1818, column: 7, scope: !3553)
!3557 = !DILocation(line: 1820, column: 17, scope: !3449)
!3558 = !DILocation(line: 1820, column: 26, scope: !3449)
!3559 = !DILocation(line: 1820, column: 36, scope: !3449)
!3560 = !DILocation(line: 1820, column: 4, scope: !3449)
!3561 = !DILocation(line: 1821, column: 1, scope: !3449)
!3562 = distinct !DISubprogram(name: "png_handle_pHYs", scope: !3, file: !3, line: 1826, type: !1268, scopeLine: 1827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!3563 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !3562, file: !3, line: 1826, type: !6)
!3564 = !DILocation(line: 1826, column: 29, scope: !3562)
!3565 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !3562, file: !3, line: 1826, type: !258)
!3566 = !DILocation(line: 1826, column: 48, scope: !3562)
!3567 = !DILocalVariable(name: "length", arg: 3, scope: !3562, file: !3, line: 1826, type: !85)
!3568 = !DILocation(line: 1826, column: 70, scope: !3562)
!3569 = !DILocalVariable(name: "buf", scope: !3562, file: !3, line: 1828, type: !3570)
!3570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 72, elements: !3571)
!3571 = !{!3572}
!3572 = !DISubrange(count: 9)
!3573 = !DILocation(line: 1828, column: 13, scope: !3562)
!3574 = !DILocalVariable(name: "res_x", scope: !3562, file: !3, line: 1829, type: !85)
!3575 = !DILocation(line: 1829, column: 16, scope: !3562)
!3576 = !DILocalVariable(name: "res_y", scope: !3562, file: !3, line: 1829, type: !85)
!3577 = !DILocation(line: 1829, column: 23, scope: !3562)
!3578 = !DILocalVariable(name: "unit_type", scope: !3562, file: !3, line: 1830, type: !27)
!3579 = !DILocation(line: 1830, column: 8, scope: !3562)
!3580 = !DILocation(line: 1834, column: 10, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 1834, column: 8)
!3582 = !DILocation(line: 1834, column: 19, scope: !3581)
!3583 = !DILocation(line: 1834, column: 24, scope: !3581)
!3584 = !DILocation(line: 1834, column: 8, scope: !3562)
!3585 = !DILocation(line: 1835, column: 17, scope: !3581)
!3586 = !DILocation(line: 1835, column: 7, scope: !3581)
!3587 = !DILocation(line: 1837, column: 13, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 1837, column: 13)
!3589 = !DILocation(line: 1837, column: 22, scope: !3588)
!3590 = !DILocation(line: 1837, column: 27, scope: !3588)
!3591 = !DILocation(line: 1837, column: 13, scope: !3581)
!3592 = !DILocation(line: 1839, column: 19, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3588, file: !3, line: 1838, column: 4)
!3594 = !DILocation(line: 1839, column: 7, scope: !3593)
!3595 = !DILocation(line: 1840, column: 22, scope: !3593)
!3596 = !DILocation(line: 1840, column: 31, scope: !3593)
!3597 = !DILocation(line: 1840, column: 7, scope: !3593)
!3598 = !DILocation(line: 1841, column: 7, scope: !3593)
!3599 = !DILocation(line: 1844, column: 13, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3588, file: !3, line: 1844, column: 13)
!3601 = !DILocation(line: 1844, column: 22, scope: !3600)
!3602 = !DILocation(line: 1844, column: 30, scope: !3600)
!3603 = !DILocation(line: 1844, column: 34, scope: !3600)
!3604 = !DILocation(line: 1844, column: 44, scope: !3600)
!3605 = !DILocation(line: 1844, column: 50, scope: !3600)
!3606 = !DILocation(line: 1844, column: 13, scope: !3588)
!3607 = !DILocation(line: 1846, column: 19, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3600, file: !3, line: 1845, column: 4)
!3609 = !DILocation(line: 1846, column: 7, scope: !3608)
!3610 = !DILocation(line: 1847, column: 22, scope: !3608)
!3611 = !DILocation(line: 1847, column: 31, scope: !3608)
!3612 = !DILocation(line: 1847, column: 7, scope: !3608)
!3613 = !DILocation(line: 1848, column: 7, scope: !3608)
!3614 = !DILocation(line: 1851, column: 8, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 1851, column: 8)
!3616 = !DILocation(line: 1851, column: 15, scope: !3615)
!3617 = !DILocation(line: 1851, column: 8, scope: !3562)
!3618 = !DILocation(line: 1853, column: 19, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 1852, column: 4)
!3620 = !DILocation(line: 1853, column: 7, scope: !3619)
!3621 = !DILocation(line: 1854, column: 22, scope: !3619)
!3622 = !DILocation(line: 1854, column: 31, scope: !3619)
!3623 = !DILocation(line: 1854, column: 7, scope: !3619)
!3624 = !DILocation(line: 1855, column: 7, scope: !3619)
!3625 = !DILocation(line: 1858, column: 17, scope: !3562)
!3626 = !DILocation(line: 1858, column: 26, scope: !3562)
!3627 = !DILocation(line: 1858, column: 4, scope: !3562)
!3628 = !DILocation(line: 1860, column: 23, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 1860, column: 8)
!3630 = !DILocation(line: 1860, column: 8, scope: !3629)
!3631 = !DILocation(line: 1860, column: 8, scope: !3562)
!3632 = !DILocation(line: 1861, column: 7, scope: !3629)
!3633 = !DILocation(line: 1863, column: 12, scope: !3562)
!3634 = !DILocation(line: 1863, column: 10, scope: !3562)
!3635 = !DILocation(line: 1864, column: 12, scope: !3562)
!3636 = !DILocation(line: 1864, column: 10, scope: !3562)
!3637 = !DILocation(line: 1865, column: 16, scope: !3562)
!3638 = !DILocation(line: 1865, column: 14, scope: !3562)
!3639 = !DILocation(line: 1866, column: 17, scope: !3562)
!3640 = !DILocation(line: 1866, column: 26, scope: !3562)
!3641 = !DILocation(line: 1866, column: 36, scope: !3562)
!3642 = !DILocation(line: 1866, column: 43, scope: !3562)
!3643 = !DILocation(line: 1866, column: 50, scope: !3562)
!3644 = !DILocation(line: 1866, column: 4, scope: !3562)
!3645 = !DILocation(line: 1867, column: 1, scope: !3562)
!3646 = distinct !DISubprogram(name: "png_handle_oFFs", scope: !3, file: !3, line: 1872, type: !1268, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!3647 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !3646, file: !3, line: 1872, type: !6)
!3648 = !DILocation(line: 1872, column: 29, scope: !3646)
!3649 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !3646, file: !3, line: 1872, type: !258)
!3650 = !DILocation(line: 1872, column: 48, scope: !3646)
!3651 = !DILocalVariable(name: "length", arg: 3, scope: !3646, file: !3, line: 1872, type: !85)
!3652 = !DILocation(line: 1872, column: 70, scope: !3646)
!3653 = !DILocalVariable(name: "buf", scope: !3646, file: !3, line: 1874, type: !3570)
!3654 = !DILocation(line: 1874, column: 13, scope: !3646)
!3655 = !DILocalVariable(name: "offset_x", scope: !3646, file: !3, line: 1875, type: !204)
!3656 = !DILocation(line: 1875, column: 15, scope: !3646)
!3657 = !DILocalVariable(name: "offset_y", scope: !3646, file: !3, line: 1875, type: !204)
!3658 = !DILocation(line: 1875, column: 25, scope: !3646)
!3659 = !DILocalVariable(name: "unit_type", scope: !3646, file: !3, line: 1876, type: !27)
!3660 = !DILocation(line: 1876, column: 8, scope: !3646)
!3661 = !DILocation(line: 1880, column: 10, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 1880, column: 8)
!3663 = !DILocation(line: 1880, column: 19, scope: !3662)
!3664 = !DILocation(line: 1880, column: 24, scope: !3662)
!3665 = !DILocation(line: 1880, column: 8, scope: !3646)
!3666 = !DILocation(line: 1881, column: 17, scope: !3662)
!3667 = !DILocation(line: 1881, column: 7, scope: !3662)
!3668 = !DILocation(line: 1883, column: 13, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3662, file: !3, line: 1883, column: 13)
!3670 = !DILocation(line: 1883, column: 22, scope: !3669)
!3671 = !DILocation(line: 1883, column: 27, scope: !3669)
!3672 = !DILocation(line: 1883, column: 13, scope: !3662)
!3673 = !DILocation(line: 1885, column: 19, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 1884, column: 4)
!3675 = !DILocation(line: 1885, column: 7, scope: !3674)
!3676 = !DILocation(line: 1886, column: 22, scope: !3674)
!3677 = !DILocation(line: 1886, column: 31, scope: !3674)
!3678 = !DILocation(line: 1886, column: 7, scope: !3674)
!3679 = !DILocation(line: 1887, column: 7, scope: !3674)
!3680 = !DILocation(line: 1890, column: 13, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 1890, column: 13)
!3682 = !DILocation(line: 1890, column: 22, scope: !3681)
!3683 = !DILocation(line: 1890, column: 30, scope: !3681)
!3684 = !DILocation(line: 1890, column: 34, scope: !3681)
!3685 = !DILocation(line: 1890, column: 44, scope: !3681)
!3686 = !DILocation(line: 1890, column: 50, scope: !3681)
!3687 = !DILocation(line: 1890, column: 13, scope: !3669)
!3688 = !DILocation(line: 1892, column: 19, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 1891, column: 4)
!3690 = !DILocation(line: 1892, column: 7, scope: !3689)
!3691 = !DILocation(line: 1893, column: 22, scope: !3689)
!3692 = !DILocation(line: 1893, column: 31, scope: !3689)
!3693 = !DILocation(line: 1893, column: 7, scope: !3689)
!3694 = !DILocation(line: 1894, column: 7, scope: !3689)
!3695 = !DILocation(line: 1897, column: 8, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 1897, column: 8)
!3697 = !DILocation(line: 1897, column: 15, scope: !3696)
!3698 = !DILocation(line: 1897, column: 8, scope: !3646)
!3699 = !DILocation(line: 1899, column: 19, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 1898, column: 4)
!3701 = !DILocation(line: 1899, column: 7, scope: !3700)
!3702 = !DILocation(line: 1900, column: 22, scope: !3700)
!3703 = !DILocation(line: 1900, column: 31, scope: !3700)
!3704 = !DILocation(line: 1900, column: 7, scope: !3700)
!3705 = !DILocation(line: 1901, column: 7, scope: !3700)
!3706 = !DILocation(line: 1904, column: 17, scope: !3646)
!3707 = !DILocation(line: 1904, column: 26, scope: !3646)
!3708 = !DILocation(line: 1904, column: 4, scope: !3646)
!3709 = !DILocation(line: 1906, column: 23, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 1906, column: 8)
!3711 = !DILocation(line: 1906, column: 8, scope: !3710)
!3712 = !DILocation(line: 1906, column: 8, scope: !3646)
!3713 = !DILocation(line: 1907, column: 7, scope: !3710)
!3714 = !DILocation(line: 1909, column: 15, scope: !3646)
!3715 = !DILocation(line: 1909, column: 13, scope: !3646)
!3716 = !DILocation(line: 1910, column: 15, scope: !3646)
!3717 = !DILocation(line: 1910, column: 13, scope: !3646)
!3718 = !DILocation(line: 1911, column: 16, scope: !3646)
!3719 = !DILocation(line: 1911, column: 14, scope: !3646)
!3720 = !DILocation(line: 1912, column: 17, scope: !3646)
!3721 = !DILocation(line: 1912, column: 26, scope: !3646)
!3722 = !DILocation(line: 1912, column: 36, scope: !3646)
!3723 = !DILocation(line: 1912, column: 46, scope: !3646)
!3724 = !DILocation(line: 1912, column: 56, scope: !3646)
!3725 = !DILocation(line: 1912, column: 4, scope: !3646)
!3726 = !DILocation(line: 1913, column: 1, scope: !3646)
!3727 = distinct !DISubprogram(name: "png_handle_pCAL", scope: !3, file: !3, line: 1919, type: !1268, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!3728 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !3727, file: !3, line: 1919, type: !6)
!3729 = !DILocation(line: 1919, column: 29, scope: !3727)
!3730 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !3727, file: !3, line: 1919, type: !258)
!3731 = !DILocation(line: 1919, column: 48, scope: !3727)
!3732 = !DILocalVariable(name: "length", arg: 3, scope: !3727, file: !3, line: 1919, type: !85)
!3733 = !DILocation(line: 1919, column: 70, scope: !3727)
!3734 = !DILocalVariable(name: "X0", scope: !3727, file: !3, line: 1921, type: !204)
!3735 = !DILocation(line: 1921, column: 15, scope: !3727)
!3736 = !DILocalVariable(name: "X1", scope: !3727, file: !3, line: 1921, type: !204)
!3737 = !DILocation(line: 1921, column: 19, scope: !3727)
!3738 = !DILocalVariable(name: "type", scope: !3727, file: !3, line: 1922, type: !67)
!3739 = !DILocation(line: 1922, column: 13, scope: !3727)
!3740 = !DILocalVariable(name: "nparams", scope: !3727, file: !3, line: 1922, type: !67)
!3741 = !DILocation(line: 1922, column: 19, scope: !3727)
!3742 = !DILocalVariable(name: "buf", scope: !3727, file: !3, line: 1923, type: !293)
!3743 = !DILocation(line: 1923, column: 14, scope: !3727)
!3744 = !DILocalVariable(name: "units", scope: !3727, file: !3, line: 1923, type: !293)
!3745 = !DILocation(line: 1923, column: 19, scope: !3727)
!3746 = !DILocalVariable(name: "endptr", scope: !3727, file: !3, line: 1923, type: !293)
!3747 = !DILocation(line: 1923, column: 26, scope: !3727)
!3748 = !DILocalVariable(name: "params", scope: !3727, file: !3, line: 1924, type: !334)
!3749 = !DILocation(line: 1924, column: 15, scope: !3727)
!3750 = !DILocalVariable(name: "slength", scope: !3727, file: !3, line: 1925, type: !69)
!3751 = !DILocation(line: 1925, column: 15, scope: !3727)
!3752 = !DILocalVariable(name: "i", scope: !3727, file: !3, line: 1926, type: !27)
!3753 = !DILocation(line: 1926, column: 8, scope: !3727)
!3754 = !DILocation(line: 1930, column: 10, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 1930, column: 8)
!3756 = !DILocation(line: 1930, column: 19, scope: !3755)
!3757 = !DILocation(line: 1930, column: 24, scope: !3755)
!3758 = !DILocation(line: 1930, column: 8, scope: !3727)
!3759 = !DILocation(line: 1931, column: 17, scope: !3755)
!3760 = !DILocation(line: 1931, column: 7, scope: !3755)
!3761 = !DILocation(line: 1933, column: 13, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 1933, column: 13)
!3763 = !DILocation(line: 1933, column: 22, scope: !3762)
!3764 = !DILocation(line: 1933, column: 27, scope: !3762)
!3765 = !DILocation(line: 1933, column: 13, scope: !3755)
!3766 = !DILocation(line: 1935, column: 19, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 1934, column: 4)
!3768 = !DILocation(line: 1935, column: 7, scope: !3767)
!3769 = !DILocation(line: 1936, column: 22, scope: !3767)
!3770 = !DILocation(line: 1936, column: 31, scope: !3767)
!3771 = !DILocation(line: 1936, column: 7, scope: !3767)
!3772 = !DILocation(line: 1937, column: 7, scope: !3767)
!3773 = !DILocation(line: 1940, column: 13, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 1940, column: 13)
!3775 = !DILocation(line: 1940, column: 22, scope: !3774)
!3776 = !DILocation(line: 1940, column: 30, scope: !3774)
!3777 = !DILocation(line: 1940, column: 34, scope: !3774)
!3778 = !DILocation(line: 1940, column: 44, scope: !3774)
!3779 = !DILocation(line: 1940, column: 50, scope: !3774)
!3780 = !DILocation(line: 1940, column: 13, scope: !3762)
!3781 = !DILocation(line: 1942, column: 19, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 1941, column: 4)
!3783 = !DILocation(line: 1942, column: 7, scope: !3782)
!3784 = !DILocation(line: 1943, column: 22, scope: !3782)
!3785 = !DILocation(line: 1943, column: 31, scope: !3782)
!3786 = !DILocation(line: 1943, column: 7, scope: !3782)
!3787 = !DILocation(line: 1944, column: 7, scope: !3782)
!3788 = !DILocation(line: 1949, column: 13, scope: !3727)
!3789 = !DILocation(line: 1949, column: 22, scope: !3727)
!3790 = !DILocation(line: 1949, column: 31, scope: !3727)
!3791 = !DILocation(line: 1949, column: 4, scope: !3727)
!3792 = !DILocation(line: 1950, column: 52, scope: !3727)
!3793 = !DILocation(line: 1950, column: 61, scope: !3727)
!3794 = !DILocation(line: 1950, column: 68, scope: !3727)
!3795 = !DILocation(line: 1950, column: 36, scope: !3727)
!3796 = !DILocation(line: 1950, column: 4, scope: !3727)
!3797 = !DILocation(line: 1950, column: 13, scope: !3727)
!3798 = !DILocation(line: 1950, column: 23, scope: !3727)
!3799 = !DILocation(line: 1952, column: 8, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 1952, column: 8)
!3801 = !DILocation(line: 1952, column: 17, scope: !3800)
!3802 = !DILocation(line: 1952, column: 27, scope: !3800)
!3803 = !DILocation(line: 1952, column: 8, scope: !3727)
!3804 = !DILocation(line: 1954, column: 19, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 1953, column: 4)
!3806 = !DILocation(line: 1954, column: 7, scope: !3805)
!3807 = !DILocation(line: 1955, column: 7, scope: !3805)
!3808 = !DILocation(line: 1958, column: 14, scope: !3727)
!3809 = !DILocation(line: 1958, column: 12, scope: !3727)
!3810 = !DILocation(line: 1959, column: 17, scope: !3727)
!3811 = !DILocation(line: 1959, column: 37, scope: !3727)
!3812 = !DILocation(line: 1959, column: 46, scope: !3727)
!3813 = !DILocation(line: 1959, column: 57, scope: !3727)
!3814 = !DILocation(line: 1959, column: 4, scope: !3727)
!3815 = !DILocation(line: 1961, column: 23, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 1961, column: 8)
!3817 = !DILocation(line: 1961, column: 8, scope: !3816)
!3818 = !DILocation(line: 1961, column: 8, scope: !3727)
!3819 = !DILocation(line: 1963, column: 16, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 1962, column: 4)
!3821 = !DILocation(line: 1963, column: 25, scope: !3820)
!3822 = !DILocation(line: 1963, column: 34, scope: !3820)
!3823 = !DILocation(line: 1963, column: 7, scope: !3820)
!3824 = !DILocation(line: 1964, column: 7, scope: !3820)
!3825 = !DILocation(line: 1964, column: 16, scope: !3820)
!3826 = !DILocation(line: 1964, column: 26, scope: !3820)
!3827 = !DILocation(line: 1965, column: 7, scope: !3820)
!3828 = !DILocation(line: 1968, column: 4, scope: !3727)
!3829 = !DILocation(line: 1968, column: 13, scope: !3727)
!3830 = !DILocation(line: 1968, column: 23, scope: !3727)
!3831 = !DILocation(line: 1968, column: 32, scope: !3727)
!3832 = !DILocation(line: 1971, column: 15, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 1971, column: 4)
!3834 = !DILocation(line: 1971, column: 24, scope: !3833)
!3835 = !DILocation(line: 1971, column: 13, scope: !3833)
!3836 = !DILocation(line: 1971, column: 9, scope: !3833)
!3837 = !DILocation(line: 1971, column: 36, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 1971, column: 4)
!3839 = !DILocation(line: 1971, column: 35, scope: !3838)
!3840 = !DILocation(line: 1971, column: 4, scope: !3833)
!3841 = !DILocation(line: 1971, column: 44, scope: !3838)
!3842 = !DILocation(line: 1971, column: 4, scope: !3838)
!3843 = distinct !{!3843, !3840, !3844}
!3844 = !DILocation(line: 1972, column: 24, scope: !3833)
!3845 = !DILocation(line: 1974, column: 13, scope: !3727)
!3846 = !DILocation(line: 1974, column: 22, scope: !3727)
!3847 = !DILocation(line: 1974, column: 34, scope: !3727)
!3848 = !DILocation(line: 1974, column: 32, scope: !3727)
!3849 = !DILocation(line: 1974, column: 11, scope: !3727)
!3850 = !DILocation(line: 1979, column: 8, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 1979, column: 8)
!3852 = !DILocation(line: 1979, column: 18, scope: !3851)
!3853 = !DILocation(line: 1979, column: 22, scope: !3851)
!3854 = !DILocation(line: 1979, column: 15, scope: !3851)
!3855 = !DILocation(line: 1979, column: 8, scope: !3727)
!3856 = !DILocation(line: 1981, column: 19, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3851, file: !3, line: 1980, column: 4)
!3858 = !DILocation(line: 1981, column: 7, scope: !3857)
!3859 = !DILocation(line: 1982, column: 16, scope: !3857)
!3860 = !DILocation(line: 1982, column: 25, scope: !3857)
!3861 = !DILocation(line: 1982, column: 34, scope: !3857)
!3862 = !DILocation(line: 1982, column: 7, scope: !3857)
!3863 = !DILocation(line: 1983, column: 7, scope: !3857)
!3864 = !DILocation(line: 1983, column: 16, scope: !3857)
!3865 = !DILocation(line: 1983, column: 26, scope: !3857)
!3866 = !DILocation(line: 1984, column: 7, scope: !3857)
!3867 = !DILocation(line: 1988, column: 9, scope: !3727)
!3868 = !DILocation(line: 1988, column: 7, scope: !3727)
!3869 = !DILocation(line: 1989, column: 9, scope: !3727)
!3870 = !DILocation(line: 1989, column: 7, scope: !3727)
!3871 = !DILocation(line: 1990, column: 11, scope: !3727)
!3872 = !DILocation(line: 1990, column: 9, scope: !3727)
!3873 = !DILocation(line: 1991, column: 14, scope: !3727)
!3874 = !DILocation(line: 1991, column: 12, scope: !3727)
!3875 = !DILocation(line: 1992, column: 12, scope: !3727)
!3876 = !DILocation(line: 1992, column: 16, scope: !3727)
!3877 = !DILocation(line: 1992, column: 10, scope: !3727)
!3878 = !DILocation(line: 1998, column: 9, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 1998, column: 8)
!3880 = !DILocation(line: 1998, column: 14, scope: !3879)
!3881 = !DILocation(line: 1998, column: 37, scope: !3879)
!3882 = !DILocation(line: 1998, column: 40, scope: !3879)
!3883 = !DILocation(line: 1998, column: 48, scope: !3879)
!3884 = !DILocation(line: 1998, column: 54, scope: !3879)
!3885 = !DILocation(line: 1999, column: 9, scope: !3879)
!3886 = !DILocation(line: 1999, column: 14, scope: !3879)
!3887 = !DILocation(line: 1999, column: 37, scope: !3879)
!3888 = !DILocation(line: 1999, column: 40, scope: !3879)
!3889 = !DILocation(line: 1999, column: 48, scope: !3879)
!3890 = !DILocation(line: 1999, column: 54, scope: !3879)
!3891 = !DILocation(line: 2000, column: 9, scope: !3879)
!3892 = !DILocation(line: 2000, column: 14, scope: !3879)
!3893 = !DILocation(line: 2000, column: 40, scope: !3879)
!3894 = !DILocation(line: 2000, column: 43, scope: !3879)
!3895 = !DILocation(line: 2000, column: 51, scope: !3879)
!3896 = !DILocation(line: 2000, column: 57, scope: !3879)
!3897 = !DILocation(line: 2001, column: 9, scope: !3879)
!3898 = !DILocation(line: 2001, column: 14, scope: !3879)
!3899 = !DILocation(line: 2001, column: 41, scope: !3879)
!3900 = !DILocation(line: 2001, column: 44, scope: !3879)
!3901 = !DILocation(line: 2001, column: 52, scope: !3879)
!3902 = !DILocation(line: 1998, column: 8, scope: !3727)
!3903 = !DILocation(line: 2003, column: 19, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3879, file: !3, line: 2002, column: 4)
!3905 = !DILocation(line: 2003, column: 7, scope: !3904)
!3906 = !DILocation(line: 2004, column: 16, scope: !3904)
!3907 = !DILocation(line: 2004, column: 25, scope: !3904)
!3908 = !DILocation(line: 2004, column: 34, scope: !3904)
!3909 = !DILocation(line: 2004, column: 7, scope: !3904)
!3910 = !DILocation(line: 2005, column: 7, scope: !3904)
!3911 = !DILocation(line: 2005, column: 16, scope: !3904)
!3912 = !DILocation(line: 2005, column: 26, scope: !3904)
!3913 = !DILocation(line: 2006, column: 7, scope: !3904)
!3914 = !DILocation(line: 2009, column: 13, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3879, file: !3, line: 2009, column: 13)
!3916 = !DILocation(line: 2009, column: 18, scope: !3915)
!3917 = !DILocation(line: 2009, column: 13, scope: !3879)
!3918 = !DILocation(line: 2011, column: 19, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3915, file: !3, line: 2010, column: 4)
!3920 = !DILocation(line: 2011, column: 7, scope: !3919)
!3921 = !DILocation(line: 2012, column: 4, scope: !3919)
!3922 = !DILocation(line: 2014, column: 15, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2014, column: 4)
!3924 = !DILocation(line: 2014, column: 13, scope: !3923)
!3925 = !DILocation(line: 2014, column: 9, scope: !3923)
!3926 = !DILocation(line: 2014, column: 23, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 2014, column: 4)
!3928 = !DILocation(line: 2014, column: 22, scope: !3927)
!3929 = !DILocation(line: 2014, column: 4, scope: !3923)
!3930 = !DILocation(line: 2014, column: 31, scope: !3927)
!3931 = !DILocation(line: 2014, column: 4, scope: !3927)
!3932 = distinct !{!3932, !3929, !3933}
!3933 = !DILocation(line: 2015, column: 55, scope: !3923)
!3934 = !DILocation(line: 2019, column: 41, scope: !3727)
!3935 = !DILocation(line: 2020, column: 21, scope: !3727)
!3936 = !DILocation(line: 2020, column: 29, scope: !3727)
!3937 = !DILocation(line: 2019, column: 25, scope: !3727)
!3938 = !DILocation(line: 2019, column: 13, scope: !3727)
!3939 = !DILocation(line: 2019, column: 11, scope: !3727)
!3940 = !DILocation(line: 2022, column: 8, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2022, column: 8)
!3942 = !DILocation(line: 2022, column: 15, scope: !3941)
!3943 = !DILocation(line: 2022, column: 8, scope: !3727)
!3944 = !DILocation(line: 2024, column: 16, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 2023, column: 4)
!3946 = !DILocation(line: 2024, column: 25, scope: !3945)
!3947 = !DILocation(line: 2024, column: 34, scope: !3945)
!3948 = !DILocation(line: 2024, column: 7, scope: !3945)
!3949 = !DILocation(line: 2025, column: 7, scope: !3945)
!3950 = !DILocation(line: 2025, column: 16, scope: !3945)
!3951 = !DILocation(line: 2025, column: 26, scope: !3945)
!3952 = !DILocation(line: 2026, column: 19, scope: !3945)
!3953 = !DILocation(line: 2026, column: 7, scope: !3945)
!3954 = !DILocation(line: 2027, column: 7, scope: !3945)
!3955 = !DILocation(line: 2031, column: 11, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 2031, column: 4)
!3957 = !DILocation(line: 2031, column: 9, scope: !3956)
!3958 = !DILocation(line: 2031, column: 16, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 2031, column: 4)
!3960 = !DILocation(line: 2031, column: 25, scope: !3959)
!3961 = !DILocation(line: 2031, column: 20, scope: !3959)
!3962 = !DILocation(line: 2031, column: 18, scope: !3959)
!3963 = !DILocation(line: 2031, column: 4, scope: !3956)
!3964 = !DILocation(line: 2033, column: 10, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 2032, column: 4)
!3966 = !DILocation(line: 2037, column: 24, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3965, file: !3, line: 2037, column: 7)
!3968 = !DILocation(line: 2037, column: 12, scope: !3967)
!3969 = !DILocation(line: 2037, column: 19, scope: !3967)
!3970 = !DILocation(line: 2037, column: 22, scope: !3967)
!3971 = !DILocation(line: 2037, column: 29, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 2037, column: 7)
!3973 = !DILocation(line: 2037, column: 36, scope: !3972)
!3974 = !DILocation(line: 2037, column: 33, scope: !3972)
!3975 = !DILocation(line: 2037, column: 43, scope: !3972)
!3976 = !DILocation(line: 2037, column: 47, scope: !3972)
!3977 = !DILocation(line: 2037, column: 46, scope: !3972)
!3978 = !DILocation(line: 2037, column: 51, scope: !3972)
!3979 = !DILocation(line: 0, scope: !3972)
!3980 = !DILocation(line: 2037, column: 7, scope: !3967)
!3981 = !DILocation(line: 2037, column: 63, scope: !3972)
!3982 = !DILocation(line: 2037, column: 7, scope: !3972)
!3983 = distinct !{!3983, !3980, !3984}
!3984 = !DILocation(line: 2038, column: 62, scope: !3967)
!3985 = !DILocation(line: 2041, column: 11, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3965, file: !3, line: 2041, column: 11)
!3987 = !DILocation(line: 2041, column: 17, scope: !3986)
!3988 = !DILocation(line: 2041, column: 15, scope: !3986)
!3989 = !DILocation(line: 2041, column: 11, scope: !3965)
!3990 = !DILocation(line: 2043, column: 22, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 2042, column: 7)
!3992 = !DILocation(line: 2043, column: 10, scope: !3991)
!3993 = !DILocation(line: 2044, column: 19, scope: !3991)
!3994 = !DILocation(line: 2044, column: 28, scope: !3991)
!3995 = !DILocation(line: 2044, column: 37, scope: !3991)
!3996 = !DILocation(line: 2044, column: 10, scope: !3991)
!3997 = !DILocation(line: 2045, column: 10, scope: !3991)
!3998 = !DILocation(line: 2045, column: 19, scope: !3991)
!3999 = !DILocation(line: 2045, column: 29, scope: !3991)
!4000 = !DILocation(line: 2046, column: 19, scope: !3991)
!4001 = !DILocation(line: 2046, column: 28, scope: !3991)
!4002 = !DILocation(line: 2046, column: 10, scope: !3991)
!4003 = !DILocation(line: 2047, column: 10, scope: !3991)
!4004 = !DILocation(line: 2049, column: 4, scope: !3965)
!4005 = !DILocation(line: 2031, column: 35, scope: !3959)
!4006 = !DILocation(line: 2031, column: 4, scope: !3959)
!4007 = distinct !{!4007, !3963, !4008}
!4008 = !DILocation(line: 2049, column: 4, scope: !3956)
!4009 = !DILocation(line: 2051, column: 17, scope: !3727)
!4010 = !DILocation(line: 2051, column: 26, scope: !3727)
!4011 = !DILocation(line: 2051, column: 36, scope: !3727)
!4012 = !DILocation(line: 2051, column: 45, scope: !3727)
!4013 = !DILocation(line: 2051, column: 56, scope: !3727)
!4014 = !DILocation(line: 2051, column: 60, scope: !3727)
!4015 = !DILocation(line: 2051, column: 64, scope: !3727)
!4016 = !DILocation(line: 2051, column: 70, scope: !3727)
!4017 = !DILocation(line: 2052, column: 7, scope: !3727)
!4018 = !DILocation(line: 2052, column: 14, scope: !3727)
!4019 = !DILocation(line: 2051, column: 4, scope: !3727)
!4020 = !DILocation(line: 2054, column: 13, scope: !3727)
!4021 = !DILocation(line: 2054, column: 22, scope: !3727)
!4022 = !DILocation(line: 2054, column: 31, scope: !3727)
!4023 = !DILocation(line: 2054, column: 4, scope: !3727)
!4024 = !DILocation(line: 2055, column: 4, scope: !3727)
!4025 = !DILocation(line: 2055, column: 13, scope: !3727)
!4026 = !DILocation(line: 2055, column: 23, scope: !3727)
!4027 = !DILocation(line: 2056, column: 13, scope: !3727)
!4028 = !DILocation(line: 2056, column: 22, scope: !3727)
!4029 = !DILocation(line: 2056, column: 4, scope: !3727)
!4030 = !DILocation(line: 2057, column: 1, scope: !3727)
!4031 = distinct !DISubprogram(name: "png_handle_sCAL", scope: !3, file: !3, line: 2063, type: !1268, scopeLine: 2064, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!4032 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !4031, file: !3, line: 2063, type: !6)
!4033 = !DILocation(line: 2063, column: 29, scope: !4031)
!4034 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !4031, file: !3, line: 2063, type: !258)
!4035 = !DILocation(line: 2063, column: 48, scope: !4031)
!4036 = !DILocalVariable(name: "length", arg: 3, scope: !4031, file: !3, line: 2063, type: !85)
!4037 = !DILocation(line: 2063, column: 70, scope: !4031)
!4038 = !DILocalVariable(name: "slength", scope: !4031, file: !3, line: 2065, type: !69)
!4039 = !DILocation(line: 2065, column: 15, scope: !4031)
!4040 = !DILocalVariable(name: "i", scope: !4031, file: !3, line: 2065, type: !69)
!4041 = !DILocation(line: 2065, column: 24, scope: !4031)
!4042 = !DILocalVariable(name: "state", scope: !4031, file: !3, line: 2066, type: !27)
!4043 = !DILocation(line: 2066, column: 8, scope: !4031)
!4044 = !DILocation(line: 2070, column: 10, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 2070, column: 8)
!4046 = !DILocation(line: 2070, column: 19, scope: !4045)
!4047 = !DILocation(line: 2070, column: 24, scope: !4045)
!4048 = !DILocation(line: 2070, column: 8, scope: !4031)
!4049 = !DILocation(line: 2071, column: 17, scope: !4045)
!4050 = !DILocation(line: 2071, column: 7, scope: !4045)
!4051 = !DILocation(line: 2073, column: 13, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4045, file: !3, line: 2073, column: 13)
!4053 = !DILocation(line: 2073, column: 22, scope: !4052)
!4054 = !DILocation(line: 2073, column: 27, scope: !4052)
!4055 = !DILocation(line: 2073, column: 13, scope: !4045)
!4056 = !DILocation(line: 2075, column: 19, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 2074, column: 4)
!4058 = !DILocation(line: 2075, column: 7, scope: !4057)
!4059 = !DILocation(line: 2076, column: 22, scope: !4057)
!4060 = !DILocation(line: 2076, column: 31, scope: !4057)
!4061 = !DILocation(line: 2076, column: 7, scope: !4057)
!4062 = !DILocation(line: 2077, column: 7, scope: !4057)
!4063 = !DILocation(line: 2080, column: 13, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 2080, column: 13)
!4065 = !DILocation(line: 2080, column: 22, scope: !4064)
!4066 = !DILocation(line: 2080, column: 30, scope: !4064)
!4067 = !DILocation(line: 2080, column: 34, scope: !4064)
!4068 = !DILocation(line: 2080, column: 44, scope: !4064)
!4069 = !DILocation(line: 2080, column: 50, scope: !4064)
!4070 = !DILocation(line: 2080, column: 13, scope: !4052)
!4071 = !DILocation(line: 2082, column: 19, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 2081, column: 4)
!4073 = !DILocation(line: 2082, column: 7, scope: !4072)
!4074 = !DILocation(line: 2083, column: 22, scope: !4072)
!4075 = !DILocation(line: 2083, column: 31, scope: !4072)
!4076 = !DILocation(line: 2083, column: 7, scope: !4072)
!4077 = !DILocation(line: 2084, column: 7, scope: !4072)
!4078 = !DILocation(line: 2088, column: 13, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 2088, column: 13)
!4080 = !DILocation(line: 2088, column: 20, scope: !4079)
!4081 = !DILocation(line: 2088, column: 13, scope: !4064)
!4082 = !DILocation(line: 2090, column: 19, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 2089, column: 4)
!4084 = !DILocation(line: 2090, column: 7, scope: !4083)
!4085 = !DILocation(line: 2091, column: 22, scope: !4083)
!4086 = !DILocation(line: 2091, column: 31, scope: !4083)
!4087 = !DILocation(line: 2091, column: 7, scope: !4083)
!4088 = !DILocation(line: 2092, column: 7, scope: !4083)
!4089 = !DILocation(line: 2098, column: 52, scope: !4031)
!4090 = !DILocation(line: 2098, column: 61, scope: !4031)
!4091 = !DILocation(line: 2098, column: 68, scope: !4031)
!4092 = !DILocation(line: 2098, column: 36, scope: !4031)
!4093 = !DILocation(line: 2098, column: 4, scope: !4031)
!4094 = !DILocation(line: 2098, column: 13, scope: !4031)
!4095 = !DILocation(line: 2098, column: 23, scope: !4031)
!4096 = !DILocation(line: 2100, column: 8, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 2100, column: 8)
!4098 = !DILocation(line: 2100, column: 17, scope: !4097)
!4099 = !DILocation(line: 2100, column: 27, scope: !4097)
!4100 = !DILocation(line: 2100, column: 8, scope: !4031)
!4101 = !DILocation(line: 2102, column: 19, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 2101, column: 4)
!4103 = !DILocation(line: 2102, column: 7, scope: !4102)
!4104 = !DILocation(line: 2103, column: 22, scope: !4102)
!4105 = !DILocation(line: 2103, column: 31, scope: !4102)
!4106 = !DILocation(line: 2103, column: 7, scope: !4102)
!4107 = !DILocation(line: 2104, column: 7, scope: !4102)
!4108 = !DILocation(line: 2107, column: 14, scope: !4031)
!4109 = !DILocation(line: 2107, column: 12, scope: !4031)
!4110 = !DILocation(line: 2108, column: 17, scope: !4031)
!4111 = !DILocation(line: 2108, column: 37, scope: !4031)
!4112 = !DILocation(line: 2108, column: 46, scope: !4031)
!4113 = !DILocation(line: 2108, column: 57, scope: !4031)
!4114 = !DILocation(line: 2108, column: 4, scope: !4031)
!4115 = !DILocation(line: 2109, column: 4, scope: !4031)
!4116 = !DILocation(line: 2109, column: 13, scope: !4031)
!4117 = !DILocation(line: 2109, column: 23, scope: !4031)
!4118 = !DILocation(line: 2109, column: 32, scope: !4031)
!4119 = !DILocation(line: 2111, column: 23, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 2111, column: 8)
!4121 = !DILocation(line: 2111, column: 8, scope: !4120)
!4122 = !DILocation(line: 2111, column: 8, scope: !4031)
!4123 = !DILocation(line: 2113, column: 16, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 2112, column: 4)
!4125 = !DILocation(line: 2113, column: 25, scope: !4124)
!4126 = !DILocation(line: 2113, column: 34, scope: !4124)
!4127 = !DILocation(line: 2113, column: 7, scope: !4124)
!4128 = !DILocation(line: 2114, column: 7, scope: !4124)
!4129 = !DILocation(line: 2114, column: 16, scope: !4124)
!4130 = !DILocation(line: 2114, column: 26, scope: !4124)
!4131 = !DILocation(line: 2115, column: 7, scope: !4124)
!4132 = !DILocation(line: 2119, column: 8, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 2119, column: 8)
!4134 = !DILocation(line: 2119, column: 17, scope: !4133)
!4135 = !DILocation(line: 2119, column: 30, scope: !4133)
!4136 = !DILocation(line: 2119, column: 35, scope: !4133)
!4137 = !DILocation(line: 2119, column: 38, scope: !4133)
!4138 = !DILocation(line: 2119, column: 47, scope: !4133)
!4139 = !DILocation(line: 2119, column: 60, scope: !4133)
!4140 = !DILocation(line: 2119, column: 8, scope: !4031)
!4141 = !DILocation(line: 2121, column: 19, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4133, file: !3, line: 2120, column: 4)
!4143 = !DILocation(line: 2121, column: 7, scope: !4142)
!4144 = !DILocation(line: 2122, column: 16, scope: !4142)
!4145 = !DILocation(line: 2122, column: 25, scope: !4142)
!4146 = !DILocation(line: 2122, column: 34, scope: !4142)
!4147 = !DILocation(line: 2122, column: 7, scope: !4142)
!4148 = !DILocation(line: 2123, column: 7, scope: !4142)
!4149 = !DILocation(line: 2123, column: 16, scope: !4142)
!4150 = !DILocation(line: 2123, column: 26, scope: !4142)
!4151 = !DILocation(line: 2124, column: 7, scope: !4142)
!4152 = !DILocation(line: 2130, column: 6, scope: !4031)
!4153 = !DILocation(line: 2131, column: 10, scope: !4031)
!4154 = !DILocation(line: 2133, column: 29, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 2133, column: 8)
!4156 = !DILocation(line: 2133, column: 38, scope: !4155)
!4157 = !DILocation(line: 2133, column: 49, scope: !4155)
!4158 = !DILocation(line: 2133, column: 9, scope: !4155)
!4159 = !DILocation(line: 2133, column: 70, scope: !4155)
!4160 = !DILocation(line: 2134, column: 8, scope: !4155)
!4161 = !DILocation(line: 2134, column: 13, scope: !4155)
!4162 = !DILocation(line: 2134, column: 10, scope: !4155)
!4163 = !DILocation(line: 2134, column: 21, scope: !4155)
!4164 = !DILocation(line: 2134, column: 24, scope: !4155)
!4165 = !DILocation(line: 2134, column: 33, scope: !4155)
!4166 = !DILocation(line: 2134, column: 44, scope: !4155)
!4167 = !DILocation(line: 2134, column: 48, scope: !4155)
!4168 = !DILocation(line: 2133, column: 8, scope: !4031)
!4169 = !DILocation(line: 2135, column: 19, scope: !4155)
!4170 = !DILocation(line: 2135, column: 7, scope: !4155)
!4171 = !DILocation(line: 2137, column: 14, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 2137, column: 13)
!4173 = !DILocation(line: 2137, column: 13, scope: !4155)
!4174 = !DILocation(line: 2138, column: 19, scope: !4172)
!4175 = !DILocation(line: 2138, column: 7, scope: !4172)
!4176 = !DILocalVariable(name: "heighti", scope: !4177, file: !3, line: 2142, type: !69)
!4177 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 2141, column: 4)
!4178 = !DILocation(line: 2142, column: 18, scope: !4177)
!4179 = !DILocation(line: 2142, column: 28, scope: !4177)
!4180 = !DILocation(line: 2144, column: 13, scope: !4177)
!4181 = !DILocation(line: 2145, column: 32, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 2145, column: 11)
!4183 = !DILocation(line: 2145, column: 41, scope: !4182)
!4184 = !DILocation(line: 2145, column: 52, scope: !4182)
!4185 = !DILocation(line: 2145, column: 12, scope: !4182)
!4186 = !DILocation(line: 2145, column: 73, scope: !4182)
!4187 = !DILocation(line: 2146, column: 11, scope: !4182)
!4188 = !DILocation(line: 2146, column: 16, scope: !4182)
!4189 = !DILocation(line: 2146, column: 13, scope: !4182)
!4190 = !DILocation(line: 2145, column: 11, scope: !4177)
!4191 = !DILocation(line: 2147, column: 22, scope: !4182)
!4192 = !DILocation(line: 2147, column: 10, scope: !4182)
!4193 = !DILocation(line: 2149, column: 17, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4182, file: !3, line: 2149, column: 16)
!4195 = !DILocation(line: 2149, column: 16, scope: !4182)
!4196 = !DILocation(line: 2150, column: 22, scope: !4194)
!4197 = !DILocation(line: 2150, column: 10, scope: !4194)
!4198 = !DILocation(line: 2155, column: 25, scope: !4194)
!4199 = !DILocation(line: 2155, column: 34, scope: !4194)
!4200 = !DILocation(line: 2155, column: 44, scope: !4194)
!4201 = !DILocation(line: 2155, column: 53, scope: !4194)
!4202 = !DILocation(line: 2156, column: 13, scope: !4194)
!4203 = !DILocation(line: 2156, column: 22, scope: !4194)
!4204 = !DILocation(line: 2156, column: 31, scope: !4194)
!4205 = !DILocation(line: 2156, column: 35, scope: !4194)
!4206 = !DILocation(line: 2156, column: 44, scope: !4194)
!4207 = !DILocation(line: 2156, column: 54, scope: !4194)
!4208 = !DILocation(line: 2156, column: 53, scope: !4194)
!4209 = !DILocation(line: 2155, column: 10, scope: !4194)
!4210 = !DILocation(line: 2160, column: 13, scope: !4031)
!4211 = !DILocation(line: 2160, column: 22, scope: !4031)
!4212 = !DILocation(line: 2160, column: 31, scope: !4031)
!4213 = !DILocation(line: 2160, column: 4, scope: !4031)
!4214 = !DILocation(line: 2161, column: 4, scope: !4031)
!4215 = !DILocation(line: 2161, column: 13, scope: !4031)
!4216 = !DILocation(line: 2161, column: 23, scope: !4031)
!4217 = !DILocation(line: 2162, column: 1, scope: !4031)
!4218 = distinct !DISubprogram(name: "png_handle_tIME", scope: !3, file: !3, line: 2167, type: !1268, scopeLine: 2168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!4219 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !4218, file: !3, line: 2167, type: !6)
!4220 = !DILocation(line: 2167, column: 29, scope: !4218)
!4221 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !4218, file: !3, line: 2167, type: !258)
!4222 = !DILocation(line: 2167, column: 48, scope: !4218)
!4223 = !DILocalVariable(name: "length", arg: 3, scope: !4218, file: !3, line: 2167, type: !85)
!4224 = !DILocation(line: 2167, column: 70, scope: !4218)
!4225 = !DILocalVariable(name: "buf", scope: !4218, file: !3, line: 2169, type: !4226)
!4226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 56, elements: !492)
!4227 = !DILocation(line: 2169, column: 13, scope: !4218)
!4228 = !DILocalVariable(name: "mod_time", scope: !4218, file: !3, line: 2170, type: !300)
!4229 = !DILocation(line: 2170, column: 13, scope: !4218)
!4230 = !DILocation(line: 2174, column: 10, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 2174, column: 8)
!4232 = !DILocation(line: 2174, column: 19, scope: !4231)
!4233 = !DILocation(line: 2174, column: 24, scope: !4231)
!4234 = !DILocation(line: 2174, column: 8, scope: !4218)
!4235 = !DILocation(line: 2175, column: 17, scope: !4231)
!4236 = !DILocation(line: 2175, column: 7, scope: !4231)
!4237 = !DILocation(line: 2177, column: 13, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 2177, column: 13)
!4239 = !DILocation(line: 2177, column: 22, scope: !4238)
!4240 = !DILocation(line: 2177, column: 30, scope: !4238)
!4241 = !DILocation(line: 2177, column: 34, scope: !4238)
!4242 = !DILocation(line: 2177, column: 44, scope: !4238)
!4243 = !DILocation(line: 2177, column: 50, scope: !4238)
!4244 = !DILocation(line: 2177, column: 13, scope: !4231)
!4245 = !DILocation(line: 2179, column: 19, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 2178, column: 4)
!4247 = !DILocation(line: 2179, column: 7, scope: !4246)
!4248 = !DILocation(line: 2180, column: 22, scope: !4246)
!4249 = !DILocation(line: 2180, column: 31, scope: !4246)
!4250 = !DILocation(line: 2180, column: 7, scope: !4246)
!4251 = !DILocation(line: 2181, column: 7, scope: !4246)
!4252 = !DILocation(line: 2184, column: 8, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 2184, column: 8)
!4254 = !DILocation(line: 2184, column: 17, scope: !4253)
!4255 = !DILocation(line: 2184, column: 22, scope: !4253)
!4256 = !DILocation(line: 2184, column: 8, scope: !4218)
!4257 = !DILocation(line: 2185, column: 7, scope: !4253)
!4258 = !DILocation(line: 2185, column: 16, scope: !4253)
!4259 = !DILocation(line: 2185, column: 21, scope: !4253)
!4260 = !DILocation(line: 2187, column: 8, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 2187, column: 8)
!4262 = !DILocation(line: 2187, column: 15, scope: !4261)
!4263 = !DILocation(line: 2187, column: 8, scope: !4218)
!4264 = !DILocation(line: 2189, column: 19, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 2188, column: 4)
!4266 = !DILocation(line: 2189, column: 7, scope: !4265)
!4267 = !DILocation(line: 2190, column: 22, scope: !4265)
!4268 = !DILocation(line: 2190, column: 31, scope: !4265)
!4269 = !DILocation(line: 2190, column: 7, scope: !4265)
!4270 = !DILocation(line: 2191, column: 7, scope: !4265)
!4271 = !DILocation(line: 2194, column: 17, scope: !4218)
!4272 = !DILocation(line: 2194, column: 26, scope: !4218)
!4273 = !DILocation(line: 2194, column: 4, scope: !4218)
!4274 = !DILocation(line: 2196, column: 23, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 2196, column: 8)
!4276 = !DILocation(line: 2196, column: 8, scope: !4275)
!4277 = !DILocation(line: 2196, column: 8, scope: !4218)
!4278 = !DILocation(line: 2197, column: 7, scope: !4275)
!4279 = !DILocation(line: 2199, column: 22, scope: !4218)
!4280 = !DILocation(line: 2199, column: 13, scope: !4218)
!4281 = !DILocation(line: 2199, column: 20, scope: !4218)
!4282 = !DILocation(line: 2200, column: 22, scope: !4218)
!4283 = !DILocation(line: 2200, column: 13, scope: !4218)
!4284 = !DILocation(line: 2200, column: 20, scope: !4218)
!4285 = !DILocation(line: 2201, column: 20, scope: !4218)
!4286 = !DILocation(line: 2201, column: 13, scope: !4218)
!4287 = !DILocation(line: 2201, column: 18, scope: !4218)
!4288 = !DILocation(line: 2202, column: 19, scope: !4218)
!4289 = !DILocation(line: 2202, column: 13, scope: !4218)
!4290 = !DILocation(line: 2202, column: 17, scope: !4218)
!4291 = !DILocation(line: 2203, column: 21, scope: !4218)
!4292 = !DILocation(line: 2203, column: 13, scope: !4218)
!4293 = !DILocation(line: 2203, column: 19, scope: !4218)
!4294 = !DILocation(line: 2204, column: 20, scope: !4218)
!4295 = !DILocation(line: 2204, column: 13, scope: !4218)
!4296 = !DILocation(line: 2204, column: 18, scope: !4218)
!4297 = !DILocation(line: 2206, column: 17, scope: !4218)
!4298 = !DILocation(line: 2206, column: 26, scope: !4218)
!4299 = !DILocation(line: 2206, column: 4, scope: !4218)
!4300 = !DILocation(line: 2207, column: 1, scope: !4218)
!4301 = distinct !DISubprogram(name: "png_handle_tEXt", scope: !3, file: !3, line: 2213, type: !1268, scopeLine: 2214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!4302 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !4301, file: !3, line: 2213, type: !6)
!4303 = !DILocation(line: 2213, column: 29, scope: !4301)
!4304 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !4301, file: !3, line: 2213, type: !258)
!4305 = !DILocation(line: 2213, column: 48, scope: !4301)
!4306 = !DILocalVariable(name: "length", arg: 3, scope: !4301, file: !3, line: 2213, type: !85)
!4307 = !DILocation(line: 2213, column: 70, scope: !4301)
!4308 = !DILocalVariable(name: "text_ptr", scope: !4301, file: !3, line: 2215, type: !286)
!4309 = !DILocation(line: 2215, column: 14, scope: !4301)
!4310 = !DILocalVariable(name: "key", scope: !4301, file: !3, line: 2216, type: !293)
!4311 = !DILocation(line: 2216, column: 14, scope: !4301)
!4312 = !DILocalVariable(name: "text", scope: !4301, file: !3, line: 2217, type: !293)
!4313 = !DILocation(line: 2217, column: 14, scope: !4301)
!4314 = !DILocalVariable(name: "skip", scope: !4301, file: !3, line: 2218, type: !85)
!4315 = !DILocation(line: 2218, column: 16, scope: !4301)
!4316 = !DILocalVariable(name: "slength", scope: !4301, file: !3, line: 2219, type: !69)
!4317 = !DILocation(line: 2219, column: 15, scope: !4301)
!4318 = !DILocalVariable(name: "ret", scope: !4301, file: !3, line: 2220, type: !27)
!4319 = !DILocation(line: 2220, column: 8, scope: !4301)
!4320 = !DILocation(line: 2225, column: 8, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 2225, column: 8)
!4322 = !DILocation(line: 2225, column: 17, scope: !4321)
!4323 = !DILocation(line: 2225, column: 38, scope: !4321)
!4324 = !DILocation(line: 2225, column: 8, scope: !4301)
!4325 = !DILocation(line: 2227, column: 11, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !3, line: 2227, column: 11)
!4327 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 2226, column: 4)
!4328 = !DILocation(line: 2227, column: 20, scope: !4326)
!4329 = !DILocation(line: 2227, column: 41, scope: !4326)
!4330 = !DILocation(line: 2227, column: 11, scope: !4327)
!4331 = !DILocation(line: 2229, column: 25, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4326, file: !3, line: 2228, column: 7)
!4333 = !DILocation(line: 2229, column: 34, scope: !4332)
!4334 = !DILocation(line: 2229, column: 10, scope: !4332)
!4335 = !DILocation(line: 2230, column: 10, scope: !4332)
!4336 = !DILocation(line: 2233, column: 13, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4327, file: !3, line: 2233, column: 11)
!4338 = !DILocation(line: 2233, column: 22, scope: !4337)
!4339 = !DILocation(line: 2233, column: 11, scope: !4337)
!4340 = !DILocation(line: 2233, column: 43, scope: !4337)
!4341 = !DILocation(line: 2233, column: 11, scope: !4327)
!4342 = !DILocation(line: 2235, column: 22, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 2234, column: 7)
!4344 = !DILocation(line: 2235, column: 10, scope: !4343)
!4345 = !DILocation(line: 2236, column: 25, scope: !4343)
!4346 = !DILocation(line: 2236, column: 34, scope: !4343)
!4347 = !DILocation(line: 2236, column: 10, scope: !4343)
!4348 = !DILocation(line: 2237, column: 10, scope: !4343)
!4349 = !DILocation(line: 2239, column: 4, scope: !4327)
!4350 = !DILocation(line: 2242, column: 10, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 2242, column: 8)
!4352 = !DILocation(line: 2242, column: 19, scope: !4351)
!4353 = !DILocation(line: 2242, column: 24, scope: !4351)
!4354 = !DILocation(line: 2242, column: 8, scope: !4301)
!4355 = !DILocation(line: 2243, column: 17, scope: !4351)
!4356 = !DILocation(line: 2243, column: 7, scope: !4351)
!4357 = !DILocation(line: 2245, column: 8, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 2245, column: 8)
!4359 = !DILocation(line: 2245, column: 17, scope: !4358)
!4360 = !DILocation(line: 2245, column: 22, scope: !4358)
!4361 = !DILocation(line: 2245, column: 8, scope: !4301)
!4362 = !DILocation(line: 2246, column: 7, scope: !4358)
!4363 = !DILocation(line: 2246, column: 16, scope: !4358)
!4364 = !DILocation(line: 2246, column: 21, scope: !4358)
!4365 = !DILocation(line: 2257, column: 13, scope: !4301)
!4366 = !DILocation(line: 2257, column: 22, scope: !4301)
!4367 = !DILocation(line: 2257, column: 31, scope: !4301)
!4368 = !DILocation(line: 2257, column: 4, scope: !4301)
!4369 = !DILocation(line: 2259, column: 52, scope: !4301)
!4370 = !DILocation(line: 2259, column: 61, scope: !4301)
!4371 = !DILocation(line: 2259, column: 68, scope: !4301)
!4372 = !DILocation(line: 2259, column: 36, scope: !4301)
!4373 = !DILocation(line: 2259, column: 4, scope: !4301)
!4374 = !DILocation(line: 2259, column: 13, scope: !4301)
!4375 = !DILocation(line: 2259, column: 23, scope: !4301)
!4376 = !DILocation(line: 2261, column: 8, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 2261, column: 8)
!4378 = !DILocation(line: 2261, column: 17, scope: !4377)
!4379 = !DILocation(line: 2261, column: 27, scope: !4377)
!4380 = !DILocation(line: 2261, column: 8, scope: !4301)
!4381 = !DILocation(line: 2263, column: 18, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 2262, column: 4)
!4383 = !DILocation(line: 2263, column: 6, scope: !4382)
!4384 = !DILocation(line: 2264, column: 6, scope: !4382)
!4385 = !DILocation(line: 2267, column: 14, scope: !4301)
!4386 = !DILocation(line: 2267, column: 12, scope: !4301)
!4387 = !DILocation(line: 2268, column: 17, scope: !4301)
!4388 = !DILocation(line: 2268, column: 37, scope: !4301)
!4389 = !DILocation(line: 2268, column: 46, scope: !4301)
!4390 = !DILocation(line: 2268, column: 57, scope: !4301)
!4391 = !DILocation(line: 2268, column: 4, scope: !4301)
!4392 = !DILocation(line: 2270, column: 23, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 2270, column: 8)
!4394 = !DILocation(line: 2270, column: 32, scope: !4393)
!4395 = !DILocation(line: 2270, column: 8, scope: !4393)
!4396 = !DILocation(line: 2270, column: 8, scope: !4301)
!4397 = !DILocation(line: 2272, column: 16, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 2271, column: 4)
!4399 = !DILocation(line: 2272, column: 25, scope: !4398)
!4400 = !DILocation(line: 2272, column: 34, scope: !4398)
!4401 = !DILocation(line: 2272, column: 7, scope: !4398)
!4402 = !DILocation(line: 2273, column: 7, scope: !4398)
!4403 = !DILocation(line: 2273, column: 16, scope: !4398)
!4404 = !DILocation(line: 2273, column: 26, scope: !4398)
!4405 = !DILocation(line: 2274, column: 7, scope: !4398)
!4406 = !DILocation(line: 2277, column: 10, scope: !4301)
!4407 = !DILocation(line: 2277, column: 19, scope: !4301)
!4408 = !DILocation(line: 2277, column: 8, scope: !4301)
!4409 = !DILocation(line: 2279, column: 4, scope: !4301)
!4410 = !DILocation(line: 2279, column: 8, scope: !4301)
!4411 = !DILocation(line: 2279, column: 17, scope: !4301)
!4412 = !DILocation(line: 2281, column: 16, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 2281, column: 4)
!4414 = !DILocation(line: 2281, column: 14, scope: !4413)
!4415 = !DILocation(line: 2281, column: 9, scope: !4413)
!4416 = !DILocation(line: 2281, column: 22, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 2281, column: 4)
!4418 = !DILocation(line: 2281, column: 21, scope: !4417)
!4419 = !DILocation(line: 2281, column: 4, scope: !4413)
!4420 = !DILocation(line: 2281, column: 32, scope: !4417)
!4421 = !DILocation(line: 2281, column: 4, scope: !4417)
!4422 = distinct !{!4422, !4419, !4423}
!4423 = !DILocation(line: 2282, column: 43, scope: !4413)
!4424 = !DILocation(line: 2284, column: 8, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 2284, column: 8)
!4426 = !DILocation(line: 2284, column: 16, scope: !4425)
!4427 = !DILocation(line: 2284, column: 22, scope: !4425)
!4428 = !DILocation(line: 2284, column: 20, scope: !4425)
!4429 = !DILocation(line: 2284, column: 13, scope: !4425)
!4430 = !DILocation(line: 2284, column: 8, scope: !4301)
!4431 = !DILocation(line: 2285, column: 11, scope: !4425)
!4432 = !DILocation(line: 2285, column: 7, scope: !4425)
!4433 = !DILocation(line: 2287, column: 42, scope: !4301)
!4434 = !DILocation(line: 2287, column: 26, scope: !4301)
!4435 = !DILocation(line: 2287, column: 15, scope: !4301)
!4436 = !DILocation(line: 2287, column: 13, scope: !4301)
!4437 = !DILocation(line: 2290, column: 8, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 2290, column: 8)
!4439 = !DILocation(line: 2290, column: 17, scope: !4438)
!4440 = !DILocation(line: 2290, column: 8, scope: !4301)
!4441 = !DILocation(line: 2292, column: 19, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4438, file: !3, line: 2291, column: 4)
!4443 = !DILocation(line: 2292, column: 7, scope: !4442)
!4444 = !DILocation(line: 2293, column: 16, scope: !4442)
!4445 = !DILocation(line: 2293, column: 25, scope: !4442)
!4446 = !DILocation(line: 2293, column: 34, scope: !4442)
!4447 = !DILocation(line: 2293, column: 7, scope: !4442)
!4448 = !DILocation(line: 2294, column: 7, scope: !4442)
!4449 = !DILocation(line: 2294, column: 16, scope: !4442)
!4450 = !DILocation(line: 2294, column: 26, scope: !4442)
!4451 = !DILocation(line: 2295, column: 7, scope: !4442)
!4452 = !DILocation(line: 2298, column: 4, scope: !4301)
!4453 = !DILocation(line: 2298, column: 14, scope: !4301)
!4454 = !DILocation(line: 2298, column: 26, scope: !4301)
!4455 = !DILocation(line: 2299, column: 20, scope: !4301)
!4456 = !DILocation(line: 2299, column: 4, scope: !4301)
!4457 = !DILocation(line: 2299, column: 14, scope: !4301)
!4458 = !DILocation(line: 2299, column: 18, scope: !4301)
!4459 = !DILocation(line: 2300, column: 4, scope: !4301)
!4460 = !DILocation(line: 2300, column: 14, scope: !4301)
!4461 = !DILocation(line: 2300, column: 19, scope: !4301)
!4462 = !DILocation(line: 2301, column: 4, scope: !4301)
!4463 = !DILocation(line: 2301, column: 14, scope: !4301)
!4464 = !DILocation(line: 2301, column: 23, scope: !4301)
!4465 = !DILocation(line: 2302, column: 4, scope: !4301)
!4466 = !DILocation(line: 2302, column: 14, scope: !4301)
!4467 = !DILocation(line: 2302, column: 26, scope: !4301)
!4468 = !DILocation(line: 2303, column: 21, scope: !4301)
!4469 = !DILocation(line: 2303, column: 4, scope: !4301)
!4470 = !DILocation(line: 2303, column: 14, scope: !4301)
!4471 = !DILocation(line: 2303, column: 19, scope: !4301)
!4472 = !DILocation(line: 2304, column: 39, scope: !4301)
!4473 = !DILocation(line: 2304, column: 28, scope: !4301)
!4474 = !DILocation(line: 2304, column: 4, scope: !4301)
!4475 = !DILocation(line: 2304, column: 14, scope: !4301)
!4476 = !DILocation(line: 2304, column: 26, scope: !4301)
!4477 = !DILocation(line: 2306, column: 25, scope: !4301)
!4478 = !DILocation(line: 2306, column: 34, scope: !4301)
!4479 = !DILocation(line: 2306, column: 44, scope: !4301)
!4480 = !DILocation(line: 2306, column: 10, scope: !4301)
!4481 = !DILocation(line: 2306, column: 8, scope: !4301)
!4482 = !DILocation(line: 2308, column: 13, scope: !4301)
!4483 = !DILocation(line: 2308, column: 22, scope: !4301)
!4484 = !DILocation(line: 2308, column: 31, scope: !4301)
!4485 = !DILocation(line: 2308, column: 4, scope: !4301)
!4486 = !DILocation(line: 2309, column: 4, scope: !4301)
!4487 = !DILocation(line: 2309, column: 13, scope: !4301)
!4488 = !DILocation(line: 2309, column: 23, scope: !4301)
!4489 = !DILocation(line: 2310, column: 13, scope: !4301)
!4490 = !DILocation(line: 2310, column: 22, scope: !4301)
!4491 = !DILocation(line: 2310, column: 4, scope: !4301)
!4492 = !DILocation(line: 2312, column: 8, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 2312, column: 8)
!4494 = !DILocation(line: 2312, column: 8, scope: !4301)
!4495 = !DILocation(line: 2313, column: 19, scope: !4493)
!4496 = !DILocation(line: 2313, column: 7, scope: !4493)
!4497 = !DILocation(line: 2314, column: 1, scope: !4301)
!4498 = distinct !DISubprogram(name: "png_handle_zTXt", scope: !3, file: !3, line: 2320, type: !1268, scopeLine: 2321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!4499 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !4498, file: !3, line: 2320, type: !6)
!4500 = !DILocation(line: 2320, column: 29, scope: !4498)
!4501 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !4498, file: !3, line: 2320, type: !258)
!4502 = !DILocation(line: 2320, column: 48, scope: !4498)
!4503 = !DILocalVariable(name: "length", arg: 3, scope: !4498, file: !3, line: 2320, type: !85)
!4504 = !DILocation(line: 2320, column: 70, scope: !4498)
!4505 = !DILocalVariable(name: "text_ptr", scope: !4498, file: !3, line: 2322, type: !286)
!4506 = !DILocation(line: 2322, column: 14, scope: !4498)
!4507 = !DILocalVariable(name: "text", scope: !4498, file: !3, line: 2323, type: !293)
!4508 = !DILocation(line: 2323, column: 14, scope: !4498)
!4509 = !DILocalVariable(name: "comp_type", scope: !4498, file: !3, line: 2324, type: !27)
!4510 = !DILocation(line: 2324, column: 8, scope: !4498)
!4511 = !DILocalVariable(name: "ret", scope: !4498, file: !3, line: 2325, type: !27)
!4512 = !DILocation(line: 2325, column: 8, scope: !4498)
!4513 = !DILocalVariable(name: "slength", scope: !4498, file: !3, line: 2326, type: !69)
!4514 = !DILocation(line: 2326, column: 15, scope: !4498)
!4515 = !DILocalVariable(name: "prefix_len", scope: !4498, file: !3, line: 2326, type: !69)
!4516 = !DILocation(line: 2326, column: 24, scope: !4498)
!4517 = !DILocalVariable(name: "data_len", scope: !4498, file: !3, line: 2326, type: !69)
!4518 = !DILocation(line: 2326, column: 36, scope: !4498)
!4519 = !DILocation(line: 2331, column: 8, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 2331, column: 8)
!4521 = !DILocation(line: 2331, column: 17, scope: !4520)
!4522 = !DILocation(line: 2331, column: 38, scope: !4520)
!4523 = !DILocation(line: 2331, column: 8, scope: !4498)
!4524 = !DILocation(line: 2333, column: 11, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 2333, column: 11)
!4526 = distinct !DILexicalBlock(scope: !4520, file: !3, line: 2332, column: 4)
!4527 = !DILocation(line: 2333, column: 20, scope: !4525)
!4528 = !DILocation(line: 2333, column: 41, scope: !4525)
!4529 = !DILocation(line: 2333, column: 11, scope: !4526)
!4530 = !DILocation(line: 2335, column: 25, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 2334, column: 7)
!4532 = !DILocation(line: 2335, column: 34, scope: !4531)
!4533 = !DILocation(line: 2335, column: 10, scope: !4531)
!4534 = !DILocation(line: 2336, column: 10, scope: !4531)
!4535 = !DILocation(line: 2339, column: 13, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 2339, column: 11)
!4537 = !DILocation(line: 2339, column: 22, scope: !4536)
!4538 = !DILocation(line: 2339, column: 11, scope: !4536)
!4539 = !DILocation(line: 2339, column: 43, scope: !4536)
!4540 = !DILocation(line: 2339, column: 11, scope: !4526)
!4541 = !DILocation(line: 2341, column: 22, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 2340, column: 7)
!4543 = !DILocation(line: 2341, column: 10, scope: !4542)
!4544 = !DILocation(line: 2342, column: 25, scope: !4542)
!4545 = !DILocation(line: 2342, column: 34, scope: !4542)
!4546 = !DILocation(line: 2342, column: 10, scope: !4542)
!4547 = !DILocation(line: 2343, column: 10, scope: !4542)
!4548 = !DILocation(line: 2345, column: 4, scope: !4526)
!4549 = !DILocation(line: 2348, column: 10, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 2348, column: 8)
!4551 = !DILocation(line: 2348, column: 19, scope: !4550)
!4552 = !DILocation(line: 2348, column: 24, scope: !4550)
!4553 = !DILocation(line: 2348, column: 8, scope: !4498)
!4554 = !DILocation(line: 2349, column: 17, scope: !4550)
!4555 = !DILocation(line: 2349, column: 7, scope: !4550)
!4556 = !DILocation(line: 2351, column: 8, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 2351, column: 8)
!4558 = !DILocation(line: 2351, column: 17, scope: !4557)
!4559 = !DILocation(line: 2351, column: 22, scope: !4557)
!4560 = !DILocation(line: 2351, column: 8, scope: !4498)
!4561 = !DILocation(line: 2352, column: 7, scope: !4557)
!4562 = !DILocation(line: 2352, column: 16, scope: !4557)
!4563 = !DILocation(line: 2352, column: 21, scope: !4557)
!4564 = !DILocation(line: 2366, column: 13, scope: !4498)
!4565 = !DILocation(line: 2366, column: 22, scope: !4498)
!4566 = !DILocation(line: 2366, column: 31, scope: !4498)
!4567 = !DILocation(line: 2366, column: 4, scope: !4498)
!4568 = !DILocation(line: 2367, column: 52, scope: !4498)
!4569 = !DILocation(line: 2367, column: 61, scope: !4498)
!4570 = !DILocation(line: 2367, column: 68, scope: !4498)
!4571 = !DILocation(line: 2367, column: 36, scope: !4498)
!4572 = !DILocation(line: 2367, column: 4, scope: !4498)
!4573 = !DILocation(line: 2367, column: 13, scope: !4498)
!4574 = !DILocation(line: 2367, column: 23, scope: !4498)
!4575 = !DILocation(line: 2369, column: 8, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 2369, column: 8)
!4577 = !DILocation(line: 2369, column: 17, scope: !4576)
!4578 = !DILocation(line: 2369, column: 27, scope: !4576)
!4579 = !DILocation(line: 2369, column: 8, scope: !4498)
!4580 = !DILocation(line: 2371, column: 19, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 2370, column: 4)
!4582 = !DILocation(line: 2371, column: 7, scope: !4581)
!4583 = !DILocation(line: 2372, column: 7, scope: !4581)
!4584 = !DILocation(line: 2375, column: 14, scope: !4498)
!4585 = !DILocation(line: 2375, column: 12, scope: !4498)
!4586 = !DILocation(line: 2376, column: 17, scope: !4498)
!4587 = !DILocation(line: 2376, column: 37, scope: !4498)
!4588 = !DILocation(line: 2376, column: 46, scope: !4498)
!4589 = !DILocation(line: 2376, column: 57, scope: !4498)
!4590 = !DILocation(line: 2376, column: 4, scope: !4498)
!4591 = !DILocation(line: 2378, column: 23, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 2378, column: 8)
!4593 = !DILocation(line: 2378, column: 8, scope: !4592)
!4594 = !DILocation(line: 2378, column: 8, scope: !4498)
!4595 = !DILocation(line: 2380, column: 16, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 2379, column: 4)
!4597 = !DILocation(line: 2380, column: 25, scope: !4596)
!4598 = !DILocation(line: 2380, column: 34, scope: !4596)
!4599 = !DILocation(line: 2380, column: 7, scope: !4596)
!4600 = !DILocation(line: 2381, column: 7, scope: !4596)
!4601 = !DILocation(line: 2381, column: 16, scope: !4596)
!4602 = !DILocation(line: 2381, column: 26, scope: !4596)
!4603 = !DILocation(line: 2382, column: 7, scope: !4596)
!4604 = !DILocation(line: 2385, column: 4, scope: !4498)
!4605 = !DILocation(line: 2385, column: 13, scope: !4498)
!4606 = !DILocation(line: 2385, column: 23, scope: !4498)
!4607 = !DILocation(line: 2385, column: 32, scope: !4498)
!4608 = !DILocation(line: 2387, column: 16, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 2387, column: 4)
!4610 = !DILocation(line: 2387, column: 25, scope: !4609)
!4611 = !DILocation(line: 2387, column: 14, scope: !4609)
!4612 = !DILocation(line: 2387, column: 9, scope: !4609)
!4613 = !DILocation(line: 2387, column: 37, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 2387, column: 4)
!4615 = !DILocation(line: 2387, column: 36, scope: !4614)
!4616 = !DILocation(line: 2387, column: 4, scope: !4609)
!4617 = !DILocation(line: 2387, column: 47, scope: !4614)
!4618 = !DILocation(line: 2387, column: 4, scope: !4614)
!4619 = distinct !{!4619, !4616, !4620}
!4620 = !DILocation(line: 2388, column: 24, scope: !4609)
!4621 = !DILocation(line: 2391, column: 8, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 2391, column: 8)
!4623 = !DILocation(line: 2391, column: 16, scope: !4622)
!4624 = !DILocation(line: 2391, column: 25, scope: !4622)
!4625 = !DILocation(line: 2391, column: 37, scope: !4622)
!4626 = !DILocation(line: 2391, column: 35, scope: !4622)
!4627 = !DILocation(line: 2391, column: 45, scope: !4622)
!4628 = !DILocation(line: 2391, column: 13, scope: !4622)
!4629 = !DILocation(line: 2391, column: 8, scope: !4498)
!4630 = !DILocation(line: 2393, column: 19, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 2392, column: 4)
!4632 = !DILocation(line: 2393, column: 7, scope: !4631)
!4633 = !DILocation(line: 2394, column: 16, scope: !4631)
!4634 = !DILocation(line: 2394, column: 25, scope: !4631)
!4635 = !DILocation(line: 2394, column: 34, scope: !4631)
!4636 = !DILocation(line: 2394, column: 7, scope: !4631)
!4637 = !DILocation(line: 2395, column: 7, scope: !4631)
!4638 = !DILocation(line: 2395, column: 16, scope: !4631)
!4639 = !DILocation(line: 2395, column: 26, scope: !4631)
!4640 = !DILocation(line: 2396, column: 7, scope: !4631)
!4641 = !DILocation(line: 2401, column: 22, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 2400, column: 4)
!4643 = !DILocation(line: 2401, column: 20, scope: !4642)
!4644 = !DILocation(line: 2401, column: 18, scope: !4642)
!4645 = !DILocation(line: 2403, column: 12, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 2403, column: 12)
!4647 = !DILocation(line: 2403, column: 22, scope: !4646)
!4648 = !DILocation(line: 2403, column: 12, scope: !4642)
!4649 = !DILocation(line: 2405, column: 23, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 2404, column: 8)
!4651 = !DILocation(line: 2405, column: 11, scope: !4650)
!4652 = !DILocation(line: 2406, column: 21, scope: !4650)
!4653 = !DILocation(line: 2407, column: 8, scope: !4650)
!4654 = !DILocation(line: 2409, column: 12, scope: !4642)
!4655 = !DILocation(line: 2412, column: 17, scope: !4498)
!4656 = !DILocation(line: 2412, column: 24, scope: !4498)
!4657 = !DILocation(line: 2412, column: 33, scope: !4498)
!4658 = !DILocation(line: 2412, column: 22, scope: !4498)
!4659 = !DILocation(line: 2412, column: 15, scope: !4498)
!4660 = !DILocation(line: 2414, column: 25, scope: !4498)
!4661 = !DILocation(line: 2414, column: 34, scope: !4498)
!4662 = !DILocation(line: 2415, column: 20, scope: !4498)
!4663 = !DILocation(line: 2415, column: 8, scope: !4498)
!4664 = !DILocation(line: 2415, column: 28, scope: !4498)
!4665 = !DILocation(line: 2414, column: 4, scope: !4498)
!4666 = !DILocation(line: 2417, column: 42, scope: !4498)
!4667 = !DILocation(line: 2417, column: 26, scope: !4498)
!4668 = !DILocation(line: 2417, column: 15, scope: !4498)
!4669 = !DILocation(line: 2417, column: 13, scope: !4498)
!4670 = !DILocation(line: 2420, column: 8, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 2420, column: 8)
!4672 = !DILocation(line: 2420, column: 17, scope: !4671)
!4673 = !DILocation(line: 2420, column: 8, scope: !4498)
!4674 = !DILocation(line: 2422, column: 19, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 2421, column: 4)
!4676 = !DILocation(line: 2422, column: 7, scope: !4675)
!4677 = !DILocation(line: 2423, column: 16, scope: !4675)
!4678 = !DILocation(line: 2423, column: 25, scope: !4675)
!4679 = !DILocation(line: 2423, column: 34, scope: !4675)
!4680 = !DILocation(line: 2423, column: 7, scope: !4675)
!4681 = !DILocation(line: 2424, column: 7, scope: !4675)
!4682 = !DILocation(line: 2424, column: 16, scope: !4675)
!4683 = !DILocation(line: 2424, column: 26, scope: !4675)
!4684 = !DILocation(line: 2425, column: 7, scope: !4675)
!4685 = !DILocation(line: 2428, column: 28, scope: !4498)
!4686 = !DILocation(line: 2428, column: 4, scope: !4498)
!4687 = !DILocation(line: 2428, column: 14, scope: !4498)
!4688 = !DILocation(line: 2428, column: 26, scope: !4498)
!4689 = !DILocation(line: 2429, column: 20, scope: !4498)
!4690 = !DILocation(line: 2429, column: 29, scope: !4498)
!4691 = !DILocation(line: 2429, column: 4, scope: !4498)
!4692 = !DILocation(line: 2429, column: 14, scope: !4498)
!4693 = !DILocation(line: 2429, column: 18, scope: !4498)
!4694 = !DILocation(line: 2430, column: 4, scope: !4498)
!4695 = !DILocation(line: 2430, column: 14, scope: !4498)
!4696 = !DILocation(line: 2430, column: 19, scope: !4498)
!4697 = !DILocation(line: 2431, column: 4, scope: !4498)
!4698 = !DILocation(line: 2431, column: 14, scope: !4498)
!4699 = !DILocation(line: 2431, column: 23, scope: !4498)
!4700 = !DILocation(line: 2432, column: 4, scope: !4498)
!4701 = !DILocation(line: 2432, column: 14, scope: !4498)
!4702 = !DILocation(line: 2432, column: 26, scope: !4498)
!4703 = !DILocation(line: 2433, column: 21, scope: !4498)
!4704 = !DILocation(line: 2433, column: 30, scope: !4498)
!4705 = !DILocation(line: 2433, column: 42, scope: !4498)
!4706 = !DILocation(line: 2433, column: 40, scope: !4498)
!4707 = !DILocation(line: 2433, column: 4, scope: !4498)
!4708 = !DILocation(line: 2433, column: 14, scope: !4498)
!4709 = !DILocation(line: 2433, column: 19, scope: !4498)
!4710 = !DILocation(line: 2434, column: 28, scope: !4498)
!4711 = !DILocation(line: 2434, column: 4, scope: !4498)
!4712 = !DILocation(line: 2434, column: 14, scope: !4498)
!4713 = !DILocation(line: 2434, column: 26, scope: !4498)
!4714 = !DILocation(line: 2436, column: 25, scope: !4498)
!4715 = !DILocation(line: 2436, column: 34, scope: !4498)
!4716 = !DILocation(line: 2436, column: 44, scope: !4498)
!4717 = !DILocation(line: 2436, column: 10, scope: !4498)
!4718 = !DILocation(line: 2436, column: 8, scope: !4498)
!4719 = !DILocation(line: 2438, column: 13, scope: !4498)
!4720 = !DILocation(line: 2438, column: 22, scope: !4498)
!4721 = !DILocation(line: 2438, column: 4, scope: !4498)
!4722 = !DILocation(line: 2439, column: 13, scope: !4498)
!4723 = !DILocation(line: 2439, column: 22, scope: !4498)
!4724 = !DILocation(line: 2439, column: 31, scope: !4498)
!4725 = !DILocation(line: 2439, column: 4, scope: !4498)
!4726 = !DILocation(line: 2440, column: 4, scope: !4498)
!4727 = !DILocation(line: 2440, column: 13, scope: !4498)
!4728 = !DILocation(line: 2440, column: 23, scope: !4498)
!4729 = !DILocation(line: 2442, column: 8, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 2442, column: 8)
!4731 = !DILocation(line: 2442, column: 8, scope: !4498)
!4732 = !DILocation(line: 2443, column: 17, scope: !4730)
!4733 = !DILocation(line: 2443, column: 7, scope: !4730)
!4734 = !DILocation(line: 2444, column: 1, scope: !4498)
!4735 = distinct !DISubprogram(name: "png_handle_iTXt", scope: !3, file: !3, line: 2450, type: !1268, scopeLine: 2451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!4736 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !4735, file: !3, line: 2450, type: !6)
!4737 = !DILocation(line: 2450, column: 29, scope: !4735)
!4738 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !4735, file: !3, line: 2450, type: !258)
!4739 = !DILocation(line: 2450, column: 48, scope: !4735)
!4740 = !DILocalVariable(name: "length", arg: 3, scope: !4735, file: !3, line: 2450, type: !85)
!4741 = !DILocation(line: 2450, column: 70, scope: !4735)
!4742 = !DILocalVariable(name: "text_ptr", scope: !4735, file: !3, line: 2452, type: !286)
!4743 = !DILocation(line: 2452, column: 14, scope: !4735)
!4744 = !DILocalVariable(name: "key", scope: !4735, file: !3, line: 2453, type: !293)
!4745 = !DILocation(line: 2453, column: 14, scope: !4735)
!4746 = !DILocalVariable(name: "lang", scope: !4735, file: !3, line: 2453, type: !293)
!4747 = !DILocation(line: 2453, column: 19, scope: !4735)
!4748 = !DILocalVariable(name: "text", scope: !4735, file: !3, line: 2453, type: !293)
!4749 = !DILocation(line: 2453, column: 25, scope: !4735)
!4750 = !DILocalVariable(name: "lang_key", scope: !4735, file: !3, line: 2453, type: !293)
!4751 = !DILocation(line: 2453, column: 31, scope: !4735)
!4752 = !DILocalVariable(name: "comp_flag", scope: !4735, file: !3, line: 2454, type: !27)
!4753 = !DILocation(line: 2454, column: 8, scope: !4735)
!4754 = !DILocalVariable(name: "comp_type", scope: !4735, file: !3, line: 2455, type: !27)
!4755 = !DILocation(line: 2455, column: 8, scope: !4735)
!4756 = !DILocalVariable(name: "ret", scope: !4735, file: !3, line: 2456, type: !27)
!4757 = !DILocation(line: 2456, column: 8, scope: !4735)
!4758 = !DILocalVariable(name: "slength", scope: !4735, file: !3, line: 2457, type: !69)
!4759 = !DILocation(line: 2457, column: 15, scope: !4735)
!4760 = !DILocalVariable(name: "prefix_len", scope: !4735, file: !3, line: 2457, type: !69)
!4761 = !DILocation(line: 2457, column: 24, scope: !4735)
!4762 = !DILocalVariable(name: "data_len", scope: !4735, file: !3, line: 2457, type: !69)
!4763 = !DILocation(line: 2457, column: 36, scope: !4735)
!4764 = !DILocation(line: 2462, column: 8, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2462, column: 8)
!4766 = !DILocation(line: 2462, column: 17, scope: !4765)
!4767 = !DILocation(line: 2462, column: 38, scope: !4765)
!4768 = !DILocation(line: 2462, column: 8, scope: !4735)
!4769 = !DILocation(line: 2464, column: 11, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !3, line: 2464, column: 11)
!4771 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 2463, column: 4)
!4772 = !DILocation(line: 2464, column: 20, scope: !4770)
!4773 = !DILocation(line: 2464, column: 41, scope: !4770)
!4774 = !DILocation(line: 2464, column: 11, scope: !4771)
!4775 = !DILocation(line: 2466, column: 25, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 2465, column: 7)
!4777 = !DILocation(line: 2466, column: 34, scope: !4776)
!4778 = !DILocation(line: 2466, column: 10, scope: !4776)
!4779 = !DILocation(line: 2467, column: 10, scope: !4776)
!4780 = !DILocation(line: 2470, column: 13, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4771, file: !3, line: 2470, column: 11)
!4782 = !DILocation(line: 2470, column: 22, scope: !4781)
!4783 = !DILocation(line: 2470, column: 11, scope: !4781)
!4784 = !DILocation(line: 2470, column: 43, scope: !4781)
!4785 = !DILocation(line: 2470, column: 11, scope: !4771)
!4786 = !DILocation(line: 2472, column: 22, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 2471, column: 7)
!4788 = !DILocation(line: 2472, column: 10, scope: !4787)
!4789 = !DILocation(line: 2473, column: 25, scope: !4787)
!4790 = !DILocation(line: 2473, column: 34, scope: !4787)
!4791 = !DILocation(line: 2473, column: 10, scope: !4787)
!4792 = !DILocation(line: 2474, column: 10, scope: !4787)
!4793 = !DILocation(line: 2476, column: 4, scope: !4771)
!4794 = !DILocation(line: 2479, column: 10, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2479, column: 8)
!4796 = !DILocation(line: 2479, column: 19, scope: !4795)
!4797 = !DILocation(line: 2479, column: 24, scope: !4795)
!4798 = !DILocation(line: 2479, column: 8, scope: !4735)
!4799 = !DILocation(line: 2480, column: 17, scope: !4795)
!4800 = !DILocation(line: 2480, column: 7, scope: !4795)
!4801 = !DILocation(line: 2482, column: 8, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2482, column: 8)
!4803 = !DILocation(line: 2482, column: 17, scope: !4802)
!4804 = !DILocation(line: 2482, column: 22, scope: !4802)
!4805 = !DILocation(line: 2482, column: 8, scope: !4735)
!4806 = !DILocation(line: 2483, column: 7, scope: !4802)
!4807 = !DILocation(line: 2483, column: 16, scope: !4802)
!4808 = !DILocation(line: 2483, column: 21, scope: !4802)
!4809 = !DILocation(line: 2497, column: 13, scope: !4735)
!4810 = !DILocation(line: 2497, column: 22, scope: !4735)
!4811 = !DILocation(line: 2497, column: 31, scope: !4735)
!4812 = !DILocation(line: 2497, column: 4, scope: !4735)
!4813 = !DILocation(line: 2498, column: 52, scope: !4735)
!4814 = !DILocation(line: 2498, column: 61, scope: !4735)
!4815 = !DILocation(line: 2498, column: 68, scope: !4735)
!4816 = !DILocation(line: 2498, column: 36, scope: !4735)
!4817 = !DILocation(line: 2498, column: 4, scope: !4735)
!4818 = !DILocation(line: 2498, column: 13, scope: !4735)
!4819 = !DILocation(line: 2498, column: 23, scope: !4735)
!4820 = !DILocation(line: 2500, column: 8, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2500, column: 8)
!4822 = !DILocation(line: 2500, column: 17, scope: !4821)
!4823 = !DILocation(line: 2500, column: 27, scope: !4821)
!4824 = !DILocation(line: 2500, column: 8, scope: !4735)
!4825 = !DILocation(line: 2502, column: 19, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 2501, column: 4)
!4827 = !DILocation(line: 2502, column: 7, scope: !4826)
!4828 = !DILocation(line: 2503, column: 7, scope: !4826)
!4829 = !DILocation(line: 2506, column: 14, scope: !4735)
!4830 = !DILocation(line: 2506, column: 12, scope: !4735)
!4831 = !DILocation(line: 2507, column: 17, scope: !4735)
!4832 = !DILocation(line: 2507, column: 37, scope: !4735)
!4833 = !DILocation(line: 2507, column: 46, scope: !4735)
!4834 = !DILocation(line: 2507, column: 57, scope: !4735)
!4835 = !DILocation(line: 2507, column: 4, scope: !4735)
!4836 = !DILocation(line: 2509, column: 23, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2509, column: 8)
!4838 = !DILocation(line: 2509, column: 8, scope: !4837)
!4839 = !DILocation(line: 2509, column: 8, scope: !4735)
!4840 = !DILocation(line: 2511, column: 16, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 2510, column: 4)
!4842 = !DILocation(line: 2511, column: 25, scope: !4841)
!4843 = !DILocation(line: 2511, column: 34, scope: !4841)
!4844 = !DILocation(line: 2511, column: 7, scope: !4841)
!4845 = !DILocation(line: 2512, column: 7, scope: !4841)
!4846 = !DILocation(line: 2512, column: 16, scope: !4841)
!4847 = !DILocation(line: 2512, column: 26, scope: !4841)
!4848 = !DILocation(line: 2513, column: 7, scope: !4841)
!4849 = !DILocation(line: 2516, column: 4, scope: !4735)
!4850 = !DILocation(line: 2516, column: 13, scope: !4735)
!4851 = !DILocation(line: 2516, column: 23, scope: !4735)
!4852 = !DILocation(line: 2516, column: 32, scope: !4735)
!4853 = !DILocation(line: 2518, column: 16, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2518, column: 4)
!4855 = !DILocation(line: 2518, column: 25, scope: !4854)
!4856 = !DILocation(line: 2518, column: 14, scope: !4854)
!4857 = !DILocation(line: 2518, column: 9, scope: !4854)
!4858 = !DILocation(line: 2518, column: 37, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 2518, column: 4)
!4860 = !DILocation(line: 2518, column: 36, scope: !4859)
!4861 = !DILocation(line: 2518, column: 4, scope: !4854)
!4862 = !DILocation(line: 2518, column: 47, scope: !4859)
!4863 = !DILocation(line: 2518, column: 4, scope: !4859)
!4864 = distinct !{!4864, !4861, !4865}
!4865 = !DILocation(line: 2519, column: 24, scope: !4854)
!4866 = !DILocation(line: 2521, column: 8, scope: !4735)
!4867 = !DILocation(line: 2528, column: 8, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2528, column: 8)
!4869 = !DILocation(line: 2528, column: 16, scope: !4868)
!4870 = !DILocation(line: 2528, column: 25, scope: !4868)
!4871 = !DILocation(line: 2528, column: 37, scope: !4868)
!4872 = !DILocation(line: 2528, column: 35, scope: !4868)
!4873 = !DILocation(line: 2528, column: 45, scope: !4868)
!4874 = !DILocation(line: 2528, column: 13, scope: !4868)
!4875 = !DILocation(line: 2528, column: 8, scope: !4735)
!4876 = !DILocation(line: 2530, column: 19, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 2529, column: 4)
!4878 = !DILocation(line: 2530, column: 7, scope: !4877)
!4879 = !DILocation(line: 2531, column: 16, scope: !4877)
!4880 = !DILocation(line: 2531, column: 25, scope: !4877)
!4881 = !DILocation(line: 2531, column: 34, scope: !4877)
!4882 = !DILocation(line: 2531, column: 7, scope: !4877)
!4883 = !DILocation(line: 2532, column: 7, scope: !4877)
!4884 = !DILocation(line: 2532, column: 16, scope: !4877)
!4885 = !DILocation(line: 2532, column: 26, scope: !4877)
!4886 = !DILocation(line: 2533, column: 7, scope: !4877)
!4887 = !DILocation(line: 2538, column: 24, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 2537, column: 4)
!4889 = !DILocation(line: 2538, column: 19, scope: !4888)
!4890 = !DILocation(line: 2538, column: 17, scope: !4888)
!4891 = !DILocation(line: 2539, column: 24, scope: !4888)
!4892 = !DILocation(line: 2539, column: 19, scope: !4888)
!4893 = !DILocation(line: 2539, column: 17, scope: !4888)
!4894 = !DILocation(line: 2542, column: 8, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2542, column: 8)
!4896 = !DILocation(line: 2542, column: 18, scope: !4895)
!4897 = !DILocation(line: 2542, column: 22, scope: !4895)
!4898 = !DILocation(line: 2542, column: 32, scope: !4895)
!4899 = !DILocation(line: 2542, column: 35, scope: !4895)
!4900 = !DILocation(line: 2542, column: 45, scope: !4895)
!4901 = !DILocation(line: 2542, column: 8, scope: !4735)
!4902 = !DILocation(line: 2544, column: 19, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2543, column: 4)
!4904 = !DILocation(line: 2544, column: 7, scope: !4903)
!4905 = !DILocation(line: 2545, column: 16, scope: !4903)
!4906 = !DILocation(line: 2545, column: 25, scope: !4903)
!4907 = !DILocation(line: 2545, column: 34, scope: !4903)
!4908 = !DILocation(line: 2545, column: 7, scope: !4903)
!4909 = !DILocation(line: 2546, column: 7, scope: !4903)
!4910 = !DILocation(line: 2546, column: 16, scope: !4903)
!4911 = !DILocation(line: 2546, column: 26, scope: !4903)
!4912 = !DILocation(line: 2547, column: 7, scope: !4903)
!4913 = !DILocation(line: 2550, column: 20, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2550, column: 4)
!4915 = !DILocation(line: 2550, column: 18, scope: !4914)
!4916 = !DILocation(line: 2550, column: 9, scope: !4914)
!4917 = !DILocation(line: 2550, column: 27, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2550, column: 4)
!4919 = !DILocation(line: 2550, column: 26, scope: !4918)
!4920 = !DILocation(line: 2550, column: 4, scope: !4914)
!4921 = !DILocation(line: 2550, column: 45, scope: !4918)
!4922 = !DILocation(line: 2550, column: 4, scope: !4918)
!4923 = distinct !{!4923, !4920, !4924}
!4924 = !DILocation(line: 2551, column: 24, scope: !4914)
!4925 = !DILocation(line: 2553, column: 12, scope: !4735)
!4926 = !DILocation(line: 2555, column: 8, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2555, column: 8)
!4928 = !DILocation(line: 2555, column: 20, scope: !4927)
!4929 = !DILocation(line: 2555, column: 29, scope: !4927)
!4930 = !DILocation(line: 2555, column: 41, scope: !4927)
!4931 = !DILocation(line: 2555, column: 39, scope: !4927)
!4932 = !DILocation(line: 2555, column: 17, scope: !4927)
!4933 = !DILocation(line: 2555, column: 8, scope: !4735)
!4934 = !DILocation(line: 2557, column: 19, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2556, column: 4)
!4936 = !DILocation(line: 2557, column: 7, scope: !4935)
!4937 = !DILocation(line: 2558, column: 16, scope: !4935)
!4938 = !DILocation(line: 2558, column: 25, scope: !4935)
!4939 = !DILocation(line: 2558, column: 34, scope: !4935)
!4940 = !DILocation(line: 2558, column: 7, scope: !4935)
!4941 = !DILocation(line: 2559, column: 7, scope: !4935)
!4942 = !DILocation(line: 2559, column: 16, scope: !4935)
!4943 = !DILocation(line: 2559, column: 26, scope: !4935)
!4944 = !DILocation(line: 2560, column: 7, scope: !4935)
!4945 = !DILocation(line: 2563, column: 16, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2563, column: 4)
!4947 = !DILocation(line: 2563, column: 14, scope: !4946)
!4948 = !DILocation(line: 2563, column: 9, scope: !4946)
!4949 = !DILocation(line: 2563, column: 27, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4946, file: !3, line: 2563, column: 4)
!4951 = !DILocation(line: 2563, column: 26, scope: !4950)
!4952 = !DILocation(line: 2563, column: 4, scope: !4946)
!4953 = !DILocation(line: 2563, column: 37, scope: !4950)
!4954 = !DILocation(line: 2563, column: 4, scope: !4950)
!4955 = distinct !{!4955, !4952, !4956}
!4956 = !DILocation(line: 2564, column: 24, scope: !4946)
!4957 = !DILocation(line: 2566, column: 8, scope: !4735)
!4958 = !DILocation(line: 2568, column: 8, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2568, column: 8)
!4960 = !DILocation(line: 2568, column: 16, scope: !4959)
!4961 = !DILocation(line: 2568, column: 25, scope: !4959)
!4962 = !DILocation(line: 2568, column: 37, scope: !4959)
!4963 = !DILocation(line: 2568, column: 35, scope: !4959)
!4964 = !DILocation(line: 2568, column: 13, scope: !4959)
!4965 = !DILocation(line: 2568, column: 8, scope: !4735)
!4966 = !DILocation(line: 2570, column: 19, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4959, file: !3, line: 2569, column: 4)
!4968 = !DILocation(line: 2570, column: 7, scope: !4967)
!4969 = !DILocation(line: 2571, column: 16, scope: !4967)
!4970 = !DILocation(line: 2571, column: 25, scope: !4967)
!4971 = !DILocation(line: 2571, column: 34, scope: !4967)
!4972 = !DILocation(line: 2571, column: 7, scope: !4967)
!4973 = !DILocation(line: 2572, column: 7, scope: !4967)
!4974 = !DILocation(line: 2572, column: 16, scope: !4967)
!4975 = !DILocation(line: 2572, column: 26, scope: !4967)
!4976 = !DILocation(line: 2573, column: 7, scope: !4967)
!4977 = !DILocation(line: 2576, column: 17, scope: !4735)
!4978 = !DILocation(line: 2576, column: 24, scope: !4735)
!4979 = !DILocation(line: 2576, column: 33, scope: !4735)
!4980 = !DILocation(line: 2576, column: 22, scope: !4735)
!4981 = !DILocation(line: 2576, column: 15, scope: !4735)
!4982 = !DILocation(line: 2578, column: 8, scope: !4735)
!4983 = !DILocation(line: 2578, column: 17, scope: !4735)
!4984 = !DILocation(line: 2578, column: 7, scope: !4735)
!4985 = !DILocation(line: 2580, column: 8, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2580, column: 8)
!4987 = !DILocation(line: 2580, column: 8, scope: !4735)
!4988 = !DILocation(line: 2581, column: 28, scope: !4986)
!4989 = !DILocation(line: 2581, column: 37, scope: !4986)
!4990 = !DILocation(line: 2582, column: 19, scope: !4986)
!4991 = !DILocation(line: 2582, column: 11, scope: !4986)
!4992 = !DILocation(line: 2582, column: 27, scope: !4986)
!4993 = !DILocation(line: 2581, column: 7, scope: !4986)
!4994 = !DILocation(line: 2585, column: 29, scope: !4986)
!4995 = !DILocation(line: 2585, column: 38, scope: !4986)
!4996 = !DILocation(line: 2585, column: 50, scope: !4986)
!4997 = !DILocation(line: 2585, column: 48, scope: !4986)
!4998 = !DILocation(line: 2585, column: 18, scope: !4986)
!4999 = !DILocation(line: 2585, column: 16, scope: !4986)
!5000 = !DILocation(line: 2587, column: 42, scope: !4735)
!5001 = !DILocation(line: 2587, column: 26, scope: !4735)
!5002 = !DILocation(line: 2587, column: 15, scope: !4735)
!5003 = !DILocation(line: 2587, column: 13, scope: !4735)
!5004 = !DILocation(line: 2590, column: 8, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2590, column: 8)
!5006 = !DILocation(line: 2590, column: 17, scope: !5005)
!5007 = !DILocation(line: 2590, column: 8, scope: !4735)
!5008 = !DILocation(line: 2592, column: 19, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 2591, column: 4)
!5010 = !DILocation(line: 2592, column: 7, scope: !5009)
!5011 = !DILocation(line: 2593, column: 16, scope: !5009)
!5012 = !DILocation(line: 2593, column: 25, scope: !5009)
!5013 = !DILocation(line: 2593, column: 34, scope: !5009)
!5014 = !DILocation(line: 2593, column: 7, scope: !5009)
!5015 = !DILocation(line: 2594, column: 7, scope: !5009)
!5016 = !DILocation(line: 2594, column: 16, scope: !5009)
!5017 = !DILocation(line: 2594, column: 26, scope: !5009)
!5018 = !DILocation(line: 2595, column: 7, scope: !5009)
!5019 = !DILocation(line: 2598, column: 33, scope: !4735)
!5020 = !DILocation(line: 2598, column: 43, scope: !4735)
!5021 = !DILocation(line: 2598, column: 4, scope: !4735)
!5022 = !DILocation(line: 2598, column: 14, scope: !4735)
!5023 = !DILocation(line: 2598, column: 26, scope: !4735)
!5024 = !DILocation(line: 2599, column: 25, scope: !4735)
!5025 = !DILocation(line: 2599, column: 34, scope: !4735)
!5026 = !DILocation(line: 2599, column: 47, scope: !4735)
!5027 = !DILocation(line: 2599, column: 58, scope: !4735)
!5028 = !DILocation(line: 2599, column: 56, scope: !4735)
!5029 = !DILocation(line: 2599, column: 44, scope: !4735)
!5030 = !DILocation(line: 2599, column: 4, scope: !4735)
!5031 = !DILocation(line: 2599, column: 14, scope: !4735)
!5032 = !DILocation(line: 2599, column: 23, scope: !4735)
!5033 = !DILocation(line: 2600, column: 21, scope: !4735)
!5034 = !DILocation(line: 2600, column: 30, scope: !4735)
!5035 = !DILocation(line: 2600, column: 43, scope: !4735)
!5036 = !DILocation(line: 2600, column: 50, scope: !4735)
!5037 = !DILocation(line: 2600, column: 48, scope: !4735)
!5038 = !DILocation(line: 2600, column: 40, scope: !4735)
!5039 = !DILocation(line: 2600, column: 4, scope: !4735)
!5040 = !DILocation(line: 2600, column: 14, scope: !4735)
!5041 = !DILocation(line: 2600, column: 19, scope: !4735)
!5042 = !DILocation(line: 2601, column: 28, scope: !4735)
!5043 = !DILocation(line: 2601, column: 4, scope: !4735)
!5044 = !DILocation(line: 2601, column: 14, scope: !4735)
!5045 = !DILocation(line: 2601, column: 26, scope: !4735)
!5046 = !DILocation(line: 2602, column: 4, scope: !4735)
!5047 = !DILocation(line: 2602, column: 14, scope: !4735)
!5048 = !DILocation(line: 2602, column: 26, scope: !4735)
!5049 = !DILocation(line: 2603, column: 20, scope: !4735)
!5050 = !DILocation(line: 2603, column: 29, scope: !4735)
!5051 = !DILocation(line: 2603, column: 4, scope: !4735)
!5052 = !DILocation(line: 2603, column: 14, scope: !4735)
!5053 = !DILocation(line: 2603, column: 18, scope: !4735)
!5054 = !DILocation(line: 2604, column: 21, scope: !4735)
!5055 = !DILocation(line: 2604, column: 30, scope: !4735)
!5056 = !DILocation(line: 2604, column: 42, scope: !4735)
!5057 = !DILocation(line: 2604, column: 40, scope: !4735)
!5058 = !DILocation(line: 2604, column: 4, scope: !4735)
!5059 = !DILocation(line: 2604, column: 14, scope: !4735)
!5060 = !DILocation(line: 2604, column: 19, scope: !4735)
!5061 = !DILocation(line: 2606, column: 25, scope: !4735)
!5062 = !DILocation(line: 2606, column: 34, scope: !4735)
!5063 = !DILocation(line: 2606, column: 44, scope: !4735)
!5064 = !DILocation(line: 2606, column: 10, scope: !4735)
!5065 = !DILocation(line: 2606, column: 8, scope: !4735)
!5066 = !DILocation(line: 2608, column: 13, scope: !4735)
!5067 = !DILocation(line: 2608, column: 22, scope: !4735)
!5068 = !DILocation(line: 2608, column: 4, scope: !4735)
!5069 = !DILocation(line: 2609, column: 13, scope: !4735)
!5070 = !DILocation(line: 2609, column: 22, scope: !4735)
!5071 = !DILocation(line: 2609, column: 31, scope: !4735)
!5072 = !DILocation(line: 2609, column: 4, scope: !4735)
!5073 = !DILocation(line: 2610, column: 4, scope: !4735)
!5074 = !DILocation(line: 2610, column: 13, scope: !4735)
!5075 = !DILocation(line: 2610, column: 23, scope: !4735)
!5076 = !DILocation(line: 2612, column: 8, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 2612, column: 8)
!5078 = !DILocation(line: 2612, column: 8, scope: !4735)
!5079 = !DILocation(line: 2613, column: 17, scope: !5077)
!5080 = !DILocation(line: 2613, column: 7, scope: !5077)
!5081 = !DILocation(line: 2614, column: 1, scope: !4735)
!5082 = distinct !DISubprogram(name: "png_handle_unknown", scope: !3, file: !3, line: 2624, type: !1268, scopeLine: 2625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!5083 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !5082, file: !3, line: 2624, type: !6)
!5084 = !DILocation(line: 2624, column: 32, scope: !5082)
!5085 = !DILocalVariable(name: "info_ptr", arg: 2, scope: !5082, file: !3, line: 2624, type: !258)
!5086 = !DILocation(line: 2624, column: 51, scope: !5082)
!5087 = !DILocalVariable(name: "length", arg: 3, scope: !5082, file: !3, line: 2624, type: !85)
!5088 = !DILocation(line: 2624, column: 73, scope: !5082)
!5089 = !DILocalVariable(name: "skip", scope: !5082, file: !3, line: 2626, type: !85)
!5090 = !DILocation(line: 2626, column: 16, scope: !5082)
!5091 = !DILocation(line: 2631, column: 8, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 2631, column: 8)
!5093 = !DILocation(line: 2631, column: 17, scope: !5092)
!5094 = !DILocation(line: 2631, column: 38, scope: !5092)
!5095 = !DILocation(line: 2631, column: 8, scope: !5082)
!5096 = !DILocation(line: 2633, column: 11, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 2633, column: 11)
!5098 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 2632, column: 4)
!5099 = !DILocation(line: 2633, column: 20, scope: !5097)
!5100 = !DILocation(line: 2633, column: 41, scope: !5097)
!5101 = !DILocation(line: 2633, column: 11, scope: !5098)
!5102 = !DILocation(line: 2635, column: 25, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 2634, column: 7)
!5104 = !DILocation(line: 2635, column: 34, scope: !5103)
!5105 = !DILocation(line: 2635, column: 10, scope: !5103)
!5106 = !DILocation(line: 2636, column: 10, scope: !5103)
!5107 = !DILocation(line: 2639, column: 13, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 2639, column: 11)
!5109 = !DILocation(line: 2639, column: 22, scope: !5108)
!5110 = !DILocation(line: 2639, column: 11, scope: !5108)
!5111 = !DILocation(line: 2639, column: 43, scope: !5108)
!5112 = !DILocation(line: 2639, column: 11, scope: !5098)
!5113 = !DILocation(line: 2641, column: 22, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 2640, column: 7)
!5115 = !DILocation(line: 2641, column: 10, scope: !5114)
!5116 = !DILocation(line: 2642, column: 25, scope: !5114)
!5117 = !DILocation(line: 2642, column: 34, scope: !5114)
!5118 = !DILocation(line: 2642, column: 10, scope: !5114)
!5119 = !DILocation(line: 2643, column: 10, scope: !5114)
!5120 = !DILocation(line: 2645, column: 4, scope: !5098)
!5121 = !DILocation(line: 2648, column: 8, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 2648, column: 8)
!5123 = !DILocation(line: 2648, column: 17, scope: !5122)
!5124 = !DILocation(line: 2648, column: 22, scope: !5122)
!5125 = !DILocation(line: 2648, column: 8, scope: !5082)
!5126 = !DILocation(line: 2650, column: 11, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 2650, column: 11)
!5128 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 2649, column: 4)
!5129 = !DILocation(line: 2650, column: 20, scope: !5127)
!5130 = !DILocation(line: 2650, column: 31, scope: !5127)
!5131 = !DILocation(line: 2650, column: 11, scope: !5128)
!5132 = !DILocation(line: 2651, column: 10, scope: !5127)
!5133 = !DILocation(line: 2651, column: 19, scope: !5127)
!5134 = !DILocation(line: 2651, column: 24, scope: !5127)
!5135 = !DILocation(line: 2652, column: 4, scope: !5128)
!5136 = !DILocation(line: 2654, column: 8, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 2654, column: 8)
!5138 = !DILocation(line: 2654, column: 8, scope: !5082)
!5139 = !DILocation(line: 2657, column: 38, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 2657, column: 11)
!5141 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 2655, column: 4)
!5142 = !DILocation(line: 2657, column: 47, scope: !5140)
!5143 = !DILocation(line: 2657, column: 56, scope: !5140)
!5144 = !DILocation(line: 2657, column: 11, scope: !5140)
!5145 = !DILocation(line: 2657, column: 68, scope: !5140)
!5146 = !DILocation(line: 2660, column: 11, scope: !5140)
!5147 = !DILocation(line: 2660, column: 14, scope: !5140)
!5148 = !DILocation(line: 2660, column: 23, scope: !5140)
!5149 = !DILocation(line: 2660, column: 42, scope: !5140)
!5150 = !DILocation(line: 2657, column: 11, scope: !5141)
!5151 = !DILocation(line: 2664, column: 26, scope: !5140)
!5152 = !DILocation(line: 2664, column: 10, scope: !5140)
!5153 = !DILocation(line: 2665, column: 4, scope: !5141)
!5154 = !DILocation(line: 2668, column: 9, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 2668, column: 8)
!5156 = !DILocation(line: 2668, column: 18, scope: !5155)
!5157 = !DILocation(line: 2668, column: 24, scope: !5155)
!5158 = !DILocation(line: 2670, column: 8, scope: !5155)
!5159 = !DILocation(line: 2670, column: 12, scope: !5155)
!5160 = !DILocation(line: 2670, column: 21, scope: !5155)
!5161 = !DILocation(line: 2670, column: 40, scope: !5155)
!5162 = !DILocation(line: 2668, column: 8, scope: !5082)
!5163 = !DILocation(line: 2688, column: 7, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5155, file: !3, line: 2673, column: 4)
!5165 = !DILocation(line: 2689, column: 49, scope: !5164)
!5166 = !DILocation(line: 2689, column: 37, scope: !5164)
!5167 = !DILocation(line: 2689, column: 7, scope: !5164)
!5168 = !DILocation(line: 2689, column: 16, scope: !5164)
!5169 = !DILocation(line: 2689, column: 30, scope: !5164)
!5170 = !DILocation(line: 2689, column: 35, scope: !5164)
!5171 = !DILocation(line: 2691, column: 11, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 2691, column: 11)
!5173 = !DILocation(line: 2691, column: 18, scope: !5172)
!5174 = !DILocation(line: 2691, column: 11, scope: !5164)
!5175 = !DILocation(line: 2692, column: 10, scope: !5172)
!5176 = !DILocation(line: 2692, column: 19, scope: !5172)
!5177 = !DILocation(line: 2692, column: 33, scope: !5172)
!5178 = !DILocation(line: 2692, column: 38, scope: !5172)
!5179 = !DILocation(line: 2696, column: 62, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5172, file: !3, line: 2695, column: 7)
!5181 = !DILocation(line: 2696, column: 71, scope: !5180)
!5182 = !DILocation(line: 2696, column: 51, scope: !5180)
!5183 = !DILocation(line: 2696, column: 10, scope: !5180)
!5184 = !DILocation(line: 2696, column: 19, scope: !5180)
!5185 = !DILocation(line: 2696, column: 33, scope: !5180)
!5186 = !DILocation(line: 2696, column: 38, scope: !5180)
!5187 = !DILocation(line: 2697, column: 23, scope: !5180)
!5188 = !DILocation(line: 2697, column: 32, scope: !5180)
!5189 = !DILocation(line: 2697, column: 41, scope: !5180)
!5190 = !DILocation(line: 2697, column: 55, scope: !5180)
!5191 = !DILocation(line: 2697, column: 61, scope: !5180)
!5192 = !DILocation(line: 2697, column: 10, scope: !5180)
!5193 = !DILocation(line: 2701, column: 11, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 2701, column: 11)
!5195 = !DILocation(line: 2701, column: 20, scope: !5194)
!5196 = !DILocation(line: 2701, column: 39, scope: !5194)
!5197 = !DILocation(line: 2701, column: 11, scope: !5164)
!5198 = !DILocalVariable(name: "ret", scope: !5199, file: !3, line: 2704, type: !27)
!5199 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 2702, column: 7)
!5200 = !DILocation(line: 2704, column: 14, scope: !5199)
!5201 = !DILocation(line: 2706, column: 19, scope: !5199)
!5202 = !DILocation(line: 2706, column: 28, scope: !5199)
!5203 = !DILocation(line: 2707, column: 15, scope: !5199)
!5204 = !DILocation(line: 2707, column: 25, scope: !5199)
!5205 = !DILocation(line: 2707, column: 34, scope: !5199)
!5206 = !DILocation(line: 2706, column: 16, scope: !5199)
!5207 = !DILocation(line: 2706, column: 14, scope: !5199)
!5208 = !DILocation(line: 2709, column: 14, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 2709, column: 14)
!5210 = !DILocation(line: 2709, column: 18, scope: !5209)
!5211 = !DILocation(line: 2709, column: 14, scope: !5199)
!5212 = !DILocation(line: 2710, column: 29, scope: !5209)
!5213 = !DILocation(line: 2710, column: 13, scope: !5209)
!5214 = !DILocation(line: 2712, column: 14, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 2712, column: 14)
!5216 = !DILocation(line: 2712, column: 18, scope: !5215)
!5217 = !DILocation(line: 2712, column: 14, scope: !5199)
!5218 = !DILocation(line: 2714, column: 17, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 2714, column: 17)
!5220 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 2713, column: 10)
!5221 = !DILocation(line: 2714, column: 17, scope: !5220)
!5222 = !DILocation(line: 2717, column: 47, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 2717, column: 20)
!5224 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 2715, column: 13)
!5225 = !DILocation(line: 2717, column: 56, scope: !5223)
!5226 = !DILocation(line: 2717, column: 65, scope: !5223)
!5227 = !DILocation(line: 2717, column: 20, scope: !5223)
!5228 = !DILocation(line: 2717, column: 77, scope: !5223)
!5229 = !DILocation(line: 2717, column: 20, scope: !5224)
!5230 = !DILocation(line: 2720, column: 35, scope: !5223)
!5231 = !DILocation(line: 2720, column: 19, scope: !5223)
!5232 = !DILocation(line: 2721, column: 13, scope: !5224)
!5233 = !DILocation(line: 2723, column: 36, scope: !5220)
!5234 = !DILocation(line: 2723, column: 45, scope: !5220)
!5235 = !DILocation(line: 2724, column: 18, scope: !5220)
!5236 = !DILocation(line: 2724, column: 27, scope: !5220)
!5237 = !DILocation(line: 2723, column: 13, scope: !5220)
!5238 = !DILocation(line: 2725, column: 10, scope: !5220)
!5239 = !DILocation(line: 2726, column: 7, scope: !5199)
!5240 = !DILocation(line: 2730, column: 33, scope: !5194)
!5241 = !DILocation(line: 2730, column: 42, scope: !5194)
!5242 = !DILocation(line: 2730, column: 53, scope: !5194)
!5243 = !DILocation(line: 2730, column: 62, scope: !5194)
!5244 = !DILocation(line: 2730, column: 10, scope: !5194)
!5245 = !DILocation(line: 2732, column: 16, scope: !5164)
!5246 = !DILocation(line: 2732, column: 25, scope: !5164)
!5247 = !DILocation(line: 2732, column: 34, scope: !5164)
!5248 = !DILocation(line: 2732, column: 48, scope: !5164)
!5249 = !DILocation(line: 2732, column: 7, scope: !5164)
!5250 = !DILocation(line: 2733, column: 7, scope: !5164)
!5251 = !DILocation(line: 2733, column: 16, scope: !5164)
!5252 = !DILocation(line: 2733, column: 30, scope: !5164)
!5253 = !DILocation(line: 2733, column: 35, scope: !5164)
!5254 = !DILocation(line: 2734, column: 4, scope: !5164)
!5255 = !DILocation(line: 2738, column: 14, scope: !5155)
!5256 = !DILocation(line: 2738, column: 12, scope: !5155)
!5257 = !DILocation(line: 2740, column: 19, scope: !5082)
!5258 = !DILocation(line: 2740, column: 28, scope: !5082)
!5259 = !DILocation(line: 2740, column: 4, scope: !5082)
!5260 = !DILocation(line: 2745, column: 1, scope: !5082)
!5261 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !2, file: !3, line: 2785, type: !6)
!5262 = !DILocation(line: 2785, column: 29, scope: !2)
!5263 = !DILocalVariable(name: "dp", arg: 2, scope: !2, file: !3, line: 2785, type: !65)
!5264 = !DILocation(line: 2785, column: 48, scope: !2)
!5265 = !DILocalVariable(name: "display", arg: 3, scope: !2, file: !3, line: 2785, type: !27)
!5266 = !DILocation(line: 2785, column: 56, scope: !2)
!5267 = !DILocalVariable(name: "pixel_depth", scope: !2, file: !3, line: 2787, type: !86)
!5268 = !DILocation(line: 2787, column: 17, scope: !2)
!5269 = !DILocation(line: 2787, column: 31, scope: !2)
!5270 = !DILocation(line: 2787, column: 40, scope: !2)
!5271 = !DILocalVariable(name: "sp", scope: !2, file: !3, line: 2788, type: !461)
!5272 = !DILocation(line: 2788, column: 20, scope: !2)
!5273 = !DILocation(line: 2788, column: 25, scope: !2)
!5274 = !DILocation(line: 2788, column: 34, scope: !2)
!5275 = !DILocation(line: 2788, column: 42, scope: !2)
!5276 = !DILocalVariable(name: "row_width", scope: !2, file: !3, line: 2789, type: !85)
!5277 = !DILocation(line: 2789, column: 16, scope: !2)
!5278 = !DILocation(line: 2789, column: 28, scope: !2)
!5279 = !DILocation(line: 2789, column: 37, scope: !2)
!5280 = !DILocalVariable(name: "pass", scope: !2, file: !3, line: 2790, type: !86)
!5281 = !DILocation(line: 2790, column: 17, scope: !2)
!5282 = !DILocation(line: 2790, column: 24, scope: !2)
!5283 = !DILocation(line: 2790, column: 33, scope: !2)
!5284 = !DILocalVariable(name: "end_ptr", scope: !2, file: !3, line: 2791, type: !65)
!5285 = !DILocation(line: 2791, column: 14, scope: !2)
!5286 = !DILocalVariable(name: "end_byte", scope: !2, file: !3, line: 2792, type: !67)
!5287 = !DILocation(line: 2792, column: 13, scope: !2)
!5288 = !DILocalVariable(name: "end_mask", scope: !2, file: !3, line: 2793, type: !86)
!5289 = !DILocation(line: 2793, column: 17, scope: !2)
!5290 = !DILocation(line: 2800, column: 8, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2800, column: 8)
!5292 = !DILocation(line: 2800, column: 20, scope: !5291)
!5293 = !DILocation(line: 2800, column: 8, scope: !2)
!5294 = !DILocation(line: 2801, column: 17, scope: !5291)
!5295 = !DILocation(line: 2801, column: 7, scope: !5291)
!5296 = !DILocation(line: 2807, column: 8, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2807, column: 8)
!5298 = !DILocation(line: 2807, column: 17, scope: !5297)
!5299 = !DILocation(line: 2807, column: 31, scope: !5297)
!5300 = !DILocation(line: 2807, column: 36, scope: !5297)
!5301 = !DILocation(line: 2807, column: 39, scope: !5297)
!5302 = !DILocation(line: 2807, column: 48, scope: !5297)
!5303 = !DILocation(line: 2808, column: 11, scope: !5297)
!5304 = !DILocation(line: 2807, column: 62, scope: !5297)
!5305 = !DILocation(line: 2807, column: 8, scope: !2)
!5306 = !DILocation(line: 2809, column: 17, scope: !5297)
!5307 = !DILocation(line: 2809, column: 7, scope: !5297)
!5308 = !DILocation(line: 2812, column: 8, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2812, column: 8)
!5310 = !DILocation(line: 2812, column: 18, scope: !5309)
!5311 = !DILocation(line: 2812, column: 8, scope: !2)
!5312 = !DILocation(line: 2813, column: 17, scope: !5309)
!5313 = !DILocation(line: 2813, column: 7, scope: !5309)
!5314 = !DILocation(line: 2819, column: 16, scope: !2)
!5315 = !DILocation(line: 2819, column: 30, scope: !2)
!5316 = !DILocation(line: 2819, column: 28, scope: !2)
!5317 = !DILocation(line: 2819, column: 41, scope: !2)
!5318 = !DILocation(line: 2819, column: 13, scope: !2)
!5319 = !DILocation(line: 2820, column: 8, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2820, column: 8)
!5321 = !DILocation(line: 2820, column: 17, scope: !5320)
!5322 = !DILocation(line: 2820, column: 8, scope: !2)
!5323 = !DILocation(line: 2823, column: 17, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 2821, column: 4)
!5325 = !DILocation(line: 2823, column: 22, scope: !5324)
!5326 = !DILocation(line: 2823, column: 20, scope: !5324)
!5327 = !DILocation(line: 2823, column: 59, scope: !5324)
!5328 = !DILocation(line: 2823, column: 15, scope: !5324)
!5329 = !DILocation(line: 2824, column: 19, scope: !5324)
!5330 = !DILocation(line: 2824, column: 18, scope: !5324)
!5331 = !DILocation(line: 2824, column: 16, scope: !5324)
!5332 = !DILocation(line: 2826, column: 14, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 2826, column: 14)
!5334 = !DILocation(line: 2826, column: 23, scope: !5333)
!5335 = !DILocation(line: 2826, column: 39, scope: !5333)
!5336 = !DILocation(line: 2826, column: 14, scope: !5324)
!5337 = !DILocation(line: 2827, column: 32, scope: !5333)
!5338 = !DILocation(line: 2827, column: 29, scope: !5333)
!5339 = !DILocation(line: 2827, column: 22, scope: !5333)
!5340 = !DILocation(line: 2827, column: 13, scope: !5333)
!5341 = !DILocation(line: 2831, column: 29, scope: !5333)
!5342 = !DILocation(line: 2831, column: 26, scope: !5333)
!5343 = !DILocation(line: 2831, column: 19, scope: !5333)
!5344 = !DILocation(line: 2833, column: 4, scope: !5324)
!5345 = !DILocation(line: 2842, column: 8, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2842, column: 8)
!5347 = !DILocation(line: 2842, column: 17, scope: !5346)
!5348 = !DILocation(line: 2842, column: 28, scope: !5346)
!5349 = !DILocation(line: 2842, column: 32, scope: !5346)
!5350 = !DILocation(line: 2842, column: 41, scope: !5346)
!5351 = !DILocation(line: 2842, column: 57, scope: !5346)
!5352 = !DILocation(line: 2842, column: 74, scope: !5346)
!5353 = !DILocation(line: 2843, column: 7, scope: !5346)
!5354 = !DILocation(line: 2843, column: 12, scope: !5346)
!5355 = !DILocation(line: 2843, column: 16, scope: !5346)
!5356 = !DILocation(line: 2843, column: 20, scope: !5346)
!5357 = !DILocation(line: 2843, column: 28, scope: !5346)
!5358 = !DILocation(line: 2843, column: 33, scope: !5346)
!5359 = !DILocation(line: 2845, column: 8, scope: !5346)
!5360 = !DILocation(line: 2845, column: 16, scope: !5346)
!5361 = !DILocation(line: 2845, column: 21, scope: !5346)
!5362 = !DILocation(line: 2845, column: 25, scope: !5346)
!5363 = !DILocation(line: 2845, column: 30, scope: !5346)
!5364 = !DILocation(line: 2845, column: 35, scope: !5346)
!5365 = !DILocation(line: 2842, column: 8, scope: !2)
!5366 = !DILocation(line: 2850, column: 11, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 2850, column: 11)
!5368 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 2846, column: 4)
!5369 = !DILocation(line: 2850, column: 24, scope: !5367)
!5370 = !DILocation(line: 2850, column: 21, scope: !5367)
!5371 = !DILocation(line: 2850, column: 11, scope: !5368)
!5372 = !DILocation(line: 2851, column: 10, scope: !5367)
!5373 = !DILocation(line: 2853, column: 11, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 2853, column: 11)
!5375 = !DILocation(line: 2853, column: 23, scope: !5374)
!5376 = !DILocation(line: 2853, column: 11, scope: !5368)
!5377 = !DILocalVariable(name: "pixels_per_byte", scope: !5378, file: !3, line: 2984, type: !85)
!5378 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 2854, column: 7)
!5379 = !DILocation(line: 2984, column: 22, scope: !5378)
!5380 = !DILocation(line: 2984, column: 44, scope: !5378)
!5381 = !DILocation(line: 2984, column: 42, scope: !5378)
!5382 = !DILocalVariable(name: "mask", scope: !5378, file: !3, line: 2985, type: !85)
!5383 = !DILocation(line: 2985, column: 22, scope: !5378)
!5384 = !DILocation(line: 2988, column: 17, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 2988, column: 17)
!5386 = !DILocation(line: 2988, column: 26, scope: !5385)
!5387 = !DILocation(line: 2988, column: 42, scope: !5385)
!5388 = !DILocation(line: 2988, column: 17, scope: !5378)
!5389 = !DILocation(line: 2989, column: 23, scope: !5385)
!5390 = !DILocation(line: 2989, column: 21, scope: !5385)
!5391 = !DILocation(line: 2989, column: 16, scope: !5385)
!5392 = !DILocation(line: 2993, column: 20, scope: !5385)
!5393 = !DILocation(line: 2993, column: 18, scope: !5385)
!5394 = !DILocation(line: 2995, column: 10, scope: !5378)
!5395 = !DILocalVariable(name: "m", scope: !5396, file: !3, line: 2997, type: !85)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 2996, column: 10)
!5397 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 2995, column: 10)
!5398 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 2995, column: 10)
!5399 = !DILocation(line: 2997, column: 25, scope: !5396)
!5400 = !DILocation(line: 3003, column: 17, scope: !5396)
!5401 = !DILocation(line: 3003, column: 15, scope: !5396)
!5402 = !DILocation(line: 3004, column: 21, scope: !5396)
!5403 = !DILocation(line: 3004, column: 23, scope: !5396)
!5404 = !DILocation(line: 3004, column: 32, scope: !5396)
!5405 = !DILocation(line: 3004, column: 34, scope: !5396)
!5406 = !DILocation(line: 3004, column: 29, scope: !5396)
!5407 = !DILocation(line: 3004, column: 18, scope: !5396)
!5408 = !DILocation(line: 3005, column: 15, scope: !5396)
!5409 = !DILocation(line: 3007, column: 17, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 3007, column: 17)
!5411 = !DILocation(line: 3007, column: 19, scope: !5410)
!5412 = !DILocation(line: 3007, column: 17, scope: !5396)
!5413 = !DILocation(line: 3009, column: 20, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5415, file: !3, line: 3009, column: 20)
!5415 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 3008, column: 13)
!5416 = !DILocation(line: 3009, column: 22, scope: !5414)
!5417 = !DILocation(line: 3009, column: 20, scope: !5415)
!5418 = !DILocation(line: 3010, column: 38, scope: !5414)
!5419 = !DILocation(line: 3010, column: 37, scope: !5414)
!5420 = !DILocation(line: 3010, column: 44, scope: !5414)
!5421 = !DILocation(line: 3010, column: 43, scope: !5414)
!5422 = !DILocation(line: 3010, column: 41, scope: !5414)
!5423 = !DILocation(line: 3010, column: 51, scope: !5414)
!5424 = !DILocation(line: 3010, column: 50, scope: !5414)
!5425 = !DILocation(line: 3010, column: 56, scope: !5414)
!5426 = !DILocation(line: 3010, column: 54, scope: !5414)
!5427 = !DILocation(line: 3010, column: 47, scope: !5414)
!5428 = !DILocation(line: 3010, column: 25, scope: !5414)
!5429 = !DILocation(line: 3010, column: 20, scope: !5414)
!5430 = !DILocation(line: 3010, column: 23, scope: !5414)
!5431 = !DILocation(line: 3010, column: 19, scope: !5414)
!5432 = !DILocation(line: 3012, column: 26, scope: !5414)
!5433 = !DILocation(line: 3012, column: 25, scope: !5414)
!5434 = !DILocation(line: 3012, column: 20, scope: !5414)
!5435 = !DILocation(line: 3012, column: 23, scope: !5414)
!5436 = !DILocation(line: 3013, column: 13, scope: !5415)
!5437 = !DILocation(line: 3019, column: 17, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 3019, column: 17)
!5439 = !DILocation(line: 3019, column: 30, scope: !5438)
!5440 = !DILocation(line: 3019, column: 27, scope: !5438)
!5441 = !DILocation(line: 3019, column: 17, scope: !5396)
!5442 = !DILocation(line: 3020, column: 16, scope: !5438)
!5443 = !DILocation(line: 3022, column: 26, scope: !5396)
!5444 = !DILocation(line: 3022, column: 23, scope: !5396)
!5445 = !DILocation(line: 3023, column: 13, scope: !5396)
!5446 = !DILocation(line: 3024, column: 13, scope: !5396)
!5447 = !DILocation(line: 2995, column: 10, scope: !5397)
!5448 = distinct !{!5448, !5449, !5450}
!5449 = !DILocation(line: 2995, column: 10, scope: !5398)
!5450 = !DILocation(line: 3025, column: 10, scope: !5398)
!5451 = !DILocation(line: 3026, column: 7, scope: !5378)
!5452 = !DILocalVariable(name: "bytes_to_copy", scope: !5453, file: !3, line: 3030, type: !86)
!5453 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 3029, column: 7)
!5454 = !DILocation(line: 3030, column: 23, scope: !5453)
!5455 = !DILocalVariable(name: "bytes_to_jump", scope: !5453, file: !3, line: 3030, type: !86)
!5456 = !DILocation(line: 3030, column: 38, scope: !5453)
!5457 = !DILocation(line: 3033, column: 14, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 3033, column: 14)
!5459 = !DILocation(line: 3033, column: 26, scope: !5458)
!5460 = !DILocation(line: 3033, column: 14, scope: !5453)
!5461 = !DILocation(line: 3034, column: 23, scope: !5458)
!5462 = !DILocation(line: 3034, column: 13, scope: !5458)
!5463 = !DILocation(line: 3036, column: 22, scope: !5453)
!5464 = !DILocation(line: 3037, column: 23, scope: !5453)
!5465 = !DILocation(line: 3037, column: 20, scope: !5453)
!5466 = !DILocalVariable(name: "offset", scope: !5467, file: !3, line: 3044, type: !86)
!5467 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 3043, column: 10)
!5468 = !DILocation(line: 3044, column: 26, scope: !5467)
!5469 = !DILocation(line: 3044, column: 35, scope: !5467)
!5470 = !DILocation(line: 3044, column: 62, scope: !5467)
!5471 = !DILocation(line: 3044, column: 60, scope: !5467)
!5472 = !DILocation(line: 3046, column: 26, scope: !5467)
!5473 = !DILocation(line: 3046, column: 23, scope: !5467)
!5474 = !DILocation(line: 3047, column: 19, scope: !5467)
!5475 = !DILocation(line: 3047, column: 16, scope: !5467)
!5476 = !DILocation(line: 3048, column: 19, scope: !5467)
!5477 = !DILocation(line: 3048, column: 16, scope: !5467)
!5478 = !DILocation(line: 3052, column: 14, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 3052, column: 14)
!5480 = !DILocation(line: 3052, column: 14, scope: !5453)
!5481 = !DILocation(line: 3058, column: 37, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 3053, column: 10)
!5483 = !DILocation(line: 3058, column: 36, scope: !5482)
!5484 = !DILocation(line: 3058, column: 42, scope: !5482)
!5485 = !DILocation(line: 3058, column: 31, scope: !5482)
!5486 = !DILocation(line: 3058, column: 50, scope: !5482)
!5487 = !DILocation(line: 3058, column: 48, scope: !5482)
!5488 = !DILocation(line: 3058, column: 27, scope: !5482)
!5489 = !DILocation(line: 3061, column: 17, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 3061, column: 17)
!5491 = !DILocation(line: 3061, column: 33, scope: !5490)
!5492 = !DILocation(line: 3061, column: 31, scope: !5490)
!5493 = !DILocation(line: 3061, column: 17, scope: !5482)
!5494 = !DILocation(line: 3062, column: 32, scope: !5490)
!5495 = !DILocation(line: 3062, column: 30, scope: !5490)
!5496 = !DILocation(line: 3062, column: 16, scope: !5490)
!5497 = !DILocation(line: 3063, column: 10, scope: !5482)
!5498 = !DILocation(line: 3066, column: 29, scope: !5479)
!5499 = !DILocation(line: 3066, column: 27, scope: !5479)
!5500 = !DILocation(line: 3069, column: 26, scope: !5453)
!5501 = !DILocation(line: 3069, column: 54, scope: !5453)
!5502 = !DILocation(line: 3069, column: 52, scope: !5453)
!5503 = !DILocation(line: 3069, column: 24, scope: !5453)
!5504 = !DILocation(line: 3079, column: 18, scope: !5453)
!5505 = !DILocation(line: 3079, column: 10, scope: !5453)
!5506 = !DILocation(line: 3082, column: 16, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 3080, column: 10)
!5508 = !DILocation(line: 3084, column: 26, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 3083, column: 16)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 3082, column: 16)
!5511 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 3082, column: 16)
!5512 = !DILocation(line: 3084, column: 25, scope: !5509)
!5513 = !DILocation(line: 3084, column: 20, scope: !5509)
!5514 = !DILocation(line: 3084, column: 23, scope: !5509)
!5515 = !DILocation(line: 3086, column: 23, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 3086, column: 23)
!5517 = !DILocation(line: 3086, column: 36, scope: !5516)
!5518 = !DILocation(line: 3086, column: 33, scope: !5516)
!5519 = !DILocation(line: 3086, column: 23, scope: !5509)
!5520 = !DILocation(line: 3087, column: 22, scope: !5516)
!5521 = !DILocation(line: 3089, column: 25, scope: !5509)
!5522 = !DILocation(line: 3089, column: 22, scope: !5509)
!5523 = !DILocation(line: 3090, column: 25, scope: !5509)
!5524 = !DILocation(line: 3090, column: 22, scope: !5509)
!5525 = !DILocation(line: 3091, column: 32, scope: !5509)
!5526 = !DILocation(line: 3091, column: 29, scope: !5509)
!5527 = !DILocation(line: 3082, column: 16, scope: !5510)
!5528 = distinct !{!5528, !5529, !5530}
!5529 = !DILocation(line: 3082, column: 16, scope: !5511)
!5530 = !DILocation(line: 3092, column: 16, scope: !5511)
!5531 = !DILocation(line: 3098, column: 16, scope: !5507)
!5532 = !DILocation(line: 3100, column: 27, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 3099, column: 16)
!5534 = !DILocation(line: 3100, column: 19, scope: !5533)
!5535 = !DILocation(line: 3100, column: 25, scope: !5533)
!5536 = !DILocation(line: 3100, column: 42, scope: !5533)
!5537 = !DILocation(line: 3100, column: 34, scope: !5533)
!5538 = !DILocation(line: 3100, column: 40, scope: !5533)
!5539 = !DILocation(line: 3102, column: 23, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 3102, column: 23)
!5541 = !DILocation(line: 3102, column: 36, scope: !5540)
!5542 = !DILocation(line: 3102, column: 33, scope: !5540)
!5543 = !DILocation(line: 3102, column: 23, scope: !5533)
!5544 = !DILocation(line: 3103, column: 22, scope: !5540)
!5545 = !DILocation(line: 3105, column: 25, scope: !5533)
!5546 = !DILocation(line: 3105, column: 22, scope: !5533)
!5547 = !DILocation(line: 3106, column: 25, scope: !5533)
!5548 = !DILocation(line: 3106, column: 22, scope: !5533)
!5549 = !DILocation(line: 3107, column: 32, scope: !5533)
!5550 = !DILocation(line: 3107, column: 29, scope: !5533)
!5551 = !DILocation(line: 3108, column: 16, scope: !5533)
!5552 = !DILocation(line: 3109, column: 23, scope: !5507)
!5553 = !DILocation(line: 3109, column: 33, scope: !5507)
!5554 = distinct !{!5554, !5531, !5555}
!5555 = !DILocation(line: 3109, column: 36, scope: !5507)
!5556 = !DILocation(line: 3112, column: 23, scope: !5507)
!5557 = !DILocation(line: 3112, column: 22, scope: !5507)
!5558 = !DILocation(line: 3112, column: 17, scope: !5507)
!5559 = !DILocation(line: 3112, column: 20, scope: !5507)
!5560 = !DILocation(line: 3113, column: 16, scope: !5507)
!5561 = !DILocation(line: 3119, column: 16, scope: !5507)
!5562 = !DILocation(line: 3121, column: 27, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 3120, column: 16)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 3119, column: 16)
!5565 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 3119, column: 16)
!5566 = !DILocation(line: 3121, column: 19, scope: !5563)
!5567 = !DILocation(line: 3121, column: 25, scope: !5563)
!5568 = !DILocation(line: 3121, column: 42, scope: !5563)
!5569 = !DILocation(line: 3121, column: 34, scope: !5563)
!5570 = !DILocation(line: 3121, column: 40, scope: !5563)
!5571 = !DILocation(line: 3121, column: 57, scope: !5563)
!5572 = !DILocation(line: 3121, column: 49, scope: !5563)
!5573 = !DILocation(line: 3121, column: 55, scope: !5563)
!5574 = !DILocation(line: 3123, column: 23, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 3123, column: 23)
!5576 = !DILocation(line: 3123, column: 36, scope: !5575)
!5577 = !DILocation(line: 3123, column: 33, scope: !5575)
!5578 = !DILocation(line: 3123, column: 23, scope: !5563)
!5579 = !DILocation(line: 3124, column: 22, scope: !5575)
!5580 = !DILocation(line: 3126, column: 25, scope: !5563)
!5581 = !DILocation(line: 3126, column: 22, scope: !5563)
!5582 = !DILocation(line: 3127, column: 25, scope: !5563)
!5583 = !DILocation(line: 3127, column: 22, scope: !5563)
!5584 = !DILocation(line: 3128, column: 32, scope: !5563)
!5585 = !DILocation(line: 3128, column: 29, scope: !5563)
!5586 = !DILocation(line: 3119, column: 16, scope: !5564)
!5587 = distinct !{!5587, !5588, !5589}
!5588 = !DILocation(line: 3119, column: 16, scope: !5565)
!5589 = !DILocation(line: 3129, column: 16, scope: !5565)
!5590 = !DILocation(line: 3138, column: 20, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 3138, column: 20)
!5592 = !DILocation(line: 3138, column: 34, scope: !5591)
!5593 = !DILocation(line: 3138, column: 63, scope: !5591)
!5594 = !DILocation(line: 3139, column: 19, scope: !5591)
!5595 = !DILocation(line: 3139, column: 50, scope: !5591)
!5596 = !DILocation(line: 3140, column: 19, scope: !5591)
!5597 = !DILocation(line: 3140, column: 50, scope: !5591)
!5598 = !DILocation(line: 3141, column: 19, scope: !5591)
!5599 = !DILocation(line: 3141, column: 33, scope: !5591)
!5600 = !DILocation(line: 3141, column: 56, scope: !5591)
!5601 = !DILocation(line: 3141, column: 61, scope: !5591)
!5602 = !DILocation(line: 3142, column: 19, scope: !5591)
!5603 = !DILocation(line: 3142, column: 33, scope: !5591)
!5604 = !DILocation(line: 3142, column: 56, scope: !5591)
!5605 = !DILocation(line: 3138, column: 20, scope: !5507)
!5606 = !DILocation(line: 3147, column: 23, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 3147, column: 23)
!5608 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 3143, column: 16)
!5609 = !DILocation(line: 3147, column: 54, scope: !5607)
!5610 = !DILocation(line: 3148, column: 22, scope: !5607)
!5611 = !DILocation(line: 3148, column: 53, scope: !5607)
!5612 = !DILocation(line: 3149, column: 22, scope: !5607)
!5613 = !DILocation(line: 3149, column: 36, scope: !5607)
!5614 = !DILocation(line: 3149, column: 59, scope: !5607)
!5615 = !DILocation(line: 3149, column: 64, scope: !5607)
!5616 = !DILocation(line: 3150, column: 22, scope: !5607)
!5617 = !DILocation(line: 3150, column: 36, scope: !5607)
!5618 = !DILocation(line: 3150, column: 59, scope: !5607)
!5619 = !DILocation(line: 3147, column: 23, scope: !5608)
!5620 = !DILocalVariable(name: "dp32", scope: !5621, file: !3, line: 3152, type: !469)
!5621 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 3151, column: 19)
!5622 = !DILocation(line: 3152, column: 35, scope: !5621)
!5623 = !DILocation(line: 3152, column: 56, scope: !5621)
!5624 = !DILocation(line: 3152, column: 42, scope: !5621)
!5625 = !DILocalVariable(name: "sp32", scope: !5621, file: !3, line: 3153, type: !471)
!5626 = !DILocation(line: 3153, column: 41, scope: !5621)
!5627 = !DILocation(line: 3153, column: 68, scope: !5621)
!5628 = !DILocation(line: 3153, column: 48, scope: !5621)
!5629 = !DILocalVariable(name: "skip", scope: !5621, file: !3, line: 3154, type: !86)
!5630 = !DILocation(line: 3154, column: 35, scope: !5621)
!5631 = !DILocation(line: 3154, column: 43, scope: !5621)
!5632 = !DILocation(line: 3154, column: 57, scope: !5621)
!5633 = !DILocation(line: 3154, column: 56, scope: !5621)
!5634 = !DILocation(line: 3154, column: 42, scope: !5621)
!5635 = !DILocation(line: 3154, column: 72, scope: !5621)
!5636 = !DILocation(line: 3157, column: 22, scope: !5621)
!5637 = !DILocalVariable(name: "c", scope: !5638, file: !3, line: 3159, type: !70)
!5638 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 3158, column: 22)
!5639 = !DILocation(line: 3159, column: 32, scope: !5638)
!5640 = !DILocation(line: 3159, column: 36, scope: !5638)
!5641 = !DILocation(line: 3160, column: 25, scope: !5638)
!5642 = !DILocation(line: 3162, column: 43, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 3161, column: 25)
!5644 = !DILocation(line: 3162, column: 38, scope: !5643)
!5645 = !DILocation(line: 3162, column: 33, scope: !5643)
!5646 = !DILocation(line: 3162, column: 36, scope: !5643)
!5647 = !DILocation(line: 3163, column: 30, scope: !5643)
!5648 = !DILocation(line: 3164, column: 25, scope: !5643)
!5649 = !DILocation(line: 3165, column: 32, scope: !5638)
!5650 = !DILocation(line: 3165, column: 34, scope: !5638)
!5651 = distinct !{!5651, !5641, !5652}
!5652 = !DILocation(line: 3165, column: 37, scope: !5638)
!5653 = !DILocation(line: 3167, column: 29, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 3167, column: 29)
!5655 = !DILocation(line: 3167, column: 42, scope: !5654)
!5656 = !DILocation(line: 3167, column: 39, scope: !5654)
!5657 = !DILocation(line: 3167, column: 29, scope: !5638)
!5658 = !DILocation(line: 3168, column: 28, scope: !5654)
!5659 = !DILocation(line: 3170, column: 33, scope: !5638)
!5660 = !DILocation(line: 3170, column: 30, scope: !5638)
!5661 = !DILocation(line: 3171, column: 33, scope: !5638)
!5662 = !DILocation(line: 3171, column: 30, scope: !5638)
!5663 = !DILocation(line: 3172, column: 38, scope: !5638)
!5664 = !DILocation(line: 3172, column: 35, scope: !5638)
!5665 = !DILocation(line: 3173, column: 22, scope: !5638)
!5666 = !DILocation(line: 3174, column: 29, scope: !5621)
!5667 = !DILocation(line: 3174, column: 46, scope: !5621)
!5668 = !DILocation(line: 3174, column: 43, scope: !5621)
!5669 = distinct !{!5669, !5636, !5670}
!5670 = !DILocation(line: 3174, column: 55, scope: !5621)
!5671 = !DILocation(line: 3180, column: 38, scope: !5621)
!5672 = !DILocation(line: 3180, column: 27, scope: !5621)
!5673 = !DILocation(line: 3180, column: 25, scope: !5621)
!5674 = !DILocation(line: 3181, column: 44, scope: !5621)
!5675 = !DILocation(line: 3181, column: 27, scope: !5621)
!5676 = !DILocation(line: 3181, column: 25, scope: !5621)
!5677 = !DILocation(line: 3182, column: 22, scope: !5621)
!5678 = !DILocation(line: 3183, column: 36, scope: !5621)
!5679 = !DILocation(line: 3183, column: 33, scope: !5621)
!5680 = !DILocation(line: 3183, column: 28, scope: !5621)
!5681 = !DILocation(line: 3183, column: 31, scope: !5621)
!5682 = !DILocation(line: 3183, column: 25, scope: !5621)
!5683 = !DILocation(line: 3184, column: 29, scope: !5621)
!5684 = !DILocation(line: 3184, column: 41, scope: !5621)
!5685 = distinct !{!5685, !5677, !5686}
!5686 = !DILocation(line: 3184, column: 44, scope: !5621)
!5687 = !DILocation(line: 3185, column: 22, scope: !5621)
!5688 = !DILocalVariable(name: "dp16", scope: !5689, file: !3, line: 3193, type: !320)
!5689 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 3192, column: 19)
!5690 = !DILocation(line: 3193, column: 35, scope: !5689)
!5691 = !DILocation(line: 3193, column: 56, scope: !5689)
!5692 = !DILocation(line: 3193, column: 42, scope: !5689)
!5693 = !DILocalVariable(name: "sp16", scope: !5689, file: !3, line: 3194, type: !474)
!5694 = !DILocation(line: 3194, column: 41, scope: !5689)
!5695 = !DILocation(line: 3194, column: 68, scope: !5689)
!5696 = !DILocation(line: 3194, column: 48, scope: !5689)
!5697 = !DILocalVariable(name: "skip", scope: !5689, file: !3, line: 3195, type: !86)
!5698 = !DILocation(line: 3195, column: 35, scope: !5689)
!5699 = !DILocation(line: 3195, column: 43, scope: !5689)
!5700 = !DILocation(line: 3195, column: 57, scope: !5689)
!5701 = !DILocation(line: 3195, column: 56, scope: !5689)
!5702 = !DILocation(line: 3195, column: 42, scope: !5689)
!5703 = !DILocation(line: 3195, column: 72, scope: !5689)
!5704 = !DILocation(line: 3198, column: 22, scope: !5689)
!5705 = !DILocalVariable(name: "c", scope: !5706, file: !3, line: 3200, type: !70)
!5706 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 3199, column: 22)
!5707 = !DILocation(line: 3200, column: 32, scope: !5706)
!5708 = !DILocation(line: 3200, column: 36, scope: !5706)
!5709 = !DILocation(line: 3201, column: 25, scope: !5706)
!5710 = !DILocation(line: 3203, column: 43, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 3202, column: 25)
!5712 = !DILocation(line: 3203, column: 38, scope: !5711)
!5713 = !DILocation(line: 3203, column: 33, scope: !5711)
!5714 = !DILocation(line: 3203, column: 36, scope: !5711)
!5715 = !DILocation(line: 3204, column: 30, scope: !5711)
!5716 = !DILocation(line: 3205, column: 25, scope: !5711)
!5717 = !DILocation(line: 3206, column: 32, scope: !5706)
!5718 = !DILocation(line: 3206, column: 34, scope: !5706)
!5719 = distinct !{!5719, !5709, !5720}
!5720 = !DILocation(line: 3206, column: 37, scope: !5706)
!5721 = !DILocation(line: 3208, column: 29, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 3208, column: 29)
!5723 = !DILocation(line: 3208, column: 42, scope: !5722)
!5724 = !DILocation(line: 3208, column: 39, scope: !5722)
!5725 = !DILocation(line: 3208, column: 29, scope: !5706)
!5726 = !DILocation(line: 3209, column: 28, scope: !5722)
!5727 = !DILocation(line: 3211, column: 33, scope: !5706)
!5728 = !DILocation(line: 3211, column: 30, scope: !5706)
!5729 = !DILocation(line: 3212, column: 33, scope: !5706)
!5730 = !DILocation(line: 3212, column: 30, scope: !5706)
!5731 = !DILocation(line: 3213, column: 38, scope: !5706)
!5732 = !DILocation(line: 3213, column: 35, scope: !5706)
!5733 = !DILocation(line: 3214, column: 22, scope: !5706)
!5734 = !DILocation(line: 3215, column: 29, scope: !5689)
!5735 = !DILocation(line: 3215, column: 46, scope: !5689)
!5736 = !DILocation(line: 3215, column: 43, scope: !5689)
!5737 = distinct !{!5737, !5704, !5738}
!5738 = !DILocation(line: 3215, column: 55, scope: !5689)
!5739 = !DILocation(line: 3218, column: 38, scope: !5689)
!5740 = !DILocation(line: 3218, column: 27, scope: !5689)
!5741 = !DILocation(line: 3218, column: 25, scope: !5689)
!5742 = !DILocation(line: 3219, column: 44, scope: !5689)
!5743 = !DILocation(line: 3219, column: 27, scope: !5689)
!5744 = !DILocation(line: 3219, column: 25, scope: !5689)
!5745 = !DILocation(line: 3220, column: 22, scope: !5689)
!5746 = !DILocation(line: 3221, column: 36, scope: !5689)
!5747 = !DILocation(line: 3221, column: 33, scope: !5689)
!5748 = !DILocation(line: 3221, column: 28, scope: !5689)
!5749 = !DILocation(line: 3221, column: 31, scope: !5689)
!5750 = !DILocation(line: 3221, column: 25, scope: !5689)
!5751 = !DILocation(line: 3222, column: 29, scope: !5689)
!5752 = !DILocation(line: 3222, column: 41, scope: !5689)
!5753 = distinct !{!5753, !5745, !5754}
!5754 = !DILocation(line: 3222, column: 44, scope: !5689)
!5755 = !DILocation(line: 3223, column: 22, scope: !5689)
!5756 = !DILocation(line: 3229, column: 16, scope: !5507)
!5757 = !DILocation(line: 3231, column: 30, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 3230, column: 16)
!5759 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 3229, column: 16)
!5760 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 3229, column: 16)
!5761 = !DILocation(line: 3231, column: 34, scope: !5758)
!5762 = !DILocation(line: 3231, column: 38, scope: !5758)
!5763 = !DILocation(line: 3231, column: 19, scope: !5758)
!5764 = !DILocation(line: 3233, column: 23, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 3233, column: 23)
!5766 = !DILocation(line: 3233, column: 36, scope: !5765)
!5767 = !DILocation(line: 3233, column: 33, scope: !5765)
!5768 = !DILocation(line: 3233, column: 23, scope: !5758)
!5769 = !DILocation(line: 3234, column: 22, scope: !5765)
!5770 = !DILocation(line: 3236, column: 25, scope: !5758)
!5771 = !DILocation(line: 3236, column: 22, scope: !5758)
!5772 = !DILocation(line: 3237, column: 25, scope: !5758)
!5773 = !DILocation(line: 3237, column: 22, scope: !5758)
!5774 = !DILocation(line: 3238, column: 32, scope: !5758)
!5775 = !DILocation(line: 3238, column: 29, scope: !5758)
!5776 = !DILocation(line: 3239, column: 23, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 3239, column: 23)
!5778 = !DILocation(line: 3239, column: 39, scope: !5777)
!5779 = !DILocation(line: 3239, column: 37, scope: !5777)
!5780 = !DILocation(line: 3239, column: 23, scope: !5758)
!5781 = !DILocation(line: 3240, column: 38, scope: !5777)
!5782 = !DILocation(line: 3240, column: 36, scope: !5777)
!5783 = !DILocation(line: 3240, column: 22, scope: !5777)
!5784 = !DILocation(line: 3229, column: 16, scope: !5759)
!5785 = distinct !{!5785, !5786, !5787}
!5786 = !DILocation(line: 3229, column: 16, scope: !5760)
!5787 = !DILocation(line: 3241, column: 16, scope: !5760)
!5788 = !DILocation(line: 3248, column: 4, scope: !5368)
!5789 = !DILocation(line: 3256, column: 15, scope: !5346)
!5790 = !DILocation(line: 3256, column: 19, scope: !5346)
!5791 = !DILocation(line: 3256, column: 23, scope: !5346)
!5792 = !DILocation(line: 3256, column: 4, scope: !5346)
!5793 = !DILocation(line: 3259, column: 8, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !2, file: !3, line: 3259, column: 8)
!5795 = !DILocation(line: 3259, column: 16, scope: !5794)
!5796 = !DILocation(line: 3259, column: 8, scope: !2)
!5797 = !DILocation(line: 3260, column: 30, scope: !5794)
!5798 = !DILocation(line: 3260, column: 41, scope: !5794)
!5799 = !DILocation(line: 3260, column: 39, scope: !5794)
!5800 = !DILocation(line: 3260, column: 55, scope: !5794)
!5801 = !DILocation(line: 3260, column: 54, scope: !5794)
!5802 = !DILocation(line: 3260, column: 66, scope: !5794)
!5803 = !DILocation(line: 3260, column: 65, scope: !5794)
!5804 = !DILocation(line: 3260, column: 63, scope: !5794)
!5805 = !DILocation(line: 3260, column: 51, scope: !5794)
!5806 = !DILocation(line: 3260, column: 18, scope: !5794)
!5807 = !DILocation(line: 3260, column: 8, scope: !5794)
!5808 = !DILocation(line: 3260, column: 16, scope: !5794)
!5809 = !DILocation(line: 3260, column: 7, scope: !5794)
!5810 = !DILocation(line: 3261, column: 1, scope: !2)
!5811 = !DILocalVariable(name: "row_info", arg: 1, scope: !487, file: !3, line: 3265, type: !79)
!5812 = !DILocation(line: 3265, column: 37, scope: !487)
!5813 = !DILocalVariable(name: "row", arg: 2, scope: !487, file: !3, line: 3265, type: !65)
!5814 = !DILocation(line: 3265, column: 57, scope: !487)
!5815 = !DILocalVariable(name: "pass", arg: 3, scope: !487, file: !3, line: 3265, type: !27)
!5816 = !DILocation(line: 3265, column: 66, scope: !487)
!5817 = !DILocalVariable(name: "transformations", arg: 4, scope: !487, file: !3, line: 3266, type: !85)
!5818 = !DILocation(line: 3266, column: 16, scope: !487)
!5819 = !DILocation(line: 3273, column: 8, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !487, file: !3, line: 3273, column: 8)
!5821 = !DILocation(line: 3273, column: 12, scope: !5820)
!5822 = !DILocation(line: 3273, column: 20, scope: !5820)
!5823 = !DILocation(line: 3273, column: 23, scope: !5820)
!5824 = !DILocation(line: 3273, column: 32, scope: !5820)
!5825 = !DILocation(line: 3273, column: 8, scope: !487)
!5826 = !DILocalVariable(name: "final_width", scope: !5827, file: !3, line: 3275, type: !85)
!5827 = distinct !DILexicalBlock(scope: !5820, file: !3, line: 3274, column: 4)
!5828 = !DILocation(line: 3275, column: 19, scope: !5827)
!5829 = !DILocation(line: 3277, column: 21, scope: !5827)
!5830 = !DILocation(line: 3277, column: 31, scope: !5827)
!5831 = !DILocation(line: 3277, column: 52, scope: !5827)
!5832 = !DILocation(line: 3277, column: 39, scope: !5827)
!5833 = !DILocation(line: 3277, column: 37, scope: !5827)
!5834 = !DILocation(line: 3277, column: 19, scope: !5827)
!5835 = !DILocation(line: 3279, column: 15, scope: !5827)
!5836 = !DILocation(line: 3279, column: 25, scope: !5827)
!5837 = !DILocation(line: 3279, column: 7, scope: !5827)
!5838 = !DILocalVariable(name: "sp", scope: !5839, file: !3, line: 3283, type: !65)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 3282, column: 10)
!5840 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 3280, column: 7)
!5841 = !DILocation(line: 3283, column: 23, scope: !5839)
!5842 = !DILocation(line: 3283, column: 28, scope: !5839)
!5843 = !DILocation(line: 3283, column: 48, scope: !5839)
!5844 = !DILocation(line: 3283, column: 58, scope: !5839)
!5845 = !DILocation(line: 3283, column: 64, scope: !5839)
!5846 = !DILocation(line: 3283, column: 69, scope: !5839)
!5847 = !DILocation(line: 3283, column: 34, scope: !5839)
!5848 = !DILocation(line: 3283, column: 32, scope: !5839)
!5849 = !DILocalVariable(name: "dp", scope: !5839, file: !3, line: 3284, type: !65)
!5850 = !DILocation(line: 3284, column: 23, scope: !5839)
!5851 = !DILocation(line: 3284, column: 28, scope: !5839)
!5852 = !DILocation(line: 3284, column: 48, scope: !5839)
!5853 = !DILocation(line: 3284, column: 60, scope: !5839)
!5854 = !DILocation(line: 3284, column: 65, scope: !5839)
!5855 = !DILocation(line: 3284, column: 34, scope: !5839)
!5856 = !DILocation(line: 3284, column: 32, scope: !5839)
!5857 = !DILocalVariable(name: "sshift", scope: !5839, file: !3, line: 3285, type: !27)
!5858 = !DILocation(line: 3285, column: 17, scope: !5839)
!5859 = !DILocalVariable(name: "dshift", scope: !5839, file: !3, line: 3285, type: !27)
!5860 = !DILocation(line: 3285, column: 25, scope: !5839)
!5861 = !DILocalVariable(name: "s_start", scope: !5839, file: !3, line: 3286, type: !27)
!5862 = !DILocation(line: 3286, column: 17, scope: !5839)
!5863 = !DILocalVariable(name: "s_end", scope: !5839, file: !3, line: 3286, type: !27)
!5864 = !DILocation(line: 3286, column: 26, scope: !5839)
!5865 = !DILocalVariable(name: "s_inc", scope: !5839, file: !3, line: 3286, type: !27)
!5866 = !DILocation(line: 3286, column: 33, scope: !5839)
!5867 = !DILocalVariable(name: "jstop", scope: !5839, file: !3, line: 3287, type: !27)
!5868 = !DILocation(line: 3287, column: 17, scope: !5839)
!5869 = !DILocation(line: 3287, column: 38, scope: !5839)
!5870 = !DILocation(line: 3287, column: 25, scope: !5839)
!5871 = !DILocalVariable(name: "v", scope: !5839, file: !3, line: 3288, type: !67)
!5872 = !DILocation(line: 3288, column: 22, scope: !5839)
!5873 = !DILocalVariable(name: "i", scope: !5839, file: !3, line: 3289, type: !85)
!5874 = !DILocation(line: 3289, column: 25, scope: !5839)
!5875 = !DILocalVariable(name: "j", scope: !5839, file: !3, line: 3290, type: !27)
!5876 = !DILocation(line: 3290, column: 17, scope: !5839)
!5877 = !DILocation(line: 3293, column: 17, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 3293, column: 17)
!5879 = !DILocation(line: 3293, column: 33, scope: !5878)
!5880 = !DILocation(line: 3293, column: 17, scope: !5839)
!5881 = !DILocation(line: 3295, column: 33, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 3294, column: 13)
!5883 = !DILocation(line: 3295, column: 43, scope: !5882)
!5884 = !DILocation(line: 3295, column: 49, scope: !5882)
!5885 = !DILocation(line: 3295, column: 54, scope: !5882)
!5886 = !DILocation(line: 3295, column: 24, scope: !5882)
!5887 = !DILocation(line: 3296, column: 33, scope: !5882)
!5888 = !DILocation(line: 3296, column: 45, scope: !5882)
!5889 = !DILocation(line: 3296, column: 50, scope: !5882)
!5890 = !DILocation(line: 3296, column: 24, scope: !5882)
!5891 = !DILocation(line: 3297, column: 25, scope: !5882)
!5892 = !DILocation(line: 3298, column: 23, scope: !5882)
!5893 = !DILocation(line: 3299, column: 23, scope: !5882)
!5894 = !DILocation(line: 3300, column: 13, scope: !5882)
!5895 = !DILocation(line: 3305, column: 37, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 3304, column: 13)
!5897 = !DILocation(line: 3305, column: 47, scope: !5896)
!5898 = !DILocation(line: 3305, column: 53, scope: !5896)
!5899 = !DILocation(line: 3305, column: 58, scope: !5896)
!5900 = !DILocation(line: 3305, column: 28, scope: !5896)
!5901 = !DILocation(line: 3305, column: 24, scope: !5896)
!5902 = !DILocation(line: 3306, column: 37, scope: !5896)
!5903 = !DILocation(line: 3306, column: 49, scope: !5896)
!5904 = !DILocation(line: 3306, column: 54, scope: !5896)
!5905 = !DILocation(line: 3306, column: 28, scope: !5896)
!5906 = !DILocation(line: 3306, column: 24, scope: !5896)
!5907 = !DILocation(line: 3307, column: 25, scope: !5896)
!5908 = !DILocation(line: 3308, column: 23, scope: !5896)
!5909 = !DILocation(line: 3309, column: 23, scope: !5896)
!5910 = !DILocation(line: 3312, column: 20, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 3312, column: 13)
!5912 = !DILocation(line: 3312, column: 18, scope: !5911)
!5913 = !DILocation(line: 3312, column: 25, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5911, file: !3, line: 3312, column: 13)
!5915 = !DILocation(line: 3312, column: 29, scope: !5914)
!5916 = !DILocation(line: 3312, column: 39, scope: !5914)
!5917 = !DILocation(line: 3312, column: 27, scope: !5914)
!5918 = !DILocation(line: 3312, column: 13, scope: !5911)
!5919 = !DILocation(line: 3314, column: 33, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 3313, column: 13)
!5921 = !DILocation(line: 3314, column: 32, scope: !5920)
!5922 = !DILocation(line: 3314, column: 39, scope: !5920)
!5923 = !DILocation(line: 3314, column: 36, scope: !5920)
!5924 = !DILocation(line: 3314, column: 47, scope: !5920)
!5925 = !DILocation(line: 3314, column: 20, scope: !5920)
!5926 = !DILocation(line: 3314, column: 18, scope: !5920)
!5927 = !DILocation(line: 3315, column: 23, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 3315, column: 16)
!5929 = !DILocation(line: 3315, column: 21, scope: !5928)
!5930 = !DILocation(line: 3315, column: 28, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 3315, column: 16)
!5932 = !DILocation(line: 3315, column: 32, scope: !5931)
!5933 = !DILocation(line: 3315, column: 30, scope: !5931)
!5934 = !DILocation(line: 3315, column: 16, scope: !5928)
!5935 = !DILocation(line: 3317, column: 53, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 3316, column: 16)
!5937 = !DILocation(line: 3317, column: 51, scope: !5936)
!5938 = !DILocation(line: 3317, column: 45, scope: !5936)
!5939 = !DILocation(line: 3317, column: 62, scope: !5936)
!5940 = !DILocation(line: 3317, column: 26, scope: !5936)
!5941 = !DILocation(line: 3317, column: 20, scope: !5936)
!5942 = !DILocation(line: 3317, column: 23, scope: !5936)
!5943 = !DILocation(line: 3318, column: 37, scope: !5936)
!5944 = !DILocation(line: 3318, column: 42, scope: !5936)
!5945 = !DILocation(line: 3318, column: 39, scope: !5936)
!5946 = !DILocation(line: 3318, column: 26, scope: !5936)
!5947 = !DILocation(line: 3318, column: 20, scope: !5936)
!5948 = !DILocation(line: 3318, column: 23, scope: !5936)
!5949 = !DILocation(line: 3320, column: 23, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 3320, column: 23)
!5951 = !DILocation(line: 3320, column: 33, scope: !5950)
!5952 = !DILocation(line: 3320, column: 30, scope: !5950)
!5953 = !DILocation(line: 3320, column: 23, scope: !5936)
!5954 = !DILocation(line: 3322, column: 31, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 3321, column: 19)
!5956 = !DILocation(line: 3322, column: 29, scope: !5955)
!5957 = !DILocation(line: 3323, column: 24, scope: !5955)
!5958 = !DILocation(line: 3324, column: 19, scope: !5955)
!5959 = !DILocation(line: 3327, column: 32, scope: !5950)
!5960 = !DILocation(line: 3327, column: 29, scope: !5950)
!5961 = !DILocation(line: 3328, column: 16, scope: !5936)
!5962 = !DILocation(line: 3315, column: 40, scope: !5931)
!5963 = !DILocation(line: 3315, column: 16, scope: !5931)
!5964 = distinct !{!5964, !5934, !5965}
!5965 = !DILocation(line: 3328, column: 16, scope: !5928)
!5966 = !DILocation(line: 3330, column: 20, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 3330, column: 20)
!5968 = !DILocation(line: 3330, column: 30, scope: !5967)
!5969 = !DILocation(line: 3330, column: 27, scope: !5967)
!5970 = !DILocation(line: 3330, column: 20, scope: !5920)
!5971 = !DILocation(line: 3332, column: 28, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 3331, column: 16)
!5973 = !DILocation(line: 3332, column: 26, scope: !5972)
!5974 = !DILocation(line: 3333, column: 21, scope: !5972)
!5975 = !DILocation(line: 3334, column: 16, scope: !5972)
!5976 = !DILocation(line: 3337, column: 29, scope: !5967)
!5977 = !DILocation(line: 3337, column: 26, scope: !5967)
!5978 = !DILocation(line: 3338, column: 13, scope: !5920)
!5979 = !DILocation(line: 3312, column: 47, scope: !5914)
!5980 = !DILocation(line: 3312, column: 13, scope: !5914)
!5981 = distinct !{!5981, !5918, !5982}
!5982 = !DILocation(line: 3338, column: 13, scope: !5911)
!5983 = !DILocation(line: 3339, column: 13, scope: !5839)
!5984 = !DILocalVariable(name: "sp", scope: !5985, file: !3, line: 3344, type: !65)
!5985 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 3343, column: 10)
!5986 = !DILocation(line: 3344, column: 23, scope: !5985)
!5987 = !DILocation(line: 3344, column: 28, scope: !5985)
!5988 = !DILocation(line: 3344, column: 49, scope: !5985)
!5989 = !DILocation(line: 3344, column: 59, scope: !5985)
!5990 = !DILocation(line: 3344, column: 65, scope: !5985)
!5991 = !DILocation(line: 3344, column: 70, scope: !5985)
!5992 = !DILocation(line: 3344, column: 32, scope: !5985)
!5993 = !DILocalVariable(name: "dp", scope: !5985, file: !3, line: 3345, type: !65)
!5994 = !DILocation(line: 3345, column: 23, scope: !5985)
!5995 = !DILocation(line: 3345, column: 28, scope: !5985)
!5996 = !DILocation(line: 3345, column: 49, scope: !5985)
!5997 = !DILocation(line: 3345, column: 61, scope: !5985)
!5998 = !DILocation(line: 3345, column: 66, scope: !5985)
!5999 = !DILocation(line: 3345, column: 32, scope: !5985)
!6000 = !DILocalVariable(name: "sshift", scope: !5985, file: !3, line: 3346, type: !27)
!6001 = !DILocation(line: 3346, column: 17, scope: !5985)
!6002 = !DILocalVariable(name: "dshift", scope: !5985, file: !3, line: 3346, type: !27)
!6003 = !DILocation(line: 3346, column: 25, scope: !5985)
!6004 = !DILocalVariable(name: "s_start", scope: !5985, file: !3, line: 3347, type: !27)
!6005 = !DILocation(line: 3347, column: 17, scope: !5985)
!6006 = !DILocalVariable(name: "s_end", scope: !5985, file: !3, line: 3347, type: !27)
!6007 = !DILocation(line: 3347, column: 26, scope: !5985)
!6008 = !DILocalVariable(name: "s_inc", scope: !5985, file: !3, line: 3347, type: !27)
!6009 = !DILocation(line: 3347, column: 33, scope: !5985)
!6010 = !DILocalVariable(name: "jstop", scope: !5985, file: !3, line: 3348, type: !27)
!6011 = !DILocation(line: 3348, column: 17, scope: !5985)
!6012 = !DILocation(line: 3348, column: 38, scope: !5985)
!6013 = !DILocation(line: 3348, column: 25, scope: !5985)
!6014 = !DILocalVariable(name: "i", scope: !5985, file: !3, line: 3349, type: !85)
!6015 = !DILocation(line: 3349, column: 25, scope: !5985)
!6016 = !DILocation(line: 3352, column: 17, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 3352, column: 17)
!6018 = !DILocation(line: 3352, column: 33, scope: !6017)
!6019 = !DILocation(line: 3352, column: 17, scope: !5985)
!6020 = !DILocation(line: 3354, column: 33, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 3353, column: 13)
!6022 = !DILocation(line: 3354, column: 43, scope: !6021)
!6023 = !DILocation(line: 3354, column: 49, scope: !6021)
!6024 = !DILocation(line: 3354, column: 54, scope: !6021)
!6025 = !DILocation(line: 3354, column: 62, scope: !6021)
!6026 = !DILocation(line: 3354, column: 23, scope: !6021)
!6027 = !DILocation(line: 3355, column: 33, scope: !6021)
!6028 = !DILocation(line: 3355, column: 45, scope: !6021)
!6029 = !DILocation(line: 3355, column: 50, scope: !6021)
!6030 = !DILocation(line: 3355, column: 58, scope: !6021)
!6031 = !DILocation(line: 3355, column: 23, scope: !6021)
!6032 = !DILocation(line: 3356, column: 24, scope: !6021)
!6033 = !DILocation(line: 3357, column: 22, scope: !6021)
!6034 = !DILocation(line: 3358, column: 22, scope: !6021)
!6035 = !DILocation(line: 3359, column: 13, scope: !6021)
!6036 = !DILocation(line: 3364, column: 38, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 3363, column: 13)
!6038 = !DILocation(line: 3364, column: 48, scope: !6037)
!6039 = !DILocation(line: 3364, column: 54, scope: !6037)
!6040 = !DILocation(line: 3364, column: 59, scope: !6037)
!6041 = !DILocation(line: 3364, column: 34, scope: !6037)
!6042 = !DILocation(line: 3364, column: 68, scope: !6037)
!6043 = !DILocation(line: 3364, column: 23, scope: !6037)
!6044 = !DILocation(line: 3365, column: 38, scope: !6037)
!6045 = !DILocation(line: 3365, column: 50, scope: !6037)
!6046 = !DILocation(line: 3365, column: 55, scope: !6037)
!6047 = !DILocation(line: 3365, column: 34, scope: !6037)
!6048 = !DILocation(line: 3365, column: 64, scope: !6037)
!6049 = !DILocation(line: 3365, column: 23, scope: !6037)
!6050 = !DILocation(line: 3366, column: 24, scope: !6037)
!6051 = !DILocation(line: 3367, column: 22, scope: !6037)
!6052 = !DILocation(line: 3368, column: 22, scope: !6037)
!6053 = !DILocation(line: 3371, column: 20, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 3371, column: 13)
!6055 = !DILocation(line: 3371, column: 18, scope: !6054)
!6056 = !DILocation(line: 3371, column: 25, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 3371, column: 13)
!6058 = !DILocation(line: 3371, column: 29, scope: !6057)
!6059 = !DILocation(line: 3371, column: 39, scope: !6057)
!6060 = !DILocation(line: 3371, column: 27, scope: !6057)
!6061 = !DILocation(line: 3371, column: 13, scope: !6054)
!6062 = !DILocalVariable(name: "v", scope: !6063, file: !3, line: 3373, type: !67)
!6063 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 3372, column: 13)
!6064 = !DILocation(line: 3373, column: 25, scope: !6063)
!6065 = !DILocalVariable(name: "j", scope: !6063, file: !3, line: 3374, type: !27)
!6066 = !DILocation(line: 3374, column: 20, scope: !6063)
!6067 = !DILocation(line: 3376, column: 33, scope: !6063)
!6068 = !DILocation(line: 3376, column: 32, scope: !6063)
!6069 = !DILocation(line: 3376, column: 39, scope: !6063)
!6070 = !DILocation(line: 3376, column: 36, scope: !6063)
!6071 = !DILocation(line: 3376, column: 47, scope: !6063)
!6072 = !DILocation(line: 3376, column: 20, scope: !6063)
!6073 = !DILocation(line: 3376, column: 18, scope: !6063)
!6074 = !DILocation(line: 3377, column: 23, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 3377, column: 16)
!6076 = !DILocation(line: 3377, column: 21, scope: !6075)
!6077 = !DILocation(line: 3377, column: 28, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6075, file: !3, line: 3377, column: 16)
!6079 = !DILocation(line: 3377, column: 32, scope: !6078)
!6080 = !DILocation(line: 3377, column: 30, scope: !6078)
!6081 = !DILocation(line: 3377, column: 16, scope: !6075)
!6082 = !DILocation(line: 3379, column: 53, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 3378, column: 16)
!6084 = !DILocation(line: 3379, column: 51, scope: !6083)
!6085 = !DILocation(line: 3379, column: 45, scope: !6083)
!6086 = !DILocation(line: 3379, column: 62, scope: !6083)
!6087 = !DILocation(line: 3379, column: 26, scope: !6083)
!6088 = !DILocation(line: 3379, column: 20, scope: !6083)
!6089 = !DILocation(line: 3379, column: 23, scope: !6083)
!6090 = !DILocation(line: 3380, column: 37, scope: !6083)
!6091 = !DILocation(line: 3380, column: 42, scope: !6083)
!6092 = !DILocation(line: 3380, column: 39, scope: !6083)
!6093 = !DILocation(line: 3380, column: 26, scope: !6083)
!6094 = !DILocation(line: 3380, column: 20, scope: !6083)
!6095 = !DILocation(line: 3380, column: 23, scope: !6083)
!6096 = !DILocation(line: 3382, column: 23, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 3382, column: 23)
!6098 = !DILocation(line: 3382, column: 33, scope: !6097)
!6099 = !DILocation(line: 3382, column: 30, scope: !6097)
!6100 = !DILocation(line: 3382, column: 23, scope: !6083)
!6101 = !DILocation(line: 3384, column: 31, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 3383, column: 19)
!6103 = !DILocation(line: 3384, column: 29, scope: !6102)
!6104 = !DILocation(line: 3385, column: 24, scope: !6102)
!6105 = !DILocation(line: 3386, column: 19, scope: !6102)
!6106 = !DILocation(line: 3389, column: 32, scope: !6097)
!6107 = !DILocation(line: 3389, column: 29, scope: !6097)
!6108 = !DILocation(line: 3390, column: 16, scope: !6083)
!6109 = !DILocation(line: 3377, column: 40, scope: !6078)
!6110 = !DILocation(line: 3377, column: 16, scope: !6078)
!6111 = distinct !{!6111, !6081, !6112}
!6112 = !DILocation(line: 3390, column: 16, scope: !6075)
!6113 = !DILocation(line: 3392, column: 20, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 3392, column: 20)
!6115 = !DILocation(line: 3392, column: 30, scope: !6114)
!6116 = !DILocation(line: 3392, column: 27, scope: !6114)
!6117 = !DILocation(line: 3392, column: 20, scope: !6063)
!6118 = !DILocation(line: 3394, column: 28, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 3393, column: 16)
!6120 = !DILocation(line: 3394, column: 26, scope: !6119)
!6121 = !DILocation(line: 3395, column: 21, scope: !6119)
!6122 = !DILocation(line: 3396, column: 16, scope: !6119)
!6123 = !DILocation(line: 3399, column: 29, scope: !6114)
!6124 = !DILocation(line: 3399, column: 26, scope: !6114)
!6125 = !DILocation(line: 3400, column: 13, scope: !6063)
!6126 = !DILocation(line: 3371, column: 47, scope: !6057)
!6127 = !DILocation(line: 3371, column: 13, scope: !6057)
!6128 = distinct !{!6128, !6061, !6129}
!6129 = !DILocation(line: 3400, column: 13, scope: !6054)
!6130 = !DILocation(line: 3401, column: 13, scope: !5985)
!6131 = !DILocalVariable(name: "sp", scope: !6132, file: !3, line: 3406, type: !65)
!6132 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 3405, column: 10)
!6133 = !DILocation(line: 3406, column: 23, scope: !6132)
!6134 = !DILocation(line: 3406, column: 28, scope: !6132)
!6135 = !DILocation(line: 3406, column: 48, scope: !6132)
!6136 = !DILocation(line: 3406, column: 58, scope: !6132)
!6137 = !DILocation(line: 3406, column: 64, scope: !6132)
!6138 = !DILocation(line: 3406, column: 69, scope: !6132)
!6139 = !DILocation(line: 3406, column: 34, scope: !6132)
!6140 = !DILocation(line: 3406, column: 32, scope: !6132)
!6141 = !DILocalVariable(name: "dp", scope: !6132, file: !3, line: 3407, type: !65)
!6142 = !DILocation(line: 3407, column: 23, scope: !6132)
!6143 = !DILocation(line: 3407, column: 28, scope: !6132)
!6144 = !DILocation(line: 3407, column: 48, scope: !6132)
!6145 = !DILocation(line: 3407, column: 60, scope: !6132)
!6146 = !DILocation(line: 3407, column: 65, scope: !6132)
!6147 = !DILocation(line: 3407, column: 34, scope: !6132)
!6148 = !DILocation(line: 3407, column: 32, scope: !6132)
!6149 = !DILocalVariable(name: "sshift", scope: !6132, file: !3, line: 3408, type: !27)
!6150 = !DILocation(line: 3408, column: 17, scope: !6132)
!6151 = !DILocalVariable(name: "dshift", scope: !6132, file: !3, line: 3408, type: !27)
!6152 = !DILocation(line: 3408, column: 25, scope: !6132)
!6153 = !DILocalVariable(name: "s_start", scope: !6132, file: !3, line: 3409, type: !27)
!6154 = !DILocation(line: 3409, column: 17, scope: !6132)
!6155 = !DILocalVariable(name: "s_end", scope: !6132, file: !3, line: 3409, type: !27)
!6156 = !DILocation(line: 3409, column: 26, scope: !6132)
!6157 = !DILocalVariable(name: "s_inc", scope: !6132, file: !3, line: 3409, type: !27)
!6158 = !DILocation(line: 3409, column: 33, scope: !6132)
!6159 = !DILocalVariable(name: "i", scope: !6132, file: !3, line: 3410, type: !85)
!6160 = !DILocation(line: 3410, column: 25, scope: !6132)
!6161 = !DILocalVariable(name: "jstop", scope: !6132, file: !3, line: 3411, type: !27)
!6162 = !DILocation(line: 3411, column: 17, scope: !6132)
!6163 = !DILocation(line: 3411, column: 38, scope: !6132)
!6164 = !DILocation(line: 3411, column: 25, scope: !6132)
!6165 = !DILocation(line: 3414, column: 17, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 3414, column: 17)
!6167 = !DILocation(line: 3414, column: 33, scope: !6166)
!6168 = !DILocation(line: 3414, column: 17, scope: !6132)
!6169 = !DILocation(line: 3416, column: 33, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 3415, column: 13)
!6171 = !DILocation(line: 3416, column: 43, scope: !6170)
!6172 = !DILocation(line: 3416, column: 49, scope: !6170)
!6173 = !DILocation(line: 3416, column: 54, scope: !6170)
!6174 = !DILocation(line: 3416, column: 62, scope: !6170)
!6175 = !DILocation(line: 3416, column: 23, scope: !6170)
!6176 = !DILocation(line: 3417, column: 33, scope: !6170)
!6177 = !DILocation(line: 3417, column: 45, scope: !6170)
!6178 = !DILocation(line: 3417, column: 50, scope: !6170)
!6179 = !DILocation(line: 3417, column: 58, scope: !6170)
!6180 = !DILocation(line: 3417, column: 23, scope: !6170)
!6181 = !DILocation(line: 3418, column: 24, scope: !6170)
!6182 = !DILocation(line: 3419, column: 22, scope: !6170)
!6183 = !DILocation(line: 3420, column: 22, scope: !6170)
!6184 = !DILocation(line: 3421, column: 13, scope: !6170)
!6185 = !DILocation(line: 3426, column: 38, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 3425, column: 13)
!6187 = !DILocation(line: 3426, column: 48, scope: !6186)
!6188 = !DILocation(line: 3426, column: 54, scope: !6186)
!6189 = !DILocation(line: 3426, column: 59, scope: !6186)
!6190 = !DILocation(line: 3426, column: 34, scope: !6186)
!6191 = !DILocation(line: 3426, column: 68, scope: !6186)
!6192 = !DILocation(line: 3426, column: 23, scope: !6186)
!6193 = !DILocation(line: 3427, column: 38, scope: !6186)
!6194 = !DILocation(line: 3427, column: 50, scope: !6186)
!6195 = !DILocation(line: 3427, column: 55, scope: !6186)
!6196 = !DILocation(line: 3427, column: 34, scope: !6186)
!6197 = !DILocation(line: 3427, column: 64, scope: !6186)
!6198 = !DILocation(line: 3427, column: 23, scope: !6186)
!6199 = !DILocation(line: 3428, column: 24, scope: !6186)
!6200 = !DILocation(line: 3429, column: 22, scope: !6186)
!6201 = !DILocation(line: 3430, column: 22, scope: !6186)
!6202 = !DILocation(line: 3433, column: 20, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 3433, column: 13)
!6204 = !DILocation(line: 3433, column: 18, scope: !6203)
!6205 = !DILocation(line: 3433, column: 25, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 3433, column: 13)
!6207 = !DILocation(line: 3433, column: 29, scope: !6206)
!6208 = !DILocation(line: 3433, column: 39, scope: !6206)
!6209 = !DILocation(line: 3433, column: 27, scope: !6206)
!6210 = !DILocation(line: 3433, column: 13, scope: !6203)
!6211 = !DILocalVariable(name: "v", scope: !6212, file: !3, line: 3435, type: !67)
!6212 = distinct !DILexicalBlock(scope: !6206, file: !3, line: 3434, column: 13)
!6213 = !DILocation(line: 3435, column: 25, scope: !6212)
!6214 = !DILocation(line: 3435, column: 42, scope: !6212)
!6215 = !DILocation(line: 3435, column: 41, scope: !6212)
!6216 = !DILocation(line: 3435, column: 48, scope: !6212)
!6217 = !DILocation(line: 3435, column: 45, scope: !6212)
!6218 = !DILocation(line: 3435, column: 56, scope: !6212)
!6219 = !DILocation(line: 3435, column: 29, scope: !6212)
!6220 = !DILocalVariable(name: "j", scope: !6212, file: !3, line: 3436, type: !27)
!6221 = !DILocation(line: 3436, column: 20, scope: !6212)
!6222 = !DILocation(line: 3438, column: 23, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 3438, column: 16)
!6224 = !DILocation(line: 3438, column: 21, scope: !6223)
!6225 = !DILocation(line: 3438, column: 28, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 3438, column: 16)
!6227 = !DILocation(line: 3438, column: 32, scope: !6226)
!6228 = !DILocation(line: 3438, column: 30, scope: !6226)
!6229 = !DILocation(line: 3438, column: 16, scope: !6223)
!6230 = !DILocation(line: 3440, column: 52, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 3439, column: 16)
!6232 = !DILocation(line: 3440, column: 50, scope: !6231)
!6233 = !DILocation(line: 3440, column: 44, scope: !6231)
!6234 = !DILocation(line: 3440, column: 61, scope: !6231)
!6235 = !DILocation(line: 3440, column: 26, scope: !6231)
!6236 = !DILocation(line: 3440, column: 20, scope: !6231)
!6237 = !DILocation(line: 3440, column: 23, scope: !6231)
!6238 = !DILocation(line: 3441, column: 37, scope: !6231)
!6239 = !DILocation(line: 3441, column: 42, scope: !6231)
!6240 = !DILocation(line: 3441, column: 39, scope: !6231)
!6241 = !DILocation(line: 3441, column: 26, scope: !6231)
!6242 = !DILocation(line: 3441, column: 20, scope: !6231)
!6243 = !DILocation(line: 3441, column: 23, scope: !6231)
!6244 = !DILocation(line: 3443, column: 23, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 3443, column: 23)
!6246 = !DILocation(line: 3443, column: 33, scope: !6245)
!6247 = !DILocation(line: 3443, column: 30, scope: !6245)
!6248 = !DILocation(line: 3443, column: 23, scope: !6231)
!6249 = !DILocation(line: 3445, column: 31, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 3444, column: 19)
!6251 = !DILocation(line: 3445, column: 29, scope: !6250)
!6252 = !DILocation(line: 3446, column: 24, scope: !6250)
!6253 = !DILocation(line: 3447, column: 19, scope: !6250)
!6254 = !DILocation(line: 3450, column: 32, scope: !6245)
!6255 = !DILocation(line: 3450, column: 29, scope: !6245)
!6256 = !DILocation(line: 3451, column: 16, scope: !6231)
!6257 = !DILocation(line: 3438, column: 40, scope: !6226)
!6258 = !DILocation(line: 3438, column: 16, scope: !6226)
!6259 = distinct !{!6259, !6229, !6260}
!6260 = !DILocation(line: 3451, column: 16, scope: !6223)
!6261 = !DILocation(line: 3453, column: 20, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 3453, column: 20)
!6263 = !DILocation(line: 3453, column: 30, scope: !6262)
!6264 = !DILocation(line: 3453, column: 27, scope: !6262)
!6265 = !DILocation(line: 3453, column: 20, scope: !6212)
!6266 = !DILocation(line: 3455, column: 28, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 3454, column: 16)
!6268 = !DILocation(line: 3455, column: 26, scope: !6267)
!6269 = !DILocation(line: 3456, column: 21, scope: !6267)
!6270 = !DILocation(line: 3457, column: 16, scope: !6267)
!6271 = !DILocation(line: 3460, column: 29, scope: !6262)
!6272 = !DILocation(line: 3460, column: 26, scope: !6262)
!6273 = !DILocation(line: 3461, column: 13, scope: !6212)
!6274 = !DILocation(line: 3433, column: 47, scope: !6206)
!6275 = !DILocation(line: 3433, column: 13, scope: !6206)
!6276 = distinct !{!6276, !6210, !6277}
!6277 = !DILocation(line: 3461, column: 13, scope: !6203)
!6278 = !DILocation(line: 3462, column: 13, scope: !6132)
!6279 = !DILocalVariable(name: "pixel_bytes", scope: !6280, file: !3, line: 3467, type: !69)
!6280 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 3466, column: 10)
!6281 = !DILocation(line: 3467, column: 24, scope: !6280)
!6282 = !DILocation(line: 3467, column: 39, scope: !6280)
!6283 = !DILocation(line: 3467, column: 49, scope: !6280)
!6284 = !DILocation(line: 3467, column: 61, scope: !6280)
!6285 = !DILocation(line: 3467, column: 38, scope: !6280)
!6286 = !DILocalVariable(name: "sp", scope: !6280, file: !3, line: 3469, type: !65)
!6287 = !DILocation(line: 3469, column: 23, scope: !6280)
!6288 = !DILocation(line: 3469, column: 28, scope: !6280)
!6289 = !DILocation(line: 3469, column: 47, scope: !6280)
!6290 = !DILocation(line: 3469, column: 57, scope: !6280)
!6291 = !DILocation(line: 3469, column: 63, scope: !6280)
!6292 = !DILocation(line: 3469, column: 34, scope: !6280)
!6293 = !DILocation(line: 3470, column: 19, scope: !6280)
!6294 = !DILocation(line: 3470, column: 17, scope: !6280)
!6295 = !DILocation(line: 3469, column: 32, scope: !6280)
!6296 = !DILocalVariable(name: "dp", scope: !6280, file: !3, line: 3472, type: !65)
!6297 = !DILocation(line: 3472, column: 23, scope: !6280)
!6298 = !DILocation(line: 3472, column: 28, scope: !6280)
!6299 = !DILocation(line: 3472, column: 47, scope: !6280)
!6300 = !DILocation(line: 3472, column: 59, scope: !6280)
!6301 = !DILocation(line: 3472, column: 34, scope: !6280)
!6302 = !DILocation(line: 3472, column: 66, scope: !6280)
!6303 = !DILocation(line: 3472, column: 64, scope: !6280)
!6304 = !DILocation(line: 3472, column: 32, scope: !6280)
!6305 = !DILocalVariable(name: "jstop", scope: !6280, file: !3, line: 3474, type: !27)
!6306 = !DILocation(line: 3474, column: 17, scope: !6280)
!6307 = !DILocation(line: 3474, column: 38, scope: !6280)
!6308 = !DILocation(line: 3474, column: 25, scope: !6280)
!6309 = !DILocalVariable(name: "i", scope: !6280, file: !3, line: 3475, type: !85)
!6310 = !DILocation(line: 3475, column: 25, scope: !6280)
!6311 = !DILocation(line: 3477, column: 20, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 3477, column: 13)
!6313 = !DILocation(line: 3477, column: 18, scope: !6312)
!6314 = !DILocation(line: 3477, column: 25, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 3477, column: 13)
!6316 = !DILocation(line: 3477, column: 29, scope: !6315)
!6317 = !DILocation(line: 3477, column: 39, scope: !6315)
!6318 = !DILocation(line: 3477, column: 27, scope: !6315)
!6319 = !DILocation(line: 3477, column: 13, scope: !6312)
!6320 = !DILocalVariable(name: "v", scope: !6321, file: !3, line: 3479, type: !280)
!6321 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 3478, column: 13)
!6322 = !DILocation(line: 3479, column: 25, scope: !6321)
!6323 = !DILocalVariable(name: "j", scope: !6321, file: !3, line: 3480, type: !27)
!6324 = !DILocation(line: 3480, column: 20, scope: !6321)
!6325 = !DILocation(line: 3482, column: 16, scope: !6321)
!6326 = !DILocation(line: 3482, column: 30, scope: !6321)
!6327 = !DILocation(line: 3482, column: 34, scope: !6321)
!6328 = !DILocation(line: 3484, column: 23, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 3484, column: 16)
!6330 = !DILocation(line: 3484, column: 21, scope: !6329)
!6331 = !DILocation(line: 3484, column: 28, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 3484, column: 16)
!6333 = !DILocation(line: 3484, column: 32, scope: !6332)
!6334 = !DILocation(line: 3484, column: 30, scope: !6332)
!6335 = !DILocation(line: 3484, column: 16, scope: !6329)
!6336 = !DILocation(line: 3486, column: 30, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 3485, column: 16)
!6338 = !DILocation(line: 3486, column: 19, scope: !6337)
!6339 = !DILocation(line: 3486, column: 37, scope: !6337)
!6340 = !DILocation(line: 3487, column: 25, scope: !6337)
!6341 = !DILocation(line: 3487, column: 22, scope: !6337)
!6342 = !DILocation(line: 3488, column: 16, scope: !6337)
!6343 = !DILocation(line: 3484, column: 40, scope: !6332)
!6344 = !DILocation(line: 3484, column: 16, scope: !6332)
!6345 = distinct !{!6345, !6335, !6346}
!6346 = !DILocation(line: 3488, column: 16, scope: !6329)
!6347 = !DILocation(line: 3490, column: 22, scope: !6321)
!6348 = !DILocation(line: 3490, column: 19, scope: !6321)
!6349 = !DILocation(line: 3491, column: 13, scope: !6321)
!6350 = !DILocation(line: 3477, column: 47, scope: !6315)
!6351 = !DILocation(line: 3477, column: 13, scope: !6315)
!6352 = distinct !{!6352, !6319, !6353}
!6353 = !DILocation(line: 3491, column: 13, scope: !6312)
!6354 = !DILocation(line: 3492, column: 13, scope: !6280)
!6355 = !DILocation(line: 3496, column: 25, scope: !5827)
!6356 = !DILocation(line: 3496, column: 7, scope: !5827)
!6357 = !DILocation(line: 3496, column: 17, scope: !5827)
!6358 = !DILocation(line: 3496, column: 23, scope: !5827)
!6359 = !DILocation(line: 3497, column: 28, scope: !5827)
!6360 = !DILocation(line: 3497, column: 7, scope: !5827)
!6361 = !DILocation(line: 3497, column: 17, scope: !5827)
!6362 = !DILocation(line: 3497, column: 26, scope: !5827)
!6363 = !DILocation(line: 3498, column: 4, scope: !5827)
!6364 = !DILocation(line: 3502, column: 1, scope: !487)
!6365 = distinct !DISubprogram(name: "png_read_filter_row", scope: !3, file: !3, line: 3744, type: !6366, scopeLine: 3746, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !466, retainedNodes: !467)
!6366 = !DISubroutineType(types: !6367)
!6367 = !{null, !6, !79, !65, !461, !27}
!6368 = !DILocalVariable(name: "pp", arg: 1, scope: !6365, file: !3, line: 3744, type: !6)
!6369 = !DILocation(line: 3744, column: 33, scope: !6365)
!6370 = !DILocalVariable(name: "row_info", arg: 2, scope: !6365, file: !3, line: 3744, type: !79)
!6371 = !DILocation(line: 3744, column: 51, scope: !6365)
!6372 = !DILocalVariable(name: "row", arg: 3, scope: !6365, file: !3, line: 3744, type: !65)
!6373 = !DILocation(line: 3744, column: 71, scope: !6365)
!6374 = !DILocalVariable(name: "prev_row", arg: 4, scope: !6365, file: !3, line: 3745, type: !461)
!6375 = !DILocation(line: 3745, column: 20, scope: !6365)
!6376 = !DILocalVariable(name: "filter", arg: 5, scope: !6365, file: !3, line: 3745, type: !27)
!6377 = !DILocation(line: 3745, column: 34, scope: !6365)
!6378 = !DILocation(line: 3747, column: 8, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 3747, column: 8)
!6380 = !DILocation(line: 3747, column: 12, scope: !6379)
!6381 = !DILocation(line: 3747, column: 27, scope: !6379)
!6382 = !DILocation(line: 3747, column: 8, scope: !6365)
!6383 = !DILocation(line: 3748, column: 33, scope: !6379)
!6384 = !DILocation(line: 3748, column: 7, scope: !6379)
!6385 = !DILocation(line: 3749, column: 8, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 3749, column: 8)
!6387 = !DILocation(line: 3749, column: 15, scope: !6386)
!6388 = !DILocation(line: 3749, column: 39, scope: !6386)
!6389 = !DILocation(line: 3749, column: 42, scope: !6386)
!6390 = !DILocation(line: 3749, column: 49, scope: !6386)
!6391 = !DILocation(line: 3749, column: 8, scope: !6365)
!6392 = !DILocation(line: 3750, column: 7, scope: !6386)
!6393 = !DILocation(line: 3750, column: 11, scope: !6386)
!6394 = !DILocation(line: 3750, column: 23, scope: !6386)
!6395 = !DILocation(line: 3750, column: 29, scope: !6386)
!6396 = !DILocation(line: 3750, column: 33, scope: !6386)
!6397 = !DILocation(line: 3750, column: 43, scope: !6386)
!6398 = !DILocation(line: 3750, column: 48, scope: !6386)
!6399 = !DILocation(line: 3751, column: 1, scope: !6365)
!6400 = distinct !DISubprogram(name: "png_init_filter_functions", scope: !3, file: !3, line: 3724, type: !218, scopeLine: 3725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !466, retainedNodes: !467)
!6401 = !DILocalVariable(name: "pp", arg: 1, scope: !6400, file: !3, line: 3724, type: !6)
!6402 = !DILocation(line: 3724, column: 39, scope: !6400)
!6403 = !DILocalVariable(name: "bpp", scope: !6400, file: !3, line: 3726, type: !86)
!6404 = !DILocation(line: 3726, column: 17, scope: !6400)
!6405 = !DILocation(line: 3726, column: 24, scope: !6400)
!6406 = !DILocation(line: 3726, column: 28, scope: !6400)
!6407 = !DILocation(line: 3726, column: 40, scope: !6400)
!6408 = !DILocation(line: 3726, column: 45, scope: !6400)
!6409 = !DILocation(line: 3728, column: 4, scope: !6400)
!6410 = !DILocation(line: 3728, column: 8, scope: !6400)
!6411 = !DILocation(line: 3728, column: 44, scope: !6400)
!6412 = !DILocation(line: 3729, column: 4, scope: !6400)
!6413 = !DILocation(line: 3729, column: 8, scope: !6400)
!6414 = !DILocation(line: 3729, column: 43, scope: !6400)
!6415 = !DILocation(line: 3730, column: 4, scope: !6400)
!6416 = !DILocation(line: 3730, column: 8, scope: !6400)
!6417 = !DILocation(line: 3730, column: 44, scope: !6400)
!6418 = !DILocation(line: 3731, column: 8, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 3731, column: 8)
!6420 = !DILocation(line: 3731, column: 12, scope: !6419)
!6421 = !DILocation(line: 3731, column: 8, scope: !6400)
!6422 = !DILocation(line: 3732, column: 7, scope: !6419)
!6423 = !DILocation(line: 3732, column: 11, scope: !6419)
!6424 = !DILocation(line: 3732, column: 49, scope: !6419)
!6425 = !DILocation(line: 3735, column: 7, scope: !6419)
!6426 = !DILocation(line: 3735, column: 11, scope: !6419)
!6427 = !DILocation(line: 3735, column: 49, scope: !6419)
!6428 = !DILocation(line: 3741, column: 1, scope: !6400)
!6429 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !496, file: !3, line: 3755, type: !6)
!6430 = !DILocation(line: 3755, column: 33, scope: !496)
!6431 = !DILocation(line: 3774, column: 4, scope: !496)
!6432 = !DILocation(line: 3774, column: 13, scope: !496)
!6433 = !DILocation(line: 3774, column: 23, scope: !496)
!6434 = !DILocation(line: 3775, column: 8, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !496, file: !3, line: 3775, column: 8)
!6436 = !DILocation(line: 3775, column: 17, scope: !6435)
!6437 = !DILocation(line: 3775, column: 30, scope: !6435)
!6438 = !DILocation(line: 3775, column: 39, scope: !6435)
!6439 = !DILocation(line: 3775, column: 28, scope: !6435)
!6440 = !DILocation(line: 3775, column: 8, scope: !496)
!6441 = !DILocation(line: 3776, column: 7, scope: !6435)
!6442 = !DILocation(line: 3779, column: 8, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !496, file: !3, line: 3779, column: 8)
!6444 = !DILocation(line: 3779, column: 17, scope: !6443)
!6445 = !DILocation(line: 3779, column: 8, scope: !496)
!6446 = !DILocation(line: 3781, column: 7, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 3780, column: 4)
!6448 = !DILocation(line: 3781, column: 16, scope: !6447)
!6449 = !DILocation(line: 3781, column: 27, scope: !6447)
!6450 = !DILocation(line: 3786, column: 18, scope: !6447)
!6451 = !DILocation(line: 3786, column: 27, scope: !6447)
!6452 = !DILocation(line: 3786, column: 40, scope: !6447)
!6453 = !DILocation(line: 3786, column: 49, scope: !6447)
!6454 = !DILocation(line: 3786, column: 58, scope: !6447)
!6455 = !DILocation(line: 3786, column: 7, scope: !6447)
!6456 = !DILocation(line: 3788, column: 7, scope: !6447)
!6457 = !DILocation(line: 3790, column: 10, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 3789, column: 7)
!6459 = !DILocation(line: 3790, column: 19, scope: !6458)
!6460 = !DILocation(line: 3790, column: 23, scope: !6458)
!6461 = !DILocation(line: 3792, column: 14, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 3792, column: 14)
!6463 = !DILocation(line: 3792, column: 23, scope: !6462)
!6464 = !DILocation(line: 3792, column: 28, scope: !6462)
!6465 = !DILocation(line: 3792, column: 14, scope: !6458)
!6466 = !DILocation(line: 3793, column: 13, scope: !6462)
!6467 = !DILocation(line: 3795, column: 29, scope: !6458)
!6468 = !DILocation(line: 3795, column: 38, scope: !6458)
!6469 = !DILocation(line: 3796, column: 26, scope: !6458)
!6470 = !DILocation(line: 3796, column: 35, scope: !6458)
!6471 = !DILocation(line: 3796, column: 13, scope: !6458)
!6472 = !DILocation(line: 3795, column: 44, scope: !6458)
!6473 = !DILocation(line: 3796, column: 41, scope: !6458)
!6474 = !DILocation(line: 3797, column: 28, scope: !6458)
!6475 = !DILocation(line: 3797, column: 37, scope: !6458)
!6476 = !DILocation(line: 3797, column: 13, scope: !6458)
!6477 = !DILocation(line: 3796, column: 45, scope: !6458)
!6478 = !DILocation(line: 3798, column: 26, scope: !6458)
!6479 = !DILocation(line: 3798, column: 35, scope: !6458)
!6480 = !DILocation(line: 3798, column: 13, scope: !6458)
!6481 = !DILocation(line: 3797, column: 44, scope: !6458)
!6482 = !DILocation(line: 3795, column: 10, scope: !6458)
!6483 = !DILocation(line: 3795, column: 19, scope: !6458)
!6484 = !DILocation(line: 3795, column: 26, scope: !6458)
!6485 = !DILocation(line: 3800, column: 16, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 3800, column: 14)
!6487 = !DILocation(line: 3800, column: 25, scope: !6486)
!6488 = !DILocation(line: 3800, column: 41, scope: !6486)
!6489 = !DILocation(line: 3800, column: 14, scope: !6458)
!6490 = !DILocation(line: 3802, column: 34, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 3801, column: 10)
!6492 = !DILocation(line: 3802, column: 43, scope: !6491)
!6493 = !DILocation(line: 3803, column: 31, scope: !6491)
!6494 = !DILocation(line: 3803, column: 40, scope: !6491)
!6495 = !DILocation(line: 3803, column: 17, scope: !6491)
!6496 = !DILocation(line: 3802, column: 50, scope: !6491)
!6497 = !DILocation(line: 3803, column: 46, scope: !6491)
!6498 = !DILocation(line: 3804, column: 33, scope: !6491)
!6499 = !DILocation(line: 3804, column: 42, scope: !6491)
!6500 = !DILocation(line: 3804, column: 17, scope: !6491)
!6501 = !DILocation(line: 3803, column: 50, scope: !6491)
!6502 = !DILocation(line: 3805, column: 31, scope: !6491)
!6503 = !DILocation(line: 3805, column: 40, scope: !6491)
!6504 = !DILocation(line: 3805, column: 17, scope: !6491)
!6505 = !DILocation(line: 3804, column: 49, scope: !6491)
!6506 = !DILocation(line: 3802, column: 13, scope: !6491)
!6507 = !DILocation(line: 3802, column: 22, scope: !6491)
!6508 = !DILocation(line: 3802, column: 31, scope: !6491)
!6509 = !DILocation(line: 3806, column: 10, scope: !6491)
!6510 = !DILocation(line: 3809, column: 13, scope: !6486)
!6511 = !DILocation(line: 3811, column: 7, scope: !6458)
!6512 = !DILocation(line: 3811, column: 16, scope: !6447)
!6513 = !DILocation(line: 3811, column: 25, scope: !6447)
!6514 = !DILocation(line: 3811, column: 34, scope: !6447)
!6515 = !DILocation(line: 3811, column: 39, scope: !6447)
!6516 = !DILocation(line: 3811, column: 42, scope: !6447)
!6517 = !DILocation(line: 3811, column: 51, scope: !6447)
!6518 = !DILocation(line: 3811, column: 58, scope: !6447)
!6519 = distinct !{!6519, !6456, !6520}
!6520 = !DILocation(line: 3811, column: 62, scope: !6447)
!6521 = !DILocation(line: 3813, column: 11, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 3813, column: 11)
!6523 = !DILocation(line: 3813, column: 20, scope: !6522)
!6524 = !DILocation(line: 3813, column: 25, scope: !6522)
!6525 = !DILocation(line: 3813, column: 11, scope: !6447)
!6526 = !DILocation(line: 3814, column: 10, scope: !6522)
!6527 = !DILocation(line: 3815, column: 4, scope: !6447)
!6528 = !DILocation(line: 3818, column: 10, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !496, file: !3, line: 3818, column: 8)
!6530 = !DILocation(line: 3818, column: 19, scope: !6529)
!6531 = !DILocation(line: 3818, column: 25, scope: !6529)
!6532 = !DILocation(line: 3818, column: 8, scope: !496)
!6533 = !DILocalVariable(name: "extra", scope: !6534, file: !3, line: 3820, type: !55)
!6534 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 3819, column: 4)
!6535 = !DILocation(line: 3820, column: 12, scope: !6534)
!6536 = !DILocalVariable(name: "ret", scope: !6534, file: !3, line: 3821, type: !27)
!6537 = !DILocation(line: 3821, column: 11, scope: !6534)
!6538 = !DILocation(line: 3823, column: 7, scope: !6534)
!6539 = !DILocation(line: 3823, column: 16, scope: !6534)
!6540 = !DILocation(line: 3823, column: 24, scope: !6534)
!6541 = !DILocation(line: 3823, column: 33, scope: !6534)
!6542 = !DILocation(line: 3824, column: 7, scope: !6534)
!6543 = !DILocation(line: 3824, column: 16, scope: !6534)
!6544 = !DILocation(line: 3824, column: 24, scope: !6534)
!6545 = !DILocation(line: 3824, column: 34, scope: !6534)
!6546 = !DILocation(line: 3826, column: 7, scope: !6534)
!6547 = !DILocation(line: 3828, column: 16, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 3828, column: 14)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 3827, column: 7)
!6550 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 3826, column: 7)
!6551 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 3826, column: 7)
!6552 = !DILocation(line: 3828, column: 25, scope: !6548)
!6553 = !DILocation(line: 3828, column: 33, scope: !6548)
!6554 = !DILocation(line: 3828, column: 15, scope: !6548)
!6555 = !DILocation(line: 3828, column: 14, scope: !6549)
!6556 = !DILocation(line: 3830, column: 13, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 3829, column: 10)
!6558 = !DILocation(line: 3830, column: 21, scope: !6557)
!6559 = !DILocation(line: 3830, column: 30, scope: !6557)
!6560 = !DILocation(line: 3830, column: 20, scope: !6557)
!6561 = !DILocation(line: 3832, column: 31, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 3831, column: 13)
!6563 = !DILocation(line: 3832, column: 16, scope: !6562)
!6564 = !DILocation(line: 3833, column: 59, scope: !6562)
!6565 = !DILocation(line: 3833, column: 37, scope: !6562)
!6566 = !DILocation(line: 3833, column: 16, scope: !6562)
!6567 = !DILocation(line: 3833, column: 25, scope: !6562)
!6568 = !DILocation(line: 3833, column: 35, scope: !6562)
!6569 = !DILocation(line: 3834, column: 20, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 3834, column: 20)
!6571 = !DILocation(line: 3834, column: 29, scope: !6570)
!6572 = !DILocation(line: 3834, column: 40, scope: !6570)
!6573 = !DILocation(line: 3834, column: 20, scope: !6562)
!6574 = !DILocation(line: 3835, column: 29, scope: !6570)
!6575 = !DILocation(line: 3835, column: 19, scope: !6570)
!6576 = distinct !{!6576, !6556, !6577}
!6577 = !DILocation(line: 3836, column: 13, scope: !6557)
!6578 = !DILocation(line: 3838, column: 47, scope: !6557)
!6579 = !DILocation(line: 3838, column: 56, scope: !6557)
!6580 = !DILocation(line: 3838, column: 13, scope: !6557)
!6581 = !DILocation(line: 3838, column: 22, scope: !6557)
!6582 = !DILocation(line: 3838, column: 30, scope: !6557)
!6583 = !DILocation(line: 3838, column: 39, scope: !6557)
!6584 = !DILocation(line: 3839, column: 40, scope: !6557)
!6585 = !DILocation(line: 3839, column: 49, scope: !6557)
!6586 = !DILocation(line: 3839, column: 13, scope: !6557)
!6587 = !DILocation(line: 3839, column: 22, scope: !6557)
!6588 = !DILocation(line: 3839, column: 30, scope: !6557)
!6589 = !DILocation(line: 3839, column: 38, scope: !6557)
!6590 = !DILocation(line: 3841, column: 17, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 3841, column: 17)
!6592 = !DILocation(line: 3841, column: 26, scope: !6591)
!6593 = !DILocation(line: 3841, column: 38, scope: !6591)
!6594 = !DILocation(line: 3841, column: 47, scope: !6591)
!6595 = !DILocation(line: 3841, column: 36, scope: !6591)
!6596 = !DILocation(line: 3841, column: 17, scope: !6557)
!6597 = !DILocation(line: 3842, column: 50, scope: !6591)
!6598 = !DILocation(line: 3842, column: 59, scope: !6591)
!6599 = !DILocation(line: 3842, column: 16, scope: !6591)
!6600 = !DILocation(line: 3842, column: 25, scope: !6591)
!6601 = !DILocation(line: 3842, column: 33, scope: !6591)
!6602 = !DILocation(line: 3842, column: 42, scope: !6591)
!6603 = !DILocation(line: 3844, column: 26, scope: !6557)
!6604 = !DILocation(line: 3844, column: 35, scope: !6557)
!6605 = !DILocation(line: 3844, column: 44, scope: !6557)
!6606 = !DILocation(line: 3844, column: 50, scope: !6557)
!6607 = !DILocation(line: 3844, column: 59, scope: !6557)
!6608 = !DILocation(line: 3844, column: 67, scope: !6557)
!6609 = !DILocation(line: 3844, column: 13, scope: !6557)
!6610 = !DILocation(line: 3845, column: 35, scope: !6557)
!6611 = !DILocation(line: 3845, column: 44, scope: !6557)
!6612 = !DILocation(line: 3845, column: 52, scope: !6557)
!6613 = !DILocation(line: 3845, column: 13, scope: !6557)
!6614 = !DILocation(line: 3845, column: 22, scope: !6557)
!6615 = !DILocation(line: 3845, column: 32, scope: !6557)
!6616 = !DILocation(line: 3846, column: 10, scope: !6557)
!6617 = !DILocation(line: 3848, column: 25, scope: !6549)
!6618 = !DILocation(line: 3848, column: 34, scope: !6549)
!6619 = !DILocation(line: 3848, column: 16, scope: !6549)
!6620 = !DILocation(line: 3848, column: 14, scope: !6549)
!6621 = !DILocation(line: 3850, column: 14, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 3850, column: 14)
!6623 = !DILocation(line: 3850, column: 18, scope: !6622)
!6624 = !DILocation(line: 3850, column: 14, scope: !6549)
!6625 = !DILocation(line: 3852, column: 19, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 3852, column: 17)
!6627 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 3851, column: 10)
!6628 = !DILocation(line: 3852, column: 28, scope: !6626)
!6629 = !DILocation(line: 3852, column: 36, scope: !6626)
!6630 = !DILocation(line: 3852, column: 18, scope: !6626)
!6631 = !DILocation(line: 3852, column: 47, scope: !6626)
!6632 = !DILocation(line: 3852, column: 50, scope: !6626)
!6633 = !DILocation(line: 3852, column: 59, scope: !6626)
!6634 = !DILocation(line: 3852, column: 67, scope: !6626)
!6635 = !DILocation(line: 3852, column: 76, scope: !6626)
!6636 = !DILocation(line: 3853, column: 17, scope: !6626)
!6637 = !DILocation(line: 3853, column: 26, scope: !6626)
!6638 = !DILocation(line: 3852, column: 17, scope: !6627)
!6639 = !DILocation(line: 3854, column: 28, scope: !6626)
!6640 = !DILocation(line: 3854, column: 16, scope: !6626)
!6641 = !DILocation(line: 3856, column: 13, scope: !6627)
!6642 = !DILocation(line: 3856, column: 22, scope: !6627)
!6643 = !DILocation(line: 3856, column: 27, scope: !6627)
!6644 = !DILocation(line: 3857, column: 13, scope: !6627)
!6645 = !DILocation(line: 3857, column: 22, scope: !6627)
!6646 = !DILocation(line: 3857, column: 28, scope: !6627)
!6647 = !DILocation(line: 3858, column: 13, scope: !6627)
!6648 = !DILocation(line: 3861, column: 14, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 3861, column: 14)
!6650 = !DILocation(line: 3861, column: 18, scope: !6649)
!6651 = !DILocation(line: 3861, column: 14, scope: !6549)
!6652 = !DILocation(line: 3862, column: 23, scope: !6649)
!6653 = !DILocation(line: 3862, column: 32, scope: !6649)
!6654 = !DILocation(line: 3862, column: 41, scope: !6649)
!6655 = !DILocation(line: 3862, column: 49, scope: !6649)
!6656 = !DILocation(line: 3862, column: 55, scope: !6649)
!6657 = !DILocation(line: 3862, column: 64, scope: !6649)
!6658 = !DILocation(line: 3862, column: 72, scope: !6649)
!6659 = !DILocation(line: 3862, column: 13, scope: !6649)
!6660 = !DILocation(line: 3865, column: 16, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 3865, column: 14)
!6662 = !DILocation(line: 3865, column: 25, scope: !6661)
!6663 = !DILocation(line: 3865, column: 33, scope: !6661)
!6664 = !DILocation(line: 3865, column: 15, scope: !6661)
!6665 = !DILocation(line: 3865, column: 14, scope: !6549)
!6666 = !DILocation(line: 3867, column: 25, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 3866, column: 10)
!6668 = !DILocation(line: 3867, column: 13, scope: !6667)
!6669 = !DILocation(line: 3868, column: 13, scope: !6667)
!6670 = !DILocation(line: 3868, column: 22, scope: !6667)
!6671 = !DILocation(line: 3868, column: 27, scope: !6667)
!6672 = !DILocation(line: 3869, column: 13, scope: !6667)
!6673 = !DILocation(line: 3869, column: 22, scope: !6667)
!6674 = !DILocation(line: 3869, column: 28, scope: !6667)
!6675 = !DILocation(line: 3870, column: 13, scope: !6667)
!6676 = !DILocation(line: 3826, column: 7, scope: !6550)
!6677 = distinct !{!6677, !6678, !6679}
!6678 = !DILocation(line: 3826, column: 7, scope: !6551)
!6679 = !DILocation(line: 3873, column: 7, scope: !6551)
!6680 = !DILocation(line: 3874, column: 7, scope: !6534)
!6681 = !DILocation(line: 3874, column: 16, scope: !6534)
!6682 = !DILocation(line: 3874, column: 24, scope: !6534)
!6683 = !DILocation(line: 3874, column: 34, scope: !6534)
!6684 = !DILocation(line: 3875, column: 4, scope: !6534)
!6685 = !DILocation(line: 3877, column: 8, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !496, file: !3, line: 3877, column: 8)
!6687 = !DILocation(line: 3877, column: 17, scope: !6686)
!6688 = !DILocation(line: 3877, column: 27, scope: !6686)
!6689 = !DILocation(line: 3877, column: 30, scope: !6686)
!6690 = !DILocation(line: 3877, column: 39, scope: !6686)
!6691 = !DILocation(line: 3877, column: 47, scope: !6686)
!6692 = !DILocation(line: 3877, column: 8, scope: !496)
!6693 = !DILocation(line: 3878, column: 19, scope: !6686)
!6694 = !DILocation(line: 3878, column: 7, scope: !6686)
!6695 = !DILocation(line: 3880, column: 18, scope: !496)
!6696 = !DILocation(line: 3880, column: 27, scope: !496)
!6697 = !DILocation(line: 3880, column: 4, scope: !496)
!6698 = !DILocation(line: 3882, column: 4, scope: !496)
!6699 = !DILocation(line: 3882, column: 13, scope: !496)
!6700 = !DILocation(line: 3882, column: 18, scope: !496)
!6701 = !DILocation(line: 3883, column: 1, scope: !496)
!6702 = !DILocalVariable(name: "png_ptr", arg: 1, scope: !506, file: !3, line: 3887, type: !6)
!6703 = !DILocation(line: 3887, column: 32, scope: !506)
!6704 = !DILocalVariable(name: "max_pixel_depth", scope: !506, file: !3, line: 3905, type: !27)
!6705 = !DILocation(line: 3905, column: 8, scope: !506)
!6706 = !DILocalVariable(name: "row_bytes", scope: !506, file: !3, line: 3906, type: !69)
!6707 = !DILocation(line: 3906, column: 15, scope: !506)
!6708 = !DILocation(line: 3909, column: 4, scope: !506)
!6709 = !DILocation(line: 3909, column: 13, scope: !506)
!6710 = !DILocation(line: 3909, column: 21, scope: !506)
!6711 = !DILocation(line: 3909, column: 30, scope: !506)
!6712 = !DILocation(line: 3911, column: 34, scope: !506)
!6713 = !DILocation(line: 3911, column: 4, scope: !506)
!6714 = !DILocation(line: 3914, column: 8, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !506, file: !3, line: 3914, column: 8)
!6716 = !DILocation(line: 3914, column: 17, scope: !6715)
!6717 = !DILocation(line: 3914, column: 8, scope: !506)
!6718 = !DILocation(line: 3916, column: 13, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 3916, column: 11)
!6720 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 3915, column: 4)
!6721 = !DILocation(line: 3916, column: 22, scope: !6719)
!6722 = !DILocation(line: 3916, column: 38, scope: !6719)
!6723 = !DILocation(line: 3916, column: 11, scope: !6720)
!6724 = !DILocation(line: 3917, column: 31, scope: !6719)
!6725 = !DILocation(line: 3917, column: 40, scope: !6719)
!6726 = !DILocation(line: 3917, column: 49, scope: !6719)
!6727 = !DILocation(line: 3917, column: 47, scope: !6719)
!6728 = !DILocation(line: 3917, column: 66, scope: !6719)
!6729 = !DILocation(line: 3918, column: 14, scope: !6719)
!6730 = !DILocation(line: 3917, column: 70, scope: !6719)
!6731 = !DILocation(line: 3918, column: 36, scope: !6719)
!6732 = !DILocation(line: 3918, column: 34, scope: !6719)
!6733 = !DILocation(line: 3917, column: 10, scope: !6719)
!6734 = !DILocation(line: 3917, column: 19, scope: !6719)
!6735 = !DILocation(line: 3917, column: 28, scope: !6719)
!6736 = !DILocation(line: 3921, column: 30, scope: !6719)
!6737 = !DILocation(line: 3921, column: 39, scope: !6719)
!6738 = !DILocation(line: 3921, column: 10, scope: !6719)
!6739 = !DILocation(line: 3921, column: 19, scope: !6719)
!6740 = !DILocation(line: 3921, column: 28, scope: !6719)
!6741 = !DILocation(line: 3923, column: 26, scope: !6720)
!6742 = !DILocation(line: 3923, column: 35, scope: !6720)
!6743 = !DILocation(line: 3924, column: 24, scope: !6720)
!6744 = !DILocation(line: 3924, column: 33, scope: !6720)
!6745 = !DILocation(line: 3924, column: 11, scope: !6720)
!6746 = !DILocation(line: 3923, column: 41, scope: !6720)
!6747 = !DILocation(line: 3924, column: 39, scope: !6720)
!6748 = !DILocation(line: 3925, column: 26, scope: !6720)
!6749 = !DILocation(line: 3925, column: 35, scope: !6720)
!6750 = !DILocation(line: 3925, column: 11, scope: !6720)
!6751 = !DILocation(line: 3924, column: 43, scope: !6720)
!6752 = !DILocation(line: 3926, column: 24, scope: !6720)
!6753 = !DILocation(line: 3926, column: 33, scope: !6720)
!6754 = !DILocation(line: 3926, column: 11, scope: !6720)
!6755 = !DILocation(line: 3925, column: 42, scope: !6720)
!6756 = !DILocation(line: 3923, column: 7, scope: !6720)
!6757 = !DILocation(line: 3923, column: 16, scope: !6720)
!6758 = !DILocation(line: 3923, column: 23, scope: !6720)
!6759 = !DILocation(line: 3927, column: 4, scope: !6720)
!6760 = !DILocation(line: 3932, column: 27, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 3931, column: 4)
!6762 = !DILocation(line: 3932, column: 36, scope: !6761)
!6763 = !DILocation(line: 3932, column: 7, scope: !6761)
!6764 = !DILocation(line: 3932, column: 16, scope: !6761)
!6765 = !DILocation(line: 3932, column: 25, scope: !6761)
!6766 = !DILocation(line: 3933, column: 25, scope: !6761)
!6767 = !DILocation(line: 3933, column: 34, scope: !6761)
!6768 = !DILocation(line: 3933, column: 7, scope: !6761)
!6769 = !DILocation(line: 3933, column: 16, scope: !6761)
!6770 = !DILocation(line: 3933, column: 23, scope: !6761)
!6771 = !DILocation(line: 3936, column: 22, scope: !506)
!6772 = !DILocation(line: 3936, column: 31, scope: !506)
!6773 = !DILocation(line: 3936, column: 20, scope: !506)
!6774 = !DILocation(line: 3949, column: 9, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !506, file: !3, line: 3949, column: 8)
!6776 = !DILocation(line: 3949, column: 18, scope: !6775)
!6777 = !DILocation(line: 3949, column: 34, scope: !6775)
!6778 = !DILocation(line: 3949, column: 46, scope: !6775)
!6779 = !DILocation(line: 3949, column: 49, scope: !6775)
!6780 = !DILocation(line: 3949, column: 58, scope: !6775)
!6781 = !DILocation(line: 3949, column: 68, scope: !6775)
!6782 = !DILocation(line: 3949, column: 8, scope: !506)
!6783 = !DILocation(line: 3950, column: 23, scope: !6775)
!6784 = !DILocation(line: 3950, column: 7, scope: !6775)
!6785 = !DILocation(line: 3954, column: 8, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !506, file: !3, line: 3954, column: 8)
!6787 = !DILocation(line: 3954, column: 17, scope: !6786)
!6788 = !DILocation(line: 3954, column: 33, scope: !6786)
!6789 = !DILocation(line: 3954, column: 8, scope: !506)
!6790 = !DILocation(line: 3956, column: 11, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 3956, column: 11)
!6792 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 3955, column: 4)
!6793 = !DILocation(line: 3956, column: 20, scope: !6791)
!6794 = !DILocation(line: 3956, column: 31, scope: !6791)
!6795 = !DILocation(line: 3956, column: 11, scope: !6792)
!6796 = !DILocation(line: 3958, column: 14, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 3958, column: 14)
!6798 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 3957, column: 7)
!6799 = !DILocation(line: 3958, column: 23, scope: !6797)
!6800 = !DILocation(line: 3958, column: 14, scope: !6798)
!6801 = !DILocation(line: 3959, column: 29, scope: !6797)
!6802 = !DILocation(line: 3959, column: 13, scope: !6797)
!6803 = !DILocation(line: 3962, column: 29, scope: !6797)
!6804 = !DILocation(line: 3963, column: 7, scope: !6798)
!6805 = !DILocation(line: 3965, column: 16, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 3965, column: 16)
!6807 = !DILocation(line: 3965, column: 25, scope: !6806)
!6808 = !DILocation(line: 3965, column: 36, scope: !6806)
!6809 = !DILocation(line: 3965, column: 16, scope: !6791)
!6810 = !DILocation(line: 3967, column: 14, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 3967, column: 14)
!6812 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 3966, column: 7)
!6813 = !DILocation(line: 3967, column: 30, scope: !6811)
!6814 = !DILocation(line: 3967, column: 14, scope: !6812)
!6815 = !DILocation(line: 3968, column: 29, scope: !6811)
!6816 = !DILocation(line: 3968, column: 13, scope: !6811)
!6817 = !DILocation(line: 3970, column: 14, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 3970, column: 14)
!6819 = !DILocation(line: 3970, column: 23, scope: !6818)
!6820 = !DILocation(line: 3970, column: 14, scope: !6812)
!6821 = !DILocation(line: 3971, column: 29, scope: !6818)
!6822 = !DILocation(line: 3971, column: 13, scope: !6818)
!6823 = !DILocation(line: 3972, column: 7, scope: !6812)
!6824 = !DILocation(line: 3974, column: 16, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 3974, column: 16)
!6826 = !DILocation(line: 3974, column: 25, scope: !6825)
!6827 = !DILocation(line: 3974, column: 36, scope: !6825)
!6828 = !DILocation(line: 3974, column: 16, scope: !6806)
!6829 = !DILocation(line: 3976, column: 14, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 3976, column: 14)
!6831 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 3975, column: 7)
!6832 = !DILocation(line: 3976, column: 23, scope: !6830)
!6833 = !DILocation(line: 3976, column: 14, scope: !6831)
!6834 = !DILocation(line: 3978, column: 29, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 3977, column: 10)
!6836 = !DILocation(line: 3979, column: 29, scope: !6835)
!6837 = !DILocation(line: 3980, column: 10, scope: !6835)
!6838 = !DILocation(line: 3981, column: 7, scope: !6831)
!6839 = !DILocation(line: 3982, column: 4, scope: !6792)
!6840 = !DILocation(line: 3986, column: 8, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !506, file: !3, line: 3986, column: 8)
!6842 = !DILocation(line: 3986, column: 17, scope: !6841)
!6843 = !DILocation(line: 3986, column: 33, scope: !6841)
!6844 = !DILocation(line: 3986, column: 8, scope: !506)
!6845 = !DILocation(line: 3992, column: 14, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 3992, column: 14)
!6847 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 3987, column: 4)
!6848 = !DILocation(line: 3992, column: 23, scope: !6846)
!6849 = !DILocation(line: 3992, column: 39, scope: !6846)
!6850 = !DILocation(line: 3992, column: 14, scope: !6847)
!6851 = !DILocation(line: 3994, column: 17, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 3994, column: 17)
!6853 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 3993, column: 10)
!6854 = !DILocation(line: 3994, column: 26, scope: !6852)
!6855 = !DILocation(line: 3994, column: 36, scope: !6852)
!6856 = !DILocation(line: 3994, column: 17, scope: !6853)
!6857 = !DILocation(line: 3995, column: 32, scope: !6852)
!6858 = !DILocation(line: 3995, column: 16, scope: !6852)
!6859 = !DILocation(line: 3996, column: 10, scope: !6853)
!6860 = !DILocation(line: 3999, column: 10, scope: !6846)
!6861 = !DILocation(line: 3999, column: 19, scope: !6846)
!6862 = !DILocation(line: 3999, column: 35, scope: !6846)
!6863 = !DILocation(line: 4000, column: 4, scope: !6847)
!6864 = !DILocation(line: 4004, column: 8, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !506, file: !3, line: 4004, column: 8)
!6866 = !DILocation(line: 4004, column: 17, scope: !6865)
!6867 = !DILocation(line: 4004, column: 33, scope: !6865)
!6868 = !DILocation(line: 4004, column: 8, scope: !506)
!6869 = !DILocation(line: 4006, column: 11, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 4006, column: 11)
!6871 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 4005, column: 4)
!6872 = !DILocation(line: 4006, column: 20, scope: !6870)
!6873 = !DILocation(line: 4006, column: 31, scope: !6870)
!6874 = !DILocation(line: 4006, column: 11, scope: !6871)
!6875 = !DILocation(line: 4008, column: 14, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 4008, column: 14)
!6877 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 4007, column: 7)
!6878 = !DILocation(line: 4008, column: 30, scope: !6876)
!6879 = !DILocation(line: 4008, column: 14, scope: !6877)
!6880 = !DILocation(line: 4009, column: 29, scope: !6876)
!6881 = !DILocation(line: 4009, column: 13, scope: !6876)
!6882 = !DILocation(line: 4012, column: 29, scope: !6876)
!6883 = !DILocation(line: 4013, column: 7, scope: !6877)
!6884 = !DILocation(line: 4015, column: 16, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 4015, column: 16)
!6886 = !DILocation(line: 4015, column: 25, scope: !6885)
!6887 = !DILocation(line: 4015, column: 36, scope: !6885)
!6888 = !DILocation(line: 4015, column: 58, scope: !6885)
!6889 = !DILocation(line: 4016, column: 10, scope: !6885)
!6890 = !DILocation(line: 4016, column: 19, scope: !6885)
!6891 = !DILocation(line: 4016, column: 30, scope: !6885)
!6892 = !DILocation(line: 4015, column: 16, scope: !6870)
!6893 = !DILocation(line: 4018, column: 14, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 4018, column: 14)
!6895 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 4017, column: 7)
!6896 = !DILocation(line: 4018, column: 30, scope: !6894)
!6897 = !DILocation(line: 4018, column: 14, scope: !6895)
!6898 = !DILocation(line: 4019, column: 29, scope: !6894)
!6899 = !DILocation(line: 4019, column: 13, scope: !6894)
!6900 = !DILocation(line: 4022, column: 29, scope: !6894)
!6901 = !DILocation(line: 4023, column: 7, scope: !6895)
!6902 = !DILocation(line: 4024, column: 4, scope: !6871)
!6903 = !DILocation(line: 4028, column: 8, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !506, file: !3, line: 4028, column: 8)
!6905 = !DILocation(line: 4028, column: 17, scope: !6904)
!6906 = !DILocation(line: 4028, column: 33, scope: !6904)
!6907 = !DILocation(line: 4028, column: 8, scope: !506)
!6908 = !DILocation(line: 4032, column: 12, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 4032, column: 11)
!6910 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 4029, column: 4)
!6911 = !DILocation(line: 4032, column: 21, scope: !6909)
!6912 = !DILocation(line: 4032, column: 31, scope: !6909)
!6913 = !DILocation(line: 4032, column: 35, scope: !6909)
!6914 = !DILocation(line: 4032, column: 44, scope: !6909)
!6915 = !DILocation(line: 4032, column: 60, scope: !6909)
!6916 = !DILocation(line: 4032, column: 75, scope: !6909)
!6917 = !DILocation(line: 4035, column: 12, scope: !6909)
!6918 = !DILocation(line: 4035, column: 21, scope: !6909)
!6919 = !DILocation(line: 4035, column: 37, scope: !6909)
!6920 = !DILocation(line: 4035, column: 53, scope: !6909)
!6921 = !DILocation(line: 4037, column: 11, scope: !6909)
!6922 = !DILocation(line: 4037, column: 20, scope: !6909)
!6923 = !DILocation(line: 4037, column: 31, scope: !6909)
!6924 = !DILocation(line: 4032, column: 11, scope: !6910)
!6925 = !DILocation(line: 4039, column: 14, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !3, line: 4039, column: 14)
!6927 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 4038, column: 7)
!6928 = !DILocation(line: 4039, column: 30, scope: !6926)
!6929 = !DILocation(line: 4039, column: 14, scope: !6927)
!6930 = !DILocation(line: 4040, column: 29, scope: !6926)
!6931 = !DILocation(line: 4040, column: 13, scope: !6926)
!6932 = !DILocation(line: 4043, column: 29, scope: !6926)
!6933 = !DILocation(line: 4044, column: 7, scope: !6927)
!6934 = !DILocation(line: 4048, column: 14, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 4048, column: 14)
!6936 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 4047, column: 7)
!6937 = !DILocation(line: 4048, column: 30, scope: !6935)
!6938 = !DILocation(line: 4048, column: 14, scope: !6936)
!6939 = !DILocation(line: 4050, column: 17, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 4050, column: 17)
!6941 = distinct !DILexicalBlock(scope: !6935, file: !3, line: 4049, column: 10)
!6942 = !DILocation(line: 4050, column: 26, scope: !6940)
!6943 = !DILocation(line: 4050, column: 37, scope: !6940)
!6944 = !DILocation(line: 4050, column: 17, scope: !6941)
!6945 = !DILocation(line: 4051, column: 32, scope: !6940)
!6946 = !DILocation(line: 4051, column: 16, scope: !6940)
!6947 = !DILocation(line: 4054, column: 32, scope: !6940)
!6948 = !DILocation(line: 4055, column: 10, scope: !6941)
!6949 = !DILocation(line: 4057, column: 19, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6935, file: !3, line: 4057, column: 19)
!6951 = !DILocation(line: 4057, column: 28, scope: !6950)
!6952 = !DILocation(line: 4057, column: 39, scope: !6950)
!6953 = !DILocation(line: 4057, column: 19, scope: !6935)
!6954 = !DILocation(line: 4058, column: 29, scope: !6950)
!6955 = !DILocation(line: 4058, column: 13, scope: !6950)
!6956 = !DILocation(line: 4061, column: 29, scope: !6950)
!6957 = !DILocation(line: 4063, column: 4, scope: !6910)
!6958 = !DILocation(line: 4068, column: 8, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !506, file: !3, line: 4068, column: 8)
!6960 = !DILocation(line: 4068, column: 17, scope: !6959)
!6961 = !DILocation(line: 4068, column: 33, scope: !6959)
!6962 = !DILocation(line: 4068, column: 8, scope: !506)
!6963 = !DILocalVariable(name: "user_pixel_depth", scope: !6964, file: !3, line: 4070, type: !27)
!6964 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 4069, column: 4)
!6965 = !DILocation(line: 4070, column: 11, scope: !6964)
!6966 = !DILocation(line: 4070, column: 30, scope: !6964)
!6967 = !DILocation(line: 4070, column: 39, scope: !6964)
!6968 = !DILocation(line: 4071, column: 10, scope: !6964)
!6969 = !DILocation(line: 4071, column: 19, scope: !6964)
!6970 = !DILocation(line: 4070, column: 60, scope: !6964)
!6971 = !DILocation(line: 4073, column: 11, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 4073, column: 11)
!6973 = !DILocation(line: 4073, column: 30, scope: !6972)
!6974 = !DILocation(line: 4073, column: 28, scope: !6972)
!6975 = !DILocation(line: 4073, column: 11, scope: !6964)
!6976 = !DILocation(line: 4074, column: 28, scope: !6972)
!6977 = !DILocation(line: 4074, column: 26, scope: !6972)
!6978 = !DILocation(line: 4074, column: 10, scope: !6972)
!6979 = !DILocation(line: 4075, column: 4, scope: !6964)
!6980 = !DILocation(line: 4081, column: 45, scope: !506)
!6981 = !DILocation(line: 4081, column: 35, scope: !506)
!6982 = !DILocation(line: 4081, column: 4, scope: !506)
!6983 = !DILocation(line: 4081, column: 13, scope: !506)
!6984 = !DILocation(line: 4081, column: 33, scope: !506)
!6985 = !DILocation(line: 4082, column: 4, scope: !506)
!6986 = !DILocation(line: 4082, column: 13, scope: !506)
!6987 = !DILocation(line: 4082, column: 37, scope: !506)
!6988 = !DILocation(line: 4087, column: 18, scope: !506)
!6989 = !DILocation(line: 4087, column: 27, scope: !506)
!6990 = !DILocation(line: 4087, column: 33, scope: !506)
!6991 = !DILocation(line: 4087, column: 38, scope: !506)
!6992 = !DILocation(line: 4087, column: 16, scope: !506)
!6993 = !DILocation(line: 4087, column: 14, scope: !506)
!6994 = !DILocation(line: 4091, column: 16, scope: !506)
!6995 = !DILocation(line: 4091, column: 57, scope: !506)
!6996 = !DILocation(line: 4092, column: 14, scope: !506)
!6997 = !DILocation(line: 4092, column: 30, scope: !506)
!6998 = !DILocation(line: 4092, column: 35, scope: !506)
!6999 = !DILocation(line: 4092, column: 12, scope: !506)
!7000 = !DILocation(line: 4092, column: 10, scope: !506)
!7001 = !DILocation(line: 4091, column: 14, scope: !506)
!7002 = !DILocation(line: 4099, column: 8, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !506, file: !3, line: 4099, column: 8)
!7004 = !DILocation(line: 4099, column: 18, scope: !7003)
!7005 = !DILocation(line: 4099, column: 25, scope: !7003)
!7006 = !DILocation(line: 4099, column: 34, scope: !7003)
!7007 = !DILocation(line: 4099, column: 23, scope: !7003)
!7008 = !DILocation(line: 4099, column: 8, scope: !506)
!7009 = !DILocation(line: 4101, column: 15, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 4100, column: 4)
!7011 = !DILocation(line: 4101, column: 24, scope: !7010)
!7012 = !DILocation(line: 4101, column: 33, scope: !7010)
!7013 = !DILocation(line: 4101, column: 6, scope: !7010)
!7014 = !DILocation(line: 4102, column: 15, scope: !7010)
!7015 = !DILocation(line: 4102, column: 24, scope: !7010)
!7016 = !DILocation(line: 4102, column: 33, scope: !7010)
!7017 = !DILocation(line: 4102, column: 6, scope: !7010)
!7018 = !DILocation(line: 4104, column: 10, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 4104, column: 10)
!7020 = !DILocation(line: 4104, column: 19, scope: !7019)
!7021 = !DILocation(line: 4104, column: 10, scope: !7010)
!7022 = !DILocation(line: 4105, column: 54, scope: !7019)
!7023 = !DILocation(line: 4106, column: 13, scope: !7019)
!7024 = !DILocation(line: 4106, column: 23, scope: !7019)
!7025 = !DILocation(line: 4105, column: 43, scope: !7019)
!7026 = !DILocation(line: 4105, column: 9, scope: !7019)
!7027 = !DILocation(line: 4105, column: 18, scope: !7019)
!7028 = !DILocation(line: 4105, column: 30, scope: !7019)
!7029 = !DILocation(line: 4109, column: 54, scope: !7019)
!7030 = !DILocation(line: 4109, column: 63, scope: !7019)
!7031 = !DILocation(line: 4109, column: 73, scope: !7019)
!7032 = !DILocation(line: 4109, column: 43, scope: !7019)
!7033 = !DILocation(line: 4109, column: 9, scope: !7019)
!7034 = !DILocation(line: 4109, column: 18, scope: !7019)
!7035 = !DILocation(line: 4109, column: 30, scope: !7019)
!7036 = !DILocation(line: 4111, column: 52, scope: !7010)
!7037 = !DILocation(line: 4111, column: 61, scope: !7010)
!7038 = !DILocation(line: 4111, column: 71, scope: !7010)
!7039 = !DILocation(line: 4111, column: 41, scope: !7010)
!7040 = !DILocation(line: 4111, column: 6, scope: !7010)
!7041 = !DILocation(line: 4111, column: 15, scope: !7010)
!7042 = !DILocation(line: 4111, column: 28, scope: !7010)
!7043 = !DILocation(line: 4133, column: 25, scope: !7010)
!7044 = !DILocation(line: 4133, column: 34, scope: !7010)
!7045 = !DILocation(line: 4133, column: 46, scope: !7010)
!7046 = !DILocation(line: 4133, column: 6, scope: !7010)
!7047 = !DILocation(line: 4133, column: 15, scope: !7010)
!7048 = !DILocation(line: 4133, column: 23, scope: !7010)
!7049 = !DILocation(line: 4134, column: 26, scope: !7010)
!7050 = !DILocation(line: 4134, column: 35, scope: !7010)
!7051 = !DILocation(line: 4134, column: 48, scope: !7010)
!7052 = !DILocation(line: 4134, column: 6, scope: !7010)
!7053 = !DILocation(line: 4134, column: 15, scope: !7010)
!7054 = !DILocation(line: 4134, column: 24, scope: !7010)
!7055 = !DILocation(line: 4136, column: 38, scope: !7010)
!7056 = !DILocation(line: 4136, column: 48, scope: !7010)
!7057 = !DILocation(line: 4136, column: 6, scope: !7010)
!7058 = !DILocation(line: 4136, column: 15, scope: !7010)
!7059 = !DILocation(line: 4136, column: 36, scope: !7010)
!7060 = !DILocation(line: 4137, column: 4, scope: !7010)
!7061 = !DILocation(line: 4144, column: 8, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !506, file: !3, line: 4144, column: 8)
!7063 = !DILocation(line: 4144, column: 17, scope: !7062)
!7064 = !DILocation(line: 4144, column: 26, scope: !7062)
!7065 = !DILocation(line: 4144, column: 8, scope: !506)
!7066 = !DILocation(line: 4145, column: 17, scope: !7062)
!7067 = !DILocation(line: 4145, column: 7, scope: !7062)
!7068 = !DILocation(line: 4147, column: 15, scope: !506)
!7069 = !DILocation(line: 4147, column: 24, scope: !506)
!7070 = !DILocation(line: 4147, column: 37, scope: !506)
!7071 = !DILocation(line: 4147, column: 46, scope: !506)
!7072 = !DILocation(line: 4147, column: 55, scope: !506)
!7073 = !DILocation(line: 4147, column: 4, scope: !506)
!7074 = !DILocation(line: 4157, column: 4, scope: !506)
!7075 = !DILocation(line: 4157, column: 13, scope: !506)
!7076 = !DILocation(line: 4157, column: 19, scope: !506)
!7077 = !DILocation(line: 4158, column: 1, scope: !506)
!7078 = distinct !DISubprogram(name: "png_read_filter_row_sub", scope: !3, file: !3, line: 3506, type: !459, scopeLine: 3508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !466, retainedNodes: !467)
!7079 = !DILocalVariable(name: "row_info", arg: 1, scope: !7078, file: !3, line: 3506, type: !79)
!7080 = !DILocation(line: 3506, column: 39, scope: !7078)
!7081 = !DILocalVariable(name: "row", arg: 2, scope: !7078, file: !3, line: 3506, type: !65)
!7082 = !DILocation(line: 3506, column: 59, scope: !7078)
!7083 = !DILocalVariable(name: "prev_row", arg: 3, scope: !7078, file: !3, line: 3507, type: !461)
!7084 = !DILocation(line: 3507, column: 20, scope: !7078)
!7085 = !DILocalVariable(name: "i", scope: !7078, file: !3, line: 3509, type: !69)
!7086 = !DILocation(line: 3509, column: 15, scope: !7078)
!7087 = !DILocalVariable(name: "istop", scope: !7078, file: !3, line: 3510, type: !69)
!7088 = !DILocation(line: 3510, column: 15, scope: !7078)
!7089 = !DILocation(line: 3510, column: 23, scope: !7078)
!7090 = !DILocation(line: 3510, column: 33, scope: !7078)
!7091 = !DILocalVariable(name: "bpp", scope: !7078, file: !3, line: 3511, type: !86)
!7092 = !DILocation(line: 3511, column: 17, scope: !7078)
!7093 = !DILocation(line: 3511, column: 24, scope: !7078)
!7094 = !DILocation(line: 3511, column: 34, scope: !7078)
!7095 = !DILocation(line: 3511, column: 46, scope: !7078)
!7096 = !DILocation(line: 3511, column: 51, scope: !7078)
!7097 = !DILocalVariable(name: "rp", scope: !7078, file: !3, line: 3512, type: !65)
!7098 = !DILocation(line: 3512, column: 14, scope: !7078)
!7099 = !DILocation(line: 3512, column: 19, scope: !7078)
!7100 = !DILocation(line: 3512, column: 25, scope: !7078)
!7101 = !DILocation(line: 3512, column: 23, scope: !7078)
!7102 = !DILocation(line: 3514, column: 4, scope: !7078)
!7103 = !DILocation(line: 3516, column: 13, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 3516, column: 4)
!7105 = !DILocation(line: 3516, column: 11, scope: !7104)
!7106 = !DILocation(line: 3516, column: 9, scope: !7104)
!7107 = !DILocation(line: 3516, column: 18, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7104, file: !3, line: 3516, column: 4)
!7109 = !DILocation(line: 3516, column: 22, scope: !7108)
!7110 = !DILocation(line: 3516, column: 20, scope: !7108)
!7111 = !DILocation(line: 3516, column: 4, scope: !7104)
!7112 = !DILocation(line: 3518, column: 32, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 3517, column: 4)
!7114 = !DILocation(line: 3518, column: 31, scope: !7113)
!7115 = !DILocation(line: 3518, column: 25, scope: !7113)
!7116 = !DILocation(line: 3518, column: 46, scope: !7113)
!7117 = !DILocation(line: 3518, column: 49, scope: !7113)
!7118 = !DILocation(line: 3518, column: 48, scope: !7113)
!7119 = !DILocation(line: 3518, column: 44, scope: !7113)
!7120 = !DILocation(line: 3518, column: 38, scope: !7113)
!7121 = !DILocation(line: 3518, column: 36, scope: !7113)
!7122 = !DILocation(line: 3518, column: 56, scope: !7113)
!7123 = !DILocation(line: 3518, column: 13, scope: !7113)
!7124 = !DILocation(line: 3518, column: 8, scope: !7113)
!7125 = !DILocation(line: 3518, column: 11, scope: !7113)
!7126 = !DILocation(line: 3519, column: 9, scope: !7113)
!7127 = !DILocation(line: 3520, column: 4, scope: !7113)
!7128 = !DILocation(line: 3516, column: 30, scope: !7108)
!7129 = !DILocation(line: 3516, column: 4, scope: !7108)
!7130 = distinct !{!7130, !7111, !7131}
!7131 = !DILocation(line: 3520, column: 4, scope: !7104)
!7132 = !DILocation(line: 3521, column: 1, scope: !7078)
!7133 = distinct !DISubprogram(name: "png_read_filter_row_up", scope: !3, file: !3, line: 3524, type: !459, scopeLine: 3526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !466, retainedNodes: !467)
!7134 = !DILocalVariable(name: "row_info", arg: 1, scope: !7133, file: !3, line: 3524, type: !79)
!7135 = !DILocation(line: 3524, column: 38, scope: !7133)
!7136 = !DILocalVariable(name: "row", arg: 2, scope: !7133, file: !3, line: 3524, type: !65)
!7137 = !DILocation(line: 3524, column: 58, scope: !7133)
!7138 = !DILocalVariable(name: "prev_row", arg: 3, scope: !7133, file: !3, line: 3525, type: !461)
!7139 = !DILocation(line: 3525, column: 20, scope: !7133)
!7140 = !DILocalVariable(name: "i", scope: !7133, file: !3, line: 3527, type: !69)
!7141 = !DILocation(line: 3527, column: 15, scope: !7133)
!7142 = !DILocalVariable(name: "istop", scope: !7133, file: !3, line: 3528, type: !69)
!7143 = !DILocation(line: 3528, column: 15, scope: !7133)
!7144 = !DILocation(line: 3528, column: 23, scope: !7133)
!7145 = !DILocation(line: 3528, column: 33, scope: !7133)
!7146 = !DILocalVariable(name: "rp", scope: !7133, file: !3, line: 3529, type: !65)
!7147 = !DILocation(line: 3529, column: 14, scope: !7133)
!7148 = !DILocation(line: 3529, column: 19, scope: !7133)
!7149 = !DILocalVariable(name: "pp", scope: !7133, file: !3, line: 3530, type: !461)
!7150 = !DILocation(line: 3530, column: 20, scope: !7133)
!7151 = !DILocation(line: 3530, column: 25, scope: !7133)
!7152 = !DILocation(line: 3532, column: 11, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 3532, column: 4)
!7154 = !DILocation(line: 3532, column: 9, scope: !7153)
!7155 = !DILocation(line: 3532, column: 16, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 3532, column: 4)
!7157 = !DILocation(line: 3532, column: 20, scope: !7156)
!7158 = !DILocation(line: 3532, column: 18, scope: !7156)
!7159 = !DILocation(line: 3532, column: 4, scope: !7153)
!7160 = !DILocation(line: 3534, column: 32, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 3533, column: 4)
!7162 = !DILocation(line: 3534, column: 31, scope: !7161)
!7163 = !DILocation(line: 3534, column: 25, scope: !7161)
!7164 = !DILocation(line: 3534, column: 47, scope: !7161)
!7165 = !DILocation(line: 3534, column: 44, scope: !7161)
!7166 = !DILocation(line: 3534, column: 38, scope: !7161)
!7167 = !DILocation(line: 3534, column: 36, scope: !7161)
!7168 = !DILocation(line: 3534, column: 52, scope: !7161)
!7169 = !DILocation(line: 3534, column: 13, scope: !7161)
!7170 = !DILocation(line: 3534, column: 8, scope: !7161)
!7171 = !DILocation(line: 3534, column: 11, scope: !7161)
!7172 = !DILocation(line: 3535, column: 9, scope: !7161)
!7173 = !DILocation(line: 3536, column: 4, scope: !7161)
!7174 = !DILocation(line: 3532, column: 28, scope: !7156)
!7175 = !DILocation(line: 3532, column: 4, scope: !7156)
!7176 = distinct !{!7176, !7159, !7177}
!7177 = !DILocation(line: 3536, column: 4, scope: !7153)
!7178 = !DILocation(line: 3537, column: 1, scope: !7133)
!7179 = distinct !DISubprogram(name: "png_read_filter_row_avg", scope: !3, file: !3, line: 3540, type: !459, scopeLine: 3542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !466, retainedNodes: !467)
!7180 = !DILocalVariable(name: "row_info", arg: 1, scope: !7179, file: !3, line: 3540, type: !79)
!7181 = !DILocation(line: 3540, column: 39, scope: !7179)
!7182 = !DILocalVariable(name: "row", arg: 2, scope: !7179, file: !3, line: 3540, type: !65)
!7183 = !DILocation(line: 3540, column: 59, scope: !7179)
!7184 = !DILocalVariable(name: "prev_row", arg: 3, scope: !7179, file: !3, line: 3541, type: !461)
!7185 = !DILocation(line: 3541, column: 20, scope: !7179)
!7186 = !DILocalVariable(name: "i", scope: !7179, file: !3, line: 3543, type: !69)
!7187 = !DILocation(line: 3543, column: 15, scope: !7179)
!7188 = !DILocalVariable(name: "rp", scope: !7179, file: !3, line: 3544, type: !65)
!7189 = !DILocation(line: 3544, column: 14, scope: !7179)
!7190 = !DILocation(line: 3544, column: 19, scope: !7179)
!7191 = !DILocalVariable(name: "pp", scope: !7179, file: !3, line: 3545, type: !461)
!7192 = !DILocation(line: 3545, column: 20, scope: !7179)
!7193 = !DILocation(line: 3545, column: 25, scope: !7179)
!7194 = !DILocalVariable(name: "bpp", scope: !7179, file: !3, line: 3546, type: !86)
!7195 = !DILocation(line: 3546, column: 17, scope: !7179)
!7196 = !DILocation(line: 3546, column: 24, scope: !7179)
!7197 = !DILocation(line: 3546, column: 34, scope: !7179)
!7198 = !DILocation(line: 3546, column: 46, scope: !7179)
!7199 = !DILocation(line: 3546, column: 51, scope: !7179)
!7200 = !DILocalVariable(name: "istop", scope: !7179, file: !3, line: 3547, type: !69)
!7201 = !DILocation(line: 3547, column: 15, scope: !7179)
!7202 = !DILocation(line: 3547, column: 23, scope: !7179)
!7203 = !DILocation(line: 3547, column: 33, scope: !7179)
!7204 = !DILocation(line: 3547, column: 44, scope: !7179)
!7205 = !DILocation(line: 3547, column: 42, scope: !7179)
!7206 = !DILocation(line: 3549, column: 11, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 3549, column: 4)
!7208 = !DILocation(line: 3549, column: 9, scope: !7207)
!7209 = !DILocation(line: 3549, column: 16, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 3549, column: 4)
!7211 = !DILocation(line: 3549, column: 20, scope: !7210)
!7212 = !DILocation(line: 3549, column: 18, scope: !7210)
!7213 = !DILocation(line: 3549, column: 4, scope: !7207)
!7214 = !DILocation(line: 3551, column: 32, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 3550, column: 4)
!7216 = !DILocation(line: 3551, column: 31, scope: !7215)
!7217 = !DILocation(line: 3551, column: 25, scope: !7215)
!7218 = !DILocation(line: 3552, column: 20, scope: !7215)
!7219 = !DILocation(line: 3552, column: 17, scope: !7215)
!7220 = !DILocation(line: 3552, column: 11, scope: !7215)
!7221 = !DILocation(line: 3552, column: 24, scope: !7215)
!7222 = !DILocation(line: 3551, column: 36, scope: !7215)
!7223 = !DILocation(line: 3552, column: 31, scope: !7215)
!7224 = !DILocation(line: 3551, column: 13, scope: !7215)
!7225 = !DILocation(line: 3551, column: 8, scope: !7215)
!7226 = !DILocation(line: 3551, column: 11, scope: !7215)
!7227 = !DILocation(line: 3554, column: 9, scope: !7215)
!7228 = !DILocation(line: 3555, column: 4, scope: !7215)
!7229 = !DILocation(line: 3549, column: 26, scope: !7210)
!7230 = !DILocation(line: 3549, column: 4, scope: !7210)
!7231 = distinct !{!7231, !7213, !7232}
!7232 = !DILocation(line: 3555, column: 4, scope: !7207)
!7233 = !DILocation(line: 3557, column: 11, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 3557, column: 4)
!7235 = !DILocation(line: 3557, column: 9, scope: !7234)
!7236 = !DILocation(line: 3557, column: 16, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 3557, column: 4)
!7238 = !DILocation(line: 3557, column: 20, scope: !7237)
!7239 = !DILocation(line: 3557, column: 18, scope: !7237)
!7240 = !DILocation(line: 3557, column: 4, scope: !7234)
!7241 = !DILocation(line: 3559, column: 32, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 3558, column: 4)
!7243 = !DILocation(line: 3559, column: 31, scope: !7242)
!7244 = !DILocation(line: 3559, column: 25, scope: !7242)
!7245 = !DILocation(line: 3560, column: 19, scope: !7242)
!7246 = !DILocation(line: 3560, column: 16, scope: !7242)
!7247 = !DILocation(line: 3560, column: 26, scope: !7242)
!7248 = !DILocation(line: 3560, column: 29, scope: !7242)
!7249 = !DILocation(line: 3560, column: 28, scope: !7242)
!7250 = !DILocation(line: 3560, column: 24, scope: !7242)
!7251 = !DILocation(line: 3560, column: 22, scope: !7242)
!7252 = !DILocation(line: 3560, column: 35, scope: !7242)
!7253 = !DILocation(line: 3559, column: 36, scope: !7242)
!7254 = !DILocation(line: 3560, column: 41, scope: !7242)
!7255 = !DILocation(line: 3559, column: 13, scope: !7242)
!7256 = !DILocation(line: 3559, column: 8, scope: !7242)
!7257 = !DILocation(line: 3559, column: 11, scope: !7242)
!7258 = !DILocation(line: 3562, column: 9, scope: !7242)
!7259 = !DILocation(line: 3563, column: 4, scope: !7242)
!7260 = !DILocation(line: 3557, column: 28, scope: !7237)
!7261 = !DILocation(line: 3557, column: 4, scope: !7237)
!7262 = distinct !{!7262, !7240, !7263}
!7263 = !DILocation(line: 3563, column: 4, scope: !7234)
!7264 = !DILocation(line: 3564, column: 1, scope: !7179)
!7265 = distinct !DISubprogram(name: "png_read_filter_row_paeth_1byte_pixel", scope: !3, file: !3, line: 3567, type: !459, scopeLine: 3569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !466, retainedNodes: !467)
!7266 = !DILocalVariable(name: "row_info", arg: 1, scope: !7265, file: !3, line: 3567, type: !79)
!7267 = !DILocation(line: 3567, column: 53, scope: !7265)
!7268 = !DILocalVariable(name: "row", arg: 2, scope: !7265, file: !3, line: 3567, type: !65)
!7269 = !DILocation(line: 3567, column: 73, scope: !7265)
!7270 = !DILocalVariable(name: "prev_row", arg: 3, scope: !7265, file: !3, line: 3568, type: !461)
!7271 = !DILocation(line: 3568, column: 20, scope: !7265)
!7272 = !DILocalVariable(name: "rp_end", scope: !7265, file: !3, line: 3570, type: !65)
!7273 = !DILocation(line: 3570, column: 14, scope: !7265)
!7274 = !DILocation(line: 3570, column: 23, scope: !7265)
!7275 = !DILocation(line: 3570, column: 29, scope: !7265)
!7276 = !DILocation(line: 3570, column: 39, scope: !7265)
!7277 = !DILocation(line: 3570, column: 27, scope: !7265)
!7278 = !DILocalVariable(name: "a", scope: !7265, file: !3, line: 3571, type: !27)
!7279 = !DILocation(line: 3571, column: 8, scope: !7265)
!7280 = !DILocalVariable(name: "c", scope: !7265, file: !3, line: 3571, type: !27)
!7281 = !DILocation(line: 3571, column: 11, scope: !7265)
!7282 = !DILocation(line: 3574, column: 17, scope: !7265)
!7283 = !DILocation(line: 3574, column: 8, scope: !7265)
!7284 = !DILocation(line: 3574, column: 6, scope: !7265)
!7285 = !DILocation(line: 3575, column: 9, scope: !7265)
!7286 = !DILocation(line: 3575, column: 8, scope: !7265)
!7287 = !DILocation(line: 3575, column: 15, scope: !7265)
!7288 = !DILocation(line: 3575, column: 13, scope: !7265)
!7289 = !DILocation(line: 3575, column: 6, scope: !7265)
!7290 = !DILocation(line: 3576, column: 23, scope: !7265)
!7291 = !DILocation(line: 3576, column: 13, scope: !7265)
!7292 = !DILocation(line: 3576, column: 8, scope: !7265)
!7293 = !DILocation(line: 3576, column: 11, scope: !7265)
!7294 = !DILocation(line: 3579, column: 4, scope: !7265)
!7295 = !DILocation(line: 3579, column: 11, scope: !7265)
!7296 = !DILocation(line: 3579, column: 17, scope: !7265)
!7297 = !DILocation(line: 3579, column: 15, scope: !7265)
!7298 = !DILocalVariable(name: "b", scope: !7299, file: !3, line: 3581, type: !27)
!7299 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 3580, column: 4)
!7300 = !DILocation(line: 3581, column: 11, scope: !7299)
!7301 = !DILocalVariable(name: "pa", scope: !7299, file: !3, line: 3581, type: !27)
!7302 = !DILocation(line: 3581, column: 14, scope: !7299)
!7303 = !DILocalVariable(name: "pb", scope: !7299, file: !3, line: 3581, type: !27)
!7304 = !DILocation(line: 3581, column: 18, scope: !7299)
!7305 = !DILocalVariable(name: "pc", scope: !7299, file: !3, line: 3581, type: !27)
!7306 = !DILocation(line: 3581, column: 22, scope: !7299)
!7307 = !DILocalVariable(name: "p", scope: !7299, file: !3, line: 3581, type: !27)
!7308 = !DILocation(line: 3581, column: 26, scope: !7299)
!7309 = !DILocation(line: 3583, column: 9, scope: !7299)
!7310 = !DILocation(line: 3584, column: 20, scope: !7299)
!7311 = !DILocation(line: 3584, column: 11, scope: !7299)
!7312 = !DILocation(line: 3584, column: 9, scope: !7299)
!7313 = !DILocation(line: 3586, column: 11, scope: !7299)
!7314 = !DILocation(line: 3586, column: 15, scope: !7299)
!7315 = !DILocation(line: 3586, column: 13, scope: !7299)
!7316 = !DILocation(line: 3586, column: 9, scope: !7299)
!7317 = !DILocation(line: 3587, column: 12, scope: !7299)
!7318 = !DILocation(line: 3587, column: 16, scope: !7299)
!7319 = !DILocation(line: 3587, column: 14, scope: !7299)
!7320 = !DILocation(line: 3587, column: 10, scope: !7299)
!7321 = !DILocation(line: 3594, column: 15, scope: !7299)
!7322 = !DILocation(line: 3594, column: 17, scope: !7299)
!7323 = !DILocation(line: 3594, column: 24, scope: !7299)
!7324 = !DILocation(line: 3594, column: 23, scope: !7299)
!7325 = !DILocation(line: 3594, column: 28, scope: !7299)
!7326 = !DILocation(line: 3594, column: 13, scope: !7299)
!7327 = !DILocation(line: 3595, column: 15, scope: !7299)
!7328 = !DILocation(line: 3595, column: 18, scope: !7299)
!7329 = !DILocation(line: 3595, column: 25, scope: !7299)
!7330 = !DILocation(line: 3595, column: 24, scope: !7299)
!7331 = !DILocation(line: 3595, column: 30, scope: !7299)
!7332 = !DILocation(line: 3595, column: 13, scope: !7299)
!7333 = !DILocation(line: 3596, column: 16, scope: !7299)
!7334 = !DILocation(line: 3596, column: 20, scope: !7299)
!7335 = !DILocation(line: 3596, column: 18, scope: !7299)
!7336 = !DILocation(line: 3596, column: 24, scope: !7299)
!7337 = !DILocation(line: 3596, column: 15, scope: !7299)
!7338 = !DILocation(line: 3596, column: 32, scope: !7299)
!7339 = !DILocation(line: 3596, column: 36, scope: !7299)
!7340 = !DILocation(line: 3596, column: 34, scope: !7299)
!7341 = !DILocation(line: 3596, column: 30, scope: !7299)
!7342 = !DILocation(line: 3596, column: 42, scope: !7299)
!7343 = !DILocation(line: 3596, column: 46, scope: !7299)
!7344 = !DILocation(line: 3596, column: 44, scope: !7299)
!7345 = !DILocation(line: 3596, column: 13, scope: !7299)
!7346 = !DILocation(line: 3602, column: 11, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 3602, column: 11)
!7348 = !DILocation(line: 3602, column: 16, scope: !7347)
!7349 = !DILocation(line: 3602, column: 14, scope: !7347)
!7350 = !DILocation(line: 3602, column: 11, scope: !7299)
!7351 = !DILocation(line: 3602, column: 25, scope: !7347)
!7352 = !DILocation(line: 3602, column: 23, scope: !7347)
!7353 = !DILocation(line: 3602, column: 33, scope: !7347)
!7354 = !DILocation(line: 3602, column: 31, scope: !7347)
!7355 = !DILocation(line: 3602, column: 20, scope: !7347)
!7356 = !DILocation(line: 3603, column: 11, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 3603, column: 11)
!7358 = !DILocation(line: 3603, column: 16, scope: !7357)
!7359 = !DILocation(line: 3603, column: 14, scope: !7357)
!7360 = !DILocation(line: 3603, column: 11, scope: !7299)
!7361 = !DILocation(line: 3603, column: 24, scope: !7357)
!7362 = !DILocation(line: 3603, column: 22, scope: !7357)
!7363 = !DILocation(line: 3603, column: 20, scope: !7357)
!7364 = !DILocation(line: 3608, column: 11, scope: !7299)
!7365 = !DILocation(line: 3608, column: 9, scope: !7299)
!7366 = !DILocation(line: 3609, column: 13, scope: !7299)
!7367 = !DILocation(line: 3609, column: 12, scope: !7299)
!7368 = !DILocation(line: 3609, column: 9, scope: !7299)
!7369 = !DILocation(line: 3610, column: 26, scope: !7299)
!7370 = !DILocation(line: 3610, column: 16, scope: !7299)
!7371 = !DILocation(line: 3610, column: 11, scope: !7299)
!7372 = !DILocation(line: 3610, column: 14, scope: !7299)
!7373 = distinct !{!7373, !7294, !7374}
!7374 = !DILocation(line: 3611, column: 4, scope: !7265)
!7375 = !DILocation(line: 3612, column: 1, scope: !7265)
!7376 = distinct !DISubprogram(name: "png_read_filter_row_paeth_multibyte_pixel", scope: !3, file: !3, line: 3615, type: !459, scopeLine: 3617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !466, retainedNodes: !467)
!7377 = !DILocalVariable(name: "row_info", arg: 1, scope: !7376, file: !3, line: 3615, type: !79)
!7378 = !DILocation(line: 3615, column: 57, scope: !7376)
!7379 = !DILocalVariable(name: "row", arg: 2, scope: !7376, file: !3, line: 3615, type: !65)
!7380 = !DILocation(line: 3615, column: 77, scope: !7376)
!7381 = !DILocalVariable(name: "prev_row", arg: 3, scope: !7376, file: !3, line: 3616, type: !461)
!7382 = !DILocation(line: 3616, column: 20, scope: !7376)
!7383 = !DILocalVariable(name: "bpp", scope: !7376, file: !3, line: 3618, type: !27)
!7384 = !DILocation(line: 3618, column: 8, scope: !7376)
!7385 = !DILocation(line: 3618, column: 15, scope: !7376)
!7386 = !DILocation(line: 3618, column: 25, scope: !7376)
!7387 = !DILocation(line: 3618, column: 37, scope: !7376)
!7388 = !DILocation(line: 3618, column: 42, scope: !7376)
!7389 = !DILocalVariable(name: "rp_end", scope: !7376, file: !3, line: 3619, type: !65)
!7390 = !DILocation(line: 3619, column: 14, scope: !7376)
!7391 = !DILocation(line: 3619, column: 23, scope: !7376)
!7392 = !DILocation(line: 3619, column: 29, scope: !7376)
!7393 = !DILocation(line: 3619, column: 27, scope: !7376)
!7394 = !DILocation(line: 3624, column: 4, scope: !7376)
!7395 = !DILocation(line: 3624, column: 11, scope: !7376)
!7396 = !DILocation(line: 3624, column: 17, scope: !7376)
!7397 = !DILocation(line: 3624, column: 15, scope: !7376)
!7398 = !DILocalVariable(name: "a", scope: !7399, file: !3, line: 3626, type: !27)
!7399 = distinct !DILexicalBlock(scope: !7376, file: !3, line: 3625, column: 4)
!7400 = !DILocation(line: 3626, column: 11, scope: !7399)
!7401 = !DILocation(line: 3626, column: 16, scope: !7399)
!7402 = !DILocation(line: 3626, column: 15, scope: !7399)
!7403 = !DILocation(line: 3626, column: 31, scope: !7399)
!7404 = !DILocation(line: 3626, column: 22, scope: !7399)
!7405 = !DILocation(line: 3626, column: 20, scope: !7399)
!7406 = !DILocation(line: 3627, column: 26, scope: !7399)
!7407 = !DILocation(line: 3627, column: 16, scope: !7399)
!7408 = !DILocation(line: 3627, column: 11, scope: !7399)
!7409 = !DILocation(line: 3627, column: 14, scope: !7399)
!7410 = distinct !{!7410, !7394, !7411}
!7411 = !DILocation(line: 3628, column: 4, scope: !7376)
!7412 = !DILocation(line: 3631, column: 14, scope: !7376)
!7413 = !DILocation(line: 3631, column: 24, scope: !7376)
!7414 = !DILocation(line: 3631, column: 35, scope: !7376)
!7415 = !DILocation(line: 3631, column: 33, scope: !7376)
!7416 = !DILocation(line: 3631, column: 11, scope: !7376)
!7417 = !DILocation(line: 3633, column: 4, scope: !7376)
!7418 = !DILocation(line: 3633, column: 11, scope: !7376)
!7419 = !DILocation(line: 3633, column: 17, scope: !7376)
!7420 = !DILocation(line: 3633, column: 15, scope: !7376)
!7421 = !DILocalVariable(name: "a", scope: !7422, file: !3, line: 3635, type: !27)
!7422 = distinct !DILexicalBlock(scope: !7376, file: !3, line: 3634, column: 4)
!7423 = !DILocation(line: 3635, column: 11, scope: !7422)
!7424 = !DILocalVariable(name: "b", scope: !7422, file: !3, line: 3635, type: !27)
!7425 = !DILocation(line: 3635, column: 14, scope: !7422)
!7426 = !DILocalVariable(name: "c", scope: !7422, file: !3, line: 3635, type: !27)
!7427 = !DILocation(line: 3635, column: 17, scope: !7422)
!7428 = !DILocalVariable(name: "pa", scope: !7422, file: !3, line: 3635, type: !27)
!7429 = !DILocation(line: 3635, column: 20, scope: !7422)
!7430 = !DILocalVariable(name: "pb", scope: !7422, file: !3, line: 3635, type: !27)
!7431 = !DILocation(line: 3635, column: 24, scope: !7422)
!7432 = !DILocalVariable(name: "pc", scope: !7422, file: !3, line: 3635, type: !27)
!7433 = !DILocation(line: 3635, column: 28, scope: !7422)
!7434 = !DILocalVariable(name: "p", scope: !7422, file: !3, line: 3635, type: !27)
!7435 = !DILocation(line: 3635, column: 32, scope: !7422)
!7436 = !DILocation(line: 3637, column: 13, scope: !7422)
!7437 = !DILocation(line: 3637, column: 24, scope: !7422)
!7438 = !DILocation(line: 3637, column: 22, scope: !7422)
!7439 = !DILocation(line: 3637, column: 11, scope: !7422)
!7440 = !DILocation(line: 3637, column: 9, scope: !7422)
!7441 = !DILocation(line: 3638, column: 13, scope: !7422)
!7442 = !DILocation(line: 3638, column: 19, scope: !7422)
!7443 = !DILocation(line: 3638, column: 17, scope: !7422)
!7444 = !DILocation(line: 3638, column: 11, scope: !7422)
!7445 = !DILocation(line: 3638, column: 9, scope: !7422)
!7446 = !DILocation(line: 3639, column: 20, scope: !7422)
!7447 = !DILocation(line: 3639, column: 11, scope: !7422)
!7448 = !DILocation(line: 3639, column: 9, scope: !7422)
!7449 = !DILocation(line: 3641, column: 11, scope: !7422)
!7450 = !DILocation(line: 3641, column: 15, scope: !7422)
!7451 = !DILocation(line: 3641, column: 13, scope: !7422)
!7452 = !DILocation(line: 3641, column: 9, scope: !7422)
!7453 = !DILocation(line: 3642, column: 12, scope: !7422)
!7454 = !DILocation(line: 3642, column: 16, scope: !7422)
!7455 = !DILocation(line: 3642, column: 14, scope: !7422)
!7456 = !DILocation(line: 3642, column: 10, scope: !7422)
!7457 = !DILocation(line: 3649, column: 15, scope: !7422)
!7458 = !DILocation(line: 3649, column: 17, scope: !7422)
!7459 = !DILocation(line: 3649, column: 24, scope: !7422)
!7460 = !DILocation(line: 3649, column: 23, scope: !7422)
!7461 = !DILocation(line: 3649, column: 28, scope: !7422)
!7462 = !DILocation(line: 3649, column: 13, scope: !7422)
!7463 = !DILocation(line: 3650, column: 15, scope: !7422)
!7464 = !DILocation(line: 3650, column: 18, scope: !7422)
!7465 = !DILocation(line: 3650, column: 25, scope: !7422)
!7466 = !DILocation(line: 3650, column: 24, scope: !7422)
!7467 = !DILocation(line: 3650, column: 30, scope: !7422)
!7468 = !DILocation(line: 3650, column: 13, scope: !7422)
!7469 = !DILocation(line: 3651, column: 16, scope: !7422)
!7470 = !DILocation(line: 3651, column: 20, scope: !7422)
!7471 = !DILocation(line: 3651, column: 18, scope: !7422)
!7472 = !DILocation(line: 3651, column: 24, scope: !7422)
!7473 = !DILocation(line: 3651, column: 15, scope: !7422)
!7474 = !DILocation(line: 3651, column: 32, scope: !7422)
!7475 = !DILocation(line: 3651, column: 36, scope: !7422)
!7476 = !DILocation(line: 3651, column: 34, scope: !7422)
!7477 = !DILocation(line: 3651, column: 30, scope: !7422)
!7478 = !DILocation(line: 3651, column: 42, scope: !7422)
!7479 = !DILocation(line: 3651, column: 46, scope: !7422)
!7480 = !DILocation(line: 3651, column: 44, scope: !7422)
!7481 = !DILocation(line: 3651, column: 13, scope: !7422)
!7482 = !DILocation(line: 3654, column: 11, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 3654, column: 11)
!7484 = !DILocation(line: 3654, column: 16, scope: !7483)
!7485 = !DILocation(line: 3654, column: 14, scope: !7483)
!7486 = !DILocation(line: 3654, column: 11, scope: !7422)
!7487 = !DILocation(line: 3654, column: 25, scope: !7483)
!7488 = !DILocation(line: 3654, column: 23, scope: !7483)
!7489 = !DILocation(line: 3654, column: 33, scope: !7483)
!7490 = !DILocation(line: 3654, column: 31, scope: !7483)
!7491 = !DILocation(line: 3654, column: 20, scope: !7483)
!7492 = !DILocation(line: 3655, column: 11, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 3655, column: 11)
!7494 = !DILocation(line: 3655, column: 16, scope: !7493)
!7495 = !DILocation(line: 3655, column: 14, scope: !7493)
!7496 = !DILocation(line: 3655, column: 11, scope: !7422)
!7497 = !DILocation(line: 3655, column: 24, scope: !7493)
!7498 = !DILocation(line: 3655, column: 22, scope: !7493)
!7499 = !DILocation(line: 3655, column: 20, scope: !7493)
!7500 = !DILocation(line: 3657, column: 11, scope: !7422)
!7501 = !DILocation(line: 3657, column: 9, scope: !7422)
!7502 = !DILocation(line: 3658, column: 13, scope: !7422)
!7503 = !DILocation(line: 3658, column: 12, scope: !7422)
!7504 = !DILocation(line: 3658, column: 9, scope: !7422)
!7505 = !DILocation(line: 3659, column: 26, scope: !7422)
!7506 = !DILocation(line: 3659, column: 16, scope: !7422)
!7507 = !DILocation(line: 3659, column: 11, scope: !7422)
!7508 = !DILocation(line: 3659, column: 14, scope: !7422)
!7509 = distinct !{!7509, !7417, !7510}
!7510 = !DILocation(line: 3660, column: 4, scope: !7376)
!7511 = !DILocation(line: 3661, column: 1, scope: !7376)
