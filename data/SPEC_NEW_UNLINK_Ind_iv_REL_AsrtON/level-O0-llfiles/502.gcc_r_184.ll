; ModuleID = 'reload1.c'
source_filename = "reload1.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.insn_chain = type { %struct.insn_chain*, %struct.insn_chain*, %struct.insn_chain*, %struct.rtx_def*, i32, i8, %struct.bitmap_head_def, %struct.bitmap_head_def, %struct.reload*, i32, i64 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.reload = type { %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32, i32, i32, i32, i8 }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.elim_table = type { i32, i32, i64, i32, i32, i64, i64, i32, %struct.rtx_def*, %struct.rtx_def* }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.VEC_rtx_p_heap = type { %struct.VEC_rtx_p_base }
%struct.VEC_rtx_p_base = type { i32, i32, [1 x %struct.rtx_def**] }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [14 x %struct.rtx_def**], [14 x i8], i8, i8, i8, [30 x i8], %struct.rtx_def* }
%struct.rtl_hooks = type { %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (i32, %struct.rtx_def*)* }
%struct.insn_data = type { i8*, %union.anon.0, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%union.anon.0 = type { i8* }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.reg_info_t = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.regstat_n_sets_and_refs_t = type { i32, i32 }
%struct.elim_table_1 = type { i32, i32 }
%struct.optab_d = type { i32, i8*, i8, void (%struct.optab_d*, i8*, i8, i32)*, [87 x %struct.optab_handlers] }
%struct.optab_handlers = type { i32 }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }

@reload_in_progress = dso_local global i32 0, align 4, !dbg !0
@spill_indirect_levels = internal global i8 0, align 1, !dbg !3668
@.str = private unnamed_addr constant [4 x i8] c"foo\00", align 1
@indirect_symref_ok = common dso_local global i8 0, align 1, !dbg !3670
@double_reg_address_ok = common dso_local global i8 0, align 1, !dbg !3672
@reload_obstack = internal global %struct.obstack zeroinitializer, align 8, !dbg !3697
@reload_startobj = internal global i8* null, align 8, !dbg !3699
@spilled_pseudos = internal global %struct.bitmap_head_def zeroinitializer, align 8, !dbg !3680
@reg_obstack = external dso_local global %struct.bitmap_obstack, align 8
@changed_allocation_pseudos = internal global %struct.bitmap_head_def zeroinitializer, align 8, !dbg !3682
@pseudos_counted = internal global %struct.bitmap_head_def zeroinitializer, align 8, !dbg !3684
@unused_insn_chains = internal global %struct.insn_chain* null, align 8, !dbg !3736
@reg_renumber = external dso_local global i16*, align 8
@ira_conflicts_p = external dso_local global i8, align 1
@reload_completed = external dso_local global i32, align 4
@.str.1 = private unnamed_addr constant [10 x i8] c"reload1.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@regno_reg_rtx = external dso_local global %struct.rtx_def**, align 8
@failure = internal global i32 0, align 4, !dbg !3727
@reload_firstobj = internal global i8* null, align 8, !dbg !3701
@reload_first_uid = common dso_local global i32 0, align 4, !dbg !3686
@spill_stack_slot = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3674
@spill_stack_slot_width = internal global [53 x i32] zeroinitializer, align 16, !dbg !3677
@max_regno = external dso_local global i32, align 4
@cfun = external dso_local global %struct.function*, align 8
@x_rtl = external dso_local global %struct.rtl_data, align 8
@call_used_regs = external dso_local global [53 x i8], align 16
@fixed_regs = external dso_local global [53 x i8], align 16
@reg_equiv_constant = common dso_local global %struct.rtx_def** null, align 8, !dbg !3627
@reg_equiv_invariant = common dso_local global %struct.rtx_def** null, align 8, !dbg !3629
@reg_equiv_mem = common dso_local global %struct.rtx_def** null, align 8, !dbg !3637
@reg_equiv_alt_mem_list = common dso_local global %struct.rtx_def** null, align 8, !dbg !3639
@reg_equiv_address = common dso_local global %struct.rtx_def** null, align 8, !dbg !3635
@reg_max_ref_width = internal global i32* null, align 8, !dbg !3641
@reg_old_renumber = internal global i16* null, align 8, !dbg !3647
@pseudo_forbidden_regs = internal global i64* null, align 8, !dbg !3662
@pseudo_previous_regs = internal global i64* null, align 8, !dbg !3660
@bad_spill_regs_global = internal global i64 0, align 8, !dbg !3656
@num_eliminable_invariants = internal global i32 0, align 4, !dbg !3711
@flag_pic = external dso_local global i32, align 4
@rtx_class = external dso_local constant [139 x i32], align 16
@reg_equiv_memory_loc = common dso_local global %struct.rtx_def** null, align 8, !dbg !3631
@global_rtl = external dso_local global [11 x %struct.rtx_def*], align 16
@reg_equiv_init = common dso_local global %struct.rtx_def** null, align 8, !dbg !3643
@dump_file = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [20 x i8] c"init_insns for %u: \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@first_label_num = internal global i32 0, align 4, !dbg !3713
@num_labels = internal global i32 0, align 4, !dbg !3721
@offsets_known_at = internal global i8* null, align 8, !dbg !3715
@offsets_at = internal global [4 x i64]* null, align 8, !dbg !3717
@temp_pseudo_reg_arr = internal global i32* null, align 8, !dbg !3729
@num_eliminable = internal global i32 0, align 4, !dbg !3709
@insns_need_reload = internal global %struct.insn_chain* null, align 8, !dbg !3705
@something_needs_elimination = internal global i32 0, align 4, !dbg !3723
@last_spill_reg = internal global i32 0, align 4, !dbg !3666
@used_spill_regs = internal global i64 0, align 8, !dbg !3664
@reg_eliminate = internal global %struct.elim_table* null, align 8, !dbg !3738
@caller_save_needed = common dso_local global i32 0, align 4, !dbg !3688
@something_needs_operands_changed = internal global i32 0, align 4, !dbg !3725
@flag_var_tracking_assignments = external dso_local global i32, align 4
@targetm = external dso_local global %struct.gcc_target, align 8
@df = external dso_local global %struct.df*, align 8
@const_int_rtx = external dso_local global [129 x %struct.rtx_def*], align 16
@.str.5 = private unnamed_addr constant [43 x i8] c"%<asm%> operand has impossible constraints\00", align 1
@flag_stack_check = external dso_local global i32, align 4
@reload.verbose_warned = internal global i32 0, align 4, !dbg !3621
@.str.6 = private unnamed_addr constant [49 x i8] c"frame size too large for reliable stack checking\00", align 1
@.str.7 = private unnamed_addr constant [43 x i8] c"try reducing the number of local variables\00", align 1
@reg_equiv_memory_loc_vec = common dso_local global %struct.VEC_rtx_gc* null, align 8, !dbg !3633
@n_spills = internal global i32 0, align 4, !dbg !3649
@spill_regs = internal global [53 x i16] zeroinitializer, align 16, !dbg !3658
@substitute_stack = internal global %struct.VEC_rtx_p_heap* null, align 8, !dbg !3719
@rld = external dso_local global [180 x %struct.reload], align 16
@spill_reg_order = internal global [53 x i16] zeroinitializer, align 16, !dbg !3651
@reload_spill_index = internal global [180 x i32] zeroinitializer, align 16, !dbg !3731
@flag_non_call_exceptions = external dso_local global i32, align 4
@reg_equiv_init_size = common dso_local global i32 0, align 4, !dbg !3645
@reload_in_optab = common dso_local global [87 x i32] zeroinitializer, align 16, !dbg !3690
@reload_out_optab = common dso_local global [87 x i32] zeroinitializer, align 16, !dbg !3695
@reload_insn_chain = common dso_local global %struct.insn_chain* null, align 8, !dbg !3703
@num_not_at_initial_offset = common dso_local global i32 0, align 4, !dbg !3707
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@hard_regno_nregs = external dso_local global [53 x [87 x i8]], align 16
@optimize = external dso_local global i32, align 4
@rtx_format = external dso_local constant [139 x i8*], align 16
@rtx_length = external dso_local constant [139 x i8], align 16
@recog_data = external dso_local global %struct.recog_data, align 8
@reg_class_contents = external dso_local global [27 x i64], align 16
@reg_class_subunion = external dso_local global [27 x [27 x i32]], align 16
@reload_insn_firstobj = internal global i8* null, align 8, !dbg !3740
@flag_expensive_optimizations = external dso_local global i32, align 4
@n_reloads = external dso_local global i32, align 4
@rtl_hooks = external dso_local global %struct.rtl_hooks, align 8
@insn_data = external dso_local constant [0 x %struct.insn_data], align 8
@mode_size = external dso_local global [87 x i8], align 16
@reload_order = internal global [180 x i16] zeroinitializer, align 16, !dbg !3742
@used_spill_regs_local = internal global i64 0, align 8, !dbg !3745
@.str.8 = private unnamed_addr constant [23 x i8] c"Spilling for insn %d.\0A\00", align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"reload failure for reload %d\0A\00", align 1
@reg_class_size = external dso_local global [27 x i32], align 16
@fixed_reg_set = external dso_local global i64, align 8
@bad_spill_regs = internal global i64 0, align 8, !dbg !3747
@spill_cost = internal global [53 x i32] zeroinitializer, align 16, !dbg !3749
@spill_add_cost = internal global [53 x i32] zeroinitializer, align 16, !dbg !3752
@hard_regno_to_pseudo_regno = internal global [53 x i32] zeroinitializer, align 16, !dbg !3754
@reg_info_p = external dso_local global %struct.reg_info_t*, align 8
@find_reg.regno_pseudo_regs = internal global [53 x i32] zeroinitializer, align 16, !dbg !3756
@find_reg.best_regno_pseudo_regs = internal global [53 x i32] zeroinitializer, align 16, !dbg !3761
@reg_alloc_order = external dso_local global [53 x i32], align 16
@inv_reg_alloc_order = external dso_local global [53 x i32], align 16
@.str.10 = private unnamed_addr constant [28 x i8] c"Using reg %d for reload %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"can't find a register in class %qs while reloading %<asm%>\00", align 1
@reg_class_names = external dso_local global [0 x i8*], align 8
@.str.12 = private unnamed_addr constant [48 x i8] c"unable to find a register to spill in class %qs\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"\0AReloads for insn # %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"this is the insn:\00", align 1
@regstat_n_sets_and_refs = external dso_local global %struct.regstat_n_sets_and_refs_t*, align 8
@current_function_decl = external dso_local global %union.tree_node*, align 8
@reg_eliminate_1 = internal constant [4 x %struct.elim_table_1] [%struct.elim_table_1 { i32 16, i32 7 }, %struct.elim_table_1 { i32 16, i32 6 }, %struct.elim_table_1 { i32 20, i32 7 }, %struct.elim_table_1 { i32 20, i32 6 }], align 16, !dbg !3763
@.str.15 = private unnamed_addr constant [29 x i8] c" Register %d now on stack.\0A\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c" Register %d now in %d.\0A\0A\00", align 1
@spill_reg_rtx = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3772
@spill_reg_store = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3774
@reg_last_reload_reg = internal global %struct.rtx_def** null, align 8, !dbg !3776
@reg_has_output_reload = internal global %struct.bitmap_head_def zeroinitializer, align 8, !dbg !3778
@reg_reloaded_valid = internal global i64 0, align 8, !dbg !3780
@reg_reloaded_call_part_clobbered = internal global i64 0, align 8, !dbg !3782
@reg_is_output_reload = internal global i64 0, align 8, !dbg !3784
@.str.17 = private unnamed_addr constant [43 x i8] c"%<asm%> operand requires impossible reload\00", align 1
@call_used_reg_set = external dso_local global i64, align 8
@reg_class_superunion = external dso_local global [27 x [27 x i32]], align 16
@regclass_map = external dso_local constant [53 x i32], align 16
@mode_class = external dso_local constant [87 x i8], align 16
@reg_reloaded_contents = internal global [53 x i32] zeroinitializer, align 16, !dbg !3811
@n_earlyclobbers = external dso_local global i32, align 4
@reload_earlyclobbers = external dso_local global [30 x %struct.rtx_def*], align 16
@reg_used_in_insn = internal global i64 0, align 8, !dbg !3813
@reg_reloaded_dead = internal global i64 0, align 8, !dbg !3815
@reload_override_in = internal global [180 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3817
@reg_reloaded_insn = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3820
@reload_inheritance_insn = internal global [180 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3822
@reload_inherited = internal global [180 x i8] zeroinitializer, align 16, !dbg !3824
@reload_reg_used_for_inherit = internal global i64 0, align 8, !dbg !3827
@reload_reg_unavailable = internal global i64 0, align 8, !dbg !3829
@reload_reg_used_at_all = internal global i64 0, align 8, !dbg !3831
@reload_reg_used = internal global i64 0, align 8, !dbg !3786
@reload_reg_used_in_op_addr = internal global i64 0, align 8, !dbg !3788
@reload_reg_used_in_op_addr_reload = internal global i64 0, align 8, !dbg !3790
@reload_reg_used_in_insn = internal global i64 0, align 8, !dbg !3792
@reload_reg_used_in_other_addr = internal global i64 0, align 8, !dbg !3794
@reload_n_operands = external dso_local global i32, align 4
@reload_reg_used_in_output = internal global [30 x i64] zeroinitializer, align 16, !dbg !3796
@reload_reg_used_in_input = internal global [30 x i64] zeroinitializer, align 16, !dbg !3801
@reload_reg_used_in_input_addr = internal global [30 x i64] zeroinitializer, align 16, !dbg !3803
@reload_reg_used_in_inpaddr_addr = internal global [30 x i64] zeroinitializer, align 16, !dbg !3805
@reload_reg_used_in_output_addr = internal global [30 x i64] zeroinitializer, align 16, !dbg !3807
@reload_reg_used_in_outaddr_addr = internal global [30 x i64] zeroinitializer, align 16, !dbg !3809
@.str.18 = private unnamed_addr constant [32 x i8] c"could not find a spill register\00", align 1
@.str.19 = private unnamed_addr constant [58 x i8] c"%<asm%> operand constraint incompatible with operand size\00", align 1
@reg_reloaded_died = internal global i64 0, align 8, !dbg !3833
@other_output_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3835
@outaddr_address_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3838
@output_address_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3840
@output_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3842
@inpaddr_address_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3844
@input_address_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3846
@input_reload_insns = internal global [30 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3848
@other_input_address_reload_insns = internal global %struct.rtx_def* null, align 8, !dbg !3850
@other_input_reload_insns = internal global %struct.rtx_def* null, align 8, !dbg !3852
@operand_reload_insns = internal global %struct.rtx_def* null, align 8, !dbg !3854
@other_operand_reload_insns = internal global %struct.rtx_def* null, align 8, !dbg !3856
@new_spill_reg_store = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3858
@reload_reg_rtx_for_output = internal global [180 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3860
@spill_reg_stored_to = internal global [53 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3862
@reload_reg_rtx_for_input = internal global [180 x %struct.rtx_def*] zeroinitializer, align 16, !dbg !3864
@optab_table = external dso_local global [159 x %struct.optab_d], align 16
@.str.20 = private unnamed_addr constant [26 x i8] c"Failure trying to reload:\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"VOIDmode on an output\00", align 1
@.str.22 = private unnamed_addr constant [38 x i8] c"output operand is constant in %<asm%>\00", align 1
@word_mode = external dso_local global i32, align 4
@reg_raw_mode = external dso_local global [53 x i32], align 16
@.str.23 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_reload() #0 !dbg !3870 {
entry:
  %i = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3873, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !3875, metadata !DIExpression()), !dbg !3876
  %call = call %struct.rtx_def* @gen_rtx_REG(i32 16, i32 58), !dbg !3877
  %call1 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 4), !dbg !3877
  %call2 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 16, %struct.rtx_def* %call, %struct.rtx_def* %call1), !dbg !3877
  %call3 = call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %call2), !dbg !3878
  store %struct.rtx_def* %call3, %struct.rtx_def** %tem, align 8, !dbg !3876
  store i8 0, i8* @spill_indirect_levels, align 1, !dbg !3879
  br label %while.cond, !dbg !3880

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !3881
  %call4 = call i32 @memory_address_addr_space_p(i32 14, %struct.rtx_def* %0, i8 zeroext 0), !dbg !3881
  %tobool = icmp ne i32 %call4, 0, !dbg !3880
  br i1 %tobool, label %while.body, label %while.end, !dbg !3880

while.body:                                       ; preds = %while.cond
  %1 = load i8, i8* @spill_indirect_levels, align 1, !dbg !3882
  %inc = add i8 %1, 1, !dbg !3882
  store i8 %inc, i8* @spill_indirect_levels, align 1, !dbg !3882
  %2 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !3884
  %call5 = call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %2), !dbg !3885
  store %struct.rtx_def* %call5, %struct.rtx_def** %tem, align 8, !dbg !3886
  br label %while.cond, !dbg !3880, !llvm.loop !3887

while.end:                                        ; preds = %while.cond
  %call6 = call %struct.rtx_def* @gen_rtx_fmt_s00_stat(i32 45, i32 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)), !dbg !3889
  %call7 = call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %call6), !dbg !3890
  store %struct.rtx_def* %call7, %struct.rtx_def** %tem, align 8, !dbg !3891
  %3 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !3892
  %call8 = call i32 @memory_address_addr_space_p(i32 14, %struct.rtx_def* %3, i8 zeroext 0), !dbg !3892
  %conv = trunc i32 %call8 to i8, !dbg !3892
  store i8 %conv, i8* @indirect_symref_ok, align 1, !dbg !3893
  store i32 0, i32* %i, align 4, !dbg !3894
  br label %for.cond, !dbg !3896

for.cond:                                         ; preds = %for.inc, %while.end
  %4 = load i32, i32* %i, align 4, !dbg !3897
  %cmp = icmp slt i32 %4, 53, !dbg !3899
  br i1 %cmp, label %for.body, label %for.end, !dbg !3900

for.body:                                         ; preds = %for.cond
  %call10 = call %struct.rtx_def* @gen_rtx_REG(i32 16, i32 6), !dbg !3901
  %5 = load i32, i32* %i, align 4, !dbg !3901
  %call11 = call %struct.rtx_def* @gen_rtx_REG(i32 16, i32 %5), !dbg !3901
  %call12 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 16, %struct.rtx_def* %call10, %struct.rtx_def* %call11), !dbg !3901
  store %struct.rtx_def* %call12, %struct.rtx_def** %tem, align 8, !dbg !3903
  %6 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !3904
  %call13 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %6, i64 4), !dbg !3905
  store %struct.rtx_def* %call13, %struct.rtx_def** %tem, align 8, !dbg !3906
  %7 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !3907
  %call14 = call i32 @memory_address_addr_space_p(i32 14, %struct.rtx_def* %7, i8 zeroext 0), !dbg !3907
  %tobool15 = icmp ne i32 %call14, 0, !dbg !3907
  br i1 %tobool15, label %if.then, label %if.end, !dbg !3909

if.then:                                          ; preds = %for.body
  store i8 1, i8* @double_reg_address_ok, align 1, !dbg !3910
  br label %for.end, !dbg !3912

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3913

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !3914
  %inc16 = add nsw i32 %8, 1, !dbg !3914
  store i32 %inc16, i32* %i, align 4, !dbg !3914
  br label %for.cond, !dbg !3915, !llvm.loop !3916

for.end:                                          ; preds = %if.then, %for.cond
  %call17 = call i32 @_obstack_begin(%struct.obstack* @reload_obstack, i32 0, i32 0, i8* (i64)* @xmalloc, void (i8*)* @free), !dbg !3918
  store i64 0, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !3919
  %9 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !3919
  %10 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3919
  %sub.ptr.lhs.cast = ptrtoint i8* %9 to i64, !dbg !3919
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64, !dbg !3919
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3919
  %11 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !3919
  %cmp18 = icmp slt i64 %sub.ptr.sub, %11, !dbg !3919
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !3919

cond.true:                                        ; preds = %for.end
  %12 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !3919
  %conv20 = trunc i64 %12 to i32, !dbg !3919
  call void @_obstack_newchunk(%struct.obstack* @reload_obstack, i32 %conv20), !dbg !3919
  br label %cond.end, !dbg !3919

cond.false:                                       ; preds = %for.end
  br label %cond.end, !dbg !3919

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3919
  %13 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !3919
  %14 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3919
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %13, !dbg !3919
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3919
  %15 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3919
  %16 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !3919
  %cmp21 = icmp eq i8* %15, %16, !dbg !3919
  br i1 %cmp21, label %cond.true23, label %cond.false24, !dbg !3919

cond.true23:                                      ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !3919
  %bf.clear = and i8 %bf.load, -3, !dbg !3919
  %bf.set = or i8 %bf.clear, 2, !dbg !3919
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !3919
  br label %cond.end25, !dbg !3919

cond.false24:                                     ; preds = %cond.end
  br label %cond.end25, !dbg !3919

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i32 [ 0, %cond.true23 ], [ 0, %cond.false24 ], !dbg !3919
  %17 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !3919
  %sub.ptr.lhs.cast27 = ptrtoint i8* %17 to i64, !dbg !3919
  %sub.ptr.sub28 = sub i64 %sub.ptr.lhs.cast27, 0, !dbg !3919
  store i64 %sub.ptr.sub28, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !3919
  %18 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3919
  %sub.ptr.lhs.cast29 = ptrtoint i8* %18 to i64, !dbg !3919
  %sub.ptr.sub30 = sub i64 %sub.ptr.lhs.cast29, 0, !dbg !3919
  %19 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !3919
  %conv31 = sext i32 %19 to i64, !dbg !3919
  %add = add nsw i64 %sub.ptr.sub30, %conv31, !dbg !3919
  %20 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !3919
  %neg = xor i32 %20, -1, !dbg !3919
  %conv32 = sext i32 %neg to i64, !dbg !3919
  %and = and i64 %add, %conv32, !dbg !3919
  %21 = inttoptr i64 %and to i8*, !dbg !3919
  store i8* %21, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3919
  %22 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3919
  %23 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !3919
  %24 = bitcast %struct._obstack_chunk* %23 to i8*, !dbg !3919
  %sub.ptr.lhs.cast33 = ptrtoint i8* %22 to i64, !dbg !3919
  %sub.ptr.rhs.cast34 = ptrtoint i8* %24 to i64, !dbg !3919
  %sub.ptr.sub35 = sub i64 %sub.ptr.lhs.cast33, %sub.ptr.rhs.cast34, !dbg !3919
  %25 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !3919
  %26 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !3919
  %27 = bitcast %struct._obstack_chunk* %26 to i8*, !dbg !3919
  %sub.ptr.lhs.cast36 = ptrtoint i8* %25 to i64, !dbg !3919
  %sub.ptr.rhs.cast37 = ptrtoint i8* %27 to i64, !dbg !3919
  %sub.ptr.sub38 = sub i64 %sub.ptr.lhs.cast36, %sub.ptr.rhs.cast37, !dbg !3919
  %cmp39 = icmp sgt i64 %sub.ptr.sub35, %sub.ptr.sub38, !dbg !3919
  br i1 %cmp39, label %cond.true41, label %cond.false42, !dbg !3919

cond.true41:                                      ; preds = %cond.end25
  %28 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !3919
  store i8* %28, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3919
  br label %cond.end43, !dbg !3919

cond.false42:                                     ; preds = %cond.end25
  br label %cond.end43, !dbg !3919

cond.end43:                                       ; preds = %cond.false42, %cond.true41
  %cond44 = phi i8* [ %28, %cond.true41 ], [ null, %cond.false42 ], !dbg !3919
  %29 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3919
  store i8* %29, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !3919
  %30 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !3919
  %31 = inttoptr i64 %30 to i8*, !dbg !3919
  store i8* %31, i8** @reload_startobj, align 8, !dbg !3920
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* @spilled_pseudos, %struct.bitmap_obstack* @reg_obstack), !dbg !3921
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* @changed_allocation_pseudos, %struct.bitmap_obstack* @reg_obstack), !dbg !3922
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* @pseudos_counted, %struct.bitmap_obstack* @reg_obstack), !dbg !3923
  ret void, !dbg !3924
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #2

declare dso_local i32 @memory_address_addr_space_p(i32, %struct.rtx_def*, i8 zeroext) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_s00_stat(i32, i32, i8*) #2

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) #2

declare dso_local i32 @_obstack_begin(%struct.obstack*, i32, i32, i8* (i64)*, void (i8*)*) #2

declare dso_local i8* @xmalloc(i64) #2

declare dso_local void @free(i8*) #2

declare dso_local void @_obstack_newchunk(%struct.obstack*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @bitmap_initialize_stat(%struct.bitmap_head_def* %head, %struct.bitmap_obstack* %obstack) #0 !dbg !3925 {
entry:
  %head.addr = alloca %struct.bitmap_head_def*, align 8
  %obstack.addr = alloca %struct.bitmap_obstack*, align 8
  store %struct.bitmap_head_def* %head, %struct.bitmap_head_def** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %head.addr, metadata !3928, metadata !DIExpression()), !dbg !3929
  store %struct.bitmap_obstack* %obstack, %struct.bitmap_obstack** %obstack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_obstack** %obstack.addr, metadata !3930, metadata !DIExpression()), !dbg !3931
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %head.addr, align 8, !dbg !3932
  %current = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %0, i32 0, i32 1, !dbg !3933
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %current, align 8, !dbg !3934
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %head.addr, align 8, !dbg !3935
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %1, i32 0, i32 0, !dbg !3936
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %first, align 8, !dbg !3937
  %2 = load %struct.bitmap_obstack*, %struct.bitmap_obstack** %obstack.addr, align 8, !dbg !3938
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %head.addr, align 8, !dbg !3939
  %obstack1 = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %3, i32 0, i32 3, !dbg !3940
  store %struct.bitmap_obstack* %2, %struct.bitmap_obstack** %obstack1, align 8, !dbg !3941
  ret void, !dbg !3942
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.insn_chain* @new_insn_chain() #0 !dbg !3943 {
entry:
  %c = alloca %struct.insn_chain*, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %c, metadata !3946, metadata !DIExpression()), !dbg !3947
  %0 = load %struct.insn_chain*, %struct.insn_chain** @unused_insn_chains, align 8, !dbg !3948
  %cmp = icmp eq %struct.insn_chain* %0, null, !dbg !3950
  br i1 %cmp, label %if.then, label %if.else, !dbg !3951

if.then:                                          ; preds = %entry
  store i64 128, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !3952
  %1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !3952
  %2 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3952
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !3952
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !3952
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3952
  %3 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !3952
  %cmp1 = icmp slt i64 %sub.ptr.sub, %3, !dbg !3952
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !3952

cond.true:                                        ; preds = %if.then
  %4 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !3952
  %conv = trunc i64 %4 to i32, !dbg !3952
  call void @_obstack_newchunk(%struct.obstack* @reload_obstack, i32 %conv), !dbg !3952
  br label %cond.end, !dbg !3952

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !3952

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3952
  %5 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !3952
  %6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3952
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !3952
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3952
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3952
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !3952
  %cmp2 = icmp eq i8* %7, %8, !dbg !3952
  br i1 %cmp2, label %cond.true4, label %cond.false5, !dbg !3952

cond.true4:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !3952
  %bf.clear = and i8 %bf.load, -3, !dbg !3952
  %bf.set = or i8 %bf.clear, 2, !dbg !3952
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !3952
  br label %cond.end6, !dbg !3952

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !3952

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i32 [ 0, %cond.true4 ], [ 0, %cond.false5 ], !dbg !3952
  %9 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !3952
  %sub.ptr.lhs.cast8 = ptrtoint i8* %9 to i64, !dbg !3952
  %sub.ptr.sub9 = sub i64 %sub.ptr.lhs.cast8, 0, !dbg !3952
  store i64 %sub.ptr.sub9, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !3952
  %10 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3952
  %sub.ptr.lhs.cast10 = ptrtoint i8* %10 to i64, !dbg !3952
  %sub.ptr.sub11 = sub i64 %sub.ptr.lhs.cast10, 0, !dbg !3952
  %11 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !3952
  %conv12 = sext i32 %11 to i64, !dbg !3952
  %add = add nsw i64 %sub.ptr.sub11, %conv12, !dbg !3952
  %12 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !3952
  %neg = xor i32 %12, -1, !dbg !3952
  %conv13 = sext i32 %neg to i64, !dbg !3952
  %and = and i64 %add, %conv13, !dbg !3952
  %13 = inttoptr i64 %and to i8*, !dbg !3952
  store i8* %13, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3952
  %14 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3952
  %15 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !3952
  %16 = bitcast %struct._obstack_chunk* %15 to i8*, !dbg !3952
  %sub.ptr.lhs.cast14 = ptrtoint i8* %14 to i64, !dbg !3952
  %sub.ptr.rhs.cast15 = ptrtoint i8* %16 to i64, !dbg !3952
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !3952
  %17 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !3952
  %18 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !3952
  %19 = bitcast %struct._obstack_chunk* %18 to i8*, !dbg !3952
  %sub.ptr.lhs.cast17 = ptrtoint i8* %17 to i64, !dbg !3952
  %sub.ptr.rhs.cast18 = ptrtoint i8* %19 to i64, !dbg !3952
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18, !dbg !3952
  %cmp20 = icmp sgt i64 %sub.ptr.sub16, %sub.ptr.sub19, !dbg !3952
  br i1 %cmp20, label %cond.true22, label %cond.false23, !dbg !3952

cond.true22:                                      ; preds = %cond.end6
  %20 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !3952
  store i8* %20, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3952
  br label %cond.end24, !dbg !3952

cond.false23:                                     ; preds = %cond.end6
  br label %cond.end24, !dbg !3952

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i8* [ %20, %cond.true22 ], [ null, %cond.false23 ], !dbg !3952
  %21 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !3952
  store i8* %21, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !3952
  %22 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !3952
  %23 = inttoptr i64 %22 to i8*, !dbg !3952
  %24 = bitcast i8* %23 to %struct.insn_chain*, !dbg !3952
  store %struct.insn_chain* %24, %struct.insn_chain** %c, align 8, !dbg !3954
  %25 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !3955
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %25, i32 0, i32 6, !dbg !3955
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* %live_throughout, %struct.bitmap_obstack* @reg_obstack), !dbg !3955
  %26 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !3956
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %26, i32 0, i32 7, !dbg !3956
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* %dead_or_set, %struct.bitmap_obstack* @reg_obstack), !dbg !3956
  br label %if.end, !dbg !3957

if.else:                                          ; preds = %entry
  %27 = load %struct.insn_chain*, %struct.insn_chain** @unused_insn_chains, align 8, !dbg !3958
  store %struct.insn_chain* %27, %struct.insn_chain** %c, align 8, !dbg !3960
  %28 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !3961
  %next = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %28, i32 0, i32 0, !dbg !3962
  %29 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !3962
  store %struct.insn_chain* %29, %struct.insn_chain** @unused_insn_chains, align 8, !dbg !3963
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end24
  %30 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !3964
  %is_caller_save_insn = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %30, i32 0, i32 5, !dbg !3965
  %bf.load26 = load i8, i8* %is_caller_save_insn, align 4, !dbg !3966
  %bf.clear27 = and i8 %bf.load26, -9, !dbg !3966
  store i8 %bf.clear27, i8* %is_caller_save_insn, align 4, !dbg !3966
  %31 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !3967
  %need_operand_change = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %31, i32 0, i32 5, !dbg !3968
  %bf.load28 = load i8, i8* %need_operand_change, align 4, !dbg !3969
  %bf.clear29 = and i8 %bf.load28, -3, !dbg !3969
  store i8 %bf.clear29, i8* %need_operand_change, align 4, !dbg !3969
  %32 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !3970
  %need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %32, i32 0, i32 5, !dbg !3971
  %bf.load30 = load i8, i8* %need_reload, align 4, !dbg !3972
  %bf.clear31 = and i8 %bf.load30, -2, !dbg !3972
  store i8 %bf.clear31, i8* %need_reload, align 4, !dbg !3972
  %33 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !3973
  %need_elim = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %33, i32 0, i32 5, !dbg !3974
  %bf.load32 = load i8, i8* %need_elim, align 4, !dbg !3975
  %bf.clear33 = and i8 %bf.load32, -5, !dbg !3975
  store i8 %bf.clear33, i8* %need_elim, align 4, !dbg !3975
  %34 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !3976
  ret %struct.insn_chain* %34, !dbg !3977
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @compute_use_by_pseudos(i64* %to, %struct.bitmap_head_def* %from) #0 !dbg !3978 {
entry:
  %to.addr = alloca i64*, align 8
  %from.addr = alloca %struct.bitmap_head_def*, align 8
  %regno = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  %r = alloca i32, align 4
  store i64* %to, i64** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %to.addr, metadata !3981, metadata !DIExpression()), !dbg !3982
  store %struct.bitmap_head_def* %from, %struct.bitmap_head_def** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %from.addr, metadata !3983, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !3985, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %rsi, metadata !3987, metadata !DIExpression()), !dbg !3996
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %from.addr, align 8, !dbg !3997
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %0, i32 53, i32* %regno), !dbg !3997
  br label %for.cond, !dbg !3997

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %regno), !dbg !3999
  %tobool = icmp ne i8 %call, 0, !dbg !3997
  br i1 %tobool, label %for.body, label %for.end, !dbg !3997

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4001, metadata !DIExpression()), !dbg !4003
  %1 = load i16*, i16** @reg_renumber, align 8, !dbg !4004
  %2 = load i32, i32* %regno, align 4, !dbg !4005
  %idxprom = zext i32 %2 to i64, !dbg !4004
  %arrayidx = getelementptr inbounds i16, i16* %1, i64 %idxprom, !dbg !4004
  %3 = load i16, i16* %arrayidx, align 2, !dbg !4004
  %conv = sext i16 %3 to i32, !dbg !4004
  store i32 %conv, i32* %r, align 4, !dbg !4003
  %4 = load i32, i32* %r, align 4, !dbg !4006
  %cmp = icmp slt i32 %4, 0, !dbg !4008
  br i1 %cmp, label %if.then, label %if.else, !dbg !4009

if.then:                                          ; preds = %for.body
  %5 = load i8, i8* @ira_conflicts_p, align 1, !dbg !4010
  %conv2 = zext i8 %5 to i32, !dbg !4010
  %tobool3 = icmp ne i32 %conv2, 0, !dbg !4010
  br i1 %tobool3, label %cond.false, label %lor.lhs.false, !dbg !4010

lor.lhs.false:                                    ; preds = %if.then
  %6 = load i32, i32* @reload_completed, align 4, !dbg !4010
  %tobool4 = icmp ne i32 %6, 0, !dbg !4010
  br i1 %tobool4, label %cond.false, label %cond.true, !dbg !4010

cond.true:                                        ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 575, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !4010
  br label %cond.end, !dbg !4010

cond.false:                                       ; preds = %lor.lhs.false, %if.then
  br label %cond.end, !dbg !4010

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !4010
  br label %if.end, !dbg !4012

if.else:                                          ; preds = %for.body
  %7 = load i64*, i64** %to.addr, align 8, !dbg !4013
  %8 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !4014
  %9 = load i32, i32* %regno, align 4, !dbg !4014
  %idxprom5 = zext i32 %9 to i64, !dbg !4014
  %arrayidx6 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom5, !dbg !4014
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx6, align 8, !dbg !4014
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !4014
  %bf.load = load i32, i32* %11, align 8, !dbg !4014
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4014
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4014
  %12 = load i32, i32* %r, align 4, !dbg !4015
  call void @add_to_hard_reg_set(i64* %7, i32 %bf.clear, i32 %12), !dbg !4016
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  br label %for.inc, !dbg !4017

for.inc:                                          ; preds = %if.end
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %regno), !dbg !3999
  br label %for.cond, !dbg !3999, !llvm.loop !4018

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4020
}

; Function Attrs: noinline nounwind uwtable
define internal void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) #0 !dbg !4021 {
entry:
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %map.addr = alloca %struct.bitmap_head_def*, align 8
  %start_bit.addr = alloca i32, align 4
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !4028, metadata !DIExpression()), !dbg !4029
  store %struct.bitmap_head_def* %map, %struct.bitmap_head_def** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %map.addr, metadata !4030, metadata !DIExpression()), !dbg !4031
  store i32 %start_bit, i32* %start_bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_bit.addr, metadata !4032, metadata !DIExpression()), !dbg !4033
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !4034, metadata !DIExpression()), !dbg !4035
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %map.addr, align 8, !dbg !4036
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %0, i32 0, i32 0, !dbg !4037
  %1 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !4037
  %2 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4038
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %2, i32 0, i32 0, !dbg !4039
  store %struct.bitmap_element_def* %1, %struct.bitmap_element_def** %elt1, align 8, !dbg !4040
  %3 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4041
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %3, i32 0, i32 1, !dbg !4042
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !4043
  br label %while.body, !dbg !4044

while.body:                                       ; preds = %entry, %if.end5
  %4 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4045
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %4, i32 0, i32 0, !dbg !4048
  %5 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt11, align 8, !dbg !4048
  %tobool = icmp ne %struct.bitmap_element_def* %5, null, !dbg !4045
  br i1 %tobool, label %if.end, label %if.then, !dbg !4049

if.then:                                          ; preds = %while.body
  %6 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4050
  %elt12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %6, i32 0, i32 0, !dbg !4052
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt12, align 8, !dbg !4053
  br label %while.end, !dbg !4054

if.end:                                           ; preds = %while.body
  %7 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4055
  %elt13 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %7, i32 0, i32 0, !dbg !4057
  %8 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt13, align 8, !dbg !4057
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %8, i32 0, i32 2, !dbg !4058
  %9 = load i32, i32* %indx, align 8, !dbg !4058
  %10 = load i32, i32* %start_bit.addr, align 4, !dbg !4059
  %div = udiv i32 %10, 128, !dbg !4060
  %cmp = icmp uge i32 %9, %div, !dbg !4061
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !4062

if.then4:                                         ; preds = %if.end
  br label %while.end, !dbg !4063

if.end5:                                          ; preds = %if.end
  %11 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4064
  %elt16 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %11, i32 0, i32 0, !dbg !4065
  %12 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt16, align 8, !dbg !4065
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %12, i32 0, i32 0, !dbg !4066
  %13 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8, !dbg !4066
  %14 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4067
  %elt17 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %14, i32 0, i32 0, !dbg !4068
  store %struct.bitmap_element_def* %13, %struct.bitmap_element_def** %elt17, align 8, !dbg !4069
  br label %while.body, !dbg !4044, !llvm.loop !4070

while.end:                                        ; preds = %if.then4, %if.then
  %15 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4072
  %elt18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %15, i32 0, i32 0, !dbg !4074
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt18, align 8, !dbg !4074
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i32 0, i32 2, !dbg !4075
  %17 = load i32, i32* %indx9, align 8, !dbg !4075
  %18 = load i32, i32* %start_bit.addr, align 4, !dbg !4076
  %div10 = udiv i32 %18, 128, !dbg !4077
  %cmp11 = icmp ne i32 %17, %div10, !dbg !4078
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !4079

if.then12:                                        ; preds = %while.end
  %19 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4080
  %elt113 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %19, i32 0, i32 0, !dbg !4081
  %20 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt113, align 8, !dbg !4081
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %20, i32 0, i32 2, !dbg !4082
  %21 = load i32, i32* %indx14, align 8, !dbg !4082
  %mul = mul i32 %21, 128, !dbg !4083
  store i32 %mul, i32* %start_bit.addr, align 4, !dbg !4084
  br label %if.end15, !dbg !4085

if.end15:                                         ; preds = %if.then12, %while.end
  %22 = load i32, i32* %start_bit.addr, align 4, !dbg !4086
  %div16 = udiv i32 %22, 64, !dbg !4087
  %rem = urem i32 %div16, 2, !dbg !4088
  %23 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4089
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %23, i32 0, i32 2, !dbg !4090
  store i32 %rem, i32* %word_no, align 8, !dbg !4091
  %24 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4092
  %elt117 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %24, i32 0, i32 0, !dbg !4093
  %25 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt117, align 8, !dbg !4093
  %bits = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %25, i32 0, i32 3, !dbg !4094
  %26 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4095
  %word_no18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %26, i32 0, i32 2, !dbg !4096
  %27 = load i32, i32* %word_no18, align 8, !dbg !4096
  %idxprom = zext i32 %27 to i64, !dbg !4092
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits, i64 0, i64 %idxprom, !dbg !4092
  %28 = load i64, i64* %arrayidx, align 8, !dbg !4092
  %29 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4097
  %bits19 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %29, i32 0, i32 3, !dbg !4098
  store i64 %28, i64* %bits19, align 8, !dbg !4099
  %30 = load i32, i32* %start_bit.addr, align 4, !dbg !4100
  %rem20 = urem i32 %30, 64, !dbg !4101
  %31 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4102
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %31, i32 0, i32 3, !dbg !4103
  %32 = load i64, i64* %bits21, align 8, !dbg !4104
  %sh_prom = zext i32 %rem20 to i64, !dbg !4104
  %shr = lshr i64 %32, %sh_prom, !dbg !4104
  store i64 %shr, i64* %bits21, align 8, !dbg !4104
  %33 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4105
  %bits22 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %33, i32 0, i32 3, !dbg !4106
  %34 = load i64, i64* %bits22, align 8, !dbg !4106
  %tobool23 = icmp ne i64 %34, 0, !dbg !4107
  %lnot = xor i1 %tobool23, true, !dbg !4107
  %lnot.ext = zext i1 %lnot to i32, !dbg !4107
  %35 = load i32, i32* %start_bit.addr, align 4, !dbg !4108
  %add = add i32 %35, %lnot.ext, !dbg !4108
  store i32 %add, i32* %start_bit.addr, align 4, !dbg !4108
  %36 = load i32, i32* %start_bit.addr, align 4, !dbg !4109
  %37 = load i32*, i32** %bit_no.addr, align 8, !dbg !4110
  store i32 %36, i32* %37, align 4, !dbg !4111
  ret void, !dbg !4112
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) #0 !dbg !4113 {
entry:
  %retval = alloca i8, align 1
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !4116, metadata !DIExpression()), !dbg !4117
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !4118, metadata !DIExpression()), !dbg !4119
  %0 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4120
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %0, i32 0, i32 3, !dbg !4122
  %1 = load i64, i64* %bits, align 8, !dbg !4122
  %tobool = icmp ne i64 %1, 0, !dbg !4120
  br i1 %tobool, label %if.then, label %if.end, !dbg !4123

if.then:                                          ; preds = %entry
  br label %next_bit, !dbg !4124

next_bit:                                         ; preds = %if.then15, %if.then
  call void @llvm.dbg.label(metadata !4125), !dbg !4127
  br label %while.cond, !dbg !4128

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4129
  %bits1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %2, i32 0, i32 3, !dbg !4130
  %3 = load i64, i64* %bits1, align 8, !dbg !4130
  %and = and i64 %3, 1, !dbg !4131
  %tobool2 = icmp ne i64 %and, 0, !dbg !4132
  %lnot = xor i1 %tobool2, true, !dbg !4132
  br i1 %lnot, label %while.body, label %while.end, !dbg !4128

while.body:                                       ; preds = %while.cond
  %4 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4133
  %bits3 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %4, i32 0, i32 3, !dbg !4135
  %5 = load i64, i64* %bits3, align 8, !dbg !4136
  %shr = lshr i64 %5, 1, !dbg !4136
  store i64 %shr, i64* %bits3, align 8, !dbg !4136
  %6 = load i32*, i32** %bit_no.addr, align 8, !dbg !4137
  %7 = load i32, i32* %6, align 4, !dbg !4138
  %add = add i32 %7, 1, !dbg !4138
  store i32 %add, i32* %6, align 4, !dbg !4138
  br label %while.cond, !dbg !4128, !llvm.loop !4139

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval, align 1, !dbg !4141
  br label %return, !dbg !4141

if.end:                                           ; preds = %entry
  %8 = load i32*, i32** %bit_no.addr, align 8, !dbg !4142
  %9 = load i32, i32* %8, align 4, !dbg !4143
  %add4 = add i32 %9, 64, !dbg !4144
  %sub = sub i32 %add4, 1, !dbg !4145
  %div = udiv i32 %sub, 64, !dbg !4146
  %mul = mul i32 %div, 64, !dbg !4147
  %10 = load i32*, i32** %bit_no.addr, align 8, !dbg !4148
  store i32 %mul, i32* %10, align 4, !dbg !4149
  %11 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4150
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %11, i32 0, i32 2, !dbg !4151
  %12 = load i32, i32* %word_no, align 8, !dbg !4152
  %inc = add i32 %12, 1, !dbg !4152
  store i32 %inc, i32* %word_no, align 8, !dbg !4152
  br label %while.body6, !dbg !4153

while.body6:                                      ; preds = %if.end, %if.end26
  br label %while.cond7, !dbg !4154

while.cond7:                                      ; preds = %if.end16, %while.body6
  %13 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4156
  %word_no8 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %13, i32 0, i32 2, !dbg !4157
  %14 = load i32, i32* %word_no8, align 8, !dbg !4157
  %cmp = icmp ne i32 %14, 2, !dbg !4158
  br i1 %cmp, label %while.body9, label %while.end20, !dbg !4154

while.body9:                                      ; preds = %while.cond7
  %15 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4159
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %15, i32 0, i32 0, !dbg !4161
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !4161
  %bits10 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i32 0, i32 3, !dbg !4162
  %17 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4163
  %word_no11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %17, i32 0, i32 2, !dbg !4164
  %18 = load i32, i32* %word_no11, align 8, !dbg !4164
  %idxprom = zext i32 %18 to i64, !dbg !4159
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits10, i64 0, i64 %idxprom, !dbg !4159
  %19 = load i64, i64* %arrayidx, align 8, !dbg !4159
  %20 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4165
  %bits12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %20, i32 0, i32 3, !dbg !4166
  store i64 %19, i64* %bits12, align 8, !dbg !4167
  %21 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4168
  %bits13 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %21, i32 0, i32 3, !dbg !4170
  %22 = load i64, i64* %bits13, align 8, !dbg !4170
  %tobool14 = icmp ne i64 %22, 0, !dbg !4168
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !4171

if.then15:                                        ; preds = %while.body9
  br label %next_bit, !dbg !4172

if.end16:                                         ; preds = %while.body9
  %23 = load i32*, i32** %bit_no.addr, align 8, !dbg !4173
  %24 = load i32, i32* %23, align 4, !dbg !4174
  %add17 = add i32 %24, 64, !dbg !4174
  store i32 %add17, i32* %23, align 4, !dbg !4174
  %25 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4175
  %word_no18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %25, i32 0, i32 2, !dbg !4176
  %26 = load i32, i32* %word_no18, align 8, !dbg !4177
  %inc19 = add i32 %26, 1, !dbg !4177
  store i32 %inc19, i32* %word_no18, align 8, !dbg !4177
  br label %while.cond7, !dbg !4154, !llvm.loop !4178

while.end20:                                      ; preds = %while.cond7
  %27 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4180
  %elt121 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %27, i32 0, i32 0, !dbg !4181
  %28 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt121, align 8, !dbg !4181
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %28, i32 0, i32 0, !dbg !4182
  %29 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8, !dbg !4182
  %30 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4183
  %elt122 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %30, i32 0, i32 0, !dbg !4184
  store %struct.bitmap_element_def* %29, %struct.bitmap_element_def** %elt122, align 8, !dbg !4185
  %31 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4186
  %elt123 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %31, i32 0, i32 0, !dbg !4188
  %32 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt123, align 8, !dbg !4188
  %tobool24 = icmp ne %struct.bitmap_element_def* %32, null, !dbg !4186
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !4189

if.then25:                                        ; preds = %while.end20
  store i8 0, i8* %retval, align 1, !dbg !4190
  br label %return, !dbg !4190

if.end26:                                         ; preds = %while.end20
  %33 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4191
  %elt127 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %33, i32 0, i32 0, !dbg !4192
  %34 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt127, align 8, !dbg !4192
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %34, i32 0, i32 2, !dbg !4193
  %35 = load i32, i32* %indx, align 8, !dbg !4193
  %mul28 = mul i32 %35, 128, !dbg !4194
  %36 = load i32*, i32** %bit_no.addr, align 8, !dbg !4195
  store i32 %mul28, i32* %36, align 4, !dbg !4196
  %37 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4197
  %word_no29 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %37, i32 0, i32 2, !dbg !4198
  store i32 0, i32* %word_no29, align 8, !dbg !4199
  br label %while.body6, !dbg !4153, !llvm.loop !4200

return:                                           ; preds = %if.then25, %while.end
  %38 = load i8, i8* %retval, align 1, !dbg !4202
  ret i8 %38, !dbg !4202
}

declare dso_local void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_to_hard_reg_set(i64* %regs, i32 %mode, i32 %regno) #0 !dbg !4203 {
entry:
  %regs.addr = alloca i64*, align 8
  %mode.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %end_regno = alloca i32, align 4
  store i64* %regs, i64** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %regs.addr, metadata !4207, metadata !DIExpression()), !dbg !4208
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4209, metadata !DIExpression()), !dbg !4210
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !4211, metadata !DIExpression()), !dbg !4212
  call void @llvm.dbg.declare(metadata i32* %end_regno, metadata !4213, metadata !DIExpression()), !dbg !4214
  %0 = load i32, i32* %mode.addr, align 4, !dbg !4215
  %1 = load i32, i32* %regno.addr, align 4, !dbg !4216
  %call = call i32 @end_hard_regno(i32 %0, i32 %1), !dbg !4217
  store i32 %call, i32* %end_regno, align 4, !dbg !4218
  br label %do.body, !dbg !4219

do.body:                                          ; preds = %do.cond, %entry
  %2 = load i32, i32* %regno.addr, align 4, !dbg !4220
  %sh_prom = zext i32 %2 to i64, !dbg !4220
  %shl = shl i64 1, %sh_prom, !dbg !4220
  %3 = load i64*, i64** %regs.addr, align 8, !dbg !4220
  %4 = load i64, i64* %3, align 8, !dbg !4220
  %or = or i64 %4, %shl, !dbg !4220
  store i64 %or, i64* %3, align 8, !dbg !4220
  br label %do.cond, !dbg !4220

do.cond:                                          ; preds = %do.body
  %5 = load i32, i32* %regno.addr, align 4, !dbg !4221
  %inc = add i32 %5, 1, !dbg !4221
  store i32 %inc, i32* %regno.addr, align 4, !dbg !4221
  %6 = load i32, i32* %end_regno, align 4, !dbg !4222
  %cmp = icmp ult i32 %inc, %6, !dbg !4223
  br i1 %cmp, label %do.body, label %do.end, !dbg !4220, !llvm.loop !4224

do.end:                                           ; preds = %do.cond
  ret void, !dbg !4226
}

; Function Attrs: noinline nounwind uwtable
define internal void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) #0 !dbg !4227 {
entry:
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !4230, metadata !DIExpression()), !dbg !4231
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !4232, metadata !DIExpression()), !dbg !4233
  %0 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4234
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %0, i32 0, i32 3, !dbg !4235
  %1 = load i64, i64* %bits, align 8, !dbg !4236
  %shr = lshr i64 %1, 1, !dbg !4236
  store i64 %shr, i64* %bits, align 8, !dbg !4236
  %2 = load i32*, i32** %bit_no.addr, align 8, !dbg !4237
  %3 = load i32, i32* %2, align 4, !dbg !4238
  %add = add i32 %3, 1, !dbg !4238
  store i32 %add, i32* %2, align 4, !dbg !4238
  ret void, !dbg !4239
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @reload(%struct.rtx_def* %first, i32 %global) #0 !dbg !3623 {
entry:
  %first.addr = alloca %struct.rtx_def*, align 8
  %global.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %ep = alloca %struct.elim_table*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %from = alloca i32, align 4
  %can_eliminate = alloca i32, align 4
  %something_changed = alloca i32, align 4
  %did_spill = alloca i32, align 4
  %starting_frame_size = alloca i64, align 8
  %x427 = alloca %struct.rtx_def*, align 8
  %to_spill = alloca i64, align 8
  %list = alloca %struct.rtx_def*, align 8
  %equiv_insn = alloca %struct.rtx_def*, align 8
  %old_frame_size = alloca i64, align 8
  %addr = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %reg949 = alloca %struct.rtx_def*, align 8
  %equiv = alloca %struct.rtx_def*, align 8
  %use = alloca %union.df_ref_d*, align 8
  %next = alloca %union.df_ref_d*, align 8
  %pnote = alloca %struct.rtx_def**, align 8
  %size = alloca i64, align 8
  store %struct.rtx_def* %first, %struct.rtx_def** %first.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %first.addr, metadata !4240, metadata !DIExpression()), !dbg !4241
  store i32 %global, i32* %global.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %global.addr, metadata !4242, metadata !DIExpression()), !dbg !4243
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4244, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4246, metadata !DIExpression()), !dbg !4247
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !4248, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.declare(metadata %struct.elim_table** %ep, metadata !4250, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !4252, metadata !DIExpression()), !dbg !4253
  call void @init_recog(), !dbg !4254
  store i32 0, i32* @failure, align 4, !dbg !4255
  store i64 0, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4256
  %0 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !4256
  %1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4256
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !4256
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !4256
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4256
  %2 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4256
  %cmp = icmp slt i64 %sub.ptr.sub, %2, !dbg !4256
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4256

cond.true:                                        ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4256
  %conv = trunc i64 %3 to i32, !dbg !4256
  call void @_obstack_newchunk(%struct.obstack* @reload_obstack, i32 %conv), !dbg !4256
  br label %cond.end, !dbg !4256

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4256

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !4256
  %4 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4256
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4256
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %4, !dbg !4256
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4256
  %6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4256
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !4256
  %cmp1 = icmp eq i8* %6, %7, !dbg !4256
  br i1 %cmp1, label %cond.true3, label %cond.false4, !dbg !4256

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !4256
  %bf.clear = and i8 %bf.load, -3, !dbg !4256
  %bf.set = or i8 %bf.clear, 2, !dbg !4256
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !4256
  br label %cond.end5, !dbg !4256

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !4256

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !4256
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !4256
  %sub.ptr.lhs.cast7 = ptrtoint i8* %8 to i64, !dbg !4256
  %sub.ptr.sub8 = sub i64 %sub.ptr.lhs.cast7, 0, !dbg !4256
  store i64 %sub.ptr.sub8, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4256
  %9 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4256
  %sub.ptr.lhs.cast9 = ptrtoint i8* %9 to i64, !dbg !4256
  %sub.ptr.sub10 = sub i64 %sub.ptr.lhs.cast9, 0, !dbg !4256
  %10 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !4256
  %conv11 = sext i32 %10 to i64, !dbg !4256
  %add = add nsw i64 %sub.ptr.sub10, %conv11, !dbg !4256
  %11 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !4256
  %neg = xor i32 %11, -1, !dbg !4256
  %conv12 = sext i32 %neg to i64, !dbg !4256
  %and = and i64 %add, %conv12, !dbg !4256
  %12 = inttoptr i64 %and to i8*, !dbg !4256
  store i8* %12, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4256
  %13 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4256
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !4256
  %15 = bitcast %struct._obstack_chunk* %14 to i8*, !dbg !4256
  %sub.ptr.lhs.cast13 = ptrtoint i8* %13 to i64, !dbg !4256
  %sub.ptr.rhs.cast14 = ptrtoint i8* %15 to i64, !dbg !4256
  %sub.ptr.sub15 = sub i64 %sub.ptr.lhs.cast13, %sub.ptr.rhs.cast14, !dbg !4256
  %16 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !4256
  %17 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !4256
  %18 = bitcast %struct._obstack_chunk* %17 to i8*, !dbg !4256
  %sub.ptr.lhs.cast16 = ptrtoint i8* %16 to i64, !dbg !4256
  %sub.ptr.rhs.cast17 = ptrtoint i8* %18 to i64, !dbg !4256
  %sub.ptr.sub18 = sub i64 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17, !dbg !4256
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !4256
  br i1 %cmp19, label %cond.true21, label %cond.false22, !dbg !4256

cond.true21:                                      ; preds = %cond.end5
  %19 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !4256
  store i8* %19, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4256
  br label %cond.end23, !dbg !4256

cond.false22:                                     ; preds = %cond.end5
  br label %cond.end23, !dbg !4256

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i8* [ %19, %cond.true21 ], [ null, %cond.false22 ], !dbg !4256
  %20 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4256
  store i8* %20, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !4256
  %21 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4256
  %22 = inttoptr i64 %21 to i8*, !dbg !4256
  store i8* %22, i8** @reload_firstobj, align 8, !dbg !4257
  %call = call %struct.rtx_def* @emit_note(i32 0), !dbg !4258
  %call25 = call i32 @get_max_uid(), !dbg !4259
  store i32 %call25, i32* @reload_first_uid, align 4, !dbg !4260
  call void @clear_secondary_mem(), !dbg !4261
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([53 x %struct.rtx_def*]* @spill_stack_slot to i8*), i8 0, i64 424, i1 false), !dbg !4262
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([53 x i32]* @spill_stack_slot_width to i8*), i8 0, i64 212, i1 false), !dbg !4263
  call void @init_save_areas(), !dbg !4264
  store i32 53, i32* %i, align 4, !dbg !4265
  br label %for.cond, !dbg !4267

for.cond:                                         ; preds = %for.inc, %cond.end23
  %23 = load i32, i32* %i, align 4, !dbg !4268
  %24 = load i32, i32* @max_regno, align 4, !dbg !4270
  %cmp26 = icmp slt i32 %23, %24, !dbg !4271
  br i1 %cmp26, label %for.body, label %for.end, !dbg !4272

for.body:                                         ; preds = %for.cond
  %25 = load i32, i32* %i, align 4, !dbg !4273
  call void @mark_home_live(i32 %25), !dbg !4274
  br label %for.inc, !dbg !4274

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %i, align 4, !dbg !4275
  %inc = add nsw i32 %26, 1, !dbg !4275
  store i32 %inc, i32* %i, align 4, !dbg !4275
  br label %for.cond, !dbg !4276, !llvm.loop !4277

for.end:                                          ; preds = %for.cond
  %27 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4279
  %add.ptr28 = getelementptr inbounds %struct.function, %struct.function* %27, i64 0, !dbg !4279
  %has_nonlocal_label = getelementptr inbounds %struct.function, %struct.function* %add.ptr28, i32 0, i32 20, !dbg !4281
  %bf.load29 = load i32, i32* %has_nonlocal_label, align 8, !dbg !4281
  %bf.lshr = lshr i32 %bf.load29, 20, !dbg !4281
  %bf.clear30 = and i32 %bf.lshr, 1, !dbg !4281
  %tobool = icmp ne i32 %bf.clear30, 0, !dbg !4279
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4282

land.lhs.true:                                    ; preds = %for.end
  %call31 = call zeroext i8 @has_nonexceptional_receiver(), !dbg !4283
  %conv32 = zext i8 %call31 to i32, !dbg !4283
  %tobool33 = icmp ne i32 %conv32, 0, !dbg !4283
  br i1 %tobool33, label %if.then, label %if.end, !dbg !4284

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 30), align 2, !dbg !4285
  br label %if.end, !dbg !4286

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.end
  %28 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 30), align 2, !dbg !4287
  %tobool34 = icmp ne i8 %28, 0, !dbg !4289
  br i1 %tobool34, label %if.then35, label %if.end50, !dbg !4290

if.then35:                                        ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !4291
  br label %for.cond36, !dbg !4293

for.cond36:                                       ; preds = %for.inc47, %if.then35
  %29 = load i32, i32* %i, align 4, !dbg !4294
  %cmp37 = icmp slt i32 %29, 53, !dbg !4296
  br i1 %cmp37, label %for.body39, label %for.end49, !dbg !4297

for.body39:                                       ; preds = %for.cond36
  %30 = load i32, i32* %i, align 4, !dbg !4298
  %idxprom = sext i32 %30 to i64, !dbg !4300
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i64 0, i64 %idxprom, !dbg !4300
  %31 = load i8, i8* %arrayidx, align 1, !dbg !4300
  %tobool40 = icmp ne i8 %31, 0, !dbg !4300
  br i1 %tobool40, label %if.end46, label %land.lhs.true41, !dbg !4301

land.lhs.true41:                                  ; preds = %for.body39
  %32 = load i32, i32* %i, align 4, !dbg !4302
  %idxprom42 = sext i32 %32 to i64, !dbg !4303
  %arrayidx43 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom42, !dbg !4303
  %33 = load i8, i8* %arrayidx43, align 1, !dbg !4303
  %tobool44 = icmp ne i8 %33, 0, !dbg !4303
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !4304

if.then45:                                        ; preds = %land.lhs.true41
  %34 = load i32, i32* %i, align 4, !dbg !4305
  call void @df_set_regs_ever_live(i32 %34, i8 zeroext 1), !dbg !4306
  br label %if.end46, !dbg !4306

if.end46:                                         ; preds = %if.then45, %land.lhs.true41, %for.body39
  br label %for.inc47, !dbg !4307

for.inc47:                                        ; preds = %if.end46
  %35 = load i32, i32* %i, align 4, !dbg !4308
  %inc48 = add nsw i32 %35, 1, !dbg !4308
  store i32 %inc48, i32* %i, align 4, !dbg !4308
  br label %for.cond36, !dbg !4309, !llvm.loop !4310

for.end49:                                        ; preds = %for.cond36
  br label %if.end50, !dbg !4311

if.end50:                                         ; preds = %for.end49, %if.end
  %36 = load i32, i32* @max_regno, align 4, !dbg !4312
  %conv51 = sext i32 %36 to i64, !dbg !4312
  %call52 = call i8* @xcalloc(i64 %conv51, i64 8), !dbg !4312
  %37 = bitcast i8* %call52 to %struct.rtx_def**, !dbg !4312
  store %struct.rtx_def** %37, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !4313
  %38 = load i32, i32* @max_regno, align 4, !dbg !4314
  %conv53 = sext i32 %38 to i64, !dbg !4314
  %call54 = call i8* @xcalloc(i64 %conv53, i64 8), !dbg !4314
  %39 = bitcast i8* %call54 to %struct.rtx_def**, !dbg !4314
  store %struct.rtx_def** %39, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !4315
  %40 = load i32, i32* @max_regno, align 4, !dbg !4316
  %conv55 = sext i32 %40 to i64, !dbg !4316
  %call56 = call i8* @xcalloc(i64 %conv55, i64 8), !dbg !4316
  %41 = bitcast i8* %call56 to %struct.rtx_def**, !dbg !4316
  store %struct.rtx_def** %41, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !4317
  %42 = load i32, i32* @max_regno, align 4, !dbg !4318
  %conv57 = sext i32 %42 to i64, !dbg !4318
  %call58 = call i8* @xcalloc(i64 %conv57, i64 8), !dbg !4318
  %43 = bitcast i8* %call58 to %struct.rtx_def**, !dbg !4318
  store %struct.rtx_def** %43, %struct.rtx_def*** @reg_equiv_alt_mem_list, align 8, !dbg !4319
  %44 = load i32, i32* @max_regno, align 4, !dbg !4320
  %conv59 = sext i32 %44 to i64, !dbg !4320
  %call60 = call i8* @xcalloc(i64 %conv59, i64 8), !dbg !4320
  %45 = bitcast i8* %call60 to %struct.rtx_def**, !dbg !4320
  store %struct.rtx_def** %45, %struct.rtx_def*** @reg_equiv_address, align 8, !dbg !4321
  %46 = load i32, i32* @max_regno, align 4, !dbg !4322
  %conv61 = sext i32 %46 to i64, !dbg !4322
  %call62 = call i8* @xcalloc(i64 %conv61, i64 4), !dbg !4322
  %47 = bitcast i8* %call62 to i32*, !dbg !4322
  store i32* %47, i32** @reg_max_ref_width, align 8, !dbg !4323
  %48 = load i32, i32* @max_regno, align 4, !dbg !4324
  %conv63 = sext i32 %48 to i64, !dbg !4324
  %call64 = call i8* @xcalloc(i64 %conv63, i64 2), !dbg !4324
  %49 = bitcast i8* %call64 to i16*, !dbg !4324
  store i16* %49, i16** @reg_old_renumber, align 8, !dbg !4325
  %50 = load i16*, i16** @reg_old_renumber, align 8, !dbg !4326
  %51 = bitcast i16* %50 to i8*, !dbg !4327
  %52 = load i16*, i16** @reg_renumber, align 8, !dbg !4328
  %53 = bitcast i16* %52 to i8*, !dbg !4327
  %54 = load i32, i32* @max_regno, align 4, !dbg !4329
  %conv65 = sext i32 %54 to i64, !dbg !4329
  %mul = mul i64 %conv65, 2, !dbg !4330
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %51, i8* align 2 %53, i64 %mul, i1 false), !dbg !4327
  %55 = load i32, i32* @max_regno, align 4, !dbg !4331
  %conv66 = sext i32 %55 to i64, !dbg !4331
  %mul67 = mul i64 8, %conv66, !dbg !4331
  %call68 = call i8* @xmalloc(i64 %mul67), !dbg !4331
  %56 = bitcast i8* %call68 to i64*, !dbg !4331
  store i64* %56, i64** @pseudo_forbidden_regs, align 8, !dbg !4332
  %57 = load i32, i32* @max_regno, align 4, !dbg !4333
  %conv69 = sext i32 %57 to i64, !dbg !4333
  %call70 = call i8* @xcalloc(i64 %conv69, i64 8), !dbg !4333
  %58 = bitcast i8* %call70 to i64*, !dbg !4333
  store i64* %58, i64** @pseudo_previous_regs, align 8, !dbg !4334
  store i64 0, i64* @bad_spill_regs_global, align 8, !dbg !4335
  store i32 0, i32* @num_eliminable_invariants, align 4, !dbg !4336
  %59 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8, !dbg !4337
  store %struct.rtx_def* %59, %struct.rtx_def** %insn, align 8, !dbg !4339
  br label %for.cond71, !dbg !4340

for.cond71:                                       ; preds = %for.inc292, %if.end50
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4341
  %tobool72 = icmp ne %struct.rtx_def* %60, null, !dbg !4343
  br i1 %tobool72, label %for.body73, label %for.end297, !dbg !4343

for.body73:                                       ; preds = %for.cond71
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !4344, metadata !DIExpression()), !dbg !4346
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4347
  %62 = bitcast %struct.rtx_def* %61 to i32*, !dbg !4347
  %bf.load74 = load i32, i32* %62, align 8, !dbg !4347
  %bf.clear75 = and i32 %bf.load74, 65535, !dbg !4347
  %cmp76 = icmp eq i32 %bf.clear75, 8, !dbg !4347
  br i1 %cmp76, label %cond.true92, label %lor.lhs.false, !dbg !4347

lor.lhs.false:                                    ; preds = %for.body73
  %63 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4347
  %64 = bitcast %struct.rtx_def* %63 to i32*, !dbg !4347
  %bf.load78 = load i32, i32* %64, align 8, !dbg !4347
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !4347
  %cmp80 = icmp eq i32 %bf.clear79, 7, !dbg !4347
  br i1 %cmp80, label %cond.true92, label %lor.lhs.false82, !dbg !4347

lor.lhs.false82:                                  ; preds = %lor.lhs.false
  %65 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4347
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !4347
  %bf.load83 = load i32, i32* %66, align 8, !dbg !4347
  %bf.clear84 = and i32 %bf.load83, 65535, !dbg !4347
  %cmp85 = icmp eq i32 %bf.clear84, 9, !dbg !4347
  br i1 %cmp85, label %cond.true92, label %lor.lhs.false87, !dbg !4347

lor.lhs.false87:                                  ; preds = %lor.lhs.false82
  %67 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4347
  %68 = bitcast %struct.rtx_def* %67 to i32*, !dbg !4347
  %bf.load88 = load i32, i32* %68, align 8, !dbg !4347
  %bf.clear89 = and i32 %bf.load88, 65535, !dbg !4347
  %cmp90 = icmp eq i32 %bf.clear89, 10, !dbg !4347
  br i1 %cmp90, label %cond.true92, label %cond.false111, !dbg !4347

cond.true92:                                      ; preds = %lor.lhs.false87, %lor.lhs.false82, %lor.lhs.false, %for.body73
  %69 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4347
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !4347
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4347
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4347
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx93 to %struct.rtx_def**, !dbg !4347
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4347
  %71 = bitcast %struct.rtx_def* %70 to i32*, !dbg !4347
  %bf.load94 = load i32, i32* %71, align 8, !dbg !4347
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !4347
  %cmp96 = icmp eq i32 %bf.clear95, 23, !dbg !4347
  br i1 %cmp96, label %cond.true98, label %cond.false103, !dbg !4347

cond.true98:                                      ; preds = %cond.true92
  %72 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4347
  %u99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !4347
  %fld100 = bitcast %union.u* %u99 to [1 x %union.rtunion_def]*, !dbg !4347
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i64 0, i64 5, !dbg !4347
  %rt_rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**, !dbg !4347
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx102, align 8, !dbg !4347
  br label %cond.end109, !dbg !4347

cond.false103:                                    ; preds = %cond.true92
  %74 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4347
  %75 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4347
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !4347
  %fld105 = bitcast %union.u* %u104 to [1 x %union.rtunion_def]*, !dbg !4347
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i64 0, i64 5, !dbg !4347
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !4347
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !4347
  %call108 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %74, %struct.rtx_def* %76), !dbg !4347
  br label %cond.end109, !dbg !4347

cond.end109:                                      ; preds = %cond.false103, %cond.true98
  %cond110 = phi %struct.rtx_def* [ %73, %cond.true98 ], [ %call108, %cond.false103 ], !dbg !4347
  br label %cond.end112, !dbg !4347

cond.false111:                                    ; preds = %lor.lhs.false87
  br label %cond.end112, !dbg !4347

cond.end112:                                      ; preds = %cond.false111, %cond.end109
  %cond113 = phi %struct.rtx_def* [ %cond110, %cond.end109 ], [ null, %cond.false111 ], !dbg !4347
  store %struct.rtx_def* %cond113, %struct.rtx_def** %set, align 8, !dbg !4346
  %77 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4348
  %78 = bitcast %struct.rtx_def* %77 to i32*, !dbg !4348
  %bf.load114 = load i32, i32* %78, align 8, !dbg !4348
  %bf.clear115 = and i32 %bf.load114, 65535, !dbg !4348
  %cmp116 = icmp eq i32 %bf.clear115, 8, !dbg !4348
  br i1 %cmp116, label %land.lhs.true133, label %lor.lhs.false118, !dbg !4348

lor.lhs.false118:                                 ; preds = %cond.end112
  %79 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4348
  %80 = bitcast %struct.rtx_def* %79 to i32*, !dbg !4348
  %bf.load119 = load i32, i32* %80, align 8, !dbg !4348
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !4348
  %cmp121 = icmp eq i32 %bf.clear120, 7, !dbg !4348
  br i1 %cmp121, label %land.lhs.true133, label %lor.lhs.false123, !dbg !4348

lor.lhs.false123:                                 ; preds = %lor.lhs.false118
  %81 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4348
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !4348
  %bf.load124 = load i32, i32* %82, align 8, !dbg !4348
  %bf.clear125 = and i32 %bf.load124, 65535, !dbg !4348
  %cmp126 = icmp eq i32 %bf.clear125, 9, !dbg !4348
  br i1 %cmp126, label %land.lhs.true133, label %lor.lhs.false128, !dbg !4348

lor.lhs.false128:                                 ; preds = %lor.lhs.false123
  %83 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4348
  %84 = bitcast %struct.rtx_def* %83 to i32*, !dbg !4348
  %bf.load129 = load i32, i32* %84, align 8, !dbg !4348
  %bf.clear130 = and i32 %bf.load129, 65535, !dbg !4348
  %cmp131 = icmp eq i32 %bf.clear130, 10, !dbg !4348
  br i1 %cmp131, label %land.lhs.true133, label %if.end151, !dbg !4350

land.lhs.true133:                                 ; preds = %lor.lhs.false128, %lor.lhs.false123, %lor.lhs.false118, %cond.end112
  %85 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4351
  %u134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1, !dbg !4351
  %fld135 = bitcast %union.u* %u134 to [1 x %union.rtunion_def]*, !dbg !4351
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i64 0, i64 5, !dbg !4351
  %rt_rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**, !dbg !4351
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx137, align 8, !dbg !4351
  %87 = bitcast %struct.rtx_def* %86 to i32*, !dbg !4351
  %bf.load138 = load i32, i32* %87, align 8, !dbg !4351
  %bf.clear139 = and i32 %bf.load138, 65535, !dbg !4351
  %cmp140 = icmp eq i32 %bf.clear139, 24, !dbg !4352
  br i1 %cmp140, label %land.lhs.true142, label %if.end151, !dbg !4353

land.lhs.true142:                                 ; preds = %land.lhs.true133
  %88 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4354
  %89 = bitcast %struct.rtx_def* %88 to i32*, !dbg !4354
  %bf.load143 = load i32, i32* %89, align 8, !dbg !4354
  %bf.lshr144 = lshr i32 %bf.load143, 16, !dbg !4354
  %bf.clear145 = and i32 %bf.lshr144, 255, !dbg !4354
  %cmp146 = icmp ne i32 %bf.clear145, 0, !dbg !4355
  br i1 %cmp146, label %if.then148, label %if.end151, !dbg !4356

if.then148:                                       ; preds = %land.lhs.true142
  %90 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4357
  %91 = bitcast %struct.rtx_def* %90 to i32*, !dbg !4357
  %bf.load149 = load i32, i32* %91, align 8, !dbg !4357
  %bf.clear150 = and i32 %bf.load149, -16711681, !dbg !4357
  store i32 %bf.clear150, i32* %91, align 8, !dbg !4357
  br label %if.end151, !dbg !4357

if.end151:                                        ; preds = %if.then148, %land.lhs.true142, %land.lhs.true133, %lor.lhs.false128
  %92 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4358
  %93 = bitcast %struct.rtx_def* %92 to i32*, !dbg !4358
  %bf.load152 = load i32, i32* %93, align 8, !dbg !4358
  %bf.clear153 = and i32 %bf.load152, 65535, !dbg !4358
  %cmp154 = icmp eq i32 %bf.clear153, 8, !dbg !4358
  br i1 %cmp154, label %land.lhs.true171, label %lor.lhs.false156, !dbg !4358

lor.lhs.false156:                                 ; preds = %if.end151
  %94 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4358
  %95 = bitcast %struct.rtx_def* %94 to i32*, !dbg !4358
  %bf.load157 = load i32, i32* %95, align 8, !dbg !4358
  %bf.clear158 = and i32 %bf.load157, 65535, !dbg !4358
  %cmp159 = icmp eq i32 %bf.clear158, 7, !dbg !4358
  br i1 %cmp159, label %land.lhs.true171, label %lor.lhs.false161, !dbg !4358

lor.lhs.false161:                                 ; preds = %lor.lhs.false156
  %96 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4358
  %97 = bitcast %struct.rtx_def* %96 to i32*, !dbg !4358
  %bf.load162 = load i32, i32* %97, align 8, !dbg !4358
  %bf.clear163 = and i32 %bf.load162, 65535, !dbg !4358
  %cmp164 = icmp eq i32 %bf.clear163, 9, !dbg !4358
  br i1 %cmp164, label %land.lhs.true171, label %lor.lhs.false166, !dbg !4358

lor.lhs.false166:                                 ; preds = %lor.lhs.false161
  %98 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4358
  %99 = bitcast %struct.rtx_def* %98 to i32*, !dbg !4358
  %bf.load167 = load i32, i32* %99, align 8, !dbg !4358
  %bf.clear168 = and i32 %bf.load167, 65535, !dbg !4358
  %cmp169 = icmp eq i32 %bf.clear168, 10, !dbg !4358
  br i1 %cmp169, label %land.lhs.true171, label %if.end181, !dbg !4358

land.lhs.true171:                                 ; preds = %lor.lhs.false166, %lor.lhs.false161, %lor.lhs.false156, %if.end151
  %100 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4358
  %101 = bitcast %struct.rtx_def* %100 to i32*, !dbg !4358
  %bf.load172 = load i32, i32* %101, align 8, !dbg !4358
  %bf.clear173 = and i32 %bf.load172, 65535, !dbg !4358
  %cmp174 = icmp eq i32 %bf.clear173, 7, !dbg !4358
  br i1 %cmp174, label %if.end181, label %if.then176, !dbg !4360

if.then176:                                       ; preds = %land.lhs.true171
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4361
  %u177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1, !dbg !4361
  %fld178 = bitcast %union.u* %u177 to [1 x %union.rtunion_def]*, !dbg !4361
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i64 0, i64 5, !dbg !4361
  %rt_rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**, !dbg !4361
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx180, align 8, !dbg !4361
  call void @scan_paradoxical_subregs(%struct.rtx_def* %103), !dbg !4362
  br label %if.end181, !dbg !4362

if.end181:                                        ; preds = %if.then176, %land.lhs.true171, %lor.lhs.false166
  %104 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4363
  %cmp182 = icmp ne %struct.rtx_def* %104, null, !dbg !4365
  br i1 %cmp182, label %land.lhs.true184, label %if.end291, !dbg !4366

land.lhs.true184:                                 ; preds = %if.end181
  %105 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4367
  %u185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1, !dbg !4367
  %fld186 = bitcast %union.u* %u185 to [1 x %union.rtunion_def]*, !dbg !4367
  %arrayidx187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld186, i64 0, i64 0, !dbg !4367
  %rt_rtx188 = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtx_def**, !dbg !4367
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx188, align 8, !dbg !4367
  %107 = bitcast %struct.rtx_def* %106 to i32*, !dbg !4367
  %bf.load189 = load i32, i32* %107, align 8, !dbg !4367
  %bf.clear190 = and i32 %bf.load189, 65535, !dbg !4367
  %cmp191 = icmp eq i32 %bf.clear190, 37, !dbg !4367
  br i1 %cmp191, label %if.then193, label %if.end291, !dbg !4368

if.then193:                                       ; preds = %land.lhs.true184
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !4369, metadata !DIExpression()), !dbg !4371
  %108 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4372
  %call194 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %108, i32 3, %struct.rtx_def* null), !dbg !4373
  store %struct.rtx_def* %call194, %struct.rtx_def** %note, align 8, !dbg !4371
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !4374, metadata !DIExpression()), !dbg !4375
  %109 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4376
  %tobool195 = icmp ne %struct.rtx_def* %109, null, !dbg !4376
  br i1 %tobool195, label %if.end197, label %if.then196, !dbg !4378

if.then196:                                       ; preds = %if.then193
  br label %for.inc292, !dbg !4379

if.end197:                                        ; preds = %if.then193
  %110 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4380
  %u198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1, !dbg !4380
  %fld199 = bitcast %union.u* %u198 to [1 x %union.rtunion_def]*, !dbg !4380
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i64 0, i64 0, !dbg !4380
  %rt_rtx201 = bitcast %union.rtunion_def* %arrayidx200 to %struct.rtx_def**, !dbg !4380
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx201, align 8, !dbg !4380
  %call202 = call i32 @rhs_regno(%struct.rtx_def* %111), !dbg !4380
  store i32 %call202, i32* %i, align 4, !dbg !4381
  %112 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4382
  %u203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1, !dbg !4382
  %fld204 = bitcast %union.u* %u203 to [1 x %union.rtunion_def]*, !dbg !4382
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i64 0, i64 0, !dbg !4382
  %rt_rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**, !dbg !4382
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx206, align 8, !dbg !4382
  store %struct.rtx_def* %113, %struct.rtx_def** %x, align 8, !dbg !4383
  %114 = load i32, i32* %i, align 4, !dbg !4384
  %cmp207 = icmp sle i32 %114, 57, !dbg !4386
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !4387

if.then209:                                       ; preds = %if.end197
  br label %for.inc292, !dbg !4388

if.end210:                                        ; preds = %if.end197
  %115 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4389
  %call211 = call i32 @function_invariant_p(%struct.rtx_def* %115), !dbg !4391
  %tobool212 = icmp ne i32 %call211, 0, !dbg !4391
  br i1 %tobool212, label %lor.lhs.false213, label %if.then226, !dbg !4392

lor.lhs.false213:                                 ; preds = %if.end210
  %116 = load i32, i32* @flag_pic, align 4, !dbg !4393
  %tobool214 = icmp ne i32 %116, 0, !dbg !4393
  br i1 %tobool214, label %lor.lhs.false215, label %if.then226, !dbg !4394

lor.lhs.false215:                                 ; preds = %lor.lhs.false213
  %117 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4395
  %118 = bitcast %struct.rtx_def* %117 to i32*, !dbg !4395
  %bf.load216 = load i32, i32* %118, align 8, !dbg !4395
  %bf.clear217 = and i32 %bf.load216, 65535, !dbg !4395
  %idxprom218 = sext i32 %bf.clear217 to i64, !dbg !4395
  %arrayidx219 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom218, !dbg !4395
  %119 = load i32, i32* %arrayidx219, align 4, !dbg !4395
  %cmp220 = icmp eq i32 %119, 9, !dbg !4395
  br i1 %cmp220, label %land.lhs.true222, label %if.else287, !dbg !4396

land.lhs.true222:                                 ; preds = %lor.lhs.false215
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4397
  %call223 = call zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def* %120), !dbg !4397
  %conv224 = zext i8 %call223 to i32, !dbg !4397
  %tobool225 = icmp ne i32 %conv224, 0, !dbg !4397
  br i1 %tobool225, label %if.then226, label %if.else287, !dbg !4398

if.then226:                                       ; preds = %land.lhs.true222, %lor.lhs.false213, %if.end210
  %121 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4399
  %call227 = call i32 @memory_operand(%struct.rtx_def* %121, i32 0), !dbg !4402
  %tobool228 = icmp ne i32 %call227, 0, !dbg !4402
  br i1 %tobool228, label %if.then229, label %if.else, !dbg !4403

if.then229:                                       ; preds = %if.then226
  %122 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4404
  %call230 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %122), !dbg !4406
  %123 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !4407
  %124 = load i32, i32* %i, align 4, !dbg !4408
  %idxprom231 = sext i32 %124 to i64, !dbg !4407
  %arrayidx232 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %123, i64 %idxprom231, !dbg !4407
  store %struct.rtx_def* %call230, %struct.rtx_def** %arrayidx232, align 8, !dbg !4409
  br label %if.end286, !dbg !4410

if.else:                                          ; preds = %if.then226
  %125 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4411
  %call233 = call i32 @function_invariant_p(%struct.rtx_def* %125), !dbg !4413
  %tobool234 = icmp ne i32 %call233, 0, !dbg !4413
  br i1 %tobool234, label %if.then235, label %if.else282, !dbg !4414

if.then235:                                       ; preds = %if.else
  %126 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4415
  %127 = bitcast %struct.rtx_def* %126 to i32*, !dbg !4415
  %bf.load236 = load i32, i32* %127, align 8, !dbg !4415
  %bf.clear237 = and i32 %bf.load236, 65535, !dbg !4415
  %cmp238 = icmp eq i32 %bf.clear237, 49, !dbg !4418
  br i1 %cmp238, label %if.then240, label %if.else245, !dbg !4419

if.then240:                                       ; preds = %if.then235
  %128 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4420
  %call241 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %128), !dbg !4422
  %129 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !4423
  %130 = load i32, i32* %i, align 4, !dbg !4424
  %idxprom242 = sext i32 %130 to i64, !dbg !4423
  %arrayidx243 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %129, i64 %idxprom242, !dbg !4423
  store %struct.rtx_def* %call241, %struct.rtx_def** %arrayidx243, align 8, !dbg !4425
  %131 = load i32, i32* @num_eliminable_invariants, align 4, !dbg !4426
  %inc244 = add nsw i32 %131, 1, !dbg !4426
  store i32 %inc244, i32* @num_eliminable_invariants, align 4, !dbg !4426
  br label %if.end281, !dbg !4427

if.else245:                                       ; preds = %if.then235
  %132 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4428
  %133 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !4430
  %cmp246 = icmp eq %struct.rtx_def* %132, %133, !dbg !4431
  br i1 %cmp246, label %if.then251, label %lor.lhs.false248, !dbg !4432

lor.lhs.false248:                                 ; preds = %if.else245
  %134 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4433
  %135 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !4434
  %cmp249 = icmp eq %struct.rtx_def* %134, %135, !dbg !4435
  br i1 %cmp249, label %if.then251, label %if.else255, !dbg !4436

if.then251:                                       ; preds = %lor.lhs.false248, %if.else245
  %136 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4437
  %137 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !4439
  %138 = load i32, i32* %i, align 4, !dbg !4440
  %idxprom252 = sext i32 %138 to i64, !dbg !4439
  %arrayidx253 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %137, i64 %idxprom252, !dbg !4439
  store %struct.rtx_def* %136, %struct.rtx_def** %arrayidx253, align 8, !dbg !4441
  %139 = load i32, i32* @num_eliminable_invariants, align 4, !dbg !4442
  %inc254 = add nsw i32 %139, 1, !dbg !4442
  store i32 %inc254, i32* @num_eliminable_invariants, align 4, !dbg !4442
  br label %if.end280, !dbg !4443

if.else255:                                       ; preds = %lor.lhs.false248
  %140 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4444
  %call256 = call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %140), !dbg !4444
  %tobool257 = icmp ne i8 %call256, 0, !dbg !4444
  br i1 %tobool257, label %if.then258, label %if.else261, !dbg !4446

if.then258:                                       ; preds = %if.else255
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4447
  %142 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !4448
  %143 = load i32, i32* %i, align 4, !dbg !4449
  %idxprom259 = sext i32 %143 to i64, !dbg !4448
  %arrayidx260 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %142, i64 %idxprom259, !dbg !4448
  store %struct.rtx_def* %141, %struct.rtx_def** %arrayidx260, align 8, !dbg !4450
  br label %if.end279, !dbg !4448

if.else261:                                       ; preds = %if.else255
  %144 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4451
  %u262 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1, !dbg !4451
  %fld263 = bitcast %union.u* %u262 to [1 x %union.rtunion_def]*, !dbg !4451
  %arrayidx264 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld263, i64 0, i64 0, !dbg !4451
  %rt_rtx265 = bitcast %union.rtunion_def* %arrayidx264 to %struct.rtx_def**, !dbg !4451
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx265, align 8, !dbg !4451
  %146 = bitcast %struct.rtx_def* %145 to i32*, !dbg !4451
  %bf.load266 = load i32, i32* %146, align 8, !dbg !4451
  %bf.lshr267 = lshr i32 %bf.load266, 16, !dbg !4451
  %bf.clear268 = and i32 %bf.lshr267, 255, !dbg !4451
  %147 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4453
  %call269 = call %struct.rtx_def* @force_const_mem(i32 %bf.clear268, %struct.rtx_def* %147), !dbg !4454
  %148 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !4455
  %149 = load i32, i32* %i, align 4, !dbg !4456
  %idxprom270 = sext i32 %149 to i64, !dbg !4455
  %arrayidx271 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %148, i64 %idxprom270, !dbg !4455
  store %struct.rtx_def* %call269, %struct.rtx_def** %arrayidx271, align 8, !dbg !4457
  %150 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !4458
  %151 = load i32, i32* %i, align 4, !dbg !4460
  %idxprom272 = sext i32 %151 to i64, !dbg !4458
  %arrayidx273 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %150, i64 %idxprom272, !dbg !4458
  %152 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx273, align 8, !dbg !4458
  %tobool274 = icmp ne %struct.rtx_def* %152, null, !dbg !4458
  br i1 %tobool274, label %if.end278, label %if.then275, !dbg !4461

if.then275:                                       ; preds = %if.else261
  %153 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !4462
  %154 = load i32, i32* %i, align 4, !dbg !4463
  %idxprom276 = sext i32 %154 to i64, !dbg !4462
  %arrayidx277 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %153, i64 %idxprom276, !dbg !4462
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx277, align 8, !dbg !4464
  br label %if.end278, !dbg !4462

if.end278:                                        ; preds = %if.then275, %if.else261
  br label %if.end279

if.end279:                                        ; preds = %if.end278, %if.then258
  br label %if.end280

if.end280:                                        ; preds = %if.end279, %if.then251
  br label %if.end281

if.end281:                                        ; preds = %if.end280, %if.then240
  br label %if.end285, !dbg !4465

if.else282:                                       ; preds = %if.else
  %155 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !4466
  %156 = load i32, i32* %i, align 4, !dbg !4468
  %idxprom283 = sext i32 %156 to i64, !dbg !4466
  %arrayidx284 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %155, i64 %idxprom283, !dbg !4466
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx284, align 8, !dbg !4469
  br label %for.inc292, !dbg !4470

if.end285:                                        ; preds = %if.end281
  br label %if.end286

if.end286:                                        ; preds = %if.end285, %if.then229
  br label %if.end290, !dbg !4471

if.else287:                                       ; preds = %land.lhs.true222, %lor.lhs.false215
  %157 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !4472
  %158 = load i32, i32* %i, align 4, !dbg !4473
  %idxprom288 = sext i32 %158 to i64, !dbg !4472
  %arrayidx289 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %157, i64 %idxprom288, !dbg !4472
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx289, align 8, !dbg !4474
  br label %if.end290

if.end290:                                        ; preds = %if.else287, %if.end286
  br label %if.end291, !dbg !4475

if.end291:                                        ; preds = %if.end290, %land.lhs.true184, %if.end181
  br label %for.inc292, !dbg !4476

for.inc292:                                       ; preds = %if.end291, %if.else282, %if.then209, %if.then196
  %159 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4477
  %u293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1, !dbg !4477
  %fld294 = bitcast %union.u* %u293 to [1 x %union.rtunion_def]*, !dbg !4477
  %arrayidx295 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld294, i64 0, i64 2, !dbg !4477
  %rt_rtx296 = bitcast %union.rtunion_def* %arrayidx295 to %struct.rtx_def**, !dbg !4477
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx296, align 8, !dbg !4477
  store %struct.rtx_def* %160, %struct.rtx_def** %insn, align 8, !dbg !4478
  br label %for.cond71, !dbg !4479, !llvm.loop !4480

for.end297:                                       ; preds = %for.cond71
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4482
  %tobool298 = icmp ne %struct._IO_FILE* %161, null, !dbg !4482
  br i1 %tobool298, label %if.then299, label %if.end316, !dbg !4484

if.then299:                                       ; preds = %for.end297
  store i32 53, i32* %i, align 4, !dbg !4485
  br label %for.cond300, !dbg !4487

for.cond300:                                      ; preds = %for.inc313, %if.then299
  %162 = load i32, i32* %i, align 4, !dbg !4488
  %163 = load i32, i32* @max_regno, align 4, !dbg !4490
  %cmp301 = icmp slt i32 %162, %163, !dbg !4491
  br i1 %cmp301, label %for.body303, label %for.end315, !dbg !4492

for.body303:                                      ; preds = %for.cond300
  %164 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !4493
  %165 = load i32, i32* %i, align 4, !dbg !4495
  %idxprom304 = sext i32 %165 to i64, !dbg !4493
  %arrayidx305 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %164, i64 %idxprom304, !dbg !4493
  %166 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx305, align 8, !dbg !4493
  %tobool306 = icmp ne %struct.rtx_def* %166, null, !dbg !4493
  br i1 %tobool306, label %if.then307, label %if.end312, !dbg !4496

if.then307:                                       ; preds = %for.body303
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4497
  %168 = load i32, i32* %i, align 4, !dbg !4499
  %call308 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %167, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i32 %168), !dbg !4500
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4501
  %170 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !4502
  %171 = load i32, i32* %i, align 4, !dbg !4503
  %idxprom309 = sext i32 %171 to i64, !dbg !4502
  %arrayidx310 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %170, i64 %idxprom309, !dbg !4502
  %172 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx310, align 8, !dbg !4502
  call void @print_inline_rtx(%struct._IO_FILE* %169, %struct.rtx_def* %172, i32 20), !dbg !4504
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4505
  %call311 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %173, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !4506
  br label %if.end312, !dbg !4507

if.end312:                                        ; preds = %if.then307, %for.body303
  br label %for.inc313, !dbg !4508

for.inc313:                                       ; preds = %if.end312
  %174 = load i32, i32* %i, align 4, !dbg !4509
  %inc314 = add nsw i32 %174, 1, !dbg !4509
  store i32 %inc314, i32* %i, align 4, !dbg !4509
  br label %for.cond300, !dbg !4510, !llvm.loop !4511

for.end315:                                       ; preds = %for.cond300
  br label %if.end316, !dbg !4512

if.end316:                                        ; preds = %for.end315, %for.end297
  call void @init_elim_table(), !dbg !4513
  %call317 = call i32 @get_first_label_num(), !dbg !4514
  store i32 %call317, i32* @first_label_num, align 4, !dbg !4515
  %call318 = call i32 @max_label_num(), !dbg !4516
  %175 = load i32, i32* @first_label_num, align 4, !dbg !4517
  %sub = sub nsw i32 %call318, %175, !dbg !4518
  store i32 %sub, i32* @num_labels, align 4, !dbg !4519
  %176 = load i32, i32* @num_labels, align 4, !dbg !4520
  %conv319 = sext i32 %176 to i64, !dbg !4520
  %mul320 = mul i64 1, %conv319, !dbg !4520
  %call321 = call i8* @xmalloc(i64 %mul320), !dbg !4520
  store i8* %call321, i8** @offsets_known_at, align 8, !dbg !4521
  %177 = load i32, i32* @num_labels, align 4, !dbg !4522
  %conv322 = sext i32 %177 to i64, !dbg !4522
  %mul323 = mul i64 %conv322, 4, !dbg !4523
  %mul324 = mul i64 %mul323, 8, !dbg !4524
  %call325 = call i8* @xmalloc(i64 %mul324), !dbg !4525
  %178 = bitcast i8* %call325 to [4 x i64]*, !dbg !4526
  store [4 x i64]* %178, [4 x i64]** @offsets_at, align 8, !dbg !4527
  %179 = load i32, i32* @max_regno, align 4, !dbg !4528
  %sub326 = sub nsw i32 %179, 57, !dbg !4528
  %sub327 = sub nsw i32 %sub326, 1, !dbg !4528
  %conv328 = sext i32 %sub327 to i64, !dbg !4528
  %mul329 = mul i64 4, %conv328, !dbg !4528
  %call330 = call i8* @xmalloc(i64 %mul329), !dbg !4528
  %180 = bitcast i8* %call330 to i32*, !dbg !4528
  store i32* %180, i32** @temp_pseudo_reg_arr, align 8, !dbg !4529
  store i32 0, i32* %n, align 4, !dbg !4530
  store i32 58, i32* %i, align 4, !dbg !4532
  br label %for.cond331, !dbg !4533

for.cond331:                                      ; preds = %for.inc338, %if.end316
  %181 = load i32, i32* %i, align 4, !dbg !4534
  %182 = load i32, i32* @max_regno, align 4, !dbg !4536
  %cmp332 = icmp slt i32 %181, %182, !dbg !4537
  br i1 %cmp332, label %for.body334, label %for.end340, !dbg !4538

for.body334:                                      ; preds = %for.cond331
  %183 = load i32, i32* %i, align 4, !dbg !4539
  %184 = load i32*, i32** @temp_pseudo_reg_arr, align 8, !dbg !4540
  %185 = load i32, i32* %n, align 4, !dbg !4541
  %inc335 = add nsw i32 %185, 1, !dbg !4541
  store i32 %inc335, i32* %n, align 4, !dbg !4541
  %idxprom336 = sext i32 %185 to i64, !dbg !4540
  %arrayidx337 = getelementptr inbounds i32, i32* %184, i64 %idxprom336, !dbg !4540
  store i32 %183, i32* %arrayidx337, align 4, !dbg !4542
  br label %for.inc338, !dbg !4540

for.inc338:                                       ; preds = %for.body334
  %186 = load i32, i32* %i, align 4, !dbg !4543
  %inc339 = add nsw i32 %186, 1, !dbg !4543
  store i32 %inc339, i32* %i, align 4, !dbg !4543
  br label %for.cond331, !dbg !4544, !llvm.loop !4545

for.end340:                                       ; preds = %for.cond331
  %187 = load i8, i8* @ira_conflicts_p, align 1, !dbg !4547
  %tobool341 = icmp ne i8 %187, 0, !dbg !4547
  br i1 %tobool341, label %if.then342, label %if.end343, !dbg !4549

if.then342:                                       ; preds = %for.end340
  %188 = load i32*, i32** @temp_pseudo_reg_arr, align 8, !dbg !4550
  %189 = load i32, i32* %n, align 4, !dbg !4551
  %190 = load i32*, i32** @reg_max_ref_width, align 8, !dbg !4552
  call void @ira_sort_regnos_for_alter_reg(i32* %188, i32 %189, i32* %190), !dbg !4553
  br label %if.end343, !dbg !4553

if.end343:                                        ; preds = %if.then342, %for.end340
  store i32 0, i32* %i, align 4, !dbg !4554
  br label %for.cond344, !dbg !4556

for.cond344:                                      ; preds = %for.inc350, %if.end343
  %191 = load i32, i32* %i, align 4, !dbg !4557
  %192 = load i32, i32* %n, align 4, !dbg !4559
  %cmp345 = icmp slt i32 %191, %192, !dbg !4560
  br i1 %cmp345, label %for.body347, label %for.end352, !dbg !4561

for.body347:                                      ; preds = %for.cond344
  %193 = load i32*, i32** @temp_pseudo_reg_arr, align 8, !dbg !4562
  %194 = load i32, i32* %i, align 4, !dbg !4563
  %idxprom348 = sext i32 %194 to i64, !dbg !4562
  %arrayidx349 = getelementptr inbounds i32, i32* %193, i64 %idxprom348, !dbg !4562
  %195 = load i32, i32* %arrayidx349, align 4, !dbg !4562
  call void @alter_reg(i32 %195, i32 -1, i8 zeroext 0), !dbg !4564
  br label %for.inc350, !dbg !4564

for.inc350:                                       ; preds = %for.body347
  %196 = load i32, i32* %i, align 4, !dbg !4565
  %inc351 = add nsw i32 %196, 1, !dbg !4565
  store i32 %inc351, i32* %i, align 4, !dbg !4565
  br label %for.cond344, !dbg !4566, !llvm.loop !4567

for.end352:                                       ; preds = %for.cond344
  %197 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8, !dbg !4569
  store %struct.rtx_def* %197, %struct.rtx_def** %insn, align 8, !dbg !4571
  br label %for.cond353, !dbg !4572

for.cond353:                                      ; preds = %for.inc382, %for.end352
  %198 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4573
  %tobool354 = icmp ne %struct.rtx_def* %198, null, !dbg !4573
  br i1 %tobool354, label %land.rhs, label %land.end, !dbg !4575

land.rhs:                                         ; preds = %for.cond353
  %199 = load i32, i32* @num_eliminable, align 4, !dbg !4576
  %tobool355 = icmp ne i32 %199, 0, !dbg !4575
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond353
  %200 = phi i1 [ false, %for.cond353 ], [ %tobool355, %land.rhs ], !dbg !4577
  br i1 %200, label %for.body356, label %for.end387, !dbg !4578

for.body356:                                      ; preds = %land.end
  %201 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4579
  %202 = bitcast %struct.rtx_def* %201 to i32*, !dbg !4579
  %bf.load357 = load i32, i32* %202, align 8, !dbg !4579
  %bf.clear358 = and i32 %bf.load357, 65535, !dbg !4579
  %cmp359 = icmp eq i32 %bf.clear358, 8, !dbg !4579
  br i1 %cmp359, label %if.then376, label %lor.lhs.false361, !dbg !4579

lor.lhs.false361:                                 ; preds = %for.body356
  %203 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4579
  %204 = bitcast %struct.rtx_def* %203 to i32*, !dbg !4579
  %bf.load362 = load i32, i32* %204, align 8, !dbg !4579
  %bf.clear363 = and i32 %bf.load362, 65535, !dbg !4579
  %cmp364 = icmp eq i32 %bf.clear363, 7, !dbg !4579
  br i1 %cmp364, label %if.then376, label %lor.lhs.false366, !dbg !4579

lor.lhs.false366:                                 ; preds = %lor.lhs.false361
  %205 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4579
  %206 = bitcast %struct.rtx_def* %205 to i32*, !dbg !4579
  %bf.load367 = load i32, i32* %206, align 8, !dbg !4579
  %bf.clear368 = and i32 %bf.load367, 65535, !dbg !4579
  %cmp369 = icmp eq i32 %bf.clear368, 9, !dbg !4579
  br i1 %cmp369, label %if.then376, label %lor.lhs.false371, !dbg !4579

lor.lhs.false371:                                 ; preds = %lor.lhs.false366
  %207 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4579
  %208 = bitcast %struct.rtx_def* %207 to i32*, !dbg !4579
  %bf.load372 = load i32, i32* %208, align 8, !dbg !4579
  %bf.clear373 = and i32 %bf.load372, 65535, !dbg !4579
  %cmp374 = icmp eq i32 %bf.clear373, 10, !dbg !4579
  br i1 %cmp374, label %if.then376, label %if.end381, !dbg !4581

if.then376:                                       ; preds = %lor.lhs.false371, %lor.lhs.false366, %lor.lhs.false361, %for.body356
  %209 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4582
  %u377 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1, !dbg !4582
  %fld378 = bitcast %union.u* %u377 to [1 x %union.rtunion_def]*, !dbg !4582
  %arrayidx379 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld378, i64 0, i64 5, !dbg !4582
  %rt_rtx380 = bitcast %union.rtunion_def* %arrayidx379 to %struct.rtx_def**, !dbg !4582
  %210 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx380, align 8, !dbg !4582
  call void @note_stores(%struct.rtx_def* %210, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @mark_not_eliminable, i8* null), !dbg !4583
  br label %if.end381, !dbg !4583

if.end381:                                        ; preds = %if.then376, %lor.lhs.false371
  br label %for.inc382, !dbg !4579

for.inc382:                                       ; preds = %if.end381
  %211 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4584
  %u383 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1, !dbg !4584
  %fld384 = bitcast %union.u* %u383 to [1 x %union.rtunion_def]*, !dbg !4584
  %arrayidx385 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld384, i64 0, i64 2, !dbg !4584
  %rt_rtx386 = bitcast %union.rtunion_def* %arrayidx385 to %struct.rtx_def**, !dbg !4584
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx386, align 8, !dbg !4584
  store %struct.rtx_def* %212, %struct.rtx_def** %insn, align 8, !dbg !4585
  br label %for.cond353, !dbg !4586, !llvm.loop !4587

for.end387:                                       ; preds = %land.end
  call void @maybe_fix_stack_asms(), !dbg !4589
  store %struct.insn_chain* null, %struct.insn_chain** @insns_need_reload, align 8, !dbg !4590
  store i32 0, i32* @something_needs_elimination, align 4, !dbg !4591
  store i32 -1, i32* @last_spill_reg, align 4, !dbg !4592
  store i64 0, i64* @used_spill_regs, align 8, !dbg !4593
  %213 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !4594
  store %struct.elim_table* %213, %struct.elim_table** %ep, align 8, !dbg !4596
  br label %for.cond388, !dbg !4597

for.cond388:                                      ; preds = %if.end405, %for.end387
  %214 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !4598
  %215 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !4600
  %arrayidx389 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %215, i64 4, !dbg !4600
  %cmp390 = icmp ult %struct.elim_table* %214, %arrayidx389, !dbg !4601
  br i1 %cmp390, label %for.body392, label %for.end406, !dbg !4602

for.body392:                                      ; preds = %for.cond388
  call void @llvm.dbg.declare(metadata i32* %from, metadata !4603, metadata !DIExpression()), !dbg !4605
  %216 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !4606
  %from393 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %216, i32 0, i32 0, !dbg !4607
  %217 = load i32, i32* %from393, align 8, !dbg !4607
  store i32 %217, i32* %from, align 4, !dbg !4605
  call void @llvm.dbg.declare(metadata i32* %can_eliminate, metadata !4608, metadata !DIExpression()), !dbg !4609
  store i32 0, i32* %can_eliminate, align 4, !dbg !4609
  br label %do.body, !dbg !4610

do.body:                                          ; preds = %land.end402, %for.body392
  %218 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !4611
  %can_eliminate394 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %218, i32 0, i32 3, !dbg !4613
  %219 = load i32, i32* %can_eliminate394, align 8, !dbg !4613
  %220 = load i32, i32* %can_eliminate, align 4, !dbg !4614
  %or = or i32 %220, %219, !dbg !4614
  store i32 %or, i32* %can_eliminate, align 4, !dbg !4614
  %221 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !4615
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %221, i32 1, !dbg !4615
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8, !dbg !4615
  br label %do.cond, !dbg !4616

do.cond:                                          ; preds = %do.body
  %222 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !4617
  %223 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !4618
  %arrayidx395 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %223, i64 4, !dbg !4618
  %cmp396 = icmp ult %struct.elim_table* %222, %arrayidx395, !dbg !4619
  br i1 %cmp396, label %land.rhs398, label %land.end402, !dbg !4620

land.rhs398:                                      ; preds = %do.cond
  %224 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !4621
  %from399 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %224, i32 0, i32 0, !dbg !4622
  %225 = load i32, i32* %from399, align 8, !dbg !4622
  %226 = load i32, i32* %from, align 4, !dbg !4623
  %cmp400 = icmp eq i32 %225, %226, !dbg !4624
  br label %land.end402

land.end402:                                      ; preds = %land.rhs398, %do.cond
  %227 = phi i1 [ false, %do.cond ], [ %cmp400, %land.rhs398 ], !dbg !4625
  br i1 %227, label %do.body, label %do.end, !dbg !4616, !llvm.loop !4626

do.end:                                           ; preds = %land.end402
  %228 = load i32, i32* %can_eliminate, align 4, !dbg !4628
  %tobool403 = icmp ne i32 %228, 0, !dbg !4628
  br i1 %tobool403, label %if.end405, label %if.then404, !dbg !4630

if.then404:                                       ; preds = %do.end
  %229 = load i32, i32* %from, align 4, !dbg !4631
  call void @spill_hard_reg(i32 %229, i32 1), !dbg !4632
  br label %if.end405, !dbg !4632

if.end405:                                        ; preds = %if.then404, %do.end
  br label %for.cond388, !dbg !4633, !llvm.loop !4634

for.end406:                                       ; preds = %for.cond388
  %230 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !4636
  %tobool407 = icmp ne i8 %230, 0, !dbg !4636
  br i1 %tobool407, label %if.then408, label %if.end409, !dbg !4638

if.then408:                                       ; preds = %for.end406
  call void @spill_hard_reg(i32 6, i32 1), !dbg !4639
  br label %if.end409, !dbg !4639

if.end409:                                        ; preds = %if.then408, %for.end406
  %231 = load i32, i32* %global.addr, align 4, !dbg !4640
  %call410 = call i32 @finish_spills(i32 %231), !dbg !4641
  store i32 1, i32* @reload_in_progress, align 4, !dbg !4642
  br label %for.cond411, !dbg !4643

for.cond411:                                      ; preds = %cond.end680, %if.then575, %if.then565, %if.end409
  call void @llvm.dbg.declare(metadata i32* %something_changed, metadata !4644, metadata !DIExpression()), !dbg !4648
  call void @llvm.dbg.declare(metadata i32* %did_spill, metadata !4649, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.declare(metadata i64* %starting_frame_size, metadata !4651, metadata !DIExpression()), !dbg !4652
  %call412 = call i64 @get_frame_size(), !dbg !4653
  store i64 %call412, i64* %starting_frame_size, align 8, !dbg !4654
  call void @set_initial_elim_offsets(), !dbg !4655
  call void @set_initial_label_offsets(), !dbg !4656
  store i32 53, i32* %i, align 4, !dbg !4657
  br label %for.cond413, !dbg !4659

for.cond413:                                      ; preds = %for.inc556, %for.cond411
  %232 = load i32, i32* %i, align 4, !dbg !4660
  %233 = load i32, i32* @max_regno, align 4, !dbg !4662
  %cmp414 = icmp slt i32 %232, %233, !dbg !4663
  br i1 %cmp414, label %for.body416, label %for.end558, !dbg !4664

for.body416:                                      ; preds = %for.cond413
  %234 = load i16*, i16** @reg_renumber, align 8, !dbg !4665
  %235 = load i32, i32* %i, align 4, !dbg !4667
  %idxprom417 = sext i32 %235 to i64, !dbg !4665
  %arrayidx418 = getelementptr inbounds i16, i16* %234, i64 %idxprom417, !dbg !4665
  %236 = load i16, i16* %arrayidx418, align 2, !dbg !4665
  %conv419 = sext i16 %236 to i32, !dbg !4665
  %cmp420 = icmp slt i32 %conv419, 0, !dbg !4668
  br i1 %cmp420, label %land.lhs.true422, label %if.end555, !dbg !4669

land.lhs.true422:                                 ; preds = %for.body416
  %237 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !4670
  %238 = load i32, i32* %i, align 4, !dbg !4671
  %idxprom423 = sext i32 %238 to i64, !dbg !4670
  %arrayidx424 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %237, i64 %idxprom423, !dbg !4670
  %239 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx424, align 8, !dbg !4670
  %tobool425 = icmp ne %struct.rtx_def* %239, null, !dbg !4670
  br i1 %tobool425, label %if.then426, label %if.end555, !dbg !4672

if.then426:                                       ; preds = %land.lhs.true422
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x427, metadata !4673, metadata !DIExpression()), !dbg !4675
  %240 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !4676
  %241 = load i32, i32* %i, align 4, !dbg !4677
  %idxprom428 = sext i32 %241 to i64, !dbg !4676
  %arrayidx429 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %240, i64 %idxprom428, !dbg !4676
  %242 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx429, align 8, !dbg !4676
  %call430 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %242, i32 0, %struct.rtx_def* null), !dbg !4678
  store %struct.rtx_def* %call430, %struct.rtx_def** %x427, align 8, !dbg !4675
  %243 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !4679
  %244 = load i32, i32* %i, align 4, !dbg !4679
  %idxprom431 = sext i32 %244 to i64, !dbg !4679
  %arrayidx432 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %243, i64 %idxprom431, !dbg !4679
  %245 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx432, align 8, !dbg !4679
  %246 = bitcast %struct.rtx_def* %245 to i32*, !dbg !4679
  %bf.load433 = load i32, i32* %246, align 8, !dbg !4679
  %bf.lshr434 = lshr i32 %bf.load433, 16, !dbg !4679
  %bf.clear435 = and i32 %bf.lshr434, 255, !dbg !4679
  %247 = load %struct.rtx_def*, %struct.rtx_def** %x427, align 8, !dbg !4681
  %u436 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1, !dbg !4681
  %fld437 = bitcast %union.u* %u436 to [1 x %union.rtunion_def]*, !dbg !4681
  %arrayidx438 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld437, i64 0, i64 0, !dbg !4681
  %rt_rtx439 = bitcast %union.rtunion_def* %arrayidx438 to %struct.rtx_def**, !dbg !4681
  %248 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx439, align 8, !dbg !4681
  %249 = load %struct.rtx_def*, %struct.rtx_def** %x427, align 8, !dbg !4682
  %u440 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %249, i32 0, i32 1, !dbg !4682
  %fld441 = bitcast %union.u* %u440 to [1 x %union.rtunion_def]*, !dbg !4682
  %arrayidx442 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld441, i64 0, i64 1, !dbg !4682
  %rt_mem = bitcast %union.rtunion_def* %arrayidx442 to %struct.mem_attrs**, !dbg !4682
  %250 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4682
  %cmp443 = icmp eq %struct.mem_attrs* %250, null, !dbg !4682
  br i1 %cmp443, label %cond.true445, label %cond.false446, !dbg !4682

cond.true445:                                     ; preds = %if.then426
  br label %cond.end452, !dbg !4682

cond.false446:                                    ; preds = %if.then426
  %251 = load %struct.rtx_def*, %struct.rtx_def** %x427, align 8, !dbg !4682
  %u447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %251, i32 0, i32 1, !dbg !4682
  %fld448 = bitcast %union.u* %u447 to [1 x %union.rtunion_def]*, !dbg !4682
  %arrayidx449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld448, i64 0, i64 1, !dbg !4682
  %rt_mem450 = bitcast %union.rtunion_def* %arrayidx449 to %struct.mem_attrs**, !dbg !4682
  %252 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem450, align 8, !dbg !4682
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %252, i32 0, i32 5, !dbg !4682
  %253 = load i8, i8* %addrspace, align 8, !dbg !4682
  %conv451 = zext i8 %253 to i32, !dbg !4682
  br label %cond.end452, !dbg !4682

cond.end452:                                      ; preds = %cond.false446, %cond.true445
  %cond453 = phi i32 [ 0, %cond.true445 ], [ %conv451, %cond.false446 ], !dbg !4682
  %conv454 = trunc i32 %cond453 to i8, !dbg !4682
  %call455 = call i32 @strict_memory_address_addr_space_p(i32 %bf.clear435, %struct.rtx_def* %248, i8 zeroext %conv454), !dbg !4683
  %tobool456 = icmp ne i32 %call455, 0, !dbg !4683
  br i1 %tobool456, label %if.then457, label %if.else462, !dbg !4684

if.then457:                                       ; preds = %cond.end452
  %254 = load %struct.rtx_def*, %struct.rtx_def** %x427, align 8, !dbg !4685
  %255 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !4686
  %256 = load i32, i32* %i, align 4, !dbg !4687
  %idxprom458 = sext i32 %256 to i64, !dbg !4686
  %arrayidx459 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %255, i64 %idxprom458, !dbg !4686
  store %struct.rtx_def* %254, %struct.rtx_def** %arrayidx459, align 8, !dbg !4688
  %257 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8, !dbg !4689
  %258 = load i32, i32* %i, align 4, !dbg !4690
  %idxprom460 = sext i32 %258 to i64, !dbg !4689
  %arrayidx461 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %257, i64 %idxprom460, !dbg !4689
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx461, align 8, !dbg !4691
  br label %if.end554, !dbg !4686

if.else462:                                       ; preds = %cond.end452
  %259 = load %struct.rtx_def*, %struct.rtx_def** %x427, align 8, !dbg !4692
  %u463 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %259, i32 0, i32 1, !dbg !4692
  %fld464 = bitcast %union.u* %u463 to [1 x %union.rtunion_def]*, !dbg !4692
  %arrayidx465 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld464, i64 0, i64 0, !dbg !4692
  %rt_rtx466 = bitcast %union.rtunion_def* %arrayidx465 to %struct.rtx_def**, !dbg !4692
  %260 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx466, align 8, !dbg !4692
  %261 = bitcast %struct.rtx_def* %260 to i32*, !dbg !4692
  %bf.load467 = load i32, i32* %261, align 8, !dbg !4692
  %bf.clear468 = and i32 %bf.load467, 65535, !dbg !4692
  %idxprom469 = sext i32 %bf.clear468 to i64, !dbg !4692
  %arrayidx470 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom469, !dbg !4692
  %262 = load i32, i32* %arrayidx470, align 4, !dbg !4692
  %cmp471 = icmp eq i32 %262, 9, !dbg !4692
  br i1 %cmp471, label %if.then539, label %lor.lhs.false473, !dbg !4694

lor.lhs.false473:                                 ; preds = %if.else462
  %263 = load %struct.rtx_def*, %struct.rtx_def** %x427, align 8, !dbg !4695
  %u474 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %263, i32 0, i32 1, !dbg !4695
  %fld475 = bitcast %union.u* %u474 to [1 x %union.rtunion_def]*, !dbg !4695
  %arrayidx476 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld475, i64 0, i64 0, !dbg !4695
  %rt_rtx477 = bitcast %union.rtunion_def* %arrayidx476 to %struct.rtx_def**, !dbg !4695
  %264 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx477, align 8, !dbg !4695
  %265 = bitcast %struct.rtx_def* %264 to i32*, !dbg !4695
  %bf.load478 = load i32, i32* %265, align 8, !dbg !4695
  %bf.clear479 = and i32 %bf.load478, 65535, !dbg !4695
  %cmp480 = icmp eq i32 %bf.clear479, 37, !dbg !4695
  br i1 %cmp480, label %land.lhs.true482, label %lor.lhs.false490, !dbg !4696

land.lhs.true482:                                 ; preds = %lor.lhs.false473
  %266 = load %struct.rtx_def*, %struct.rtx_def** %x427, align 8, !dbg !4697
  %u483 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %266, i32 0, i32 1, !dbg !4697
  %fld484 = bitcast %union.u* %u483 to [1 x %union.rtunion_def]*, !dbg !4697
  %arrayidx485 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld484, i64 0, i64 0, !dbg !4697
  %rt_rtx486 = bitcast %union.rtunion_def* %arrayidx485 to %struct.rtx_def**, !dbg !4697
  %267 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx486, align 8, !dbg !4697
  %call487 = call i32 @rhs_regno(%struct.rtx_def* %267), !dbg !4697
  %cmp488 = icmp ult i32 %call487, 53, !dbg !4698
  br i1 %cmp488, label %if.then539, label %lor.lhs.false490, !dbg !4699

lor.lhs.false490:                                 ; preds = %land.lhs.true482, %lor.lhs.false473
  %268 = load %struct.rtx_def*, %struct.rtx_def** %x427, align 8, !dbg !4700
  %u491 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %268, i32 0, i32 1, !dbg !4700
  %fld492 = bitcast %union.u* %u491 to [1 x %union.rtunion_def]*, !dbg !4700
  %arrayidx493 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld492, i64 0, i64 0, !dbg !4700
  %rt_rtx494 = bitcast %union.rtunion_def* %arrayidx493 to %struct.rtx_def**, !dbg !4700
  %269 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx494, align 8, !dbg !4700
  %270 = bitcast %struct.rtx_def* %269 to i32*, !dbg !4700
  %bf.load495 = load i32, i32* %270, align 8, !dbg !4700
  %bf.clear496 = and i32 %bf.load495, 65535, !dbg !4700
  %cmp497 = icmp eq i32 %bf.clear496, 49, !dbg !4701
  br i1 %cmp497, label %land.lhs.true499, label %if.else548, !dbg !4702

land.lhs.true499:                                 ; preds = %lor.lhs.false490
  %271 = load %struct.rtx_def*, %struct.rtx_def** %x427, align 8, !dbg !4703
  %u500 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %271, i32 0, i32 1, !dbg !4703
  %fld501 = bitcast %union.u* %u500 to [1 x %union.rtunion_def]*, !dbg !4703
  %arrayidx502 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld501, i64 0, i64 0, !dbg !4703
  %rt_rtx503 = bitcast %union.rtunion_def* %arrayidx502 to %struct.rtx_def**, !dbg !4703
  %272 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx503, align 8, !dbg !4703
  %u504 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %272, i32 0, i32 1, !dbg !4703
  %fld505 = bitcast %union.u* %u504 to [1 x %union.rtunion_def]*, !dbg !4703
  %arrayidx506 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld505, i64 0, i64 0, !dbg !4703
  %rt_rtx507 = bitcast %union.rtunion_def* %arrayidx506 to %struct.rtx_def**, !dbg !4703
  %273 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx507, align 8, !dbg !4703
  %274 = bitcast %struct.rtx_def* %273 to i32*, !dbg !4703
  %bf.load508 = load i32, i32* %274, align 8, !dbg !4703
  %bf.clear509 = and i32 %bf.load508, 65535, !dbg !4703
  %cmp510 = icmp eq i32 %bf.clear509, 37, !dbg !4703
  br i1 %cmp510, label %land.lhs.true512, label %if.else548, !dbg !4704

land.lhs.true512:                                 ; preds = %land.lhs.true499
  %275 = load %struct.rtx_def*, %struct.rtx_def** %x427, align 8, !dbg !4705
  %u513 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %275, i32 0, i32 1, !dbg !4705
  %fld514 = bitcast %union.u* %u513 to [1 x %union.rtunion_def]*, !dbg !4705
  %arrayidx515 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld514, i64 0, i64 0, !dbg !4705
  %rt_rtx516 = bitcast %union.rtunion_def* %arrayidx515 to %struct.rtx_def**, !dbg !4705
  %276 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx516, align 8, !dbg !4705
  %u517 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1, !dbg !4705
  %fld518 = bitcast %union.u* %u517 to [1 x %union.rtunion_def]*, !dbg !4705
  %arrayidx519 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld518, i64 0, i64 0, !dbg !4705
  %rt_rtx520 = bitcast %union.rtunion_def* %arrayidx519 to %struct.rtx_def**, !dbg !4705
  %277 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx520, align 8, !dbg !4705
  %call521 = call i32 @rhs_regno(%struct.rtx_def* %277), !dbg !4705
  %cmp522 = icmp ult i32 %call521, 53, !dbg !4706
  br i1 %cmp522, label %land.lhs.true524, label %if.else548, !dbg !4707

land.lhs.true524:                                 ; preds = %land.lhs.true512
  %278 = load %struct.rtx_def*, %struct.rtx_def** %x427, align 8, !dbg !4708
  %u525 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1, !dbg !4708
  %fld526 = bitcast %union.u* %u525 to [1 x %union.rtunion_def]*, !dbg !4708
  %arrayidx527 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld526, i64 0, i64 0, !dbg !4708
  %rt_rtx528 = bitcast %union.rtunion_def* %arrayidx527 to %struct.rtx_def**, !dbg !4708
  %279 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx528, align 8, !dbg !4708
  %u529 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %279, i32 0, i32 1, !dbg !4708
  %fld530 = bitcast %union.u* %u529 to [1 x %union.rtunion_def]*, !dbg !4708
  %arrayidx531 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld530, i64 0, i64 1, !dbg !4708
  %rt_rtx532 = bitcast %union.rtunion_def* %arrayidx531 to %struct.rtx_def**, !dbg !4708
  %280 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx532, align 8, !dbg !4708
  %281 = bitcast %struct.rtx_def* %280 to i32*, !dbg !4708
  %bf.load533 = load i32, i32* %281, align 8, !dbg !4708
  %bf.clear534 = and i32 %bf.load533, 65535, !dbg !4708
  %idxprom535 = sext i32 %bf.clear534 to i64, !dbg !4708
  %arrayidx536 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom535, !dbg !4708
  %282 = load i32, i32* %arrayidx536, align 4, !dbg !4708
  %cmp537 = icmp eq i32 %282, 9, !dbg !4708
  br i1 %cmp537, label %if.then539, label %if.else548, !dbg !4709

if.then539:                                       ; preds = %land.lhs.true524, %land.lhs.true482, %if.else462
  %283 = load %struct.rtx_def*, %struct.rtx_def** %x427, align 8, !dbg !4710
  %u540 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %283, i32 0, i32 1, !dbg !4710
  %fld541 = bitcast %union.u* %u540 to [1 x %union.rtunion_def]*, !dbg !4710
  %arrayidx542 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld541, i64 0, i64 0, !dbg !4710
  %rt_rtx543 = bitcast %union.rtunion_def* %arrayidx542 to %struct.rtx_def**, !dbg !4710
  %284 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx543, align 8, !dbg !4710
  %285 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8, !dbg !4711
  %286 = load i32, i32* %i, align 4, !dbg !4712
  %idxprom544 = sext i32 %286 to i64, !dbg !4711
  %arrayidx545 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %285, i64 %idxprom544, !dbg !4711
  store %struct.rtx_def* %284, %struct.rtx_def** %arrayidx545, align 8, !dbg !4713
  %287 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !4714
  %288 = load i32, i32* %i, align 4, !dbg !4715
  %idxprom546 = sext i32 %288 to i64, !dbg !4714
  %arrayidx547 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %287, i64 %idxprom546, !dbg !4714
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx547, align 8, !dbg !4716
  br label %if.end553, !dbg !4711

if.else548:                                       ; preds = %land.lhs.true524, %land.lhs.true512, %land.lhs.true499, %lor.lhs.false490
  %289 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !4717
  %290 = load i32, i32* %i, align 4, !dbg !4719
  %idxprom549 = sext i32 %290 to i64, !dbg !4717
  %arrayidx550 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %289, i64 %idxprom549, !dbg !4717
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx550, align 8, !dbg !4720
  %291 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !4721
  %292 = load i32, i32* %i, align 4, !dbg !4722
  %idxprom551 = sext i32 %292 to i64, !dbg !4721
  %arrayidx552 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %291, i64 %idxprom551, !dbg !4721
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx552, align 8, !dbg !4723
  %293 = load i32, i32* %i, align 4, !dbg !4724
  call void @alter_reg(i32 %293, i32 -1, i8 zeroext 1), !dbg !4725
  br label %if.end553

if.end553:                                        ; preds = %if.else548, %if.then539
  br label %if.end554

if.end554:                                        ; preds = %if.end553, %if.then457
  br label %if.end555, !dbg !4726

if.end555:                                        ; preds = %if.end554, %land.lhs.true422, %for.body416
  br label %for.inc556, !dbg !4727

for.inc556:                                       ; preds = %if.end555
  %294 = load i32, i32* %i, align 4, !dbg !4728
  %inc557 = add nsw i32 %294, 1, !dbg !4728
  store i32 %inc557, i32* %i, align 4, !dbg !4728
  br label %for.cond413, !dbg !4729, !llvm.loop !4730

for.end558:                                       ; preds = %for.cond413
  %295 = load i32, i32* @caller_save_needed, align 4, !dbg !4732
  %tobool559 = icmp ne i32 %295, 0, !dbg !4732
  br i1 %tobool559, label %if.then560, label %if.end561, !dbg !4734

if.then560:                                       ; preds = %for.end558
  call void @setup_save_areas(), !dbg !4735
  br label %if.end561, !dbg !4735

if.end561:                                        ; preds = %if.then560, %for.end558
  %296 = load i64, i64* %starting_frame_size, align 8, !dbg !4736
  %call562 = call i64 @get_frame_size(), !dbg !4738
  %cmp563 = icmp ne i64 %296, %call562, !dbg !4739
  br i1 %cmp563, label %if.then565, label %if.end566, !dbg !4740

if.then565:                                       ; preds = %if.end561
  br label %for.cond411, !dbg !4741, !llvm.loop !4742

if.end566:                                        ; preds = %if.end561
  %297 = load i64, i64* %starting_frame_size, align 8, !dbg !4745
  %tobool567 = icmp ne i64 %297, 0, !dbg !4745
  br i1 %tobool567, label %land.lhs.true568, label %if.end577, !dbg !4747

land.lhs.true568:                                 ; preds = %if.end566
  %298 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 22), align 4, !dbg !4748
  %tobool569 = icmp ne i32 %298, 0, !dbg !4749
  br i1 %tobool569, label %if.then570, label %if.end577, !dbg !4750

if.then570:                                       ; preds = %land.lhs.true568
  %299 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 22), align 4, !dbg !4751
  %call571 = call %struct.rtx_def* @assign_stack_local(i32 1, i64 0, i32 %299), !dbg !4753
  %300 = load i64, i64* %starting_frame_size, align 8, !dbg !4754
  %call572 = call i64 @get_frame_size(), !dbg !4756
  %cmp573 = icmp ne i64 %300, %call572, !dbg !4757
  br i1 %cmp573, label %if.then575, label %if.end576, !dbg !4758

if.then575:                                       ; preds = %if.then570
  br label %for.cond411, !dbg !4759, !llvm.loop !4742

if.end576:                                        ; preds = %if.then570
  br label %if.end577, !dbg !4760

if.end577:                                        ; preds = %if.end576, %land.lhs.true568, %if.end566
  %301 = load i32, i32* @caller_save_needed, align 4, !dbg !4761
  %tobool578 = icmp ne i32 %301, 0, !dbg !4761
  br i1 %tobool578, label %if.then579, label %if.end621, !dbg !4763

if.then579:                                       ; preds = %if.end577
  call void @save_call_clobbered_regs(), !dbg !4764
  store i64 0, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4766
  %302 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !4766
  %303 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4766
  %sub.ptr.lhs.cast580 = ptrtoint i8* %302 to i64, !dbg !4766
  %sub.ptr.rhs.cast581 = ptrtoint i8* %303 to i64, !dbg !4766
  %sub.ptr.sub582 = sub i64 %sub.ptr.lhs.cast580, %sub.ptr.rhs.cast581, !dbg !4766
  %304 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4766
  %cmp583 = icmp slt i64 %sub.ptr.sub582, %304, !dbg !4766
  br i1 %cmp583, label %cond.true585, label %cond.false587, !dbg !4766

cond.true585:                                     ; preds = %if.then579
  %305 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4766
  %conv586 = trunc i64 %305 to i32, !dbg !4766
  call void @_obstack_newchunk(%struct.obstack* @reload_obstack, i32 %conv586), !dbg !4766
  br label %cond.end588, !dbg !4766

cond.false587:                                    ; preds = %if.then579
  br label %cond.end588, !dbg !4766

cond.end588:                                      ; preds = %cond.false587, %cond.true585
  %cond589 = phi i32 [ 0, %cond.true585 ], [ 0, %cond.false587 ], !dbg !4766
  %306 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4766
  %307 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4766
  %add.ptr590 = getelementptr inbounds i8, i8* %307, i64 %306, !dbg !4766
  store i8* %add.ptr590, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4766
  %308 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4766
  %309 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !4766
  %cmp591 = icmp eq i8* %308, %309, !dbg !4766
  br i1 %cmp591, label %cond.true593, label %cond.false597, !dbg !4766

cond.true593:                                     ; preds = %cond.end588
  %bf.load594 = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !4766
  %bf.clear595 = and i8 %bf.load594, -3, !dbg !4766
  %bf.set596 = or i8 %bf.clear595, 2, !dbg !4766
  store i8 %bf.set596, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !4766
  br label %cond.end598, !dbg !4766

cond.false597:                                    ; preds = %cond.end588
  br label %cond.end598, !dbg !4766

cond.end598:                                      ; preds = %cond.false597, %cond.true593
  %cond599 = phi i32 [ 0, %cond.true593 ], [ 0, %cond.false597 ], !dbg !4766
  %310 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !4766
  %sub.ptr.lhs.cast600 = ptrtoint i8* %310 to i64, !dbg !4766
  %sub.ptr.sub601 = sub i64 %sub.ptr.lhs.cast600, 0, !dbg !4766
  store i64 %sub.ptr.sub601, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4766
  %311 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4766
  %sub.ptr.lhs.cast602 = ptrtoint i8* %311 to i64, !dbg !4766
  %sub.ptr.sub603 = sub i64 %sub.ptr.lhs.cast602, 0, !dbg !4766
  %312 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !4766
  %conv604 = sext i32 %312 to i64, !dbg !4766
  %add605 = add nsw i64 %sub.ptr.sub603, %conv604, !dbg !4766
  %313 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !4766
  %neg606 = xor i32 %313, -1, !dbg !4766
  %conv607 = sext i32 %neg606 to i64, !dbg !4766
  %and608 = and i64 %add605, %conv607, !dbg !4766
  %314 = inttoptr i64 %and608 to i8*, !dbg !4766
  store i8* %314, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4766
  %315 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4766
  %316 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !4766
  %317 = bitcast %struct._obstack_chunk* %316 to i8*, !dbg !4766
  %sub.ptr.lhs.cast609 = ptrtoint i8* %315 to i64, !dbg !4766
  %sub.ptr.rhs.cast610 = ptrtoint i8* %317 to i64, !dbg !4766
  %sub.ptr.sub611 = sub i64 %sub.ptr.lhs.cast609, %sub.ptr.rhs.cast610, !dbg !4766
  %318 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !4766
  %319 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !4766
  %320 = bitcast %struct._obstack_chunk* %319 to i8*, !dbg !4766
  %sub.ptr.lhs.cast612 = ptrtoint i8* %318 to i64, !dbg !4766
  %sub.ptr.rhs.cast613 = ptrtoint i8* %320 to i64, !dbg !4766
  %sub.ptr.sub614 = sub i64 %sub.ptr.lhs.cast612, %sub.ptr.rhs.cast613, !dbg !4766
  %cmp615 = icmp sgt i64 %sub.ptr.sub611, %sub.ptr.sub614, !dbg !4766
  br i1 %cmp615, label %cond.true617, label %cond.false618, !dbg !4766

cond.true617:                                     ; preds = %cond.end598
  %321 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !4766
  store i8* %321, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4766
  br label %cond.end619, !dbg !4766

cond.false618:                                    ; preds = %cond.end598
  br label %cond.end619, !dbg !4766

cond.end619:                                      ; preds = %cond.false618, %cond.true617
  %cond620 = phi i8* [ %321, %cond.true617 ], [ null, %cond.false618 ], !dbg !4766
  %322 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4766
  store i8* %322, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !4766
  %323 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4766
  %324 = inttoptr i64 %323 to i8*, !dbg !4766
  store i8* %324, i8** @reload_firstobj, align 8, !dbg !4767
  br label %if.end621, !dbg !4768

if.end621:                                        ; preds = %cond.end619, %if.end577
  %325 = load i32, i32* %global.addr, align 4, !dbg !4769
  call void @calculate_needs_all_insns(i32 %325), !dbg !4770
  %326 = load i8, i8* @ira_conflicts_p, align 1, !dbg !4771
  %tobool622 = icmp ne i8 %326, 0, !dbg !4771
  br i1 %tobool622, label %if.end624, label %if.then623, !dbg !4773

if.then623:                                       ; preds = %if.end621
  call void @bitmap_clear(%struct.bitmap_head_def* @spilled_pseudos), !dbg !4774
  br label %if.end624, !dbg !4774

if.end624:                                        ; preds = %if.then623, %if.end621
  store i32 0, i32* %did_spill, align 4, !dbg !4775
  store i32 0, i32* %something_changed, align 4, !dbg !4776
  %327 = load i64, i64* %starting_frame_size, align 8, !dbg !4777
  %call625 = call i64 @get_frame_size(), !dbg !4779
  %cmp626 = icmp ne i64 %327, %call625, !dbg !4780
  br i1 %cmp626, label %if.then628, label %if.else629, !dbg !4781

if.then628:                                       ; preds = %if.end624
  store i32 1, i32* %something_changed, align 4, !dbg !4782
  br label %if.end634, !dbg !4783

if.else629:                                       ; preds = %if.end624
  %call630 = call zeroext i8 @verify_initial_elim_offsets(), !dbg !4784
  %tobool631 = icmp ne i8 %call630, 0, !dbg !4784
  br i1 %tobool631, label %if.end633, label %if.then632, !dbg !4786

if.then632:                                       ; preds = %if.else629
  store i32 1, i32* %something_changed, align 4, !dbg !4787
  br label %if.end633, !dbg !4788

if.end633:                                        ; preds = %if.then632, %if.else629
  br label %if.end634

if.end634:                                        ; preds = %if.end633, %if.then628
  call void @llvm.dbg.declare(metadata i64* %to_spill, metadata !4789, metadata !DIExpression()), !dbg !4791
  store i64 0, i64* %to_spill, align 8, !dbg !4792
  call void @update_eliminables(i64* %to_spill), !dbg !4793
  %328 = load i64, i64* %to_spill, align 8, !dbg !4794
  %neg635 = xor i64 %328, -1, !dbg !4794
  %329 = load i64, i64* @used_spill_regs, align 8, !dbg !4794
  %and636 = and i64 %329, %neg635, !dbg !4794
  store i64 %and636, i64* @used_spill_regs, align 8, !dbg !4794
  store i32 0, i32* %i, align 4, !dbg !4795
  br label %for.cond637, !dbg !4797

for.cond637:                                      ; preds = %for.inc645, %if.end634
  %330 = load i32, i32* %i, align 4, !dbg !4798
  %cmp638 = icmp slt i32 %330, 53, !dbg !4800
  br i1 %cmp638, label %for.body640, label %for.end647, !dbg !4801

for.body640:                                      ; preds = %for.cond637
  %331 = load i64, i64* %to_spill, align 8, !dbg !4802
  %332 = load i32, i32* %i, align 4, !dbg !4802
  %sh_prom = zext i32 %332 to i64, !dbg !4802
  %shl = shl i64 1, %sh_prom, !dbg !4802
  %and641 = and i64 %331, %shl, !dbg !4802
  %tobool642 = icmp ne i64 %and641, 0, !dbg !4802
  br i1 %tobool642, label %if.then643, label %if.end644, !dbg !4804

if.then643:                                       ; preds = %for.body640
  %333 = load i32, i32* %i, align 4, !dbg !4805
  call void @spill_hard_reg(i32 %333, i32 1), !dbg !4807
  store i32 1, i32* %did_spill, align 4, !dbg !4808
  store i32 1, i32* %something_changed, align 4, !dbg !4809
  br label %if.end644, !dbg !4810

if.end644:                                        ; preds = %if.then643, %for.body640
  br label %for.inc645, !dbg !4802

for.inc645:                                       ; preds = %if.end644
  %334 = load i32, i32* %i, align 4, !dbg !4811
  %inc646 = add nsw i32 %334, 1, !dbg !4811
  store i32 %inc646, i32* %i, align 4, !dbg !4811
  br label %for.cond637, !dbg !4812, !llvm.loop !4813

for.end647:                                       ; preds = %for.cond637
  call void @select_reload_regs(), !dbg !4815
  %335 = load i32, i32* @failure, align 4, !dbg !4816
  %tobool648 = icmp ne i32 %335, 0, !dbg !4816
  br i1 %tobool648, label %if.then649, label %if.end650, !dbg !4818

if.then649:                                       ; preds = %for.end647
  br label %failed, !dbg !4819

if.end650:                                        ; preds = %for.end647
  %336 = load %struct.insn_chain*, %struct.insn_chain** @insns_need_reload, align 8, !dbg !4820
  %cmp651 = icmp ne %struct.insn_chain* %336, null, !dbg !4822
  br i1 %cmp651, label %if.then655, label %lor.lhs.false653, !dbg !4823

lor.lhs.false653:                                 ; preds = %if.end650
  %337 = load i32, i32* %did_spill, align 4, !dbg !4824
  %tobool654 = icmp ne i32 %337, 0, !dbg !4824
  br i1 %tobool654, label %if.then655, label %if.end658, !dbg !4825

if.then655:                                       ; preds = %lor.lhs.false653, %if.end650
  %338 = load i32, i32* %global.addr, align 4, !dbg !4826
  %call656 = call i32 @finish_spills(i32 %338), !dbg !4827
  %339 = load i32, i32* %something_changed, align 4, !dbg !4828
  %or657 = or i32 %339, %call656, !dbg !4828
  store i32 %or657, i32* %something_changed, align 4, !dbg !4828
  br label %if.end658, !dbg !4829

if.end658:                                        ; preds = %if.then655, %lor.lhs.false653
  %340 = load i32, i32* %something_changed, align 4, !dbg !4830
  %tobool659 = icmp ne i32 %340, 0, !dbg !4830
  br i1 %tobool659, label %if.end661, label %if.then660, !dbg !4832

if.then660:                                       ; preds = %if.end658
  br label %for.end682, !dbg !4833

if.end661:                                        ; preds = %if.end658
  %341 = load i32, i32* @caller_save_needed, align 4, !dbg !4834
  %tobool662 = icmp ne i32 %341, 0, !dbg !4834
  br i1 %tobool662, label %if.then663, label %if.end664, !dbg !4836

if.then663:                                       ; preds = %if.end661
  call void @delete_caller_save_insns(), !dbg !4837
  br label %if.end664, !dbg !4837

if.end664:                                        ; preds = %if.then663, %if.end661
  %342 = load i8*, i8** @reload_firstobj, align 8, !dbg !4838
  %343 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !4838
  %344 = bitcast %struct._obstack_chunk* %343 to i8*, !dbg !4838
  %sub.ptr.lhs.cast665 = ptrtoint i8* %342 to i64, !dbg !4838
  %sub.ptr.rhs.cast666 = ptrtoint i8* %344 to i64, !dbg !4838
  %sub.ptr.sub667 = sub i64 %sub.ptr.lhs.cast665, %sub.ptr.rhs.cast666, !dbg !4838
  store i64 %sub.ptr.sub667, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4838
  %345 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4838
  %cmp668 = icmp sgt i64 %345, 0, !dbg !4838
  br i1 %cmp668, label %land.lhs.true670, label %cond.false678, !dbg !4838

land.lhs.true670:                                 ; preds = %if.end664
  %346 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4838
  %347 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !4838
  %348 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !4838
  %349 = bitcast %struct._obstack_chunk* %348 to i8*, !dbg !4838
  %sub.ptr.lhs.cast671 = ptrtoint i8* %347 to i64, !dbg !4838
  %sub.ptr.rhs.cast672 = ptrtoint i8* %349 to i64, !dbg !4838
  %sub.ptr.sub673 = sub i64 %sub.ptr.lhs.cast671, %sub.ptr.rhs.cast672, !dbg !4838
  %cmp674 = icmp slt i64 %346, %sub.ptr.sub673, !dbg !4838
  br i1 %cmp674, label %cond.true676, label %cond.false678, !dbg !4838

cond.true676:                                     ; preds = %land.lhs.true670
  %350 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4838
  %351 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !4838
  %352 = bitcast %struct._obstack_chunk* %351 to i8*, !dbg !4838
  %add.ptr677 = getelementptr inbounds i8, i8* %352, i64 %350, !dbg !4838
  store i8* %add.ptr677, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !4838
  store i8* %add.ptr677, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !4838
  %353 = ptrtoint i8* %add.ptr677 to i64, !dbg !4838
  br label %cond.end680, !dbg !4838

cond.false678:                                    ; preds = %land.lhs.true670, %if.end664
  %354 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !4838
  %355 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !4838
  %356 = bitcast %struct._obstack_chunk* %355 to i8*, !dbg !4838
  %add.ptr679 = getelementptr inbounds i8, i8* %356, i64 %354, !dbg !4838
  call void @obstack_free(%struct.obstack* @reload_obstack, i8* %add.ptr679), !dbg !4838
  br label %cond.end680, !dbg !4838

cond.end680:                                      ; preds = %cond.false678, %cond.true676
  %cond681 = phi i64 [ %353, %cond.true676 ], [ 0, %cond.false678 ], !dbg !4838
  br label %for.cond411, !dbg !4839, !llvm.loop !4742

for.end682:                                       ; preds = %if.then660
  %357 = load i32, i32* %global.addr, align 4, !dbg !4840
  %tobool683 = icmp ne i32 %357, 0, !dbg !4840
  br i1 %tobool683, label %if.then684, label %if.end698, !dbg !4842

if.then684:                                       ; preds = %for.end682
  %358 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !4843
  store %struct.elim_table* %358, %struct.elim_table** %ep, align 8, !dbg !4845
  br label %for.cond685, !dbg !4846

for.cond685:                                      ; preds = %for.inc695, %if.then684
  %359 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !4847
  %360 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !4849
  %arrayidx686 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %360, i64 4, !dbg !4849
  %cmp687 = icmp ult %struct.elim_table* %359, %arrayidx686, !dbg !4850
  br i1 %cmp687, label %for.body689, label %for.end697, !dbg !4851

for.body689:                                      ; preds = %for.cond685
  %361 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !4852
  %can_eliminate690 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %361, i32 0, i32 3, !dbg !4854
  %362 = load i32, i32* %can_eliminate690, align 8, !dbg !4854
  %tobool691 = icmp ne i32 %362, 0, !dbg !4852
  br i1 %tobool691, label %if.then692, label %if.end694, !dbg !4855

if.then692:                                       ; preds = %for.body689
  %363 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !4856
  %from693 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %363, i32 0, i32 0, !dbg !4857
  %364 = load i32, i32* %from693, align 8, !dbg !4857
  %365 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !4858
  %to = getelementptr inbounds %struct.elim_table, %struct.elim_table* %365, i32 0, i32 1, !dbg !4859
  %366 = load i32, i32* %to, align 4, !dbg !4859
  call void @mark_elimination(i32 %364, i32 %366), !dbg !4860
  br label %if.end694, !dbg !4860

if.end694:                                        ; preds = %if.then692, %for.body689
  br label %for.inc695, !dbg !4854

for.inc695:                                       ; preds = %if.end694
  %367 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !4861
  %incdec.ptr696 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %367, i32 1, !dbg !4861
  store %struct.elim_table* %incdec.ptr696, %struct.elim_table** %ep, align 8, !dbg !4861
  br label %for.cond685, !dbg !4862, !llvm.loop !4863

for.end697:                                       ; preds = %for.cond685
  br label %if.end698, !dbg !4864

if.end698:                                        ; preds = %for.end697, %for.end682
  store i32 53, i32* %i, align 4, !dbg !4865
  br label %for.cond699, !dbg !4867

for.cond699:                                      ; preds = %for.inc752, %if.end698
  %368 = load i32, i32* %i, align 4, !dbg !4868
  %369 = load i32, i32* @max_regno, align 4, !dbg !4870
  %cmp700 = icmp slt i32 %368, %369, !dbg !4871
  br i1 %cmp700, label %for.body702, label %for.end754, !dbg !4872

for.body702:                                      ; preds = %for.cond699
  %370 = load i16*, i16** @reg_renumber, align 8, !dbg !4873
  %371 = load i32, i32* %i, align 4, !dbg !4876
  %idxprom703 = sext i32 %371 to i64, !dbg !4873
  %arrayidx704 = getelementptr inbounds i16, i16* %370, i64 %idxprom703, !dbg !4873
  %372 = load i16, i16* %arrayidx704, align 2, !dbg !4873
  %conv705 = sext i16 %372 to i32, !dbg !4873
  %cmp706 = icmp slt i32 %conv705, 0, !dbg !4877
  br i1 %cmp706, label %land.lhs.true708, label %if.end751, !dbg !4878

land.lhs.true708:                                 ; preds = %for.body702
  %373 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !4879
  %374 = load i32, i32* %i, align 4, !dbg !4880
  %idxprom709 = sext i32 %374 to i64, !dbg !4879
  %arrayidx710 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %373, i64 %idxprom709, !dbg !4879
  %375 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx710, align 8, !dbg !4879
  %cmp711 = icmp ne %struct.rtx_def* %375, null, !dbg !4881
  br i1 %cmp711, label %if.then713, label %if.end751, !dbg !4882

if.then713:                                       ; preds = %land.lhs.true708
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %list, metadata !4883, metadata !DIExpression()), !dbg !4885
  %376 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !4886
  %377 = load i32, i32* %i, align 4, !dbg !4888
  %idxprom714 = sext i32 %377 to i64, !dbg !4886
  %arrayidx715 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %376, i64 %idxprom714, !dbg !4886
  %378 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx715, align 8, !dbg !4886
  store %struct.rtx_def* %378, %struct.rtx_def** %list, align 8, !dbg !4889
  br label %for.cond716, !dbg !4890

for.cond716:                                      ; preds = %for.inc745, %if.then713
  %379 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8, !dbg !4891
  %tobool717 = icmp ne %struct.rtx_def* %379, null, !dbg !4893
  br i1 %tobool717, label %for.body718, label %for.end750, !dbg !4893

for.body718:                                      ; preds = %for.cond716
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %equiv_insn, metadata !4894, metadata !DIExpression()), !dbg !4896
  %380 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8, !dbg !4897
  %u719 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %380, i32 0, i32 1, !dbg !4897
  %fld720 = bitcast %union.u* %u719 to [1 x %union.rtunion_def]*, !dbg !4897
  %arrayidx721 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld720, i64 0, i64 0, !dbg !4897
  %rt_rtx722 = bitcast %union.rtunion_def* %arrayidx721 to %struct.rtx_def**, !dbg !4897
  %381 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx722, align 8, !dbg !4897
  store %struct.rtx_def* %381, %struct.rtx_def** %equiv_insn, align 8, !dbg !4896
  %382 = load %struct.rtx_def*, %struct.rtx_def** %equiv_insn, align 8, !dbg !4898
  %383 = bitcast %struct.rtx_def* %382 to i32*, !dbg !4898
  %bf.load723 = load i32, i32* %383, align 8, !dbg !4898
  %bf.clear724 = and i32 %bf.load723, 65535, !dbg !4898
  %cmp725 = icmp eq i32 %bf.clear724, 13, !dbg !4898
  br i1 %cmp725, label %if.then731, label %lor.lhs.false727, !dbg !4900

lor.lhs.false727:                                 ; preds = %for.body718
  %384 = load %struct.rtx_def*, %struct.rtx_def** %equiv_insn, align 8, !dbg !4901
  %call728 = call zeroext i8 @can_throw_internal(%struct.rtx_def* %384), !dbg !4902
  %conv729 = zext i8 %call728 to i32, !dbg !4902
  %tobool730 = icmp ne i32 %conv729, 0, !dbg !4902
  br i1 %tobool730, label %if.then731, label %if.else732, !dbg !4903

if.then731:                                       ; preds = %lor.lhs.false727, %for.body718
  br label %if.end744, !dbg !4903

if.else732:                                       ; preds = %lor.lhs.false727
  %385 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !4904
  %386 = load i32, i32* %i, align 4, !dbg !4906
  %idxprom733 = sext i32 %386 to i64, !dbg !4904
  %arrayidx734 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %385, i64 %idxprom733, !dbg !4904
  %387 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx734, align 8, !dbg !4904
  %388 = load %struct.rtx_def*, %struct.rtx_def** %equiv_insn, align 8, !dbg !4907
  %u735 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %388, i32 0, i32 1, !dbg !4907
  %fld736 = bitcast %union.u* %u735 to [1 x %union.rtunion_def]*, !dbg !4907
  %arrayidx737 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld736, i64 0, i64 5, !dbg !4907
  %rt_rtx738 = bitcast %union.rtunion_def* %arrayidx737 to %struct.rtx_def**, !dbg !4907
  %389 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx738, align 8, !dbg !4907
  %call739 = call i32 @reg_set_p(%struct.rtx_def* %387, %struct.rtx_def* %389), !dbg !4908
  %tobool740 = icmp ne i32 %call739, 0, !dbg !4908
  br i1 %tobool740, label %if.then741, label %if.else742, !dbg !4909

if.then741:                                       ; preds = %if.else732
  %390 = load %struct.rtx_def*, %struct.rtx_def** %equiv_insn, align 8, !dbg !4910
  call void @delete_dead_insn(%struct.rtx_def* %390), !dbg !4911
  br label %if.end743, !dbg !4911

if.else742:                                       ; preds = %if.else732
  %391 = load %struct.rtx_def*, %struct.rtx_def** %equiv_insn, align 8, !dbg !4912
  call void @set_insn_deleted(%struct.rtx_def* %391), !dbg !4912
  br label %if.end743

if.end743:                                        ; preds = %if.else742, %if.then741
  br label %if.end744

if.end744:                                        ; preds = %if.end743, %if.then731
  br label %for.inc745, !dbg !4913

for.inc745:                                       ; preds = %if.end744
  %392 = load %struct.rtx_def*, %struct.rtx_def** %list, align 8, !dbg !4914
  %u746 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %392, i32 0, i32 1, !dbg !4914
  %fld747 = bitcast %union.u* %u746 to [1 x %union.rtunion_def]*, !dbg !4914
  %arrayidx748 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld747, i64 0, i64 1, !dbg !4914
  %rt_rtx749 = bitcast %union.rtunion_def* %arrayidx748 to %struct.rtx_def**, !dbg !4914
  %393 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx749, align 8, !dbg !4914
  store %struct.rtx_def* %393, %struct.rtx_def** %list, align 8, !dbg !4915
  br label %for.cond716, !dbg !4916, !llvm.loop !4917

for.end750:                                       ; preds = %for.cond716
  br label %if.end751, !dbg !4919

if.end751:                                        ; preds = %for.end750, %land.lhs.true708, %for.body702
  br label %for.inc752, !dbg !4920

for.inc752:                                       ; preds = %if.end751
  %394 = load i32, i32* %i, align 4, !dbg !4921
  %inc753 = add nsw i32 %394, 1, !dbg !4921
  store i32 %inc753, i32* %i, align 4, !dbg !4921
  br label %for.cond699, !dbg !4922, !llvm.loop !4923

for.end754:                                       ; preds = %for.cond699
  %395 = load %struct.insn_chain*, %struct.insn_chain** @insns_need_reload, align 8, !dbg !4925
  %cmp755 = icmp ne %struct.insn_chain* %395, null, !dbg !4927
  br i1 %cmp755, label %if.then761, label %lor.lhs.false757, !dbg !4928

lor.lhs.false757:                                 ; preds = %for.end754
  %396 = load i32, i32* @something_needs_elimination, align 4, !dbg !4929
  %tobool758 = icmp ne i32 %396, 0, !dbg !4929
  br i1 %tobool758, label %if.then761, label %lor.lhs.false759, !dbg !4930

lor.lhs.false759:                                 ; preds = %lor.lhs.false757
  %397 = load i32, i32* @something_needs_operands_changed, align 4, !dbg !4931
  %tobool760 = icmp ne i32 %397, 0, !dbg !4931
  br i1 %tobool760, label %if.then761, label %if.end776, !dbg !4932

if.then761:                                       ; preds = %lor.lhs.false759, %lor.lhs.false757, %for.end754
  call void @llvm.dbg.declare(metadata i64* %old_frame_size, metadata !4933, metadata !DIExpression()), !dbg !4935
  %call762 = call i64 @get_frame_size(), !dbg !4936
  store i64 %call762, i64* %old_frame_size, align 8, !dbg !4935
  %398 = load i32, i32* %global.addr, align 4, !dbg !4937
  call void @reload_as_needed(i32 %398), !dbg !4938
  %399 = load i64, i64* %old_frame_size, align 8, !dbg !4939
  %call763 = call i64 @get_frame_size(), !dbg !4939
  %cmp764 = icmp eq i64 %399, %call763, !dbg !4939
  br i1 %cmp764, label %cond.false767, label %cond.true766, !dbg !4939

cond.true766:                                     ; preds = %if.then761
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 1188, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !4939
  br label %cond.end768, !dbg !4939

cond.false767:                                    ; preds = %if.then761
  br label %cond.end768, !dbg !4939

cond.end768:                                      ; preds = %cond.false767, %cond.true766
  %cond769 = phi i32 [ 0, %cond.true766 ], [ 0, %cond.false767 ], !dbg !4939
  %call770 = call zeroext i8 @verify_initial_elim_offsets(), !dbg !4940
  %tobool771 = icmp ne i8 %call770, 0, !dbg !4940
  br i1 %tobool771, label %cond.false773, label %cond.true772, !dbg !4940

cond.true772:                                     ; preds = %cond.end768
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 1190, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !4940
  br label %cond.end774, !dbg !4940

cond.false773:                                    ; preds = %cond.end768
  br label %cond.end774, !dbg !4940

cond.end774:                                      ; preds = %cond.false773, %cond.true772
  %cond775 = phi i32 [ 0, %cond.true772 ], [ 0, %cond.false773 ], !dbg !4940
  br label %if.end776, !dbg !4941

if.end776:                                        ; preds = %cond.end774, %lor.lhs.false759
  %400 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !4942
  %tobool777 = icmp ne i8 %400, 0, !dbg !4942
  br i1 %tobool777, label %if.end791, label %if.then778, !dbg !4944

if.then778:                                       ; preds = %if.end776
  %401 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4945
  %add.ptr779 = getelementptr inbounds %struct.function, %struct.function* %401, i64 0, !dbg !4945
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr779, i32 0, i32 1, !dbg !4945
  %402 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4945
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %402, i32 0, i32 0, !dbg !4945
  %403 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4945
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %403, i32 0, i32 6, !dbg !4945
  %404 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !4945
  store %struct.basic_block_def* %404, %struct.basic_block_def** %bb, align 8, !dbg !4945
  br label %for.cond780, !dbg !4945

for.cond780:                                      ; preds = %for.inc788, %if.then778
  %405 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4947
  %406 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4947
  %add.ptr781 = getelementptr inbounds %struct.function, %struct.function* %406, i64 0, !dbg !4947
  %cfg782 = getelementptr inbounds %struct.function, %struct.function* %add.ptr781, i32 0, i32 1, !dbg !4947
  %407 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg782, align 8, !dbg !4947
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %407, i32 0, i32 1, !dbg !4947
  %408 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4947
  %cmp783 = icmp ne %struct.basic_block_def* %405, %408, !dbg !4947
  br i1 %cmp783, label %for.body785, label %for.end790, !dbg !4945

for.body785:                                      ; preds = %for.cond780
  %409 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4949
  %call786 = call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %409), !dbg !4950
  %call787 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %call786, i32 6), !dbg !4951
  br label %for.inc788, !dbg !4951

for.inc788:                                       ; preds = %for.body785
  %410 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4947
  %next_bb789 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %410, i32 0, i32 6, !dbg !4947
  %411 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb789, align 8, !dbg !4947
  store %struct.basic_block_def* %411, %struct.basic_block_def** %bb, align 8, !dbg !4947
  br label %for.cond780, !dbg !4947, !llvm.loop !4952

for.end790:                                       ; preds = %for.cond780
  br label %if.end791, !dbg !4953

if.end791:                                        ; preds = %for.end790, %if.end776
  br label %failed, !dbg !4942

failed:                                           ; preds = %if.end791, %if.then649
  call void @llvm.dbg.label(metadata !4954), !dbg !4955
  call void @bitmap_clear(%struct.bitmap_head_def* @changed_allocation_pseudos), !dbg !4956
  call void @bitmap_clear(%struct.bitmap_head_def* @spilled_pseudos), !dbg !4957
  store i32 0, i32* @reload_in_progress, align 4, !dbg !4958
  store i32 53, i32* %i, align 4, !dbg !4959
  br label %for.cond792, !dbg !4961

for.cond792:                                      ; preds = %for.inc1051, %failed
  %412 = load i32, i32* %i, align 4, !dbg !4962
  %413 = load i32, i32* @max_regno, align 4, !dbg !4964
  %cmp793 = icmp slt i32 %412, %413, !dbg !4965
  br i1 %cmp793, label %for.body795, label %for.end1053, !dbg !4966

for.body795:                                      ; preds = %for.cond792
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %addr, metadata !4967, metadata !DIExpression()), !dbg !4969
  store %struct.rtx_def* null, %struct.rtx_def** %addr, align 8, !dbg !4969
  %414 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !4970
  %415 = load i32, i32* %i, align 4, !dbg !4972
  %idxprom796 = sext i32 %415 to i64, !dbg !4970
  %arrayidx797 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %414, i64 %idxprom796, !dbg !4970
  %416 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx797, align 8, !dbg !4970
  %tobool798 = icmp ne %struct.rtx_def* %416, null, !dbg !4970
  br i1 %tobool798, label %if.then799, label %if.end806, !dbg !4973

if.then799:                                       ; preds = %for.body795
  %417 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !4974
  %418 = load i32, i32* %i, align 4, !dbg !4974
  %idxprom800 = sext i32 %418 to i64, !dbg !4974
  %arrayidx801 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %417, i64 %idxprom800, !dbg !4974
  %419 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx801, align 8, !dbg !4974
  %u802 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %419, i32 0, i32 1, !dbg !4974
  %fld803 = bitcast %union.u* %u802 to [1 x %union.rtunion_def]*, !dbg !4974
  %arrayidx804 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld803, i64 0, i64 0, !dbg !4974
  %rt_rtx805 = bitcast %union.rtunion_def* %arrayidx804 to %struct.rtx_def**, !dbg !4974
  %420 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx805, align 8, !dbg !4974
  store %struct.rtx_def* %420, %struct.rtx_def** %addr, align 8, !dbg !4975
  br label %if.end806, !dbg !4976

if.end806:                                        ; preds = %if.then799, %for.body795
  %421 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8, !dbg !4977
  %422 = load i32, i32* %i, align 4, !dbg !4979
  %idxprom807 = sext i32 %422 to i64, !dbg !4977
  %arrayidx808 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %421, i64 %idxprom807, !dbg !4977
  %423 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx808, align 8, !dbg !4977
  %tobool809 = icmp ne %struct.rtx_def* %423, null, !dbg !4977
  br i1 %tobool809, label %if.then810, label %if.end813, !dbg !4980

if.then810:                                       ; preds = %if.end806
  %424 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8, !dbg !4981
  %425 = load i32, i32* %i, align 4, !dbg !4982
  %idxprom811 = sext i32 %425 to i64, !dbg !4981
  %arrayidx812 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %424, i64 %idxprom811, !dbg !4981
  %426 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx812, align 8, !dbg !4981
  store %struct.rtx_def* %426, %struct.rtx_def** %addr, align 8, !dbg !4983
  br label %if.end813, !dbg !4984

if.end813:                                        ; preds = %if.then810, %if.end806
  %427 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !4985
  %tobool814 = icmp ne %struct.rtx_def* %427, null, !dbg !4985
  br i1 %tobool814, label %if.then815, label %if.end940, !dbg !4987

if.then815:                                       ; preds = %if.end813
  %428 = load i16*, i16** @reg_renumber, align 8, !dbg !4988
  %429 = load i32, i32* %i, align 4, !dbg !4991
  %idxprom816 = sext i32 %429 to i64, !dbg !4988
  %arrayidx817 = getelementptr inbounds i16, i16* %428, i64 %idxprom816, !dbg !4988
  %430 = load i16, i16* %arrayidx817, align 2, !dbg !4988
  %conv818 = sext i16 %430 to i32, !dbg !4988
  %cmp819 = icmp slt i32 %conv818, 0, !dbg !4992
  br i1 %cmp819, label %if.then821, label %if.else927, !dbg !4993

if.then821:                                       ; preds = %if.then815
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg, metadata !4994, metadata !DIExpression()), !dbg !4996
  %431 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !4997
  %432 = load i32, i32* %i, align 4, !dbg !4998
  %idxprom822 = sext i32 %432 to i64, !dbg !4997
  %arrayidx823 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %431, i64 %idxprom822, !dbg !4997
  %433 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx823, align 8, !dbg !4997
  store %struct.rtx_def* %433, %struct.rtx_def** %reg, align 8, !dbg !4996
  %434 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4999
  %435 = bitcast %struct.rtx_def* %434 to i32*, !dbg !4999
  %bf.load824 = load i32, i32* %435, align 8, !dbg !5000
  %bf.clear825 = and i32 %bf.load824, -134217729, !dbg !5000
  store i32 %bf.clear825, i32* %435, align 8, !dbg !5000
  %436 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5001
  %437 = bitcast %struct.rtx_def* %436 to i32*, !dbg !5001
  %bf.load826 = load i32, i32* %437, align 8, !dbg !5001
  %bf.clear827 = and i32 %bf.load826, -65536, !dbg !5001
  %bf.set828 = or i32 %bf.clear827, 43, !dbg !5001
  store i32 %bf.set828, i32* %437, align 8, !dbg !5001
  %438 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !5002
  %439 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5003
  %u829 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %439, i32 0, i32 1, !dbg !5003
  %fld830 = bitcast %union.u* %u829 to [1 x %union.rtunion_def]*, !dbg !5003
  %arrayidx831 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld830, i64 0, i64 0, !dbg !5003
  %rt_rtx832 = bitcast %union.rtunion_def* %arrayidx831 to %struct.rtx_def**, !dbg !5003
  store %struct.rtx_def* %438, %struct.rtx_def** %rt_rtx832, align 8, !dbg !5004
  %440 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !5005
  %441 = load i32, i32* %i, align 4, !dbg !5007
  %idxprom833 = sext i32 %441 to i64, !dbg !5005
  %arrayidx834 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %440, i64 %idxprom833, !dbg !5005
  %442 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx834, align 8, !dbg !5005
  %tobool835 = icmp ne %struct.rtx_def* %442, null, !dbg !5005
  br i1 %tobool835, label %if.then836, label %if.else914, !dbg !5008

if.then836:                                       ; preds = %if.then821
  %443 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !5009
  %444 = load i32, i32* %i, align 4, !dbg !5009
  %idxprom837 = sext i32 %444 to i64, !dbg !5009
  %arrayidx838 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %443, i64 %idxprom837, !dbg !5009
  %445 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx838, align 8, !dbg !5009
  %446 = bitcast %struct.rtx_def* %445 to i32*, !dbg !5009
  %bf.load839 = load i32, i32* %446, align 8, !dbg !5009
  %bf.lshr840 = lshr i32 %bf.load839, 27, !dbg !5009
  %bf.clear841 = and i32 %bf.lshr840, 1, !dbg !5009
  %447 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5009
  %448 = bitcast %struct.rtx_def* %447 to i32*, !dbg !5009
  %bf.load842 = load i32, i32* %448, align 8, !dbg !5009
  %bf.value = and i32 %bf.clear841, 1, !dbg !5009
  %bf.shl = shl i32 %bf.value, 27, !dbg !5009
  %bf.clear843 = and i32 %bf.load842, -134217729, !dbg !5009
  %bf.set844 = or i32 %bf.clear843, %bf.shl, !dbg !5009
  store i32 %bf.set844, i32* %448, align 8, !dbg !5009
  %449 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !5009
  %450 = load i32, i32* %i, align 4, !dbg !5009
  %idxprom845 = sext i32 %450 to i64, !dbg !5009
  %arrayidx846 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %449, i64 %idxprom845, !dbg !5009
  %451 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx846, align 8, !dbg !5009
  %452 = bitcast %struct.rtx_def* %451 to i32*, !dbg !5009
  %bf.load847 = load i32, i32* %452, align 8, !dbg !5009
  %bf.lshr848 = lshr i32 %bf.load847, 28, !dbg !5009
  %bf.clear849 = and i32 %bf.lshr848, 1, !dbg !5009
  %453 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5009
  %454 = bitcast %struct.rtx_def* %453 to i32*, !dbg !5009
  %bf.load850 = load i32, i32* %454, align 8, !dbg !5009
  %bf.value851 = and i32 %bf.clear849, 1, !dbg !5009
  %bf.shl852 = shl i32 %bf.value851, 28, !dbg !5009
  %bf.clear853 = and i32 %bf.load850, -268435457, !dbg !5009
  %bf.set854 = or i32 %bf.clear853, %bf.shl852, !dbg !5009
  store i32 %bf.set854, i32* %454, align 8, !dbg !5009
  %455 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !5009
  %456 = load i32, i32* %i, align 4, !dbg !5009
  %idxprom855 = sext i32 %456 to i64, !dbg !5009
  %arrayidx856 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %455, i64 %idxprom855, !dbg !5009
  %457 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx856, align 8, !dbg !5009
  %458 = bitcast %struct.rtx_def* %457 to i32*, !dbg !5009
  %bf.load857 = load i32, i32* %458, align 8, !dbg !5009
  %bf.lshr858 = lshr i32 %bf.load857, 31, !dbg !5009
  %459 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5009
  %460 = bitcast %struct.rtx_def* %459 to i32*, !dbg !5009
  %bf.load859 = load i32, i32* %460, align 8, !dbg !5009
  %bf.value860 = and i32 %bf.lshr858, 1, !dbg !5009
  %bf.shl861 = shl i32 %bf.value860, 31, !dbg !5009
  %bf.clear862 = and i32 %bf.load859, 2147483647, !dbg !5009
  %bf.set863 = or i32 %bf.clear862, %bf.shl861, !dbg !5009
  store i32 %bf.set863, i32* %460, align 8, !dbg !5009
  %461 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !5009
  %462 = load i32, i32* %i, align 4, !dbg !5009
  %idxprom864 = sext i32 %462 to i64, !dbg !5009
  %arrayidx865 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %461, i64 %idxprom864, !dbg !5009
  %463 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx865, align 8, !dbg !5009
  %464 = bitcast %struct.rtx_def* %463 to i32*, !dbg !5009
  %bf.load866 = load i32, i32* %464, align 8, !dbg !5009
  %bf.lshr867 = lshr i32 %bf.load866, 25, !dbg !5009
  %bf.clear868 = and i32 %bf.lshr867, 1, !dbg !5009
  %465 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5009
  %466 = bitcast %struct.rtx_def* %465 to i32*, !dbg !5009
  %bf.load869 = load i32, i32* %466, align 8, !dbg !5009
  %bf.value870 = and i32 %bf.clear868, 1, !dbg !5009
  %bf.shl871 = shl i32 %bf.value870, 25, !dbg !5009
  %bf.clear872 = and i32 %bf.load869, -33554433, !dbg !5009
  %bf.set873 = or i32 %bf.clear872, %bf.shl871, !dbg !5009
  store i32 %bf.set873, i32* %466, align 8, !dbg !5009
  %467 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !5009
  %468 = load i32, i32* %i, align 4, !dbg !5009
  %idxprom874 = sext i32 %468 to i64, !dbg !5009
  %arrayidx875 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %467, i64 %idxprom874, !dbg !5009
  %469 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx875, align 8, !dbg !5009
  %470 = bitcast %struct.rtx_def* %469 to i32*, !dbg !5009
  %bf.load876 = load i32, i32* %470, align 8, !dbg !5009
  %bf.lshr877 = lshr i32 %bf.load876, 26, !dbg !5009
  %bf.clear878 = and i32 %bf.lshr877, 1, !dbg !5009
  %471 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5009
  %472 = bitcast %struct.rtx_def* %471 to i32*, !dbg !5009
  %bf.load879 = load i32, i32* %472, align 8, !dbg !5009
  %bf.value880 = and i32 %bf.clear878, 1, !dbg !5009
  %bf.shl881 = shl i32 %bf.value880, 26, !dbg !5009
  %bf.clear882 = and i32 %bf.load879, -67108865, !dbg !5009
  %bf.set883 = or i32 %bf.clear882, %bf.shl881, !dbg !5009
  store i32 %bf.set883, i32* %472, align 8, !dbg !5009
  %473 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !5009
  %474 = load i32, i32* %i, align 4, !dbg !5009
  %idxprom884 = sext i32 %474 to i64, !dbg !5009
  %arrayidx885 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %473, i64 %idxprom884, !dbg !5009
  %475 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx885, align 8, !dbg !5009
  %476 = bitcast %struct.rtx_def* %475 to i32*, !dbg !5009
  %bf.load886 = load i32, i32* %476, align 8, !dbg !5009
  %bf.lshr887 = lshr i32 %bf.load886, 24, !dbg !5009
  %bf.clear888 = and i32 %bf.lshr887, 1, !dbg !5009
  %477 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5009
  %478 = bitcast %struct.rtx_def* %477 to i32*, !dbg !5009
  %bf.load889 = load i32, i32* %478, align 8, !dbg !5009
  %bf.value890 = and i32 %bf.clear888, 1, !dbg !5009
  %bf.shl891 = shl i32 %bf.value890, 24, !dbg !5009
  %bf.clear892 = and i32 %bf.load889, -16777217, !dbg !5009
  %bf.set893 = or i32 %bf.clear892, %bf.shl891, !dbg !5009
  store i32 %bf.set893, i32* %478, align 8, !dbg !5009
  %479 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !5009
  %480 = load i32, i32* %i, align 4, !dbg !5009
  %idxprom894 = sext i32 %480 to i64, !dbg !5009
  %arrayidx895 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %479, i64 %idxprom894, !dbg !5009
  %481 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx895, align 8, !dbg !5009
  %482 = bitcast %struct.rtx_def* %481 to i32*, !dbg !5009
  %bf.load896 = load i32, i32* %482, align 8, !dbg !5009
  %bf.lshr897 = lshr i32 %bf.load896, 30, !dbg !5009
  %bf.clear898 = and i32 %bf.lshr897, 1, !dbg !5009
  %483 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5009
  %484 = bitcast %struct.rtx_def* %483 to i32*, !dbg !5009
  %bf.load899 = load i32, i32* %484, align 8, !dbg !5009
  %bf.value900 = and i32 %bf.clear898, 1, !dbg !5009
  %bf.shl901 = shl i32 %bf.value900, 30, !dbg !5009
  %bf.clear902 = and i32 %bf.load899, -1073741825, !dbg !5009
  %bf.set903 = or i32 %bf.clear902, %bf.shl901, !dbg !5009
  store i32 %bf.set903, i32* %484, align 8, !dbg !5009
  %485 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !5009
  %486 = load i32, i32* %i, align 4, !dbg !5009
  %idxprom904 = sext i32 %486 to i64, !dbg !5009
  %arrayidx905 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %485, i64 %idxprom904, !dbg !5009
  %487 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx905, align 8, !dbg !5009
  %u906 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %487, i32 0, i32 1, !dbg !5009
  %fld907 = bitcast %union.u* %u906 to [1 x %union.rtunion_def]*, !dbg !5009
  %arrayidx908 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld907, i64 0, i64 1, !dbg !5009
  %rt_mem909 = bitcast %union.rtunion_def* %arrayidx908 to %struct.mem_attrs**, !dbg !5009
  %488 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem909, align 8, !dbg !5009
  %489 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5009
  %u910 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %489, i32 0, i32 1, !dbg !5009
  %fld911 = bitcast %union.u* %u910 to [1 x %union.rtunion_def]*, !dbg !5009
  %arrayidx912 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld911, i64 0, i64 1, !dbg !5009
  %rt_mem913 = bitcast %union.rtunion_def* %arrayidx912 to %struct.mem_attrs**, !dbg !5009
  store %struct.mem_attrs* %488, %struct.mem_attrs** %rt_mem913, align 8, !dbg !5009
  br label %if.end923, !dbg !5009

if.else914:                                       ; preds = %if.then821
  %490 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5010
  %491 = bitcast %struct.rtx_def* %490 to i32*, !dbg !5010
  %bf.load915 = load i32, i32* %491, align 8, !dbg !5012
  %bf.clear916 = and i32 %bf.load915, 2147483647, !dbg !5012
  store i32 %bf.clear916, i32* %491, align 8, !dbg !5012
  %492 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5013
  %493 = bitcast %struct.rtx_def* %492 to i32*, !dbg !5013
  %bf.load917 = load i32, i32* %493, align 8, !dbg !5014
  %bf.clear918 = and i32 %bf.load917, -268435457, !dbg !5014
  store i32 %bf.clear918, i32* %493, align 8, !dbg !5014
  %494 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5015
  %u919 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %494, i32 0, i32 1, !dbg !5015
  %fld920 = bitcast %union.u* %u919 to [1 x %union.rtunion_def]*, !dbg !5015
  %arrayidx921 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld920, i64 0, i64 1, !dbg !5015
  %rt_mem922 = bitcast %union.rtunion_def* %arrayidx921 to %struct.mem_attrs**, !dbg !5015
  store %struct.mem_attrs* null, %struct.mem_attrs** %rt_mem922, align 8, !dbg !5016
  br label %if.end923

if.end923:                                        ; preds = %if.else914, %if.then836
  %495 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5017
  %496 = bitcast %struct.rtx_def* %495 to i32*, !dbg !5017
  %bf.load924 = load i32, i32* %496, align 8, !dbg !5018
  %bf.clear925 = and i32 %bf.load924, -33554433, !dbg !5018
  %bf.set926 = or i32 %bf.clear925, 33554432, !dbg !5018
  store i32 %bf.set926, i32* %496, align 8, !dbg !5018
  br label %if.end939, !dbg !5019

if.else927:                                       ; preds = %if.then815
  %497 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !5020
  %498 = load i32, i32* %i, align 4, !dbg !5022
  %idxprom928 = sext i32 %498 to i64, !dbg !5020
  %arrayidx929 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %497, i64 %idxprom928, !dbg !5020
  %499 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx929, align 8, !dbg !5020
  %tobool930 = icmp ne %struct.rtx_def* %499, null, !dbg !5020
  br i1 %tobool930, label %if.then931, label %if.end938, !dbg !5023

if.then931:                                       ; preds = %if.else927
  %500 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !5024
  %501 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !5025
  %502 = load i32, i32* %i, align 4, !dbg !5025
  %idxprom932 = sext i32 %502 to i64, !dbg !5025
  %arrayidx933 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %501, i64 %idxprom932, !dbg !5025
  %503 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx933, align 8, !dbg !5025
  %u934 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %503, i32 0, i32 1, !dbg !5025
  %fld935 = bitcast %union.u* %u934 to [1 x %union.rtunion_def]*, !dbg !5025
  %arrayidx936 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld935, i64 0, i64 0, !dbg !5025
  %rt_rtx937 = bitcast %union.rtunion_def* %arrayidx936 to %struct.rtx_def**, !dbg !5025
  store %struct.rtx_def* %500, %struct.rtx_def** %rt_rtx937, align 8, !dbg !5026
  br label %if.end938, !dbg !5025

if.end938:                                        ; preds = %if.then931, %if.else927
  br label %if.end939

if.end939:                                        ; preds = %if.end938, %if.end923
  br label %if.end940, !dbg !5027

if.end940:                                        ; preds = %if.end939, %if.end813
  %504 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5028
  %tobool941 = icmp ne i32 %504, 0, !dbg !5028
  br i1 %tobool941, label %land.lhs.true942, label %if.end1050, !dbg !5030

land.lhs.true942:                                 ; preds = %if.end940
  %505 = load i16*, i16** @reg_renumber, align 8, !dbg !5031
  %506 = load i32, i32* %i, align 4, !dbg !5032
  %idxprom943 = sext i32 %506 to i64, !dbg !5031
  %arrayidx944 = getelementptr inbounds i16, i16* %505, i64 %idxprom943, !dbg !5031
  %507 = load i16, i16* %arrayidx944, align 2, !dbg !5031
  %conv945 = sext i16 %507 to i32, !dbg !5031
  %cmp946 = icmp slt i32 %conv945, 0, !dbg !5033
  br i1 %cmp946, label %if.then948, label %if.end1050, !dbg !5034

if.then948:                                       ; preds = %land.lhs.true942
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg949, metadata !5035, metadata !DIExpression()), !dbg !5037
  %508 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !5038
  %509 = load i32, i32* %i, align 4, !dbg !5039
  %idxprom950 = sext i32 %509 to i64, !dbg !5038
  %arrayidx951 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %508, i64 %idxprom950, !dbg !5038
  %510 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx951, align 8, !dbg !5038
  store %struct.rtx_def* %510, %struct.rtx_def** %reg949, align 8, !dbg !5037
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %equiv, metadata !5040, metadata !DIExpression()), !dbg !5041
  store %struct.rtx_def* null, %struct.rtx_def** %equiv, align 8, !dbg !5041
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use, metadata !5042, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %next, metadata !5105, metadata !DIExpression()), !dbg !5106
  %511 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !5107
  %512 = load i32, i32* %i, align 4, !dbg !5109
  %idxprom952 = sext i32 %512 to i64, !dbg !5107
  %arrayidx953 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %511, i64 %idxprom952, !dbg !5107
  %513 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx953, align 8, !dbg !5107
  %tobool954 = icmp ne %struct.rtx_def* %513, null, !dbg !5107
  br i1 %tobool954, label %if.then955, label %if.else958, !dbg !5110

if.then955:                                       ; preds = %if.then948
  %514 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !5111
  %515 = load i32, i32* %i, align 4, !dbg !5112
  %idxprom956 = sext i32 %515 to i64, !dbg !5111
  %arrayidx957 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %514, i64 %idxprom956, !dbg !5111
  %516 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx957, align 8, !dbg !5111
  store %struct.rtx_def* %516, %struct.rtx_def** %equiv, align 8, !dbg !5113
  br label %if.end989, !dbg !5114

if.else958:                                       ; preds = %if.then948
  %517 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !5115
  %518 = load i32, i32* %i, align 4, !dbg !5117
  %idxprom959 = sext i32 %518 to i64, !dbg !5115
  %arrayidx960 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %517, i64 %idxprom959, !dbg !5115
  %519 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx960, align 8, !dbg !5115
  %tobool961 = icmp ne %struct.rtx_def* %519, null, !dbg !5115
  br i1 %tobool961, label %if.then962, label %if.else965, !dbg !5118

if.then962:                                       ; preds = %if.else958
  %520 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !5119
  %521 = load i32, i32* %i, align 4, !dbg !5120
  %idxprom963 = sext i32 %521 to i64, !dbg !5119
  %arrayidx964 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %520, i64 %idxprom963, !dbg !5119
  %522 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx964, align 8, !dbg !5119
  store %struct.rtx_def* %522, %struct.rtx_def** %equiv, align 8, !dbg !5121
  br label %if.end988, !dbg !5122

if.else965:                                       ; preds = %if.else958
  %523 = load %struct.rtx_def*, %struct.rtx_def** %reg949, align 8, !dbg !5123
  %tobool966 = icmp ne %struct.rtx_def* %523, null, !dbg !5123
  br i1 %tobool966, label %land.lhs.true967, label %if.else974, !dbg !5125

land.lhs.true967:                                 ; preds = %if.else965
  %524 = load %struct.rtx_def*, %struct.rtx_def** %reg949, align 8, !dbg !5126
  %525 = bitcast %struct.rtx_def* %524 to i32*, !dbg !5126
  %bf.load968 = load i32, i32* %525, align 8, !dbg !5126
  %bf.clear969 = and i32 %bf.load968, 65535, !dbg !5126
  %cmp970 = icmp eq i32 %bf.clear969, 43, !dbg !5126
  br i1 %cmp970, label %if.then972, label %if.else974, !dbg !5127

if.then972:                                       ; preds = %land.lhs.true967
  %526 = load %struct.rtx_def* (%struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 40), align 8, !dbg !5128
  %527 = load %struct.rtx_def*, %struct.rtx_def** %reg949, align 8, !dbg !5129
  %call973 = call %struct.rtx_def* %526(%struct.rtx_def* %527), !dbg !5130
  store %struct.rtx_def* %call973, %struct.rtx_def** %equiv, align 8, !dbg !5131
  br label %if.end987, !dbg !5132

if.else974:                                       ; preds = %land.lhs.true967, %if.else965
  %528 = load %struct.rtx_def*, %struct.rtx_def** %reg949, align 8, !dbg !5133
  %tobool975 = icmp ne %struct.rtx_def* %528, null, !dbg !5133
  br i1 %tobool975, label %land.lhs.true976, label %if.end986, !dbg !5135

land.lhs.true976:                                 ; preds = %if.else974
  %529 = load %struct.rtx_def*, %struct.rtx_def** %reg949, align 8, !dbg !5136
  %530 = bitcast %struct.rtx_def* %529 to i32*, !dbg !5136
  %bf.load977 = load i32, i32* %530, align 8, !dbg !5136
  %bf.clear978 = and i32 %bf.load977, 65535, !dbg !5136
  %cmp979 = icmp eq i32 %bf.clear978, 37, !dbg !5136
  br i1 %cmp979, label %land.lhs.true981, label %if.end986, !dbg !5137

land.lhs.true981:                                 ; preds = %land.lhs.true976
  %531 = load %struct.rtx_def*, %struct.rtx_def** %reg949, align 8, !dbg !5138
  %call982 = call i32 @rhs_regno(%struct.rtx_def* %531), !dbg !5138
  %532 = load i32, i32* %i, align 4, !dbg !5139
  %cmp983 = icmp ne i32 %call982, %532, !dbg !5140
  br i1 %cmp983, label %if.then985, label %if.end986, !dbg !5141

if.then985:                                       ; preds = %land.lhs.true981
  %533 = load %struct.rtx_def*, %struct.rtx_def** %reg949, align 8, !dbg !5142
  store %struct.rtx_def* %533, %struct.rtx_def** %equiv, align 8, !dbg !5143
  br label %if.end986, !dbg !5144

if.end986:                                        ; preds = %if.then985, %land.lhs.true981, %land.lhs.true976, %if.else974
  br label %if.end987

if.end987:                                        ; preds = %if.end986, %if.then972
  br label %if.end988

if.end988:                                        ; preds = %if.end987, %if.then962
  br label %if.end989

if.end989:                                        ; preds = %if.end988, %if.then955
  %534 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !5145
  %535 = load %struct.rtx_def*, %struct.rtx_def** %reg949, align 8, !dbg !5147
  %cmp990 = icmp eq %struct.rtx_def* %534, %535, !dbg !5148
  br i1 %cmp990, label %if.then992, label %if.end993, !dbg !5149

if.then992:                                       ; preds = %if.end989
  br label %for.inc1051, !dbg !5150

if.end993:                                        ; preds = %if.end989
  %536 = load %struct.df*, %struct.df** @df, align 8, !dbg !5151
  %use_regs = getelementptr inbounds %struct.df, %struct.df* %536, i32 0, i32 6, !dbg !5151
  %537 = load %struct.df_reg_info**, %struct.df_reg_info*** %use_regs, align 8, !dbg !5151
  %538 = load i32, i32* %i, align 4, !dbg !5151
  %idxprom994 = sext i32 %538 to i64, !dbg !5151
  %arrayidx995 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %537, i64 %idxprom994, !dbg !5151
  %539 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx995, align 8, !dbg !5151
  %reg_chain = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %539, i32 0, i32 0, !dbg !5151
  %540 = load %union.df_ref_d*, %union.df_ref_d** %reg_chain, align 8, !dbg !5151
  store %union.df_ref_d* %540, %union.df_ref_d** %use, align 8, !dbg !5153
  br label %for.cond996, !dbg !5154

for.cond996:                                      ; preds = %for.inc1048, %if.end993
  %541 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !5155
  %tobool997 = icmp ne %union.df_ref_d* %541, null, !dbg !5157
  br i1 %tobool997, label %for.body998, label %for.end1049, !dbg !5157

for.body998:                                      ; preds = %for.cond996
  %542 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !5158
  %base = bitcast %union.df_ref_d* %542 to %struct.df_base_ref*, !dbg !5158
  %insn_info = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 3, !dbg !5158
  %543 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !5158
  %insn999 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %543, i32 0, i32 0, !dbg !5158
  %544 = load %struct.rtx_def*, %struct.rtx_def** %insn999, align 8, !dbg !5158
  store %struct.rtx_def* %544, %struct.rtx_def** %insn, align 8, !dbg !5160
  %545 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !5161
  %base1000 = bitcast %union.df_ref_d* %545 to %struct.df_base_ref*, !dbg !5161
  %next_reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base1000, i32 0, i32 4, !dbg !5161
  %546 = load %union.df_ref_d*, %union.df_ref_d** %next_reg, align 8, !dbg !5161
  store %union.df_ref_d* %546, %union.df_ref_d** %next, align 8, !dbg !5162
  br label %while.cond, !dbg !5163

while.cond:                                       ; preds = %while.body, %for.body998
  %547 = load %union.df_ref_d*, %union.df_ref_d** %next, align 8, !dbg !5164
  %tobool1001 = icmp ne %union.df_ref_d* %547, null, !dbg !5164
  br i1 %tobool1001, label %land.rhs1002, label %land.end1008, !dbg !5165

land.rhs1002:                                     ; preds = %while.cond
  %548 = load %union.df_ref_d*, %union.df_ref_d** %next, align 8, !dbg !5166
  %base1003 = bitcast %union.df_ref_d* %548 to %struct.df_base_ref*, !dbg !5166
  %insn_info1004 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base1003, i32 0, i32 3, !dbg !5166
  %549 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info1004, align 8, !dbg !5166
  %insn1005 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %549, i32 0, i32 0, !dbg !5166
  %550 = load %struct.rtx_def*, %struct.rtx_def** %insn1005, align 8, !dbg !5166
  %551 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5167
  %cmp1006 = icmp eq %struct.rtx_def* %550, %551, !dbg !5168
  br label %land.end1008

land.end1008:                                     ; preds = %land.rhs1002, %while.cond
  %552 = phi i1 [ false, %while.cond ], [ %cmp1006, %land.rhs1002 ], !dbg !5169
  br i1 %552, label %while.body, label %while.end, !dbg !5163

while.body:                                       ; preds = %land.end1008
  %553 = load %union.df_ref_d*, %union.df_ref_d** %next, align 8, !dbg !5170
  %base1009 = bitcast %union.df_ref_d* %553 to %struct.df_base_ref*, !dbg !5170
  %next_reg1010 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base1009, i32 0, i32 4, !dbg !5170
  %554 = load %union.df_ref_d*, %union.df_ref_d** %next_reg1010, align 8, !dbg !5170
  store %union.df_ref_d* %554, %union.df_ref_d** %next, align 8, !dbg !5171
  br label %while.cond, !dbg !5163, !llvm.loop !5172

while.end:                                        ; preds = %land.end1008
  %555 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5173
  %556 = bitcast %struct.rtx_def* %555 to i32*, !dbg !5173
  %bf.load1011 = load i32, i32* %556, align 8, !dbg !5173
  %bf.clear1012 = and i32 %bf.load1011, 65535, !dbg !5173
  %cmp1013 = icmp eq i32 %bf.clear1012, 7, !dbg !5173
  br i1 %cmp1013, label %if.then1015, label %if.end1047, !dbg !5175

if.then1015:                                      ; preds = %while.end
  %557 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !5176
  %tobool1016 = icmp ne %struct.rtx_def* %557, null, !dbg !5176
  br i1 %tobool1016, label %if.else1028, label %if.then1017, !dbg !5179

if.then1017:                                      ; preds = %if.then1015
  %558 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5180
  %call1018 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %558), !dbg !5180
  %559 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5182
  %u1019 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %559, i32 0, i32 1, !dbg !5182
  %fld1020 = bitcast %union.u* %u1019 to [1 x %union.rtunion_def]*, !dbg !5182
  %arrayidx1021 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1020, i64 0, i64 5, !dbg !5182
  %rt_rtx1022 = bitcast %union.rtunion_def* %arrayidx1021 to %struct.rtx_def**, !dbg !5182
  %560 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1022, align 8, !dbg !5182
  %u1023 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %560, i32 0, i32 1, !dbg !5182
  %fld1024 = bitcast %union.u* %u1023 to [1 x %union.rtunion_def]*, !dbg !5182
  %arrayidx1025 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1024, i64 0, i64 1, !dbg !5182
  %rt_rtx1026 = bitcast %union.rtunion_def* %arrayidx1025 to %struct.rtx_def**, !dbg !5182
  store %struct.rtx_def* %call1018, %struct.rtx_def** %rt_rtx1026, align 8, !dbg !5183
  %561 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5184
  %call1027 = call zeroext i8 @df_insn_rescan_debug_internal(%struct.rtx_def* %561), !dbg !5185
  br label %if.end1046, !dbg !5186

if.else1028:                                      ; preds = %if.then1015
  %562 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5187
  %u1029 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %562, i32 0, i32 1, !dbg !5187
  %fld1030 = bitcast %union.u* %u1029 to [1 x %union.rtunion_def]*, !dbg !5187
  %arrayidx1031 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1030, i64 0, i64 5, !dbg !5187
  %rt_rtx1032 = bitcast %union.rtunion_def* %arrayidx1031 to %struct.rtx_def**, !dbg !5187
  %563 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1032, align 8, !dbg !5187
  %u1033 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %563, i32 0, i32 1, !dbg !5187
  %fld1034 = bitcast %union.u* %u1033 to [1 x %union.rtunion_def]*, !dbg !5187
  %arrayidx1035 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1034, i64 0, i64 1, !dbg !5187
  %rt_rtx1036 = bitcast %union.rtunion_def* %arrayidx1035 to %struct.rtx_def**, !dbg !5187
  %564 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1036, align 8, !dbg !5187
  %565 = load %struct.rtx_def*, %struct.rtx_def** %reg949, align 8, !dbg !5188
  %566 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !5189
  %call1037 = call %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %564, %struct.rtx_def* %565, %struct.rtx_def* %566), !dbg !5190
  %567 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5191
  %u1038 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %567, i32 0, i32 1, !dbg !5191
  %fld1039 = bitcast %union.u* %u1038 to [1 x %union.rtunion_def]*, !dbg !5191
  %arrayidx1040 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1039, i64 0, i64 5, !dbg !5191
  %rt_rtx1041 = bitcast %union.rtunion_def* %arrayidx1040 to %struct.rtx_def**, !dbg !5191
  %568 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1041, align 8, !dbg !5191
  %u1042 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %568, i32 0, i32 1, !dbg !5191
  %fld1043 = bitcast %union.u* %u1042 to [1 x %union.rtunion_def]*, !dbg !5191
  %arrayidx1044 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1043, i64 0, i64 1, !dbg !5191
  %rt_rtx1045 = bitcast %union.rtunion_def* %arrayidx1044 to %struct.rtx_def**, !dbg !5191
  store %struct.rtx_def* %call1037, %struct.rtx_def** %rt_rtx1045, align 8, !dbg !5192
  br label %if.end1046

if.end1046:                                       ; preds = %if.else1028, %if.then1017
  br label %if.end1047, !dbg !5193

if.end1047:                                       ; preds = %if.end1046, %while.end
  br label %for.inc1048, !dbg !5194

for.inc1048:                                      ; preds = %if.end1047
  %569 = load %union.df_ref_d*, %union.df_ref_d** %next, align 8, !dbg !5195
  store %union.df_ref_d* %569, %union.df_ref_d** %use, align 8, !dbg !5196
  br label %for.cond996, !dbg !5197, !llvm.loop !5198

for.end1049:                                      ; preds = %for.cond996
  br label %if.end1050, !dbg !5200

if.end1050:                                       ; preds = %for.end1049, %land.lhs.true942, %if.end940
  br label %for.inc1051, !dbg !5201

for.inc1051:                                      ; preds = %if.end1050, %if.then992
  %570 = load i32, i32* %i, align 4, !dbg !5202
  %inc1052 = add nsw i32 %570, 1, !dbg !5202
  store i32 %inc1052, i32* %i, align 4, !dbg !5202
  br label %for.cond792, !dbg !5203, !llvm.loop !5204

for.end1053:                                      ; preds = %for.cond792
  store i32 1, i32* @reload_completed, align 4, !dbg !5206
  %571 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8, !dbg !5207
  store %struct.rtx_def* %571, %struct.rtx_def** %insn, align 8, !dbg !5209
  br label %for.cond1054, !dbg !5210

for.cond1054:                                     ; preds = %for.inc1341, %for.end1053
  %572 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5211
  %tobool1055 = icmp ne %struct.rtx_def* %572, null, !dbg !5213
  br i1 %tobool1055, label %for.body1056, label %for.end1346, !dbg !5213

for.body1056:                                     ; preds = %for.cond1054
  %573 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5214
  %574 = bitcast %struct.rtx_def* %573 to i32*, !dbg !5214
  %bf.load1057 = load i32, i32* %574, align 8, !dbg !5214
  %bf.clear1058 = and i32 %bf.load1057, 65535, !dbg !5214
  %cmp1059 = icmp eq i32 %bf.clear1058, 8, !dbg !5214
  br i1 %cmp1059, label %if.then1076, label %lor.lhs.false1061, !dbg !5214

lor.lhs.false1061:                                ; preds = %for.body1056
  %575 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5214
  %576 = bitcast %struct.rtx_def* %575 to i32*, !dbg !5214
  %bf.load1062 = load i32, i32* %576, align 8, !dbg !5214
  %bf.clear1063 = and i32 %bf.load1062, 65535, !dbg !5214
  %cmp1064 = icmp eq i32 %bf.clear1063, 7, !dbg !5214
  br i1 %cmp1064, label %if.then1076, label %lor.lhs.false1066, !dbg !5214

lor.lhs.false1066:                                ; preds = %lor.lhs.false1061
  %577 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5214
  %578 = bitcast %struct.rtx_def* %577 to i32*, !dbg !5214
  %bf.load1067 = load i32, i32* %578, align 8, !dbg !5214
  %bf.clear1068 = and i32 %bf.load1067, 65535, !dbg !5214
  %cmp1069 = icmp eq i32 %bf.clear1068, 9, !dbg !5214
  br i1 %cmp1069, label %if.then1076, label %lor.lhs.false1071, !dbg !5214

lor.lhs.false1071:                                ; preds = %lor.lhs.false1066
  %579 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5214
  %580 = bitcast %struct.rtx_def* %579 to i32*, !dbg !5214
  %bf.load1072 = load i32, i32* %580, align 8, !dbg !5214
  %bf.clear1073 = and i32 %bf.load1072, 65535, !dbg !5214
  %cmp1074 = icmp eq i32 %bf.clear1073, 10, !dbg !5214
  br i1 %cmp1074, label %if.then1076, label %if.end1340, !dbg !5216

if.then1076:                                      ; preds = %lor.lhs.false1071, %lor.lhs.false1066, %lor.lhs.false1061, %for.body1056
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %pnote, metadata !5217, metadata !DIExpression()), !dbg !5219
  %581 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5220
  %582 = bitcast %struct.rtx_def* %581 to i32*, !dbg !5220
  %bf.load1077 = load i32, i32* %582, align 8, !dbg !5220
  %bf.clear1078 = and i32 %bf.load1077, 65535, !dbg !5220
  %cmp1079 = icmp eq i32 %bf.clear1078, 10, !dbg !5220
  br i1 %cmp1079, label %if.then1081, label %if.end1090, !dbg !5222

if.then1081:                                      ; preds = %if.then1076
  %583 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5223
  %u1082 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %583, i32 0, i32 1, !dbg !5223
  %fld1083 = bitcast %union.u* %u1082 to [1 x %union.rtunion_def]*, !dbg !5223
  %arrayidx1084 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1083, i64 0, i64 8, !dbg !5223
  %rt_rtx1085 = bitcast %union.rtunion_def* %arrayidx1084 to %struct.rtx_def**, !dbg !5223
  %584 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5224
  %u1086 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %584, i32 0, i32 1, !dbg !5224
  %fld1087 = bitcast %union.u* %u1086 to [1 x %union.rtunion_def]*, !dbg !5224
  %arrayidx1088 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1087, i64 0, i64 8, !dbg !5224
  %rt_rtx1089 = bitcast %union.rtunion_def* %arrayidx1088 to %struct.rtx_def**, !dbg !5224
  %585 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1089, align 8, !dbg !5224
  call void @replace_pseudos_in(%struct.rtx_def** %rt_rtx1085, i32 0, %struct.rtx_def* %585), !dbg !5225
  br label %if.end1090, !dbg !5225

if.end1090:                                       ; preds = %if.then1081, %if.then1076
  %586 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5226
  %u1091 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %586, i32 0, i32 1, !dbg !5226
  %fld1092 = bitcast %union.u* %u1091 to [1 x %union.rtunion_def]*, !dbg !5226
  %arrayidx1093 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1092, i64 0, i64 5, !dbg !5226
  %rt_rtx1094 = bitcast %union.rtunion_def* %arrayidx1093 to %struct.rtx_def**, !dbg !5226
  %587 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1094, align 8, !dbg !5226
  %588 = bitcast %struct.rtx_def* %587 to i32*, !dbg !5226
  %bf.load1095 = load i32, i32* %588, align 8, !dbg !5226
  %bf.clear1096 = and i32 %bf.load1095, 65535, !dbg !5226
  %cmp1097 = icmp eq i32 %bf.clear1096, 24, !dbg !5228
  br i1 %cmp1097, label %land.lhs.true1099, label %lor.lhs.false1108, !dbg !5229

land.lhs.true1099:                                ; preds = %if.end1090
  %589 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5230
  %590 = bitcast %struct.rtx_def* %589 to i32*, !dbg !5230
  %bf.load1100 = load i32, i32* %590, align 8, !dbg !5230
  %bf.lshr1101 = lshr i32 %bf.load1100, 16, !dbg !5230
  %bf.clear1102 = and i32 %bf.lshr1101, 255, !dbg !5230
  %cmp1103 = icmp eq i32 %bf.clear1102, 14, !dbg !5231
  br i1 %cmp1103, label %if.then1201, label %lor.lhs.false1105, !dbg !5232

lor.lhs.false1105:                                ; preds = %land.lhs.true1099
  %591 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5233
  %call1106 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %591, i32 4, %struct.rtx_def* null), !dbg !5234
  %tobool1107 = icmp ne %struct.rtx_def* %call1106, null, !dbg !5234
  br i1 %tobool1107, label %if.then1201, label %lor.lhs.false1108, !dbg !5235

lor.lhs.false1108:                                ; preds = %lor.lhs.false1105, %if.end1090
  %592 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5236
  %u1109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %592, i32 0, i32 1, !dbg !5236
  %fld1110 = bitcast %union.u* %u1109 to [1 x %union.rtunion_def]*, !dbg !5236
  %arrayidx1111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1110, i64 0, i64 5, !dbg !5236
  %rt_rtx1112 = bitcast %union.rtunion_def* %arrayidx1111 to %struct.rtx_def**, !dbg !5236
  %593 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1112, align 8, !dbg !5236
  %594 = bitcast %struct.rtx_def* %593 to i32*, !dbg !5236
  %bf.load1113 = load i32, i32* %594, align 8, !dbg !5236
  %bf.clear1114 = and i32 %bf.load1113, 65535, !dbg !5236
  %cmp1115 = icmp eq i32 %bf.clear1114, 25, !dbg !5237
  br i1 %cmp1115, label %land.lhs.true1117, label %if.end1203, !dbg !5238

land.lhs.true1117:                                ; preds = %lor.lhs.false1108
  %595 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5239
  %u1118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %595, i32 0, i32 1, !dbg !5239
  %fld1119 = bitcast %union.u* %u1118 to [1 x %union.rtunion_def]*, !dbg !5239
  %arrayidx1120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1119, i64 0, i64 5, !dbg !5239
  %rt_rtx1121 = bitcast %union.rtunion_def* %arrayidx1120 to %struct.rtx_def**, !dbg !5239
  %596 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1121, align 8, !dbg !5239
  %u1122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %596, i32 0, i32 1, !dbg !5239
  %fld1123 = bitcast %union.u* %u1122 to [1 x %union.rtunion_def]*, !dbg !5239
  %arrayidx1124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1123, i64 0, i64 0, !dbg !5239
  %rt_rtx1125 = bitcast %union.rtunion_def* %arrayidx1124 to %struct.rtx_def**, !dbg !5239
  %597 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1125, align 8, !dbg !5239
  %598 = bitcast %struct.rtx_def* %597 to i32*, !dbg !5239
  %bf.load1126 = load i32, i32* %598, align 8, !dbg !5239
  %bf.clear1127 = and i32 %bf.load1126, 65535, !dbg !5239
  %cmp1128 = icmp eq i32 %bf.clear1127, 43, !dbg !5239
  br i1 %cmp1128, label %lor.lhs.false1130, label %land.lhs.true1176, !dbg !5240

lor.lhs.false1130:                                ; preds = %land.lhs.true1117
  %599 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5241
  %u1131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %599, i32 0, i32 1, !dbg !5241
  %fld1132 = bitcast %union.u* %u1131 to [1 x %union.rtunion_def]*, !dbg !5241
  %arrayidx1133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1132, i64 0, i64 5, !dbg !5241
  %rt_rtx1134 = bitcast %union.rtunion_def* %arrayidx1133 to %struct.rtx_def**, !dbg !5241
  %600 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1134, align 8, !dbg !5241
  %u1135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %600, i32 0, i32 1, !dbg !5241
  %fld1136 = bitcast %union.u* %u1135 to [1 x %union.rtunion_def]*, !dbg !5241
  %arrayidx1137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1136, i64 0, i64 0, !dbg !5241
  %rt_rtx1138 = bitcast %union.rtunion_def* %arrayidx1137 to %struct.rtx_def**, !dbg !5241
  %601 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1138, align 8, !dbg !5241
  %602 = bitcast %struct.rtx_def* %601 to i32*, !dbg !5241
  %bf.load1139 = load i32, i32* %602, align 8, !dbg !5241
  %bf.lshr1140 = lshr i32 %bf.load1139, 16, !dbg !5241
  %bf.clear1141 = and i32 %bf.lshr1140, 255, !dbg !5241
  %cmp1142 = icmp ne i32 %bf.clear1141, 1, !dbg !5242
  br i1 %cmp1142, label %land.lhs.true1176, label %lor.lhs.false1144, !dbg !5243

lor.lhs.false1144:                                ; preds = %lor.lhs.false1130
  %603 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5244
  %u1145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %603, i32 0, i32 1, !dbg !5244
  %fld1146 = bitcast %union.u* %u1145 to [1 x %union.rtunion_def]*, !dbg !5244
  %arrayidx1147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1146, i64 0, i64 5, !dbg !5244
  %rt_rtx1148 = bitcast %union.rtunion_def* %arrayidx1147 to %struct.rtx_def**, !dbg !5244
  %604 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1148, align 8, !dbg !5244
  %u1149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %604, i32 0, i32 1, !dbg !5244
  %fld1150 = bitcast %union.u* %u1149 to [1 x %union.rtunion_def]*, !dbg !5244
  %arrayidx1151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1150, i64 0, i64 0, !dbg !5244
  %rt_rtx1152 = bitcast %union.rtunion_def* %arrayidx1151 to %struct.rtx_def**, !dbg !5244
  %605 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1152, align 8, !dbg !5244
  %u1153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %605, i32 0, i32 1, !dbg !5244
  %fld1154 = bitcast %union.u* %u1153 to [1 x %union.rtunion_def]*, !dbg !5244
  %arrayidx1155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1154, i64 0, i64 0, !dbg !5244
  %rt_rtx1156 = bitcast %union.rtunion_def* %arrayidx1155 to %struct.rtx_def**, !dbg !5244
  %606 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1156, align 8, !dbg !5244
  %607 = bitcast %struct.rtx_def* %606 to i32*, !dbg !5244
  %bf.load1157 = load i32, i32* %607, align 8, !dbg !5244
  %bf.clear1158 = and i32 %bf.load1157, 65535, !dbg !5244
  %cmp1159 = icmp ne i32 %bf.clear1158, 38, !dbg !5245
  br i1 %cmp1159, label %land.lhs.true1161, label %if.end1203, !dbg !5246

land.lhs.true1161:                                ; preds = %lor.lhs.false1144
  %608 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5247
  %u1162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %608, i32 0, i32 1, !dbg !5247
  %fld1163 = bitcast %union.u* %u1162 to [1 x %union.rtunion_def]*, !dbg !5247
  %arrayidx1164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1163, i64 0, i64 5, !dbg !5247
  %rt_rtx1165 = bitcast %union.rtunion_def* %arrayidx1164 to %struct.rtx_def**, !dbg !5247
  %609 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1165, align 8, !dbg !5247
  %u1166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %609, i32 0, i32 1, !dbg !5247
  %fld1167 = bitcast %union.u* %u1166 to [1 x %union.rtunion_def]*, !dbg !5247
  %arrayidx1168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1167, i64 0, i64 0, !dbg !5247
  %rt_rtx1169 = bitcast %union.rtunion_def* %arrayidx1168 to %struct.rtx_def**, !dbg !5247
  %610 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1169, align 8, !dbg !5247
  %u1170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %610, i32 0, i32 1, !dbg !5247
  %fld1171 = bitcast %union.u* %u1170 to [1 x %union.rtunion_def]*, !dbg !5247
  %arrayidx1172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1171, i64 0, i64 0, !dbg !5247
  %rt_rtx1173 = bitcast %union.rtunion_def* %arrayidx1172 to %struct.rtx_def**, !dbg !5247
  %611 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1173, align 8, !dbg !5247
  %612 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !5248
  %cmp1174 = icmp ne %struct.rtx_def* %611, %612, !dbg !5249
  br i1 %cmp1174, label %land.lhs.true1176, label %if.end1203, !dbg !5250

land.lhs.true1176:                                ; preds = %land.lhs.true1161, %lor.lhs.false1130, %land.lhs.true1117
  %613 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5251
  %u1177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %613, i32 0, i32 1, !dbg !5251
  %fld1178 = bitcast %union.u* %u1177 to [1 x %union.rtunion_def]*, !dbg !5251
  %arrayidx1179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1178, i64 0, i64 5, !dbg !5251
  %rt_rtx1180 = bitcast %union.rtunion_def* %arrayidx1179 to %struct.rtx_def**, !dbg !5251
  %614 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1180, align 8, !dbg !5251
  %u1181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %614, i32 0, i32 1, !dbg !5251
  %fld1182 = bitcast %union.u* %u1181 to [1 x %union.rtunion_def]*, !dbg !5251
  %arrayidx1183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1182, i64 0, i64 0, !dbg !5251
  %rt_rtx1184 = bitcast %union.rtunion_def* %arrayidx1183 to %struct.rtx_def**, !dbg !5251
  %615 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1184, align 8, !dbg !5251
  %616 = bitcast %struct.rtx_def* %615 to i32*, !dbg !5251
  %bf.load1185 = load i32, i32* %616, align 8, !dbg !5251
  %bf.clear1186 = and i32 %bf.load1185, 65535, !dbg !5251
  %cmp1187 = icmp eq i32 %bf.clear1186, 37, !dbg !5251
  br i1 %cmp1187, label %lor.lhs.false1189, label %if.then1201, !dbg !5252

lor.lhs.false1189:                                ; preds = %land.lhs.true1176
  %617 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5253
  %u1190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %617, i32 0, i32 1, !dbg !5253
  %fld1191 = bitcast %union.u* %u1190 to [1 x %union.rtunion_def]*, !dbg !5253
  %arrayidx1192 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1191, i64 0, i64 5, !dbg !5253
  %rt_rtx1193 = bitcast %union.rtunion_def* %arrayidx1192 to %struct.rtx_def**, !dbg !5253
  %618 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1193, align 8, !dbg !5253
  %u1194 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %618, i32 0, i32 1, !dbg !5253
  %fld1195 = bitcast %union.u* %u1194 to [1 x %union.rtunion_def]*, !dbg !5253
  %arrayidx1196 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1195, i64 0, i64 0, !dbg !5253
  %rt_rtx1197 = bitcast %union.rtunion_def* %arrayidx1196 to %struct.rtx_def**, !dbg !5253
  %619 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1197, align 8, !dbg !5253
  %620 = bitcast %struct.rtx_def* %619 to i32*, !dbg !5253
  %bf.load1198 = load i32, i32* %620, align 8, !dbg !5253
  %bf.lshr1199 = lshr i32 %bf.load1198, 31, !dbg !5253
  %tobool1200 = icmp ne i32 %bf.lshr1199, 0, !dbg !5253
  br i1 %tobool1200, label %if.end1203, label %if.then1201, !dbg !5254

if.then1201:                                      ; preds = %lor.lhs.false1189, %land.lhs.true1176, %lor.lhs.false1105, %land.lhs.true1099
  %621 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5255
  %call1202 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %621), !dbg !5257
  br label %for.inc1341, !dbg !5258

if.end1203:                                       ; preds = %lor.lhs.false1189, %land.lhs.true1161, %lor.lhs.false1144, %lor.lhs.false1108
  %622 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5259
  %u1204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %622, i32 0, i32 1, !dbg !5259
  %fld1205 = bitcast %union.u* %u1204 to [1 x %union.rtunion_def]*, !dbg !5259
  %arrayidx1206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1205, i64 0, i64 5, !dbg !5259
  %rt_rtx1207 = bitcast %union.rtunion_def* %arrayidx1206 to %struct.rtx_def**, !dbg !5259
  %623 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1207, align 8, !dbg !5259
  %624 = bitcast %struct.rtx_def* %623 to i32*, !dbg !5259
  %bf.load1208 = load i32, i32* %624, align 8, !dbg !5259
  %bf.clear1209 = and i32 %bf.load1208, 65535, !dbg !5259
  %cmp1210 = icmp eq i32 %bf.clear1209, 25, !dbg !5261
  br i1 %cmp1210, label %if.then1212, label %if.end1225, !dbg !5262

if.then1212:                                      ; preds = %if.end1203
  %625 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5263
  %u1213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %625, i32 0, i32 1, !dbg !5263
  %fld1214 = bitcast %union.u* %u1213 to [1 x %union.rtunion_def]*, !dbg !5263
  %arrayidx1215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1214, i64 0, i64 5, !dbg !5263
  %rt_rtx1216 = bitcast %union.rtunion_def* %arrayidx1215 to %struct.rtx_def**, !dbg !5263
  %626 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1216, align 8, !dbg !5263
  %u1217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %626, i32 0, i32 1, !dbg !5263
  %fld1218 = bitcast %union.u* %u1217 to [1 x %union.rtunion_def]*, !dbg !5263
  %arrayidx1219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1218, i64 0, i64 0, !dbg !5263
  %rt_rtx1220 = bitcast %union.rtunion_def* %arrayidx1219 to %struct.rtx_def**, !dbg !5263
  %627 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5264
  %u1221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %627, i32 0, i32 1, !dbg !5264
  %fld1222 = bitcast %union.u* %u1221 to [1 x %union.rtunion_def]*, !dbg !5264
  %arrayidx1223 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1222, i64 0, i64 5, !dbg !5264
  %rt_rtx1224 = bitcast %union.rtunion_def* %arrayidx1223 to %struct.rtx_def**, !dbg !5264
  %628 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1224, align 8, !dbg !5264
  call void @replace_pseudos_in(%struct.rtx_def** %rt_rtx1220, i32 0, %struct.rtx_def* %628), !dbg !5265
  br label %if.end1225, !dbg !5265

if.end1225:                                       ; preds = %if.then1212, %if.end1203
  %629 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5266
  %630 = bitcast %struct.rtx_def* %629 to i32*, !dbg !5266
  %bf.load1226 = load i32, i32* %630, align 8, !dbg !5266
  %bf.clear1227 = and i32 %bf.load1226, 65535, !dbg !5266
  %cmp1228 = icmp eq i32 %bf.clear1227, 8, !dbg !5266
  br i1 %cmp1228, label %land.lhs.true1230, label %if.end1288, !dbg !5268

land.lhs.true1230:                                ; preds = %if.end1225
  %631 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5269
  %u1231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %631, i32 0, i32 1, !dbg !5269
  %fld1232 = bitcast %union.u* %u1231 to [1 x %union.rtunion_def]*, !dbg !5269
  %arrayidx1233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1232, i64 0, i64 5, !dbg !5269
  %rt_rtx1234 = bitcast %union.rtunion_def* %arrayidx1233 to %struct.rtx_def**, !dbg !5269
  %632 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1234, align 8, !dbg !5269
  %633 = bitcast %struct.rtx_def* %632 to i32*, !dbg !5269
  %bf.load1235 = load i32, i32* %633, align 8, !dbg !5269
  %bf.clear1236 = and i32 %bf.load1235, 65535, !dbg !5269
  %cmp1237 = icmp eq i32 %bf.clear1236, 23, !dbg !5270
  br i1 %cmp1237, label %land.lhs.true1239, label %if.end1288, !dbg !5271

land.lhs.true1239:                                ; preds = %land.lhs.true1230
  %634 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5272
  %u1240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %634, i32 0, i32 1, !dbg !5272
  %fld1241 = bitcast %union.u* %u1240 to [1 x %union.rtunion_def]*, !dbg !5272
  %arrayidx1242 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1241, i64 0, i64 5, !dbg !5272
  %rt_rtx1243 = bitcast %union.rtunion_def* %arrayidx1242 to %struct.rtx_def**, !dbg !5272
  %635 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1243, align 8, !dbg !5272
  %u1244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %635, i32 0, i32 1, !dbg !5272
  %fld1245 = bitcast %union.u* %u1244 to [1 x %union.rtunion_def]*, !dbg !5272
  %arrayidx1246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1245, i64 0, i64 1, !dbg !5272
  %rt_rtx1247 = bitcast %union.rtunion_def* %arrayidx1246 to %struct.rtx_def**, !dbg !5272
  %636 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1247, align 8, !dbg !5272
  %637 = bitcast %struct.rtx_def* %636 to i32*, !dbg !5272
  %bf.load1248 = load i32, i32* %637, align 8, !dbg !5272
  %bf.clear1249 = and i32 %bf.load1248, 65535, !dbg !5272
  %cmp1250 = icmp eq i32 %bf.clear1249, 37, !dbg !5272
  br i1 %cmp1250, label %land.lhs.true1252, label %if.end1288, !dbg !5273

land.lhs.true1252:                                ; preds = %land.lhs.true1239
  %638 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5274
  %u1253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %638, i32 0, i32 1, !dbg !5274
  %fld1254 = bitcast %union.u* %u1253 to [1 x %union.rtunion_def]*, !dbg !5274
  %arrayidx1255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1254, i64 0, i64 5, !dbg !5274
  %rt_rtx1256 = bitcast %union.rtunion_def* %arrayidx1255 to %struct.rtx_def**, !dbg !5274
  %639 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1256, align 8, !dbg !5274
  %u1257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %639, i32 0, i32 1, !dbg !5274
  %fld1258 = bitcast %union.u* %u1257 to [1 x %union.rtunion_def]*, !dbg !5274
  %arrayidx1259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1258, i64 0, i64 0, !dbg !5274
  %rt_rtx1260 = bitcast %union.rtunion_def* %arrayidx1259 to %struct.rtx_def**, !dbg !5274
  %640 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1260, align 8, !dbg !5274
  %641 = bitcast %struct.rtx_def* %640 to i32*, !dbg !5274
  %bf.load1261 = load i32, i32* %641, align 8, !dbg !5274
  %bf.clear1262 = and i32 %bf.load1261, 65535, !dbg !5274
  %cmp1263 = icmp eq i32 %bf.clear1262, 37, !dbg !5274
  br i1 %cmp1263, label %land.lhs.true1265, label %if.end1288, !dbg !5275

land.lhs.true1265:                                ; preds = %land.lhs.true1252
  %642 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5276
  %u1266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %642, i32 0, i32 1, !dbg !5276
  %fld1267 = bitcast %union.u* %u1266 to [1 x %union.rtunion_def]*, !dbg !5276
  %arrayidx1268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1267, i64 0, i64 5, !dbg !5276
  %rt_rtx1269 = bitcast %union.rtunion_def* %arrayidx1268 to %struct.rtx_def**, !dbg !5276
  %643 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1269, align 8, !dbg !5276
  %u1270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %643, i32 0, i32 1, !dbg !5276
  %fld1271 = bitcast %union.u* %u1270 to [1 x %union.rtunion_def]*, !dbg !5276
  %arrayidx1272 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1271, i64 0, i64 1, !dbg !5276
  %rt_rtx1273 = bitcast %union.rtunion_def* %arrayidx1272 to %struct.rtx_def**, !dbg !5276
  %644 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1273, align 8, !dbg !5276
  %call1274 = call i32 @rhs_regno(%struct.rtx_def* %644), !dbg !5276
  %645 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5277
  %u1275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %645, i32 0, i32 1, !dbg !5277
  %fld1276 = bitcast %union.u* %u1275 to [1 x %union.rtunion_def]*, !dbg !5277
  %arrayidx1277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1276, i64 0, i64 5, !dbg !5277
  %rt_rtx1278 = bitcast %union.rtunion_def* %arrayidx1277 to %struct.rtx_def**, !dbg !5277
  %646 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1278, align 8, !dbg !5277
  %u1279 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %646, i32 0, i32 1, !dbg !5277
  %fld1280 = bitcast %union.u* %u1279 to [1 x %union.rtunion_def]*, !dbg !5277
  %arrayidx1281 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1280, i64 0, i64 0, !dbg !5277
  %rt_rtx1282 = bitcast %union.rtunion_def* %arrayidx1281 to %struct.rtx_def**, !dbg !5277
  %647 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1282, align 8, !dbg !5277
  %call1283 = call i32 @rhs_regno(%struct.rtx_def* %647), !dbg !5277
  %cmp1284 = icmp eq i32 %call1274, %call1283, !dbg !5278
  br i1 %cmp1284, label %if.then1286, label %if.end1288, !dbg !5279

if.then1286:                                      ; preds = %land.lhs.true1265
  %648 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5280
  %call1287 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %648), !dbg !5282
  br label %for.inc1341, !dbg !5283

if.end1288:                                       ; preds = %land.lhs.true1265, %land.lhs.true1252, %land.lhs.true1239, %land.lhs.true1230, %if.end1225
  %649 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5284
  %u1289 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %649, i32 0, i32 1, !dbg !5284
  %fld1290 = bitcast %union.u* %u1289 to [1 x %union.rtunion_def]*, !dbg !5284
  %arrayidx1291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1290, i64 0, i64 7, !dbg !5284
  %rt_rtx1292 = bitcast %union.rtunion_def* %arrayidx1291 to %struct.rtx_def**, !dbg !5284
  store %struct.rtx_def** %rt_rtx1292, %struct.rtx_def*** %pnote, align 8, !dbg !5285
  br label %while.cond1293, !dbg !5286

while.cond1293:                                   ; preds = %if.end1324, %if.end1288
  %650 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8, !dbg !5287
  %651 = load %struct.rtx_def*, %struct.rtx_def** %650, align 8, !dbg !5288
  %cmp1294 = icmp ne %struct.rtx_def* %651, null, !dbg !5289
  br i1 %cmp1294, label %while.body1296, label %while.end1325, !dbg !5286

while.body1296:                                   ; preds = %while.cond1293
  %652 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8, !dbg !5290
  %653 = load %struct.rtx_def*, %struct.rtx_def** %652, align 8, !dbg !5290
  %654 = bitcast %struct.rtx_def* %653 to i32*, !dbg !5290
  %bf.load1297 = load i32, i32* %654, align 8, !dbg !5290
  %bf.lshr1298 = lshr i32 %bf.load1297, 16, !dbg !5290
  %bf.clear1299 = and i32 %bf.lshr1298, 255, !dbg !5290
  %cmp1300 = icmp eq i32 %bf.clear1299, 1, !dbg !5293
  br i1 %cmp1300, label %if.then1314, label %lor.lhs.false1302, !dbg !5294

lor.lhs.false1302:                                ; preds = %while.body1296
  %655 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8, !dbg !5295
  %656 = load %struct.rtx_def*, %struct.rtx_def** %655, align 8, !dbg !5295
  %657 = bitcast %struct.rtx_def* %656 to i32*, !dbg !5295
  %bf.load1303 = load i32, i32* %657, align 8, !dbg !5295
  %bf.lshr1304 = lshr i32 %bf.load1303, 16, !dbg !5295
  %bf.clear1305 = and i32 %bf.lshr1304, 255, !dbg !5295
  %cmp1306 = icmp eq i32 %bf.clear1305, 6, !dbg !5296
  br i1 %cmp1306, label %if.then1314, label %lor.lhs.false1308, !dbg !5297

lor.lhs.false1308:                                ; preds = %lor.lhs.false1302
  %658 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8, !dbg !5298
  %659 = load %struct.rtx_def*, %struct.rtx_def** %658, align 8, !dbg !5298
  %660 = bitcast %struct.rtx_def* %659 to i32*, !dbg !5298
  %bf.load1309 = load i32, i32* %660, align 8, !dbg !5298
  %bf.lshr1310 = lshr i32 %bf.load1309, 16, !dbg !5298
  %bf.clear1311 = and i32 %bf.lshr1310, 255, !dbg !5298
  %cmp1312 = icmp eq i32 %bf.clear1311, 2, !dbg !5299
  br i1 %cmp1312, label %if.then1314, label %if.else1319, !dbg !5300

if.then1314:                                      ; preds = %lor.lhs.false1308, %lor.lhs.false1302, %while.body1296
  %661 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8, !dbg !5301
  %662 = load %struct.rtx_def*, %struct.rtx_def** %661, align 8, !dbg !5301
  %u1315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %662, i32 0, i32 1, !dbg !5301
  %fld1316 = bitcast %union.u* %u1315 to [1 x %union.rtunion_def]*, !dbg !5301
  %arrayidx1317 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1316, i64 0, i64 1, !dbg !5301
  %rt_rtx1318 = bitcast %union.rtunion_def* %arrayidx1317 to %struct.rtx_def**, !dbg !5301
  %663 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1318, align 8, !dbg !5301
  %664 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8, !dbg !5302
  store %struct.rtx_def* %663, %struct.rtx_def** %664, align 8, !dbg !5303
  br label %if.end1324, !dbg !5304

if.else1319:                                      ; preds = %lor.lhs.false1308
  %665 = load %struct.rtx_def**, %struct.rtx_def*** %pnote, align 8, !dbg !5305
  %666 = load %struct.rtx_def*, %struct.rtx_def** %665, align 8, !dbg !5305
  %u1320 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %666, i32 0, i32 1, !dbg !5305
  %fld1321 = bitcast %union.u* %u1320 to [1 x %union.rtunion_def]*, !dbg !5305
  %arrayidx1322 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1321, i64 0, i64 1, !dbg !5305
  %rt_rtx1323 = bitcast %union.rtunion_def* %arrayidx1322 to %struct.rtx_def**, !dbg !5305
  store %struct.rtx_def** %rt_rtx1323, %struct.rtx_def*** %pnote, align 8, !dbg !5306
  br label %if.end1324

if.end1324:                                       ; preds = %if.else1319, %if.then1314
  br label %while.cond1293, !dbg !5286, !llvm.loop !5307

while.end1325:                                    ; preds = %while.cond1293
  %667 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5309
  call void @cleanup_subreg_operands(%struct.rtx_def* %667), !dbg !5310
  %668 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5311
  %u1326 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %668, i32 0, i32 1, !dbg !5311
  %fld1327 = bitcast %union.u* %u1326 to [1 x %union.rtunion_def]*, !dbg !5311
  %arrayidx1328 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1327, i64 0, i64 5, !dbg !5311
  %rt_rtx1329 = bitcast %union.rtunion_def* %arrayidx1328 to %struct.rtx_def**, !dbg !5311
  %669 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1329, align 8, !dbg !5311
  %call1330 = call i32 @asm_noperands(%struct.rtx_def* %669), !dbg !5313
  %cmp1331 = icmp sge i32 %call1330, 0, !dbg !5314
  br i1 %cmp1331, label %if.then1333, label %if.end1339, !dbg !5315

if.then1333:                                      ; preds = %while.end1325
  %670 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5316
  call void @extract_insn(%struct.rtx_def* %670), !dbg !5318
  %call1334 = call i32 @constrain_operands(i32 1), !dbg !5319
  %tobool1335 = icmp ne i32 %call1334, 0, !dbg !5319
  br i1 %tobool1335, label %if.end1338, label %if.then1336, !dbg !5321

if.then1336:                                      ; preds = %if.then1333
  %671 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5322
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %671, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.5, i64 0, i64 0)), !dbg !5324
  %672 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5325
  %call1337 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %672), !dbg !5326
  br label %for.inc1341, !dbg !5327

if.end1338:                                       ; preds = %if.then1333
  br label %if.end1339, !dbg !5328

if.end1339:                                       ; preds = %if.end1338, %while.end1325
  br label %if.end1340, !dbg !5329

if.end1340:                                       ; preds = %if.end1339, %lor.lhs.false1071
  br label %for.inc1341, !dbg !5214

for.inc1341:                                      ; preds = %if.end1340, %if.then1336, %if.then1286, %if.then1201
  %673 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !5330
  %u1342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %673, i32 0, i32 1, !dbg !5330
  %fld1343 = bitcast %union.u* %u1342 to [1 x %union.rtunion_def]*, !dbg !5330
  %arrayidx1344 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1343, i64 0, i64 2, !dbg !5330
  %rt_rtx1345 = bitcast %union.rtunion_def* %arrayidx1344 to %struct.rtx_def**, !dbg !5330
  %674 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1345, align 8, !dbg !5330
  store %struct.rtx_def* %674, %struct.rtx_def** %insn, align 8, !dbg !5331
  br label %for.cond1054, !dbg !5332, !llvm.loop !5333

for.end1346:                                      ; preds = %for.cond1054
  %675 = load i32, i32* @flag_stack_check, align 4, !dbg !5335
  %cmp1347 = icmp eq i32 %675, 1, !dbg !5337
  br i1 %cmp1347, label %if.then1349, label %if.end1383, !dbg !5338

if.then1349:                                      ; preds = %for.end1346
  call void @llvm.dbg.declare(metadata i64* %size, metadata !5339, metadata !DIExpression()), !dbg !5341
  %call1350 = call i64 @get_frame_size(), !dbg !5342
  %add1351 = add nsw i64 %call1350, 16, !dbg !5343
  store i64 %add1351, i64* %size, align 8, !dbg !5341
  store i32 0, i32* %i, align 4, !dbg !5344
  br label %for.cond1352, !dbg !5346

for.cond1352:                                     ; preds = %for.inc1371, %if.then1349
  %676 = load i32, i32* %i, align 4, !dbg !5347
  %cmp1353 = icmp slt i32 %676, 53, !dbg !5349
  br i1 %cmp1353, label %for.body1355, label %for.end1373, !dbg !5350

for.body1355:                                     ; preds = %for.cond1352
  %677 = load i32, i32* %i, align 4, !dbg !5351
  %call1356 = call zeroext i8 @df_regs_ever_live_p(i32 %677), !dbg !5353
  %conv1357 = zext i8 %call1356 to i32, !dbg !5353
  %tobool1358 = icmp ne i32 %conv1357, 0, !dbg !5353
  br i1 %tobool1358, label %land.lhs.true1359, label %if.end1370, !dbg !5354

land.lhs.true1359:                                ; preds = %for.body1355
  %678 = load i32, i32* %i, align 4, !dbg !5355
  %idxprom1360 = sext i32 %678 to i64, !dbg !5356
  %arrayidx1361 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom1360, !dbg !5356
  %679 = load i8, i8* %arrayidx1361, align 1, !dbg !5356
  %tobool1362 = icmp ne i8 %679, 0, !dbg !5356
  br i1 %tobool1362, label %if.end1370, label %land.lhs.true1363, !dbg !5357

land.lhs.true1363:                                ; preds = %land.lhs.true1359
  %680 = load i32, i32* %i, align 4, !dbg !5358
  %idxprom1364 = sext i32 %680 to i64, !dbg !5359
  %arrayidx1365 = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i64 0, i64 %idxprom1364, !dbg !5359
  %681 = load i8, i8* %arrayidx1365, align 1, !dbg !5359
  %conv1366 = sext i8 %681 to i32, !dbg !5359
  %tobool1367 = icmp ne i32 %conv1366, 0, !dbg !5359
  br i1 %tobool1367, label %if.then1368, label %if.end1370, !dbg !5360

if.then1368:                                      ; preds = %land.lhs.true1363
  %682 = load i64, i64* %size, align 8, !dbg !5361
  %add1369 = add nsw i64 %682, 4, !dbg !5361
  store i64 %add1369, i64* %size, align 8, !dbg !5361
  br label %if.end1370, !dbg !5362

if.end1370:                                       ; preds = %if.then1368, %land.lhs.true1363, %land.lhs.true1359, %for.body1355
  br label %for.inc1371, !dbg !5363

for.inc1371:                                      ; preds = %if.end1370
  %683 = load i32, i32* %i, align 4, !dbg !5364
  %inc1372 = add nsw i32 %683, 1, !dbg !5364
  store i32 %inc1372, i32* %i, align 4, !dbg !5364
  br label %for.cond1352, !dbg !5365, !llvm.loop !5366

for.end1373:                                      ; preds = %for.cond1352
  %684 = load i64, i64* %size, align 8, !dbg !5368
  %cmp1374 = icmp sgt i64 %684, 4092, !dbg !5370
  br i1 %cmp1374, label %if.then1376, label %if.end1382, !dbg !5371

if.then1376:                                      ; preds = %for.end1373
  %call1377 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i64 0, i64 0)), !dbg !5372
  %685 = load i32, i32* @reload.verbose_warned, align 4, !dbg !5374
  %tobool1378 = icmp ne i32 %685, 0, !dbg !5374
  br i1 %tobool1378, label %if.end1381, label %if.then1379, !dbg !5376

if.then1379:                                      ; preds = %if.then1376
  %call1380 = call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i64 0, i64 0)), !dbg !5377
  store i32 1, i32* @reload.verbose_warned, align 4, !dbg !5379
  br label %if.end1381, !dbg !5380

if.end1381:                                       ; preds = %if.then1379, %if.then1376
  br label %if.end1382, !dbg !5381

if.end1382:                                       ; preds = %if.end1381, %for.end1373
  br label %if.end1383, !dbg !5382

if.end1383:                                       ; preds = %if.end1382, %for.end1346
  %686 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !5383
  %tobool1384 = icmp ne %struct.rtx_def** %686, null, !dbg !5383
  br i1 %tobool1384, label %if.then1385, label %if.end1386, !dbg !5385

if.then1385:                                      ; preds = %if.end1383
  %687 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !5386
  %688 = bitcast %struct.rtx_def** %687 to i8*, !dbg !5386
  call void @free(i8* %688), !dbg !5387
  br label %if.end1386, !dbg !5387

if.end1386:                                       ; preds = %if.then1385, %if.end1383
  %689 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !5388
  %tobool1387 = icmp ne %struct.rtx_def** %689, null, !dbg !5388
  br i1 %tobool1387, label %if.then1388, label %if.end1389, !dbg !5390

if.then1388:                                      ; preds = %if.end1386
  %690 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !5391
  %691 = bitcast %struct.rtx_def** %690 to i8*, !dbg !5391
  call void @free(i8* %691), !dbg !5392
  br label %if.end1389, !dbg !5392

if.end1389:                                       ; preds = %if.then1388, %if.end1386
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !5393
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !5394
  call void @VEC_rtx_gc_free(%struct.VEC_rtx_gc** @reg_equiv_memory_loc_vec), !dbg !5395
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !5396
  %692 = load i32*, i32** @temp_pseudo_reg_arr, align 8, !dbg !5397
  %693 = bitcast i32* %692 to i8*, !dbg !5397
  call void @free(i8* %693), !dbg !5398
  %694 = load i8*, i8** @offsets_known_at, align 8, !dbg !5399
  %tobool1390 = icmp ne i8* %694, null, !dbg !5399
  br i1 %tobool1390, label %if.then1391, label %if.end1392, !dbg !5401

if.then1391:                                      ; preds = %if.end1389
  %695 = load i8*, i8** @offsets_known_at, align 8, !dbg !5402
  call void @free(i8* %695), !dbg !5403
  br label %if.end1392, !dbg !5403

if.end1392:                                       ; preds = %if.then1391, %if.end1389
  %696 = load [4 x i64]*, [4 x i64]** @offsets_at, align 8, !dbg !5404
  %tobool1393 = icmp ne [4 x i64]* %696, null, !dbg !5404
  br i1 %tobool1393, label %if.then1394, label %if.end1395, !dbg !5406

if.then1394:                                      ; preds = %if.end1392
  %697 = load [4 x i64]*, [4 x i64]** @offsets_at, align 8, !dbg !5407
  %698 = bitcast [4 x i64]* %697 to i8*, !dbg !5407
  call void @free(i8* %698), !dbg !5408
  br label %if.end1395, !dbg !5408

if.end1395:                                       ; preds = %if.then1394, %if.end1392
  store i32 0, i32* %i, align 4, !dbg !5409
  br label %for.cond1396, !dbg !5411

for.cond1396:                                     ; preds = %for.inc1407, %if.end1395
  %699 = load i32, i32* %i, align 4, !dbg !5412
  %cmp1397 = icmp slt i32 %699, 53, !dbg !5414
  br i1 %cmp1397, label %for.body1399, label %for.end1409, !dbg !5415

for.body1399:                                     ; preds = %for.cond1396
  %700 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_alt_mem_list, align 8, !dbg !5416
  %701 = load i32, i32* %i, align 4, !dbg !5418
  %idxprom1400 = sext i32 %701 to i64, !dbg !5416
  %arrayidx1401 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %700, i64 %idxprom1400, !dbg !5416
  %702 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1401, align 8, !dbg !5416
  %tobool1402 = icmp ne %struct.rtx_def* %702, null, !dbg !5416
  br i1 %tobool1402, label %if.then1403, label %if.end1406, !dbg !5419

if.then1403:                                      ; preds = %for.body1399
  %703 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_alt_mem_list, align 8, !dbg !5420
  %704 = load i32, i32* %i, align 4, !dbg !5421
  %idxprom1404 = sext i32 %704 to i64, !dbg !5420
  %arrayidx1405 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %703, i64 %idxprom1404, !dbg !5420
  call void @free_EXPR_LIST_list(%struct.rtx_def** %arrayidx1405), !dbg !5422
  br label %if.end1406, !dbg !5422

if.end1406:                                       ; preds = %if.then1403, %for.body1399
  br label %for.inc1407, !dbg !5423

for.inc1407:                                      ; preds = %if.end1406
  %705 = load i32, i32* %i, align 4, !dbg !5424
  %inc1408 = add nsw i32 %705, 1, !dbg !5424
  store i32 %inc1408, i32* %i, align 4, !dbg !5424
  br label %for.cond1396, !dbg !5425, !llvm.loop !5426

for.end1409:                                      ; preds = %for.cond1396
  %706 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_alt_mem_list, align 8, !dbg !5428
  %707 = bitcast %struct.rtx_def** %706 to i8*, !dbg !5428
  call void @free(i8* %707), !dbg !5429
  %708 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !5430
  %709 = bitcast %struct.rtx_def** %708 to i8*, !dbg !5430
  call void @free(i8* %709), !dbg !5431
  store %struct.rtx_def** null, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5432
  %710 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8, !dbg !5433
  %711 = bitcast %struct.rtx_def** %710 to i8*, !dbg !5433
  call void @free(i8* %711), !dbg !5434
  %712 = load i32*, i32** @reg_max_ref_width, align 8, !dbg !5435
  %713 = bitcast i32* %712 to i8*, !dbg !5435
  call void @free(i8* %713), !dbg !5436
  %714 = load i16*, i16** @reg_old_renumber, align 8, !dbg !5437
  %715 = bitcast i16* %714 to i8*, !dbg !5437
  call void @free(i8* %715), !dbg !5438
  %716 = load i64*, i64** @pseudo_previous_regs, align 8, !dbg !5439
  %717 = bitcast i64* %716 to i8*, !dbg !5439
  call void @free(i8* %717), !dbg !5440
  %718 = load i64*, i64** @pseudo_forbidden_regs, align 8, !dbg !5441
  %719 = bitcast i64* %718 to i8*, !dbg !5441
  call void @free(i8* %719), !dbg !5442
  store i64 0, i64* @used_spill_regs, align 8, !dbg !5443
  store i32 0, i32* %i, align 4, !dbg !5444
  br label %for.cond1410, !dbg !5446

for.cond1410:                                     ; preds = %for.inc1420, %for.end1409
  %720 = load i32, i32* %i, align 4, !dbg !5447
  %721 = load i32, i32* @n_spills, align 4, !dbg !5449
  %cmp1411 = icmp slt i32 %720, %721, !dbg !5450
  br i1 %cmp1411, label %for.body1413, label %for.end1422, !dbg !5451

for.body1413:                                     ; preds = %for.cond1410
  %722 = load i32, i32* %i, align 4, !dbg !5452
  %idxprom1414 = sext i32 %722 to i64, !dbg !5452
  %arrayidx1415 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i64 0, i64 %idxprom1414, !dbg !5452
  %723 = load i16, i16* %arrayidx1415, align 2, !dbg !5452
  %conv1416 = sext i16 %723 to i32, !dbg !5452
  %sh_prom1417 = zext i32 %conv1416 to i64, !dbg !5452
  %shl1418 = shl i64 1, %sh_prom1417, !dbg !5452
  %724 = load i64, i64* @used_spill_regs, align 8, !dbg !5452
  %or1419 = or i64 %724, %shl1418, !dbg !5452
  store i64 %or1419, i64* @used_spill_regs, align 8, !dbg !5452
  br label %for.inc1420, !dbg !5452

for.inc1420:                                      ; preds = %for.body1413
  %725 = load i32, i32* %i, align 4, !dbg !5453
  %inc1421 = add nsw i32 %725, 1, !dbg !5453
  store i32 %inc1421, i32* %i, align 4, !dbg !5453
  br label %for.cond1410, !dbg !5454, !llvm.loop !5455

for.end1422:                                      ; preds = %for.cond1410
  %726 = load i8*, i8** @reload_startobj, align 8, !dbg !5457
  %727 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !5457
  %728 = bitcast %struct._obstack_chunk* %727 to i8*, !dbg !5457
  %sub.ptr.lhs.cast1423 = ptrtoint i8* %726 to i64, !dbg !5457
  %sub.ptr.rhs.cast1424 = ptrtoint i8* %728 to i64, !dbg !5457
  %sub.ptr.sub1425 = sub i64 %sub.ptr.lhs.cast1423, %sub.ptr.rhs.cast1424, !dbg !5457
  store i64 %sub.ptr.sub1425, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !5457
  %729 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !5457
  %cmp1426 = icmp sgt i64 %729, 0, !dbg !5457
  br i1 %cmp1426, label %land.lhs.true1428, label %cond.false1436, !dbg !5457

land.lhs.true1428:                                ; preds = %for.end1422
  %730 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !5457
  %731 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !5457
  %732 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !5457
  %733 = bitcast %struct._obstack_chunk* %732 to i8*, !dbg !5457
  %sub.ptr.lhs.cast1429 = ptrtoint i8* %731 to i64, !dbg !5457
  %sub.ptr.rhs.cast1430 = ptrtoint i8* %733 to i64, !dbg !5457
  %sub.ptr.sub1431 = sub i64 %sub.ptr.lhs.cast1429, %sub.ptr.rhs.cast1430, !dbg !5457
  %cmp1432 = icmp slt i64 %730, %sub.ptr.sub1431, !dbg !5457
  br i1 %cmp1432, label %cond.true1434, label %cond.false1436, !dbg !5457

cond.true1434:                                    ; preds = %land.lhs.true1428
  %734 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !5457
  %735 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !5457
  %736 = bitcast %struct._obstack_chunk* %735 to i8*, !dbg !5457
  %add.ptr1435 = getelementptr inbounds i8, i8* %736, i64 %734, !dbg !5457
  store i8* %add.ptr1435, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !5457
  store i8* %add.ptr1435, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !5457
  %737 = ptrtoint i8* %add.ptr1435 to i64, !dbg !5457
  br label %cond.end1438, !dbg !5457

cond.false1436:                                   ; preds = %land.lhs.true1428, %for.end1422
  %738 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !5457
  %739 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !5457
  %740 = bitcast %struct._obstack_chunk* %739 to i8*, !dbg !5457
  %add.ptr1437 = getelementptr inbounds i8, i8* %740, i64 %738, !dbg !5457
  call void @obstack_free(%struct.obstack* @reload_obstack, i8* %add.ptr1437), !dbg !5457
  br label %cond.end1438, !dbg !5457

cond.end1438:                                     ; preds = %cond.false1436, %cond.true1434
  %cond1439 = phi i64 [ %737, %cond.true1434 ], [ 0, %cond.false1436 ], !dbg !5457
  store %struct.insn_chain* null, %struct.insn_chain** @unused_insn_chains, align 8, !dbg !5458
  call void @fixup_abnormal_edges(), !dbg !5459
  %741 = load %struct.rtx_def*, %struct.rtx_def** %first.addr, align 8, !dbg !5460
  call void @unshare_all_rtl_again(%struct.rtx_def* %741), !dbg !5461
  %742 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !5462
  %tobool1440 = icmp ne i8 %742, 0, !dbg !5462
  br i1 %tobool1440, label %if.end1443, label %if.then1441, !dbg !5464

if.then1441:                                      ; preds = %cond.end1438
  %743 = load i8*, i8** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 1, i32 9), align 8, !dbg !5465
  %arrayidx1442 = getelementptr inbounds i8, i8* %743, i64 6, !dbg !5465
  store i8 8, i8* %arrayidx1442, align 1, !dbg !5466
  br label %if.end1443, !dbg !5465

if.end1443:                                       ; preds = %if.then1441, %cond.end1438
  call void @VEC_rtx_p_heap_free(%struct.VEC_rtx_p_heap** @substitute_stack), !dbg !5467
  %744 = load i32, i32* @failure, align 4, !dbg !5468
  ret i32 %744, !dbg !5469
}

declare dso_local void @init_recog() #2

declare dso_local %struct.rtx_def* @emit_note(i32) #2

declare dso_local i32 @get_max_uid() #2

declare dso_local void @clear_secondary_mem() #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local void @init_save_areas() #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @mark_home_live(i32 %regno) #0 !dbg !5470 {
entry:
  %regno.addr = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !5473, metadata !DIExpression()), !dbg !5474
  %0 = load i16*, i16** @reg_renumber, align 8, !dbg !5475
  %1 = load i32, i32* %regno.addr, align 4, !dbg !5477
  %idxprom = sext i32 %1 to i64, !dbg !5475
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 %idxprom, !dbg !5475
  %2 = load i16, i16* %arrayidx, align 2, !dbg !5475
  %conv = sext i16 %2 to i32, !dbg !5475
  %cmp = icmp sge i32 %conv, 0, !dbg !5478
  br i1 %cmp, label %if.then, label %if.end, !dbg !5479

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %regno.addr, align 4, !dbg !5480
  %4 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !5481
  %5 = load i32, i32* %regno.addr, align 4, !dbg !5481
  %idxprom2 = sext i32 %5 to i64, !dbg !5481
  %arrayidx3 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %4, i64 %idxprom2, !dbg !5481
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3, align 8, !dbg !5481
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !5481
  %bf.load = load i32, i32* %7, align 8, !dbg !5481
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5481
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5481
  call void @mark_home_live_1(i32 %3, i32 %bf.clear), !dbg !5482
  br label %if.end, !dbg !5482

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5483
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @has_nonexceptional_receiver() #0 !dbg !5484 {
entry:
  %retval = alloca i8, align 1
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tos = alloca %struct.basic_block_def**, align 8
  %worklist = alloca %struct.basic_block_def**, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %src = alloca %struct.basic_block_def*, align 8
  %tmp53 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !5487, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !5489, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.declare(metadata %struct.basic_block_def*** %tos, metadata !5497, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.declare(metadata %struct.basic_block_def*** %worklist, metadata !5499, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !5501, metadata !DIExpression()), !dbg !5502
  %0 = load i32, i32* @optimize, align 4, !dbg !5503
  %tobool = icmp ne i32 %0, 0, !dbg !5503
  br i1 %tobool, label %if.end, label %if.then, !dbg !5505

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !5506
  br label %return, !dbg !5506

if.end:                                           ; preds = %entry
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5507
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, !dbg !5507
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !5507
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5507
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i32 0, i32 3, !dbg !5507
  %3 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !5507
  %add = add nsw i32 %3, 1, !dbg !5507
  %conv = sext i32 %add to i64, !dbg !5507
  %mul = mul i64 8, %conv, !dbg !5507
  %call = call i8* @xmalloc(i64 %mul), !dbg !5507
  %4 = bitcast i8* %call to %struct.basic_block_def**, !dbg !5507
  store %struct.basic_block_def** %4, %struct.basic_block_def*** %worklist, align 8, !dbg !5508
  store %struct.basic_block_def** %4, %struct.basic_block_def*** %tos, align 8, !dbg !5509
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5510
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, !dbg !5510
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !5510
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !5510
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i32 0, i32 0, !dbg !5510
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5510
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i32 0, i32 6, !dbg !5510
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !5510
  store %struct.basic_block_def* %8, %struct.basic_block_def** %bb, align 8, !dbg !5510
  br label %for.cond, !dbg !5510

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5512
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5512
  %add.ptr3 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, !dbg !5512
  %cfg4 = getelementptr inbounds %struct.function, %struct.function* %add.ptr3, i32 0, i32 1, !dbg !5512
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4, align 8, !dbg !5512
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i32 0, i32 1, !dbg !5512
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5512
  %cmp = icmp ne %struct.basic_block_def* %9, %12, !dbg !5512
  br i1 %cmp, label %for.body, label %for.end, !dbg !5510

for.body:                                         ; preds = %for.cond
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5514
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 13, !dbg !5515
  %14 = load i32, i32* %flags, align 8, !dbg !5516
  %and = and i32 %14, -3, !dbg !5516
  store i32 %and, i32* %flags, align 8, !dbg !5516
  br label %for.inc, !dbg !5514

for.inc:                                          ; preds = %for.body
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5512
  %next_bb6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i32 0, i32 6, !dbg !5512
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb6, align 8, !dbg !5512
  store %struct.basic_block_def* %16, %struct.basic_block_def** %bb, align 8, !dbg !5512
  br label %for.cond, !dbg !5512, !llvm.loop !5517

for.end:                                          ; preds = %for.cond
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5519
  %add.ptr7 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, !dbg !5519
  %cfg8 = getelementptr inbounds %struct.function, %struct.function* %add.ptr7, i32 0, i32 1, !dbg !5519
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8, align 8, !dbg !5519
  %x_exit_block_ptr9 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i32 0, i32 1, !dbg !5519
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr9, align 8, !dbg !5519
  %flags10 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i32 0, i32 13, !dbg !5520
  %20 = load i32, i32* %flags10, align 8, !dbg !5521
  %or = or i32 %20, 2, !dbg !5521
  store i32 %or, i32* %flags10, align 8, !dbg !5521
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5522
  %add.ptr11 = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, !dbg !5522
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %add.ptr11, i32 0, i32 1, !dbg !5522
  %22 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !5522
  %x_exit_block_ptr13 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %22, i32 0, i32 1, !dbg !5522
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr13, align 8, !dbg !5522
  %24 = load %struct.basic_block_def**, %struct.basic_block_def*** %tos, align 8, !dbg !5523
  %incdec.ptr = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %24, i32 1, !dbg !5523
  store %struct.basic_block_def** %incdec.ptr, %struct.basic_block_def*** %tos, align 8, !dbg !5523
  store %struct.basic_block_def* %23, %struct.basic_block_def** %24, align 8, !dbg !5524
  br label %while.cond, !dbg !5525

while.cond:                                       ; preds = %for.end37, %for.end
  %25 = load %struct.basic_block_def**, %struct.basic_block_def*** %tos, align 8, !dbg !5526
  %26 = load %struct.basic_block_def**, %struct.basic_block_def*** %worklist, align 8, !dbg !5527
  %cmp14 = icmp ne %struct.basic_block_def** %25, %26, !dbg !5528
  br i1 %cmp14, label %while.body, label %while.end, !dbg !5525

while.body:                                       ; preds = %while.cond
  %27 = load %struct.basic_block_def**, %struct.basic_block_def*** %tos, align 8, !dbg !5529
  %incdec.ptr16 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %27, i32 -1, !dbg !5529
  store %struct.basic_block_def** %incdec.ptr16, %struct.basic_block_def*** %tos, align 8, !dbg !5529
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %incdec.ptr16, align 8, !dbg !5531
  store %struct.basic_block_def* %28, %struct.basic_block_def** %bb, align 8, !dbg !5532
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5533
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i32 0, i32 0, !dbg !5533
  %call17 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds), !dbg !5533
  %30 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !5533
  %31 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %30, i32 0, i32 0, !dbg !5533
  %32 = extractvalue { i32, %struct.VEC_edge_gc** } %call17, 0, !dbg !5533
  store i32 %32, i32* %31, align 8, !dbg !5533
  %33 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %30, i32 0, i32 1, !dbg !5533
  %34 = extractvalue { i32, %struct.VEC_edge_gc** } %call17, 1, !dbg !5533
  store %struct.VEC_edge_gc** %34, %struct.VEC_edge_gc*** %33, align 8, !dbg !5533
  %35 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5533
  %36 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !5533
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !5533
  br label %for.cond18, !dbg !5533

for.cond18:                                       ; preds = %for.inc36, %while.body
  %37 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !5535
  %38 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %37, i32 0, i32 0, !dbg !5535
  %39 = load i32, i32* %38, align 8, !dbg !5535
  %40 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %37, i32 0, i32 1, !dbg !5535
  %41 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %40, align 8, !dbg !5535
  %call19 = call zeroext i8 @ei_cond(i32 %39, %struct.VEC_edge_gc** %41, %struct.edge_def** %e), !dbg !5535
  %tobool20 = icmp ne i8 %call19, 0, !dbg !5533
  br i1 %tobool20, label %for.body21, label %for.end37, !dbg !5533

for.body21:                                       ; preds = %for.cond18
  %42 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5537
  %flags22 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %42, i32 0, i32 7, !dbg !5539
  %43 = load i32, i32* %flags22, align 8, !dbg !5539
  %and23 = and i32 %43, 2, !dbg !5540
  %tobool24 = icmp ne i32 %and23, 0, !dbg !5540
  br i1 %tobool24, label %if.end35, label %if.then25, !dbg !5541

if.then25:                                        ; preds = %for.body21
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %src, metadata !5542, metadata !DIExpression()), !dbg !5544
  %44 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5545
  %src26 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %44, i32 0, i32 0, !dbg !5546
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %src26, align 8, !dbg !5546
  store %struct.basic_block_def* %45, %struct.basic_block_def** %src, align 8, !dbg !5544
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5547
  %flags27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %46, i32 0, i32 13, !dbg !5549
  %47 = load i32, i32* %flags27, align 8, !dbg !5549
  %and28 = and i32 %47, 2, !dbg !5550
  %tobool29 = icmp ne i32 %and28, 0, !dbg !5550
  br i1 %tobool29, label %if.end34, label %if.then30, !dbg !5551

if.then30:                                        ; preds = %if.then25
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5552
  %flags31 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %48, i32 0, i32 13, !dbg !5554
  %49 = load i32, i32* %flags31, align 8, !dbg !5555
  %or32 = or i32 %49, 2, !dbg !5555
  store i32 %or32, i32* %flags31, align 8, !dbg !5555
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5556
  %51 = load %struct.basic_block_def**, %struct.basic_block_def*** %tos, align 8, !dbg !5557
  %incdec.ptr33 = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %51, i32 1, !dbg !5557
  store %struct.basic_block_def** %incdec.ptr33, %struct.basic_block_def*** %tos, align 8, !dbg !5557
  store %struct.basic_block_def* %50, %struct.basic_block_def** %51, align 8, !dbg !5558
  br label %if.end34, !dbg !5559

if.end34:                                         ; preds = %if.then30, %if.then25
  br label %if.end35, !dbg !5560

if.end35:                                         ; preds = %if.end34, %for.body21
  br label %for.inc36, !dbg !5561

for.inc36:                                        ; preds = %if.end35
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !5535
  br label %for.cond18, !dbg !5535, !llvm.loop !5562

for.end37:                                        ; preds = %for.cond18
  br label %while.cond, !dbg !5525, !llvm.loop !5564

while.end:                                        ; preds = %while.cond
  %52 = load %struct.basic_block_def**, %struct.basic_block_def*** %worklist, align 8, !dbg !5566
  %53 = bitcast %struct.basic_block_def** %52 to i8*, !dbg !5566
  call void @free(i8* %53), !dbg !5567
  %54 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5568
  %add.ptr38 = getelementptr inbounds %struct.function, %struct.function* %54, i64 0, !dbg !5568
  %cfg39 = getelementptr inbounds %struct.function, %struct.function* %add.ptr38, i32 0, i32 1, !dbg !5568
  %55 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg39, align 8, !dbg !5568
  %x_entry_block_ptr40 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %55, i32 0, i32 0, !dbg !5568
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr40, align 8, !dbg !5568
  %next_bb41 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %56, i32 0, i32 6, !dbg !5568
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb41, align 8, !dbg !5568
  store %struct.basic_block_def* %57, %struct.basic_block_def** %bb, align 8, !dbg !5568
  br label %for.cond42, !dbg !5568

for.cond42:                                       ; preds = %for.inc68, %while.end
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5570
  %59 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5570
  %add.ptr43 = getelementptr inbounds %struct.function, %struct.function* %59, i64 0, !dbg !5570
  %cfg44 = getelementptr inbounds %struct.function, %struct.function* %add.ptr43, i32 0, i32 1, !dbg !5570
  %60 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg44, align 8, !dbg !5570
  %x_exit_block_ptr45 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %60, i32 0, i32 1, !dbg !5570
  %61 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr45, align 8, !dbg !5570
  %cmp46 = icmp ne %struct.basic_block_def* %58, %61, !dbg !5570
  br i1 %cmp46, label %for.body48, label %for.end70, !dbg !5568

for.body48:                                       ; preds = %for.cond42
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5572
  %flags49 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %62, i32 0, i32 13, !dbg !5574
  %63 = load i32, i32* %flags49, align 8, !dbg !5574
  %and50 = and i32 %63, 2, !dbg !5575
  %tobool51 = icmp ne i32 %and50, 0, !dbg !5575
  br i1 %tobool51, label %if.then52, label %if.end67, !dbg !5576

if.then52:                                        ; preds = %for.body48
  %64 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5577
  %preds54 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %64, i32 0, i32 0, !dbg !5577
  %call55 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds54), !dbg !5577
  %65 = bitcast %struct.edge_iterator* %tmp53 to { i32, %struct.VEC_edge_gc** }*, !dbg !5577
  %66 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %65, i32 0, i32 0, !dbg !5577
  %67 = extractvalue { i32, %struct.VEC_edge_gc** } %call55, 0, !dbg !5577
  store i32 %67, i32* %66, align 8, !dbg !5577
  %68 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %65, i32 0, i32 1, !dbg !5577
  %69 = extractvalue { i32, %struct.VEC_edge_gc** } %call55, 1, !dbg !5577
  store %struct.VEC_edge_gc** %69, %struct.VEC_edge_gc*** %68, align 8, !dbg !5577
  %70 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !5577
  %71 = bitcast %struct.edge_iterator* %tmp53 to i8*, !dbg !5577
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 16, i1 false), !dbg !5577
  br label %for.cond56, !dbg !5577

for.cond56:                                       ; preds = %for.inc65, %if.then52
  %72 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !5579
  %73 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %72, i32 0, i32 0, !dbg !5579
  %74 = load i32, i32* %73, align 8, !dbg !5579
  %75 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %72, i32 0, i32 1, !dbg !5579
  %76 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %75, align 8, !dbg !5579
  %call57 = call zeroext i8 @ei_cond(i32 %74, %struct.VEC_edge_gc** %76, %struct.edge_def** %e), !dbg !5579
  %tobool58 = icmp ne i8 %call57, 0, !dbg !5577
  br i1 %tobool58, label %for.body59, label %for.end66, !dbg !5577

for.body59:                                       ; preds = %for.cond56
  %77 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !5581
  %flags60 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %77, i32 0, i32 7, !dbg !5583
  %78 = load i32, i32* %flags60, align 8, !dbg !5583
  %and61 = and i32 %78, 2, !dbg !5584
  %tobool62 = icmp ne i32 %and61, 0, !dbg !5584
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !5585

if.then63:                                        ; preds = %for.body59
  store i8 1, i8* %retval, align 1, !dbg !5586
  br label %return, !dbg !5586

if.end64:                                         ; preds = %for.body59
  br label %for.inc65, !dbg !5587

for.inc65:                                        ; preds = %if.end64
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !5579
  br label %for.cond56, !dbg !5579, !llvm.loop !5588

for.end66:                                        ; preds = %for.cond56
  br label %if.end67, !dbg !5589

if.end67:                                         ; preds = %for.end66, %for.body48
  br label %for.inc68, !dbg !5590

for.inc68:                                        ; preds = %if.end67
  %79 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5570
  %next_bb69 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %79, i32 0, i32 6, !dbg !5570
  %80 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb69, align 8, !dbg !5570
  store %struct.basic_block_def* %80, %struct.basic_block_def** %bb, align 8, !dbg !5570
  br label %for.cond42, !dbg !5570, !llvm.loop !5591

for.end70:                                        ; preds = %for.cond42
  store i8 0, i8* %retval, align 1, !dbg !5593
  br label %return, !dbg !5593

return:                                           ; preds = %for.end70, %if.then63, %if.then
  %81 = load i8, i8* %retval, align 1, !dbg !5594
  ret i8 %81, !dbg !5594
}

declare dso_local void @df_set_regs_ever_live(i32, i8 zeroext) #2

declare dso_local i8* @xcalloc(i64, i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @scan_paradoxical_subregs(%struct.rtx_def* %x) #0 !dbg !5595 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %code = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5598, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5600, metadata !DIExpression()), !dbg !5601
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !5602, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.declare(metadata i32* %code, metadata !5604, metadata !DIExpression()), !dbg !5605
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5606
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5606
  %bf.load = load i32, i32* %1, align 8, !dbg !5606
  %bf.clear = and i32 %bf.load, 65535, !dbg !5606
  store i32 %bf.clear, i32* %code, align 4, !dbg !5605
  %2 = load i32, i32* %code, align 4, !dbg !5607
  switch i32 %2, label %sw.default [
    i32 37, label %sw.bb
    i32 30, label %sw.bb
    i32 35, label %sw.bb
    i32 45, label %sw.bb
    i32 44, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 46, label %sw.bb
    i32 36, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 39, label %sw.bb1
  ], !dbg !5608

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %for.end82, !dbg !5609

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5611
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !5611
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5611
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5611
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5611
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5611
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !5611
  %bf.load2 = load i32, i32* %5, align 8, !dbg !5611
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !5611
  %cmp = icmp eq i32 %bf.clear3, 37, !dbg !5611
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5613

land.lhs.true:                                    ; preds = %sw.bb1
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5614
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !5614
  %bf.load4 = load i32, i32* %7, align 8, !dbg !5614
  %bf.lshr = lshr i32 %bf.load4, 16, !dbg !5614
  %bf.clear5 = and i32 %bf.lshr, 255, !dbg !5614
  %idxprom = zext i32 %bf.clear5 to i64, !dbg !5614
  %arrayidx6 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5614
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !5614
  %conv = zext i8 %8 to i16, !dbg !5614
  %conv7 = zext i16 %conv to i32, !dbg !5614
  %9 = load i32*, i32** @reg_max_ref_width, align 8, !dbg !5615
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5616
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !5616
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !5616
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 0, !dbg !5616
  %rt_rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !5616
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx11, align 8, !dbg !5616
  %call = call i32 @rhs_regno(%struct.rtx_def* %11), !dbg !5616
  %idxprom12 = zext i32 %call to i64, !dbg !5615
  %arrayidx13 = getelementptr inbounds i32, i32* %9, i64 %idxprom12, !dbg !5615
  %12 = load i32, i32* %arrayidx13, align 4, !dbg !5615
  %cmp14 = icmp ugt i32 %conv7, %12, !dbg !5617
  br i1 %cmp14, label %if.then, label %if.end, !dbg !5618

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5619
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !5619
  %bf.load16 = load i32, i32* %14, align 8, !dbg !5619
  %bf.lshr17 = lshr i32 %bf.load16, 16, !dbg !5619
  %bf.clear18 = and i32 %bf.lshr17, 255, !dbg !5619
  %idxprom19 = zext i32 %bf.clear18 to i64, !dbg !5619
  %arrayidx20 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom19, !dbg !5619
  %15 = load i8, i8* %arrayidx20, align 1, !dbg !5619
  %conv21 = zext i8 %15 to i16, !dbg !5619
  %conv22 = zext i16 %conv21 to i32, !dbg !5619
  %16 = load i32*, i32** @reg_max_ref_width, align 8, !dbg !5621
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5622
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !5622
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !5622
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 0, !dbg !5622
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !5622
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !5622
  %call27 = call i32 @rhs_regno(%struct.rtx_def* %18), !dbg !5622
  %idxprom28 = zext i32 %call27 to i64, !dbg !5621
  %arrayidx29 = getelementptr inbounds i32, i32* %16, i64 %idxprom28, !dbg !5621
  store i32 %conv22, i32* %arrayidx29, align 4, !dbg !5623
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5624
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !5624
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !5624
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 0, !dbg !5624
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !5624
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !5624
  %call34 = call i32 @rhs_regno(%struct.rtx_def* %20), !dbg !5624
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5625
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !5625
  %bf.load35 = load i32, i32* %22, align 8, !dbg !5625
  %bf.lshr36 = lshr i32 %bf.load35, 16, !dbg !5625
  %bf.clear37 = and i32 %bf.lshr36, 255, !dbg !5625
  call void @mark_home_live_1(i32 %call34, i32 %bf.clear37), !dbg !5626
  br label %if.end, !dbg !5627

if.end:                                           ; preds = %if.then, %land.lhs.true, %sw.bb1
  br label %for.end82, !dbg !5628

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !5629

sw.epilog:                                        ; preds = %sw.default
  %23 = load i32, i32* %code, align 4, !dbg !5630
  %idxprom38 = sext i32 %23 to i64, !dbg !5630
  %arrayidx39 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom38, !dbg !5630
  %24 = load i8*, i8** %arrayidx39, align 8, !dbg !5630
  store i8* %24, i8** %fmt, align 8, !dbg !5631
  %25 = load i32, i32* %code, align 4, !dbg !5632
  %idxprom40 = sext i32 %25 to i64, !dbg !5632
  %arrayidx41 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom40, !dbg !5632
  %26 = load i8, i8* %arrayidx41, align 1, !dbg !5632
  %conv42 = zext i8 %26 to i32, !dbg !5632
  %sub = sub nsw i32 %conv42, 1, !dbg !5634
  store i32 %sub, i32* %i, align 4, !dbg !5635
  br label %for.cond, !dbg !5636

for.cond:                                         ; preds = %for.inc80, %sw.epilog
  %27 = load i32, i32* %i, align 4, !dbg !5637
  %cmp43 = icmp sge i32 %27, 0, !dbg !5639
  br i1 %cmp43, label %for.body, label %for.end82, !dbg !5640

for.body:                                         ; preds = %for.cond
  %28 = load i8*, i8** %fmt, align 8, !dbg !5641
  %29 = load i32, i32* %i, align 4, !dbg !5644
  %idxprom45 = sext i32 %29 to i64, !dbg !5641
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 %idxprom45, !dbg !5641
  %30 = load i8, i8* %arrayidx46, align 1, !dbg !5641
  %conv47 = sext i8 %30 to i32, !dbg !5641
  %cmp48 = icmp eq i32 %conv47, 101, !dbg !5645
  br i1 %cmp48, label %if.then50, label %if.else, !dbg !5646

if.then50:                                        ; preds = %for.body
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5647
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !5647
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !5647
  %32 = load i32, i32* %i, align 4, !dbg !5647
  %idxprom53 = sext i32 %32 to i64, !dbg !5647
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 %idxprom53, !dbg !5647
  %rt_rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !5647
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !5647
  call void @scan_paradoxical_subregs(%struct.rtx_def* %33), !dbg !5648
  br label %if.end79, !dbg !5648

if.else:                                          ; preds = %for.body
  %34 = load i8*, i8** %fmt, align 8, !dbg !5649
  %35 = load i32, i32* %i, align 4, !dbg !5651
  %idxprom56 = sext i32 %35 to i64, !dbg !5649
  %arrayidx57 = getelementptr inbounds i8, i8* %34, i64 %idxprom56, !dbg !5649
  %36 = load i8, i8* %arrayidx57, align 1, !dbg !5649
  %conv58 = sext i8 %36 to i32, !dbg !5649
  %cmp59 = icmp eq i32 %conv58, 69, !dbg !5652
  br i1 %cmp59, label %if.then61, label %if.end78, !dbg !5653

if.then61:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5654, metadata !DIExpression()), !dbg !5656
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5657
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !5657
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !5657
  %38 = load i32, i32* %i, align 4, !dbg !5657
  %idxprom64 = sext i32 %38 to i64, !dbg !5657
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 %idxprom64, !dbg !5657
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtvec_def**, !dbg !5657
  %39 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5657
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %39, i32 0, i32 0, !dbg !5657
  %40 = load i32, i32* %num_elem, align 8, !dbg !5657
  %sub66 = sub nsw i32 %40, 1, !dbg !5659
  store i32 %sub66, i32* %j, align 4, !dbg !5660
  br label %for.cond67, !dbg !5661

for.cond67:                                       ; preds = %for.inc, %if.then61
  %41 = load i32, i32* %j, align 4, !dbg !5662
  %cmp68 = icmp sge i32 %41, 0, !dbg !5664
  br i1 %cmp68, label %for.body70, label %for.end, !dbg !5665

for.body70:                                       ; preds = %for.cond67
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5666
  %u71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !5666
  %fld72 = bitcast %union.u* %u71 to [1 x %union.rtunion_def]*, !dbg !5666
  %43 = load i32, i32* %i, align 4, !dbg !5666
  %idxprom73 = sext i32 %43 to i64, !dbg !5666
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i64 0, i64 %idxprom73, !dbg !5666
  %rt_rtvec75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtvec_def**, !dbg !5666
  %44 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec75, align 8, !dbg !5666
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %44, i32 0, i32 1, !dbg !5666
  %45 = load i32, i32* %j, align 4, !dbg !5666
  %idxprom76 = sext i32 %45 to i64, !dbg !5666
  %arrayidx77 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom76, !dbg !5666
  %46 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx77, align 8, !dbg !5666
  call void @scan_paradoxical_subregs(%struct.rtx_def* %46), !dbg !5667
  br label %for.inc, !dbg !5667

for.inc:                                          ; preds = %for.body70
  %47 = load i32, i32* %j, align 4, !dbg !5668
  %dec = add nsw i32 %47, -1, !dbg !5668
  store i32 %dec, i32* %j, align 4, !dbg !5668
  br label %for.cond67, !dbg !5669, !llvm.loop !5670

for.end:                                          ; preds = %for.cond67
  br label %if.end78, !dbg !5672

if.end78:                                         ; preds = %for.end, %if.else
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then50
  br label %for.inc80, !dbg !5673

for.inc80:                                        ; preds = %if.end79
  %48 = load i32, i32* %i, align 4, !dbg !5674
  %dec81 = add nsw i32 %48, -1, !dbg !5674
  store i32 %dec81, i32* %i, align 4, !dbg !5674
  br label %for.cond, !dbg !5675, !llvm.loop !5676

for.end82:                                        ; preds = %sw.bb, %if.end, %for.cond
  ret void, !dbg !5678
}

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @rhs_regno(%struct.rtx_def* %x) #0 !dbg !5679 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5685, metadata !DIExpression()), !dbg !5686
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5687
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !5687
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5687
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5687
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5687
  %1 = load i32, i32* %rt_uint, align 8, !dbg !5687
  ret i32 %1, !dbg !5688
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @function_invariant_p(%struct.rtx_def* %x) #0 !dbg !5689 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5692, metadata !DIExpression()), !dbg !5693
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5694
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5694
  %bf.load = load i32, i32* %1, align 8, !dbg !5694
  %bf.clear = and i32 %bf.load, 65535, !dbg !5694
  %idxprom = sext i32 %bf.clear to i64, !dbg !5694
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5694
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5694
  %cmp = icmp eq i32 %2, 9, !dbg !5694
  br i1 %cmp, label %if.then, label %if.end, !dbg !5696

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5697
  br label %return, !dbg !5697

if.end:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5698
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !5700
  %cmp1 = icmp eq %struct.rtx_def* %3, %4, !dbg !5701
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !5702

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5703
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !5704
  %cmp2 = icmp eq %struct.rtx_def* %5, %6, !dbg !5705
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5706

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 1, i32* %retval, align 4, !dbg !5707
  br label %return, !dbg !5707

if.end4:                                          ; preds = %lor.lhs.false
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5708
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !5708
  %bf.load5 = load i32, i32* %8, align 8, !dbg !5708
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !5708
  %cmp7 = icmp eq i32 %bf.clear6, 49, !dbg !5710
  br i1 %cmp7, label %land.lhs.true, label %if.end27, !dbg !5711

land.lhs.true:                                    ; preds = %if.end4
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5712
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !5712
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5712
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5712
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !5712
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5712
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !5713
  %cmp9 = icmp eq %struct.rtx_def* %10, %11, !dbg !5714
  br i1 %cmp9, label %land.lhs.true16, label %lor.lhs.false10, !dbg !5715

lor.lhs.false10:                                  ; preds = %land.lhs.true
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5716
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !5716
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !5716
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !5716
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !5716
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !5716
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !5717
  %cmp15 = icmp eq %struct.rtx_def* %13, %14, !dbg !5718
  br i1 %cmp15, label %land.lhs.true16, label %if.end27, !dbg !5719

land.lhs.true16:                                  ; preds = %lor.lhs.false10, %land.lhs.true
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5720
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !5720
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !5720
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 1, !dbg !5720
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !5720
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !5720
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !5720
  %bf.load21 = load i32, i32* %17, align 8, !dbg !5720
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !5720
  %idxprom23 = sext i32 %bf.clear22 to i64, !dbg !5720
  %arrayidx24 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom23, !dbg !5720
  %18 = load i32, i32* %arrayidx24, align 4, !dbg !5720
  %cmp25 = icmp eq i32 %18, 9, !dbg !5720
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !5721

if.then26:                                        ; preds = %land.lhs.true16
  store i32 1, i32* %retval, align 4, !dbg !5722
  br label %return, !dbg !5722

if.end27:                                         ; preds = %land.lhs.true16, %lor.lhs.false10, %if.end4
  store i32 0, i32* %retval, align 4, !dbg !5723
  br label %return, !dbg !5723

return:                                           ; preds = %if.end27, %if.then26, %if.then3, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !5724
  ret i32 %19, !dbg !5724
}

declare dso_local zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def*) #2

declare dso_local i32 @memory_operand(%struct.rtx_def*, i32) #2

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #2

declare dso_local zeroext i8 @legitimate_constant_p(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare dso_local void @print_inline_rtx(%struct._IO_FILE*, %struct.rtx_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_elim_table() #0 !dbg !5725 {
entry:
  %ep = alloca %struct.elim_table*, align 8
  %ep1 = alloca %struct.elim_table_1*, align 8
  call void @llvm.dbg.declare(metadata %struct.elim_table** %ep, metadata !5726, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.declare(metadata %struct.elim_table_1** %ep1, metadata !5728, metadata !DIExpression()), !dbg !5730
  %0 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !5731
  %tobool = icmp ne %struct.elim_table* %0, null, !dbg !5731
  br i1 %tobool, label %if.end, label %if.then, !dbg !5733

if.then:                                          ; preds = %entry
  %call = call i8* @xcalloc(i64 4, i64 64), !dbg !5734
  %1 = bitcast i8* %call to %struct.elim_table*, !dbg !5734
  store %struct.elim_table* %1, %struct.elim_table** @reg_eliminate, align 8, !dbg !5735
  br label %if.end, !dbg !5736

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* @num_eliminable, align 4, !dbg !5737
  %2 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !5738
  store %struct.elim_table* %2, %struct.elim_table** %ep, align 8, !dbg !5740
  store %struct.elim_table_1* getelementptr inbounds ([4 x %struct.elim_table_1], [4 x %struct.elim_table_1]* @reg_eliminate_1, i64 0, i64 0), %struct.elim_table_1** %ep1, align 8, !dbg !5741
  br label %for.cond, !dbg !5742

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5743
  %4 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !5745
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %4, i64 4, !dbg !5745
  %cmp = icmp ult %struct.elim_table* %3, %arrayidx, !dbg !5746
  br i1 %cmp, label %for.body, label %for.end, !dbg !5747

for.body:                                         ; preds = %for.cond
  %5 = load %struct.elim_table_1*, %struct.elim_table_1** %ep1, align 8, !dbg !5748
  %from = getelementptr inbounds %struct.elim_table_1, %struct.elim_table_1* %5, i32 0, i32 0, !dbg !5750
  %6 = load i32, i32* %from, align 4, !dbg !5750
  %7 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5751
  %from1 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %7, i32 0, i32 0, !dbg !5752
  store i32 %6, i32* %from1, align 8, !dbg !5753
  %8 = load %struct.elim_table_1*, %struct.elim_table_1** %ep1, align 8, !dbg !5754
  %to = getelementptr inbounds %struct.elim_table_1, %struct.elim_table_1* %8, i32 0, i32 1, !dbg !5755
  %9 = load i32, i32* %to, align 4, !dbg !5755
  %10 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5756
  %to2 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %10, i32 0, i32 1, !dbg !5757
  store i32 %9, i32* %to2, align 4, !dbg !5758
  %11 = load i8 (i32, i32)*, i8 (i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 103), align 8, !dbg !5759
  %12 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5760
  %from3 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %12, i32 0, i32 0, !dbg !5761
  %13 = load i32, i32* %from3, align 8, !dbg !5761
  %14 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5762
  %to4 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %14, i32 0, i32 1, !dbg !5763
  %15 = load i32, i32* %to4, align 4, !dbg !5763
  %call5 = call zeroext i8 %11(i32 %13, i32 %15), !dbg !5764
  %conv = zext i8 %call5 to i32, !dbg !5764
  %tobool6 = icmp ne i32 %conv, 0, !dbg !5764
  br i1 %tobool6, label %land.rhs, label %land.end20, !dbg !5765

land.rhs:                                         ; preds = %for.body
  %16 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5766
  %to7 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %16, i32 0, i32 1, !dbg !5767
  %17 = load i32, i32* %to7, align 4, !dbg !5767
  %cmp8 = icmp eq i32 %17, 7, !dbg !5768
  br i1 %cmp8, label %land.lhs.true, label %land.end18, !dbg !5769

land.lhs.true:                                    ; preds = %land.rhs
  %18 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !5770
  %conv10 = zext i8 %18 to i32, !dbg !5770
  %tobool11 = icmp ne i32 %conv10, 0, !dbg !5770
  br i1 %tobool11, label %land.rhs12, label %land.end18, !dbg !5771

land.rhs12:                                       ; preds = %land.lhs.true
  %19 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 43), align 1, !dbg !5772
  %conv13 = zext i8 %19 to i32, !dbg !5772
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !5772
  br i1 %tobool14, label %land.rhs15, label %land.end, !dbg !5772

land.rhs15:                                       ; preds = %land.rhs12
  %20 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 45), align 1, !dbg !5772
  %tobool16 = icmp ne i8 %20, 0, !dbg !5772
  %lnot = xor i1 %tobool16, true, !dbg !5772
  br label %land.end

land.end:                                         ; preds = %land.rhs15, %land.rhs12
  %21 = phi i1 [ false, %land.rhs12 ], [ %lnot, %land.rhs15 ], !dbg !5773
  %lnot17 = xor i1 %21, true, !dbg !5774
  br label %land.end18

land.end18:                                       ; preds = %land.end, %land.lhs.true, %land.rhs
  %22 = phi i1 [ false, %land.lhs.true ], [ false, %land.rhs ], [ %lnot17, %land.end ], !dbg !5773
  %lnot19 = xor i1 %22, true, !dbg !5775
  br label %land.end20

land.end20:                                       ; preds = %land.end18, %for.body
  %23 = phi i1 [ false, %for.body ], [ %lnot19, %land.end18 ], !dbg !5773
  %land.ext = zext i1 %23 to i32, !dbg !5765
  %24 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5776
  %can_eliminate_previous = getelementptr inbounds %struct.elim_table, %struct.elim_table* %24, i32 0, i32 4, !dbg !5777
  store i32 %land.ext, i32* %can_eliminate_previous, align 4, !dbg !5778
  %25 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5779
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %25, i32 0, i32 3, !dbg !5780
  store i32 %land.ext, i32* %can_eliminate, align 8, !dbg !5781
  br label %for.inc, !dbg !5782

for.inc:                                          ; preds = %land.end20
  %26 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5783
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %26, i32 1, !dbg !5783
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8, !dbg !5783
  %27 = load %struct.elim_table_1*, %struct.elim_table_1** %ep1, align 8, !dbg !5784
  %incdec.ptr21 = getelementptr inbounds %struct.elim_table_1, %struct.elim_table_1* %27, i32 1, !dbg !5784
  store %struct.elim_table_1* %incdec.ptr21, %struct.elim_table_1** %ep1, align 8, !dbg !5784
  br label %for.cond, !dbg !5785, !llvm.loop !5786

for.end:                                          ; preds = %for.cond
  %28 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !5788
  store %struct.elim_table* %28, %struct.elim_table** %ep, align 8, !dbg !5790
  br label %for.cond22, !dbg !5791

for.cond22:                                       ; preds = %for.inc32, %for.end
  %29 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5792
  %30 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !5794
  %arrayidx23 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %30, i64 4, !dbg !5794
  %cmp24 = icmp ult %struct.elim_table* %29, %arrayidx23, !dbg !5795
  br i1 %cmp24, label %for.body26, label %for.end34, !dbg !5796

for.body26:                                       ; preds = %for.cond22
  %31 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5797
  %can_eliminate27 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %31, i32 0, i32 3, !dbg !5799
  %32 = load i32, i32* %can_eliminate27, align 8, !dbg !5799
  %33 = load i32, i32* @num_eliminable, align 4, !dbg !5800
  %add = add nsw i32 %33, %32, !dbg !5800
  store i32 %add, i32* @num_eliminable, align 4, !dbg !5800
  %34 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5801
  %from28 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %34, i32 0, i32 0, !dbg !5802
  %35 = load i32, i32* %from28, align 8, !dbg !5802
  %call29 = call %struct.rtx_def* @gen_rtx_REG(i32 16, i32 %35), !dbg !5803
  %36 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5804
  %from_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %36, i32 0, i32 8, !dbg !5805
  store %struct.rtx_def* %call29, %struct.rtx_def** %from_rtx, align 8, !dbg !5806
  %37 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5807
  %to30 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %37, i32 0, i32 1, !dbg !5808
  %38 = load i32, i32* %to30, align 4, !dbg !5808
  %call31 = call %struct.rtx_def* @gen_rtx_REG(i32 16, i32 %38), !dbg !5809
  %39 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5810
  %to_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %39, i32 0, i32 9, !dbg !5811
  store %struct.rtx_def* %call31, %struct.rtx_def** %to_rtx, align 8, !dbg !5812
  br label %for.inc32, !dbg !5813

for.inc32:                                        ; preds = %for.body26
  %40 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !5814
  %incdec.ptr33 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %40, i32 1, !dbg !5814
  store %struct.elim_table* %incdec.ptr33, %struct.elim_table** %ep, align 8, !dbg !5814
  br label %for.cond22, !dbg !5815, !llvm.loop !5816

for.end34:                                        ; preds = %for.cond22
  ret void, !dbg !5818
}

declare dso_local i32 @get_first_label_num() #2

declare dso_local i32 @max_label_num() #2

declare dso_local void @ira_sort_regnos_for_alter_reg(i32*, i32, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @alter_reg(i32 %i, i32 %from_reg, i8 zeroext %dont_share_p) #0 !dbg !5819 {
entry:
  %i.addr = alloca i32, align 4
  %from_reg.addr = alloca i32, align 4
  %dont_share_p.addr = alloca i8, align 1
  %x = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %inherent_size = alloca i32, align 4
  %inherent_align = alloca i32, align 4
  %total_size = alloca i32, align 4
  %min_align = alloca i32, align 4
  %adjust = alloca i32, align 4
  %stack_slot = alloca %struct.rtx_def*, align 8
  %stack_slot162 = alloca %struct.rtx_def*, align 8
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !5822, metadata !DIExpression()), !dbg !5823
  store i32 %from_reg, i32* %from_reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from_reg.addr, metadata !5824, metadata !DIExpression()), !dbg !5825
  store i8 %dont_share_p, i8* %dont_share_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dont_share_p.addr, metadata !5826, metadata !DIExpression()), !dbg !5827
  %0 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !5828
  %1 = load i32, i32* %i.addr, align 4, !dbg !5830
  %idxprom = sext i32 %1 to i64, !dbg !5828
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %0, i64 %idxprom, !dbg !5828
  %2 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !5828
  %cmp = icmp eq %struct.rtx_def* %2, null, !dbg !5831
  br i1 %cmp, label %if.then, label %if.end, !dbg !5832

if.then:                                          ; preds = %entry
  br label %if.end261, !dbg !5833

if.end:                                           ; preds = %entry
  %3 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !5834
  %4 = load i32, i32* %i.addr, align 4, !dbg !5834
  %idxprom1 = sext i32 %4 to i64, !dbg !5834
  %arrayidx2 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %3, i64 %idxprom1, !dbg !5834
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2, align 8, !dbg !5834
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !5834
  %bf.load = load i32, i32* %6, align 8, !dbg !5834
  %bf.clear = and i32 %bf.load, 65535, !dbg !5834
  %cmp3 = icmp eq i32 %bf.clear, 37, !dbg !5834
  br i1 %cmp3, label %if.end5, label %if.then4, !dbg !5836

if.then4:                                         ; preds = %if.end
  br label %if.end261, !dbg !5837

if.end5:                                          ; preds = %if.end
  %7 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !5838
  %8 = load i32, i32* %i.addr, align 4, !dbg !5838
  %idxprom6 = sext i32 %8 to i64, !dbg !5838
  %arrayidx7 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %7, i64 %idxprom6, !dbg !5838
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx7, align 8, !dbg !5838
  %call = call i32 @rhs_regno(%struct.rtx_def* %9), !dbg !5838
  %10 = load i16*, i16** @reg_renumber, align 8, !dbg !5838
  %11 = load i32, i32* %i.addr, align 4, !dbg !5838
  %idxprom8 = sext i32 %11 to i64, !dbg !5838
  %arrayidx9 = getelementptr inbounds i16, i16* %10, i64 %idxprom8, !dbg !5838
  %12 = load i16, i16* %arrayidx9, align 2, !dbg !5838
  %conv = sext i16 %12 to i32, !dbg !5838
  %cmp10 = icmp sge i32 %conv, 0, !dbg !5838
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !5838

cond.true:                                        ; preds = %if.end5
  %13 = load i16*, i16** @reg_renumber, align 8, !dbg !5838
  %14 = load i32, i32* %i.addr, align 4, !dbg !5838
  %idxprom12 = sext i32 %14 to i64, !dbg !5838
  %arrayidx13 = getelementptr inbounds i16, i16* %13, i64 %idxprom12, !dbg !5838
  %15 = load i16, i16* %arrayidx13, align 2, !dbg !5838
  %conv14 = sext i16 %15 to i32, !dbg !5838
  br label %cond.end, !dbg !5838

cond.false:                                       ; preds = %if.end5
  %16 = load i32, i32* %i.addr, align 4, !dbg !5838
  br label %cond.end, !dbg !5838

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv14, %cond.true ], [ %16, %cond.false ], !dbg !5838
  %17 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !5838
  %18 = load i32, i32* %i.addr, align 4, !dbg !5838
  %idxprom15 = sext i32 %18 to i64, !dbg !5838
  %arrayidx16 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %17, i64 %idxprom15, !dbg !5838
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx16, align 8, !dbg !5838
  call void @df_ref_change_reg_with_loc(i32 %call, i32 %cond, %struct.rtx_def* %19), !dbg !5838
  %20 = load i16*, i16** @reg_renumber, align 8, !dbg !5838
  %21 = load i32, i32* %i.addr, align 4, !dbg !5838
  %idxprom17 = sext i32 %21 to i64, !dbg !5838
  %arrayidx18 = getelementptr inbounds i16, i16* %20, i64 %idxprom17, !dbg !5838
  %22 = load i16, i16* %arrayidx18, align 2, !dbg !5838
  %conv19 = sext i16 %22 to i32, !dbg !5838
  %cmp20 = icmp sge i32 %conv19, 0, !dbg !5838
  br i1 %cmp20, label %cond.true22, label %cond.false26, !dbg !5838

cond.true22:                                      ; preds = %cond.end
  %23 = load i16*, i16** @reg_renumber, align 8, !dbg !5838
  %24 = load i32, i32* %i.addr, align 4, !dbg !5838
  %idxprom23 = sext i32 %24 to i64, !dbg !5838
  %arrayidx24 = getelementptr inbounds i16, i16* %23, i64 %idxprom23, !dbg !5838
  %25 = load i16, i16* %arrayidx24, align 2, !dbg !5838
  %conv25 = sext i16 %25 to i32, !dbg !5838
  br label %cond.end27, !dbg !5838

cond.false26:                                     ; preds = %cond.end
  %26 = load i32, i32* %i.addr, align 4, !dbg !5838
  br label %cond.end27, !dbg !5838

cond.end27:                                       ; preds = %cond.false26, %cond.true22
  %cond28 = phi i32 [ %conv25, %cond.true22 ], [ %26, %cond.false26 ], !dbg !5838
  %27 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !5838
  %28 = load i32, i32* %i.addr, align 4, !dbg !5838
  %idxprom29 = sext i32 %28 to i64, !dbg !5838
  %arrayidx30 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %27, i64 %idxprom29, !dbg !5838
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx30, align 8, !dbg !5838
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !5838
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5838
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5838
  %rt_uint = bitcast %union.rtunion_def* %arrayidx31 to i32*, !dbg !5838
  store i32 %cond28, i32* %rt_uint, align 8, !dbg !5838
  %30 = load i16*, i16** @reg_renumber, align 8, !dbg !5839
  %31 = load i32, i32* %i.addr, align 4, !dbg !5841
  %idxprom32 = sext i32 %31 to i64, !dbg !5839
  %arrayidx33 = getelementptr inbounds i16, i16* %30, i64 %idxprom32, !dbg !5839
  %32 = load i16, i16* %arrayidx33, align 2, !dbg !5839
  %conv34 = sext i16 %32 to i32, !dbg !5839
  %cmp35 = icmp slt i32 %conv34, 0, !dbg !5842
  br i1 %cmp35, label %land.lhs.true, label %if.end261, !dbg !5843

land.lhs.true:                                    ; preds = %cond.end27
  %33 = load i32, i32* %i.addr, align 4, !dbg !5844
  %call37 = call i32 @REG_N_REFS(i32 %33), !dbg !5845
  %cmp38 = icmp sgt i32 %call37, 0, !dbg !5846
  br i1 %cmp38, label %land.lhs.true40, label %if.end261, !dbg !5847

land.lhs.true40:                                  ; preds = %land.lhs.true
  %34 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !5848
  %35 = load i32, i32* %i.addr, align 4, !dbg !5849
  %idxprom41 = sext i32 %35 to i64, !dbg !5848
  %arrayidx42 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %34, i64 %idxprom41, !dbg !5848
  %36 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx42, align 8, !dbg !5848
  %cmp43 = icmp eq %struct.rtx_def* %36, null, !dbg !5850
  br i1 %cmp43, label %land.lhs.true45, label %if.end261, !dbg !5851

land.lhs.true45:                                  ; preds = %land.lhs.true40
  %37 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !5852
  %38 = load i32, i32* %i.addr, align 4, !dbg !5853
  %idxprom46 = sext i32 %38 to i64, !dbg !5852
  %arrayidx47 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %37, i64 %idxprom46, !dbg !5852
  %39 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx47, align 8, !dbg !5852
  %cmp48 = icmp eq %struct.rtx_def* %39, null, !dbg !5854
  br i1 %cmp48, label %land.lhs.true54, label %lor.lhs.false, !dbg !5855

lor.lhs.false:                                    ; preds = %land.lhs.true45
  %40 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5856
  %41 = load i32, i32* %i.addr, align 4, !dbg !5857
  %idxprom50 = sext i32 %41 to i64, !dbg !5856
  %arrayidx51 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %40, i64 %idxprom50, !dbg !5856
  %42 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx51, align 8, !dbg !5856
  %cmp52 = icmp eq %struct.rtx_def* %42, null, !dbg !5858
  br i1 %cmp52, label %land.lhs.true54, label %if.end261, !dbg !5859

land.lhs.true54:                                  ; preds = %lor.lhs.false, %land.lhs.true45
  %43 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !5860
  %44 = load i32, i32* %i.addr, align 4, !dbg !5861
  %idxprom55 = sext i32 %44 to i64, !dbg !5860
  %arrayidx56 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %43, i64 %idxprom55, !dbg !5860
  %45 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx56, align 8, !dbg !5860
  %cmp57 = icmp eq %struct.rtx_def* %45, null, !dbg !5862
  br i1 %cmp57, label %if.then59, label %if.end261, !dbg !5863

if.then59:                                        ; preds = %land.lhs.true54
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !5864, metadata !DIExpression()), !dbg !5866
  store %struct.rtx_def* null, %struct.rtx_def** %x, align 8, !dbg !5866
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !5867, metadata !DIExpression()), !dbg !5868
  %46 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !5869
  %47 = load i32, i32* %i.addr, align 4, !dbg !5869
  %idxprom60 = sext i32 %47 to i64, !dbg !5869
  %arrayidx61 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %46, i64 %idxprom60, !dbg !5869
  %48 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx61, align 8, !dbg !5869
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !5869
  %bf.load62 = load i32, i32* %49, align 8, !dbg !5869
  %bf.lshr = lshr i32 %bf.load62, 16, !dbg !5869
  %bf.clear63 = and i32 %bf.lshr, 255, !dbg !5869
  store i32 %bf.clear63, i32* %mode, align 4, !dbg !5868
  call void @llvm.dbg.declare(metadata i32* %inherent_size, metadata !5870, metadata !DIExpression()), !dbg !5871
  %50 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !5872
  %51 = load i32, i32* %i.addr, align 4, !dbg !5872
  %idxprom64 = sext i32 %51 to i64, !dbg !5872
  %arrayidx65 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %50, i64 %idxprom64, !dbg !5872
  %52 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx65, align 8, !dbg !5872
  %53 = bitcast %struct.rtx_def* %52 to i32*, !dbg !5872
  %bf.load66 = load i32, i32* %53, align 8, !dbg !5872
  %bf.lshr67 = lshr i32 %bf.load66, 16, !dbg !5872
  %bf.clear68 = and i32 %bf.lshr67, 255, !dbg !5872
  %idxprom69 = zext i32 %bf.clear68 to i64, !dbg !5872
  %arrayidx70 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom69, !dbg !5872
  %54 = load i8, i8* %arrayidx70, align 1, !dbg !5872
  %conv71 = zext i8 %54 to i16, !dbg !5872
  %conv72 = zext i16 %conv71 to i32, !dbg !5872
  store i32 %conv72, i32* %inherent_size, align 4, !dbg !5871
  call void @llvm.dbg.declare(metadata i32* %inherent_align, metadata !5873, metadata !DIExpression()), !dbg !5874
  %55 = load i32, i32* %mode, align 4, !dbg !5875
  %call73 = call i32 @get_mode_alignment(i32 %55), !dbg !5875
  store i32 %call73, i32* %inherent_align, align 4, !dbg !5874
  call void @llvm.dbg.declare(metadata i32* %total_size, metadata !5876, metadata !DIExpression()), !dbg !5877
  %56 = load i32, i32* %inherent_size, align 4, !dbg !5878
  %57 = load i32*, i32** @reg_max_ref_width, align 8, !dbg !5878
  %58 = load i32, i32* %i.addr, align 4, !dbg !5878
  %idxprom74 = sext i32 %58 to i64, !dbg !5878
  %arrayidx75 = getelementptr inbounds i32, i32* %57, i64 %idxprom74, !dbg !5878
  %59 = load i32, i32* %arrayidx75, align 4, !dbg !5878
  %cmp76 = icmp ugt i32 %56, %59, !dbg !5878
  br i1 %cmp76, label %cond.true78, label %cond.false79, !dbg !5878

cond.true78:                                      ; preds = %if.then59
  %60 = load i32, i32* %inherent_size, align 4, !dbg !5878
  br label %cond.end82, !dbg !5878

cond.false79:                                     ; preds = %if.then59
  %61 = load i32*, i32** @reg_max_ref_width, align 8, !dbg !5878
  %62 = load i32, i32* %i.addr, align 4, !dbg !5878
  %idxprom80 = sext i32 %62 to i64, !dbg !5878
  %arrayidx81 = getelementptr inbounds i32, i32* %61, i64 %idxprom80, !dbg !5878
  %63 = load i32, i32* %arrayidx81, align 4, !dbg !5878
  br label %cond.end82, !dbg !5878

cond.end82:                                       ; preds = %cond.false79, %cond.true78
  %cond83 = phi i32 [ %60, %cond.true78 ], [ %63, %cond.false79 ], !dbg !5878
  store i32 %cond83, i32* %total_size, align 4, !dbg !5877
  call void @llvm.dbg.declare(metadata i32* %min_align, metadata !5879, metadata !DIExpression()), !dbg !5880
  %64 = load i32*, i32** @reg_max_ref_width, align 8, !dbg !5881
  %65 = load i32, i32* %i.addr, align 4, !dbg !5882
  %idxprom84 = sext i32 %65 to i64, !dbg !5881
  %arrayidx85 = getelementptr inbounds i32, i32* %64, i64 %idxprom84, !dbg !5881
  %66 = load i32, i32* %arrayidx85, align 4, !dbg !5881
  %mul = mul i32 %66, 8, !dbg !5883
  store i32 %mul, i32* %min_align, align 4, !dbg !5880
  call void @llvm.dbg.declare(metadata i32* %adjust, metadata !5884, metadata !DIExpression()), !dbg !5885
  store i32 0, i32* %adjust, align 4, !dbg !5885
  %67 = load i8, i8* @ira_conflicts_p, align 1, !dbg !5886
  %tobool = icmp ne i8 %67, 0, !dbg !5886
  br i1 %tobool, label %if.then86, label %if.end92, !dbg !5888

if.then86:                                        ; preds = %cond.end82
  %68 = load i32, i32* %i.addr, align 4, !dbg !5889
  %call87 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* @spilled_pseudos, i32 %68), !dbg !5889
  %69 = load i8, i8* %dont_share_p.addr, align 1, !dbg !5891
  %tobool88 = icmp ne i8 %69, 0, !dbg !5891
  br i1 %tobool88, label %if.end91, label %if.then89, !dbg !5893

if.then89:                                        ; preds = %if.then86
  %70 = load i32, i32* %i.addr, align 4, !dbg !5894
  %71 = load i32, i32* %inherent_size, align 4, !dbg !5895
  %72 = load i32, i32* %total_size, align 4, !dbg !5896
  %call90 = call %struct.rtx_def* @ira_reuse_stack_slot(i32 %70, i32 %71, i32 %72), !dbg !5897
  store %struct.rtx_def* %call90, %struct.rtx_def** %x, align 8, !dbg !5898
  br label %if.end91, !dbg !5899

if.end91:                                         ; preds = %if.then89, %if.then86
  br label %if.end92, !dbg !5900

if.end92:                                         ; preds = %if.end91, %cond.end82
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5901
  %tobool93 = icmp ne %struct.rtx_def* %73, null, !dbg !5901
  br i1 %tobool93, label %if.then94, label %if.else, !dbg !5903

if.then94:                                        ; preds = %if.end92
  br label %if.end251, !dbg !5903

if.else:                                          ; preds = %if.end92
  %74 = load i32, i32* %from_reg.addr, align 4, !dbg !5904
  %cmp95 = icmp eq i32 %74, -1, !dbg !5906
  br i1 %cmp95, label %if.then102, label %lor.lhs.false97, !dbg !5907

lor.lhs.false97:                                  ; preds = %if.else
  %75 = load i8, i8* %dont_share_p.addr, align 1, !dbg !5908
  %tobool98 = icmp ne i8 %75, 0, !dbg !5908
  br i1 %tobool98, label %if.else116, label %land.lhs.true99, !dbg !5909

land.lhs.true99:                                  ; preds = %lor.lhs.false97
  %76 = load i8, i8* @ira_conflicts_p, align 1, !dbg !5910
  %conv100 = zext i8 %76 to i32, !dbg !5910
  %tobool101 = icmp ne i32 %conv100, 0, !dbg !5910
  br i1 %tobool101, label %if.then102, label %if.else116, !dbg !5911

if.then102:                                       ; preds = %land.lhs.true99, %if.else
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %stack_slot, metadata !5912, metadata !DIExpression()), !dbg !5914
  %77 = load i32, i32* %mode, align 4, !dbg !5915
  %78 = load i32, i32* %total_size, align 4, !dbg !5916
  %conv103 = zext i32 %78 to i64, !dbg !5916
  %79 = load i32, i32* %min_align, align 4, !dbg !5917
  %80 = load i32, i32* %inherent_align, align 4, !dbg !5918
  %cmp104 = icmp ugt i32 %79, %80, !dbg !5919
  br i1 %cmp104, label %lor.end, label %lor.rhs, !dbg !5920

lor.rhs:                                          ; preds = %if.then102
  %81 = load i32, i32* %total_size, align 4, !dbg !5921
  %82 = load i32, i32* %inherent_size, align 4, !dbg !5922
  %cmp106 = icmp ugt i32 %81, %82, !dbg !5923
  br label %lor.end, !dbg !5920

lor.end:                                          ; preds = %lor.rhs, %if.then102
  %83 = phi i1 [ true, %if.then102 ], [ %cmp106, %lor.rhs ]
  %84 = zext i1 %83 to i64, !dbg !5917
  %cond108 = select i1 %83, i32 -1, i32 0, !dbg !5917
  %call109 = call %struct.rtx_def* @assign_stack_local(i32 %77, i64 %conv103, i32 %cond108), !dbg !5924
  store %struct.rtx_def* %call109, %struct.rtx_def** %x, align 8, !dbg !5925
  %85 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5926
  store %struct.rtx_def* %85, %struct.rtx_def** %stack_slot, align 8, !dbg !5927
  %86 = load i8, i8* %dont_share_p.addr, align 1, !dbg !5928
  %tobool110 = icmp ne i8 %86, 0, !dbg !5928
  br i1 %tobool110, label %if.end115, label %land.lhs.true111, !dbg !5930

land.lhs.true111:                                 ; preds = %lor.end
  %87 = load i8, i8* @ira_conflicts_p, align 1, !dbg !5931
  %conv112 = zext i8 %87 to i32, !dbg !5931
  %tobool113 = icmp ne i32 %conv112, 0, !dbg !5931
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !5932

if.then114:                                       ; preds = %land.lhs.true111
  %88 = load %struct.rtx_def*, %struct.rtx_def** %stack_slot, align 8, !dbg !5933
  %89 = load i32, i32* %i.addr, align 4, !dbg !5934
  %90 = load i32, i32* %total_size, align 4, !dbg !5935
  call void @ira_mark_new_stack_slot(%struct.rtx_def* %88, i32 %89, i32 %90), !dbg !5936
  br label %if.end115, !dbg !5936

if.end115:                                        ; preds = %if.then114, %land.lhs.true111, %lor.end
  br label %if.end250, !dbg !5937

if.else116:                                       ; preds = %land.lhs.true99, %lor.lhs.false97
  %91 = load i32, i32* %from_reg.addr, align 4, !dbg !5938
  %idxprom117 = sext i32 %91 to i64, !dbg !5940
  %arrayidx118 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom117, !dbg !5940
  %92 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx118, align 8, !dbg !5940
  %cmp119 = icmp ne %struct.rtx_def* %92, null, !dbg !5941
  br i1 %cmp119, label %land.lhs.true121, label %if.else161, !dbg !5942

land.lhs.true121:                                 ; preds = %if.else116
  %93 = load i32, i32* %from_reg.addr, align 4, !dbg !5943
  %idxprom122 = sext i32 %93 to i64, !dbg !5944
  %arrayidx123 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_stack_slot_width, i64 0, i64 %idxprom122, !dbg !5944
  %94 = load i32, i32* %arrayidx123, align 4, !dbg !5944
  %95 = load i32, i32* %total_size, align 4, !dbg !5945
  %cmp124 = icmp uge i32 %94, %95, !dbg !5946
  br i1 %cmp124, label %land.lhs.true126, label %if.else161, !dbg !5947

land.lhs.true126:                                 ; preds = %land.lhs.true121
  %96 = load i32, i32* %from_reg.addr, align 4, !dbg !5948
  %idxprom127 = sext i32 %96 to i64, !dbg !5948
  %arrayidx128 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom127, !dbg !5948
  %97 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx128, align 8, !dbg !5948
  %98 = bitcast %struct.rtx_def* %97 to i32*, !dbg !5948
  %bf.load129 = load i32, i32* %98, align 8, !dbg !5948
  %bf.lshr130 = lshr i32 %bf.load129, 16, !dbg !5948
  %bf.clear131 = and i32 %bf.lshr130, 255, !dbg !5948
  %idxprom132 = zext i32 %bf.clear131 to i64, !dbg !5948
  %arrayidx133 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom132, !dbg !5948
  %99 = load i8, i8* %arrayidx133, align 1, !dbg !5948
  %conv134 = zext i8 %99 to i16, !dbg !5948
  %conv135 = zext i16 %conv134 to i32, !dbg !5948
  %100 = load i32, i32* %inherent_size, align 4, !dbg !5949
  %cmp136 = icmp uge i32 %conv135, %100, !dbg !5950
  br i1 %cmp136, label %land.lhs.true138, label %if.else161, !dbg !5951

land.lhs.true138:                                 ; preds = %land.lhs.true126
  %101 = load i32, i32* %from_reg.addr, align 4, !dbg !5952
  %idxprom139 = sext i32 %101 to i64, !dbg !5952
  %arrayidx140 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom139, !dbg !5952
  %102 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx140, align 8, !dbg !5952
  %u141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1, !dbg !5952
  %fld142 = bitcast %union.u* %u141 to [1 x %union.rtunion_def]*, !dbg !5952
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i64 0, i64 1, !dbg !5952
  %rt_mem = bitcast %union.rtunion_def* %arrayidx143 to %struct.mem_attrs**, !dbg !5952
  %103 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5952
  %cmp144 = icmp ne %struct.mem_attrs* %103, null, !dbg !5952
  br i1 %cmp144, label %cond.true146, label %cond.false153, !dbg !5952

cond.true146:                                     ; preds = %land.lhs.true138
  %104 = load i32, i32* %from_reg.addr, align 4, !dbg !5952
  %idxprom147 = sext i32 %104 to i64, !dbg !5952
  %arrayidx148 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom147, !dbg !5952
  %105 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx148, align 8, !dbg !5952
  %u149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1, !dbg !5952
  %fld150 = bitcast %union.u* %u149 to [1 x %union.rtunion_def]*, !dbg !5952
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i64 0, i64 1, !dbg !5952
  %rt_mem152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.mem_attrs**, !dbg !5952
  %106 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem152, align 8, !dbg !5952
  %align = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %106, i32 0, i32 4, !dbg !5952
  %107 = load i32, i32* %align, align 4, !dbg !5952
  br label %cond.end154, !dbg !5952

cond.false153:                                    ; preds = %land.lhs.true138
  br label %cond.end154, !dbg !5952

cond.end154:                                      ; preds = %cond.false153, %cond.true146
  %cond155 = phi i32 [ %107, %cond.true146 ], [ 8, %cond.false153 ], !dbg !5952
  %108 = load i32, i32* %min_align, align 4, !dbg !5953
  %cmp156 = icmp uge i32 %cond155, %108, !dbg !5954
  br i1 %cmp156, label %if.then158, label %if.else161, !dbg !5955

if.then158:                                       ; preds = %cond.end154
  %109 = load i32, i32* %from_reg.addr, align 4, !dbg !5956
  %idxprom159 = sext i32 %109 to i64, !dbg !5957
  %arrayidx160 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom159, !dbg !5957
  %110 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx160, align 8, !dbg !5957
  store %struct.rtx_def* %110, %struct.rtx_def** %x, align 8, !dbg !5958
  br label %if.end249, !dbg !5959

if.else161:                                       ; preds = %cond.end154, %land.lhs.true126, %land.lhs.true121, %if.else116
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %stack_slot162, metadata !5960, metadata !DIExpression()), !dbg !5962
  %111 = load i32, i32* %from_reg.addr, align 4, !dbg !5963
  %idxprom163 = sext i32 %111 to i64, !dbg !5965
  %arrayidx164 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom163, !dbg !5965
  %112 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx164, align 8, !dbg !5965
  %tobool165 = icmp ne %struct.rtx_def* %112, null, !dbg !5965
  br i1 %tobool165, label %if.then166, label %if.end235, !dbg !5966

if.then166:                                       ; preds = %if.else161
  %113 = load i32, i32* %from_reg.addr, align 4, !dbg !5967
  %idxprom167 = sext i32 %113 to i64, !dbg !5967
  %arrayidx168 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom167, !dbg !5967
  %114 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx168, align 8, !dbg !5967
  %115 = bitcast %struct.rtx_def* %114 to i32*, !dbg !5967
  %bf.load169 = load i32, i32* %115, align 8, !dbg !5967
  %bf.lshr170 = lshr i32 %bf.load169, 16, !dbg !5967
  %bf.clear171 = and i32 %bf.lshr170, 255, !dbg !5967
  %idxprom172 = zext i32 %bf.clear171 to i64, !dbg !5967
  %arrayidx173 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom172, !dbg !5967
  %116 = load i8, i8* %arrayidx173, align 1, !dbg !5967
  %conv174 = zext i8 %116 to i16, !dbg !5967
  %conv175 = zext i16 %conv174 to i32, !dbg !5967
  %117 = load i32, i32* %inherent_size, align 4, !dbg !5970
  %cmp176 = icmp ugt i32 %conv175, %117, !dbg !5971
  br i1 %cmp176, label %if.then178, label %if.end184, !dbg !5972

if.then178:                                       ; preds = %if.then166
  %118 = load i32, i32* %from_reg.addr, align 4, !dbg !5973
  %idxprom179 = sext i32 %118 to i64, !dbg !5973
  %arrayidx180 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom179, !dbg !5973
  %119 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx180, align 8, !dbg !5973
  %120 = bitcast %struct.rtx_def* %119 to i32*, !dbg !5973
  %bf.load181 = load i32, i32* %120, align 8, !dbg !5973
  %bf.lshr182 = lshr i32 %bf.load181, 16, !dbg !5973
  %bf.clear183 = and i32 %bf.lshr182, 255, !dbg !5973
  store i32 %bf.clear183, i32* %mode, align 4, !dbg !5974
  br label %if.end184, !dbg !5975

if.end184:                                        ; preds = %if.then178, %if.then166
  %121 = load i32, i32* %from_reg.addr, align 4, !dbg !5976
  %idxprom185 = sext i32 %121 to i64, !dbg !5978
  %arrayidx186 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_stack_slot_width, i64 0, i64 %idxprom185, !dbg !5978
  %122 = load i32, i32* %arrayidx186, align 4, !dbg !5978
  %123 = load i32, i32* %total_size, align 4, !dbg !5979
  %cmp187 = icmp ugt i32 %122, %123, !dbg !5980
  br i1 %cmp187, label %if.then189, label %if.end192, !dbg !5981

if.then189:                                       ; preds = %if.end184
  %124 = load i32, i32* %from_reg.addr, align 4, !dbg !5982
  %idxprom190 = sext i32 %124 to i64, !dbg !5983
  %arrayidx191 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_stack_slot_width, i64 0, i64 %idxprom190, !dbg !5983
  %125 = load i32, i32* %arrayidx191, align 4, !dbg !5983
  store i32 %125, i32* %total_size, align 4, !dbg !5984
  br label %if.end192, !dbg !5985

if.end192:                                        ; preds = %if.then189, %if.end184
  %126 = load i32, i32* %from_reg.addr, align 4, !dbg !5986
  %idxprom193 = sext i32 %126 to i64, !dbg !5986
  %arrayidx194 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom193, !dbg !5986
  %127 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx194, align 8, !dbg !5986
  %u195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1, !dbg !5986
  %fld196 = bitcast %union.u* %u195 to [1 x %union.rtunion_def]*, !dbg !5986
  %arrayidx197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld196, i64 0, i64 1, !dbg !5986
  %rt_mem198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.mem_attrs**, !dbg !5986
  %128 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem198, align 8, !dbg !5986
  %cmp199 = icmp ne %struct.mem_attrs* %128, null, !dbg !5986
  br i1 %cmp199, label %cond.true201, label %cond.false209, !dbg !5986

cond.true201:                                     ; preds = %if.end192
  %129 = load i32, i32* %from_reg.addr, align 4, !dbg !5986
  %idxprom202 = sext i32 %129 to i64, !dbg !5986
  %arrayidx203 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom202, !dbg !5986
  %130 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx203, align 8, !dbg !5986
  %u204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1, !dbg !5986
  %fld205 = bitcast %union.u* %u204 to [1 x %union.rtunion_def]*, !dbg !5986
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld205, i64 0, i64 1, !dbg !5986
  %rt_mem207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.mem_attrs**, !dbg !5986
  %131 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem207, align 8, !dbg !5986
  %align208 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %131, i32 0, i32 4, !dbg !5986
  %132 = load i32, i32* %align208, align 4, !dbg !5986
  br label %cond.end210, !dbg !5986

cond.false209:                                    ; preds = %if.end192
  br label %cond.end210, !dbg !5986

cond.end210:                                      ; preds = %cond.false209, %cond.true201
  %cond211 = phi i32 [ %132, %cond.true201 ], [ 8, %cond.false209 ], !dbg !5986
  %133 = load i32, i32* %min_align, align 4, !dbg !5988
  %cmp212 = icmp ugt i32 %cond211, %133, !dbg !5989
  br i1 %cmp212, label %if.then214, label %if.end234, !dbg !5990

if.then214:                                       ; preds = %cond.end210
  %134 = load i32, i32* %from_reg.addr, align 4, !dbg !5991
  %idxprom215 = sext i32 %134 to i64, !dbg !5991
  %arrayidx216 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom215, !dbg !5991
  %135 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx216, align 8, !dbg !5991
  %u217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1, !dbg !5991
  %fld218 = bitcast %union.u* %u217 to [1 x %union.rtunion_def]*, !dbg !5991
  %arrayidx219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld218, i64 0, i64 1, !dbg !5991
  %rt_mem220 = bitcast %union.rtunion_def* %arrayidx219 to %struct.mem_attrs**, !dbg !5991
  %136 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem220, align 8, !dbg !5991
  %cmp221 = icmp ne %struct.mem_attrs* %136, null, !dbg !5991
  br i1 %cmp221, label %cond.true223, label %cond.false231, !dbg !5991

cond.true223:                                     ; preds = %if.then214
  %137 = load i32, i32* %from_reg.addr, align 4, !dbg !5991
  %idxprom224 = sext i32 %137 to i64, !dbg !5991
  %arrayidx225 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom224, !dbg !5991
  %138 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx225, align 8, !dbg !5991
  %u226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1, !dbg !5991
  %fld227 = bitcast %union.u* %u226 to [1 x %union.rtunion_def]*, !dbg !5991
  %arrayidx228 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld227, i64 0, i64 1, !dbg !5991
  %rt_mem229 = bitcast %union.rtunion_def* %arrayidx228 to %struct.mem_attrs**, !dbg !5991
  %139 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem229, align 8, !dbg !5991
  %align230 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %139, i32 0, i32 4, !dbg !5991
  %140 = load i32, i32* %align230, align 4, !dbg !5991
  br label %cond.end232, !dbg !5991

cond.false231:                                    ; preds = %if.then214
  br label %cond.end232, !dbg !5991

cond.end232:                                      ; preds = %cond.false231, %cond.true223
  %cond233 = phi i32 [ %140, %cond.true223 ], [ 8, %cond.false231 ], !dbg !5991
  store i32 %cond233, i32* %min_align, align 4, !dbg !5992
  br label %if.end234, !dbg !5993

if.end234:                                        ; preds = %cond.end232, %cond.end210
  br label %if.end235, !dbg !5994

if.end235:                                        ; preds = %if.end234, %if.else161
  %141 = load i32, i32* %mode, align 4, !dbg !5995
  %142 = load i32, i32* %total_size, align 4, !dbg !5996
  %conv236 = zext i32 %142 to i64, !dbg !5996
  %143 = load i32, i32* %min_align, align 4, !dbg !5997
  %144 = load i32, i32* %inherent_align, align 4, !dbg !5998
  %cmp237 = icmp ugt i32 %143, %144, !dbg !5999
  br i1 %cmp237, label %lor.end242, label %lor.rhs239, !dbg !6000

lor.rhs239:                                       ; preds = %if.end235
  %145 = load i32, i32* %total_size, align 4, !dbg !6001
  %146 = load i32, i32* %inherent_size, align 4, !dbg !6002
  %cmp240 = icmp ugt i32 %145, %146, !dbg !6003
  br label %lor.end242, !dbg !6000

lor.end242:                                       ; preds = %lor.rhs239, %if.end235
  %147 = phi i1 [ true, %if.end235 ], [ %cmp240, %lor.rhs239 ]
  %148 = zext i1 %147 to i64, !dbg !5997
  %cond243 = select i1 %147, i32 -1, i32 0, !dbg !5997
  %call244 = call %struct.rtx_def* @assign_stack_local(i32 %141, i64 %conv236, i32 %cond243), !dbg !6004
  store %struct.rtx_def* %call244, %struct.rtx_def** %x, align 8, !dbg !6005
  %149 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6006
  store %struct.rtx_def* %149, %struct.rtx_def** %stack_slot162, align 8, !dbg !6007
  %150 = load %struct.rtx_def*, %struct.rtx_def** %stack_slot162, align 8, !dbg !6008
  %151 = load i32, i32* %from_reg.addr, align 4, !dbg !6009
  %idxprom245 = sext i32 %151 to i64, !dbg !6010
  %arrayidx246 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_stack_slot, i64 0, i64 %idxprom245, !dbg !6010
  store %struct.rtx_def* %150, %struct.rtx_def** %arrayidx246, align 8, !dbg !6011
  %152 = load i32, i32* %total_size, align 4, !dbg !6012
  %153 = load i32, i32* %from_reg.addr, align 4, !dbg !6013
  %idxprom247 = sext i32 %153 to i64, !dbg !6014
  %arrayidx248 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_stack_slot_width, i64 0, i64 %idxprom247, !dbg !6014
  store i32 %152, i32* %arrayidx248, align 4, !dbg !6015
  br label %if.end249

if.end249:                                        ; preds = %lor.end242, %if.then158
  br label %if.end250

if.end250:                                        ; preds = %if.end249, %if.end115
  br label %if.end251

if.end251:                                        ; preds = %if.end250, %if.then94
  %154 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6016
  %155 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !6016
  %156 = load i32, i32* %i.addr, align 4, !dbg !6016
  %idxprom252 = sext i32 %156 to i64, !dbg !6016
  %arrayidx253 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %155, i64 %idxprom252, !dbg !6016
  %157 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx253, align 8, !dbg !6016
  %158 = bitcast %struct.rtx_def* %157 to i32*, !dbg !6016
  %bf.load254 = load i32, i32* %158, align 8, !dbg !6016
  %bf.lshr255 = lshr i32 %bf.load254, 16, !dbg !6016
  %bf.clear256 = and i32 %bf.lshr255, 255, !dbg !6016
  %159 = load i32, i32* %adjust, align 4, !dbg !6016
  %conv257 = sext i32 %159 to i64, !dbg !6016
  %call258 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %154, i32 %bf.clear256, i64 %conv257, i32 0, i32 1), !dbg !6016
  store %struct.rtx_def* %call258, %struct.rtx_def** %x, align 8, !dbg !6017
  %160 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6018
  call void @set_mem_attrs_for_spill(%struct.rtx_def* %160), !dbg !6019
  %161 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6020
  %162 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !6021
  %163 = load i32, i32* %i.addr, align 4, !dbg !6022
  %idxprom259 = sext i32 %163 to i64, !dbg !6021
  %arrayidx260 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %162, i64 %idxprom259, !dbg !6021
  store %struct.rtx_def* %161, %struct.rtx_def** %arrayidx260, align 8, !dbg !6023
  br label %if.end261, !dbg !6024

if.end261:                                        ; preds = %if.then, %if.then4, %if.end251, %land.lhs.true54, %lor.lhs.false, %land.lhs.true40, %land.lhs.true, %cond.end27
  ret void, !dbg !6025
}

declare dso_local void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mark_not_eliminable(%struct.rtx_def* %dest, %struct.rtx_def* %x, i8* %data) #0 !dbg !6026 {
entry:
  %dest.addr = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %dest, %struct.rtx_def** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest.addr, metadata !6029, metadata !DIExpression()), !dbg !6030
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !6031, metadata !DIExpression()), !dbg !6032
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6033, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6035, metadata !DIExpression()), !dbg !6036
  %0 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !6037
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6037
  %bf.load = load i32, i32* %1, align 8, !dbg !6037
  %bf.clear = and i32 %bf.load, 65535, !dbg !6037
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !6039
  br i1 %cmp, label %if.then, label %if.end, !dbg !6040

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !6041
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !6041
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6041
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6041
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6041
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6041
  store %struct.rtx_def* %3, %struct.rtx_def** %dest.addr, align 8, !dbg !6042
  br label %if.end, !dbg !6043

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !6044
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !6046
  %cmp1 = icmp eq %struct.rtx_def* %4, %5, !dbg !6047
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6048

if.then2:                                         ; preds = %if.end
  br label %for.end, !dbg !6049

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !6050
  br label %for.cond, !dbg !6052

for.cond:                                         ; preds = %for.inc, %if.end3
  %6 = load i32, i32* %i, align 4, !dbg !6053
  %conv = zext i32 %6 to i64, !dbg !6053
  %cmp4 = icmp ult i64 %conv, 4, !dbg !6055
  br i1 %cmp4, label %for.body, label %for.end, !dbg !6056

for.body:                                         ; preds = %for.cond
  %7 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !6057
  %8 = load i32, i32* %i, align 4, !dbg !6059
  %idxprom = zext i32 %8 to i64, !dbg !6057
  %arrayidx6 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %7, i64 %idxprom, !dbg !6057
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx6, i32 0, i32 3, !dbg !6060
  %9 = load i32, i32* %can_eliminate, align 8, !dbg !6060
  %tobool = icmp ne i32 %9, 0, !dbg !6057
  br i1 %tobool, label %land.lhs.true, label %if.end54, !dbg !6061

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !6062
  %11 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !6063
  %12 = load i32, i32* %i, align 4, !dbg !6064
  %idxprom7 = zext i32 %12 to i64, !dbg !6063
  %arrayidx8 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %11, i64 %idxprom7, !dbg !6063
  %to_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx8, i32 0, i32 9, !dbg !6065
  %13 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx, align 8, !dbg !6065
  %cmp9 = icmp eq %struct.rtx_def* %10, %13, !dbg !6066
  br i1 %cmp9, label %land.lhs.true11, label %if.end54, !dbg !6067

land.lhs.true11:                                  ; preds = %land.lhs.true
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6068
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !6068
  %bf.load12 = load i32, i32* %15, align 8, !dbg !6068
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !6068
  %cmp14 = icmp ne i32 %bf.clear13, 23, !dbg !6069
  br i1 %cmp14, label %if.then48, label %lor.lhs.false, !dbg !6070

lor.lhs.false:                                    ; preds = %land.lhs.true11
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6071
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !6071
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !6071
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 1, !dbg !6071
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !6071
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !6071
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !6071
  %bf.load20 = load i32, i32* %18, align 8, !dbg !6071
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !6071
  %cmp22 = icmp ne i32 %bf.clear21, 49, !dbg !6072
  br i1 %cmp22, label %if.then48, label %lor.lhs.false24, !dbg !6073

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6074
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !6074
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !6074
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 1, !dbg !6074
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !6074
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !6074
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !6074
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !6074
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !6074
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !6074
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !6074
  %22 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !6075
  %cmp33 = icmp ne %struct.rtx_def* %21, %22, !dbg !6076
  br i1 %cmp33, label %if.then48, label %lor.lhs.false35, !dbg !6077

lor.lhs.false35:                                  ; preds = %lor.lhs.false24
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6078
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !6078
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !6078
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 1, !dbg !6078
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !6078
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !6078
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !6078
  %fld41 = bitcast %union.u* %u40 to [1 x %union.rtunion_def]*, !dbg !6078
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i64 0, i64 1, !dbg !6078
  %rt_rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !6078
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !6078
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !6078
  %bf.load44 = load i32, i32* %26, align 8, !dbg !6078
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !6078
  %cmp46 = icmp eq i32 %bf.clear45, 30, !dbg !6078
  br i1 %cmp46, label %if.end54, label %if.then48, !dbg !6079

if.then48:                                        ; preds = %lor.lhs.false35, %lor.lhs.false24, %lor.lhs.false, %land.lhs.true11
  %27 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !6080
  %28 = load i32, i32* %i, align 4, !dbg !6082
  %idxprom49 = zext i32 %28 to i64, !dbg !6080
  %arrayidx50 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %27, i64 %idxprom49, !dbg !6080
  %can_eliminate51 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx50, i32 0, i32 3, !dbg !6083
  store i32 0, i32* %can_eliminate51, align 8, !dbg !6084
  %29 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !6085
  %30 = load i32, i32* %i, align 4, !dbg !6086
  %idxprom52 = zext i32 %30 to i64, !dbg !6085
  %arrayidx53 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %29, i64 %idxprom52, !dbg !6085
  %can_eliminate_previous = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx53, i32 0, i32 4, !dbg !6087
  store i32 0, i32* %can_eliminate_previous, align 4, !dbg !6088
  %31 = load i32, i32* @num_eliminable, align 4, !dbg !6089
  %dec = add nsw i32 %31, -1, !dbg !6089
  store i32 %dec, i32* @num_eliminable, align 4, !dbg !6089
  br label %if.end54, !dbg !6090

if.end54:                                         ; preds = %if.then48, %lor.lhs.false35, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6091

for.inc:                                          ; preds = %if.end54
  %32 = load i32, i32* %i, align 4, !dbg !6092
  %inc = add i32 %32, 1, !dbg !6092
  store i32 %inc, i32* %i, align 4, !dbg !6092
  br label %for.cond, !dbg !6093, !llvm.loop !6094

for.end:                                          ; preds = %if.then2, %for.cond
  ret void, !dbg !6096
}

; Function Attrs: noinline nounwind uwtable
define internal void @maybe_fix_stack_asms() #0 !dbg !6097 {
entry:
  %constraints = alloca [30 x i8*], align 16
  %operand_mode = alloca [30 x i32], align 16
  %chain = alloca %struct.insn_chain*, align 8
  %i = alloca i32, align 4
  %noperands = alloca i32, align 4
  %clobbered = alloca i64, align 8
  %allowed = alloca i64, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %t = alloca %struct.rtx_def*, align 8
  %p = alloca i8*, align 8
  %cls = alloca i32, align 4
  %c = alloca i8, align 1
  call void @llvm.dbg.declare(metadata [30 x i8*]* %constraints, metadata !6098, metadata !DIExpression()), !dbg !6100
  call void @llvm.dbg.declare(metadata [30 x i32]* %operand_mode, metadata !6101, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain, metadata !6104, metadata !DIExpression()), !dbg !6105
  %0 = load %struct.insn_chain*, %struct.insn_chain** @reload_insn_chain, align 8, !dbg !6106
  store %struct.insn_chain* %0, %struct.insn_chain** %chain, align 8, !dbg !6108
  br label %for.cond, !dbg !6109

for.cond:                                         ; preds = %for.inc143, %entry
  %1 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6110
  %cmp = icmp ne %struct.insn_chain* %1, null, !dbg !6112
  br i1 %cmp, label %for.body, label %for.end144, !dbg !6113

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6114, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.declare(metadata i32* %noperands, metadata !6117, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.declare(metadata i64* %clobbered, metadata !6119, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.declare(metadata i64* %allowed, metadata !6121, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat, metadata !6123, metadata !DIExpression()), !dbg !6124
  %2 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6125
  %insn = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %2, i32 0, i32 3, !dbg !6125
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6125
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !6125
  %bf.load = load i32, i32* %4, align 8, !dbg !6125
  %bf.clear = and i32 %bf.load, 65535, !dbg !6125
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !6125
  br i1 %cmp1, label %lor.lhs.false16, label %lor.lhs.false, !dbg !6125

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6125
  %insn2 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %5, i32 0, i32 3, !dbg !6125
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn2, align 8, !dbg !6125
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !6125
  %bf.load3 = load i32, i32* %7, align 8, !dbg !6125
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !6125
  %cmp5 = icmp eq i32 %bf.clear4, 7, !dbg !6125
  br i1 %cmp5, label %lor.lhs.false16, label %lor.lhs.false6, !dbg !6125

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %8 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6125
  %insn7 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %8, i32 0, i32 3, !dbg !6125
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn7, align 8, !dbg !6125
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !6125
  %bf.load8 = load i32, i32* %10, align 8, !dbg !6125
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !6125
  %cmp10 = icmp eq i32 %bf.clear9, 9, !dbg !6125
  br i1 %cmp10, label %lor.lhs.false16, label %lor.lhs.false11, !dbg !6125

lor.lhs.false11:                                  ; preds = %lor.lhs.false6
  %11 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6125
  %insn12 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %11, i32 0, i32 3, !dbg !6125
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn12, align 8, !dbg !6125
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !6125
  %bf.load13 = load i32, i32* %13, align 8, !dbg !6125
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !6125
  %cmp15 = icmp eq i32 %bf.clear14, 10, !dbg !6125
  br i1 %cmp15, label %lor.lhs.false16, label %if.then, !dbg !6127

lor.lhs.false16:                                  ; preds = %lor.lhs.false11, %lor.lhs.false6, %lor.lhs.false, %for.body
  %14 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6128
  %insn17 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %14, i32 0, i32 3, !dbg !6128
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn17, align 8, !dbg !6128
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !6128
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6128
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !6128
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6128
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6128
  %call = call i32 @asm_noperands(%struct.rtx_def* %16), !dbg !6129
  store i32 %call, i32* %noperands, align 4, !dbg !6130
  %cmp18 = icmp slt i32 %call, 0, !dbg !6131
  br i1 %cmp18, label %if.then, label %if.end, !dbg !6132

if.then:                                          ; preds = %lor.lhs.false16, %lor.lhs.false11
  br label %for.inc143, !dbg !6133

if.end:                                           ; preds = %lor.lhs.false16
  %17 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6134
  %insn19 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %17, i32 0, i32 3, !dbg !6134
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn19, align 8, !dbg !6134
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !6134
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !6134
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 5, !dbg !6134
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !6134
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !6134
  store %struct.rtx_def* %19, %struct.rtx_def** %pat, align 8, !dbg !6135
  %20 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6136
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !6136
  %bf.load24 = load i32, i32* %21, align 8, !dbg !6136
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !6136
  %cmp26 = icmp ne i32 %bf.clear25, 15, !dbg !6138
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !6139

if.then27:                                        ; preds = %if.end
  br label %for.inc143, !dbg !6140

if.end28:                                         ; preds = %if.end
  store i64 0, i64* %clobbered, align 8, !dbg !6141
  store i64 0, i64* %allowed, align 8, !dbg !6142
  store i32 0, i32* %i, align 4, !dbg !6143
  br label %for.cond29, !dbg !6145

for.cond29:                                       ; preds = %for.inc, %if.end28
  %22 = load i32, i32* %i, align 4, !dbg !6146
  %23 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6148
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !6148
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !6148
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 0, !dbg !6148
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtvec_def**, !dbg !6148
  %24 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6148
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %24, i32 0, i32 0, !dbg !6148
  %25 = load i32, i32* %num_elem, align 8, !dbg !6148
  %cmp33 = icmp slt i32 %22, %25, !dbg !6149
  br i1 %cmp33, label %for.body34, label %for.end, !dbg !6150

for.body34:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %t, metadata !6151, metadata !DIExpression()), !dbg !6153
  %26 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6154
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !6154
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !6154
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 0, !dbg !6154
  %rt_rtvec38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtvec_def**, !dbg !6154
  %27 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec38, align 8, !dbg !6154
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %27, i32 0, i32 1, !dbg !6154
  %28 = load i32, i32* %i, align 4, !dbg !6154
  %idxprom = sext i32 %28 to i64, !dbg !6154
  %arrayidx39 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !6154
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx39, align 8, !dbg !6154
  store %struct.rtx_def* %29, %struct.rtx_def** %t, align 8, !dbg !6153
  %30 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !6155
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !6155
  %bf.load40 = load i32, i32* %31, align 8, !dbg !6155
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !6155
  %cmp42 = icmp eq i32 %bf.clear41, 25, !dbg !6157
  br i1 %cmp42, label %land.lhs.true, label %if.end64, !dbg !6158

land.lhs.true:                                    ; preds = %for.body34
  %32 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !6159
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !6159
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !6159
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 0, !dbg !6159
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !6159
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !6159
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !6159
  %bf.load47 = load i32, i32* %34, align 8, !dbg !6159
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !6159
  %cmp49 = icmp eq i32 %bf.clear48, 37, !dbg !6159
  br i1 %cmp49, label %land.lhs.true50, label %if.end64, !dbg !6159

land.lhs.true50:                                  ; preds = %land.lhs.true
  %35 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !6159
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !6159
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !6159
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 0, !dbg !6159
  %rt_rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**, !dbg !6159
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !6159
  %call55 = call i32 @rhs_regno(%struct.rtx_def* %36), !dbg !6159
  %conv = zext i32 %call55 to i64, !dbg !6159
  %sub = sub i64 %conv, 8, !dbg !6159
  %cmp56 = icmp ule i64 %sub, 7, !dbg !6159
  br i1 %cmp56, label %if.then58, label %if.end64, !dbg !6160

if.then58:                                        ; preds = %land.lhs.true50
  %37 = load %struct.rtx_def*, %struct.rtx_def** %t, align 8, !dbg !6161
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !6161
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !6161
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 0, !dbg !6161
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !6161
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !6161
  %call63 = call i32 @rhs_regno(%struct.rtx_def* %38), !dbg !6161
  %sh_prom = zext i32 %call63 to i64, !dbg !6161
  %shl = shl i64 1, %sh_prom, !dbg !6161
  %39 = load i64, i64* %clobbered, align 8, !dbg !6161
  %or = or i64 %39, %shl, !dbg !6161
  store i64 %or, i64* %clobbered, align 8, !dbg !6161
  br label %if.end64, !dbg !6161

if.end64:                                         ; preds = %if.then58, %land.lhs.true50, %land.lhs.true, %for.body34
  br label %for.inc, !dbg !6162

for.inc:                                          ; preds = %if.end64
  %40 = load i32, i32* %i, align 4, !dbg !6163
  %inc = add nsw i32 %40, 1, !dbg !6163
  store i32 %inc, i32* %i, align 4, !dbg !6163
  br label %for.cond29, !dbg !6164, !llvm.loop !6165

for.end:                                          ; preds = %for.cond29
  %41 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !6167
  %arraydecay = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i64 0, i64 0, !dbg !6168
  %arraydecay65 = getelementptr inbounds [30 x i32], [30 x i32]* %operand_mode, i64 0, i64 0, !dbg !6169
  %call66 = call i8* @decode_asm_operands(%struct.rtx_def* %41, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0, i64 0), %struct.rtx_def*** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1, i64 0), i8** %arraydecay, i32* %arraydecay65, i32* null), !dbg !6170
  store i32 0, i32* %i, align 4, !dbg !6171
  br label %for.cond67, !dbg !6173

for.cond67:                                       ; preds = %for.inc126, %for.end
  %42 = load i32, i32* %i, align 4, !dbg !6174
  %43 = load i32, i32* %noperands, align 4, !dbg !6176
  %cmp68 = icmp slt i32 %42, %43, !dbg !6177
  br i1 %cmp68, label %for.body70, label %for.end128, !dbg !6178

for.body70:                                       ; preds = %for.cond67
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6179, metadata !DIExpression()), !dbg !6181
  %44 = load i32, i32* %i, align 4, !dbg !6182
  %idxprom71 = sext i32 %44 to i64, !dbg !6183
  %arrayidx72 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i64 0, i64 %idxprom71, !dbg !6183
  %45 = load i8*, i8** %arrayidx72, align 8, !dbg !6183
  store i8* %45, i8** %p, align 8, !dbg !6181
  call void @llvm.dbg.declare(metadata i32* %cls, metadata !6184, metadata !DIExpression()), !dbg !6185
  store i32 0, i32* %cls, align 4, !dbg !6185
  br label %for.cond73, !dbg !6186

for.cond73:                                       ; preds = %sw.epilog, %if.end105, %for.body70
  call void @llvm.dbg.declare(metadata i8* %c, metadata !6187, metadata !DIExpression()), !dbg !6191
  %46 = load i8*, i8** %p, align 8, !dbg !6192
  %47 = load i8, i8* %46, align 1, !dbg !6193
  store i8 %47, i8* %c, align 1, !dbg !6191
  %48 = load i8, i8* %c, align 1, !dbg !6194
  %conv74 = sext i8 %48 to i32, !dbg !6194
  %cmp75 = icmp eq i32 %conv74, 0, !dbg !6196
  br i1 %cmp75, label %if.then85, label %lor.lhs.false77, !dbg !6197

lor.lhs.false77:                                  ; preds = %for.cond73
  %49 = load i8, i8* %c, align 1, !dbg !6198
  %conv78 = sext i8 %49 to i32, !dbg !6198
  %cmp79 = icmp eq i32 %conv78, 44, !dbg !6199
  br i1 %cmp79, label %if.then85, label %lor.lhs.false81, !dbg !6200

lor.lhs.false81:                                  ; preds = %lor.lhs.false77
  %50 = load i8, i8* %c, align 1, !dbg !6201
  %conv82 = sext i8 %50 to i32, !dbg !6201
  %cmp83 = icmp eq i32 %conv82, 35, !dbg !6202
  br i1 %cmp83, label %if.then85, label %if.end106, !dbg !6203

if.then85:                                        ; preds = %lor.lhs.false81, %lor.lhs.false77, %for.cond73
  %51 = load i32, i32* %cls, align 4, !dbg !6204
  %idxprom86 = sext i32 %51 to i64, !dbg !6204
  %arrayidx87 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom86, !dbg !6204
  %52 = load i64, i64* %arrayidx87, align 8, !dbg !6204
  %53 = load i64, i64* %allowed, align 8, !dbg !6204
  %or88 = or i64 %53, %52, !dbg !6204
  store i64 %or88, i64* %allowed, align 8, !dbg !6204
  store i32 0, i32* %cls, align 4, !dbg !6206
  %54 = load i8*, i8** %p, align 8, !dbg !6207
  %incdec.ptr = getelementptr inbounds i8, i8* %54, i32 1, !dbg !6207
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !6207
  %55 = load i8, i8* %c, align 1, !dbg !6208
  %conv89 = sext i8 %55 to i32, !dbg !6208
  %cmp90 = icmp eq i32 %conv89, 35, !dbg !6210
  br i1 %cmp90, label %if.then92, label %if.end100, !dbg !6211

if.then92:                                        ; preds = %if.then85
  br label %do.body, !dbg !6212

do.body:                                          ; preds = %land.end, %if.then92
  %56 = load i8*, i8** %p, align 8, !dbg !6213
  %incdec.ptr93 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !6213
  store i8* %incdec.ptr93, i8** %p, align 8, !dbg !6213
  %57 = load i8, i8* %56, align 1, !dbg !6215
  store i8 %57, i8* %c, align 1, !dbg !6216
  br label %do.cond, !dbg !6217

do.cond:                                          ; preds = %do.body
  %58 = load i8, i8* %c, align 1, !dbg !6218
  %conv94 = sext i8 %58 to i32, !dbg !6218
  %cmp95 = icmp ne i32 %conv94, 0, !dbg !6219
  br i1 %cmp95, label %land.rhs, label %land.end, !dbg !6220

land.rhs:                                         ; preds = %do.cond
  %59 = load i8, i8* %c, align 1, !dbg !6221
  %conv97 = sext i8 %59 to i32, !dbg !6221
  %cmp98 = icmp ne i32 %conv97, 44, !dbg !6222
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %60 = phi i1 [ false, %do.cond ], [ %cmp98, %land.rhs ], !dbg !6223
  br i1 %60, label %do.body, label %do.end, !dbg !6217, !llvm.loop !6224

do.end:                                           ; preds = %land.end
  br label %if.end100, !dbg !6217

if.end100:                                        ; preds = %do.end, %if.then85
  %61 = load i8, i8* %c, align 1, !dbg !6226
  %conv101 = sext i8 %61 to i32, !dbg !6226
  %cmp102 = icmp eq i32 %conv101, 0, !dbg !6228
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !6229

if.then104:                                       ; preds = %if.end100
  br label %for.end125, !dbg !6230

if.end105:                                        ; preds = %if.end100
  br label %for.cond73, !dbg !6231, !llvm.loop !6232

if.end106:                                        ; preds = %lor.lhs.false81
  %62 = load i8, i8* %c, align 1, !dbg !6235
  %conv107 = sext i8 %62 to i32, !dbg !6235
  switch i32 %conv107, label %sw.default [
    i32 61, label %sw.bb
    i32 43, label %sw.bb
    i32 42, label %sw.bb
    i32 37, label %sw.bb
    i32 63, label %sw.bb
    i32 33, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 60, label %sw.bb
    i32 62, label %sw.bb
    i32 86, label %sw.bb
    i32 111, label %sw.bb
    i32 38, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 115, label %sw.bb
    i32 105, label %sw.bb
    i32 110, label %sw.bb
    i32 88, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 109, label %sw.bb
    i32 112, label %sw.bb108
    i32 103, label %sw.bb114
    i32 114, label %sw.bb114
  ], !dbg !6236

sw.bb:                                            ; preds = %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106, %if.end106
  br label %sw.epilog, !dbg !6237

sw.bb108:                                         ; preds = %if.end106
  %63 = load i32, i32* %cls, align 4, !dbg !6239
  %idxprom109 = sext i32 %63 to i64, !dbg !6240
  %arrayidx110 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom109, !dbg !6240
  %call111 = call i32 @base_reg_class(i32 0, i32 6, i32 38), !dbg !6241
  %idxprom112 = sext i32 %call111 to i64, !dbg !6240
  %arrayidx113 = getelementptr inbounds [27 x i32], [27 x i32]* %arrayidx110, i64 0, i64 %idxprom112, !dbg !6240
  %64 = load i32, i32* %arrayidx113, align 4, !dbg !6240
  store i32 %64, i32* %cls, align 4, !dbg !6242
  br label %sw.epilog, !dbg !6243

sw.bb114:                                         ; preds = %if.end106, %if.end106
  %65 = load i32, i32* %cls, align 4, !dbg !6244
  %idxprom115 = sext i32 %65 to i64, !dbg !6245
  %arrayidx116 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom115, !dbg !6245
  %arrayidx117 = getelementptr inbounds [27 x i32], [27 x i32]* %arrayidx116, i64 0, i64 13, !dbg !6245
  %66 = load i32, i32* %arrayidx117, align 4, !dbg !6245
  store i32 %66, i32* %cls, align 4, !dbg !6246
  br label %sw.epilog, !dbg !6247

sw.default:                                       ; preds = %if.end106
  %67 = load i32, i32* %cls, align 4, !dbg !6248
  %idxprom118 = sext i32 %67 to i64, !dbg !6250
  %arrayidx119 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom118, !dbg !6250
  %68 = load i8*, i8** %p, align 8, !dbg !6251
  %call120 = call i32 @lookup_constraint(i8* %68), !dbg !6251
  %call121 = call i32 @regclass_for_constraint(i32 %call120), !dbg !6251
  %idxprom122 = sext i32 %call121 to i64, !dbg !6250
  %arrayidx123 = getelementptr inbounds [27 x i32], [27 x i32]* %arrayidx119, i64 0, i64 %idxprom122, !dbg !6250
  %69 = load i32, i32* %arrayidx123, align 4, !dbg !6250
  store i32 %69, i32* %cls, align 4, !dbg !6252
  br label %sw.epilog, !dbg !6253

sw.epilog:                                        ; preds = %sw.default, %sw.bb114, %sw.bb108, %sw.bb
  %70 = load i8, i8* %c, align 1, !dbg !6254
  %71 = load i8*, i8** %p, align 8, !dbg !6254
  %call124 = call i64 @insn_constraint_len(i8 signext %70, i8* %71), !dbg !6254
  %72 = load i8*, i8** %p, align 8, !dbg !6255
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 %call124, !dbg !6255
  store i8* %add.ptr, i8** %p, align 8, !dbg !6255
  br label %for.cond73, !dbg !6256, !llvm.loop !6232

for.end125:                                       ; preds = %if.then104
  br label %for.inc126, !dbg !6257

for.inc126:                                       ; preds = %for.end125
  %73 = load i32, i32* %i, align 4, !dbg !6258
  %inc127 = add nsw i32 %73, 1, !dbg !6258
  store i32 %inc127, i32* %i, align 4, !dbg !6258
  br label %for.cond67, !dbg !6259, !llvm.loop !6260

for.end128:                                       ; preds = %for.cond67
  %74 = load i64, i64* %clobbered, align 8, !dbg !6262
  %75 = load i64, i64* %allowed, align 8, !dbg !6262
  %and = and i64 %75, %74, !dbg !6262
  store i64 %and, i64* %allowed, align 8, !dbg !6262
  store i32 0, i32* %i, align 4, !dbg !6263
  br label %for.cond129, !dbg !6265

for.cond129:                                      ; preds = %for.inc140, %for.end128
  %76 = load i32, i32* %i, align 4, !dbg !6266
  %cmp130 = icmp slt i32 %76, 53, !dbg !6268
  br i1 %cmp130, label %for.body132, label %for.end142, !dbg !6269

for.body132:                                      ; preds = %for.cond129
  %77 = load i64, i64* %allowed, align 8, !dbg !6270
  %78 = load i32, i32* %i, align 4, !dbg !6270
  %sh_prom133 = zext i32 %78 to i64, !dbg !6270
  %shl134 = shl i64 1, %sh_prom133, !dbg !6270
  %and135 = and i64 %77, %shl134, !dbg !6270
  %tobool = icmp ne i64 %and135, 0, !dbg !6270
  br i1 %tobool, label %if.then136, label %if.end139, !dbg !6272

if.then136:                                       ; preds = %for.body132
  %79 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6273
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %79, i32 0, i32 6, !dbg !6273
  %80 = load i32, i32* %i, align 4, !dbg !6273
  %call137 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %live_throughout, i32 %80), !dbg !6273
  %81 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6275
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %81, i32 0, i32 7, !dbg !6275
  %82 = load i32, i32* %i, align 4, !dbg !6275
  %call138 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %dead_or_set, i32 %82), !dbg !6275
  br label %if.end139, !dbg !6276

if.end139:                                        ; preds = %if.then136, %for.body132
  br label %for.inc140, !dbg !6270

for.inc140:                                       ; preds = %if.end139
  %83 = load i32, i32* %i, align 4, !dbg !6277
  %inc141 = add nsw i32 %83, 1, !dbg !6277
  store i32 %inc141, i32* %i, align 4, !dbg !6277
  br label %for.cond129, !dbg !6278, !llvm.loop !6279

for.end142:                                       ; preds = %for.cond129
  br label %for.inc143, !dbg !6281

for.inc143:                                       ; preds = %for.end142, %if.then27, %if.then
  %84 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6282
  %next = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %84, i32 0, i32 0, !dbg !6283
  %85 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !6283
  store %struct.insn_chain* %85, %struct.insn_chain** %chain, align 8, !dbg !6284
  br label %for.cond, !dbg !6285, !llvm.loop !6286

for.end144:                                       ; preds = %for.cond
  ret void, !dbg !6288
}

; Function Attrs: noinline nounwind uwtable
define internal void @spill_hard_reg(i32 %regno, i32 %cant_eliminate) #0 !dbg !6289 {
entry:
  %regno.addr = alloca i32, align 4
  %cant_eliminate.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !6292, metadata !DIExpression()), !dbg !6293
  store i32 %cant_eliminate, i32* %cant_eliminate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cant_eliminate.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6296, metadata !DIExpression()), !dbg !6297
  %0 = load i32, i32* %cant_eliminate.addr, align 4, !dbg !6298
  %tobool = icmp ne i32 %0, 0, !dbg !6298
  br i1 %tobool, label %if.then, label %if.end, !dbg !6300

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %regno.addr, align 4, !dbg !6301
  %sh_prom = zext i32 %1 to i64, !dbg !6301
  %shl = shl i64 1, %sh_prom, !dbg !6301
  %2 = load i64, i64* @bad_spill_regs_global, align 8, !dbg !6301
  %or = or i64 %2, %shl, !dbg !6301
  store i64 %or, i64* @bad_spill_regs_global, align 8, !dbg !6301
  %3 = load i32, i32* %regno.addr, align 4, !dbg !6303
  call void @df_set_regs_ever_live(i32 %3, i8 zeroext 1), !dbg !6304
  br label %if.end, !dbg !6305

if.end:                                           ; preds = %if.then, %entry
  store i32 53, i32* %i, align 4, !dbg !6306
  br label %for.cond, !dbg !6308

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !6309
  %5 = load i32, i32* @max_regno, align 4, !dbg !6311
  %cmp = icmp slt i32 %4, %5, !dbg !6312
  br i1 %cmp, label %for.body, label %for.end, !dbg !6313

for.body:                                         ; preds = %for.cond
  %6 = load i16*, i16** @reg_renumber, align 8, !dbg !6314
  %7 = load i32, i32* %i, align 4, !dbg !6316
  %idxprom = sext i32 %7 to i64, !dbg !6314
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !6314
  %8 = load i16, i16* %arrayidx, align 2, !dbg !6314
  %conv = sext i16 %8 to i32, !dbg !6314
  %cmp1 = icmp sge i32 %conv, 0, !dbg !6317
  br i1 %cmp1, label %land.lhs.true, label %if.end18, !dbg !6318

land.lhs.true:                                    ; preds = %for.body
  %9 = load i16*, i16** @reg_renumber, align 8, !dbg !6319
  %10 = load i32, i32* %i, align 4, !dbg !6320
  %idxprom3 = sext i32 %10 to i64, !dbg !6319
  %arrayidx4 = getelementptr inbounds i16, i16* %9, i64 %idxprom3, !dbg !6319
  %11 = load i16, i16* %arrayidx4, align 2, !dbg !6319
  %conv5 = sext i16 %11 to i32, !dbg !6321
  %12 = load i32, i32* %regno.addr, align 4, !dbg !6322
  %cmp6 = icmp ule i32 %conv5, %12, !dbg !6323
  br i1 %cmp6, label %land.lhs.true8, label %if.end18, !dbg !6324

land.lhs.true8:                                   ; preds = %land.lhs.true
  %13 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !6325
  %14 = load i32, i32* %i, align 4, !dbg !6325
  %idxprom9 = sext i32 %14 to i64, !dbg !6325
  %arrayidx10 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %13, i64 %idxprom9, !dbg !6325
  %15 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx10, align 8, !dbg !6325
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !6325
  %bf.load = load i32, i32* %16, align 8, !dbg !6325
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6325
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6325
  %17 = load i16*, i16** @reg_renumber, align 8, !dbg !6326
  %18 = load i32, i32* %i, align 4, !dbg !6327
  %idxprom11 = sext i32 %18 to i64, !dbg !6326
  %arrayidx12 = getelementptr inbounds i16, i16* %17, i64 %idxprom11, !dbg !6326
  %19 = load i16, i16* %arrayidx12, align 2, !dbg !6326
  %conv13 = sext i16 %19 to i32, !dbg !6326
  %call = call i32 @end_hard_regno(i32 %bf.clear, i32 %conv13), !dbg !6328
  %20 = load i32, i32* %regno.addr, align 4, !dbg !6329
  %cmp14 = icmp ugt i32 %call, %20, !dbg !6330
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !6331

if.then16:                                        ; preds = %land.lhs.true8
  %21 = load i32, i32* %i, align 4, !dbg !6332
  %call17 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* @spilled_pseudos, i32 %21), !dbg !6332
  br label %if.end18, !dbg !6332

if.end18:                                         ; preds = %if.then16, %land.lhs.true8, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6329

for.inc:                                          ; preds = %if.end18
  %22 = load i32, i32* %i, align 4, !dbg !6333
  %inc = add nsw i32 %22, 1, !dbg !6333
  store i32 %inc, i32* %i, align 4, !dbg !6333
  br label %for.cond, !dbg !6334, !llvm.loop !6335

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6337
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @finish_spills(i32 %global) #0 !dbg !6338 {
entry:
  %global.addr = alloca i32, align 4
  %chain = alloca %struct.insn_chain*, align 8
  %something_changed = alloca i32, align 4
  %i = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  %n = alloca i32, align 4
  %used_by_pseudos = alloca i64, align 8
  %used_by_pseudos2 = alloca i64, align 8
  %regno = alloca i32, align 4
  store i32 %global, i32* %global.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %global.addr, metadata !6341, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain, metadata !6343, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.declare(metadata i32* %something_changed, metadata !6345, metadata !DIExpression()), !dbg !6346
  store i32 0, i32* %something_changed, align 4, !dbg !6346
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6347, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %rsi, metadata !6349, metadata !DIExpression()), !dbg !6350
  store i32 0, i32* @n_spills, align 4, !dbg !6351
  store i32 0, i32* %i, align 4, !dbg !6352
  br label %for.cond, !dbg !6354

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6355
  %cmp = icmp ult i32 %0, 53, !dbg !6357
  br i1 %cmp, label %for.body, label %for.end, !dbg !6358

for.body:                                         ; preds = %for.cond
  %1 = load i64, i64* @used_spill_regs, align 8, !dbg !6359
  %2 = load i32, i32* %i, align 4, !dbg !6359
  %sh_prom = zext i32 %2 to i64, !dbg !6359
  %shl = shl i64 1, %sh_prom, !dbg !6359
  %and = and i64 %1, %shl, !dbg !6359
  %tobool = icmp ne i64 %and, 0, !dbg !6359
  br i1 %tobool, label %if.then, label %if.else, !dbg !6361

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* @n_spills, align 4, !dbg !6362
  %conv = trunc i32 %3 to i16, !dbg !6362
  %4 = load i32, i32* %i, align 4, !dbg !6364
  %idxprom = zext i32 %4 to i64, !dbg !6365
  %arrayidx = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i64 0, i64 %idxprom, !dbg !6365
  store i16 %conv, i16* %arrayidx, align 2, !dbg !6366
  %5 = load i32, i32* %i, align 4, !dbg !6367
  %conv1 = trunc i32 %5 to i16, !dbg !6367
  %6 = load i32, i32* @n_spills, align 4, !dbg !6368
  %inc = add nsw i32 %6, 1, !dbg !6368
  store i32 %inc, i32* @n_spills, align 4, !dbg !6368
  %idxprom2 = sext i32 %6 to i64, !dbg !6369
  %arrayidx3 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i64 0, i64 %idxprom2, !dbg !6369
  store i16 %conv1, i16* %arrayidx3, align 2, !dbg !6370
  %7 = load i32, i32* @num_eliminable, align 4, !dbg !6371
  %tobool4 = icmp ne i32 %7, 0, !dbg !6371
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !6373

land.lhs.true:                                    ; preds = %if.then
  %8 = load i32, i32* %i, align 4, !dbg !6374
  %call = call zeroext i8 @df_regs_ever_live_p(i32 %8), !dbg !6375
  %tobool5 = icmp ne i8 %call, 0, !dbg !6375
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !6376

if.then6:                                         ; preds = %land.lhs.true
  store i32 1, i32* %something_changed, align 4, !dbg !6377
  br label %if.end, !dbg !6378

if.end:                                           ; preds = %if.then6, %land.lhs.true, %if.then
  %9 = load i32, i32* %i, align 4, !dbg !6379
  call void @df_set_regs_ever_live(i32 %9, i8 zeroext 1), !dbg !6380
  br label %if.end9, !dbg !6381

if.else:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !6382
  %idxprom7 = zext i32 %10 to i64, !dbg !6383
  %arrayidx8 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i64 0, i64 %idxprom7, !dbg !6383
  store i16 -1, i16* %arrayidx8, align 2, !dbg !6384
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.end
  br label %for.inc, !dbg !6359

for.inc:                                          ; preds = %if.end9
  %11 = load i32, i32* %i, align 4, !dbg !6385
  %inc10 = add i32 %11, 1, !dbg !6385
  store i32 %inc10, i32* %i, align 4, !dbg !6385
  br label %for.cond, !dbg !6386, !llvm.loop !6387

for.end:                                          ; preds = %for.cond
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* @spilled_pseudos, i32 53, i32* %i), !dbg !6389
  br label %for.cond11, !dbg !6389

for.cond11:                                       ; preds = %for.inc40, %for.end
  %call12 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !6391
  %tobool13 = icmp ne i8 %call12, 0, !dbg !6389
  br i1 %tobool13, label %for.body14, label %for.end41, !dbg !6389

for.body14:                                       ; preds = %for.cond11
  %12 = load i8, i8* @ira_conflicts_p, align 1, !dbg !6393
  %tobool15 = icmp ne i8 %12, 0, !dbg !6393
  br i1 %tobool15, label %lor.lhs.false, label %if.then21, !dbg !6395

lor.lhs.false:                                    ; preds = %for.body14
  %13 = load i16*, i16** @reg_renumber, align 8, !dbg !6396
  %14 = load i32, i32* %i, align 4, !dbg !6397
  %idxprom16 = zext i32 %14 to i64, !dbg !6396
  %arrayidx17 = getelementptr inbounds i16, i16* %13, i64 %idxprom16, !dbg !6396
  %15 = load i16, i16* %arrayidx17, align 2, !dbg !6396
  %conv18 = sext i16 %15 to i32, !dbg !6396
  %cmp19 = icmp sge i32 %conv18, 0, !dbg !6398
  br i1 %cmp19, label %if.then21, label %if.end39, !dbg !6399

if.then21:                                        ; preds = %lor.lhs.false, %for.body14
  %16 = load i16*, i16** @reg_renumber, align 8, !dbg !6400
  %17 = load i32, i32* %i, align 4, !dbg !6400
  %idxprom22 = zext i32 %17 to i64, !dbg !6400
  %arrayidx23 = getelementptr inbounds i16, i16* %16, i64 %idxprom22, !dbg !6400
  %18 = load i16, i16* %arrayidx23, align 2, !dbg !6400
  %conv24 = sext i16 %18 to i32, !dbg !6400
  %cmp25 = icmp sge i32 %conv24, 0, !dbg !6400
  br i1 %cmp25, label %cond.false, label %cond.true, !dbg !6400

cond.true:                                        ; preds = %if.then21
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 3991, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !6400
  br label %cond.end, !dbg !6400

cond.false:                                       ; preds = %if.then21
  br label %cond.end, !dbg !6400

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6400
  %19 = load i16*, i16** @reg_renumber, align 8, !dbg !6402
  %20 = load i32, i32* %i, align 4, !dbg !6402
  %idxprom27 = zext i32 %20 to i64, !dbg !6402
  %arrayidx28 = getelementptr inbounds i16, i16* %19, i64 %idxprom27, !dbg !6402
  %21 = load i16, i16* %arrayidx28, align 2, !dbg !6402
  %conv29 = sext i16 %21 to i32, !dbg !6402
  %sh_prom30 = zext i32 %conv29 to i64, !dbg !6402
  %shl31 = shl i64 1, %sh_prom30, !dbg !6402
  %22 = load i64*, i64** @pseudo_previous_regs, align 8, !dbg !6402
  %23 = load i32, i32* %i, align 4, !dbg !6402
  %idxprom32 = zext i32 %23 to i64, !dbg !6402
  %arrayidx33 = getelementptr inbounds i64, i64* %22, i64 %idxprom32, !dbg !6402
  %24 = load i64, i64* %arrayidx33, align 8, !dbg !6402
  %or = or i64 %24, %shl31, !dbg !6402
  store i64 %or, i64* %arrayidx33, align 8, !dbg !6402
  %25 = load i16*, i16** @reg_renumber, align 8, !dbg !6403
  %26 = load i32, i32* %i, align 4, !dbg !6404
  %idxprom34 = zext i32 %26 to i64, !dbg !6403
  %arrayidx35 = getelementptr inbounds i16, i16* %25, i64 %idxprom34, !dbg !6403
  store i16 -1, i16* %arrayidx35, align 2, !dbg !6405
  %27 = load i8, i8* @ira_conflicts_p, align 1, !dbg !6406
  %tobool36 = icmp ne i8 %27, 0, !dbg !6406
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !6408

if.then37:                                        ; preds = %cond.end
  %28 = load i32, i32* %i, align 4, !dbg !6409
  call void @ira_mark_allocation_change(i32 %28), !dbg !6410
  br label %if.end38, !dbg !6410

if.end38:                                         ; preds = %if.then37, %cond.end
  store i32 1, i32* %something_changed, align 4, !dbg !6411
  br label %if.end39, !dbg !6412

if.end39:                                         ; preds = %if.end38, %lor.lhs.false
  br label %for.inc40, !dbg !6413

for.inc40:                                        ; preds = %if.end39
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !6391
  br label %for.cond11, !dbg !6391, !llvm.loop !6414

for.end41:                                        ; preds = %for.cond11
  %29 = load i32, i32* %global.addr, align 4, !dbg !6416
  %tobool42 = icmp ne i32 %29, 0, !dbg !6416
  br i1 %tobool42, label %land.lhs.true43, label %if.end105, !dbg !6418

land.lhs.true43:                                  ; preds = %for.end41
  %30 = load i8, i8* @ira_conflicts_p, align 1, !dbg !6419
  %conv44 = zext i8 %30 to i32, !dbg !6419
  %tobool45 = icmp ne i32 %conv44, 0, !dbg !6419
  br i1 %tobool45, label %if.then46, label %if.end105, !dbg !6420

if.then46:                                        ; preds = %land.lhs.true43
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6421, metadata !DIExpression()), !dbg !6423
  %31 = load i64*, i64** @pseudo_forbidden_regs, align 8, !dbg !6424
  %32 = bitcast i64* %31 to i8*, !dbg !6425
  %33 = load i32, i32* @max_regno, align 4, !dbg !6426
  %conv47 = sext i32 %33 to i64, !dbg !6426
  %mul = mul i64 %conv47, 8, !dbg !6427
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 %mul, i1 false), !dbg !6425
  %34 = load %struct.insn_chain*, %struct.insn_chain** @insns_need_reload, align 8, !dbg !6428
  store %struct.insn_chain* %34, %struct.insn_chain** %chain, align 8, !dbg !6430
  br label %for.cond48, !dbg !6431

for.cond48:                                       ; preds = %for.inc70, %if.then46
  %35 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6432
  %tobool49 = icmp ne %struct.insn_chain* %35, null, !dbg !6434
  br i1 %tobool49, label %for.body50, label %for.end71, !dbg !6434

for.body50:                                       ; preds = %for.cond48
  %36 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6435
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %36, i32 0, i32 6, !dbg !6435
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %live_throughout, i32 53, i32* %i), !dbg !6435
  br label %for.cond51, !dbg !6435

for.cond51:                                       ; preds = %for.inc58, %for.body50
  %call52 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !6438
  %tobool53 = icmp ne i8 %call52, 0, !dbg !6435
  br i1 %tobool53, label %for.body54, label %for.end59, !dbg !6435

for.body54:                                       ; preds = %for.cond51
  %37 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6440
  %used_spill_regs = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %37, i32 0, i32 10, !dbg !6440
  %38 = load i64, i64* %used_spill_regs, align 8, !dbg !6440
  %39 = load i64*, i64** @pseudo_forbidden_regs, align 8, !dbg !6440
  %40 = load i32, i32* %i, align 4, !dbg !6440
  %idxprom55 = zext i32 %40 to i64, !dbg !6440
  %arrayidx56 = getelementptr inbounds i64, i64* %39, i64 %idxprom55, !dbg !6440
  %41 = load i64, i64* %arrayidx56, align 8, !dbg !6440
  %or57 = or i64 %41, %38, !dbg !6440
  store i64 %or57, i64* %arrayidx56, align 8, !dbg !6440
  br label %for.inc58, !dbg !6442

for.inc58:                                        ; preds = %for.body54
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !6438
  br label %for.cond51, !dbg !6438, !llvm.loop !6443

for.end59:                                        ; preds = %for.cond51
  %42 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6445
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %42, i32 0, i32 7, !dbg !6445
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %dead_or_set, i32 53, i32* %i), !dbg !6445
  br label %for.cond60, !dbg !6445

for.cond60:                                       ; preds = %for.inc68, %for.end59
  %call61 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !6447
  %tobool62 = icmp ne i8 %call61, 0, !dbg !6445
  br i1 %tobool62, label %for.body63, label %for.end69, !dbg !6445

for.body63:                                       ; preds = %for.cond60
  %43 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6449
  %used_spill_regs64 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %43, i32 0, i32 10, !dbg !6449
  %44 = load i64, i64* %used_spill_regs64, align 8, !dbg !6449
  %45 = load i64*, i64** @pseudo_forbidden_regs, align 8, !dbg !6449
  %46 = load i32, i32* %i, align 4, !dbg !6449
  %idxprom65 = zext i32 %46 to i64, !dbg !6449
  %arrayidx66 = getelementptr inbounds i64, i64* %45, i64 %idxprom65, !dbg !6449
  %47 = load i64, i64* %arrayidx66, align 8, !dbg !6449
  %or67 = or i64 %47, %44, !dbg !6449
  store i64 %or67, i64* %arrayidx66, align 8, !dbg !6449
  br label %for.inc68, !dbg !6451

for.inc68:                                        ; preds = %for.body63
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !6447
  br label %for.cond60, !dbg !6447, !llvm.loop !6452

for.end69:                                        ; preds = %for.cond60
  br label %for.inc70, !dbg !6454

for.inc70:                                        ; preds = %for.end69
  %48 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6455
  %next_need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %48, i32 0, i32 2, !dbg !6456
  %49 = load %struct.insn_chain*, %struct.insn_chain** %next_need_reload, align 8, !dbg !6456
  store %struct.insn_chain* %49, %struct.insn_chain** %chain, align 8, !dbg !6457
  br label %for.cond48, !dbg !6458, !llvm.loop !6459

for.end71:                                        ; preds = %for.cond48
  store i32 0, i32* %n, align 4, !dbg !6461
  store i32 53, i32* %i, align 4, !dbg !6463
  br label %for.cond72, !dbg !6464

for.cond72:                                       ; preds = %for.inc98, %for.end71
  %50 = load i32, i32* %i, align 4, !dbg !6465
  %51 = load i32, i32* @max_regno, align 4, !dbg !6467
  %cmp73 = icmp ult i32 %50, %51, !dbg !6468
  br i1 %cmp73, label %for.body75, label %for.end100, !dbg !6469

for.body75:                                       ; preds = %for.cond72
  %52 = load i16*, i16** @reg_old_renumber, align 8, !dbg !6470
  %53 = load i32, i32* %i, align 4, !dbg !6472
  %idxprom76 = zext i32 %53 to i64, !dbg !6470
  %arrayidx77 = getelementptr inbounds i16, i16* %52, i64 %idxprom76, !dbg !6470
  %54 = load i16, i16* %arrayidx77, align 2, !dbg !6470
  %conv78 = sext i16 %54 to i32, !dbg !6470
  %55 = load i16*, i16** @reg_renumber, align 8, !dbg !6473
  %56 = load i32, i32* %i, align 4, !dbg !6474
  %idxprom79 = zext i32 %56 to i64, !dbg !6473
  %arrayidx80 = getelementptr inbounds i16, i16* %55, i64 %idxprom79, !dbg !6473
  %57 = load i16, i16* %arrayidx80, align 2, !dbg !6473
  %conv81 = sext i16 %57 to i32, !dbg !6473
  %cmp82 = icmp ne i32 %conv78, %conv81, !dbg !6475
  br i1 %cmp82, label %if.then84, label %if.end97, !dbg !6476

if.then84:                                        ; preds = %for.body75
  %58 = load i16*, i16** @reg_renumber, align 8, !dbg !6477
  %59 = load i32, i32* %i, align 4, !dbg !6480
  %idxprom85 = zext i32 %59 to i64, !dbg !6477
  %arrayidx86 = getelementptr inbounds i16, i16* %58, i64 %idxprom85, !dbg !6477
  %60 = load i16, i16* %arrayidx86, align 2, !dbg !6477
  %conv87 = sext i16 %60 to i32, !dbg !6477
  %cmp88 = icmp slt i32 %conv87, 0, !dbg !6481
  br i1 %cmp88, label %if.then90, label %if.else94, !dbg !6482

if.then90:                                        ; preds = %if.then84
  %61 = load i32, i32* %i, align 4, !dbg !6483
  %62 = load i32*, i32** @temp_pseudo_reg_arr, align 8, !dbg !6484
  %63 = load i32, i32* %n, align 4, !dbg !6485
  %inc91 = add i32 %63, 1, !dbg !6485
  store i32 %inc91, i32* %n, align 4, !dbg !6485
  %idxprom92 = zext i32 %63 to i64, !dbg !6484
  %arrayidx93 = getelementptr inbounds i32, i32* %62, i64 %idxprom92, !dbg !6484
  store i32 %61, i32* %arrayidx93, align 4, !dbg !6486
  br label %if.end96, !dbg !6484

if.else94:                                        ; preds = %if.then84
  %64 = load i32, i32* %i, align 4, !dbg !6487
  %call95 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* @spilled_pseudos, i32 %64), !dbg !6487
  br label %if.end96

if.end96:                                         ; preds = %if.else94, %if.then90
  br label %if.end97, !dbg !6488

if.end97:                                         ; preds = %if.end96, %for.body75
  br label %for.inc98, !dbg !6489

for.inc98:                                        ; preds = %if.end97
  %65 = load i32, i32* %i, align 4, !dbg !6490
  %inc99 = add i32 %65, 1, !dbg !6490
  store i32 %inc99, i32* %i, align 4, !dbg !6490
  br label %for.cond72, !dbg !6491, !llvm.loop !6492

for.end100:                                       ; preds = %for.cond72
  %66 = load i32*, i32** @temp_pseudo_reg_arr, align 8, !dbg !6494
  %67 = load i32, i32* %n, align 4, !dbg !6496
  %68 = load i64, i64* @bad_spill_regs_global, align 8, !dbg !6497
  %69 = load i64*, i64** @pseudo_forbidden_regs, align 8, !dbg !6498
  %70 = load i64*, i64** @pseudo_previous_regs, align 8, !dbg !6499
  %call101 = call zeroext i8 @ira_reassign_pseudos(i32* %66, i32 %67, i64 %68, i64* %69, i64* %70, %struct.bitmap_head_def* @spilled_pseudos), !dbg !6500
  %tobool102 = icmp ne i8 %call101, 0, !dbg !6500
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !6501

if.then103:                                       ; preds = %for.end100
  store i32 1, i32* %something_changed, align 4, !dbg !6502
  br label %if.end104, !dbg !6503

if.end104:                                        ; preds = %if.then103, %for.end100
  br label %if.end105, !dbg !6504

if.end105:                                        ; preds = %if.end104, %land.lhs.true43, %for.end41
  %71 = load %struct.insn_chain*, %struct.insn_chain** @reload_insn_chain, align 8, !dbg !6505
  store %struct.insn_chain* %71, %struct.insn_chain** %chain, align 8, !dbg !6507
  br label %for.cond106, !dbg !6508

for.cond106:                                      ; preds = %for.inc129, %if.end105
  %72 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6509
  %tobool107 = icmp ne %struct.insn_chain* %72, null, !dbg !6511
  br i1 %tobool107, label %for.body108, label %for.end130, !dbg !6511

for.body108:                                      ; preds = %for.cond106
  call void @llvm.dbg.declare(metadata i64* %used_by_pseudos, metadata !6512, metadata !DIExpression()), !dbg !6514
  call void @llvm.dbg.declare(metadata i64* %used_by_pseudos2, metadata !6515, metadata !DIExpression()), !dbg !6516
  %73 = load i8, i8* @ira_conflicts_p, align 1, !dbg !6517
  %tobool109 = icmp ne i8 %73, 0, !dbg !6517
  br i1 %tobool109, label %if.end115, label %if.then110, !dbg !6519

if.then110:                                       ; preds = %for.body108
  %74 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6520
  %live_throughout111 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %74, i32 0, i32 6, !dbg !6520
  %call112 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %live_throughout111, %struct.bitmap_head_def* @spilled_pseudos), !dbg !6520
  %75 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6522
  %dead_or_set113 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %75, i32 0, i32 7, !dbg !6522
  %call114 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %dead_or_set113, %struct.bitmap_head_def* @spilled_pseudos), !dbg !6522
  br label %if.end115, !dbg !6523

if.end115:                                        ; preds = %if.then110, %for.body108
  %76 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6524
  %need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %76, i32 0, i32 5, !dbg !6526
  %bf.load = load i8, i8* %need_reload, align 4, !dbg !6526
  %bf.clear = and i8 %bf.load, 1, !dbg !6526
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6526
  %tobool116 = icmp ne i32 %bf.cast, 0, !dbg !6524
  br i1 %tobool116, label %if.then117, label %if.end128, !dbg !6527

if.then117:                                       ; preds = %if.end115
  br label %do.body, !dbg !6528

do.body:                                          ; preds = %if.then117
  store i64 0, i64* %used_by_pseudos, align 8, !dbg !6530
  %77 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6530
  %live_throughout118 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %77, i32 0, i32 6, !dbg !6530
  call void @reg_set_to_hard_reg_set(i64* %used_by_pseudos, %struct.bitmap_head_def* %live_throughout118), !dbg !6530
  br label %do.end, !dbg !6530

do.end:                                           ; preds = %do.body
  br label %do.body119, !dbg !6532

do.body119:                                       ; preds = %do.end
  store i64 0, i64* %used_by_pseudos2, align 8, !dbg !6533
  %78 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6533
  %dead_or_set120 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %78, i32 0, i32 7, !dbg !6533
  call void @reg_set_to_hard_reg_set(i64* %used_by_pseudos2, %struct.bitmap_head_def* %dead_or_set120), !dbg !6533
  br label %do.end121, !dbg !6533

do.end121:                                        ; preds = %do.body119
  %79 = load i64, i64* %used_by_pseudos2, align 8, !dbg !6535
  %80 = load i64, i64* %used_by_pseudos, align 8, !dbg !6535
  %or122 = or i64 %80, %79, !dbg !6535
  store i64 %or122, i64* %used_by_pseudos, align 8, !dbg !6535
  %81 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6536
  %live_throughout123 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %81, i32 0, i32 6, !dbg !6537
  call void @compute_use_by_pseudos(i64* %used_by_pseudos, %struct.bitmap_head_def* %live_throughout123), !dbg !6538
  %82 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6539
  %dead_or_set124 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %82, i32 0, i32 7, !dbg !6540
  call void @compute_use_by_pseudos(i64* %used_by_pseudos, %struct.bitmap_head_def* %dead_or_set124), !dbg !6541
  %83 = load i64, i64* %used_by_pseudos, align 8, !dbg !6542
  %neg = xor i64 %83, -1, !dbg !6542
  %84 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6542
  %used_spill_regs125 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %84, i32 0, i32 10, !dbg !6542
  store i64 %neg, i64* %used_spill_regs125, align 8, !dbg !6542
  %85 = load i64, i64* @used_spill_regs, align 8, !dbg !6543
  %86 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6543
  %used_spill_regs126 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %86, i32 0, i32 10, !dbg !6543
  %87 = load i64, i64* %used_spill_regs126, align 8, !dbg !6543
  %and127 = and i64 %87, %85, !dbg !6543
  store i64 %and127, i64* %used_spill_regs126, align 8, !dbg !6543
  br label %if.end128, !dbg !6544

if.end128:                                        ; preds = %do.end121, %if.end115
  br label %for.inc129, !dbg !6545

for.inc129:                                       ; preds = %if.end128
  %88 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6546
  %next = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %88, i32 0, i32 0, !dbg !6547
  %89 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !6547
  store %struct.insn_chain* %89, %struct.insn_chain** %chain, align 8, !dbg !6548
  br label %for.cond106, !dbg !6549, !llvm.loop !6550

for.end130:                                       ; preds = %for.cond106
  call void @bitmap_clear(%struct.bitmap_head_def* @changed_allocation_pseudos), !dbg !6552
  store i32 53, i32* %i, align 4, !dbg !6553
  br label %for.cond131, !dbg !6555

for.cond131:                                      ; preds = %for.inc165, %for.end130
  %90 = load i32, i32* %i, align 4, !dbg !6556
  %91 = load i32, i32* @max_regno, align 4, !dbg !6558
  %cmp132 = icmp ult i32 %90, %91, !dbg !6559
  br i1 %cmp132, label %for.body134, label %for.end167, !dbg !6560

for.body134:                                      ; preds = %for.cond131
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !6561, metadata !DIExpression()), !dbg !6563
  %92 = load i16*, i16** @reg_renumber, align 8, !dbg !6564
  %93 = load i32, i32* %i, align 4, !dbg !6565
  %idxprom135 = zext i32 %93 to i64, !dbg !6564
  %arrayidx136 = getelementptr inbounds i16, i16* %92, i64 %idxprom135, !dbg !6564
  %94 = load i16, i16* %arrayidx136, align 2, !dbg !6564
  %conv137 = sext i16 %94 to i32, !dbg !6564
  store i32 %conv137, i32* %regno, align 4, !dbg !6563
  %95 = load i16*, i16** @reg_old_renumber, align 8, !dbg !6566
  %96 = load i32, i32* %i, align 4, !dbg !6568
  %idxprom138 = zext i32 %96 to i64, !dbg !6566
  %arrayidx139 = getelementptr inbounds i16, i16* %95, i64 %idxprom138, !dbg !6566
  %97 = load i16, i16* %arrayidx139, align 2, !dbg !6566
  %conv140 = sext i16 %97 to i32, !dbg !6566
  %98 = load i32, i32* %regno, align 4, !dbg !6569
  %cmp141 = icmp eq i32 %conv140, %98, !dbg !6570
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !6571

if.then143:                                       ; preds = %for.body134
  br label %for.inc165, !dbg !6572

if.end144:                                        ; preds = %for.body134
  %99 = load i32, i32* %i, align 4, !dbg !6573
  %call145 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* @changed_allocation_pseudos, i32 %99), !dbg !6573
  %100 = load i32, i32* %i, align 4, !dbg !6574
  %101 = load i16*, i16** @reg_old_renumber, align 8, !dbg !6575
  %102 = load i32, i32* %i, align 4, !dbg !6576
  %idxprom146 = zext i32 %102 to i64, !dbg !6575
  %arrayidx147 = getelementptr inbounds i16, i16* %101, i64 %idxprom146, !dbg !6575
  %103 = load i16, i16* %arrayidx147, align 2, !dbg !6575
  %conv148 = sext i16 %103 to i32, !dbg !6575
  call void @alter_reg(i32 %100, i32 %conv148, i8 zeroext 0), !dbg !6577
  %104 = load i32, i32* %regno, align 4, !dbg !6578
  %conv149 = trunc i32 %104 to i16, !dbg !6578
  %105 = load i16*, i16** @reg_old_renumber, align 8, !dbg !6579
  %106 = load i32, i32* %i, align 4, !dbg !6580
  %idxprom150 = zext i32 %106 to i64, !dbg !6579
  %arrayidx151 = getelementptr inbounds i16, i16* %105, i64 %idxprom150, !dbg !6579
  store i16 %conv149, i16* %arrayidx151, align 2, !dbg !6581
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6582
  %tobool152 = icmp ne %struct._IO_FILE* %107, null, !dbg !6582
  br i1 %tobool152, label %if.then153, label %if.end164, !dbg !6584

if.then153:                                       ; preds = %if.end144
  %108 = load i32, i32* %regno, align 4, !dbg !6585
  %cmp154 = icmp eq i32 %108, -1, !dbg !6588
  br i1 %cmp154, label %if.then156, label %if.else158, !dbg !6589

if.then156:                                       ; preds = %if.then153
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6590
  %110 = load i32, i32* %i, align 4, !dbg !6591
  %call157 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0), i32 %110), !dbg !6592
  br label %if.end163, !dbg !6592

if.else158:                                       ; preds = %if.then153
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6593
  %112 = load i32, i32* %i, align 4, !dbg !6594
  %113 = load i16*, i16** @reg_renumber, align 8, !dbg !6595
  %114 = load i32, i32* %i, align 4, !dbg !6596
  %idxprom159 = zext i32 %114 to i64, !dbg !6595
  %arrayidx160 = getelementptr inbounds i16, i16* %113, i64 %idxprom159, !dbg !6595
  %115 = load i16, i16* %arrayidx160, align 2, !dbg !6595
  %conv161 = sext i16 %115 to i32, !dbg !6595
  %call162 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i32 %112, i32 %conv161), !dbg !6597
  br label %if.end163

if.end163:                                        ; preds = %if.else158, %if.then156
  br label %if.end164, !dbg !6598

if.end164:                                        ; preds = %if.end163, %if.end144
  br label %for.inc165, !dbg !6599

for.inc165:                                       ; preds = %if.end164, %if.then143
  %116 = load i32, i32* %i, align 4, !dbg !6600
  %inc166 = add i32 %116, 1, !dbg !6600
  store i32 %inc166, i32* %i, align 4, !dbg !6600
  br label %for.cond131, !dbg !6601, !llvm.loop !6602

for.end167:                                       ; preds = %for.cond131
  %117 = load i32, i32* %something_changed, align 4, !dbg !6604
  ret i32 %117, !dbg !6605
}

declare dso_local i64 @get_frame_size() #2

; Function Attrs: noinline nounwind uwtable
define internal void @set_initial_elim_offsets() #0 !dbg !6606 {
entry:
  %ep = alloca %struct.elim_table*, align 8
  call void @llvm.dbg.declare(metadata %struct.elim_table** %ep, metadata !6607, metadata !DIExpression()), !dbg !6608
  %0 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !6609
  store %struct.elim_table* %0, %struct.elim_table** %ep, align 8, !dbg !6608
  br label %for.cond, !dbg !6610

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6611
  %2 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !6614
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %2, i64 4, !dbg !6614
  %cmp = icmp ult %struct.elim_table* %1, %arrayidx, !dbg !6615
  br i1 %cmp, label %for.body, label %for.end, !dbg !6616

for.body:                                         ; preds = %for.cond
  %3 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6617
  %from = getelementptr inbounds %struct.elim_table, %struct.elim_table* %3, i32 0, i32 0, !dbg !6617
  %4 = load i32, i32* %from, align 8, !dbg !6617
  %5 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6617
  %to = getelementptr inbounds %struct.elim_table, %struct.elim_table* %5, i32 0, i32 1, !dbg !6617
  %6 = load i32, i32* %to, align 4, !dbg !6617
  %call = call i64 @ix86_initial_elimination_offset(i32 %4, i32 %6), !dbg !6617
  %7 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6617
  %initial_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %7, i32 0, i32 2, !dbg !6617
  store i64 %call, i64* %initial_offset, align 8, !dbg !6617
  %8 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6619
  %initial_offset1 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i32 0, i32 2, !dbg !6620
  %9 = load i64, i64* %initial_offset1, align 8, !dbg !6620
  %10 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6621
  %offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %10, i32 0, i32 5, !dbg !6622
  store i64 %9, i64* %offset, align 8, !dbg !6623
  %11 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6624
  %previous_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %11, i32 0, i32 6, !dbg !6625
  store i64 %9, i64* %previous_offset, align 8, !dbg !6626
  br label %for.inc, !dbg !6627

for.inc:                                          ; preds = %for.body
  %12 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6628
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %12, i32 1, !dbg !6628
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8, !dbg !6628
  br label %for.cond, !dbg !6629, !llvm.loop !6630

for.end:                                          ; preds = %for.cond
  store i32 0, i32* @num_not_at_initial_offset, align 4, !dbg !6632
  ret void, !dbg !6633
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_initial_label_offsets() #0 !dbg !6634 {
entry:
  %x = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !6635, metadata !DIExpression()), !dbg !6636
  %0 = load i8*, i8** @offsets_known_at, align 8, !dbg !6637
  %1 = load i32, i32* @num_labels, align 4, !dbg !6638
  %conv = sext i32 %1 to i64, !dbg !6638
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !6639
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 0, i32 5), align 8, !dbg !6640
  store %struct.rtx_def* %2, %struct.rtx_def** %x, align 8, !dbg !6642
  br label %for.cond, !dbg !6643

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6644
  %tobool = icmp ne %struct.rtx_def* %3, null, !dbg !6646
  br i1 %tobool, label %for.body, label %for.end, !dbg !6646

for.body:                                         ; preds = %for.cond
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6647
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !6647
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6647
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6647
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6647
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6647
  %tobool1 = icmp ne %struct.rtx_def* %5, null, !dbg !6647
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6649

if.then:                                          ; preds = %for.body
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6650
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !6650
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !6650
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 0, !dbg !6650
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !6650
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !6650
  call void @set_label_offsets(%struct.rtx_def* %7, %struct.rtx_def* null, i32 1), !dbg !6651
  br label %if.end, !dbg !6651

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6647

for.inc:                                          ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6652
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !6652
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !6652
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 1, !dbg !6652
  %rt_rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !6652
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !6652
  store %struct.rtx_def* %9, %struct.rtx_def** %x, align 8, !dbg !6653
  br label %for.cond, !dbg !6654, !llvm.loop !6655

for.end:                                          ; preds = %for.cond
  call void @for_each_eh_label(void (%struct.rtx_def*)* @set_initial_eh_label_offset), !dbg !6657
  ret void, !dbg !6658
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %x, i32 %mem_mode, %struct.rtx_def* %insn) #0 !dbg !6659 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %mem_mode.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !6662, metadata !DIExpression()), !dbg !6663
  store i32 %mem_mode, i32* %mem_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_mode.addr, metadata !6664, metadata !DIExpression()), !dbg !6665
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !6666, metadata !DIExpression()), !dbg !6667
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6668
  %1 = load i32, i32* %mem_mode.addr, align 4, !dbg !6669
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6670
  %call = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %0, i32 %1, %struct.rtx_def* %2, i8 zeroext 0), !dbg !6671
  ret %struct.rtx_def* %call, !dbg !6672
}

declare dso_local i32 @strict_memory_address_addr_space_p(i32, %struct.rtx_def*, i8 zeroext) #2

declare dso_local void @setup_save_areas() #2

declare dso_local %struct.rtx_def* @assign_stack_local(i32, i64, i32) #2

declare dso_local void @save_call_clobbered_regs() #2

; Function Attrs: noinline nounwind uwtable
define internal void @calculate_needs_all_insns(i32 %global) #0 !dbg !6673 {
entry:
  %global.addr = alloca i32, align 4
  %pprev_reload = alloca %struct.insn_chain**, align 8
  %chain = alloca %struct.insn_chain*, align 8
  %next = alloca %struct.insn_chain*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %old_body = alloca %struct.rtx_def*, align 8
  %old_code = alloca i32, align 4
  %old_notes = alloca %struct.rtx_def*, align 8
  %did_elimination = alloca i32, align 4
  %operands_changed = alloca i32, align 4
  %set = alloca %struct.rtx_def*, align 8
  %set200 = alloca %struct.rtx_def*, align 8
  store i32 %global, i32* %global.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %global.addr, metadata !6674, metadata !DIExpression()), !dbg !6675
  call void @llvm.dbg.declare(metadata %struct.insn_chain*** %pprev_reload, metadata !6676, metadata !DIExpression()), !dbg !6678
  store %struct.insn_chain** @insns_need_reload, %struct.insn_chain*** %pprev_reload, align 8, !dbg !6678
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain, metadata !6679, metadata !DIExpression()), !dbg !6680
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %next, metadata !6681, metadata !DIExpression()), !dbg !6682
  store %struct.insn_chain* null, %struct.insn_chain** %next, align 8, !dbg !6682
  store i32 0, i32* @something_needs_elimination, align 4, !dbg !6683
  store i64 0, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !6684
  %0 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !6684
  %1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !6684
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !6684
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !6684
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6684
  %2 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !6684
  %cmp = icmp slt i64 %sub.ptr.sub, %2, !dbg !6684
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6684

cond.true:                                        ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !6684
  %conv = trunc i64 %3 to i32, !dbg !6684
  call void @_obstack_newchunk(%struct.obstack* @reload_obstack, i32 %conv), !dbg !6684
  br label %cond.end, !dbg !6684

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6684

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6684
  %4 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !6684
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !6684
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %4, !dbg !6684
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !6684
  %6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !6684
  %7 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !6684
  %cmp1 = icmp eq i8* %6, %7, !dbg !6684
  br i1 %cmp1, label %cond.true3, label %cond.false4, !dbg !6684

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !6684
  %bf.clear = and i8 %bf.load, -3, !dbg !6684
  %bf.set = or i8 %bf.clear, 2, !dbg !6684
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !6684
  br label %cond.end5, !dbg !6684

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !6684

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !6684
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !6684
  %sub.ptr.lhs.cast7 = ptrtoint i8* %8 to i64, !dbg !6684
  %sub.ptr.sub8 = sub i64 %sub.ptr.lhs.cast7, 0, !dbg !6684
  store i64 %sub.ptr.sub8, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !6684
  %9 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !6684
  %sub.ptr.lhs.cast9 = ptrtoint i8* %9 to i64, !dbg !6684
  %sub.ptr.sub10 = sub i64 %sub.ptr.lhs.cast9, 0, !dbg !6684
  %10 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !6684
  %conv11 = sext i32 %10 to i64, !dbg !6684
  %add = add nsw i64 %sub.ptr.sub10, %conv11, !dbg !6684
  %11 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !6684
  %neg = xor i32 %11, -1, !dbg !6684
  %conv12 = sext i32 %neg to i64, !dbg !6684
  %and = and i64 %add, %conv12, !dbg !6684
  %12 = inttoptr i64 %and to i8*, !dbg !6684
  store i8* %12, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !6684
  %13 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !6684
  %14 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !6684
  %15 = bitcast %struct._obstack_chunk* %14 to i8*, !dbg !6684
  %sub.ptr.lhs.cast13 = ptrtoint i8* %13 to i64, !dbg !6684
  %sub.ptr.rhs.cast14 = ptrtoint i8* %15 to i64, !dbg !6684
  %sub.ptr.sub15 = sub i64 %sub.ptr.lhs.cast13, %sub.ptr.rhs.cast14, !dbg !6684
  %16 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !6684
  %17 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !6684
  %18 = bitcast %struct._obstack_chunk* %17 to i8*, !dbg !6684
  %sub.ptr.lhs.cast16 = ptrtoint i8* %16 to i64, !dbg !6684
  %sub.ptr.rhs.cast17 = ptrtoint i8* %18 to i64, !dbg !6684
  %sub.ptr.sub18 = sub i64 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17, !dbg !6684
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !6684
  br i1 %cmp19, label %cond.true21, label %cond.false22, !dbg !6684

cond.true21:                                      ; preds = %cond.end5
  %19 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !6684
  store i8* %19, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !6684
  br label %cond.end23, !dbg !6684

cond.false22:                                     ; preds = %cond.end5
  br label %cond.end23, !dbg !6684

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i8* [ %19, %cond.true21 ], [ null, %cond.false22 ], !dbg !6684
  %20 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !6684
  store i8* %20, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !6684
  %21 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !6684
  %22 = inttoptr i64 %21 to i8*, !dbg !6684
  store i8* %22, i8** @reload_insn_firstobj, align 8, !dbg !6685
  %23 = load %struct.insn_chain*, %struct.insn_chain** @reload_insn_chain, align 8, !dbg !6686
  store %struct.insn_chain* %23, %struct.insn_chain** %chain, align 8, !dbg !6688
  br label %for.cond, !dbg !6689

for.cond:                                         ; preds = %for.inc, %cond.end23
  %24 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6690
  %cmp25 = icmp ne %struct.insn_chain* %24, null, !dbg !6692
  br i1 %cmp25, label %for.body, label %for.end, !dbg !6693

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !6694, metadata !DIExpression()), !dbg !6696
  %25 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6697
  %insn27 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %25, i32 0, i32 3, !dbg !6698
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn27, align 8, !dbg !6698
  store %struct.rtx_def* %26, %struct.rtx_def** %insn, align 8, !dbg !6696
  %27 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6699
  %next28 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %27, i32 0, i32 0, !dbg !6700
  %28 = load %struct.insn_chain*, %struct.insn_chain** %next28, align 8, !dbg !6700
  store %struct.insn_chain* %28, %struct.insn_chain** %next, align 8, !dbg !6701
  %29 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6702
  %n_reloads = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %29, i32 0, i32 9, !dbg !6703
  store i32 0, i32* %n_reloads, align 8, !dbg !6704
  %30 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6705
  %need_elim = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %30, i32 0, i32 5, !dbg !6706
  %bf.load29 = load i8, i8* %need_elim, align 4, !dbg !6707
  %bf.clear30 = and i8 %bf.load29, -5, !dbg !6707
  store i8 %bf.clear30, i8* %need_elim, align 4, !dbg !6707
  %31 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6708
  %need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %31, i32 0, i32 5, !dbg !6709
  %bf.load31 = load i8, i8* %need_reload, align 4, !dbg !6710
  %bf.clear32 = and i8 %bf.load31, -2, !dbg !6710
  store i8 %bf.clear32, i8* %need_reload, align 4, !dbg !6710
  %32 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6711
  %need_operand_change = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %32, i32 0, i32 5, !dbg !6712
  %bf.load33 = load i8, i8* %need_operand_change, align 4, !dbg !6713
  %bf.clear34 = and i8 %bf.load33, -3, !dbg !6713
  store i8 %bf.clear34, i8* %need_operand_change, align 4, !dbg !6713
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6714
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !6714
  %bf.load35 = load i32, i32* %34, align 8, !dbg !6714
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !6714
  %cmp37 = icmp eq i32 %bf.clear36, 12, !dbg !6714
  br i1 %cmp37, label %if.then, label %lor.lhs.false, !dbg !6716

lor.lhs.false:                                    ; preds = %for.body
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6717
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !6717
  %bf.load39 = load i32, i32* %36, align 8, !dbg !6717
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !6717
  %cmp41 = icmp eq i32 %bf.clear40, 9, !dbg !6717
  br i1 %cmp41, label %if.then, label %lor.lhs.false43, !dbg !6718

lor.lhs.false43:                                  ; preds = %lor.lhs.false
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6719
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !6719
  %bf.load44 = load i32, i32* %38, align 8, !dbg !6719
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !6719
  %cmp46 = icmp eq i32 %bf.clear45, 8, !dbg !6719
  br i1 %cmp46, label %land.lhs.true, label %lor.lhs.false48, !dbg !6719

lor.lhs.false48:                                  ; preds = %lor.lhs.false43
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6719
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !6719
  %bf.load49 = load i32, i32* %40, align 8, !dbg !6719
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !6719
  %cmp51 = icmp eq i32 %bf.clear50, 7, !dbg !6719
  br i1 %cmp51, label %land.lhs.true, label %lor.lhs.false53, !dbg !6719

lor.lhs.false53:                                  ; preds = %lor.lhs.false48
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6719
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !6719
  %bf.load54 = load i32, i32* %42, align 8, !dbg !6719
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !6719
  %cmp56 = icmp eq i32 %bf.clear55, 9, !dbg !6719
  br i1 %cmp56, label %land.lhs.true, label %lor.lhs.false58, !dbg !6719

lor.lhs.false58:                                  ; preds = %lor.lhs.false53
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6719
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !6719
  %bf.load59 = load i32, i32* %44, align 8, !dbg !6719
  %bf.clear60 = and i32 %bf.load59, 65535, !dbg !6719
  %cmp61 = icmp eq i32 %bf.clear60, 10, !dbg !6719
  br i1 %cmp61, label %land.lhs.true, label %if.end, !dbg !6720

land.lhs.true:                                    ; preds = %lor.lhs.false58, %lor.lhs.false53, %lor.lhs.false48, %lor.lhs.false43
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6721
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !6721
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6721
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 7, !dbg !6721
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6721
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6721
  %cmp63 = icmp ne %struct.rtx_def* %46, null, !dbg !6722
  br i1 %cmp63, label %if.then, label %if.end, !dbg !6723

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %for.body
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6724
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6725
  call void @set_label_offsets(%struct.rtx_def* %47, %struct.rtx_def* %48, i32 0), !dbg !6726
  br label %if.end, !dbg !6726

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false58
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6727
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !6727
  %bf.load65 = load i32, i32* %50, align 8, !dbg !6727
  %bf.clear66 = and i32 %bf.load65, 65535, !dbg !6727
  %cmp67 = icmp eq i32 %bf.clear66, 8, !dbg !6727
  br i1 %cmp67, label %if.then84, label %lor.lhs.false69, !dbg !6727

lor.lhs.false69:                                  ; preds = %if.end
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6727
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !6727
  %bf.load70 = load i32, i32* %52, align 8, !dbg !6727
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !6727
  %cmp72 = icmp eq i32 %bf.clear71, 7, !dbg !6727
  br i1 %cmp72, label %if.then84, label %lor.lhs.false74, !dbg !6727

lor.lhs.false74:                                  ; preds = %lor.lhs.false69
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6727
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !6727
  %bf.load75 = load i32, i32* %54, align 8, !dbg !6727
  %bf.clear76 = and i32 %bf.load75, 65535, !dbg !6727
  %cmp77 = icmp eq i32 %bf.clear76, 9, !dbg !6727
  br i1 %cmp77, label %if.then84, label %lor.lhs.false79, !dbg !6727

lor.lhs.false79:                                  ; preds = %lor.lhs.false74
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6727
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !6727
  %bf.load80 = load i32, i32* %56, align 8, !dbg !6727
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !6727
  %cmp82 = icmp eq i32 %bf.clear81, 10, !dbg !6727
  br i1 %cmp82, label %if.then84, label %if.end437, !dbg !6729

if.then84:                                        ; preds = %lor.lhs.false79, %lor.lhs.false74, %lor.lhs.false69, %if.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_body, metadata !6730, metadata !DIExpression()), !dbg !6732
  %57 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6733
  %u85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !6733
  %fld86 = bitcast %union.u* %u85 to [1 x %union.rtunion_def]*, !dbg !6733
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i64 0, i64 5, !dbg !6733
  %rt_rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**, !dbg !6733
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx88, align 8, !dbg !6733
  store %struct.rtx_def* %58, %struct.rtx_def** %old_body, align 8, !dbg !6732
  call void @llvm.dbg.declare(metadata i32* %old_code, metadata !6734, metadata !DIExpression()), !dbg !6735
  %59 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6736
  %u89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !6736
  %fld90 = bitcast %union.u* %u89 to [1 x %union.rtunion_def]*, !dbg !6736
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i64 0, i64 6, !dbg !6736
  %rt_int = bitcast %union.rtunion_def* %arrayidx91 to i32*, !dbg !6736
  %60 = load i32, i32* %rt_int, align 8, !dbg !6736
  store i32 %60, i32* %old_code, align 4, !dbg !6735
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_notes, metadata !6737, metadata !DIExpression()), !dbg !6738
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6739
  %u92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !6739
  %fld93 = bitcast %union.u* %u92 to [1 x %union.rtunion_def]*, !dbg !6739
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i64 0, i64 7, !dbg !6739
  %rt_rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**, !dbg !6739
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !6739
  store %struct.rtx_def* %62, %struct.rtx_def** %old_notes, align 8, !dbg !6738
  call void @llvm.dbg.declare(metadata i32* %did_elimination, metadata !6740, metadata !DIExpression()), !dbg !6741
  store i32 0, i32* %did_elimination, align 4, !dbg !6741
  call void @llvm.dbg.declare(metadata i32* %operands_changed, metadata !6742, metadata !DIExpression()), !dbg !6743
  store i32 0, i32* %operands_changed, align 4, !dbg !6743
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !6744, metadata !DIExpression()), !dbg !6745
  %63 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6746
  %64 = bitcast %struct.rtx_def* %63 to i32*, !dbg !6746
  %bf.load96 = load i32, i32* %64, align 8, !dbg !6746
  %bf.clear97 = and i32 %bf.load96, 65535, !dbg !6746
  %cmp98 = icmp eq i32 %bf.clear97, 8, !dbg !6746
  br i1 %cmp98, label %cond.true115, label %lor.lhs.false100, !dbg !6746

lor.lhs.false100:                                 ; preds = %if.then84
  %65 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6746
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !6746
  %bf.load101 = load i32, i32* %66, align 8, !dbg !6746
  %bf.clear102 = and i32 %bf.load101, 65535, !dbg !6746
  %cmp103 = icmp eq i32 %bf.clear102, 7, !dbg !6746
  br i1 %cmp103, label %cond.true115, label %lor.lhs.false105, !dbg !6746

lor.lhs.false105:                                 ; preds = %lor.lhs.false100
  %67 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6746
  %68 = bitcast %struct.rtx_def* %67 to i32*, !dbg !6746
  %bf.load106 = load i32, i32* %68, align 8, !dbg !6746
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !6746
  %cmp108 = icmp eq i32 %bf.clear107, 9, !dbg !6746
  br i1 %cmp108, label %cond.true115, label %lor.lhs.false110, !dbg !6746

lor.lhs.false110:                                 ; preds = %lor.lhs.false105
  %69 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6746
  %70 = bitcast %struct.rtx_def* %69 to i32*, !dbg !6746
  %bf.load111 = load i32, i32* %70, align 8, !dbg !6746
  %bf.clear112 = and i32 %bf.load111, 65535, !dbg !6746
  %cmp113 = icmp eq i32 %bf.clear112, 10, !dbg !6746
  br i1 %cmp113, label %cond.true115, label %cond.false136, !dbg !6746

cond.true115:                                     ; preds = %lor.lhs.false110, %lor.lhs.false105, %lor.lhs.false100, %if.then84
  %71 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6746
  %u116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !6746
  %fld117 = bitcast %union.u* %u116 to [1 x %union.rtunion_def]*, !dbg !6746
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld117, i64 0, i64 5, !dbg !6746
  %rt_rtx119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtx_def**, !dbg !6746
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx119, align 8, !dbg !6746
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !6746
  %bf.load120 = load i32, i32* %73, align 8, !dbg !6746
  %bf.clear121 = and i32 %bf.load120, 65535, !dbg !6746
  %cmp122 = icmp eq i32 %bf.clear121, 23, !dbg !6746
  br i1 %cmp122, label %cond.true124, label %cond.false129, !dbg !6746

cond.true124:                                     ; preds = %cond.true115
  %74 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6746
  %u125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1, !dbg !6746
  %fld126 = bitcast %union.u* %u125 to [1 x %union.rtunion_def]*, !dbg !6746
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i64 0, i64 5, !dbg !6746
  %rt_rtx128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**, !dbg !6746
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx128, align 8, !dbg !6746
  br label %cond.end134, !dbg !6746

cond.false129:                                    ; preds = %cond.true115
  %76 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6746
  %77 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6746
  %u130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1, !dbg !6746
  %fld131 = bitcast %union.u* %u130 to [1 x %union.rtunion_def]*, !dbg !6746
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i64 0, i64 5, !dbg !6746
  %rt_rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**, !dbg !6746
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx133, align 8, !dbg !6746
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %76, %struct.rtx_def* %78), !dbg !6746
  br label %cond.end134, !dbg !6746

cond.end134:                                      ; preds = %cond.false129, %cond.true124
  %cond135 = phi %struct.rtx_def* [ %75, %cond.true124 ], [ %call, %cond.false129 ], !dbg !6746
  br label %cond.end137, !dbg !6746

cond.false136:                                    ; preds = %lor.lhs.false110
  br label %cond.end137, !dbg !6746

cond.end137:                                      ; preds = %cond.false136, %cond.end134
  %cond138 = phi %struct.rtx_def* [ %cond135, %cond.end134 ], [ null, %cond.false136 ], !dbg !6746
  store %struct.rtx_def* %cond138, %struct.rtx_def** %set, align 8, !dbg !6745
  %79 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !6747
  %tobool = icmp ne %struct.rtx_def* %79, null, !dbg !6747
  br i1 %tobool, label %land.lhs.true139, label %if.end186, !dbg !6749

land.lhs.true139:                                 ; preds = %cond.end137
  %80 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !6750
  %u140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1, !dbg !6750
  %fld141 = bitcast %union.u* %u140 to [1 x %union.rtunion_def]*, !dbg !6750
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i64 0, i64 0, !dbg !6750
  %rt_rtx143 = bitcast %union.rtunion_def* %arrayidx142 to %struct.rtx_def**, !dbg !6750
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx143, align 8, !dbg !6750
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !6750
  %bf.load144 = load i32, i32* %82, align 8, !dbg !6750
  %bf.clear145 = and i32 %bf.load144, 65535, !dbg !6750
  %cmp146 = icmp eq i32 %bf.clear145, 37, !dbg !6750
  br i1 %cmp146, label %land.lhs.true148, label %if.end186, !dbg !6751

land.lhs.true148:                                 ; preds = %land.lhs.true139
  %83 = load i16*, i16** @reg_renumber, align 8, !dbg !6752
  %84 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !6753
  %u149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1, !dbg !6753
  %fld150 = bitcast %union.u* %u149 to [1 x %union.rtunion_def]*, !dbg !6753
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i64 0, i64 0, !dbg !6753
  %rt_rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**, !dbg !6753
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx152, align 8, !dbg !6753
  %call153 = call i32 @rhs_regno(%struct.rtx_def* %85), !dbg !6753
  %idxprom = zext i32 %call153 to i64, !dbg !6752
  %arrayidx154 = getelementptr inbounds i16, i16* %83, i64 %idxprom, !dbg !6752
  %86 = load i16, i16* %arrayidx154, align 2, !dbg !6752
  %conv155 = sext i16 %86 to i32, !dbg !6752
  %cmp156 = icmp slt i32 %conv155, 0, !dbg !6754
  br i1 %cmp156, label %land.lhs.true158, label %if.end186, !dbg !6755

land.lhs.true158:                                 ; preds = %land.lhs.true148
  %87 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !6756
  %88 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !6757
  %u159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1, !dbg !6757
  %fld160 = bitcast %union.u* %u159 to [1 x %union.rtunion_def]*, !dbg !6757
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i64 0, i64 0, !dbg !6757
  %rt_rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**, !dbg !6757
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx162, align 8, !dbg !6757
  %call163 = call i32 @rhs_regno(%struct.rtx_def* %89), !dbg !6757
  %idxprom164 = zext i32 %call163 to i64, !dbg !6756
  %arrayidx165 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %87, i64 %idxprom164, !dbg !6756
  %90 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx165, align 8, !dbg !6756
  %tobool166 = icmp ne %struct.rtx_def* %90, null, !dbg !6756
  br i1 %tobool166, label %land.lhs.true176, label %lor.lhs.false167, !dbg !6758

lor.lhs.false167:                                 ; preds = %land.lhs.true158
  %91 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !6759
  %92 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !6760
  %u168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !6760
  %fld169 = bitcast %union.u* %u168 to [1 x %union.rtunion_def]*, !dbg !6760
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i64 0, i64 0, !dbg !6760
  %rt_rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**, !dbg !6760
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx171, align 8, !dbg !6760
  %call172 = call i32 @rhs_regno(%struct.rtx_def* %93), !dbg !6760
  %idxprom173 = zext i32 %call172 to i64, !dbg !6759
  %arrayidx174 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %91, i64 %idxprom173, !dbg !6759
  %94 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx174, align 8, !dbg !6759
  %tobool175 = icmp ne %struct.rtx_def* %94, null, !dbg !6761
  br i1 %tobool175, label %land.lhs.true176, label %if.end186, !dbg !6762

land.lhs.true176:                                 ; preds = %lor.lhs.false167, %land.lhs.true158
  %95 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !6763
  %96 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !6764
  %u177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1, !dbg !6764
  %fld178 = bitcast %union.u* %u177 to [1 x %union.rtunion_def]*, !dbg !6764
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i64 0, i64 0, !dbg !6764
  %rt_rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**, !dbg !6764
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx180, align 8, !dbg !6764
  %call181 = call i32 @rhs_regno(%struct.rtx_def* %97), !dbg !6764
  %idxprom182 = zext i32 %call181 to i64, !dbg !6763
  %arrayidx183 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %95, i64 %idxprom182, !dbg !6763
  %98 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx183, align 8, !dbg !6763
  %tobool184 = icmp ne %struct.rtx_def* %98, null, !dbg !6763
  br i1 %tobool184, label %if.then185, label %if.end186, !dbg !6765

if.then185:                                       ; preds = %land.lhs.true176
  br label %for.inc, !dbg !6766

if.end186:                                        ; preds = %land.lhs.true176, %lor.lhs.false167, %land.lhs.true148, %land.lhs.true139, %cond.end137
  %99 = load i32, i32* @num_eliminable, align 4, !dbg !6767
  %tobool187 = icmp ne i32 %99, 0, !dbg !6767
  br i1 %tobool187, label %if.then190, label %lor.lhs.false188, !dbg !6769

lor.lhs.false188:                                 ; preds = %if.end186
  %100 = load i32, i32* @num_eliminable_invariants, align 4, !dbg !6770
  %tobool189 = icmp ne i32 %100, 0, !dbg !6770
  br i1 %tobool189, label %if.then190, label %if.end192, !dbg !6771

if.then190:                                       ; preds = %lor.lhs.false188, %if.end186
  %101 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6772
  %call191 = call i32 @eliminate_regs_in_insn(%struct.rtx_def* %101, i32 0), !dbg !6773
  store i32 %call191, i32* %did_elimination, align 4, !dbg !6774
  br label %if.end192, !dbg !6775

if.end192:                                        ; preds = %if.then190, %lor.lhs.false188
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6776
  %103 = load i8, i8* @spill_indirect_levels, align 1, !dbg !6777
  %conv193 = sext i8 %103 to i32, !dbg !6777
  %104 = load i32, i32* %global.addr, align 4, !dbg !6778
  %call194 = call i32 @find_reloads(%struct.rtx_def* %102, i32 0, i32 %conv193, i32 %104, i16* getelementptr inbounds ([53 x i16], [53 x i16]* @spill_reg_order, i64 0, i64 0)), !dbg !6779
  store i32 %call194, i32* %operands_changed, align 4, !dbg !6780
  %105 = load i32, i32* @flag_expensive_optimizations, align 4, !dbg !6781
  %tobool195 = icmp ne i32 %105, 0, !dbg !6781
  br i1 %tobool195, label %land.lhs.true196, label %if.end378, !dbg !6783

land.lhs.true196:                                 ; preds = %if.end192
  %106 = load i32, i32* @n_reloads, align 4, !dbg !6784
  %cmp197 = icmp sgt i32 %106, 1, !dbg !6785
  br i1 %cmp197, label %if.then199, label %if.end378, !dbg !6786

if.then199:                                       ; preds = %land.lhs.true196
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set200, metadata !6787, metadata !DIExpression()), !dbg !6789
  %107 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6790
  %108 = bitcast %struct.rtx_def* %107 to i32*, !dbg !6790
  %bf.load201 = load i32, i32* %108, align 8, !dbg !6790
  %bf.clear202 = and i32 %bf.load201, 65535, !dbg !6790
  %cmp203 = icmp eq i32 %bf.clear202, 8, !dbg !6790
  br i1 %cmp203, label %cond.true220, label %lor.lhs.false205, !dbg !6790

lor.lhs.false205:                                 ; preds = %if.then199
  %109 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6790
  %110 = bitcast %struct.rtx_def* %109 to i32*, !dbg !6790
  %bf.load206 = load i32, i32* %110, align 8, !dbg !6790
  %bf.clear207 = and i32 %bf.load206, 65535, !dbg !6790
  %cmp208 = icmp eq i32 %bf.clear207, 7, !dbg !6790
  br i1 %cmp208, label %cond.true220, label %lor.lhs.false210, !dbg !6790

lor.lhs.false210:                                 ; preds = %lor.lhs.false205
  %111 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6790
  %112 = bitcast %struct.rtx_def* %111 to i32*, !dbg !6790
  %bf.load211 = load i32, i32* %112, align 8, !dbg !6790
  %bf.clear212 = and i32 %bf.load211, 65535, !dbg !6790
  %cmp213 = icmp eq i32 %bf.clear212, 9, !dbg !6790
  br i1 %cmp213, label %cond.true220, label %lor.lhs.false215, !dbg !6790

lor.lhs.false215:                                 ; preds = %lor.lhs.false210
  %113 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6790
  %114 = bitcast %struct.rtx_def* %113 to i32*, !dbg !6790
  %bf.load216 = load i32, i32* %114, align 8, !dbg !6790
  %bf.clear217 = and i32 %bf.load216, 65535, !dbg !6790
  %cmp218 = icmp eq i32 %bf.clear217, 10, !dbg !6790
  br i1 %cmp218, label %cond.true220, label %cond.false242, !dbg !6790

cond.true220:                                     ; preds = %lor.lhs.false215, %lor.lhs.false210, %lor.lhs.false205, %if.then199
  %115 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6790
  %u221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1, !dbg !6790
  %fld222 = bitcast %union.u* %u221 to [1 x %union.rtunion_def]*, !dbg !6790
  %arrayidx223 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld222, i64 0, i64 5, !dbg !6790
  %rt_rtx224 = bitcast %union.rtunion_def* %arrayidx223 to %struct.rtx_def**, !dbg !6790
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx224, align 8, !dbg !6790
  %117 = bitcast %struct.rtx_def* %116 to i32*, !dbg !6790
  %bf.load225 = load i32, i32* %117, align 8, !dbg !6790
  %bf.clear226 = and i32 %bf.load225, 65535, !dbg !6790
  %cmp227 = icmp eq i32 %bf.clear226, 23, !dbg !6790
  br i1 %cmp227, label %cond.true229, label %cond.false234, !dbg !6790

cond.true229:                                     ; preds = %cond.true220
  %118 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6790
  %u230 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1, !dbg !6790
  %fld231 = bitcast %union.u* %u230 to [1 x %union.rtunion_def]*, !dbg !6790
  %arrayidx232 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld231, i64 0, i64 5, !dbg !6790
  %rt_rtx233 = bitcast %union.rtunion_def* %arrayidx232 to %struct.rtx_def**, !dbg !6790
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx233, align 8, !dbg !6790
  br label %cond.end240, !dbg !6790

cond.false234:                                    ; preds = %cond.true220
  %120 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6790
  %121 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6790
  %u235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1, !dbg !6790
  %fld236 = bitcast %union.u* %u235 to [1 x %union.rtunion_def]*, !dbg !6790
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i64 0, i64 5, !dbg !6790
  %rt_rtx238 = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**, !dbg !6790
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx238, align 8, !dbg !6790
  %call239 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %120, %struct.rtx_def* %122), !dbg !6790
  br label %cond.end240, !dbg !6790

cond.end240:                                      ; preds = %cond.false234, %cond.true229
  %cond241 = phi %struct.rtx_def* [ %119, %cond.true229 ], [ %call239, %cond.false234 ], !dbg !6790
  br label %cond.end243, !dbg !6790

cond.false242:                                    ; preds = %lor.lhs.false215
  br label %cond.end243, !dbg !6790

cond.end243:                                      ; preds = %cond.false242, %cond.end240
  %cond244 = phi %struct.rtx_def* [ %cond241, %cond.end240 ], [ null, %cond.false242 ], !dbg !6790
  store %struct.rtx_def* %cond244, %struct.rtx_def** %set200, align 8, !dbg !6789
  %123 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6791
  %tobool245 = icmp ne %struct.rtx_def* %123, null, !dbg !6791
  br i1 %tobool245, label %land.lhs.true246, label %if.end377, !dbg !6793

land.lhs.true246:                                 ; preds = %cond.end243
  %124 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6794
  %u247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1, !dbg !6794
  %fld248 = bitcast %union.u* %u247 to [1 x %union.rtunion_def]*, !dbg !6794
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i64 0, i64 1, !dbg !6794
  %rt_rtx250 = bitcast %union.rtunion_def* %arrayidx249 to %struct.rtx_def**, !dbg !6794
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx250, align 8, !dbg !6794
  %126 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6795
  %u251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1, !dbg !6795
  %fld252 = bitcast %union.u* %u251 to [1 x %union.rtunion_def]*, !dbg !6795
  %arrayidx253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld252, i64 0, i64 0, !dbg !6795
  %rt_rtx254 = bitcast %union.rtunion_def* %arrayidx253 to %struct.rtx_def**, !dbg !6795
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx254, align 8, !dbg !6795
  %cmp255 = icmp eq %struct.rtx_def* %125, %127, !dbg !6796
  br i1 %cmp255, label %land.lhs.true257, label %lor.lhs.false274, !dbg !6797

land.lhs.true257:                                 ; preds = %land.lhs.true246
  %128 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6798
  %u258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1, !dbg !6798
  %fld259 = bitcast %union.u* %u258 to [1 x %union.rtunion_def]*, !dbg !6798
  %arrayidx260 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld259, i64 0, i64 1, !dbg !6798
  %rt_rtx261 = bitcast %union.rtunion_def* %arrayidx260 to %struct.rtx_def**, !dbg !6798
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx261, align 8, !dbg !6798
  %130 = bitcast %struct.rtx_def* %129 to i32*, !dbg !6798
  %bf.load262 = load i32, i32* %130, align 8, !dbg !6798
  %bf.clear263 = and i32 %bf.load262, 65535, !dbg !6798
  %cmp264 = icmp eq i32 %bf.clear263, 37, !dbg !6798
  br i1 %cmp264, label %land.lhs.true266, label %lor.lhs.false274, !dbg !6799

land.lhs.true266:                                 ; preds = %land.lhs.true257
  %131 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6800
  %u267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1, !dbg !6800
  %fld268 = bitcast %union.u* %u267 to [1 x %union.rtunion_def]*, !dbg !6800
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i64 0, i64 1, !dbg !6800
  %rt_rtx270 = bitcast %union.rtunion_def* %arrayidx269 to %struct.rtx_def**, !dbg !6800
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx270, align 8, !dbg !6800
  %call271 = call i32 @rhs_regno(%struct.rtx_def* %132), !dbg !6800
  %cmp272 = icmp uge i32 %call271, 53, !dbg !6801
  br i1 %cmp272, label %if.then351, label %lor.lhs.false274, !dbg !6802

lor.lhs.false274:                                 ; preds = %land.lhs.true266, %land.lhs.true257, %land.lhs.true246
  %133 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6803
  %u275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1, !dbg !6803
  %fld276 = bitcast %union.u* %u275 to [1 x %union.rtunion_def]*, !dbg !6803
  %arrayidx277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld276, i64 0, i64 1, !dbg !6803
  %rt_rtx278 = bitcast %union.rtunion_def* %arrayidx277 to %struct.rtx_def**, !dbg !6803
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx278, align 8, !dbg !6803
  %135 = bitcast %struct.rtx_def* %134 to i32*, !dbg !6803
  %bf.load279 = load i32, i32* %135, align 8, !dbg !6803
  %bf.clear280 = and i32 %bf.load279, 65535, !dbg !6803
  %cmp281 = icmp eq i32 %bf.clear280, 37, !dbg !6803
  br i1 %cmp281, label %land.lhs.true283, label %if.end377, !dbg !6804

land.lhs.true283:                                 ; preds = %lor.lhs.false274
  %136 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6805
  %u284 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1, !dbg !6805
  %fld285 = bitcast %union.u* %u284 to [1 x %union.rtunion_def]*, !dbg !6805
  %arrayidx286 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld285, i64 0, i64 0, !dbg !6805
  %rt_rtx287 = bitcast %union.rtunion_def* %arrayidx286 to %struct.rtx_def**, !dbg !6805
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx287, align 8, !dbg !6805
  %138 = bitcast %struct.rtx_def* %137 to i32*, !dbg !6805
  %bf.load288 = load i32, i32* %138, align 8, !dbg !6805
  %bf.clear289 = and i32 %bf.load288, 65535, !dbg !6805
  %cmp290 = icmp eq i32 %bf.clear289, 37, !dbg !6805
  br i1 %cmp290, label %land.lhs.true292, label %if.end377, !dbg !6806

land.lhs.true292:                                 ; preds = %land.lhs.true283
  %139 = load i16*, i16** @reg_renumber, align 8, !dbg !6807
  %140 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6808
  %u293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1, !dbg !6808
  %fld294 = bitcast %union.u* %u293 to [1 x %union.rtunion_def]*, !dbg !6808
  %arrayidx295 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld294, i64 0, i64 1, !dbg !6808
  %rt_rtx296 = bitcast %union.rtunion_def* %arrayidx295 to %struct.rtx_def**, !dbg !6808
  %141 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx296, align 8, !dbg !6808
  %call297 = call i32 @rhs_regno(%struct.rtx_def* %141), !dbg !6808
  %idxprom298 = zext i32 %call297 to i64, !dbg !6807
  %arrayidx299 = getelementptr inbounds i16, i16* %139, i64 %idxprom298, !dbg !6807
  %142 = load i16, i16* %arrayidx299, align 2, !dbg !6807
  %conv300 = sext i16 %142 to i32, !dbg !6807
  %cmp301 = icmp slt i32 %conv300, 0, !dbg !6809
  br i1 %cmp301, label %land.lhs.true303, label %if.end377, !dbg !6810

land.lhs.true303:                                 ; preds = %land.lhs.true292
  %143 = load i16*, i16** @reg_renumber, align 8, !dbg !6811
  %144 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6812
  %u304 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1, !dbg !6812
  %fld305 = bitcast %union.u* %u304 to [1 x %union.rtunion_def]*, !dbg !6812
  %arrayidx306 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld305, i64 0, i64 0, !dbg !6812
  %rt_rtx307 = bitcast %union.rtunion_def* %arrayidx306 to %struct.rtx_def**, !dbg !6812
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx307, align 8, !dbg !6812
  %call308 = call i32 @rhs_regno(%struct.rtx_def* %145), !dbg !6812
  %idxprom309 = zext i32 %call308 to i64, !dbg !6811
  %arrayidx310 = getelementptr inbounds i16, i16* %143, i64 %idxprom309, !dbg !6811
  %146 = load i16, i16* %arrayidx310, align 2, !dbg !6811
  %conv311 = sext i16 %146 to i32, !dbg !6811
  %cmp312 = icmp slt i32 %conv311, 0, !dbg !6813
  br i1 %cmp312, label %land.lhs.true314, label %if.end377, !dbg !6814

land.lhs.true314:                                 ; preds = %land.lhs.true303
  %147 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !6815
  %148 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6816
  %u315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1, !dbg !6816
  %fld316 = bitcast %union.u* %u315 to [1 x %union.rtunion_def]*, !dbg !6816
  %arrayidx317 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld316, i64 0, i64 1, !dbg !6816
  %rt_rtx318 = bitcast %union.rtunion_def* %arrayidx317 to %struct.rtx_def**, !dbg !6816
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx318, align 8, !dbg !6816
  %call319 = call i32 @rhs_regno(%struct.rtx_def* %149), !dbg !6816
  %idxprom320 = zext i32 %call319 to i64, !dbg !6815
  %arrayidx321 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %147, i64 %idxprom320, !dbg !6815
  %150 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx321, align 8, !dbg !6815
  %cmp322 = icmp ne %struct.rtx_def* %150, null, !dbg !6817
  br i1 %cmp322, label %land.lhs.true324, label %if.end377, !dbg !6818

land.lhs.true324:                                 ; preds = %land.lhs.true314
  %151 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !6819
  %152 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6820
  %u325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1, !dbg !6820
  %fld326 = bitcast %union.u* %u325 to [1 x %union.rtunion_def]*, !dbg !6820
  %arrayidx327 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld326, i64 0, i64 0, !dbg !6820
  %rt_rtx328 = bitcast %union.rtunion_def* %arrayidx327 to %struct.rtx_def**, !dbg !6820
  %153 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx328, align 8, !dbg !6820
  %call329 = call i32 @rhs_regno(%struct.rtx_def* %153), !dbg !6820
  %idxprom330 = zext i32 %call329 to i64, !dbg !6819
  %arrayidx331 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %151, i64 %idxprom330, !dbg !6819
  %154 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx331, align 8, !dbg !6819
  %cmp332 = icmp ne %struct.rtx_def* %154, null, !dbg !6821
  br i1 %cmp332, label %land.lhs.true334, label %if.end377, !dbg !6822

land.lhs.true334:                                 ; preds = %land.lhs.true324
  %155 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !6823
  %156 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6824
  %u335 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1, !dbg !6824
  %fld336 = bitcast %union.u* %u335 to [1 x %union.rtunion_def]*, !dbg !6824
  %arrayidx337 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld336, i64 0, i64 1, !dbg !6824
  %rt_rtx338 = bitcast %union.rtunion_def* %arrayidx337 to %struct.rtx_def**, !dbg !6824
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx338, align 8, !dbg !6824
  %call339 = call i32 @rhs_regno(%struct.rtx_def* %157), !dbg !6824
  %idxprom340 = zext i32 %call339 to i64, !dbg !6823
  %arrayidx341 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %155, i64 %idxprom340, !dbg !6823
  %158 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx341, align 8, !dbg !6823
  %159 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !6825
  %160 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6826
  %u342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1, !dbg !6826
  %fld343 = bitcast %union.u* %u342 to [1 x %union.rtunion_def]*, !dbg !6826
  %arrayidx344 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld343, i64 0, i64 0, !dbg !6826
  %rt_rtx345 = bitcast %union.rtunion_def* %arrayidx344 to %struct.rtx_def**, !dbg !6826
  %161 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx345, align 8, !dbg !6826
  %call346 = call i32 @rhs_regno(%struct.rtx_def* %161), !dbg !6826
  %idxprom347 = zext i32 %call346 to i64, !dbg !6825
  %arrayidx348 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %159, i64 %idxprom347, !dbg !6825
  %162 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx348, align 8, !dbg !6825
  %call349 = call i32 @rtx_equal_p(%struct.rtx_def* %158, %struct.rtx_def* %162), !dbg !6827
  %tobool350 = icmp ne i32 %call349, 0, !dbg !6827
  br i1 %tobool350, label %if.then351, label %if.end377, !dbg !6828

if.then351:                                       ; preds = %land.lhs.true334, %land.lhs.true266
  %163 = load i8, i8* @ira_conflicts_p, align 1, !dbg !6829
  %tobool352 = icmp ne i8 %163, 0, !dbg !6829
  br i1 %tobool352, label %if.then353, label %if.end364, !dbg !6832

if.then353:                                       ; preds = %if.then351
  %164 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6833
  %u354 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1, !dbg !6833
  %fld355 = bitcast %union.u* %u354 to [1 x %union.rtunion_def]*, !dbg !6833
  %arrayidx356 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld355, i64 0, i64 0, !dbg !6833
  %rt_rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**, !dbg !6833
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx357, align 8, !dbg !6833
  %call358 = call i32 @rhs_regno(%struct.rtx_def* %165), !dbg !6833
  %166 = load %struct.rtx_def*, %struct.rtx_def** %set200, align 8, !dbg !6834
  %u359 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1, !dbg !6834
  %fld360 = bitcast %union.u* %u359 to [1 x %union.rtunion_def]*, !dbg !6834
  %arrayidx361 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld360, i64 0, i64 1, !dbg !6834
  %rt_rtx362 = bitcast %union.rtunion_def* %arrayidx361 to %struct.rtx_def**, !dbg !6834
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx362, align 8, !dbg !6834
  %call363 = call i32 @rhs_regno(%struct.rtx_def* %167), !dbg !6834
  call void @ira_mark_memory_move_deletion(i32 %call358, i32 %call363), !dbg !6835
  br label %if.end364, !dbg !6835

if.end364:                                        ; preds = %if.then353, %if.then351
  %168 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6836
  %call365 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %168), !dbg !6837
  %169 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6838
  %prev = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %169, i32 0, i32 1, !dbg !6840
  %170 = load %struct.insn_chain*, %struct.insn_chain** %prev, align 8, !dbg !6840
  %tobool366 = icmp ne %struct.insn_chain* %170, null, !dbg !6838
  br i1 %tobool366, label %if.then367, label %if.else, !dbg !6841

if.then367:                                       ; preds = %if.end364
  %171 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !6842
  %172 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6843
  %prev368 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %172, i32 0, i32 1, !dbg !6844
  %173 = load %struct.insn_chain*, %struct.insn_chain** %prev368, align 8, !dbg !6844
  %next369 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %173, i32 0, i32 0, !dbg !6845
  store %struct.insn_chain* %171, %struct.insn_chain** %next369, align 8, !dbg !6846
  br label %if.end370, !dbg !6843

if.else:                                          ; preds = %if.end364
  %174 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !6847
  store %struct.insn_chain* %174, %struct.insn_chain** @reload_insn_chain, align 8, !dbg !6848
  br label %if.end370

if.end370:                                        ; preds = %if.else, %if.then367
  %175 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !6849
  %tobool371 = icmp ne %struct.insn_chain* %175, null, !dbg !6849
  br i1 %tobool371, label %if.then372, label %if.end375, !dbg !6851

if.then372:                                       ; preds = %if.end370
  %176 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6852
  %prev373 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %176, i32 0, i32 1, !dbg !6853
  %177 = load %struct.insn_chain*, %struct.insn_chain** %prev373, align 8, !dbg !6853
  %178 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !6854
  %prev374 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %178, i32 0, i32 1, !dbg !6855
  store %struct.insn_chain* %177, %struct.insn_chain** %prev374, align 8, !dbg !6856
  br label %if.end375, !dbg !6854

if.end375:                                        ; preds = %if.then372, %if.end370
  %179 = load %struct.insn_chain*, %struct.insn_chain** @unused_insn_chains, align 8, !dbg !6857
  %180 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6858
  %next376 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %180, i32 0, i32 0, !dbg !6859
  store %struct.insn_chain* %179, %struct.insn_chain** %next376, align 8, !dbg !6860
  %181 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6861
  store %struct.insn_chain* %181, %struct.insn_chain** @unused_insn_chains, align 8, !dbg !6862
  br label %for.inc, !dbg !6863

if.end377:                                        ; preds = %land.lhs.true334, %land.lhs.true324, %land.lhs.true314, %land.lhs.true303, %land.lhs.true292, %land.lhs.true283, %lor.lhs.false274, %cond.end243
  br label %if.end378, !dbg !6864

if.end378:                                        ; preds = %if.end377, %land.lhs.true196, %if.end192
  %182 = load i32, i32* @num_eliminable, align 4, !dbg !6865
  %tobool379 = icmp ne i32 %182, 0, !dbg !6865
  br i1 %tobool379, label %if.then380, label %if.end381, !dbg !6867

if.then380:                                       ; preds = %if.end378
  call void @update_eliminable_offsets(), !dbg !6868
  br label %if.end381, !dbg !6868

if.end381:                                        ; preds = %if.then380, %if.end378
  %183 = load i32, i32* %did_elimination, align 4, !dbg !6869
  %184 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6870
  %need_elim382 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %184, i32 0, i32 5, !dbg !6871
  %185 = trunc i32 %183 to i8, !dbg !6872
  %bf.load383 = load i8, i8* %need_elim382, align 4, !dbg !6872
  %bf.value = and i8 %185, 1, !dbg !6872
  %bf.shl = shl i8 %bf.value, 2, !dbg !6872
  %bf.clear384 = and i8 %bf.load383, -5, !dbg !6872
  %bf.set385 = or i8 %bf.clear384, %bf.shl, !dbg !6872
  store i8 %bf.set385, i8* %need_elim382, align 4, !dbg !6872
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !6872
  %186 = load i32, i32* @n_reloads, align 4, !dbg !6873
  %cmp386 = icmp sgt i32 %186, 0, !dbg !6874
  %conv387 = zext i1 %cmp386 to i32, !dbg !6874
  %187 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6875
  %need_reload388 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %187, i32 0, i32 5, !dbg !6876
  %188 = trunc i32 %conv387 to i8, !dbg !6877
  %bf.load389 = load i8, i8* %need_reload388, align 4, !dbg !6877
  %bf.value390 = and i8 %188, 1, !dbg !6877
  %bf.clear391 = and i8 %bf.load389, -2, !dbg !6877
  %bf.set392 = or i8 %bf.clear391, %bf.value390, !dbg !6877
  store i8 %bf.set392, i8* %need_reload388, align 4, !dbg !6877
  %bf.result.cast393 = zext i8 %bf.value390 to i32, !dbg !6877
  %189 = load i32, i32* %operands_changed, align 4, !dbg !6878
  %190 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6879
  %need_operand_change394 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %190, i32 0, i32 5, !dbg !6880
  %191 = trunc i32 %189 to i8, !dbg !6881
  %bf.load395 = load i8, i8* %need_operand_change394, align 4, !dbg !6881
  %bf.value396 = and i8 %191, 1, !dbg !6881
  %bf.shl397 = shl i8 %bf.value396, 1, !dbg !6881
  %bf.clear398 = and i8 %bf.load395, -3, !dbg !6881
  %bf.set399 = or i8 %bf.clear398, %bf.shl397, !dbg !6881
  store i8 %bf.set399, i8* %need_operand_change394, align 4, !dbg !6881
  %bf.result.cast400 = zext i8 %bf.value396 to i32, !dbg !6881
  %192 = load i32, i32* %did_elimination, align 4, !dbg !6882
  %tobool401 = icmp ne i32 %192, 0, !dbg !6882
  br i1 %tobool401, label %if.then402, label %if.end432, !dbg !6884

if.then402:                                       ; preds = %if.end381
  %193 = load i8*, i8** @reload_insn_firstobj, align 8, !dbg !6885
  %194 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !6885
  %195 = bitcast %struct._obstack_chunk* %194 to i8*, !dbg !6885
  %sub.ptr.lhs.cast403 = ptrtoint i8* %193 to i64, !dbg !6885
  %sub.ptr.rhs.cast404 = ptrtoint i8* %195 to i64, !dbg !6885
  %sub.ptr.sub405 = sub i64 %sub.ptr.lhs.cast403, %sub.ptr.rhs.cast404, !dbg !6885
  store i64 %sub.ptr.sub405, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !6885
  %196 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !6885
  %cmp406 = icmp sgt i64 %196, 0, !dbg !6885
  br i1 %cmp406, label %land.lhs.true408, label %cond.false416, !dbg !6885

land.lhs.true408:                                 ; preds = %if.then402
  %197 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !6885
  %198 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !6885
  %199 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !6885
  %200 = bitcast %struct._obstack_chunk* %199 to i8*, !dbg !6885
  %sub.ptr.lhs.cast409 = ptrtoint i8* %198 to i64, !dbg !6885
  %sub.ptr.rhs.cast410 = ptrtoint i8* %200 to i64, !dbg !6885
  %sub.ptr.sub411 = sub i64 %sub.ptr.lhs.cast409, %sub.ptr.rhs.cast410, !dbg !6885
  %cmp412 = icmp slt i64 %197, %sub.ptr.sub411, !dbg !6885
  br i1 %cmp412, label %cond.true414, label %cond.false416, !dbg !6885

cond.true414:                                     ; preds = %land.lhs.true408
  %201 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !6885
  %202 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !6885
  %203 = bitcast %struct._obstack_chunk* %202 to i8*, !dbg !6885
  %add.ptr415 = getelementptr inbounds i8, i8* %203, i64 %201, !dbg !6885
  store i8* %add.ptr415, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !6885
  store i8* %add.ptr415, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !6885
  %204 = ptrtoint i8* %add.ptr415 to i64, !dbg !6885
  br label %cond.end418, !dbg !6885

cond.false416:                                    ; preds = %land.lhs.true408, %if.then402
  %205 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !6885
  %206 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !6885
  %207 = bitcast %struct._obstack_chunk* %206 to i8*, !dbg !6885
  %add.ptr417 = getelementptr inbounds i8, i8* %207, i64 %205, !dbg !6885
  call void @obstack_free(%struct.obstack* @reload_obstack, i8* %add.ptr417), !dbg !6885
  br label %cond.end418, !dbg !6885

cond.end418:                                      ; preds = %cond.false416, %cond.true414
  %cond419 = phi i64 [ %204, %cond.true414 ], [ 0, %cond.false416 ], !dbg !6885
  %208 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8, !dbg !6887
  %209 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6888
  %u420 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1, !dbg !6888
  %fld421 = bitcast %union.u* %u420 to [1 x %union.rtunion_def]*, !dbg !6888
  %arrayidx422 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld421, i64 0, i64 5, !dbg !6888
  %rt_rtx423 = bitcast %union.rtunion_def* %arrayidx422 to %struct.rtx_def**, !dbg !6888
  store %struct.rtx_def* %208, %struct.rtx_def** %rt_rtx423, align 8, !dbg !6889
  %210 = load i32, i32* %old_code, align 4, !dbg !6890
  %211 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6891
  %u424 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1, !dbg !6891
  %fld425 = bitcast %union.u* %u424 to [1 x %union.rtunion_def]*, !dbg !6891
  %arrayidx426 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld425, i64 0, i64 6, !dbg !6891
  %rt_int427 = bitcast %union.rtunion_def* %arrayidx426 to i32*, !dbg !6891
  store i32 %210, i32* %rt_int427, align 8, !dbg !6892
  %212 = load %struct.rtx_def*, %struct.rtx_def** %old_notes, align 8, !dbg !6893
  %213 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6894
  %u428 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %213, i32 0, i32 1, !dbg !6894
  %fld429 = bitcast %union.u* %u428 to [1 x %union.rtunion_def]*, !dbg !6894
  %arrayidx430 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld429, i64 0, i64 7, !dbg !6894
  %rt_rtx431 = bitcast %union.rtunion_def* %arrayidx430 to %struct.rtx_def**, !dbg !6894
  store %struct.rtx_def* %212, %struct.rtx_def** %rt_rtx431, align 8, !dbg !6895
  store i32 1, i32* @something_needs_elimination, align 4, !dbg !6896
  br label %if.end432, !dbg !6897

if.end432:                                        ; preds = %cond.end418, %if.end381
  %214 = load i32, i32* %operands_changed, align 4, !dbg !6898
  %215 = load i32, i32* @something_needs_operands_changed, align 4, !dbg !6899
  %or = or i32 %215, %214, !dbg !6899
  store i32 %or, i32* @something_needs_operands_changed, align 4, !dbg !6899
  %216 = load i32, i32* @n_reloads, align 4, !dbg !6900
  %cmp433 = icmp ne i32 %216, 0, !dbg !6902
  br i1 %cmp433, label %if.then435, label %if.end436, !dbg !6903

if.then435:                                       ; preds = %if.end432
  %217 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6904
  call void @copy_reloads(%struct.insn_chain* %217), !dbg !6906
  %218 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6907
  %219 = load %struct.insn_chain**, %struct.insn_chain*** %pprev_reload, align 8, !dbg !6908
  store %struct.insn_chain* %218, %struct.insn_chain** %219, align 8, !dbg !6909
  %220 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !6910
  %next_need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %220, i32 0, i32 2, !dbg !6911
  store %struct.insn_chain** %next_need_reload, %struct.insn_chain*** %pprev_reload, align 8, !dbg !6912
  br label %if.end436, !dbg !6913

if.end436:                                        ; preds = %if.then435, %if.end432
  br label %if.end437, !dbg !6914

if.end437:                                        ; preds = %if.end436, %lor.lhs.false79
  br label %for.inc, !dbg !6915

for.inc:                                          ; preds = %if.end437, %if.end375, %if.then185
  %221 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !6916
  store %struct.insn_chain* %221, %struct.insn_chain** %chain, align 8, !dbg !6917
  br label %for.cond, !dbg !6918, !llvm.loop !6919

for.end:                                          ; preds = %for.cond
  %222 = load %struct.insn_chain**, %struct.insn_chain*** %pprev_reload, align 8, !dbg !6921
  store %struct.insn_chain* null, %struct.insn_chain** %222, align 8, !dbg !6922
  ret void, !dbg !6923
}

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @verify_initial_elim_offsets() #0 !dbg !6924 {
entry:
  %retval = alloca i8, align 1
  %t = alloca i64, align 8
  %ep = alloca %struct.elim_table*, align 8
  call void @llvm.dbg.declare(metadata i64* %t, metadata !6925, metadata !DIExpression()), !dbg !6926
  %0 = load i32, i32* @num_eliminable, align 4, !dbg !6927
  %tobool = icmp ne i32 %0, 0, !dbg !6927
  br i1 %tobool, label %if.end, label %if.then, !dbg !6929

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !6930
  br label %return, !dbg !6930

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.elim_table** %ep, metadata !6931, metadata !DIExpression()), !dbg !6933
  %1 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !6934
  store %struct.elim_table* %1, %struct.elim_table** %ep, align 8, !dbg !6936
  br label %for.cond, !dbg !6937

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6938
  %3 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !6940
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %3, i64 4, !dbg !6940
  %cmp = icmp ult %struct.elim_table* %2, %arrayidx, !dbg !6941
  br i1 %cmp, label %for.body, label %for.end, !dbg !6942

for.body:                                         ; preds = %for.cond
  %4 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6943
  %from = getelementptr inbounds %struct.elim_table, %struct.elim_table* %4, i32 0, i32 0, !dbg !6943
  %5 = load i32, i32* %from, align 8, !dbg !6943
  %6 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6943
  %to = getelementptr inbounds %struct.elim_table, %struct.elim_table* %6, i32 0, i32 1, !dbg !6943
  %7 = load i32, i32* %to, align 4, !dbg !6943
  %call = call i64 @ix86_initial_elimination_offset(i32 %5, i32 %7), !dbg !6943
  store i64 %call, i64* %t, align 8, !dbg !6943
  %8 = load i64, i64* %t, align 8, !dbg !6945
  %9 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6947
  %initial_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %9, i32 0, i32 2, !dbg !6948
  %10 = load i64, i64* %initial_offset, align 8, !dbg !6948
  %cmp1 = icmp ne i64 %8, %10, !dbg !6949
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6950

if.then2:                                         ; preds = %for.body
  store i8 0, i8* %retval, align 1, !dbg !6951
  br label %return, !dbg !6951

if.end3:                                          ; preds = %for.body
  br label %for.inc, !dbg !6952

for.inc:                                          ; preds = %if.end3
  %11 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6953
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %11, i32 1, !dbg !6953
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8, !dbg !6953
  br label %for.cond, !dbg !6954, !llvm.loop !6955

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !6957
  br label %return, !dbg !6957

return:                                           ; preds = %for.end, %if.then2, %if.then
  %12 = load i8, i8* %retval, align 1, !dbg !6958
  ret i8 %12, !dbg !6958
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_eliminables(i64* %pset) #0 !dbg !6959 {
entry:
  %pset.addr = alloca i64*, align 8
  %previous_frame_pointer_needed = alloca i32, align 4
  %ep = alloca %struct.elim_table*, align 8
  %op = alloca %struct.elim_table*, align 8
  %new_to = alloca i32, align 4
  store i64* %pset, i64** %pset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pset.addr, metadata !6962, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.declare(metadata i32* %previous_frame_pointer_needed, metadata !6964, metadata !DIExpression()), !dbg !6965
  %0 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !6966
  %conv = zext i8 %0 to i32, !dbg !6966
  store i32 %conv, i32* %previous_frame_pointer_needed, align 4, !dbg !6965
  call void @llvm.dbg.declare(metadata %struct.elim_table** %ep, metadata !6967, metadata !DIExpression()), !dbg !6968
  %1 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !6969
  store %struct.elim_table* %1, %struct.elim_table** %ep, align 8, !dbg !6971
  br label %for.cond, !dbg !6972

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6973
  %3 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !6975
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %3, i64 4, !dbg !6975
  %cmp = icmp ult %struct.elim_table* %2, %arrayidx, !dbg !6976
  br i1 %cmp, label %for.body, label %for.end, !dbg !6977

for.body:                                         ; preds = %for.cond
  %4 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6978
  %from = getelementptr inbounds %struct.elim_table, %struct.elim_table* %4, i32 0, i32 0, !dbg !6980
  %5 = load i32, i32* %from, align 8, !dbg !6980
  %cmp2 = icmp eq i32 %5, 6, !dbg !6981
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false, !dbg !6982

land.lhs.true:                                    ; preds = %for.body
  %6 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 102), align 8, !dbg !6983
  %call = call zeroext i8 %6(), !dbg !6984
  %conv4 = zext i8 %call to i32, !dbg !6984
  %tobool = icmp ne i32 %conv4, 0, !dbg !6984
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6985

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body
  %7 = load i8 (i32, i32)*, i8 (i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 103), align 8, !dbg !6986
  %8 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6987
  %from5 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i32 0, i32 0, !dbg !6988
  %9 = load i32, i32* %from5, align 8, !dbg !6988
  %10 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6989
  %to = getelementptr inbounds %struct.elim_table, %struct.elim_table* %10, i32 0, i32 1, !dbg !6990
  %11 = load i32, i32* %to, align 4, !dbg !6990
  %call6 = call zeroext i8 %7(i32 %9, i32 %11), !dbg !6991
  %tobool7 = icmp ne i8 %call6, 0, !dbg !6991
  br i1 %tobool7, label %if.end, label %if.then, !dbg !6992

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %12 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6993
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %12, i32 0, i32 3, !dbg !6994
  store i32 0, i32* %can_eliminate, align 8, !dbg !6995
  br label %if.end, !dbg !6993

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !6996

for.inc:                                          ; preds = %if.end
  %13 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !6997
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %13, i32 1, !dbg !6997
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8, !dbg !6997
  br label %for.cond, !dbg !6998, !llvm.loop !6999

for.end:                                          ; preds = %for.cond
  %14 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !7001
  store %struct.elim_table* %14, %struct.elim_table** %ep, align 8, !dbg !7003
  br label %for.cond8, !dbg !7004

for.cond8:                                        ; preds = %for.inc56, %for.end
  %15 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7005
  %16 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !7007
  %arrayidx9 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %16, i64 4, !dbg !7007
  %cmp10 = icmp ult %struct.elim_table* %15, %arrayidx9, !dbg !7008
  br i1 %cmp10, label %for.body12, label %for.end58, !dbg !7009

for.body12:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata %struct.elim_table** %op, metadata !7010, metadata !DIExpression()), !dbg !7012
  call void @llvm.dbg.declare(metadata i32* %new_to, metadata !7013, metadata !DIExpression()), !dbg !7014
  store i32 -1, i32* %new_to, align 4, !dbg !7014
  %17 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7015
  %can_eliminate13 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %17, i32 0, i32 3, !dbg !7017
  %18 = load i32, i32* %can_eliminate13, align 8, !dbg !7017
  %tobool14 = icmp ne i32 %18, 0, !dbg !7015
  br i1 %tobool14, label %if.end55, label %land.lhs.true15, !dbg !7018

land.lhs.true15:                                  ; preds = %for.body12
  %19 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7019
  %can_eliminate_previous = getelementptr inbounds %struct.elim_table, %struct.elim_table* %19, i32 0, i32 4, !dbg !7020
  %20 = load i32, i32* %can_eliminate_previous, align 4, !dbg !7020
  %tobool16 = icmp ne i32 %20, 0, !dbg !7019
  br i1 %tobool16, label %if.then17, label %if.end55, !dbg !7021

if.then17:                                        ; preds = %land.lhs.true15
  %21 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !7022
  store %struct.elim_table* %21, %struct.elim_table** %op, align 8, !dbg !7025
  br label %for.cond18, !dbg !7026

for.cond18:                                       ; preds = %for.inc33, %if.then17
  %22 = load %struct.elim_table*, %struct.elim_table** %op, align 8, !dbg !7027
  %23 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !7029
  %arrayidx19 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %23, i64 4, !dbg !7029
  %cmp20 = icmp ult %struct.elim_table* %22, %arrayidx19, !dbg !7030
  br i1 %cmp20, label %for.body22, label %for.end35, !dbg !7031

for.body22:                                       ; preds = %for.cond18
  %24 = load %struct.elim_table*, %struct.elim_table** %op, align 8, !dbg !7032
  %from23 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %24, i32 0, i32 0, !dbg !7034
  %25 = load i32, i32* %from23, align 8, !dbg !7034
  %26 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7035
  %from24 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %26, i32 0, i32 0, !dbg !7036
  %27 = load i32, i32* %from24, align 8, !dbg !7036
  %cmp25 = icmp eq i32 %25, %27, !dbg !7037
  br i1 %cmp25, label %land.lhs.true27, label %if.end32, !dbg !7038

land.lhs.true27:                                  ; preds = %for.body22
  %28 = load %struct.elim_table*, %struct.elim_table** %op, align 8, !dbg !7039
  %can_eliminate28 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %28, i32 0, i32 3, !dbg !7040
  %29 = load i32, i32* %can_eliminate28, align 8, !dbg !7040
  %tobool29 = icmp ne i32 %29, 0, !dbg !7039
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !7041

if.then30:                                        ; preds = %land.lhs.true27
  %30 = load %struct.elim_table*, %struct.elim_table** %op, align 8, !dbg !7042
  %to31 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %30, i32 0, i32 1, !dbg !7044
  %31 = load i32, i32* %to31, align 4, !dbg !7044
  store i32 %31, i32* %new_to, align 4, !dbg !7045
  br label %for.end35, !dbg !7046

if.end32:                                         ; preds = %land.lhs.true27, %for.body22
  br label %for.inc33, !dbg !7040

for.inc33:                                        ; preds = %if.end32
  %32 = load %struct.elim_table*, %struct.elim_table** %op, align 8, !dbg !7047
  %incdec.ptr34 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %32, i32 1, !dbg !7047
  store %struct.elim_table* %incdec.ptr34, %struct.elim_table** %op, align 8, !dbg !7047
  br label %for.cond18, !dbg !7048, !llvm.loop !7049

for.end35:                                        ; preds = %if.then30, %for.cond18
  %33 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !7051
  store %struct.elim_table* %33, %struct.elim_table** %op, align 8, !dbg !7053
  br label %for.cond36, !dbg !7054

for.cond36:                                       ; preds = %for.inc52, %for.end35
  %34 = load %struct.elim_table*, %struct.elim_table** %op, align 8, !dbg !7055
  %35 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !7057
  %arrayidx37 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %35, i64 4, !dbg !7057
  %cmp38 = icmp ult %struct.elim_table* %34, %arrayidx37, !dbg !7058
  br i1 %cmp38, label %for.body40, label %for.end54, !dbg !7059

for.body40:                                       ; preds = %for.cond36
  %36 = load %struct.elim_table*, %struct.elim_table** %op, align 8, !dbg !7060
  %from41 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %36, i32 0, i32 0, !dbg !7062
  %37 = load i32, i32* %from41, align 8, !dbg !7062
  %38 = load i32, i32* %new_to, align 4, !dbg !7063
  %cmp42 = icmp eq i32 %37, %38, !dbg !7064
  br i1 %cmp42, label %land.lhs.true44, label %if.end51, !dbg !7065

land.lhs.true44:                                  ; preds = %for.body40
  %39 = load %struct.elim_table*, %struct.elim_table** %op, align 8, !dbg !7066
  %to45 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %39, i32 0, i32 1, !dbg !7067
  %40 = load i32, i32* %to45, align 4, !dbg !7067
  %41 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7068
  %to46 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %41, i32 0, i32 1, !dbg !7069
  %42 = load i32, i32* %to46, align 4, !dbg !7069
  %cmp47 = icmp eq i32 %40, %42, !dbg !7070
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !7071

if.then49:                                        ; preds = %land.lhs.true44
  %43 = load %struct.elim_table*, %struct.elim_table** %op, align 8, !dbg !7072
  %can_eliminate50 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %43, i32 0, i32 3, !dbg !7073
  store i32 0, i32* %can_eliminate50, align 8, !dbg !7074
  br label %if.end51, !dbg !7072

if.end51:                                         ; preds = %if.then49, %land.lhs.true44, %for.body40
  br label %for.inc52, !dbg !7069

for.inc52:                                        ; preds = %if.end51
  %44 = load %struct.elim_table*, %struct.elim_table** %op, align 8, !dbg !7075
  %incdec.ptr53 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %44, i32 1, !dbg !7075
  store %struct.elim_table* %incdec.ptr53, %struct.elim_table** %op, align 8, !dbg !7075
  br label %for.cond36, !dbg !7076, !llvm.loop !7077

for.end54:                                        ; preds = %for.cond36
  br label %if.end55, !dbg !7079

if.end55:                                         ; preds = %for.end54, %land.lhs.true15, %for.body12
  br label %for.inc56, !dbg !7080

for.inc56:                                        ; preds = %if.end55
  %45 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7081
  %incdec.ptr57 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %45, i32 1, !dbg !7081
  store %struct.elim_table* %incdec.ptr57, %struct.elim_table** %ep, align 8, !dbg !7081
  br label %for.cond8, !dbg !7082, !llvm.loop !7083

for.end58:                                        ; preds = %for.cond8
  store i8 1, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !7085
  %46 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !7086
  store %struct.elim_table* %46, %struct.elim_table** %ep, align 8, !dbg !7088
  br label %for.cond59, !dbg !7089

for.cond59:                                       ; preds = %for.inc87, %for.end58
  %47 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7090
  %48 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !7092
  %arrayidx60 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %48, i64 4, !dbg !7092
  %cmp61 = icmp ult %struct.elim_table* %47, %arrayidx60, !dbg !7093
  br i1 %cmp61, label %for.body63, label %for.end89, !dbg !7094

for.body63:                                       ; preds = %for.cond59
  %49 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7095
  %can_eliminate64 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %49, i32 0, i32 3, !dbg !7098
  %50 = load i32, i32* %can_eliminate64, align 8, !dbg !7098
  %tobool65 = icmp ne i32 %50, 0, !dbg !7095
  br i1 %tobool65, label %land.lhs.true66, label %if.end77, !dbg !7099

land.lhs.true66:                                  ; preds = %for.body63
  %51 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7100
  %from67 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %51, i32 0, i32 0, !dbg !7101
  %52 = load i32, i32* %from67, align 8, !dbg !7101
  %cmp68 = icmp eq i32 %52, 20, !dbg !7102
  br i1 %cmp68, label %land.lhs.true70, label %if.end77, !dbg !7103

land.lhs.true70:                                  ; preds = %land.lhs.true66
  %53 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7104
  %to71 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %53, i32 0, i32 1, !dbg !7105
  %54 = load i32, i32* %to71, align 4, !dbg !7105
  %cmp72 = icmp ne i32 %54, 6, !dbg !7106
  br i1 %cmp72, label %land.lhs.true74, label %if.end77, !dbg !7107

land.lhs.true74:                                  ; preds = %land.lhs.true70
  %55 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 43), align 1, !dbg !7108
  %tobool75 = icmp ne i8 %55, 0, !dbg !7109
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !7110

if.then76:                                        ; preds = %land.lhs.true74
  store i8 0, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !7111
  br label %if.end77, !dbg !7112

if.end77:                                         ; preds = %if.then76, %land.lhs.true74, %land.lhs.true70, %land.lhs.true66, %for.body63
  %56 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7113
  %can_eliminate78 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %56, i32 0, i32 3, !dbg !7115
  %57 = load i32, i32* %can_eliminate78, align 8, !dbg !7115
  %tobool79 = icmp ne i32 %57, 0, !dbg !7113
  br i1 %tobool79, label %if.end86, label %land.lhs.true80, !dbg !7116

land.lhs.true80:                                  ; preds = %if.end77
  %58 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7117
  %can_eliminate_previous81 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %58, i32 0, i32 4, !dbg !7118
  %59 = load i32, i32* %can_eliminate_previous81, align 4, !dbg !7118
  %tobool82 = icmp ne i32 %59, 0, !dbg !7117
  br i1 %tobool82, label %if.then83, label %if.end86, !dbg !7119

if.then83:                                        ; preds = %land.lhs.true80
  %60 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7120
  %can_eliminate_previous84 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %60, i32 0, i32 4, !dbg !7122
  store i32 0, i32* %can_eliminate_previous84, align 4, !dbg !7123
  %61 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7124
  %from85 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %61, i32 0, i32 0, !dbg !7124
  %62 = load i32, i32* %from85, align 8, !dbg !7124
  %sh_prom = zext i32 %62 to i64, !dbg !7124
  %shl = shl i64 1, %sh_prom, !dbg !7124
  %63 = load i64*, i64** %pset.addr, align 8, !dbg !7124
  %64 = load i64, i64* %63, align 8, !dbg !7124
  %or = or i64 %64, %shl, !dbg !7124
  store i64 %or, i64* %63, align 8, !dbg !7124
  %65 = load i32, i32* @num_eliminable, align 4, !dbg !7125
  %dec = add nsw i32 %65, -1, !dbg !7125
  store i32 %dec, i32* @num_eliminable, align 4, !dbg !7125
  br label %if.end86, !dbg !7126

if.end86:                                         ; preds = %if.then83, %land.lhs.true80, %if.end77
  br label %for.inc87, !dbg !7127

for.inc87:                                        ; preds = %if.end86
  %66 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7128
  %incdec.ptr88 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %66, i32 1, !dbg !7128
  store %struct.elim_table* %incdec.ptr88, %struct.elim_table** %ep, align 8, !dbg !7128
  br label %for.cond59, !dbg !7129, !llvm.loop !7130

for.end89:                                        ; preds = %for.cond59
  %67 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !7132
  %conv90 = zext i8 %67 to i32, !dbg !7132
  %tobool91 = icmp ne i32 %conv90, 0, !dbg !7132
  br i1 %tobool91, label %land.lhs.true92, label %if.end96, !dbg !7134

land.lhs.true92:                                  ; preds = %for.end89
  %68 = load i32, i32* %previous_frame_pointer_needed, align 4, !dbg !7135
  %tobool93 = icmp ne i32 %68, 0, !dbg !7135
  br i1 %tobool93, label %if.end96, label %if.then94, !dbg !7136

if.then94:                                        ; preds = %land.lhs.true92
  %69 = load i64*, i64** %pset.addr, align 8, !dbg !7137
  %70 = load i64, i64* %69, align 8, !dbg !7137
  %or95 = or i64 %70, 64, !dbg !7137
  store i64 %or95, i64* %69, align 8, !dbg !7137
  br label %if.end96, !dbg !7137

if.end96:                                         ; preds = %if.then94, %land.lhs.true92, %for.end89
  ret void, !dbg !7138
}

; Function Attrs: noinline nounwind uwtable
define internal void @select_reload_regs() #0 !dbg !7139 {
entry:
  %chain = alloca %struct.insn_chain*, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain, metadata !7140, metadata !DIExpression()), !dbg !7141
  %0 = load %struct.insn_chain*, %struct.insn_chain** @insns_need_reload, align 8, !dbg !7142
  store %struct.insn_chain* %0, %struct.insn_chain** %chain, align 8, !dbg !7144
  br label %for.cond, !dbg !7145

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7146
  %cmp = icmp ne %struct.insn_chain* %1, null, !dbg !7148
  br i1 %cmp, label %for.body, label %for.end, !dbg !7149

for.body:                                         ; preds = %for.cond
  %2 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7150
  call void @find_reload_regs(%struct.insn_chain* %2), !dbg !7151
  br label %for.inc, !dbg !7151

for.inc:                                          ; preds = %for.body
  %3 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7152
  %next_need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %3, i32 0, i32 2, !dbg !7153
  %4 = load %struct.insn_chain*, %struct.insn_chain** %next_need_reload, align 8, !dbg !7153
  store %struct.insn_chain* %4, %struct.insn_chain** %chain, align 8, !dbg !7154
  br label %for.cond, !dbg !7155, !llvm.loop !7156

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7158
}

; Function Attrs: noinline nounwind uwtable
define internal void @delete_caller_save_insns() #0 !dbg !7159 {
entry:
  %c = alloca %struct.insn_chain*, align 8
  %next = alloca %struct.insn_chain*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %c, metadata !7160, metadata !DIExpression()), !dbg !7161
  %0 = load %struct.insn_chain*, %struct.insn_chain** @reload_insn_chain, align 8, !dbg !7162
  store %struct.insn_chain* %0, %struct.insn_chain** %c, align 8, !dbg !7161
  br label %while.cond, !dbg !7163

while.cond:                                       ; preds = %if.end21, %entry
  %1 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7164
  %cmp = icmp ne %struct.insn_chain* %1, null, !dbg !7165
  br i1 %cmp, label %while.body, label %while.end22, !dbg !7163

while.body:                                       ; preds = %while.cond
  br label %while.cond1, !dbg !7166

while.cond1:                                      ; preds = %if.end16, %while.body
  %2 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7168
  %cmp2 = icmp ne %struct.insn_chain* %2, null, !dbg !7169
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7170

land.rhs:                                         ; preds = %while.cond1
  %3 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7171
  %is_caller_save_insn = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %3, i32 0, i32 5, !dbg !7172
  %bf.load = load i8, i8* %is_caller_save_insn, align 4, !dbg !7172
  %bf.lshr = lshr i8 %bf.load, 3, !dbg !7172
  %bf.clear = and i8 %bf.lshr, 1, !dbg !7172
  %bf.cast = zext i8 %bf.clear to i32, !dbg !7172
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7170
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond1
  %4 = phi i1 [ false, %while.cond1 ], [ %tobool, %land.rhs ], !dbg !7173
  br i1 %4, label %while.body3, label %while.end, !dbg !7166

while.body3:                                      ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %next, metadata !7174, metadata !DIExpression()), !dbg !7176
  %5 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7177
  %next4 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %5, i32 0, i32 0, !dbg !7178
  %6 = load %struct.insn_chain*, %struct.insn_chain** %next4, align 8, !dbg !7178
  store %struct.insn_chain* %6, %struct.insn_chain** %next, align 8, !dbg !7176
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !7179, metadata !DIExpression()), !dbg !7180
  %7 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7181
  %insn5 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %7, i32 0, i32 3, !dbg !7182
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn5, align 8, !dbg !7182
  store %struct.rtx_def* %8, %struct.rtx_def** %insn, align 8, !dbg !7180
  %9 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7183
  %10 = load %struct.insn_chain*, %struct.insn_chain** @reload_insn_chain, align 8, !dbg !7185
  %cmp6 = icmp eq %struct.insn_chain* %9, %10, !dbg !7186
  br i1 %cmp6, label %if.then, label %if.end, !dbg !7187

if.then:                                          ; preds = %while.body3
  %11 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !7188
  store %struct.insn_chain* %11, %struct.insn_chain** @reload_insn_chain, align 8, !dbg !7189
  br label %if.end, !dbg !7190

if.end:                                           ; preds = %if.then, %while.body3
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7191
  %call = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %12), !dbg !7192
  %13 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !7193
  %tobool7 = icmp ne %struct.insn_chain* %13, null, !dbg !7193
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !7195

if.then8:                                         ; preds = %if.end
  %14 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7196
  %prev = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %14, i32 0, i32 1, !dbg !7197
  %15 = load %struct.insn_chain*, %struct.insn_chain** %prev, align 8, !dbg !7197
  %16 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !7198
  %prev9 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %16, i32 0, i32 1, !dbg !7199
  store %struct.insn_chain* %15, %struct.insn_chain** %prev9, align 8, !dbg !7200
  br label %if.end10, !dbg !7198

if.end10:                                         ; preds = %if.then8, %if.end
  %17 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7201
  %prev11 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %17, i32 0, i32 1, !dbg !7203
  %18 = load %struct.insn_chain*, %struct.insn_chain** %prev11, align 8, !dbg !7203
  %tobool12 = icmp ne %struct.insn_chain* %18, null, !dbg !7201
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !7204

if.then13:                                        ; preds = %if.end10
  %19 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !7205
  %20 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7206
  %prev14 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %20, i32 0, i32 1, !dbg !7207
  %21 = load %struct.insn_chain*, %struct.insn_chain** %prev14, align 8, !dbg !7207
  %next15 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %21, i32 0, i32 0, !dbg !7208
  store %struct.insn_chain* %19, %struct.insn_chain** %next15, align 8, !dbg !7209
  br label %if.end16, !dbg !7206

if.end16:                                         ; preds = %if.then13, %if.end10
  %22 = load %struct.insn_chain*, %struct.insn_chain** @unused_insn_chains, align 8, !dbg !7210
  %23 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7211
  %next17 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %23, i32 0, i32 0, !dbg !7212
  store %struct.insn_chain* %22, %struct.insn_chain** %next17, align 8, !dbg !7213
  %24 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7214
  store %struct.insn_chain* %24, %struct.insn_chain** @unused_insn_chains, align 8, !dbg !7215
  %25 = load %struct.insn_chain*, %struct.insn_chain** %next, align 8, !dbg !7216
  store %struct.insn_chain* %25, %struct.insn_chain** %c, align 8, !dbg !7217
  br label %while.cond1, !dbg !7166, !llvm.loop !7218

while.end:                                        ; preds = %land.end
  %26 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7220
  %cmp18 = icmp ne %struct.insn_chain* %26, null, !dbg !7222
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !7223

if.then19:                                        ; preds = %while.end
  %27 = load %struct.insn_chain*, %struct.insn_chain** %c, align 8, !dbg !7224
  %next20 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %27, i32 0, i32 0, !dbg !7225
  %28 = load %struct.insn_chain*, %struct.insn_chain** %next20, align 8, !dbg !7225
  store %struct.insn_chain* %28, %struct.insn_chain** %c, align 8, !dbg !7226
  br label %if.end21, !dbg !7227

if.end21:                                         ; preds = %if.then19, %while.end
  br label %while.cond, !dbg !7163, !llvm.loop !7228

while.end22:                                      ; preds = %while.cond
  ret void, !dbg !7230
}

declare dso_local void @obstack_free(%struct.obstack*, i8*) #2

declare dso_local void @mark_elimination(i32, i32) #2

declare dso_local zeroext i8 @can_throw_internal(%struct.rtx_def*) #2

declare dso_local i32 @reg_set_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @delete_dead_insn(%struct.rtx_def* %insn) #0 !dbg !7231 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %prev_dest = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !7232, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev, metadata !7234, metadata !DIExpression()), !dbg !7235
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7236
  %call = call %struct.rtx_def* @prev_real_insn(%struct.rtx_def* %0), !dbg !7237
  store %struct.rtx_def* %call, %struct.rtx_def** %prev, align 8, !dbg !7235
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev_dest, metadata !7238, metadata !DIExpression()), !dbg !7239
  %1 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7240
  %tobool = icmp ne %struct.rtx_def* %1, null, !dbg !7240
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7242

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7243
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !7243
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7243
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !7243
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7243
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7243
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !7243
  %bf.load = load i32, i32* %4, align 8, !dbg !7243
  %bf.clear = and i32 %bf.load, 65535, !dbg !7243
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !7244
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !7245

land.lhs.true1:                                   ; preds = %land.lhs.true
  %5 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7246
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !7246
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !7246
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 5, !dbg !7246
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !7246
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !7246
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !7246
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !7246
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 0, !dbg !7246
  %rt_rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !7246
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !7246
  store %struct.rtx_def* %7, %struct.rtx_def** %prev_dest, align 8, !dbg !7247
  %8 = load %struct.rtx_def*, %struct.rtx_def** %prev_dest, align 8, !dbg !7248
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !7248
  %bf.load10 = load i32, i32* %9, align 8, !dbg !7248
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !7248
  %cmp12 = icmp eq i32 %bf.clear11, 37, !dbg !7248
  br i1 %cmp12, label %land.lhs.true13, label %if.end, !dbg !7249

land.lhs.true13:                                  ; preds = %land.lhs.true1
  %10 = load %struct.rtx_def*, %struct.rtx_def** %prev_dest, align 8, !dbg !7250
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7251
  %u14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !7251
  %fld15 = bitcast %union.u* %u14 to [1 x %union.rtunion_def]*, !dbg !7251
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i64 0, i64 5, !dbg !7251
  %rt_rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**, !dbg !7251
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx17, align 8, !dbg !7251
  %call18 = call i32 @reg_mentioned_p(%struct.rtx_def* %10, %struct.rtx_def* %12), !dbg !7252
  %tobool19 = icmp ne i32 %call18, 0, !dbg !7252
  br i1 %tobool19, label %land.lhs.true20, label %if.end, !dbg !7253

land.lhs.true20:                                  ; preds = %land.lhs.true13
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7254
  %14 = load %struct.rtx_def*, %struct.rtx_def** %prev_dest, align 8, !dbg !7255
  %call21 = call i32 @rhs_regno(%struct.rtx_def* %14), !dbg !7255
  %call22 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %13, i32 1, i32 %call21), !dbg !7256
  %tobool23 = icmp ne %struct.rtx_def* %call22, null, !dbg !7256
  br i1 %tobool23, label %land.lhs.true24, label %if.end, !dbg !7257

land.lhs.true24:                                  ; preds = %land.lhs.true20
  %15 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7258
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !7258
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !7258
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 5, !dbg !7258
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !7258
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !7258
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !7258
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !7258
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 1, !dbg !7258
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !7258
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !7258
  %call33 = call i32 @side_effects_p(%struct.rtx_def* %17), !dbg !7259
  %tobool34 = icmp ne i32 %call33, 0, !dbg !7259
  br i1 %tobool34, label %if.end, label %if.then, !dbg !7260

if.then:                                          ; preds = %land.lhs.true24
  %18 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7261
  call void @delete_dead_insn(%struct.rtx_def* %18), !dbg !7262
  br label %if.end, !dbg !7262

if.end:                                           ; preds = %if.then, %land.lhs.true24, %land.lhs.true20, %land.lhs.true13, %land.lhs.true1, %land.lhs.true, %entry
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7263
  call void @set_insn_deleted(%struct.rtx_def* %19), !dbg !7263
  ret void, !dbg !7264
}

declare dso_local void @set_insn_deleted(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @reload_as_needed(i32 %live_known) #0 !dbg !7265 {
entry:
  %live_known.addr = alloca i32, align 4
  %chain = alloca %struct.insn_chain*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %old_next = alloca %struct.rtx_def*, align 8
  %regs_to_forget = alloca %struct.bitmap_head_def, align 8
  %next = alloca %struct.rtx_def*, align 8
  %p = alloca %struct.rtx_def*, align 8
  store i32 %live_known, i32* %live_known.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %live_known.addr, metadata !7266, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain, metadata !7268, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !7270, metadata !DIExpression()), !dbg !7271
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([53 x %struct.rtx_def*]* @spill_reg_rtx to i8*), i8 0, i64 424, i1 false), !dbg !7272
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([53 x %struct.rtx_def*]* @spill_reg_store to i8*), i8 0, i64 424, i1 false), !dbg !7273
  %0 = load i32, i32* @max_regno, align 4, !dbg !7274
  %conv = sext i32 %0 to i64, !dbg !7274
  %call = call i8* @xcalloc(i64 %conv, i64 8), !dbg !7274
  %1 = bitcast i8* %call to %struct.rtx_def**, !dbg !7274
  store %struct.rtx_def** %1, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !7275
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* @reg_has_output_reload, %struct.bitmap_obstack* @reg_obstack), !dbg !7276
  store i64 0, i64* @reg_reloaded_valid, align 8, !dbg !7277
  store i64 0, i64* @reg_reloaded_call_part_clobbered, align 8, !dbg !7278
  call void @set_initial_elim_offsets(), !dbg !7279
  %2 = load %struct.insn_chain*, %struct.insn_chain** @reload_insn_chain, align 8, !dbg !7280
  store %struct.insn_chain* %2, %struct.insn_chain** %chain, align 8, !dbg !7282
  br label %for.cond, !dbg !7283

for.cond:                                         ; preds = %for.inc272, %entry
  %3 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7284
  %tobool = icmp ne %struct.insn_chain* %3, null, !dbg !7286
  br i1 %tobool, label %for.body, label %for.end274, !dbg !7286

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev, metadata !7287, metadata !DIExpression()), !dbg !7289
  store %struct.rtx_def* null, %struct.rtx_def** %prev, align 8, !dbg !7289
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !7290, metadata !DIExpression()), !dbg !7291
  %4 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7292
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %4, i32 0, i32 3, !dbg !7293
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !7293
  store %struct.rtx_def* %5, %struct.rtx_def** %insn, align 8, !dbg !7291
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_next, metadata !7294, metadata !DIExpression()), !dbg !7295
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7296
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !7296
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7296
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !7296
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7296
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7296
  store %struct.rtx_def* %7, %struct.rtx_def** %old_next, align 8, !dbg !7295
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7297
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !7297
  %bf.load = load i32, i32* %9, align 8, !dbg !7297
  %bf.clear = and i32 %bf.load, 65535, !dbg !7297
  %cmp = icmp eq i32 %bf.clear, 12, !dbg !7297
  br i1 %cmp, label %if.then, label %if.else, !dbg !7299

if.then:                                          ; preds = %for.body
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7300
  call void @set_offsets_for_label(%struct.rtx_def* %10), !dbg !7301
  br label %if.end256, !dbg !7301

if.else:                                          ; preds = %for.body
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7302
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !7302
  %bf.load3 = load i32, i32* %12, align 8, !dbg !7302
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !7302
  %cmp5 = icmp eq i32 %bf.clear4, 8, !dbg !7302
  br i1 %cmp5, label %if.then21, label %lor.lhs.false, !dbg !7302

lor.lhs.false:                                    ; preds = %if.else
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7302
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !7302
  %bf.load7 = load i32, i32* %14, align 8, !dbg !7302
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !7302
  %cmp9 = icmp eq i32 %bf.clear8, 7, !dbg !7302
  br i1 %cmp9, label %if.then21, label %lor.lhs.false11, !dbg !7302

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7302
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !7302
  %bf.load12 = load i32, i32* %16, align 8, !dbg !7302
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !7302
  %cmp14 = icmp eq i32 %bf.clear13, 9, !dbg !7302
  br i1 %cmp14, label %if.then21, label %lor.lhs.false16, !dbg !7302

lor.lhs.false16:                                  ; preds = %lor.lhs.false11
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7302
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !7302
  %bf.load17 = load i32, i32* %18, align 8, !dbg !7302
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !7302
  %cmp19 = icmp eq i32 %bf.clear18, 10, !dbg !7302
  br i1 %cmp19, label %if.then21, label %if.end255, !dbg !7304

if.then21:                                        ; preds = %lor.lhs.false16, %lor.lhs.false11, %lor.lhs.false, %if.else
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def* %regs_to_forget, metadata !7305, metadata !DIExpression()), !dbg !7307
  call void @bitmap_initialize_stat(%struct.bitmap_head_def* %regs_to_forget, %struct.bitmap_obstack* @reg_obstack), !dbg !7308
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7309
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !7309
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !7309
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 5, !dbg !7309
  %rt_rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**, !dbg !7309
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !7309
  %21 = bitcast %struct.bitmap_head_def* %regs_to_forget to i8*, !dbg !7310
  call void @note_stores(%struct.rtx_def* %20, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @forget_old_reloads_1, i8* %21), !dbg !7311
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7312
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !7312
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !7312
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 5, !dbg !7312
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !7312
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !7312
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !7312
  %bf.load30 = load i32, i32* %24, align 8, !dbg !7312
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !7312
  %cmp32 = icmp eq i32 %bf.clear31, 24, !dbg !7314
  br i1 %cmp32, label %land.lhs.true, label %lor.lhs.false34, !dbg !7315

lor.lhs.false34:                                  ; preds = %if.then21
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7316
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !7316
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !7316
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 5, !dbg !7316
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !7316
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !7316
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !7316
  %bf.load39 = load i32, i32* %27, align 8, !dbg !7316
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !7316
  %cmp41 = icmp eq i32 %bf.clear40, 25, !dbg !7317
  br i1 %cmp41, label %land.lhs.true, label %if.end, !dbg !7318

land.lhs.true:                                    ; preds = %lor.lhs.false34, %if.then21
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7319
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !7319
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !7319
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 5, !dbg !7319
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !7319
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !7319
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !7319
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !7319
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 0, !dbg !7319
  %rt_rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !7319
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !7319
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !7319
  %bf.load51 = load i32, i32* %31, align 8, !dbg !7319
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !7319
  %cmp53 = icmp eq i32 %bf.clear52, 43, !dbg !7319
  br i1 %cmp53, label %if.then55, label %if.end, !dbg !7320

if.then55:                                        ; preds = %land.lhs.true
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7321
  %u56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !7321
  %fld57 = bitcast %union.u* %u56 to [1 x %union.rtunion_def]*, !dbg !7321
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i64 0, i64 5, !dbg !7321
  %rt_rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**, !dbg !7321
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx59, align 8, !dbg !7321
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !7321
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !7321
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 0, !dbg !7321
  %rt_rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**, !dbg !7321
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx63, align 8, !dbg !7321
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !7321
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !7321
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 0, !dbg !7321
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !7321
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx67, align 8, !dbg !7321
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7322
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !7322
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !7322
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 5, !dbg !7322
  %rt_rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**, !dbg !7322
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !7322
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !7322
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !7322
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 0, !dbg !7322
  %rt_rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**, !dbg !7322
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !7322
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !7322
  %bf.load76 = load i32, i32* %39, align 8, !dbg !7322
  %bf.lshr = lshr i32 %bf.load76, 16, !dbg !7322
  %bf.clear77 = and i32 %bf.lshr, 255, !dbg !7322
  %call78 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %35, i32 %bf.clear77, %struct.rtx_def* null), !dbg !7323
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7324
  %u79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !7324
  %fld80 = bitcast %union.u* %u79 to [1 x %union.rtunion_def]*, !dbg !7324
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i64 0, i64 5, !dbg !7324
  %rt_rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**, !dbg !7324
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx82, align 8, !dbg !7324
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !7324
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !7324
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 0, !dbg !7324
  %rt_rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**, !dbg !7324
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !7324
  %u87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !7324
  %fld88 = bitcast %union.u* %u87 to [1 x %union.rtunion_def]*, !dbg !7324
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i64 0, i64 0, !dbg !7324
  %rt_rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**, !dbg !7324
  store %struct.rtx_def* %call78, %struct.rtx_def** %rt_rtx90, align 8, !dbg !7325
  br label %if.end, !dbg !7324

if.end:                                           ; preds = %if.then55, %land.lhs.true, %lor.lhs.false34
  %43 = load i32, i32* @num_eliminable, align 4, !dbg !7326
  %tobool91 = icmp ne i32 %43, 0, !dbg !7326
  br i1 %tobool91, label %land.lhs.true94, label %lor.lhs.false92, !dbg !7328

lor.lhs.false92:                                  ; preds = %if.end
  %44 = load i32, i32* @num_eliminable_invariants, align 4, !dbg !7329
  %tobool93 = icmp ne i32 %44, 0, !dbg !7329
  br i1 %tobool93, label %land.lhs.true94, label %if.end107, !dbg !7330

land.lhs.true94:                                  ; preds = %lor.lhs.false92, %if.end
  %45 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7331
  %need_elim = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %45, i32 0, i32 5, !dbg !7332
  %bf.load95 = load i8, i8* %need_elim, align 4, !dbg !7332
  %bf.lshr96 = lshr i8 %bf.load95, 2, !dbg !7332
  %bf.clear97 = and i8 %bf.lshr96, 1, !dbg !7332
  %bf.cast = zext i8 %bf.clear97 to i32, !dbg !7332
  %tobool98 = icmp ne i32 %bf.cast, 0, !dbg !7331
  br i1 %tobool98, label %if.then99, label %if.end107, !dbg !7333

if.then99:                                        ; preds = %land.lhs.true94
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7334
  %call100 = call i32 @eliminate_regs_in_insn(%struct.rtx_def* %46, i32 1), !dbg !7336
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7337
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !7337
  %bf.load101 = load i32, i32* %48, align 8, !dbg !7337
  %bf.clear102 = and i32 %bf.load101, 65535, !dbg !7337
  %cmp103 = icmp eq i32 %bf.clear102, 13, !dbg !7337
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !7339

if.then105:                                       ; preds = %if.then99
  call void @update_eliminable_offsets(), !dbg !7340
  call void @bitmap_clear(%struct.bitmap_head_def* %regs_to_forget), !dbg !7342
  br label %for.inc272, !dbg !7343

if.end106:                                        ; preds = %if.then99
  br label %if.end107, !dbg !7344

if.end107:                                        ; preds = %if.end106, %land.lhs.true94, %lor.lhs.false92
  %49 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7345
  %need_elim108 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %49, i32 0, i32 5, !dbg !7347
  %bf.load109 = load i8, i8* %need_elim108, align 4, !dbg !7347
  %bf.lshr110 = lshr i8 %bf.load109, 2, !dbg !7347
  %bf.clear111 = and i8 %bf.lshr110, 1, !dbg !7347
  %bf.cast112 = zext i8 %bf.clear111 to i32, !dbg !7347
  %tobool113 = icmp ne i32 %bf.cast112, 0, !dbg !7345
  br i1 %tobool113, label %if.else126, label %land.lhs.true114, !dbg !7348

land.lhs.true114:                                 ; preds = %if.end107
  %50 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7349
  %need_reload = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %50, i32 0, i32 5, !dbg !7350
  %bf.load115 = load i8, i8* %need_reload, align 4, !dbg !7350
  %bf.clear116 = and i8 %bf.load115, 1, !dbg !7350
  %bf.cast117 = zext i8 %bf.clear116 to i32, !dbg !7350
  %tobool118 = icmp ne i32 %bf.cast117, 0, !dbg !7349
  br i1 %tobool118, label %if.else126, label %land.lhs.true119, !dbg !7351

land.lhs.true119:                                 ; preds = %land.lhs.true114
  %51 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7352
  %need_operand_change = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %51, i32 0, i32 5, !dbg !7353
  %bf.load120 = load i8, i8* %need_operand_change, align 4, !dbg !7353
  %bf.lshr121 = lshr i8 %bf.load120, 1, !dbg !7353
  %bf.clear122 = and i8 %bf.lshr121, 1, !dbg !7353
  %bf.cast123 = zext i8 %bf.clear122 to i32, !dbg !7353
  %tobool124 = icmp ne i32 %bf.cast123, 0, !dbg !7352
  br i1 %tobool124, label %if.else126, label %if.then125, !dbg !7354

if.then125:                                       ; preds = %land.lhs.true119
  store i32 0, i32* @n_reloads, align 4, !dbg !7355
  br label %if.end129, !dbg !7356

if.else126:                                       ; preds = %land.lhs.true119, %land.lhs.true114, %if.end107
  call void @bitmap_clear(%struct.bitmap_head_def* @reg_has_output_reload), !dbg !7357
  store i64 0, i64* @reg_is_output_reload, align 8, !dbg !7359
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7360
  %53 = load i8, i8* @spill_indirect_levels, align 1, !dbg !7361
  %conv127 = sext i8 %53 to i32, !dbg !7361
  %54 = load i32, i32* %live_known.addr, align 4, !dbg !7362
  %call128 = call i32 @find_reloads(%struct.rtx_def* %52, i32 1, i32 %conv127, i32 %54, i16* getelementptr inbounds ([53 x i16], [53 x i16]* @spill_reg_order, i64 0, i64 0)), !dbg !7363
  br label %if.end129

if.end129:                                        ; preds = %if.else126, %if.then125
  %55 = load i32, i32* @n_reloads, align 4, !dbg !7364
  %cmp130 = icmp sgt i32 %55, 0, !dbg !7366
  br i1 %cmp130, label %if.then132, label %if.end211, !dbg !7367

if.then132:                                       ; preds = %if.end129
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !7368, metadata !DIExpression()), !dbg !7370
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7371
  %u133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !7371
  %fld134 = bitcast %union.u* %u133 to [1 x %union.rtunion_def]*, !dbg !7371
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i64 0, i64 2, !dbg !7371
  %rt_rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**, !dbg !7371
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx136, align 8, !dbg !7371
  store %struct.rtx_def* %57, %struct.rtx_def** %next, align 8, !dbg !7370
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %p, metadata !7372, metadata !DIExpression()), !dbg !7373
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7374
  %u137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !7374
  %fld138 = bitcast %union.u* %u137 to [1 x %union.rtunion_def]*, !dbg !7374
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i64 0, i64 1, !dbg !7374
  %rt_rtx140 = bitcast %union.rtunion_def* %arrayidx139 to %struct.rtx_def**, !dbg !7374
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx140, align 8, !dbg !7374
  store %struct.rtx_def* %59, %struct.rtx_def** %prev, align 8, !dbg !7375
  %60 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7376
  call void @choose_reload_regs(%struct.insn_chain* %60), !dbg !7377
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7378
  call void @merge_assigned_reloads(%struct.rtx_def* %61), !dbg !7380
  %62 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7381
  call void @emit_reload_insns(%struct.insn_chain* %62), !dbg !7382
  %63 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7383
  call void @subst_reloads(%struct.rtx_def* %63), !dbg !7384
  %64 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !7385
  %tobool141 = icmp ne i32 %64, 0, !dbg !7385
  br i1 %tobool141, label %land.lhs.true142, label %if.end148, !dbg !7387

land.lhs.true142:                                 ; preds = %if.then132
  %65 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7388
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !7388
  %bf.load143 = load i32, i32* %66, align 8, !dbg !7388
  %bf.clear144 = and i32 %bf.load143, 65535, !dbg !7388
  %cmp145 = icmp eq i32 %bf.clear144, 10, !dbg !7388
  br i1 %cmp145, label %if.end148, label %if.then147, !dbg !7389

if.then147:                                       ; preds = %land.lhs.true142
  %67 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7390
  %68 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7391
  %69 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !7392
  call void @fixup_eh_region_note(%struct.rtx_def* %67, %struct.rtx_def* %68, %struct.rtx_def* %69), !dbg !7393
  br label %if.end148, !dbg !7393

if.end148:                                        ; preds = %if.then147, %land.lhs.true142, %if.then132
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7394
  %u149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !7394
  %fld150 = bitcast %union.u* %u149 to [1 x %union.rtunion_def]*, !dbg !7394
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i64 0, i64 5, !dbg !7394
  %rt_rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**, !dbg !7394
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx152, align 8, !dbg !7394
  %call153 = call i32 @asm_noperands(%struct.rtx_def* %71), !dbg !7396
  %cmp154 = icmp sge i32 %call153, 0, !dbg !7397
  br i1 %cmp154, label %if.then156, label %if.end210, !dbg !7398

if.then156:                                       ; preds = %if.end148
  %72 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7399
  %u157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !7399
  %fld158 = bitcast %union.u* %u157 to [1 x %union.rtunion_def]*, !dbg !7399
  %arrayidx159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i64 0, i64 2, !dbg !7399
  %rt_rtx160 = bitcast %union.rtunion_def* %arrayidx159 to %struct.rtx_def**, !dbg !7399
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx160, align 8, !dbg !7399
  store %struct.rtx_def* %73, %struct.rtx_def** %p, align 8, !dbg !7401
  br label %for.cond161, !dbg !7402

for.cond161:                                      ; preds = %for.inc, %if.then156
  %74 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7403
  %75 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !7405
  %cmp162 = icmp ne %struct.rtx_def* %74, %75, !dbg !7406
  br i1 %cmp162, label %for.body164, label %for.end, !dbg !7407

for.body164:                                      ; preds = %for.cond161
  %76 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7408
  %77 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7410
  %cmp165 = icmp ne %struct.rtx_def* %76, %77, !dbg !7411
  br i1 %cmp165, label %land.lhs.true167, label %if.end205, !dbg !7412

land.lhs.true167:                                 ; preds = %for.body164
  %78 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7413
  %79 = bitcast %struct.rtx_def* %78 to i32*, !dbg !7413
  %bf.load168 = load i32, i32* %79, align 8, !dbg !7413
  %bf.clear169 = and i32 %bf.load168, 65535, !dbg !7413
  %cmp170 = icmp eq i32 %bf.clear169, 8, !dbg !7413
  br i1 %cmp170, label %land.lhs.true187, label %lor.lhs.false172, !dbg !7413

lor.lhs.false172:                                 ; preds = %land.lhs.true167
  %80 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7413
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !7413
  %bf.load173 = load i32, i32* %81, align 8, !dbg !7413
  %bf.clear174 = and i32 %bf.load173, 65535, !dbg !7413
  %cmp175 = icmp eq i32 %bf.clear174, 7, !dbg !7413
  br i1 %cmp175, label %land.lhs.true187, label %lor.lhs.false177, !dbg !7413

lor.lhs.false177:                                 ; preds = %lor.lhs.false172
  %82 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7413
  %83 = bitcast %struct.rtx_def* %82 to i32*, !dbg !7413
  %bf.load178 = load i32, i32* %83, align 8, !dbg !7413
  %bf.clear179 = and i32 %bf.load178, 65535, !dbg !7413
  %cmp180 = icmp eq i32 %bf.clear179, 9, !dbg !7413
  br i1 %cmp180, label %land.lhs.true187, label %lor.lhs.false182, !dbg !7413

lor.lhs.false182:                                 ; preds = %lor.lhs.false177
  %84 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7413
  %85 = bitcast %struct.rtx_def* %84 to i32*, !dbg !7413
  %bf.load183 = load i32, i32* %85, align 8, !dbg !7413
  %bf.clear184 = and i32 %bf.load183, 65535, !dbg !7413
  %cmp185 = icmp eq i32 %bf.clear184, 10, !dbg !7413
  br i1 %cmp185, label %land.lhs.true187, label %if.end205, !dbg !7414

land.lhs.true187:                                 ; preds = %lor.lhs.false182, %lor.lhs.false177, %lor.lhs.false172, %land.lhs.true167
  %86 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7415
  %u188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !7415
  %fld189 = bitcast %union.u* %u188 to [1 x %union.rtunion_def]*, !dbg !7415
  %arrayidx190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld189, i64 0, i64 5, !dbg !7415
  %rt_rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**, !dbg !7415
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx191, align 8, !dbg !7415
  %88 = bitcast %struct.rtx_def* %87 to i32*, !dbg !7415
  %bf.load192 = load i32, i32* %88, align 8, !dbg !7415
  %bf.clear193 = and i32 %bf.load192, 65535, !dbg !7415
  %cmp194 = icmp ne i32 %bf.clear193, 24, !dbg !7416
  br i1 %cmp194, label %land.lhs.true196, label %if.end205, !dbg !7417

land.lhs.true196:                                 ; preds = %land.lhs.true187
  %89 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7418
  %call197 = call i32 @recog_memoized(%struct.rtx_def* %89), !dbg !7419
  %cmp198 = icmp slt i32 %call197, 0, !dbg !7420
  br i1 %cmp198, label %if.then203, label %lor.lhs.false200, !dbg !7421

lor.lhs.false200:                                 ; preds = %land.lhs.true196
  %90 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7422
  call void @extract_insn(%struct.rtx_def* %90), !dbg !7423
  %call201 = call i32 @constrain_operands(i32 1), !dbg !7424
  %tobool202 = icmp ne i32 %call201, 0, !dbg !7425
  %lnot = xor i1 %tobool202, true, !dbg !7425
  br i1 %lnot, label %if.then203, label %if.end205, !dbg !7426

if.then203:                                       ; preds = %lor.lhs.false200, %land.lhs.true196
  %91 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7427
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %91, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17, i64 0, i64 0)), !dbg !7429
  %92 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7430
  %call204 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %92), !dbg !7431
  br label %if.end205, !dbg !7432

if.end205:                                        ; preds = %if.then203, %lor.lhs.false200, %land.lhs.true187, %lor.lhs.false182, %for.body164
  br label %for.inc, !dbg !7433

for.inc:                                          ; preds = %if.end205
  %93 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !7434
  %u206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1, !dbg !7434
  %fld207 = bitcast %union.u* %u206 to [1 x %union.rtunion_def]*, !dbg !7434
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i64 0, i64 2, !dbg !7434
  %rt_rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**, !dbg !7434
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx209, align 8, !dbg !7434
  store %struct.rtx_def* %94, %struct.rtx_def** %p, align 8, !dbg !7435
  br label %for.cond161, !dbg !7436, !llvm.loop !7437

for.end:                                          ; preds = %for.cond161
  br label %if.end210, !dbg !7438

if.end210:                                        ; preds = %for.end, %if.end148
  br label %if.end211, !dbg !7439

if.end211:                                        ; preds = %if.end210, %if.end129
  %95 = load i32, i32* @num_eliminable, align 4, !dbg !7440
  %tobool212 = icmp ne i32 %95, 0, !dbg !7440
  br i1 %tobool212, label %land.lhs.true213, label %if.end221, !dbg !7442

land.lhs.true213:                                 ; preds = %if.end211
  %96 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7443
  %need_elim214 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %96, i32 0, i32 5, !dbg !7444
  %bf.load215 = load i8, i8* %need_elim214, align 4, !dbg !7444
  %bf.lshr216 = lshr i8 %bf.load215, 2, !dbg !7444
  %bf.clear217 = and i8 %bf.lshr216, 1, !dbg !7444
  %bf.cast218 = zext i8 %bf.clear217 to i32, !dbg !7444
  %tobool219 = icmp ne i32 %bf.cast218, 0, !dbg !7443
  br i1 %tobool219, label %if.then220, label %if.end221, !dbg !7445

if.then220:                                       ; preds = %land.lhs.true213
  call void @update_eliminable_offsets(), !dbg !7446
  br label %if.end221, !dbg !7446

if.end221:                                        ; preds = %if.then220, %land.lhs.true213, %if.end211
  call void @forget_marked_reloads(%struct.bitmap_head_def* %regs_to_forget), !dbg !7447
  call void @bitmap_clear(%struct.bitmap_head_def* %regs_to_forget), !dbg !7448
  %97 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7449
  %u222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1, !dbg !7449
  %fld223 = bitcast %union.u* %u222 to [1 x %union.rtunion_def]*, !dbg !7449
  %arrayidx224 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld223, i64 0, i64 2, !dbg !7449
  %rt_rtx225 = bitcast %union.rtunion_def* %arrayidx224 to %struct.rtx_def**, !dbg !7449
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx225, align 8, !dbg !7449
  store %struct.rtx_def* %98, %struct.rtx_def** %x, align 8, !dbg !7451
  br label %for.cond226, !dbg !7452

for.cond226:                                      ; preds = %for.inc249, %if.end221
  %99 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7453
  %100 = load %struct.rtx_def*, %struct.rtx_def** %old_next, align 8, !dbg !7455
  %cmp227 = icmp ne %struct.rtx_def* %99, %100, !dbg !7456
  br i1 %cmp227, label %for.body229, label %for.end254, !dbg !7457

for.body229:                                      ; preds = %for.cond226
  %101 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7458
  %102 = bitcast %struct.rtx_def* %101 to i32*, !dbg !7458
  %bf.load230 = load i32, i32* %102, align 8, !dbg !7458
  %bf.clear231 = and i32 %bf.load230, 65535, !dbg !7458
  %cmp232 = icmp eq i32 %bf.clear231, 8, !dbg !7458
  br i1 %cmp232, label %land.lhs.true234, label %if.end248, !dbg !7460

land.lhs.true234:                                 ; preds = %for.body229
  %103 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7461
  %u235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !7461
  %fld236 = bitcast %union.u* %u235 to [1 x %union.rtunion_def]*, !dbg !7461
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i64 0, i64 5, !dbg !7461
  %rt_rtx238 = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**, !dbg !7461
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx238, align 8, !dbg !7461
  %105 = bitcast %struct.rtx_def* %104 to i32*, !dbg !7461
  %bf.load239 = load i32, i32* %105, align 8, !dbg !7461
  %bf.clear240 = and i32 %bf.load239, 65535, !dbg !7461
  %cmp241 = icmp eq i32 %bf.clear240, 25, !dbg !7462
  br i1 %cmp241, label %if.then243, label %if.end248, !dbg !7463

if.then243:                                       ; preds = %land.lhs.true234
  %106 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7464
  %u244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1, !dbg !7464
  %fld245 = bitcast %union.u* %u244 to [1 x %union.rtunion_def]*, !dbg !7464
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i64 0, i64 5, !dbg !7464
  %rt_rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**, !dbg !7464
  %107 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx247, align 8, !dbg !7464
  call void @note_stores(%struct.rtx_def* %107, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @forget_old_reloads_1, i8* null), !dbg !7465
  br label %if.end248, !dbg !7465

if.end248:                                        ; preds = %if.then243, %land.lhs.true234, %for.body229
  br label %for.inc249, !dbg !7466

for.inc249:                                       ; preds = %if.end248
  %108 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7467
  %u250 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1, !dbg !7467
  %fld251 = bitcast %union.u* %u250 to [1 x %union.rtunion_def]*, !dbg !7467
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i64 0, i64 2, !dbg !7467
  %rt_rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**, !dbg !7467
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx253, align 8, !dbg !7467
  store %struct.rtx_def* %109, %struct.rtx_def** %x, align 8, !dbg !7468
  br label %for.cond226, !dbg !7469, !llvm.loop !7470

for.end254:                                       ; preds = %for.cond226
  br label %if.end255, !dbg !7472

if.end255:                                        ; preds = %for.end254, %lor.lhs.false16
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %if.then
  %110 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7473
  %111 = bitcast %struct.rtx_def* %110 to i32*, !dbg !7473
  %bf.load257 = load i32, i32* %111, align 8, !dbg !7473
  %bf.clear258 = and i32 %bf.load257, 65535, !dbg !7473
  %cmp259 = icmp eq i32 %bf.clear258, 12, !dbg !7473
  br i1 %cmp259, label %if.then261, label %if.else262, !dbg !7475

if.then261:                                       ; preds = %if.end256
  store i64 0, i64* @reg_reloaded_valid, align 8, !dbg !7476
  br label %if.end271, !dbg !7476

if.else262:                                       ; preds = %if.end256
  %112 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7477
  %113 = bitcast %struct.rtx_def* %112 to i32*, !dbg !7477
  %bf.load263 = load i32, i32* %113, align 8, !dbg !7477
  %bf.clear264 = and i32 %bf.load263, 65535, !dbg !7477
  %cmp265 = icmp eq i32 %bf.clear264, 10, !dbg !7477
  br i1 %cmp265, label %if.then267, label %if.end270, !dbg !7479

if.then267:                                       ; preds = %if.else262
  %114 = load i64, i64* @call_used_reg_set, align 8, !dbg !7480
  %neg = xor i64 %114, -1, !dbg !7480
  %115 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !7480
  %and = and i64 %115, %neg, !dbg !7480
  store i64 %and, i64* @reg_reloaded_valid, align 8, !dbg !7480
  %116 = load i64, i64* @reg_reloaded_call_part_clobbered, align 8, !dbg !7482
  %neg268 = xor i64 %116, -1, !dbg !7482
  %117 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !7482
  %and269 = and i64 %117, %neg268, !dbg !7482
  store i64 %and269, i64* @reg_reloaded_valid, align 8, !dbg !7482
  br label %if.end270, !dbg !7483

if.end270:                                        ; preds = %if.then267, %if.else262
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.then261
  br label %for.inc272, !dbg !7484

for.inc272:                                       ; preds = %if.end271, %if.then105
  %118 = load %struct.insn_chain*, %struct.insn_chain** %chain, align 8, !dbg !7485
  %next273 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %118, i32 0, i32 0, !dbg !7486
  %119 = load %struct.insn_chain*, %struct.insn_chain** %next273, align 8, !dbg !7486
  store %struct.insn_chain* %119, %struct.insn_chain** %chain, align 8, !dbg !7487
  br label %for.cond, !dbg !7488, !llvm.loop !7489

for.end274:                                       ; preds = %for.cond
  %120 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !7491
  %121 = bitcast %struct.rtx_def** %120 to i8*, !dbg !7491
  call void @free(i8* %121), !dbg !7492
  call void @bitmap_clear(%struct.bitmap_head_def* @reg_has_output_reload), !dbg !7493
  ret void, !dbg !7494
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) #2

declare dso_local %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) #2

declare dso_local zeroext i8 @df_insn_rescan_debug_internal(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @replace_pseudos_in(%struct.rtx_def** %loc, i32 %mem_mode, %struct.rtx_def* %usage) #0 !dbg !7495 {
entry:
  %loc.addr = alloca %struct.rtx_def**, align 8
  %mem_mode.addr = alloca i32, align 4
  %usage.addr = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %regno = alloca i32, align 4
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !7498, metadata !DIExpression()), !dbg !7499
  store i32 %mem_mode, i32* %mem_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_mode.addr, metadata !7500, metadata !DIExpression()), !dbg !7501
  store %struct.rtx_def* %usage, %struct.rtx_def** %usage.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %usage.addr, metadata !7502, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !7504, metadata !DIExpression()), !dbg !7505
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7506
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !7507
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8, !dbg !7505
  call void @llvm.dbg.declare(metadata i32* %code, metadata !7508, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !7510, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7512, metadata !DIExpression()), !dbg !7513
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7514, metadata !DIExpression()), !dbg !7515
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7516
  %tobool = icmp ne %struct.rtx_def* %2, null, !dbg !7516
  br i1 %tobool, label %if.end, label %if.then, !dbg !7518

if.then:                                          ; preds = %entry
  br label %for.end92, !dbg !7519

if.end:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7520
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !7520
  %bf.load = load i32, i32* %4, align 8, !dbg !7520
  %bf.clear = and i32 %bf.load, 65535, !dbg !7520
  store i32 %bf.clear, i32* %code, align 4, !dbg !7521
  %5 = load i32, i32* %code, align 4, !dbg !7522
  %cmp = icmp eq i32 %5, 37, !dbg !7524
  br i1 %cmp, label %if.then1, label %if.else44, !dbg !7525

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !7526, metadata !DIExpression()), !dbg !7528
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7529
  %call = call i32 @rhs_regno(%struct.rtx_def* %6), !dbg !7529
  store i32 %call, i32* %regno, align 4, !dbg !7528
  %7 = load i32, i32* %regno, align 4, !dbg !7530
  %cmp2 = icmp ult i32 %7, 53, !dbg !7532
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7533

if.then3:                                         ; preds = %if.then1
  br label %for.end92, !dbg !7534

if.end4:                                          ; preds = %if.then1
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7535
  %9 = load i32, i32* %mem_mode.addr, align 4, !dbg !7536
  %10 = load %struct.rtx_def*, %struct.rtx_def** %usage.addr, align 8, !dbg !7537
  %call5 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %8, i32 %9, %struct.rtx_def* %10), !dbg !7538
  store %struct.rtx_def* %call5, %struct.rtx_def** %x, align 8, !dbg !7539
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7540
  %12 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7542
  %13 = load %struct.rtx_def*, %struct.rtx_def** %12, align 8, !dbg !7543
  %cmp6 = icmp ne %struct.rtx_def* %11, %13, !dbg !7544
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !7545

if.then7:                                         ; preds = %if.end4
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7546
  %15 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7548
  store %struct.rtx_def* %14, %struct.rtx_def** %15, align 8, !dbg !7549
  %16 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7550
  %17 = load i32, i32* %mem_mode.addr, align 4, !dbg !7551
  %18 = load %struct.rtx_def*, %struct.rtx_def** %usage.addr, align 8, !dbg !7552
  call void @replace_pseudos_in(%struct.rtx_def** %16, i32 %17, %struct.rtx_def* %18), !dbg !7553
  br label %for.end92, !dbg !7554

if.end8:                                          ; preds = %if.end4
  %19 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !7555
  %20 = load i32, i32* %regno, align 4, !dbg !7557
  %idxprom = zext i32 %20 to i64, !dbg !7555
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %19, i64 %idxprom, !dbg !7555
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !7555
  %tobool9 = icmp ne %struct.rtx_def* %21, null, !dbg !7555
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !7558

if.then10:                                        ; preds = %if.end8
  %22 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !7559
  %23 = load i32, i32* %regno, align 4, !dbg !7560
  %idxprom11 = zext i32 %23 to i64, !dbg !7559
  %arrayidx12 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %22, i64 %idxprom11, !dbg !7559
  %24 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx12, align 8, !dbg !7559
  %25 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7561
  store %struct.rtx_def* %24, %struct.rtx_def** %25, align 8, !dbg !7562
  br label %if.end43, !dbg !7563

if.else:                                          ; preds = %if.end8
  %26 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !7564
  %27 = load i32, i32* %regno, align 4, !dbg !7566
  %idxprom13 = zext i32 %27 to i64, !dbg !7564
  %arrayidx14 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %26, i64 %idxprom13, !dbg !7564
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx14, align 8, !dbg !7564
  %tobool15 = icmp ne %struct.rtx_def* %28, null, !dbg !7564
  br i1 %tobool15, label %if.then16, label %if.else19, !dbg !7567

if.then16:                                        ; preds = %if.else
  %29 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !7568
  %30 = load i32, i32* %regno, align 4, !dbg !7569
  %idxprom17 = zext i32 %30 to i64, !dbg !7568
  %arrayidx18 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %29, i64 %idxprom17, !dbg !7568
  %31 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8, !dbg !7568
  %32 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7570
  store %struct.rtx_def* %31, %struct.rtx_def** %32, align 8, !dbg !7571
  br label %if.end42, !dbg !7572

if.else19:                                        ; preds = %if.else
  %33 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8, !dbg !7573
  %34 = load i32, i32* %regno, align 4, !dbg !7575
  %idxprom20 = zext i32 %34 to i64, !dbg !7573
  %arrayidx21 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %33, i64 %idxprom20, !dbg !7573
  %35 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx21, align 8, !dbg !7573
  %tobool22 = icmp ne %struct.rtx_def* %35, null, !dbg !7573
  br i1 %tobool22, label %if.then23, label %if.else29, !dbg !7576

if.then23:                                        ; preds = %if.else19
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7577
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !7577
  %bf.load24 = load i32, i32* %37, align 8, !dbg !7577
  %bf.lshr = lshr i32 %bf.load24, 16, !dbg !7577
  %bf.clear25 = and i32 %bf.lshr, 255, !dbg !7577
  %38 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_address, align 8, !dbg !7578
  %39 = load i32, i32* %regno, align 4, !dbg !7579
  %idxprom26 = zext i32 %39 to i64, !dbg !7578
  %arrayidx27 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %38, i64 %idxprom26, !dbg !7578
  %40 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx27, align 8, !dbg !7578
  %call28 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear25, %struct.rtx_def* %40), !dbg !7580
  %41 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7581
  store %struct.rtx_def* %call28, %struct.rtx_def** %41, align 8, !dbg !7582
  br label %if.end41, !dbg !7583

if.else29:                                        ; preds = %if.else19
  %42 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !7584
  %43 = load i32, i32* %regno, align 4, !dbg !7584
  %idxprom30 = zext i32 %43 to i64, !dbg !7584
  %arrayidx31 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %42, i64 %idxprom30, !dbg !7584
  %44 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx31, align 8, !dbg !7584
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !7584
  %bf.load32 = load i32, i32* %45, align 8, !dbg !7584
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !7584
  %cmp34 = icmp eq i32 %bf.clear33, 37, !dbg !7584
  br i1 %cmp34, label %lor.lhs.false, label %cond.false, !dbg !7584

lor.lhs.false:                                    ; preds = %if.else29
  %46 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !7584
  %47 = load i32, i32* %regno, align 4, !dbg !7584
  %idxprom35 = zext i32 %47 to i64, !dbg !7584
  %arrayidx36 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %46, i64 %idxprom35, !dbg !7584
  %48 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx36, align 8, !dbg !7584
  %call37 = call i32 @rhs_regno(%struct.rtx_def* %48), !dbg !7584
  %49 = load i32, i32* %regno, align 4, !dbg !7584
  %cmp38 = icmp ne i32 %call37, %49, !dbg !7584
  br i1 %cmp38, label %cond.false, label %cond.true, !dbg !7584

cond.true:                                        ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 621, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !7584
  br label %cond.end, !dbg !7584

cond.false:                                       ; preds = %lor.lhs.false, %if.else29
  br label %cond.end, !dbg !7584

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7584
  %50 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !7586
  %51 = load i32, i32* %regno, align 4, !dbg !7587
  %idxprom39 = zext i32 %51 to i64, !dbg !7586
  %arrayidx40 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %50, i64 %idxprom39, !dbg !7586
  %52 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx40, align 8, !dbg !7586
  %53 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7588
  store %struct.rtx_def* %52, %struct.rtx_def** %53, align 8, !dbg !7589
  br label %if.end41

if.end41:                                         ; preds = %cond.end, %if.then23
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then16
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then10
  br label %for.end92, !dbg !7590

if.else44:                                        ; preds = %if.end
  %54 = load i32, i32* %code, align 4, !dbg !7591
  %cmp45 = icmp eq i32 %54, 43, !dbg !7593
  br i1 %cmp45, label %if.then46, label %if.end51, !dbg !7594

if.then46:                                        ; preds = %if.else44
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7595
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !7595
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7595
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7595
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**, !dbg !7595
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7597
  %57 = bitcast %struct.rtx_def* %56 to i32*, !dbg !7597
  %bf.load48 = load i32, i32* %57, align 8, !dbg !7597
  %bf.lshr49 = lshr i32 %bf.load48, 16, !dbg !7597
  %bf.clear50 = and i32 %bf.lshr49, 255, !dbg !7597
  %58 = load %struct.rtx_def*, %struct.rtx_def** %usage.addr, align 8, !dbg !7598
  call void @replace_pseudos_in(%struct.rtx_def** %rt_rtx, i32 %bf.clear50, %struct.rtx_def* %58), !dbg !7599
  br label %for.end92, !dbg !7600

if.end51:                                         ; preds = %if.else44
  br label %if.end52

if.end52:                                         ; preds = %if.end51
  %59 = load i32, i32* %code, align 4, !dbg !7601
  %idxprom53 = sext i32 %59 to i64, !dbg !7601
  %arrayidx54 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom53, !dbg !7601
  %60 = load i8*, i8** %arrayidx54, align 8, !dbg !7601
  store i8* %60, i8** %fmt, align 8, !dbg !7602
  store i32 0, i32* %i, align 4, !dbg !7603
  br label %for.cond, !dbg !7605

for.cond:                                         ; preds = %for.inc90, %if.end52
  %61 = load i32, i32* %i, align 4, !dbg !7606
  %62 = load i32, i32* %code, align 4, !dbg !7608
  %idxprom55 = sext i32 %62 to i64, !dbg !7608
  %arrayidx56 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom55, !dbg !7608
  %63 = load i8, i8* %arrayidx56, align 1, !dbg !7608
  %conv = zext i8 %63 to i32, !dbg !7608
  %cmp57 = icmp slt i32 %61, %conv, !dbg !7609
  br i1 %cmp57, label %for.body, label %for.end92, !dbg !7610

for.body:                                         ; preds = %for.cond
  %64 = load i8*, i8** %fmt, align 8, !dbg !7611
  %65 = load i8, i8* %64, align 1, !dbg !7613
  %conv59 = sext i8 %65 to i32, !dbg !7613
  %cmp60 = icmp eq i32 %conv59, 101, !dbg !7614
  br i1 %cmp60, label %if.then62, label %if.else68, !dbg !7615

if.then62:                                        ; preds = %for.body
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7616
  %u63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !7616
  %fld64 = bitcast %union.u* %u63 to [1 x %union.rtunion_def]*, !dbg !7616
  %67 = load i32, i32* %i, align 4, !dbg !7616
  %idxprom65 = sext i32 %67 to i64, !dbg !7616
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i64 0, i64 %idxprom65, !dbg !7616
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !7616
  %68 = load i32, i32* %mem_mode.addr, align 4, !dbg !7617
  %69 = load %struct.rtx_def*, %struct.rtx_def** %usage.addr, align 8, !dbg !7618
  call void @replace_pseudos_in(%struct.rtx_def** %rt_rtx67, i32 %68, %struct.rtx_def* %69), !dbg !7619
  br label %if.end89, !dbg !7619

if.else68:                                        ; preds = %for.body
  %70 = load i8*, i8** %fmt, align 8, !dbg !7620
  %71 = load i8, i8* %70, align 1, !dbg !7622
  %conv69 = sext i8 %71 to i32, !dbg !7622
  %cmp70 = icmp eq i32 %conv69, 69, !dbg !7623
  br i1 %cmp70, label %if.then72, label %if.end88, !dbg !7624

if.then72:                                        ; preds = %if.else68
  store i32 0, i32* %j, align 4, !dbg !7625
  br label %for.cond73, !dbg !7627

for.cond73:                                       ; preds = %for.inc, %if.then72
  %72 = load i32, i32* %j, align 4, !dbg !7628
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7630
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !7630
  %fld75 = bitcast %union.u* %u74 to [1 x %union.rtunion_def]*, !dbg !7630
  %74 = load i32, i32* %i, align 4, !dbg !7630
  %idxprom76 = sext i32 %74 to i64, !dbg !7630
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i64 0, i64 %idxprom76, !dbg !7630
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtvec_def**, !dbg !7630
  %75 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !7630
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %75, i32 0, i32 0, !dbg !7630
  %76 = load i32, i32* %num_elem, align 8, !dbg !7630
  %cmp78 = icmp slt i32 %72, %76, !dbg !7631
  br i1 %cmp78, label %for.body80, label %for.end, !dbg !7632

for.body80:                                       ; preds = %for.cond73
  %77 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7633
  %u81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1, !dbg !7633
  %fld82 = bitcast %union.u* %u81 to [1 x %union.rtunion_def]*, !dbg !7633
  %78 = load i32, i32* %i, align 4, !dbg !7633
  %idxprom83 = sext i32 %78 to i64, !dbg !7633
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i64 0, i64 %idxprom83, !dbg !7633
  %rt_rtvec85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtvec_def**, !dbg !7633
  %79 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec85, align 8, !dbg !7633
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %79, i32 0, i32 1, !dbg !7633
  %80 = load i32, i32* %j, align 4, !dbg !7633
  %idxprom86 = sext i32 %80 to i64, !dbg !7633
  %arrayidx87 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom86, !dbg !7633
  %81 = load i32, i32* %mem_mode.addr, align 4, !dbg !7634
  %82 = load %struct.rtx_def*, %struct.rtx_def** %usage.addr, align 8, !dbg !7635
  call void @replace_pseudos_in(%struct.rtx_def** %arrayidx87, i32 %81, %struct.rtx_def* %82), !dbg !7636
  br label %for.inc, !dbg !7636

for.inc:                                          ; preds = %for.body80
  %83 = load i32, i32* %j, align 4, !dbg !7637
  %inc = add nsw i32 %83, 1, !dbg !7637
  store i32 %inc, i32* %j, align 4, !dbg !7637
  br label %for.cond73, !dbg !7638, !llvm.loop !7639

for.end:                                          ; preds = %for.cond73
  br label %if.end88, !dbg !7640

if.end88:                                         ; preds = %for.end, %if.else68
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then62
  br label %for.inc90, !dbg !7641

for.inc90:                                        ; preds = %if.end89
  %84 = load i32, i32* %i, align 4, !dbg !7642
  %inc91 = add nsw i32 %84, 1, !dbg !7642
  store i32 %inc91, i32* %i, align 4, !dbg !7642
  %85 = load i8*, i8** %fmt, align 8, !dbg !7643
  %incdec.ptr = getelementptr inbounds i8, i8* %85, i32 1, !dbg !7643
  store i8* %incdec.ptr, i8** %fmt, align 8, !dbg !7643
  br label %for.cond, !dbg !7644, !llvm.loop !7645

for.end92:                                        ; preds = %if.then, %if.then3, %if.then7, %if.end43, %if.then46, %for.cond
  ret void, !dbg !7647
}

declare dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def*) #2

declare dso_local void @cleanup_subreg_operands(%struct.rtx_def*) #2

declare dso_local i32 @asm_noperands(%struct.rtx_def*) #2

declare dso_local void @extract_insn(%struct.rtx_def*) #2

declare dso_local i32 @constrain_operands(i32) #2

declare dso_local void @error_for_asm(%struct.rtx_def*, i8*, ...) #2

declare dso_local zeroext i8 @df_regs_ever_live_p(i32) #2

declare dso_local zeroext i8 @warning(i32, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_rtx_gc_free(%struct.VEC_rtx_gc** %vec_) #0 !dbg !7648 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_gc**, align 8
  store %struct.VEC_rtx_gc** %vec_, %struct.VEC_rtx_gc*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_gc*** %vec_.addr, metadata !7652, metadata !DIExpression()), !dbg !7653
  %0 = load %struct.VEC_rtx_gc**, %struct.VEC_rtx_gc*** %vec_.addr, align 8, !dbg !7654
  %1 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %0, align 8, !dbg !7654
  %tobool = icmp ne %struct.VEC_rtx_gc* %1, null, !dbg !7654
  br i1 %tobool, label %if.then, label %if.end, !dbg !7653

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_rtx_gc**, %struct.VEC_rtx_gc*** %vec_.addr, align 8, !dbg !7654
  %3 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** %2, align 8, !dbg !7654
  %4 = bitcast %struct.VEC_rtx_gc* %3 to i8*, !dbg !7654
  call void @ggc_free(i8* %4), !dbg !7654
  br label %if.end, !dbg !7654

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.VEC_rtx_gc**, %struct.VEC_rtx_gc*** %vec_.addr, align 8, !dbg !7653
  store %struct.VEC_rtx_gc* null, %struct.VEC_rtx_gc** %5, align 8, !dbg !7653
  ret void, !dbg !7653
}

declare dso_local void @free_EXPR_LIST_list(%struct.rtx_def**) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @fixup_abnormal_edges() #0 !dbg !7656 {
entry:
  %inserted = alloca i8, align 1
  %bb = alloca %struct.basic_block_def*, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %stop = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %tmp57 = alloca %struct.edge_iterator, align 8
  %blocks = alloca %struct.simple_bitmap_def*, align 8
  call void @llvm.dbg.declare(metadata i8* %inserted, metadata !7657, metadata !DIExpression()), !dbg !7658
  store i8 0, i8* %inserted, align 1, !dbg !7658
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7659, metadata !DIExpression()), !dbg !7660
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7661
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !7661
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7661
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7661
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 0, !dbg !7661
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7661
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 6, !dbg !7661
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !7661
  store %struct.basic_block_def* %3, %struct.basic_block_def** %bb, align 8, !dbg !7661
  br label %for.cond, !dbg !7661

for.cond:                                         ; preds = %for.inc138, %entry
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7663
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7663
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, !dbg !7663
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !7663
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !7663
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i32 0, i32 1, !dbg !7663
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7663
  %cmp = icmp ne %struct.basic_block_def* %4, %7, !dbg !7663
  br i1 %cmp, label %for.body, label %for.end140, !dbg !7661

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !7665, metadata !DIExpression()), !dbg !7667
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !7668, metadata !DIExpression()), !dbg !7669
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7670
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i32 0, i32 1, !dbg !7670
  %call = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %succs), !dbg !7670
  %9 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !7670
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !7670
  %11 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !7670
  store i32 %11, i32* %10, align 8, !dbg !7670
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !7670
  %13 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !7670
  store %struct.VEC_edge_gc** %13, %struct.VEC_edge_gc*** %12, align 8, !dbg !7670
  %14 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7670
  %15 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false), !dbg !7670
  br label %for.cond3, !dbg !7670

for.cond3:                                        ; preds = %for.inc, %for.body
  %16 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !7672
  %17 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %16, i32 0, i32 0, !dbg !7672
  %18 = load i32, i32* %17, align 8, !dbg !7672
  %19 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %16, i32 0, i32 1, !dbg !7672
  %20 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %19, align 8, !dbg !7672
  %call4 = call zeroext i8 @ei_cond(i32 %18, %struct.VEC_edge_gc** %20, %struct.edge_def** %e), !dbg !7672
  %tobool = icmp ne i8 %call4, 0, !dbg !7670
  br i1 %tobool, label %for.body5, label %for.end, !dbg !7670

for.body5:                                        ; preds = %for.cond3
  %21 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7674
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %21, i32 0, i32 7, !dbg !7677
  %22 = load i32, i32* %flags, align 8, !dbg !7677
  %and = and i32 %22, 4, !dbg !7678
  %tobool6 = icmp ne i32 %and, 0, !dbg !7678
  br i1 %tobool6, label %if.then, label %if.end, !dbg !7679

if.then:                                          ; preds = %for.body5
  br label %for.end, !dbg !7680

if.end:                                           ; preds = %for.body5
  %23 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7681
  %flags7 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %23, i32 0, i32 7, !dbg !7683
  %24 = load i32, i32* %flags7, align 8, !dbg !7683
  %and8 = and i32 %24, 10, !dbg !7684
  %cmp9 = icmp eq i32 %and8, 10, !dbg !7685
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7686

if.then10:                                        ; preds = %if.end
  br label %for.end, !dbg !7687

if.end11:                                         ; preds = %if.end
  br label %for.inc, !dbg !7688

for.inc:                                          ; preds = %if.end11
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !7672
  br label %for.cond3, !dbg !7672, !llvm.loop !7689

for.end:                                          ; preds = %if.then10, %if.then, %for.cond3
  %25 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7691
  %tobool12 = icmp ne %struct.edge_def* %25, null, !dbg !7691
  br i1 %tobool12, label %land.lhs.true, label %if.end137, !dbg !7693

land.lhs.true:                                    ; preds = %for.end
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7694
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i32 0, i32 7, !dbg !7694
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7694
  %27 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7694
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %27, i32 0, i32 1, !dbg !7694
  %28 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7694
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !7694
  %bf.load = load i32, i32* %29, align 8, !dbg !7694
  %bf.clear = and i32 %bf.load, 65535, !dbg !7694
  %cmp13 = icmp eq i32 %bf.clear, 10, !dbg !7694
  br i1 %cmp13, label %if.end137, label %land.lhs.true14, !dbg !7695

land.lhs.true14:                                  ; preds = %land.lhs.true
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7696
  %il15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i32 0, i32 7, !dbg !7696
  %rtl16 = bitcast %union.basic_block_il_dependent* %il15 to %struct.rtl_bb_info**, !dbg !7696
  %31 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl16, align 8, !dbg !7696
  %end_17 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %31, i32 0, i32 1, !dbg !7696
  %32 = load %struct.rtx_def*, %struct.rtx_def** %end_17, align 8, !dbg !7696
  %call18 = call zeroext i8 @can_throw_internal(%struct.rtx_def* %32), !dbg !7697
  %tobool19 = icmp ne i8 %call18, 0, !dbg !7697
  br i1 %tobool19, label %if.end137, label %if.then20, !dbg !7698

if.then20:                                        ; preds = %land.lhs.true14
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !7699, metadata !DIExpression()), !dbg !7701
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7702
  %il21 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i32 0, i32 7, !dbg !7702
  %rtl22 = bitcast %union.basic_block_il_dependent* %il21 to %struct.rtl_bb_info**, !dbg !7702
  %34 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl22, align 8, !dbg !7702
  %end_23 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %34, i32 0, i32 1, !dbg !7702
  %35 = load %struct.rtx_def*, %struct.rtx_def** %end_23, align 8, !dbg !7702
  store %struct.rtx_def* %35, %struct.rtx_def** %insn, align 8, !dbg !7703
  br label %while.cond, !dbg !7704

while.cond:                                       ; preds = %while.body, %if.then20
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7705
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !7705
  %bf.load24 = load i32, i32* %37, align 8, !dbg !7705
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !7705
  %cmp26 = icmp eq i32 %bf.clear25, 8, !dbg !7705
  br i1 %cmp26, label %land.lhs.true30, label %lor.lhs.false, !dbg !7706

lor.lhs.false:                                    ; preds = %while.cond
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7707
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !7707
  %bf.load27 = load i32, i32* %39, align 8, !dbg !7707
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !7707
  %cmp29 = icmp eq i32 %bf.clear28, 13, !dbg !7707
  br i1 %cmp29, label %land.lhs.true30, label %land.end, !dbg !7708

land.lhs.true30:                                  ; preds = %lor.lhs.false, %while.cond
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7709
  %call31 = call zeroext i8 @can_throw_internal(%struct.rtx_def* %40), !dbg !7710
  %tobool32 = icmp ne i8 %call31, 0, !dbg !7710
  br i1 %tobool32, label %land.end, label %land.rhs, !dbg !7711

land.rhs:                                         ; preds = %land.lhs.true30
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7712
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7713
  %il33 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %42, i32 0, i32 7, !dbg !7713
  %rtl34 = bitcast %union.basic_block_il_dependent* %il33 to %struct.rtl_bb_info**, !dbg !7713
  %43 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl34, align 8, !dbg !7713
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %43, i32 0, i32 0, !dbg !7713
  %44 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !7713
  %cmp35 = icmp ne %struct.rtx_def* %41, %44, !dbg !7714
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true30, %lor.lhs.false
  %45 = phi i1 [ false, %land.lhs.true30 ], [ false, %lor.lhs.false ], [ %cmp35, %land.rhs ], !dbg !7715
  br i1 %45, label %while.body, label %while.end, !dbg !7704

while.body:                                       ; preds = %land.end
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7716
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !7716
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7716
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !7716
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7716
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7716
  store %struct.rtx_def* %47, %struct.rtx_def** %insn, align 8, !dbg !7717
  br label %while.cond, !dbg !7704, !llvm.loop !7718

while.end:                                        ; preds = %land.end
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7719
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !7719
  %bf.load36 = load i32, i32* %49, align 8, !dbg !7719
  %bf.clear37 = and i32 %bf.load36, 65535, !dbg !7719
  %cmp38 = icmp eq i32 %bf.clear37, 10, !dbg !7719
  br i1 %cmp38, label %if.then42, label %lor.lhs.false39, !dbg !7721

lor.lhs.false39:                                  ; preds = %while.end
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7722
  %call40 = call zeroext i8 @can_throw_internal(%struct.rtx_def* %50), !dbg !7723
  %conv = zext i8 %call40 to i32, !dbg !7723
  %tobool41 = icmp ne i32 %conv, 0, !dbg !7723
  br i1 %tobool41, label %if.then42, label %if.else134, !dbg !7724

if.then42:                                        ; preds = %lor.lhs.false39, %while.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %stop, metadata !7725, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !7728, metadata !DIExpression()), !dbg !7729
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7730
  %il43 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %51, i32 0, i32 7, !dbg !7730
  %rtl44 = bitcast %union.basic_block_il_dependent* %il43 to %struct.rtl_bb_info**, !dbg !7730
  %52 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl44, align 8, !dbg !7730
  %end_45 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %52, i32 0, i32 1, !dbg !7730
  %53 = load %struct.rtx_def*, %struct.rtx_def** %end_45, align 8, !dbg !7730
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !7730
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !7730
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 2, !dbg !7730
  %rt_rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !7730
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49, align 8, !dbg !7730
  store %struct.rtx_def* %54, %struct.rtx_def** %stop, align 8, !dbg !7731
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7732
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7733
  %il50 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %56, i32 0, i32 7, !dbg !7733
  %rtl51 = bitcast %union.basic_block_il_dependent* %il50 to %struct.rtl_bb_info**, !dbg !7733
  %57 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl51, align 8, !dbg !7733
  %end_52 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %57, i32 0, i32 1, !dbg !7733
  store %struct.rtx_def* %55, %struct.rtx_def** %end_52, align 8, !dbg !7734
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7735
  %u53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !7735
  %fld54 = bitcast %union.u* %u53 to [1 x %union.rtunion_def]*, !dbg !7735
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i64 0, i64 2, !dbg !7735
  %rt_rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**, !dbg !7735
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx56, align 8, !dbg !7735
  store %struct.rtx_def* %59, %struct.rtx_def** %insn, align 8, !dbg !7736
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7737
  %succs58 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %60, i32 0, i32 1, !dbg !7737
  %call59 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %succs58), !dbg !7737
  %61 = bitcast %struct.edge_iterator* %tmp57 to { i32, %struct.VEC_edge_gc** }*, !dbg !7737
  %62 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %61, i32 0, i32 0, !dbg !7737
  %63 = extractvalue { i32, %struct.VEC_edge_gc** } %call59, 0, !dbg !7737
  store i32 %63, i32* %62, align 8, !dbg !7737
  %64 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %61, i32 0, i32 1, !dbg !7737
  %65 = extractvalue { i32, %struct.VEC_edge_gc** } %call59, 1, !dbg !7737
  store %struct.VEC_edge_gc** %65, %struct.VEC_edge_gc*** %64, align 8, !dbg !7737
  %66 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7737
  %67 = bitcast %struct.edge_iterator* %tmp57 to i8*, !dbg !7737
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 16, i1 false), !dbg !7737
  br label %for.cond60, !dbg !7737

for.cond60:                                       ; preds = %for.inc69, %if.then42
  %68 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !7739
  %69 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %68, i32 0, i32 0, !dbg !7739
  %70 = load i32, i32* %69, align 8, !dbg !7739
  %71 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %68, i32 0, i32 1, !dbg !7739
  %72 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %71, align 8, !dbg !7739
  %call61 = call zeroext i8 @ei_cond(i32 %70, %struct.VEC_edge_gc** %72, %struct.edge_def** %e), !dbg !7739
  %tobool62 = icmp ne i8 %call61, 0, !dbg !7737
  br i1 %tobool62, label %for.body63, label %for.end70, !dbg !7737

for.body63:                                       ; preds = %for.cond60
  %73 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7741
  %flags64 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %73, i32 0, i32 7, !dbg !7743
  %74 = load i32, i32* %flags64, align 8, !dbg !7743
  %and65 = and i32 %74, 1, !dbg !7744
  %tobool66 = icmp ne i32 %and65, 0, !dbg !7744
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !7745

if.then67:                                        ; preds = %for.body63
  br label %for.end70, !dbg !7746

if.end68:                                         ; preds = %for.body63
  br label %for.inc69, !dbg !7747

for.inc69:                                        ; preds = %if.end68
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !7739
  br label %for.cond60, !dbg !7739, !llvm.loop !7748

for.end70:                                        ; preds = %if.then67, %for.cond60
  br label %while.cond71, !dbg !7750

while.cond71:                                     ; preds = %if.end132, %for.end70
  %75 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7751
  %tobool72 = icmp ne %struct.rtx_def* %75, null, !dbg !7751
  br i1 %tobool72, label %land.rhs73, label %land.end76, !dbg !7752

land.rhs73:                                       ; preds = %while.cond71
  %76 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7753
  %77 = load %struct.rtx_def*, %struct.rtx_def** %stop, align 8, !dbg !7754
  %cmp74 = icmp ne %struct.rtx_def* %76, %77, !dbg !7755
  br label %land.end76

land.end76:                                       ; preds = %land.rhs73, %while.cond71
  %78 = phi i1 [ false, %while.cond71 ], [ %cmp74, %land.rhs73 ], !dbg !7756
  br i1 %78, label %while.body77, label %while.end133, !dbg !7750

while.body77:                                     ; preds = %land.end76
  %79 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7757
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !7757
  %fld79 = bitcast %union.u* %u78 to [1 x %union.rtunion_def]*, !dbg !7757
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i64 0, i64 2, !dbg !7757
  %rt_rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**, !dbg !7757
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !7757
  store %struct.rtx_def* %80, %struct.rtx_def** %next, align 8, !dbg !7759
  %81 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7760
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !7760
  %bf.load82 = load i32, i32* %82, align 8, !dbg !7760
  %bf.clear83 = and i32 %bf.load82, 65535, !dbg !7760
  %cmp84 = icmp eq i32 %bf.clear83, 8, !dbg !7760
  br i1 %cmp84, label %if.then101, label %lor.lhs.false86, !dbg !7760

lor.lhs.false86:                                  ; preds = %while.body77
  %83 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7760
  %84 = bitcast %struct.rtx_def* %83 to i32*, !dbg !7760
  %bf.load87 = load i32, i32* %84, align 8, !dbg !7760
  %bf.clear88 = and i32 %bf.load87, 65535, !dbg !7760
  %cmp89 = icmp eq i32 %bf.clear88, 7, !dbg !7760
  br i1 %cmp89, label %if.then101, label %lor.lhs.false91, !dbg !7760

lor.lhs.false91:                                  ; preds = %lor.lhs.false86
  %85 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7760
  %86 = bitcast %struct.rtx_def* %85 to i32*, !dbg !7760
  %bf.load92 = load i32, i32* %86, align 8, !dbg !7760
  %bf.clear93 = and i32 %bf.load92, 65535, !dbg !7760
  %cmp94 = icmp eq i32 %bf.clear93, 9, !dbg !7760
  br i1 %cmp94, label %if.then101, label %lor.lhs.false96, !dbg !7760

lor.lhs.false96:                                  ; preds = %lor.lhs.false91
  %87 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7760
  %88 = bitcast %struct.rtx_def* %87 to i32*, !dbg !7760
  %bf.load97 = load i32, i32* %88, align 8, !dbg !7760
  %bf.clear98 = and i32 %bf.load97, 65535, !dbg !7760
  %cmp99 = icmp eq i32 %bf.clear98, 10, !dbg !7760
  br i1 %cmp99, label %if.then101, label %if.else, !dbg !7762

if.then101:                                       ; preds = %lor.lhs.false96, %lor.lhs.false91, %lor.lhs.false86, %while.body77
  %89 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7763
  %call102 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %89), !dbg !7765
  %90 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7766
  %u103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1, !dbg !7766
  %fld104 = bitcast %union.u* %u103 to [1 x %union.rtunion_def]*, !dbg !7766
  %arrayidx105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld104, i64 0, i64 5, !dbg !7766
  %rt_rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**, !dbg !7766
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx106, align 8, !dbg !7766
  %92 = bitcast %struct.rtx_def* %91 to i32*, !dbg !7766
  %bf.load107 = load i32, i32* %92, align 8, !dbg !7766
  %bf.clear108 = and i32 %bf.load107, 65535, !dbg !7766
  %cmp109 = icmp ne i32 %bf.clear108, 24, !dbg !7768
  br i1 %cmp109, label %if.then111, label %if.end122, !dbg !7769

if.then111:                                       ; preds = %if.then101
  %93 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7770
  %94 = bitcast %struct.rtx_def* %93 to i32*, !dbg !7770
  %bf.load112 = load i32, i32* %94, align 8, !dbg !7772
  %bf.clear113 = and i32 %bf.load112, -134217729, !dbg !7772
  store i32 %bf.clear113, i32* %94, align 8, !dbg !7772
  %95 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7773
  %u114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1, !dbg !7773
  %fld115 = bitcast %union.u* %u114 to [1 x %union.rtunion_def]*, !dbg !7773
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i64 0, i64 1, !dbg !7773
  %rt_rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**, !dbg !7773
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx117, align 8, !dbg !7774
  %96 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7775
  %u118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1, !dbg !7775
  %fld119 = bitcast %union.u* %u118 to [1 x %union.rtunion_def]*, !dbg !7775
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i64 0, i64 2, !dbg !7775
  %rt_rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**, !dbg !7775
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx121, align 8, !dbg !7776
  %97 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7777
  %98 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7778
  call void @insert_insn_on_edge(%struct.rtx_def* %97, %struct.edge_def* %98), !dbg !7779
  store i8 1, i8* %inserted, align 1, !dbg !7780
  br label %if.end122, !dbg !7781

if.end122:                                        ; preds = %if.then111, %if.then101
  br label %if.end132, !dbg !7782

if.else:                                          ; preds = %lor.lhs.false96
  %99 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7783
  %100 = bitcast %struct.rtx_def* %99 to i32*, !dbg !7783
  %bf.load123 = load i32, i32* %100, align 8, !dbg !7783
  %bf.clear124 = and i32 %bf.load123, 65535, !dbg !7783
  %cmp125 = icmp eq i32 %bf.clear124, 11, !dbg !7783
  br i1 %cmp125, label %if.end131, label %if.then127, !dbg !7785

if.then127:                                       ; preds = %if.else
  %101 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7786
  %u128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1, !dbg !7786
  %fld129 = bitcast %union.u* %u128 to [1 x %union.rtunion_def]*, !dbg !7786
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i64 0, i64 3, !dbg !7786
  %rt_bb = bitcast %union.rtunion_def* %arrayidx130 to %struct.basic_block_def**, !dbg !7786
  store %struct.basic_block_def* null, %struct.basic_block_def** %rt_bb, align 8, !dbg !7786
  br label %if.end131, !dbg !7786

if.end131:                                        ; preds = %if.then127, %if.else
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.end122
  %102 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !7787
  store %struct.rtx_def* %102, %struct.rtx_def** %insn, align 8, !dbg !7788
  br label %while.cond71, !dbg !7750, !llvm.loop !7789

while.end133:                                     ; preds = %land.end76
  br label %if.end136, !dbg !7791

if.else134:                                       ; preds = %lor.lhs.false39
  %103 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7792
  %call135 = call zeroext i8 @purge_dead_edges(%struct.basic_block_def* %103), !dbg !7793
  br label %if.end136

if.end136:                                        ; preds = %if.else134, %while.end133
  br label %if.end137, !dbg !7794

if.end137:                                        ; preds = %if.end136, %land.lhs.true14, %land.lhs.true, %for.end
  br label %for.inc138, !dbg !7795

for.inc138:                                       ; preds = %if.end137
  %104 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7663
  %next_bb139 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %104, i32 0, i32 6, !dbg !7663
  %105 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb139, align 8, !dbg !7663
  store %struct.basic_block_def* %105, %struct.basic_block_def** %bb, align 8, !dbg !7663
  br label %for.cond, !dbg !7663, !llvm.loop !7796

for.end140:                                       ; preds = %for.cond
  %106 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !7798
  %tobool141 = icmp ne i32 %106, 0, !dbg !7798
  br i1 %tobool141, label %if.then142, label %if.end146, !dbg !7800

if.then142:                                       ; preds = %for.end140
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %blocks, metadata !7801, metadata !DIExpression()), !dbg !7814
  %107 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7815
  %add.ptr143 = getelementptr inbounds %struct.function, %struct.function* %107, i64 0, !dbg !7815
  %cfg144 = getelementptr inbounds %struct.function, %struct.function* %add.ptr143, i32 0, i32 1, !dbg !7815
  %108 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg144, align 8, !dbg !7815
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %108, i32 0, i32 5, !dbg !7815
  %109 = load i32, i32* %x_last_basic_block, align 8, !dbg !7815
  %call145 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %109), !dbg !7816
  store %struct.simple_bitmap_def* %call145, %struct.simple_bitmap_def** %blocks, align 8, !dbg !7817
  %110 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %blocks, align 8, !dbg !7818
  call void @sbitmap_ones(%struct.simple_bitmap_def* %110), !dbg !7819
  %111 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %blocks, align 8, !dbg !7820
  call void @find_many_sub_basic_blocks(%struct.simple_bitmap_def* %111), !dbg !7821
  %112 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %blocks, align 8, !dbg !7822
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %112, i32 0, i32 0, !dbg !7822
  %113 = load i8*, i8** %popcount, align 8, !dbg !7822
  call void @free(i8* %113), !dbg !7822
  %114 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %blocks, align 8, !dbg !7822
  %115 = bitcast %struct.simple_bitmap_def* %114 to i8*, !dbg !7822
  call void @free(i8* %115), !dbg !7822
  br label %if.end146, !dbg !7823

if.end146:                                        ; preds = %if.then142, %for.end140
  %116 = load i8, i8* %inserted, align 1, !dbg !7824
  %tobool147 = icmp ne i8 %116, 0, !dbg !7824
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !7826

if.then148:                                       ; preds = %if.end146
  call void @commit_edge_insertions(), !dbg !7827
  br label %if.end149, !dbg !7827

if.end149:                                        ; preds = %if.then148, %if.end146
  ret void, !dbg !7828
}

declare dso_local void @unshare_all_rtl_again(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_rtx_p_heap_free(%struct.VEC_rtx_p_heap** %vec_) #0 !dbg !7829 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_p_heap**, align 8
  store %struct.VEC_rtx_p_heap** %vec_, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_p_heap*** %vec_.addr, metadata !7833, metadata !DIExpression()), !dbg !7834
  %0 = load %struct.VEC_rtx_p_heap**, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8, !dbg !7835
  %1 = load %struct.VEC_rtx_p_heap*, %struct.VEC_rtx_p_heap** %0, align 8, !dbg !7835
  %tobool = icmp ne %struct.VEC_rtx_p_heap* %1, null, !dbg !7835
  br i1 %tobool, label %if.then, label %if.end, !dbg !7834

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_rtx_p_heap**, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8, !dbg !7835
  %3 = load %struct.VEC_rtx_p_heap*, %struct.VEC_rtx_p_heap** %2, align 8, !dbg !7835
  %4 = bitcast %struct.VEC_rtx_p_heap* %3 to i8*, !dbg !7835
  call void @free(i8* %4), !dbg !7835
  br label %if.end, !dbg !7835

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.VEC_rtx_p_heap**, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8, !dbg !7834
  store %struct.VEC_rtx_p_heap* null, %struct.VEC_rtx_p_heap** %5, align 8, !dbg !7834
  ret void, !dbg !7834
}

; Function Attrs: noinline nounwind uwtable
define internal void @mark_home_live_1(i32 %regno, i32 %mode) #0 !dbg !7837 {
entry:
  %regno.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %lim = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !7840, metadata !DIExpression()), !dbg !7841
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7842, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7844, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.declare(metadata i32* %lim, metadata !7846, metadata !DIExpression()), !dbg !7847
  %0 = load i16*, i16** @reg_renumber, align 8, !dbg !7848
  %1 = load i32, i32* %regno.addr, align 4, !dbg !7849
  %idxprom = sext i32 %1 to i64, !dbg !7848
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 %idxprom, !dbg !7848
  %2 = load i16, i16* %arrayidx, align 2, !dbg !7848
  %conv = sext i16 %2 to i32, !dbg !7848
  store i32 %conv, i32* %i, align 4, !dbg !7850
  %3 = load i32, i32* %i, align 4, !dbg !7851
  %cmp = icmp slt i32 %3, 0, !dbg !7853
  br i1 %cmp, label %if.then, label %if.end, !dbg !7854

if.then:                                          ; preds = %entry
  br label %while.end, !dbg !7855

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %mode.addr, align 4, !dbg !7856
  %5 = load i32, i32* %i, align 4, !dbg !7857
  %call = call i32 @end_hard_regno(i32 %4, i32 %5), !dbg !7858
  store i32 %call, i32* %lim, align 4, !dbg !7859
  br label %while.cond, !dbg !7860

while.cond:                                       ; preds = %while.body, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !7861
  %7 = load i32, i32* %lim, align 4, !dbg !7862
  %cmp2 = icmp slt i32 %6, %7, !dbg !7863
  br i1 %cmp2, label %while.body, label %while.end, !dbg !7860

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %i, align 4, !dbg !7864
  %inc = add nsw i32 %8, 1, !dbg !7864
  store i32 %inc, i32* %i, align 4, !dbg !7864
  call void @df_set_regs_ever_live(i32 %8, i8 zeroext 1), !dbg !7865
  br label %while.cond, !dbg !7860, !llvm.loop !7866

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !7868
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %x, i32 %mem_mode, %struct.rtx_def* %insn, i8 zeroext %may_use_invariant) #0 !dbg !7869 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %mem_mode.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %may_use_invariant.addr = alloca i8, align 1
  %code = alloca i32, align 4
  %ep = alloca %struct.elim_table*, align 8
  %regno = alloca i32, align 4
  %new_rtx = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %copied = alloca i32, align 4
  %new0 = alloca %struct.rtx_def*, align 8
  %new1 = alloca %struct.rtx_def*, align 8
  %new0311 = alloca %struct.rtx_def*, align 8
  %new1317 = alloca %struct.rtx_def*, align 8
  %new_rtx454 = alloca %struct.rtx_def*, align 8
  %x_size = alloca i32, align 4
  %new_size = alloca i32, align 4
  %copied_vec = alloca i32, align 4
  %new_v = alloca %struct.rtvec_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !7872, metadata !DIExpression()), !dbg !7873
  store i32 %mem_mode, i32* %mem_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_mode.addr, metadata !7874, metadata !DIExpression()), !dbg !7875
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !7876, metadata !DIExpression()), !dbg !7877
  store i8 %may_use_invariant, i8* %may_use_invariant.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %may_use_invariant.addr, metadata !7878, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.declare(metadata i32* %code, metadata !7880, metadata !DIExpression()), !dbg !7881
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7882
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !7882
  %bf.load = load i32, i32* %1, align 8, !dbg !7882
  %bf.clear = and i32 %bf.load, 65535, !dbg !7882
  store i32 %bf.clear, i32* %code, align 4, !dbg !7881
  call void @llvm.dbg.declare(metadata %struct.elim_table** %ep, metadata !7883, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !7885, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx, metadata !7887, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7889, metadata !DIExpression()), !dbg !7890
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7891, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !7893, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.declare(metadata i32* %copied, metadata !7895, metadata !DIExpression()), !dbg !7896
  store i32 0, i32* %copied, align 4, !dbg !7896
  %2 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !7897
  %tobool = icmp ne %union.tree_node* %2, null, !dbg !7897
  br i1 %tobool, label %if.end, label %if.then, !dbg !7899

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7900
  store %struct.rtx_def* %3, %struct.rtx_def** %retval, align 8, !dbg !7901
  br label %return, !dbg !7901

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %code, align 4, !dbg !7902
  switch i32 %4, label %sw.default [
    i32 30, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 35, label %sw.bb
    i32 45, label %sw.bb
    i32 12, label %sw.bb
    i32 36, label %sw.bb
    i32 46, label %sw.bb
    i32 16, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 27, label %sw.bb
    i32 37, label %sw.bb1
    i32 49, label %sw.bb39
    i32 52, label %sw.bb226
    i32 26, label %sw.bb310
    i32 48, label %sw.bb310
    i32 50, label %sw.bb310
    i32 55, label %sw.bb310
    i32 59, label %sw.bb310
    i32 58, label %sw.bb310
    i32 60, label %sw.bb310
    i32 61, label %sw.bb310
    i32 62, label %sw.bb310
    i32 63, label %sw.bb310
    i32 69, label %sw.bb310
    i32 66, label %sw.bb310
    i32 67, label %sw.bb310
    i32 68, label %sw.bb310
    i32 65, label %sw.bb310
    i32 80, label %sw.bb310
    i32 81, label %sw.bb310
    i32 82, label %sw.bb310
    i32 83, label %sw.bb310
    i32 86, label %sw.bb310
    i32 87, label %sw.bb310
    i32 84, label %sw.bb310
    i32 85, label %sw.bb310
    i32 88, label %sw.bb310
    i32 89, label %sw.bb310
    i32 3, label %sw.bb347
    i32 4, label %sw.bb397
    i32 75, label %sw.bb428
    i32 77, label %sw.bb428
    i32 74, label %sw.bb428
    i32 76, label %sw.bb428
    i32 78, label %sw.bb429
    i32 79, label %sw.bb429
    i32 40, label %sw.bb493
    i32 51, label %sw.bb493
    i32 64, label %sw.bb493
    i32 98, label %sw.bb493
    i32 99, label %sw.bb493
    i32 100, label %sw.bb493
    i32 101, label %sw.bb493
    i32 102, label %sw.bb493
    i32 103, label %sw.bb493
    i32 104, label %sw.bb493
    i32 106, label %sw.bb493
    i32 105, label %sw.bb493
    i32 111, label %sw.bb493
    i32 112, label %sw.bb493
    i32 114, label %sw.bb493
    i32 115, label %sw.bb493
    i32 116, label %sw.bb493
    i32 117, label %sw.bb493
    i32 118, label %sw.bb493
    i32 113, label %sw.bb493
    i32 39, label %sw.bb511
    i32 43, label %sw.bb616
    i32 24, label %sw.bb626
    i32 25, label %sw.bb644
    i32 17, label %sw.bb655
    i32 23, label %sw.bb655
  ], !dbg !7903

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7904
  store %struct.rtx_def* %5, %struct.rtx_def** %retval, align 8, !dbg !7906
  br label %return, !dbg !7906

sw.bb1:                                           ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7907
  %call = call i32 @rhs_regno(%struct.rtx_def* %6), !dbg !7907
  store i32 %call, i32* %regno, align 4, !dbg !7908
  %7 = load i32, i32* %regno, align 4, !dbg !7909
  %cmp = icmp slt i32 %7, 53, !dbg !7911
  br i1 %cmp, label %if.then2, label %if.else, !dbg !7912

if.then2:                                         ; preds = %sw.bb1
  %8 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !7913
  store %struct.elim_table* %8, %struct.elim_table** %ep, align 8, !dbg !7916
  br label %for.cond, !dbg !7917

for.cond:                                         ; preds = %for.inc, %if.then2
  %9 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7918
  %10 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !7920
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %10, i64 4, !dbg !7920
  %cmp3 = icmp ult %struct.elim_table* %9, %arrayidx, !dbg !7921
  br i1 %cmp3, label %for.body, label %for.end, !dbg !7922

for.body:                                         ; preds = %for.cond
  %11 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7923
  %from_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %11, i32 0, i32 8, !dbg !7925
  %12 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx, align 8, !dbg !7925
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7926
  %cmp4 = icmp eq %struct.rtx_def* %12, %13, !dbg !7927
  br i1 %cmp4, label %land.lhs.true, label %if.end8, !dbg !7928

land.lhs.true:                                    ; preds = %for.body
  %14 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7929
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %14, i32 0, i32 3, !dbg !7930
  %15 = load i32, i32* %can_eliminate, align 8, !dbg !7930
  %tobool5 = icmp ne i32 %15, 0, !dbg !7929
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !7931

if.then6:                                         ; preds = %land.lhs.true
  %16 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7932
  %to_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %16, i32 0, i32 9, !dbg !7933
  %17 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx, align 8, !dbg !7933
  %18 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7934
  %previous_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %18, i32 0, i32 6, !dbg !7935
  %19 = load i64, i64* %previous_offset, align 8, !dbg !7935
  %call7 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %17, i64 %19), !dbg !7936
  store %struct.rtx_def* %call7, %struct.rtx_def** %retval, align 8, !dbg !7937
  br label %return, !dbg !7937

if.end8:                                          ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !7930

for.inc:                                          ; preds = %if.end8
  %20 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7938
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %20, i32 1, !dbg !7938
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8, !dbg !7938
  br label %for.cond, !dbg !7939, !llvm.loop !7940

for.end:                                          ; preds = %for.cond
  br label %if.end38, !dbg !7942

if.else:                                          ; preds = %sw.bb1
  %21 = load i16*, i16** @reg_renumber, align 8, !dbg !7943
  %tobool9 = icmp ne i16* %21, null, !dbg !7943
  br i1 %tobool9, label %land.lhs.true10, label %if.end37, !dbg !7945

land.lhs.true10:                                  ; preds = %if.else
  %22 = load i16*, i16** @reg_renumber, align 8, !dbg !7946
  %23 = load i32, i32* %regno, align 4, !dbg !7947
  %idxprom = sext i32 %23 to i64, !dbg !7946
  %arrayidx11 = getelementptr inbounds i16, i16* %22, i64 %idxprom, !dbg !7946
  %24 = load i16, i16* %arrayidx11, align 2, !dbg !7946
  %conv = sext i16 %24 to i32, !dbg !7946
  %cmp12 = icmp slt i32 %conv, 0, !dbg !7948
  br i1 %cmp12, label %land.lhs.true14, label %if.end37, !dbg !7949

land.lhs.true14:                                  ; preds = %land.lhs.true10
  %25 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !7950
  %tobool15 = icmp ne %struct.rtx_def** %25, null, !dbg !7950
  br i1 %tobool15, label %land.lhs.true16, label %if.end37, !dbg !7951

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %26 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !7952
  %27 = load i32, i32* %regno, align 4, !dbg !7953
  %idxprom17 = sext i32 %27 to i64, !dbg !7952
  %arrayidx18 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %26, i64 %idxprom17, !dbg !7952
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8, !dbg !7952
  %tobool19 = icmp ne %struct.rtx_def* %28, null, !dbg !7952
  br i1 %tobool19, label %if.then20, label %if.end37, !dbg !7954

if.then20:                                        ; preds = %land.lhs.true16
  %29 = load i8, i8* %may_use_invariant.addr, align 1, !dbg !7955
  %conv21 = zext i8 %29 to i32, !dbg !7955
  %tobool22 = icmp ne i32 %conv21, 0, !dbg !7955
  br i1 %tobool22, label %if.then29, label %lor.lhs.false, !dbg !7958

lor.lhs.false:                                    ; preds = %if.then20
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7959
  %tobool23 = icmp ne %struct.rtx_def* %30, null, !dbg !7959
  br i1 %tobool23, label %land.lhs.true24, label %if.end34, !dbg !7960

land.lhs.true24:                                  ; preds = %lor.lhs.false
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7961
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !7961
  %bf.load25 = load i32, i32* %32, align 8, !dbg !7961
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !7961
  %cmp27 = icmp eq i32 %bf.clear26, 7, !dbg !7961
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !7962

if.then29:                                        ; preds = %land.lhs.true24, %if.then20
  %33 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_invariant, align 8, !dbg !7963
  %34 = load i32, i32* %regno, align 4, !dbg !7964
  %idxprom30 = sext i32 %34 to i64, !dbg !7963
  %arrayidx31 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %33, i64 %idxprom30, !dbg !7963
  %35 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx31, align 8, !dbg !7963
  %call32 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %35), !dbg !7965
  %36 = load i32, i32* %mem_mode.addr, align 4, !dbg !7966
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7967
  %call33 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %call32, i32 %36, %struct.rtx_def* %37, i8 zeroext 1), !dbg !7968
  store %struct.rtx_def* %call33, %struct.rtx_def** %retval, align 8, !dbg !7969
  br label %return, !dbg !7969

if.end34:                                         ; preds = %land.lhs.true24, %lor.lhs.false
  %38 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !7970
  %39 = load i32, i32* %regno, align 4, !dbg !7971
  %idxprom35 = sext i32 %39 to i64, !dbg !7970
  %arrayidx36 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %38, i64 %idxprom35, !dbg !7970
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx36, align 8, !dbg !7972
  %40 = load i32, i32* %regno, align 4, !dbg !7973
  call void @alter_reg(i32 %40, i32 -1, i8 zeroext 1), !dbg !7974
  br label %if.end37, !dbg !7975

if.end37:                                         ; preds = %if.end34, %land.lhs.true16, %land.lhs.true14, %land.lhs.true10, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %for.end
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7976
  store %struct.rtx_def* %41, %struct.rtx_def** %retval, align 8, !dbg !7977
  br label %return, !dbg !7977

sw.bb39:                                          ; preds = %if.end
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7978
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !7978
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7978
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7978
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !7978
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7978
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !7978
  %bf.load41 = load i32, i32* %44, align 8, !dbg !7978
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !7978
  %cmp43 = icmp eq i32 %bf.clear42, 37, !dbg !7978
  br i1 %cmp43, label %land.lhs.true45, label %if.end117, !dbg !7980

land.lhs.true45:                                  ; preds = %sw.bb39
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7981
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !7981
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !7981
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 0, !dbg !7981
  %rt_rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !7981
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49, align 8, !dbg !7981
  %call50 = call i32 @rhs_regno(%struct.rtx_def* %46), !dbg !7981
  %cmp51 = icmp ult i32 %call50, 53, !dbg !7982
  br i1 %cmp51, label %land.lhs.true53, label %if.end117, !dbg !7983

land.lhs.true53:                                  ; preds = %land.lhs.true45
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7984
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !7984
  %fld55 = bitcast %union.u* %u54 to [1 x %union.rtunion_def]*, !dbg !7984
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i64 0, i64 1, !dbg !7984
  %rt_rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**, !dbg !7984
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx57, align 8, !dbg !7984
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !7984
  %bf.load58 = load i32, i32* %49, align 8, !dbg !7984
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !7984
  %idxprom60 = sext i32 %bf.clear59 to i64, !dbg !7984
  %arrayidx61 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom60, !dbg !7984
  %50 = load i32, i32* %arrayidx61, align 4, !dbg !7984
  %cmp62 = icmp eq i32 %50, 9, !dbg !7984
  br i1 %cmp62, label %if.then64, label %if.end117, !dbg !7985

if.then64:                                        ; preds = %land.lhs.true53
  %51 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !7986
  store %struct.elim_table* %51, %struct.elim_table** %ep, align 8, !dbg !7989
  br label %for.cond65, !dbg !7990

for.cond65:                                       ; preds = %for.inc114, %if.then64
  %52 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7991
  %53 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !7993
  %arrayidx66 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %53, i64 4, !dbg !7993
  %cmp67 = icmp ult %struct.elim_table* %52, %arrayidx66, !dbg !7994
  br i1 %cmp67, label %for.body69, label %for.end116, !dbg !7995

for.body69:                                       ; preds = %for.cond65
  %54 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !7996
  %from_rtx70 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %54, i32 0, i32 8, !dbg !7998
  %55 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx70, align 8, !dbg !7998
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !7999
  %u71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !7999
  %fld72 = bitcast %union.u* %u71 to [1 x %union.rtunion_def]*, !dbg !7999
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i64 0, i64 0, !dbg !7999
  %rt_rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**, !dbg !7999
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx74, align 8, !dbg !7999
  %cmp75 = icmp eq %struct.rtx_def* %55, %57, !dbg !8000
  br i1 %cmp75, label %land.lhs.true77, label %if.end113, !dbg !8001

land.lhs.true77:                                  ; preds = %for.body69
  %58 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8002
  %can_eliminate78 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %58, i32 0, i32 3, !dbg !8003
  %59 = load i32, i32* %can_eliminate78, align 8, !dbg !8003
  %tobool79 = icmp ne i32 %59, 0, !dbg !8002
  br i1 %tobool79, label %if.then80, label %if.end113, !dbg !8004

if.then80:                                        ; preds = %land.lhs.true77
  %60 = load i32, i32* %mem_mode.addr, align 4, !dbg !8005
  %cmp81 = icmp ne i32 %60, 0, !dbg !8008
  br i1 %cmp81, label %land.lhs.true83, label %if.else104, !dbg !8009

land.lhs.true83:                                  ; preds = %if.then80
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8010
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !8010
  %fld85 = bitcast %union.u* %u84 to [1 x %union.rtunion_def]*, !dbg !8010
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i64 0, i64 1, !dbg !8010
  %rt_rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**, !dbg !8010
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx87, align 8, !dbg !8010
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !8010
  %bf.load88 = load i32, i32* %63, align 8, !dbg !8010
  %bf.clear89 = and i32 %bf.load88, 65535, !dbg !8010
  %cmp90 = icmp eq i32 %bf.clear89, 30, !dbg !8010
  br i1 %cmp90, label %land.lhs.true92, label %if.else104, !dbg !8011

land.lhs.true92:                                  ; preds = %land.lhs.true83
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8012
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1, !dbg !8012
  %fld94 = bitcast %union.u* %u93 to [1 x %union.rtunion_def]*, !dbg !8012
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 1, !dbg !8012
  %rt_rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**, !dbg !8012
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx96, align 8, !dbg !8012
  %u97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !8012
  %hwint = bitcast %union.u* %u97 to [1 x i64]*, !dbg !8012
  %arrayidx98 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !8012
  %66 = load i64, i64* %arrayidx98, align 8, !dbg !8012
  %67 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8013
  %previous_offset99 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %67, i32 0, i32 6, !dbg !8014
  %68 = load i64, i64* %previous_offset99, align 8, !dbg !8014
  %sub = sub nsw i64 0, %68, !dbg !8015
  %cmp100 = icmp eq i64 %66, %sub, !dbg !8016
  br i1 %cmp100, label %if.then102, label %if.else104, !dbg !8017

if.then102:                                       ; preds = %land.lhs.true92
  %69 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8018
  %to_rtx103 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %69, i32 0, i32 9, !dbg !8019
  %70 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx103, align 8, !dbg !8019
  store %struct.rtx_def* %70, %struct.rtx_def** %retval, align 8, !dbg !8020
  br label %return, !dbg !8020

if.else104:                                       ; preds = %land.lhs.true92, %land.lhs.true83, %if.then80
  %71 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8021
  %to_rtx105 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %71, i32 0, i32 9, !dbg !8021
  %72 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx105, align 8, !dbg !8021
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8021
  %u106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !8021
  %fld107 = bitcast %union.u* %u106 to [1 x %union.rtunion_def]*, !dbg !8021
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 1, !dbg !8021
  %rt_rtx109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtx_def**, !dbg !8021
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx109, align 8, !dbg !8021
  %75 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8021
  %previous_offset110 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %75, i32 0, i32 6, !dbg !8021
  %76 = load i64, i64* %previous_offset110, align 8, !dbg !8021
  %call111 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %74, i64 %76), !dbg !8021
  %call112 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 16, %struct.rtx_def* %72, %struct.rtx_def* %call111), !dbg !8021
  store %struct.rtx_def* %call112, %struct.rtx_def** %retval, align 8, !dbg !8022
  br label %return, !dbg !8022

if.end113:                                        ; preds = %land.lhs.true77, %for.body69
  br label %for.inc114, !dbg !8003

for.inc114:                                       ; preds = %if.end113
  %77 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8023
  %incdec.ptr115 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %77, i32 1, !dbg !8023
  store %struct.elim_table* %incdec.ptr115, %struct.elim_table** %ep, align 8, !dbg !8023
  br label %for.cond65, !dbg !8024, !llvm.loop !8025

for.end116:                                       ; preds = %for.cond65
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8027
  store %struct.rtx_def* %78, %struct.rtx_def** %retval, align 8, !dbg !8028
  br label %return, !dbg !8028

if.end117:                                        ; preds = %land.lhs.true53, %land.lhs.true45, %sw.bb39
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new0, metadata !8029, metadata !DIExpression()), !dbg !8031
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8032
  %u118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !8032
  %fld119 = bitcast %union.u* %u118 to [1 x %union.rtunion_def]*, !dbg !8032
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i64 0, i64 0, !dbg !8032
  %rt_rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**, !dbg !8032
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx121, align 8, !dbg !8032
  %81 = load i32, i32* %mem_mode.addr, align 4, !dbg !8033
  %82 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8034
  %call122 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %80, i32 %81, %struct.rtx_def* %82, i8 zeroext 1), !dbg !8035
  store %struct.rtx_def* %call122, %struct.rtx_def** %new0, align 8, !dbg !8031
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new1, metadata !8036, metadata !DIExpression()), !dbg !8037
  %83 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8038
  %u123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !8038
  %fld124 = bitcast %union.u* %u123 to [1 x %union.rtunion_def]*, !dbg !8038
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i64 0, i64 1, !dbg !8038
  %rt_rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**, !dbg !8038
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx126, align 8, !dbg !8038
  %85 = load i32, i32* %mem_mode.addr, align 4, !dbg !8039
  %86 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8040
  %call127 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %84, i32 %85, %struct.rtx_def* %86, i8 zeroext 1), !dbg !8041
  store %struct.rtx_def* %call127, %struct.rtx_def** %new1, align 8, !dbg !8037
  %87 = load i16*, i16** @reg_renumber, align 8, !dbg !8042
  %tobool128 = icmp ne i16* %87, null, !dbg !8042
  br i1 %tobool128, label %land.lhs.true129, label %if.end225, !dbg !8044

land.lhs.true129:                                 ; preds = %if.end117
  %88 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8, !dbg !8045
  %89 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8046
  %u130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1, !dbg !8046
  %fld131 = bitcast %union.u* %u130 to [1 x %union.rtunion_def]*, !dbg !8046
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i64 0, i64 0, !dbg !8046
  %rt_rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**, !dbg !8046
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx133, align 8, !dbg !8046
  %cmp134 = icmp ne %struct.rtx_def* %88, %90, !dbg !8047
  br i1 %cmp134, label %if.then143, label %lor.lhs.false136, !dbg !8048

lor.lhs.false136:                                 ; preds = %land.lhs.true129
  %91 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8, !dbg !8049
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8050
  %u137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !8050
  %fld138 = bitcast %union.u* %u137 to [1 x %union.rtunion_def]*, !dbg !8050
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i64 0, i64 1, !dbg !8050
  %rt_rtx140 = bitcast %union.rtunion_def* %arrayidx139 to %struct.rtx_def**, !dbg !8050
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx140, align 8, !dbg !8050
  %cmp141 = icmp ne %struct.rtx_def* %91, %93, !dbg !8051
  br i1 %cmp141, label %if.then143, label %if.end225, !dbg !8052

if.then143:                                       ; preds = %lor.lhs.false136, %land.lhs.true129
  %94 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8, !dbg !8053
  %95 = bitcast %struct.rtx_def* %94 to i32*, !dbg !8053
  %bf.load144 = load i32, i32* %95, align 8, !dbg !8053
  %bf.clear145 = and i32 %bf.load144, 65535, !dbg !8053
  %cmp146 = icmp eq i32 %bf.clear145, 49, !dbg !8056
  br i1 %cmp146, label %land.lhs.true148, label %if.else177, !dbg !8057

land.lhs.true148:                                 ; preds = %if.then143
  %96 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8, !dbg !8058
  %97 = bitcast %struct.rtx_def* %96 to i32*, !dbg !8058
  %bf.load149 = load i32, i32* %97, align 8, !dbg !8058
  %bf.clear150 = and i32 %bf.load149, 65535, !dbg !8058
  %cmp151 = icmp eq i32 %bf.clear150, 37, !dbg !8058
  br i1 %cmp151, label %land.lhs.true153, label %if.else177, !dbg !8059

land.lhs.true153:                                 ; preds = %land.lhs.true148
  %98 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8, !dbg !8060
  %call154 = call i32 @rhs_regno(%struct.rtx_def* %98), !dbg !8060
  %cmp155 = icmp uge i32 %call154, 53, !dbg !8061
  br i1 %cmp155, label %land.lhs.true157, label %if.else177, !dbg !8062

land.lhs.true157:                                 ; preds = %land.lhs.true153
  %99 = load i16*, i16** @reg_renumber, align 8, !dbg !8063
  %100 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8, !dbg !8064
  %call158 = call i32 @rhs_regno(%struct.rtx_def* %100), !dbg !8064
  %idxprom159 = zext i32 %call158 to i64, !dbg !8063
  %arrayidx160 = getelementptr inbounds i16, i16* %99, i64 %idxprom159, !dbg !8063
  %101 = load i16, i16* %arrayidx160, align 2, !dbg !8063
  %conv161 = sext i16 %101 to i32, !dbg !8063
  %cmp162 = icmp slt i32 %conv161, 0, !dbg !8065
  br i1 %cmp162, label %land.lhs.true164, label %if.else177, !dbg !8066

land.lhs.true164:                                 ; preds = %land.lhs.true157
  %102 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !8067
  %cmp165 = icmp ne %struct.rtx_def** %102, null, !dbg !8068
  br i1 %cmp165, label %land.lhs.true167, label %if.else177, !dbg !8069

land.lhs.true167:                                 ; preds = %land.lhs.true164
  %103 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !8070
  %104 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8, !dbg !8071
  %call168 = call i32 @rhs_regno(%struct.rtx_def* %104), !dbg !8071
  %idxprom169 = zext i32 %call168 to i64, !dbg !8070
  %arrayidx170 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %103, i64 %idxprom169, !dbg !8070
  %105 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx170, align 8, !dbg !8070
  %cmp171 = icmp ne %struct.rtx_def* %105, null, !dbg !8072
  br i1 %cmp171, label %if.then173, label %if.else177, !dbg !8073

if.then173:                                       ; preds = %land.lhs.true167
  %106 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !8074
  %107 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8, !dbg !8075
  %call174 = call i32 @rhs_regno(%struct.rtx_def* %107), !dbg !8075
  %idxprom175 = zext i32 %call174 to i64, !dbg !8074
  %arrayidx176 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %106, i64 %idxprom175, !dbg !8074
  %108 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx176, align 8, !dbg !8074
  store %struct.rtx_def* %108, %struct.rtx_def** %new1, align 8, !dbg !8076
  br label %if.end209, !dbg !8077

if.else177:                                       ; preds = %land.lhs.true167, %land.lhs.true164, %land.lhs.true157, %land.lhs.true153, %land.lhs.true148, %if.then143
  %109 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8, !dbg !8078
  %110 = bitcast %struct.rtx_def* %109 to i32*, !dbg !8078
  %bf.load178 = load i32, i32* %110, align 8, !dbg !8078
  %bf.clear179 = and i32 %bf.load178, 65535, !dbg !8078
  %cmp180 = icmp eq i32 %bf.clear179, 49, !dbg !8080
  br i1 %cmp180, label %land.lhs.true182, label %if.end208, !dbg !8081

land.lhs.true182:                                 ; preds = %if.else177
  %111 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8, !dbg !8082
  %112 = bitcast %struct.rtx_def* %111 to i32*, !dbg !8082
  %bf.load183 = load i32, i32* %112, align 8, !dbg !8082
  %bf.clear184 = and i32 %bf.load183, 65535, !dbg !8082
  %cmp185 = icmp eq i32 %bf.clear184, 37, !dbg !8082
  br i1 %cmp185, label %land.lhs.true187, label %if.end208, !dbg !8083

land.lhs.true187:                                 ; preds = %land.lhs.true182
  %113 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8, !dbg !8084
  %call188 = call i32 @rhs_regno(%struct.rtx_def* %113), !dbg !8084
  %cmp189 = icmp uge i32 %call188, 53, !dbg !8085
  br i1 %cmp189, label %land.lhs.true191, label %if.end208, !dbg !8086

land.lhs.true191:                                 ; preds = %land.lhs.true187
  %114 = load i16*, i16** @reg_renumber, align 8, !dbg !8087
  %115 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8, !dbg !8088
  %call192 = call i32 @rhs_regno(%struct.rtx_def* %115), !dbg !8088
  %idxprom193 = zext i32 %call192 to i64, !dbg !8087
  %arrayidx194 = getelementptr inbounds i16, i16* %114, i64 %idxprom193, !dbg !8087
  %116 = load i16, i16* %arrayidx194, align 2, !dbg !8087
  %conv195 = sext i16 %116 to i32, !dbg !8087
  %cmp196 = icmp slt i32 %conv195, 0, !dbg !8089
  br i1 %cmp196, label %land.lhs.true198, label %if.end208, !dbg !8090

land.lhs.true198:                                 ; preds = %land.lhs.true191
  %117 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !8091
  %118 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8, !dbg !8092
  %call199 = call i32 @rhs_regno(%struct.rtx_def* %118), !dbg !8092
  %idxprom200 = zext i32 %call199 to i64, !dbg !8091
  %arrayidx201 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %117, i64 %idxprom200, !dbg !8091
  %119 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx201, align 8, !dbg !8091
  %cmp202 = icmp ne %struct.rtx_def* %119, null, !dbg !8093
  br i1 %cmp202, label %if.then204, label %if.end208, !dbg !8094

if.then204:                                       ; preds = %land.lhs.true198
  %120 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !8095
  %121 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8, !dbg !8096
  %call205 = call i32 @rhs_regno(%struct.rtx_def* %121), !dbg !8096
  %idxprom206 = zext i32 %call205 to i64, !dbg !8095
  %arrayidx207 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %120, i64 %idxprom206, !dbg !8095
  %122 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx207, align 8, !dbg !8095
  store %struct.rtx_def* %122, %struct.rtx_def** %new0, align 8, !dbg !8097
  br label %if.end208, !dbg !8098

if.end208:                                        ; preds = %if.then204, %land.lhs.true198, %land.lhs.true191, %land.lhs.true187, %land.lhs.true182, %if.else177
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.then173
  %123 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8099
  %124 = bitcast %struct.rtx_def* %123 to i32*, !dbg !8099
  %bf.load210 = load i32, i32* %124, align 8, !dbg !8099
  %bf.lshr = lshr i32 %bf.load210, 16, !dbg !8099
  %bf.clear211 = and i32 %bf.lshr, 255, !dbg !8099
  %125 = load %struct.rtx_def*, %struct.rtx_def** %new0, align 8, !dbg !8100
  %126 = load %struct.rtx_def*, %struct.rtx_def** %new1, align 8, !dbg !8101
  %call212 = call %struct.rtx_def* @form_sum(i32 %bf.clear211, %struct.rtx_def* %125, %struct.rtx_def* %126), !dbg !8102
  store %struct.rtx_def* %call212, %struct.rtx_def** %new_rtx, align 8, !dbg !8103
  %127 = load i32, i32* %mem_mode.addr, align 4, !dbg !8104
  %tobool213 = icmp ne i32 %127, 0, !dbg !8104
  br i1 %tobool213, label %if.else224, label %land.lhs.true214, !dbg !8106

land.lhs.true214:                                 ; preds = %if.end209
  %128 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8107
  %129 = bitcast %struct.rtx_def* %128 to i32*, !dbg !8107
  %bf.load215 = load i32, i32* %129, align 8, !dbg !8107
  %bf.clear216 = and i32 %bf.load215, 65535, !dbg !8107
  %cmp217 = icmp ne i32 %bf.clear216, 49, !dbg !8108
  br i1 %cmp217, label %if.then219, label %if.else224, !dbg !8109

if.then219:                                       ; preds = %land.lhs.true214
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8110
  %131 = bitcast %struct.rtx_def* %130 to i32*, !dbg !8110
  %bf.load220 = load i32, i32* %131, align 8, !dbg !8110
  %bf.lshr221 = lshr i32 %bf.load220, 16, !dbg !8110
  %bf.clear222 = and i32 %bf.lshr221, 255, !dbg !8110
  %132 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8110
  %133 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8110
  %call223 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %bf.clear222, %struct.rtx_def* %132, %struct.rtx_def* %133), !dbg !8110
  store %struct.rtx_def* %call223, %struct.rtx_def** %retval, align 8, !dbg !8111
  br label %return, !dbg !8111

if.else224:                                       ; preds = %land.lhs.true214, %if.end209
  %134 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8112
  store %struct.rtx_def* %134, %struct.rtx_def** %retval, align 8, !dbg !8113
  br label %return, !dbg !8113

if.end225:                                        ; preds = %lor.lhs.false136, %if.end117
  %135 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8114
  store %struct.rtx_def* %135, %struct.rtx_def** %retval, align 8, !dbg !8115
  br label %return, !dbg !8115

sw.bb226:                                         ; preds = %if.end
  %136 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8116
  %u227 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1, !dbg !8116
  %fld228 = bitcast %union.u* %u227 to [1 x %union.rtunion_def]*, !dbg !8116
  %arrayidx229 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld228, i64 0, i64 0, !dbg !8116
  %rt_rtx230 = bitcast %union.rtunion_def* %arrayidx229 to %struct.rtx_def**, !dbg !8116
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx230, align 8, !dbg !8116
  %138 = bitcast %struct.rtx_def* %137 to i32*, !dbg !8116
  %bf.load231 = load i32, i32* %138, align 8, !dbg !8116
  %bf.clear232 = and i32 %bf.load231, 65535, !dbg !8116
  %cmp233 = icmp eq i32 %bf.clear232, 37, !dbg !8116
  br i1 %cmp233, label %land.lhs.true235, label %if.end309, !dbg !8118

land.lhs.true235:                                 ; preds = %sw.bb226
  %139 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8119
  %u236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1, !dbg !8119
  %fld237 = bitcast %union.u* %u236 to [1 x %union.rtunion_def]*, !dbg !8119
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i64 0, i64 0, !dbg !8119
  %rt_rtx239 = bitcast %union.rtunion_def* %arrayidx238 to %struct.rtx_def**, !dbg !8119
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx239, align 8, !dbg !8119
  %call240 = call i32 @rhs_regno(%struct.rtx_def* %140), !dbg !8119
  %cmp241 = icmp ult i32 %call240, 53, !dbg !8120
  br i1 %cmp241, label %land.lhs.true243, label %if.end309, !dbg !8121

land.lhs.true243:                                 ; preds = %land.lhs.true235
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8122
  %u244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1, !dbg !8122
  %fld245 = bitcast %union.u* %u244 to [1 x %union.rtunion_def]*, !dbg !8122
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i64 0, i64 1, !dbg !8122
  %rt_rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**, !dbg !8122
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx247, align 8, !dbg !8122
  %143 = bitcast %struct.rtx_def* %142 to i32*, !dbg !8122
  %bf.load248 = load i32, i32* %143, align 8, !dbg !8122
  %bf.clear249 = and i32 %bf.load248, 65535, !dbg !8122
  %cmp250 = icmp eq i32 %bf.clear249, 30, !dbg !8122
  br i1 %cmp250, label %if.then252, label %if.end309, !dbg !8123

if.then252:                                       ; preds = %land.lhs.true243
  %144 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !8124
  store %struct.elim_table* %144, %struct.elim_table** %ep, align 8, !dbg !8126
  br label %for.cond253, !dbg !8127

for.cond253:                                      ; preds = %for.inc306, %if.then252
  %145 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8128
  %146 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !8130
  %arrayidx254 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %146, i64 4, !dbg !8130
  %cmp255 = icmp ult %struct.elim_table* %145, %arrayidx254, !dbg !8131
  br i1 %cmp255, label %for.body257, label %for.end308, !dbg !8132

for.body257:                                      ; preds = %for.cond253
  %147 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8133
  %from_rtx258 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %147, i32 0, i32 8, !dbg !8135
  %148 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx258, align 8, !dbg !8135
  %149 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8136
  %u259 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1, !dbg !8136
  %fld260 = bitcast %union.u* %u259 to [1 x %union.rtunion_def]*, !dbg !8136
  %arrayidx261 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld260, i64 0, i64 0, !dbg !8136
  %rt_rtx262 = bitcast %union.rtunion_def* %arrayidx261 to %struct.rtx_def**, !dbg !8136
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx262, align 8, !dbg !8136
  %cmp263 = icmp eq %struct.rtx_def* %148, %150, !dbg !8137
  br i1 %cmp263, label %land.lhs.true265, label %if.end305, !dbg !8138

land.lhs.true265:                                 ; preds = %for.body257
  %151 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8139
  %can_eliminate266 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %151, i32 0, i32 3, !dbg !8140
  %152 = load i32, i32* %can_eliminate266, align 8, !dbg !8140
  %tobool267 = icmp ne i32 %152, 0, !dbg !8139
  br i1 %tobool267, label %if.then268, label %if.end305, !dbg !8141

if.then268:                                       ; preds = %land.lhs.true265
  %153 = load i32, i32* %mem_mode.addr, align 4, !dbg !8142
  %tobool269 = icmp ne i32 %153, 0, !dbg !8142
  br i1 %tobool269, label %if.end289, label %land.lhs.true270, !dbg !8145

land.lhs.true270:                                 ; preds = %if.then268
  %154 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8146
  %cmp271 = icmp ne %struct.rtx_def* %154, null, !dbg !8147
  br i1 %cmp271, label %land.lhs.true273, label %if.then288, !dbg !8148

land.lhs.true273:                                 ; preds = %land.lhs.true270
  %155 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8149
  %156 = bitcast %struct.rtx_def* %155 to i32*, !dbg !8149
  %bf.load274 = load i32, i32* %156, align 8, !dbg !8149
  %bf.clear275 = and i32 %bf.load274, 65535, !dbg !8149
  %cmp276 = icmp eq i32 %bf.clear275, 3, !dbg !8150
  br i1 %cmp276, label %if.end289, label %lor.lhs.false278, !dbg !8151

lor.lhs.false278:                                 ; preds = %land.lhs.true273
  %157 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8152
  %158 = bitcast %struct.rtx_def* %157 to i32*, !dbg !8152
  %bf.load279 = load i32, i32* %158, align 8, !dbg !8152
  %bf.clear280 = and i32 %bf.load279, 65535, !dbg !8152
  %cmp281 = icmp eq i32 %bf.clear280, 4, !dbg !8153
  br i1 %cmp281, label %if.end289, label %lor.lhs.false283, !dbg !8154

lor.lhs.false283:                                 ; preds = %lor.lhs.false278
  %159 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8155
  %160 = bitcast %struct.rtx_def* %159 to i32*, !dbg !8155
  %bf.load284 = load i32, i32* %160, align 8, !dbg !8155
  %bf.clear285 = and i32 %bf.load284, 65535, !dbg !8155
  %cmp286 = icmp eq i32 %bf.clear285, 7, !dbg !8155
  br i1 %cmp286, label %if.end289, label %if.then288, !dbg !8156

if.then288:                                       ; preds = %lor.lhs.false283, %land.lhs.true270
  %161 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8157
  %ref_outside_mem = getelementptr inbounds %struct.elim_table, %struct.elim_table* %161, i32 0, i32 7, !dbg !8158
  store i32 1, i32* %ref_outside_mem, align 8, !dbg !8159
  br label %if.end289, !dbg !8157

if.end289:                                        ; preds = %if.then288, %lor.lhs.false283, %lor.lhs.false278, %land.lhs.true273, %if.then268
  %162 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8160
  %to_rtx290 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %162, i32 0, i32 9, !dbg !8160
  %163 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx290, align 8, !dbg !8160
  %164 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8160
  %u291 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1, !dbg !8160
  %fld292 = bitcast %union.u* %u291 to [1 x %union.rtunion_def]*, !dbg !8160
  %arrayidx293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld292, i64 0, i64 1, !dbg !8160
  %rt_rtx294 = bitcast %union.rtunion_def* %arrayidx293 to %struct.rtx_def**, !dbg !8160
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx294, align 8, !dbg !8160
  %call295 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 52, i32 16, %struct.rtx_def* %163, %struct.rtx_def* %165), !dbg !8160
  %166 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8161
  %previous_offset296 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %166, i32 0, i32 6, !dbg !8162
  %167 = load i64, i64* %previous_offset296, align 8, !dbg !8162
  %168 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8163
  %u297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i32 0, i32 1, !dbg !8163
  %fld298 = bitcast %union.u* %u297 to [1 x %union.rtunion_def]*, !dbg !8163
  %arrayidx299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld298, i64 0, i64 1, !dbg !8163
  %rt_rtx300 = bitcast %union.rtunion_def* %arrayidx299 to %struct.rtx_def**, !dbg !8163
  %169 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx300, align 8, !dbg !8163
  %u301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1, !dbg !8163
  %hwint302 = bitcast %union.u* %u301 to [1 x i64]*, !dbg !8163
  %arrayidx303 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint302, i64 0, i64 0, !dbg !8163
  %170 = load i64, i64* %arrayidx303, align 8, !dbg !8163
  %mul = mul nsw i64 %167, %170, !dbg !8164
  %call304 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %call295, i64 %mul), !dbg !8165
  store %struct.rtx_def* %call304, %struct.rtx_def** %retval, align 8, !dbg !8166
  br label %return, !dbg !8166

if.end305:                                        ; preds = %land.lhs.true265, %for.body257
  br label %for.inc306, !dbg !8140

for.inc306:                                       ; preds = %if.end305
  %171 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8167
  %incdec.ptr307 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %171, i32 1, !dbg !8167
  store %struct.elim_table* %incdec.ptr307, %struct.elim_table** %ep, align 8, !dbg !8167
  br label %for.cond253, !dbg !8168, !llvm.loop !8169

for.end308:                                       ; preds = %for.cond253
  br label %if.end309, !dbg !8170

if.end309:                                        ; preds = %for.end308, %land.lhs.true243, %land.lhs.true235, %sw.bb226
  br label %sw.bb310, !dbg !8122

sw.bb310:                                         ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end309
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new0311, metadata !8171, metadata !DIExpression()), !dbg !8173
  %172 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8174
  %u312 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1, !dbg !8174
  %fld313 = bitcast %union.u* %u312 to [1 x %union.rtunion_def]*, !dbg !8174
  %arrayidx314 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld313, i64 0, i64 0, !dbg !8174
  %rt_rtx315 = bitcast %union.rtunion_def* %arrayidx314 to %struct.rtx_def**, !dbg !8174
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx315, align 8, !dbg !8174
  %174 = load i32, i32* %mem_mode.addr, align 4, !dbg !8175
  %175 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8176
  %call316 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %173, i32 %174, %struct.rtx_def* %175, i8 zeroext 0), !dbg !8177
  store %struct.rtx_def* %call316, %struct.rtx_def** %new0311, align 8, !dbg !8173
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new1317, metadata !8178, metadata !DIExpression()), !dbg !8179
  %176 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8180
  %u318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1, !dbg !8180
  %fld319 = bitcast %union.u* %u318 to [1 x %union.rtunion_def]*, !dbg !8180
  %arrayidx320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld319, i64 0, i64 1, !dbg !8180
  %rt_rtx321 = bitcast %union.rtunion_def* %arrayidx320 to %struct.rtx_def**, !dbg !8180
  %177 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx321, align 8, !dbg !8180
  %tobool322 = icmp ne %struct.rtx_def* %177, null, !dbg !8180
  br i1 %tobool322, label %cond.true, label %cond.false, !dbg !8180

cond.true:                                        ; preds = %sw.bb310
  %178 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8181
  %u323 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1, !dbg !8181
  %fld324 = bitcast %union.u* %u323 to [1 x %union.rtunion_def]*, !dbg !8181
  %arrayidx325 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld324, i64 0, i64 1, !dbg !8181
  %rt_rtx326 = bitcast %union.rtunion_def* %arrayidx325 to %struct.rtx_def**, !dbg !8181
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx326, align 8, !dbg !8181
  %180 = load i32, i32* %mem_mode.addr, align 4, !dbg !8182
  %181 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8183
  %call327 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %179, i32 %180, %struct.rtx_def* %181, i8 zeroext 0), !dbg !8184
  br label %cond.end, !dbg !8180

cond.false:                                       ; preds = %sw.bb310
  br label %cond.end, !dbg !8180

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %call327, %cond.true ], [ null, %cond.false ], !dbg !8180
  store %struct.rtx_def* %cond, %struct.rtx_def** %new1317, align 8, !dbg !8179
  %182 = load %struct.rtx_def*, %struct.rtx_def** %new0311, align 8, !dbg !8185
  %183 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8187
  %u328 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1, !dbg !8187
  %fld329 = bitcast %union.u* %u328 to [1 x %union.rtunion_def]*, !dbg !8187
  %arrayidx330 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld329, i64 0, i64 0, !dbg !8187
  %rt_rtx331 = bitcast %union.rtunion_def* %arrayidx330 to %struct.rtx_def**, !dbg !8187
  %184 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx331, align 8, !dbg !8187
  %cmp332 = icmp ne %struct.rtx_def* %182, %184, !dbg !8188
  br i1 %cmp332, label %if.then341, label %lor.lhs.false334, !dbg !8189

lor.lhs.false334:                                 ; preds = %cond.end
  %185 = load %struct.rtx_def*, %struct.rtx_def** %new1317, align 8, !dbg !8190
  %186 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8191
  %u335 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1, !dbg !8191
  %fld336 = bitcast %union.u* %u335 to [1 x %union.rtunion_def]*, !dbg !8191
  %arrayidx337 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld336, i64 0, i64 1, !dbg !8191
  %rt_rtx338 = bitcast %union.rtunion_def* %arrayidx337 to %struct.rtx_def**, !dbg !8191
  %187 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx338, align 8, !dbg !8191
  %cmp339 = icmp ne %struct.rtx_def* %185, %187, !dbg !8192
  br i1 %cmp339, label %if.then341, label %if.end346, !dbg !8193

if.then341:                                       ; preds = %lor.lhs.false334, %cond.end
  %188 = load i32, i32* %code, align 4, !dbg !8194
  %189 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8194
  %190 = bitcast %struct.rtx_def* %189 to i32*, !dbg !8194
  %bf.load342 = load i32, i32* %190, align 8, !dbg !8194
  %bf.lshr343 = lshr i32 %bf.load342, 16, !dbg !8194
  %bf.clear344 = and i32 %bf.lshr343, 255, !dbg !8194
  %191 = load %struct.rtx_def*, %struct.rtx_def** %new0311, align 8, !dbg !8194
  %192 = load %struct.rtx_def*, %struct.rtx_def** %new1317, align 8, !dbg !8194
  %call345 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %188, i32 %bf.clear344, %struct.rtx_def* %191, %struct.rtx_def* %192), !dbg !8194
  store %struct.rtx_def* %call345, %struct.rtx_def** %retval, align 8, !dbg !8195
  br label %return, !dbg !8195

if.end346:                                        ; preds = %lor.lhs.false334
  %193 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8196
  store %struct.rtx_def* %193, %struct.rtx_def** %retval, align 8, !dbg !8197
  br label %return, !dbg !8197

sw.bb347:                                         ; preds = %if.end
  %194 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8198
  %u348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %194, i32 0, i32 1, !dbg !8198
  %fld349 = bitcast %union.u* %u348 to [1 x %union.rtunion_def]*, !dbg !8198
  %arrayidx350 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld349, i64 0, i64 0, !dbg !8198
  %rt_rtx351 = bitcast %union.rtunion_def* %arrayidx350 to %struct.rtx_def**, !dbg !8198
  %195 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx351, align 8, !dbg !8198
  %tobool352 = icmp ne %struct.rtx_def* %195, null, !dbg !8198
  br i1 %tobool352, label %if.then353, label %if.end396, !dbg !8200

if.then353:                                       ; preds = %sw.bb347
  %196 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8201
  %u354 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1, !dbg !8201
  %fld355 = bitcast %union.u* %u354 to [1 x %union.rtunion_def]*, !dbg !8201
  %arrayidx356 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld355, i64 0, i64 0, !dbg !8201
  %rt_rtx357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtx_def**, !dbg !8201
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx357, align 8, !dbg !8201
  %198 = load i32, i32* %mem_mode.addr, align 4, !dbg !8203
  %199 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8204
  %call358 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %197, i32 %198, %struct.rtx_def* %199, i8 zeroext 1), !dbg !8205
  store %struct.rtx_def* %call358, %struct.rtx_def** %new_rtx, align 8, !dbg !8206
  %200 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8207
  %201 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8209
  %u359 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %201, i32 0, i32 1, !dbg !8209
  %fld360 = bitcast %union.u* %u359 to [1 x %union.rtunion_def]*, !dbg !8209
  %arrayidx361 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld360, i64 0, i64 0, !dbg !8209
  %rt_rtx362 = bitcast %union.rtunion_def* %arrayidx361 to %struct.rtx_def**, !dbg !8209
  %202 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx362, align 8, !dbg !8209
  %cmp363 = icmp ne %struct.rtx_def* %200, %202, !dbg !8210
  br i1 %cmp363, label %if.then365, label %if.end395, !dbg !8211

if.then365:                                       ; preds = %if.then353
  %203 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8212
  %204 = bitcast %struct.rtx_def* %203 to i32*, !dbg !8212
  %bf.load366 = load i32, i32* %204, align 8, !dbg !8212
  %bf.lshr367 = lshr i32 %bf.load366, 16, !dbg !8212
  %bf.clear368 = and i32 %bf.lshr367, 255, !dbg !8212
  %cmp369 = icmp eq i32 %bf.clear368, 1, !dbg !8215
  br i1 %cmp369, label %if.then371, label %if.end386, !dbg !8216

if.then371:                                       ; preds = %if.then365
  %205 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8217
  %u372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1, !dbg !8217
  %fld373 = bitcast %union.u* %u372 to [1 x %union.rtunion_def]*, !dbg !8217
  %arrayidx374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld373, i64 0, i64 1, !dbg !8217
  %rt_rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**, !dbg !8217
  %206 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx375, align 8, !dbg !8217
  %tobool376 = icmp ne %struct.rtx_def* %206, null, !dbg !8217
  br i1 %tobool376, label %cond.true377, label %cond.false383, !dbg !8217

cond.true377:                                     ; preds = %if.then371
  %207 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8218
  %u378 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1, !dbg !8218
  %fld379 = bitcast %union.u* %u378 to [1 x %union.rtunion_def]*, !dbg !8218
  %arrayidx380 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld379, i64 0, i64 1, !dbg !8218
  %rt_rtx381 = bitcast %union.rtunion_def* %arrayidx380 to %struct.rtx_def**, !dbg !8218
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx381, align 8, !dbg !8218
  %209 = load i32, i32* %mem_mode.addr, align 4, !dbg !8219
  %210 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8220
  %call382 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %208, i32 %209, %struct.rtx_def* %210, i8 zeroext 1), !dbg !8221
  br label %cond.end384, !dbg !8217

cond.false383:                                    ; preds = %if.then371
  br label %cond.end384, !dbg !8217

cond.end384:                                      ; preds = %cond.false383, %cond.true377
  %cond385 = phi %struct.rtx_def* [ %call382, %cond.true377 ], [ null, %cond.false383 ], !dbg !8217
  store %struct.rtx_def* %cond385, %struct.rtx_def** %retval, align 8, !dbg !8222
  br label %return, !dbg !8222

if.end386:                                        ; preds = %if.then365
  %211 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8223
  %212 = bitcast %struct.rtx_def* %211 to i32*, !dbg !8223
  %bf.load387 = load i32, i32* %212, align 8, !dbg !8223
  %bf.lshr388 = lshr i32 %bf.load387, 16, !dbg !8223
  %bf.clear389 = and i32 %bf.lshr388, 255, !dbg !8223
  %213 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8224
  %214 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8225
  %u390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %214, i32 0, i32 1, !dbg !8225
  %fld391 = bitcast %union.u* %u390 to [1 x %union.rtunion_def]*, !dbg !8225
  %arrayidx392 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld391, i64 0, i64 1, !dbg !8225
  %rt_rtx393 = bitcast %union.rtunion_def* %arrayidx392 to %struct.rtx_def**, !dbg !8225
  %215 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx393, align 8, !dbg !8225
  %call394 = call %struct.rtx_def* @alloc_reg_note(i32 %bf.clear389, %struct.rtx_def* %213, %struct.rtx_def* %215), !dbg !8226
  store %struct.rtx_def* %call394, %struct.rtx_def** %x.addr, align 8, !dbg !8227
  br label %if.end395, !dbg !8228

if.end395:                                        ; preds = %if.end386, %if.then353
  br label %if.end396, !dbg !8229

if.end396:                                        ; preds = %if.end395, %sw.bb347
  br label %sw.bb397, !dbg !8198

sw.bb397:                                         ; preds = %if.end, %if.end396
  %216 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8230
  %u398 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1, !dbg !8230
  %fld399 = bitcast %union.u* %u398 to [1 x %union.rtunion_def]*, !dbg !8230
  %arrayidx400 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld399, i64 0, i64 1, !dbg !8230
  %rt_rtx401 = bitcast %union.rtunion_def* %arrayidx400 to %struct.rtx_def**, !dbg !8230
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx401, align 8, !dbg !8230
  %tobool402 = icmp ne %struct.rtx_def* %217, null, !dbg !8230
  br i1 %tobool402, label %if.then403, label %if.end427, !dbg !8232

if.then403:                                       ; preds = %sw.bb397
  %218 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8233
  %u404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1, !dbg !8233
  %fld405 = bitcast %union.u* %u404 to [1 x %union.rtunion_def]*, !dbg !8233
  %arrayidx406 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld405, i64 0, i64 1, !dbg !8233
  %rt_rtx407 = bitcast %union.rtunion_def* %arrayidx406 to %struct.rtx_def**, !dbg !8233
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx407, align 8, !dbg !8233
  %220 = load i32, i32* %mem_mode.addr, align 4, !dbg !8235
  %221 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8236
  %call408 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %219, i32 %220, %struct.rtx_def* %221, i8 zeroext 1), !dbg !8237
  store %struct.rtx_def* %call408, %struct.rtx_def** %new_rtx, align 8, !dbg !8238
  %222 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8239
  %223 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8241
  %u409 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %223, i32 0, i32 1, !dbg !8241
  %fld410 = bitcast %union.u* %u409 to [1 x %union.rtunion_def]*, !dbg !8241
  %arrayidx411 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld410, i64 0, i64 1, !dbg !8241
  %rt_rtx412 = bitcast %union.rtunion_def* %arrayidx411 to %struct.rtx_def**, !dbg !8241
  %224 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx412, align 8, !dbg !8241
  %cmp413 = icmp ne %struct.rtx_def* %222, %224, !dbg !8242
  br i1 %cmp413, label %if.then415, label %if.end426, !dbg !8243

if.then415:                                       ; preds = %if.then403
  %225 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8244
  %226 = bitcast %struct.rtx_def* %225 to i32*, !dbg !8244
  %bf.load416 = load i32, i32* %226, align 8, !dbg !8244
  %bf.clear417 = and i32 %bf.load416, 65535, !dbg !8244
  %227 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8244
  %228 = bitcast %struct.rtx_def* %227 to i32*, !dbg !8244
  %bf.load418 = load i32, i32* %228, align 8, !dbg !8244
  %bf.lshr419 = lshr i32 %bf.load418, 16, !dbg !8244
  %bf.clear420 = and i32 %bf.lshr419, 255, !dbg !8244
  %229 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8244
  %u421 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1, !dbg !8244
  %fld422 = bitcast %union.u* %u421 to [1 x %union.rtunion_def]*, !dbg !8244
  %arrayidx423 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld422, i64 0, i64 0, !dbg !8244
  %rt_rtx424 = bitcast %union.rtunion_def* %arrayidx423 to %struct.rtx_def**, !dbg !8244
  %230 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx424, align 8, !dbg !8244
  %231 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8244
  %call425 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %bf.clear417, i32 %bf.clear420, %struct.rtx_def* %230, %struct.rtx_def* %231), !dbg !8244
  store %struct.rtx_def* %call425, %struct.rtx_def** %retval, align 8, !dbg !8245
  br label %return, !dbg !8245

if.end426:                                        ; preds = %if.then403
  br label %if.end427, !dbg !8246

if.end427:                                        ; preds = %if.end426, %sw.bb397
  %232 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8247
  store %struct.rtx_def* %232, %struct.rtx_def** %retval, align 8, !dbg !8248
  br label %return, !dbg !8248

sw.bb428:                                         ; preds = %if.end, %if.end, %if.end, %if.end
  %233 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8249
  store %struct.rtx_def* %233, %struct.rtx_def** %retval, align 8, !dbg !8250
  br label %return, !dbg !8250

sw.bb429:                                         ; preds = %if.end, %if.end
  %234 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8251
  %u430 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %234, i32 0, i32 1, !dbg !8251
  %fld431 = bitcast %union.u* %u430 to [1 x %union.rtunion_def]*, !dbg !8251
  %arrayidx432 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld431, i64 0, i64 1, !dbg !8251
  %rt_rtx433 = bitcast %union.rtunion_def* %arrayidx432 to %struct.rtx_def**, !dbg !8251
  %235 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx433, align 8, !dbg !8251
  %236 = bitcast %struct.rtx_def* %235 to i32*, !dbg !8251
  %bf.load434 = load i32, i32* %236, align 8, !dbg !8251
  %bf.clear435 = and i32 %bf.load434, 65535, !dbg !8251
  %cmp436 = icmp eq i32 %bf.clear435, 49, !dbg !8253
  br i1 %cmp436, label %land.lhs.true438, label %if.end492, !dbg !8254

land.lhs.true438:                                 ; preds = %sw.bb429
  %237 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8255
  %u439 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %237, i32 0, i32 1, !dbg !8255
  %fld440 = bitcast %union.u* %u439 to [1 x %union.rtunion_def]*, !dbg !8255
  %arrayidx441 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld440, i64 0, i64 1, !dbg !8255
  %rt_rtx442 = bitcast %union.rtunion_def* %arrayidx441 to %struct.rtx_def**, !dbg !8255
  %238 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx442, align 8, !dbg !8255
  %u443 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %238, i32 0, i32 1, !dbg !8255
  %fld444 = bitcast %union.u* %u443 to [1 x %union.rtunion_def]*, !dbg !8255
  %arrayidx445 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld444, i64 0, i64 0, !dbg !8255
  %rt_rtx446 = bitcast %union.rtunion_def* %arrayidx445 to %struct.rtx_def**, !dbg !8255
  %239 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx446, align 8, !dbg !8255
  %240 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8256
  %u447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %240, i32 0, i32 1, !dbg !8256
  %fld448 = bitcast %union.u* %u447 to [1 x %union.rtunion_def]*, !dbg !8256
  %arrayidx449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld448, i64 0, i64 0, !dbg !8256
  %rt_rtx450 = bitcast %union.rtunion_def* %arrayidx449 to %struct.rtx_def**, !dbg !8256
  %241 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx450, align 8, !dbg !8256
  %cmp451 = icmp eq %struct.rtx_def* %239, %241, !dbg !8257
  br i1 %cmp451, label %if.then453, label %if.end492, !dbg !8258

if.then453:                                       ; preds = %land.lhs.true438
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx454, metadata !8259, metadata !DIExpression()), !dbg !8261
  %242 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8262
  %u455 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %242, i32 0, i32 1, !dbg !8262
  %fld456 = bitcast %union.u* %u455 to [1 x %union.rtunion_def]*, !dbg !8262
  %arrayidx457 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld456, i64 0, i64 1, !dbg !8262
  %rt_rtx458 = bitcast %union.rtunion_def* %arrayidx457 to %struct.rtx_def**, !dbg !8262
  %243 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx458, align 8, !dbg !8262
  %u459 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %243, i32 0, i32 1, !dbg !8262
  %fld460 = bitcast %union.u* %u459 to [1 x %union.rtunion_def]*, !dbg !8262
  %arrayidx461 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld460, i64 0, i64 1, !dbg !8262
  %rt_rtx462 = bitcast %union.rtunion_def* %arrayidx461 to %struct.rtx_def**, !dbg !8262
  %244 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx462, align 8, !dbg !8262
  %245 = load i32, i32* %mem_mode.addr, align 4, !dbg !8263
  %246 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8264
  %call463 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %244, i32 %245, %struct.rtx_def* %246, i8 zeroext 1), !dbg !8265
  store %struct.rtx_def* %call463, %struct.rtx_def** %new_rtx454, align 8, !dbg !8261
  %247 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx454, align 8, !dbg !8266
  %248 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8268
  %u464 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %248, i32 0, i32 1, !dbg !8268
  %fld465 = bitcast %union.u* %u464 to [1 x %union.rtunion_def]*, !dbg !8268
  %arrayidx466 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld465, i64 0, i64 1, !dbg !8268
  %rt_rtx467 = bitcast %union.rtunion_def* %arrayidx466 to %struct.rtx_def**, !dbg !8268
  %249 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx467, align 8, !dbg !8268
  %u468 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %249, i32 0, i32 1, !dbg !8268
  %fld469 = bitcast %union.u* %u468 to [1 x %union.rtunion_def]*, !dbg !8268
  %arrayidx470 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld469, i64 0, i64 1, !dbg !8268
  %rt_rtx471 = bitcast %union.rtunion_def* %arrayidx470 to %struct.rtx_def**, !dbg !8268
  %250 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx471, align 8, !dbg !8268
  %cmp472 = icmp ne %struct.rtx_def* %247, %250, !dbg !8269
  br i1 %cmp472, label %if.then474, label %if.end491, !dbg !8270

if.then474:                                       ; preds = %if.then453
  %251 = load i32, i32* %code, align 4, !dbg !8271
  %252 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8271
  %253 = bitcast %struct.rtx_def* %252 to i32*, !dbg !8271
  %bf.load475 = load i32, i32* %253, align 8, !dbg !8271
  %bf.lshr476 = lshr i32 %bf.load475, 16, !dbg !8271
  %bf.clear477 = and i32 %bf.lshr476, 255, !dbg !8271
  %254 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8271
  %u478 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %254, i32 0, i32 1, !dbg !8271
  %fld479 = bitcast %union.u* %u478 to [1 x %union.rtunion_def]*, !dbg !8271
  %arrayidx480 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld479, i64 0, i64 0, !dbg !8271
  %rt_rtx481 = bitcast %union.rtunion_def* %arrayidx480 to %struct.rtx_def**, !dbg !8271
  %255 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx481, align 8, !dbg !8271
  %256 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8271
  %257 = bitcast %struct.rtx_def* %256 to i32*, !dbg !8271
  %bf.load482 = load i32, i32* %257, align 8, !dbg !8271
  %bf.lshr483 = lshr i32 %bf.load482, 16, !dbg !8271
  %bf.clear484 = and i32 %bf.lshr483, 255, !dbg !8271
  %258 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8271
  %u485 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %258, i32 0, i32 1, !dbg !8271
  %fld486 = bitcast %union.u* %u485 to [1 x %union.rtunion_def]*, !dbg !8271
  %arrayidx487 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld486, i64 0, i64 0, !dbg !8271
  %rt_rtx488 = bitcast %union.rtunion_def* %arrayidx487 to %struct.rtx_def**, !dbg !8271
  %259 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx488, align 8, !dbg !8271
  %260 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx454, align 8, !dbg !8271
  %call489 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %bf.clear484, %struct.rtx_def* %259, %struct.rtx_def* %260), !dbg !8271
  %call490 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %251, i32 %bf.clear477, %struct.rtx_def* %255, %struct.rtx_def* %call489), !dbg !8271
  store %struct.rtx_def* %call490, %struct.rtx_def** %retval, align 8, !dbg !8272
  br label %return, !dbg !8272

if.end491:                                        ; preds = %if.then453
  br label %if.end492, !dbg !8273

if.end492:                                        ; preds = %if.end491, %land.lhs.true438, %sw.bb429
  %261 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8274
  store %struct.rtx_def* %261, %struct.rtx_def** %retval, align 8, !dbg !8275
  br label %return, !dbg !8275

sw.bb493:                                         ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %262 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8276
  %u494 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %262, i32 0, i32 1, !dbg !8276
  %fld495 = bitcast %union.u* %u494 to [1 x %union.rtunion_def]*, !dbg !8276
  %arrayidx496 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld495, i64 0, i64 0, !dbg !8276
  %rt_rtx497 = bitcast %union.rtunion_def* %arrayidx496 to %struct.rtx_def**, !dbg !8276
  %263 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx497, align 8, !dbg !8276
  %264 = load i32, i32* %mem_mode.addr, align 4, !dbg !8277
  %265 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8278
  %call498 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %263, i32 %264, %struct.rtx_def* %265, i8 zeroext 0), !dbg !8279
  store %struct.rtx_def* %call498, %struct.rtx_def** %new_rtx, align 8, !dbg !8280
  %266 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8281
  %267 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8283
  %u499 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %267, i32 0, i32 1, !dbg !8283
  %fld500 = bitcast %union.u* %u499 to [1 x %union.rtunion_def]*, !dbg !8283
  %arrayidx501 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld500, i64 0, i64 0, !dbg !8283
  %rt_rtx502 = bitcast %union.rtunion_def* %arrayidx501 to %struct.rtx_def**, !dbg !8283
  %268 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx502, align 8, !dbg !8283
  %cmp503 = icmp ne %struct.rtx_def* %266, %268, !dbg !8284
  br i1 %cmp503, label %if.then505, label %if.end510, !dbg !8285

if.then505:                                       ; preds = %sw.bb493
  %269 = load i32, i32* %code, align 4, !dbg !8286
  %270 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8286
  %271 = bitcast %struct.rtx_def* %270 to i32*, !dbg !8286
  %bf.load506 = load i32, i32* %271, align 8, !dbg !8286
  %bf.lshr507 = lshr i32 %bf.load506, 16, !dbg !8286
  %bf.clear508 = and i32 %bf.lshr507, 255, !dbg !8286
  %272 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8286
  %call509 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %269, i32 %bf.clear508, %struct.rtx_def* %272), !dbg !8286
  store %struct.rtx_def* %call509, %struct.rtx_def** %retval, align 8, !dbg !8287
  br label %return, !dbg !8287

if.end510:                                        ; preds = %sw.bb493
  %273 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8288
  store %struct.rtx_def* %273, %struct.rtx_def** %retval, align 8, !dbg !8289
  br label %return, !dbg !8289

sw.bb511:                                         ; preds = %if.end
  %274 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8290
  %u512 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %274, i32 0, i32 1, !dbg !8290
  %fld513 = bitcast %union.u* %u512 to [1 x %union.rtunion_def]*, !dbg !8290
  %arrayidx514 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld513, i64 0, i64 0, !dbg !8290
  %rt_rtx515 = bitcast %union.rtunion_def* %arrayidx514 to %struct.rtx_def**, !dbg !8290
  %275 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx515, align 8, !dbg !8290
  %276 = bitcast %struct.rtx_def* %275 to i32*, !dbg !8290
  %bf.load516 = load i32, i32* %276, align 8, !dbg !8290
  %bf.clear517 = and i32 %bf.load516, 65535, !dbg !8290
  %cmp518 = icmp eq i32 %bf.clear517, 37, !dbg !8290
  br i1 %cmp518, label %land.lhs.true520, label %if.else559, !dbg !8292

land.lhs.true520:                                 ; preds = %sw.bb511
  %277 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8293
  %278 = bitcast %struct.rtx_def* %277 to i32*, !dbg !8293
  %bf.load521 = load i32, i32* %278, align 8, !dbg !8293
  %bf.lshr522 = lshr i32 %bf.load521, 16, !dbg !8293
  %bf.clear523 = and i32 %bf.lshr522, 255, !dbg !8293
  %idxprom524 = zext i32 %bf.clear523 to i64, !dbg !8293
  %arrayidx525 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom524, !dbg !8293
  %279 = load i8, i8* %arrayidx525, align 1, !dbg !8293
  %conv526 = zext i8 %279 to i16, !dbg !8293
  %conv527 = zext i16 %conv526 to i32, !dbg !8293
  %280 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8294
  %u528 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %280, i32 0, i32 1, !dbg !8294
  %fld529 = bitcast %union.u* %u528 to [1 x %union.rtunion_def]*, !dbg !8294
  %arrayidx530 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld529, i64 0, i64 0, !dbg !8294
  %rt_rtx531 = bitcast %union.rtunion_def* %arrayidx530 to %struct.rtx_def**, !dbg !8294
  %281 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx531, align 8, !dbg !8294
  %282 = bitcast %struct.rtx_def* %281 to i32*, !dbg !8294
  %bf.load532 = load i32, i32* %282, align 8, !dbg !8294
  %bf.lshr533 = lshr i32 %bf.load532, 16, !dbg !8294
  %bf.clear534 = and i32 %bf.lshr533, 255, !dbg !8294
  %idxprom535 = zext i32 %bf.clear534 to i64, !dbg !8294
  %arrayidx536 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom535, !dbg !8294
  %283 = load i8, i8* %arrayidx536, align 1, !dbg !8294
  %conv537 = zext i8 %283 to i16, !dbg !8294
  %conv538 = zext i16 %conv537 to i32, !dbg !8294
  %cmp539 = icmp sle i32 %conv527, %conv538, !dbg !8295
  br i1 %cmp539, label %land.lhs.true541, label %if.else559, !dbg !8296

land.lhs.true541:                                 ; preds = %land.lhs.true520
  %284 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !8297
  %cmp542 = icmp ne %struct.rtx_def** %284, null, !dbg !8298
  br i1 %cmp542, label %land.lhs.true544, label %if.else559, !dbg !8299

land.lhs.true544:                                 ; preds = %land.lhs.true541
  %285 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !8300
  %286 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8301
  %u545 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1, !dbg !8301
  %fld546 = bitcast %union.u* %u545 to [1 x %union.rtunion_def]*, !dbg !8301
  %arrayidx547 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld546, i64 0, i64 0, !dbg !8301
  %rt_rtx548 = bitcast %union.rtunion_def* %arrayidx547 to %struct.rtx_def**, !dbg !8301
  %287 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx548, align 8, !dbg !8301
  %call549 = call i32 @rhs_regno(%struct.rtx_def* %287), !dbg !8301
  %idxprom550 = zext i32 %call549 to i64, !dbg !8300
  %arrayidx551 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %285, i64 %idxprom550, !dbg !8300
  %288 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx551, align 8, !dbg !8300
  %cmp552 = icmp ne %struct.rtx_def* %288, null, !dbg !8302
  br i1 %cmp552, label %if.then554, label %if.else559, !dbg !8303

if.then554:                                       ; preds = %land.lhs.true544
  %289 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8304
  %u555 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %289, i32 0, i32 1, !dbg !8304
  %fld556 = bitcast %union.u* %u555 to [1 x %union.rtunion_def]*, !dbg !8304
  %arrayidx557 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld556, i64 0, i64 0, !dbg !8304
  %rt_rtx558 = bitcast %union.rtunion_def* %arrayidx557 to %struct.rtx_def**, !dbg !8304
  %290 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx558, align 8, !dbg !8304
  store %struct.rtx_def* %290, %struct.rtx_def** %new_rtx, align 8, !dbg !8306
  br label %if.end565, !dbg !8307

if.else559:                                       ; preds = %land.lhs.true544, %land.lhs.true541, %land.lhs.true520, %sw.bb511
  %291 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8308
  %u560 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %291, i32 0, i32 1, !dbg !8308
  %fld561 = bitcast %union.u* %u560 to [1 x %union.rtunion_def]*, !dbg !8308
  %arrayidx562 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld561, i64 0, i64 0, !dbg !8308
  %rt_rtx563 = bitcast %union.rtunion_def* %arrayidx562 to %struct.rtx_def**, !dbg !8308
  %292 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx563, align 8, !dbg !8308
  %293 = load i32, i32* %mem_mode.addr, align 4, !dbg !8309
  %294 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8310
  %call564 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %292, i32 %293, %struct.rtx_def* %294, i8 zeroext 0), !dbg !8311
  store %struct.rtx_def* %call564, %struct.rtx_def** %new_rtx, align 8, !dbg !8312
  br label %if.end565

if.end565:                                        ; preds = %if.else559, %if.then554
  %295 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8313
  %296 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8315
  %u566 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %296, i32 0, i32 1, !dbg !8315
  %fld567 = bitcast %union.u* %u566 to [1 x %union.rtunion_def]*, !dbg !8315
  %arrayidx568 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld567, i64 0, i64 0, !dbg !8315
  %rt_rtx569 = bitcast %union.rtunion_def* %arrayidx568 to %struct.rtx_def**, !dbg !8315
  %297 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx569, align 8, !dbg !8315
  %cmp570 = icmp ne %struct.rtx_def* %295, %297, !dbg !8316
  br i1 %cmp570, label %if.then572, label %if.end615, !dbg !8317

if.then572:                                       ; preds = %if.end565
  call void @llvm.dbg.declare(metadata i32* %x_size, metadata !8318, metadata !DIExpression()), !dbg !8320
  %298 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8321
  %299 = bitcast %struct.rtx_def* %298 to i32*, !dbg !8321
  %bf.load573 = load i32, i32* %299, align 8, !dbg !8321
  %bf.lshr574 = lshr i32 %bf.load573, 16, !dbg !8321
  %bf.clear575 = and i32 %bf.lshr574, 255, !dbg !8321
  %idxprom576 = zext i32 %bf.clear575 to i64, !dbg !8321
  %arrayidx577 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom576, !dbg !8321
  %300 = load i8, i8* %arrayidx577, align 1, !dbg !8321
  %conv578 = zext i8 %300 to i16, !dbg !8321
  %conv579 = zext i16 %conv578 to i32, !dbg !8321
  store i32 %conv579, i32* %x_size, align 4, !dbg !8320
  call void @llvm.dbg.declare(metadata i32* %new_size, metadata !8322, metadata !DIExpression()), !dbg !8323
  %301 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8324
  %302 = bitcast %struct.rtx_def* %301 to i32*, !dbg !8324
  %bf.load580 = load i32, i32* %302, align 8, !dbg !8324
  %bf.lshr581 = lshr i32 %bf.load580, 16, !dbg !8324
  %bf.clear582 = and i32 %bf.lshr581, 255, !dbg !8324
  %idxprom583 = zext i32 %bf.clear582 to i64, !dbg !8324
  %arrayidx584 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom583, !dbg !8324
  %303 = load i8, i8* %arrayidx584, align 1, !dbg !8324
  %conv585 = zext i8 %303 to i16, !dbg !8324
  %conv586 = zext i16 %conv585 to i32, !dbg !8324
  store i32 %conv586, i32* %new_size, align 4, !dbg !8323
  %304 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8325
  %305 = bitcast %struct.rtx_def* %304 to i32*, !dbg !8325
  %bf.load587 = load i32, i32* %305, align 8, !dbg !8325
  %bf.clear588 = and i32 %bf.load587, 65535, !dbg !8325
  %cmp589 = icmp eq i32 %bf.clear588, 43, !dbg !8325
  br i1 %cmp589, label %land.lhs.true591, label %if.else606, !dbg !8327

land.lhs.true591:                                 ; preds = %if.then572
  %306 = load i32, i32* %x_size, align 4, !dbg !8328
  %307 = load i32, i32* %new_size, align 4, !dbg !8329
  %cmp592 = icmp slt i32 %306, %307, !dbg !8330
  br i1 %cmp592, label %if.then597, label %lor.lhs.false594, !dbg !8331

lor.lhs.false594:                                 ; preds = %land.lhs.true591
  %308 = load i32, i32* %x_size, align 4, !dbg !8332
  %309 = load i32, i32* %new_size, align 4, !dbg !8333
  %cmp595 = icmp eq i32 %308, %309, !dbg !8334
  br i1 %cmp595, label %if.then597, label %if.else606, !dbg !8335

if.then597:                                       ; preds = %lor.lhs.false594, %land.lhs.true591
  %310 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8336
  %311 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8336
  %312 = bitcast %struct.rtx_def* %311 to i32*, !dbg !8336
  %bf.load598 = load i32, i32* %312, align 8, !dbg !8336
  %bf.lshr599 = lshr i32 %bf.load598, 16, !dbg !8336
  %bf.clear600 = and i32 %bf.lshr599, 255, !dbg !8336
  %313 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8336
  %u601 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %313, i32 0, i32 1, !dbg !8336
  %fld602 = bitcast %union.u* %u601 to [1 x %union.rtunion_def]*, !dbg !8336
  %arrayidx603 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld602, i64 0, i64 1, !dbg !8336
  %rt_uint = bitcast %union.rtunion_def* %arrayidx603 to i32*, !dbg !8336
  %314 = load i32, i32* %rt_uint, align 8, !dbg !8336
  %conv604 = zext i32 %314 to i64, !dbg !8336
  %call605 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %310, i32 %bf.clear600, i64 %conv604, i32 0, i32 1), !dbg !8336
  store %struct.rtx_def* %call605, %struct.rtx_def** %retval, align 8, !dbg !8337
  br label %return, !dbg !8337

if.else606:                                       ; preds = %lor.lhs.false594, %if.then572
  %315 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8338
  %316 = bitcast %struct.rtx_def* %315 to i32*, !dbg !8338
  %bf.load607 = load i32, i32* %316, align 8, !dbg !8338
  %bf.lshr608 = lshr i32 %bf.load607, 16, !dbg !8338
  %bf.clear609 = and i32 %bf.lshr608, 255, !dbg !8338
  %317 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8339
  %318 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8340
  %u610 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %318, i32 0, i32 1, !dbg !8340
  %fld611 = bitcast %union.u* %u610 to [1 x %union.rtunion_def]*, !dbg !8340
  %arrayidx612 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld611, i64 0, i64 1, !dbg !8340
  %rt_uint613 = bitcast %union.rtunion_def* %arrayidx612 to i32*, !dbg !8340
  %319 = load i32, i32* %rt_uint613, align 8, !dbg !8340
  %call614 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %bf.clear609, %struct.rtx_def* %317, i32 %319), !dbg !8341
  store %struct.rtx_def* %call614, %struct.rtx_def** %retval, align 8, !dbg !8342
  br label %return, !dbg !8342

if.end615:                                        ; preds = %if.end565
  %320 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8343
  store %struct.rtx_def* %320, %struct.rtx_def** %retval, align 8, !dbg !8344
  br label %return, !dbg !8344

sw.bb616:                                         ; preds = %if.end
  %321 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8345
  %322 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8346
  %u617 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %322, i32 0, i32 1, !dbg !8346
  %fld618 = bitcast %union.u* %u617 to [1 x %union.rtunion_def]*, !dbg !8346
  %arrayidx619 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld618, i64 0, i64 0, !dbg !8346
  %rt_rtx620 = bitcast %union.rtunion_def* %arrayidx619 to %struct.rtx_def**, !dbg !8346
  %323 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx620, align 8, !dbg !8346
  %324 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8347
  %325 = bitcast %struct.rtx_def* %324 to i32*, !dbg !8347
  %bf.load621 = load i32, i32* %325, align 8, !dbg !8347
  %bf.lshr622 = lshr i32 %bf.load621, 16, !dbg !8347
  %bf.clear623 = and i32 %bf.lshr622, 255, !dbg !8347
  %326 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8348
  %call624 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %323, i32 %bf.clear623, %struct.rtx_def* %326, i8 zeroext 1), !dbg !8349
  %call625 = call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %321, %struct.rtx_def* %call624), !dbg !8350
  store %struct.rtx_def* %call625, %struct.rtx_def** %retval, align 8, !dbg !8351
  br label %return, !dbg !8351

sw.bb626:                                         ; preds = %if.end
  %327 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8352
  %u627 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %327, i32 0, i32 1, !dbg !8352
  %fld628 = bitcast %union.u* %u627 to [1 x %union.rtunion_def]*, !dbg !8352
  %arrayidx629 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld628, i64 0, i64 0, !dbg !8352
  %rt_rtx630 = bitcast %union.rtunion_def* %arrayidx629 to %struct.rtx_def**, !dbg !8352
  %328 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx630, align 8, !dbg !8352
  %329 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8353
  %call631 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %328, i32 0, %struct.rtx_def* %329, i8 zeroext 0), !dbg !8354
  store %struct.rtx_def* %call631, %struct.rtx_def** %new_rtx, align 8, !dbg !8355
  %330 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8356
  %331 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8358
  %u632 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %331, i32 0, i32 1, !dbg !8358
  %fld633 = bitcast %union.u* %u632 to [1 x %union.rtunion_def]*, !dbg !8358
  %arrayidx634 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld633, i64 0, i64 0, !dbg !8358
  %rt_rtx635 = bitcast %union.rtunion_def* %arrayidx634 to %struct.rtx_def**, !dbg !8358
  %332 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx635, align 8, !dbg !8358
  %cmp636 = icmp ne %struct.rtx_def* %330, %332, !dbg !8359
  br i1 %cmp636, label %if.then638, label %if.end643, !dbg !8360

if.then638:                                       ; preds = %sw.bb626
  %333 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8361
  %334 = bitcast %struct.rtx_def* %333 to i32*, !dbg !8361
  %bf.load639 = load i32, i32* %334, align 8, !dbg !8361
  %bf.lshr640 = lshr i32 %bf.load639, 16, !dbg !8361
  %bf.clear641 = and i32 %bf.lshr640, 255, !dbg !8361
  %335 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8361
  %call642 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 24, i32 %bf.clear641, %struct.rtx_def* %335), !dbg !8361
  store %struct.rtx_def* %call642, %struct.rtx_def** %retval, align 8, !dbg !8362
  br label %return, !dbg !8362

if.end643:                                        ; preds = %sw.bb626
  %336 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8363
  store %struct.rtx_def* %336, %struct.rtx_def** %retval, align 8, !dbg !8364
  br label %return, !dbg !8364

sw.bb644:                                         ; preds = %if.end
  %337 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8365
  %tobool645 = icmp ne %struct.rtx_def* %337, null, !dbg !8365
  br i1 %tobool645, label %land.lhs.true646, label %cond.true651, !dbg !8365

land.lhs.true646:                                 ; preds = %sw.bb644
  %338 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8365
  %339 = bitcast %struct.rtx_def* %338 to i32*, !dbg !8365
  %bf.load647 = load i32, i32* %339, align 8, !dbg !8365
  %bf.clear648 = and i32 %bf.load647, 65535, !dbg !8365
  %cmp649 = icmp eq i32 %bf.clear648, 7, !dbg !8365
  br i1 %cmp649, label %cond.false652, label %cond.true651, !dbg !8365

cond.true651:                                     ; preds = %land.lhs.true646, %sw.bb644
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 2889, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !8365
  br label %cond.end653, !dbg !8365

cond.false652:                                    ; preds = %land.lhs.true646
  br label %cond.end653, !dbg !8365

cond.end653:                                      ; preds = %cond.false652, %cond.true651
  %cond654 = phi i32 [ 0, %cond.true651 ], [ 0, %cond.false652 ], !dbg !8365
  br label %sw.epilog, !dbg !8366

sw.bb655:                                         ; preds = %if.end, %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 2894, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !8367
  br label %sw.default, !dbg !8367

sw.default:                                       ; preds = %if.end, %sw.bb655
  br label %sw.epilog, !dbg !8368

sw.epilog:                                        ; preds = %sw.default, %cond.end653
  %340 = load i32, i32* %code, align 4, !dbg !8369
  %idxprom656 = sext i32 %340 to i64, !dbg !8369
  %arrayidx657 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom656, !dbg !8369
  %341 = load i8*, i8** %arrayidx657, align 8, !dbg !8369
  store i8* %341, i8** %fmt, align 8, !dbg !8370
  store i32 0, i32* %i, align 4, !dbg !8371
  br label %for.cond658, !dbg !8373

for.cond658:                                      ; preds = %for.inc761, %sw.epilog
  %342 = load i32, i32* %i, align 4, !dbg !8374
  %343 = load i32, i32* %code, align 4, !dbg !8376
  %idxprom659 = sext i32 %343 to i64, !dbg !8376
  %arrayidx660 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom659, !dbg !8376
  %344 = load i8, i8* %arrayidx660, align 1, !dbg !8376
  %conv661 = zext i8 %344 to i32, !dbg !8376
  %cmp662 = icmp slt i32 %342, %conv661, !dbg !8377
  br i1 %cmp662, label %for.body664, label %for.end764, !dbg !8378

for.body664:                                      ; preds = %for.cond658
  %345 = load i8*, i8** %fmt, align 8, !dbg !8379
  %346 = load i8, i8* %345, align 1, !dbg !8382
  %conv665 = sext i8 %346 to i32, !dbg !8382
  %cmp666 = icmp eq i32 %conv665, 101, !dbg !8383
  br i1 %cmp666, label %if.then668, label %if.else692, !dbg !8384

if.then668:                                       ; preds = %for.body664
  %347 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8385
  %u669 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %347, i32 0, i32 1, !dbg !8385
  %fld670 = bitcast %union.u* %u669 to [1 x %union.rtunion_def]*, !dbg !8385
  %348 = load i32, i32* %i, align 4, !dbg !8385
  %idxprom671 = sext i32 %348 to i64, !dbg !8385
  %arrayidx672 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld670, i64 0, i64 %idxprom671, !dbg !8385
  %rt_rtx673 = bitcast %union.rtunion_def* %arrayidx672 to %struct.rtx_def**, !dbg !8385
  %349 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx673, align 8, !dbg !8385
  %350 = load i32, i32* %mem_mode.addr, align 4, !dbg !8387
  %351 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8388
  %call674 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %349, i32 %350, %struct.rtx_def* %351, i8 zeroext 0), !dbg !8389
  store %struct.rtx_def* %call674, %struct.rtx_def** %new_rtx, align 8, !dbg !8390
  %352 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8391
  %353 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8393
  %u675 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %353, i32 0, i32 1, !dbg !8393
  %fld676 = bitcast %union.u* %u675 to [1 x %union.rtunion_def]*, !dbg !8393
  %354 = load i32, i32* %i, align 4, !dbg !8393
  %idxprom677 = sext i32 %354 to i64, !dbg !8393
  %arrayidx678 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld676, i64 0, i64 %idxprom677, !dbg !8393
  %rt_rtx679 = bitcast %union.rtunion_def* %arrayidx678 to %struct.rtx_def**, !dbg !8393
  %355 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx679, align 8, !dbg !8393
  %cmp680 = icmp ne %struct.rtx_def* %352, %355, !dbg !8394
  br i1 %cmp680, label %land.lhs.true682, label %if.end686, !dbg !8395

land.lhs.true682:                                 ; preds = %if.then668
  %356 = load i32, i32* %copied, align 4, !dbg !8396
  %tobool683 = icmp ne i32 %356, 0, !dbg !8396
  br i1 %tobool683, label %if.end686, label %if.then684, !dbg !8397

if.then684:                                       ; preds = %land.lhs.true682
  %357 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8398
  %call685 = call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %357), !dbg !8398
  store %struct.rtx_def* %call685, %struct.rtx_def** %x.addr, align 8, !dbg !8400
  store i32 1, i32* %copied, align 4, !dbg !8401
  br label %if.end686, !dbg !8402

if.end686:                                        ; preds = %if.then684, %land.lhs.true682, %if.then668
  %358 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8403
  %359 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8404
  %u687 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %359, i32 0, i32 1, !dbg !8404
  %fld688 = bitcast %union.u* %u687 to [1 x %union.rtunion_def]*, !dbg !8404
  %360 = load i32, i32* %i, align 4, !dbg !8404
  %idxprom689 = sext i32 %360 to i64, !dbg !8404
  %arrayidx690 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld688, i64 0, i64 %idxprom689, !dbg !8404
  %rt_rtx691 = bitcast %union.rtunion_def* %arrayidx690 to %struct.rtx_def**, !dbg !8404
  store %struct.rtx_def* %358, %struct.rtx_def** %rt_rtx691, align 8, !dbg !8405
  br label %if.end760, !dbg !8406

if.else692:                                       ; preds = %for.body664
  %361 = load i8*, i8** %fmt, align 8, !dbg !8407
  %362 = load i8, i8* %361, align 1, !dbg !8409
  %conv693 = sext i8 %362 to i32, !dbg !8409
  %cmp694 = icmp eq i32 %conv693, 69, !dbg !8410
  br i1 %cmp694, label %if.then696, label %if.end759, !dbg !8411

if.then696:                                       ; preds = %if.else692
  call void @llvm.dbg.declare(metadata i32* %copied_vec, metadata !8412, metadata !DIExpression()), !dbg !8414
  store i32 0, i32* %copied_vec, align 4, !dbg !8414
  store i32 0, i32* %j, align 4, !dbg !8415
  br label %for.cond697, !dbg !8417

for.cond697:                                      ; preds = %for.inc757, %if.then696
  %363 = load i32, i32* %j, align 4, !dbg !8418
  %364 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8420
  %u698 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %364, i32 0, i32 1, !dbg !8420
  %fld699 = bitcast %union.u* %u698 to [1 x %union.rtunion_def]*, !dbg !8420
  %365 = load i32, i32* %i, align 4, !dbg !8420
  %idxprom700 = sext i32 %365 to i64, !dbg !8420
  %arrayidx701 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld699, i64 0, i64 %idxprom700, !dbg !8420
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx701 to %struct.rtvec_def**, !dbg !8420
  %366 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !8420
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %366, i32 0, i32 0, !dbg !8420
  %367 = load i32, i32* %num_elem, align 8, !dbg !8420
  %cmp702 = icmp slt i32 %363, %367, !dbg !8421
  br i1 %cmp702, label %for.body704, label %for.end758, !dbg !8422

for.body704:                                      ; preds = %for.cond697
  %368 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8423
  %u705 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1, !dbg !8423
  %fld706 = bitcast %union.u* %u705 to [1 x %union.rtunion_def]*, !dbg !8423
  %369 = load i32, i32* %i, align 4, !dbg !8423
  %idxprom707 = sext i32 %369 to i64, !dbg !8423
  %arrayidx708 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld706, i64 0, i64 %idxprom707, !dbg !8423
  %rt_rtvec709 = bitcast %union.rtunion_def* %arrayidx708 to %struct.rtvec_def**, !dbg !8423
  %370 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec709, align 8, !dbg !8423
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %370, i32 0, i32 1, !dbg !8423
  %371 = load i32, i32* %j, align 4, !dbg !8423
  %idxprom710 = sext i32 %371 to i64, !dbg !8423
  %arrayidx711 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom710, !dbg !8423
  %372 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx711, align 8, !dbg !8423
  %373 = load i32, i32* %mem_mode.addr, align 4, !dbg !8425
  %374 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8426
  %call712 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %372, i32 %373, %struct.rtx_def* %374, i8 zeroext 0), !dbg !8427
  store %struct.rtx_def* %call712, %struct.rtx_def** %new_rtx, align 8, !dbg !8428
  %375 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8429
  %376 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8431
  %u713 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %376, i32 0, i32 1, !dbg !8431
  %fld714 = bitcast %union.u* %u713 to [1 x %union.rtunion_def]*, !dbg !8431
  %377 = load i32, i32* %i, align 4, !dbg !8431
  %idxprom715 = sext i32 %377 to i64, !dbg !8431
  %arrayidx716 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld714, i64 0, i64 %idxprom715, !dbg !8431
  %rt_rtvec717 = bitcast %union.rtunion_def* %arrayidx716 to %struct.rtvec_def**, !dbg !8431
  %378 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec717, align 8, !dbg !8431
  %elem718 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %378, i32 0, i32 1, !dbg !8431
  %379 = load i32, i32* %j, align 4, !dbg !8431
  %idxprom719 = sext i32 %379 to i64, !dbg !8431
  %arrayidx720 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem718, i64 0, i64 %idxprom719, !dbg !8431
  %380 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx720, align 8, !dbg !8431
  %cmp721 = icmp ne %struct.rtx_def* %375, %380, !dbg !8432
  br i1 %cmp721, label %land.lhs.true723, label %if.end748, !dbg !8433

land.lhs.true723:                                 ; preds = %for.body704
  %381 = load i32, i32* %copied_vec, align 4, !dbg !8434
  %tobool724 = icmp ne i32 %381, 0, !dbg !8434
  br i1 %tobool724, label %if.end748, label %if.then725, !dbg !8435

if.then725:                                       ; preds = %land.lhs.true723
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %new_v, metadata !8436, metadata !DIExpression()), !dbg !8438
  %382 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8439
  %u726 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %382, i32 0, i32 1, !dbg !8439
  %fld727 = bitcast %union.u* %u726 to [1 x %union.rtunion_def]*, !dbg !8439
  %383 = load i32, i32* %i, align 4, !dbg !8439
  %idxprom728 = sext i32 %383 to i64, !dbg !8439
  %arrayidx729 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld727, i64 0, i64 %idxprom728, !dbg !8439
  %rt_rtvec730 = bitcast %union.rtunion_def* %arrayidx729 to %struct.rtvec_def**, !dbg !8439
  %384 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec730, align 8, !dbg !8439
  %num_elem731 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %384, i32 0, i32 0, !dbg !8439
  %385 = load i32, i32* %num_elem731, align 8, !dbg !8439
  %386 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8440
  %u732 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %386, i32 0, i32 1, !dbg !8440
  %fld733 = bitcast %union.u* %u732 to [1 x %union.rtunion_def]*, !dbg !8440
  %387 = load i32, i32* %i, align 4, !dbg !8440
  %idxprom734 = sext i32 %387 to i64, !dbg !8440
  %arrayidx735 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld733, i64 0, i64 %idxprom734, !dbg !8440
  %rt_rtvec736 = bitcast %union.rtunion_def* %arrayidx735 to %struct.rtvec_def**, !dbg !8440
  %388 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec736, align 8, !dbg !8440
  %elem737 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %388, i32 0, i32 1, !dbg !8441
  %arraydecay = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem737, i64 0, i64 0, !dbg !8440
  %call738 = call %struct.rtvec_def* @gen_rtvec_v(i32 %385, %struct.rtx_def** %arraydecay), !dbg !8442
  store %struct.rtvec_def* %call738, %struct.rtvec_def** %new_v, align 8, !dbg !8438
  %389 = load i32, i32* %copied, align 4, !dbg !8443
  %tobool739 = icmp ne i32 %389, 0, !dbg !8443
  br i1 %tobool739, label %if.end742, label %if.then740, !dbg !8445

if.then740:                                       ; preds = %if.then725
  %390 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8446
  %call741 = call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %390), !dbg !8446
  store %struct.rtx_def* %call741, %struct.rtx_def** %x.addr, align 8, !dbg !8448
  store i32 1, i32* %copied, align 4, !dbg !8449
  br label %if.end742, !dbg !8450

if.end742:                                        ; preds = %if.then740, %if.then725
  %391 = load %struct.rtvec_def*, %struct.rtvec_def** %new_v, align 8, !dbg !8451
  %392 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8452
  %u743 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %392, i32 0, i32 1, !dbg !8452
  %fld744 = bitcast %union.u* %u743 to [1 x %union.rtunion_def]*, !dbg !8452
  %393 = load i32, i32* %i, align 4, !dbg !8452
  %idxprom745 = sext i32 %393 to i64, !dbg !8452
  %arrayidx746 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld744, i64 0, i64 %idxprom745, !dbg !8452
  %rt_rtvec747 = bitcast %union.rtunion_def* %arrayidx746 to %struct.rtvec_def**, !dbg !8452
  store %struct.rtvec_def* %391, %struct.rtvec_def** %rt_rtvec747, align 8, !dbg !8453
  store i32 1, i32* %copied_vec, align 4, !dbg !8454
  br label %if.end748, !dbg !8455

if.end748:                                        ; preds = %if.end742, %land.lhs.true723, %for.body704
  %394 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8456
  %395 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8457
  %u749 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %395, i32 0, i32 1, !dbg !8457
  %fld750 = bitcast %union.u* %u749 to [1 x %union.rtunion_def]*, !dbg !8457
  %396 = load i32, i32* %i, align 4, !dbg !8457
  %idxprom751 = sext i32 %396 to i64, !dbg !8457
  %arrayidx752 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld750, i64 0, i64 %idxprom751, !dbg !8457
  %rt_rtvec753 = bitcast %union.rtunion_def* %arrayidx752 to %struct.rtvec_def**, !dbg !8457
  %397 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec753, align 8, !dbg !8457
  %elem754 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %397, i32 0, i32 1, !dbg !8457
  %398 = load i32, i32* %j, align 4, !dbg !8457
  %idxprom755 = sext i32 %398 to i64, !dbg !8457
  %arrayidx756 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem754, i64 0, i64 %idxprom755, !dbg !8457
  store %struct.rtx_def* %394, %struct.rtx_def** %arrayidx756, align 8, !dbg !8458
  br label %for.inc757, !dbg !8459

for.inc757:                                       ; preds = %if.end748
  %399 = load i32, i32* %j, align 4, !dbg !8460
  %inc = add nsw i32 %399, 1, !dbg !8460
  store i32 %inc, i32* %j, align 4, !dbg !8460
  br label %for.cond697, !dbg !8461, !llvm.loop !8462

for.end758:                                       ; preds = %for.cond697
  br label %if.end759, !dbg !8464

if.end759:                                        ; preds = %for.end758, %if.else692
  br label %if.end760

if.end760:                                        ; preds = %if.end759, %if.end686
  br label %for.inc761, !dbg !8465

for.inc761:                                       ; preds = %if.end760
  %400 = load i32, i32* %i, align 4, !dbg !8466
  %inc762 = add nsw i32 %400, 1, !dbg !8466
  store i32 %inc762, i32* %i, align 4, !dbg !8466
  %401 = load i8*, i8** %fmt, align 8, !dbg !8467
  %incdec.ptr763 = getelementptr inbounds i8, i8* %401, i32 1, !dbg !8467
  store i8* %incdec.ptr763, i8** %fmt, align 8, !dbg !8467
  br label %for.cond658, !dbg !8468, !llvm.loop !8469

for.end764:                                       ; preds = %for.cond658
  %402 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8471
  store %struct.rtx_def* %402, %struct.rtx_def** %retval, align 8, !dbg !8472
  br label %return, !dbg !8472

return:                                           ; preds = %for.end764, %if.end643, %if.then638, %sw.bb616, %if.end615, %if.else606, %if.then597, %if.end510, %if.then505, %if.end492, %if.then474, %sw.bb428, %if.end427, %if.then415, %cond.end384, %if.end346, %if.then341, %if.end289, %if.end225, %if.else224, %if.then219, %for.end116, %if.else104, %if.then102, %if.end38, %if.then29, %if.then6, %sw.bb, %if.then
  %403 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !8473
  ret %struct.rtx_def* %403, !dbg !8473
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @elimination_target_reg_p(%struct.rtx_def* %x) #0 !dbg !8474 {
entry:
  %retval = alloca i8, align 1
  %x.addr = alloca %struct.rtx_def*, align 8
  %ep = alloca %struct.elim_table*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !8477, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.declare(metadata %struct.elim_table** %ep, metadata !8479, metadata !DIExpression()), !dbg !8480
  %0 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !8481
  store %struct.elim_table* %0, %struct.elim_table** %ep, align 8, !dbg !8483
  br label %for.cond, !dbg !8484

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8485
  %2 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !8487
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %2, i64 4, !dbg !8487
  %cmp = icmp ult %struct.elim_table* %1, %arrayidx, !dbg !8488
  br i1 %cmp, label %for.body, label %for.end, !dbg !8489

for.body:                                         ; preds = %for.cond
  %3 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8490
  %to_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %3, i32 0, i32 9, !dbg !8492
  %4 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx, align 8, !dbg !8492
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8493
  %cmp1 = icmp eq %struct.rtx_def* %4, %5, !dbg !8494
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !8495

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8496
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %6, i32 0, i32 3, !dbg !8497
  %7 = load i32, i32* %can_eliminate, align 8, !dbg !8497
  %tobool = icmp ne i32 %7, 0, !dbg !8496
  br i1 %tobool, label %if.then, label %if.end, !dbg !8498

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !8499
  br label %return, !dbg !8499

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !8497

for.inc:                                          ; preds = %if.end
  %8 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !8500
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i32 1, !dbg !8500
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8, !dbg !8500
  br label %for.cond, !dbg !8501, !llvm.loop !8502

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !8504
  br label %return, !dbg !8504

return:                                           ; preds = %for.end, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !8505
  ret i8 %9, !dbg !8505
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @deallocate_reload_reg(i32 %r) #0 !dbg !8506 {
entry:
  %r.addr = alloca i32, align 4
  %regno = alloca i32, align 4
  store i32 %r, i32* %r.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r.addr, metadata !8507, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !8509, metadata !DIExpression()), !dbg !8510
  %0 = load i32, i32* %r.addr, align 4, !dbg !8511
  %idxprom = sext i32 %0 to i64, !dbg !8513
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom, !dbg !8513
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 11, !dbg !8514
  %1 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !8514
  %tobool = icmp ne %struct.rtx_def* %1, null, !dbg !8513
  br i1 %tobool, label %if.end, label %if.then, !dbg !8515

if.then:                                          ; preds = %entry
  br label %return, !dbg !8516

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %r.addr, align 4, !dbg !8517
  %idxprom1 = sext i32 %2 to i64, !dbg !8518
  %arrayidx2 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1, !dbg !8518
  %reg_rtx3 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2, i32 0, i32 11, !dbg !8519
  %3 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx3, align 8, !dbg !8519
  %call = call i32 @true_regnum(%struct.rtx_def* %3), !dbg !8520
  store i32 %call, i32* %regno, align 4, !dbg !8521
  %4 = load i32, i32* %r.addr, align 4, !dbg !8522
  %idxprom4 = sext i32 %4 to i64, !dbg !8523
  %arrayidx5 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom4, !dbg !8523
  %reg_rtx6 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx5, i32 0, i32 11, !dbg !8524
  store %struct.rtx_def* null, %struct.rtx_def** %reg_rtx6, align 8, !dbg !8525
  %5 = load i32, i32* %regno, align 4, !dbg !8526
  %idxprom7 = sext i32 %5 to i64, !dbg !8528
  %arrayidx8 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i64 0, i64 %idxprom7, !dbg !8528
  %6 = load i16, i16* %arrayidx8, align 2, !dbg !8528
  %conv = sext i16 %6 to i32, !dbg !8528
  %cmp = icmp sge i32 %conv, 0, !dbg !8529
  br i1 %cmp, label %if.then10, label %if.end17, !dbg !8530

if.then10:                                        ; preds = %if.end
  %7 = load i32, i32* %regno, align 4, !dbg !8531
  %8 = load i32, i32* %r.addr, align 4, !dbg !8532
  %idxprom11 = sext i32 %8 to i64, !dbg !8533
  %arrayidx12 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom11, !dbg !8533
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx12, i32 0, i32 12, !dbg !8534
  %9 = load i32, i32* %opnum, align 8, !dbg !8534
  %10 = load i32, i32* %r.addr, align 4, !dbg !8535
  %idxprom13 = sext i32 %10 to i64, !dbg !8536
  %arrayidx14 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom13, !dbg !8536
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx14, i32 0, i32 17, !dbg !8537
  %11 = load i32, i32* %when_needed, align 4, !dbg !8537
  %12 = load i32, i32* %r.addr, align 4, !dbg !8538
  %idxprom15 = sext i32 %12 to i64, !dbg !8539
  %arrayidx16 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom15, !dbg !8539
  %mode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx16, i32 0, i32 5, !dbg !8540
  %13 = load i32, i32* %mode, align 4, !dbg !8540
  call void @clear_reload_reg_in_use(i32 %7, i32 %9, i32 %11, i32 %13), !dbg !8541
  br label %if.end17, !dbg !8541

if.end17:                                         ; preds = %if.then10, %if.end
  %14 = load i32, i32* %r.addr, align 4, !dbg !8542
  %idxprom18 = sext i32 %14 to i64, !dbg !8543
  %arrayidx19 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom18, !dbg !8543
  store i32 -1, i32* %arrayidx19, align 4, !dbg !8544
  br label %return, !dbg !8545

return:                                           ; preds = %if.end17, %if.then
  ret void, !dbg !8545
}

declare dso_local i32 @true_regnum(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @clear_reload_reg_in_use(i32 %regno, i32 %opnum, i32 %type, i32 %mode) #0 !dbg !8546 {
entry:
  %regno.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %nregs = alloca i32, align 4
  %start_regno = alloca i32, align 4
  %end_regno = alloca i32, align 4
  %r = alloca i32, align 4
  %i = alloca i32, align 4
  %check_opnum = alloca i32, align 4
  %check_any = alloca i32, align 4
  %used_in_set = alloca i64*, align 8
  %conflict_start = alloca i32, align 4
  %conflict_end = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !8549, metadata !DIExpression()), !dbg !8550
  store i32 %opnum, i32* %opnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opnum.addr, metadata !8551, metadata !DIExpression()), !dbg !8552
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8553, metadata !DIExpression()), !dbg !8554
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8555, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.declare(metadata i32* %nregs, metadata !8557, metadata !DIExpression()), !dbg !8558
  %0 = load i32, i32* %regno.addr, align 4, !dbg !8559
  %idxprom = zext i32 %0 to i64, !dbg !8560
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !8560
  %1 = load i32, i32* %mode.addr, align 4, !dbg !8561
  %idxprom1 = zext i32 %1 to i64, !dbg !8560
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom1, !dbg !8560
  %2 = load i8, i8* %arrayidx2, align 1, !dbg !8560
  %conv = zext i8 %2 to i32, !dbg !8560
  store i32 %conv, i32* %nregs, align 4, !dbg !8558
  call void @llvm.dbg.declare(metadata i32* %start_regno, metadata !8562, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.declare(metadata i32* %end_regno, metadata !8564, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8566, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8568, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.declare(metadata i32* %check_opnum, metadata !8570, metadata !DIExpression()), !dbg !8571
  store i32 0, i32* %check_opnum, align 4, !dbg !8571
  call void @llvm.dbg.declare(metadata i32* %check_any, metadata !8572, metadata !DIExpression()), !dbg !8573
  store i32 0, i32* %check_any, align 4, !dbg !8573
  call void @llvm.dbg.declare(metadata i64** %used_in_set, metadata !8574, metadata !DIExpression()), !dbg !8575
  %3 = load i32, i32* %type.addr, align 4, !dbg !8576
  switch i32 %3, label %sw.default [
    i32 9, label %sw.bb
    i32 3, label %sw.bb3
    i32 4, label %sw.bb6
    i32 5, label %sw.bb9
    i32 6, label %sw.bb12
    i32 7, label %sw.bb15
    i32 8, label %sw.bb16
    i32 10, label %sw.bb17
    i32 0, label %sw.bb18
    i32 1, label %sw.bb21
    i32 2, label %sw.bb24
  ], !dbg !8577

sw.bb:                                            ; preds = %entry
  store i64* @reload_reg_used, i64** %used_in_set, align 8, !dbg !8578
  br label %sw.epilog, !dbg !8580

sw.bb3:                                           ; preds = %entry
  %4 = load i32, i32* %opnum.addr, align 4, !dbg !8581
  %idxprom4 = sext i32 %4 to i64, !dbg !8582
  %arrayidx5 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i64 0, i64 %idxprom4, !dbg !8582
  store i64* %arrayidx5, i64** %used_in_set, align 8, !dbg !8583
  br label %sw.epilog, !dbg !8584

sw.bb6:                                           ; preds = %entry
  store i32 1, i32* %check_opnum, align 4, !dbg !8585
  %5 = load i32, i32* %opnum.addr, align 4, !dbg !8586
  %idxprom7 = sext i32 %5 to i64, !dbg !8587
  %arrayidx8 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i64 0, i64 %idxprom7, !dbg !8587
  store i64* %arrayidx8, i64** %used_in_set, align 8, !dbg !8588
  br label %sw.epilog, !dbg !8589

sw.bb9:                                           ; preds = %entry
  %6 = load i32, i32* %opnum.addr, align 4, !dbg !8590
  %idxprom10 = sext i32 %6 to i64, !dbg !8591
  %arrayidx11 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i64 0, i64 %idxprom10, !dbg !8591
  store i64* %arrayidx11, i64** %used_in_set, align 8, !dbg !8592
  br label %sw.epilog, !dbg !8593

sw.bb12:                                          ; preds = %entry
  store i32 1, i32* %check_opnum, align 4, !dbg !8594
  %7 = load i32, i32* %opnum.addr, align 4, !dbg !8595
  %idxprom13 = sext i32 %7 to i64, !dbg !8596
  %arrayidx14 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i64 0, i64 %idxprom13, !dbg !8596
  store i64* %arrayidx14, i64** %used_in_set, align 8, !dbg !8597
  br label %sw.epilog, !dbg !8598

sw.bb15:                                          ; preds = %entry
  store i64* @reload_reg_used_in_op_addr, i64** %used_in_set, align 8, !dbg !8599
  br label %sw.epilog, !dbg !8600

sw.bb16:                                          ; preds = %entry
  store i32 1, i32* %check_any, align 4, !dbg !8601
  store i64* @reload_reg_used_in_op_addr_reload, i64** %used_in_set, align 8, !dbg !8602
  br label %sw.epilog, !dbg !8603

sw.bb17:                                          ; preds = %entry
  store i64* @reload_reg_used_in_other_addr, i64** %used_in_set, align 8, !dbg !8604
  store i32 1, i32* %check_any, align 4, !dbg !8605
  br label %sw.epilog, !dbg !8606

sw.bb18:                                          ; preds = %entry
  %8 = load i32, i32* %opnum.addr, align 4, !dbg !8607
  %idxprom19 = sext i32 %8 to i64, !dbg !8608
  %arrayidx20 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom19, !dbg !8608
  store i64* %arrayidx20, i64** %used_in_set, align 8, !dbg !8609
  br label %sw.epilog, !dbg !8610

sw.bb21:                                          ; preds = %entry
  %9 = load i32, i32* %opnum.addr, align 4, !dbg !8611
  %idxprom22 = sext i32 %9 to i64, !dbg !8612
  %arrayidx23 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i64 0, i64 %idxprom22, !dbg !8612
  store i64* %arrayidx23, i64** %used_in_set, align 8, !dbg !8613
  br label %sw.epilog, !dbg !8614

sw.bb24:                                          ; preds = %entry
  store i64* @reload_reg_used_in_insn, i64** %used_in_set, align 8, !dbg !8615
  br label %sw.epilog, !dbg !8616

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 4775, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !8617
  br label %sw.epilog, !dbg !8618

sw.epilog:                                        ; preds = %sw.default, %sw.bb24, %sw.bb21, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb12, %sw.bb9, %sw.bb6, %sw.bb3, %sw.bb
  %10 = load i32, i32* %regno.addr, align 4, !dbg !8619
  store i32 %10, i32* %start_regno, align 4, !dbg !8620
  %11 = load i32, i32* %regno.addr, align 4, !dbg !8621
  %12 = load i32, i32* %nregs, align 4, !dbg !8622
  %add = add i32 %11, %12, !dbg !8623
  store i32 %add, i32* %end_regno, align 4, !dbg !8624
  %13 = load i32, i32* %check_opnum, align 4, !dbg !8625
  %tobool = icmp ne i32 %13, 0, !dbg !8625
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8627

lor.lhs.false:                                    ; preds = %sw.epilog
  %14 = load i32, i32* %check_any, align 4, !dbg !8628
  %tobool25 = icmp ne i32 %14, 0, !dbg !8628
  br i1 %tobool25, label %if.then, label %if.end64, !dbg !8629

if.then:                                          ; preds = %lor.lhs.false, %sw.epilog
  %15 = load i32, i32* @n_reloads, align 4, !dbg !8630
  %sub = sub nsw i32 %15, 1, !dbg !8633
  store i32 %sub, i32* %i, align 4, !dbg !8634
  br label %for.cond, !dbg !8635

for.cond:                                         ; preds = %for.inc, %if.then
  %16 = load i32, i32* %i, align 4, !dbg !8636
  %cmp = icmp sge i32 %16, 0, !dbg !8638
  br i1 %cmp, label %for.body, label %for.end, !dbg !8639

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %i, align 4, !dbg !8640
  %idxprom27 = sext i32 %17 to i64, !dbg !8643
  %arrayidx28 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom27, !dbg !8643
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx28, i32 0, i32 17, !dbg !8644
  %18 = load i32, i32* %when_needed, align 4, !dbg !8644
  %19 = load i32, i32* %type.addr, align 4, !dbg !8645
  %cmp29 = icmp eq i32 %18, %19, !dbg !8646
  br i1 %cmp29, label %land.lhs.true, label %if.end63, !dbg !8647

land.lhs.true:                                    ; preds = %for.body
  %20 = load i32, i32* %check_any, align 4, !dbg !8648
  %tobool31 = icmp ne i32 %20, 0, !dbg !8648
  br i1 %tobool31, label %land.lhs.true38, label %lor.lhs.false32, !dbg !8649

lor.lhs.false32:                                  ; preds = %land.lhs.true
  %21 = load i32, i32* %i, align 4, !dbg !8650
  %idxprom33 = sext i32 %21 to i64, !dbg !8651
  %arrayidx34 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom33, !dbg !8651
  %opnum35 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx34, i32 0, i32 12, !dbg !8652
  %22 = load i32, i32* %opnum35, align 8, !dbg !8652
  %23 = load i32, i32* %opnum.addr, align 4, !dbg !8653
  %cmp36 = icmp eq i32 %22, %23, !dbg !8654
  br i1 %cmp36, label %land.lhs.true38, label %if.end63, !dbg !8655

land.lhs.true38:                                  ; preds = %lor.lhs.false32, %land.lhs.true
  %24 = load i32, i32* %i, align 4, !dbg !8656
  %idxprom39 = sext i32 %24 to i64, !dbg !8657
  %arrayidx40 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom39, !dbg !8657
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx40, i32 0, i32 11, !dbg !8658
  %25 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !8658
  %tobool41 = icmp ne %struct.rtx_def* %25, null, !dbg !8657
  br i1 %tobool41, label %if.then42, label %if.end63, !dbg !8659

if.then42:                                        ; preds = %land.lhs.true38
  call void @llvm.dbg.declare(metadata i32* %conflict_start, metadata !8660, metadata !DIExpression()), !dbg !8662
  %26 = load i32, i32* %i, align 4, !dbg !8663
  %idxprom43 = sext i32 %26 to i64, !dbg !8664
  %arrayidx44 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom43, !dbg !8664
  %reg_rtx45 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx44, i32 0, i32 11, !dbg !8665
  %27 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx45, align 8, !dbg !8665
  %call = call i32 @true_regnum(%struct.rtx_def* %27), !dbg !8666
  store i32 %call, i32* %conflict_start, align 4, !dbg !8662
  call void @llvm.dbg.declare(metadata i32* %conflict_end, metadata !8667, metadata !DIExpression()), !dbg !8668
  %28 = load i32, i32* %i, align 4, !dbg !8669
  %idxprom46 = sext i32 %28 to i64, !dbg !8670
  %arrayidx47 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom46, !dbg !8670
  %mode48 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx47, i32 0, i32 5, !dbg !8671
  %29 = load i32, i32* %mode48, align 4, !dbg !8671
  %30 = load i32, i32* %conflict_start, align 4, !dbg !8672
  %call49 = call i32 @end_hard_regno(i32 %29, i32 %30), !dbg !8673
  store i32 %call49, i32* %conflict_end, align 4, !dbg !8668
  %31 = load i32, i32* %conflict_start, align 4, !dbg !8674
  %32 = load i32, i32* %start_regno, align 4, !dbg !8676
  %cmp50 = icmp ule i32 %31, %32, !dbg !8677
  br i1 %cmp50, label %land.lhs.true52, label %if.end, !dbg !8678

land.lhs.true52:                                  ; preds = %if.then42
  %33 = load i32, i32* %conflict_end, align 4, !dbg !8679
  %34 = load i32, i32* %start_regno, align 4, !dbg !8680
  %cmp53 = icmp ugt i32 %33, %34, !dbg !8681
  br i1 %cmp53, label %if.then55, label %if.end, !dbg !8682

if.then55:                                        ; preds = %land.lhs.true52
  %35 = load i32, i32* %conflict_end, align 4, !dbg !8683
  store i32 %35, i32* %start_regno, align 4, !dbg !8684
  br label %if.end, !dbg !8685

if.end:                                           ; preds = %if.then55, %land.lhs.true52, %if.then42
  %36 = load i32, i32* %conflict_start, align 4, !dbg !8686
  %37 = load i32, i32* %start_regno, align 4, !dbg !8688
  %cmp56 = icmp ugt i32 %36, %37, !dbg !8689
  br i1 %cmp56, label %land.lhs.true58, label %if.end62, !dbg !8690

land.lhs.true58:                                  ; preds = %if.end
  %38 = load i32, i32* %conflict_start, align 4, !dbg !8691
  %39 = load i32, i32* %end_regno, align 4, !dbg !8692
  %cmp59 = icmp ult i32 %38, %39, !dbg !8693
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !8694

if.then61:                                        ; preds = %land.lhs.true58
  %40 = load i32, i32* %conflict_start, align 4, !dbg !8695
  store i32 %40, i32* %end_regno, align 4, !dbg !8696
  br label %if.end62, !dbg !8697

if.end62:                                         ; preds = %if.then61, %land.lhs.true58, %if.end
  br label %if.end63, !dbg !8698

if.end63:                                         ; preds = %if.end62, %land.lhs.true38, %lor.lhs.false32, %for.body
  br label %for.inc, !dbg !8699

for.inc:                                          ; preds = %if.end63
  %41 = load i32, i32* %i, align 4, !dbg !8700
  %dec = add nsw i32 %41, -1, !dbg !8700
  store i32 %dec, i32* %i, align 4, !dbg !8700
  br label %for.cond, !dbg !8701, !llvm.loop !8702

for.end:                                          ; preds = %for.cond
  br label %if.end64, !dbg !8704

if.end64:                                         ; preds = %for.end, %lor.lhs.false
  %42 = load i32, i32* %start_regno, align 4, !dbg !8705
  store i32 %42, i32* %r, align 4, !dbg !8707
  br label %for.cond65, !dbg !8708

for.cond65:                                       ; preds = %for.inc69, %if.end64
  %43 = load i32, i32* %r, align 4, !dbg !8709
  %44 = load i32, i32* %end_regno, align 4, !dbg !8711
  %cmp66 = icmp ult i32 %43, %44, !dbg !8712
  br i1 %cmp66, label %for.body68, label %for.end70, !dbg !8713

for.body68:                                       ; preds = %for.cond65
  %45 = load i32, i32* %r, align 4, !dbg !8714
  %sh_prom = zext i32 %45 to i64, !dbg !8714
  %shl = shl i64 1, %sh_prom, !dbg !8714
  %neg = xor i64 %shl, -1, !dbg !8714
  %46 = load i64*, i64** %used_in_set, align 8, !dbg !8714
  %47 = load i64, i64* %46, align 8, !dbg !8714
  %and = and i64 %47, %neg, !dbg !8714
  store i64 %and, i64* %46, align 8, !dbg !8714
  br label %for.inc69, !dbg !8714

for.inc69:                                        ; preds = %for.body68
  %48 = load i32, i32* %r, align 4, !dbg !8715
  %inc = add i32 %48, 1, !dbg !8715
  store i32 %inc, i32* %r, align 4, !dbg !8715
  br label %for.cond65, !dbg !8716, !llvm.loop !8717

for.end70:                                        ; preds = %for.cond65
  ret void, !dbg !8719
}

; Function Attrs: noinline nounwind uwtable
define internal { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) #0 !dbg !8720 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  %ev.addr = alloca %struct.VEC_edge_gc**, align 8
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %ev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_gc*** %ev.addr, metadata !8723, metadata !DIExpression()), !dbg !8724
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %retval, metadata !8725, metadata !DIExpression()), !dbg !8726
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 0, !dbg !8727
  store i32 0, i32* %index, align 8, !dbg !8728
  %0 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %ev.addr, align 8, !dbg !8729
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 1, !dbg !8730
  store %struct.VEC_edge_gc** %0, %struct.VEC_edge_gc*** %container, align 8, !dbg !8731
  %1 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !8732
  %2 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, align 8, !dbg !8732
  ret { i32, %struct.VEC_edge_gc** } %2, !dbg !8732
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) #0 !dbg !8733 {
entry:
  %retval = alloca i8, align 1
  %ei = alloca %struct.edge_iterator, align 8
  %p.addr = alloca %struct.edge_def**, align 8
  %0 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %ei.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %ei.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !8737, metadata !DIExpression()), !dbg !8738
  store %struct.edge_def** %p, %struct.edge_def*** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def*** %p.addr, metadata !8739, metadata !DIExpression()), !dbg !8740
  %3 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !8741
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !8741
  %5 = load i32, i32* %4, align 8, !dbg !8741
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !8741
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !8741
  %call = call zeroext i8 @ei_end_p(i32 %5, %struct.VEC_edge_gc** %7), !dbg !8741
  %tobool = icmp ne i8 %call, 0, !dbg !8741
  br i1 %tobool, label %if.else, label %if.then, !dbg !8743

if.then:                                          ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !8744
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !8744
  %10 = load i32, i32* %9, align 8, !dbg !8744
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !8744
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !8744
  %call1 = call %struct.edge_def* @ei_edge(i32 %10, %struct.VEC_edge_gc** %12), !dbg !8744
  %13 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !8746
  store %struct.edge_def* %call1, %struct.edge_def** %13, align 8, !dbg !8747
  store i8 1, i8* %retval, align 1, !dbg !8748
  br label %return, !dbg !8748

if.else:                                          ; preds = %entry
  %14 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !8749
  store %struct.edge_def* null, %struct.edge_def** %14, align 8, !dbg !8751
  store i8 0, i8* %retval, align 1, !dbg !8752
  br label %return, !dbg !8752

return:                                           ; preds = %if.else, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !8753
  ret i8 %15, !dbg !8753
}

; Function Attrs: noinline nounwind uwtable
define internal void @ei_next(%struct.edge_iterator* %i) #0 !dbg !8754 {
entry:
  %i.addr = alloca %struct.edge_iterator*, align 8
  store %struct.edge_iterator* %i, %struct.edge_iterator** %i.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator** %i.addr, metadata !8758, metadata !DIExpression()), !dbg !8759
  %0 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !8760
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %0, i32 0, i32 0, !dbg !8760
  %1 = load i32, i32* %index, align 8, !dbg !8760
  %2 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !8760
  %3 = bitcast %struct.edge_iterator* %2 to { i32, %struct.VEC_edge_gc** }*, !dbg !8760
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !8760
  %5 = load i32, i32* %4, align 8, !dbg !8760
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !8760
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !8760
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !8760
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !8760
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8760

cond.true:                                        ; preds = %entry
  %8 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !8760
  %9 = bitcast %struct.edge_iterator* %8 to { i32, %struct.VEC_edge_gc** }*, !dbg !8760
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !8760
  %11 = load i32, i32* %10, align 8, !dbg !8760
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !8760
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !8760
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !8760
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !8760
  br label %cond.end, !dbg !8760

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8760

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8760
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !8760
  %cmp = icmp ult i32 %1, %call2, !dbg !8760
  br i1 %cmp, label %cond.false4, label %cond.true3, !dbg !8760

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !8760
  br label %cond.end5, !dbg !8760

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !8760

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !8760
  %14 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !8761
  %index7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %14, i32 0, i32 0, !dbg !8762
  %15 = load i32, i32* %index7, align 8, !dbg !8763
  %inc = add i32 %15, 1, !dbg !8763
  store i32 %inc, i32* %index7, align 8, !dbg !8763
  ret void, !dbg !8764
}

declare dso_local void @insert_insn_on_edge(%struct.rtx_def*, %struct.edge_def*) #2

declare dso_local zeroext i8 @purge_dead_edges(%struct.basic_block_def*) #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) #2

declare dso_local void @sbitmap_ones(%struct.simple_bitmap_def*) #2

declare dso_local void @find_many_sub_basic_blocks(%struct.simple_bitmap_def*) #2

declare dso_local void @commit_edge_insertions() #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @end_hard_regno(i32 %mode, i32 %regno) #0 !dbg !8765 {
entry:
  %mode.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8768, metadata !DIExpression()), !dbg !8769
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !8770, metadata !DIExpression()), !dbg !8771
  %0 = load i32, i32* %regno.addr, align 4, !dbg !8772
  %1 = load i32, i32* %regno.addr, align 4, !dbg !8773
  %idxprom = zext i32 %1 to i64, !dbg !8774
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !8774
  %2 = load i32, i32* %mode.addr, align 4, !dbg !8775
  %idxprom1 = sext i32 %2 to i64, !dbg !8774
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom1, !dbg !8774
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !8774
  %conv = zext i8 %3 to i32, !dbg !8774
  %add = add i32 %0, %conv, !dbg !8776
  ret i32 %add, !dbg !8777
}

declare dso_local void @ggc_free(i8*) #2

declare dso_local i8* @decode_asm_operands(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def***, i8**, i32*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @base_reg_class(i32 %mode, i32 %outer_code, i32 %index_code) #0 !dbg !8778 {
entry:
  %mode.addr = alloca i32, align 4
  %outer_code.addr = alloca i32, align 4
  %index_code.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8782, metadata !DIExpression()), !dbg !8783
  store i32 %outer_code, i32* %outer_code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %outer_code.addr, metadata !8784, metadata !DIExpression()), !dbg !8785
  store i32 %index_code, i32* %index_code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index_code.addr, metadata !8786, metadata !DIExpression()), !dbg !8787
  ret i32 13, !dbg !8788
}

declare dso_local i32 @regclass_for_constraint(i32) #2

declare dso_local i32 @lookup_constraint(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i64 @insn_constraint_len(i8 signext %fc, i8* %str) #0 !dbg !8789 {
entry:
  %retval = alloca i64, align 8
  %fc.addr = alloca i8, align 1
  %str.addr = alloca i8*, align 8
  store i8 %fc, i8* %fc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %fc.addr, metadata !8793, metadata !DIExpression()), !dbg !8794
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8795, metadata !DIExpression()), !dbg !8796
  %0 = load i8, i8* %fc.addr, align 1, !dbg !8797
  %conv = sext i8 %0 to i32, !dbg !8797
  switch i32 %conv, label %sw.default [
    i32 89, label %sw.bb
  ], !dbg !8798

sw.bb:                                            ; preds = %entry
  store i64 2, i64* %retval, align 8, !dbg !8799
  br label %return, !dbg !8799

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !8801

sw.epilog:                                        ; preds = %sw.default
  store i64 1, i64* %retval, align 8, !dbg !8802
  br label %return, !dbg !8802

return:                                           ; preds = %sw.epilog, %sw.bb
  %1 = load i64, i64* %retval, align 8, !dbg !8803
  ret i64 %1, !dbg !8803
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_label_offsets(%struct.rtx_def* %x, %struct.rtx_def* %insn, i32 %initial_p) #0 !dbg !8804 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %initial_p.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %p = alloca %struct.elim_table*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !8807, metadata !DIExpression()), !dbg !8808
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8809, metadata !DIExpression()), !dbg !8810
  store i32 %initial_p, i32* %initial_p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initial_p.addr, metadata !8811, metadata !DIExpression()), !dbg !8812
  call void @llvm.dbg.declare(metadata i32* %code, metadata !8813, metadata !DIExpression()), !dbg !8814
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8815
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8815
  %bf.load = load i32, i32* %1, align 8, !dbg !8815
  %bf.clear = and i32 %bf.load, 65535, !dbg !8815
  store i32 %bf.clear, i32* %code, align 4, !dbg !8814
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !8816, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8818, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.declare(metadata %struct.elim_table** %p, metadata !8820, metadata !DIExpression()), !dbg !8821
  %2 = load i32, i32* %code, align 4, !dbg !8822
  switch i32 %2, label %sw.default228 [
    i32 44, label %sw.bb
    i32 12, label %sw.bb3
    i32 9, label %sw.bb79
    i32 8, label %sw.bb84
    i32 10, label %sw.bb84
    i32 15, label %sw.bb109
    i32 20, label %sw.bb109
    i32 21, label %sw.bb109
    i32 23, label %sw.bb132
  ], !dbg !8823

sw.bb:                                            ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8824
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !8824
  %bf.load1 = load i32, i32* %4, align 8, !dbg !8824
  %bf.lshr = lshr i32 %bf.load1, 27, !dbg !8824
  %bf.clear2 = and i32 %bf.lshr, 1, !dbg !8824
  %tobool = icmp ne i32 %bf.clear2, 0, !dbg !8824
  br i1 %tobool, label %if.then, label %if.end, !dbg !8827

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog229, !dbg !8828

if.end:                                           ; preds = %sw.bb
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8829
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !8829
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8829
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8829
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8829
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8829
  store %struct.rtx_def* %6, %struct.rtx_def** %x.addr, align 8, !dbg !8830
  br label %sw.bb3, !dbg !8831

sw.bb3:                                           ; preds = %entry, %if.end
  %7 = load i8*, i8** @offsets_known_at, align 8, !dbg !8832
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8834
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !8834
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !8834
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 6, !dbg !8834
  %rt_int = bitcast %union.rtunion_def* %arrayidx6 to i32*, !dbg !8834
  %9 = load i32, i32* %rt_int, align 8, !dbg !8834
  %10 = load i32, i32* @first_label_num, align 4, !dbg !8835
  %sub = sub nsw i32 %9, %10, !dbg !8836
  %idxprom = sext i32 %sub to i64, !dbg !8832
  %arrayidx7 = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !8832
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !8832
  %tobool8 = icmp ne i8 %11, 0, !dbg !8832
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !8837

if.then9:                                         ; preds = %sw.bb3
  store i32 0, i32* %i, align 4, !dbg !8838
  br label %for.cond, !dbg !8841

for.cond:                                         ; preds = %for.inc, %if.then9
  %12 = load i32, i32* %i, align 4, !dbg !8842
  %conv = zext i32 %12 to i64, !dbg !8842
  %cmp = icmp ult i64 %conv, 4, !dbg !8844
  br i1 %cmp, label %for.body, label %for.end, !dbg !8845

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %initial_p.addr, align 4, !dbg !8846
  %tobool11 = icmp ne i32 %13, 0, !dbg !8846
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !8846

cond.true:                                        ; preds = %for.body
  %14 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !8847
  %15 = load i32, i32* %i, align 4, !dbg !8848
  %idxprom12 = zext i32 %15 to i64, !dbg !8847
  %arrayidx13 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %14, i64 %idxprom12, !dbg !8847
  %initial_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx13, i32 0, i32 2, !dbg !8849
  %16 = load i64, i64* %initial_offset, align 8, !dbg !8849
  br label %cond.end, !dbg !8846

cond.false:                                       ; preds = %for.body
  %17 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !8850
  %18 = load i32, i32* %i, align 4, !dbg !8851
  %idxprom14 = zext i32 %18 to i64, !dbg !8850
  %arrayidx15 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %17, i64 %idxprom14, !dbg !8850
  %offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx15, i32 0, i32 5, !dbg !8852
  %19 = load i64, i64* %offset, align 8, !dbg !8852
  br label %cond.end, !dbg !8846

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %16, %cond.true ], [ %19, %cond.false ], !dbg !8846
  %20 = load [4 x i64]*, [4 x i64]** @offsets_at, align 8, !dbg !8853
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8854
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !8854
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !8854
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 6, !dbg !8854
  %rt_int19 = bitcast %union.rtunion_def* %arrayidx18 to i32*, !dbg !8854
  %22 = load i32, i32* %rt_int19, align 8, !dbg !8854
  %23 = load i32, i32* @first_label_num, align 4, !dbg !8855
  %sub20 = sub nsw i32 %22, %23, !dbg !8856
  %idxprom21 = sext i32 %sub20 to i64, !dbg !8853
  %arrayidx22 = getelementptr inbounds [4 x i64], [4 x i64]* %20, i64 %idxprom21, !dbg !8853
  %24 = load i32, i32* %i, align 4, !dbg !8857
  %idxprom23 = zext i32 %24 to i64, !dbg !8853
  %arrayidx24 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx22, i64 0, i64 %idxprom23, !dbg !8853
  store i64 %cond, i64* %arrayidx24, align 8, !dbg !8858
  br label %for.inc, !dbg !8853

for.inc:                                          ; preds = %cond.end
  %25 = load i32, i32* %i, align 4, !dbg !8859
  %inc = add i32 %25, 1, !dbg !8859
  store i32 %inc, i32* %i, align 4, !dbg !8859
  br label %for.cond, !dbg !8860, !llvm.loop !8861

for.end:                                          ; preds = %for.cond
  %26 = load i8*, i8** @offsets_known_at, align 8, !dbg !8863
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8864
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !8864
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !8864
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 6, !dbg !8864
  %rt_int28 = bitcast %union.rtunion_def* %arrayidx27 to i32*, !dbg !8864
  %28 = load i32, i32* %rt_int28, align 8, !dbg !8864
  %29 = load i32, i32* @first_label_num, align 4, !dbg !8865
  %sub29 = sub nsw i32 %28, %29, !dbg !8866
  %idxprom30 = sext i32 %sub29 to i64, !dbg !8863
  %arrayidx31 = getelementptr inbounds i8, i8* %26, i64 %idxprom30, !dbg !8863
  store i8 1, i8* %arrayidx31, align 1, !dbg !8867
  br label %if.end78, !dbg !8868

if.else:                                          ; preds = %sw.bb3
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8869
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8871
  %cmp32 = icmp eq %struct.rtx_def* %30, %31, !dbg !8872
  br i1 %cmp32, label %land.lhs.true, label %if.else42, !dbg !8873

land.lhs.true:                                    ; preds = %if.else
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8874
  %call = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %32), !dbg !8875
  store %struct.rtx_def* %call, %struct.rtx_def** %tem, align 8, !dbg !8876
  %cmp34 = icmp ne %struct.rtx_def* %call, null, !dbg !8877
  br i1 %cmp34, label %land.lhs.true36, label %if.else42, !dbg !8878

land.lhs.true36:                                  ; preds = %land.lhs.true
  %33 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8879
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !8879
  %bf.load37 = load i32, i32* %34, align 8, !dbg !8879
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !8879
  %cmp39 = icmp eq i32 %bf.clear38, 11, !dbg !8879
  br i1 %cmp39, label %if.then41, label %if.else42, !dbg !8880

if.then41:                                        ; preds = %land.lhs.true36
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8881
  call void @set_offsets_for_label(%struct.rtx_def* %35), !dbg !8882
  br label %if.end77, !dbg !8882

if.else42:                                        ; preds = %land.lhs.true36, %land.lhs.true, %if.else
  store i32 0, i32* %i, align 4, !dbg !8883
  br label %for.cond43, !dbg !8885

for.cond43:                                       ; preds = %for.inc74, %if.else42
  %36 = load i32, i32* %i, align 4, !dbg !8886
  %conv44 = zext i32 %36 to i64, !dbg !8886
  %cmp45 = icmp ult i64 %conv44, 4, !dbg !8888
  br i1 %cmp45, label %for.body47, label %for.end76, !dbg !8889

for.body47:                                       ; preds = %for.cond43
  %37 = load [4 x i64]*, [4 x i64]** @offsets_at, align 8, !dbg !8890
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8892
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !8892
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !8892
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 6, !dbg !8892
  %rt_int51 = bitcast %union.rtunion_def* %arrayidx50 to i32*, !dbg !8892
  %39 = load i32, i32* %rt_int51, align 8, !dbg !8892
  %40 = load i32, i32* @first_label_num, align 4, !dbg !8893
  %sub52 = sub nsw i32 %39, %40, !dbg !8894
  %idxprom53 = sext i32 %sub52 to i64, !dbg !8890
  %arrayidx54 = getelementptr inbounds [4 x i64], [4 x i64]* %37, i64 %idxprom53, !dbg !8890
  %41 = load i32, i32* %i, align 4, !dbg !8895
  %idxprom55 = zext i32 %41 to i64, !dbg !8890
  %arrayidx56 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx54, i64 0, i64 %idxprom55, !dbg !8890
  %42 = load i64, i64* %arrayidx56, align 8, !dbg !8890
  %43 = load i32, i32* %initial_p.addr, align 4, !dbg !8896
  %tobool57 = icmp ne i32 %43, 0, !dbg !8896
  br i1 %tobool57, label %cond.true58, label %cond.false62, !dbg !8896

cond.true58:                                      ; preds = %for.body47
  %44 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !8897
  %45 = load i32, i32* %i, align 4, !dbg !8898
  %idxprom59 = zext i32 %45 to i64, !dbg !8897
  %arrayidx60 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %44, i64 %idxprom59, !dbg !8897
  %initial_offset61 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx60, i32 0, i32 2, !dbg !8899
  %46 = load i64, i64* %initial_offset61, align 8, !dbg !8899
  br label %cond.end66, !dbg !8896

cond.false62:                                     ; preds = %for.body47
  %47 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !8900
  %48 = load i32, i32* %i, align 4, !dbg !8901
  %idxprom63 = zext i32 %48 to i64, !dbg !8900
  %arrayidx64 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %47, i64 %idxprom63, !dbg !8900
  %offset65 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx64, i32 0, i32 5, !dbg !8902
  %49 = load i64, i64* %offset65, align 8, !dbg !8902
  br label %cond.end66, !dbg !8896

cond.end66:                                       ; preds = %cond.false62, %cond.true58
  %cond67 = phi i64 [ %46, %cond.true58 ], [ %49, %cond.false62 ], !dbg !8896
  %cmp68 = icmp ne i64 %42, %cond67, !dbg !8903
  br i1 %cmp68, label %if.then70, label %if.end73, !dbg !8904

if.then70:                                        ; preds = %cond.end66
  %50 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !8905
  %51 = load i32, i32* %i, align 4, !dbg !8906
  %idxprom71 = zext i32 %51 to i64, !dbg !8905
  %arrayidx72 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %50, i64 %idxprom71, !dbg !8905
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %arrayidx72, i32 0, i32 3, !dbg !8907
  store i32 0, i32* %can_eliminate, align 8, !dbg !8908
  br label %if.end73, !dbg !8905

if.end73:                                         ; preds = %if.then70, %cond.end66
  br label %for.inc74, !dbg !8909

for.inc74:                                        ; preds = %if.end73
  %52 = load i32, i32* %i, align 4, !dbg !8910
  %inc75 = add i32 %52, 1, !dbg !8910
  store i32 %inc75, i32* %i, align 4, !dbg !8910
  br label %for.cond43, !dbg !8911, !llvm.loop !8912

for.end76:                                        ; preds = %for.cond43
  br label %if.end77

if.end77:                                         ; preds = %for.end76, %if.then41
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %for.end
  br label %sw.epilog229, !dbg !8914

sw.bb79:                                          ; preds = %entry
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8915
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !8915
  %fld81 = bitcast %union.u* %u80 to [1 x %union.rtunion_def]*, !dbg !8915
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i64 0, i64 5, !dbg !8915
  %rt_rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**, !dbg !8915
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx83, align 8, !dbg !8915
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8916
  %56 = load i32, i32* %initial_p.addr, align 4, !dbg !8917
  call void @set_label_offsets(%struct.rtx_def* %54, %struct.rtx_def* %55, i32 %56), !dbg !8918
  br label %sw.bb84, !dbg !8918

sw.bb84:                                          ; preds = %entry, %entry, %sw.bb79
  %57 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8919
  %u85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !8919
  %fld86 = bitcast %union.u* %u85 to [1 x %union.rtunion_def]*, !dbg !8919
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i64 0, i64 7, !dbg !8919
  %rt_rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**, !dbg !8919
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx88, align 8, !dbg !8919
  store %struct.rtx_def* %58, %struct.rtx_def** %tem, align 8, !dbg !8921
  br label %for.cond89, !dbg !8922

for.cond89:                                       ; preds = %for.inc103, %sw.bb84
  %59 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8923
  %tobool90 = icmp ne %struct.rtx_def* %59, null, !dbg !8925
  br i1 %tobool90, label %for.body91, label %for.end108, !dbg !8925

for.body91:                                       ; preds = %for.cond89
  %60 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8926
  %61 = bitcast %struct.rtx_def* %60 to i32*, !dbg !8926
  %bf.load92 = load i32, i32* %61, align 8, !dbg !8926
  %bf.lshr93 = lshr i32 %bf.load92, 16, !dbg !8926
  %bf.clear94 = and i32 %bf.lshr93, 255, !dbg !8926
  %cmp95 = icmp eq i32 %bf.clear94, 10, !dbg !8928
  br i1 %cmp95, label %if.then97, label %if.end102, !dbg !8929

if.then97:                                        ; preds = %for.body91
  %62 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8930
  %u98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !8930
  %fld99 = bitcast %union.u* %u98 to [1 x %union.rtunion_def]*, !dbg !8930
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i64 0, i64 0, !dbg !8930
  %rt_rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**, !dbg !8930
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !8930
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8931
  call void @set_label_offsets(%struct.rtx_def* %63, %struct.rtx_def* %64, i32 1), !dbg !8932
  br label %if.end102, !dbg !8932

if.end102:                                        ; preds = %if.then97, %for.body91
  br label %for.inc103, !dbg !8933

for.inc103:                                       ; preds = %if.end102
  %65 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8934
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !8934
  %fld105 = bitcast %union.u* %u104 to [1 x %union.rtunion_def]*, !dbg !8934
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i64 0, i64 1, !dbg !8934
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !8934
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !8934
  store %struct.rtx_def* %66, %struct.rtx_def** %tem, align 8, !dbg !8935
  br label %for.cond89, !dbg !8936, !llvm.loop !8937

for.end108:                                       ; preds = %for.cond89
  br label %sw.epilog229, !dbg !8939

sw.bb109:                                         ; preds = %entry, %entry, %entry
  store i32 0, i32* %i, align 4, !dbg !8940
  br label %for.cond110, !dbg !8942

for.cond110:                                      ; preds = %for.inc129, %sw.bb109
  %67 = load i32, i32* %i, align 4, !dbg !8943
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8945
  %u111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !8945
  %fld112 = bitcast %union.u* %u111 to [1 x %union.rtunion_def]*, !dbg !8945
  %69 = load i32, i32* %code, align 4, !dbg !8945
  %cmp113 = icmp eq i32 %69, 21, !dbg !8945
  %conv114 = zext i1 %cmp113 to i32, !dbg !8945
  %idxprom115 = sext i32 %conv114 to i64, !dbg !8945
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i64 0, i64 %idxprom115, !dbg !8945
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtvec_def**, !dbg !8945
  %70 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !8945
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %70, i32 0, i32 0, !dbg !8945
  %71 = load i32, i32* %num_elem, align 8, !dbg !8945
  %cmp117 = icmp ult i32 %67, %71, !dbg !8946
  br i1 %cmp117, label %for.body119, label %for.end131, !dbg !8947

for.body119:                                      ; preds = %for.cond110
  %72 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8948
  %u120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !8948
  %fld121 = bitcast %union.u* %u120 to [1 x %union.rtunion_def]*, !dbg !8948
  %73 = load i32, i32* %code, align 4, !dbg !8948
  %cmp122 = icmp eq i32 %73, 21, !dbg !8948
  %conv123 = zext i1 %cmp122 to i32, !dbg !8948
  %idxprom124 = sext i32 %conv123 to i64, !dbg !8948
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i64 0, i64 %idxprom124, !dbg !8948
  %rt_rtvec126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtvec_def**, !dbg !8948
  %74 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec126, align 8, !dbg !8948
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %74, i32 0, i32 1, !dbg !8948
  %75 = load i32, i32* %i, align 4, !dbg !8948
  %idxprom127 = zext i32 %75 to i64, !dbg !8948
  %arrayidx128 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom127, !dbg !8948
  %76 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx128, align 8, !dbg !8948
  %77 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8949
  %78 = load i32, i32* %initial_p.addr, align 4, !dbg !8950
  call void @set_label_offsets(%struct.rtx_def* %76, %struct.rtx_def* %77, i32 %78), !dbg !8951
  br label %for.inc129, !dbg !8951

for.inc129:                                       ; preds = %for.body119
  %79 = load i32, i32* %i, align 4, !dbg !8952
  %inc130 = add i32 %79, 1, !dbg !8952
  store i32 %inc130, i32* %i, align 4, !dbg !8952
  br label %for.cond110, !dbg !8953, !llvm.loop !8954

for.end131:                                       ; preds = %for.cond110
  br label %sw.epilog229, !dbg !8956

sw.bb132:                                         ; preds = %entry
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8957
  %u133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1, !dbg !8957
  %fld134 = bitcast %union.u* %u133 to [1 x %union.rtunion_def]*, !dbg !8957
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i64 0, i64 0, !dbg !8957
  %rt_rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**, !dbg !8957
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx136, align 8, !dbg !8957
  %82 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !8959
  %cmp137 = icmp ne %struct.rtx_def* %81, %82, !dbg !8960
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !8961

if.then139:                                       ; preds = %sw.bb132
  br label %sw.epilog229, !dbg !8962

if.end140:                                        ; preds = %sw.bb132
  %83 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8963
  %u141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !8963
  %fld142 = bitcast %union.u* %u141 to [1 x %union.rtunion_def]*, !dbg !8963
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i64 0, i64 1, !dbg !8963
  %rt_rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**, !dbg !8963
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx144, align 8, !dbg !8963
  %85 = bitcast %struct.rtx_def* %84 to i32*, !dbg !8963
  %bf.load145 = load i32, i32* %85, align 8, !dbg !8963
  %bf.clear146 = and i32 %bf.load145, 65535, !dbg !8963
  switch i32 %bf.clear146, label %sw.default [
    i32 36, label %sw.bb147
    i32 27, label %sw.bb147
    i32 44, label %sw.bb148
    i32 47, label %sw.bb153
  ], !dbg !8964

sw.bb147:                                         ; preds = %if.end140, %if.end140
  br label %sw.epilog229, !dbg !8965

sw.bb148:                                         ; preds = %if.end140
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8967
  %u149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !8967
  %fld150 = bitcast %union.u* %u149 to [1 x %union.rtunion_def]*, !dbg !8967
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i64 0, i64 1, !dbg !8967
  %rt_rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**, !dbg !8967
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx152, align 8, !dbg !8967
  %88 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8968
  %89 = load i32, i32* %initial_p.addr, align 4, !dbg !8969
  call void @set_label_offsets(%struct.rtx_def* %87, %struct.rtx_def* %88, i32 %89), !dbg !8970
  br label %sw.epilog229, !dbg !8971

sw.bb153:                                         ; preds = %if.end140
  %90 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8972
  %u154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1, !dbg !8972
  %fld155 = bitcast %union.u* %u154 to [1 x %union.rtunion_def]*, !dbg !8972
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i64 0, i64 1, !dbg !8972
  %rt_rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**, !dbg !8972
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx157, align 8, !dbg !8972
  %u158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1, !dbg !8972
  %fld159 = bitcast %union.u* %u158 to [1 x %union.rtunion_def]*, !dbg !8972
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i64 0, i64 1, !dbg !8972
  %rt_rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**, !dbg !8972
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx161, align 8, !dbg !8972
  store %struct.rtx_def* %92, %struct.rtx_def** %tem, align 8, !dbg !8973
  %93 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8974
  %94 = bitcast %struct.rtx_def* %93 to i32*, !dbg !8974
  %bf.load162 = load i32, i32* %94, align 8, !dbg !8974
  %bf.clear163 = and i32 %bf.load162, 65535, !dbg !8974
  %cmp164 = icmp eq i32 %bf.clear163, 44, !dbg !8976
  br i1 %cmp164, label %if.then166, label %if.else171, !dbg !8977

if.then166:                                       ; preds = %sw.bb153
  %95 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8978
  %u167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1, !dbg !8978
  %fld168 = bitcast %union.u* %u167 to [1 x %union.rtunion_def]*, !dbg !8978
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i64 0, i64 0, !dbg !8978
  %rt_rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**, !dbg !8978
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx170, align 8, !dbg !8978
  %97 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8979
  %98 = load i32, i32* %initial_p.addr, align 4, !dbg !8980
  call void @set_label_offsets(%struct.rtx_def* %96, %struct.rtx_def* %97, i32 %98), !dbg !8981
  br label %if.end183, !dbg !8981

if.else171:                                       ; preds = %sw.bb153
  %99 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8982
  %100 = bitcast %struct.rtx_def* %99 to i32*, !dbg !8982
  %bf.load172 = load i32, i32* %100, align 8, !dbg !8982
  %bf.clear173 = and i32 %bf.load172, 65535, !dbg !8982
  %cmp174 = icmp ne i32 %bf.clear173, 36, !dbg !8984
  br i1 %cmp174, label %land.lhs.true176, label %if.end182, !dbg !8985

land.lhs.true176:                                 ; preds = %if.else171
  %101 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8986
  %102 = bitcast %struct.rtx_def* %101 to i32*, !dbg !8986
  %bf.load177 = load i32, i32* %102, align 8, !dbg !8986
  %bf.clear178 = and i32 %bf.load177, 65535, !dbg !8986
  %cmp179 = icmp ne i32 %bf.clear178, 27, !dbg !8987
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !8988

if.then181:                                       ; preds = %land.lhs.true176
  br label %sw.epilog, !dbg !8989

if.end182:                                        ; preds = %land.lhs.true176, %if.else171
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.then166
  %103 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8990
  %u184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !8990
  %fld185 = bitcast %union.u* %u184 to [1 x %union.rtunion_def]*, !dbg !8990
  %arrayidx186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld185, i64 0, i64 1, !dbg !8990
  %rt_rtx187 = bitcast %union.rtunion_def* %arrayidx186 to %struct.rtx_def**, !dbg !8990
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx187, align 8, !dbg !8990
  %u188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1, !dbg !8990
  %fld189 = bitcast %union.u* %u188 to [1 x %union.rtunion_def]*, !dbg !8990
  %arrayidx190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld189, i64 0, i64 2, !dbg !8990
  %rt_rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**, !dbg !8990
  %105 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx191, align 8, !dbg !8990
  store %struct.rtx_def* %105, %struct.rtx_def** %tem, align 8, !dbg !8991
  %106 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8992
  %107 = bitcast %struct.rtx_def* %106 to i32*, !dbg !8992
  %bf.load192 = load i32, i32* %107, align 8, !dbg !8992
  %bf.clear193 = and i32 %bf.load192, 65535, !dbg !8992
  %cmp194 = icmp eq i32 %bf.clear193, 44, !dbg !8994
  br i1 %cmp194, label %if.then196, label %if.else201, !dbg !8995

if.then196:                                       ; preds = %if.end183
  %108 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8996
  %u197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1, !dbg !8996
  %fld198 = bitcast %union.u* %u197 to [1 x %union.rtunion_def]*, !dbg !8996
  %arrayidx199 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld198, i64 0, i64 0, !dbg !8996
  %rt_rtx200 = bitcast %union.rtunion_def* %arrayidx199 to %struct.rtx_def**, !dbg !8996
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx200, align 8, !dbg !8996
  %110 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8997
  %111 = load i32, i32* %initial_p.addr, align 4, !dbg !8998
  call void @set_label_offsets(%struct.rtx_def* %109, %struct.rtx_def* %110, i32 %111), !dbg !8999
  br label %if.end213, !dbg !8999

if.else201:                                       ; preds = %if.end183
  %112 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9000
  %113 = bitcast %struct.rtx_def* %112 to i32*, !dbg !9000
  %bf.load202 = load i32, i32* %113, align 8, !dbg !9000
  %bf.clear203 = and i32 %bf.load202, 65535, !dbg !9000
  %cmp204 = icmp ne i32 %bf.clear203, 36, !dbg !9002
  br i1 %cmp204, label %land.lhs.true206, label %if.end212, !dbg !9003

land.lhs.true206:                                 ; preds = %if.else201
  %114 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9004
  %115 = bitcast %struct.rtx_def* %114 to i32*, !dbg !9004
  %bf.load207 = load i32, i32* %115, align 8, !dbg !9004
  %bf.clear208 = and i32 %bf.load207, 65535, !dbg !9004
  %cmp209 = icmp ne i32 %bf.clear208, 27, !dbg !9005
  br i1 %cmp209, label %if.then211, label %if.end212, !dbg !9006

if.then211:                                       ; preds = %land.lhs.true206
  br label %sw.epilog, !dbg !9007

if.end212:                                        ; preds = %land.lhs.true206, %if.else201
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.then196
  br label %sw.epilog229, !dbg !9008

sw.default:                                       ; preds = %if.end140
  br label %sw.epilog, !dbg !9009

sw.epilog:                                        ; preds = %sw.default, %if.then211, %if.then181
  %116 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9010
  store %struct.elim_table* %116, %struct.elim_table** %p, align 8, !dbg !9012
  br label %for.cond214, !dbg !9013

for.cond214:                                      ; preds = %for.inc226, %sw.epilog
  %117 = load %struct.elim_table*, %struct.elim_table** %p, align 8, !dbg !9014
  %118 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9016
  %arrayidx215 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %118, i64 4, !dbg !9016
  %cmp216 = icmp ult %struct.elim_table* %117, %arrayidx215, !dbg !9017
  br i1 %cmp216, label %for.body218, label %for.end227, !dbg !9018

for.body218:                                      ; preds = %for.cond214
  %119 = load %struct.elim_table*, %struct.elim_table** %p, align 8, !dbg !9019
  %offset219 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %119, i32 0, i32 5, !dbg !9021
  %120 = load i64, i64* %offset219, align 8, !dbg !9021
  %121 = load %struct.elim_table*, %struct.elim_table** %p, align 8, !dbg !9022
  %initial_offset220 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %121, i32 0, i32 2, !dbg !9023
  %122 = load i64, i64* %initial_offset220, align 8, !dbg !9023
  %cmp221 = icmp ne i64 %120, %122, !dbg !9024
  br i1 %cmp221, label %if.then223, label %if.end225, !dbg !9025

if.then223:                                       ; preds = %for.body218
  %123 = load %struct.elim_table*, %struct.elim_table** %p, align 8, !dbg !9026
  %can_eliminate224 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %123, i32 0, i32 3, !dbg !9027
  store i32 0, i32* %can_eliminate224, align 8, !dbg !9028
  br label %if.end225, !dbg !9026

if.end225:                                        ; preds = %if.then223, %for.body218
  br label %for.inc226, !dbg !9023

for.inc226:                                       ; preds = %if.end225
  %124 = load %struct.elim_table*, %struct.elim_table** %p, align 8, !dbg !9029
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %124, i32 1, !dbg !9029
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %p, align 8, !dbg !9029
  br label %for.cond214, !dbg !9030, !llvm.loop !9031

for.end227:                                       ; preds = %for.cond214
  br label %sw.epilog229, !dbg !9033

sw.default228:                                    ; preds = %entry
  br label %sw.epilog229, !dbg !9034

sw.epilog229:                                     ; preds = %if.then, %if.end78, %for.end108, %for.end131, %if.then139, %sw.bb147, %sw.bb148, %if.end213, %sw.default228, %for.end227
  ret void, !dbg !9035
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @eliminate_regs_in_insn(%struct.rtx_def* %insn, i32 %replace) #0 !dbg !9036 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %replace.addr = alloca i32, align 4
  %icode = alloca i32, align 4
  %old_body = alloca %struct.rtx_def*, align 8
  %insn_is_asm = alloca i32, align 4
  %old_set = alloca %struct.rtx_def*, align 8
  %new_body = alloca %struct.rtx_def*, align 8
  %val = alloca i32, align 4
  %i = alloca i32, align 4
  %substed_operand = alloca [30 x %struct.rtx_def*], align 16
  %orig_operand = alloca [30 x %struct.rtx_def*], align 16
  %ep = alloca %struct.elim_table*, align 8
  %plus_src = alloca %struct.rtx_def*, align 8
  %plus_cst_src = alloca %struct.rtx_def*, align 8
  %base = alloca %struct.rtx_def*, align 8
  %base_insn = alloca %struct.rtx_def*, align 8
  %offset = alloca i64, align 8
  %prev_insn = alloca %struct.rtx_def*, align 8
  %prev_set = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %links = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %reg490 = alloca %struct.rtx_def*, align 8
  %offset495 = alloca i64, align 8
  %to_rtx525 = alloca %struct.rtx_def*, align 8
  %new_src = alloca %struct.rtx_def*, align 8
  %new_pat = alloca %struct.rtx_def*, align 8
  %is_set_src = alloca i8, align 1
  %in_plus = alloca i8, align 1
  %new_icode = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9037, metadata !DIExpression()), !dbg !9038
  store i32 %replace, i32* %replace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %replace.addr, metadata !9039, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.declare(metadata i32* %icode, metadata !9041, metadata !DIExpression()), !dbg !9042
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9043
  %call = call i32 @recog_memoized(%struct.rtx_def* %0), !dbg !9044
  store i32 %call, i32* %icode, align 4, !dbg !9042
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_body, metadata !9045, metadata !DIExpression()), !dbg !9046
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9047
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1, !dbg !9047
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9047
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !9047
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !9047
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9047
  store %struct.rtx_def* %2, %struct.rtx_def** %old_body, align 8, !dbg !9046
  call void @llvm.dbg.declare(metadata i32* %insn_is_asm, metadata !9048, metadata !DIExpression()), !dbg !9049
  %3 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8, !dbg !9050
  %call1 = call i32 @asm_noperands(%struct.rtx_def* %3), !dbg !9051
  %cmp = icmp sge i32 %call1, 0, !dbg !9052
  %conv = zext i1 %cmp to i32, !dbg !9052
  store i32 %conv, i32* %insn_is_asm, align 4, !dbg !9049
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_set, metadata !9053, metadata !DIExpression()), !dbg !9054
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9055
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !9055
  %bf.load = load i32, i32* %5, align 8, !dbg !9055
  %bf.clear = and i32 %bf.load, 65535, !dbg !9055
  %cmp2 = icmp eq i32 %bf.clear, 8, !dbg !9055
  br i1 %cmp2, label %cond.true, label %lor.lhs.false, !dbg !9055

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9055
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !9055
  %bf.load4 = load i32, i32* %7, align 8, !dbg !9055
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !9055
  %cmp6 = icmp eq i32 %bf.clear5, 7, !dbg !9055
  br i1 %cmp6, label %cond.true, label %lor.lhs.false8, !dbg !9055

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9055
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !9055
  %bf.load9 = load i32, i32* %9, align 8, !dbg !9055
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !9055
  %cmp11 = icmp eq i32 %bf.clear10, 9, !dbg !9055
  br i1 %cmp11, label %cond.true, label %lor.lhs.false13, !dbg !9055

lor.lhs.false13:                                  ; preds = %lor.lhs.false8
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9055
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !9055
  %bf.load14 = load i32, i32* %11, align 8, !dbg !9055
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !9055
  %cmp16 = icmp eq i32 %bf.clear15, 10, !dbg !9055
  br i1 %cmp16, label %cond.true, label %cond.false36, !dbg !9055

cond.true:                                        ; preds = %lor.lhs.false13, %lor.lhs.false8, %lor.lhs.false, %entry
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9055
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !9055
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !9055
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 5, !dbg !9055
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !9055
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !9055
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !9055
  %bf.load22 = load i32, i32* %14, align 8, !dbg !9055
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !9055
  %cmp24 = icmp eq i32 %bf.clear23, 23, !dbg !9055
  br i1 %cmp24, label %cond.true26, label %cond.false, !dbg !9055

cond.true26:                                      ; preds = %cond.true
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9055
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !9055
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !9055
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 5, !dbg !9055
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !9055
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !9055
  br label %cond.end, !dbg !9055

cond.false:                                       ; preds = %cond.true
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9055
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9055
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !9055
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !9055
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 5, !dbg !9055
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !9055
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !9055
  %call35 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %17, %struct.rtx_def* %19), !dbg !9055
  br label %cond.end, !dbg !9055

cond.end:                                         ; preds = %cond.false, %cond.true26
  %cond = phi %struct.rtx_def* [ %16, %cond.true26 ], [ %call35, %cond.false ], !dbg !9055
  br label %cond.end37, !dbg !9055

cond.false36:                                     ; preds = %lor.lhs.false13
  br label %cond.end37, !dbg !9055

cond.end37:                                       ; preds = %cond.false36, %cond.end
  %cond38 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false36 ], !dbg !9055
  store %struct.rtx_def* %cond38, %struct.rtx_def** %old_set, align 8, !dbg !9054
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_body, metadata !9056, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9058, metadata !DIExpression()), !dbg !9059
  store i32 0, i32* %val, align 4, !dbg !9059
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9060, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.declare(metadata [30 x %struct.rtx_def*]* %substed_operand, metadata !9062, metadata !DIExpression()), !dbg !9063
  call void @llvm.dbg.declare(metadata [30 x %struct.rtx_def*]* %orig_operand, metadata !9064, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.declare(metadata %struct.elim_table** %ep, metadata !9066, metadata !DIExpression()), !dbg !9067
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %plus_src, metadata !9068, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %plus_cst_src, metadata !9070, metadata !DIExpression()), !dbg !9071
  %20 = load i32, i32* %insn_is_asm, align 4, !dbg !9072
  %tobool = icmp ne i32 %20, 0, !dbg !9072
  br i1 %tobool, label %if.end116, label %land.lhs.true, !dbg !9074

land.lhs.true:                                    ; preds = %cond.end37
  %21 = load i32, i32* %icode, align 4, !dbg !9075
  %cmp39 = icmp slt i32 %21, 0, !dbg !9076
  br i1 %cmp39, label %if.then, label %if.end116, !dbg !9077

if.then:                                          ; preds = %land.lhs.true
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9078
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !9078
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !9078
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 5, !dbg !9078
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !9078
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !9078
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !9078
  %bf.load45 = load i32, i32* %24, align 8, !dbg !9078
  %bf.clear46 = and i32 %bf.load45, 65535, !dbg !9078
  %cmp47 = icmp eq i32 %bf.clear46, 24, !dbg !9078
  br i1 %cmp47, label %cond.false91, label %lor.lhs.false49, !dbg !9078

lor.lhs.false49:                                  ; preds = %if.then
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9078
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !9078
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !9078
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 5, !dbg !9078
  %rt_rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !9078
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !9078
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !9078
  %bf.load54 = load i32, i32* %27, align 8, !dbg !9078
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !9078
  %cmp56 = icmp eq i32 %bf.clear55, 25, !dbg !9078
  br i1 %cmp56, label %cond.false91, label %lor.lhs.false58, !dbg !9078

lor.lhs.false58:                                  ; preds = %lor.lhs.false49
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9078
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !9078
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !9078
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 5, !dbg !9078
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !9078
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !9078
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !9078
  %bf.load63 = load i32, i32* %30, align 8, !dbg !9078
  %bf.clear64 = and i32 %bf.load63, 65535, !dbg !9078
  %cmp65 = icmp eq i32 %bf.clear64, 20, !dbg !9078
  br i1 %cmp65, label %cond.false91, label %lor.lhs.false67, !dbg !9078

lor.lhs.false67:                                  ; preds = %lor.lhs.false58
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9078
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !9078
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !9078
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 5, !dbg !9078
  %rt_rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**, !dbg !9078
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !9078
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !9078
  %bf.load72 = load i32, i32* %33, align 8, !dbg !9078
  %bf.clear73 = and i32 %bf.load72, 65535, !dbg !9078
  %cmp74 = icmp eq i32 %bf.clear73, 21, !dbg !9078
  br i1 %cmp74, label %cond.false91, label %lor.lhs.false76, !dbg !9078

lor.lhs.false76:                                  ; preds = %lor.lhs.false67
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9078
  %u77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !9078
  %fld78 = bitcast %union.u* %u77 to [1 x %union.rtunion_def]*, !dbg !9078
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i64 0, i64 5, !dbg !9078
  %rt_rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**, !dbg !9078
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx80, align 8, !dbg !9078
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !9078
  %bf.load81 = load i32, i32* %36, align 8, !dbg !9078
  %bf.clear82 = and i32 %bf.load81, 65535, !dbg !9078
  %cmp83 = icmp eq i32 %bf.clear82, 16, !dbg !9078
  br i1 %cmp83, label %cond.false91, label %lor.lhs.false85, !dbg !9078

lor.lhs.false85:                                  ; preds = %lor.lhs.false76
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9078
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !9078
  %bf.load86 = load i32, i32* %38, align 8, !dbg !9078
  %bf.clear87 = and i32 %bf.load86, 65535, !dbg !9078
  %cmp88 = icmp eq i32 %bf.clear87, 7, !dbg !9078
  br i1 %cmp88, label %cond.false91, label %cond.true90, !dbg !9078

cond.true90:                                      ; preds = %lor.lhs.false85
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 3227, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !9078
  br label %cond.end92, !dbg !9078

cond.false91:                                     ; preds = %lor.lhs.false85, %lor.lhs.false76, %lor.lhs.false67, %lor.lhs.false58, %lor.lhs.false49, %if.then
  br label %cond.end92, !dbg !9078

cond.end92:                                       ; preds = %cond.false91, %cond.true90
  %cond93 = phi i32 [ 0, %cond.true90 ], [ 0, %cond.false91 ], !dbg !9078
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9080
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !9080
  %bf.load94 = load i32, i32* %40, align 8, !dbg !9080
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !9080
  %cmp96 = icmp eq i32 %bf.clear95, 7, !dbg !9080
  br i1 %cmp96, label %if.then98, label %if.end, !dbg !9082

if.then98:                                        ; preds = %cond.end92
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9083
  %u99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !9083
  %fld100 = bitcast %union.u* %u99 to [1 x %union.rtunion_def]*, !dbg !9083
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i64 0, i64 5, !dbg !9083
  %rt_rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**, !dbg !9083
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx102, align 8, !dbg !9083
  %u103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !9083
  %fld104 = bitcast %union.u* %u103 to [1 x %union.rtunion_def]*, !dbg !9083
  %arrayidx105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld104, i64 0, i64 1, !dbg !9083
  %rt_rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**, !dbg !9083
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx106, align 8, !dbg !9083
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9084
  %call107 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %43, i32 0, %struct.rtx_def* %44), !dbg !9085
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9086
  %u108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !9086
  %fld109 = bitcast %union.u* %u108 to [1 x %union.rtunion_def]*, !dbg !9086
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i64 0, i64 5, !dbg !9086
  %rt_rtx111 = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**, !dbg !9086
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx111, align 8, !dbg !9086
  %u112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !9086
  %fld113 = bitcast %union.u* %u112 to [1 x %union.rtunion_def]*, !dbg !9086
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i64 0, i64 1, !dbg !9086
  %rt_rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**, !dbg !9086
  store %struct.rtx_def* %call107, %struct.rtx_def** %rt_rtx115, align 8, !dbg !9087
  br label %if.end, !dbg !9086

if.end:                                           ; preds = %if.then98, %cond.end92
  store i32 0, i32* %retval, align 4, !dbg !9088
  br label %return, !dbg !9088

if.end116:                                        ; preds = %land.lhs.true, %cond.end37
  %47 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9089
  %cmp117 = icmp ne %struct.rtx_def* %47, null, !dbg !9091
  br i1 %cmp117, label %land.lhs.true119, label %if.end355, !dbg !9092

land.lhs.true119:                                 ; preds = %if.end116
  %48 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9093
  %u120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !9093
  %fld121 = bitcast %union.u* %u120 to [1 x %union.rtunion_def]*, !dbg !9093
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i64 0, i64 0, !dbg !9093
  %rt_rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**, !dbg !9093
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx123, align 8, !dbg !9093
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !9093
  %bf.load124 = load i32, i32* %50, align 8, !dbg !9093
  %bf.clear125 = and i32 %bf.load124, 65535, !dbg !9093
  %cmp126 = icmp eq i32 %bf.clear125, 37, !dbg !9093
  br i1 %cmp126, label %land.lhs.true128, label %if.end355, !dbg !9094

land.lhs.true128:                                 ; preds = %land.lhs.true119
  %51 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9095
  %u129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !9095
  %fld130 = bitcast %union.u* %u129 to [1 x %union.rtunion_def]*, !dbg !9095
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i64 0, i64 0, !dbg !9095
  %rt_rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**, !dbg !9095
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx132, align 8, !dbg !9095
  %call133 = call i32 @rhs_regno(%struct.rtx_def* %52), !dbg !9095
  %cmp134 = icmp ult i32 %call133, 53, !dbg !9096
  br i1 %cmp134, label %if.then136, label %if.end355, !dbg !9097

if.then136:                                       ; preds = %land.lhs.true128
  %53 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9098
  store %struct.elim_table* %53, %struct.elim_table** %ep, align 8, !dbg !9101
  br label %for.cond, !dbg !9102

for.cond:                                         ; preds = %for.inc, %if.then136
  %54 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9103
  %55 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9105
  %arrayidx137 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %55, i64 4, !dbg !9105
  %cmp138 = icmp ult %struct.elim_table* %54, %arrayidx137, !dbg !9106
  br i1 %cmp138, label %for.body, label %for.end, !dbg !9107

for.body:                                         ; preds = %for.cond
  %56 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9108
  %from_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %56, i32 0, i32 8, !dbg !9110
  %57 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx, align 8, !dbg !9110
  %58 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9111
  %u140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !9111
  %fld141 = bitcast %union.u* %u140 to [1 x %union.rtunion_def]*, !dbg !9111
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i64 0, i64 0, !dbg !9111
  %rt_rtx143 = bitcast %union.rtunion_def* %arrayidx142 to %struct.rtx_def**, !dbg !9111
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx143, align 8, !dbg !9111
  %cmp144 = icmp eq %struct.rtx_def* %57, %59, !dbg !9112
  br i1 %cmp144, label %land.lhs.true146, label %if.end354, !dbg !9113

land.lhs.true146:                                 ; preds = %for.body
  %60 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9114
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %60, i32 0, i32 3, !dbg !9115
  %61 = load i32, i32* %can_eliminate, align 8, !dbg !9115
  %tobool147 = icmp ne i32 %61, 0, !dbg !9114
  br i1 %tobool147, label %if.then148, label %if.end354, !dbg !9116

if.then148:                                       ; preds = %land.lhs.true146
  %62 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9117
  %from = getelementptr inbounds %struct.elim_table, %struct.elim_table* %62, i32 0, i32 0, !dbg !9120
  %63 = load i32, i32* %from, align 8, !dbg !9120
  %cmp149 = icmp eq i32 %63, 20, !dbg !9121
  br i1 %cmp149, label %land.lhs.true151, label %if.end350, !dbg !9122

land.lhs.true151:                                 ; preds = %if.then148
  %64 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9123
  %to = getelementptr inbounds %struct.elim_table, %struct.elim_table* %64, i32 0, i32 1, !dbg !9124
  %65 = load i32, i32* %to, align 4, !dbg !9124
  %cmp152 = icmp eq i32 %65, 6, !dbg !9125
  br i1 %cmp152, label %if.then154, label %if.end350, !dbg !9126

if.then154:                                       ; preds = %land.lhs.true151
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %base, metadata !9127, metadata !DIExpression()), !dbg !9129
  %66 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9130
  %u155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !9130
  %fld156 = bitcast %union.u* %u155 to [1 x %union.rtunion_def]*, !dbg !9130
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i64 0, i64 1, !dbg !9130
  %rt_rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**, !dbg !9130
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx158, align 8, !dbg !9130
  store %struct.rtx_def* %67, %struct.rtx_def** %base, align 8, !dbg !9129
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %base_insn, metadata !9131, metadata !DIExpression()), !dbg !9132
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9133
  store %struct.rtx_def* %68, %struct.rtx_def** %base_insn, align 8, !dbg !9132
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !9134, metadata !DIExpression()), !dbg !9135
  store i64 0, i64* %offset, align 8, !dbg !9135
  br label %while.cond, !dbg !9136

while.cond:                                       ; preds = %if.end249, %if.then154
  %69 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !9137
  %70 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9138
  %to_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %70, i32 0, i32 9, !dbg !9139
  %71 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx, align 8, !dbg !9139
  %cmp159 = icmp ne %struct.rtx_def* %69, %71, !dbg !9140
  br i1 %cmp159, label %while.body, label %while.end, !dbg !9136

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev_insn, metadata !9141, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev_set, metadata !9144, metadata !DIExpression()), !dbg !9145
  %72 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !9146
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !9146
  %bf.load161 = load i32, i32* %73, align 8, !dbg !9146
  %bf.clear162 = and i32 %bf.load161, 65535, !dbg !9146
  %cmp163 = icmp eq i32 %bf.clear162, 49, !dbg !9148
  br i1 %cmp163, label %land.lhs.true165, label %if.else, !dbg !9149

land.lhs.true165:                                 ; preds = %while.body
  %74 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !9150
  %u166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1, !dbg !9150
  %fld167 = bitcast %union.u* %u166 to [1 x %union.rtunion_def]*, !dbg !9150
  %arrayidx168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld167, i64 0, i64 1, !dbg !9150
  %rt_rtx169 = bitcast %union.rtunion_def* %arrayidx168 to %struct.rtx_def**, !dbg !9150
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx169, align 8, !dbg !9150
  %76 = bitcast %struct.rtx_def* %75 to i32*, !dbg !9150
  %bf.load170 = load i32, i32* %76, align 8, !dbg !9150
  %bf.clear171 = and i32 %bf.load170, 65535, !dbg !9150
  %cmp172 = icmp eq i32 %bf.clear171, 30, !dbg !9150
  br i1 %cmp172, label %if.then174, label %if.else, !dbg !9151

if.then174:                                       ; preds = %land.lhs.true165
  %77 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !9152
  %u175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1, !dbg !9152
  %fld176 = bitcast %union.u* %u175 to [1 x %union.rtunion_def]*, !dbg !9152
  %arrayidx177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld176, i64 0, i64 1, !dbg !9152
  %rt_rtx178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtx_def**, !dbg !9152
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx178, align 8, !dbg !9152
  %u179 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !9152
  %hwint = bitcast %union.u* %u179 to [1 x i64]*, !dbg !9152
  %arrayidx180 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !9152
  %79 = load i64, i64* %arrayidx180, align 8, !dbg !9152
  %80 = load i64, i64* %offset, align 8, !dbg !9154
  %add = add nsw i64 %80, %79, !dbg !9154
  store i64 %add, i64* %offset, align 8, !dbg !9154
  %81 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !9155
  %u181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1, !dbg !9155
  %fld182 = bitcast %union.u* %u181 to [1 x %union.rtunion_def]*, !dbg !9155
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i64 0, i64 0, !dbg !9155
  %rt_rtx184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**, !dbg !9155
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx184, align 8, !dbg !9155
  store %struct.rtx_def* %82, %struct.rtx_def** %base, align 8, !dbg !9156
  br label %if.end249, !dbg !9157

if.else:                                          ; preds = %land.lhs.true165, %while.body
  %83 = load %struct.rtx_def*, %struct.rtx_def** %base_insn, align 8, !dbg !9158
  %call185 = call %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def* %83), !dbg !9160
  store %struct.rtx_def* %call185, %struct.rtx_def** %prev_insn, align 8, !dbg !9161
  %cmp186 = icmp ne %struct.rtx_def* %call185, null, !dbg !9162
  br i1 %cmp186, label %land.lhs.true188, label %if.else247, !dbg !9163

land.lhs.true188:                                 ; preds = %if.else
  %84 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8, !dbg !9164
  %85 = bitcast %struct.rtx_def* %84 to i32*, !dbg !9164
  %bf.load189 = load i32, i32* %85, align 8, !dbg !9164
  %bf.clear190 = and i32 %bf.load189, 65535, !dbg !9164
  %cmp191 = icmp eq i32 %bf.clear190, 8, !dbg !9164
  br i1 %cmp191, label %cond.true208, label %lor.lhs.false193, !dbg !9164

lor.lhs.false193:                                 ; preds = %land.lhs.true188
  %86 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8, !dbg !9164
  %87 = bitcast %struct.rtx_def* %86 to i32*, !dbg !9164
  %bf.load194 = load i32, i32* %87, align 8, !dbg !9164
  %bf.clear195 = and i32 %bf.load194, 65535, !dbg !9164
  %cmp196 = icmp eq i32 %bf.clear195, 7, !dbg !9164
  br i1 %cmp196, label %cond.true208, label %lor.lhs.false198, !dbg !9164

lor.lhs.false198:                                 ; preds = %lor.lhs.false193
  %88 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8, !dbg !9164
  %89 = bitcast %struct.rtx_def* %88 to i32*, !dbg !9164
  %bf.load199 = load i32, i32* %89, align 8, !dbg !9164
  %bf.clear200 = and i32 %bf.load199, 65535, !dbg !9164
  %cmp201 = icmp eq i32 %bf.clear200, 9, !dbg !9164
  br i1 %cmp201, label %cond.true208, label %lor.lhs.false203, !dbg !9164

lor.lhs.false203:                                 ; preds = %lor.lhs.false198
  %90 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8, !dbg !9164
  %91 = bitcast %struct.rtx_def* %90 to i32*, !dbg !9164
  %bf.load204 = load i32, i32* %91, align 8, !dbg !9164
  %bf.clear205 = and i32 %bf.load204, 65535, !dbg !9164
  %cmp206 = icmp eq i32 %bf.clear205, 10, !dbg !9164
  br i1 %cmp206, label %cond.true208, label %cond.false230, !dbg !9164

cond.true208:                                     ; preds = %lor.lhs.false203, %lor.lhs.false198, %lor.lhs.false193, %land.lhs.true188
  %92 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8, !dbg !9164
  %u209 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !9164
  %fld210 = bitcast %union.u* %u209 to [1 x %union.rtunion_def]*, !dbg !9164
  %arrayidx211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld210, i64 0, i64 5, !dbg !9164
  %rt_rtx212 = bitcast %union.rtunion_def* %arrayidx211 to %struct.rtx_def**, !dbg !9164
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx212, align 8, !dbg !9164
  %94 = bitcast %struct.rtx_def* %93 to i32*, !dbg !9164
  %bf.load213 = load i32, i32* %94, align 8, !dbg !9164
  %bf.clear214 = and i32 %bf.load213, 65535, !dbg !9164
  %cmp215 = icmp eq i32 %bf.clear214, 23, !dbg !9164
  br i1 %cmp215, label %cond.true217, label %cond.false222, !dbg !9164

cond.true217:                                     ; preds = %cond.true208
  %95 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8, !dbg !9164
  %u218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1, !dbg !9164
  %fld219 = bitcast %union.u* %u218 to [1 x %union.rtunion_def]*, !dbg !9164
  %arrayidx220 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld219, i64 0, i64 5, !dbg !9164
  %rt_rtx221 = bitcast %union.rtunion_def* %arrayidx220 to %struct.rtx_def**, !dbg !9164
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx221, align 8, !dbg !9164
  br label %cond.end228, !dbg !9164

cond.false222:                                    ; preds = %cond.true208
  %97 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8, !dbg !9164
  %98 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8, !dbg !9164
  %u223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1, !dbg !9164
  %fld224 = bitcast %union.u* %u223 to [1 x %union.rtunion_def]*, !dbg !9164
  %arrayidx225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld224, i64 0, i64 5, !dbg !9164
  %rt_rtx226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**, !dbg !9164
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx226, align 8, !dbg !9164
  %call227 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %97, %struct.rtx_def* %99), !dbg !9164
  br label %cond.end228, !dbg !9164

cond.end228:                                      ; preds = %cond.false222, %cond.true217
  %cond229 = phi %struct.rtx_def* [ %96, %cond.true217 ], [ %call227, %cond.false222 ], !dbg !9164
  br label %cond.end231, !dbg !9164

cond.false230:                                    ; preds = %lor.lhs.false203
  br label %cond.end231, !dbg !9164

cond.end231:                                      ; preds = %cond.false230, %cond.end228
  %cond232 = phi %struct.rtx_def* [ %cond229, %cond.end228 ], [ null, %cond.false230 ], !dbg !9164
  store %struct.rtx_def* %cond232, %struct.rtx_def** %prev_set, align 8, !dbg !9165
  %cmp233 = icmp ne %struct.rtx_def* %cond232, null, !dbg !9166
  br i1 %cmp233, label %land.lhs.true235, label %if.else247, !dbg !9167

land.lhs.true235:                                 ; preds = %cond.end231
  %100 = load %struct.rtx_def*, %struct.rtx_def** %prev_set, align 8, !dbg !9168
  %u236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1, !dbg !9168
  %fld237 = bitcast %union.u* %u236 to [1 x %union.rtunion_def]*, !dbg !9168
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i64 0, i64 0, !dbg !9168
  %rt_rtx239 = bitcast %union.rtunion_def* %arrayidx238 to %struct.rtx_def**, !dbg !9168
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx239, align 8, !dbg !9168
  %102 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !9169
  %call240 = call i32 @rtx_equal_p(%struct.rtx_def* %101, %struct.rtx_def* %102), !dbg !9170
  %tobool241 = icmp ne i32 %call240, 0, !dbg !9170
  br i1 %tobool241, label %if.then242, label %if.else247, !dbg !9171

if.then242:                                       ; preds = %land.lhs.true235
  %103 = load %struct.rtx_def*, %struct.rtx_def** %prev_set, align 8, !dbg !9172
  %u243 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !9172
  %fld244 = bitcast %union.u* %u243 to [1 x %union.rtunion_def]*, !dbg !9172
  %arrayidx245 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld244, i64 0, i64 1, !dbg !9172
  %rt_rtx246 = bitcast %union.rtunion_def* %arrayidx245 to %struct.rtx_def**, !dbg !9172
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx246, align 8, !dbg !9172
  store %struct.rtx_def* %104, %struct.rtx_def** %base, align 8, !dbg !9174
  %105 = load %struct.rtx_def*, %struct.rtx_def** %prev_insn, align 8, !dbg !9175
  store %struct.rtx_def* %105, %struct.rtx_def** %base_insn, align 8, !dbg !9176
  br label %if.end248, !dbg !9177

if.else247:                                       ; preds = %land.lhs.true235, %cond.end231, %if.else
  br label %while.end, !dbg !9178

if.end248:                                        ; preds = %if.then242
  br label %if.end249

if.end249:                                        ; preds = %if.end248, %if.then174
  br label %while.cond, !dbg !9136, !llvm.loop !9179

while.end:                                        ; preds = %if.else247, %while.cond
  %106 = load %struct.rtx_def*, %struct.rtx_def** %base, align 8, !dbg !9181
  %107 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9183
  %to_rtx250 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %107, i32 0, i32 9, !dbg !9184
  %108 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx250, align 8, !dbg !9184
  %cmp251 = icmp eq %struct.rtx_def* %106, %108, !dbg !9185
  br i1 %cmp251, label %if.then253, label %if.end349, !dbg !9186

if.then253:                                       ; preds = %while.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src, metadata !9187, metadata !DIExpression()), !dbg !9189
  %109 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9190
  %to_rtx254 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %109, i32 0, i32 9, !dbg !9191
  %110 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx254, align 8, !dbg !9191
  %111 = load i64, i64* %offset, align 8, !dbg !9192
  %112 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9193
  %offset255 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %112, i32 0, i32 5, !dbg !9194
  %113 = load i64, i64* %offset255, align 8, !dbg !9194
  %sub = sub nsw i64 %111, %113, !dbg !9195
  %call256 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %110, i64 %sub), !dbg !9196
  store %struct.rtx_def* %call256, %struct.rtx_def** %src, align 8, !dbg !9189
  %114 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8, !dbg !9197
  store %struct.rtx_def* %114, %struct.rtx_def** %new_body, align 8, !dbg !9198
  %115 = load i32, i32* %replace.addr, align 4, !dbg !9199
  %tobool257 = icmp ne i32 %115, 0, !dbg !9199
  br i1 %tobool257, label %if.end276, label %if.then258, !dbg !9201

if.then258:                                       ; preds = %if.then253
  %116 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8, !dbg !9202
  %call259 = call %struct.rtx_def* @copy_insn(%struct.rtx_def* %116), !dbg !9204
  store %struct.rtx_def* %call259, %struct.rtx_def** %new_body, align 8, !dbg !9205
  %117 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9206
  %u260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1, !dbg !9206
  %fld261 = bitcast %union.u* %u260 to [1 x %union.rtunion_def]*, !dbg !9206
  %arrayidx262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld261, i64 0, i64 7, !dbg !9206
  %rt_rtx263 = bitcast %union.rtunion_def* %arrayidx262 to %struct.rtx_def**, !dbg !9206
  %118 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx263, align 8, !dbg !9206
  %tobool264 = icmp ne %struct.rtx_def* %118, null, !dbg !9206
  br i1 %tobool264, label %if.then265, label %if.end275, !dbg !9208

if.then265:                                       ; preds = %if.then258
  %119 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9209
  %u266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1, !dbg !9209
  %fld267 = bitcast %union.u* %u266 to [1 x %union.rtunion_def]*, !dbg !9209
  %arrayidx268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld267, i64 0, i64 7, !dbg !9209
  %rt_rtx269 = bitcast %union.rtunion_def* %arrayidx268 to %struct.rtx_def**, !dbg !9209
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx269, align 8, !dbg !9209
  %call270 = call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %120), !dbg !9210
  %121 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9211
  %u271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1, !dbg !9211
  %fld272 = bitcast %union.u* %u271 to [1 x %union.rtunion_def]*, !dbg !9211
  %arrayidx273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld272, i64 0, i64 7, !dbg !9211
  %rt_rtx274 = bitcast %union.rtunion_def* %arrayidx273 to %struct.rtx_def**, !dbg !9211
  store %struct.rtx_def* %call270, %struct.rtx_def** %rt_rtx274, align 8, !dbg !9212
  br label %if.end275, !dbg !9211

if.end275:                                        ; preds = %if.then265, %if.then258
  br label %if.end276, !dbg !9213

if.end276:                                        ; preds = %if.end275, %if.then253
  %122 = load %struct.rtx_def*, %struct.rtx_def** %new_body, align 8, !dbg !9214
  %123 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9215
  %u277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1, !dbg !9215
  %fld278 = bitcast %union.u* %u277 to [1 x %union.rtunion_def]*, !dbg !9215
  %arrayidx279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i64 0, i64 5, !dbg !9215
  %rt_rtx280 = bitcast %union.rtunion_def* %arrayidx279 to %struct.rtx_def**, !dbg !9215
  store %struct.rtx_def* %122, %struct.rtx_def** %rt_rtx280, align 8, !dbg !9216
  %124 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9217
  %125 = bitcast %struct.rtx_def* %124 to i32*, !dbg !9217
  %bf.load281 = load i32, i32* %125, align 8, !dbg !9217
  %bf.clear282 = and i32 %bf.load281, 65535, !dbg !9217
  %cmp283 = icmp eq i32 %bf.clear282, 8, !dbg !9217
  br i1 %cmp283, label %cond.true300, label %lor.lhs.false285, !dbg !9217

lor.lhs.false285:                                 ; preds = %if.end276
  %126 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9217
  %127 = bitcast %struct.rtx_def* %126 to i32*, !dbg !9217
  %bf.load286 = load i32, i32* %127, align 8, !dbg !9217
  %bf.clear287 = and i32 %bf.load286, 65535, !dbg !9217
  %cmp288 = icmp eq i32 %bf.clear287, 7, !dbg !9217
  br i1 %cmp288, label %cond.true300, label %lor.lhs.false290, !dbg !9217

lor.lhs.false290:                                 ; preds = %lor.lhs.false285
  %128 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9217
  %129 = bitcast %struct.rtx_def* %128 to i32*, !dbg !9217
  %bf.load291 = load i32, i32* %129, align 8, !dbg !9217
  %bf.clear292 = and i32 %bf.load291, 65535, !dbg !9217
  %cmp293 = icmp eq i32 %bf.clear292, 9, !dbg !9217
  br i1 %cmp293, label %cond.true300, label %lor.lhs.false295, !dbg !9217

lor.lhs.false295:                                 ; preds = %lor.lhs.false290
  %130 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9217
  %131 = bitcast %struct.rtx_def* %130 to i32*, !dbg !9217
  %bf.load296 = load i32, i32* %131, align 8, !dbg !9217
  %bf.clear297 = and i32 %bf.load296, 65535, !dbg !9217
  %cmp298 = icmp eq i32 %bf.clear297, 10, !dbg !9217
  br i1 %cmp298, label %cond.true300, label %cond.false322, !dbg !9217

cond.true300:                                     ; preds = %lor.lhs.false295, %lor.lhs.false290, %lor.lhs.false285, %if.end276
  %132 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9217
  %u301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1, !dbg !9217
  %fld302 = bitcast %union.u* %u301 to [1 x %union.rtunion_def]*, !dbg !9217
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i64 0, i64 5, !dbg !9217
  %rt_rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**, !dbg !9217
  %133 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx304, align 8, !dbg !9217
  %134 = bitcast %struct.rtx_def* %133 to i32*, !dbg !9217
  %bf.load305 = load i32, i32* %134, align 8, !dbg !9217
  %bf.clear306 = and i32 %bf.load305, 65535, !dbg !9217
  %cmp307 = icmp eq i32 %bf.clear306, 23, !dbg !9217
  br i1 %cmp307, label %cond.true309, label %cond.false314, !dbg !9217

cond.true309:                                     ; preds = %cond.true300
  %135 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9217
  %u310 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1, !dbg !9217
  %fld311 = bitcast %union.u* %u310 to [1 x %union.rtunion_def]*, !dbg !9217
  %arrayidx312 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld311, i64 0, i64 5, !dbg !9217
  %rt_rtx313 = bitcast %union.rtunion_def* %arrayidx312 to %struct.rtx_def**, !dbg !9217
  %136 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx313, align 8, !dbg !9217
  br label %cond.end320, !dbg !9217

cond.false314:                                    ; preds = %cond.true300
  %137 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9217
  %138 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9217
  %u315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1, !dbg !9217
  %fld316 = bitcast %union.u* %u315 to [1 x %union.rtunion_def]*, !dbg !9217
  %arrayidx317 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld316, i64 0, i64 5, !dbg !9217
  %rt_rtx318 = bitcast %union.rtunion_def* %arrayidx317 to %struct.rtx_def**, !dbg !9217
  %139 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx318, align 8, !dbg !9217
  %call319 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %137, %struct.rtx_def* %139), !dbg !9217
  br label %cond.end320, !dbg !9217

cond.end320:                                      ; preds = %cond.false314, %cond.true309
  %cond321 = phi %struct.rtx_def* [ %136, %cond.true309 ], [ %call319, %cond.false314 ], !dbg !9217
  br label %cond.end323, !dbg !9217

cond.false322:                                    ; preds = %lor.lhs.false295
  br label %cond.end323, !dbg !9217

cond.end323:                                      ; preds = %cond.false322, %cond.end320
  %cond324 = phi %struct.rtx_def* [ %cond321, %cond.end320 ], [ null, %cond.false322 ], !dbg !9217
  store %struct.rtx_def* %cond324, %struct.rtx_def** %old_set, align 8, !dbg !9218
  %140 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9219
  %141 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9220
  %u325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1, !dbg !9220
  %fld326 = bitcast %union.u* %u325 to [1 x %union.rtunion_def]*, !dbg !9220
  %arrayidx327 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld326, i64 0, i64 1, !dbg !9220
  %rt_rtx328 = bitcast %union.rtunion_def* %arrayidx327 to %struct.rtx_def**, !dbg !9220
  %142 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !9221
  %call329 = call zeroext i8 @validate_change(%struct.rtx_def* %140, %struct.rtx_def** %rt_rtx328, %struct.rtx_def* %142, i8 zeroext 1), !dbg !9222
  %143 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9223
  %144 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9224
  %u330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1, !dbg !9224
  %fld331 = bitcast %union.u* %u330 to [1 x %union.rtunion_def]*, !dbg !9224
  %arrayidx332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld331, i64 0, i64 0, !dbg !9224
  %rt_rtx333 = bitcast %union.rtunion_def* %arrayidx332 to %struct.rtx_def**, !dbg !9224
  %145 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9225
  %to_rtx334 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %145, i32 0, i32 9, !dbg !9226
  %146 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx334, align 8, !dbg !9226
  %call335 = call zeroext i8 @validate_change(%struct.rtx_def* %143, %struct.rtx_def** %rt_rtx333, %struct.rtx_def* %146, i8 zeroext 1), !dbg !9227
  %call336 = call i32 @apply_change_group(), !dbg !9228
  %tobool337 = icmp ne i32 %call336, 0, !dbg !9228
  br i1 %tobool337, label %if.end348, label %if.then338, !dbg !9230

if.then338:                                       ; preds = %cond.end323
  %147 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !9231
  %148 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9233
  %u339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1, !dbg !9233
  %fld340 = bitcast %union.u* %u339 to [1 x %union.rtunion_def]*, !dbg !9233
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i64 0, i64 1, !dbg !9233
  %rt_rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**, !dbg !9233
  store %struct.rtx_def* %147, %struct.rtx_def** %rt_rtx342, align 8, !dbg !9234
  %149 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9235
  %to_rtx343 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %149, i32 0, i32 9, !dbg !9236
  %150 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx343, align 8, !dbg !9236
  %151 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9237
  %u344 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1, !dbg !9237
  %fld345 = bitcast %union.u* %u344 to [1 x %union.rtunion_def]*, !dbg !9237
  %arrayidx346 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld345, i64 0, i64 0, !dbg !9237
  %rt_rtx347 = bitcast %union.rtunion_def* %arrayidx346 to %struct.rtx_def**, !dbg !9237
  store %struct.rtx_def* %150, %struct.rtx_def** %rt_rtx347, align 8, !dbg !9238
  br label %if.end348, !dbg !9239

if.end348:                                        ; preds = %if.then338, %cond.end323
  store i32 1, i32* %val, align 4, !dbg !9240
  br label %done, !dbg !9241

if.end349:                                        ; preds = %while.end
  br label %if.end350, !dbg !9242

if.end350:                                        ; preds = %if.end349, %land.lhs.true151, %if.then148
  %152 = load i32, i32* %replace.addr, align 4, !dbg !9243
  %tobool351 = icmp ne i32 %152, 0, !dbg !9243
  br i1 %tobool351, label %if.then352, label %if.end353, !dbg !9245

if.then352:                                       ; preds = %if.end350
  %153 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9246
  call void @delete_dead_insn(%struct.rtx_def* %153), !dbg !9248
  store i32 1, i32* %retval, align 4, !dbg !9249
  br label %return, !dbg !9249

if.end353:                                        ; preds = %if.end350
  store i32 1, i32* %val, align 4, !dbg !9250
  br label %done, !dbg !9251

if.end354:                                        ; preds = %land.lhs.true146, %for.body
  br label %for.inc, !dbg !9115

for.inc:                                          ; preds = %if.end354
  %154 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9252
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %154, i32 1, !dbg !9252
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8, !dbg !9252
  br label %for.cond, !dbg !9253, !llvm.loop !9254

for.end:                                          ; preds = %for.cond
  br label %if.end355, !dbg !9256

if.end355:                                        ; preds = %for.end, %land.lhs.true128, %land.lhs.true119, %if.end116
  store %struct.rtx_def* null, %struct.rtx_def** %plus_cst_src, align 8, !dbg !9257
  store %struct.rtx_def* null, %struct.rtx_def** %plus_src, align 8, !dbg !9258
  %155 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9259
  %tobool356 = icmp ne %struct.rtx_def* %155, null, !dbg !9259
  br i1 %tobool356, label %land.lhs.true357, label %if.end487, !dbg !9261

land.lhs.true357:                                 ; preds = %if.end355
  %156 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9262
  %u358 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1, !dbg !9262
  %fld359 = bitcast %union.u* %u358 to [1 x %union.rtunion_def]*, !dbg !9262
  %arrayidx360 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld359, i64 0, i64 0, !dbg !9262
  %rt_rtx361 = bitcast %union.rtunion_def* %arrayidx360 to %struct.rtx_def**, !dbg !9262
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx361, align 8, !dbg !9262
  %158 = bitcast %struct.rtx_def* %157 to i32*, !dbg !9262
  %bf.load362 = load i32, i32* %158, align 8, !dbg !9262
  %bf.clear363 = and i32 %bf.load362, 65535, !dbg !9262
  %cmp364 = icmp eq i32 %bf.clear363, 37, !dbg !9262
  br i1 %cmp364, label %if.then366, label %if.end487, !dbg !9263

if.then366:                                       ; preds = %land.lhs.true357
  %159 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9264
  %u367 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1, !dbg !9264
  %fld368 = bitcast %union.u* %u367 to [1 x %union.rtunion_def]*, !dbg !9264
  %arrayidx369 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld368, i64 0, i64 1, !dbg !9264
  %rt_rtx370 = bitcast %union.rtunion_def* %arrayidx369 to %struct.rtx_def**, !dbg !9264
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx370, align 8, !dbg !9264
  %161 = bitcast %struct.rtx_def* %160 to i32*, !dbg !9264
  %bf.load371 = load i32, i32* %161, align 8, !dbg !9264
  %bf.clear372 = and i32 %bf.load371, 65535, !dbg !9264
  %cmp373 = icmp eq i32 %bf.clear372, 49, !dbg !9267
  br i1 %cmp373, label %if.then375, label %if.end380, !dbg !9268

if.then375:                                       ; preds = %if.then366
  %162 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9269
  %u376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1, !dbg !9269
  %fld377 = bitcast %union.u* %u376 to [1 x %union.rtunion_def]*, !dbg !9269
  %arrayidx378 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld377, i64 0, i64 1, !dbg !9269
  %rt_rtx379 = bitcast %union.rtunion_def* %arrayidx378 to %struct.rtx_def**, !dbg !9269
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx379, align 8, !dbg !9269
  store %struct.rtx_def* %163, %struct.rtx_def** %plus_src, align 8, !dbg !9270
  br label %if.end380, !dbg !9271

if.end380:                                        ; preds = %if.then375, %if.then366
  %164 = load %struct.rtx_def*, %struct.rtx_def** %plus_src, align 8, !dbg !9272
  %tobool381 = icmp ne %struct.rtx_def* %164, null, !dbg !9272
  br i1 %tobool381, label %land.lhs.true382, label %if.else392, !dbg !9274

land.lhs.true382:                                 ; preds = %if.end380
  %165 = load %struct.rtx_def*, %struct.rtx_def** %plus_src, align 8, !dbg !9275
  %u383 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1, !dbg !9275
  %fld384 = bitcast %union.u* %u383 to [1 x %union.rtunion_def]*, !dbg !9275
  %arrayidx385 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld384, i64 0, i64 1, !dbg !9275
  %rt_rtx386 = bitcast %union.rtunion_def* %arrayidx385 to %struct.rtx_def**, !dbg !9275
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx386, align 8, !dbg !9275
  %167 = bitcast %struct.rtx_def* %166 to i32*, !dbg !9275
  %bf.load387 = load i32, i32* %167, align 8, !dbg !9275
  %bf.clear388 = and i32 %bf.load387, 65535, !dbg !9275
  %cmp389 = icmp eq i32 %bf.clear388, 30, !dbg !9275
  br i1 %cmp389, label %if.then391, label %if.else392, !dbg !9276

if.then391:                                       ; preds = %land.lhs.true382
  %168 = load %struct.rtx_def*, %struct.rtx_def** %plus_src, align 8, !dbg !9277
  store %struct.rtx_def* %168, %struct.rtx_def** %plus_cst_src, align 8, !dbg !9278
  br label %if.end456, !dbg !9279

if.else392:                                       ; preds = %land.lhs.true382, %if.end380
  %169 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9280
  %u393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1, !dbg !9280
  %fld394 = bitcast %union.u* %u393 to [1 x %union.rtunion_def]*, !dbg !9280
  %arrayidx395 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld394, i64 0, i64 1, !dbg !9280
  %rt_rtx396 = bitcast %union.rtunion_def* %arrayidx395 to %struct.rtx_def**, !dbg !9280
  %170 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx396, align 8, !dbg !9280
  %171 = bitcast %struct.rtx_def* %170 to i32*, !dbg !9280
  %bf.load397 = load i32, i32* %171, align 8, !dbg !9280
  %bf.clear398 = and i32 %bf.load397, 65535, !dbg !9280
  %cmp399 = icmp eq i32 %bf.clear398, 37, !dbg !9280
  br i1 %cmp399, label %if.then403, label %lor.lhs.false401, !dbg !9282

lor.lhs.false401:                                 ; preds = %if.else392
  %172 = load %struct.rtx_def*, %struct.rtx_def** %plus_src, align 8, !dbg !9283
  %tobool402 = icmp ne %struct.rtx_def* %172, null, !dbg !9283
  br i1 %tobool402, label %if.then403, label %if.end455, !dbg !9284

if.then403:                                       ; preds = %lor.lhs.false401, %if.else392
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %links, metadata !9285, metadata !DIExpression()), !dbg !9287
  %173 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9288
  %u404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1, !dbg !9288
  %fld405 = bitcast %union.u* %u404 to [1 x %union.rtunion_def]*, !dbg !9288
  %arrayidx406 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld405, i64 0, i64 7, !dbg !9288
  %rt_rtx407 = bitcast %union.rtunion_def* %arrayidx406 to %struct.rtx_def**, !dbg !9288
  %174 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx407, align 8, !dbg !9288
  store %struct.rtx_def* %174, %struct.rtx_def** %links, align 8, !dbg !9290
  br label %for.cond408, !dbg !9291

for.cond408:                                      ; preds = %for.inc449, %if.then403
  %175 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8, !dbg !9292
  %tobool409 = icmp ne %struct.rtx_def* %175, null, !dbg !9294
  br i1 %tobool409, label %for.body410, label %for.end454, !dbg !9294

for.body410:                                      ; preds = %for.cond408
  %176 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8, !dbg !9295
  %177 = bitcast %struct.rtx_def* %176 to i32*, !dbg !9295
  %bf.load411 = load i32, i32* %177, align 8, !dbg !9295
  %bf.lshr = lshr i32 %bf.load411, 16, !dbg !9295
  %bf.clear412 = and i32 %bf.lshr, 255, !dbg !9295
  %cmp413 = icmp eq i32 %bf.clear412, 4, !dbg !9298
  br i1 %cmp413, label %land.lhs.true421, label %lor.lhs.false415, !dbg !9299

lor.lhs.false415:                                 ; preds = %for.body410
  %178 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8, !dbg !9300
  %179 = bitcast %struct.rtx_def* %178 to i32*, !dbg !9300
  %bf.load416 = load i32, i32* %179, align 8, !dbg !9300
  %bf.lshr417 = lshr i32 %bf.load416, 16, !dbg !9300
  %bf.clear418 = and i32 %bf.lshr417, 255, !dbg !9300
  %cmp419 = icmp eq i32 %bf.clear418, 3, !dbg !9301
  br i1 %cmp419, label %land.lhs.true421, label %if.end448, !dbg !9302

land.lhs.true421:                                 ; preds = %lor.lhs.false415, %for.body410
  %180 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8, !dbg !9303
  %u422 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1, !dbg !9303
  %fld423 = bitcast %union.u* %u422 to [1 x %union.rtunion_def]*, !dbg !9303
  %arrayidx424 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld423, i64 0, i64 0, !dbg !9303
  %rt_rtx425 = bitcast %union.rtunion_def* %arrayidx424 to %struct.rtx_def**, !dbg !9303
  %181 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx425, align 8, !dbg !9303
  %182 = bitcast %struct.rtx_def* %181 to i32*, !dbg !9303
  %bf.load426 = load i32, i32* %182, align 8, !dbg !9303
  %bf.clear427 = and i32 %bf.load426, 65535, !dbg !9303
  %cmp428 = icmp eq i32 %bf.clear427, 49, !dbg !9304
  br i1 %cmp428, label %land.lhs.true430, label %if.end448, !dbg !9305

land.lhs.true430:                                 ; preds = %land.lhs.true421
  %183 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8, !dbg !9306
  %u431 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1, !dbg !9306
  %fld432 = bitcast %union.u* %u431 to [1 x %union.rtunion_def]*, !dbg !9306
  %arrayidx433 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld432, i64 0, i64 0, !dbg !9306
  %rt_rtx434 = bitcast %union.rtunion_def* %arrayidx433 to %struct.rtx_def**, !dbg !9306
  %184 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx434, align 8, !dbg !9306
  %u435 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1, !dbg !9306
  %fld436 = bitcast %union.u* %u435 to [1 x %union.rtunion_def]*, !dbg !9306
  %arrayidx437 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld436, i64 0, i64 1, !dbg !9306
  %rt_rtx438 = bitcast %union.rtunion_def* %arrayidx437 to %struct.rtx_def**, !dbg !9306
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx438, align 8, !dbg !9306
  %186 = bitcast %struct.rtx_def* %185 to i32*, !dbg !9306
  %bf.load439 = load i32, i32* %186, align 8, !dbg !9306
  %bf.clear440 = and i32 %bf.load439, 65535, !dbg !9306
  %cmp441 = icmp eq i32 %bf.clear440, 30, !dbg !9306
  br i1 %cmp441, label %if.then443, label %if.end448, !dbg !9307

if.then443:                                       ; preds = %land.lhs.true430
  %187 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8, !dbg !9308
  %u444 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %187, i32 0, i32 1, !dbg !9308
  %fld445 = bitcast %union.u* %u444 to [1 x %union.rtunion_def]*, !dbg !9308
  %arrayidx446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld445, i64 0, i64 0, !dbg !9308
  %rt_rtx447 = bitcast %union.rtunion_def* %arrayidx446 to %struct.rtx_def**, !dbg !9308
  %188 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx447, align 8, !dbg !9308
  store %struct.rtx_def* %188, %struct.rtx_def** %plus_cst_src, align 8, !dbg !9310
  br label %for.end454, !dbg !9311

if.end448:                                        ; preds = %land.lhs.true430, %land.lhs.true421, %lor.lhs.false415
  br label %for.inc449, !dbg !9312

for.inc449:                                       ; preds = %if.end448
  %189 = load %struct.rtx_def*, %struct.rtx_def** %links, align 8, !dbg !9313
  %u450 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1, !dbg !9313
  %fld451 = bitcast %union.u* %u450 to [1 x %union.rtunion_def]*, !dbg !9313
  %arrayidx452 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld451, i64 0, i64 1, !dbg !9313
  %rt_rtx453 = bitcast %union.rtunion_def* %arrayidx452 to %struct.rtx_def**, !dbg !9313
  %190 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx453, align 8, !dbg !9313
  store %struct.rtx_def* %190, %struct.rtx_def** %links, align 8, !dbg !9314
  br label %for.cond408, !dbg !9315, !llvm.loop !9316

for.end454:                                       ; preds = %if.then443, %for.cond408
  br label %if.end455, !dbg !9318

if.end455:                                        ; preds = %for.end454, %lor.lhs.false401
  br label %if.end456

if.end456:                                        ; preds = %if.end455, %if.then391
  %191 = load %struct.rtx_def*, %struct.rtx_def** %plus_cst_src, align 8, !dbg !9319
  %tobool457 = icmp ne %struct.rtx_def* %191, null, !dbg !9319
  br i1 %tobool457, label %if.then458, label %if.end486, !dbg !9321

if.then458:                                       ; preds = %if.end456
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg, metadata !9322, metadata !DIExpression()), !dbg !9324
  %192 = load %struct.rtx_def*, %struct.rtx_def** %plus_cst_src, align 8, !dbg !9325
  %u459 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1, !dbg !9325
  %fld460 = bitcast %union.u* %u459 to [1 x %union.rtunion_def]*, !dbg !9325
  %arrayidx461 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld460, i64 0, i64 0, !dbg !9325
  %rt_rtx462 = bitcast %union.rtunion_def* %arrayidx461 to %struct.rtx_def**, !dbg !9325
  %193 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx462, align 8, !dbg !9325
  store %struct.rtx_def* %193, %struct.rtx_def** %reg, align 8, !dbg !9324
  %194 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !9326
  %195 = bitcast %struct.rtx_def* %194 to i32*, !dbg !9326
  %bf.load463 = load i32, i32* %195, align 8, !dbg !9326
  %bf.clear464 = and i32 %bf.load463, 65535, !dbg !9326
  %cmp465 = icmp eq i32 %bf.clear464, 39, !dbg !9328
  br i1 %cmp465, label %land.lhs.true467, label %if.end475, !dbg !9329

land.lhs.true467:                                 ; preds = %if.then458
  %196 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !9330
  %call468 = call i32 @subreg_lowpart_p(%struct.rtx_def* %196), !dbg !9331
  %tobool469 = icmp ne i32 %call468, 0, !dbg !9331
  br i1 %tobool469, label %if.then470, label %if.end475, !dbg !9332

if.then470:                                       ; preds = %land.lhs.true467
  %197 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !9333
  %u471 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1, !dbg !9333
  %fld472 = bitcast %union.u* %u471 to [1 x %union.rtunion_def]*, !dbg !9333
  %arrayidx473 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld472, i64 0, i64 0, !dbg !9333
  %rt_rtx474 = bitcast %union.rtunion_def* %arrayidx473 to %struct.rtx_def**, !dbg !9333
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx474, align 8, !dbg !9333
  store %struct.rtx_def* %198, %struct.rtx_def** %reg, align 8, !dbg !9334
  br label %if.end475, !dbg !9335

if.end475:                                        ; preds = %if.then470, %land.lhs.true467, %if.then458
  %199 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !9336
  %200 = bitcast %struct.rtx_def* %199 to i32*, !dbg !9336
  %bf.load476 = load i32, i32* %200, align 8, !dbg !9336
  %bf.clear477 = and i32 %bf.load476, 65535, !dbg !9336
  %cmp478 = icmp eq i32 %bf.clear477, 37, !dbg !9336
  br i1 %cmp478, label %lor.lhs.false480, label %if.then484, !dbg !9338

lor.lhs.false480:                                 ; preds = %if.end475
  %201 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !9339
  %call481 = call i32 @rhs_regno(%struct.rtx_def* %201), !dbg !9339
  %cmp482 = icmp uge i32 %call481, 53, !dbg !9340
  br i1 %cmp482, label %if.then484, label %if.end485, !dbg !9341

if.then484:                                       ; preds = %lor.lhs.false480, %if.end475
  store %struct.rtx_def* null, %struct.rtx_def** %plus_cst_src, align 8, !dbg !9342
  br label %if.end485, !dbg !9343

if.end485:                                        ; preds = %if.then484, %lor.lhs.false480
  br label %if.end486, !dbg !9344

if.end486:                                        ; preds = %if.end485, %if.end456
  br label %if.end487, !dbg !9345

if.end487:                                        ; preds = %if.end486, %land.lhs.true357, %if.end355
  %202 = load %struct.rtx_def*, %struct.rtx_def** %plus_cst_src, align 8, !dbg !9346
  %tobool488 = icmp ne %struct.rtx_def* %202, null, !dbg !9346
  br i1 %tobool488, label %if.then489, label %if.end656, !dbg !9348

if.then489:                                       ; preds = %if.end487
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg490, metadata !9349, metadata !DIExpression()), !dbg !9351
  %203 = load %struct.rtx_def*, %struct.rtx_def** %plus_cst_src, align 8, !dbg !9352
  %u491 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1, !dbg !9352
  %fld492 = bitcast %union.u* %u491 to [1 x %union.rtunion_def]*, !dbg !9352
  %arrayidx493 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld492, i64 0, i64 0, !dbg !9352
  %rt_rtx494 = bitcast %union.rtunion_def* %arrayidx493 to %struct.rtx_def**, !dbg !9352
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx494, align 8, !dbg !9352
  store %struct.rtx_def* %204, %struct.rtx_def** %reg490, align 8, !dbg !9351
  call void @llvm.dbg.declare(metadata i64* %offset495, metadata !9353, metadata !DIExpression()), !dbg !9354
  %205 = load %struct.rtx_def*, %struct.rtx_def** %plus_cst_src, align 8, !dbg !9355
  %u496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1, !dbg !9355
  %fld497 = bitcast %union.u* %u496 to [1 x %union.rtunion_def]*, !dbg !9355
  %arrayidx498 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld497, i64 0, i64 1, !dbg !9355
  %rt_rtx499 = bitcast %union.rtunion_def* %arrayidx498 to %struct.rtx_def**, !dbg !9355
  %206 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx499, align 8, !dbg !9355
  %u500 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1, !dbg !9355
  %hwint501 = bitcast %union.u* %u500 to [1 x i64]*, !dbg !9355
  %arrayidx502 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint501, i64 0, i64 0, !dbg !9355
  %207 = load i64, i64* %arrayidx502, align 8, !dbg !9355
  store i64 %207, i64* %offset495, align 8, !dbg !9354
  %208 = load %struct.rtx_def*, %struct.rtx_def** %reg490, align 8, !dbg !9356
  %209 = bitcast %struct.rtx_def* %208 to i32*, !dbg !9356
  %bf.load503 = load i32, i32* %209, align 8, !dbg !9356
  %bf.clear504 = and i32 %bf.load503, 65535, !dbg !9356
  %cmp505 = icmp eq i32 %bf.clear504, 39, !dbg !9358
  br i1 %cmp505, label %if.then507, label %if.end512, !dbg !9359

if.then507:                                       ; preds = %if.then489
  %210 = load %struct.rtx_def*, %struct.rtx_def** %reg490, align 8, !dbg !9360
  %u508 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1, !dbg !9360
  %fld509 = bitcast %union.u* %u508 to [1 x %union.rtunion_def]*, !dbg !9360
  %arrayidx510 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld509, i64 0, i64 0, !dbg !9360
  %rt_rtx511 = bitcast %union.rtunion_def* %arrayidx510 to %struct.rtx_def**, !dbg !9360
  %211 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx511, align 8, !dbg !9360
  store %struct.rtx_def* %211, %struct.rtx_def** %reg490, align 8, !dbg !9361
  br label %if.end512, !dbg !9362

if.end512:                                        ; preds = %if.then507, %if.then489
  %212 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9363
  store %struct.elim_table* %212, %struct.elim_table** %ep, align 8, !dbg !9365
  br label %for.cond513, !dbg !9366

for.cond513:                                      ; preds = %for.inc653, %if.end512
  %213 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9367
  %214 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9369
  %arrayidx514 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %214, i64 4, !dbg !9369
  %cmp515 = icmp ult %struct.elim_table* %213, %arrayidx514, !dbg !9370
  br i1 %cmp515, label %for.body517, label %for.end655, !dbg !9371

for.body517:                                      ; preds = %for.cond513
  %215 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9372
  %from_rtx518 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %215, i32 0, i32 8, !dbg !9374
  %216 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx518, align 8, !dbg !9374
  %217 = load %struct.rtx_def*, %struct.rtx_def** %reg490, align 8, !dbg !9375
  %cmp519 = icmp eq %struct.rtx_def* %216, %217, !dbg !9376
  br i1 %cmp519, label %land.lhs.true521, label %if.end652, !dbg !9377

land.lhs.true521:                                 ; preds = %for.body517
  %218 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9378
  %can_eliminate522 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %218, i32 0, i32 3, !dbg !9379
  %219 = load i32, i32* %can_eliminate522, align 8, !dbg !9379
  %tobool523 = icmp ne i32 %219, 0, !dbg !9378
  br i1 %tobool523, label %if.then524, label %if.end652, !dbg !9380

if.then524:                                       ; preds = %land.lhs.true521
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to_rtx525, metadata !9381, metadata !DIExpression()), !dbg !9383
  %220 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9384
  %to_rtx526 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %220, i32 0, i32 9, !dbg !9385
  %221 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx526, align 8, !dbg !9385
  store %struct.rtx_def* %221, %struct.rtx_def** %to_rtx525, align 8, !dbg !9383
  %222 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9386
  %offset527 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %222, i32 0, i32 5, !dbg !9387
  %223 = load i64, i64* %offset527, align 8, !dbg !9387
  %224 = load i64, i64* %offset495, align 8, !dbg !9388
  %add528 = add nsw i64 %224, %223, !dbg !9388
  store i64 %add528, i64* %offset495, align 8, !dbg !9388
  %225 = load i64, i64* %offset495, align 8, !dbg !9389
  %226 = load %struct.rtx_def*, %struct.rtx_def** %plus_cst_src, align 8, !dbg !9390
  %227 = bitcast %struct.rtx_def* %226 to i32*, !dbg !9390
  %bf.load529 = load i32, i32* %227, align 8, !dbg !9390
  %bf.lshr530 = lshr i32 %bf.load529, 16, !dbg !9390
  %bf.clear531 = and i32 %bf.lshr530, 255, !dbg !9390
  %call532 = call i64 @trunc_int_for_mode(i64 %225, i32 %bf.clear531), !dbg !9391
  store i64 %call532, i64* %offset495, align 8, !dbg !9392
  %228 = load %struct.rtx_def*, %struct.rtx_def** %plus_cst_src, align 8, !dbg !9393
  %u533 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %228, i32 0, i32 1, !dbg !9393
  %fld534 = bitcast %union.u* %u533 to [1 x %union.rtunion_def]*, !dbg !9393
  %arrayidx535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld534, i64 0, i64 0, !dbg !9393
  %rt_rtx536 = bitcast %union.rtunion_def* %arrayidx535 to %struct.rtx_def**, !dbg !9393
  %229 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx536, align 8, !dbg !9393
  %230 = bitcast %struct.rtx_def* %229 to i32*, !dbg !9393
  %bf.load537 = load i32, i32* %230, align 8, !dbg !9393
  %bf.clear538 = and i32 %bf.load537, 65535, !dbg !9393
  %cmp539 = icmp eq i32 %bf.clear538, 39, !dbg !9395
  br i1 %cmp539, label %if.then541, label %if.end550, !dbg !9396

if.then541:                                       ; preds = %if.then524
  %231 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 0), align 8, !dbg !9397
  %232 = load %struct.rtx_def*, %struct.rtx_def** %plus_cst_src, align 8, !dbg !9398
  %u542 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1, !dbg !9398
  %fld543 = bitcast %union.u* %u542 to [1 x %union.rtunion_def]*, !dbg !9398
  %arrayidx544 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld543, i64 0, i64 0, !dbg !9398
  %rt_rtx545 = bitcast %union.rtunion_def* %arrayidx544 to %struct.rtx_def**, !dbg !9398
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx545, align 8, !dbg !9398
  %234 = bitcast %struct.rtx_def* %233 to i32*, !dbg !9398
  %bf.load546 = load i32, i32* %234, align 8, !dbg !9398
  %bf.lshr547 = lshr i32 %bf.load546, 16, !dbg !9398
  %bf.clear548 = and i32 %bf.lshr547, 255, !dbg !9398
  %235 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx525, align 8, !dbg !9399
  %call549 = call %struct.rtx_def* %231(i32 %bf.clear548, %struct.rtx_def* %235), !dbg !9397
  store %struct.rtx_def* %call549, %struct.rtx_def** %to_rtx525, align 8, !dbg !9400
  br label %if.end550, !dbg !9401

if.end550:                                        ; preds = %if.then541, %if.then524
  %236 = load i64, i64* %offset495, align 8, !dbg !9402
  %cmp551 = icmp eq i64 %236, 0, !dbg !9404
  br i1 %cmp551, label %if.then555, label %lor.lhs.false553, !dbg !9405

lor.lhs.false553:                                 ; preds = %if.end550
  %237 = load %struct.rtx_def*, %struct.rtx_def** %plus_src, align 8, !dbg !9406
  %tobool554 = icmp ne %struct.rtx_def* %237, null, !dbg !9406
  br i1 %tobool554, label %if.then555, label %if.else650, !dbg !9407

if.then555:                                       ; preds = %lor.lhs.false553, %if.end550
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_src, metadata !9408, metadata !DIExpression()), !dbg !9410
  %238 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx525, align 8, !dbg !9411
  %239 = load i64, i64* %offset495, align 8, !dbg !9412
  %call556 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %238, i64 %239), !dbg !9413
  store %struct.rtx_def* %call556, %struct.rtx_def** %new_src, align 8, !dbg !9410
  %240 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8, !dbg !9414
  store %struct.rtx_def* %240, %struct.rtx_def** %new_body, align 8, !dbg !9415
  %241 = load i32, i32* %replace.addr, align 4, !dbg !9416
  %tobool557 = icmp ne i32 %241, 0, !dbg !9416
  br i1 %tobool557, label %if.end576, label %if.then558, !dbg !9418

if.then558:                                       ; preds = %if.then555
  %242 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8, !dbg !9419
  %call559 = call %struct.rtx_def* @copy_insn(%struct.rtx_def* %242), !dbg !9421
  store %struct.rtx_def* %call559, %struct.rtx_def** %new_body, align 8, !dbg !9422
  %243 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9423
  %u560 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %243, i32 0, i32 1, !dbg !9423
  %fld561 = bitcast %union.u* %u560 to [1 x %union.rtunion_def]*, !dbg !9423
  %arrayidx562 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld561, i64 0, i64 7, !dbg !9423
  %rt_rtx563 = bitcast %union.rtunion_def* %arrayidx562 to %struct.rtx_def**, !dbg !9423
  %244 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx563, align 8, !dbg !9423
  %tobool564 = icmp ne %struct.rtx_def* %244, null, !dbg !9423
  br i1 %tobool564, label %if.then565, label %if.end575, !dbg !9425

if.then565:                                       ; preds = %if.then558
  %245 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9426
  %u566 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1, !dbg !9426
  %fld567 = bitcast %union.u* %u566 to [1 x %union.rtunion_def]*, !dbg !9426
  %arrayidx568 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld567, i64 0, i64 7, !dbg !9426
  %rt_rtx569 = bitcast %union.rtunion_def* %arrayidx568 to %struct.rtx_def**, !dbg !9426
  %246 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx569, align 8, !dbg !9426
  %call570 = call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %246), !dbg !9427
  %247 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9428
  %u571 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1, !dbg !9428
  %fld572 = bitcast %union.u* %u571 to [1 x %union.rtunion_def]*, !dbg !9428
  %arrayidx573 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld572, i64 0, i64 7, !dbg !9428
  %rt_rtx574 = bitcast %union.rtunion_def* %arrayidx573 to %struct.rtx_def**, !dbg !9428
  store %struct.rtx_def* %call570, %struct.rtx_def** %rt_rtx574, align 8, !dbg !9429
  br label %if.end575, !dbg !9428

if.end575:                                        ; preds = %if.then565, %if.then558
  br label %if.end576, !dbg !9430

if.end576:                                        ; preds = %if.end575, %if.then555
  %248 = load %struct.rtx_def*, %struct.rtx_def** %new_body, align 8, !dbg !9431
  %249 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9432
  %u577 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %249, i32 0, i32 1, !dbg !9432
  %fld578 = bitcast %union.u* %u577 to [1 x %union.rtunion_def]*, !dbg !9432
  %arrayidx579 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld578, i64 0, i64 5, !dbg !9432
  %rt_rtx580 = bitcast %union.rtunion_def* %arrayidx579 to %struct.rtx_def**, !dbg !9432
  store %struct.rtx_def* %248, %struct.rtx_def** %rt_rtx580, align 8, !dbg !9433
  %250 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9434
  %251 = bitcast %struct.rtx_def* %250 to i32*, !dbg !9434
  %bf.load581 = load i32, i32* %251, align 8, !dbg !9434
  %bf.clear582 = and i32 %bf.load581, 65535, !dbg !9434
  %cmp583 = icmp eq i32 %bf.clear582, 8, !dbg !9434
  br i1 %cmp583, label %cond.true600, label %lor.lhs.false585, !dbg !9434

lor.lhs.false585:                                 ; preds = %if.end576
  %252 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9434
  %253 = bitcast %struct.rtx_def* %252 to i32*, !dbg !9434
  %bf.load586 = load i32, i32* %253, align 8, !dbg !9434
  %bf.clear587 = and i32 %bf.load586, 65535, !dbg !9434
  %cmp588 = icmp eq i32 %bf.clear587, 7, !dbg !9434
  br i1 %cmp588, label %cond.true600, label %lor.lhs.false590, !dbg !9434

lor.lhs.false590:                                 ; preds = %lor.lhs.false585
  %254 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9434
  %255 = bitcast %struct.rtx_def* %254 to i32*, !dbg !9434
  %bf.load591 = load i32, i32* %255, align 8, !dbg !9434
  %bf.clear592 = and i32 %bf.load591, 65535, !dbg !9434
  %cmp593 = icmp eq i32 %bf.clear592, 9, !dbg !9434
  br i1 %cmp593, label %cond.true600, label %lor.lhs.false595, !dbg !9434

lor.lhs.false595:                                 ; preds = %lor.lhs.false590
  %256 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9434
  %257 = bitcast %struct.rtx_def* %256 to i32*, !dbg !9434
  %bf.load596 = load i32, i32* %257, align 8, !dbg !9434
  %bf.clear597 = and i32 %bf.load596, 65535, !dbg !9434
  %cmp598 = icmp eq i32 %bf.clear597, 10, !dbg !9434
  br i1 %cmp598, label %cond.true600, label %cond.false622, !dbg !9434

cond.true600:                                     ; preds = %lor.lhs.false595, %lor.lhs.false590, %lor.lhs.false585, %if.end576
  %258 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9434
  %u601 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %258, i32 0, i32 1, !dbg !9434
  %fld602 = bitcast %union.u* %u601 to [1 x %union.rtunion_def]*, !dbg !9434
  %arrayidx603 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld602, i64 0, i64 5, !dbg !9434
  %rt_rtx604 = bitcast %union.rtunion_def* %arrayidx603 to %struct.rtx_def**, !dbg !9434
  %259 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx604, align 8, !dbg !9434
  %260 = bitcast %struct.rtx_def* %259 to i32*, !dbg !9434
  %bf.load605 = load i32, i32* %260, align 8, !dbg !9434
  %bf.clear606 = and i32 %bf.load605, 65535, !dbg !9434
  %cmp607 = icmp eq i32 %bf.clear606, 23, !dbg !9434
  br i1 %cmp607, label %cond.true609, label %cond.false614, !dbg !9434

cond.true609:                                     ; preds = %cond.true600
  %261 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9434
  %u610 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %261, i32 0, i32 1, !dbg !9434
  %fld611 = bitcast %union.u* %u610 to [1 x %union.rtunion_def]*, !dbg !9434
  %arrayidx612 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld611, i64 0, i64 5, !dbg !9434
  %rt_rtx613 = bitcast %union.rtunion_def* %arrayidx612 to %struct.rtx_def**, !dbg !9434
  %262 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx613, align 8, !dbg !9434
  br label %cond.end620, !dbg !9434

cond.false614:                                    ; preds = %cond.true600
  %263 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9434
  %264 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9434
  %u615 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %264, i32 0, i32 1, !dbg !9434
  %fld616 = bitcast %union.u* %u615 to [1 x %union.rtunion_def]*, !dbg !9434
  %arrayidx617 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld616, i64 0, i64 5, !dbg !9434
  %rt_rtx618 = bitcast %union.rtunion_def* %arrayidx617 to %struct.rtx_def**, !dbg !9434
  %265 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx618, align 8, !dbg !9434
  %call619 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %263, %struct.rtx_def* %265), !dbg !9434
  br label %cond.end620, !dbg !9434

cond.end620:                                      ; preds = %cond.false614, %cond.true609
  %cond621 = phi %struct.rtx_def* [ %262, %cond.true609 ], [ %call619, %cond.false614 ], !dbg !9434
  br label %cond.end623, !dbg !9434

cond.false622:                                    ; preds = %lor.lhs.false595
  br label %cond.end623, !dbg !9434

cond.end623:                                      ; preds = %cond.false622, %cond.end620
  %cond624 = phi %struct.rtx_def* [ %cond621, %cond.end620 ], [ null, %cond.false622 ], !dbg !9434
  store %struct.rtx_def* %cond624, %struct.rtx_def** %old_set, align 8, !dbg !9435
  %266 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9436
  %267 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9438
  %u625 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %267, i32 0, i32 1, !dbg !9438
  %fld626 = bitcast %union.u* %u625 to [1 x %union.rtunion_def]*, !dbg !9438
  %arrayidx627 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld626, i64 0, i64 1, !dbg !9438
  %rt_rtx628 = bitcast %union.rtunion_def* %arrayidx627 to %struct.rtx_def**, !dbg !9438
  %268 = load %struct.rtx_def*, %struct.rtx_def** %new_src, align 8, !dbg !9439
  %call629 = call zeroext i8 @validate_change(%struct.rtx_def* %266, %struct.rtx_def** %rt_rtx628, %struct.rtx_def* %268, i8 zeroext 0), !dbg !9440
  %tobool630 = icmp ne i8 %call629, 0, !dbg !9440
  br i1 %tobool630, label %if.end649, label %if.then631, !dbg !9441

if.then631:                                       ; preds = %cond.end623
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_pat, metadata !9442, metadata !DIExpression()), !dbg !9444
  %269 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9445
  %u632 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %269, i32 0, i32 1, !dbg !9445
  %fld633 = bitcast %union.u* %u632 to [1 x %union.rtunion_def]*, !dbg !9445
  %arrayidx634 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld633, i64 0, i64 0, !dbg !9445
  %rt_rtx635 = bitcast %union.rtunion_def* %arrayidx634 to %struct.rtx_def**, !dbg !9445
  %270 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx635, align 8, !dbg !9445
  %271 = load %struct.rtx_def*, %struct.rtx_def** %new_src, align 8, !dbg !9445
  %call636 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %270, %struct.rtx_def* %271), !dbg !9445
  store %struct.rtx_def* %call636, %struct.rtx_def** %new_pat, align 8, !dbg !9444
  %272 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9446
  %273 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9448
  %u637 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %273, i32 0, i32 1, !dbg !9448
  %fld638 = bitcast %union.u* %u637 to [1 x %union.rtunion_def]*, !dbg !9448
  %arrayidx639 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld638, i64 0, i64 5, !dbg !9448
  %rt_rtx640 = bitcast %union.rtunion_def* %arrayidx639 to %struct.rtx_def**, !dbg !9448
  %274 = load %struct.rtx_def*, %struct.rtx_def** %new_pat, align 8, !dbg !9449
  %call641 = call zeroext i8 @validate_change(%struct.rtx_def* %272, %struct.rtx_def** %rt_rtx640, %struct.rtx_def* %274, i8 zeroext 0), !dbg !9450
  %tobool642 = icmp ne i8 %call641, 0, !dbg !9450
  br i1 %tobool642, label %if.end648, label %if.then643, !dbg !9451

if.then643:                                       ; preds = %if.then631
  %275 = load %struct.rtx_def*, %struct.rtx_def** %new_src, align 8, !dbg !9452
  %276 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9453
  %u644 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1, !dbg !9453
  %fld645 = bitcast %union.u* %u644 to [1 x %union.rtunion_def]*, !dbg !9453
  %arrayidx646 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld645, i64 0, i64 1, !dbg !9453
  %rt_rtx647 = bitcast %union.rtunion_def* %arrayidx646 to %struct.rtx_def**, !dbg !9453
  store %struct.rtx_def* %275, %struct.rtx_def** %rt_rtx647, align 8, !dbg !9454
  br label %if.end648, !dbg !9453

if.end648:                                        ; preds = %if.then643, %if.then631
  br label %if.end649, !dbg !9455

if.end649:                                        ; preds = %if.end648, %cond.end623
  br label %if.end651, !dbg !9456

if.else650:                                       ; preds = %lor.lhs.false553
  br label %for.end655, !dbg !9457

if.end651:                                        ; preds = %if.end649
  store i32 1, i32* %val, align 4, !dbg !9458
  br label %done, !dbg !9459

if.end652:                                        ; preds = %land.lhs.true521, %for.body517
  br label %for.inc653, !dbg !9379

for.inc653:                                       ; preds = %if.end652
  %277 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9460
  %incdec.ptr654 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %277, i32 1, !dbg !9460
  store %struct.elim_table* %incdec.ptr654, %struct.elim_table** %ep, align 8, !dbg !9460
  br label %for.cond513, !dbg !9461, !llvm.loop !9462

for.end655:                                       ; preds = %if.else650, %for.cond513
  br label %if.end656, !dbg !9464

if.end656:                                        ; preds = %for.end655, %if.end487
  %278 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8, !dbg !9465
  call void @elimination_effects(%struct.rtx_def* %278, i32 0), !dbg !9466
  %279 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9467
  call void @extract_insn(%struct.rtx_def* %279), !dbg !9468
  store i32 0, i32* %i, align 4, !dbg !9469
  br label %for.cond657, !dbg !9471

for.cond657:                                      ; preds = %for.inc792, %if.end656
  %280 = load i32, i32* %i, align 4, !dbg !9472
  %281 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !9474
  %conv658 = sext i8 %281 to i32, !dbg !9475
  %cmp659 = icmp slt i32 %280, %conv658, !dbg !9476
  br i1 %cmp659, label %for.body661, label %for.end793, !dbg !9477

for.body661:                                      ; preds = %for.cond657
  %282 = load i32, i32* %i, align 4, !dbg !9478
  %idxprom = sext i32 %282 to i64, !dbg !9480
  %arrayidx662 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom, !dbg !9480
  %283 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx662, align 8, !dbg !9480
  %284 = load i32, i32* %i, align 4, !dbg !9481
  %idxprom663 = sext i32 %284 to i64, !dbg !9482
  %arrayidx664 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i64 0, i64 %idxprom663, !dbg !9482
  store %struct.rtx_def* %283, %struct.rtx_def** %arrayidx664, align 8, !dbg !9483
  %285 = load i32, i32* %i, align 4, !dbg !9484
  %idxprom665 = sext i32 %285 to i64, !dbg !9485
  %arrayidx666 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom665, !dbg !9485
  %286 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx666, align 8, !dbg !9485
  %287 = load i32, i32* %i, align 4, !dbg !9486
  %idxprom667 = sext i32 %287 to i64, !dbg !9487
  %arrayidx668 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i64 0, i64 %idxprom667, !dbg !9487
  store %struct.rtx_def* %286, %struct.rtx_def** %arrayidx668, align 8, !dbg !9488
  %288 = load i32, i32* %insn_is_asm, align 4, !dbg !9489
  %tobool669 = icmp ne i32 %288, 0, !dbg !9489
  br i1 %tobool669, label %if.then677, label %lor.lhs.false670, !dbg !9491

lor.lhs.false670:                                 ; preds = %for.body661
  %289 = load i32, i32* %icode, align 4, !dbg !9492
  %idxprom671 = sext i32 %289 to i64, !dbg !9493
  %arrayidx672 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom671, !dbg !9493
  %operand = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx672, i32 0, i32 3, !dbg !9494
  %290 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !9494
  %291 = load i32, i32* %i, align 4, !dbg !9495
  %idxprom673 = sext i32 %291 to i64, !dbg !9493
  %arrayidx674 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %290, i64 %idxprom673, !dbg !9493
  %eliminable = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx674, i32 0, i32 4, !dbg !9496
  %292 = load i8, i8* %eliminable, align 1, !dbg !9496
  %conv675 = sext i8 %292 to i32, !dbg !9493
  %tobool676 = icmp ne i32 %conv675, 0, !dbg !9493
  br i1 %tobool676, label %if.then677, label %if.end791, !dbg !9497

if.then677:                                       ; preds = %lor.lhs.false670, %for.body661
  call void @llvm.dbg.declare(metadata i8* %is_set_src, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.declare(metadata i8* %in_plus, metadata !9501, metadata !DIExpression()), !dbg !9502
  %293 = load i32, i32* %i, align 4, !dbg !9503
  %idxprom678 = sext i32 %293 to i64, !dbg !9505
  %arrayidx679 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 4), i64 0, i64 %idxprom678, !dbg !9505
  %294 = load i32, i32* %arrayidx679, align 4, !dbg !9505
  %cmp680 = icmp ne i32 %294, 0, !dbg !9506
  br i1 %cmp680, label %land.lhs.true682, label %if.end706, !dbg !9507

land.lhs.true682:                                 ; preds = %if.then677
  %295 = load i32, i32* %i, align 4, !dbg !9508
  %idxprom683 = sext i32 %295 to i64, !dbg !9508
  %arrayidx684 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i64 0, i64 %idxprom683, !dbg !9508
  %296 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx684, align 8, !dbg !9508
  %297 = bitcast %struct.rtx_def* %296 to i32*, !dbg !9508
  %bf.load685 = load i32, i32* %297, align 8, !dbg !9508
  %bf.clear686 = and i32 %bf.load685, 65535, !dbg !9508
  %cmp687 = icmp eq i32 %bf.clear686, 37, !dbg !9508
  br i1 %cmp687, label %if.then689, label %if.end706, !dbg !9509

if.then689:                                       ; preds = %land.lhs.true682
  %298 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9510
  store %struct.elim_table* %298, %struct.elim_table** %ep, align 8, !dbg !9513
  br label %for.cond690, !dbg !9514

for.cond690:                                      ; preds = %for.inc703, %if.then689
  %299 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9515
  %300 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9517
  %arrayidx691 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %300, i64 4, !dbg !9517
  %cmp692 = icmp ult %struct.elim_table* %299, %arrayidx691, !dbg !9518
  br i1 %cmp692, label %for.body694, label %for.end705, !dbg !9519

for.body694:                                      ; preds = %for.cond690
  %301 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9520
  %from_rtx695 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %301, i32 0, i32 8, !dbg !9522
  %302 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx695, align 8, !dbg !9522
  %303 = load i32, i32* %i, align 4, !dbg !9523
  %idxprom696 = sext i32 %303 to i64, !dbg !9524
  %arrayidx697 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i64 0, i64 %idxprom696, !dbg !9524
  %304 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx697, align 8, !dbg !9524
  %cmp698 = icmp eq %struct.rtx_def* %302, %304, !dbg !9525
  br i1 %cmp698, label %if.then700, label %if.end702, !dbg !9526

if.then700:                                       ; preds = %for.body694
  %305 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9527
  %can_eliminate701 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %305, i32 0, i32 3, !dbg !9528
  store i32 0, i32* %can_eliminate701, align 8, !dbg !9529
  br label %if.end702, !dbg !9527

if.end702:                                        ; preds = %if.then700, %for.body694
  br label %for.inc703, !dbg !9530

for.inc703:                                       ; preds = %if.end702
  %306 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9531
  %incdec.ptr704 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %306, i32 1, !dbg !9531
  store %struct.elim_table* %incdec.ptr704, %struct.elim_table** %ep, align 8, !dbg !9531
  br label %for.cond690, !dbg !9532, !llvm.loop !9533

for.end705:                                       ; preds = %for.cond690
  br label %if.end706, !dbg !9535

if.end706:                                        ; preds = %for.end705, %land.lhs.true682, %if.then677
  store i8 0, i8* %is_set_src, align 1, !dbg !9536
  %307 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9537
  %tobool707 = icmp ne %struct.rtx_def* %307, null, !dbg !9537
  br i1 %tobool707, label %land.lhs.true708, label %if.end718, !dbg !9539

land.lhs.true708:                                 ; preds = %if.end706
  %308 = load i32, i32* %i, align 4, !dbg !9540
  %idxprom709 = sext i32 %308 to i64, !dbg !9541
  %arrayidx710 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i64 0, i64 %idxprom709, !dbg !9541
  %309 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx710, align 8, !dbg !9541
  %310 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9542
  %u711 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %310, i32 0, i32 1, !dbg !9542
  %fld712 = bitcast %union.u* %u711 to [1 x %union.rtunion_def]*, !dbg !9542
  %arrayidx713 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld712, i64 0, i64 1, !dbg !9542
  %rt_rtx714 = bitcast %union.rtunion_def* %arrayidx713 to %struct.rtx_def**, !dbg !9542
  %cmp715 = icmp eq %struct.rtx_def** %309, %rt_rtx714, !dbg !9543
  br i1 %cmp715, label %if.then717, label %if.end718, !dbg !9544

if.then717:                                       ; preds = %land.lhs.true708
  store i8 1, i8* %is_set_src, align 1, !dbg !9545
  br label %if.end718, !dbg !9546

if.end718:                                        ; preds = %if.then717, %land.lhs.true708, %if.end706
  store i8 0, i8* %in_plus, align 1, !dbg !9547
  %311 = load %struct.rtx_def*, %struct.rtx_def** %plus_src, align 8, !dbg !9548
  %tobool719 = icmp ne %struct.rtx_def* %311, null, !dbg !9548
  br i1 %tobool719, label %land.lhs.true720, label %if.end739, !dbg !9550

land.lhs.true720:                                 ; preds = %if.end718
  %312 = load i32, i32* %i, align 4, !dbg !9551
  %idxprom721 = sext i32 %312 to i64, !dbg !9552
  %arrayidx722 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i64 0, i64 %idxprom721, !dbg !9552
  %313 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx722, align 8, !dbg !9552
  %314 = load %struct.rtx_def*, %struct.rtx_def** %plus_src, align 8, !dbg !9553
  %u723 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %314, i32 0, i32 1, !dbg !9553
  %fld724 = bitcast %union.u* %u723 to [1 x %union.rtunion_def]*, !dbg !9553
  %arrayidx725 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld724, i64 0, i64 0, !dbg !9553
  %rt_rtx726 = bitcast %union.rtunion_def* %arrayidx725 to %struct.rtx_def**, !dbg !9553
  %cmp727 = icmp eq %struct.rtx_def** %313, %rt_rtx726, !dbg !9554
  br i1 %cmp727, label %if.then738, label %lor.lhs.false729, !dbg !9555

lor.lhs.false729:                                 ; preds = %land.lhs.true720
  %315 = load i32, i32* %i, align 4, !dbg !9556
  %idxprom730 = sext i32 %315 to i64, !dbg !9557
  %arrayidx731 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i64 0, i64 %idxprom730, !dbg !9557
  %316 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx731, align 8, !dbg !9557
  %317 = load %struct.rtx_def*, %struct.rtx_def** %plus_src, align 8, !dbg !9558
  %u732 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %317, i32 0, i32 1, !dbg !9558
  %fld733 = bitcast %union.u* %u732 to [1 x %union.rtunion_def]*, !dbg !9558
  %arrayidx734 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld733, i64 0, i64 1, !dbg !9558
  %rt_rtx735 = bitcast %union.rtunion_def* %arrayidx734 to %struct.rtx_def**, !dbg !9558
  %cmp736 = icmp eq %struct.rtx_def** %316, %rt_rtx735, !dbg !9559
  br i1 %cmp736, label %if.then738, label %if.end739, !dbg !9560

if.then738:                                       ; preds = %lor.lhs.false729, %land.lhs.true720
  store i8 1, i8* %in_plus, align 1, !dbg !9561
  br label %if.end739, !dbg !9562

if.end739:                                        ; preds = %if.then738, %lor.lhs.false729, %if.end718
  %318 = load i32, i32* %i, align 4, !dbg !9563
  %idxprom740 = sext i32 %318 to i64, !dbg !9564
  %arrayidx741 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom740, !dbg !9564
  %319 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx741, align 8, !dbg !9564
  %320 = load i32, i32* %replace.addr, align 4, !dbg !9565
  %tobool742 = icmp ne i32 %320, 0, !dbg !9565
  br i1 %tobool742, label %cond.true743, label %cond.false744, !dbg !9565

cond.true743:                                     ; preds = %if.end739
  %321 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9566
  br label %cond.end745, !dbg !9565

cond.false744:                                    ; preds = %if.end739
  br label %cond.end745, !dbg !9565

cond.end745:                                      ; preds = %cond.false744, %cond.true743
  %cond746 = phi %struct.rtx_def* [ %321, %cond.true743 ], [ null, %cond.false744 ], !dbg !9565
  %322 = load i8, i8* %is_set_src, align 1, !dbg !9567
  %conv747 = zext i8 %322 to i32, !dbg !9567
  %tobool748 = icmp ne i32 %conv747, 0, !dbg !9567
  br i1 %tobool748, label %lor.end, label %lor.rhs, !dbg !9568

lor.rhs:                                          ; preds = %cond.end745
  %323 = load i8, i8* %in_plus, align 1, !dbg !9569
  %conv749 = zext i8 %323 to i32, !dbg !9569
  %tobool750 = icmp ne i32 %conv749, 0, !dbg !9568
  br label %lor.end, !dbg !9568

lor.end:                                          ; preds = %lor.rhs, %cond.end745
  %324 = phi i1 [ true, %cond.end745 ], [ %tobool750, %lor.rhs ]
  %lor.ext = zext i1 %324 to i32, !dbg !9568
  %conv751 = trunc i32 %lor.ext to i8, !dbg !9567
  %call752 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %319, i32 0, %struct.rtx_def* %cond746, i8 zeroext %conv751), !dbg !9570
  %325 = load i32, i32* %i, align 4, !dbg !9571
  %idxprom753 = sext i32 %325 to i64, !dbg !9572
  %arrayidx754 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i64 0, i64 %idxprom753, !dbg !9572
  store %struct.rtx_def* %call752, %struct.rtx_def** %arrayidx754, align 8, !dbg !9573
  %326 = load i32, i32* %i, align 4, !dbg !9574
  %idxprom755 = sext i32 %326 to i64, !dbg !9576
  %arrayidx756 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i64 0, i64 %idxprom755, !dbg !9576
  %327 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx756, align 8, !dbg !9576
  %328 = load i32, i32* %i, align 4, !dbg !9577
  %idxprom757 = sext i32 %328 to i64, !dbg !9578
  %arrayidx758 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i64 0, i64 %idxprom757, !dbg !9578
  %329 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx758, align 8, !dbg !9578
  %cmp759 = icmp ne %struct.rtx_def* %327, %329, !dbg !9579
  br i1 %cmp759, label %if.then761, label %if.end762, !dbg !9580

if.then761:                                       ; preds = %lor.end
  store i32 1, i32* %val, align 4, !dbg !9581
  br label %if.end762, !dbg !9582

if.end762:                                        ; preds = %if.then761, %lor.end
  %330 = load i32, i32* %i, align 4, !dbg !9583
  %idxprom763 = sext i32 %330 to i64, !dbg !9584
  %arrayidx764 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i64 0, i64 %idxprom763, !dbg !9584
  %331 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx764, align 8, !dbg !9584
  store %struct.rtx_def* null, %struct.rtx_def** %331, align 8, !dbg !9585
  %332 = load i32, i32* %i, align 4, !dbg !9586
  %idxprom765 = sext i32 %332 to i64, !dbg !9588
  %arrayidx766 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 4), i64 0, i64 %idxprom765, !dbg !9588
  %333 = load i32, i32* %arrayidx766, align 4, !dbg !9588
  %cmp767 = icmp ne i32 %333, 0, !dbg !9589
  br i1 %cmp767, label %land.lhs.true769, label %if.end790, !dbg !9590

land.lhs.true769:                                 ; preds = %if.end762
  %334 = load i32, i32* %i, align 4, !dbg !9591
  %idxprom770 = sext i32 %334 to i64, !dbg !9591
  %arrayidx771 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i64 0, i64 %idxprom770, !dbg !9591
  %335 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx771, align 8, !dbg !9591
  %336 = bitcast %struct.rtx_def* %335 to i32*, !dbg !9591
  %bf.load772 = load i32, i32* %336, align 8, !dbg !9591
  %bf.clear773 = and i32 %bf.load772, 65535, !dbg !9591
  %cmp774 = icmp eq i32 %bf.clear773, 37, !dbg !9591
  br i1 %cmp774, label %land.lhs.true776, label %if.end790, !dbg !9592

land.lhs.true776:                                 ; preds = %land.lhs.true769
  %337 = load i32, i32* %i, align 4, !dbg !9593
  %idxprom777 = sext i32 %337 to i64, !dbg !9593
  %arrayidx778 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i64 0, i64 %idxprom777, !dbg !9593
  %338 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx778, align 8, !dbg !9593
  %339 = bitcast %struct.rtx_def* %338 to i32*, !dbg !9593
  %bf.load779 = load i32, i32* %339, align 8, !dbg !9593
  %bf.clear780 = and i32 %bf.load779, 65535, !dbg !9593
  %cmp781 = icmp eq i32 %bf.clear780, 43, !dbg !9593
  br i1 %cmp781, label %land.lhs.true783, label %if.end790, !dbg !9594

land.lhs.true783:                                 ; preds = %land.lhs.true776
  %340 = load i32, i32* %replace.addr, align 4, !dbg !9595
  %tobool784 = icmp ne i32 %340, 0, !dbg !9595
  br i1 %tobool784, label %if.then785, label %if.end790, !dbg !9596

if.then785:                                       ; preds = %land.lhs.true783
  %341 = load i32, i32* %i, align 4, !dbg !9597
  %idxprom786 = sext i32 %341 to i64, !dbg !9598
  %arrayidx787 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i64 0, i64 %idxprom786, !dbg !9598
  %342 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx787, align 8, !dbg !9598
  %call788 = call %struct.rtx_def* @gen_clobber(%struct.rtx_def* %342), !dbg !9599
  %343 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9600
  %call789 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call788, %struct.rtx_def* %343), !dbg !9601
  br label %if.end790, !dbg !9601

if.end790:                                        ; preds = %if.then785, %land.lhs.true783, %land.lhs.true776, %land.lhs.true769, %if.end762
  br label %if.end791, !dbg !9602

if.end791:                                        ; preds = %if.end790, %lor.lhs.false670
  br label %for.inc792, !dbg !9603

for.inc792:                                       ; preds = %if.end791
  %344 = load i32, i32* %i, align 4, !dbg !9604
  %inc = add nsw i32 %344, 1, !dbg !9604
  store i32 %inc, i32* %i, align 4, !dbg !9604
  br label %for.cond657, !dbg !9605, !llvm.loop !9606

for.end793:                                       ; preds = %for.cond657
  store i32 0, i32* %i, align 4, !dbg !9608
  br label %for.cond794, !dbg !9610

for.cond794:                                      ; preds = %for.inc806, %for.end793
  %345 = load i32, i32* %i, align 4, !dbg !9611
  %346 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 8), align 1, !dbg !9613
  %conv795 = sext i8 %346 to i32, !dbg !9614
  %cmp796 = icmp slt i32 %345, %conv795, !dbg !9615
  br i1 %cmp796, label %for.body798, label %for.end808, !dbg !9616

for.body798:                                      ; preds = %for.cond794
  %347 = load i32, i32* %i, align 4, !dbg !9617
  %idxprom799 = sext i32 %347 to i64, !dbg !9618
  %arrayidx800 = getelementptr inbounds [14 x i8], [14 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i64 0, i64 %idxprom799, !dbg !9618
  %348 = load i8, i8* %arrayidx800, align 1, !dbg !9618
  %conv801 = sext i8 %348 to i32, !dbg !9619
  %idxprom802 = sext i32 %conv801 to i64, !dbg !9620
  %arrayidx803 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i64 0, i64 %idxprom802, !dbg !9620
  %349 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx803, align 8, !dbg !9620
  %350 = load %struct.rtx_def*, %struct.rtx_def** %349, align 8, !dbg !9621
  %351 = load i32, i32* %i, align 4, !dbg !9622
  %idxprom804 = sext i32 %351 to i64, !dbg !9623
  %arrayidx805 = getelementptr inbounds [14 x %struct.rtx_def**], [14 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 5), i64 0, i64 %idxprom804, !dbg !9623
  %352 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx805, align 8, !dbg !9623
  store %struct.rtx_def* %350, %struct.rtx_def** %352, align 8, !dbg !9624
  br label %for.inc806, !dbg !9625

for.inc806:                                       ; preds = %for.body798
  %353 = load i32, i32* %i, align 4, !dbg !9626
  %inc807 = add nsw i32 %353, 1, !dbg !9626
  store i32 %inc807, i32* %i, align 4, !dbg !9626
  br label %for.cond794, !dbg !9627, !llvm.loop !9628

for.end808:                                       ; preds = %for.cond794
  %354 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8, !dbg !9630
  call void @check_eliminable_occurrences(%struct.rtx_def* %354), !dbg !9631
  store i32 0, i32* %i, align 4, !dbg !9632
  br label %for.cond809, !dbg !9634

for.cond809:                                      ; preds = %for.inc818, %for.end808
  %355 = load i32, i32* %i, align 4, !dbg !9635
  %356 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !9637
  %conv810 = sext i8 %356 to i32, !dbg !9638
  %cmp811 = icmp slt i32 %355, %conv810, !dbg !9639
  br i1 %cmp811, label %for.body813, label %for.end820, !dbg !9640

for.body813:                                      ; preds = %for.cond809
  %357 = load i32, i32* %i, align 4, !dbg !9641
  %idxprom814 = sext i32 %357 to i64, !dbg !9642
  %arrayidx815 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i64 0, i64 %idxprom814, !dbg !9642
  %358 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx815, align 8, !dbg !9642
  %359 = load i32, i32* %i, align 4, !dbg !9643
  %idxprom816 = sext i32 %359 to i64, !dbg !9644
  %arrayidx817 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i64 0, i64 %idxprom816, !dbg !9644
  %360 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx817, align 8, !dbg !9644
  store %struct.rtx_def* %358, %struct.rtx_def** %360, align 8, !dbg !9645
  br label %for.inc818, !dbg !9646

for.inc818:                                       ; preds = %for.body813
  %361 = load i32, i32* %i, align 4, !dbg !9647
  %inc819 = add nsw i32 %361, 1, !dbg !9647
  store i32 %inc819, i32* %i, align 4, !dbg !9647
  br label %for.cond809, !dbg !9648, !llvm.loop !9649

for.end820:                                       ; preds = %for.cond809
  store i32 0, i32* %i, align 4, !dbg !9651
  br label %for.cond821, !dbg !9653

for.cond821:                                      ; preds = %for.inc833, %for.end820
  %362 = load i32, i32* %i, align 4, !dbg !9654
  %363 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 8), align 1, !dbg !9656
  %conv822 = sext i8 %363 to i32, !dbg !9657
  %cmp823 = icmp slt i32 %362, %conv822, !dbg !9658
  br i1 %cmp823, label %for.body825, label %for.end835, !dbg !9659

for.body825:                                      ; preds = %for.cond821
  %364 = load i32, i32* %i, align 4, !dbg !9660
  %idxprom826 = sext i32 %364 to i64, !dbg !9661
  %arrayidx827 = getelementptr inbounds [14 x i8], [14 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i64 0, i64 %idxprom826, !dbg !9661
  %365 = load i8, i8* %arrayidx827, align 1, !dbg !9661
  %conv828 = sext i8 %365 to i32, !dbg !9662
  %idxprom829 = sext i32 %conv828 to i64, !dbg !9663
  %arrayidx830 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %substed_operand, i64 0, i64 %idxprom829, !dbg !9663
  %366 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx830, align 8, !dbg !9663
  %367 = load i32, i32* %i, align 4, !dbg !9664
  %idxprom831 = sext i32 %367 to i64, !dbg !9665
  %arrayidx832 = getelementptr inbounds [14 x %struct.rtx_def**], [14 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 5), i64 0, i64 %idxprom831, !dbg !9665
  %368 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx832, align 8, !dbg !9665
  store %struct.rtx_def* %366, %struct.rtx_def** %368, align 8, !dbg !9666
  br label %for.inc833, !dbg !9667

for.inc833:                                       ; preds = %for.body825
  %369 = load i32, i32* %i, align 4, !dbg !9668
  %inc834 = add nsw i32 %369, 1, !dbg !9668
  store i32 %inc834, i32* %i, align 4, !dbg !9668
  br label %for.cond821, !dbg !9669, !llvm.loop !9670

for.end835:                                       ; preds = %for.cond821
  %370 = load i32, i32* %val, align 4, !dbg !9672
  %tobool836 = icmp ne i32 %370, 0, !dbg !9672
  br i1 %tobool836, label %if.then837, label %if.end947, !dbg !9674

if.then837:                                       ; preds = %for.end835
  %371 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8, !dbg !9675
  store %struct.rtx_def* %371, %struct.rtx_def** %new_body, align 8, !dbg !9677
  %372 = load i32, i32* %replace.addr, align 4, !dbg !9678
  %tobool838 = icmp ne i32 %372, 0, !dbg !9678
  br i1 %tobool838, label %if.end857, label %if.then839, !dbg !9680

if.then839:                                       ; preds = %if.then837
  %373 = load %struct.rtx_def*, %struct.rtx_def** %old_body, align 8, !dbg !9681
  %call840 = call %struct.rtx_def* @copy_insn(%struct.rtx_def* %373), !dbg !9683
  store %struct.rtx_def* %call840, %struct.rtx_def** %new_body, align 8, !dbg !9684
  %374 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9685
  %u841 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %374, i32 0, i32 1, !dbg !9685
  %fld842 = bitcast %union.u* %u841 to [1 x %union.rtunion_def]*, !dbg !9685
  %arrayidx843 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld842, i64 0, i64 7, !dbg !9685
  %rt_rtx844 = bitcast %union.rtunion_def* %arrayidx843 to %struct.rtx_def**, !dbg !9685
  %375 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx844, align 8, !dbg !9685
  %tobool845 = icmp ne %struct.rtx_def* %375, null, !dbg !9685
  br i1 %tobool845, label %if.then846, label %if.end856, !dbg !9687

if.then846:                                       ; preds = %if.then839
  %376 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9688
  %u847 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %376, i32 0, i32 1, !dbg !9688
  %fld848 = bitcast %union.u* %u847 to [1 x %union.rtunion_def]*, !dbg !9688
  %arrayidx849 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld848, i64 0, i64 7, !dbg !9688
  %rt_rtx850 = bitcast %union.rtunion_def* %arrayidx849 to %struct.rtx_def**, !dbg !9688
  %377 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx850, align 8, !dbg !9688
  %call851 = call %struct.rtx_def* @copy_insn_1(%struct.rtx_def* %377), !dbg !9689
  %378 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9690
  %u852 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %378, i32 0, i32 1, !dbg !9690
  %fld853 = bitcast %union.u* %u852 to [1 x %union.rtunion_def]*, !dbg !9690
  %arrayidx854 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld853, i64 0, i64 7, !dbg !9690
  %rt_rtx855 = bitcast %union.rtunion_def* %arrayidx854 to %struct.rtx_def**, !dbg !9690
  store %struct.rtx_def* %call851, %struct.rtx_def** %rt_rtx855, align 8, !dbg !9691
  br label %if.end856, !dbg !9690

if.end856:                                        ; preds = %if.then846, %if.then839
  br label %if.end857, !dbg !9692

if.end857:                                        ; preds = %if.end856, %if.then837
  %379 = load %struct.rtx_def*, %struct.rtx_def** %new_body, align 8, !dbg !9693
  %380 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9694
  %u858 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %380, i32 0, i32 1, !dbg !9694
  %fld859 = bitcast %union.u* %u858 to [1 x %union.rtunion_def]*, !dbg !9694
  %arrayidx860 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld859, i64 0, i64 5, !dbg !9694
  %rt_rtx861 = bitcast %union.rtunion_def* %arrayidx860 to %struct.rtx_def**, !dbg !9694
  store %struct.rtx_def* %379, %struct.rtx_def** %rt_rtx861, align 8, !dbg !9695
  %381 = load i32, i32* %insn_is_asm, align 4, !dbg !9696
  %tobool862 = icmp ne i32 %381, 0, !dbg !9696
  br i1 %tobool862, label %if.end946, label %land.lhs.true863, !dbg !9698

land.lhs.true863:                                 ; preds = %if.end857
  %382 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9699
  %cmp864 = icmp ne %struct.rtx_def* %382, null, !dbg !9700
  br i1 %cmp864, label %land.lhs.true866, label %if.end946, !dbg !9701

land.lhs.true866:                                 ; preds = %land.lhs.true863
  %383 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9702
  %u867 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %383, i32 0, i32 1, !dbg !9702
  %fld868 = bitcast %union.u* %u867 to [1 x %union.rtunion_def]*, !dbg !9702
  %arrayidx869 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld868, i64 0, i64 1, !dbg !9702
  %rt_rtx870 = bitcast %union.rtunion_def* %arrayidx869 to %struct.rtx_def**, !dbg !9702
  %384 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx870, align 8, !dbg !9702
  %385 = bitcast %struct.rtx_def* %384 to i32*, !dbg !9702
  %bf.load871 = load i32, i32* %385, align 8, !dbg !9702
  %bf.clear872 = and i32 %bf.load871, 65535, !dbg !9702
  %cmp873 = icmp eq i32 %bf.clear872, 37, !dbg !9702
  br i1 %cmp873, label %land.lhs.true875, label %lor.lhs.false889, !dbg !9703

land.lhs.true875:                                 ; preds = %land.lhs.true866
  %386 = load %struct.rtx_def*, %struct.rtx_def** %new_body, align 8, !dbg !9704
  %387 = bitcast %struct.rtx_def* %386 to i32*, !dbg !9704
  %bf.load876 = load i32, i32* %387, align 8, !dbg !9704
  %bf.clear877 = and i32 %bf.load876, 65535, !dbg !9704
  %cmp878 = icmp ne i32 %bf.clear877, 23, !dbg !9705
  br i1 %cmp878, label %if.then933, label %lor.lhs.false880, !dbg !9706

lor.lhs.false880:                                 ; preds = %land.lhs.true875
  %388 = load %struct.rtx_def*, %struct.rtx_def** %new_body, align 8, !dbg !9707
  %u881 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %388, i32 0, i32 1, !dbg !9707
  %fld882 = bitcast %union.u* %u881 to [1 x %union.rtunion_def]*, !dbg !9707
  %arrayidx883 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld882, i64 0, i64 1, !dbg !9707
  %rt_rtx884 = bitcast %union.rtunion_def* %arrayidx883 to %struct.rtx_def**, !dbg !9707
  %389 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx884, align 8, !dbg !9707
  %390 = bitcast %struct.rtx_def* %389 to i32*, !dbg !9707
  %bf.load885 = load i32, i32* %390, align 8, !dbg !9707
  %bf.clear886 = and i32 %bf.load885, 65535, !dbg !9707
  %cmp887 = icmp eq i32 %bf.clear886, 37, !dbg !9707
  br i1 %cmp887, label %lor.lhs.false889, label %if.then933, !dbg !9708

lor.lhs.false889:                                 ; preds = %lor.lhs.false880, %land.lhs.true866
  %391 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9709
  %cmp890 = icmp ne %struct.rtx_def* %391, null, !dbg !9710
  br i1 %cmp890, label %land.lhs.true892, label %lor.lhs.false924, !dbg !9711

land.lhs.true892:                                 ; preds = %lor.lhs.false889
  %392 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9712
  %u893 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %392, i32 0, i32 1, !dbg !9712
  %fld894 = bitcast %union.u* %u893 to [1 x %union.rtunion_def]*, !dbg !9712
  %arrayidx895 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld894, i64 0, i64 1, !dbg !9712
  %rt_rtx896 = bitcast %union.rtunion_def* %arrayidx895 to %struct.rtx_def**, !dbg !9712
  %393 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx896, align 8, !dbg !9712
  %394 = bitcast %struct.rtx_def* %393 to i32*, !dbg !9712
  %bf.load897 = load i32, i32* %394, align 8, !dbg !9712
  %bf.clear898 = and i32 %bf.load897, 65535, !dbg !9712
  %cmp899 = icmp eq i32 %bf.clear898, 43, !dbg !9712
  br i1 %cmp899, label %land.lhs.true901, label %lor.lhs.false908, !dbg !9713

land.lhs.true901:                                 ; preds = %land.lhs.true892
  %395 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9714
  %u902 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %395, i32 0, i32 1, !dbg !9714
  %fld903 = bitcast %union.u* %u902 to [1 x %union.rtunion_def]*, !dbg !9714
  %arrayidx904 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld903, i64 0, i64 1, !dbg !9714
  %rt_rtx905 = bitcast %union.rtunion_def* %arrayidx904 to %struct.rtx_def**, !dbg !9714
  %396 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx905, align 8, !dbg !9714
  %397 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0, i64 1), align 8, !dbg !9715
  %cmp906 = icmp ne %struct.rtx_def* %396, %397, !dbg !9716
  br i1 %cmp906, label %if.then933, label %lor.lhs.false908, !dbg !9717

lor.lhs.false908:                                 ; preds = %land.lhs.true901, %land.lhs.true892
  %398 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9718
  %u909 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %398, i32 0, i32 1, !dbg !9718
  %fld910 = bitcast %union.u* %u909 to [1 x %union.rtunion_def]*, !dbg !9718
  %arrayidx911 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld910, i64 0, i64 0, !dbg !9718
  %rt_rtx912 = bitcast %union.rtunion_def* %arrayidx911 to %struct.rtx_def**, !dbg !9718
  %399 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx912, align 8, !dbg !9718
  %400 = bitcast %struct.rtx_def* %399 to i32*, !dbg !9718
  %bf.load913 = load i32, i32* %400, align 8, !dbg !9718
  %bf.clear914 = and i32 %bf.load913, 65535, !dbg !9718
  %cmp915 = icmp eq i32 %bf.clear914, 43, !dbg !9718
  br i1 %cmp915, label %land.lhs.true917, label %lor.lhs.false924, !dbg !9719

land.lhs.true917:                                 ; preds = %lor.lhs.false908
  %401 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9720
  %u918 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %401, i32 0, i32 1, !dbg !9720
  %fld919 = bitcast %union.u* %u918 to [1 x %union.rtunion_def]*, !dbg !9720
  %arrayidx920 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld919, i64 0, i64 0, !dbg !9720
  %rt_rtx921 = bitcast %union.rtunion_def* %arrayidx920 to %struct.rtx_def**, !dbg !9720
  %402 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx921, align 8, !dbg !9720
  %403 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0, i64 0), align 8, !dbg !9721
  %cmp922 = icmp ne %struct.rtx_def* %402, %403, !dbg !9722
  br i1 %cmp922, label %if.then933, label %lor.lhs.false924, !dbg !9723

lor.lhs.false924:                                 ; preds = %land.lhs.true917, %lor.lhs.false908, %lor.lhs.false889
  %404 = load %struct.rtx_def*, %struct.rtx_def** %old_set, align 8, !dbg !9724
  %u925 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %404, i32 0, i32 1, !dbg !9724
  %fld926 = bitcast %union.u* %u925 to [1 x %union.rtunion_def]*, !dbg !9724
  %arrayidx927 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld926, i64 0, i64 1, !dbg !9724
  %rt_rtx928 = bitcast %union.rtunion_def* %arrayidx927 to %struct.rtx_def**, !dbg !9724
  %405 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx928, align 8, !dbg !9724
  %406 = bitcast %struct.rtx_def* %405 to i32*, !dbg !9724
  %bf.load929 = load i32, i32* %406, align 8, !dbg !9724
  %bf.clear930 = and i32 %bf.load929, 65535, !dbg !9724
  %cmp931 = icmp eq i32 %bf.clear930, 49, !dbg !9725
  br i1 %cmp931, label %if.then933, label %if.end946, !dbg !9726

if.then933:                                       ; preds = %lor.lhs.false924, %land.lhs.true917, %land.lhs.true901, %lor.lhs.false880, %land.lhs.true875
  call void @llvm.dbg.declare(metadata i32* %new_icode, metadata !9727, metadata !DIExpression()), !dbg !9729
  %407 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9730
  %u934 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %407, i32 0, i32 1, !dbg !9730
  %fld935 = bitcast %union.u* %u934 to [1 x %union.rtunion_def]*, !dbg !9730
  %arrayidx936 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld935, i64 0, i64 5, !dbg !9730
  %rt_rtx937 = bitcast %union.rtunion_def* %arrayidx936 to %struct.rtx_def**, !dbg !9730
  %408 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx937, align 8, !dbg !9730
  %409 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9731
  %call938 = call i32 @recog(%struct.rtx_def* %408, %struct.rtx_def* %409, i32* null), !dbg !9732
  store i32 %call938, i32* %new_icode, align 4, !dbg !9729
  %410 = load i32, i32* %new_icode, align 4, !dbg !9733
  %cmp939 = icmp sge i32 %410, 0, !dbg !9735
  br i1 %cmp939, label %if.then941, label %if.end945, !dbg !9736

if.then941:                                       ; preds = %if.then933
  %411 = load i32, i32* %new_icode, align 4, !dbg !9737
  %412 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9738
  %u942 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %412, i32 0, i32 1, !dbg !9738
  %fld943 = bitcast %union.u* %u942 to [1 x %union.rtunion_def]*, !dbg !9738
  %arrayidx944 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld943, i64 0, i64 6, !dbg !9738
  %rt_int = bitcast %union.rtunion_def* %arrayidx944 to i32*, !dbg !9738
  store i32 %411, i32* %rt_int, align 8, !dbg !9739
  br label %if.end945, !dbg !9738

if.end945:                                        ; preds = %if.then941, %if.then933
  br label %if.end946, !dbg !9740

if.end946:                                        ; preds = %if.end945, %lor.lhs.false924, %land.lhs.true863, %if.end857
  br label %if.end947, !dbg !9741

if.end947:                                        ; preds = %if.end946, %for.end835
  %413 = load i32, i32* %replace.addr, align 4, !dbg !9742
  %tobool948 = icmp ne i32 %413, 0, !dbg !9742
  br i1 %tobool948, label %if.end977, label %if.then949, !dbg !9744

if.then949:                                       ; preds = %if.end947
  store i32 0, i32* %i, align 4, !dbg !9745
  br label %for.cond950, !dbg !9748

for.cond950:                                      ; preds = %for.inc959, %if.then949
  %414 = load i32, i32* %i, align 4, !dbg !9749
  %415 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !9751
  %conv951 = sext i8 %415 to i32, !dbg !9752
  %cmp952 = icmp slt i32 %414, %conv951, !dbg !9753
  br i1 %cmp952, label %for.body954, label %for.end961, !dbg !9754

for.body954:                                      ; preds = %for.cond950
  %416 = load i32, i32* %i, align 4, !dbg !9755
  %idxprom955 = sext i32 %416 to i64, !dbg !9756
  %arrayidx956 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i64 0, i64 %idxprom955, !dbg !9756
  %417 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx956, align 8, !dbg !9756
  %418 = load i32, i32* %i, align 4, !dbg !9757
  %idxprom957 = sext i32 %418 to i64, !dbg !9758
  %arrayidx958 = getelementptr inbounds [30 x %struct.rtx_def**], [30 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1), i64 0, i64 %idxprom957, !dbg !9758
  %419 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx958, align 8, !dbg !9758
  store %struct.rtx_def* %417, %struct.rtx_def** %419, align 8, !dbg !9759
  br label %for.inc959, !dbg !9760

for.inc959:                                       ; preds = %for.body954
  %420 = load i32, i32* %i, align 4, !dbg !9761
  %inc960 = add nsw i32 %420, 1, !dbg !9761
  store i32 %inc960, i32* %i, align 4, !dbg !9761
  br label %for.cond950, !dbg !9762, !llvm.loop !9763

for.end961:                                       ; preds = %for.cond950
  store i32 0, i32* %i, align 4, !dbg !9765
  br label %for.cond962, !dbg !9767

for.cond962:                                      ; preds = %for.inc974, %for.end961
  %421 = load i32, i32* %i, align 4, !dbg !9768
  %422 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 8), align 1, !dbg !9770
  %conv963 = sext i8 %422 to i32, !dbg !9771
  %cmp964 = icmp slt i32 %421, %conv963, !dbg !9772
  br i1 %cmp964, label %for.body966, label %for.end976, !dbg !9773

for.body966:                                      ; preds = %for.cond962
  %423 = load i32, i32* %i, align 4, !dbg !9774
  %idxprom967 = sext i32 %423 to i64, !dbg !9775
  %arrayidx968 = getelementptr inbounds [14 x i8], [14 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 6), i64 0, i64 %idxprom967, !dbg !9775
  %424 = load i8, i8* %arrayidx968, align 1, !dbg !9775
  %conv969 = sext i8 %424 to i32, !dbg !9776
  %idxprom970 = sext i32 %conv969 to i64, !dbg !9777
  %arrayidx971 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* %orig_operand, i64 0, i64 %idxprom970, !dbg !9777
  %425 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx971, align 8, !dbg !9777
  %426 = load i32, i32* %i, align 4, !dbg !9778
  %idxprom972 = sext i32 %426 to i64, !dbg !9779
  %arrayidx973 = getelementptr inbounds [14 x %struct.rtx_def**], [14 x %struct.rtx_def**]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 5), i64 0, i64 %idxprom972, !dbg !9779
  %427 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx973, align 8, !dbg !9779
  store %struct.rtx_def* %425, %struct.rtx_def** %427, align 8, !dbg !9780
  br label %for.inc974, !dbg !9781

for.inc974:                                       ; preds = %for.body966
  %428 = load i32, i32* %i, align 4, !dbg !9782
  %inc975 = add nsw i32 %428, 1, !dbg !9782
  store i32 %inc975, i32* %i, align 4, !dbg !9782
  br label %for.cond962, !dbg !9783, !llvm.loop !9784

for.end976:                                       ; preds = %for.cond962
  br label %if.end977, !dbg !9786

if.end977:                                        ; preds = %for.end976, %if.end947
  %429 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9787
  store %struct.elim_table* %429, %struct.elim_table** %ep, align 8, !dbg !9789
  br label %for.cond978, !dbg !9790

for.cond978:                                      ; preds = %for.inc998, %if.end977
  %430 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9791
  %431 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9793
  %arrayidx979 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %431, i64 4, !dbg !9793
  %cmp980 = icmp ult %struct.elim_table* %430, %arrayidx979, !dbg !9794
  br i1 %cmp980, label %for.body982, label %for.end1000, !dbg !9795

for.body982:                                      ; preds = %for.cond978
  %432 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9796
  %previous_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %432, i32 0, i32 6, !dbg !9799
  %433 = load i64, i64* %previous_offset, align 8, !dbg !9799
  %434 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9800
  %offset983 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %434, i32 0, i32 5, !dbg !9801
  %435 = load i64, i64* %offset983, align 8, !dbg !9801
  %cmp984 = icmp ne i64 %433, %435, !dbg !9802
  br i1 %cmp984, label %land.lhs.true986, label %if.end990, !dbg !9803

land.lhs.true986:                                 ; preds = %for.body982
  %436 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9804
  %ref_outside_mem = getelementptr inbounds %struct.elim_table, %struct.elim_table* %436, i32 0, i32 7, !dbg !9805
  %437 = load i32, i32* %ref_outside_mem, align 8, !dbg !9805
  %tobool987 = icmp ne i32 %437, 0, !dbg !9804
  br i1 %tobool987, label %if.then988, label %if.end990, !dbg !9806

if.then988:                                       ; preds = %land.lhs.true986
  %438 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9807
  %can_eliminate989 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %438, i32 0, i32 3, !dbg !9808
  store i32 0, i32* %can_eliminate989, align 8, !dbg !9809
  br label %if.end990, !dbg !9807

if.end990:                                        ; preds = %if.then988, %land.lhs.true986, %for.body982
  %439 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9810
  %ref_outside_mem991 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %439, i32 0, i32 7, !dbg !9811
  store i32 0, i32* %ref_outside_mem991, align 8, !dbg !9812
  %440 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9813
  %previous_offset992 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %440, i32 0, i32 6, !dbg !9815
  %441 = load i64, i64* %previous_offset992, align 8, !dbg !9815
  %442 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9816
  %offset993 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %442, i32 0, i32 5, !dbg !9817
  %443 = load i64, i64* %offset993, align 8, !dbg !9817
  %cmp994 = icmp ne i64 %441, %443, !dbg !9818
  br i1 %cmp994, label %if.then996, label %if.end997, !dbg !9819

if.then996:                                       ; preds = %if.end990
  store i32 1, i32* %val, align 4, !dbg !9820
  br label %if.end997, !dbg !9821

if.end997:                                        ; preds = %if.then996, %if.end990
  br label %for.inc998, !dbg !9822

for.inc998:                                       ; preds = %if.end997
  %444 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9823
  %incdec.ptr999 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %444, i32 1, !dbg !9823
  store %struct.elim_table* %incdec.ptr999, %struct.elim_table** %ep, align 8, !dbg !9823
  br label %for.cond978, !dbg !9824, !llvm.loop !9825

for.end1000:                                      ; preds = %for.cond978
  br label %done, !dbg !9826

done:                                             ; preds = %for.end1000, %if.end651, %if.end353, %if.end348
  call void @llvm.dbg.label(metadata !9827), !dbg !9828
  %445 = load i32, i32* %val, align 4, !dbg !9829
  %tobool1001 = icmp ne i32 %445, 0, !dbg !9829
  br i1 %tobool1001, label %land.lhs.true1002, label %if.end1023, !dbg !9831

land.lhs.true1002:                                ; preds = %done
  %446 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9832
  %u1003 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %446, i32 0, i32 1, !dbg !9832
  %fld1004 = bitcast %union.u* %u1003 to [1 x %union.rtunion_def]*, !dbg !9832
  %arrayidx1005 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1004, i64 0, i64 7, !dbg !9832
  %rt_rtx1006 = bitcast %union.rtunion_def* %arrayidx1005 to %struct.rtx_def**, !dbg !9832
  %447 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1006, align 8, !dbg !9832
  %cmp1007 = icmp ne %struct.rtx_def* %447, null, !dbg !9833
  br i1 %cmp1007, label %if.then1009, label %if.end1023, !dbg !9834

if.then1009:                                      ; preds = %land.lhs.true1002
  %448 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9835
  %u1010 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %448, i32 0, i32 1, !dbg !9835
  %fld1011 = bitcast %union.u* %u1010 to [1 x %union.rtunion_def]*, !dbg !9835
  %arrayidx1012 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1011, i64 0, i64 7, !dbg !9835
  %rt_rtx1013 = bitcast %union.rtunion_def* %arrayidx1012 to %struct.rtx_def**, !dbg !9835
  %449 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1013, align 8, !dbg !9835
  %450 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9836
  %u1014 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %450, i32 0, i32 1, !dbg !9836
  %fld1015 = bitcast %union.u* %u1014 to [1 x %union.rtunion_def]*, !dbg !9836
  %arrayidx1016 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1015, i64 0, i64 7, !dbg !9836
  %rt_rtx1017 = bitcast %union.rtunion_def* %arrayidx1016 to %struct.rtx_def**, !dbg !9836
  %451 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1017, align 8, !dbg !9836
  %call1018 = call %struct.rtx_def* @eliminate_regs_1(%struct.rtx_def* %449, i32 0, %struct.rtx_def* %451, i8 zeroext 1), !dbg !9837
  %452 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9838
  %u1019 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %452, i32 0, i32 1, !dbg !9838
  %fld1020 = bitcast %union.u* %u1019 to [1 x %union.rtunion_def]*, !dbg !9838
  %arrayidx1021 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1020, i64 0, i64 7, !dbg !9838
  %rt_rtx1022 = bitcast %union.rtunion_def* %arrayidx1021 to %struct.rtx_def**, !dbg !9838
  store %struct.rtx_def* %call1018, %struct.rtx_def** %rt_rtx1022, align 8, !dbg !9839
  br label %if.end1023, !dbg !9838

if.end1023:                                       ; preds = %if.then1009, %land.lhs.true1002, %done
  %453 = load i32, i32* %val, align 4, !dbg !9840
  store i32 %453, i32* %retval, align 4, !dbg !9841
  br label %return, !dbg !9841

return:                                           ; preds = %if.end1023, %if.then352, %if.end
  %454 = load i32, i32* %retval, align 4, !dbg !9842
  ret i32 %454, !dbg !9842
}

declare dso_local i32 @find_reloads(%struct.rtx_def*, i32, i32, i32, i16*) #2

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local void @ira_mark_memory_move_deletion(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @update_eliminable_offsets() #0 !dbg !9843 {
entry:
  %ep = alloca %struct.elim_table*, align 8
  call void @llvm.dbg.declare(metadata %struct.elim_table** %ep, metadata !9844, metadata !DIExpression()), !dbg !9845
  store i32 0, i32* @num_not_at_initial_offset, align 4, !dbg !9846
  %0 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9847
  store %struct.elim_table* %0, %struct.elim_table** %ep, align 8, !dbg !9849
  br label %for.cond, !dbg !9850

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9851
  %2 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9853
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %2, i64 4, !dbg !9853
  %cmp = icmp ult %struct.elim_table* %1, %arrayidx, !dbg !9854
  br i1 %cmp, label %for.body, label %for.end, !dbg !9855

for.body:                                         ; preds = %for.cond
  %3 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9856
  %offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %3, i32 0, i32 5, !dbg !9858
  %4 = load i64, i64* %offset, align 8, !dbg !9858
  %5 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9859
  %previous_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %5, i32 0, i32 6, !dbg !9860
  store i64 %4, i64* %previous_offset, align 8, !dbg !9861
  %6 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9862
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %6, i32 0, i32 3, !dbg !9864
  %7 = load i32, i32* %can_eliminate, align 8, !dbg !9864
  %tobool = icmp ne i32 %7, 0, !dbg !9862
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9865

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9866
  %offset1 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i32 0, i32 5, !dbg !9867
  %9 = load i64, i64* %offset1, align 8, !dbg !9867
  %10 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9868
  %initial_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %10, i32 0, i32 2, !dbg !9869
  %11 = load i64, i64* %initial_offset, align 8, !dbg !9869
  %cmp2 = icmp ne i64 %9, %11, !dbg !9870
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9871

if.then:                                          ; preds = %land.lhs.true
  %12 = load i32, i32* @num_not_at_initial_offset, align 4, !dbg !9872
  %inc = add nsw i32 %12, 1, !dbg !9872
  store i32 %inc, i32* @num_not_at_initial_offset, align 4, !dbg !9872
  br label %if.end, !dbg !9873

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9874

for.inc:                                          ; preds = %if.end
  %13 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9875
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %13, i32 1, !dbg !9875
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8, !dbg !9875
  br label %for.cond, !dbg !9876, !llvm.loop !9877

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9879
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_reloads(%struct.insn_chain* %chain) #0 !dbg !9880 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain.addr, metadata !9883, metadata !DIExpression()), !dbg !9884
  %0 = load i32, i32* @n_reloads, align 4, !dbg !9885
  %1 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !9886
  %n_reloads = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %1, i32 0, i32 9, !dbg !9887
  store i32 %0, i32* %n_reloads, align 8, !dbg !9888
  %2 = load i32, i32* @n_reloads, align 4, !dbg !9889
  %conv = sext i32 %2 to i64, !dbg !9889
  %mul = mul i64 104, %conv, !dbg !9889
  store i64 %mul, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !9889
  %3 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !9889
  %4 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9889
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !9889
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !9889
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9889
  %5 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !9889
  %cmp = icmp slt i64 %sub.ptr.sub, %5, !dbg !9889
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9889

cond.true:                                        ; preds = %entry
  %6 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !9889
  %conv2 = trunc i64 %6 to i32, !dbg !9889
  call void @_obstack_newchunk(%struct.obstack* @reload_obstack, i32 %conv2), !dbg !9889
  br label %cond.end, !dbg !9889

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9889

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9889
  %7 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !9889
  %8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9889
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %7, !dbg !9889
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9889
  %9 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9889
  %10 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !9889
  %cmp3 = icmp eq i8* %9, %10, !dbg !9889
  br i1 %cmp3, label %cond.true5, label %cond.false6, !dbg !9889

cond.true5:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !9889
  %bf.clear = and i8 %bf.load, -3, !dbg !9889
  %bf.set = or i8 %bf.clear, 2, !dbg !9889
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !9889
  br label %cond.end7, !dbg !9889

cond.false6:                                      ; preds = %cond.end
  br label %cond.end7, !dbg !9889

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi i32 [ 0, %cond.true5 ], [ 0, %cond.false6 ], !dbg !9889
  %11 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !9889
  %sub.ptr.lhs.cast9 = ptrtoint i8* %11 to i64, !dbg !9889
  %sub.ptr.sub10 = sub i64 %sub.ptr.lhs.cast9, 0, !dbg !9889
  store i64 %sub.ptr.sub10, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !9889
  %12 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9889
  %sub.ptr.lhs.cast11 = ptrtoint i8* %12 to i64, !dbg !9889
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast11, 0, !dbg !9889
  %13 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !9889
  %conv13 = sext i32 %13 to i64, !dbg !9889
  %add = add nsw i64 %sub.ptr.sub12, %conv13, !dbg !9889
  %14 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !9889
  %neg = xor i32 %14, -1, !dbg !9889
  %conv14 = sext i32 %neg to i64, !dbg !9889
  %and = and i64 %add, %conv14, !dbg !9889
  %15 = inttoptr i64 %and to i8*, !dbg !9889
  store i8* %15, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9889
  %16 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9889
  %17 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !9889
  %18 = bitcast %struct._obstack_chunk* %17 to i8*, !dbg !9889
  %sub.ptr.lhs.cast15 = ptrtoint i8* %16 to i64, !dbg !9889
  %sub.ptr.rhs.cast16 = ptrtoint i8* %18 to i64, !dbg !9889
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !9889
  %19 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !9889
  %20 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !9889
  %21 = bitcast %struct._obstack_chunk* %20 to i8*, !dbg !9889
  %sub.ptr.lhs.cast18 = ptrtoint i8* %19 to i64, !dbg !9889
  %sub.ptr.rhs.cast19 = ptrtoint i8* %21 to i64, !dbg !9889
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19, !dbg !9889
  %cmp21 = icmp sgt i64 %sub.ptr.sub17, %sub.ptr.sub20, !dbg !9889
  br i1 %cmp21, label %cond.true23, label %cond.false24, !dbg !9889

cond.true23:                                      ; preds = %cond.end7
  %22 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !9889
  store i8* %22, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9889
  br label %cond.end25, !dbg !9889

cond.false24:                                     ; preds = %cond.end7
  br label %cond.end25, !dbg !9889

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i8* [ %22, %cond.true23 ], [ null, %cond.false24 ], !dbg !9889
  %23 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9889
  store i8* %23, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !9889
  %24 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !9889
  %25 = inttoptr i64 %24 to i8*, !dbg !9889
  %26 = bitcast i8* %25 to %struct.reload*, !dbg !9889
  %27 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !9890
  %rld = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %27, i32 0, i32 8, !dbg !9891
  store %struct.reload* %26, %struct.reload** %rld, align 8, !dbg !9892
  %28 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !9893
  %rld27 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %28, i32 0, i32 8, !dbg !9894
  %29 = load %struct.reload*, %struct.reload** %rld27, align 8, !dbg !9894
  %30 = bitcast %struct.reload* %29 to i8*, !dbg !9895
  %31 = load i32, i32* @n_reloads, align 4, !dbg !9896
  %conv28 = sext i32 %31 to i64, !dbg !9896
  %mul29 = mul i64 %conv28, 104, !dbg !9897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 16 bitcast ([180 x %struct.reload]* @rld to i8*), i64 %mul29, i1 false), !dbg !9895
  store i64 0, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !9898
  %32 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !9898
  %33 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9898
  %sub.ptr.lhs.cast30 = ptrtoint i8* %32 to i64, !dbg !9898
  %sub.ptr.rhs.cast31 = ptrtoint i8* %33 to i64, !dbg !9898
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31, !dbg !9898
  %34 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !9898
  %cmp33 = icmp slt i64 %sub.ptr.sub32, %34, !dbg !9898
  br i1 %cmp33, label %cond.true35, label %cond.false37, !dbg !9898

cond.true35:                                      ; preds = %cond.end25
  %35 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !9898
  %conv36 = trunc i64 %35 to i32, !dbg !9898
  call void @_obstack_newchunk(%struct.obstack* @reload_obstack, i32 %conv36), !dbg !9898
  br label %cond.end38, !dbg !9898

cond.false37:                                     ; preds = %cond.end25
  br label %cond.end38, !dbg !9898

cond.end38:                                       ; preds = %cond.false37, %cond.true35
  %cond39 = phi i32 [ 0, %cond.true35 ], [ 0, %cond.false37 ], !dbg !9898
  %36 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !9898
  %37 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9898
  %add.ptr40 = getelementptr inbounds i8, i8* %37, i64 %36, !dbg !9898
  store i8* %add.ptr40, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9898
  %38 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9898
  %39 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !9898
  %cmp41 = icmp eq i8* %38, %39, !dbg !9898
  br i1 %cmp41, label %cond.true43, label %cond.false47, !dbg !9898

cond.true43:                                      ; preds = %cond.end38
  %bf.load44 = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !9898
  %bf.clear45 = and i8 %bf.load44, -3, !dbg !9898
  %bf.set46 = or i8 %bf.clear45, 2, !dbg !9898
  store i8 %bf.set46, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 10), align 8, !dbg !9898
  br label %cond.end48, !dbg !9898

cond.false47:                                     ; preds = %cond.end38
  br label %cond.end48, !dbg !9898

cond.end48:                                       ; preds = %cond.false47, %cond.true43
  %cond49 = phi i32 [ 0, %cond.true43 ], [ 0, %cond.false47 ], !dbg !9898
  %40 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !9898
  %sub.ptr.lhs.cast50 = ptrtoint i8* %40 to i64, !dbg !9898
  %sub.ptr.sub51 = sub i64 %sub.ptr.lhs.cast50, 0, !dbg !9898
  store i64 %sub.ptr.sub51, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !9898
  %41 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9898
  %sub.ptr.lhs.cast52 = ptrtoint i8* %41 to i64, !dbg !9898
  %sub.ptr.sub53 = sub i64 %sub.ptr.lhs.cast52, 0, !dbg !9898
  %42 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !9898
  %conv54 = sext i32 %42 to i64, !dbg !9898
  %add55 = add nsw i64 %sub.ptr.sub53, %conv54, !dbg !9898
  %43 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 6), align 8, !dbg !9898
  %neg56 = xor i32 %43, -1, !dbg !9898
  %conv57 = sext i32 %neg56 to i64, !dbg !9898
  %and58 = and i64 %add55, %conv57, !dbg !9898
  %44 = inttoptr i64 %and58 to i8*, !dbg !9898
  store i8* %44, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9898
  %45 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9898
  %46 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !9898
  %47 = bitcast %struct._obstack_chunk* %46 to i8*, !dbg !9898
  %sub.ptr.lhs.cast59 = ptrtoint i8* %45 to i64, !dbg !9898
  %sub.ptr.rhs.cast60 = ptrtoint i8* %47 to i64, !dbg !9898
  %sub.ptr.sub61 = sub i64 %sub.ptr.lhs.cast59, %sub.ptr.rhs.cast60, !dbg !9898
  %48 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !9898
  %49 = load %struct._obstack_chunk*, %struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 1), align 8, !dbg !9898
  %50 = bitcast %struct._obstack_chunk* %49 to i8*, !dbg !9898
  %sub.ptr.lhs.cast62 = ptrtoint i8* %48 to i64, !dbg !9898
  %sub.ptr.rhs.cast63 = ptrtoint i8* %50 to i64, !dbg !9898
  %sub.ptr.sub64 = sub i64 %sub.ptr.lhs.cast62, %sub.ptr.rhs.cast63, !dbg !9898
  %cmp65 = icmp sgt i64 %sub.ptr.sub61, %sub.ptr.sub64, !dbg !9898
  br i1 %cmp65, label %cond.true67, label %cond.false68, !dbg !9898

cond.true67:                                      ; preds = %cond.end48
  %51 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 4), align 8, !dbg !9898
  store i8* %51, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9898
  br label %cond.end69, !dbg !9898

cond.false68:                                     ; preds = %cond.end48
  br label %cond.end69, !dbg !9898

cond.end69:                                       ; preds = %cond.false68, %cond.true67
  %cond70 = phi i8* [ %51, %cond.true67 ], [ null, %cond.false68 ], !dbg !9898
  %52 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 3), align 8, !dbg !9898
  store i8* %52, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 2), align 8, !dbg !9898
  %53 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @reload_obstack, i32 0, i32 5), align 8, !dbg !9898
  %54 = inttoptr i64 %53 to i8*, !dbg !9898
  store i8* %54, i8** @reload_insn_firstobj, align 8, !dbg !9899
  ret void, !dbg !9900
}

declare dso_local %struct.rtx_def* @prev_nonnote_insn(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @set_offsets_for_label(%struct.rtx_def* %insn) #0 !dbg !9901 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %label_nr = alloca i32, align 4
  %ep = alloca %struct.elim_table*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9902, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9904, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.declare(metadata i32* %label_nr, metadata !9906, metadata !DIExpression()), !dbg !9907
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9908
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !9908
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9908
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 6, !dbg !9908
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9908
  %1 = load i32, i32* %rt_int, align 8, !dbg !9908
  store i32 %1, i32* %label_nr, align 4, !dbg !9907
  call void @llvm.dbg.declare(metadata %struct.elim_table** %ep, metadata !9909, metadata !DIExpression()), !dbg !9910
  store i32 0, i32* @num_not_at_initial_offset, align 4, !dbg !9911
  store i32 0, i32* %i, align 4, !dbg !9912
  %2 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9914
  store %struct.elim_table* %2, %struct.elim_table** %ep, align 8, !dbg !9915
  br label %for.cond, !dbg !9916

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !9917
  %conv = zext i32 %3 to i64, !dbg !9917
  %cmp = icmp ult i64 %conv, 4, !dbg !9919
  br i1 %cmp, label %for.body, label %for.end, !dbg !9920

for.body:                                         ; preds = %for.cond
  %4 = load [4 x i64]*, [4 x i64]** @offsets_at, align 8, !dbg !9921
  %5 = load i32, i32* %label_nr, align 4, !dbg !9923
  %6 = load i32, i32* @first_label_num, align 4, !dbg !9924
  %sub = sub nsw i32 %5, %6, !dbg !9925
  %idxprom = sext i32 %sub to i64, !dbg !9921
  %arrayidx2 = getelementptr inbounds [4 x i64], [4 x i64]* %4, i64 %idxprom, !dbg !9921
  %7 = load i32, i32* %i, align 4, !dbg !9926
  %idxprom3 = zext i32 %7 to i64, !dbg !9921
  %arrayidx4 = getelementptr inbounds [4 x i64], [4 x i64]* %arrayidx2, i64 0, i64 %idxprom3, !dbg !9921
  %8 = load i64, i64* %arrayidx4, align 8, !dbg !9921
  %9 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9927
  %previous_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %9, i32 0, i32 6, !dbg !9928
  store i64 %8, i64* %previous_offset, align 8, !dbg !9929
  %10 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9930
  %offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %10, i32 0, i32 5, !dbg !9931
  store i64 %8, i64* %offset, align 8, !dbg !9932
  %11 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9933
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %11, i32 0, i32 3, !dbg !9935
  %12 = load i32, i32* %can_eliminate, align 8, !dbg !9935
  %tobool = icmp ne i32 %12, 0, !dbg !9933
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9936

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9937
  %offset5 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %13, i32 0, i32 5, !dbg !9938
  %14 = load i64, i64* %offset5, align 8, !dbg !9938
  %15 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9939
  %initial_offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %15, i32 0, i32 2, !dbg !9940
  %16 = load i64, i64* %initial_offset, align 8, !dbg !9940
  %cmp6 = icmp ne i64 %14, %16, !dbg !9941
  br i1 %cmp6, label %if.then, label %if.end, !dbg !9942

if.then:                                          ; preds = %land.lhs.true
  %17 = load i32, i32* @num_not_at_initial_offset, align 4, !dbg !9943
  %inc = add nsw i32 %17, 1, !dbg !9943
  store i32 %inc, i32* @num_not_at_initial_offset, align 4, !dbg !9943
  br label %if.end, !dbg !9944

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9945

for.inc:                                          ; preds = %if.end
  %18 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !9946
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %18, i32 1, !dbg !9946
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8, !dbg !9946
  %19 = load i32, i32* %i, align 4, !dbg !9947
  %inc8 = add i32 %19, 1, !dbg !9947
  store i32 %inc8, i32* %i, align 4, !dbg !9947
  br label %for.cond, !dbg !9948, !llvm.loop !9949

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9951
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @recog_memoized(%struct.rtx_def* %insn) #0 !dbg !9952 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9955, metadata !DIExpression()), !dbg !9956
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9957
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !9957
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9957
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 6, !dbg !9957
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !9957
  %1 = load i32, i32* %rt_int, align 8, !dbg !9957
  %cmp = icmp slt i32 %1, 0, !dbg !9959
  br i1 %cmp, label %if.then, label %if.end, !dbg !9960

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9961
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !9961
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !9961
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 5, !dbg !9961
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !9961
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9961
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9962
  %call = call i32 @recog(%struct.rtx_def* %3, %struct.rtx_def* %4, i32* null), !dbg !9963
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9964
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !9964
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !9964
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 6, !dbg !9964
  %rt_int7 = bitcast %union.rtunion_def* %arrayidx6 to i32*, !dbg !9964
  store i32 %call, i32* %rt_int7, align 8, !dbg !9965
  br label %if.end, !dbg !9964

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9966
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !9966
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !9966
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 6, !dbg !9966
  %rt_int11 = bitcast %union.rtunion_def* %arrayidx10 to i32*, !dbg !9966
  %7 = load i32, i32* %rt_int11, align 8, !dbg !9966
  ret i32 %7, !dbg !9967
}

declare dso_local %struct.rtx_def* @copy_insn(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @copy_insn_1(%struct.rtx_def*) #2

declare dso_local zeroext i8 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i8 zeroext) #2

declare dso_local i32 @apply_change_group() #2

declare dso_local i32 @subreg_lowpart_p(%struct.rtx_def*) #2

declare dso_local i64 @trunc_int_for_mode(i64, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @elimination_effects(%struct.rtx_def* %x, i32 %mem_mode) #0 !dbg !9968 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %mem_mode.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %ep = alloca %struct.elim_table*, align 8
  %regno = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %size = alloca i32, align 4
  %src = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !9971, metadata !DIExpression()), !dbg !9972
  store i32 %mem_mode, i32* %mem_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_mode.addr, metadata !9973, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.declare(metadata i32* %code, metadata !9975, metadata !DIExpression()), !dbg !9976
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9977
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !9977
  %bf.load = load i32, i32* %1, align 8, !dbg !9977
  %bf.clear = and i32 %bf.load, 65535, !dbg !9977
  store i32 %bf.clear, i32* %code, align 4, !dbg !9976
  call void @llvm.dbg.declare(metadata %struct.elim_table** %ep, metadata !9978, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !9980, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9982, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9984, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !9986, metadata !DIExpression()), !dbg !9987
  %2 = load i32, i32* %code, align 4, !dbg !9988
  switch i32 %2, label %sw.default [
    i32 30, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 35, label %sw.bb
    i32 45, label %sw.bb
    i32 12, label %sw.bb
    i32 36, label %sw.bb
    i32 46, label %sw.bb
    i32 16, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 27, label %sw.bb
    i32 37, label %sw.bb1
    i32 75, label %sw.bb27
    i32 77, label %sw.bb27
    i32 74, label %sw.bb27
    i32 76, label %sw.bb27
    i32 79, label %sw.bb27
    i32 78, label %sw.bb27
    i32 40, label %sw.bb153
    i32 51, label %sw.bb153
    i32 64, label %sw.bb153
    i32 98, label %sw.bb153
    i32 99, label %sw.bb153
    i32 100, label %sw.bb153
    i32 101, label %sw.bb153
    i32 102, label %sw.bb153
    i32 103, label %sw.bb153
    i32 104, label %sw.bb153
    i32 106, label %sw.bb153
    i32 105, label %sw.bb153
    i32 111, label %sw.bb153
    i32 112, label %sw.bb153
    i32 114, label %sw.bb153
    i32 115, label %sw.bb153
    i32 116, label %sw.bb153
    i32 117, label %sw.bb153
    i32 118, label %sw.bb153
    i32 113, label %sw.bb153
    i32 39, label %sw.bb158
    i32 24, label %sw.bb206
    i32 25, label %sw.bb229
    i32 23, label %sw.bb252
    i32 43, label %sw.bb336
  ], !dbg !9989

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %for.end389, !dbg !9990

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9992
  %call = call i32 @rhs_regno(%struct.rtx_def* %3), !dbg !9992
  store i32 %call, i32* %regno, align 4, !dbg !9993
  %4 = load i32, i32* %regno, align 4, !dbg !9994
  %cmp = icmp slt i32 %4, 53, !dbg !9996
  br i1 %cmp, label %if.then, label %if.else, !dbg !9997

if.then:                                          ; preds = %sw.bb1
  %5 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !9998
  store %struct.elim_table* %5, %struct.elim_table** %ep, align 8, !dbg !10001
  br label %for.cond, !dbg !10002

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10003
  %7 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10005
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %7, i64 4, !dbg !10005
  %cmp2 = icmp ult %struct.elim_table* %6, %arrayidx, !dbg !10006
  br i1 %cmp2, label %for.body, label %for.end, !dbg !10007

for.body:                                         ; preds = %for.cond
  %8 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10008
  %from_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i32 0, i32 8, !dbg !10010
  %9 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx, align 8, !dbg !10010
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10011
  %cmp3 = icmp eq %struct.rtx_def* %9, %10, !dbg !10012
  br i1 %cmp3, label %land.lhs.true, label %if.end7, !dbg !10013

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10014
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %11, i32 0, i32 3, !dbg !10015
  %12 = load i32, i32* %can_eliminate, align 8, !dbg !10015
  %tobool = icmp ne i32 %12, 0, !dbg !10014
  br i1 %tobool, label %if.then4, label %if.end7, !dbg !10016

if.then4:                                         ; preds = %land.lhs.true
  %13 = load i32, i32* %mem_mode.addr, align 4, !dbg !10017
  %tobool5 = icmp ne i32 %13, 0, !dbg !10017
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !10020

if.then6:                                         ; preds = %if.then4
  %14 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10021
  %ref_outside_mem = getelementptr inbounds %struct.elim_table, %struct.elim_table* %14, i32 0, i32 7, !dbg !10022
  store i32 1, i32* %ref_outside_mem, align 8, !dbg !10023
  br label %if.end, !dbg !10021

if.end:                                           ; preds = %if.then6, %if.then4
  br label %for.end389, !dbg !10024

if.end7:                                          ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !10015

for.inc:                                          ; preds = %if.end7
  %15 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10025
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %15, i32 1, !dbg !10025
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8, !dbg !10025
  br label %for.cond, !dbg !10026, !llvm.loop !10027

for.end:                                          ; preds = %for.cond
  br label %if.end26, !dbg !10029

if.else:                                          ; preds = %sw.bb1
  %16 = load i16*, i16** @reg_renumber, align 8, !dbg !10030
  %17 = load i32, i32* %regno, align 4, !dbg !10032
  %idxprom = sext i32 %17 to i64, !dbg !10030
  %arrayidx8 = getelementptr inbounds i16, i16* %16, i64 %idxprom, !dbg !10030
  %18 = load i16, i16* %arrayidx8, align 2, !dbg !10030
  %conv = sext i16 %18 to i32, !dbg !10030
  %cmp9 = icmp slt i32 %conv, 0, !dbg !10033
  br i1 %cmp9, label %land.lhs.true11, label %if.end25, !dbg !10034

land.lhs.true11:                                  ; preds = %if.else
  %19 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !10035
  %tobool12 = icmp ne %struct.rtx_def** %19, null, !dbg !10035
  br i1 %tobool12, label %land.lhs.true13, label %if.end25, !dbg !10036

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %20 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !10037
  %21 = load i32, i32* %regno, align 4, !dbg !10038
  %idxprom14 = sext i32 %21 to i64, !dbg !10037
  %arrayidx15 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %20, i64 %idxprom14, !dbg !10037
  %22 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx15, align 8, !dbg !10037
  %tobool16 = icmp ne %struct.rtx_def* %22, null, !dbg !10037
  br i1 %tobool16, label %land.lhs.true17, label %if.end25, !dbg !10039

land.lhs.true17:                                  ; preds = %land.lhs.true13
  %23 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !10040
  %24 = load i32, i32* %regno, align 4, !dbg !10041
  %idxprom18 = sext i32 %24 to i64, !dbg !10040
  %arrayidx19 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %23, i64 %idxprom18, !dbg !10040
  %25 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx19, align 8, !dbg !10040
  %call20 = call i32 @function_invariant_p(%struct.rtx_def* %25), !dbg !10042
  %tobool21 = icmp ne i32 %call20, 0, !dbg !10042
  br i1 %tobool21, label %if.end25, label %if.then22, !dbg !10043

if.then22:                                        ; preds = %land.lhs.true17
  %26 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !10044
  %27 = load i32, i32* %regno, align 4, !dbg !10045
  %idxprom23 = sext i32 %27 to i64, !dbg !10044
  %arrayidx24 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %26, i64 %idxprom23, !dbg !10044
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx24, align 8, !dbg !10044
  %29 = load i32, i32* %mem_mode.addr, align 4, !dbg !10046
  call void @elimination_effects(%struct.rtx_def* %28, i32 %29), !dbg !10047
  br label %if.end25, !dbg !10047

if.end25:                                         ; preds = %if.then22, %land.lhs.true17, %land.lhs.true13, %land.lhs.true11, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %for.end
  br label %for.end389, !dbg !10048

sw.bb27:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %30 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10049
  store %struct.elim_table* %30, %struct.elim_table** %ep, align 8, !dbg !10051
  br label %for.cond28, !dbg !10052

for.cond28:                                       ; preds = %for.inc40, %sw.bb27
  %31 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10053
  %32 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10055
  %arrayidx29 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %32, i64 4, !dbg !10055
  %cmp30 = icmp ult %struct.elim_table* %31, %arrayidx29, !dbg !10056
  br i1 %cmp30, label %for.body32, label %for.end42, !dbg !10057

for.body32:                                       ; preds = %for.cond28
  %33 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10058
  %from_rtx33 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %33, i32 0, i32 8, !dbg !10060
  %34 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx33, align 8, !dbg !10060
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10061
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !10061
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !10061
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !10061
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !10061
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10061
  %cmp35 = icmp eq %struct.rtx_def* %34, %36, !dbg !10062
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !10063

if.then37:                                        ; preds = %for.body32
  %37 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10064
  %can_eliminate38 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %37, i32 0, i32 3, !dbg !10065
  store i32 0, i32* %can_eliminate38, align 8, !dbg !10066
  br label %if.end39, !dbg !10064

if.end39:                                         ; preds = %if.then37, %for.body32
  br label %for.inc40, !dbg !10061

for.inc40:                                        ; preds = %if.end39
  %38 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10067
  %incdec.ptr41 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %38, i32 1, !dbg !10067
  store %struct.elim_table* %incdec.ptr41, %struct.elim_table** %ep, align 8, !dbg !10067
  br label %for.cond28, !dbg !10068, !llvm.loop !10069

for.end42:                                        ; preds = %for.cond28
  %39 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10071
  store %struct.elim_table* %39, %struct.elim_table** %ep, align 8, !dbg !10073
  br label %for.cond43, !dbg !10074

for.cond43:                                       ; preds = %for.inc143, %for.end42
  %40 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10075
  %41 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10077
  %arrayidx44 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %41, i64 4, !dbg !10077
  %cmp45 = icmp ult %struct.elim_table* %40, %arrayidx44, !dbg !10078
  br i1 %cmp45, label %for.body47, label %for.end145, !dbg !10079

for.body47:                                       ; preds = %for.cond43
  %42 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10080
  %to_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %42, i32 0, i32 9, !dbg !10082
  %43 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx, align 8, !dbg !10082
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10083
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !10083
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !10083
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 0, !dbg !10083
  %rt_rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !10083
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !10083
  %cmp52 = icmp eq %struct.rtx_def* %43, %45, !dbg !10084
  br i1 %cmp52, label %if.then54, label %if.end142, !dbg !10085

if.then54:                                        ; preds = %for.body47
  call void @llvm.dbg.declare(metadata i32* %size, metadata !10086, metadata !DIExpression()), !dbg !10088
  %46 = load i32, i32* %mem_mode.addr, align 4, !dbg !10089
  %idxprom55 = zext i32 %46 to i64, !dbg !10089
  %arrayidx56 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom55, !dbg !10089
  %47 = load i8, i8* %arrayidx56, align 1, !dbg !10089
  %conv57 = zext i8 %47 to i16, !dbg !10089
  %conv58 = zext i16 %conv57 to i32, !dbg !10089
  store i32 %conv58, i32* %size, align 4, !dbg !10088
  %48 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10090
  %to_rtx59 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %48, i32 0, i32 9, !dbg !10092
  %49 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx59, align 8, !dbg !10092
  %50 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !10093
  %cmp60 = icmp eq %struct.rtx_def* %49, %50, !dbg !10094
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !10095

if.then62:                                        ; preds = %if.then54
  %51 = load i32, i32* %size, align 4, !dbg !10096
  %add = add nsw i32 %51, 3, !dbg !10096
  %and = and i32 %add, -4, !dbg !10096
  store i32 %and, i32* %size, align 4, !dbg !10097
  br label %if.end63, !dbg !10098

if.end63:                                         ; preds = %if.then62, %if.then54
  %52 = load i32, i32* %code, align 4, !dbg !10099
  %cmp64 = icmp eq i32 %52, 74, !dbg !10101
  br i1 %cmp64, label %if.then68, label %lor.lhs.false, !dbg !10102

lor.lhs.false:                                    ; preds = %if.end63
  %53 = load i32, i32* %code, align 4, !dbg !10103
  %cmp66 = icmp eq i32 %53, 76, !dbg !10104
  br i1 %cmp66, label %if.then68, label %if.else71, !dbg !10105

if.then68:                                        ; preds = %lor.lhs.false, %if.end63
  %54 = load i32, i32* %size, align 4, !dbg !10106
  %conv69 = sext i32 %54 to i64, !dbg !10106
  %55 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10107
  %offset = getelementptr inbounds %struct.elim_table, %struct.elim_table* %55, i32 0, i32 5, !dbg !10108
  %56 = load i64, i64* %offset, align 8, !dbg !10109
  %add70 = add nsw i64 %56, %conv69, !dbg !10109
  store i64 %add70, i64* %offset, align 8, !dbg !10109
  br label %if.end141, !dbg !10107

if.else71:                                        ; preds = %lor.lhs.false
  %57 = load i32, i32* %code, align 4, !dbg !10110
  %cmp72 = icmp eq i32 %57, 75, !dbg !10112
  br i1 %cmp72, label %if.then77, label %lor.lhs.false74, !dbg !10113

lor.lhs.false74:                                  ; preds = %if.else71
  %58 = load i32, i32* %code, align 4, !dbg !10114
  %cmp75 = icmp eq i32 %58, 77, !dbg !10115
  br i1 %cmp75, label %if.then77, label %if.else80, !dbg !10116

if.then77:                                        ; preds = %lor.lhs.false74, %if.else71
  %59 = load i32, i32* %size, align 4, !dbg !10117
  %conv78 = sext i32 %59 to i64, !dbg !10117
  %60 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10118
  %offset79 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %60, i32 0, i32 5, !dbg !10119
  %61 = load i64, i64* %offset79, align 8, !dbg !10120
  %sub = sub nsw i64 %61, %conv78, !dbg !10120
  store i64 %sub, i64* %offset79, align 8, !dbg !10120
  br label %if.end140, !dbg !10118

if.else80:                                        ; preds = %lor.lhs.false74
  %62 = load i32, i32* %code, align 4, !dbg !10121
  %cmp81 = icmp eq i32 %62, 78, !dbg !10123
  br i1 %cmp81, label %if.then86, label %lor.lhs.false83, !dbg !10124

lor.lhs.false83:                                  ; preds = %if.else80
  %63 = load i32, i32* %code, align 4, !dbg !10125
  %cmp84 = icmp eq i32 %63, 79, !dbg !10126
  br i1 %cmp84, label %if.then86, label %if.end139, !dbg !10127

if.then86:                                        ; preds = %lor.lhs.false83, %if.else80
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10128
  %u87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1, !dbg !10128
  %fld88 = bitcast %union.u* %u87 to [1 x %union.rtunion_def]*, !dbg !10128
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i64 0, i64 1, !dbg !10128
  %rt_rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**, !dbg !10128
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx90, align 8, !dbg !10128
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !10128
  %bf.load91 = load i32, i32* %66, align 8, !dbg !10128
  %bf.clear92 = and i32 %bf.load91, 65535, !dbg !10128
  %cmp93 = icmp eq i32 %bf.clear92, 49, !dbg !10131
  br i1 %cmp93, label %land.lhs.true95, label %if.else136, !dbg !10132

land.lhs.true95:                                  ; preds = %if.then86
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10133
  %u96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !10133
  %fld97 = bitcast %union.u* %u96 to [1 x %union.rtunion_def]*, !dbg !10133
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i64 0, i64 0, !dbg !10133
  %rt_rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**, !dbg !10133
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !10133
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10134
  %u100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !10134
  %fld101 = bitcast %union.u* %u100 to [1 x %union.rtunion_def]*, !dbg !10134
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i64 0, i64 1, !dbg !10134
  %rt_rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**, !dbg !10134
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx103, align 8, !dbg !10134
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !10134
  %fld105 = bitcast %union.u* %u104 to [1 x %union.rtunion_def]*, !dbg !10134
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i64 0, i64 0, !dbg !10134
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !10134
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !10134
  %cmp108 = icmp eq %struct.rtx_def* %68, %71, !dbg !10135
  br i1 %cmp108, label %land.lhs.true110, label %if.else136, !dbg !10136

land.lhs.true110:                                 ; preds = %land.lhs.true95
  %72 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10137
  %u111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !10137
  %fld112 = bitcast %union.u* %u111 to [1 x %union.rtunion_def]*, !dbg !10137
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i64 0, i64 1, !dbg !10137
  %rt_rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**, !dbg !10137
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx114, align 8, !dbg !10137
  %u115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !10137
  %fld116 = bitcast %union.u* %u115 to [1 x %union.rtunion_def]*, !dbg !10137
  %arrayidx117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i64 0, i64 1, !dbg !10137
  %rt_rtx118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**, !dbg !10137
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx118, align 8, !dbg !10137
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !10137
  %bf.load119 = load i32, i32* %75, align 8, !dbg !10137
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !10137
  %cmp121 = icmp eq i32 %bf.clear120, 30, !dbg !10137
  br i1 %cmp121, label %if.then123, label %if.else136, !dbg !10138

if.then123:                                       ; preds = %land.lhs.true110
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10139
  %u124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !10139
  %fld125 = bitcast %union.u* %u124 to [1 x %union.rtunion_def]*, !dbg !10139
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 1, !dbg !10139
  %rt_rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**, !dbg !10139
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx127, align 8, !dbg !10139
  %u128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1, !dbg !10139
  %fld129 = bitcast %union.u* %u128 to [1 x %union.rtunion_def]*, !dbg !10139
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i64 0, i64 1, !dbg !10139
  %rt_rtx131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**, !dbg !10139
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx131, align 8, !dbg !10139
  %u132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !10139
  %hwint = bitcast %union.u* %u132 to [1 x i64]*, !dbg !10139
  %arrayidx133 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !10139
  %79 = load i64, i64* %arrayidx133, align 8, !dbg !10139
  %80 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10140
  %offset134 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %80, i32 0, i32 5, !dbg !10141
  %81 = load i64, i64* %offset134, align 8, !dbg !10142
  %sub135 = sub nsw i64 %81, %79, !dbg !10142
  store i64 %sub135, i64* %offset134, align 8, !dbg !10142
  br label %if.end138, !dbg !10140

if.else136:                                       ; preds = %land.lhs.true110, %land.lhs.true95, %if.then86
  %82 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10143
  %can_eliminate137 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %82, i32 0, i32 3, !dbg !10144
  store i32 0, i32* %can_eliminate137, align 8, !dbg !10145
  br label %if.end138

if.end138:                                        ; preds = %if.else136, %if.then123
  br label %if.end139, !dbg !10146

if.end139:                                        ; preds = %if.end138, %lor.lhs.false83
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.then77
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.then68
  br label %if.end142, !dbg !10147

if.end142:                                        ; preds = %if.end141, %for.body47
  br label %for.inc143, !dbg !10083

for.inc143:                                       ; preds = %if.end142
  %83 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10148
  %incdec.ptr144 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %83, i32 1, !dbg !10148
  store %struct.elim_table* %incdec.ptr144, %struct.elim_table** %ep, align 8, !dbg !10148
  br label %for.cond43, !dbg !10149, !llvm.loop !10150

for.end145:                                       ; preds = %for.cond43
  %84 = load i32, i32* %code, align 4, !dbg !10152
  %cmp146 = icmp eq i32 %84, 79, !dbg !10154
  br i1 %cmp146, label %if.then151, label %lor.lhs.false148, !dbg !10155

lor.lhs.false148:                                 ; preds = %for.end145
  %85 = load i32, i32* %code, align 4, !dbg !10156
  %cmp149 = icmp eq i32 %85, 78, !dbg !10157
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !10158

if.then151:                                       ; preds = %lor.lhs.false148, %for.end145
  br label %sw.epilog, !dbg !10159

if.end152:                                        ; preds = %lor.lhs.false148
  br label %sw.bb153, !dbg !10160

sw.bb153:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %if.end152
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10161
  %u154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !10161
  %fld155 = bitcast %union.u* %u154 to [1 x %union.rtunion_def]*, !dbg !10161
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i64 0, i64 0, !dbg !10161
  %rt_rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**, !dbg !10161
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx157, align 8, !dbg !10161
  %88 = load i32, i32* %mem_mode.addr, align 4, !dbg !10162
  call void @elimination_effects(%struct.rtx_def* %87, i32 %88), !dbg !10163
  br label %for.end389, !dbg !10164

sw.bb158:                                         ; preds = %entry
  %89 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10165
  %u159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1, !dbg !10165
  %fld160 = bitcast %union.u* %u159 to [1 x %union.rtunion_def]*, !dbg !10165
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i64 0, i64 0, !dbg !10165
  %rt_rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**, !dbg !10165
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx162, align 8, !dbg !10165
  %91 = bitcast %struct.rtx_def* %90 to i32*, !dbg !10165
  %bf.load163 = load i32, i32* %91, align 8, !dbg !10165
  %bf.clear164 = and i32 %bf.load163, 65535, !dbg !10165
  %cmp165 = icmp eq i32 %bf.clear164, 37, !dbg !10165
  br i1 %cmp165, label %land.lhs.true167, label %if.end201, !dbg !10167

land.lhs.true167:                                 ; preds = %sw.bb158
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10168
  %93 = bitcast %struct.rtx_def* %92 to i32*, !dbg !10168
  %bf.load168 = load i32, i32* %93, align 8, !dbg !10168
  %bf.lshr = lshr i32 %bf.load168, 16, !dbg !10168
  %bf.clear169 = and i32 %bf.lshr, 255, !dbg !10168
  %idxprom170 = zext i32 %bf.clear169 to i64, !dbg !10168
  %arrayidx171 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom170, !dbg !10168
  %94 = load i8, i8* %arrayidx171, align 1, !dbg !10168
  %conv172 = zext i8 %94 to i16, !dbg !10168
  %conv173 = zext i16 %conv172 to i32, !dbg !10168
  %95 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10169
  %u174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1, !dbg !10169
  %fld175 = bitcast %union.u* %u174 to [1 x %union.rtunion_def]*, !dbg !10169
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld175, i64 0, i64 0, !dbg !10169
  %rt_rtx177 = bitcast %union.rtunion_def* %arrayidx176 to %struct.rtx_def**, !dbg !10169
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx177, align 8, !dbg !10169
  %97 = bitcast %struct.rtx_def* %96 to i32*, !dbg !10169
  %bf.load178 = load i32, i32* %97, align 8, !dbg !10169
  %bf.lshr179 = lshr i32 %bf.load178, 16, !dbg !10169
  %bf.clear180 = and i32 %bf.lshr179, 255, !dbg !10169
  %idxprom181 = zext i32 %bf.clear180 to i64, !dbg !10169
  %arrayidx182 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom181, !dbg !10169
  %98 = load i8, i8* %arrayidx182, align 1, !dbg !10169
  %conv183 = zext i8 %98 to i16, !dbg !10169
  %conv184 = zext i16 %conv183 to i32, !dbg !10169
  %cmp185 = icmp sle i32 %conv173, %conv184, !dbg !10170
  br i1 %cmp185, label %land.lhs.true187, label %if.end201, !dbg !10171

land.lhs.true187:                                 ; preds = %land.lhs.true167
  %99 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !10172
  %cmp188 = icmp ne %struct.rtx_def** %99, null, !dbg !10173
  br i1 %cmp188, label %land.lhs.true190, label %if.end201, !dbg !10174

land.lhs.true190:                                 ; preds = %land.lhs.true187
  %100 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !10175
  %101 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10176
  %u191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1, !dbg !10176
  %fld192 = bitcast %union.u* %u191 to [1 x %union.rtunion_def]*, !dbg !10176
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i64 0, i64 0, !dbg !10176
  %rt_rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**, !dbg !10176
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx194, align 8, !dbg !10176
  %call195 = call i32 @rhs_regno(%struct.rtx_def* %102), !dbg !10176
  %idxprom196 = zext i32 %call195 to i64, !dbg !10175
  %arrayidx197 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %100, i64 %idxprom196, !dbg !10175
  %103 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx197, align 8, !dbg !10175
  %cmp198 = icmp ne %struct.rtx_def* %103, null, !dbg !10177
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !10178

if.then200:                                       ; preds = %land.lhs.true190
  br label %for.end389, !dbg !10179

if.end201:                                        ; preds = %land.lhs.true190, %land.lhs.true187, %land.lhs.true167, %sw.bb158
  %104 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10180
  %u202 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1, !dbg !10180
  %fld203 = bitcast %union.u* %u202 to [1 x %union.rtunion_def]*, !dbg !10180
  %arrayidx204 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld203, i64 0, i64 0, !dbg !10180
  %rt_rtx205 = bitcast %union.rtunion_def* %arrayidx204 to %struct.rtx_def**, !dbg !10180
  %105 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx205, align 8, !dbg !10180
  %106 = load i32, i32* %mem_mode.addr, align 4, !dbg !10181
  call void @elimination_effects(%struct.rtx_def* %105, i32 %106), !dbg !10182
  br label %for.end389, !dbg !10183

sw.bb206:                                         ; preds = %entry
  %107 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10184
  store %struct.elim_table* %107, %struct.elim_table** %ep, align 8, !dbg !10186
  br label %for.cond207, !dbg !10187

for.cond207:                                      ; preds = %for.inc222, %sw.bb206
  %108 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10188
  %109 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10190
  %arrayidx208 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %109, i64 4, !dbg !10190
  %cmp209 = icmp ult %struct.elim_table* %108, %arrayidx208, !dbg !10191
  br i1 %cmp209, label %for.body211, label %for.end224, !dbg !10192

for.body211:                                      ; preds = %for.cond207
  %110 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10193
  %from_rtx212 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %110, i32 0, i32 8, !dbg !10195
  %111 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx212, align 8, !dbg !10195
  %112 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10196
  %u213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1, !dbg !10196
  %fld214 = bitcast %union.u* %u213 to [1 x %union.rtunion_def]*, !dbg !10196
  %arrayidx215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld214, i64 0, i64 0, !dbg !10196
  %rt_rtx216 = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtx_def**, !dbg !10196
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx216, align 8, !dbg !10196
  %cmp217 = icmp eq %struct.rtx_def* %111, %113, !dbg !10197
  br i1 %cmp217, label %if.then219, label %if.end221, !dbg !10198

if.then219:                                       ; preds = %for.body211
  %114 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10199
  %can_eliminate220 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %114, i32 0, i32 3, !dbg !10200
  store i32 0, i32* %can_eliminate220, align 8, !dbg !10201
  br label %if.end221, !dbg !10199

if.end221:                                        ; preds = %if.then219, %for.body211
  br label %for.inc222, !dbg !10196

for.inc222:                                       ; preds = %if.end221
  %115 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10202
  %incdec.ptr223 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %115, i32 1, !dbg !10202
  store %struct.elim_table* %incdec.ptr223, %struct.elim_table** %ep, align 8, !dbg !10202
  br label %for.cond207, !dbg !10203, !llvm.loop !10204

for.end224:                                       ; preds = %for.cond207
  %116 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10206
  %u225 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1, !dbg !10206
  %fld226 = bitcast %union.u* %u225 to [1 x %union.rtunion_def]*, !dbg !10206
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld226, i64 0, i64 0, !dbg !10206
  %rt_rtx228 = bitcast %union.rtunion_def* %arrayidx227 to %struct.rtx_def**, !dbg !10206
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx228, align 8, !dbg !10206
  %118 = load i32, i32* %mem_mode.addr, align 4, !dbg !10207
  call void @elimination_effects(%struct.rtx_def* %117, i32 %118), !dbg !10208
  br label %for.end389, !dbg !10209

sw.bb229:                                         ; preds = %entry
  %119 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10210
  store %struct.elim_table* %119, %struct.elim_table** %ep, align 8, !dbg !10212
  br label %for.cond230, !dbg !10213

for.cond230:                                      ; preds = %for.inc245, %sw.bb229
  %120 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10214
  %121 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10216
  %arrayidx231 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %121, i64 4, !dbg !10216
  %cmp232 = icmp ult %struct.elim_table* %120, %arrayidx231, !dbg !10217
  br i1 %cmp232, label %for.body234, label %for.end247, !dbg !10218

for.body234:                                      ; preds = %for.cond230
  %122 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10219
  %to_rtx235 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %122, i32 0, i32 9, !dbg !10221
  %123 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx235, align 8, !dbg !10221
  %124 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10222
  %u236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1, !dbg !10222
  %fld237 = bitcast %union.u* %u236 to [1 x %union.rtunion_def]*, !dbg !10222
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i64 0, i64 0, !dbg !10222
  %rt_rtx239 = bitcast %union.rtunion_def* %arrayidx238 to %struct.rtx_def**, !dbg !10222
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx239, align 8, !dbg !10222
  %cmp240 = icmp eq %struct.rtx_def* %123, %125, !dbg !10223
  br i1 %cmp240, label %if.then242, label %if.end244, !dbg !10224

if.then242:                                       ; preds = %for.body234
  %126 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10225
  %can_eliminate243 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %126, i32 0, i32 3, !dbg !10226
  store i32 0, i32* %can_eliminate243, align 8, !dbg !10227
  br label %if.end244, !dbg !10225

if.end244:                                        ; preds = %if.then242, %for.body234
  br label %for.inc245, !dbg !10222

for.inc245:                                       ; preds = %if.end244
  %127 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10228
  %incdec.ptr246 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %127, i32 1, !dbg !10228
  store %struct.elim_table* %incdec.ptr246, %struct.elim_table** %ep, align 8, !dbg !10228
  br label %for.cond230, !dbg !10229, !llvm.loop !10230

for.end247:                                       ; preds = %for.cond230
  %128 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10232
  %u248 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1, !dbg !10232
  %fld249 = bitcast %union.u* %u248 to [1 x %union.rtunion_def]*, !dbg !10232
  %arrayidx250 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld249, i64 0, i64 0, !dbg !10232
  %rt_rtx251 = bitcast %union.rtunion_def* %arrayidx250 to %struct.rtx_def**, !dbg !10232
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx251, align 8, !dbg !10232
  %130 = load i32, i32* %mem_mode.addr, align 4, !dbg !10233
  call void @elimination_effects(%struct.rtx_def* %129, i32 %130), !dbg !10234
  br label %for.end389, !dbg !10235

sw.bb252:                                         ; preds = %entry
  %131 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10236
  %u253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1, !dbg !10236
  %fld254 = bitcast %union.u* %u253 to [1 x %union.rtunion_def]*, !dbg !10236
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i64 0, i64 0, !dbg !10236
  %rt_rtx256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtx_def**, !dbg !10236
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx256, align 8, !dbg !10236
  %133 = bitcast %struct.rtx_def* %132 to i32*, !dbg !10236
  %bf.load257 = load i32, i32* %133, align 8, !dbg !10236
  %bf.clear258 = and i32 %bf.load257, 65535, !dbg !10236
  %cmp259 = icmp eq i32 %bf.clear258, 37, !dbg !10236
  br i1 %cmp259, label %if.then261, label %if.end327, !dbg !10238

if.then261:                                       ; preds = %sw.bb252
  %134 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10239
  store %struct.elim_table* %134, %struct.elim_table** %ep, align 8, !dbg !10242
  br label %for.cond262, !dbg !10243

for.cond262:                                      ; preds = %for.inc324, %if.then261
  %135 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10244
  %136 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10246
  %arrayidx263 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %136, i64 4, !dbg !10246
  %cmp264 = icmp ult %struct.elim_table* %135, %arrayidx263, !dbg !10247
  br i1 %cmp264, label %for.body266, label %for.end326, !dbg !10248

for.body266:                                      ; preds = %for.cond262
  %137 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10249
  %to_rtx267 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %137, i32 0, i32 9, !dbg !10251
  %138 = load %struct.rtx_def*, %struct.rtx_def** %to_rtx267, align 8, !dbg !10251
  %139 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10252
  %u268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1, !dbg !10252
  %fld269 = bitcast %union.u* %u268 to [1 x %union.rtunion_def]*, !dbg !10252
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i64 0, i64 0, !dbg !10252
  %rt_rtx271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtx_def**, !dbg !10252
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx271, align 8, !dbg !10252
  %cmp272 = icmp eq %struct.rtx_def* %138, %140, !dbg !10253
  br i1 %cmp272, label %land.lhs.true274, label %if.end323, !dbg !10254

land.lhs.true274:                                 ; preds = %for.body266
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10255
  %u275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1, !dbg !10255
  %fld276 = bitcast %union.u* %u275 to [1 x %union.rtunion_def]*, !dbg !10255
  %arrayidx277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld276, i64 0, i64 0, !dbg !10255
  %rt_rtx278 = bitcast %union.rtunion_def* %arrayidx277 to %struct.rtx_def**, !dbg !10255
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx278, align 8, !dbg !10255
  %143 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !10256
  %cmp279 = icmp ne %struct.rtx_def* %142, %143, !dbg !10257
  br i1 %cmp279, label %if.then281, label %if.end323, !dbg !10258

if.then281:                                       ; preds = %land.lhs.true274
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src, metadata !10259, metadata !DIExpression()), !dbg !10261
  %144 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10262
  %u282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1, !dbg !10262
  %fld283 = bitcast %union.u* %u282 to [1 x %union.rtunion_def]*, !dbg !10262
  %arrayidx284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i64 0, i64 1, !dbg !10262
  %rt_rtx285 = bitcast %union.rtunion_def* %arrayidx284 to %struct.rtx_def**, !dbg !10262
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx285, align 8, !dbg !10262
  store %struct.rtx_def* %145, %struct.rtx_def** %src, align 8, !dbg !10261
  %146 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !10263
  %147 = bitcast %struct.rtx_def* %146 to i32*, !dbg !10263
  %bf.load286 = load i32, i32* %147, align 8, !dbg !10263
  %bf.clear287 = and i32 %bf.load286, 65535, !dbg !10263
  %cmp288 = icmp eq i32 %bf.clear287, 49, !dbg !10265
  br i1 %cmp288, label %land.lhs.true290, label %if.else320, !dbg !10266

land.lhs.true290:                                 ; preds = %if.then281
  %148 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !10267
  %u291 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1, !dbg !10267
  %fld292 = bitcast %union.u* %u291 to [1 x %union.rtunion_def]*, !dbg !10267
  %arrayidx293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld292, i64 0, i64 0, !dbg !10267
  %rt_rtx294 = bitcast %union.rtunion_def* %arrayidx293 to %struct.rtx_def**, !dbg !10267
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx294, align 8, !dbg !10267
  %150 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10268
  %u295 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1, !dbg !10268
  %fld296 = bitcast %union.u* %u295 to [1 x %union.rtunion_def]*, !dbg !10268
  %arrayidx297 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld296, i64 0, i64 0, !dbg !10268
  %rt_rtx298 = bitcast %union.rtunion_def* %arrayidx297 to %struct.rtx_def**, !dbg !10268
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx298, align 8, !dbg !10268
  %cmp299 = icmp eq %struct.rtx_def* %149, %151, !dbg !10269
  br i1 %cmp299, label %land.lhs.true301, label %if.else320, !dbg !10270

land.lhs.true301:                                 ; preds = %land.lhs.true290
  %152 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !10271
  %u302 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1, !dbg !10271
  %fld303 = bitcast %union.u* %u302 to [1 x %union.rtunion_def]*, !dbg !10271
  %arrayidx304 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld303, i64 0, i64 1, !dbg !10271
  %rt_rtx305 = bitcast %union.rtunion_def* %arrayidx304 to %struct.rtx_def**, !dbg !10271
  %153 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx305, align 8, !dbg !10271
  %154 = bitcast %struct.rtx_def* %153 to i32*, !dbg !10271
  %bf.load306 = load i32, i32* %154, align 8, !dbg !10271
  %bf.clear307 = and i32 %bf.load306, 65535, !dbg !10271
  %cmp308 = icmp eq i32 %bf.clear307, 30, !dbg !10271
  br i1 %cmp308, label %if.then310, label %if.else320, !dbg !10272

if.then310:                                       ; preds = %land.lhs.true301
  %155 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !10273
  %u311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %155, i32 0, i32 1, !dbg !10273
  %fld312 = bitcast %union.u* %u311 to [1 x %union.rtunion_def]*, !dbg !10273
  %arrayidx313 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld312, i64 0, i64 1, !dbg !10273
  %rt_rtx314 = bitcast %union.rtunion_def* %arrayidx313 to %struct.rtx_def**, !dbg !10273
  %156 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx314, align 8, !dbg !10273
  %u315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1, !dbg !10273
  %hwint316 = bitcast %union.u* %u315 to [1 x i64]*, !dbg !10273
  %arrayidx317 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint316, i64 0, i64 0, !dbg !10273
  %157 = load i64, i64* %arrayidx317, align 8, !dbg !10273
  %158 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10274
  %offset318 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %158, i32 0, i32 5, !dbg !10275
  %159 = load i64, i64* %offset318, align 8, !dbg !10276
  %sub319 = sub nsw i64 %159, %157, !dbg !10276
  store i64 %sub319, i64* %offset318, align 8, !dbg !10276
  br label %if.end322, !dbg !10274

if.else320:                                       ; preds = %land.lhs.true301, %land.lhs.true290, %if.then281
  %160 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10277
  %can_eliminate321 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %160, i32 0, i32 3, !dbg !10278
  store i32 0, i32* %can_eliminate321, align 8, !dbg !10279
  br label %if.end322

if.end322:                                        ; preds = %if.else320, %if.then310
  br label %if.end323, !dbg !10280

if.end323:                                        ; preds = %if.end322, %land.lhs.true274, %for.body266
  br label %for.inc324, !dbg !10256

for.inc324:                                       ; preds = %if.end323
  %161 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10281
  %incdec.ptr325 = getelementptr inbounds %struct.elim_table, %struct.elim_table* %161, i32 1, !dbg !10281
  store %struct.elim_table* %incdec.ptr325, %struct.elim_table** %ep, align 8, !dbg !10281
  br label %for.cond262, !dbg !10282, !llvm.loop !10283

for.end326:                                       ; preds = %for.cond262
  br label %if.end327, !dbg !10285

if.end327:                                        ; preds = %for.end326, %sw.bb252
  %162 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10286
  %u328 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1, !dbg !10286
  %fld329 = bitcast %union.u* %u328 to [1 x %union.rtunion_def]*, !dbg !10286
  %arrayidx330 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld329, i64 0, i64 0, !dbg !10286
  %rt_rtx331 = bitcast %union.rtunion_def* %arrayidx330 to %struct.rtx_def**, !dbg !10286
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx331, align 8, !dbg !10286
  call void @elimination_effects(%struct.rtx_def* %163, i32 0), !dbg !10287
  %164 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10288
  %u332 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1, !dbg !10288
  %fld333 = bitcast %union.u* %u332 to [1 x %union.rtunion_def]*, !dbg !10288
  %arrayidx334 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld333, i64 0, i64 1, !dbg !10288
  %rt_rtx335 = bitcast %union.rtunion_def* %arrayidx334 to %struct.rtx_def**, !dbg !10288
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx335, align 8, !dbg !10288
  call void @elimination_effects(%struct.rtx_def* %165, i32 0), !dbg !10289
  br label %for.end389, !dbg !10290

sw.bb336:                                         ; preds = %entry
  %166 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10291
  %u337 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1, !dbg !10291
  %fld338 = bitcast %union.u* %u337 to [1 x %union.rtunion_def]*, !dbg !10291
  %arrayidx339 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld338, i64 0, i64 0, !dbg !10291
  %rt_rtx340 = bitcast %union.rtunion_def* %arrayidx339 to %struct.rtx_def**, !dbg !10291
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx340, align 8, !dbg !10291
  %168 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10292
  %169 = bitcast %struct.rtx_def* %168 to i32*, !dbg !10292
  %bf.load341 = load i32, i32* %169, align 8, !dbg !10292
  %bf.lshr342 = lshr i32 %bf.load341, 16, !dbg !10292
  %bf.clear343 = and i32 %bf.lshr342, 255, !dbg !10292
  call void @elimination_effects(%struct.rtx_def* %167, i32 %bf.clear343), !dbg !10293
  br label %for.end389, !dbg !10294

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !10295

sw.epilog:                                        ; preds = %sw.default, %if.then151
  %170 = load i32, i32* %code, align 4, !dbg !10296
  %idxprom344 = sext i32 %170 to i64, !dbg !10296
  %arrayidx345 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom344, !dbg !10296
  %171 = load i8*, i8** %arrayidx345, align 8, !dbg !10296
  store i8* %171, i8** %fmt, align 8, !dbg !10297
  store i32 0, i32* %i, align 4, !dbg !10298
  br label %for.cond346, !dbg !10300

for.cond346:                                      ; preds = %for.inc386, %sw.epilog
  %172 = load i32, i32* %i, align 4, !dbg !10301
  %173 = load i32, i32* %code, align 4, !dbg !10303
  %idxprom347 = sext i32 %173 to i64, !dbg !10303
  %arrayidx348 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom347, !dbg !10303
  %174 = load i8, i8* %arrayidx348, align 1, !dbg !10303
  %conv349 = zext i8 %174 to i32, !dbg !10303
  %cmp350 = icmp slt i32 %172, %conv349, !dbg !10304
  br i1 %cmp350, label %for.body352, label %for.end389, !dbg !10305

for.body352:                                      ; preds = %for.cond346
  %175 = load i8*, i8** %fmt, align 8, !dbg !10306
  %176 = load i8, i8* %175, align 1, !dbg !10309
  %conv353 = sext i8 %176 to i32, !dbg !10309
  %cmp354 = icmp eq i32 %conv353, 101, !dbg !10310
  br i1 %cmp354, label %if.then356, label %if.else362, !dbg !10311

if.then356:                                       ; preds = %for.body352
  %177 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10312
  %u357 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1, !dbg !10312
  %fld358 = bitcast %union.u* %u357 to [1 x %union.rtunion_def]*, !dbg !10312
  %178 = load i32, i32* %i, align 4, !dbg !10312
  %idxprom359 = sext i32 %178 to i64, !dbg !10312
  %arrayidx360 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld358, i64 0, i64 %idxprom359, !dbg !10312
  %rt_rtx361 = bitcast %union.rtunion_def* %arrayidx360 to %struct.rtx_def**, !dbg !10312
  %179 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx361, align 8, !dbg !10312
  %180 = load i32, i32* %mem_mode.addr, align 4, !dbg !10313
  call void @elimination_effects(%struct.rtx_def* %179, i32 %180), !dbg !10314
  br label %if.end385, !dbg !10314

if.else362:                                       ; preds = %for.body352
  %181 = load i8*, i8** %fmt, align 8, !dbg !10315
  %182 = load i8, i8* %181, align 1, !dbg !10317
  %conv363 = sext i8 %182 to i32, !dbg !10317
  %cmp364 = icmp eq i32 %conv363, 69, !dbg !10318
  br i1 %cmp364, label %if.then366, label %if.end384, !dbg !10319

if.then366:                                       ; preds = %if.else362
  store i32 0, i32* %j, align 4, !dbg !10320
  br label %for.cond367, !dbg !10322

for.cond367:                                      ; preds = %for.inc382, %if.then366
  %183 = load i32, i32* %j, align 4, !dbg !10323
  %184 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10325
  %u368 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1, !dbg !10325
  %fld369 = bitcast %union.u* %u368 to [1 x %union.rtunion_def]*, !dbg !10325
  %185 = load i32, i32* %i, align 4, !dbg !10325
  %idxprom370 = sext i32 %185 to i64, !dbg !10325
  %arrayidx371 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld369, i64 0, i64 %idxprom370, !dbg !10325
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx371 to %struct.rtvec_def**, !dbg !10325
  %186 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !10325
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %186, i32 0, i32 0, !dbg !10325
  %187 = load i32, i32* %num_elem, align 8, !dbg !10325
  %cmp372 = icmp slt i32 %183, %187, !dbg !10326
  br i1 %cmp372, label %for.body374, label %for.end383, !dbg !10327

for.body374:                                      ; preds = %for.cond367
  %188 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10328
  %u375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1, !dbg !10328
  %fld376 = bitcast %union.u* %u375 to [1 x %union.rtunion_def]*, !dbg !10328
  %189 = load i32, i32* %i, align 4, !dbg !10328
  %idxprom377 = sext i32 %189 to i64, !dbg !10328
  %arrayidx378 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld376, i64 0, i64 %idxprom377, !dbg !10328
  %rt_rtvec379 = bitcast %union.rtunion_def* %arrayidx378 to %struct.rtvec_def**, !dbg !10328
  %190 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec379, align 8, !dbg !10328
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %190, i32 0, i32 1, !dbg !10328
  %191 = load i32, i32* %j, align 4, !dbg !10328
  %idxprom380 = sext i32 %191 to i64, !dbg !10328
  %arrayidx381 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom380, !dbg !10328
  %192 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx381, align 8, !dbg !10328
  %193 = load i32, i32* %mem_mode.addr, align 4, !dbg !10329
  call void @elimination_effects(%struct.rtx_def* %192, i32 %193), !dbg !10330
  br label %for.inc382, !dbg !10330

for.inc382:                                       ; preds = %for.body374
  %194 = load i32, i32* %j, align 4, !dbg !10331
  %inc = add nsw i32 %194, 1, !dbg !10331
  store i32 %inc, i32* %j, align 4, !dbg !10331
  br label %for.cond367, !dbg !10332, !llvm.loop !10333

for.end383:                                       ; preds = %for.cond367
  br label %if.end384, !dbg !10334

if.end384:                                        ; preds = %for.end383, %if.else362
  br label %if.end385

if.end385:                                        ; preds = %if.end384, %if.then356
  br label %for.inc386, !dbg !10335

for.inc386:                                       ; preds = %if.end385
  %195 = load i32, i32* %i, align 4, !dbg !10336
  %inc387 = add nsw i32 %195, 1, !dbg !10336
  store i32 %inc387, i32* %i, align 4, !dbg !10336
  %196 = load i8*, i8** %fmt, align 8, !dbg !10337
  %incdec.ptr388 = getelementptr inbounds i8, i8* %196, i32 1, !dbg !10337
  store i8* %incdec.ptr388, i8** %fmt, align 8, !dbg !10337
  br label %for.cond346, !dbg !10338, !llvm.loop !10339

for.end389:                                       ; preds = %sw.bb, %if.end, %if.end26, %sw.bb153, %if.then200, %if.end201, %for.end224, %for.end247, %if.end327, %sw.bb336, %for.cond346
  ret void, !dbg !10341
}

declare dso_local %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_clobber(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @check_eliminable_occurrences(%struct.rtx_def* %x) #0 !dbg !10342 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %ep = alloca %struct.elim_table*, align 8
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !10343, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !10345, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10347, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.declare(metadata i32* %code, metadata !10349, metadata !DIExpression()), !dbg !10350
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10351
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !10353
  br i1 %cmp, label %if.then, label %if.end, !dbg !10354

if.then:                                          ; preds = %entry
  br label %for.end48, !dbg !10355

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10356
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !10356
  %bf.load = load i32, i32* %2, align 8, !dbg !10356
  %bf.clear = and i32 %bf.load, 65535, !dbg !10356
  store i32 %bf.clear, i32* %code, align 4, !dbg !10357
  %3 = load i32, i32* %code, align 4, !dbg !10358
  %cmp1 = icmp eq i32 %3, 37, !dbg !10360
  br i1 %cmp1, label %land.lhs.true, label %if.end8, !dbg !10361

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10362
  %call = call i32 @rhs_regno(%struct.rtx_def* %4), !dbg !10362
  %cmp2 = icmp ult i32 %call, 53, !dbg !10363
  br i1 %cmp2, label %if.then3, label %if.end8, !dbg !10364

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.elim_table** %ep, metadata !10365, metadata !DIExpression()), !dbg !10367
  %5 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10368
  store %struct.elim_table* %5, %struct.elim_table** %ep, align 8, !dbg !10370
  br label %for.cond, !dbg !10371

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10372
  %7 = load %struct.elim_table*, %struct.elim_table** @reg_eliminate, align 8, !dbg !10374
  %arrayidx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %7, i64 4, !dbg !10374
  %cmp4 = icmp ult %struct.elim_table* %6, %arrayidx, !dbg !10375
  br i1 %cmp4, label %for.body, label %for.end, !dbg !10376

for.body:                                         ; preds = %for.cond
  %8 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10377
  %from_rtx = getelementptr inbounds %struct.elim_table, %struct.elim_table* %8, i32 0, i32 8, !dbg !10379
  %9 = load %struct.rtx_def*, %struct.rtx_def** %from_rtx, align 8, !dbg !10379
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10380
  %cmp5 = icmp eq %struct.rtx_def* %9, %10, !dbg !10381
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10382

if.then6:                                         ; preds = %for.body
  %11 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10383
  %can_eliminate = getelementptr inbounds %struct.elim_table, %struct.elim_table* %11, i32 0, i32 3, !dbg !10384
  store i32 0, i32* %can_eliminate, align 8, !dbg !10385
  br label %if.end7, !dbg !10383

if.end7:                                          ; preds = %if.then6, %for.body
  br label %for.inc, !dbg !10380

for.inc:                                          ; preds = %if.end7
  %12 = load %struct.elim_table*, %struct.elim_table** %ep, align 8, !dbg !10386
  %incdec.ptr = getelementptr inbounds %struct.elim_table, %struct.elim_table* %12, i32 1, !dbg !10386
  store %struct.elim_table* %incdec.ptr, %struct.elim_table** %ep, align 8, !dbg !10386
  br label %for.cond, !dbg !10387, !llvm.loop !10388

for.end:                                          ; preds = %for.cond
  br label %for.end48, !dbg !10390

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %13 = load i32, i32* %code, align 4, !dbg !10391
  %idxprom = sext i32 %13 to i64, !dbg !10391
  %arrayidx9 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !10391
  %14 = load i8*, i8** %arrayidx9, align 8, !dbg !10391
  store i8* %14, i8** %fmt, align 8, !dbg !10392
  store i32 0, i32* %i, align 4, !dbg !10393
  br label %for.cond10, !dbg !10395

for.cond10:                                       ; preds = %for.inc45, %if.end8
  %15 = load i32, i32* %i, align 4, !dbg !10396
  %16 = load i32, i32* %code, align 4, !dbg !10398
  %idxprom11 = sext i32 %16 to i64, !dbg !10398
  %arrayidx12 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom11, !dbg !10398
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !10398
  %conv = zext i8 %17 to i32, !dbg !10398
  %cmp13 = icmp slt i32 %15, %conv, !dbg !10399
  br i1 %cmp13, label %for.body15, label %for.end48, !dbg !10400

for.body15:                                       ; preds = %for.cond10
  %18 = load i8*, i8** %fmt, align 8, !dbg !10401
  %19 = load i8, i8* %18, align 1, !dbg !10404
  %conv16 = sext i8 %19 to i32, !dbg !10404
  %cmp17 = icmp eq i32 %conv16, 101, !dbg !10405
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !10406

if.then19:                                        ; preds = %for.body15
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10407
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !10407
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !10407
  %21 = load i32, i32* %i, align 4, !dbg !10407
  %idxprom20 = sext i32 %21 to i64, !dbg !10407
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom20, !dbg !10407
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !10407
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10407
  call void @check_eliminable_occurrences(%struct.rtx_def* %22), !dbg !10408
  br label %if.end44, !dbg !10408

if.else:                                          ; preds = %for.body15
  %23 = load i8*, i8** %fmt, align 8, !dbg !10409
  %24 = load i8, i8* %23, align 1, !dbg !10411
  %conv22 = sext i8 %24 to i32, !dbg !10411
  %cmp23 = icmp eq i32 %conv22, 69, !dbg !10412
  br i1 %cmp23, label %if.then25, label %if.end43, !dbg !10413

if.then25:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10414, metadata !DIExpression()), !dbg !10416
  store i32 0, i32* %j, align 4, !dbg !10417
  br label %for.cond26, !dbg !10419

for.cond26:                                       ; preds = %for.inc41, %if.then25
  %25 = load i32, i32* %j, align 4, !dbg !10420
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10422
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !10422
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !10422
  %27 = load i32, i32* %i, align 4, !dbg !10422
  %idxprom29 = sext i32 %27 to i64, !dbg !10422
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 %idxprom29, !dbg !10422
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtvec_def**, !dbg !10422
  %28 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !10422
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %28, i32 0, i32 0, !dbg !10422
  %29 = load i32, i32* %num_elem, align 8, !dbg !10422
  %cmp31 = icmp slt i32 %25, %29, !dbg !10423
  br i1 %cmp31, label %for.body33, label %for.end42, !dbg !10424

for.body33:                                       ; preds = %for.cond26
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10425
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !10425
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !10425
  %31 = load i32, i32* %i, align 4, !dbg !10425
  %idxprom36 = sext i32 %31 to i64, !dbg !10425
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 %idxprom36, !dbg !10425
  %rt_rtvec38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtvec_def**, !dbg !10425
  %32 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec38, align 8, !dbg !10425
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %32, i32 0, i32 1, !dbg !10425
  %33 = load i32, i32* %j, align 4, !dbg !10425
  %idxprom39 = sext i32 %33 to i64, !dbg !10425
  %arrayidx40 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom39, !dbg !10425
  %34 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx40, align 8, !dbg !10425
  call void @check_eliminable_occurrences(%struct.rtx_def* %34), !dbg !10426
  br label %for.inc41, !dbg !10426

for.inc41:                                        ; preds = %for.body33
  %35 = load i32, i32* %j, align 4, !dbg !10427
  %inc = add nsw i32 %35, 1, !dbg !10427
  store i32 %inc, i32* %j, align 4, !dbg !10427
  br label %for.cond26, !dbg !10428, !llvm.loop !10429

for.end42:                                        ; preds = %for.cond26
  br label %if.end43, !dbg !10431

if.end43:                                         ; preds = %for.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then19
  br label %for.inc45, !dbg !10432

for.inc45:                                        ; preds = %if.end44
  %36 = load i32, i32* %i, align 4, !dbg !10433
  %inc46 = add nsw i32 %36, 1, !dbg !10433
  store i32 %inc46, i32* %i, align 4, !dbg !10433
  %37 = load i8*, i8** %fmt, align 8, !dbg !10434
  %incdec.ptr47 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !10434
  store i8* %incdec.ptr47, i8** %fmt, align 8, !dbg !10434
  br label %for.cond10, !dbg !10435, !llvm.loop !10436

for.end48:                                        ; preds = %if.then, %for.end, %for.cond10
  ret void, !dbg !10438
}

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @find_reload_regs(%struct.insn_chain* %chain) #0 !dbg !10439 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %i = alloca i32, align 4
  %regno = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain.addr, metadata !10440, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10442, metadata !DIExpression()), !dbg !10443
  store i32 0, i32* %i, align 4, !dbg !10444
  br label %for.cond, !dbg !10446

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10447
  %1 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10449
  %n_reloads = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %1, i32 0, i32 9, !dbg !10450
  %2 = load i32, i32* %n_reloads, align 8, !dbg !10450
  %cmp = icmp slt i32 %0, %2, !dbg !10451
  br i1 %cmp, label %for.body, label %for.end, !dbg !10452

for.body:                                         ; preds = %for.cond
  %3 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10453
  %rld = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %3, i32 0, i32 8, !dbg !10456
  %4 = load %struct.reload*, %struct.reload** %rld, align 8, !dbg !10456
  %5 = load i32, i32* %i, align 4, !dbg !10457
  %idxprom = sext i32 %5 to i64, !dbg !10453
  %arrayidx = getelementptr inbounds %struct.reload, %struct.reload* %4, i64 %idxprom, !dbg !10453
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 11, !dbg !10458
  %6 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !10458
  %tobool = icmp ne %struct.rtx_def* %6, null, !dbg !10453
  br i1 %tobool, label %if.then, label %if.else, !dbg !10459

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !10460, metadata !DIExpression()), !dbg !10462
  %7 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10463
  %rld1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %7, i32 0, i32 8, !dbg !10463
  %8 = load %struct.reload*, %struct.reload** %rld1, align 8, !dbg !10463
  %9 = load i32, i32* %i, align 4, !dbg !10463
  %idxprom2 = sext i32 %9 to i64, !dbg !10463
  %arrayidx3 = getelementptr inbounds %struct.reload, %struct.reload* %8, i64 %idxprom2, !dbg !10463
  %reg_rtx4 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3, i32 0, i32 11, !dbg !10463
  %10 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx4, align 8, !dbg !10463
  %call = call i32 @rhs_regno(%struct.rtx_def* %10), !dbg !10463
  store i32 %call, i32* %regno, align 4, !dbg !10462
  %11 = load i32, i32* %regno, align 4, !dbg !10464
  %12 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10465
  %rld5 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %12, i32 0, i32 8, !dbg !10466
  %13 = load %struct.reload*, %struct.reload** %rld5, align 8, !dbg !10466
  %14 = load i32, i32* %i, align 4, !dbg !10467
  %idxprom6 = sext i32 %14 to i64, !dbg !10465
  %arrayidx7 = getelementptr inbounds %struct.reload, %struct.reload* %13, i64 %idxprom6, !dbg !10465
  %regno8 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx7, i32 0, i32 10, !dbg !10468
  store i32 %11, i32* %regno8, align 8, !dbg !10469
  %15 = load i32, i32* %regno, align 4, !dbg !10470
  %idxprom9 = sext i32 %15 to i64, !dbg !10471
  %arrayidx10 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom9, !dbg !10471
  %16 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10472
  %rld11 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %16, i32 0, i32 8, !dbg !10472
  %17 = load %struct.reload*, %struct.reload** %rld11, align 8, !dbg !10472
  %18 = load i32, i32* %i, align 4, !dbg !10472
  %idxprom12 = sext i32 %18 to i64, !dbg !10472
  %arrayidx13 = getelementptr inbounds %struct.reload, %struct.reload* %17, i64 %idxprom12, !dbg !10472
  %reg_rtx14 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx13, i32 0, i32 11, !dbg !10472
  %19 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx14, align 8, !dbg !10472
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !10472
  %bf.load = load i32, i32* %20, align 8, !dbg !10472
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10472
  %bf.clear = and i32 %bf.lshr, 255, !dbg !10472
  %idxprom15 = zext i32 %bf.clear to i64, !dbg !10471
  %arrayidx16 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx10, i64 0, i64 %idxprom15, !dbg !10471
  %21 = load i8, i8* %arrayidx16, align 1, !dbg !10471
  %conv = zext i8 %21 to i32, !dbg !10471
  %22 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10473
  %rld17 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %22, i32 0, i32 8, !dbg !10474
  %23 = load %struct.reload*, %struct.reload** %rld17, align 8, !dbg !10474
  %24 = load i32, i32* %i, align 4, !dbg !10475
  %idxprom18 = sext i32 %24 to i64, !dbg !10473
  %arrayidx19 = getelementptr inbounds %struct.reload, %struct.reload* %23, i64 %idxprom18, !dbg !10473
  %nregs = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx19, i32 0, i32 6, !dbg !10476
  store i32 %conv, i32* %nregs, align 8, !dbg !10477
  br label %if.end, !dbg !10478

if.else:                                          ; preds = %for.body
  %25 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10479
  %rld20 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %25, i32 0, i32 8, !dbg !10480
  %26 = load %struct.reload*, %struct.reload** %rld20, align 8, !dbg !10480
  %27 = load i32, i32* %i, align 4, !dbg !10481
  %idxprom21 = sext i32 %27 to i64, !dbg !10479
  %arrayidx22 = getelementptr inbounds %struct.reload, %struct.reload* %26, i64 %idxprom21, !dbg !10479
  %regno23 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx22, i32 0, i32 10, !dbg !10482
  store i32 -1, i32* %regno23, align 8, !dbg !10483
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %28 = load i32, i32* %i, align 4, !dbg !10484
  %conv24 = trunc i32 %28 to i16, !dbg !10484
  %29 = load i32, i32* %i, align 4, !dbg !10485
  %idxprom25 = sext i32 %29 to i64, !dbg !10486
  %arrayidx26 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i64 0, i64 %idxprom25, !dbg !10486
  store i16 %conv24, i16* %arrayidx26, align 2, !dbg !10487
  br label %for.inc, !dbg !10488

for.inc:                                          ; preds = %if.end
  %30 = load i32, i32* %i, align 4, !dbg !10489
  %inc = add nsw i32 %30, 1, !dbg !10489
  store i32 %inc, i32* %i, align 4, !dbg !10489
  br label %for.cond, !dbg !10490, !llvm.loop !10491

for.end:                                          ; preds = %for.cond
  %31 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10493
  %n_reloads27 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %31, i32 0, i32 9, !dbg !10494
  %32 = load i32, i32* %n_reloads27, align 8, !dbg !10494
  store i32 %32, i32* @n_reloads, align 4, !dbg !10495
  %33 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10496
  %rld28 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %33, i32 0, i32 8, !dbg !10497
  %34 = load %struct.reload*, %struct.reload** %rld28, align 8, !dbg !10497
  %35 = bitcast %struct.reload* %34 to i8*, !dbg !10498
  %36 = load i32, i32* @n_reloads, align 4, !dbg !10499
  %conv29 = sext i32 %36 to i64, !dbg !10499
  %mul = mul i64 %conv29, 104, !dbg !10500
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([180 x %struct.reload]* @rld to i8*), i8* align 8 %35, i64 %mul, i1 false), !dbg !10498
  store i64 0, i64* @used_spill_regs_local, align 8, !dbg !10501
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !10502
  %tobool30 = icmp ne %struct._IO_FILE* %37, null, !dbg !10502
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !10504

if.then31:                                        ; preds = %for.end
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !10505
  %39 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10506
  %insn = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %39, i32 0, i32 3, !dbg !10506
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10506
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !10506
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !10506
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !10506
  %rt_int = bitcast %union.rtunion_def* %arrayidx32 to i32*, !dbg !10506
  %41 = load i32, i32* %rt_int, align 8, !dbg !10506
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 %41), !dbg !10507
  br label %if.end34, !dbg !10507

if.end34:                                         ; preds = %if.then31, %for.end
  %42 = load i32, i32* @n_reloads, align 4, !dbg !10508
  %conv35 = sext i32 %42 to i64, !dbg !10508
  call void @spec_qsort(i8* bitcast ([180 x i16]* @reload_order to i8*), i64 %conv35, i64 2, i32 (i8*, i8*)* @reload_reg_class_lower), !dbg !10509
  %43 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10510
  call void @order_regs_for_reload(%struct.insn_chain* %43), !dbg !10511
  store i32 0, i32* %i, align 4, !dbg !10512
  br label %for.cond36, !dbg !10514

for.cond36:                                       ; preds = %for.inc83, %if.end34
  %44 = load i32, i32* %i, align 4, !dbg !10515
  %45 = load i32, i32* @n_reloads, align 4, !dbg !10517
  %cmp37 = icmp slt i32 %44, %45, !dbg !10518
  br i1 %cmp37, label %for.body39, label %for.end85, !dbg !10519

for.body39:                                       ; preds = %for.cond36
  call void @llvm.dbg.declare(metadata i32* %r, metadata !10520, metadata !DIExpression()), !dbg !10522
  %46 = load i32, i32* %i, align 4, !dbg !10523
  %idxprom40 = sext i32 %46 to i64, !dbg !10524
  %arrayidx41 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i64 0, i64 %idxprom40, !dbg !10524
  %47 = load i16, i16* %arrayidx41, align 2, !dbg !10524
  %conv42 = sext i16 %47 to i32, !dbg !10524
  store i32 %conv42, i32* %r, align 4, !dbg !10522
  %48 = load i32, i32* %r, align 4, !dbg !10525
  %idxprom43 = sext i32 %48 to i64, !dbg !10527
  %arrayidx44 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom43, !dbg !10527
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx44, i32 0, i32 1, !dbg !10528
  %49 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !10528
  %cmp45 = icmp ne %struct.rtx_def* %49, null, !dbg !10529
  br i1 %cmp45, label %land.lhs.true, label %lor.lhs.false, !dbg !10530

lor.lhs.false:                                    ; preds = %for.body39
  %50 = load i32, i32* %r, align 4, !dbg !10531
  %idxprom47 = sext i32 %50 to i64, !dbg !10532
  %arrayidx48 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom47, !dbg !10532
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx48, i32 0, i32 0, !dbg !10533
  %51 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !10533
  %cmp49 = icmp ne %struct.rtx_def* %51, null, !dbg !10534
  br i1 %cmp49, label %land.lhs.true, label %lor.lhs.false51, !dbg !10535

lor.lhs.false51:                                  ; preds = %lor.lhs.false
  %52 = load i32, i32* %r, align 4, !dbg !10536
  %idxprom52 = sext i32 %52 to i64, !dbg !10537
  %arrayidx53 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom52, !dbg !10537
  %secondary_p = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx53, i32 0, i32 18, !dbg !10538
  %bf.load54 = load i8, i8* %secondary_p, align 8, !dbg !10538
  %bf.lshr55 = lshr i8 %bf.load54, 2, !dbg !10538
  %bf.clear56 = and i8 %bf.lshr55, 1, !dbg !10538
  %bf.cast = zext i8 %bf.clear56 to i32, !dbg !10538
  %tobool57 = icmp ne i32 %bf.cast, 0, !dbg !10537
  br i1 %tobool57, label %land.lhs.true, label %if.end82, !dbg !10539

land.lhs.true:                                    ; preds = %lor.lhs.false51, %lor.lhs.false, %for.body39
  %53 = load i32, i32* %r, align 4, !dbg !10540
  %idxprom58 = sext i32 %53 to i64, !dbg !10541
  %arrayidx59 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom58, !dbg !10541
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx59, i32 0, i32 18, !dbg !10542
  %bf.load60 = load i8, i8* %optional, align 8, !dbg !10542
  %bf.clear61 = and i8 %bf.load60, 1, !dbg !10542
  %bf.cast62 = zext i8 %bf.clear61 to i32, !dbg !10542
  %tobool63 = icmp ne i32 %bf.cast62, 0, !dbg !10541
  br i1 %tobool63, label %if.end82, label %land.lhs.true64, !dbg !10543

land.lhs.true64:                                  ; preds = %land.lhs.true
  %54 = load i32, i32* %r, align 4, !dbg !10544
  %idxprom65 = sext i32 %54 to i64, !dbg !10545
  %arrayidx66 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom65, !dbg !10545
  %regno67 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx66, i32 0, i32 10, !dbg !10546
  %55 = load i32, i32* %regno67, align 8, !dbg !10546
  %cmp68 = icmp eq i32 %55, -1, !dbg !10547
  br i1 %cmp68, label %if.then70, label %if.end82, !dbg !10548

if.then70:                                        ; preds = %land.lhs.true64
  %56 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10549
  %57 = load i32, i32* %i, align 4, !dbg !10551
  %call71 = call i32 @find_reg(%struct.insn_chain* %56, i32 %57), !dbg !10552
  %tobool72 = icmp ne i32 %call71, 0, !dbg !10552
  br i1 %tobool72, label %if.end81, label %if.then73, !dbg !10553

if.then73:                                        ; preds = %if.then70
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !10554
  %tobool74 = icmp ne %struct._IO_FILE* %58, null, !dbg !10554
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !10557

if.then75:                                        ; preds = %if.then73
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !10558
  %60 = load i32, i32* %r, align 4, !dbg !10559
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0), i32 %60), !dbg !10560
  br label %if.end77, !dbg !10560

if.end77:                                         ; preds = %if.then75, %if.then73
  %61 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10561
  %insn78 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %61, i32 0, i32 3, !dbg !10562
  %62 = load %struct.rtx_def*, %struct.rtx_def** %insn78, align 8, !dbg !10562
  %63 = load i32, i32* %r, align 4, !dbg !10563
  %idxprom79 = sext i32 %63 to i64, !dbg !10564
  %arrayidx80 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom79, !dbg !10564
  %rclass = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx80, i32 0, i32 2, !dbg !10565
  %64 = load i32, i32* %rclass, align 8, !dbg !10565
  call void @spill_failure(%struct.rtx_def* %62, i32 %64), !dbg !10566
  store i32 1, i32* @failure, align 4, !dbg !10567
  br label %return, !dbg !10568

if.end81:                                         ; preds = %if.then70
  br label %if.end82, !dbg !10569

if.end82:                                         ; preds = %if.end81, %land.lhs.true64, %land.lhs.true, %lor.lhs.false51
  br label %for.inc83, !dbg !10570

for.inc83:                                        ; preds = %if.end82
  %65 = load i32, i32* %i, align 4, !dbg !10571
  %inc84 = add nsw i32 %65, 1, !dbg !10571
  store i32 %inc84, i32* %i, align 4, !dbg !10571
  br label %for.cond36, !dbg !10572, !llvm.loop !10573

for.end85:                                        ; preds = %for.cond36
  %66 = load i64, i64* @used_spill_regs_local, align 8, !dbg !10575
  %67 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10575
  %used_spill_regs = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %67, i32 0, i32 10, !dbg !10575
  store i64 %66, i64* %used_spill_regs, align 8, !dbg !10575
  %68 = load i64, i64* @used_spill_regs_local, align 8, !dbg !10576
  %69 = load i64, i64* @used_spill_regs, align 8, !dbg !10576
  %or = or i64 %69, %68, !dbg !10576
  store i64 %or, i64* @used_spill_regs, align 8, !dbg !10576
  %70 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10577
  %rld86 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %70, i32 0, i32 8, !dbg !10578
  %71 = load %struct.reload*, %struct.reload** %rld86, align 8, !dbg !10578
  %72 = bitcast %struct.reload* %71 to i8*, !dbg !10579
  %73 = load i32, i32* @n_reloads, align 4, !dbg !10580
  %conv87 = sext i32 %73 to i64, !dbg !10580
  %mul88 = mul i64 %conv87, 104, !dbg !10581
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 16 bitcast ([180 x %struct.reload]* @rld to i8*), i64 %mul88, i1 false), !dbg !10579
  br label %return, !dbg !10582

return:                                           ; preds = %for.end85, %if.end77
  ret void, !dbg !10582
}

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @reload_reg_class_lower(i8* %r1p, i8* %r2p) #0 !dbg !10583 {
entry:
  %retval = alloca i32, align 4
  %r1p.addr = alloca i8*, align 8
  %r2p.addr = alloca i8*, align 8
  %r1 = alloca i32, align 4
  %r2 = alloca i32, align 4
  %t = alloca i32, align 4
  store i8* %r1p, i8** %r1p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r1p.addr, metadata !10584, metadata !DIExpression()), !dbg !10585
  store i8* %r2p, i8** %r2p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r2p.addr, metadata !10586, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.declare(metadata i32* %r1, metadata !10588, metadata !DIExpression()), !dbg !10589
  %0 = load i8*, i8** %r1p.addr, align 8, !dbg !10590
  %1 = bitcast i8* %0 to i16*, !dbg !10591
  %2 = load i16, i16* %1, align 2, !dbg !10592
  %conv = sext i16 %2 to i32, !dbg !10592
  store i32 %conv, i32* %r1, align 4, !dbg !10589
  call void @llvm.dbg.declare(metadata i32* %r2, metadata !10593, metadata !DIExpression()), !dbg !10594
  %3 = load i8*, i8** %r2p.addr, align 8, !dbg !10595
  %4 = bitcast i8* %3 to i16*, !dbg !10596
  %5 = load i16, i16* %4, align 2, !dbg !10597
  %conv1 = sext i16 %5 to i32, !dbg !10597
  store i32 %conv1, i32* %r2, align 4, !dbg !10594
  call void @llvm.dbg.declare(metadata i32* %t, metadata !10598, metadata !DIExpression()), !dbg !10599
  %6 = load i32, i32* %r1, align 4, !dbg !10600
  %idxprom = sext i32 %6 to i64, !dbg !10601
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom, !dbg !10601
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 18, !dbg !10602
  %bf.load = load i8, i8* %optional, align 8, !dbg !10602
  %bf.clear = and i8 %bf.load, 1, !dbg !10602
  %bf.cast = zext i8 %bf.clear to i32, !dbg !10602
  %7 = load i32, i32* %r2, align 4, !dbg !10603
  %idxprom2 = sext i32 %7 to i64, !dbg !10604
  %arrayidx3 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom2, !dbg !10604
  %optional4 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3, i32 0, i32 18, !dbg !10605
  %bf.load5 = load i8, i8* %optional4, align 8, !dbg !10605
  %bf.clear6 = and i8 %bf.load5, 1, !dbg !10605
  %bf.cast7 = zext i8 %bf.clear6 to i32, !dbg !10605
  %sub = sub nsw i32 %bf.cast, %bf.cast7, !dbg !10606
  store i32 %sub, i32* %t, align 4, !dbg !10607
  %8 = load i32, i32* %t, align 4, !dbg !10608
  %cmp = icmp ne i32 %8, 0, !dbg !10610
  br i1 %cmp, label %if.then, label %if.end, !dbg !10611

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %t, align 4, !dbg !10612
  store i32 %9, i32* %retval, align 4, !dbg !10613
  br label %return, !dbg !10613

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %r2, align 4, !dbg !10614
  %idxprom9 = sext i32 %10 to i64, !dbg !10615
  %arrayidx10 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom9, !dbg !10615
  %rclass = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx10, i32 0, i32 2, !dbg !10616
  %11 = load i32, i32* %rclass, align 8, !dbg !10616
  %idxprom11 = sext i32 %11 to i64, !dbg !10617
  %arrayidx12 = getelementptr inbounds [27 x i32], [27 x i32]* @reg_class_size, i64 0, i64 %idxprom11, !dbg !10617
  %12 = load i32, i32* %arrayidx12, align 4, !dbg !10617
  %cmp13 = icmp eq i32 %12, 1, !dbg !10618
  %conv14 = zext i1 %cmp13 to i32, !dbg !10618
  %13 = load i32, i32* %r1, align 4, !dbg !10619
  %idxprom15 = sext i32 %13 to i64, !dbg !10620
  %arrayidx16 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom15, !dbg !10620
  %rclass17 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx16, i32 0, i32 2, !dbg !10621
  %14 = load i32, i32* %rclass17, align 8, !dbg !10621
  %idxprom18 = sext i32 %14 to i64, !dbg !10622
  %arrayidx19 = getelementptr inbounds [27 x i32], [27 x i32]* @reg_class_size, i64 0, i64 %idxprom18, !dbg !10622
  %15 = load i32, i32* %arrayidx19, align 4, !dbg !10622
  %cmp20 = icmp eq i32 %15, 1, !dbg !10623
  %conv21 = zext i1 %cmp20 to i32, !dbg !10623
  %sub22 = sub nsw i32 %conv14, %conv21, !dbg !10624
  store i32 %sub22, i32* %t, align 4, !dbg !10625
  %16 = load i32, i32* %t, align 4, !dbg !10626
  %cmp23 = icmp ne i32 %16, 0, !dbg !10628
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !10629

if.then25:                                        ; preds = %if.end
  %17 = load i32, i32* %t, align 4, !dbg !10630
  store i32 %17, i32* %retval, align 4, !dbg !10631
  br label %return, !dbg !10631

if.end26:                                         ; preds = %if.end
  %18 = load i32, i32* %r2, align 4, !dbg !10632
  %idxprom27 = sext i32 %18 to i64, !dbg !10633
  %arrayidx28 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom27, !dbg !10633
  %nregs = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx28, i32 0, i32 6, !dbg !10634
  %19 = load i32, i32* %nregs, align 8, !dbg !10634
  %20 = load i32, i32* %r1, align 4, !dbg !10635
  %idxprom29 = sext i32 %20 to i64, !dbg !10636
  %arrayidx30 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom29, !dbg !10636
  %nregs31 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx30, i32 0, i32 6, !dbg !10637
  %21 = load i32, i32* %nregs31, align 8, !dbg !10637
  %sub32 = sub i32 %19, %21, !dbg !10638
  store i32 %sub32, i32* %t, align 4, !dbg !10639
  %22 = load i32, i32* %t, align 4, !dbg !10640
  %cmp33 = icmp ne i32 %22, 0, !dbg !10642
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !10643

if.then35:                                        ; preds = %if.end26
  %23 = load i32, i32* %t, align 4, !dbg !10644
  store i32 %23, i32* %retval, align 4, !dbg !10645
  br label %return, !dbg !10645

if.end36:                                         ; preds = %if.end26
  %24 = load i32, i32* %r1, align 4, !dbg !10646
  %idxprom37 = sext i32 %24 to i64, !dbg !10647
  %arrayidx38 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom37, !dbg !10647
  %rclass39 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx38, i32 0, i32 2, !dbg !10648
  %25 = load i32, i32* %rclass39, align 8, !dbg !10648
  %26 = load i32, i32* %r2, align 4, !dbg !10649
  %idxprom40 = sext i32 %26 to i64, !dbg !10650
  %arrayidx41 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom40, !dbg !10650
  %rclass42 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx41, i32 0, i32 2, !dbg !10651
  %27 = load i32, i32* %rclass42, align 8, !dbg !10651
  %sub43 = sub nsw i32 %25, %27, !dbg !10652
  store i32 %sub43, i32* %t, align 4, !dbg !10653
  %28 = load i32, i32* %t, align 4, !dbg !10654
  %cmp44 = icmp ne i32 %28, 0, !dbg !10656
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !10657

if.then46:                                        ; preds = %if.end36
  %29 = load i32, i32* %t, align 4, !dbg !10658
  store i32 %29, i32* %retval, align 4, !dbg !10659
  br label %return, !dbg !10659

if.end47:                                         ; preds = %if.end36
  %30 = load i32, i32* %r1, align 4, !dbg !10660
  %31 = load i32, i32* %r2, align 4, !dbg !10661
  %sub48 = sub nsw i32 %30, %31, !dbg !10662
  store i32 %sub48, i32* %retval, align 4, !dbg !10663
  br label %return, !dbg !10663

return:                                           ; preds = %if.end47, %if.then46, %if.then35, %if.then25, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !10664
  ret i32 %32, !dbg !10664
}

; Function Attrs: noinline nounwind uwtable
define internal void @order_regs_for_reload(%struct.insn_chain* %chain) #0 !dbg !10665 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %i = alloca i32, align 4
  %used_by_pseudos = alloca i64, align 8
  %used_by_pseudos2 = alloca i64, align 8
  %rsi = alloca %struct.bitmap_iterator, align 8
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain.addr, metadata !10666, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10668, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.declare(metadata i64* %used_by_pseudos, metadata !10670, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.declare(metadata i64* %used_by_pseudos2, metadata !10672, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %rsi, metadata !10674, metadata !DIExpression()), !dbg !10675
  %0 = load i64, i64* @fixed_reg_set, align 8, !dbg !10676
  store i64 %0, i64* @bad_spill_regs, align 8, !dbg !10676
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([53 x i32]* @spill_cost to i8*), i8 0, i64 212, i1 false), !dbg !10677
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([53 x i32]* @spill_add_cost to i8*), i8 0, i64 212, i1 false), !dbg !10678
  store i32 0, i32* %i, align 4, !dbg !10679
  br label %for.cond, !dbg !10681

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !10682
  %cmp = icmp ult i32 %1, 53, !dbg !10684
  br i1 %cmp, label %for.body, label %for.end, !dbg !10685

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !10686
  %idxprom = zext i32 %2 to i64, !dbg !10687
  %arrayidx = getelementptr inbounds [53 x i32], [53 x i32]* @hard_regno_to_pseudo_regno, i64 0, i64 %idxprom, !dbg !10687
  store i32 -1, i32* %arrayidx, align 4, !dbg !10688
  br label %for.inc, !dbg !10687

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !10689
  %inc = add i32 %3, 1, !dbg !10689
  store i32 %inc, i32* %i, align 4, !dbg !10689
  br label %for.cond, !dbg !10690, !llvm.loop !10691

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !10693

do.body:                                          ; preds = %for.end
  store i64 0, i64* %used_by_pseudos, align 8, !dbg !10694
  %4 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10694
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %4, i32 0, i32 6, !dbg !10694
  call void @reg_set_to_hard_reg_set(i64* %used_by_pseudos, %struct.bitmap_head_def* %live_throughout), !dbg !10694
  br label %do.end, !dbg !10694

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !10696

do.body1:                                         ; preds = %do.end
  store i64 0, i64* %used_by_pseudos2, align 8, !dbg !10697
  %5 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10697
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %5, i32 0, i32 7, !dbg !10697
  call void @reg_set_to_hard_reg_set(i64* %used_by_pseudos2, %struct.bitmap_head_def* %dead_or_set), !dbg !10697
  br label %do.end2, !dbg !10697

do.end2:                                          ; preds = %do.body1
  %6 = load i64, i64* %used_by_pseudos, align 8, !dbg !10699
  %7 = load i64, i64* @bad_spill_regs, align 8, !dbg !10699
  %or = or i64 %7, %6, !dbg !10699
  store i64 %or, i64* @bad_spill_regs, align 8, !dbg !10699
  %8 = load i64, i64* %used_by_pseudos2, align 8, !dbg !10700
  %9 = load i64, i64* @bad_spill_regs, align 8, !dbg !10700
  %or3 = or i64 %9, %8, !dbg !10700
  store i64 %or3, i64* @bad_spill_regs, align 8, !dbg !10700
  call void @bitmap_clear(%struct.bitmap_head_def* @pseudos_counted), !dbg !10701
  %10 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10702
  %live_throughout4 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %10, i32 0, i32 6, !dbg !10702
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %live_throughout4, i32 53, i32* %i), !dbg !10702
  br label %for.cond5, !dbg !10702

for.cond5:                                        ; preds = %for.inc7, %do.end2
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !10704
  %tobool = icmp ne i8 %call, 0, !dbg !10702
  br i1 %tobool, label %for.body6, label %for.end8, !dbg !10702

for.body6:                                        ; preds = %for.cond5
  %11 = load i32, i32* %i, align 4, !dbg !10706
  call void @count_pseudo(i32 %11), !dbg !10708
  br label %for.inc7, !dbg !10709

for.inc7:                                         ; preds = %for.body6
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !10704
  br label %for.cond5, !dbg !10704, !llvm.loop !10710

for.end8:                                         ; preds = %for.cond5
  %12 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10712
  %dead_or_set9 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %12, i32 0, i32 7, !dbg !10712
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %dead_or_set9, i32 53, i32* %i), !dbg !10712
  br label %for.cond10, !dbg !10712

for.cond10:                                       ; preds = %for.inc14, %for.end8
  %call11 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !10714
  %tobool12 = icmp ne i8 %call11, 0, !dbg !10712
  br i1 %tobool12, label %for.body13, label %for.end15, !dbg !10712

for.body13:                                       ; preds = %for.cond10
  %13 = load i32, i32* %i, align 4, !dbg !10716
  call void @count_pseudo(i32 %13), !dbg !10718
  br label %for.inc14, !dbg !10719

for.inc14:                                        ; preds = %for.body13
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %i), !dbg !10714
  br label %for.cond10, !dbg !10714, !llvm.loop !10720

for.end15:                                        ; preds = %for.cond10
  call void @bitmap_clear(%struct.bitmap_head_def* @pseudos_counted), !dbg !10722
  ret void, !dbg !10723
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @find_reg(%struct.insn_chain* %chain, i32 %order) #0 !dbg !3758 {
entry:
  %retval = alloca i32, align 4
  %chain.addr = alloca %struct.insn_chain*, align 8
  %order.addr = alloca i32, align 4
  %rnum = alloca i32, align 4
  %rl = alloca %struct.reload*, align 8
  %best_cost = alloca i32, align 4
  %best_reg = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca i32, align 4
  %k = alloca i32, align 4
  %not_usable = alloca i64, align 8
  %used_by_other_reload = alloca i64, align 8
  %rsi = alloca %struct.bitmap_iterator, align 8
  %other = alloca i32, align 4
  %regno29 = alloca i32, align 4
  %this_cost = alloca i32, align 4
  %ok = alloca i32, align 4
  %this_nregs = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain.addr, metadata !10724, metadata !DIExpression()), !dbg !10725
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !10726, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.declare(metadata i32* %rnum, metadata !10728, metadata !DIExpression()), !dbg !10729
  %0 = load i32, i32* %order.addr, align 4, !dbg !10730
  %idxprom = sext i32 %0 to i64, !dbg !10731
  %arrayidx = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i64 0, i64 %idxprom, !dbg !10731
  %1 = load i16, i16* %arrayidx, align 2, !dbg !10731
  %conv = sext i16 %1 to i32, !dbg !10731
  store i32 %conv, i32* %rnum, align 4, !dbg !10729
  call void @llvm.dbg.declare(metadata %struct.reload** %rl, metadata !10732, metadata !DIExpression()), !dbg !10733
  %2 = load i32, i32* %rnum, align 4, !dbg !10734
  %idx.ext = sext i32 %2 to i64, !dbg !10735
  %add.ptr = getelementptr inbounds %struct.reload, %struct.reload* getelementptr inbounds ([180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 0), i64 %idx.ext, !dbg !10735
  store %struct.reload* %add.ptr, %struct.reload** %rl, align 8, !dbg !10733
  call void @llvm.dbg.declare(metadata i32* %best_cost, metadata !10736, metadata !DIExpression()), !dbg !10737
  store i32 2147483647, i32* %best_cost, align 4, !dbg !10737
  call void @llvm.dbg.declare(metadata i32* %best_reg, metadata !10738, metadata !DIExpression()), !dbg !10739
  store i32 -1, i32* %best_reg, align 4, !dbg !10739
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10740, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10742, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10744, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.declare(metadata i32* %k, metadata !10746, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.declare(metadata i64* %not_usable, metadata !10748, metadata !DIExpression()), !dbg !10749
  call void @llvm.dbg.declare(metadata i64* %used_by_other_reload, metadata !10750, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %rsi, metadata !10752, metadata !DIExpression()), !dbg !10753
  %3 = load i64, i64* @bad_spill_regs, align 8, !dbg !10754
  store i64 %3, i64* %not_usable, align 8, !dbg !10754
  %4 = load i64, i64* @bad_spill_regs_global, align 8, !dbg !10755
  %5 = load i64, i64* %not_usable, align 8, !dbg !10755
  %or = or i64 %5, %4, !dbg !10755
  store i64 %or, i64* %not_usable, align 8, !dbg !10755
  %6 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !10756
  %rclass = getelementptr inbounds %struct.reload, %struct.reload* %6, i32 0, i32 2, !dbg !10756
  %7 = load i32, i32* %rclass, align 8, !dbg !10756
  %idxprom1 = zext i32 %7 to i64, !dbg !10756
  %arrayidx2 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom1, !dbg !10756
  %8 = load i64, i64* %arrayidx2, align 8, !dbg !10756
  %neg = xor i64 %8, -1, !dbg !10756
  %9 = load i64, i64* %not_usable, align 8, !dbg !10756
  %or3 = or i64 %9, %neg, !dbg !10756
  store i64 %or3, i64* %not_usable, align 8, !dbg !10756
  store i64 0, i64* %used_by_other_reload, align 8, !dbg !10757
  store i32 0, i32* %k, align 4, !dbg !10758
  br label %for.cond, !dbg !10760

for.cond:                                         ; preds = %for.inc22, %entry
  %10 = load i32, i32* %k, align 4, !dbg !10761
  %11 = load i32, i32* %order.addr, align 4, !dbg !10763
  %cmp = icmp slt i32 %10, %11, !dbg !10764
  br i1 %cmp, label %for.body, label %for.end24, !dbg !10765

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %other, metadata !10766, metadata !DIExpression()), !dbg !10768
  %12 = load i32, i32* %k, align 4, !dbg !10769
  %idxprom5 = sext i32 %12 to i64, !dbg !10770
  %arrayidx6 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i64 0, i64 %idxprom5, !dbg !10770
  %13 = load i16, i16* %arrayidx6, align 2, !dbg !10770
  %conv7 = sext i16 %13 to i32, !dbg !10770
  store i32 %conv7, i32* %other, align 4, !dbg !10768
  %14 = load i32, i32* %other, align 4, !dbg !10771
  %idxprom8 = sext i32 %14 to i64, !dbg !10773
  %arrayidx9 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom8, !dbg !10773
  %regno = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx9, i32 0, i32 10, !dbg !10774
  %15 = load i32, i32* %regno, align 8, !dbg !10774
  %cmp10 = icmp sge i32 %15, 0, !dbg !10775
  br i1 %cmp10, label %land.lhs.true, label %if.end, !dbg !10776

land.lhs.true:                                    ; preds = %for.body
  %16 = load i32, i32* %other, align 4, !dbg !10777
  %17 = load i32, i32* %rnum, align 4, !dbg !10778
  %call = call i32 @reloads_conflict(i32 %16, i32 %17), !dbg !10779
  %tobool = icmp ne i32 %call, 0, !dbg !10779
  br i1 %tobool, label %if.then, label %if.end, !dbg !10780

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %j, align 4, !dbg !10781
  br label %for.cond12, !dbg !10783

for.cond12:                                       ; preds = %for.inc, %if.then
  %18 = load i32, i32* %j, align 4, !dbg !10784
  %19 = load i32, i32* %other, align 4, !dbg !10786
  %idxprom13 = sext i32 %19 to i64, !dbg !10787
  %arrayidx14 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom13, !dbg !10787
  %nregs = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx14, i32 0, i32 6, !dbg !10788
  %20 = load i32, i32* %nregs, align 8, !dbg !10788
  %cmp15 = icmp ult i32 %18, %20, !dbg !10789
  br i1 %cmp15, label %for.body17, label %for.end, !dbg !10790

for.body17:                                       ; preds = %for.cond12
  %21 = load i32, i32* %other, align 4, !dbg !10791
  %idxprom18 = sext i32 %21 to i64, !dbg !10791
  %arrayidx19 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom18, !dbg !10791
  %regno20 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx19, i32 0, i32 10, !dbg !10791
  %22 = load i32, i32* %regno20, align 8, !dbg !10791
  %23 = load i32, i32* %j, align 4, !dbg !10791
  %add = add i32 %22, %23, !dbg !10791
  %sh_prom = zext i32 %add to i64, !dbg !10791
  %shl = shl i64 1, %sh_prom, !dbg !10791
  %24 = load i64, i64* %used_by_other_reload, align 8, !dbg !10791
  %or21 = or i64 %24, %shl, !dbg !10791
  store i64 %or21, i64* %used_by_other_reload, align 8, !dbg !10791
  br label %for.inc, !dbg !10791

for.inc:                                          ; preds = %for.body17
  %25 = load i32, i32* %j, align 4, !dbg !10792
  %inc = add i32 %25, 1, !dbg !10792
  store i32 %inc, i32* %j, align 4, !dbg !10792
  br label %for.cond12, !dbg !10793, !llvm.loop !10794

for.end:                                          ; preds = %for.cond12
  br label %if.end, !dbg !10795

if.end:                                           ; preds = %for.end, %land.lhs.true, %for.body
  br label %for.inc22, !dbg !10796

for.inc22:                                        ; preds = %if.end
  %26 = load i32, i32* %k, align 4, !dbg !10797
  %inc23 = add nsw i32 %26, 1, !dbg !10797
  store i32 %inc23, i32* %k, align 4, !dbg !10797
  br label %for.cond, !dbg !10798, !llvm.loop !10799

for.end24:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10801
  br label %for.cond25, !dbg !10803

for.cond25:                                       ; preds = %for.inc177, %for.end24
  %27 = load i32, i32* %i, align 4, !dbg !10804
  %cmp26 = icmp ult i32 %27, 53, !dbg !10806
  br i1 %cmp26, label %for.body28, label %for.end179, !dbg !10807

for.body28:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata i32* %regno29, metadata !10808, metadata !DIExpression()), !dbg !10810
  %28 = load i32, i32* %i, align 4, !dbg !10811
  %idxprom30 = zext i32 %28 to i64, !dbg !10812
  %arrayidx31 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_alloc_order, i64 0, i64 %idxprom30, !dbg !10812
  %29 = load i32, i32* %arrayidx31, align 4, !dbg !10812
  store i32 %29, i32* %regno29, align 4, !dbg !10810
  %30 = load i64, i64* %not_usable, align 8, !dbg !10813
  %31 = load i32, i32* %regno29, align 4, !dbg !10813
  %sh_prom32 = zext i32 %31 to i64, !dbg !10813
  %shl33 = shl i64 1, %sh_prom32, !dbg !10813
  %and = and i64 %30, %shl33, !dbg !10813
  %tobool34 = icmp ne i64 %and, 0, !dbg !10813
  br i1 %tobool34, label %if.end176, label %land.lhs.true35, !dbg !10815

land.lhs.true35:                                  ; preds = %for.body28
  %32 = load i64, i64* %used_by_other_reload, align 8, !dbg !10816
  %33 = load i32, i32* %regno29, align 4, !dbg !10816
  %sh_prom36 = zext i32 %33 to i64, !dbg !10816
  %shl37 = shl i64 1, %sh_prom36, !dbg !10816
  %and38 = and i64 %32, %shl37, !dbg !10816
  %tobool39 = icmp ne i64 %and38, 0, !dbg !10816
  br i1 %tobool39, label %if.end176, label %land.lhs.true40, !dbg !10817

land.lhs.true40:                                  ; preds = %land.lhs.true35
  %34 = load i32, i32* %regno29, align 4, !dbg !10818
  %35 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !10818
  %mode = getelementptr inbounds %struct.reload, %struct.reload* %35, i32 0, i32 5, !dbg !10818
  %36 = load i32, i32* %mode, align 4, !dbg !10818
  %call41 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %34, i32 %36), !dbg !10818
  %conv42 = zext i8 %call41 to i32, !dbg !10818
  %tobool43 = icmp ne i32 %conv42, 0, !dbg !10818
  br i1 %tobool43, label %if.then44, label %if.end176, !dbg !10819

if.then44:                                        ; preds = %land.lhs.true40
  call void @llvm.dbg.declare(metadata i32* %this_cost, metadata !10820, metadata !DIExpression()), !dbg !10822
  %37 = load i32, i32* %regno29, align 4, !dbg !10823
  %idxprom45 = zext i32 %37 to i64, !dbg !10824
  %arrayidx46 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_cost, i64 0, i64 %idxprom45, !dbg !10824
  %38 = load i32, i32* %arrayidx46, align 4, !dbg !10824
  store i32 %38, i32* %this_cost, align 4, !dbg !10822
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !10825, metadata !DIExpression()), !dbg !10826
  store i32 1, i32* %ok, align 4, !dbg !10826
  call void @llvm.dbg.declare(metadata i32* %this_nregs, metadata !10827, metadata !DIExpression()), !dbg !10828
  %39 = load i32, i32* %regno29, align 4, !dbg !10829
  %idxprom47 = zext i32 %39 to i64, !dbg !10830
  %arrayidx48 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom47, !dbg !10830
  %40 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !10831
  %mode49 = getelementptr inbounds %struct.reload, %struct.reload* %40, i32 0, i32 5, !dbg !10832
  %41 = load i32, i32* %mode49, align 4, !dbg !10832
  %idxprom50 = zext i32 %41 to i64, !dbg !10830
  %arrayidx51 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx48, i64 0, i64 %idxprom50, !dbg !10830
  %42 = load i8, i8* %arrayidx51, align 1, !dbg !10830
  %conv52 = zext i8 %42 to i32, !dbg !10830
  store i32 %conv52, i32* %this_nregs, align 4, !dbg !10828
  store i32 1, i32* %j, align 4, !dbg !10833
  br label %for.cond53, !dbg !10835

for.cond53:                                       ; preds = %for.inc73, %if.then44
  %43 = load i32, i32* %j, align 4, !dbg !10836
  %44 = load i32, i32* %this_nregs, align 4, !dbg !10838
  %cmp54 = icmp ult i32 %43, %44, !dbg !10839
  br i1 %cmp54, label %for.body56, label %for.end75, !dbg !10840

for.body56:                                       ; preds = %for.cond53
  %45 = load i32, i32* %regno29, align 4, !dbg !10841
  %46 = load i32, i32* %j, align 4, !dbg !10843
  %add57 = add i32 %45, %46, !dbg !10844
  %idxprom58 = zext i32 %add57 to i64, !dbg !10845
  %arrayidx59 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_add_cost, i64 0, i64 %idxprom58, !dbg !10845
  %47 = load i32, i32* %arrayidx59, align 4, !dbg !10845
  %48 = load i32, i32* %this_cost, align 4, !dbg !10846
  %add60 = add nsw i32 %48, %47, !dbg !10846
  store i32 %add60, i32* %this_cost, align 4, !dbg !10846
  %49 = load i64, i64* %not_usable, align 8, !dbg !10847
  %50 = load i32, i32* %regno29, align 4, !dbg !10847
  %51 = load i32, i32* %j, align 4, !dbg !10847
  %add61 = add i32 %50, %51, !dbg !10847
  %sh_prom62 = zext i32 %add61 to i64, !dbg !10847
  %shl63 = shl i64 1, %sh_prom62, !dbg !10847
  %and64 = and i64 %49, %shl63, !dbg !10847
  %tobool65 = icmp ne i64 %and64, 0, !dbg !10847
  br i1 %tobool65, label %if.then71, label %lor.lhs.false, !dbg !10849

lor.lhs.false:                                    ; preds = %for.body56
  %52 = load i64, i64* %used_by_other_reload, align 8, !dbg !10850
  %53 = load i32, i32* %regno29, align 4, !dbg !10850
  %54 = load i32, i32* %j, align 4, !dbg !10850
  %add66 = add i32 %53, %54, !dbg !10850
  %sh_prom67 = zext i32 %add66 to i64, !dbg !10850
  %shl68 = shl i64 1, %sh_prom67, !dbg !10850
  %and69 = and i64 %52, %shl68, !dbg !10850
  %tobool70 = icmp ne i64 %and69, 0, !dbg !10850
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !10851

if.then71:                                        ; preds = %lor.lhs.false, %for.body56
  store i32 0, i32* %ok, align 4, !dbg !10852
  br label %if.end72, !dbg !10853

if.end72:                                         ; preds = %if.then71, %lor.lhs.false
  br label %for.inc73, !dbg !10854

for.inc73:                                        ; preds = %if.end72
  %55 = load i32, i32* %j, align 4, !dbg !10855
  %inc74 = add i32 %55, 1, !dbg !10855
  store i32 %inc74, i32* %j, align 4, !dbg !10855
  br label %for.cond53, !dbg !10856, !llvm.loop !10857

for.end75:                                        ; preds = %for.cond53
  %56 = load i32, i32* %ok, align 4, !dbg !10859
  %tobool76 = icmp ne i32 %56, 0, !dbg !10859
  br i1 %tobool76, label %if.end78, label %if.then77, !dbg !10861

if.then77:                                        ; preds = %for.end75
  br label %for.inc177, !dbg !10862

if.end78:                                         ; preds = %for.end75
  %57 = load i8, i8* @ira_conflicts_p, align 1, !dbg !10863
  %tobool79 = icmp ne i8 %57, 0, !dbg !10863
  br i1 %tobool79, label %if.then80, label %if.end132, !dbg !10865

if.then80:                                        ; preds = %if.end78
  store i32 0, i32* %j, align 4, !dbg !10866
  store i32 0, i32* %n, align 4, !dbg !10869
  br label %for.cond81, !dbg !10870

for.cond81:                                       ; preds = %for.inc104, %if.then80
  %58 = load i32, i32* %j, align 4, !dbg !10871
  %59 = load i32, i32* %this_nregs, align 4, !dbg !10873
  %cmp82 = icmp ult i32 %58, %59, !dbg !10874
  br i1 %cmp82, label %for.body84, label %for.end106, !dbg !10875

for.body84:                                       ; preds = %for.cond81
  call void @llvm.dbg.declare(metadata i32* %r, metadata !10876, metadata !DIExpression()), !dbg !10878
  %60 = load i32, i32* %regno29, align 4, !dbg !10879
  %61 = load i32, i32* %j, align 4, !dbg !10880
  %add85 = add i32 %60, %61, !dbg !10881
  %idxprom86 = zext i32 %add85 to i64, !dbg !10882
  %arrayidx87 = getelementptr inbounds [53 x i32], [53 x i32]* @hard_regno_to_pseudo_regno, i64 0, i64 %idxprom86, !dbg !10882
  %62 = load i32, i32* %arrayidx87, align 4, !dbg !10882
  store i32 %62, i32* %r, align 4, !dbg !10878
  %63 = load i32, i32* %r, align 4, !dbg !10883
  %cmp88 = icmp slt i32 %63, 0, !dbg !10885
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !10886

if.then90:                                        ; preds = %for.body84
  br label %for.inc104, !dbg !10887

if.end91:                                         ; preds = %for.body84
  %64 = load i32, i32* %n, align 4, !dbg !10888
  %cmp92 = icmp eq i32 %64, 0, !dbg !10890
  br i1 %cmp92, label %if.then99, label %lor.lhs.false94, !dbg !10891

lor.lhs.false94:                                  ; preds = %if.end91
  %65 = load i32, i32* %n, align 4, !dbg !10892
  %sub = sub i32 %65, 1, !dbg !10893
  %idxprom95 = zext i32 %sub to i64, !dbg !10894
  %arrayidx96 = getelementptr inbounds [53 x i32], [53 x i32]* @find_reg.regno_pseudo_regs, i64 0, i64 %idxprom95, !dbg !10894
  %66 = load i32, i32* %arrayidx96, align 4, !dbg !10894
  %67 = load i32, i32* %r, align 4, !dbg !10895
  %cmp97 = icmp ne i32 %66, %67, !dbg !10896
  br i1 %cmp97, label %if.then99, label %if.end103, !dbg !10897

if.then99:                                        ; preds = %lor.lhs.false94, %if.end91
  %68 = load i32, i32* %r, align 4, !dbg !10898
  %69 = load i32, i32* %n, align 4, !dbg !10899
  %inc100 = add i32 %69, 1, !dbg !10899
  store i32 %inc100, i32* %n, align 4, !dbg !10899
  %idxprom101 = zext i32 %69 to i64, !dbg !10900
  %arrayidx102 = getelementptr inbounds [53 x i32], [53 x i32]* @find_reg.regno_pseudo_regs, i64 0, i64 %idxprom101, !dbg !10900
  store i32 %68, i32* %arrayidx102, align 4, !dbg !10901
  br label %if.end103, !dbg !10900

if.end103:                                        ; preds = %if.then99, %lor.lhs.false94
  br label %for.inc104, !dbg !10902

for.inc104:                                       ; preds = %if.end103, %if.then90
  %70 = load i32, i32* %j, align 4, !dbg !10903
  %inc105 = add i32 %70, 1, !dbg !10903
  store i32 %inc105, i32* %j, align 4, !dbg !10903
  br label %for.cond81, !dbg !10904, !llvm.loop !10905

for.end106:                                       ; preds = %for.cond81
  %71 = load i32, i32* %n, align 4, !dbg !10907
  %inc107 = add i32 %71, 1, !dbg !10907
  store i32 %inc107, i32* %n, align 4, !dbg !10907
  %idxprom108 = zext i32 %71 to i64, !dbg !10908
  %arrayidx109 = getelementptr inbounds [53 x i32], [53 x i32]* @find_reg.regno_pseudo_regs, i64 0, i64 %idxprom108, !dbg !10908
  store i32 -1, i32* %arrayidx109, align 4, !dbg !10909
  %72 = load i32, i32* %best_reg, align 4, !dbg !10910
  %cmp110 = icmp slt i32 %72, 0, !dbg !10912
  br i1 %cmp110, label %if.then116, label %lor.lhs.false112, !dbg !10913

lor.lhs.false112:                                 ; preds = %for.end106
  %73 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !10914
  %in = getelementptr inbounds %struct.reload, %struct.reload* %73, i32 0, i32 0, !dbg !10915
  %74 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !10915
  %75 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !10916
  %out = getelementptr inbounds %struct.reload, %struct.reload* %75, i32 0, i32 1, !dbg !10917
  %76 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !10917
  %77 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !10918
  %insn = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %77, i32 0, i32 3, !dbg !10919
  %78 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10919
  %call113 = call zeroext i8 @ira_better_spill_reload_regno_p(i32* getelementptr inbounds ([53 x i32], [53 x i32]* @find_reg.regno_pseudo_regs, i64 0, i64 0), i32* getelementptr inbounds ([53 x i32], [53 x i32]* @find_reg.best_regno_pseudo_regs, i64 0, i64 0), %struct.rtx_def* %74, %struct.rtx_def* %76, %struct.rtx_def* %78), !dbg !10920
  %conv114 = zext i8 %call113 to i32, !dbg !10920
  %tobool115 = icmp ne i32 %conv114, 0, !dbg !10920
  br i1 %tobool115, label %if.then116, label %if.end131, !dbg !10921

if.then116:                                       ; preds = %lor.lhs.false112, %for.end106
  %79 = load i32, i32* %regno29, align 4, !dbg !10922
  store i32 %79, i32* %best_reg, align 4, !dbg !10924
  store i32 0, i32* %j, align 4, !dbg !10925
  br label %for.cond117, !dbg !10927

for.cond117:                                      ; preds = %for.inc128, %if.then116
  %80 = load i32, i32* %j, align 4, !dbg !10928
  %idxprom118 = zext i32 %80 to i64, !dbg !10931
  %arrayidx119 = getelementptr inbounds [53 x i32], [53 x i32]* @find_reg.regno_pseudo_regs, i64 0, i64 %idxprom118, !dbg !10931
  %81 = load i32, i32* %arrayidx119, align 4, !dbg !10931
  %82 = load i32, i32* %j, align 4, !dbg !10932
  %idxprom120 = zext i32 %82 to i64, !dbg !10933
  %arrayidx121 = getelementptr inbounds [53 x i32], [53 x i32]* @find_reg.best_regno_pseudo_regs, i64 0, i64 %idxprom120, !dbg !10933
  store i32 %81, i32* %arrayidx121, align 4, !dbg !10934
  %83 = load i32, i32* %j, align 4, !dbg !10935
  %idxprom122 = zext i32 %83 to i64, !dbg !10937
  %arrayidx123 = getelementptr inbounds [53 x i32], [53 x i32]* @find_reg.regno_pseudo_regs, i64 0, i64 %idxprom122, !dbg !10937
  %84 = load i32, i32* %arrayidx123, align 4, !dbg !10937
  %cmp124 = icmp slt i32 %84, 0, !dbg !10938
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !10939

if.then126:                                       ; preds = %for.cond117
  br label %for.end130, !dbg !10940

if.end127:                                        ; preds = %for.cond117
  br label %for.inc128, !dbg !10941

for.inc128:                                       ; preds = %if.end127
  %85 = load i32, i32* %j, align 4, !dbg !10942
  %inc129 = add i32 %85, 1, !dbg !10942
  store i32 %inc129, i32* %j, align 4, !dbg !10942
  br label %for.cond117, !dbg !10943, !llvm.loop !10944

for.end130:                                       ; preds = %if.then126
  br label %if.end131, !dbg !10947

if.end131:                                        ; preds = %for.end130, %lor.lhs.false112
  br label %for.inc177, !dbg !10948

if.end132:                                        ; preds = %if.end78
  %86 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !10949
  %in133 = getelementptr inbounds %struct.reload, %struct.reload* %86, i32 0, i32 0, !dbg !10951
  %87 = load %struct.rtx_def*, %struct.rtx_def** %in133, align 8, !dbg !10951
  %tobool134 = icmp ne %struct.rtx_def* %87, null, !dbg !10949
  br i1 %tobool134, label %land.lhs.true135, label %if.end145, !dbg !10952

land.lhs.true135:                                 ; preds = %if.end132
  %88 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !10953
  %in136 = getelementptr inbounds %struct.reload, %struct.reload* %88, i32 0, i32 0, !dbg !10953
  %89 = load %struct.rtx_def*, %struct.rtx_def** %in136, align 8, !dbg !10953
  %90 = bitcast %struct.rtx_def* %89 to i32*, !dbg !10953
  %bf.load = load i32, i32* %90, align 8, !dbg !10953
  %bf.clear = and i32 %bf.load, 65535, !dbg !10953
  %cmp137 = icmp eq i32 %bf.clear, 37, !dbg !10953
  br i1 %cmp137, label %land.lhs.true139, label %if.end145, !dbg !10954

land.lhs.true139:                                 ; preds = %land.lhs.true135
  %91 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !10955
  %in140 = getelementptr inbounds %struct.reload, %struct.reload* %91, i32 0, i32 0, !dbg !10955
  %92 = load %struct.rtx_def*, %struct.rtx_def** %in140, align 8, !dbg !10955
  %call141 = call i32 @rhs_regno(%struct.rtx_def* %92), !dbg !10955
  %93 = load i32, i32* %regno29, align 4, !dbg !10956
  %cmp142 = icmp eq i32 %call141, %93, !dbg !10957
  br i1 %cmp142, label %if.then144, label %if.end145, !dbg !10958

if.then144:                                       ; preds = %land.lhs.true139
  %94 = load i32, i32* %this_cost, align 4, !dbg !10959
  %dec = add nsw i32 %94, -1, !dbg !10959
  store i32 %dec, i32* %this_cost, align 4, !dbg !10959
  br label %if.end145, !dbg !10960

if.end145:                                        ; preds = %if.then144, %land.lhs.true139, %land.lhs.true135, %if.end132
  %95 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !10961
  %out146 = getelementptr inbounds %struct.reload, %struct.reload* %95, i32 0, i32 1, !dbg !10963
  %96 = load %struct.rtx_def*, %struct.rtx_def** %out146, align 8, !dbg !10963
  %tobool147 = icmp ne %struct.rtx_def* %96, null, !dbg !10961
  br i1 %tobool147, label %land.lhs.true148, label %if.end161, !dbg !10964

land.lhs.true148:                                 ; preds = %if.end145
  %97 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !10965
  %out149 = getelementptr inbounds %struct.reload, %struct.reload* %97, i32 0, i32 1, !dbg !10965
  %98 = load %struct.rtx_def*, %struct.rtx_def** %out149, align 8, !dbg !10965
  %99 = bitcast %struct.rtx_def* %98 to i32*, !dbg !10965
  %bf.load150 = load i32, i32* %99, align 8, !dbg !10965
  %bf.clear151 = and i32 %bf.load150, 65535, !dbg !10965
  %cmp152 = icmp eq i32 %bf.clear151, 37, !dbg !10965
  br i1 %cmp152, label %land.lhs.true154, label %if.end161, !dbg !10966

land.lhs.true154:                                 ; preds = %land.lhs.true148
  %100 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !10967
  %out155 = getelementptr inbounds %struct.reload, %struct.reload* %100, i32 0, i32 1, !dbg !10967
  %101 = load %struct.rtx_def*, %struct.rtx_def** %out155, align 8, !dbg !10967
  %call156 = call i32 @rhs_regno(%struct.rtx_def* %101), !dbg !10967
  %102 = load i32, i32* %regno29, align 4, !dbg !10968
  %cmp157 = icmp eq i32 %call156, %102, !dbg !10969
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !10970

if.then159:                                       ; preds = %land.lhs.true154
  %103 = load i32, i32* %this_cost, align 4, !dbg !10971
  %dec160 = add nsw i32 %103, -1, !dbg !10971
  store i32 %dec160, i32* %this_cost, align 4, !dbg !10971
  br label %if.end161, !dbg !10972

if.end161:                                        ; preds = %if.then159, %land.lhs.true154, %land.lhs.true148, %if.end145
  %104 = load i32, i32* %this_cost, align 4, !dbg !10973
  %105 = load i32, i32* %best_cost, align 4, !dbg !10975
  %cmp162 = icmp slt i32 %104, %105, !dbg !10976
  br i1 %cmp162, label %if.then174, label %lor.lhs.false164, !dbg !10977

lor.lhs.false164:                                 ; preds = %if.end161
  %106 = load i32, i32* %this_cost, align 4, !dbg !10978
  %107 = load i32, i32* %best_cost, align 4, !dbg !10979
  %cmp165 = icmp eq i32 %106, %107, !dbg !10980
  br i1 %cmp165, label %land.lhs.true167, label %if.end175, !dbg !10981

land.lhs.true167:                                 ; preds = %lor.lhs.false164
  %108 = load i32, i32* %regno29, align 4, !dbg !10982
  %idxprom168 = zext i32 %108 to i64, !dbg !10983
  %arrayidx169 = getelementptr inbounds [53 x i32], [53 x i32]* @inv_reg_alloc_order, i64 0, i64 %idxprom168, !dbg !10983
  %109 = load i32, i32* %arrayidx169, align 4, !dbg !10983
  %110 = load i32, i32* %best_reg, align 4, !dbg !10984
  %idxprom170 = sext i32 %110 to i64, !dbg !10985
  %arrayidx171 = getelementptr inbounds [53 x i32], [53 x i32]* @inv_reg_alloc_order, i64 0, i64 %idxprom170, !dbg !10985
  %111 = load i32, i32* %arrayidx171, align 4, !dbg !10985
  %cmp172 = icmp slt i32 %109, %111, !dbg !10986
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !10987

if.then174:                                       ; preds = %land.lhs.true167, %if.end161
  %112 = load i32, i32* %regno29, align 4, !dbg !10988
  store i32 %112, i32* %best_reg, align 4, !dbg !10990
  %113 = load i32, i32* %this_cost, align 4, !dbg !10991
  store i32 %113, i32* %best_cost, align 4, !dbg !10992
  br label %if.end175, !dbg !10993

if.end175:                                        ; preds = %if.then174, %land.lhs.true167, %lor.lhs.false164
  br label %if.end176, !dbg !10994

if.end176:                                        ; preds = %if.end175, %land.lhs.true40, %land.lhs.true35, %for.body28
  br label %for.inc177, !dbg !10995

for.inc177:                                       ; preds = %if.end176, %if.end131, %if.then77
  %114 = load i32, i32* %i, align 4, !dbg !10996
  %inc178 = add i32 %114, 1, !dbg !10996
  store i32 %inc178, i32* %i, align 4, !dbg !10996
  br label %for.cond25, !dbg !10997, !llvm.loop !10998

for.end179:                                       ; preds = %for.cond25
  %115 = load i32, i32* %best_reg, align 4, !dbg !11000
  %cmp180 = icmp eq i32 %115, -1, !dbg !11002
  br i1 %cmp180, label %if.then182, label %if.end183, !dbg !11003

if.then182:                                       ; preds = %for.end179
  store i32 0, i32* %retval, align 4, !dbg !11004
  br label %return, !dbg !11004

if.end183:                                        ; preds = %for.end179
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !11005
  %tobool184 = icmp ne %struct._IO_FILE* %116, null, !dbg !11005
  br i1 %tobool184, label %if.then185, label %if.end187, !dbg !11007

if.then185:                                       ; preds = %if.end183
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !11008
  %118 = load i32, i32* %best_reg, align 4, !dbg !11009
  %119 = load i32, i32* %rnum, align 4, !dbg !11010
  %call186 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %117, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0), i32 %118, i32 %119), !dbg !11011
  br label %if.end187, !dbg !11011

if.end187:                                        ; preds = %if.then185, %if.end183
  %120 = load i32, i32* %best_reg, align 4, !dbg !11012
  %idxprom188 = sext i32 %120 to i64, !dbg !11013
  %arrayidx189 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom188, !dbg !11013
  %121 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !11014
  %mode190 = getelementptr inbounds %struct.reload, %struct.reload* %121, i32 0, i32 5, !dbg !11015
  %122 = load i32, i32* %mode190, align 4, !dbg !11015
  %idxprom191 = zext i32 %122 to i64, !dbg !11013
  %arrayidx192 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx189, i64 0, i64 %idxprom191, !dbg !11013
  %123 = load i8, i8* %arrayidx192, align 1, !dbg !11013
  %conv193 = zext i8 %123 to i32, !dbg !11013
  %124 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !11016
  %nregs194 = getelementptr inbounds %struct.reload, %struct.reload* %124, i32 0, i32 6, !dbg !11017
  store i32 %conv193, i32* %nregs194, align 8, !dbg !11018
  %125 = load i32, i32* %best_reg, align 4, !dbg !11019
  %126 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !11020
  %regno195 = getelementptr inbounds %struct.reload, %struct.reload* %126, i32 0, i32 10, !dbg !11021
  store i32 %125, i32* %regno195, align 8, !dbg !11022
  %127 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !11023
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %127, i32 0, i32 6, !dbg !11023
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %live_throughout, i32 53, i32* %j), !dbg !11023
  br label %for.cond196, !dbg !11023

for.cond196:                                      ; preds = %for.inc201, %if.end187
  %call197 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %j), !dbg !11025
  %tobool198 = icmp ne i8 %call197, 0, !dbg !11023
  br i1 %tobool198, label %for.body199, label %for.end202, !dbg !11023

for.body199:                                      ; preds = %for.cond196
  %128 = load i32, i32* %best_reg, align 4, !dbg !11027
  %129 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !11029
  %nregs200 = getelementptr inbounds %struct.reload, %struct.reload* %129, i32 0, i32 6, !dbg !11030
  %130 = load i32, i32* %nregs200, align 8, !dbg !11030
  %131 = load i32, i32* %j, align 4, !dbg !11031
  call void @count_spilled_pseudo(i32 %128, i32 %130, i32 %131), !dbg !11032
  br label %for.inc201, !dbg !11033

for.inc201:                                       ; preds = %for.body199
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %j), !dbg !11025
  br label %for.cond196, !dbg !11025, !llvm.loop !11034

for.end202:                                       ; preds = %for.cond196
  %132 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !11036
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %132, i32 0, i32 7, !dbg !11036
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %dead_or_set, i32 53, i32* %j), !dbg !11036
  br label %for.cond203, !dbg !11036

for.cond203:                                      ; preds = %for.inc208, %for.end202
  %call204 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %j), !dbg !11038
  %tobool205 = icmp ne i8 %call204, 0, !dbg !11036
  br i1 %tobool205, label %for.body206, label %for.end209, !dbg !11036

for.body206:                                      ; preds = %for.cond203
  %133 = load i32, i32* %best_reg, align 4, !dbg !11040
  %134 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !11042
  %nregs207 = getelementptr inbounds %struct.reload, %struct.reload* %134, i32 0, i32 6, !dbg !11043
  %135 = load i32, i32* %nregs207, align 8, !dbg !11043
  %136 = load i32, i32* %j, align 4, !dbg !11044
  call void @count_spilled_pseudo(i32 %133, i32 %135, i32 %136), !dbg !11045
  br label %for.inc208, !dbg !11046

for.inc208:                                       ; preds = %for.body206
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %j), !dbg !11038
  br label %for.cond203, !dbg !11038, !llvm.loop !11047

for.end209:                                       ; preds = %for.cond203
  store i32 0, i32* %i, align 4, !dbg !11049
  br label %for.cond210, !dbg !11051

for.cond210:                                      ; preds = %for.inc242, %for.end209
  %137 = load i32, i32* %i, align 4, !dbg !11052
  %138 = load %struct.reload*, %struct.reload** %rl, align 8, !dbg !11054
  %nregs211 = getelementptr inbounds %struct.reload, %struct.reload* %138, i32 0, i32 6, !dbg !11055
  %139 = load i32, i32* %nregs211, align 8, !dbg !11055
  %cmp212 = icmp ult i32 %137, %139, !dbg !11056
  br i1 %cmp212, label %for.body214, label %for.end244, !dbg !11057

for.body214:                                      ; preds = %for.cond210
  %140 = load i32, i32* %best_reg, align 4, !dbg !11058
  %141 = load i32, i32* %i, align 4, !dbg !11058
  %add215 = add i32 %140, %141, !dbg !11058
  %idxprom216 = zext i32 %add215 to i64, !dbg !11058
  %arrayidx217 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_cost, i64 0, i64 %idxprom216, !dbg !11058
  %142 = load i32, i32* %arrayidx217, align 4, !dbg !11058
  %cmp218 = icmp eq i32 %142, 0, !dbg !11058
  br i1 %cmp218, label %cond.false, label %cond.true, !dbg !11058

cond.true:                                        ; preds = %for.body214
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 2020, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11058
  br label %cond.end, !dbg !11058

cond.false:                                       ; preds = %for.body214
  br label %cond.end, !dbg !11058

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !11058
  %143 = load i32, i32* %best_reg, align 4, !dbg !11060
  %144 = load i32, i32* %i, align 4, !dbg !11060
  %add220 = add i32 %143, %144, !dbg !11060
  %idxprom221 = zext i32 %add220 to i64, !dbg !11060
  %arrayidx222 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_add_cost, i64 0, i64 %idxprom221, !dbg !11060
  %145 = load i32, i32* %arrayidx222, align 4, !dbg !11060
  %cmp223 = icmp eq i32 %145, 0, !dbg !11060
  br i1 %cmp223, label %cond.false226, label %cond.true225, !dbg !11060

cond.true225:                                     ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 2021, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11060
  br label %cond.end227, !dbg !11060

cond.false226:                                    ; preds = %cond.end
  br label %cond.end227, !dbg !11060

cond.end227:                                      ; preds = %cond.false226, %cond.true225
  %cond228 = phi i32 [ 0, %cond.true225 ], [ 0, %cond.false226 ], !dbg !11060
  %146 = load i32, i32* %best_reg, align 4, !dbg !11061
  %147 = load i32, i32* %i, align 4, !dbg !11061
  %add229 = add i32 %146, %147, !dbg !11061
  %idxprom230 = zext i32 %add229 to i64, !dbg !11061
  %arrayidx231 = getelementptr inbounds [53 x i32], [53 x i32]* @hard_regno_to_pseudo_regno, i64 0, i64 %idxprom230, !dbg !11061
  %148 = load i32, i32* %arrayidx231, align 4, !dbg !11061
  %cmp232 = icmp eq i32 %148, -1, !dbg !11061
  br i1 %cmp232, label %cond.false235, label %cond.true234, !dbg !11061

cond.true234:                                     ; preds = %cond.end227
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 2022, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11061
  br label %cond.end236, !dbg !11061

cond.false235:                                    ; preds = %cond.end227
  br label %cond.end236, !dbg !11061

cond.end236:                                      ; preds = %cond.false235, %cond.true234
  %cond237 = phi i32 [ 0, %cond.true234 ], [ 0, %cond.false235 ], !dbg !11061
  %149 = load i32, i32* %best_reg, align 4, !dbg !11062
  %150 = load i32, i32* %i, align 4, !dbg !11062
  %add238 = add i32 %149, %150, !dbg !11062
  %sh_prom239 = zext i32 %add238 to i64, !dbg !11062
  %shl240 = shl i64 1, %sh_prom239, !dbg !11062
  %151 = load i64, i64* @used_spill_regs_local, align 8, !dbg !11062
  %or241 = or i64 %151, %shl240, !dbg !11062
  store i64 %or241, i64* @used_spill_regs_local, align 8, !dbg !11062
  br label %for.inc242, !dbg !11063

for.inc242:                                       ; preds = %cond.end236
  %152 = load i32, i32* %i, align 4, !dbg !11064
  %inc243 = add i32 %152, 1, !dbg !11064
  store i32 %inc243, i32* %i, align 4, !dbg !11064
  br label %for.cond210, !dbg !11065, !llvm.loop !11066

for.end244:                                       ; preds = %for.cond210
  store i32 1, i32* %retval, align 4, !dbg !11068
  br label %return, !dbg !11068

return:                                           ; preds = %for.end244, %if.then182
  %153 = load i32, i32* %retval, align 4, !dbg !11069
  ret i32 %153, !dbg !11069
}

; Function Attrs: noinline nounwind uwtable
define internal void @spill_failure(%struct.rtx_def* %insn, i32 %rclass) #0 !dbg !11070 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %rclass.addr = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !11073, metadata !DIExpression()), !dbg !11074
  store i32 %rclass, i32* %rclass.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rclass.addr, metadata !11075, metadata !DIExpression()), !dbg !11076
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !11077
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !11077
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !11077
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !11077
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !11077
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11077
  %call = call i32 @asm_noperands(%struct.rtx_def* %1), !dbg !11079
  %cmp = icmp sge i32 %call, 0, !dbg !11080
  br i1 %cmp, label %if.then, label %if.else, !dbg !11081

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !11082
  %3 = load i32, i32* %rclass.addr, align 4, !dbg !11083
  %idxprom = zext i32 %3 to i64, !dbg !11084
  %arrayidx1 = getelementptr inbounds [0 x i8*], [0 x i8*]* @reg_class_names, i64 0, i64 %idxprom, !dbg !11084
  %4 = load i8*, i8** %arrayidx1, align 8, !dbg !11084
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i8* %4), !dbg !11085
  br label %if.end9, !dbg !11085

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %rclass.addr, align 4, !dbg !11086
  %idxprom2 = zext i32 %5 to i64, !dbg !11088
  %arrayidx3 = getelementptr inbounds [0 x i8*], [0 x i8*]* @reg_class_names, i64 0, i64 %idxprom2, !dbg !11088
  %6 = load i8*, i8** %arrayidx3, align 8, !dbg !11088
  call void (i8*, ...) @error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12, i64 0, i64 0), i8* %6), !dbg !11089
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !11090
  %tobool = icmp ne %struct._IO_FILE* %7, null, !dbg !11090
  br i1 %tobool, label %if.then4, label %if.end, !dbg !11092

if.then4:                                         ; preds = %if.else
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !11093
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !11095
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !11095
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !11095
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 0, !dbg !11095
  %rt_int = bitcast %union.rtunion_def* %arrayidx7 to i32*, !dbg !11095
  %10 = load i32, i32* %rt_int, align 8, !dbg !11095
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i32 %10), !dbg !11096
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !11097
  call void @debug_reload_to_stream(%struct._IO_FILE* %11), !dbg !11098
  br label %if.end, !dbg !11099

if.end:                                           ; preds = %if.then4, %if.else
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !11100
  call void @_fatal_insn(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), %struct.rtx_def* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 2162, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11100
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  ret void, !dbg !11101
}

declare dso_local void @reg_set_to_hard_reg_set(i64*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @count_pseudo(i32 %reg) #0 !dbg !11102 {
entry:
  %reg.addr = alloca i32, align 4
  %freq = alloca i32, align 4
  %r = alloca i32, align 4
  %nregs = alloca i32, align 4
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !11103, metadata !DIExpression()), !dbg !11104
  call void @llvm.dbg.declare(metadata i32* %freq, metadata !11105, metadata !DIExpression()), !dbg !11106
  %0 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !11107
  %1 = load i32, i32* %reg.addr, align 4, !dbg !11107
  %idxprom = sext i32 %1 to i64, !dbg !11107
  %arrayidx = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %0, i64 %idxprom, !dbg !11107
  %freq1 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %arrayidx, i32 0, i32 0, !dbg !11107
  %2 = load i32, i32* %freq1, align 4, !dbg !11107
  store i32 %2, i32* %freq, align 4, !dbg !11106
  call void @llvm.dbg.declare(metadata i32* %r, metadata !11108, metadata !DIExpression()), !dbg !11109
  %3 = load i16*, i16** @reg_renumber, align 8, !dbg !11110
  %4 = load i32, i32* %reg.addr, align 4, !dbg !11111
  %idxprom2 = sext i32 %4 to i64, !dbg !11110
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 %idxprom2, !dbg !11110
  %5 = load i16, i16* %arrayidx3, align 2, !dbg !11110
  %conv = sext i16 %5 to i32, !dbg !11110
  store i32 %conv, i32* %r, align 4, !dbg !11109
  call void @llvm.dbg.declare(metadata i32* %nregs, metadata !11112, metadata !DIExpression()), !dbg !11113
  %6 = load i32, i32* %reg.addr, align 4, !dbg !11114
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* @pseudos_counted, i32 %6), !dbg !11114
  %tobool = icmp ne i32 %call, 0, !dbg !11114
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11116

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32, i32* %reg.addr, align 4, !dbg !11117
  %call4 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* @spilled_pseudos, i32 %7), !dbg !11117
  %tobool5 = icmp ne i32 %call4, 0, !dbg !11117
  br i1 %tobool5, label %if.then, label %lor.lhs.false6, !dbg !11118

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %8 = load i8, i8* @ira_conflicts_p, align 1, !dbg !11119
  %conv7 = zext i8 %8 to i32, !dbg !11119
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !11119
  br i1 %tobool8, label %land.lhs.true, label %if.end, !dbg !11120

land.lhs.true:                                    ; preds = %lor.lhs.false6
  %9 = load i32, i32* %r, align 4, !dbg !11121
  %cmp = icmp slt i32 %9, 0, !dbg !11122
  br i1 %cmp, label %if.then, label %if.end, !dbg !11123

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %entry
  br label %while.end, !dbg !11124

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false6
  %10 = load i32, i32* %reg.addr, align 4, !dbg !11125
  %call10 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* @pseudos_counted, i32 %10), !dbg !11125
  %11 = load i32, i32* %r, align 4, !dbg !11126
  %cmp11 = icmp sge i32 %11, 0, !dbg !11126
  br i1 %cmp11, label %cond.false, label %cond.true, !dbg !11126

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 1796, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11126
  br label %cond.end, !dbg !11126

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !11126

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !11126
  %12 = load i32, i32* %freq, align 4, !dbg !11127
  %13 = load i32, i32* %r, align 4, !dbg !11128
  %idxprom13 = sext i32 %13 to i64, !dbg !11129
  %arrayidx14 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_add_cost, i64 0, i64 %idxprom13, !dbg !11129
  %14 = load i32, i32* %arrayidx14, align 4, !dbg !11130
  %add = add nsw i32 %14, %12, !dbg !11130
  store i32 %add, i32* %arrayidx14, align 4, !dbg !11130
  %15 = load i32, i32* %r, align 4, !dbg !11131
  %idxprom15 = sext i32 %15 to i64, !dbg !11132
  %arrayidx16 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom15, !dbg !11132
  %16 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !11133
  %17 = load i32, i32* %reg.addr, align 4, !dbg !11133
  %idxprom17 = sext i32 %17 to i64, !dbg !11133
  %arrayidx18 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %16, i64 %idxprom17, !dbg !11133
  %18 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8, !dbg !11133
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !11133
  %bf.load = load i32, i32* %19, align 8, !dbg !11133
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !11133
  %bf.clear = and i32 %bf.lshr, 255, !dbg !11133
  %idxprom19 = zext i32 %bf.clear to i64, !dbg !11132
  %arrayidx20 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx16, i64 0, i64 %idxprom19, !dbg !11132
  %20 = load i8, i8* %arrayidx20, align 1, !dbg !11132
  %conv21 = zext i8 %20 to i32, !dbg !11132
  store i32 %conv21, i32* %nregs, align 4, !dbg !11134
  br label %while.cond, !dbg !11135

while.cond:                                       ; preds = %while.body, %cond.end
  %21 = load i32, i32* %nregs, align 4, !dbg !11136
  %dec = add nsw i32 %21, -1, !dbg !11136
  store i32 %dec, i32* %nregs, align 4, !dbg !11136
  %cmp22 = icmp sgt i32 %21, 0, !dbg !11137
  br i1 %cmp22, label %while.body, label %while.end, !dbg !11135

while.body:                                       ; preds = %while.cond
  %22 = load i32, i32* %reg.addr, align 4, !dbg !11138
  %23 = load i32, i32* %r, align 4, !dbg !11140
  %24 = load i32, i32* %nregs, align 4, !dbg !11141
  %add24 = add nsw i32 %23, %24, !dbg !11142
  %idxprom25 = sext i32 %add24 to i64, !dbg !11143
  %arrayidx26 = getelementptr inbounds [53 x i32], [53 x i32]* @hard_regno_to_pseudo_regno, i64 0, i64 %idxprom25, !dbg !11143
  store i32 %22, i32* %arrayidx26, align 4, !dbg !11144
  %25 = load i32, i32* %freq, align 4, !dbg !11145
  %26 = load i32, i32* %r, align 4, !dbg !11146
  %27 = load i32, i32* %nregs, align 4, !dbg !11147
  %add27 = add nsw i32 %26, %27, !dbg !11148
  %idxprom28 = sext i32 %add27 to i64, !dbg !11149
  %arrayidx29 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_cost, i64 0, i64 %idxprom28, !dbg !11149
  %28 = load i32, i32* %arrayidx29, align 4, !dbg !11150
  %add30 = add nsw i32 %28, %25, !dbg !11150
  store i32 %add30, i32* %arrayidx29, align 4, !dbg !11150
  br label %while.cond, !dbg !11135, !llvm.loop !11151

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !11153
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @reloads_conflict(i32 %r1, i32 %r2) #0 !dbg !11154 {
entry:
  %retval = alloca i32, align 4
  %r1.addr = alloca i32, align 4
  %r2.addr = alloca i32, align 4
  %r1_type = alloca i32, align 4
  %r2_type = alloca i32, align 4
  %r1_opnum = alloca i32, align 4
  %r2_opnum = alloca i32, align 4
  store i32 %r1, i32* %r1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r1.addr, metadata !11157, metadata !DIExpression()), !dbg !11158
  store i32 %r2, i32* %r2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r2.addr, metadata !11159, metadata !DIExpression()), !dbg !11160
  call void @llvm.dbg.declare(metadata i32* %r1_type, metadata !11161, metadata !DIExpression()), !dbg !11162
  %0 = load i32, i32* %r1.addr, align 4, !dbg !11163
  %idxprom = sext i32 %0 to i64, !dbg !11164
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom, !dbg !11164
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 17, !dbg !11165
  %1 = load i32, i32* %when_needed, align 4, !dbg !11165
  store i32 %1, i32* %r1_type, align 4, !dbg !11162
  call void @llvm.dbg.declare(metadata i32* %r2_type, metadata !11166, metadata !DIExpression()), !dbg !11167
  %2 = load i32, i32* %r2.addr, align 4, !dbg !11168
  %idxprom1 = sext i32 %2 to i64, !dbg !11169
  %arrayidx2 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1, !dbg !11169
  %when_needed3 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2, i32 0, i32 17, !dbg !11170
  %3 = load i32, i32* %when_needed3, align 4, !dbg !11170
  store i32 %3, i32* %r2_type, align 4, !dbg !11167
  call void @llvm.dbg.declare(metadata i32* %r1_opnum, metadata !11171, metadata !DIExpression()), !dbg !11172
  %4 = load i32, i32* %r1.addr, align 4, !dbg !11173
  %idxprom4 = sext i32 %4 to i64, !dbg !11174
  %arrayidx5 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom4, !dbg !11174
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx5, i32 0, i32 12, !dbg !11175
  %5 = load i32, i32* %opnum, align 8, !dbg !11175
  store i32 %5, i32* %r1_opnum, align 4, !dbg !11172
  call void @llvm.dbg.declare(metadata i32* %r2_opnum, metadata !11176, metadata !DIExpression()), !dbg !11177
  %6 = load i32, i32* %r2.addr, align 4, !dbg !11178
  %idxprom6 = sext i32 %6 to i64, !dbg !11179
  %arrayidx7 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom6, !dbg !11179
  %opnum8 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx7, i32 0, i32 12, !dbg !11180
  %7 = load i32, i32* %opnum8, align 8, !dbg !11180
  store i32 %7, i32* %r2_opnum, align 4, !dbg !11177
  %8 = load i32, i32* %r2_type, align 4, !dbg !11181
  %cmp = icmp eq i32 %8, 9, !dbg !11183
  br i1 %cmp, label %if.then, label %if.end, !dbg !11184

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !11185
  br label %return, !dbg !11185

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %r1_type, align 4, !dbg !11186
  switch i32 %9, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb19
    i32 4, label %sw.bb29
    i32 5, label %sw.bb40
    i32 6, label %sw.bb51
    i32 7, label %sw.bb62
    i32 8, label %sw.bb77
    i32 1, label %sw.bb83
    i32 2, label %sw.bb96
    i32 10, label %sw.bb106
    i32 9, label %sw.bb108
  ], !dbg !11187

sw.bb:                                            ; preds = %if.end
  %10 = load i32, i32* %r2_type, align 4, !dbg !11188
  %cmp9 = icmp eq i32 %10, 2, !dbg !11190
  br i1 %cmp9, label %lor.end, label %lor.lhs.false, !dbg !11191

lor.lhs.false:                                    ; preds = %sw.bb
  %11 = load i32, i32* %r2_type, align 4, !dbg !11192
  %cmp10 = icmp eq i32 %11, 7, !dbg !11193
  br i1 %cmp10, label %lor.end, label %lor.lhs.false11, !dbg !11194

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %12 = load i32, i32* %r2_type, align 4, !dbg !11195
  %cmp12 = icmp eq i32 %12, 8, !dbg !11196
  br i1 %cmp12, label %lor.end, label %lor.lhs.false13, !dbg !11197

lor.lhs.false13:                                  ; preds = %lor.lhs.false11
  %13 = load i32, i32* %r2_type, align 4, !dbg !11198
  %cmp14 = icmp eq i32 %13, 0, !dbg !11199
  br i1 %cmp14, label %lor.end, label %lor.rhs, !dbg !11200

lor.rhs:                                          ; preds = %lor.lhs.false13
  %14 = load i32, i32* %r2_type, align 4, !dbg !11201
  %cmp15 = icmp eq i32 %14, 3, !dbg !11202
  br i1 %cmp15, label %land.rhs, label %lor.lhs.false16, !dbg !11203

lor.lhs.false16:                                  ; preds = %lor.rhs
  %15 = load i32, i32* %r2_type, align 4, !dbg !11204
  %cmp17 = icmp eq i32 %15, 4, !dbg !11205
  br i1 %cmp17, label %land.rhs, label %land.end, !dbg !11206

land.rhs:                                         ; preds = %lor.lhs.false16, %lor.rhs
  %16 = load i32, i32* %r2_opnum, align 4, !dbg !11207
  %17 = load i32, i32* %r1_opnum, align 4, !dbg !11208
  %cmp18 = icmp sgt i32 %16, %17, !dbg !11209
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false16
  %18 = phi i1 [ false, %lor.lhs.false16 ], [ %cmp18, %land.rhs ], !dbg !11210
  br label %lor.end, !dbg !11200

lor.end:                                          ; preds = %land.end, %lor.lhs.false13, %lor.lhs.false11, %lor.lhs.false, %sw.bb
  %19 = phi i1 [ true, %lor.lhs.false13 ], [ true, %lor.lhs.false11 ], [ true, %lor.lhs.false ], [ true, %sw.bb ], [ %18, %land.end ]
  %lor.ext = zext i1 %19 to i32, !dbg !11200
  store i32 %lor.ext, i32* %retval, align 4, !dbg !11211
  br label %return, !dbg !11211

sw.bb19:                                          ; preds = %if.end
  %20 = load i32, i32* %r2_type, align 4, !dbg !11212
  %cmp20 = icmp eq i32 %20, 3, !dbg !11213
  br i1 %cmp20, label %land.lhs.true, label %lor.rhs22, !dbg !11214

land.lhs.true:                                    ; preds = %sw.bb19
  %21 = load i32, i32* %r1_opnum, align 4, !dbg !11215
  %22 = load i32, i32* %r2_opnum, align 4, !dbg !11216
  %cmp21 = icmp eq i32 %21, %22, !dbg !11217
  br i1 %cmp21, label %lor.end27, label %lor.rhs22, !dbg !11218

lor.rhs22:                                        ; preds = %land.lhs.true, %sw.bb19
  %23 = load i32, i32* %r2_type, align 4, !dbg !11219
  %cmp23 = icmp eq i32 %23, 0, !dbg !11220
  br i1 %cmp23, label %land.rhs24, label %land.end26, !dbg !11221

land.rhs24:                                       ; preds = %lor.rhs22
  %24 = load i32, i32* %r2_opnum, align 4, !dbg !11222
  %25 = load i32, i32* %r1_opnum, align 4, !dbg !11223
  %cmp25 = icmp slt i32 %24, %25, !dbg !11224
  br label %land.end26

land.end26:                                       ; preds = %land.rhs24, %lor.rhs22
  %26 = phi i1 [ false, %lor.rhs22 ], [ %cmp25, %land.rhs24 ], !dbg !11210
  br label %lor.end27, !dbg !11218

lor.end27:                                        ; preds = %land.end26, %land.lhs.true
  %27 = phi i1 [ true, %land.lhs.true ], [ %26, %land.end26 ]
  %lor.ext28 = zext i1 %27 to i32, !dbg !11218
  store i32 %lor.ext28, i32* %retval, align 4, !dbg !11225
  br label %return, !dbg !11225

sw.bb29:                                          ; preds = %if.end
  %28 = load i32, i32* %r2_type, align 4, !dbg !11226
  %cmp30 = icmp eq i32 %28, 4, !dbg !11227
  br i1 %cmp30, label %land.lhs.true31, label %lor.rhs33, !dbg !11228

land.lhs.true31:                                  ; preds = %sw.bb29
  %29 = load i32, i32* %r1_opnum, align 4, !dbg !11229
  %30 = load i32, i32* %r2_opnum, align 4, !dbg !11230
  %cmp32 = icmp eq i32 %29, %30, !dbg !11231
  br i1 %cmp32, label %lor.end38, label %lor.rhs33, !dbg !11232

lor.rhs33:                                        ; preds = %land.lhs.true31, %sw.bb29
  %31 = load i32, i32* %r2_type, align 4, !dbg !11233
  %cmp34 = icmp eq i32 %31, 0, !dbg !11234
  br i1 %cmp34, label %land.rhs35, label %land.end37, !dbg !11235

land.rhs35:                                       ; preds = %lor.rhs33
  %32 = load i32, i32* %r2_opnum, align 4, !dbg !11236
  %33 = load i32, i32* %r1_opnum, align 4, !dbg !11237
  %cmp36 = icmp slt i32 %32, %33, !dbg !11238
  br label %land.end37

land.end37:                                       ; preds = %land.rhs35, %lor.rhs33
  %34 = phi i1 [ false, %lor.rhs33 ], [ %cmp36, %land.rhs35 ], !dbg !11210
  br label %lor.end38, !dbg !11232

lor.end38:                                        ; preds = %land.end37, %land.lhs.true31
  %35 = phi i1 [ true, %land.lhs.true31 ], [ %34, %land.end37 ]
  %lor.ext39 = zext i1 %35 to i32, !dbg !11232
  store i32 %lor.ext39, i32* %retval, align 4, !dbg !11239
  br label %return, !dbg !11239

sw.bb40:                                          ; preds = %if.end
  %36 = load i32, i32* %r2_type, align 4, !dbg !11240
  %cmp41 = icmp eq i32 %36, 5, !dbg !11241
  br i1 %cmp41, label %land.lhs.true42, label %lor.rhs44, !dbg !11242

land.lhs.true42:                                  ; preds = %sw.bb40
  %37 = load i32, i32* %r2_opnum, align 4, !dbg !11243
  %38 = load i32, i32* %r1_opnum, align 4, !dbg !11244
  %cmp43 = icmp eq i32 %37, %38, !dbg !11245
  br i1 %cmp43, label %lor.end49, label %lor.rhs44, !dbg !11246

lor.rhs44:                                        ; preds = %land.lhs.true42, %sw.bb40
  %39 = load i32, i32* %r2_type, align 4, !dbg !11247
  %cmp45 = icmp eq i32 %39, 1, !dbg !11248
  br i1 %cmp45, label %land.rhs46, label %land.end48, !dbg !11249

land.rhs46:                                       ; preds = %lor.rhs44
  %40 = load i32, i32* %r2_opnum, align 4, !dbg !11250
  %41 = load i32, i32* %r1_opnum, align 4, !dbg !11251
  %cmp47 = icmp sle i32 %40, %41, !dbg !11252
  br label %land.end48

land.end48:                                       ; preds = %land.rhs46, %lor.rhs44
  %42 = phi i1 [ false, %lor.rhs44 ], [ %cmp47, %land.rhs46 ], !dbg !11210
  br label %lor.end49, !dbg !11246

lor.end49:                                        ; preds = %land.end48, %land.lhs.true42
  %43 = phi i1 [ true, %land.lhs.true42 ], [ %42, %land.end48 ]
  %lor.ext50 = zext i1 %43 to i32, !dbg !11246
  store i32 %lor.ext50, i32* %retval, align 4, !dbg !11253
  br label %return, !dbg !11253

sw.bb51:                                          ; preds = %if.end
  %44 = load i32, i32* %r2_type, align 4, !dbg !11254
  %cmp52 = icmp eq i32 %44, 6, !dbg !11255
  br i1 %cmp52, label %land.lhs.true53, label %lor.rhs55, !dbg !11256

land.lhs.true53:                                  ; preds = %sw.bb51
  %45 = load i32, i32* %r2_opnum, align 4, !dbg !11257
  %46 = load i32, i32* %r1_opnum, align 4, !dbg !11258
  %cmp54 = icmp eq i32 %45, %46, !dbg !11259
  br i1 %cmp54, label %lor.end60, label %lor.rhs55, !dbg !11260

lor.rhs55:                                        ; preds = %land.lhs.true53, %sw.bb51
  %47 = load i32, i32* %r2_type, align 4, !dbg !11261
  %cmp56 = icmp eq i32 %47, 1, !dbg !11262
  br i1 %cmp56, label %land.rhs57, label %land.end59, !dbg !11263

land.rhs57:                                       ; preds = %lor.rhs55
  %48 = load i32, i32* %r2_opnum, align 4, !dbg !11264
  %49 = load i32, i32* %r1_opnum, align 4, !dbg !11265
  %cmp58 = icmp sle i32 %48, %49, !dbg !11266
  br label %land.end59

land.end59:                                       ; preds = %land.rhs57, %lor.rhs55
  %50 = phi i1 [ false, %lor.rhs55 ], [ %cmp58, %land.rhs57 ], !dbg !11210
  br label %lor.end60, !dbg !11260

lor.end60:                                        ; preds = %land.end59, %land.lhs.true53
  %51 = phi i1 [ true, %land.lhs.true53 ], [ %50, %land.end59 ]
  %lor.ext61 = zext i1 %51 to i32, !dbg !11260
  store i32 %lor.ext61, i32* %retval, align 4, !dbg !11267
  br label %return, !dbg !11267

sw.bb62:                                          ; preds = %if.end
  %52 = load i32, i32* %r2_type, align 4, !dbg !11268
  %cmp63 = icmp eq i32 %52, 0, !dbg !11269
  br i1 %cmp63, label %lor.end75, label %lor.lhs.false64, !dbg !11270

lor.lhs.false64:                                  ; preds = %sw.bb62
  %53 = load i32, i32* %r2_type, align 4, !dbg !11271
  %cmp65 = icmp eq i32 %53, 2, !dbg !11272
  br i1 %cmp65, label %lor.end75, label %lor.rhs66, !dbg !11273

lor.rhs66:                                        ; preds = %lor.lhs.false64
  %54 = load i32, i32* %r2_type, align 4, !dbg !11274
  %cmp67 = icmp eq i32 %54, 7, !dbg !11275
  br i1 %cmp67, label %land.rhs68, label %land.end74, !dbg !11276

land.rhs68:                                       ; preds = %lor.rhs66
  %55 = load i32, i32* %r1.addr, align 4, !dbg !11277
  %56 = load i32, i32* %r2.addr, align 4, !dbg !11278
  %call = call zeroext i8 @reloads_unique_chain_p(i32 %55, i32 %56), !dbg !11279
  %tobool = icmp ne i8 %call, 0, !dbg !11279
  br i1 %tobool, label %lor.rhs69, label %lor.end72, !dbg !11280

lor.rhs69:                                        ; preds = %land.rhs68
  %57 = load i32, i32* %r1.addr, align 4, !dbg !11281
  %58 = load i32, i32* %r2.addr, align 4, !dbg !11282
  %call70 = call zeroext i8 @gen_reload_chain_without_interm_reg_p(i32 %57, i32 %58), !dbg !11283
  %tobool71 = icmp ne i8 %call70, 0, !dbg !11284
  %lnot = xor i1 %tobool71, true, !dbg !11284
  br label %lor.end72, !dbg !11280

lor.end72:                                        ; preds = %lor.rhs69, %land.rhs68
  %59 = phi i1 [ true, %land.rhs68 ], [ %lnot, %lor.rhs69 ]
  br label %land.end74

land.end74:                                       ; preds = %lor.end72, %lor.rhs66
  %60 = phi i1 [ false, %lor.rhs66 ], [ %59, %lor.end72 ], !dbg !11210
  br label %lor.end75, !dbg !11273

lor.end75:                                        ; preds = %land.end74, %lor.lhs.false64, %sw.bb62
  %61 = phi i1 [ true, %lor.lhs.false64 ], [ true, %sw.bb62 ], [ %60, %land.end74 ]
  %lor.ext76 = zext i1 %61 to i32, !dbg !11273
  store i32 %lor.ext76, i32* %retval, align 4, !dbg !11285
  br label %return, !dbg !11285

sw.bb77:                                          ; preds = %if.end
  %62 = load i32, i32* %r2_type, align 4, !dbg !11286
  %cmp78 = icmp eq i32 %62, 0, !dbg !11287
  br i1 %cmp78, label %lor.end81, label %lor.rhs79, !dbg !11288

lor.rhs79:                                        ; preds = %sw.bb77
  %63 = load i32, i32* %r2_type, align 4, !dbg !11289
  %cmp80 = icmp eq i32 %63, 8, !dbg !11290
  br label %lor.end81, !dbg !11288

lor.end81:                                        ; preds = %lor.rhs79, %sw.bb77
  %64 = phi i1 [ true, %sw.bb77 ], [ %cmp80, %lor.rhs79 ]
  %lor.ext82 = zext i1 %64 to i32, !dbg !11288
  store i32 %lor.ext82, i32* %retval, align 4, !dbg !11291
  br label %return, !dbg !11291

sw.bb83:                                          ; preds = %if.end
  %65 = load i32, i32* %r2_type, align 4, !dbg !11292
  %cmp84 = icmp eq i32 %65, 2, !dbg !11293
  br i1 %cmp84, label %lor.end94, label %lor.lhs.false85, !dbg !11294

lor.lhs.false85:                                  ; preds = %sw.bb83
  %66 = load i32, i32* %r2_type, align 4, !dbg !11295
  %cmp86 = icmp eq i32 %66, 1, !dbg !11296
  br i1 %cmp86, label %lor.end94, label %lor.rhs87, !dbg !11297

lor.rhs87:                                        ; preds = %lor.lhs.false85
  %67 = load i32, i32* %r2_type, align 4, !dbg !11298
  %cmp88 = icmp eq i32 %67, 5, !dbg !11299
  br i1 %cmp88, label %land.rhs91, label %lor.lhs.false89, !dbg !11300

lor.lhs.false89:                                  ; preds = %lor.rhs87
  %68 = load i32, i32* %r2_type, align 4, !dbg !11301
  %cmp90 = icmp eq i32 %68, 6, !dbg !11302
  br i1 %cmp90, label %land.rhs91, label %land.end93, !dbg !11303

land.rhs91:                                       ; preds = %lor.lhs.false89, %lor.rhs87
  %69 = load i32, i32* %r2_opnum, align 4, !dbg !11304
  %70 = load i32, i32* %r1_opnum, align 4, !dbg !11305
  %cmp92 = icmp sge i32 %69, %70, !dbg !11306
  br label %land.end93

land.end93:                                       ; preds = %land.rhs91, %lor.lhs.false89
  %71 = phi i1 [ false, %lor.lhs.false89 ], [ %cmp92, %land.rhs91 ], !dbg !11210
  br label %lor.end94, !dbg !11297

lor.end94:                                        ; preds = %land.end93, %lor.lhs.false85, %sw.bb83
  %72 = phi i1 [ true, %lor.lhs.false85 ], [ true, %sw.bb83 ], [ %71, %land.end93 ]
  %lor.ext95 = zext i1 %72 to i32, !dbg !11297
  store i32 %lor.ext95, i32* %retval, align 4, !dbg !11307
  br label %return, !dbg !11307

sw.bb96:                                          ; preds = %if.end
  %73 = load i32, i32* %r2_type, align 4, !dbg !11308
  %cmp97 = icmp eq i32 %73, 0, !dbg !11309
  br i1 %cmp97, label %lor.end104, label %lor.lhs.false98, !dbg !11310

lor.lhs.false98:                                  ; preds = %sw.bb96
  %74 = load i32, i32* %r2_type, align 4, !dbg !11311
  %cmp99 = icmp eq i32 %74, 1, !dbg !11312
  br i1 %cmp99, label %lor.end104, label %lor.lhs.false100, !dbg !11313

lor.lhs.false100:                                 ; preds = %lor.lhs.false98
  %75 = load i32, i32* %r2_type, align 4, !dbg !11314
  %cmp101 = icmp eq i32 %75, 2, !dbg !11315
  br i1 %cmp101, label %lor.end104, label %lor.rhs102, !dbg !11316

lor.rhs102:                                       ; preds = %lor.lhs.false100
  %76 = load i32, i32* %r2_type, align 4, !dbg !11317
  %cmp103 = icmp eq i32 %76, 7, !dbg !11318
  br label %lor.end104, !dbg !11316

lor.end104:                                       ; preds = %lor.rhs102, %lor.lhs.false100, %lor.lhs.false98, %sw.bb96
  %77 = phi i1 [ true, %lor.lhs.false100 ], [ true, %lor.lhs.false98 ], [ true, %sw.bb96 ], [ %cmp103, %lor.rhs102 ]
  %lor.ext105 = zext i1 %77 to i32, !dbg !11316
  store i32 %lor.ext105, i32* %retval, align 4, !dbg !11319
  br label %return, !dbg !11319

sw.bb106:                                         ; preds = %if.end
  %78 = load i32, i32* %r2_type, align 4, !dbg !11320
  %cmp107 = icmp eq i32 %78, 10, !dbg !11321
  %conv = zext i1 %cmp107 to i32, !dbg !11321
  store i32 %conv, i32* %retval, align 4, !dbg !11322
  br label %return, !dbg !11322

sw.bb108:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !11323
  br label %return, !dbg !11323

sw.default:                                       ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 5378, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11324
  br label %sw.epilog, !dbg !11325

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %retval, align 4, !dbg !11326
  br label %return, !dbg !11326

return:                                           ; preds = %sw.epilog, %sw.bb108, %sw.bb106, %lor.end104, %lor.end94, %lor.end81, %lor.end75, %lor.end60, %lor.end49, %lor.end38, %lor.end27, %lor.end, %if.then
  %79 = load i32, i32* %retval, align 4, !dbg !11327
  ret i32 %79, !dbg !11327
}

declare dso_local zeroext i8 @ix86_hard_regno_mode_ok(i32, i32) #2

declare dso_local zeroext i8 @ira_better_spill_reload_regno_p(i32*, i32*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @count_spilled_pseudo(i32 %spilled, i32 %spilled_nregs, i32 %reg) #0 !dbg !11328 {
entry:
  %spilled.addr = alloca i32, align 4
  %spilled_nregs.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %freq = alloca i32, align 4
  %r = alloca i32, align 4
  %nregs = alloca i32, align 4
  store i32 %spilled, i32* %spilled.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spilled.addr, metadata !11331, metadata !DIExpression()), !dbg !11332
  store i32 %spilled_nregs, i32* %spilled_nregs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spilled_nregs.addr, metadata !11333, metadata !DIExpression()), !dbg !11334
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !11335, metadata !DIExpression()), !dbg !11336
  call void @llvm.dbg.declare(metadata i32* %freq, metadata !11337, metadata !DIExpression()), !dbg !11338
  %0 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !11339
  %1 = load i32, i32* %reg.addr, align 4, !dbg !11339
  %idxprom = sext i32 %1 to i64, !dbg !11339
  %arrayidx = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %0, i64 %idxprom, !dbg !11339
  %freq1 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %arrayidx, i32 0, i32 0, !dbg !11339
  %2 = load i32, i32* %freq1, align 4, !dbg !11339
  store i32 %2, i32* %freq, align 4, !dbg !11338
  call void @llvm.dbg.declare(metadata i32* %r, metadata !11340, metadata !DIExpression()), !dbg !11341
  %3 = load i16*, i16** @reg_renumber, align 8, !dbg !11342
  %4 = load i32, i32* %reg.addr, align 4, !dbg !11343
  %idxprom2 = sext i32 %4 to i64, !dbg !11342
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 %idxprom2, !dbg !11342
  %5 = load i16, i16* %arrayidx3, align 2, !dbg !11342
  %conv = sext i16 %5 to i32, !dbg !11342
  store i32 %conv, i32* %r, align 4, !dbg !11341
  call void @llvm.dbg.declare(metadata i32* %nregs, metadata !11344, metadata !DIExpression()), !dbg !11345
  %6 = load i32, i32* %r, align 4, !dbg !11346
  %idxprom4 = sext i32 %6 to i64, !dbg !11347
  %arrayidx5 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom4, !dbg !11347
  %7 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !11348
  %8 = load i32, i32* %reg.addr, align 4, !dbg !11348
  %idxprom6 = sext i32 %8 to i64, !dbg !11348
  %arrayidx7 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %7, i64 %idxprom6, !dbg !11348
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx7, align 8, !dbg !11348
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !11348
  %bf.load = load i32, i32* %10, align 8, !dbg !11348
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !11348
  %bf.clear = and i32 %bf.lshr, 255, !dbg !11348
  %idxprom8 = zext i32 %bf.clear to i64, !dbg !11347
  %arrayidx9 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx5, i64 0, i64 %idxprom8, !dbg !11347
  %11 = load i8, i8* %arrayidx9, align 1, !dbg !11347
  %conv10 = zext i8 %11 to i32, !dbg !11347
  store i32 %conv10, i32* %nregs, align 4, !dbg !11345
  %12 = load i8, i8* @ira_conflicts_p, align 1, !dbg !11349
  %conv11 = zext i8 %12 to i32, !dbg !11349
  %tobool = icmp ne i32 %conv11, 0, !dbg !11349
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !11351

land.lhs.true:                                    ; preds = %entry
  %13 = load i32, i32* %r, align 4, !dbg !11352
  %cmp = icmp slt i32 %13, 0, !dbg !11353
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11354

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %14 = load i32, i32* %reg.addr, align 4, !dbg !11355
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* @spilled_pseudos, i32 %14), !dbg !11355
  %tobool13 = icmp ne i32 %call, 0, !dbg !11355
  br i1 %tobool13, label %if.then, label %lor.lhs.false14, !dbg !11356

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %15 = load i32, i32* %spilled.addr, align 4, !dbg !11357
  %16 = load i32, i32* %spilled_nregs.addr, align 4, !dbg !11358
  %add = add nsw i32 %15, %16, !dbg !11359
  %17 = load i32, i32* %r, align 4, !dbg !11360
  %cmp15 = icmp sle i32 %add, %17, !dbg !11361
  br i1 %cmp15, label %if.then, label %lor.lhs.false17, !dbg !11362

lor.lhs.false17:                                  ; preds = %lor.lhs.false14
  %18 = load i32, i32* %r, align 4, !dbg !11363
  %19 = load i32, i32* %nregs, align 4, !dbg !11364
  %add18 = add nsw i32 %18, %19, !dbg !11365
  %20 = load i32, i32* %spilled.addr, align 4, !dbg !11366
  %cmp19 = icmp sle i32 %add18, %20, !dbg !11367
  br i1 %cmp19, label %if.then, label %if.end, !dbg !11368

if.then:                                          ; preds = %lor.lhs.false17, %lor.lhs.false14, %lor.lhs.false, %land.lhs.true
  br label %while.end, !dbg !11369

if.end:                                           ; preds = %lor.lhs.false17
  %21 = load i32, i32* %reg.addr, align 4, !dbg !11370
  %call21 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* @spilled_pseudos, i32 %21), !dbg !11370
  %22 = load i32, i32* %freq, align 4, !dbg !11371
  %23 = load i32, i32* %r, align 4, !dbg !11372
  %idxprom22 = sext i32 %23 to i64, !dbg !11373
  %arrayidx23 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_add_cost, i64 0, i64 %idxprom22, !dbg !11373
  %24 = load i32, i32* %arrayidx23, align 4, !dbg !11374
  %sub = sub nsw i32 %24, %22, !dbg !11374
  store i32 %sub, i32* %arrayidx23, align 4, !dbg !11374
  br label %while.cond, !dbg !11375

while.cond:                                       ; preds = %while.body, %if.end
  %25 = load i32, i32* %nregs, align 4, !dbg !11376
  %dec = add nsw i32 %25, -1, !dbg !11376
  store i32 %dec, i32* %nregs, align 4, !dbg !11376
  %cmp24 = icmp sgt i32 %25, 0, !dbg !11377
  br i1 %cmp24, label %while.body, label %while.end, !dbg !11375

while.body:                                       ; preds = %while.cond
  %26 = load i32, i32* %r, align 4, !dbg !11378
  %27 = load i32, i32* %nregs, align 4, !dbg !11380
  %add26 = add nsw i32 %26, %27, !dbg !11381
  %idxprom27 = sext i32 %add26 to i64, !dbg !11382
  %arrayidx28 = getelementptr inbounds [53 x i32], [53 x i32]* @hard_regno_to_pseudo_regno, i64 0, i64 %idxprom27, !dbg !11382
  store i32 -1, i32* %arrayidx28, align 4, !dbg !11383
  %28 = load i32, i32* %freq, align 4, !dbg !11384
  %29 = load i32, i32* %r, align 4, !dbg !11385
  %30 = load i32, i32* %nregs, align 4, !dbg !11386
  %add29 = add nsw i32 %29, %30, !dbg !11387
  %idxprom30 = sext i32 %add29 to i64, !dbg !11388
  %arrayidx31 = getelementptr inbounds [53 x i32], [53 x i32]* @spill_cost, i64 0, i64 %idxprom30, !dbg !11388
  %31 = load i32, i32* %arrayidx31, align 4, !dbg !11389
  %sub32 = sub nsw i32 %31, %28, !dbg !11389
  store i32 %sub32, i32* %arrayidx31, align 4, !dbg !11389
  br label %while.cond, !dbg !11375, !llvm.loop !11390

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !11392
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @reloads_unique_chain_p(i32 %r1, i32 %r2) #0 !dbg !11393 {
entry:
  %retval = alloca i8, align 1
  %r1.addr = alloca i32, align 4
  %r2.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %r1, i32* %r1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r1.addr, metadata !11396, metadata !DIExpression()), !dbg !11397
  store i32 %r2, i32* %r2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r2.addr, metadata !11398, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11400, metadata !DIExpression()), !dbg !11401
  %0 = load i32, i32* %r1.addr, align 4, !dbg !11402
  %idxprom = sext i32 %0 to i64, !dbg !11404
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom, !dbg !11404
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 0, !dbg !11405
  %1 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11405
  %tobool = icmp ne %struct.rtx_def* %1, null, !dbg !11404
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11406

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %r2.addr, align 4, !dbg !11407
  %idxprom1 = sext i32 %2 to i64, !dbg !11408
  %arrayidx2 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1, !dbg !11408
  %in3 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2, i32 0, i32 0, !dbg !11409
  %3 = load %struct.rtx_def*, %struct.rtx_def** %in3, align 8, !dbg !11409
  %tobool4 = icmp ne %struct.rtx_def* %3, null, !dbg !11408
  br i1 %tobool4, label %if.end, label %if.then, !dbg !11410

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !11411
  br label %return, !dbg !11411

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i32, i32* %r1.addr, align 4, !dbg !11412
  %idxprom5 = sext i32 %4 to i64, !dbg !11414
  %arrayidx6 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom5, !dbg !11414
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx6, i32 0, i32 1, !dbg !11415
  %5 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !11415
  %tobool7 = icmp ne %struct.rtx_def* %5, null, !dbg !11414
  br i1 %tobool7, label %if.then13, label %lor.lhs.false8, !dbg !11416

lor.lhs.false8:                                   ; preds = %if.end
  %6 = load i32, i32* %r2.addr, align 4, !dbg !11417
  %idxprom9 = sext i32 %6 to i64, !dbg !11418
  %arrayidx10 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom9, !dbg !11418
  %out11 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx10, i32 0, i32 1, !dbg !11419
  %7 = load %struct.rtx_def*, %struct.rtx_def** %out11, align 8, !dbg !11419
  %tobool12 = icmp ne %struct.rtx_def* %7, null, !dbg !11418
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !11420

if.then13:                                        ; preds = %lor.lhs.false8, %if.end
  store i8 0, i8* %retval, align 1, !dbg !11421
  br label %return, !dbg !11421

if.end14:                                         ; preds = %lor.lhs.false8
  %8 = load i32, i32* %r1.addr, align 4, !dbg !11422
  %idxprom15 = sext i32 %8 to i64, !dbg !11424
  %arrayidx16 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom15, !dbg !11424
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx16, i32 0, i32 12, !dbg !11425
  %9 = load i32, i32* %opnum, align 8, !dbg !11425
  %10 = load i32, i32* %r2.addr, align 4, !dbg !11426
  %idxprom17 = sext i32 %10 to i64, !dbg !11427
  %arrayidx18 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom17, !dbg !11427
  %opnum19 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx18, i32 0, i32 12, !dbg !11428
  %11 = load i32, i32* %opnum19, align 8, !dbg !11428
  %cmp = icmp ne i32 %9, %11, !dbg !11429
  br i1 %cmp, label %if.then58, label %lor.lhs.false20, !dbg !11430

lor.lhs.false20:                                  ; preds = %if.end14
  %12 = load i32, i32* %r1.addr, align 4, !dbg !11431
  %idxprom21 = sext i32 %12 to i64, !dbg !11432
  %arrayidx22 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom21, !dbg !11432
  %in23 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx22, i32 0, i32 0, !dbg !11433
  %13 = load %struct.rtx_def*, %struct.rtx_def** %in23, align 8, !dbg !11433
  %14 = load i32, i32* %r2.addr, align 4, !dbg !11434
  %idxprom24 = sext i32 %14 to i64, !dbg !11435
  %arrayidx25 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom24, !dbg !11435
  %in26 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx25, i32 0, i32 0, !dbg !11436
  %15 = load %struct.rtx_def*, %struct.rtx_def** %in26, align 8, !dbg !11436
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %13, %struct.rtx_def* %15), !dbg !11437
  %tobool27 = icmp ne i32 %call, 0, !dbg !11437
  br i1 %tobool27, label %if.then58, label %lor.lhs.false28, !dbg !11438

lor.lhs.false28:                                  ; preds = %lor.lhs.false20
  %16 = load i32, i32* %r1.addr, align 4, !dbg !11439
  %idxprom29 = sext i32 %16 to i64, !dbg !11440
  %arrayidx30 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom29, !dbg !11440
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx30, i32 0, i32 18, !dbg !11441
  %bf.load = load i8, i8* %optional, align 8, !dbg !11441
  %bf.clear = and i8 %bf.load, 1, !dbg !11441
  %bf.cast = zext i8 %bf.clear to i32, !dbg !11441
  %tobool31 = icmp ne i32 %bf.cast, 0, !dbg !11440
  br i1 %tobool31, label %if.then58, label %lor.lhs.false32, !dbg !11442

lor.lhs.false32:                                  ; preds = %lor.lhs.false28
  %17 = load i32, i32* %r2.addr, align 4, !dbg !11443
  %idxprom33 = sext i32 %17 to i64, !dbg !11444
  %arrayidx34 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom33, !dbg !11444
  %optional35 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx34, i32 0, i32 18, !dbg !11445
  %bf.load36 = load i8, i8* %optional35, align 8, !dbg !11445
  %bf.clear37 = and i8 %bf.load36, 1, !dbg !11445
  %bf.cast38 = zext i8 %bf.clear37 to i32, !dbg !11445
  %tobool39 = icmp ne i32 %bf.cast38, 0, !dbg !11444
  br i1 %tobool39, label %if.then58, label %lor.lhs.false40, !dbg !11446

lor.lhs.false40:                                  ; preds = %lor.lhs.false32
  %18 = load i32, i32* %r1.addr, align 4, !dbg !11447
  %idxprom41 = sext i32 %18 to i64, !dbg !11448
  %arrayidx42 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom41, !dbg !11448
  %in43 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx42, i32 0, i32 0, !dbg !11449
  %19 = load %struct.rtx_def*, %struct.rtx_def** %in43, align 8, !dbg !11449
  %20 = load i32, i32* %r2.addr, align 4, !dbg !11450
  %idxprom44 = sext i32 %20 to i64, !dbg !11451
  %arrayidx45 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom44, !dbg !11451
  %in46 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx45, i32 0, i32 0, !dbg !11452
  %21 = load %struct.rtx_def*, %struct.rtx_def** %in46, align 8, !dbg !11452
  %call47 = call i32 @reg_mentioned_p(%struct.rtx_def* %19, %struct.rtx_def* %21), !dbg !11453
  %tobool48 = icmp ne i32 %call47, 0, !dbg !11453
  br i1 %tobool48, label %if.end59, label %lor.lhs.false49, !dbg !11454

lor.lhs.false49:                                  ; preds = %lor.lhs.false40
  %22 = load i32, i32* %r2.addr, align 4, !dbg !11455
  %idxprom50 = sext i32 %22 to i64, !dbg !11456
  %arrayidx51 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom50, !dbg !11456
  %in52 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx51, i32 0, i32 0, !dbg !11457
  %23 = load %struct.rtx_def*, %struct.rtx_def** %in52, align 8, !dbg !11457
  %24 = load i32, i32* %r1.addr, align 4, !dbg !11458
  %idxprom53 = sext i32 %24 to i64, !dbg !11459
  %arrayidx54 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom53, !dbg !11459
  %in55 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx54, i32 0, i32 0, !dbg !11460
  %25 = load %struct.rtx_def*, %struct.rtx_def** %in55, align 8, !dbg !11460
  %call56 = call i32 @reg_mentioned_p(%struct.rtx_def* %23, %struct.rtx_def* %25), !dbg !11461
  %tobool57 = icmp ne i32 %call56, 0, !dbg !11461
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !11462

if.then58:                                        ; preds = %lor.lhs.false49, %lor.lhs.false32, %lor.lhs.false28, %lor.lhs.false20, %if.end14
  store i8 0, i8* %retval, align 1, !dbg !11463
  br label %return, !dbg !11463

if.end59:                                         ; preds = %lor.lhs.false49, %lor.lhs.false40
  store i32 0, i32* %i, align 4, !dbg !11464
  br label %for.cond, !dbg !11466

for.cond:                                         ; preds = %for.inc, %if.end59
  %26 = load i32, i32* %i, align 4, !dbg !11467
  %27 = load i32, i32* @n_reloads, align 4, !dbg !11469
  %cmp60 = icmp slt i32 %26, %27, !dbg !11470
  br i1 %cmp60, label %for.body, label %for.end, !dbg !11471

for.body:                                         ; preds = %for.cond
  %28 = load i32, i32* %i, align 4, !dbg !11472
  %29 = load i32, i32* %r1.addr, align 4, !dbg !11474
  %cmp61 = icmp ne i32 %28, %29, !dbg !11475
  br i1 %cmp61, label %land.lhs.true, label %if.end79, !dbg !11476

land.lhs.true:                                    ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !11477
  %31 = load i32, i32* %r2.addr, align 4, !dbg !11478
  %cmp62 = icmp ne i32 %30, %31, !dbg !11479
  br i1 %cmp62, label %land.lhs.true63, label %if.end79, !dbg !11480

land.lhs.true63:                                  ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4, !dbg !11481
  %idxprom64 = sext i32 %32 to i64, !dbg !11482
  %arrayidx65 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom64, !dbg !11482
  %in66 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx65, i32 0, i32 0, !dbg !11483
  %33 = load %struct.rtx_def*, %struct.rtx_def** %in66, align 8, !dbg !11483
  %tobool67 = icmp ne %struct.rtx_def* %33, null, !dbg !11482
  br i1 %tobool67, label %if.then68, label %if.end79, !dbg !11484

if.then68:                                        ; preds = %land.lhs.true63
  %34 = load i32, i32* %r1.addr, align 4, !dbg !11485
  %idxprom69 = sext i32 %34 to i64, !dbg !11488
  %arrayidx70 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom69, !dbg !11488
  %in71 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx70, i32 0, i32 0, !dbg !11489
  %35 = load %struct.rtx_def*, %struct.rtx_def** %in71, align 8, !dbg !11489
  %36 = load i32, i32* %i, align 4, !dbg !11490
  %idxprom72 = sext i32 %36 to i64, !dbg !11491
  %arrayidx73 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom72, !dbg !11491
  %in74 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx73, i32 0, i32 0, !dbg !11492
  %37 = load %struct.rtx_def*, %struct.rtx_def** %in74, align 8, !dbg !11492
  %call75 = call i32 @reg_mentioned_p(%struct.rtx_def* %35, %struct.rtx_def* %37), !dbg !11493
  %tobool76 = icmp ne i32 %call75, 0, !dbg !11493
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !11494

if.then77:                                        ; preds = %if.then68
  store i8 0, i8* %retval, align 1, !dbg !11495
  br label %return, !dbg !11495

if.end78:                                         ; preds = %if.then68
  br label %if.end79, !dbg !11496

if.end79:                                         ; preds = %if.end78, %land.lhs.true63, %land.lhs.true, %for.body
  br label %for.inc, !dbg !11483

for.inc:                                          ; preds = %if.end79
  %38 = load i32, i32* %i, align 4, !dbg !11497
  %inc = add nsw i32 %38, 1, !dbg !11497
  store i32 %inc, i32* %i, align 4, !dbg !11497
  br label %for.cond, !dbg !11498, !llvm.loop !11499

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !11501
  br label %return, !dbg !11501

return:                                           ; preds = %for.end, %if.then77, %if.then58, %if.then13, %if.then
  %39 = load i8, i8* %retval, align 1, !dbg !11502
  ret i8 %39, !dbg !11502
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @gen_reload_chain_without_interm_reg_p(i32 %r1, i32 %r2) #0 !dbg !11503 {
entry:
  %r1.addr = alloca i32, align 4
  %r2.addr = alloca i32, align 4
  %result = alloca i8, align 1
  %regno = alloca i32, align 4
  %n = alloca i32, align 4
  %code = alloca i32, align 4
  %out = alloca %struct.rtx_def*, align 8
  %in = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %last = alloca %struct.rtx_def*, align 8
  %where = alloca %struct.rtx_def**, align 8
  store i32 %r1, i32* %r1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r1.addr, metadata !11504, metadata !DIExpression()), !dbg !11505
  store i32 %r2, i32* %r2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r2.addr, metadata !11506, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.declare(metadata i8* %result, metadata !11508, metadata !DIExpression()), !dbg !11509
  store i8 1, i8* %result, align 1, !dbg !11509
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !11510, metadata !DIExpression()), !dbg !11511
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11512, metadata !DIExpression()), !dbg !11513
  call void @llvm.dbg.declare(metadata i32* %code, metadata !11514, metadata !DIExpression()), !dbg !11515
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out, metadata !11516, metadata !DIExpression()), !dbg !11517
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in, metadata !11518, metadata !DIExpression()), !dbg !11519
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !11520, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !11522, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last, metadata !11524, metadata !DIExpression()), !dbg !11525
  %call = call %struct.rtx_def* @get_last_insn(), !dbg !11526
  store %struct.rtx_def* %call, %struct.rtx_def** %last, align 8, !dbg !11525
  %0 = load i32, i32* %r1.addr, align 4, !dbg !11527
  %idxprom = sext i32 %0 to i64, !dbg !11529
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom, !dbg !11529
  %in1 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 0, !dbg !11530
  %1 = load %struct.rtx_def*, %struct.rtx_def** %in1, align 8, !dbg !11530
  %2 = load i32, i32* %r2.addr, align 4, !dbg !11531
  %idxprom2 = sext i32 %2 to i64, !dbg !11532
  %arrayidx3 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom2, !dbg !11532
  %in4 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3, i32 0, i32 0, !dbg !11533
  %3 = load %struct.rtx_def*, %struct.rtx_def** %in4, align 8, !dbg !11533
  %call5 = call i32 @reg_mentioned_p(%struct.rtx_def* %1, %struct.rtx_def* %3), !dbg !11534
  %tobool = icmp ne i32 %call5, 0, !dbg !11534
  br i1 %tobool, label %if.then, label %if.end, !dbg !11535

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %r1.addr, align 4, !dbg !11536
  store i32 %4, i32* %n, align 4, !dbg !11538
  %5 = load i32, i32* %r2.addr, align 4, !dbg !11539
  store i32 %5, i32* %r1.addr, align 4, !dbg !11540
  %6 = load i32, i32* %n, align 4, !dbg !11541
  store i32 %6, i32* %r2.addr, align 4, !dbg !11542
  br label %if.end, !dbg !11543

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %r2.addr, align 4, !dbg !11544
  %idxprom6 = sext i32 %7 to i64, !dbg !11544
  %arrayidx7 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom6, !dbg !11544
  %in8 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx7, i32 0, i32 0, !dbg !11544
  %8 = load %struct.rtx_def*, %struct.rtx_def** %in8, align 8, !dbg !11544
  %9 = load i32, i32* %r1.addr, align 4, !dbg !11544
  %idxprom9 = sext i32 %9 to i64, !dbg !11544
  %arrayidx10 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom9, !dbg !11544
  %in11 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx10, i32 0, i32 0, !dbg !11544
  %10 = load %struct.rtx_def*, %struct.rtx_def** %in11, align 8, !dbg !11544
  %call12 = call i32 @reg_mentioned_p(%struct.rtx_def* %8, %struct.rtx_def* %10), !dbg !11544
  %tobool13 = icmp ne i32 %call12, 0, !dbg !11544
  br i1 %tobool13, label %cond.false, label %cond.true, !dbg !11544

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 5254, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11544
  br label %cond.end, !dbg !11544

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !11544

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !11544
  %11 = load i32, i32* %r1.addr, align 4, !dbg !11545
  %idxprom14 = sext i32 %11 to i64, !dbg !11546
  %arrayidx15 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom14, !dbg !11546
  %regno16 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx15, i32 0, i32 10, !dbg !11547
  %12 = load i32, i32* %regno16, align 8, !dbg !11547
  %cmp = icmp sge i32 %12, 0, !dbg !11548
  br i1 %cmp, label %cond.true17, label %cond.false21, !dbg !11546

cond.true17:                                      ; preds = %cond.end
  %13 = load i32, i32* %r1.addr, align 4, !dbg !11549
  %idxprom18 = sext i32 %13 to i64, !dbg !11550
  %arrayidx19 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom18, !dbg !11550
  %regno20 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx19, i32 0, i32 10, !dbg !11551
  %14 = load i32, i32* %regno20, align 8, !dbg !11551
  br label %cond.end25, !dbg !11546

cond.false21:                                     ; preds = %cond.end
  %15 = load i32, i32* %r2.addr, align 4, !dbg !11552
  %idxprom22 = sext i32 %15 to i64, !dbg !11553
  %arrayidx23 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom22, !dbg !11553
  %regno24 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx23, i32 0, i32 10, !dbg !11554
  %16 = load i32, i32* %regno24, align 8, !dbg !11554
  br label %cond.end25, !dbg !11546

cond.end25:                                       ; preds = %cond.false21, %cond.true17
  %cond26 = phi i32 [ %14, %cond.true17 ], [ %16, %cond.false21 ], !dbg !11546
  store i32 %cond26, i32* %regno, align 4, !dbg !11555
  %17 = load i32, i32* %regno, align 4, !dbg !11556
  %cmp27 = icmp sge i32 %17, 0, !dbg !11556
  br i1 %cmp27, label %cond.false29, label %cond.true28, !dbg !11556

cond.true28:                                      ; preds = %cond.end25
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 5256, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11556
  br label %cond.end30, !dbg !11556

cond.false29:                                     ; preds = %cond.end25
  br label %cond.end30, !dbg !11556

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i32 [ 0, %cond.true28 ], [ 0, %cond.false29 ], !dbg !11556
  %18 = load i32, i32* %r1.addr, align 4, !dbg !11557
  %idxprom32 = sext i32 %18 to i64, !dbg !11558
  %arrayidx33 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom32, !dbg !11558
  %mode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx33, i32 0, i32 5, !dbg !11559
  %19 = load i32, i32* %mode, align 4, !dbg !11559
  %20 = load i32, i32* %regno, align 4, !dbg !11560
  %call34 = call %struct.rtx_def* @gen_rtx_REG(i32 %19, i32 %20), !dbg !11561
  store %struct.rtx_def* %call34, %struct.rtx_def** %out, align 8, !dbg !11562
  %21 = load i32, i32* %r1.addr, align 4, !dbg !11563
  %idxprom35 = sext i32 %21 to i64, !dbg !11564
  %arrayidx36 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom35, !dbg !11564
  %in37 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx36, i32 0, i32 0, !dbg !11565
  %22 = load %struct.rtx_def*, %struct.rtx_def** %in37, align 8, !dbg !11565
  store %struct.rtx_def* %22, %struct.rtx_def** %in, align 8, !dbg !11566
  %23 = load i32, i32* %r2.addr, align 4, !dbg !11567
  %idxprom38 = sext i32 %23 to i64, !dbg !11568
  %arrayidx39 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom38, !dbg !11568
  %in40 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx39, i32 0, i32 0, !dbg !11569
  %24 = load %struct.rtx_def*, %struct.rtx_def** %in40, align 8, !dbg !11569
  %25 = load i32, i32* %r2.addr, align 4, !dbg !11570
  %idxprom41 = sext i32 %25 to i64, !dbg !11571
  %arrayidx42 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom41, !dbg !11571
  %mode43 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx42, i32 0, i32 5, !dbg !11572
  %26 = load i32, i32* %mode43, align 4, !dbg !11572
  %27 = load i32, i32* %regno, align 4, !dbg !11573
  %call44 = call %struct.rtx_def* @gen_rtx_REG(i32 %26, i32 %27), !dbg !11574
  call void @substitute(%struct.rtx_def** %in, %struct.rtx_def* %24, %struct.rtx_def* %call44), !dbg !11575
  %28 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11576
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !11576
  %bf.load = load i32, i32* %29, align 8, !dbg !11576
  %bf.clear = and i32 %bf.load, 65535, !dbg !11576
  %cmp45 = icmp eq i32 %bf.clear, 39, !dbg !11578
  br i1 %cmp45, label %land.lhs.true, label %if.end77, !dbg !11579

land.lhs.true:                                    ; preds = %cond.end30
  %30 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11580
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !11580
  %bf.load46 = load i32, i32* %31, align 8, !dbg !11580
  %bf.lshr = lshr i32 %bf.load46, 16, !dbg !11580
  %bf.clear47 = and i32 %bf.lshr, 255, !dbg !11580
  %idxprom48 = zext i32 %bf.clear47 to i64, !dbg !11580
  %arrayidx49 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom48, !dbg !11580
  %32 = load i8, i8* %arrayidx49, align 1, !dbg !11580
  %conv = zext i8 %32 to i16, !dbg !11580
  %conv50 = zext i16 %conv to i32, !dbg !11580
  %33 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11581
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !11581
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !11581
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !11581
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !11581
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11581
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !11581
  %bf.load52 = load i32, i32* %35, align 8, !dbg !11581
  %bf.lshr53 = lshr i32 %bf.load52, 16, !dbg !11581
  %bf.clear54 = and i32 %bf.lshr53, 255, !dbg !11581
  %idxprom55 = zext i32 %bf.clear54 to i64, !dbg !11581
  %arrayidx56 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom55, !dbg !11581
  %36 = load i8, i8* %arrayidx56, align 1, !dbg !11581
  %conv57 = zext i8 %36 to i16, !dbg !11581
  %conv58 = zext i16 %conv57 to i32, !dbg !11581
  %cmp59 = icmp sgt i32 %conv50, %conv58, !dbg !11582
  br i1 %cmp59, label %land.lhs.true61, label %if.end77, !dbg !11583

land.lhs.true61:                                  ; preds = %land.lhs.true
  %37 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11584
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !11584
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !11584
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 0, !dbg !11584
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**, !dbg !11584
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !11584
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !11584
  %bf.load66 = load i32, i32* %39, align 8, !dbg !11584
  %bf.lshr67 = lshr i32 %bf.load66, 16, !dbg !11584
  %bf.clear68 = and i32 %bf.lshr67, 255, !dbg !11584
  %40 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !11585
  %call69 = call %struct.rtx_def* @gen_lowpart_common(i32 %bf.clear68, %struct.rtx_def* %40), !dbg !11586
  store %struct.rtx_def* %call69, %struct.rtx_def** %tem, align 8, !dbg !11587
  %cmp70 = icmp ne %struct.rtx_def* %call69, null, !dbg !11588
  br i1 %cmp70, label %if.then72, label %if.end77, !dbg !11589

if.then72:                                        ; preds = %land.lhs.true61
  %41 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11590
  %u73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !11590
  %fld74 = bitcast %union.u* %u73 to [1 x %union.rtunion_def]*, !dbg !11590
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i64 0, i64 0, !dbg !11590
  %rt_rtx76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**, !dbg !11590
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx76, align 8, !dbg !11590
  store %struct.rtx_def* %42, %struct.rtx_def** %in, align 8, !dbg !11591
  %43 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !11592
  store %struct.rtx_def* %43, %struct.rtx_def** %out, align 8, !dbg !11593
  br label %if.end77, !dbg !11594

if.end77:                                         ; preds = %if.then72, %land.lhs.true61, %land.lhs.true, %cond.end30
  %44 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11595
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !11595
  %bf.load78 = load i32, i32* %45, align 8, !dbg !11595
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !11595
  %cmp80 = icmp eq i32 %bf.clear79, 49, !dbg !11597
  br i1 %cmp80, label %land.lhs.true82, label %if.end156, !dbg !11598

land.lhs.true82:                                  ; preds = %if.end77
  %46 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11599
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !11599
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !11599
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 0, !dbg !11599
  %rt_rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**, !dbg !11599
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !11599
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !11599
  %bf.load87 = load i32, i32* %48, align 8, !dbg !11599
  %bf.clear88 = and i32 %bf.load87, 65535, !dbg !11599
  %cmp89 = icmp eq i32 %bf.clear88, 37, !dbg !11599
  br i1 %cmp89, label %land.lhs.true108, label %lor.lhs.false, !dbg !11600

lor.lhs.false:                                    ; preds = %land.lhs.true82
  %49 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11601
  %u91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !11601
  %fld92 = bitcast %union.u* %u91 to [1 x %union.rtunion_def]*, !dbg !11601
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i64 0, i64 0, !dbg !11601
  %rt_rtx94 = bitcast %union.rtunion_def* %arrayidx93 to %struct.rtx_def**, !dbg !11601
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx94, align 8, !dbg !11601
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !11601
  %bf.load95 = load i32, i32* %51, align 8, !dbg !11601
  %bf.clear96 = and i32 %bf.load95, 65535, !dbg !11601
  %cmp97 = icmp eq i32 %bf.clear96, 39, !dbg !11602
  br i1 %cmp97, label %land.lhs.true108, label %lor.lhs.false99, !dbg !11603

lor.lhs.false99:                                  ; preds = %lor.lhs.false
  %52 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11604
  %u100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !11604
  %fld101 = bitcast %union.u* %u100 to [1 x %union.rtunion_def]*, !dbg !11604
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i64 0, i64 0, !dbg !11604
  %rt_rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**, !dbg !11604
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx103, align 8, !dbg !11604
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !11604
  %bf.load104 = load i32, i32* %54, align 8, !dbg !11604
  %bf.clear105 = and i32 %bf.load104, 65535, !dbg !11604
  %cmp106 = icmp eq i32 %bf.clear105, 43, !dbg !11604
  br i1 %cmp106, label %land.lhs.true108, label %if.end156, !dbg !11605

land.lhs.true108:                                 ; preds = %lor.lhs.false99, %lor.lhs.false, %land.lhs.true82
  %55 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11606
  %u109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !11606
  %fld110 = bitcast %union.u* %u109 to [1 x %union.rtunion_def]*, !dbg !11606
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i64 0, i64 1, !dbg !11606
  %rt_rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**, !dbg !11606
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx112, align 8, !dbg !11606
  %57 = bitcast %struct.rtx_def* %56 to i32*, !dbg !11606
  %bf.load113 = load i32, i32* %57, align 8, !dbg !11606
  %bf.clear114 = and i32 %bf.load113, 65535, !dbg !11606
  %cmp115 = icmp eq i32 %bf.clear114, 37, !dbg !11606
  br i1 %cmp115, label %if.then146, label %lor.lhs.false117, !dbg !11607

lor.lhs.false117:                                 ; preds = %land.lhs.true108
  %58 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11608
  %u118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !11608
  %fld119 = bitcast %union.u* %u118 to [1 x %union.rtunion_def]*, !dbg !11608
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i64 0, i64 1, !dbg !11608
  %rt_rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**, !dbg !11608
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx121, align 8, !dbg !11608
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !11608
  %bf.load122 = load i32, i32* %60, align 8, !dbg !11608
  %bf.clear123 = and i32 %bf.load122, 65535, !dbg !11608
  %cmp124 = icmp eq i32 %bf.clear123, 39, !dbg !11609
  br i1 %cmp124, label %if.then146, label %lor.lhs.false126, !dbg !11610

lor.lhs.false126:                                 ; preds = %lor.lhs.false117
  %61 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11611
  %u127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !11611
  %fld128 = bitcast %union.u* %u127 to [1 x %union.rtunion_def]*, !dbg !11611
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i64 0, i64 1, !dbg !11611
  %rt_rtx130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtx_def**, !dbg !11611
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx130, align 8, !dbg !11611
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !11611
  %bf.load131 = load i32, i32* %63, align 8, !dbg !11611
  %bf.clear132 = and i32 %bf.load131, 65535, !dbg !11611
  %idxprom133 = sext i32 %bf.clear132 to i64, !dbg !11611
  %arrayidx134 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom133, !dbg !11611
  %64 = load i32, i32* %arrayidx134, align 4, !dbg !11611
  %cmp135 = icmp eq i32 %64, 9, !dbg !11611
  br i1 %cmp135, label %if.then146, label %lor.lhs.false137, !dbg !11612

lor.lhs.false137:                                 ; preds = %lor.lhs.false126
  %65 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11613
  %u138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !11613
  %fld139 = bitcast %union.u* %u138 to [1 x %union.rtunion_def]*, !dbg !11613
  %arrayidx140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld139, i64 0, i64 1, !dbg !11613
  %rt_rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**, !dbg !11613
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx141, align 8, !dbg !11613
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !11613
  %bf.load142 = load i32, i32* %67, align 8, !dbg !11613
  %bf.clear143 = and i32 %bf.load142, 65535, !dbg !11613
  %cmp144 = icmp eq i32 %bf.clear143, 43, !dbg !11613
  br i1 %cmp144, label %if.then146, label %if.end156, !dbg !11614

if.then146:                                       ; preds = %lor.lhs.false137, %lor.lhs.false126, %lor.lhs.false117, %land.lhs.true108
  %68 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !11615
  %69 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !11615
  %call147 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %68, %struct.rtx_def* %69), !dbg !11615
  %call148 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call147), !dbg !11617
  store %struct.rtx_def* %call148, %struct.rtx_def** %insn, align 8, !dbg !11618
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !11619
  %call149 = call i32 @recog_memoized(%struct.rtx_def* %70), !dbg !11620
  store i32 %call149, i32* %code, align 4, !dbg !11621
  store i8 0, i8* %result, align 1, !dbg !11622
  %71 = load i32, i32* %code, align 4, !dbg !11623
  %cmp150 = icmp sge i32 %71, 0, !dbg !11625
  br i1 %cmp150, label %if.then152, label %if.end155, !dbg !11626

if.then152:                                       ; preds = %if.then146
  %72 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !11627
  call void @extract_insn(%struct.rtx_def* %72), !dbg !11629
  %call153 = call i32 @constrain_operands(i32 1), !dbg !11630
  %conv154 = trunc i32 %call153 to i8, !dbg !11630
  store i8 %conv154, i8* %result, align 1, !dbg !11631
  br label %if.end155, !dbg !11632

if.end155:                                        ; preds = %if.then152, %if.then146
  %73 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !11633
  call void @delete_insns_since(%struct.rtx_def* %73), !dbg !11634
  br label %if.end156, !dbg !11635

if.end156:                                        ; preds = %if.end155, %lor.lhs.false137, %lor.lhs.false99, %if.end77
  br label %while.cond, !dbg !11636

while.cond:                                       ; preds = %cond.end169, %if.end156
  %74 = load %struct.VEC_rtx_p_heap*, %struct.VEC_rtx_p_heap** @substitute_stack, align 8, !dbg !11637
  %tobool157 = icmp ne %struct.VEC_rtx_p_heap* %74, null, !dbg !11637
  br i1 %tobool157, label %cond.true158, label %cond.false159, !dbg !11637

cond.true158:                                     ; preds = %while.cond
  %75 = load %struct.VEC_rtx_p_heap*, %struct.VEC_rtx_p_heap** @substitute_stack, align 8, !dbg !11637
  %base = getelementptr inbounds %struct.VEC_rtx_p_heap, %struct.VEC_rtx_p_heap* %75, i32 0, i32 0, !dbg !11637
  br label %cond.end160, !dbg !11637

cond.false159:                                    ; preds = %while.cond
  br label %cond.end160, !dbg !11637

cond.end160:                                      ; preds = %cond.false159, %cond.true158
  %cond161 = phi %struct.VEC_rtx_p_base* [ %base, %cond.true158 ], [ null, %cond.false159 ], !dbg !11637
  %call162 = call i32 @VEC_rtx_p_base_length(%struct.VEC_rtx_p_base* %cond161), !dbg !11637
  %cmp163 = icmp eq i32 %call162, 0, !dbg !11637
  %lnot = xor i1 %cmp163, true, !dbg !11638
  br i1 %lnot, label %while.body, label %while.end, !dbg !11636

while.body:                                       ; preds = %cond.end160
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %where, metadata !11639, metadata !DIExpression()), !dbg !11641
  %76 = load %struct.VEC_rtx_p_heap*, %struct.VEC_rtx_p_heap** @substitute_stack, align 8, !dbg !11642
  %tobool165 = icmp ne %struct.VEC_rtx_p_heap* %76, null, !dbg !11642
  br i1 %tobool165, label %cond.true166, label %cond.false168, !dbg !11642

cond.true166:                                     ; preds = %while.body
  %77 = load %struct.VEC_rtx_p_heap*, %struct.VEC_rtx_p_heap** @substitute_stack, align 8, !dbg !11642
  %base167 = getelementptr inbounds %struct.VEC_rtx_p_heap, %struct.VEC_rtx_p_heap* %77, i32 0, i32 0, !dbg !11642
  br label %cond.end169, !dbg !11642

cond.false168:                                    ; preds = %while.body
  br label %cond.end169, !dbg !11642

cond.end169:                                      ; preds = %cond.false168, %cond.true166
  %cond170 = phi %struct.VEC_rtx_p_base* [ %base167, %cond.true166 ], [ null, %cond.false168 ], !dbg !11642
  %call171 = call %struct.rtx_def** @VEC_rtx_p_base_pop(%struct.VEC_rtx_p_base* %cond170), !dbg !11642
  store %struct.rtx_def** %call171, %struct.rtx_def*** %where, align 8, !dbg !11641
  %78 = load i32, i32* %r2.addr, align 4, !dbg !11643
  %idxprom172 = sext i32 %78 to i64, !dbg !11644
  %arrayidx173 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom172, !dbg !11644
  %in174 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx173, i32 0, i32 0, !dbg !11645
  %79 = load %struct.rtx_def*, %struct.rtx_def** %in174, align 8, !dbg !11645
  %80 = load %struct.rtx_def**, %struct.rtx_def*** %where, align 8, !dbg !11646
  store %struct.rtx_def* %79, %struct.rtx_def** %80, align 8, !dbg !11647
  br label %while.cond, !dbg !11636, !llvm.loop !11648

while.end:                                        ; preds = %cond.end160
  %81 = load i8, i8* %result, align 1, !dbg !11650
  ret i8 %81, !dbg !11651
}

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @get_last_insn() #2

; Function Attrs: noinline nounwind uwtable
define internal void @substitute(%struct.rtx_def** %where, %struct.rtx_def* %what, %struct.rtx_def* %repl) #0 !dbg !11652 {
entry:
  %where.addr = alloca %struct.rtx_def**, align 8
  %what.addr = alloca %struct.rtx_def*, align 8
  %repl.addr = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def** %where, %struct.rtx_def*** %where.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %where.addr, metadata !11655, metadata !DIExpression()), !dbg !11656
  store %struct.rtx_def* %what, %struct.rtx_def** %what.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %what.addr, metadata !11657, metadata !DIExpression()), !dbg !11658
  store %struct.rtx_def* %repl, %struct.rtx_def** %repl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %repl.addr, metadata !11659, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !11661, metadata !DIExpression()), !dbg !11662
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11663, metadata !DIExpression()), !dbg !11664
  call void @llvm.dbg.declare(metadata i32* %code, metadata !11665, metadata !DIExpression()), !dbg !11666
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %where.addr, align 8, !dbg !11667
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !11669
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !11670
  br i1 %cmp, label %if.then, label %if.end, !dbg !11671

if.then:                                          ; preds = %entry
  br label %for.end43, !dbg !11672

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %where.addr, align 8, !dbg !11673
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !11675
  %4 = load %struct.rtx_def*, %struct.rtx_def** %what.addr, align 8, !dbg !11676
  %cmp1 = icmp eq %struct.rtx_def* %3, %4, !dbg !11677
  br i1 %cmp1, label %if.then2, label %lor.lhs.false, !dbg !11678

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %where.addr, align 8, !dbg !11679
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8, !dbg !11680
  %7 = load %struct.rtx_def*, %struct.rtx_def** %what.addr, align 8, !dbg !11681
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %6, %struct.rtx_def* %7), !dbg !11682
  %tobool = icmp ne i32 %call, 0, !dbg !11682
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !11683

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %where.addr, align 8, !dbg !11684
  %call3 = call %struct.rtx_def*** @VEC_rtx_p_heap_safe_push(%struct.VEC_rtx_p_heap** @substitute_stack, %struct.rtx_def** %8), !dbg !11684
  %9 = load %struct.rtx_def*, %struct.rtx_def** %repl.addr, align 8, !dbg !11686
  %10 = load %struct.rtx_def**, %struct.rtx_def*** %where.addr, align 8, !dbg !11687
  store %struct.rtx_def* %9, %struct.rtx_def** %10, align 8, !dbg !11688
  br label %for.end43, !dbg !11689

if.end4:                                          ; preds = %lor.lhs.false
  %11 = load %struct.rtx_def**, %struct.rtx_def*** %where.addr, align 8, !dbg !11690
  %12 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8, !dbg !11690
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !11690
  %bf.load = load i32, i32* %13, align 8, !dbg !11690
  %bf.clear = and i32 %bf.load, 65535, !dbg !11690
  store i32 %bf.clear, i32* %code, align 4, !dbg !11691
  %14 = load i32, i32* %code, align 4, !dbg !11692
  %idxprom = sext i32 %14 to i64, !dbg !11692
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !11692
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !11692
  store i8* %15, i8** %fmt, align 8, !dbg !11693
  %16 = load i32, i32* %code, align 4, !dbg !11694
  %idxprom5 = sext i32 %16 to i64, !dbg !11694
  %arrayidx6 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom5, !dbg !11694
  %17 = load i8, i8* %arrayidx6, align 1, !dbg !11694
  %conv = zext i8 %17 to i32, !dbg !11694
  %sub = sub nsw i32 %conv, 1, !dbg !11696
  store i32 %sub, i32* %i, align 4, !dbg !11697
  br label %for.cond, !dbg !11698

for.cond:                                         ; preds = %for.inc41, %if.end4
  %18 = load i32, i32* %i, align 4, !dbg !11699
  %cmp7 = icmp sge i32 %18, 0, !dbg !11701
  br i1 %cmp7, label %for.body, label %for.end43, !dbg !11702

for.body:                                         ; preds = %for.cond
  %19 = load i8*, i8** %fmt, align 8, !dbg !11703
  %20 = load i32, i32* %i, align 4, !dbg !11706
  %idxprom9 = sext i32 %20 to i64, !dbg !11703
  %arrayidx10 = getelementptr inbounds i8, i8* %19, i64 %idxprom9, !dbg !11703
  %21 = load i8, i8* %arrayidx10, align 1, !dbg !11703
  %conv11 = sext i8 %21 to i32, !dbg !11703
  %cmp12 = icmp eq i32 %conv11, 69, !dbg !11707
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !11708

if.then14:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11709, metadata !DIExpression()), !dbg !11711
  %22 = load %struct.rtx_def**, %struct.rtx_def*** %where.addr, align 8, !dbg !11712
  %23 = load %struct.rtx_def*, %struct.rtx_def** %22, align 8, !dbg !11712
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !11712
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !11712
  %24 = load i32, i32* %i, align 4, !dbg !11712
  %idxprom15 = sext i32 %24 to i64, !dbg !11712
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom15, !dbg !11712
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtvec_def**, !dbg !11712
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !11712
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i32 0, i32 0, !dbg !11712
  %26 = load i32, i32* %num_elem, align 8, !dbg !11712
  %sub17 = sub nsw i32 %26, 1, !dbg !11714
  store i32 %sub17, i32* %j, align 4, !dbg !11715
  br label %for.cond18, !dbg !11716

for.cond18:                                       ; preds = %for.inc, %if.then14
  %27 = load i32, i32* %j, align 4, !dbg !11717
  %cmp19 = icmp sge i32 %27, 0, !dbg !11719
  br i1 %cmp19, label %for.body21, label %for.end, !dbg !11720

for.body21:                                       ; preds = %for.cond18
  %28 = load %struct.rtx_def**, %struct.rtx_def*** %where.addr, align 8, !dbg !11721
  %29 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8, !dbg !11721
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !11721
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !11721
  %30 = load i32, i32* %i, align 4, !dbg !11721
  %idxprom24 = sext i32 %30 to i64, !dbg !11721
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 %idxprom24, !dbg !11721
  %rt_rtvec26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtvec_def**, !dbg !11721
  %31 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec26, align 8, !dbg !11721
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %31, i32 0, i32 1, !dbg !11721
  %32 = load i32, i32* %j, align 4, !dbg !11721
  %idxprom27 = sext i32 %32 to i64, !dbg !11721
  %arrayidx28 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom27, !dbg !11721
  %33 = load %struct.rtx_def*, %struct.rtx_def** %what.addr, align 8, !dbg !11722
  %34 = load %struct.rtx_def*, %struct.rtx_def** %repl.addr, align 8, !dbg !11723
  call void @substitute(%struct.rtx_def** %arrayidx28, %struct.rtx_def* %33, %struct.rtx_def* %34), !dbg !11724
  br label %for.inc, !dbg !11724

for.inc:                                          ; preds = %for.body21
  %35 = load i32, i32* %j, align 4, !dbg !11725
  %dec = add nsw i32 %35, -1, !dbg !11725
  store i32 %dec, i32* %j, align 4, !dbg !11725
  br label %for.cond18, !dbg !11726, !llvm.loop !11727

for.end:                                          ; preds = %for.cond18
  br label %if.end40, !dbg !11729

if.else:                                          ; preds = %for.body
  %36 = load i8*, i8** %fmt, align 8, !dbg !11730
  %37 = load i32, i32* %i, align 4, !dbg !11732
  %idxprom29 = sext i32 %37 to i64, !dbg !11730
  %arrayidx30 = getelementptr inbounds i8, i8* %36, i64 %idxprom29, !dbg !11730
  %38 = load i8, i8* %arrayidx30, align 1, !dbg !11730
  %conv31 = sext i8 %38 to i32, !dbg !11730
  %cmp32 = icmp eq i32 %conv31, 101, !dbg !11733
  br i1 %cmp32, label %if.then34, label %if.end39, !dbg !11734

if.then34:                                        ; preds = %if.else
  %39 = load %struct.rtx_def**, %struct.rtx_def*** %where.addr, align 8, !dbg !11735
  %40 = load %struct.rtx_def*, %struct.rtx_def** %39, align 8, !dbg !11735
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !11735
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !11735
  %41 = load i32, i32* %i, align 4, !dbg !11735
  %idxprom37 = sext i32 %41 to i64, !dbg !11735
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 %idxprom37, !dbg !11735
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !11735
  %42 = load %struct.rtx_def*, %struct.rtx_def** %what.addr, align 8, !dbg !11736
  %43 = load %struct.rtx_def*, %struct.rtx_def** %repl.addr, align 8, !dbg !11737
  call void @substitute(%struct.rtx_def** %rt_rtx, %struct.rtx_def* %42, %struct.rtx_def* %43), !dbg !11738
  br label %if.end39, !dbg !11738

if.end39:                                         ; preds = %if.then34, %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %for.end
  br label %for.inc41, !dbg !11739

for.inc41:                                        ; preds = %if.end40
  %44 = load i32, i32* %i, align 4, !dbg !11740
  %dec42 = add nsw i32 %44, -1, !dbg !11740
  store i32 %dec42, i32* %i, align 4, !dbg !11740
  br label %for.cond, !dbg !11741, !llvm.loop !11742

for.end43:                                        ; preds = %if.then, %if.then2, %for.cond
  ret void, !dbg !11744
}

declare dso_local %struct.rtx_def* @gen_lowpart_common(i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) #2

declare dso_local void @delete_insns_since(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_rtx_p_base_length(%struct.VEC_rtx_p_base* %vec_) #0 !dbg !11745 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_p_base*, align 8
  store %struct.VEC_rtx_p_base* %vec_, %struct.VEC_rtx_p_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_p_base** %vec_.addr, metadata !11750, metadata !DIExpression()), !dbg !11751
  %0 = load %struct.VEC_rtx_p_base*, %struct.VEC_rtx_p_base** %vec_.addr, align 8, !dbg !11751
  %tobool = icmp ne %struct.VEC_rtx_p_base* %0, null, !dbg !11751
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11751

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_rtx_p_base*, %struct.VEC_rtx_p_base** %vec_.addr, align 8, !dbg !11751
  %num = getelementptr inbounds %struct.VEC_rtx_p_base, %struct.VEC_rtx_p_base* %1, i32 0, i32 0, !dbg !11751
  %2 = load i32, i32* %num, align 8, !dbg !11751
  br label %cond.end, !dbg !11751

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11751

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !11751
  ret i32 %cond, !dbg !11751
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def** @VEC_rtx_p_base_pop(%struct.VEC_rtx_p_base* %vec_) #0 !dbg !11752 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_p_base*, align 8
  %obj_ = alloca %struct.rtx_def**, align 8
  store %struct.VEC_rtx_p_base* %vec_, %struct.VEC_rtx_p_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_p_base** %vec_.addr, metadata !11756, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %obj_, metadata !11758, metadata !DIExpression()), !dbg !11757
  %0 = load %struct.VEC_rtx_p_base*, %struct.VEC_rtx_p_base** %vec_.addr, align 8, !dbg !11757
  %num = getelementptr inbounds %struct.VEC_rtx_p_base, %struct.VEC_rtx_p_base* %0, i32 0, i32 0, !dbg !11757
  %1 = load i32, i32* %num, align 8, !dbg !11757
  %2 = load %struct.VEC_rtx_p_base*, %struct.VEC_rtx_p_base** %vec_.addr, align 8, !dbg !11757
  %vec = getelementptr inbounds %struct.VEC_rtx_p_base, %struct.VEC_rtx_p_base* %2, i32 0, i32 2, !dbg !11757
  %3 = load %struct.VEC_rtx_p_base*, %struct.VEC_rtx_p_base** %vec_.addr, align 8, !dbg !11757
  %num1 = getelementptr inbounds %struct.VEC_rtx_p_base, %struct.VEC_rtx_p_base* %3, i32 0, i32 0, !dbg !11757
  %4 = load i32, i32* %num1, align 8, !dbg !11757
  %dec = add i32 %4, -1, !dbg !11757
  store i32 %dec, i32* %num1, align 8, !dbg !11757
  %idxprom = zext i32 %dec to i64, !dbg !11757
  %arrayidx = getelementptr inbounds [1 x %struct.rtx_def**], [1 x %struct.rtx_def**]* %vec, i64 0, i64 %idxprom, !dbg !11757
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %arrayidx, align 8, !dbg !11757
  store %struct.rtx_def** %5, %struct.rtx_def*** %obj_, align 8, !dbg !11757
  %6 = load %struct.rtx_def**, %struct.rtx_def*** %obj_, align 8, !dbg !11757
  ret %struct.rtx_def** %6, !dbg !11757
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def*** @VEC_rtx_p_heap_safe_push(%struct.VEC_rtx_p_heap** %vec_, %struct.rtx_def** %obj_) #0 !dbg !11759 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_p_heap**, align 8
  %obj_.addr = alloca %struct.rtx_def**, align 8
  store %struct.VEC_rtx_p_heap** %vec_, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_p_heap*** %vec_.addr, metadata !11763, metadata !DIExpression()), !dbg !11764
  store %struct.rtx_def** %obj_, %struct.rtx_def*** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %obj_.addr, metadata !11765, metadata !DIExpression()), !dbg !11764
  %0 = load %struct.VEC_rtx_p_heap**, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8, !dbg !11764
  %call = call i32 @VEC_rtx_p_heap_reserve(%struct.VEC_rtx_p_heap** %0, i32 1), !dbg !11764
  %1 = load %struct.VEC_rtx_p_heap**, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8, !dbg !11764
  %2 = load %struct.VEC_rtx_p_heap*, %struct.VEC_rtx_p_heap** %1, align 8, !dbg !11764
  %tobool = icmp ne %struct.VEC_rtx_p_heap* %2, null, !dbg !11764
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11764

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_rtx_p_heap**, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8, !dbg !11764
  %4 = load %struct.VEC_rtx_p_heap*, %struct.VEC_rtx_p_heap** %3, align 8, !dbg !11764
  %base = getelementptr inbounds %struct.VEC_rtx_p_heap, %struct.VEC_rtx_p_heap* %4, i32 0, i32 0, !dbg !11764
  br label %cond.end, !dbg !11764

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11764

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_rtx_p_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !11764
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %obj_.addr, align 8, !dbg !11764
  %call1 = call %struct.rtx_def*** @VEC_rtx_p_base_quick_push(%struct.VEC_rtx_p_base* %cond, %struct.rtx_def** %5), !dbg !11764
  ret %struct.rtx_def*** %call1, !dbg !11764
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_rtx_p_heap_reserve(%struct.VEC_rtx_p_heap** %vec_, i32 %alloc_) #0 !dbg !11766 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_p_heap**, align 8
  %alloc_.addr = alloca i32, align 4
  %extend = alloca i32, align 4
  store %struct.VEC_rtx_p_heap** %vec_, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_p_heap*** %vec_.addr, metadata !11769, metadata !DIExpression()), !dbg !11770
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !11771, metadata !DIExpression()), !dbg !11770
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !11772, metadata !DIExpression()), !dbg !11770
  %0 = load %struct.VEC_rtx_p_heap**, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8, !dbg !11770
  %1 = load %struct.VEC_rtx_p_heap*, %struct.VEC_rtx_p_heap** %0, align 8, !dbg !11770
  %tobool = icmp ne %struct.VEC_rtx_p_heap* %1, null, !dbg !11770
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11770

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_rtx_p_heap**, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8, !dbg !11770
  %3 = load %struct.VEC_rtx_p_heap*, %struct.VEC_rtx_p_heap** %2, align 8, !dbg !11770
  %base = getelementptr inbounds %struct.VEC_rtx_p_heap, %struct.VEC_rtx_p_heap* %3, i32 0, i32 0, !dbg !11770
  br label %cond.end, !dbg !11770

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11770

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_rtx_p_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !11770
  %4 = load i32, i32* %alloc_.addr, align 4, !dbg !11770
  %call = call i32 @VEC_rtx_p_base_space(%struct.VEC_rtx_p_base* %cond, i32 %4), !dbg !11770
  %tobool1 = icmp ne i32 %call, 0, !dbg !11770
  %lnot = xor i1 %tobool1, true, !dbg !11770
  %lnot.ext = zext i1 %lnot to i32, !dbg !11770
  store i32 %lnot.ext, i32* %extend, align 4, !dbg !11770
  %5 = load i32, i32* %extend, align 4, !dbg !11773
  %tobool2 = icmp ne i32 %5, 0, !dbg !11773
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11770

if.then:                                          ; preds = %cond.end
  %6 = load %struct.VEC_rtx_p_heap**, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8, !dbg !11773
  %7 = load %struct.VEC_rtx_p_heap*, %struct.VEC_rtx_p_heap** %6, align 8, !dbg !11773
  %8 = bitcast %struct.VEC_rtx_p_heap* %7 to i8*, !dbg !11773
  %9 = load i32, i32* %alloc_.addr, align 4, !dbg !11773
  %call3 = call i8* @vec_heap_p_reserve(i8* %8, i32 %9), !dbg !11773
  %10 = bitcast i8* %call3 to %struct.VEC_rtx_p_heap*, !dbg !11773
  %11 = load %struct.VEC_rtx_p_heap**, %struct.VEC_rtx_p_heap*** %vec_.addr, align 8, !dbg !11773
  store %struct.VEC_rtx_p_heap* %10, %struct.VEC_rtx_p_heap** %11, align 8, !dbg !11773
  br label %if.end, !dbg !11773

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %extend, align 4, !dbg !11770
  ret i32 %12, !dbg !11770
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def*** @VEC_rtx_p_base_quick_push(%struct.VEC_rtx_p_base* %vec_, %struct.rtx_def** %obj_) #0 !dbg !11775 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_p_base*, align 8
  %obj_.addr = alloca %struct.rtx_def**, align 8
  %slot_ = alloca %struct.rtx_def***, align 8
  store %struct.VEC_rtx_p_base* %vec_, %struct.VEC_rtx_p_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_p_base** %vec_.addr, metadata !11778, metadata !DIExpression()), !dbg !11779
  store %struct.rtx_def** %obj_, %struct.rtx_def*** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %obj_.addr, metadata !11780, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.declare(metadata %struct.rtx_def**** %slot_, metadata !11781, metadata !DIExpression()), !dbg !11779
  %0 = load %struct.VEC_rtx_p_base*, %struct.VEC_rtx_p_base** %vec_.addr, align 8, !dbg !11779
  %num = getelementptr inbounds %struct.VEC_rtx_p_base, %struct.VEC_rtx_p_base* %0, i32 0, i32 0, !dbg !11779
  %1 = load i32, i32* %num, align 8, !dbg !11779
  %2 = load %struct.VEC_rtx_p_base*, %struct.VEC_rtx_p_base** %vec_.addr, align 8, !dbg !11779
  %alloc = getelementptr inbounds %struct.VEC_rtx_p_base, %struct.VEC_rtx_p_base* %2, i32 0, i32 1, !dbg !11779
  %3 = load i32, i32* %alloc, align 4, !dbg !11779
  %cmp = icmp ult i32 %1, %3, !dbg !11779
  %conv = zext i1 %cmp to i32, !dbg !11779
  %4 = load %struct.VEC_rtx_p_base*, %struct.VEC_rtx_p_base** %vec_.addr, align 8, !dbg !11779
  %vec = getelementptr inbounds %struct.VEC_rtx_p_base, %struct.VEC_rtx_p_base* %4, i32 0, i32 2, !dbg !11779
  %5 = load %struct.VEC_rtx_p_base*, %struct.VEC_rtx_p_base** %vec_.addr, align 8, !dbg !11779
  %num1 = getelementptr inbounds %struct.VEC_rtx_p_base, %struct.VEC_rtx_p_base* %5, i32 0, i32 0, !dbg !11779
  %6 = load i32, i32* %num1, align 8, !dbg !11779
  %inc = add i32 %6, 1, !dbg !11779
  store i32 %inc, i32* %num1, align 8, !dbg !11779
  %idxprom = zext i32 %6 to i64, !dbg !11779
  %arrayidx = getelementptr inbounds [1 x %struct.rtx_def**], [1 x %struct.rtx_def**]* %vec, i64 0, i64 %idxprom, !dbg !11779
  store %struct.rtx_def*** %arrayidx, %struct.rtx_def**** %slot_, align 8, !dbg !11779
  %7 = load %struct.rtx_def**, %struct.rtx_def*** %obj_.addr, align 8, !dbg !11779
  %8 = load %struct.rtx_def***, %struct.rtx_def**** %slot_, align 8, !dbg !11779
  store %struct.rtx_def** %7, %struct.rtx_def*** %8, align 8, !dbg !11779
  %9 = load %struct.rtx_def***, %struct.rtx_def**** %slot_, align 8, !dbg !11779
  ret %struct.rtx_def*** %9, !dbg !11779
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_rtx_p_base_space(%struct.VEC_rtx_p_base* %vec_, i32 %alloc_) #0 !dbg !11782 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_p_base*, align 8
  %alloc_.addr = alloca i32, align 4
  store %struct.VEC_rtx_p_base* %vec_, %struct.VEC_rtx_p_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_p_base** %vec_.addr, metadata !11785, metadata !DIExpression()), !dbg !11786
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !11787, metadata !DIExpression()), !dbg !11786
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !11786
  %cmp = icmp sge i32 %0, 0, !dbg !11786
  %conv = zext i1 %cmp to i32, !dbg !11786
  %1 = load %struct.VEC_rtx_p_base*, %struct.VEC_rtx_p_base** %vec_.addr, align 8, !dbg !11786
  %tobool = icmp ne %struct.VEC_rtx_p_base* %1, null, !dbg !11786
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11786

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_rtx_p_base*, %struct.VEC_rtx_p_base** %vec_.addr, align 8, !dbg !11786
  %alloc = getelementptr inbounds %struct.VEC_rtx_p_base, %struct.VEC_rtx_p_base* %2, i32 0, i32 1, !dbg !11786
  %3 = load i32, i32* %alloc, align 4, !dbg !11786
  %4 = load %struct.VEC_rtx_p_base*, %struct.VEC_rtx_p_base** %vec_.addr, align 8, !dbg !11786
  %num = getelementptr inbounds %struct.VEC_rtx_p_base, %struct.VEC_rtx_p_base* %4, i32 0, i32 0, !dbg !11786
  %5 = load i32, i32* %num, align 8, !dbg !11786
  %sub = sub i32 %3, %5, !dbg !11786
  %6 = load i32, i32* %alloc_.addr, align 4, !dbg !11786
  %cmp1 = icmp uge i32 %sub, %6, !dbg !11786
  %conv2 = zext i1 %cmp1 to i32, !dbg !11786
  br label %cond.end, !dbg !11786

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %alloc_.addr, align 4, !dbg !11786
  %tobool3 = icmp ne i32 %7, 0, !dbg !11786
  %lnot = xor i1 %tobool3, true, !dbg !11786
  %lnot.ext = zext i1 %lnot to i32, !dbg !11786
  br label %cond.end, !dbg !11786

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !11786
  ret i32 %cond, !dbg !11786
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) #2

declare dso_local void @error(i8*, ...) #2

declare dso_local void @debug_reload_to_stream(%struct._IO_FILE*) #2

declare dso_local void @_fatal_insn(i8*, %struct.rtx_def*, i8*, i32, i8*) #2

declare dso_local %struct.rtx_def* @prev_real_insn(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @find_regno_note(%struct.rtx_def*, i32, i32) #2

declare dso_local i32 @side_effects_p(%struct.rtx_def*) #2

declare dso_local void @df_ref_change_reg_with_loc(i32, i32, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @REG_N_REFS(i32 %regno) #0 !dbg !11788 {
entry:
  %regno.addr = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !11789, metadata !DIExpression()), !dbg !11790
  %0 = load %struct.regstat_n_sets_and_refs_t*, %struct.regstat_n_sets_and_refs_t** @regstat_n_sets_and_refs, align 8, !dbg !11791
  %1 = load i32, i32* %regno.addr, align 4, !dbg !11792
  %idxprom = sext i32 %1 to i64, !dbg !11791
  %arrayidx = getelementptr inbounds %struct.regstat_n_sets_and_refs_t, %struct.regstat_n_sets_and_refs_t* %0, i64 %idxprom, !dbg !11791
  %refs = getelementptr inbounds %struct.regstat_n_sets_and_refs_t, %struct.regstat_n_sets_and_refs_t* %arrayidx, i32 0, i32 1, !dbg !11793
  %2 = load i32, i32* %refs, align 4, !dbg !11793
  ret i32 %2, !dbg !11794
}

declare dso_local i32 @get_mode_alignment(i32) #2

declare dso_local %struct.rtx_def* @ira_reuse_stack_slot(i32, i32, i32) #2

declare dso_local void @ira_mark_new_stack_slot(%struct.rtx_def*, i32, i32) #2

declare dso_local %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #2

declare dso_local void @set_mem_attrs_for_spill(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @form_sum(i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @alloc_reg_note(i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #2

declare dso_local %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def*) #2

declare dso_local %struct.rtvec_def* @gen_rtvec_v(i32, %struct.rtx_def**) #2

declare dso_local i64 @ix86_initial_elimination_offset(i32, i32) #2

declare dso_local void @for_each_eh_label(void (%struct.rtx_def*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @set_initial_eh_label_offset(%struct.rtx_def* %label) #0 !dbg !11795 {
entry:
  %label.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %label, %struct.rtx_def** %label.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %label.addr, metadata !11796, metadata !DIExpression()), !dbg !11797
  %0 = load %struct.rtx_def*, %struct.rtx_def** %label.addr, align 8, !dbg !11798
  call void @set_label_offsets(%struct.rtx_def* %0, %struct.rtx_def* null, i32 1), !dbg !11799
  ret void, !dbg !11800
}

declare dso_local void @ira_mark_allocation_change(i32) #2

declare dso_local zeroext i8 @ira_reassign_pseudos(i32*, i32, i64, i64*, i64*, %struct.bitmap_head_def*) #2

declare dso_local zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @forget_old_reloads_1(%struct.rtx_def* %x, %struct.rtx_def* %ignored, i8* %data) #0 !dbg !11801 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %ignored.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %regno = alloca i32, align 4
  %nr = alloca i32, align 4
  %regs = alloca %struct.bitmap_head_def*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !11802, metadata !DIExpression()), !dbg !11803
  store %struct.rtx_def* %ignored, %struct.rtx_def** %ignored.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %ignored.addr, metadata !11804, metadata !DIExpression()), !dbg !11805
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11806, metadata !DIExpression()), !dbg !11807
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !11808, metadata !DIExpression()), !dbg !11809
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !11810, metadata !DIExpression()), !dbg !11811
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %regs, metadata !11812, metadata !DIExpression()), !dbg !11813
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11814
  %1 = bitcast i8* %0 to %struct.bitmap_head_def*, !dbg !11815
  store %struct.bitmap_head_def* %1, %struct.bitmap_head_def** %regs, align 8, !dbg !11813
  br label %while.cond, !dbg !11816

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11817
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !11817
  %bf.load = load i32, i32* %3, align 8, !dbg !11817
  %bf.clear = and i32 %bf.load, 65535, !dbg !11817
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !11818
  br i1 %cmp, label %while.body, label %while.end, !dbg !11816

while.body:                                       ; preds = %while.cond
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11819
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !11819
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !11819
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !11819
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !11819
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11819
  store %struct.rtx_def* %5, %struct.rtx_def** %x.addr, align 8, !dbg !11821
  br label %while.cond, !dbg !11816, !llvm.loop !11822

while.end:                                        ; preds = %while.cond
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11824
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !11824
  %bf.load1 = load i32, i32* %7, align 8, !dbg !11824
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !11824
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !11824
  br i1 %cmp3, label %if.end, label %if.then, !dbg !11826

if.then:                                          ; preds = %while.end
  br label %if.end55, !dbg !11827

if.end:                                           ; preds = %while.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11828
  %call = call i32 @rhs_regno(%struct.rtx_def* %8), !dbg !11828
  store i32 %call, i32* %regno, align 4, !dbg !11829
  %9 = load i32, i32* %regno, align 4, !dbg !11830
  %cmp4 = icmp uge i32 %9, 53, !dbg !11832
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !11833

if.then5:                                         ; preds = %if.end
  store i32 1, i32* %nr, align 4, !dbg !11834
  br label %if.end27, !dbg !11835

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11836, metadata !DIExpression()), !dbg !11838
  %10 = load i32, i32* %regno, align 4, !dbg !11839
  %idxprom = zext i32 %10 to i64, !dbg !11840
  %arrayidx6 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !11840
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11841
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !11841
  %bf.load7 = load i32, i32* %12, align 8, !dbg !11841
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !11841
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !11841
  %idxprom9 = zext i32 %bf.clear8 to i64, !dbg !11840
  %arrayidx10 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx6, i64 0, i64 %idxprom9, !dbg !11840
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !11840
  %conv = zext i8 %13 to i32, !dbg !11840
  store i32 %conv, i32* %nr, align 4, !dbg !11842
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regs, align 8, !dbg !11843
  %tobool = icmp ne %struct.bitmap_head_def* %14, null, !dbg !11843
  br i1 %tobool, label %if.end26, label %if.then11, !dbg !11845

if.then11:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !11846
  br label %for.cond, !dbg !11848

for.cond:                                         ; preds = %for.inc, %if.then11
  %15 = load i32, i32* %i, align 4, !dbg !11849
  %16 = load i32, i32* %nr, align 4, !dbg !11851
  %cmp12 = icmp ult i32 %15, %16, !dbg !11852
  br i1 %cmp12, label %for.body, label %for.end, !dbg !11853

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* @n_reloads, align 4, !dbg !11854
  %cmp14 = icmp eq i32 %17, 0, !dbg !11856
  br i1 %cmp14, label %if.then17, label %lor.lhs.false, !dbg !11857

lor.lhs.false:                                    ; preds = %for.body
  %18 = load i64, i64* @reg_is_output_reload, align 8, !dbg !11858
  %19 = load i32, i32* %regno, align 4, !dbg !11858
  %20 = load i32, i32* %i, align 4, !dbg !11858
  %add = add i32 %19, %20, !dbg !11858
  %sh_prom = zext i32 %add to i64, !dbg !11858
  %shl = shl i64 1, %sh_prom, !dbg !11858
  %and = and i64 %18, %shl, !dbg !11858
  %tobool16 = icmp ne i64 %and, 0, !dbg !11858
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !11859

if.then17:                                        ; preds = %lor.lhs.false, %for.body
  %21 = load i32, i32* %regno, align 4, !dbg !11860
  %22 = load i32, i32* %i, align 4, !dbg !11860
  %add18 = add i32 %21, %22, !dbg !11860
  %sh_prom19 = zext i32 %add18 to i64, !dbg !11860
  %shl20 = shl i64 1, %sh_prom19, !dbg !11860
  %neg = xor i64 %shl20, -1, !dbg !11860
  %23 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !11860
  %and21 = and i64 %23, %neg, !dbg !11860
  store i64 %and21, i64* @reg_reloaded_valid, align 8, !dbg !11860
  %24 = load i32, i32* %regno, align 4, !dbg !11862
  %25 = load i32, i32* %i, align 4, !dbg !11863
  %add22 = add i32 %24, %25, !dbg !11864
  %idxprom23 = zext i32 %add22 to i64, !dbg !11865
  %arrayidx24 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom23, !dbg !11865
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx24, align 8, !dbg !11866
  br label %if.end25, !dbg !11867

if.end25:                                         ; preds = %if.then17, %lor.lhs.false
  br label %for.inc, !dbg !11858

for.inc:                                          ; preds = %if.end25
  %26 = load i32, i32* %i, align 4, !dbg !11868
  %inc = add i32 %26, 1, !dbg !11868
  store i32 %inc, i32* %i, align 4, !dbg !11868
  br label %for.cond, !dbg !11869, !llvm.loop !11870

for.end:                                          ; preds = %for.cond
  br label %if.end26, !dbg !11871

if.end26:                                         ; preds = %for.end, %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then5
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regs, align 8, !dbg !11872
  %tobool28 = icmp ne %struct.bitmap_head_def* %27, null, !dbg !11872
  br i1 %tobool28, label %if.then29, label %if.else37, !dbg !11874

if.then29:                                        ; preds = %if.end27
  br label %while.cond30, !dbg !11875

while.cond30:                                     ; preds = %while.body33, %if.then29
  %28 = load i32, i32* %nr, align 4, !dbg !11876
  %dec = add i32 %28, -1, !dbg !11876
  store i32 %dec, i32* %nr, align 4, !dbg !11876
  %cmp31 = icmp ugt i32 %28, 0, !dbg !11877
  br i1 %cmp31, label %while.body33, label %while.end36, !dbg !11875

while.body33:                                     ; preds = %while.cond30
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regs, align 8, !dbg !11878
  %30 = load i32, i32* %regno, align 4, !dbg !11878
  %31 = load i32, i32* %nr, align 4, !dbg !11878
  %add34 = add i32 %30, %31, !dbg !11878
  %call35 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %29, i32 %add34), !dbg !11878
  br label %while.cond30, !dbg !11875, !llvm.loop !11879

while.end36:                                      ; preds = %while.cond30
  br label %if.end55, !dbg !11875

if.else37:                                        ; preds = %if.end27
  br label %while.cond38, !dbg !11880

while.cond38:                                     ; preds = %if.end53, %if.else37
  %32 = load i32, i32* %nr, align 4, !dbg !11882
  %dec39 = add i32 %32, -1, !dbg !11882
  store i32 %dec39, i32* %nr, align 4, !dbg !11882
  %cmp40 = icmp ugt i32 %32, 0, !dbg !11883
  br i1 %cmp40, label %while.body42, label %while.end54, !dbg !11880

while.body42:                                     ; preds = %while.cond38
  %33 = load i32, i32* @n_reloads, align 4, !dbg !11884
  %cmp43 = icmp eq i32 %33, 0, !dbg !11886
  br i1 %cmp43, label %if.then49, label %lor.lhs.false45, !dbg !11887

lor.lhs.false45:                                  ; preds = %while.body42
  %34 = load i32, i32* %regno, align 4, !dbg !11888
  %35 = load i32, i32* %nr, align 4, !dbg !11888
  %add46 = add i32 %34, %35, !dbg !11888
  %call47 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* @reg_has_output_reload, i32 %add46), !dbg !11888
  %tobool48 = icmp ne i32 %call47, 0, !dbg !11888
  br i1 %tobool48, label %if.end53, label %if.then49, !dbg !11889

if.then49:                                        ; preds = %lor.lhs.false45, %while.body42
  %36 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !11890
  %37 = load i32, i32* %regno, align 4, !dbg !11891
  %38 = load i32, i32* %nr, align 4, !dbg !11892
  %add50 = add i32 %37, %38, !dbg !11893
  %idxprom51 = zext i32 %add50 to i64, !dbg !11890
  %arrayidx52 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %36, i64 %idxprom51, !dbg !11890
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx52, align 8, !dbg !11894
  br label %if.end53, !dbg !11890

if.end53:                                         ; preds = %if.then49, %lor.lhs.false45
  br label %while.cond38, !dbg !11880, !llvm.loop !11895

while.end54:                                      ; preds = %while.cond38
  br label %if.end55

if.end55:                                         ; preds = %if.then, %while.end54, %while.end36
  ret void, !dbg !11897
}

; Function Attrs: noinline nounwind uwtable
define internal void @choose_reload_regs(%struct.insn_chain* %chain) #0 !dbg !11898 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %max_group_size = alloca i32, align 4
  %group_class = alloca i32, align 4
  %pass = alloca i32, align 4
  %win = alloca i32, align 4
  %inheritance = alloca i32, align 4
  %save_reload_reg_rtx = alloca [180 x %struct.rtx_def*], align 16
  %r = alloca i32, align 4
  %search_equiv = alloca %struct.rtx_def*, align 8
  %byte = alloca i32, align 4
  %regno = alloca i32, align 4
  %mode = alloca i32, align 4
  %rclass249 = alloca i32, align 4
  %last_class = alloca i32, align 4
  %last_reg = alloca %struct.rtx_def*, align 8
  %need_mode = alloca i32, align 4
  %nr = alloca i32, align 4
  %k = alloca i32, align 4
  %i1 = alloca i32, align 4
  %bad_for_class = alloca i32, align 4
  %k533 = alloca i32, align 4
  %set = alloca %struct.rtx_def*, align 8
  %equiv = alloca %struct.rtx_def*, align 8
  %regno735 = alloca i32, align 4
  %regs_used = alloca i32, align 4
  %bad_for_class781 = alloca i32, align 4
  %max_regno = alloca i32, align 4
  %nr940 = alloca i32, align 4
  %k949 = alloca i32, align 4
  %r1018 = alloca i32, align 4
  %r1149 = alloca i32, align 4
  %check_reg = alloca %struct.rtx_def*, align 8
  %regno1315 = alloca i32, align 4
  %r1349 = alloca i32, align 4
  %nregno = alloca i32, align 4
  %nr1378 = alloca i32, align 4
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain.addr, metadata !11899, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !11901, metadata !DIExpression()), !dbg !11902
  %0 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !11903
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %0, i32 0, i32 3, !dbg !11904
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !11904
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8, !dbg !11902
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11905, metadata !DIExpression()), !dbg !11906
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11907, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.declare(metadata i32* %max_group_size, metadata !11909, metadata !DIExpression()), !dbg !11910
  store i32 1, i32* %max_group_size, align 4, !dbg !11910
  call void @llvm.dbg.declare(metadata i32* %group_class, metadata !11911, metadata !DIExpression()), !dbg !11912
  store i32 0, i32* %group_class, align 4, !dbg !11912
  call void @llvm.dbg.declare(metadata i32* %pass, metadata !11913, metadata !DIExpression()), !dbg !11914
  call void @llvm.dbg.declare(metadata i32* %win, metadata !11915, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.declare(metadata i32* %inheritance, metadata !11917, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.declare(metadata [180 x %struct.rtx_def*]* %save_reload_reg_rtx, metadata !11919, metadata !DIExpression()), !dbg !11920
  store i32 0, i32* %j, align 4, !dbg !11921
  br label %for.cond, !dbg !11923

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %j, align 4, !dbg !11924
  %3 = load i32, i32* @n_reloads, align 4, !dbg !11926
  %cmp = icmp slt i32 %2, %3, !dbg !11927
  br i1 %cmp, label %for.body, label %for.end, !dbg !11928

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %j, align 4, !dbg !11929
  %conv = trunc i32 %4 to i16, !dbg !11929
  %5 = load i32, i32* %j, align 4, !dbg !11931
  %idxprom = sext i32 %5 to i64, !dbg !11932
  %arrayidx = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i64 0, i64 %idxprom, !dbg !11932
  store i16 %conv, i16* %arrayidx, align 2, !dbg !11933
  %6 = load i32, i32* %j, align 4, !dbg !11934
  %idxprom2 = sext i32 %6 to i64, !dbg !11936
  %arrayidx3 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom2, !dbg !11936
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3, i32 0, i32 11, !dbg !11937
  %7 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !11937
  %cmp4 = icmp ne %struct.rtx_def* %7, null, !dbg !11938
  br i1 %cmp4, label %if.then, label %if.else, !dbg !11939

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %j, align 4, !dbg !11940
  %idxprom6 = sext i32 %8 to i64, !dbg !11940
  %arrayidx7 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom6, !dbg !11940
  %reg_rtx8 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx7, i32 0, i32 11, !dbg !11940
  %9 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx8, align 8, !dbg !11940
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !11940
  %bf.load = load i32, i32* %10, align 8, !dbg !11940
  %bf.clear = and i32 %bf.load, 65535, !dbg !11940
  %cmp9 = icmp eq i32 %bf.clear, 37, !dbg !11940
  br i1 %cmp9, label %land.lhs.true, label %cond.true, !dbg !11940

land.lhs.true:                                    ; preds = %if.then
  %11 = load i32, i32* %j, align 4, !dbg !11940
  %idxprom11 = sext i32 %11 to i64, !dbg !11940
  %arrayidx12 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom11, !dbg !11940
  %reg_rtx13 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx12, i32 0, i32 11, !dbg !11940
  %12 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx13, align 8, !dbg !11940
  %call = call i32 @rhs_regno(%struct.rtx_def* %12), !dbg !11940
  %cmp14 = icmp ult i32 %call, 53, !dbg !11940
  br i1 %cmp14, label %cond.false, label %cond.true, !dbg !11940

cond.true:                                        ; preds = %land.lhs.true, %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 5984, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11940
  br label %cond.end, !dbg !11940

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !11940

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !11940
  %13 = load i32, i32* %j, align 4, !dbg !11942
  %idxprom16 = sext i32 %13 to i64, !dbg !11942
  %arrayidx17 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom16, !dbg !11942
  %reg_rtx18 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx17, i32 0, i32 11, !dbg !11942
  %14 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx18, align 8, !dbg !11942
  %call19 = call i32 @rhs_regno(%struct.rtx_def* %14), !dbg !11942
  %15 = load i32, i32* %j, align 4, !dbg !11943
  %idxprom20 = sext i32 %15 to i64, !dbg !11944
  %arrayidx21 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom20, !dbg !11944
  store i32 %call19, i32* %arrayidx21, align 4, !dbg !11945
  br label %if.end, !dbg !11946

if.else:                                          ; preds = %for.body
  %16 = load i32, i32* %j, align 4, !dbg !11947
  %idxprom22 = sext i32 %16 to i64, !dbg !11948
  %arrayidx23 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom22, !dbg !11948
  store i32 -1, i32* %arrayidx23, align 4, !dbg !11949
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %17 = load i32, i32* %j, align 4, !dbg !11950
  %idxprom24 = sext i32 %17 to i64, !dbg !11952
  %arrayidx25 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom24, !dbg !11952
  %nregs = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx25, i32 0, i32 6, !dbg !11953
  %18 = load i32, i32* %nregs, align 8, !dbg !11953
  %cmp26 = icmp ugt i32 %18, 1, !dbg !11954
  br i1 %cmp26, label %if.then28, label %if.end47, !dbg !11955

if.then28:                                        ; preds = %if.end
  %19 = load i32, i32* %j, align 4, !dbg !11956
  %idxprom29 = sext i32 %19 to i64, !dbg !11956
  %arrayidx30 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom29, !dbg !11956
  %nregs31 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx30, i32 0, i32 6, !dbg !11956
  %20 = load i32, i32* %nregs31, align 8, !dbg !11956
  %21 = load i32, i32* %max_group_size, align 4, !dbg !11956
  %cmp32 = icmp ugt i32 %20, %21, !dbg !11956
  br i1 %cmp32, label %cond.true34, label %cond.false38, !dbg !11956

cond.true34:                                      ; preds = %if.then28
  %22 = load i32, i32* %j, align 4, !dbg !11956
  %idxprom35 = sext i32 %22 to i64, !dbg !11956
  %arrayidx36 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom35, !dbg !11956
  %nregs37 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx36, i32 0, i32 6, !dbg !11956
  %23 = load i32, i32* %nregs37, align 8, !dbg !11956
  br label %cond.end39, !dbg !11956

cond.false38:                                     ; preds = %if.then28
  %24 = load i32, i32* %max_group_size, align 4, !dbg !11956
  br label %cond.end39, !dbg !11956

cond.end39:                                       ; preds = %cond.false38, %cond.true34
  %cond40 = phi i32 [ %23, %cond.true34 ], [ %24, %cond.false38 ], !dbg !11956
  store i32 %cond40, i32* %max_group_size, align 4, !dbg !11958
  %25 = load i32, i32* %j, align 4, !dbg !11959
  %idxprom41 = sext i32 %25 to i64, !dbg !11960
  %arrayidx42 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom41, !dbg !11960
  %rclass = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx42, i32 0, i32 2, !dbg !11961
  %26 = load i32, i32* %rclass, align 8, !dbg !11961
  %idxprom43 = sext i32 %26 to i64, !dbg !11962
  %arrayidx44 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @reg_class_superunion, i64 0, i64 %idxprom43, !dbg !11962
  %27 = load i32, i32* %group_class, align 4, !dbg !11963
  %idxprom45 = sext i32 %27 to i64, !dbg !11962
  %arrayidx46 = getelementptr inbounds [27 x i32], [27 x i32]* %arrayidx44, i64 0, i64 %idxprom45, !dbg !11962
  %28 = load i32, i32* %arrayidx46, align 4, !dbg !11962
  store i32 %28, i32* %group_class, align 4, !dbg !11964
  br label %if.end47, !dbg !11965

if.end47:                                         ; preds = %cond.end39, %if.end
  %29 = load i32, i32* %j, align 4, !dbg !11966
  %idxprom48 = sext i32 %29 to i64, !dbg !11967
  %arrayidx49 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom48, !dbg !11967
  %reg_rtx50 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx49, i32 0, i32 11, !dbg !11968
  %30 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx50, align 8, !dbg !11968
  %31 = load i32, i32* %j, align 4, !dbg !11969
  %idxprom51 = sext i32 %31 to i64, !dbg !11970
  %arrayidx52 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* %save_reload_reg_rtx, i64 0, i64 %idxprom51, !dbg !11970
  store %struct.rtx_def* %30, %struct.rtx_def** %arrayidx52, align 8, !dbg !11971
  br label %for.inc, !dbg !11972

for.inc:                                          ; preds = %if.end47
  %32 = load i32, i32* %j, align 4, !dbg !11973
  %inc = add nsw i32 %32, 1, !dbg !11973
  store i32 %inc, i32* %j, align 4, !dbg !11973
  br label %for.cond, !dbg !11974, !llvm.loop !11975

for.end:                                          ; preds = %for.cond
  %33 = load i32, i32* @n_reloads, align 4, !dbg !11977
  %cmp53 = icmp sgt i32 %33, 1, !dbg !11979
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !11980

if.then55:                                        ; preds = %for.end
  %34 = load i32, i32* @n_reloads, align 4, !dbg !11981
  %conv56 = sext i32 %34 to i64, !dbg !11981
  call void @spec_qsort(i8* bitcast ([180 x i16]* @reload_order to i8*), i64 %conv56, i64 2, i32 (i8*, i8*)* @reload_reg_class_lower), !dbg !11982
  br label %if.end57, !dbg !11982

if.end57:                                         ; preds = %if.then55, %for.end
  store i32 0, i32* %win, align 4, !dbg !11983
  %35 = load i32, i32* @optimize, align 4, !dbg !11984
  %cmp58 = icmp sgt i32 %35, 0, !dbg !11986
  %conv59 = zext i1 %cmp58 to i32, !dbg !11986
  store i32 %conv59, i32* %inheritance, align 4, !dbg !11987
  br label %for.cond60, !dbg !11988

for.cond60:                                       ; preds = %for.inc1072, %if.end57
  %36 = load i32, i32* %inheritance, align 4, !dbg !11989
  %cmp61 = icmp sge i32 %36, 0, !dbg !11991
  br i1 %cmp61, label %for.body63, label %for.end1073, !dbg !11992

for.body63:                                       ; preds = %for.cond60
  %37 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !11993
  %arraydecay = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* %save_reload_reg_rtx, i64 0, i64 0, !dbg !11995
  call void @choose_reload_regs_init(%struct.insn_chain* %37, %struct.rtx_def** %arraydecay), !dbg !11996
  store i32 0, i32* %j, align 4, !dbg !11997
  br label %for.cond64, !dbg !11999

for.cond64:                                       ; preds = %for.inc1011, %for.body63
  %38 = load i32, i32* %j, align 4, !dbg !12000
  %39 = load i32, i32* @n_reloads, align 4, !dbg !12002
  %cmp65 = icmp slt i32 %38, %39, !dbg !12003
  br i1 %cmp65, label %for.body67, label %for.end1013, !dbg !12004

for.body67:                                       ; preds = %for.cond64
  call void @llvm.dbg.declare(metadata i32* %r, metadata !12005, metadata !DIExpression()), !dbg !12007
  %40 = load i32, i32* %j, align 4, !dbg !12008
  %idxprom68 = sext i32 %40 to i64, !dbg !12009
  %arrayidx69 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i64 0, i64 %idxprom68, !dbg !12009
  %41 = load i16, i16* %arrayidx69, align 2, !dbg !12009
  %conv70 = sext i16 %41 to i32, !dbg !12009
  store i32 %conv70, i32* %r, align 4, !dbg !12007
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %search_equiv, metadata !12010, metadata !DIExpression()), !dbg !12011
  store %struct.rtx_def* null, %struct.rtx_def** %search_equiv, align 8, !dbg !12011
  %42 = load i32, i32* %r, align 4, !dbg !12012
  %idxprom71 = sext i32 %42 to i64, !dbg !12014
  %arrayidx72 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom71, !dbg !12014
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx72, i32 0, i32 1, !dbg !12015
  %43 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !12015
  %cmp73 = icmp eq %struct.rtx_def* %43, null, !dbg !12016
  br i1 %cmp73, label %land.lhs.true75, label %if.end86, !dbg !12017

land.lhs.true75:                                  ; preds = %for.body67
  %44 = load i32, i32* %r, align 4, !dbg !12018
  %idxprom76 = sext i32 %44 to i64, !dbg !12019
  %arrayidx77 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom76, !dbg !12019
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx77, i32 0, i32 0, !dbg !12020
  %45 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !12020
  %cmp78 = icmp eq %struct.rtx_def* %45, null, !dbg !12021
  br i1 %cmp78, label %land.lhs.true80, label %if.end86, !dbg !12022

land.lhs.true80:                                  ; preds = %land.lhs.true75
  %46 = load i32, i32* %r, align 4, !dbg !12023
  %idxprom81 = sext i32 %46 to i64, !dbg !12024
  %arrayidx82 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom81, !dbg !12024
  %secondary_p = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx82, i32 0, i32 18, !dbg !12025
  %bf.load83 = load i8, i8* %secondary_p, align 8, !dbg !12025
  %bf.lshr = lshr i8 %bf.load83, 2, !dbg !12025
  %bf.clear84 = and i8 %bf.lshr, 1, !dbg !12025
  %bf.cast = zext i8 %bf.clear84 to i32, !dbg !12025
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12024
  br i1 %tobool, label %if.end86, label %if.then85, !dbg !12026

if.then85:                                        ; preds = %land.lhs.true80
  br label %for.inc1011, !dbg !12027

if.end86:                                         ; preds = %land.lhs.true80, %land.lhs.true75, %for.body67
  %47 = load i32, i32* %r, align 4, !dbg !12028
  %idxprom87 = sext i32 %47 to i64, !dbg !12030
  %arrayidx88 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom87, !dbg !12030
  %in89 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx88, i32 0, i32 0, !dbg !12031
  %48 = load %struct.rtx_def*, %struct.rtx_def** %in89, align 8, !dbg !12031
  %cmp90 = icmp ne %struct.rtx_def* %48, null, !dbg !12032
  br i1 %cmp90, label %land.lhs.true92, label %if.end131, !dbg !12033

land.lhs.true92:                                  ; preds = %if.end86
  %49 = load i32, i32* %r, align 4, !dbg !12034
  %idxprom93 = sext i32 %49 to i64, !dbg !12035
  %arrayidx94 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom93, !dbg !12035
  %reg_rtx95 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx94, i32 0, i32 11, !dbg !12036
  %50 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx95, align 8, !dbg !12036
  %cmp96 = icmp ne %struct.rtx_def* %50, null, !dbg !12037
  br i1 %cmp96, label %land.lhs.true98, label %if.end131, !dbg !12038

land.lhs.true98:                                  ; preds = %land.lhs.true92
  %51 = load i32, i32* %r, align 4, !dbg !12039
  %idxprom99 = sext i32 %51 to i64, !dbg !12040
  %arrayidx100 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom99, !dbg !12040
  %in101 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx100, i32 0, i32 0, !dbg !12041
  %52 = load %struct.rtx_def*, %struct.rtx_def** %in101, align 8, !dbg !12041
  %53 = load i32, i32* %r, align 4, !dbg !12042
  %idxprom102 = sext i32 %53 to i64, !dbg !12043
  %arrayidx103 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom102, !dbg !12043
  %reg_rtx104 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx103, i32 0, i32 11, !dbg !12044
  %54 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx104, align 8, !dbg !12044
  %call105 = call i32 @rtx_equal_p(%struct.rtx_def* %52, %struct.rtx_def* %54), !dbg !12045
  %tobool106 = icmp ne i32 %call105, 0, !dbg !12045
  br i1 %tobool106, label %if.then130, label %lor.lhs.false, !dbg !12046

lor.lhs.false:                                    ; preds = %land.lhs.true98
  %55 = load i32, i32* %r, align 4, !dbg !12047
  %idxprom107 = sext i32 %55 to i64, !dbg !12048
  %arrayidx108 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom107, !dbg !12048
  %out109 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx108, i32 0, i32 1, !dbg !12049
  %56 = load %struct.rtx_def*, %struct.rtx_def** %out109, align 8, !dbg !12049
  %57 = load i32, i32* %r, align 4, !dbg !12050
  %idxprom110 = sext i32 %57 to i64, !dbg !12051
  %arrayidx111 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom110, !dbg !12051
  %reg_rtx112 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx111, i32 0, i32 11, !dbg !12052
  %58 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx112, align 8, !dbg !12052
  %call113 = call i32 @rtx_equal_p(%struct.rtx_def* %56, %struct.rtx_def* %58), !dbg !12053
  %tobool114 = icmp ne i32 %call113, 0, !dbg !12053
  br i1 %tobool114, label %land.lhs.true115, label %if.end131, !dbg !12054

land.lhs.true115:                                 ; preds = %lor.lhs.false
  %59 = load i32, i32* %r, align 4, !dbg !12055
  %idxprom116 = sext i32 %59 to i64, !dbg !12055
  %arrayidx117 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom116, !dbg !12055
  %in118 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx117, i32 0, i32 0, !dbg !12055
  %60 = load %struct.rtx_def*, %struct.rtx_def** %in118, align 8, !dbg !12055
  %61 = bitcast %struct.rtx_def* %60 to i32*, !dbg !12055
  %bf.load119 = load i32, i32* %61, align 8, !dbg !12055
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !12055
  %cmp121 = icmp eq i32 %bf.clear120, 43, !dbg !12055
  br i1 %cmp121, label %if.end131, label %land.lhs.true123, !dbg !12056

land.lhs.true123:                                 ; preds = %land.lhs.true115
  %62 = load i32, i32* %r, align 4, !dbg !12057
  %idxprom124 = sext i32 %62 to i64, !dbg !12058
  %arrayidx125 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom124, !dbg !12058
  %in126 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx125, i32 0, i32 0, !dbg !12059
  %63 = load %struct.rtx_def*, %struct.rtx_def** %in126, align 8, !dbg !12059
  %call127 = call i32 @true_regnum(%struct.rtx_def* %63), !dbg !12060
  %cmp128 = icmp slt i32 %call127, 53, !dbg !12061
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !12062

if.then130:                                       ; preds = %land.lhs.true123, %land.lhs.true98
  br label %for.inc1011, !dbg !12063

if.end131:                                        ; preds = %land.lhs.true123, %land.lhs.true115, %lor.lhs.false, %land.lhs.true92, %if.end86
  %64 = load i32, i32* %inheritance, align 4, !dbg !12064
  %tobool132 = icmp ne i32 %64, 0, !dbg !12064
  br i1 %tobool132, label %if.then133, label %if.end569, !dbg !12066

if.then133:                                       ; preds = %if.end131
  call void @llvm.dbg.declare(metadata i32* %byte, metadata !12067, metadata !DIExpression()), !dbg !12069
  store i32 0, i32* %byte, align 4, !dbg !12069
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !12070, metadata !DIExpression()), !dbg !12071
  store i32 -1, i32* %regno, align 4, !dbg !12071
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !12072, metadata !DIExpression()), !dbg !12073
  store i32 0, i32* %mode, align 4, !dbg !12073
  %65 = load i32, i32* %r, align 4, !dbg !12074
  %idxprom134 = sext i32 %65 to i64, !dbg !12076
  %arrayidx135 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom134, !dbg !12076
  %in136 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx135, i32 0, i32 0, !dbg !12077
  %66 = load %struct.rtx_def*, %struct.rtx_def** %in136, align 8, !dbg !12077
  %cmp137 = icmp eq %struct.rtx_def* %66, null, !dbg !12078
  br i1 %cmp137, label %if.then139, label %if.else140, !dbg !12079

if.then139:                                       ; preds = %if.then133
  br label %if.end227, !dbg !12079

if.else140:                                       ; preds = %if.then133
  %67 = load i32, i32* %r, align 4, !dbg !12080
  %idxprom141 = sext i32 %67 to i64, !dbg !12080
  %arrayidx142 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom141, !dbg !12080
  %in143 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx142, i32 0, i32 0, !dbg !12080
  %68 = load %struct.rtx_def*, %struct.rtx_def** %in143, align 8, !dbg !12080
  %69 = bitcast %struct.rtx_def* %68 to i32*, !dbg !12080
  %bf.load144 = load i32, i32* %69, align 8, !dbg !12080
  %bf.clear145 = and i32 %bf.load144, 65535, !dbg !12080
  %cmp146 = icmp eq i32 %bf.clear145, 37, !dbg !12080
  br i1 %cmp146, label %if.then148, label %if.else159, !dbg !12082

if.then148:                                       ; preds = %if.else140
  %70 = load i32, i32* %r, align 4, !dbg !12083
  %idxprom149 = sext i32 %70 to i64, !dbg !12083
  %arrayidx150 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom149, !dbg !12083
  %in151 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx150, i32 0, i32 0, !dbg !12083
  %71 = load %struct.rtx_def*, %struct.rtx_def** %in151, align 8, !dbg !12083
  %call152 = call i32 @rhs_regno(%struct.rtx_def* %71), !dbg !12083
  store i32 %call152, i32* %regno, align 4, !dbg !12085
  %72 = load i32, i32* %r, align 4, !dbg !12086
  %idxprom153 = sext i32 %72 to i64, !dbg !12086
  %arrayidx154 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom153, !dbg !12086
  %in155 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx154, i32 0, i32 0, !dbg !12086
  %73 = load %struct.rtx_def*, %struct.rtx_def** %in155, align 8, !dbg !12086
  %74 = bitcast %struct.rtx_def* %73 to i32*, !dbg !12086
  %bf.load156 = load i32, i32* %74, align 8, !dbg !12086
  %bf.lshr157 = lshr i32 %bf.load156, 16, !dbg !12086
  %bf.clear158 = and i32 %bf.lshr157, 255, !dbg !12086
  store i32 %bf.clear158, i32* %mode, align 4, !dbg !12087
  br label %if.end226, !dbg !12088

if.else159:                                       ; preds = %if.else140
  %75 = load i32, i32* %r, align 4, !dbg !12089
  %idxprom160 = sext i32 %75 to i64, !dbg !12089
  %arrayidx161 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom160, !dbg !12089
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx161, i32 0, i32 8, !dbg !12089
  %76 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8, !dbg !12089
  %77 = bitcast %struct.rtx_def* %76 to i32*, !dbg !12089
  %bf.load162 = load i32, i32* %77, align 8, !dbg !12089
  %bf.clear163 = and i32 %bf.load162, 65535, !dbg !12089
  %cmp164 = icmp eq i32 %bf.clear163, 37, !dbg !12089
  br i1 %cmp164, label %if.then166, label %if.else177, !dbg !12091

if.then166:                                       ; preds = %if.else159
  %78 = load i32, i32* %r, align 4, !dbg !12092
  %idxprom167 = sext i32 %78 to i64, !dbg !12092
  %arrayidx168 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom167, !dbg !12092
  %in_reg169 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx168, i32 0, i32 8, !dbg !12092
  %79 = load %struct.rtx_def*, %struct.rtx_def** %in_reg169, align 8, !dbg !12092
  %call170 = call i32 @rhs_regno(%struct.rtx_def* %79), !dbg !12092
  store i32 %call170, i32* %regno, align 4, !dbg !12094
  %80 = load i32, i32* %r, align 4, !dbg !12095
  %idxprom171 = sext i32 %80 to i64, !dbg !12095
  %arrayidx172 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom171, !dbg !12095
  %in_reg173 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx172, i32 0, i32 8, !dbg !12095
  %81 = load %struct.rtx_def*, %struct.rtx_def** %in_reg173, align 8, !dbg !12095
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !12095
  %bf.load174 = load i32, i32* %82, align 8, !dbg !12095
  %bf.lshr175 = lshr i32 %bf.load174, 16, !dbg !12095
  %bf.clear176 = and i32 %bf.lshr175, 255, !dbg !12095
  store i32 %bf.clear176, i32* %mode, align 4, !dbg !12096
  br label %if.end225, !dbg !12097

if.else177:                                       ; preds = %if.else159
  %83 = load i32, i32* %r, align 4, !dbg !12098
  %idxprom178 = sext i32 %83 to i64, !dbg !12098
  %arrayidx179 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom178, !dbg !12098
  %in_reg180 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx179, i32 0, i32 8, !dbg !12098
  %84 = load %struct.rtx_def*, %struct.rtx_def** %in_reg180, align 8, !dbg !12098
  %85 = bitcast %struct.rtx_def* %84 to i32*, !dbg !12098
  %bf.load181 = load i32, i32* %85, align 8, !dbg !12098
  %bf.clear182 = and i32 %bf.load181, 65535, !dbg !12098
  %cmp183 = icmp eq i32 %bf.clear182, 39, !dbg !12100
  br i1 %cmp183, label %land.lhs.true185, label %if.end224, !dbg !12101

land.lhs.true185:                                 ; preds = %if.else177
  %86 = load i32, i32* %r, align 4, !dbg !12102
  %idxprom186 = sext i32 %86 to i64, !dbg !12102
  %arrayidx187 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom186, !dbg !12102
  %in_reg188 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx187, i32 0, i32 8, !dbg !12102
  %87 = load %struct.rtx_def*, %struct.rtx_def** %in_reg188, align 8, !dbg !12102
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1, !dbg !12102
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12102
  %arrayidx189 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !12102
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx189 to %struct.rtx_def**, !dbg !12102
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12102
  %89 = bitcast %struct.rtx_def* %88 to i32*, !dbg !12102
  %bf.load190 = load i32, i32* %89, align 8, !dbg !12102
  %bf.clear191 = and i32 %bf.load190, 65535, !dbg !12102
  %cmp192 = icmp eq i32 %bf.clear191, 37, !dbg !12102
  br i1 %cmp192, label %if.then194, label %if.end224, !dbg !12103

if.then194:                                       ; preds = %land.lhs.true185
  %90 = load i32, i32* %r, align 4, !dbg !12104
  %idxprom195 = sext i32 %90 to i64, !dbg !12104
  %arrayidx196 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom195, !dbg !12104
  %in_reg197 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx196, i32 0, i32 8, !dbg !12104
  %91 = load %struct.rtx_def*, %struct.rtx_def** %in_reg197, align 8, !dbg !12104
  %u198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1, !dbg !12104
  %fld199 = bitcast %union.u* %u198 to [1 x %union.rtunion_def]*, !dbg !12104
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i64 0, i64 0, !dbg !12104
  %rt_rtx201 = bitcast %union.rtunion_def* %arrayidx200 to %struct.rtx_def**, !dbg !12104
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx201, align 8, !dbg !12104
  %call202 = call i32 @rhs_regno(%struct.rtx_def* %92), !dbg !12104
  store i32 %call202, i32* %regno, align 4, !dbg !12106
  %93 = load i32, i32* %regno, align 4, !dbg !12107
  %cmp203 = icmp slt i32 %93, 53, !dbg !12109
  br i1 %cmp203, label %if.then205, label %if.else210, !dbg !12110

if.then205:                                       ; preds = %if.then194
  %94 = load i32, i32* %r, align 4, !dbg !12111
  %idxprom206 = sext i32 %94 to i64, !dbg !12112
  %arrayidx207 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom206, !dbg !12112
  %in_reg208 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx207, i32 0, i32 8, !dbg !12113
  %95 = load %struct.rtx_def*, %struct.rtx_def** %in_reg208, align 8, !dbg !12113
  %call209 = call i32 @subreg_regno(%struct.rtx_def* %95), !dbg !12114
  store i32 %call209, i32* %regno, align 4, !dbg !12115
  br label %if.end217, !dbg !12116

if.else210:                                       ; preds = %if.then194
  %96 = load i32, i32* %r, align 4, !dbg !12117
  %idxprom211 = sext i32 %96 to i64, !dbg !12117
  %arrayidx212 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom211, !dbg !12117
  %in_reg213 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx212, i32 0, i32 8, !dbg !12117
  %97 = load %struct.rtx_def*, %struct.rtx_def** %in_reg213, align 8, !dbg !12117
  %u214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1, !dbg !12117
  %fld215 = bitcast %union.u* %u214 to [1 x %union.rtunion_def]*, !dbg !12117
  %arrayidx216 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld215, i64 0, i64 1, !dbg !12117
  %rt_uint = bitcast %union.rtunion_def* %arrayidx216 to i32*, !dbg !12117
  %98 = load i32, i32* %rt_uint, align 8, !dbg !12117
  store i32 %98, i32* %byte, align 4, !dbg !12118
  br label %if.end217

if.end217:                                        ; preds = %if.else210, %if.then205
  %99 = load i32, i32* %r, align 4, !dbg !12119
  %idxprom218 = sext i32 %99 to i64, !dbg !12119
  %arrayidx219 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom218, !dbg !12119
  %in_reg220 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx219, i32 0, i32 8, !dbg !12119
  %100 = load %struct.rtx_def*, %struct.rtx_def** %in_reg220, align 8, !dbg !12119
  %101 = bitcast %struct.rtx_def* %100 to i32*, !dbg !12119
  %bf.load221 = load i32, i32* %101, align 8, !dbg !12119
  %bf.lshr222 = lshr i32 %bf.load221, 16, !dbg !12119
  %bf.clear223 = and i32 %bf.lshr222, 255, !dbg !12119
  store i32 %bf.clear223, i32* %mode, align 4, !dbg !12120
  br label %if.end224, !dbg !12121

if.end224:                                        ; preds = %if.end217, %land.lhs.true185, %if.else177
  br label %if.end225

if.end225:                                        ; preds = %if.end224, %if.then166
  br label %if.end226

if.end226:                                        ; preds = %if.end225, %if.then148
  br label %if.end227

if.end227:                                        ; preds = %if.end226, %if.then139
  %102 = load i32, i32* %regno, align 4, !dbg !12122
  %cmp228 = icmp sge i32 %102, 0, !dbg !12124
  br i1 %cmp228, label %land.lhs.true230, label %if.end568, !dbg !12125

land.lhs.true230:                                 ; preds = %if.end227
  %103 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !12126
  %104 = load i32, i32* %regno, align 4, !dbg !12127
  %idxprom231 = sext i32 %104 to i64, !dbg !12126
  %arrayidx232 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %103, i64 %idxprom231, !dbg !12126
  %105 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx232, align 8, !dbg !12126
  %cmp233 = icmp ne %struct.rtx_def* %105, null, !dbg !12128
  br i1 %cmp233, label %land.lhs.true235, label %if.end568, !dbg !12129

land.lhs.true235:                                 ; preds = %land.lhs.true230
  %106 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !12130
  %107 = load i32, i32* %regno, align 4, !dbg !12130
  %idxprom236 = sext i32 %107 to i64, !dbg !12130
  %arrayidx237 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %106, i64 %idxprom236, !dbg !12130
  %108 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx237, align 8, !dbg !12130
  %109 = bitcast %struct.rtx_def* %108 to i32*, !dbg !12130
  %bf.load238 = load i32, i32* %109, align 8, !dbg !12130
  %bf.lshr239 = lshr i32 %bf.load238, 16, !dbg !12130
  %bf.clear240 = and i32 %bf.lshr239, 255, !dbg !12130
  %110 = load i32, i32* %mode, align 4, !dbg !12130
  %111 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !12130
  %112 = load i32, i32* %regno, align 4, !dbg !12130
  %idxprom241 = sext i32 %112 to i64, !dbg !12130
  %arrayidx242 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %111, i64 %idxprom241, !dbg !12130
  %113 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx242, align 8, !dbg !12130
  %call243 = call i32 @rhs_regno(%struct.rtx_def* %113), !dbg !12130
  %idxprom244 = zext i32 %call243 to i64, !dbg !12130
  %arrayidx245 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom244, !dbg !12130
  %114 = load i32, i32* %arrayidx245, align 4, !dbg !12130
  %call246 = call zeroext i8 @ix86_cannot_change_mode_class(i32 %bf.clear240, i32 %110, i32 %114), !dbg !12130
  %tobool247 = icmp ne i8 %call246, 0, !dbg !12130
  br i1 %tobool247, label %if.end568, label %if.then248, !dbg !12131

if.then248:                                       ; preds = %land.lhs.true235
  call void @llvm.dbg.declare(metadata i32* %rclass249, metadata !12132, metadata !DIExpression()), !dbg !12134
  %115 = load i32, i32* %r, align 4, !dbg !12135
  %idxprom250 = sext i32 %115 to i64, !dbg !12136
  %arrayidx251 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom250, !dbg !12136
  %rclass252 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx251, i32 0, i32 2, !dbg !12137
  %116 = load i32, i32* %rclass252, align 8, !dbg !12137
  store i32 %116, i32* %rclass249, align 4, !dbg !12134
  call void @llvm.dbg.declare(metadata i32* %last_class, metadata !12138, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last_reg, metadata !12140, metadata !DIExpression()), !dbg !12141
  %117 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !12142
  %118 = load i32, i32* %regno, align 4, !dbg !12143
  %idxprom253 = sext i32 %118 to i64, !dbg !12142
  %arrayidx254 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %117, i64 %idxprom253, !dbg !12142
  %119 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx254, align 8, !dbg !12142
  store %struct.rtx_def* %119, %struct.rtx_def** %last_reg, align 8, !dbg !12141
  call void @llvm.dbg.declare(metadata i32* %need_mode, metadata !12144, metadata !DIExpression()), !dbg !12145
  %120 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8, !dbg !12146
  %call255 = call i32 @rhs_regno(%struct.rtx_def* %120), !dbg !12146
  store i32 %call255, i32* %i, align 4, !dbg !12147
  %121 = load i32, i32* %i, align 4, !dbg !12148
  %122 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8, !dbg !12149
  %123 = bitcast %struct.rtx_def* %122 to i32*, !dbg !12149
  %bf.load256 = load i32, i32* %123, align 8, !dbg !12149
  %bf.lshr257 = lshr i32 %bf.load256, 16, !dbg !12149
  %bf.clear258 = and i32 %bf.lshr257, 255, !dbg !12149
  %124 = load i32, i32* %byte, align 4, !dbg !12150
  %125 = load i32, i32* %mode, align 4, !dbg !12151
  %call259 = call i32 @subreg_regno_offset(i32 %121, i32 %bf.clear258, i32 %124, i32 %125), !dbg !12152
  %126 = load i32, i32* %i, align 4, !dbg !12153
  %add = add i32 %126, %call259, !dbg !12153
  store i32 %add, i32* %i, align 4, !dbg !12153
  %127 = load i32, i32* %i, align 4, !dbg !12154
  %idxprom260 = sext i32 %127 to i64, !dbg !12154
  %arrayidx261 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom260, !dbg !12154
  %128 = load i32, i32* %arrayidx261, align 4, !dbg !12154
  store i32 %128, i32* %last_class, align 4, !dbg !12155
  %129 = load i32, i32* %byte, align 4, !dbg !12156
  %cmp262 = icmp eq i32 %129, 0, !dbg !12158
  br i1 %cmp262, label %if.then264, label %if.else265, !dbg !12159

if.then264:                                       ; preds = %if.then248
  %130 = load i32, i32* %mode, align 4, !dbg !12160
  store i32 %130, i32* %need_mode, align 4, !dbg !12161
  br label %if.end287, !dbg !12162

if.else265:                                       ; preds = %if.then248
  %131 = load i32, i32* %mode, align 4, !dbg !12163
  %idxprom266 = zext i32 %131 to i64, !dbg !12163
  %arrayidx267 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom266, !dbg !12163
  %132 = load i8, i8* %arrayidx267, align 1, !dbg !12163
  %conv268 = zext i8 %132 to i16, !dbg !12163
  %conv269 = zext i16 %conv268 to i32, !dbg !12163
  %mul = mul nsw i32 %conv269, 8, !dbg !12163
  %conv270 = trunc i32 %mul to i16, !dbg !12163
  %conv271 = zext i16 %conv270 to i32, !dbg !12163
  %133 = load i32, i32* %byte, align 4, !dbg !12164
  %mul272 = mul nsw i32 %133, 8, !dbg !12165
  %add273 = add nsw i32 %conv271, %mul272, !dbg !12166
  %134 = load i32, i32* %mode, align 4, !dbg !12167
  %idxprom274 = zext i32 %134 to i64, !dbg !12167
  %arrayidx275 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom274, !dbg !12167
  %135 = load i8, i8* %arrayidx275, align 1, !dbg !12167
  %conv276 = zext i8 %135 to i32, !dbg !12167
  %cmp277 = icmp eq i32 %conv276, 3, !dbg !12168
  br i1 %cmp277, label %cond.true279, label %cond.false280, !dbg !12167

cond.true279:                                     ; preds = %if.else265
  br label %cond.end284, !dbg !12167

cond.false280:                                    ; preds = %if.else265
  %136 = load i32, i32* %mode, align 4, !dbg !12169
  %idxprom281 = zext i32 %136 to i64, !dbg !12169
  %arrayidx282 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom281, !dbg !12169
  %137 = load i8, i8* %arrayidx282, align 1, !dbg !12169
  %conv283 = zext i8 %137 to i32, !dbg !12169
  br label %cond.end284, !dbg !12167

cond.end284:                                      ; preds = %cond.false280, %cond.true279
  %cond285 = phi i32 [ 2, %cond.true279 ], [ %conv283, %cond.false280 ], !dbg !12167
  %call286 = call i32 @smallest_mode_for_size(i32 %add273, i32 %cond285), !dbg !12170
  store i32 %call286, i32* %need_mode, align 4, !dbg !12171
  br label %if.end287

if.end287:                                        ; preds = %cond.end284, %if.then264
  %138 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8, !dbg !12172
  %139 = bitcast %struct.rtx_def* %138 to i32*, !dbg !12172
  %bf.load288 = load i32, i32* %139, align 8, !dbg !12172
  %bf.lshr289 = lshr i32 %bf.load288, 16, !dbg !12172
  %bf.clear290 = and i32 %bf.lshr289, 255, !dbg !12172
  %idxprom291 = zext i32 %bf.clear290 to i64, !dbg !12172
  %arrayidx292 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom291, !dbg !12172
  %140 = load i8, i8* %arrayidx292, align 1, !dbg !12172
  %conv293 = zext i8 %140 to i16, !dbg !12172
  %conv294 = zext i16 %conv293 to i32, !dbg !12172
  %141 = load i32, i32* %need_mode, align 4, !dbg !12174
  %idxprom295 = zext i32 %141 to i64, !dbg !12174
  %arrayidx296 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom295, !dbg !12174
  %142 = load i8, i8* %arrayidx296, align 1, !dbg !12174
  %conv297 = zext i8 %142 to i16, !dbg !12174
  %conv298 = zext i16 %conv297 to i32, !dbg !12174
  %cmp299 = icmp sge i32 %conv294, %conv298, !dbg !12175
  br i1 %cmp299, label %land.lhs.true301, label %if.end567, !dbg !12176

land.lhs.true301:                                 ; preds = %if.end287
  %143 = load i32, i32* %i, align 4, !dbg !12177
  %idxprom302 = sext i32 %143 to i64, !dbg !12178
  %arrayidx303 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i64 0, i64 %idxprom302, !dbg !12178
  %144 = load i32, i32* %arrayidx303, align 4, !dbg !12178
  %145 = load i32, i32* %regno, align 4, !dbg !12179
  %cmp304 = icmp eq i32 %144, %145, !dbg !12180
  br i1 %cmp304, label %land.lhs.true306, label %if.end567, !dbg !12181

land.lhs.true306:                                 ; preds = %land.lhs.true301
  %146 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !12182
  %147 = load i32, i32* %i, align 4, !dbg !12182
  %sh_prom = zext i32 %147 to i64, !dbg !12182
  %shl = shl i64 1, %sh_prom, !dbg !12182
  %and = and i64 %146, %shl, !dbg !12182
  %tobool307 = icmp ne i64 %and, 0, !dbg !12182
  br i1 %tobool307, label %land.lhs.true308, label %if.end567, !dbg !12183

land.lhs.true308:                                 ; preds = %land.lhs.true306
  %148 = load i32, i32* %i, align 4, !dbg !12184
  %149 = load i32, i32* %r, align 4, !dbg !12184
  %idxprom309 = sext i32 %149 to i64, !dbg !12184
  %arrayidx310 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom309, !dbg !12184
  %mode311 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx310, i32 0, i32 5, !dbg !12184
  %150 = load i32, i32* %mode311, align 4, !dbg !12184
  %call312 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %148, i32 %150), !dbg !12184
  %conv313 = zext i8 %call312 to i32, !dbg !12184
  %tobool314 = icmp ne i32 %conv313, 0, !dbg !12184
  br i1 %tobool314, label %land.lhs.true315, label %if.end567, !dbg !12185

land.lhs.true315:                                 ; preds = %land.lhs.true308
  %151 = load i32, i32* %rclass249, align 4, !dbg !12186
  %idxprom316 = sext i32 %151 to i64, !dbg !12186
  %arrayidx317 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom316, !dbg !12186
  %152 = load i64, i64* %arrayidx317, align 8, !dbg !12186
  %153 = load i32, i32* %i, align 4, !dbg !12186
  %sh_prom318 = zext i32 %153 to i64, !dbg !12186
  %shl319 = shl i64 1, %sh_prom318, !dbg !12186
  %and320 = and i64 %152, %shl319, !dbg !12186
  %tobool321 = icmp ne i64 %and320, 0, !dbg !12186
  br i1 %tobool321, label %land.lhs.true334, label %lor.lhs.false322, !dbg !12187

lor.lhs.false322:                                 ; preds = %land.lhs.true315
  %154 = load i32, i32* %mode, align 4, !dbg !12188
  %155 = load i32, i32* %last_class, align 4, !dbg !12188
  %156 = load i32, i32* %rclass249, align 4, !dbg !12188
  %call323 = call i32 @ix86_register_move_cost(i32 %154, i32 %155, i32 %156), !dbg !12188
  %157 = load i32, i32* %mode, align 4, !dbg !12189
  %158 = load i32, i32* %rclass249, align 4, !dbg !12189
  %call324 = call i32 @ix86_memory_move_cost(i32 %157, i32 %158, i32 1), !dbg !12189
  %cmp325 = icmp slt i32 %call323, %call324, !dbg !12190
  br i1 %cmp325, label %land.lhs.true327, label %if.end567, !dbg !12191

land.lhs.true327:                                 ; preds = %lor.lhs.false322
  %159 = load i32, i32* %rclass249, align 4, !dbg !12192
  %160 = load i32, i32* %mode, align 4, !dbg !12193
  %161 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8, !dbg !12194
  %call328 = call i32 @secondary_reload_class(i8 zeroext 1, i32 %159, i32 %160, %struct.rtx_def* %161), !dbg !12195
  %cmp329 = icmp eq i32 %call328, 0, !dbg !12196
  br i1 %cmp329, label %land.lhs.true331, label %if.end567, !dbg !12197

land.lhs.true331:                                 ; preds = %land.lhs.true327
  %162 = load i32, i32* %last_class, align 4, !dbg !12198
  %163 = load i32, i32* %rclass249, align 4, !dbg !12198
  %164 = load i32, i32* %mode, align 4, !dbg !12198
  %call332 = call i32 @ix86_secondary_memory_needed(i32 %162, i32 %163, i32 %164, i32 1), !dbg !12198
  %tobool333 = icmp ne i32 %call332, 0, !dbg !12198
  br i1 %tobool333, label %if.end567, label %land.lhs.true334, !dbg !12199

land.lhs.true334:                                 ; preds = %land.lhs.true331, %land.lhs.true315
  %165 = load i32, i32* %r, align 4, !dbg !12200
  %idxprom335 = sext i32 %165 to i64, !dbg !12201
  %arrayidx336 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom335, !dbg !12201
  %nregs337 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx336, i32 0, i32 6, !dbg !12202
  %166 = load i32, i32* %nregs337, align 8, !dbg !12202
  %167 = load i32, i32* %max_group_size, align 4, !dbg !12203
  %cmp338 = icmp eq i32 %166, %167, !dbg !12204
  br i1 %cmp338, label %land.lhs.true347, label %lor.lhs.false340, !dbg !12205

lor.lhs.false340:                                 ; preds = %land.lhs.true334
  %168 = load i32, i32* %group_class, align 4, !dbg !12206
  %idxprom341 = sext i32 %168 to i64, !dbg !12206
  %arrayidx342 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom341, !dbg !12206
  %169 = load i64, i64* %arrayidx342, align 8, !dbg !12206
  %170 = load i32, i32* %i, align 4, !dbg !12206
  %sh_prom343 = zext i32 %170 to i64, !dbg !12206
  %shl344 = shl i64 1, %sh_prom343, !dbg !12206
  %and345 = and i64 %169, %shl344, !dbg !12206
  %tobool346 = icmp ne i64 %and345, 0, !dbg !12206
  br i1 %tobool346, label %if.end567, label %land.lhs.true347, !dbg !12207

land.lhs.true347:                                 ; preds = %lor.lhs.false340, %land.lhs.true334
  %171 = load i32, i32* %i, align 4, !dbg !12208
  %172 = load i32, i32* %r, align 4, !dbg !12209
  %idxprom348 = sext i32 %172 to i64, !dbg !12210
  %arrayidx349 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom348, !dbg !12210
  %mode350 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx349, i32 0, i32 5, !dbg !12211
  %173 = load i32, i32* %mode350, align 4, !dbg !12211
  %174 = load i32, i32* %r, align 4, !dbg !12212
  %idxprom351 = sext i32 %174 to i64, !dbg !12213
  %arrayidx352 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom351, !dbg !12213
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx352, i32 0, i32 12, !dbg !12214
  %175 = load i32, i32* %opnum, align 8, !dbg !12214
  %176 = load i32, i32* %r, align 4, !dbg !12215
  %idxprom353 = sext i32 %176 to i64, !dbg !12216
  %arrayidx354 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom353, !dbg !12216
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx354, i32 0, i32 17, !dbg !12217
  %177 = load i32, i32* %when_needed, align 4, !dbg !12217
  %178 = load i32, i32* %r, align 4, !dbg !12218
  %idxprom355 = sext i32 %178 to i64, !dbg !12219
  %arrayidx356 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom355, !dbg !12219
  %in357 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx356, i32 0, i32 0, !dbg !12220
  %179 = load %struct.rtx_def*, %struct.rtx_def** %in357, align 8, !dbg !12220
  %180 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !12221
  %181 = load i32, i32* %r, align 4, !dbg !12222
  %call358 = call i32 @free_for_value_p(i32 %171, i32 %173, i32 %175, i32 %177, %struct.rtx_def* %179, %struct.rtx_def* %180, i32 %181, i32 1), !dbg !12223
  %tobool359 = icmp ne i32 %call358, 0, !dbg !12223
  br i1 %tobool359, label %if.then360, label %if.end567, !dbg !12224

if.then360:                                       ; preds = %land.lhs.true347
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !12225, metadata !DIExpression()), !dbg !12227
  %182 = load i32, i32* %i, align 4, !dbg !12228
  %idxprom361 = sext i32 %182 to i64, !dbg !12229
  %arrayidx362 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom361, !dbg !12229
  %183 = load i32, i32* %r, align 4, !dbg !12230
  %idxprom363 = sext i32 %183 to i64, !dbg !12231
  %arrayidx364 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom363, !dbg !12231
  %mode365 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx364, i32 0, i32 5, !dbg !12232
  %184 = load i32, i32* %mode365, align 4, !dbg !12232
  %idxprom366 = zext i32 %184 to i64, !dbg !12229
  %arrayidx367 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx362, i64 0, i64 %idxprom366, !dbg !12229
  %185 = load i8, i8* %arrayidx367, align 1, !dbg !12229
  %conv368 = zext i8 %185 to i32, !dbg !12229
  store i32 %conv368, i32* %nr, align 4, !dbg !12227
  call void @llvm.dbg.declare(metadata i32* %k, metadata !12233, metadata !DIExpression()), !dbg !12234
  store i32 1, i32* %k, align 4, !dbg !12235
  br label %for.cond369, !dbg !12237

for.cond369:                                      ; preds = %for.inc386, %if.then360
  %186 = load i32, i32* %k, align 4, !dbg !12238
  %187 = load i32, i32* %nr, align 4, !dbg !12240
  %cmp370 = icmp slt i32 %186, %187, !dbg !12241
  br i1 %cmp370, label %for.body372, label %for.end388, !dbg !12242

for.body372:                                      ; preds = %for.cond369
  %188 = load i32, i32* %i, align 4, !dbg !12243
  %189 = load i32, i32* %k, align 4, !dbg !12245
  %add373 = add nsw i32 %188, %189, !dbg !12246
  %idxprom374 = sext i32 %add373 to i64, !dbg !12247
  %arrayidx375 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i64 0, i64 %idxprom374, !dbg !12247
  %190 = load i32, i32* %arrayidx375, align 4, !dbg !12247
  %191 = load i32, i32* %regno, align 4, !dbg !12248
  %cmp376 = icmp ne i32 %190, %191, !dbg !12249
  br i1 %cmp376, label %if.then384, label %lor.lhs.false378, !dbg !12250

lor.lhs.false378:                                 ; preds = %for.body372
  %192 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !12251
  %193 = load i32, i32* %i, align 4, !dbg !12251
  %194 = load i32, i32* %k, align 4, !dbg !12251
  %add379 = add nsw i32 %193, %194, !dbg !12251
  %sh_prom380 = zext i32 %add379 to i64, !dbg !12251
  %shl381 = shl i64 1, %sh_prom380, !dbg !12251
  %and382 = and i64 %192, %shl381, !dbg !12251
  %tobool383 = icmp ne i64 %and382, 0, !dbg !12251
  br i1 %tobool383, label %if.end385, label %if.then384, !dbg !12252

if.then384:                                       ; preds = %lor.lhs.false378, %for.body372
  br label %for.end388, !dbg !12253

if.end385:                                        ; preds = %lor.lhs.false378
  br label %for.inc386, !dbg !12251

for.inc386:                                       ; preds = %if.end385
  %195 = load i32, i32* %k, align 4, !dbg !12254
  %inc387 = add nsw i32 %195, 1, !dbg !12254
  store i32 %inc387, i32* %k, align 4, !dbg !12254
  br label %for.cond369, !dbg !12255, !llvm.loop !12256

for.end388:                                       ; preds = %if.then384, %for.cond369
  %196 = load i32, i32* %k, align 4, !dbg !12258
  %197 = load i32, i32* %nr, align 4, !dbg !12260
  %cmp389 = icmp eq i32 %196, %197, !dbg !12261
  br i1 %cmp389, label %if.then391, label %if.end566, !dbg !12262

if.then391:                                       ; preds = %for.end388
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !12263, metadata !DIExpression()), !dbg !12265
  call void @llvm.dbg.declare(metadata i32* %bad_for_class, metadata !12266, metadata !DIExpression()), !dbg !12267
  %198 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8, !dbg !12268
  %199 = bitcast %struct.rtx_def* %198 to i32*, !dbg !12268
  %bf.load392 = load i32, i32* %199, align 8, !dbg !12268
  %bf.lshr393 = lshr i32 %bf.load392, 16, !dbg !12268
  %bf.clear394 = and i32 %bf.lshr393, 255, !dbg !12268
  %200 = load i32, i32* %mode, align 4, !dbg !12269
  %cmp395 = icmp eq i32 %bf.clear394, %200, !dbg !12270
  br i1 %cmp395, label %cond.true397, label %cond.false398, !dbg !12268

cond.true397:                                     ; preds = %if.then391
  %201 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8, !dbg !12271
  br label %cond.end400, !dbg !12268

cond.false398:                                    ; preds = %if.then391
  %202 = load i32, i32* %mode, align 4, !dbg !12272
  %203 = load i32, i32* %i, align 4, !dbg !12273
  %call399 = call %struct.rtx_def* @gen_rtx_REG(i32 %202, i32 %203), !dbg !12274
  br label %cond.end400, !dbg !12268

cond.end400:                                      ; preds = %cond.false398, %cond.true397
  %cond401 = phi %struct.rtx_def* [ %201, %cond.true397 ], [ %call399, %cond.false398 ], !dbg !12268
  store %struct.rtx_def* %cond401, %struct.rtx_def** %last_reg, align 8, !dbg !12275
  store i32 0, i32* %bad_for_class, align 4, !dbg !12276
  store i32 0, i32* %k, align 4, !dbg !12277
  br label %for.cond402, !dbg !12279

for.cond402:                                      ; preds = %for.inc418, %cond.end400
  %204 = load i32, i32* %k, align 4, !dbg !12280
  %205 = load i32, i32* %nr, align 4, !dbg !12282
  %cmp403 = icmp slt i32 %204, %205, !dbg !12283
  br i1 %cmp403, label %for.body405, label %for.end420, !dbg !12284

for.body405:                                      ; preds = %for.cond402
  %206 = load i32, i32* %r, align 4, !dbg !12285
  %idxprom406 = sext i32 %206 to i64, !dbg !12285
  %arrayidx407 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom406, !dbg !12285
  %rclass408 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx407, i32 0, i32 2, !dbg !12285
  %207 = load i32, i32* %rclass408, align 8, !dbg !12285
  %idxprom409 = sext i32 %207 to i64, !dbg !12285
  %arrayidx410 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom409, !dbg !12285
  %208 = load i64, i64* %arrayidx410, align 8, !dbg !12285
  %209 = load i32, i32* %i, align 4, !dbg !12285
  %210 = load i32, i32* %k, align 4, !dbg !12285
  %add411 = add nsw i32 %209, %210, !dbg !12285
  %sh_prom412 = zext i32 %add411 to i64, !dbg !12285
  %shl413 = shl i64 1, %sh_prom412, !dbg !12285
  %and414 = and i64 %208, %shl413, !dbg !12285
  %tobool415 = icmp ne i64 %and414, 0, !dbg !12285
  %lnot = xor i1 %tobool415, true, !dbg !12285
  %lnot416 = xor i1 %lnot, true, !dbg !12285
  %lnot417 = xor i1 %lnot416, true, !dbg !12286
  %lnot.ext = zext i1 %lnot417 to i32, !dbg !12286
  %211 = load i32, i32* %bad_for_class, align 4, !dbg !12287
  %or = or i32 %211, %lnot.ext, !dbg !12287
  store i32 %or, i32* %bad_for_class, align 4, !dbg !12287
  br label %for.inc418, !dbg !12288

for.inc418:                                       ; preds = %for.body405
  %212 = load i32, i32* %k, align 4, !dbg !12289
  %inc419 = add nsw i32 %212, 1, !dbg !12289
  store i32 %inc419, i32* %k, align 4, !dbg !12289
  br label %for.cond402, !dbg !12290, !llvm.loop !12291

for.end420:                                       ; preds = %for.cond402
  store i32 0, i32* %i1, align 4, !dbg !12293
  br label %for.cond421, !dbg !12295

for.cond421:                                      ; preds = %for.inc433, %for.end420
  %213 = load i32, i32* %i1, align 4, !dbg !12296
  %214 = load i32, i32* @n_earlyclobbers, align 4, !dbg !12298
  %cmp422 = icmp slt i32 %213, %214, !dbg !12299
  br i1 %cmp422, label %for.body424, label %for.end435, !dbg !12300

for.body424:                                      ; preds = %for.cond421
  %215 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !12301
  %216 = load i32, i32* %regno, align 4, !dbg !12303
  %idxprom425 = sext i32 %216 to i64, !dbg !12301
  %arrayidx426 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %215, i64 %idxprom425, !dbg !12301
  %217 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx426, align 8, !dbg !12301
  %218 = load i32, i32* %i1, align 4, !dbg !12304
  %idxprom427 = sext i32 %218 to i64, !dbg !12305
  %arrayidx428 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @reload_earlyclobbers, i64 0, i64 %idxprom427, !dbg !12305
  %219 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx428, align 8, !dbg !12305
  %call429 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %217, %struct.rtx_def* %219), !dbg !12306
  %tobool430 = icmp ne i32 %call429, 0, !dbg !12306
  br i1 %tobool430, label %if.then431, label %if.end432, !dbg !12307

if.then431:                                       ; preds = %for.body424
  br label %for.end435, !dbg !12308

if.end432:                                        ; preds = %for.body424
  br label %for.inc433, !dbg !12309

for.inc433:                                       ; preds = %if.end432
  %220 = load i32, i32* %i1, align 4, !dbg !12310
  %inc434 = add nsw i32 %220, 1, !dbg !12310
  store i32 %inc434, i32* %i1, align 4, !dbg !12310
  br label %for.cond421, !dbg !12311, !llvm.loop !12312

for.end435:                                       ; preds = %if.then431, %for.cond421
  %221 = load i32, i32* %i1, align 4, !dbg !12314
  %222 = load i32, i32* @n_earlyclobbers, align 4, !dbg !12316
  %cmp436 = icmp ne i32 %221, %222, !dbg !12317
  br i1 %cmp436, label %if.then517, label %lor.lhs.false438, !dbg !12318

lor.lhs.false438:                                 ; preds = %for.end435
  %223 = load i32, i32* %i, align 4, !dbg !12319
  %224 = load i32, i32* %r, align 4, !dbg !12320
  %idxprom439 = sext i32 %224 to i64, !dbg !12321
  %arrayidx440 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom439, !dbg !12321
  %mode441 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx440, i32 0, i32 5, !dbg !12322
  %225 = load i32, i32* %mode441, align 4, !dbg !12322
  %226 = load i32, i32* %r, align 4, !dbg !12323
  %idxprom442 = sext i32 %226 to i64, !dbg !12324
  %arrayidx443 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom442, !dbg !12324
  %opnum444 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx443, i32 0, i32 12, !dbg !12325
  %227 = load i32, i32* %opnum444, align 8, !dbg !12325
  %228 = load i32, i32* %r, align 4, !dbg !12326
  %idxprom445 = sext i32 %228 to i64, !dbg !12327
  %arrayidx446 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom445, !dbg !12327
  %when_needed447 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx446, i32 0, i32 17, !dbg !12328
  %229 = load i32, i32* %when_needed447, align 4, !dbg !12328
  %230 = load i32, i32* %r, align 4, !dbg !12329
  %idxprom448 = sext i32 %230 to i64, !dbg !12330
  %arrayidx449 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom448, !dbg !12330
  %in450 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx449, i32 0, i32 0, !dbg !12331
  %231 = load %struct.rtx_def*, %struct.rtx_def** %in450, align 8, !dbg !12331
  %232 = load i32, i32* %r, align 4, !dbg !12332
  %idxprom451 = sext i32 %232 to i64, !dbg !12333
  %arrayidx452 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom451, !dbg !12333
  %out453 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx452, i32 0, i32 1, !dbg !12334
  %233 = load %struct.rtx_def*, %struct.rtx_def** %out453, align 8, !dbg !12334
  %234 = load i32, i32* %r, align 4, !dbg !12335
  %call454 = call i32 @free_for_value_p(i32 %223, i32 %225, i32 %227, i32 %229, %struct.rtx_def* %231, %struct.rtx_def* %233, i32 %234, i32 1), !dbg !12336
  %tobool455 = icmp ne i32 %call454, 0, !dbg !12336
  br i1 %tobool455, label %lor.lhs.false456, label %if.then517, !dbg !12337

lor.lhs.false456:                                 ; preds = %lor.lhs.false438
  %235 = load i64, i64* @reg_used_in_insn, align 8, !dbg !12338
  %236 = load i32, i32* %i, align 4, !dbg !12338
  %sh_prom457 = zext i32 %236 to i64, !dbg !12338
  %shl458 = shl i64 1, %sh_prom457, !dbg !12338
  %and459 = and i64 %235, %shl458, !dbg !12338
  %tobool460 = icmp ne i64 %and459, 0, !dbg !12338
  br i1 %tobool460, label %land.lhs.true461, label %lor.lhs.false471, !dbg !12339

land.lhs.true461:                                 ; preds = %lor.lhs.false456
  %237 = load i32, i32* %r, align 4, !dbg !12340
  %idxprom462 = sext i32 %237 to i64, !dbg !12341
  %arrayidx463 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom462, !dbg !12341
  %out464 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx463, i32 0, i32 1, !dbg !12342
  %238 = load %struct.rtx_def*, %struct.rtx_def** %out464, align 8, !dbg !12342
  %tobool465 = icmp ne %struct.rtx_def* %238, null, !dbg !12341
  br i1 %tobool465, label %land.lhs.true466, label %lor.lhs.false471, !dbg !12343

land.lhs.true466:                                 ; preds = %land.lhs.true461
  %239 = load i64, i64* @reg_reloaded_dead, align 8, !dbg !12344
  %240 = load i32, i32* %i, align 4, !dbg !12344
  %sh_prom467 = zext i32 %240 to i64, !dbg !12344
  %shl468 = shl i64 1, %sh_prom467, !dbg !12344
  %and469 = and i64 %239, %shl468, !dbg !12344
  %tobool470 = icmp ne i64 %and469, 0, !dbg !12344
  br i1 %tobool470, label %lor.lhs.false471, label %if.then517, !dbg !12345

lor.lhs.false471:                                 ; preds = %land.lhs.true466, %land.lhs.true461, %lor.lhs.false456
  %241 = load i32, i32* %i, align 4, !dbg !12346
  %cmp472 = icmp eq i32 %241, 6, !dbg !12347
  br i1 %cmp472, label %land.lhs.true474, label %lor.lhs.false482, !dbg !12348

land.lhs.true474:                                 ; preds = %lor.lhs.false471
  %242 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !12349
  %conv475 = zext i8 %242 to i32, !dbg !12349
  %tobool476 = icmp ne i32 %conv475, 0, !dbg !12349
  br i1 %tobool476, label %land.lhs.true477, label %lor.lhs.false482, !dbg !12350

land.lhs.true477:                                 ; preds = %land.lhs.true474
  %243 = load i32, i32* %r, align 4, !dbg !12351
  %idxprom478 = sext i32 %243 to i64, !dbg !12352
  %arrayidx479 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom478, !dbg !12352
  %out480 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx479, i32 0, i32 1, !dbg !12353
  %244 = load %struct.rtx_def*, %struct.rtx_def** %out480, align 8, !dbg !12353
  %tobool481 = icmp ne %struct.rtx_def* %244, null, !dbg !12352
  br i1 %tobool481, label %if.then517, label %lor.lhs.false482, !dbg !12354

lor.lhs.false482:                                 ; preds = %land.lhs.true477, %land.lhs.true474, %lor.lhs.false471
  %245 = load i32, i32* %r, align 4, !dbg !12355
  %idxprom483 = sext i32 %245 to i64, !dbg !12355
  %arrayidx484 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom483, !dbg !12355
  %mode485 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx484, i32 0, i32 5, !dbg !12355
  %246 = load i32, i32* %mode485, align 4, !dbg !12355
  %idxprom486 = zext i32 %246 to i64, !dbg !12355
  %arrayidx487 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom486, !dbg !12355
  %247 = load i8, i8* %arrayidx487, align 1, !dbg !12355
  %conv488 = zext i8 %247 to i16, !dbg !12355
  %conv489 = zext i16 %conv488 to i32, !dbg !12355
  %248 = load i32, i32* %mode, align 4, !dbg !12356
  %idxprom490 = zext i32 %248 to i64, !dbg !12356
  %arrayidx491 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom490, !dbg !12356
  %249 = load i8, i8* %arrayidx491, align 1, !dbg !12356
  %conv492 = zext i8 %249 to i16, !dbg !12356
  %conv493 = zext i16 %conv492 to i32, !dbg !12356
  %cmp494 = icmp sgt i32 %conv489, %conv493, !dbg !12357
  br i1 %cmp494, label %if.then517, label %lor.lhs.false496, !dbg !12358

lor.lhs.false496:                                 ; preds = %lor.lhs.false482
  %250 = load i32, i32* %bad_for_class, align 4, !dbg !12359
  %tobool497 = icmp ne i32 %250, 0, !dbg !12359
  br i1 %tobool497, label %if.then517, label %lor.lhs.false498, !dbg !12360

lor.lhs.false498:                                 ; preds = %lor.lhs.false496
  %251 = load i32, i32* %r, align 4, !dbg !12361
  %idxprom499 = sext i32 %251 to i64, !dbg !12362
  %arrayidx500 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom499, !dbg !12362
  %out501 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx500, i32 0, i32 1, !dbg !12363
  %252 = load %struct.rtx_def*, %struct.rtx_def** %out501, align 8, !dbg !12363
  %tobool502 = icmp ne %struct.rtx_def* %252, null, !dbg !12362
  br i1 %tobool502, label %land.lhs.true503, label %if.else532, !dbg !12364

land.lhs.true503:                                 ; preds = %lor.lhs.false498
  %253 = load i32, i32* %r, align 4, !dbg !12365
  %idxprom504 = sext i32 %253 to i64, !dbg !12366
  %arrayidx505 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom504, !dbg !12366
  %reg_rtx506 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx505, i32 0, i32 11, !dbg !12367
  %254 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx506, align 8, !dbg !12367
  %tobool507 = icmp ne %struct.rtx_def* %254, null, !dbg !12366
  br i1 %tobool507, label %land.lhs.true508, label %if.else532, !dbg !12368

land.lhs.true508:                                 ; preds = %land.lhs.true503
  %255 = load i32, i32* %r, align 4, !dbg !12369
  %idxprom509 = sext i32 %255 to i64, !dbg !12370
  %arrayidx510 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom509, !dbg !12370
  %out511 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx510, i32 0, i32 1, !dbg !12371
  %256 = load %struct.rtx_def*, %struct.rtx_def** %out511, align 8, !dbg !12371
  %257 = load i32, i32* %r, align 4, !dbg !12372
  %idxprom512 = sext i32 %257 to i64, !dbg !12373
  %arrayidx513 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom512, !dbg !12373
  %reg_rtx514 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx513, i32 0, i32 11, !dbg !12374
  %258 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx514, align 8, !dbg !12374
  %call515 = call i32 @rtx_equal_p(%struct.rtx_def* %256, %struct.rtx_def* %258), !dbg !12375
  %tobool516 = icmp ne i32 %call515, 0, !dbg !12375
  br i1 %tobool516, label %if.then517, label %if.else532, !dbg !12376

if.then517:                                       ; preds = %land.lhs.true508, %lor.lhs.false496, %lor.lhs.false482, %land.lhs.true477, %land.lhs.true466, %lor.lhs.false438, %for.end435
  %259 = load i32, i32* %r, align 4, !dbg !12377
  %idxprom518 = sext i32 %259 to i64, !dbg !12380
  %arrayidx519 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom518, !dbg !12380
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx519, i32 0, i32 18, !dbg !12381
  %bf.load520 = load i8, i8* %optional, align 8, !dbg !12381
  %bf.clear521 = and i8 %bf.load520, 1, !dbg !12381
  %bf.cast522 = zext i8 %bf.clear521 to i32, !dbg !12381
  %tobool523 = icmp ne i32 %bf.cast522, 0, !dbg !12380
  br i1 %tobool523, label %if.end531, label %if.then524, !dbg !12382

if.then524:                                       ; preds = %if.then517
  %260 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8, !dbg !12383
  %261 = load i32, i32* %r, align 4, !dbg !12385
  %idxprom525 = sext i32 %261 to i64, !dbg !12386
  %arrayidx526 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom525, !dbg !12386
  store %struct.rtx_def* %260, %struct.rtx_def** %arrayidx526, align 8, !dbg !12387
  %262 = load i32, i32* %i, align 4, !dbg !12388
  %idxprom527 = sext i32 %262 to i64, !dbg !12389
  %arrayidx528 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @reg_reloaded_insn, i64 0, i64 %idxprom527, !dbg !12389
  %263 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx528, align 8, !dbg !12389
  %264 = load i32, i32* %r, align 4, !dbg !12390
  %idxprom529 = sext i32 %264 to i64, !dbg !12391
  %arrayidx530 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_inheritance_insn, i64 0, i64 %idxprom529, !dbg !12391
  store %struct.rtx_def* %263, %struct.rtx_def** %arrayidx530, align 8, !dbg !12392
  br label %if.end531, !dbg !12393

if.end531:                                        ; preds = %if.then524, %if.then517
  br label %if.end565, !dbg !12394

if.else532:                                       ; preds = %land.lhs.true508, %land.lhs.true503, %lor.lhs.false498
  call void @llvm.dbg.declare(metadata i32* %k533, metadata !12395, metadata !DIExpression()), !dbg !12397
  %265 = load i32, i32* %i, align 4, !dbg !12398
  %266 = load i32, i32* %r, align 4, !dbg !12399
  %idxprom534 = sext i32 %266 to i64, !dbg !12400
  %arrayidx535 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom534, !dbg !12400
  %opnum536 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx535, i32 0, i32 12, !dbg !12401
  %267 = load i32, i32* %opnum536, align 8, !dbg !12401
  %268 = load i32, i32* %r, align 4, !dbg !12402
  %idxprom537 = sext i32 %268 to i64, !dbg !12403
  %arrayidx538 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom537, !dbg !12403
  %when_needed539 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx538, i32 0, i32 17, !dbg !12404
  %269 = load i32, i32* %when_needed539, align 4, !dbg !12404
  %270 = load i32, i32* %r, align 4, !dbg !12405
  %idxprom540 = sext i32 %270 to i64, !dbg !12406
  %arrayidx541 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom540, !dbg !12406
  %mode542 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx541, i32 0, i32 5, !dbg !12407
  %271 = load i32, i32* %mode542, align 4, !dbg !12407
  call void @mark_reload_reg_in_use(i32 %265, i32 %267, i32 %269, i32 %271), !dbg !12408
  %272 = load %struct.rtx_def*, %struct.rtx_def** %last_reg, align 8, !dbg !12409
  %273 = load i32, i32* %r, align 4, !dbg !12410
  %idxprom543 = sext i32 %273 to i64, !dbg !12411
  %arrayidx544 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom543, !dbg !12411
  %reg_rtx545 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx544, i32 0, i32 11, !dbg !12412
  store %struct.rtx_def* %272, %struct.rtx_def** %reg_rtx545, align 8, !dbg !12413
  %274 = load i32, i32* %r, align 4, !dbg !12414
  %idxprom546 = sext i32 %274 to i64, !dbg !12415
  %arrayidx547 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom546, !dbg !12415
  store i8 1, i8* %arrayidx547, align 1, !dbg !12416
  %275 = load i32, i32* %i, align 4, !dbg !12417
  %idxprom548 = sext i32 %275 to i64, !dbg !12418
  %arrayidx549 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @reg_reloaded_insn, i64 0, i64 %idxprom548, !dbg !12418
  %276 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx549, align 8, !dbg !12418
  %277 = load i32, i32* %r, align 4, !dbg !12419
  %idxprom550 = sext i32 %277 to i64, !dbg !12420
  %arrayidx551 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_inheritance_insn, i64 0, i64 %idxprom550, !dbg !12420
  store %struct.rtx_def* %276, %struct.rtx_def** %arrayidx551, align 8, !dbg !12421
  %278 = load i32, i32* %i, align 4, !dbg !12422
  %279 = load i32, i32* %r, align 4, !dbg !12423
  %idxprom552 = sext i32 %279 to i64, !dbg !12424
  %arrayidx553 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom552, !dbg !12424
  store i32 %278, i32* %arrayidx553, align 4, !dbg !12425
  store i32 0, i32* %k533, align 4, !dbg !12426
  br label %for.cond554, !dbg !12428

for.cond554:                                      ; preds = %for.inc562, %if.else532
  %280 = load i32, i32* %k533, align 4, !dbg !12429
  %281 = load i32, i32* %nr, align 4, !dbg !12431
  %cmp555 = icmp slt i32 %280, %281, !dbg !12432
  br i1 %cmp555, label %for.body557, label %for.end564, !dbg !12433

for.body557:                                      ; preds = %for.cond554
  %282 = load i32, i32* %i, align 4, !dbg !12434
  %283 = load i32, i32* %k533, align 4, !dbg !12434
  %add558 = add nsw i32 %282, %283, !dbg !12434
  %sh_prom559 = zext i32 %add558 to i64, !dbg !12434
  %shl560 = shl i64 1, %sh_prom559, !dbg !12434
  %284 = load i64, i64* @reload_reg_used_for_inherit, align 8, !dbg !12434
  %or561 = or i64 %284, %shl560, !dbg !12434
  store i64 %or561, i64* @reload_reg_used_for_inherit, align 8, !dbg !12434
  br label %for.inc562, !dbg !12434

for.inc562:                                       ; preds = %for.body557
  %285 = load i32, i32* %k533, align 4, !dbg !12435
  %inc563 = add nsw i32 %285, 1, !dbg !12435
  store i32 %inc563, i32* %k533, align 4, !dbg !12435
  br label %for.cond554, !dbg !12436, !llvm.loop !12437

for.end564:                                       ; preds = %for.cond554
  br label %if.end565

if.end565:                                        ; preds = %for.end564, %if.end531
  br label %if.end566, !dbg !12439

if.end566:                                        ; preds = %if.end565, %for.end388
  br label %if.end567, !dbg !12440

if.end567:                                        ; preds = %if.end566, %land.lhs.true347, %lor.lhs.false340, %land.lhs.true331, %land.lhs.true327, %lor.lhs.false322, %land.lhs.true308, %land.lhs.true306, %land.lhs.true301, %if.end287
  br label %if.end568, !dbg !12441

if.end568:                                        ; preds = %if.end567, %land.lhs.true235, %land.lhs.true230, %if.end227
  br label %if.end569, !dbg !12442

if.end569:                                        ; preds = %if.end568, %if.end131
  %286 = load i32, i32* %inheritance, align 4, !dbg !12443
  %tobool570 = icmp ne i32 %286, 0, !dbg !12443
  br i1 %tobool570, label %land.lhs.true571, label %if.else637, !dbg !12445

land.lhs.true571:                                 ; preds = %if.end569
  %287 = load i32, i32* %r, align 4, !dbg !12446
  %idxprom572 = sext i32 %287 to i64, !dbg !12447
  %arrayidx573 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom572, !dbg !12447
  %in574 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx573, i32 0, i32 0, !dbg !12448
  %288 = load %struct.rtx_def*, %struct.rtx_def** %in574, align 8, !dbg !12448
  %cmp575 = icmp ne %struct.rtx_def* %288, null, !dbg !12449
  br i1 %cmp575, label %land.lhs.true577, label %if.else637, !dbg !12450

land.lhs.true577:                                 ; preds = %land.lhs.true571
  %289 = load i32, i32* %r, align 4, !dbg !12451
  %idxprom578 = sext i32 %289 to i64, !dbg !12452
  %arrayidx579 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom578, !dbg !12452
  %290 = load i8, i8* %arrayidx579, align 1, !dbg !12452
  %tobool580 = icmp ne i8 %290, 0, !dbg !12452
  br i1 %tobool580, label %if.else637, label %land.lhs.true581, !dbg !12453

land.lhs.true581:                                 ; preds = %land.lhs.true577
  %291 = load i32, i32* %r, align 4, !dbg !12454
  %idxprom582 = sext i32 %291 to i64, !dbg !12455
  %arrayidx583 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom582, !dbg !12455
  %out584 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx583, i32 0, i32 1, !dbg !12456
  %292 = load %struct.rtx_def*, %struct.rtx_def** %out584, align 8, !dbg !12456
  %cmp585 = icmp eq %struct.rtx_def* %292, null, !dbg !12457
  br i1 %cmp585, label %land.lhs.true587, label %if.else637, !dbg !12458

land.lhs.true587:                                 ; preds = %land.lhs.true581
  %293 = load i32, i32* %r, align 4, !dbg !12459
  %idxprom588 = sext i32 %293 to i64, !dbg !12459
  %arrayidx589 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom588, !dbg !12459
  %in590 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx589, i32 0, i32 0, !dbg !12459
  %294 = load %struct.rtx_def*, %struct.rtx_def** %in590, align 8, !dbg !12459
  %295 = bitcast %struct.rtx_def* %294 to i32*, !dbg !12459
  %bf.load591 = load i32, i32* %295, align 8, !dbg !12459
  %bf.clear592 = and i32 %bf.load591, 65535, !dbg !12459
  %idxprom593 = sext i32 %bf.clear592 to i64, !dbg !12459
  %arrayidx594 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom593, !dbg !12459
  %296 = load i32, i32* %arrayidx594, align 4, !dbg !12459
  %cmp595 = icmp eq i32 %296, 9, !dbg !12459
  br i1 %cmp595, label %land.lhs.true621, label %lor.lhs.false597, !dbg !12460

lor.lhs.false597:                                 ; preds = %land.lhs.true587
  %297 = load i32, i32* %r, align 4, !dbg !12461
  %idxprom598 = sext i32 %297 to i64, !dbg !12461
  %arrayidx599 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom598, !dbg !12461
  %in600 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx599, i32 0, i32 0, !dbg !12461
  %298 = load %struct.rtx_def*, %struct.rtx_def** %in600, align 8, !dbg !12461
  %299 = bitcast %struct.rtx_def* %298 to i32*, !dbg !12461
  %bf.load601 = load i32, i32* %299, align 8, !dbg !12461
  %bf.clear602 = and i32 %bf.load601, 65535, !dbg !12461
  %cmp603 = icmp eq i32 %bf.clear602, 49, !dbg !12462
  br i1 %cmp603, label %land.lhs.true621, label %lor.lhs.false605, !dbg !12463

lor.lhs.false605:                                 ; preds = %lor.lhs.false597
  %300 = load i32, i32* %r, align 4, !dbg !12464
  %idxprom606 = sext i32 %300 to i64, !dbg !12464
  %arrayidx607 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom606, !dbg !12464
  %in608 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx607, i32 0, i32 0, !dbg !12464
  %301 = load %struct.rtx_def*, %struct.rtx_def** %in608, align 8, !dbg !12464
  %302 = bitcast %struct.rtx_def* %301 to i32*, !dbg !12464
  %bf.load609 = load i32, i32* %302, align 8, !dbg !12464
  %bf.clear610 = and i32 %bf.load609, 65535, !dbg !12464
  %cmp611 = icmp eq i32 %bf.clear610, 37, !dbg !12464
  br i1 %cmp611, label %land.lhs.true621, label %lor.lhs.false613, !dbg !12465

lor.lhs.false613:                                 ; preds = %lor.lhs.false605
  %303 = load i32, i32* %r, align 4, !dbg !12466
  %idxprom614 = sext i32 %303 to i64, !dbg !12466
  %arrayidx615 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom614, !dbg !12466
  %in616 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx615, i32 0, i32 0, !dbg !12466
  %304 = load %struct.rtx_def*, %struct.rtx_def** %in616, align 8, !dbg !12466
  %305 = bitcast %struct.rtx_def* %304 to i32*, !dbg !12466
  %bf.load617 = load i32, i32* %305, align 8, !dbg !12466
  %bf.clear618 = and i32 %bf.load617, 65535, !dbg !12466
  %cmp619 = icmp eq i32 %bf.clear618, 43, !dbg !12466
  br i1 %cmp619, label %land.lhs.true621, label %if.else637, !dbg !12467

land.lhs.true621:                                 ; preds = %lor.lhs.false613, %lor.lhs.false605, %lor.lhs.false597, %land.lhs.true587
  %306 = load i32, i32* %r, align 4, !dbg !12468
  %idxprom622 = sext i32 %306 to i64, !dbg !12469
  %arrayidx623 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom622, !dbg !12469
  %nregs624 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx623, i32 0, i32 6, !dbg !12470
  %307 = load i32, i32* %nregs624, align 8, !dbg !12470
  %308 = load i32, i32* %max_group_size, align 4, !dbg !12471
  %cmp625 = icmp eq i32 %307, %308, !dbg !12472
  br i1 %cmp625, label %if.then633, label %lor.lhs.false627, !dbg !12473

lor.lhs.false627:                                 ; preds = %land.lhs.true621
  %309 = load i32, i32* %r, align 4, !dbg !12474
  %idxprom628 = sext i32 %309 to i64, !dbg !12475
  %arrayidx629 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom628, !dbg !12475
  %rclass630 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx629, i32 0, i32 2, !dbg !12476
  %310 = load i32, i32* %rclass630, align 8, !dbg !12476
  %311 = load i32, i32* %group_class, align 4, !dbg !12477
  %call631 = call i32 @reg_classes_intersect_p(i32 %310, i32 %311), !dbg !12478
  %tobool632 = icmp ne i32 %call631, 0, !dbg !12478
  br i1 %tobool632, label %if.else637, label %if.then633, !dbg !12479

if.then633:                                       ; preds = %lor.lhs.false627, %land.lhs.true621
  %312 = load i32, i32* %r, align 4, !dbg !12480
  %idxprom634 = sext i32 %312 to i64, !dbg !12481
  %arrayidx635 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom634, !dbg !12481
  %in636 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx635, i32 0, i32 0, !dbg !12482
  %313 = load %struct.rtx_def*, %struct.rtx_def** %in636, align 8, !dbg !12482
  store %struct.rtx_def* %313, %struct.rtx_def** %search_equiv, align 8, !dbg !12483
  br label %if.end725, !dbg !12484

if.else637:                                       ; preds = %lor.lhs.false627, %lor.lhs.false613, %land.lhs.true581, %land.lhs.true577, %land.lhs.true571, %if.end569
  %314 = load i32, i32* %inheritance, align 4, !dbg !12485
  %tobool638 = icmp ne i32 %314, 0, !dbg !12485
  br i1 %tobool638, label %land.lhs.true639, label %if.end724, !dbg !12487

land.lhs.true639:                                 ; preds = %if.else637
  %315 = load i32, i32* %r, align 4, !dbg !12488
  %idxprom640 = sext i32 %315 to i64, !dbg !12489
  %arrayidx641 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom640, !dbg !12489
  %in642 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx641, i32 0, i32 0, !dbg !12490
  %316 = load %struct.rtx_def*, %struct.rtx_def** %in642, align 8, !dbg !12490
  %cmp643 = icmp eq %struct.rtx_def* %316, null, !dbg !12491
  br i1 %cmp643, label %land.lhs.true645, label %if.end724, !dbg !12492

land.lhs.true645:                                 ; preds = %land.lhs.true639
  %317 = load i32, i32* %r, align 4, !dbg !12493
  %idxprom646 = sext i32 %317 to i64, !dbg !12494
  %arrayidx647 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom646, !dbg !12494
  %out648 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx647, i32 0, i32 1, !dbg !12495
  %318 = load %struct.rtx_def*, %struct.rtx_def** %out648, align 8, !dbg !12495
  %cmp649 = icmp ne %struct.rtx_def* %318, null, !dbg !12496
  br i1 %cmp649, label %if.then651, label %if.end724, !dbg !12497

if.then651:                                       ; preds = %land.lhs.true645
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !12498, metadata !DIExpression()), !dbg !12500
  %319 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12501
  %320 = bitcast %struct.rtx_def* %319 to i32*, !dbg !12501
  %bf.load652 = load i32, i32* %320, align 8, !dbg !12501
  %bf.clear653 = and i32 %bf.load652, 65535, !dbg !12501
  %cmp654 = icmp eq i32 %bf.clear653, 8, !dbg !12501
  br i1 %cmp654, label %cond.true671, label %lor.lhs.false656, !dbg !12501

lor.lhs.false656:                                 ; preds = %if.then651
  %321 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12501
  %322 = bitcast %struct.rtx_def* %321 to i32*, !dbg !12501
  %bf.load657 = load i32, i32* %322, align 8, !dbg !12501
  %bf.clear658 = and i32 %bf.load657, 65535, !dbg !12501
  %cmp659 = icmp eq i32 %bf.clear658, 7, !dbg !12501
  br i1 %cmp659, label %cond.true671, label %lor.lhs.false661, !dbg !12501

lor.lhs.false661:                                 ; preds = %lor.lhs.false656
  %323 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12501
  %324 = bitcast %struct.rtx_def* %323 to i32*, !dbg !12501
  %bf.load662 = load i32, i32* %324, align 8, !dbg !12501
  %bf.clear663 = and i32 %bf.load662, 65535, !dbg !12501
  %cmp664 = icmp eq i32 %bf.clear663, 9, !dbg !12501
  br i1 %cmp664, label %cond.true671, label %lor.lhs.false666, !dbg !12501

lor.lhs.false666:                                 ; preds = %lor.lhs.false661
  %325 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12501
  %326 = bitcast %struct.rtx_def* %325 to i32*, !dbg !12501
  %bf.load667 = load i32, i32* %326, align 8, !dbg !12501
  %bf.clear668 = and i32 %bf.load667, 65535, !dbg !12501
  %cmp669 = icmp eq i32 %bf.clear668, 10, !dbg !12501
  br i1 %cmp669, label %cond.true671, label %cond.false693, !dbg !12501

cond.true671:                                     ; preds = %lor.lhs.false666, %lor.lhs.false661, %lor.lhs.false656, %if.then651
  %327 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12501
  %u672 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %327, i32 0, i32 1, !dbg !12501
  %fld673 = bitcast %union.u* %u672 to [1 x %union.rtunion_def]*, !dbg !12501
  %arrayidx674 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld673, i64 0, i64 5, !dbg !12501
  %rt_rtx675 = bitcast %union.rtunion_def* %arrayidx674 to %struct.rtx_def**, !dbg !12501
  %328 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx675, align 8, !dbg !12501
  %329 = bitcast %struct.rtx_def* %328 to i32*, !dbg !12501
  %bf.load676 = load i32, i32* %329, align 8, !dbg !12501
  %bf.clear677 = and i32 %bf.load676, 65535, !dbg !12501
  %cmp678 = icmp eq i32 %bf.clear677, 23, !dbg !12501
  br i1 %cmp678, label %cond.true680, label %cond.false685, !dbg !12501

cond.true680:                                     ; preds = %cond.true671
  %330 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12501
  %u681 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %330, i32 0, i32 1, !dbg !12501
  %fld682 = bitcast %union.u* %u681 to [1 x %union.rtunion_def]*, !dbg !12501
  %arrayidx683 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld682, i64 0, i64 5, !dbg !12501
  %rt_rtx684 = bitcast %union.rtunion_def* %arrayidx683 to %struct.rtx_def**, !dbg !12501
  %331 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx684, align 8, !dbg !12501
  br label %cond.end691, !dbg !12501

cond.false685:                                    ; preds = %cond.true671
  %332 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12501
  %333 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12501
  %u686 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %333, i32 0, i32 1, !dbg !12501
  %fld687 = bitcast %union.u* %u686 to [1 x %union.rtunion_def]*, !dbg !12501
  %arrayidx688 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld687, i64 0, i64 5, !dbg !12501
  %rt_rtx689 = bitcast %union.rtunion_def* %arrayidx688 to %struct.rtx_def**, !dbg !12501
  %334 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx689, align 8, !dbg !12501
  %call690 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %332, %struct.rtx_def* %334), !dbg !12501
  br label %cond.end691, !dbg !12501

cond.end691:                                      ; preds = %cond.false685, %cond.true680
  %cond692 = phi %struct.rtx_def* [ %331, %cond.true680 ], [ %call690, %cond.false685 ], !dbg !12501
  br label %cond.end694, !dbg !12501

cond.false693:                                    ; preds = %lor.lhs.false666
  br label %cond.end694, !dbg !12501

cond.end694:                                      ; preds = %cond.false693, %cond.end691
  %cond695 = phi %struct.rtx_def* [ %cond692, %cond.end691 ], [ null, %cond.false693 ], !dbg !12501
  store %struct.rtx_def* %cond695, %struct.rtx_def** %set, align 8, !dbg !12500
  %335 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !12502
  %tobool696 = icmp ne %struct.rtx_def* %335, null, !dbg !12502
  br i1 %tobool696, label %land.lhs.true697, label %if.end723, !dbg !12504

land.lhs.true697:                                 ; preds = %cond.end694
  %336 = load i32, i32* %r, align 4, !dbg !12505
  %idxprom698 = sext i32 %336 to i64, !dbg !12506
  %arrayidx699 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom698, !dbg !12506
  %out700 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx699, i32 0, i32 1, !dbg !12507
  %337 = load %struct.rtx_def*, %struct.rtx_def** %out700, align 8, !dbg !12507
  %338 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !12508
  %u701 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %338, i32 0, i32 1, !dbg !12508
  %fld702 = bitcast %union.u* %u701 to [1 x %union.rtunion_def]*, !dbg !12508
  %arrayidx703 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld702, i64 0, i64 0, !dbg !12508
  %rt_rtx704 = bitcast %union.rtunion_def* %arrayidx703 to %struct.rtx_def**, !dbg !12508
  %339 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx704, align 8, !dbg !12508
  %call705 = call i32 @rtx_equal_p(%struct.rtx_def* %337, %struct.rtx_def* %339), !dbg !12509
  %tobool706 = icmp ne i32 %call705, 0, !dbg !12509
  br i1 %tobool706, label %land.lhs.true707, label %if.end723, !dbg !12510

land.lhs.true707:                                 ; preds = %land.lhs.true697
  %340 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !12511
  %u708 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %340, i32 0, i32 1, !dbg !12511
  %fld709 = bitcast %union.u* %u708 to [1 x %union.rtunion_def]*, !dbg !12511
  %arrayidx710 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld709, i64 0, i64 1, !dbg !12511
  %rt_rtx711 = bitcast %union.rtunion_def* %arrayidx710 to %struct.rtx_def**, !dbg !12511
  %341 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx711, align 8, !dbg !12511
  %342 = bitcast %struct.rtx_def* %341 to i32*, !dbg !12511
  %bf.load712 = load i32, i32* %342, align 8, !dbg !12511
  %bf.clear713 = and i32 %bf.load712, 65535, !dbg !12511
  %idxprom714 = sext i32 %bf.clear713 to i64, !dbg !12511
  %arrayidx715 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom714, !dbg !12511
  %343 = load i32, i32* %arrayidx715, align 4, !dbg !12511
  %cmp716 = icmp eq i32 %343, 9, !dbg !12511
  br i1 %cmp716, label %if.then718, label %if.end723, !dbg !12512

if.then718:                                       ; preds = %land.lhs.true707
  %344 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !12513
  %u719 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1, !dbg !12513
  %fld720 = bitcast %union.u* %u719 to [1 x %union.rtunion_def]*, !dbg !12513
  %arrayidx721 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld720, i64 0, i64 1, !dbg !12513
  %rt_rtx722 = bitcast %union.rtunion_def* %arrayidx721 to %struct.rtx_def**, !dbg !12513
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx722, align 8, !dbg !12513
  store %struct.rtx_def* %345, %struct.rtx_def** %search_equiv, align 8, !dbg !12514
  br label %if.end723, !dbg !12515

if.end723:                                        ; preds = %if.then718, %land.lhs.true707, %land.lhs.true697, %cond.end694
  br label %if.end724, !dbg !12516

if.end724:                                        ; preds = %if.end723, %land.lhs.true645, %land.lhs.true639, %if.else637
  br label %if.end725

if.end725:                                        ; preds = %if.end724, %if.then633
  %346 = load %struct.rtx_def*, %struct.rtx_def** %search_equiv, align 8, !dbg !12517
  %tobool726 = icmp ne %struct.rtx_def* %346, null, !dbg !12517
  br i1 %tobool726, label %if.then727, label %if.end994, !dbg !12519

if.then727:                                       ; preds = %if.end725
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %equiv, metadata !12520, metadata !DIExpression()), !dbg !12522
  %347 = load %struct.rtx_def*, %struct.rtx_def** %search_equiv, align 8, !dbg !12523
  %348 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12524
  %349 = load i32, i32* %r, align 4, !dbg !12525
  %idxprom728 = sext i32 %349 to i64, !dbg !12526
  %arrayidx729 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom728, !dbg !12526
  %rclass730 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx729, i32 0, i32 2, !dbg !12527
  %350 = load i32, i32* %rclass730, align 8, !dbg !12527
  %351 = load i32, i32* %r, align 4, !dbg !12528
  %idxprom731 = sext i32 %351 to i64, !dbg !12529
  %arrayidx732 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom731, !dbg !12529
  %mode733 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx732, i32 0, i32 5, !dbg !12530
  %352 = load i32, i32* %mode733, align 4, !dbg !12530
  %call734 = call %struct.rtx_def* @find_equiv_reg(%struct.rtx_def* %347, %struct.rtx_def* %348, i32 %350, i32 -1, i16* null, i32 0, i32 %352), !dbg !12531
  store %struct.rtx_def* %call734, %struct.rtx_def** %equiv, align 8, !dbg !12522
  call void @llvm.dbg.declare(metadata i32* %regno735, metadata !12532, metadata !DIExpression()), !dbg !12533
  store i32 0, i32* %regno735, align 4, !dbg !12533
  %353 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12534
  %cmp736 = icmp ne %struct.rtx_def* %353, null, !dbg !12536
  br i1 %cmp736, label %if.then738, label %if.end777, !dbg !12537

if.then738:                                       ; preds = %if.then727
  %354 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12538
  %355 = bitcast %struct.rtx_def* %354 to i32*, !dbg !12538
  %bf.load739 = load i32, i32* %355, align 8, !dbg !12538
  %bf.clear740 = and i32 %bf.load739, 65535, !dbg !12538
  %cmp741 = icmp eq i32 %bf.clear740, 37, !dbg !12538
  br i1 %cmp741, label %if.then743, label %if.else745, !dbg !12541

if.then743:                                       ; preds = %if.then738
  %356 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12542
  %call744 = call i32 @rhs_regno(%struct.rtx_def* %356), !dbg !12542
  store i32 %call744, i32* %regno735, align 4, !dbg !12543
  br label %if.end776, !dbg !12544

if.else745:                                       ; preds = %if.then738
  %357 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12545
  %358 = bitcast %struct.rtx_def* %357 to i32*, !dbg !12545
  %bf.load746 = load i32, i32* %358, align 8, !dbg !12545
  %bf.clear747 = and i32 %bf.load746, 65535, !dbg !12545
  %cmp748 = icmp eq i32 %bf.clear747, 39, !dbg !12545
  br i1 %cmp748, label %cond.false751, label %cond.true750, !dbg !12545

cond.true750:                                     ; preds = %if.else745
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 6322, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !12545
  br label %cond.end752, !dbg !12545

cond.false751:                                    ; preds = %if.else745
  br label %cond.end752, !dbg !12545

cond.end752:                                      ; preds = %cond.false751, %cond.true750
  %cond753 = phi i32 [ 0, %cond.true750 ], [ 0, %cond.false751 ], !dbg !12545
  %359 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12547
  %call754 = call i32 @subreg_regno(%struct.rtx_def* %359), !dbg !12548
  store i32 %call754, i32* %regno735, align 4, !dbg !12549
  %360 = load i32, i32* %r, align 4, !dbg !12550
  %idxprom755 = sext i32 %360 to i64, !dbg !12551
  %arrayidx756 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom755, !dbg !12551
  %mode757 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx756, i32 0, i32 5, !dbg !12552
  %361 = load i32, i32* %mode757, align 4, !dbg !12552
  %362 = load i32, i32* %regno735, align 4, !dbg !12553
  %call758 = call %struct.rtx_def* @gen_rtx_REG(i32 %361, i32 %362), !dbg !12554
  store %struct.rtx_def* %call758, %struct.rtx_def** %equiv, align 8, !dbg !12555
  %363 = load i32, i32* %regno735, align 4, !dbg !12556
  store i32 %363, i32* %i, align 4, !dbg !12558
  br label %for.cond759, !dbg !12559

for.cond759:                                      ; preds = %for.inc773, %cond.end752
  %364 = load i32, i32* %i, align 4, !dbg !12560
  %365 = load i32, i32* %regno735, align 4, !dbg !12562
  %366 = load i32, i32* %r, align 4, !dbg !12563
  %idxprom760 = sext i32 %366 to i64, !dbg !12564
  %arrayidx761 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom760, !dbg !12564
  %nregs762 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx761, i32 0, i32 6, !dbg !12565
  %367 = load i32, i32* %nregs762, align 8, !dbg !12565
  %add763 = add nsw i32 %365, %367, !dbg !12566
  %cmp764 = icmp slt i32 %364, %add763, !dbg !12567
  br i1 %cmp764, label %for.body766, label %for.end775, !dbg !12568

for.body766:                                      ; preds = %for.cond759
  %368 = load i64, i64* @reload_reg_unavailable, align 8, !dbg !12569
  %369 = load i32, i32* %i, align 4, !dbg !12569
  %sh_prom767 = zext i32 %369 to i64, !dbg !12569
  %shl768 = shl i64 1, %sh_prom767, !dbg !12569
  %and769 = and i64 %368, %shl768, !dbg !12569
  %tobool770 = icmp ne i64 %and769, 0, !dbg !12569
  br i1 %tobool770, label %if.then771, label %if.end772, !dbg !12571

if.then771:                                       ; preds = %for.body766
  store %struct.rtx_def* null, %struct.rtx_def** %equiv, align 8, !dbg !12572
  br label %if.end772, !dbg !12573

if.end772:                                        ; preds = %if.then771, %for.body766
  br label %for.inc773, !dbg !12569

for.inc773:                                       ; preds = %if.end772
  %370 = load i32, i32* %i, align 4, !dbg !12574
  %inc774 = add nsw i32 %370, 1, !dbg !12574
  store i32 %inc774, i32* %i, align 4, !dbg !12574
  br label %for.cond759, !dbg !12575, !llvm.loop !12576

for.end775:                                       ; preds = %for.cond759
  br label %if.end776

if.end776:                                        ; preds = %for.end775, %if.then743
  br label %if.end777, !dbg !12578

if.end777:                                        ; preds = %if.end776, %if.then727
  %371 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12579
  %cmp778 = icmp ne %struct.rtx_def* %371, null, !dbg !12581
  br i1 %cmp778, label %if.then780, label %if.end841, !dbg !12582

if.then780:                                       ; preds = %if.end777
  call void @llvm.dbg.declare(metadata i32* %regs_used, metadata !12583, metadata !DIExpression()), !dbg !12585
  store i32 0, i32* %regs_used, align 4, !dbg !12585
  call void @llvm.dbg.declare(metadata i32* %bad_for_class781, metadata !12586, metadata !DIExpression()), !dbg !12587
  store i32 0, i32* %bad_for_class781, align 4, !dbg !12587
  call void @llvm.dbg.declare(metadata i32* %max_regno, metadata !12588, metadata !DIExpression()), !dbg !12589
  %372 = load i32, i32* %regno735, align 4, !dbg !12590
  %373 = load i32, i32* %r, align 4, !dbg !12591
  %idxprom782 = sext i32 %373 to i64, !dbg !12592
  %arrayidx783 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom782, !dbg !12592
  %nregs784 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx783, i32 0, i32 6, !dbg !12593
  %374 = load i32, i32* %nregs784, align 8, !dbg !12593
  %add785 = add i32 %372, %374, !dbg !12594
  store i32 %add785, i32* %max_regno, align 4, !dbg !12589
  %375 = load i32, i32* %regno735, align 4, !dbg !12595
  store i32 %375, i32* %i, align 4, !dbg !12597
  br label %for.cond786, !dbg !12598

for.cond786:                                      ; preds = %for.inc815, %if.then780
  %376 = load i32, i32* %i, align 4, !dbg !12599
  %377 = load i32, i32* %max_regno, align 4, !dbg !12601
  %cmp787 = icmp slt i32 %376, %377, !dbg !12602
  br i1 %cmp787, label %for.body789, label %for.end817, !dbg !12603

for.body789:                                      ; preds = %for.cond786
  %378 = load i64, i64* @reload_reg_used_at_all, align 8, !dbg !12604
  %379 = load i32, i32* %i, align 4, !dbg !12604
  %sh_prom790 = zext i32 %379 to i64, !dbg !12604
  %shl791 = shl i64 1, %sh_prom790, !dbg !12604
  %and792 = and i64 %378, %shl791, !dbg !12604
  %tobool793 = icmp ne i64 %and792, 0, !dbg !12604
  %lnot794 = xor i1 %tobool793, true, !dbg !12604
  %lnot796 = xor i1 %lnot794, true, !dbg !12604
  %lnot.ext797 = zext i1 %lnot796 to i32, !dbg !12604
  %380 = load i32, i32* %regs_used, align 4, !dbg !12606
  %or798 = or i32 %380, %lnot.ext797, !dbg !12606
  store i32 %or798, i32* %regs_used, align 4, !dbg !12606
  %381 = load i32, i32* %r, align 4, !dbg !12607
  %idxprom799 = sext i32 %381 to i64, !dbg !12607
  %arrayidx800 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom799, !dbg !12607
  %rclass801 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx800, i32 0, i32 2, !dbg !12607
  %382 = load i32, i32* %rclass801, align 8, !dbg !12607
  %idxprom802 = sext i32 %382 to i64, !dbg !12607
  %arrayidx803 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom802, !dbg !12607
  %383 = load i64, i64* %arrayidx803, align 8, !dbg !12607
  %384 = load i32, i32* %i, align 4, !dbg !12607
  %sh_prom804 = zext i32 %384 to i64, !dbg !12607
  %shl805 = shl i64 1, %sh_prom804, !dbg !12607
  %and806 = and i64 %383, %shl805, !dbg !12607
  %tobool807 = icmp ne i64 %and806, 0, !dbg !12607
  %lnot808 = xor i1 %tobool807, true, !dbg !12607
  %lnot810 = xor i1 %lnot808, true, !dbg !12607
  %lnot812 = xor i1 %lnot810, true, !dbg !12608
  %lnot.ext813 = zext i1 %lnot812 to i32, !dbg !12608
  %385 = load i32, i32* %bad_for_class781, align 4, !dbg !12609
  %or814 = or i32 %385, %lnot.ext813, !dbg !12609
  store i32 %or814, i32* %bad_for_class781, align 4, !dbg !12609
  br label %for.inc815, !dbg !12610

for.inc815:                                       ; preds = %for.body789
  %386 = load i32, i32* %i, align 4, !dbg !12611
  %inc816 = add nsw i32 %386, 1, !dbg !12611
  store i32 %inc816, i32* %i, align 4, !dbg !12611
  br label %for.cond786, !dbg !12612, !llvm.loop !12613

for.end817:                                       ; preds = %for.cond786
  %387 = load i32, i32* %regs_used, align 4, !dbg !12615
  %tobool818 = icmp ne i32 %387, 0, !dbg !12615
  br i1 %tobool818, label %land.lhs.true819, label %lor.lhs.false837, !dbg !12617

land.lhs.true819:                                 ; preds = %for.end817
  %388 = load i32, i32* %regno735, align 4, !dbg !12618
  %389 = load i32, i32* %r, align 4, !dbg !12619
  %idxprom820 = sext i32 %389 to i64, !dbg !12620
  %arrayidx821 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom820, !dbg !12620
  %mode822 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx821, i32 0, i32 5, !dbg !12621
  %390 = load i32, i32* %mode822, align 4, !dbg !12621
  %391 = load i32, i32* %r, align 4, !dbg !12622
  %idxprom823 = sext i32 %391 to i64, !dbg !12623
  %arrayidx824 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom823, !dbg !12623
  %opnum825 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx824, i32 0, i32 12, !dbg !12624
  %392 = load i32, i32* %opnum825, align 8, !dbg !12624
  %393 = load i32, i32* %r, align 4, !dbg !12625
  %idxprom826 = sext i32 %393 to i64, !dbg !12626
  %arrayidx827 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom826, !dbg !12626
  %when_needed828 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx827, i32 0, i32 17, !dbg !12627
  %394 = load i32, i32* %when_needed828, align 4, !dbg !12627
  %395 = load i32, i32* %r, align 4, !dbg !12628
  %idxprom829 = sext i32 %395 to i64, !dbg !12629
  %arrayidx830 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom829, !dbg !12629
  %in831 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx830, i32 0, i32 0, !dbg !12630
  %396 = load %struct.rtx_def*, %struct.rtx_def** %in831, align 8, !dbg !12630
  %397 = load i32, i32* %r, align 4, !dbg !12631
  %idxprom832 = sext i32 %397 to i64, !dbg !12632
  %arrayidx833 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom832, !dbg !12632
  %out834 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx833, i32 0, i32 1, !dbg !12633
  %398 = load %struct.rtx_def*, %struct.rtx_def** %out834, align 8, !dbg !12633
  %399 = load i32, i32* %r, align 4, !dbg !12634
  %call835 = call i32 @free_for_value_p(i32 %388, i32 %390, i32 %392, i32 %394, %struct.rtx_def* %396, %struct.rtx_def* %398, i32 %399, i32 1), !dbg !12635
  %tobool836 = icmp ne i32 %call835, 0, !dbg !12635
  br i1 %tobool836, label %lor.lhs.false837, label %if.then839, !dbg !12636

lor.lhs.false837:                                 ; preds = %land.lhs.true819, %for.end817
  %400 = load i32, i32* %bad_for_class781, align 4, !dbg !12637
  %tobool838 = icmp ne i32 %400, 0, !dbg !12637
  br i1 %tobool838, label %if.then839, label %if.end840, !dbg !12638

if.then839:                                       ; preds = %lor.lhs.false837, %land.lhs.true819
  store %struct.rtx_def* null, %struct.rtx_def** %equiv, align 8, !dbg !12639
  br label %if.end840, !dbg !12640

if.end840:                                        ; preds = %if.then839, %lor.lhs.false837
  br label %if.end841, !dbg !12641

if.end841:                                        ; preds = %if.end840, %if.end777
  %401 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12642
  %cmp842 = icmp ne %struct.rtx_def* %401, null, !dbg !12644
  br i1 %cmp842, label %land.lhs.true844, label %if.end851, !dbg !12645

land.lhs.true844:                                 ; preds = %if.end841
  %402 = load i32, i32* %regno735, align 4, !dbg !12646
  %403 = load i32, i32* %r, align 4, !dbg !12646
  %idxprom845 = sext i32 %403 to i64, !dbg !12646
  %arrayidx846 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom845, !dbg !12646
  %mode847 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx846, i32 0, i32 5, !dbg !12646
  %404 = load i32, i32* %mode847, align 4, !dbg !12646
  %call848 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %402, i32 %404), !dbg !12646
  %tobool849 = icmp ne i8 %call848, 0, !dbg !12646
  br i1 %tobool849, label %if.end851, label %if.then850, !dbg !12647

if.then850:                                       ; preds = %land.lhs.true844
  store %struct.rtx_def* null, %struct.rtx_def** %equiv, align 8, !dbg !12648
  br label %if.end851, !dbg !12649

if.end851:                                        ; preds = %if.then850, %land.lhs.true844, %if.end841
  %405 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12650
  %cmp852 = icmp ne %struct.rtx_def* %405, null, !dbg !12652
  br i1 %cmp852, label %if.then854, label %if.end879, !dbg !12653

if.then854:                                       ; preds = %if.end851
  store i32 0, i32* %i, align 4, !dbg !12654
  br label %for.cond855, !dbg !12656

for.cond855:                                      ; preds = %for.inc876, %if.then854
  %406 = load i32, i32* %i, align 4, !dbg !12657
  %407 = load i32, i32* @n_earlyclobbers, align 4, !dbg !12659
  %cmp856 = icmp slt i32 %406, %407, !dbg !12660
  br i1 %cmp856, label %for.body858, label %for.end878, !dbg !12661

for.body858:                                      ; preds = %for.cond855
  %408 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12662
  %409 = load i32, i32* %i, align 4, !dbg !12664
  %idxprom859 = sext i32 %409 to i64, !dbg !12665
  %arrayidx860 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @reload_earlyclobbers, i64 0, i64 %idxprom859, !dbg !12665
  %410 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx860, align 8, !dbg !12665
  %call861 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %408, %struct.rtx_def* %410), !dbg !12666
  %tobool862 = icmp ne i32 %call861, 0, !dbg !12666
  br i1 %tobool862, label %if.then863, label %if.end875, !dbg !12667

if.then863:                                       ; preds = %for.body858
  %411 = load i32, i32* %r, align 4, !dbg !12668
  %idxprom864 = sext i32 %411 to i64, !dbg !12671
  %arrayidx865 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom864, !dbg !12671
  %optional866 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx865, i32 0, i32 18, !dbg !12672
  %bf.load867 = load i8, i8* %optional866, align 8, !dbg !12672
  %bf.clear868 = and i8 %bf.load867, 1, !dbg !12672
  %bf.cast869 = zext i8 %bf.clear868 to i32, !dbg !12672
  %tobool870 = icmp ne i32 %bf.cast869, 0, !dbg !12671
  br i1 %tobool870, label %if.end874, label %if.then871, !dbg !12673

if.then871:                                       ; preds = %if.then863
  %412 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12674
  %413 = load i32, i32* %r, align 4, !dbg !12675
  %idxprom872 = sext i32 %413 to i64, !dbg !12676
  %arrayidx873 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom872, !dbg !12676
  store %struct.rtx_def* %412, %struct.rtx_def** %arrayidx873, align 8, !dbg !12677
  br label %if.end874, !dbg !12676

if.end874:                                        ; preds = %if.then871, %if.then863
  store %struct.rtx_def* null, %struct.rtx_def** %equiv, align 8, !dbg !12678
  br label %for.end878, !dbg !12679

if.end875:                                        ; preds = %for.body858
  br label %for.inc876, !dbg !12680

for.inc876:                                       ; preds = %if.end875
  %414 = load i32, i32* %i, align 4, !dbg !12681
  %inc877 = add nsw i32 %414, 1, !dbg !12681
  store i32 %inc877, i32* %i, align 4, !dbg !12681
  br label %for.cond855, !dbg !12682, !llvm.loop !12683

for.end878:                                       ; preds = %if.end874, %for.cond855
  br label %if.end879, !dbg !12684

if.end879:                                        ; preds = %for.end878, %if.end851
  %415 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12685
  %cmp880 = icmp ne %struct.rtx_def* %415, null, !dbg !12687
  br i1 %cmp880, label %if.then882, label %if.end931, !dbg !12688

if.then882:                                       ; preds = %if.end879
  %416 = load i32, i32* %regno735, align 4, !dbg !12689
  %417 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12692
  %418 = load i32, i32* %r, align 4, !dbg !12693
  %idxprom883 = sext i32 %418 to i64, !dbg !12694
  %arrayidx884 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom883, !dbg !12694
  %mode885 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx884, i32 0, i32 5, !dbg !12695
  %419 = load i32, i32* %mode885, align 4, !dbg !12695
  %call886 = call i32 @regno_clobbered_p(i32 %416, %struct.rtx_def* %417, i32 %419, i32 2), !dbg !12696
  %tobool887 = icmp ne i32 %call886, 0, !dbg !12696
  br i1 %tobool887, label %if.then888, label %if.else904, !dbg !12697

if.then888:                                       ; preds = %if.then882
  %420 = load i32, i32* %r, align 4, !dbg !12698
  %idxprom889 = sext i32 %420 to i64, !dbg !12699
  %arrayidx890 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom889, !dbg !12699
  %when_needed891 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx890, i32 0, i32 17, !dbg !12700
  %421 = load i32, i32* %when_needed891, align 4, !dbg !12700
  switch i32 %421, label %sw.default [
    i32 10, label %sw.bb
    i32 4, label %sw.bb
    i32 3, label %sw.bb
    i32 8, label %sw.bb
    i32 9, label %sw.bb892
    i32 0, label %sw.bb892
    i32 7, label %sw.bb892
  ], !dbg !12701

sw.bb:                                            ; preds = %if.then888, %if.then888, %if.then888, %if.then888
  br label %sw.epilog, !dbg !12702

sw.bb892:                                         ; preds = %if.then888, %if.then888, %if.then888
  %422 = load i32, i32* %r, align 4, !dbg !12704
  %idxprom893 = sext i32 %422 to i64, !dbg !12706
  %arrayidx894 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom893, !dbg !12706
  %optional895 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx894, i32 0, i32 18, !dbg !12707
  %bf.load896 = load i8, i8* %optional895, align 8, !dbg !12707
  %bf.clear897 = and i8 %bf.load896, 1, !dbg !12707
  %bf.cast898 = zext i8 %bf.clear897 to i32, !dbg !12707
  %tobool899 = icmp ne i32 %bf.cast898, 0, !dbg !12706
  br i1 %tobool899, label %if.end903, label %if.then900, !dbg !12708

if.then900:                                       ; preds = %sw.bb892
  %423 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12709
  %424 = load i32, i32* %r, align 4, !dbg !12710
  %idxprom901 = sext i32 %424 to i64, !dbg !12711
  %arrayidx902 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom901, !dbg !12711
  store %struct.rtx_def* %423, %struct.rtx_def** %arrayidx902, align 8, !dbg !12712
  br label %if.end903, !dbg !12711

if.end903:                                        ; preds = %if.then900, %sw.bb892
  br label %sw.default, !dbg !12707

sw.default:                                       ; preds = %if.then888, %if.end903
  store %struct.rtx_def* null, %struct.rtx_def** %equiv, align 8, !dbg !12713
  br label %sw.epilog, !dbg !12714

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end930, !dbg !12715

if.else904:                                       ; preds = %if.then882
  %425 = load i32, i32* %regno735, align 4, !dbg !12716
  %426 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !12718
  %427 = load i32, i32* %r, align 4, !dbg !12719
  %idxprom905 = sext i32 %427 to i64, !dbg !12720
  %arrayidx906 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom905, !dbg !12720
  %mode907 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx906, i32 0, i32 5, !dbg !12721
  %428 = load i32, i32* %mode907, align 4, !dbg !12721
  %call908 = call i32 @regno_clobbered_p(i32 %425, %struct.rtx_def* %426, i32 %428, i32 1), !dbg !12722
  %tobool909 = icmp ne i32 %call908, 0, !dbg !12722
  br i1 %tobool909, label %if.then910, label %if.end929, !dbg !12723

if.then910:                                       ; preds = %if.else904
  %429 = load i32, i32* %r, align 4, !dbg !12724
  %idxprom911 = sext i32 %429 to i64, !dbg !12725
  %arrayidx912 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom911, !dbg !12725
  %when_needed913 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx912, i32 0, i32 17, !dbg !12726
  %430 = load i32, i32* %when_needed913, align 4, !dbg !12726
  switch i32 %430, label %sw.default927 [
    i32 10, label %sw.bb914
    i32 4, label %sw.bb914
    i32 3, label %sw.bb914
    i32 8, label %sw.bb914
    i32 7, label %sw.bb914
    i32 0, label %sw.bb914
    i32 9, label %sw.bb915
  ], !dbg !12727

sw.bb914:                                         ; preds = %if.then910, %if.then910, %if.then910, %if.then910, %if.then910, %if.then910
  br label %sw.epilog928, !dbg !12728

sw.bb915:                                         ; preds = %if.then910
  %431 = load i32, i32* %r, align 4, !dbg !12730
  %idxprom916 = sext i32 %431 to i64, !dbg !12732
  %arrayidx917 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom916, !dbg !12732
  %optional918 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx917, i32 0, i32 18, !dbg !12733
  %bf.load919 = load i8, i8* %optional918, align 8, !dbg !12733
  %bf.clear920 = and i8 %bf.load919, 1, !dbg !12733
  %bf.cast921 = zext i8 %bf.clear920 to i32, !dbg !12733
  %tobool922 = icmp ne i32 %bf.cast921, 0, !dbg !12732
  br i1 %tobool922, label %if.end926, label %if.then923, !dbg !12734

if.then923:                                       ; preds = %sw.bb915
  %432 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12735
  %433 = load i32, i32* %r, align 4, !dbg !12736
  %idxprom924 = sext i32 %433 to i64, !dbg !12737
  %arrayidx925 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom924, !dbg !12737
  store %struct.rtx_def* %432, %struct.rtx_def** %arrayidx925, align 8, !dbg !12738
  br label %if.end926, !dbg !12737

if.end926:                                        ; preds = %if.then923, %sw.bb915
  br label %sw.default927, !dbg !12733

sw.default927:                                    ; preds = %if.then910, %if.end926
  store %struct.rtx_def* null, %struct.rtx_def** %equiv, align 8, !dbg !12739
  br label %sw.epilog928, !dbg !12740

sw.epilog928:                                     ; preds = %sw.default927, %sw.bb914
  br label %if.end929, !dbg !12741

if.end929:                                        ; preds = %sw.epilog928, %if.else904
  br label %if.end930

if.end930:                                        ; preds = %if.end929, %sw.epilog
  br label %if.end931, !dbg !12742

if.end931:                                        ; preds = %if.end930, %if.end879
  %434 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12743
  %cmp932 = icmp ne %struct.rtx_def* %434, null, !dbg !12745
  br i1 %cmp932, label %land.lhs.true934, label %if.end993, !dbg !12746

land.lhs.true934:                                 ; preds = %if.end931
  %435 = load i32, i32* %regno735, align 4, !dbg !12747
  %cmp935 = icmp ne i32 %435, 6, !dbg !12748
  br i1 %cmp935, label %if.then939, label %lor.lhs.false937, !dbg !12749

lor.lhs.false937:                                 ; preds = %land.lhs.true934
  %436 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !12750
  %tobool938 = icmp ne i8 %436, 0, !dbg !12750
  br i1 %tobool938, label %if.end993, label %if.then939, !dbg !12751

if.then939:                                       ; preds = %lor.lhs.false937, %land.lhs.true934
  call void @llvm.dbg.declare(metadata i32* %nr940, metadata !12752, metadata !DIExpression()), !dbg !12754
  %437 = load i32, i32* %regno735, align 4, !dbg !12755
  %idxprom941 = sext i32 %437 to i64, !dbg !12756
  %arrayidx942 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom941, !dbg !12756
  %438 = load i32, i32* %r, align 4, !dbg !12757
  %idxprom943 = sext i32 %438 to i64, !dbg !12758
  %arrayidx944 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom943, !dbg !12758
  %mode945 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx944, i32 0, i32 5, !dbg !12759
  %439 = load i32, i32* %mode945, align 4, !dbg !12759
  %idxprom946 = zext i32 %439 to i64, !dbg !12756
  %arrayidx947 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx942, i64 0, i64 %idxprom946, !dbg !12756
  %440 = load i8, i8* %arrayidx947, align 1, !dbg !12756
  %conv948 = zext i8 %440 to i32, !dbg !12756
  store i32 %conv948, i32* %nr940, align 4, !dbg !12754
  call void @llvm.dbg.declare(metadata i32* %k949, metadata !12760, metadata !DIExpression()), !dbg !12761
  %441 = load %struct.rtx_def*, %struct.rtx_def** %equiv, align 8, !dbg !12762
  %442 = load i32, i32* %r, align 4, !dbg !12763
  %idxprom950 = sext i32 %442 to i64, !dbg !12764
  %arrayidx951 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom950, !dbg !12764
  %reg_rtx952 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx951, i32 0, i32 11, !dbg !12765
  store %struct.rtx_def* %441, %struct.rtx_def** %reg_rtx952, align 8, !dbg !12766
  %443 = load i32, i32* %regno735, align 4, !dbg !12767
  %444 = load i32, i32* %r, align 4, !dbg !12768
  %idxprom953 = sext i32 %444 to i64, !dbg !12769
  %arrayidx954 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom953, !dbg !12769
  store i32 %443, i32* %arrayidx954, align 4, !dbg !12770
  %445 = load i32, i32* %r, align 4, !dbg !12771
  %idxprom955 = sext i32 %445 to i64, !dbg !12772
  %arrayidx956 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom955, !dbg !12772
  store i8 1, i8* %arrayidx956, align 1, !dbg !12773
  %446 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !12774
  %447 = load i32, i32* %regno735, align 4, !dbg !12774
  %sh_prom957 = zext i32 %447 to i64, !dbg !12774
  %shl958 = shl i64 1, %sh_prom957, !dbg !12774
  %and959 = and i64 %446, %shl958, !dbg !12774
  %tobool960 = icmp ne i64 %and959, 0, !dbg !12774
  br i1 %tobool960, label %if.end964, label %if.then961, !dbg !12776

if.then961:                                       ; preds = %if.then939
  %448 = load i32, i32* %regno735, align 4, !dbg !12777
  %idxprom962 = sext i32 %448 to i64, !dbg !12778
  %arrayidx963 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom962, !dbg !12778
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx963, align 8, !dbg !12779
  br label %if.end964, !dbg !12778

if.end964:                                        ; preds = %if.then961, %if.then939
  store i32 0, i32* %k949, align 4, !dbg !12780
  br label %for.cond965, !dbg !12782

for.cond965:                                      ; preds = %for.inc990, %if.end964
  %449 = load i32, i32* %k949, align 4, !dbg !12783
  %450 = load i32, i32* %nr940, align 4, !dbg !12785
  %cmp966 = icmp slt i32 %449, %450, !dbg !12786
  br i1 %cmp966, label %for.body968, label %for.end992, !dbg !12787

for.body968:                                      ; preds = %for.cond965
  %451 = load i32, i32* %regno735, align 4, !dbg !12788
  %452 = load i32, i32* %k949, align 4, !dbg !12790
  %add969 = add nsw i32 %451, %452, !dbg !12791
  %idxprom970 = sext i32 %add969 to i64, !dbg !12792
  %arrayidx971 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i64 0, i64 %idxprom970, !dbg !12792
  %453 = load i16, i16* %arrayidx971, align 2, !dbg !12792
  %conv972 = sext i16 %453 to i32, !dbg !12792
  store i32 %conv972, i32* %i, align 4, !dbg !12793
  %454 = load i32, i32* %i, align 4, !dbg !12794
  %cmp973 = icmp sge i32 %454, 0, !dbg !12796
  br i1 %cmp973, label %if.then975, label %if.end989, !dbg !12797

if.then975:                                       ; preds = %for.body968
  %455 = load i32, i32* %regno735, align 4, !dbg !12798
  %456 = load i32, i32* %r, align 4, !dbg !12800
  %idxprom976 = sext i32 %456 to i64, !dbg !12801
  %arrayidx977 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom976, !dbg !12801
  %opnum978 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx977, i32 0, i32 12, !dbg !12802
  %457 = load i32, i32* %opnum978, align 8, !dbg !12802
  %458 = load i32, i32* %r, align 4, !dbg !12803
  %idxprom979 = sext i32 %458 to i64, !dbg !12804
  %arrayidx980 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom979, !dbg !12804
  %when_needed981 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx980, i32 0, i32 17, !dbg !12805
  %459 = load i32, i32* %when_needed981, align 4, !dbg !12805
  %460 = load i32, i32* %r, align 4, !dbg !12806
  %idxprom982 = sext i32 %460 to i64, !dbg !12807
  %arrayidx983 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom982, !dbg !12807
  %mode984 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx983, i32 0, i32 5, !dbg !12808
  %461 = load i32, i32* %mode984, align 4, !dbg !12808
  call void @mark_reload_reg_in_use(i32 %455, i32 %457, i32 %459, i32 %461), !dbg !12809
  %462 = load i32, i32* %regno735, align 4, !dbg !12810
  %463 = load i32, i32* %k949, align 4, !dbg !12810
  %add985 = add nsw i32 %462, %463, !dbg !12810
  %sh_prom986 = zext i32 %add985 to i64, !dbg !12810
  %shl987 = shl i64 1, %sh_prom986, !dbg !12810
  %464 = load i64, i64* @reload_reg_used_for_inherit, align 8, !dbg !12810
  %or988 = or i64 %464, %shl987, !dbg !12810
  store i64 %or988, i64* @reload_reg_used_for_inherit, align 8, !dbg !12810
  br label %if.end989, !dbg !12811

if.end989:                                        ; preds = %if.then975, %for.body968
  br label %for.inc990, !dbg !12812

for.inc990:                                       ; preds = %if.end989
  %465 = load i32, i32* %k949, align 4, !dbg !12813
  %inc991 = add nsw i32 %465, 1, !dbg !12813
  store i32 %inc991, i32* %k949, align 4, !dbg !12813
  br label %for.cond965, !dbg !12814, !llvm.loop !12815

for.end992:                                       ; preds = %for.cond965
  br label %if.end993, !dbg !12817

if.end993:                                        ; preds = %for.end992, %lor.lhs.false937, %if.end931
  br label %if.end994, !dbg !12818

if.end994:                                        ; preds = %if.end993, %if.end725
  %466 = load i32, i32* %r, align 4, !dbg !12819
  %idxprom995 = sext i32 %466 to i64, !dbg !12821
  %arrayidx996 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom995, !dbg !12821
  %reg_rtx997 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx996, i32 0, i32 11, !dbg !12822
  %467 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx997, align 8, !dbg !12822
  %cmp998 = icmp ne %struct.rtx_def* %467, null, !dbg !12823
  br i1 %cmp998, label %if.then1009, label %lor.lhs.false1000, !dbg !12824

lor.lhs.false1000:                                ; preds = %if.end994
  %468 = load i32, i32* %r, align 4, !dbg !12825
  %idxprom1001 = sext i32 %468 to i64, !dbg !12826
  %arrayidx1002 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1001, !dbg !12826
  %optional1003 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1002, i32 0, i32 18, !dbg !12827
  %bf.load1004 = load i8, i8* %optional1003, align 8, !dbg !12827
  %bf.clear1005 = and i8 %bf.load1004, 1, !dbg !12827
  %bf.cast1006 = zext i8 %bf.clear1005 to i32, !dbg !12827
  %cmp1007 = icmp ne i32 %bf.cast1006, 0, !dbg !12828
  br i1 %cmp1007, label %if.then1009, label %if.end1010, !dbg !12829

if.then1009:                                      ; preds = %lor.lhs.false1000, %if.end994
  br label %for.inc1011, !dbg !12830

if.end1010:                                       ; preds = %lor.lhs.false1000
  br label %for.inc1011, !dbg !12831

for.inc1011:                                      ; preds = %if.end1010, %if.then1009, %if.then130, %if.then85
  %469 = load i32, i32* %j, align 4, !dbg !12832
  %inc1012 = add nsw i32 %469, 1, !dbg !12832
  store i32 %inc1012, i32* %j, align 4, !dbg !12832
  br label %for.cond64, !dbg !12833, !llvm.loop !12834

for.end1013:                                      ; preds = %for.cond64
  store i32 0, i32* %j, align 4, !dbg !12836
  br label %for.cond1014, !dbg !12838

for.cond1014:                                     ; preds = %for.inc1065, %for.end1013
  %470 = load i32, i32* %j, align 4, !dbg !12839
  %471 = load i32, i32* @n_reloads, align 4, !dbg !12841
  %cmp1015 = icmp slt i32 %470, %471, !dbg !12842
  br i1 %cmp1015, label %for.body1017, label %for.end1067, !dbg !12843

for.body1017:                                     ; preds = %for.cond1014
  call void @llvm.dbg.declare(metadata i32* %r1018, metadata !12844, metadata !DIExpression()), !dbg !12846
  %472 = load i32, i32* %j, align 4, !dbg !12847
  %idxprom1019 = sext i32 %472 to i64, !dbg !12848
  %arrayidx1020 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i64 0, i64 %idxprom1019, !dbg !12848
  %473 = load i16, i16* %arrayidx1020, align 2, !dbg !12848
  %conv1021 = sext i16 %473 to i32, !dbg !12848
  store i32 %conv1021, i32* %r1018, align 4, !dbg !12846
  %474 = load i32, i32* %r1018, align 4, !dbg !12849
  %idxprom1022 = sext i32 %474 to i64, !dbg !12851
  %arrayidx1023 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1022, !dbg !12851
  %out1024 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1023, i32 0, i32 1, !dbg !12852
  %475 = load %struct.rtx_def*, %struct.rtx_def** %out1024, align 8, !dbg !12852
  %cmp1025 = icmp eq %struct.rtx_def* %475, null, !dbg !12853
  br i1 %cmp1025, label %land.lhs.true1027, label %if.end1043, !dbg !12854

land.lhs.true1027:                                ; preds = %for.body1017
  %476 = load i32, i32* %r1018, align 4, !dbg !12855
  %idxprom1028 = sext i32 %476 to i64, !dbg !12856
  %arrayidx1029 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1028, !dbg !12856
  %in1030 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1029, i32 0, i32 0, !dbg !12857
  %477 = load %struct.rtx_def*, %struct.rtx_def** %in1030, align 8, !dbg !12857
  %cmp1031 = icmp eq %struct.rtx_def* %477, null, !dbg !12858
  br i1 %cmp1031, label %land.lhs.true1033, label %if.end1043, !dbg !12859

land.lhs.true1033:                                ; preds = %land.lhs.true1027
  %478 = load i32, i32* %r1018, align 4, !dbg !12860
  %idxprom1034 = sext i32 %478 to i64, !dbg !12861
  %arrayidx1035 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1034, !dbg !12861
  %secondary_p1036 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1035, i32 0, i32 18, !dbg !12862
  %bf.load1037 = load i8, i8* %secondary_p1036, align 8, !dbg !12862
  %bf.lshr1038 = lshr i8 %bf.load1037, 2, !dbg !12862
  %bf.clear1039 = and i8 %bf.lshr1038, 1, !dbg !12862
  %bf.cast1040 = zext i8 %bf.clear1039 to i32, !dbg !12862
  %tobool1041 = icmp ne i32 %bf.cast1040, 0, !dbg !12861
  br i1 %tobool1041, label %if.end1043, label %if.then1042, !dbg !12863

if.then1042:                                      ; preds = %land.lhs.true1033
  br label %for.inc1065, !dbg !12864

if.end1043:                                       ; preds = %land.lhs.true1033, %land.lhs.true1027, %for.body1017
  %479 = load i32, i32* %r1018, align 4, !dbg !12865
  %idxprom1044 = sext i32 %479 to i64, !dbg !12867
  %arrayidx1045 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1044, !dbg !12867
  %reg_rtx1046 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1045, i32 0, i32 11, !dbg !12868
  %480 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1046, align 8, !dbg !12868
  %cmp1047 = icmp ne %struct.rtx_def* %480, null, !dbg !12869
  br i1 %cmp1047, label %if.then1057, label %lor.lhs.false1049, !dbg !12870

lor.lhs.false1049:                                ; preds = %if.end1043
  %481 = load i32, i32* %r1018, align 4, !dbg !12871
  %idxprom1050 = sext i32 %481 to i64, !dbg !12872
  %arrayidx1051 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1050, !dbg !12872
  %optional1052 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1051, i32 0, i32 18, !dbg !12873
  %bf.load1053 = load i8, i8* %optional1052, align 8, !dbg !12873
  %bf.clear1054 = and i8 %bf.load1053, 1, !dbg !12873
  %bf.cast1055 = zext i8 %bf.clear1054 to i32, !dbg !12873
  %tobool1056 = icmp ne i32 %bf.cast1055, 0, !dbg !12872
  br i1 %tobool1056, label %if.then1057, label %if.end1058, !dbg !12874

if.then1057:                                      ; preds = %lor.lhs.false1049, %if.end1043
  br label %for.inc1065, !dbg !12875

if.end1058:                                       ; preds = %lor.lhs.false1049
  %482 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !12876
  %483 = load i32, i32* %r1018, align 4, !dbg !12878
  %484 = load i32, i32* %j, align 4, !dbg !12879
  %485 = load i32, i32* @n_reloads, align 4, !dbg !12880
  %sub = sub nsw i32 %485, 1, !dbg !12881
  %cmp1059 = icmp eq i32 %484, %sub, !dbg !12882
  %conv1060 = zext i1 %cmp1059 to i32, !dbg !12882
  %call1061 = call i32 @allocate_reload_reg(%struct.insn_chain* %482, i32 %483, i32 %conv1060), !dbg !12883
  %tobool1062 = icmp ne i32 %call1061, 0, !dbg !12883
  br i1 %tobool1062, label %if.end1064, label %if.then1063, !dbg !12884

if.then1063:                                      ; preds = %if.end1058
  br label %for.end1067, !dbg !12885

if.end1064:                                       ; preds = %if.end1058
  br label %for.inc1065, !dbg !12886

for.inc1065:                                      ; preds = %if.end1064, %if.then1057, %if.then1042
  %486 = load i32, i32* %j, align 4, !dbg !12887
  %inc1066 = add nsw i32 %486, 1, !dbg !12887
  store i32 %inc1066, i32* %j, align 4, !dbg !12887
  br label %for.cond1014, !dbg !12888, !llvm.loop !12889

for.end1067:                                      ; preds = %if.then1063, %for.cond1014
  %487 = load i32, i32* %j, align 4, !dbg !12891
  %488 = load i32, i32* @n_reloads, align 4, !dbg !12893
  %cmp1068 = icmp eq i32 %487, %488, !dbg !12894
  br i1 %cmp1068, label %if.then1070, label %if.end1071, !dbg !12895

if.then1070:                                      ; preds = %for.end1067
  store i32 1, i32* %win, align 4, !dbg !12896
  br label %for.end1073, !dbg !12898

if.end1071:                                       ; preds = %for.end1067
  br label %for.inc1072, !dbg !12899

for.inc1072:                                      ; preds = %if.end1071
  %489 = load i32, i32* %inheritance, align 4, !dbg !12900
  %dec = add nsw i32 %489, -1, !dbg !12900
  store i32 %dec, i32* %inheritance, align 4, !dbg !12900
  br label %for.cond60, !dbg !12901, !llvm.loop !12902

for.end1073:                                      ; preds = %if.then1070, %for.cond60
  %490 = load i32, i32* %win, align 4, !dbg !12904
  %tobool1074 = icmp ne i32 %490, 0, !dbg !12904
  br i1 %tobool1074, label %if.end1140, label %if.then1075, !dbg !12906

if.then1075:                                      ; preds = %for.end1073
  %491 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !12907
  %arraydecay1076 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* %save_reload_reg_rtx, i64 0, i64 0, !dbg !12909
  call void @choose_reload_regs_init(%struct.insn_chain* %491, %struct.rtx_def** %arraydecay1076), !dbg !12910
  %492 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !12911
  %n_reloads = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %492, i32 0, i32 9, !dbg !12911
  %493 = load i32, i32* %n_reloads, align 8, !dbg !12911
  %494 = load i32, i32* @n_reloads, align 4, !dbg !12911
  %cmp1077 = icmp eq i32 %493, %494, !dbg !12911
  br i1 %cmp1077, label %cond.false1080, label %cond.true1079, !dbg !12911

cond.true1079:                                    ; preds = %if.then1075
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 6539, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !12911
  br label %cond.end1081, !dbg !12911

cond.false1080:                                   ; preds = %if.then1075
  br label %cond.end1081, !dbg !12911

cond.end1081:                                     ; preds = %cond.false1080, %cond.true1079
  %cond1082 = phi i32 [ 0, %cond.true1079 ], [ 0, %cond.false1080 ], !dbg !12911
  store i32 0, i32* %i, align 4, !dbg !12912
  br label %for.cond1083, !dbg !12914

for.cond1083:                                     ; preds = %for.inc1137, %cond.end1081
  %495 = load i32, i32* %i, align 4, !dbg !12915
  %496 = load i32, i32* @n_reloads, align 4, !dbg !12917
  %cmp1084 = icmp slt i32 %495, %496, !dbg !12918
  br i1 %cmp1084, label %for.body1086, label %for.end1139, !dbg !12919

for.body1086:                                     ; preds = %for.cond1083
  %497 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !12920
  %rld = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %497, i32 0, i32 8, !dbg !12923
  %498 = load %struct.reload*, %struct.reload** %rld, align 8, !dbg !12923
  %499 = load i32, i32* %i, align 4, !dbg !12924
  %idxprom1087 = sext i32 %499 to i64, !dbg !12920
  %arrayidx1088 = getelementptr inbounds %struct.reload, %struct.reload* %498, i64 %idxprom1087, !dbg !12920
  %regno1089 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1088, i32 0, i32 10, !dbg !12925
  %500 = load i32, i32* %regno1089, align 8, !dbg !12925
  %cmp1090 = icmp slt i32 %500, 0, !dbg !12926
  br i1 %cmp1090, label %if.then1099, label %lor.lhs.false1092, !dbg !12927

lor.lhs.false1092:                                ; preds = %for.body1086
  %501 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !12928
  %rld1093 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %501, i32 0, i32 8, !dbg !12929
  %502 = load %struct.reload*, %struct.reload** %rld1093, align 8, !dbg !12929
  %503 = load i32, i32* %i, align 4, !dbg !12930
  %idxprom1094 = sext i32 %503 to i64, !dbg !12928
  %arrayidx1095 = getelementptr inbounds %struct.reload, %struct.reload* %502, i64 %idxprom1094, !dbg !12928
  %reg_rtx1096 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1095, i32 0, i32 11, !dbg !12931
  %504 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1096, align 8, !dbg !12931
  %cmp1097 = icmp ne %struct.rtx_def* %504, null, !dbg !12932
  br i1 %cmp1097, label %if.then1099, label %if.end1100, !dbg !12933

if.then1099:                                      ; preds = %lor.lhs.false1092, %for.body1086
  br label %for.inc1137, !dbg !12934

if.end1100:                                       ; preds = %lor.lhs.false1092
  %505 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !12935
  %rld1101 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %505, i32 0, i32 8, !dbg !12935
  %506 = load %struct.reload*, %struct.reload** %rld1101, align 8, !dbg !12935
  %507 = load i32, i32* %i, align 4, !dbg !12935
  %idxprom1102 = sext i32 %507 to i64, !dbg !12935
  %arrayidx1103 = getelementptr inbounds %struct.reload, %struct.reload* %506, i64 %idxprom1102, !dbg !12935
  %when_needed1104 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1103, i32 0, i32 17, !dbg !12935
  %508 = load i32, i32* %when_needed1104, align 4, !dbg !12935
  %509 = load i32, i32* %i, align 4, !dbg !12935
  %idxprom1105 = sext i32 %509 to i64, !dbg !12935
  %arrayidx1106 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1105, !dbg !12935
  %when_needed1107 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1106, i32 0, i32 17, !dbg !12935
  %510 = load i32, i32* %when_needed1107, align 4, !dbg !12935
  %cmp1108 = icmp eq i32 %508, %510, !dbg !12935
  br i1 %cmp1108, label %cond.false1111, label %cond.true1110, !dbg !12935

cond.true1110:                                    ; preds = %if.end1100
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 6545, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !12935
  br label %cond.end1112, !dbg !12935

cond.false1111:                                   ; preds = %if.end1100
  br label %cond.end1112, !dbg !12935

cond.end1112:                                     ; preds = %cond.false1111, %cond.true1110
  %cond1113 = phi i32 [ 0, %cond.true1110 ], [ 0, %cond.false1111 ], !dbg !12935
  store i32 0, i32* %j, align 4, !dbg !12936
  br label %for.cond1114, !dbg !12938

for.cond1114:                                     ; preds = %for.inc1134, %cond.end1112
  %511 = load i32, i32* %j, align 4, !dbg !12939
  %512 = load i32, i32* @n_spills, align 4, !dbg !12941
  %cmp1115 = icmp slt i32 %511, %512, !dbg !12942
  br i1 %cmp1115, label %for.body1117, label %for.end1136, !dbg !12943

for.body1117:                                     ; preds = %for.cond1114
  %513 = load i32, i32* %j, align 4, !dbg !12944
  %idxprom1118 = sext i32 %513 to i64, !dbg !12946
  %arrayidx1119 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i64 0, i64 %idxprom1118, !dbg !12946
  %514 = load i16, i16* %arrayidx1119, align 2, !dbg !12946
  %conv1120 = sext i16 %514 to i32, !dbg !12946
  %515 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !12947
  %rld1121 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %515, i32 0, i32 8, !dbg !12948
  %516 = load %struct.reload*, %struct.reload** %rld1121, align 8, !dbg !12948
  %517 = load i32, i32* %i, align 4, !dbg !12949
  %idxprom1122 = sext i32 %517 to i64, !dbg !12947
  %arrayidx1123 = getelementptr inbounds %struct.reload, %struct.reload* %516, i64 %idxprom1122, !dbg !12947
  %regno1124 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1123, i32 0, i32 10, !dbg !12950
  %518 = load i32, i32* %regno1124, align 8, !dbg !12950
  %cmp1125 = icmp eq i32 %conv1120, %518, !dbg !12951
  br i1 %cmp1125, label %if.then1127, label %if.end1133, !dbg !12952

if.then1127:                                      ; preds = %for.body1117
  %519 = load i32, i32* %j, align 4, !dbg !12953
  %520 = load i32, i32* %i, align 4, !dbg !12955
  %call1128 = call i32 @set_reload_reg(i32 %519, i32 %520), !dbg !12956
  %tobool1129 = icmp ne i32 %call1128, 0, !dbg !12956
  br i1 %tobool1129, label %if.end1132, label %if.then1130, !dbg !12957

if.then1130:                                      ; preds = %if.then1127
  %521 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !12958
  %insn1131 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %521, i32 0, i32 3, !dbg !12959
  %522 = load %struct.rtx_def*, %struct.rtx_def** %insn1131, align 8, !dbg !12959
  %523 = load i32, i32* %i, align 4, !dbg !12960
  call void @failed_reload(%struct.rtx_def* %522, i32 %523), !dbg !12961
  br label %if.end1132, !dbg !12961

if.end1132:                                       ; preds = %if.then1130, %if.then1127
  br label %if.end1133, !dbg !12962

if.end1133:                                       ; preds = %if.end1132, %for.body1117
  br label %for.inc1134, !dbg !12950

for.inc1134:                                      ; preds = %if.end1133
  %524 = load i32, i32* %j, align 4, !dbg !12963
  %inc1135 = add nsw i32 %524, 1, !dbg !12963
  store i32 %inc1135, i32* %j, align 4, !dbg !12963
  br label %for.cond1114, !dbg !12964, !llvm.loop !12965

for.end1136:                                      ; preds = %for.cond1114
  br label %for.inc1137, !dbg !12967

for.inc1137:                                      ; preds = %for.end1136, %if.then1099
  %525 = load i32, i32* %i, align 4, !dbg !12968
  %inc1138 = add nsw i32 %525, 1, !dbg !12968
  store i32 %inc1138, i32* %i, align 4, !dbg !12968
  br label %for.cond1083, !dbg !12969, !llvm.loop !12970

for.end1139:                                      ; preds = %for.cond1083
  br label %if.end1140, !dbg !12972

if.end1140:                                       ; preds = %for.end1139, %for.end1073
  %526 = load i32, i32* @flag_expensive_optimizations, align 4, !dbg !12973
  store i32 %526, i32* %pass, align 4, !dbg !12975
  br label %for.cond1141, !dbg !12976

for.cond1141:                                     ; preds = %for.inc1252, %if.end1140
  %527 = load i32, i32* %pass, align 4, !dbg !12977
  %cmp1142 = icmp sge i32 %527, 0, !dbg !12979
  br i1 %cmp1142, label %for.body1144, label %for.end1254, !dbg !12980

for.body1144:                                     ; preds = %for.cond1141
  store i32 0, i32* %j, align 4, !dbg !12981
  br label %for.cond1145, !dbg !12984

for.cond1145:                                     ; preds = %for.inc1249, %for.body1144
  %528 = load i32, i32* %j, align 4, !dbg !12985
  %529 = load i32, i32* @n_reloads, align 4, !dbg !12987
  %cmp1146 = icmp slt i32 %528, %529, !dbg !12988
  br i1 %cmp1146, label %for.body1148, label %for.end1251, !dbg !12989

for.body1148:                                     ; preds = %for.cond1145
  call void @llvm.dbg.declare(metadata i32* %r1149, metadata !12990, metadata !DIExpression()), !dbg !12992
  %530 = load i32, i32* %j, align 4, !dbg !12993
  %idxprom1150 = sext i32 %530 to i64, !dbg !12994
  %arrayidx1151 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i64 0, i64 %idxprom1150, !dbg !12994
  %531 = load i16, i16* %arrayidx1151, align 2, !dbg !12994
  %conv1152 = sext i16 %531 to i32, !dbg !12994
  store i32 %conv1152, i32* %r1149, align 4, !dbg !12992
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %check_reg, metadata !12995, metadata !DIExpression()), !dbg !12996
  %532 = load i32, i32* %r1149, align 4, !dbg !12997
  %idxprom1153 = sext i32 %532 to i64, !dbg !12999
  %arrayidx1154 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom1153, !dbg !12999
  %533 = load i8, i8* %arrayidx1154, align 1, !dbg !12999
  %conv1155 = sext i8 %533 to i32, !dbg !12999
  %tobool1156 = icmp ne i32 %conv1155, 0, !dbg !12999
  br i1 %tobool1156, label %land.lhs.true1157, label %if.else1166, !dbg !13000

land.lhs.true1157:                                ; preds = %for.body1148
  %534 = load i32, i32* %r1149, align 4, !dbg !13001
  %idxprom1158 = sext i32 %534 to i64, !dbg !13002
  %arrayidx1159 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1158, !dbg !13002
  %reg_rtx1160 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1159, i32 0, i32 11, !dbg !13003
  %535 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1160, align 8, !dbg !13003
  %tobool1161 = icmp ne %struct.rtx_def* %535, null, !dbg !13002
  br i1 %tobool1161, label %if.then1162, label %if.else1166, !dbg !13004

if.then1162:                                      ; preds = %land.lhs.true1157
  %536 = load i32, i32* %r1149, align 4, !dbg !13005
  %idxprom1163 = sext i32 %536 to i64, !dbg !13006
  %arrayidx1164 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1163, !dbg !13006
  %reg_rtx1165 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1164, i32 0, i32 11, !dbg !13007
  %537 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1165, align 8, !dbg !13007
  store %struct.rtx_def* %537, %struct.rtx_def** %check_reg, align 8, !dbg !13008
  br label %if.end1189, !dbg !13009

if.else1166:                                      ; preds = %land.lhs.true1157, %for.body1148
  %538 = load i32, i32* %r1149, align 4, !dbg !13010
  %idxprom1167 = sext i32 %538 to i64, !dbg !13012
  %arrayidx1168 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom1167, !dbg !13012
  %539 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1168, align 8, !dbg !13012
  %tobool1169 = icmp ne %struct.rtx_def* %539, null, !dbg !13012
  br i1 %tobool1169, label %land.lhs.true1170, label %if.else1187, !dbg !13013

land.lhs.true1170:                                ; preds = %if.else1166
  %540 = load i32, i32* %r1149, align 4, !dbg !13014
  %idxprom1171 = sext i32 %540 to i64, !dbg !13014
  %arrayidx1172 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom1171, !dbg !13014
  %541 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1172, align 8, !dbg !13014
  %542 = bitcast %struct.rtx_def* %541 to i32*, !dbg !13014
  %bf.load1173 = load i32, i32* %542, align 8, !dbg !13014
  %bf.clear1174 = and i32 %bf.load1173, 65535, !dbg !13014
  %cmp1175 = icmp eq i32 %bf.clear1174, 37, !dbg !13014
  br i1 %cmp1175, label %if.then1184, label %lor.lhs.false1177, !dbg !13015

lor.lhs.false1177:                                ; preds = %land.lhs.true1170
  %543 = load i32, i32* %r1149, align 4, !dbg !13016
  %idxprom1178 = sext i32 %543 to i64, !dbg !13016
  %arrayidx1179 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom1178, !dbg !13016
  %544 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1179, align 8, !dbg !13016
  %545 = bitcast %struct.rtx_def* %544 to i32*, !dbg !13016
  %bf.load1180 = load i32, i32* %545, align 8, !dbg !13016
  %bf.clear1181 = and i32 %bf.load1180, 65535, !dbg !13016
  %cmp1182 = icmp eq i32 %bf.clear1181, 39, !dbg !13017
  br i1 %cmp1182, label %if.then1184, label %if.else1187, !dbg !13018

if.then1184:                                      ; preds = %lor.lhs.false1177, %land.lhs.true1170
  %546 = load i32, i32* %r1149, align 4, !dbg !13019
  %idxprom1185 = sext i32 %546 to i64, !dbg !13020
  %arrayidx1186 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom1185, !dbg !13020
  %547 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1186, align 8, !dbg !13020
  store %struct.rtx_def* %547, %struct.rtx_def** %check_reg, align 8, !dbg !13021
  br label %if.end1188, !dbg !13022

if.else1187:                                      ; preds = %lor.lhs.false1177, %if.else1166
  br label %for.inc1249, !dbg !13023

if.end1188:                                       ; preds = %if.then1184
  br label %if.end1189

if.end1189:                                       ; preds = %if.end1188, %if.then1162
  %548 = load %struct.rtx_def*, %struct.rtx_def** %check_reg, align 8, !dbg !13024
  %call1190 = call i32 @true_regnum(%struct.rtx_def* %548), !dbg !13026
  %549 = load i32, i32* %r1149, align 4, !dbg !13027
  %idxprom1191 = sext i32 %549 to i64, !dbg !13028
  %arrayidx1192 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1191, !dbg !13028
  %mode1193 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1192, i32 0, i32 5, !dbg !13029
  %550 = load i32, i32* %mode1193, align 4, !dbg !13029
  %551 = load i32, i32* %r1149, align 4, !dbg !13030
  %idxprom1194 = sext i32 %551 to i64, !dbg !13031
  %arrayidx1195 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1194, !dbg !13031
  %opnum1196 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1195, i32 0, i32 12, !dbg !13032
  %552 = load i32, i32* %opnum1196, align 8, !dbg !13032
  %553 = load i32, i32* %r1149, align 4, !dbg !13033
  %idxprom1197 = sext i32 %553 to i64, !dbg !13034
  %arrayidx1198 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1197, !dbg !13034
  %when_needed1199 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1198, i32 0, i32 17, !dbg !13035
  %554 = load i32, i32* %when_needed1199, align 4, !dbg !13035
  %555 = load i32, i32* %r1149, align 4, !dbg !13036
  %idxprom1200 = sext i32 %555 to i64, !dbg !13037
  %arrayidx1201 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1200, !dbg !13037
  %in1202 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1201, i32 0, i32 0, !dbg !13038
  %556 = load %struct.rtx_def*, %struct.rtx_def** %in1202, align 8, !dbg !13038
  %557 = load i32, i32* %r1149, align 4, !dbg !13039
  %idxprom1203 = sext i32 %557 to i64, !dbg !13040
  %arrayidx1204 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom1203, !dbg !13040
  %558 = load i8, i8* %arrayidx1204, align 1, !dbg !13040
  %conv1205 = sext i8 %558 to i32, !dbg !13040
  %tobool1206 = icmp ne i32 %conv1205, 0, !dbg !13040
  br i1 %tobool1206, label %cond.true1207, label %cond.false1211, !dbg !13040

cond.true1207:                                    ; preds = %if.end1189
  %559 = load i32, i32* %r1149, align 4, !dbg !13041
  %idxprom1208 = sext i32 %559 to i64, !dbg !13042
  %arrayidx1209 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1208, !dbg !13042
  %out1210 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1209, i32 0, i32 1, !dbg !13043
  %560 = load %struct.rtx_def*, %struct.rtx_def** %out1210, align 8, !dbg !13043
  br label %cond.end1212, !dbg !13040

cond.false1211:                                   ; preds = %if.end1189
  %561 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !13044
  br label %cond.end1212, !dbg !13040

cond.end1212:                                     ; preds = %cond.false1211, %cond.true1207
  %cond1213 = phi %struct.rtx_def* [ %560, %cond.true1207 ], [ %561, %cond.false1211 ], !dbg !13040
  %562 = load i32, i32* %r1149, align 4, !dbg !13045
  %call1214 = call i32 @free_for_value_p(i32 %call1190, i32 %550, i32 %552, i32 %554, %struct.rtx_def* %556, %struct.rtx_def* %cond1213, i32 %562, i32 1), !dbg !13046
  %tobool1215 = icmp ne i32 %call1214, 0, !dbg !13046
  br i1 %tobool1215, label %if.else1224, label %if.then1216, !dbg !13047

if.then1216:                                      ; preds = %cond.end1212
  %563 = load i32, i32* %pass, align 4, !dbg !13048
  %tobool1217 = icmp ne i32 %563, 0, !dbg !13048
  br i1 %tobool1217, label %if.then1218, label %if.end1219, !dbg !13051

if.then1218:                                      ; preds = %if.then1216
  br label %for.inc1249, !dbg !13052

if.end1219:                                       ; preds = %if.then1216
  %564 = load i32, i32* %r1149, align 4, !dbg !13053
  %idxprom1220 = sext i32 %564 to i64, !dbg !13054
  %arrayidx1221 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom1220, !dbg !13054
  store i8 0, i8* %arrayidx1221, align 1, !dbg !13055
  %565 = load i32, i32* %r1149, align 4, !dbg !13056
  %idxprom1222 = sext i32 %565 to i64, !dbg !13057
  %arrayidx1223 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom1222, !dbg !13057
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx1223, align 8, !dbg !13058
  br label %if.end1248, !dbg !13059

if.else1224:                                      ; preds = %cond.end1212
  %566 = load i32, i32* %r1149, align 4, !dbg !13060
  %idxprom1225 = sext i32 %566 to i64, !dbg !13062
  %arrayidx1226 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1225, !dbg !13062
  %in1227 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1226, i32 0, i32 0, !dbg !13063
  %567 = load %struct.rtx_def*, %struct.rtx_def** %in1227, align 8, !dbg !13063
  %tobool1228 = icmp ne %struct.rtx_def* %567, null, !dbg !13062
  br i1 %tobool1228, label %land.lhs.true1229, label %if.end1247, !dbg !13064

land.lhs.true1229:                                ; preds = %if.else1224
  %568 = load i32, i32* %r1149, align 4, !dbg !13065
  %idxprom1230 = sext i32 %568 to i64, !dbg !13066
  %arrayidx1231 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1230, !dbg !13066
  %out1232 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1231, i32 0, i32 1, !dbg !13067
  %569 = load %struct.rtx_def*, %struct.rtx_def** %out1232, align 8, !dbg !13067
  %570 = load i32, i32* %r1149, align 4, !dbg !13068
  %idxprom1233 = sext i32 %570 to i64, !dbg !13069
  %arrayidx1234 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1233, !dbg !13069
  %in1235 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1234, i32 0, i32 0, !dbg !13070
  %571 = load %struct.rtx_def*, %struct.rtx_def** %in1235, align 8, !dbg !13070
  %cmp1236 = icmp ne %struct.rtx_def* %569, %571, !dbg !13071
  br i1 %cmp1236, label %land.lhs.true1238, label %if.end1247, !dbg !13072

land.lhs.true1238:                                ; preds = %land.lhs.true1229
  %572 = load i32, i32* %r1149, align 4, !dbg !13073
  %idxprom1239 = sext i32 %572 to i64, !dbg !13074
  %arrayidx1240 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1239, !dbg !13074
  %in1241 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1240, i32 0, i32 0, !dbg !13075
  %573 = load %struct.rtx_def*, %struct.rtx_def** %in1241, align 8, !dbg !13075
  %call1242 = call i32 @remove_address_replacements(%struct.rtx_def* %573), !dbg !13076
  %tobool1243 = icmp ne i32 %call1242, 0, !dbg !13076
  br i1 %tobool1243, label %land.lhs.true1244, label %if.end1247, !dbg !13077

land.lhs.true1244:                                ; preds = %land.lhs.true1238
  %574 = load i32, i32* %pass, align 4, !dbg !13078
  %tobool1245 = icmp ne i32 %574, 0, !dbg !13078
  br i1 %tobool1245, label %if.then1246, label %if.end1247, !dbg !13079

if.then1246:                                      ; preds = %land.lhs.true1244
  store i32 2, i32* %pass, align 4, !dbg !13080
  br label %if.end1247, !dbg !13081

if.end1247:                                       ; preds = %if.then1246, %land.lhs.true1244, %land.lhs.true1238, %land.lhs.true1229, %if.else1224
  br label %if.end1248

if.end1248:                                       ; preds = %if.end1247, %if.end1219
  br label %for.inc1249, !dbg !13082

for.inc1249:                                      ; preds = %if.end1248, %if.then1218, %if.else1187
  %575 = load i32, i32* %j, align 4, !dbg !13083
  %inc1250 = add nsw i32 %575, 1, !dbg !13083
  store i32 %inc1250, i32* %j, align 4, !dbg !13083
  br label %for.cond1145, !dbg !13084, !llvm.loop !13085

for.end1251:                                      ; preds = %for.cond1145
  br label %for.inc1252, !dbg !13087

for.inc1252:                                      ; preds = %for.end1251
  %576 = load i32, i32* %pass, align 4, !dbg !13088
  %dec1253 = add nsw i32 %576, -1, !dbg !13088
  store i32 %dec1253, i32* %pass, align 4, !dbg !13088
  br label %for.cond1141, !dbg !13089, !llvm.loop !13090

for.end1254:                                      ; preds = %for.cond1141
  store i32 0, i32* %j, align 4, !dbg !13092
  br label %for.cond1255, !dbg !13094

for.cond1255:                                     ; preds = %for.inc1269, %for.end1254
  %577 = load i32, i32* %j, align 4, !dbg !13095
  %578 = load i32, i32* @n_reloads, align 4, !dbg !13097
  %cmp1256 = icmp slt i32 %577, %578, !dbg !13098
  br i1 %cmp1256, label %for.body1258, label %for.end1271, !dbg !13099

for.body1258:                                     ; preds = %for.cond1255
  %579 = load i32, i32* %j, align 4, !dbg !13100
  %idxprom1259 = sext i32 %579 to i64, !dbg !13102
  %arrayidx1260 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom1259, !dbg !13102
  %580 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1260, align 8, !dbg !13102
  %tobool1261 = icmp ne %struct.rtx_def* %580, null, !dbg !13102
  br i1 %tobool1261, label %if.then1262, label %if.end1268, !dbg !13103

if.then1262:                                      ; preds = %for.body1258
  %581 = load i32, i32* %j, align 4, !dbg !13104
  %idxprom1263 = sext i32 %581 to i64, !dbg !13105
  %arrayidx1264 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom1263, !dbg !13105
  %582 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1264, align 8, !dbg !13105
  %583 = load i32, i32* %j, align 4, !dbg !13106
  %idxprom1265 = sext i32 %583 to i64, !dbg !13107
  %arrayidx1266 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1265, !dbg !13107
  %in1267 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1266, i32 0, i32 0, !dbg !13108
  store %struct.rtx_def* %582, %struct.rtx_def** %in1267, align 8, !dbg !13109
  br label %if.end1268, !dbg !13107

if.end1268:                                       ; preds = %if.then1262, %for.body1258
  br label %for.inc1269, !dbg !13110

for.inc1269:                                      ; preds = %if.end1268
  %584 = load i32, i32* %j, align 4, !dbg !13111
  %inc1270 = add nsw i32 %584, 1, !dbg !13111
  store i32 %inc1270, i32* %j, align 4, !dbg !13111
  br label %for.cond1255, !dbg !13112, !llvm.loop !13113

for.end1271:                                      ; preds = %for.cond1255
  store i32 0, i32* %j, align 4, !dbg !13115
  br label %for.cond1272, !dbg !13117

for.cond1272:                                     ; preds = %for.inc1342, %for.end1271
  %585 = load i32, i32* %j, align 4, !dbg !13118
  %586 = load i32, i32* @n_reloads, align 4, !dbg !13120
  %cmp1273 = icmp slt i32 %585, %586, !dbg !13121
  br i1 %cmp1273, label %for.body1275, label %for.end1344, !dbg !13122

for.body1275:                                     ; preds = %for.cond1272
  %587 = load i32, i32* %j, align 4, !dbg !13123
  %idxprom1276 = sext i32 %587 to i64, !dbg !13125
  %arrayidx1277 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1276, !dbg !13125
  %reg_rtx1278 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1277, i32 0, i32 11, !dbg !13126
  %588 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1278, align 8, !dbg !13126
  %cmp1279 = icmp ne %struct.rtx_def* %588, null, !dbg !13127
  br i1 %cmp1279, label %land.lhs.true1281, label %if.end1341, !dbg !13128

land.lhs.true1281:                                ; preds = %for.body1275
  %589 = load i32, i32* %j, align 4, !dbg !13129
  %idxprom1282 = sext i32 %589 to i64, !dbg !13130
  %arrayidx1283 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1282, !dbg !13130
  %optional1284 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1283, i32 0, i32 18, !dbg !13131
  %bf.load1285 = load i8, i8* %optional1284, align 8, !dbg !13131
  %bf.clear1286 = and i8 %bf.load1285, 1, !dbg !13131
  %bf.cast1287 = zext i8 %bf.clear1286 to i32, !dbg !13131
  %tobool1288 = icmp ne i32 %bf.cast1287, 0, !dbg !13130
  br i1 %tobool1288, label %land.lhs.true1289, label %lor.lhs.false1293, !dbg !13132

land.lhs.true1289:                                ; preds = %land.lhs.true1281
  %590 = load i32, i32* %j, align 4, !dbg !13133
  %idxprom1290 = sext i32 %590 to i64, !dbg !13134
  %arrayidx1291 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom1290, !dbg !13134
  %591 = load i8, i8* %arrayidx1291, align 1, !dbg !13134
  %tobool1292 = icmp ne i8 %591, 0, !dbg !13134
  br i1 %tobool1292, label %lor.lhs.false1293, label %if.then1314, !dbg !13135

lor.lhs.false1293:                                ; preds = %land.lhs.true1289, %land.lhs.true1281
  %592 = load i32, i32* %j, align 4, !dbg !13136
  %idxprom1294 = sext i32 %592 to i64, !dbg !13137
  %arrayidx1295 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1294, !dbg !13137
  %in1296 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1295, i32 0, i32 0, !dbg !13138
  %593 = load %struct.rtx_def*, %struct.rtx_def** %in1296, align 8, !dbg !13138
  %cmp1297 = icmp eq %struct.rtx_def* %593, null, !dbg !13139
  br i1 %cmp1297, label %land.lhs.true1299, label %if.end1341, !dbg !13140

land.lhs.true1299:                                ; preds = %lor.lhs.false1293
  %594 = load i32, i32* %j, align 4, !dbg !13141
  %idxprom1300 = sext i32 %594 to i64, !dbg !13142
  %arrayidx1301 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1300, !dbg !13142
  %out1302 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1301, i32 0, i32 1, !dbg !13143
  %595 = load %struct.rtx_def*, %struct.rtx_def** %out1302, align 8, !dbg !13143
  %cmp1303 = icmp eq %struct.rtx_def* %595, null, !dbg !13144
  br i1 %cmp1303, label %land.lhs.true1305, label %if.end1341, !dbg !13145

land.lhs.true1305:                                ; preds = %land.lhs.true1299
  %596 = load i32, i32* %j, align 4, !dbg !13146
  %idxprom1306 = sext i32 %596 to i64, !dbg !13147
  %arrayidx1307 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1306, !dbg !13147
  %secondary_p1308 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1307, i32 0, i32 18, !dbg !13148
  %bf.load1309 = load i8, i8* %secondary_p1308, align 8, !dbg !13148
  %bf.lshr1310 = lshr i8 %bf.load1309, 2, !dbg !13148
  %bf.clear1311 = and i8 %bf.lshr1310, 1, !dbg !13148
  %bf.cast1312 = zext i8 %bf.clear1311 to i32, !dbg !13148
  %tobool1313 = icmp ne i32 %bf.cast1312, 0, !dbg !13147
  br i1 %tobool1313, label %if.end1341, label %if.then1314, !dbg !13149

if.then1314:                                      ; preds = %land.lhs.true1305, %land.lhs.true1289
  call void @llvm.dbg.declare(metadata i32* %regno1315, metadata !13150, metadata !DIExpression()), !dbg !13152
  %597 = load i32, i32* %j, align 4, !dbg !13153
  %idxprom1316 = sext i32 %597 to i64, !dbg !13154
  %arrayidx1317 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1316, !dbg !13154
  %reg_rtx1318 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1317, i32 0, i32 11, !dbg !13155
  %598 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1318, align 8, !dbg !13155
  %call1319 = call i32 @true_regnum(%struct.rtx_def* %598), !dbg !13156
  store i32 %call1319, i32* %regno1315, align 4, !dbg !13152
  %599 = load i32, i32* %regno1315, align 4, !dbg !13157
  %idxprom1320 = sext i32 %599 to i64, !dbg !13159
  %arrayidx1321 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i64 0, i64 %idxprom1320, !dbg !13159
  %600 = load i16, i16* %arrayidx1321, align 2, !dbg !13159
  %conv1322 = sext i16 %600 to i32, !dbg !13159
  %cmp1323 = icmp sge i32 %conv1322, 0, !dbg !13160
  br i1 %cmp1323, label %if.then1325, label %if.end1335, !dbg !13161

if.then1325:                                      ; preds = %if.then1314
  %601 = load i32, i32* %regno1315, align 4, !dbg !13162
  %602 = load i32, i32* %j, align 4, !dbg !13163
  %idxprom1326 = sext i32 %602 to i64, !dbg !13164
  %arrayidx1327 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1326, !dbg !13164
  %opnum1328 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1327, i32 0, i32 12, !dbg !13165
  %603 = load i32, i32* %opnum1328, align 8, !dbg !13165
  %604 = load i32, i32* %j, align 4, !dbg !13166
  %idxprom1329 = sext i32 %604 to i64, !dbg !13167
  %arrayidx1330 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1329, !dbg !13167
  %when_needed1331 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1330, i32 0, i32 17, !dbg !13168
  %605 = load i32, i32* %when_needed1331, align 4, !dbg !13168
  %606 = load i32, i32* %j, align 4, !dbg !13169
  %idxprom1332 = sext i32 %606 to i64, !dbg !13170
  %arrayidx1333 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1332, !dbg !13170
  %mode1334 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1333, i32 0, i32 5, !dbg !13171
  %607 = load i32, i32* %mode1334, align 4, !dbg !13171
  call void @clear_reload_reg_in_use(i32 %601, i32 %603, i32 %605, i32 %607), !dbg !13172
  br label %if.end1335, !dbg !13172

if.end1335:                                       ; preds = %if.then1325, %if.then1314
  %608 = load i32, i32* %j, align 4, !dbg !13173
  %idxprom1336 = sext i32 %608 to i64, !dbg !13174
  %arrayidx1337 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1336, !dbg !13174
  %reg_rtx1338 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1337, i32 0, i32 11, !dbg !13175
  store %struct.rtx_def* null, %struct.rtx_def** %reg_rtx1338, align 8, !dbg !13176
  %609 = load i32, i32* %j, align 4, !dbg !13177
  %idxprom1339 = sext i32 %609 to i64, !dbg !13178
  %arrayidx1340 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom1339, !dbg !13178
  store i32 -1, i32* %arrayidx1340, align 4, !dbg !13179
  br label %if.end1341, !dbg !13180

if.end1341:                                       ; preds = %if.end1335, %land.lhs.true1305, %land.lhs.true1299, %lor.lhs.false1293, %for.body1275
  br label %for.inc1342, !dbg !13181

for.inc1342:                                      ; preds = %if.end1341
  %610 = load i32, i32* %j, align 4, !dbg !13182
  %inc1343 = add nsw i32 %610, 1, !dbg !13182
  store i32 %inc1343, i32* %j, align 4, !dbg !13182
  br label %for.cond1272, !dbg !13183, !llvm.loop !13184

for.end1344:                                      ; preds = %for.cond1272
  store i32 0, i32* %j, align 4, !dbg !13186
  br label %for.cond1345, !dbg !13188

for.cond1345:                                     ; preds = %for.inc1440, %for.end1344
  %611 = load i32, i32* %j, align 4, !dbg !13189
  %612 = load i32, i32* @n_reloads, align 4, !dbg !13191
  %cmp1346 = icmp slt i32 %611, %612, !dbg !13192
  br i1 %cmp1346, label %for.body1348, label %for.end1442, !dbg !13193

for.body1348:                                     ; preds = %for.cond1345
  call void @llvm.dbg.declare(metadata i32* %r1349, metadata !13194, metadata !DIExpression()), !dbg !13196
  %613 = load i32, i32* %j, align 4, !dbg !13197
  %idxprom1350 = sext i32 %613 to i64, !dbg !13198
  %arrayidx1351 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i64 0, i64 %idxprom1350, !dbg !13198
  %614 = load i16, i16* %arrayidx1351, align 2, !dbg !13198
  %conv1352 = sext i16 %614 to i32, !dbg !13198
  store i32 %conv1352, i32* %r1349, align 4, !dbg !13196
  %615 = load i32, i32* %r1349, align 4, !dbg !13199
  %idxprom1353 = sext i32 %615 to i64, !dbg !13200
  %arrayidx1354 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom1353, !dbg !13200
  %616 = load i32, i32* %arrayidx1354, align 4, !dbg !13200
  store i32 %616, i32* %i, align 4, !dbg !13201
  %617 = load i32, i32* %r1349, align 4, !dbg !13202
  %idxprom1355 = sext i32 %617 to i64, !dbg !13204
  %arrayidx1356 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1355, !dbg !13204
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1356, i32 0, i32 9, !dbg !13205
  %618 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8, !dbg !13205
  %cmp1357 = icmp ne %struct.rtx_def* %618, null, !dbg !13206
  br i1 %cmp1357, label %land.lhs.true1359, label %if.end1439, !dbg !13207

land.lhs.true1359:                                ; preds = %for.body1348
  %619 = load i32, i32* %r1349, align 4, !dbg !13208
  %idxprom1360 = sext i32 %619 to i64, !dbg !13208
  %arrayidx1361 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1360, !dbg !13208
  %out_reg1362 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1361, i32 0, i32 9, !dbg !13208
  %620 = load %struct.rtx_def*, %struct.rtx_def** %out_reg1362, align 8, !dbg !13208
  %621 = bitcast %struct.rtx_def* %620 to i32*, !dbg !13208
  %bf.load1363 = load i32, i32* %621, align 8, !dbg !13208
  %bf.clear1364 = and i32 %bf.load1363, 65535, !dbg !13208
  %cmp1365 = icmp eq i32 %bf.clear1364, 37, !dbg !13208
  br i1 %cmp1365, label %land.lhs.true1367, label %if.end1439, !dbg !13209

land.lhs.true1367:                                ; preds = %land.lhs.true1359
  %622 = load i32, i32* %r1349, align 4, !dbg !13210
  %idxprom1368 = sext i32 %622 to i64, !dbg !13211
  %arrayidx1369 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1368, !dbg !13211
  %reg_rtx1370 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1369, i32 0, i32 11, !dbg !13212
  %623 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx1370, align 8, !dbg !13212
  %cmp1371 = icmp ne %struct.rtx_def* %623, null, !dbg !13213
  br i1 %cmp1371, label %if.then1373, label %if.end1439, !dbg !13214

if.then1373:                                      ; preds = %land.lhs.true1367
  call void @llvm.dbg.declare(metadata i32* %nregno, metadata !13215, metadata !DIExpression()), !dbg !13217
  %624 = load i32, i32* %r1349, align 4, !dbg !13218
  %idxprom1374 = sext i32 %624 to i64, !dbg !13218
  %arrayidx1375 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1374, !dbg !13218
  %out_reg1376 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1375, i32 0, i32 9, !dbg !13218
  %625 = load %struct.rtx_def*, %struct.rtx_def** %out_reg1376, align 8, !dbg !13218
  %call1377 = call i32 @rhs_regno(%struct.rtx_def* %625), !dbg !13218
  store i32 %call1377, i32* %nregno, align 4, !dbg !13217
  call void @llvm.dbg.declare(metadata i32* %nr1378, metadata !13219, metadata !DIExpression()), !dbg !13220
  store i32 1, i32* %nr1378, align 4, !dbg !13220
  %626 = load i32, i32* %nregno, align 4, !dbg !13221
  %cmp1379 = icmp slt i32 %626, 53, !dbg !13223
  br i1 %cmp1379, label %if.then1381, label %if.end1390, !dbg !13224

if.then1381:                                      ; preds = %if.then1373
  %627 = load i32, i32* %nregno, align 4, !dbg !13225
  %idxprom1382 = sext i32 %627 to i64, !dbg !13226
  %arrayidx1383 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom1382, !dbg !13226
  %628 = load i32, i32* %r1349, align 4, !dbg !13227
  %idxprom1384 = sext i32 %628 to i64, !dbg !13228
  %arrayidx1385 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1384, !dbg !13228
  %mode1386 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1385, i32 0, i32 5, !dbg !13229
  %629 = load i32, i32* %mode1386, align 4, !dbg !13229
  %idxprom1387 = zext i32 %629 to i64, !dbg !13226
  %arrayidx1388 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx1383, i64 0, i64 %idxprom1387, !dbg !13226
  %630 = load i8, i8* %arrayidx1388, align 1, !dbg !13226
  %conv1389 = zext i8 %630 to i32, !dbg !13226
  store i32 %conv1389, i32* %nr1378, align 4, !dbg !13230
  br label %if.end1390, !dbg !13231

if.end1390:                                       ; preds = %if.then1381, %if.then1373
  br label %while.cond, !dbg !13232

while.cond:                                       ; preds = %while.body, %if.end1390
  %631 = load i32, i32* %nr1378, align 4, !dbg !13233
  %dec1391 = add nsw i32 %631, -1, !dbg !13233
  store i32 %dec1391, i32* %nr1378, align 4, !dbg !13233
  %cmp1392 = icmp sge i32 %dec1391, 0, !dbg !13234
  br i1 %cmp1392, label %while.body, label %while.end, !dbg !13232

while.body:                                       ; preds = %while.cond
  %632 = load i32, i32* %nregno, align 4, !dbg !13235
  %633 = load i32, i32* %nr1378, align 4, !dbg !13235
  %add1394 = add nsw i32 %632, %633, !dbg !13235
  %call1395 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* @reg_has_output_reload, i32 %add1394), !dbg !13235
  br label %while.cond, !dbg !13232, !llvm.loop !13236

while.end:                                        ; preds = %while.cond
  %634 = load i32, i32* %i, align 4, !dbg !13237
  %cmp1396 = icmp sge i32 %634, 0, !dbg !13239
  br i1 %cmp1396, label %if.then1398, label %if.end1417, !dbg !13240

if.then1398:                                      ; preds = %while.end
  %635 = load i32, i32* %i, align 4, !dbg !13241
  %idxprom1399 = sext i32 %635 to i64, !dbg !13243
  %arrayidx1400 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom1399, !dbg !13243
  %636 = load i32, i32* %r1349, align 4, !dbg !13244
  %idxprom1401 = sext i32 %636 to i64, !dbg !13245
  %arrayidx1402 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1401, !dbg !13245
  %mode1403 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1402, i32 0, i32 5, !dbg !13246
  %637 = load i32, i32* %mode1403, align 4, !dbg !13246
  %idxprom1404 = zext i32 %637 to i64, !dbg !13243
  %arrayidx1405 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx1400, i64 0, i64 %idxprom1404, !dbg !13243
  %638 = load i8, i8* %arrayidx1405, align 1, !dbg !13243
  %conv1406 = zext i8 %638 to i32, !dbg !13243
  store i32 %conv1406, i32* %nr1378, align 4, !dbg !13247
  br label %while.cond1407, !dbg !13248

while.cond1407:                                   ; preds = %while.body1411, %if.then1398
  %639 = load i32, i32* %nr1378, align 4, !dbg !13249
  %dec1408 = add nsw i32 %639, -1, !dbg !13249
  store i32 %dec1408, i32* %nr1378, align 4, !dbg !13249
  %cmp1409 = icmp sge i32 %dec1408, 0, !dbg !13250
  br i1 %cmp1409, label %while.body1411, label %while.end1416, !dbg !13248

while.body1411:                                   ; preds = %while.cond1407
  %640 = load i32, i32* %i, align 4, !dbg !13251
  %641 = load i32, i32* %nr1378, align 4, !dbg !13251
  %add1412 = add nsw i32 %640, %641, !dbg !13251
  %sh_prom1413 = zext i32 %add1412 to i64, !dbg !13251
  %shl1414 = shl i64 1, %sh_prom1413, !dbg !13251
  %642 = load i64, i64* @reg_is_output_reload, align 8, !dbg !13251
  %or1415 = or i64 %642, %shl1414, !dbg !13251
  store i64 %or1415, i64* @reg_is_output_reload, align 8, !dbg !13251
  br label %while.cond1407, !dbg !13248, !llvm.loop !13252

while.end1416:                                    ; preds = %while.cond1407
  br label %if.end1417, !dbg !13253

if.end1417:                                       ; preds = %while.end1416, %while.end
  %643 = load i32, i32* %r1349, align 4, !dbg !13254
  %idxprom1418 = sext i32 %643 to i64, !dbg !13254
  %arrayidx1419 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1418, !dbg !13254
  %when_needed1420 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1419, i32 0, i32 17, !dbg !13254
  %644 = load i32, i32* %when_needed1420, align 4, !dbg !13254
  %cmp1421 = icmp eq i32 %644, 9, !dbg !13254
  br i1 %cmp1421, label %cond.false1436, label %lor.lhs.false1423, !dbg !13254

lor.lhs.false1423:                                ; preds = %if.end1417
  %645 = load i32, i32* %r1349, align 4, !dbg !13254
  %idxprom1424 = sext i32 %645 to i64, !dbg !13254
  %arrayidx1425 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1424, !dbg !13254
  %when_needed1426 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1425, i32 0, i32 17, !dbg !13254
  %646 = load i32, i32* %when_needed1426, align 4, !dbg !13254
  %cmp1427 = icmp eq i32 %646, 1, !dbg !13254
  br i1 %cmp1427, label %cond.false1436, label %lor.lhs.false1429, !dbg !13254

lor.lhs.false1429:                                ; preds = %lor.lhs.false1423
  %647 = load i32, i32* %r1349, align 4, !dbg !13254
  %idxprom1430 = sext i32 %647 to i64, !dbg !13254
  %arrayidx1431 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1430, !dbg !13254
  %when_needed1432 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1431, i32 0, i32 17, !dbg !13254
  %648 = load i32, i32* %when_needed1432, align 4, !dbg !13254
  %cmp1433 = icmp eq i32 %648, 2, !dbg !13254
  br i1 %cmp1433, label %cond.false1436, label %cond.true1435, !dbg !13254

cond.true1435:                                    ; preds = %lor.lhs.false1429
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 6661, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13254
  br label %cond.end1437, !dbg !13254

cond.false1436:                                   ; preds = %lor.lhs.false1429, %lor.lhs.false1423, %if.end1417
  br label %cond.end1437, !dbg !13254

cond.end1437:                                     ; preds = %cond.false1436, %cond.true1435
  %cond1438 = phi i32 [ 0, %cond.true1435 ], [ 0, %cond.false1436 ], !dbg !13254
  br label %if.end1439, !dbg !13255

if.end1439:                                       ; preds = %cond.end1437, %land.lhs.true1367, %land.lhs.true1359, %for.body1348
  br label %for.inc1440, !dbg !13256

for.inc1440:                                      ; preds = %if.end1439
  %649 = load i32, i32* %j, align 4, !dbg !13257
  %inc1441 = add nsw i32 %649, 1, !dbg !13257
  store i32 %inc1441, i32* %j, align 4, !dbg !13257
  br label %for.cond1345, !dbg !13258, !llvm.loop !13259

for.end1442:                                      ; preds = %for.cond1345
  ret void, !dbg !13261
}

; Function Attrs: noinline nounwind uwtable
define internal void @merge_assigned_reloads(%struct.rtx_def* %insn) #0 !dbg !13262 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %conflicting_input = alloca i32, align 4
  %max_input_address_opnum = alloca i32, align 4
  %min_conflicting_input_opnum = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !13263, metadata !DIExpression()), !dbg !13264
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13265, metadata !DIExpression()), !dbg !13266
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13267, metadata !DIExpression()), !dbg !13268
  store i32 0, i32* %i, align 4, !dbg !13269
  br label %for.cond, !dbg !13271

for.cond:                                         ; preds = %for.inc285, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13272
  %1 = load i32, i32* @n_reloads, align 4, !dbg !13274
  %cmp = icmp slt i32 %0, %1, !dbg !13275
  br i1 %cmp, label %for.body, label %for.end287, !dbg !13276

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %conflicting_input, metadata !13277, metadata !DIExpression()), !dbg !13279
  store i32 0, i32* %conflicting_input, align 4, !dbg !13279
  call void @llvm.dbg.declare(metadata i32* %max_input_address_opnum, metadata !13280, metadata !DIExpression()), !dbg !13281
  store i32 -1, i32* %max_input_address_opnum, align 4, !dbg !13281
  call void @llvm.dbg.declare(metadata i32* %min_conflicting_input_opnum, metadata !13282, metadata !DIExpression()), !dbg !13283
  store i32 30, i32* %min_conflicting_input_opnum, align 4, !dbg !13283
  %2 = load i32, i32* %i, align 4, !dbg !13284
  %idxprom = sext i32 %2 to i64, !dbg !13286
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom, !dbg !13286
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 0, !dbg !13287
  %3 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !13287
  %cmp1 = icmp eq %struct.rtx_def* %3, null, !dbg !13288
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !13289

lor.lhs.false:                                    ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !13290
  %idxprom2 = sext i32 %4 to i64, !dbg !13291
  %arrayidx3 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom2, !dbg !13291
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3, i32 0, i32 17, !dbg !13292
  %5 = load i32, i32* %when_needed, align 4, !dbg !13292
  %cmp4 = icmp eq i32 %5, 9, !dbg !13293
  br i1 %cmp4, label %if.then, label %lor.lhs.false5, !dbg !13294

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %6 = load i32, i32* %i, align 4, !dbg !13295
  %idxprom6 = sext i32 %6 to i64, !dbg !13296
  %arrayidx7 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom6, !dbg !13296
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx7, i32 0, i32 1, !dbg !13297
  %7 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !13297
  %cmp8 = icmp ne %struct.rtx_def* %7, null, !dbg !13298
  br i1 %cmp8, label %if.then, label %lor.lhs.false9, !dbg !13299

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %8 = load i32, i32* %i, align 4, !dbg !13300
  %idxprom10 = sext i32 %8 to i64, !dbg !13301
  %arrayidx11 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom10, !dbg !13301
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx11, i32 0, i32 11, !dbg !13302
  %9 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !13302
  %cmp12 = icmp eq %struct.rtx_def* %9, null, !dbg !13303
  br i1 %cmp12, label %if.then, label %lor.lhs.false13, !dbg !13304

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %10 = load i32, i32* %i, align 4, !dbg !13305
  %idxprom14 = sext i32 %10 to i64, !dbg !13306
  %arrayidx15 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom14, !dbg !13306
  %reg_rtx16 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx15, i32 0, i32 11, !dbg !13307
  %11 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx16, align 8, !dbg !13307
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13308
  %call = call i32 @reg_set_p(%struct.rtx_def* %11, %struct.rtx_def* %12), !dbg !13309
  %tobool = icmp ne i32 %call, 0, !dbg !13309
  br i1 %tobool, label %if.then, label %if.end, !dbg !13310

if.then:                                          ; preds = %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %for.body
  br label %for.inc285, !dbg !13311

if.end:                                           ; preds = %lor.lhs.false13
  store i32 0, i32* %j, align 4, !dbg !13312
  br label %for.cond17, !dbg !13314

for.cond17:                                       ; preds = %for.inc, %if.end
  %13 = load i32, i32* %j, align 4, !dbg !13315
  %14 = load i32, i32* @n_reloads, align 4, !dbg !13317
  %cmp18 = icmp slt i32 %13, %14, !dbg !13318
  br i1 %cmp18, label %for.body19, label %for.end, !dbg !13319

for.body19:                                       ; preds = %for.cond17
  %15 = load i32, i32* %i, align 4, !dbg !13320
  %16 = load i32, i32* %j, align 4, !dbg !13323
  %cmp20 = icmp eq i32 %15, %16, !dbg !13324
  br i1 %cmp20, label %if.then35, label %lor.lhs.false21, !dbg !13325

lor.lhs.false21:                                  ; preds = %for.body19
  %17 = load i32, i32* %j, align 4, !dbg !13326
  %idxprom22 = sext i32 %17 to i64, !dbg !13327
  %arrayidx23 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom22, !dbg !13327
  %reg_rtx24 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx23, i32 0, i32 11, !dbg !13328
  %18 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx24, align 8, !dbg !13328
  %cmp25 = icmp eq %struct.rtx_def* %18, null, !dbg !13329
  br i1 %cmp25, label %if.then35, label %lor.lhs.false26, !dbg !13330

lor.lhs.false26:                                  ; preds = %lor.lhs.false21
  %19 = load i32, i32* %j, align 4, !dbg !13331
  %idxprom27 = sext i32 %19 to i64, !dbg !13332
  %arrayidx28 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom27, !dbg !13332
  %reg_rtx29 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx28, i32 0, i32 11, !dbg !13333
  %20 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx29, align 8, !dbg !13333
  %21 = load i32, i32* %i, align 4, !dbg !13334
  %idxprom30 = sext i32 %21 to i64, !dbg !13335
  %arrayidx31 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom30, !dbg !13335
  %reg_rtx32 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx31, i32 0, i32 11, !dbg !13336
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx32, align 8, !dbg !13336
  %call33 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %20, %struct.rtx_def* %22), !dbg !13337
  %tobool34 = icmp ne i32 %call33, 0, !dbg !13337
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !13338

if.then35:                                        ; preds = %lor.lhs.false26, %lor.lhs.false21, %for.body19
  br label %for.inc, !dbg !13339

if.end36:                                         ; preds = %lor.lhs.false26
  %23 = load i32, i32* %j, align 4, !dbg !13340
  %idxprom37 = sext i32 %23 to i64, !dbg !13342
  %arrayidx38 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom37, !dbg !13342
  %when_needed39 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx38, i32 0, i32 17, !dbg !13343
  %24 = load i32, i32* %when_needed39, align 4, !dbg !13343
  %cmp40 = icmp eq i32 %24, 3, !dbg !13344
  br i1 %cmp40, label %land.lhs.true, label %if.end48, !dbg !13345

land.lhs.true:                                    ; preds = %if.end36
  %25 = load i32, i32* %j, align 4, !dbg !13346
  %idxprom41 = sext i32 %25 to i64, !dbg !13347
  %arrayidx42 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom41, !dbg !13347
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx42, i32 0, i32 12, !dbg !13348
  %26 = load i32, i32* %opnum, align 8, !dbg !13348
  %27 = load i32, i32* %max_input_address_opnum, align 4, !dbg !13349
  %cmp43 = icmp sgt i32 %26, %27, !dbg !13350
  br i1 %cmp43, label %if.then44, label %if.end48, !dbg !13351

if.then44:                                        ; preds = %land.lhs.true
  %28 = load i32, i32* %j, align 4, !dbg !13352
  %idxprom45 = sext i32 %28 to i64, !dbg !13353
  %arrayidx46 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom45, !dbg !13353
  %opnum47 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx46, i32 0, i32 12, !dbg !13354
  %29 = load i32, i32* %opnum47, align 8, !dbg !13354
  store i32 %29, i32* %max_input_address_opnum, align 4, !dbg !13355
  br label %if.end48, !dbg !13356

if.end48:                                         ; preds = %if.then44, %land.lhs.true, %if.end36
  %30 = load i32, i32* %i, align 4, !dbg !13357
  %idxprom49 = sext i32 %30 to i64, !dbg !13359
  %arrayidx50 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom49, !dbg !13359
  %reg_rtx51 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx50, i32 0, i32 11, !dbg !13360
  %31 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx51, align 8, !dbg !13360
  %32 = load i32, i32* %j, align 4, !dbg !13361
  %idxprom52 = sext i32 %32 to i64, !dbg !13362
  %arrayidx53 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom52, !dbg !13362
  %reg_rtx54 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx53, i32 0, i32 11, !dbg !13363
  %33 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx54, align 8, !dbg !13363
  %call55 = call i32 @rtx_equal_p(%struct.rtx_def* %31, %struct.rtx_def* %33), !dbg !13364
  %tobool56 = icmp ne i32 %call55, 0, !dbg !13364
  br i1 %tobool56, label %lor.lhs.false57, label %if.then76, !dbg !13365

lor.lhs.false57:                                  ; preds = %if.end48
  %34 = load i32, i32* %j, align 4, !dbg !13366
  %idxprom58 = sext i32 %34 to i64, !dbg !13367
  %arrayidx59 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom58, !dbg !13367
  %out60 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx59, i32 0, i32 1, !dbg !13368
  %35 = load %struct.rtx_def*, %struct.rtx_def** %out60, align 8, !dbg !13368
  %cmp61 = icmp ne %struct.rtx_def* %35, null, !dbg !13369
  br i1 %cmp61, label %if.then76, label %lor.lhs.false62, !dbg !13370

lor.lhs.false62:                                  ; preds = %lor.lhs.false57
  %36 = load i32, i32* %j, align 4, !dbg !13371
  %idxprom63 = sext i32 %36 to i64, !dbg !13372
  %arrayidx64 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom63, !dbg !13372
  %in65 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx64, i32 0, i32 0, !dbg !13373
  %37 = load %struct.rtx_def*, %struct.rtx_def** %in65, align 8, !dbg !13373
  %cmp66 = icmp eq %struct.rtx_def* %37, null, !dbg !13374
  br i1 %cmp66, label %if.then76, label %lor.lhs.false67, !dbg !13375

lor.lhs.false67:                                  ; preds = %lor.lhs.false62
  %38 = load i32, i32* %i, align 4, !dbg !13376
  %idxprom68 = sext i32 %38 to i64, !dbg !13377
  %arrayidx69 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom68, !dbg !13377
  %in70 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx69, i32 0, i32 0, !dbg !13378
  %39 = load %struct.rtx_def*, %struct.rtx_def** %in70, align 8, !dbg !13378
  %40 = load i32, i32* %j, align 4, !dbg !13379
  %idxprom71 = sext i32 %40 to i64, !dbg !13380
  %arrayidx72 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom71, !dbg !13380
  %in73 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx72, i32 0, i32 0, !dbg !13381
  %41 = load %struct.rtx_def*, %struct.rtx_def** %in73, align 8, !dbg !13381
  %call74 = call i32 @rtx_equal_p(%struct.rtx_def* %39, %struct.rtx_def* %41), !dbg !13382
  %tobool75 = icmp ne i32 %call74, 0, !dbg !13382
  br i1 %tobool75, label %if.end110, label %if.then76, !dbg !13383

if.then76:                                        ; preds = %lor.lhs.false67, %lor.lhs.false62, %lor.lhs.false57, %if.end48
  %42 = load i32, i32* %j, align 4, !dbg !13384
  %idxprom77 = sext i32 %42 to i64, !dbg !13387
  %arrayidx78 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom77, !dbg !13387
  %when_needed79 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx78, i32 0, i32 17, !dbg !13388
  %43 = load i32, i32* %when_needed79, align 4, !dbg !13388
  %cmp80 = icmp ne i32 %43, 0, !dbg !13389
  br i1 %cmp80, label %if.then99, label %lor.lhs.false81, !dbg !13390

lor.lhs.false81:                                  ; preds = %if.then76
  %44 = load i32, i32* %i, align 4, !dbg !13391
  %idxprom82 = sext i32 %44 to i64, !dbg !13392
  %arrayidx83 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom82, !dbg !13392
  %when_needed84 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx83, i32 0, i32 17, !dbg !13393
  %45 = load i32, i32* %when_needed84, align 4, !dbg !13393
  %cmp85 = icmp ne i32 %45, 3, !dbg !13394
  br i1 %cmp85, label %land.lhs.true94, label %lor.lhs.false86, !dbg !13395

lor.lhs.false86:                                  ; preds = %lor.lhs.false81
  %46 = load i32, i32* %i, align 4, !dbg !13396
  %idxprom87 = sext i32 %46 to i64, !dbg !13397
  %arrayidx88 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom87, !dbg !13397
  %opnum89 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx88, i32 0, i32 12, !dbg !13398
  %47 = load i32, i32* %opnum89, align 8, !dbg !13398
  %48 = load i32, i32* %j, align 4, !dbg !13399
  %idxprom90 = sext i32 %48 to i64, !dbg !13400
  %arrayidx91 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom90, !dbg !13400
  %opnum92 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx91, i32 0, i32 12, !dbg !13401
  %49 = load i32, i32* %opnum92, align 8, !dbg !13401
  %cmp93 = icmp sgt i32 %47, %49, !dbg !13402
  br i1 %cmp93, label %land.lhs.true94, label %if.end100, !dbg !13403

land.lhs.true94:                                  ; preds = %lor.lhs.false86, %lor.lhs.false81
  %50 = load i32, i32* %i, align 4, !dbg !13404
  %idxprom95 = sext i32 %50 to i64, !dbg !13405
  %arrayidx96 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom95, !dbg !13405
  %when_needed97 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx96, i32 0, i32 17, !dbg !13406
  %51 = load i32, i32* %when_needed97, align 4, !dbg !13406
  %cmp98 = icmp ne i32 %51, 10, !dbg !13407
  br i1 %cmp98, label %if.then99, label %if.end100, !dbg !13408

if.then99:                                        ; preds = %land.lhs.true94, %if.then76
  br label %for.end, !dbg !13409

if.end100:                                        ; preds = %land.lhs.true94, %lor.lhs.false86
  store i32 1, i32* %conflicting_input, align 4, !dbg !13410
  %52 = load i32, i32* %min_conflicting_input_opnum, align 4, !dbg !13411
  %53 = load i32, i32* %j, align 4, !dbg !13413
  %idxprom101 = sext i32 %53 to i64, !dbg !13414
  %arrayidx102 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom101, !dbg !13414
  %opnum103 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx102, i32 0, i32 12, !dbg !13415
  %54 = load i32, i32* %opnum103, align 8, !dbg !13415
  %cmp104 = icmp sgt i32 %52, %54, !dbg !13416
  br i1 %cmp104, label %if.then105, label %if.end109, !dbg !13417

if.then105:                                       ; preds = %if.end100
  %55 = load i32, i32* %j, align 4, !dbg !13418
  %idxprom106 = sext i32 %55 to i64, !dbg !13419
  %arrayidx107 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom106, !dbg !13419
  %opnum108 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx107, i32 0, i32 12, !dbg !13420
  %56 = load i32, i32* %opnum108, align 8, !dbg !13420
  store i32 %56, i32* %min_conflicting_input_opnum, align 4, !dbg !13421
  br label %if.end109, !dbg !13422

if.end109:                                        ; preds = %if.then105, %if.end100
  br label %if.end110, !dbg !13423

if.end110:                                        ; preds = %if.end109, %lor.lhs.false67
  br label %for.inc, !dbg !13424

for.inc:                                          ; preds = %if.end110, %if.then35
  %57 = load i32, i32* %j, align 4, !dbg !13425
  %inc = add nsw i32 %57, 1, !dbg !13425
  store i32 %inc, i32* %j, align 4, !dbg !13425
  br label %for.cond17, !dbg !13426, !llvm.loop !13427

for.end:                                          ; preds = %if.then99, %for.cond17
  %58 = load i32, i32* %j, align 4, !dbg !13429
  %59 = load i32, i32* @n_reloads, align 4, !dbg !13431
  %cmp111 = icmp eq i32 %58, %59, !dbg !13432
  br i1 %cmp111, label %land.lhs.true112, label %if.end284, !dbg !13433

land.lhs.true112:                                 ; preds = %for.end
  %60 = load i32, i32* %max_input_address_opnum, align 4, !dbg !13434
  %61 = load i32, i32* %min_conflicting_input_opnum, align 4, !dbg !13435
  %cmp113 = icmp sle i32 %60, %61, !dbg !13436
  br i1 %cmp113, label %if.then114, label %if.end284, !dbg !13437

if.then114:                                       ; preds = %land.lhs.true112
  %62 = load i32, i32* %i, align 4, !dbg !13438
  %idxprom115 = sext i32 %62 to i64, !dbg !13438
  %arrayidx116 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom115, !dbg !13438
  %when_needed117 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx116, i32 0, i32 17, !dbg !13438
  %63 = load i32, i32* %when_needed117, align 4, !dbg !13438
  %cmp118 = icmp ne i32 %63, 1, !dbg !13438
  br i1 %cmp118, label %cond.false, label %cond.true, !dbg !13438

cond.true:                                        ; preds = %if.then114
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 6760, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13438
  br label %cond.end, !dbg !13438

cond.false:                                       ; preds = %if.then114
  br label %cond.end, !dbg !13438

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !13438
  store i32 0, i32* %j, align 4, !dbg !13440
  br label %for.cond119, !dbg !13442

for.cond119:                                      ; preds = %for.inc159, %cond.end
  %64 = load i32, i32* %j, align 4, !dbg !13443
  %65 = load i32, i32* @n_reloads, align 4, !dbg !13445
  %cmp120 = icmp slt i32 %64, %65, !dbg !13446
  br i1 %cmp120, label %for.body121, label %for.end161, !dbg !13447

for.body121:                                      ; preds = %for.cond119
  %66 = load i32, i32* %i, align 4, !dbg !13448
  %67 = load i32, i32* %j, align 4, !dbg !13450
  %cmp122 = icmp ne i32 %66, %67, !dbg !13451
  br i1 %cmp122, label %land.lhs.true123, label %if.end158, !dbg !13452

land.lhs.true123:                                 ; preds = %for.body121
  %68 = load i32, i32* %j, align 4, !dbg !13453
  %idxprom124 = sext i32 %68 to i64, !dbg !13454
  %arrayidx125 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom124, !dbg !13454
  %reg_rtx126 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx125, i32 0, i32 11, !dbg !13455
  %69 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx126, align 8, !dbg !13455
  %cmp127 = icmp ne %struct.rtx_def* %69, null, !dbg !13456
  br i1 %cmp127, label %land.lhs.true128, label %if.end158, !dbg !13457

land.lhs.true128:                                 ; preds = %land.lhs.true123
  %70 = load i32, i32* %i, align 4, !dbg !13458
  %idxprom129 = sext i32 %70 to i64, !dbg !13459
  %arrayidx130 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom129, !dbg !13459
  %reg_rtx131 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx130, i32 0, i32 11, !dbg !13460
  %71 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx131, align 8, !dbg !13460
  %72 = load i32, i32* %j, align 4, !dbg !13461
  %idxprom132 = sext i32 %72 to i64, !dbg !13462
  %arrayidx133 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom132, !dbg !13462
  %reg_rtx134 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx133, i32 0, i32 11, !dbg !13463
  %73 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx134, align 8, !dbg !13463
  %call135 = call i32 @rtx_equal_p(%struct.rtx_def* %71, %struct.rtx_def* %73), !dbg !13464
  %tobool136 = icmp ne i32 %call135, 0, !dbg !13464
  br i1 %tobool136, label %land.lhs.true137, label %if.end158, !dbg !13465

land.lhs.true137:                                 ; preds = %land.lhs.true128
  %74 = load i32, i32* %conflicting_input, align 4, !dbg !13466
  %tobool138 = icmp ne i32 %74, 0, !dbg !13466
  br i1 %tobool138, label %lor.lhs.false139, label %if.then149, !dbg !13467

lor.lhs.false139:                                 ; preds = %land.lhs.true137
  %75 = load i32, i32* %j, align 4, !dbg !13468
  %idxprom140 = sext i32 %75 to i64, !dbg !13469
  %arrayidx141 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom140, !dbg !13469
  %when_needed142 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx141, i32 0, i32 17, !dbg !13470
  %76 = load i32, i32* %when_needed142, align 4, !dbg !13470
  %cmp143 = icmp eq i32 %76, 3, !dbg !13471
  br i1 %cmp143, label %if.then149, label %lor.lhs.false144, !dbg !13472

lor.lhs.false144:                                 ; preds = %lor.lhs.false139
  %77 = load i32, i32* %j, align 4, !dbg !13473
  %idxprom145 = sext i32 %77 to i64, !dbg !13474
  %arrayidx146 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom145, !dbg !13474
  %when_needed147 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx146, i32 0, i32 17, !dbg !13475
  %78 = load i32, i32* %when_needed147, align 4, !dbg !13475
  %cmp148 = icmp eq i32 %78, 10, !dbg !13476
  br i1 %cmp148, label %if.then149, label %if.end158, !dbg !13477

if.then149:                                       ; preds = %lor.lhs.false144, %lor.lhs.false139, %land.lhs.true137
  %79 = load i32, i32* %i, align 4, !dbg !13478
  %idxprom150 = sext i32 %79 to i64, !dbg !13480
  %arrayidx151 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom150, !dbg !13480
  %when_needed152 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx151, i32 0, i32 17, !dbg !13481
  store i32 9, i32* %when_needed152, align 4, !dbg !13482
  %80 = load i32, i32* %j, align 4, !dbg !13483
  %idxprom153 = sext i32 %80 to i64, !dbg !13484
  %arrayidx154 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom153, !dbg !13484
  %in155 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx154, i32 0, i32 0, !dbg !13485
  store %struct.rtx_def* null, %struct.rtx_def** %in155, align 8, !dbg !13486
  %81 = load i32, i32* %j, align 4, !dbg !13487
  %idxprom156 = sext i32 %81 to i64, !dbg !13488
  %arrayidx157 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom156, !dbg !13488
  store i32 -1, i32* %arrayidx157, align 4, !dbg !13489
  %82 = load i32, i32* %i, align 4, !dbg !13490
  %83 = load i32, i32* %j, align 4, !dbg !13491
  call void @transfer_replacements(i32 %82, i32 %83), !dbg !13492
  br label %if.end158, !dbg !13493

if.end158:                                        ; preds = %if.then149, %lor.lhs.false144, %land.lhs.true128, %land.lhs.true123, %for.body121
  br label %for.inc159, !dbg !13494

for.inc159:                                       ; preds = %if.end158
  %84 = load i32, i32* %j, align 4, !dbg !13495
  %inc160 = add nsw i32 %84, 1, !dbg !13495
  store i32 %inc160, i32* %j, align 4, !dbg !13495
  br label %for.cond119, !dbg !13496, !llvm.loop !13497

for.end161:                                       ; preds = %for.cond119
  %85 = load i32, i32* %i, align 4, !dbg !13499
  %idxprom162 = sext i32 %85 to i64, !dbg !13501
  %arrayidx163 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom162, !dbg !13501
  %when_needed164 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx163, i32 0, i32 17, !dbg !13502
  %86 = load i32, i32* %when_needed164, align 4, !dbg !13502
  %cmp165 = icmp eq i32 %86, 9, !dbg !13503
  br i1 %cmp165, label %if.then166, label %if.end283, !dbg !13504

if.then166:                                       ; preds = %for.end161
  store i32 0, i32* %j, align 4, !dbg !13505
  br label %for.cond167, !dbg !13507

for.cond167:                                      ; preds = %for.inc280, %if.then166
  %87 = load i32, i32* %j, align 4, !dbg !13508
  %88 = load i32, i32* @n_reloads, align 4, !dbg !13510
  %cmp168 = icmp slt i32 %87, %88, !dbg !13511
  br i1 %cmp168, label %for.body169, label %for.end282, !dbg !13512

for.body169:                                      ; preds = %for.cond167
  %89 = load i32, i32* %j, align 4, !dbg !13513
  %idxprom170 = sext i32 %89 to i64, !dbg !13515
  %arrayidx171 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom170, !dbg !13515
  %in172 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx171, i32 0, i32 0, !dbg !13516
  %90 = load %struct.rtx_def*, %struct.rtx_def** %in172, align 8, !dbg !13516
  %cmp173 = icmp ne %struct.rtx_def* %90, null, !dbg !13517
  br i1 %cmp173, label %land.lhs.true174, label %if.end279, !dbg !13518

land.lhs.true174:                                 ; preds = %for.body169
  %91 = load i32, i32* %j, align 4, !dbg !13519
  %idxprom175 = sext i32 %91 to i64, !dbg !13520
  %arrayidx176 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom175, !dbg !13520
  %when_needed177 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx176, i32 0, i32 17, !dbg !13521
  %92 = load i32, i32* %when_needed177, align 4, !dbg !13521
  %cmp178 = icmp ne i32 %92, 9, !dbg !13522
  br i1 %cmp178, label %land.lhs.true179, label %if.end279, !dbg !13523

land.lhs.true179:                                 ; preds = %land.lhs.true174
  %93 = load i32, i32* %j, align 4, !dbg !13524
  %idxprom180 = sext i32 %93 to i64, !dbg !13525
  %arrayidx181 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom180, !dbg !13525
  %when_needed182 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx181, i32 0, i32 17, !dbg !13526
  %94 = load i32, i32* %when_needed182, align 4, !dbg !13526
  %cmp183 = icmp ne i32 %94, 10, !dbg !13527
  br i1 %cmp183, label %land.lhs.true184, label %if.end279, !dbg !13528

land.lhs.true184:                                 ; preds = %land.lhs.true179
  %95 = load i32, i32* %j, align 4, !dbg !13529
  %idxprom185 = sext i32 %95 to i64, !dbg !13530
  %arrayidx186 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom185, !dbg !13530
  %when_needed187 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx186, i32 0, i32 17, !dbg !13531
  %96 = load i32, i32* %when_needed187, align 4, !dbg !13531
  %cmp188 = icmp ne i32 %96, 5, !dbg !13532
  br i1 %cmp188, label %land.lhs.true189, label %if.end279, !dbg !13533

land.lhs.true189:                                 ; preds = %land.lhs.true184
  %97 = load i32, i32* %j, align 4, !dbg !13534
  %idxprom190 = sext i32 %97 to i64, !dbg !13535
  %arrayidx191 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom190, !dbg !13535
  %when_needed192 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx191, i32 0, i32 17, !dbg !13536
  %98 = load i32, i32* %when_needed192, align 4, !dbg !13536
  %cmp193 = icmp ne i32 %98, 7, !dbg !13537
  br i1 %cmp193, label %land.lhs.true194, label %if.end279, !dbg !13538

land.lhs.true194:                                 ; preds = %land.lhs.true189
  %99 = load i32, i32* %conflicting_input, align 4, !dbg !13539
  %tobool195 = icmp ne i32 %99, 0, !dbg !13539
  br i1 %tobool195, label %lor.lhs.false196, label %land.lhs.true206, !dbg !13540

lor.lhs.false196:                                 ; preds = %land.lhs.true194
  %100 = load i32, i32* %j, align 4, !dbg !13541
  %idxprom197 = sext i32 %100 to i64, !dbg !13542
  %arrayidx198 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom197, !dbg !13542
  %when_needed199 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx198, i32 0, i32 17, !dbg !13543
  %101 = load i32, i32* %when_needed199, align 4, !dbg !13543
  %cmp200 = icmp eq i32 %101, 3, !dbg !13544
  br i1 %cmp200, label %land.lhs.true206, label %lor.lhs.false201, !dbg !13545

lor.lhs.false201:                                 ; preds = %lor.lhs.false196
  %102 = load i32, i32* %j, align 4, !dbg !13546
  %idxprom202 = sext i32 %102 to i64, !dbg !13547
  %arrayidx203 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom202, !dbg !13547
  %when_needed204 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx203, i32 0, i32 17, !dbg !13548
  %103 = load i32, i32* %when_needed204, align 4, !dbg !13548
  %cmp205 = icmp eq i32 %103, 4, !dbg !13549
  br i1 %cmp205, label %land.lhs.true206, label %if.end279, !dbg !13550

land.lhs.true206:                                 ; preds = %lor.lhs.false201, %lor.lhs.false196, %land.lhs.true194
  %104 = load i32, i32* %j, align 4, !dbg !13551
  %idxprom207 = sext i32 %104 to i64, !dbg !13552
  %arrayidx208 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom207, !dbg !13552
  %in209 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx208, i32 0, i32 0, !dbg !13553
  %105 = load %struct.rtx_def*, %struct.rtx_def** %in209, align 8, !dbg !13553
  %106 = load i32, i32* %i, align 4, !dbg !13554
  %idxprom210 = sext i32 %106 to i64, !dbg !13555
  %arrayidx211 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom210, !dbg !13555
  %in212 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx211, i32 0, i32 0, !dbg !13556
  %107 = load %struct.rtx_def*, %struct.rtx_def** %in212, align 8, !dbg !13556
  %call213 = call i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def* %105, %struct.rtx_def* %107), !dbg !13557
  %tobool214 = icmp ne i32 %call213, 0, !dbg !13557
  br i1 %tobool214, label %if.then215, label %if.end279, !dbg !13558

if.then215:                                       ; preds = %land.lhs.true206
  call void @llvm.dbg.declare(metadata i32* %k, metadata !13559, metadata !DIExpression()), !dbg !13561
  %108 = load i32, i32* %j, align 4, !dbg !13562
  %idxprom216 = sext i32 %108 to i64, !dbg !13563
  %arrayidx217 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom216, !dbg !13563
  %when_needed218 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx217, i32 0, i32 17, !dbg !13564
  %109 = load i32, i32* %when_needed218, align 4, !dbg !13564
  %cmp219 = icmp eq i32 %109, 3, !dbg !13565
  br i1 %cmp219, label %lor.end, label %lor.rhs, !dbg !13566

lor.rhs:                                          ; preds = %if.then215
  %110 = load i32, i32* %j, align 4, !dbg !13567
  %idxprom220 = sext i32 %110 to i64, !dbg !13568
  %arrayidx221 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom220, !dbg !13568
  %when_needed222 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx221, i32 0, i32 17, !dbg !13569
  %111 = load i32, i32* %when_needed222, align 4, !dbg !13569
  %cmp223 = icmp eq i32 %111, 4, !dbg !13570
  br label %lor.end, !dbg !13566

lor.end:                                          ; preds = %lor.rhs, %if.then215
  %112 = phi i1 [ true, %if.then215 ], [ %cmp223, %lor.rhs ]
  %113 = zext i1 %112 to i64, !dbg !13571
  %cond224 = select i1 %112, i32 10, i32 9, !dbg !13571
  %114 = load i32, i32* %j, align 4, !dbg !13572
  %idxprom225 = sext i32 %114 to i64, !dbg !13573
  %arrayidx226 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom225, !dbg !13573
  %when_needed227 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx226, i32 0, i32 17, !dbg !13574
  store i32 %cond224, i32* %when_needed227, align 4, !dbg !13575
  %115 = load i32, i32* %j, align 4, !dbg !13576
  %idxprom228 = sext i32 %115 to i64, !dbg !13578
  %arrayidx229 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom228, !dbg !13578
  %reg_rtx230 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx229, i32 0, i32 11, !dbg !13579
  %116 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx230, align 8, !dbg !13579
  %tobool231 = icmp ne %struct.rtx_def* %116, null, !dbg !13578
  br i1 %tobool231, label %if.then232, label %if.end278, !dbg !13580

if.then232:                                       ; preds = %lor.end
  store i32 0, i32* %k, align 4, !dbg !13581
  br label %for.cond233, !dbg !13583

for.cond233:                                      ; preds = %for.inc275, %if.then232
  %117 = load i32, i32* %k, align 4, !dbg !13584
  %118 = load i32, i32* %j, align 4, !dbg !13586
  %cmp234 = icmp slt i32 %117, %118, !dbg !13587
  br i1 %cmp234, label %for.body235, label %for.end277, !dbg !13588

for.body235:                                      ; preds = %for.cond233
  %119 = load i32, i32* %k, align 4, !dbg !13589
  %idxprom236 = sext i32 %119 to i64, !dbg !13589
  %arrayidx237 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom236, !dbg !13589
  %in238 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx237, i32 0, i32 0, !dbg !13589
  %120 = load %struct.rtx_def*, %struct.rtx_def** %in238, align 8, !dbg !13589
  %cmp239 = icmp eq %struct.rtx_def* %120, null, !dbg !13589
  br i1 %cmp239, label %cond.false272, label %lor.lhs.false240, !dbg !13589

lor.lhs.false240:                                 ; preds = %for.body235
  %121 = load i32, i32* %k, align 4, !dbg !13589
  %idxprom241 = sext i32 %121 to i64, !dbg !13589
  %arrayidx242 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom241, !dbg !13589
  %reg_rtx243 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx242, i32 0, i32 11, !dbg !13589
  %122 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx243, align 8, !dbg !13589
  %cmp244 = icmp eq %struct.rtx_def* %122, null, !dbg !13589
  br i1 %cmp244, label %cond.false272, label %lor.lhs.false245, !dbg !13589

lor.lhs.false245:                                 ; preds = %lor.lhs.false240
  %123 = load i32, i32* %k, align 4, !dbg !13589
  %idxprom246 = sext i32 %123 to i64, !dbg !13589
  %arrayidx247 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom246, !dbg !13589
  %when_needed248 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx247, i32 0, i32 17, !dbg !13589
  %124 = load i32, i32* %when_needed248, align 4, !dbg !13589
  %125 = load i32, i32* %j, align 4, !dbg !13589
  %idxprom249 = sext i32 %125 to i64, !dbg !13589
  %arrayidx250 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom249, !dbg !13589
  %when_needed251 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx250, i32 0, i32 17, !dbg !13589
  %126 = load i32, i32* %when_needed251, align 4, !dbg !13589
  %cmp252 = icmp ne i32 %124, %126, !dbg !13589
  br i1 %cmp252, label %cond.false272, label %lor.lhs.false253, !dbg !13589

lor.lhs.false253:                                 ; preds = %lor.lhs.false245
  %127 = load i32, i32* %k, align 4, !dbg !13589
  %idxprom254 = sext i32 %127 to i64, !dbg !13589
  %arrayidx255 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom254, !dbg !13589
  %reg_rtx256 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx255, i32 0, i32 11, !dbg !13589
  %128 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx256, align 8, !dbg !13589
  %129 = load i32, i32* %j, align 4, !dbg !13589
  %idxprom257 = sext i32 %129 to i64, !dbg !13589
  %arrayidx258 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom257, !dbg !13589
  %reg_rtx259 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx258, i32 0, i32 11, !dbg !13589
  %130 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx259, align 8, !dbg !13589
  %call260 = call i32 @rtx_equal_p(%struct.rtx_def* %128, %struct.rtx_def* %130), !dbg !13589
  %tobool261 = icmp ne i32 %call260, 0, !dbg !13589
  br i1 %tobool261, label %lor.lhs.false262, label %cond.false272, !dbg !13589

lor.lhs.false262:                                 ; preds = %lor.lhs.false253
  %131 = load i32, i32* %k, align 4, !dbg !13589
  %idxprom263 = sext i32 %131 to i64, !dbg !13589
  %arrayidx264 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom263, !dbg !13589
  %in265 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx264, i32 0, i32 0, !dbg !13589
  %132 = load %struct.rtx_def*, %struct.rtx_def** %in265, align 8, !dbg !13589
  %133 = load i32, i32* %j, align 4, !dbg !13589
  %idxprom266 = sext i32 %133 to i64, !dbg !13589
  %arrayidx267 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom266, !dbg !13589
  %in268 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx267, i32 0, i32 0, !dbg !13589
  %134 = load %struct.rtx_def*, %struct.rtx_def** %in268, align 8, !dbg !13589
  %call269 = call i32 @rtx_equal_p(%struct.rtx_def* %132, %struct.rtx_def* %134), !dbg !13589
  %tobool270 = icmp ne i32 %call269, 0, !dbg !13589
  br i1 %tobool270, label %cond.false272, label %cond.true271, !dbg !13589

cond.true271:                                     ; preds = %lor.lhs.false262
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 6824, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13589
  br label %cond.end273, !dbg !13589

cond.false272:                                    ; preds = %lor.lhs.false262, %lor.lhs.false253, %lor.lhs.false245, %lor.lhs.false240, %for.body235
  br label %cond.end273, !dbg !13589

cond.end273:                                      ; preds = %cond.false272, %cond.true271
  %cond274 = phi i32 [ 0, %cond.true271 ], [ 0, %cond.false272 ], !dbg !13589
  br label %for.inc275, !dbg !13589

for.inc275:                                       ; preds = %cond.end273
  %135 = load i32, i32* %k, align 4, !dbg !13590
  %inc276 = add nsw i32 %135, 1, !dbg !13590
  store i32 %inc276, i32* %k, align 4, !dbg !13590
  br label %for.cond233, !dbg !13591, !llvm.loop !13592

for.end277:                                       ; preds = %for.cond233
  br label %if.end278, !dbg !13593

if.end278:                                        ; preds = %for.end277, %lor.end
  br label %if.end279, !dbg !13594

if.end279:                                        ; preds = %if.end278, %land.lhs.true206, %lor.lhs.false201, %land.lhs.true189, %land.lhs.true184, %land.lhs.true179, %land.lhs.true174, %for.body169
  br label %for.inc280, !dbg !13595

for.inc280:                                       ; preds = %if.end279
  %136 = load i32, i32* %j, align 4, !dbg !13596
  %inc281 = add nsw i32 %136, 1, !dbg !13596
  store i32 %inc281, i32* %j, align 4, !dbg !13596
  br label %for.cond167, !dbg !13597, !llvm.loop !13598

for.end282:                                       ; preds = %for.cond167
  br label %if.end283, !dbg !13599

if.end283:                                        ; preds = %for.end282, %for.end161
  br label %if.end284, !dbg !13600

if.end284:                                        ; preds = %if.end283, %land.lhs.true112, %for.end
  br label %for.inc285, !dbg !13601

for.inc285:                                       ; preds = %if.end284, %if.then
  %137 = load i32, i32* %i, align 4, !dbg !13602
  %inc286 = add nsw i32 %137, 1, !dbg !13602
  store i32 %inc286, i32* %i, align 4, !dbg !13602
  br label %for.cond, !dbg !13603, !llvm.loop !13604

for.end287:                                       ; preds = %for.cond
  ret void, !dbg !13606
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_reload_insns(%struct.insn_chain* %chain) #0 !dbg !13607 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %r = alloca i32, align 4
  %i104 = alloca i32, align 4
  %reg = alloca %struct.rtx_def*, align 8
  %nregno = alloca i32, align 4
  %last_regno = alloca i32, align 4
  %nr = alloca i32, align 4
  %k = alloca i32, align 4
  %reg221 = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %regno = alloca i32, align 4
  %nregs = alloca i32, align 4
  %out242 = alloca %struct.rtx_def*, align 8
  %out_regno = alloca i32, align 4
  %out_nregs = alloca i32, align 4
  %piecemeal = alloca i8, align 1
  %reg420 = alloca %struct.rtx_def*, align 8
  %mode421 = alloca i32, align 4
  %regno422 = alloca i32, align 4
  %nregs423 = alloca i32, align 4
  %in_regno = alloca i32, align 4
  %in_nregs = alloca i32, align 4
  %in444 = alloca %struct.rtx_def*, align 8
  %piecemeal445 = alloca i8, align 1
  %out644 = alloca %struct.rtx_def*, align 8
  %out_regno667 = alloca i32, align 4
  %mode669 = alloca i32, align 4
  %src_reg = alloca %struct.rtx_def*, align 8
  %store_insn = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %k753 = alloca i32, align 4
  %src_regno = alloca i32, align 4
  %src_nregs = alloca i32, align 4
  %k791 = alloca i32, align 4
  %note = alloca %struct.rtx_def*, align 8
  %k867 = alloca i32, align 4
  %out_nregs868 = alloca i32, align 4
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain.addr, metadata !13608, metadata !DIExpression()), !dbg !13609
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !13610, metadata !DIExpression()), !dbg !13611
  %0 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !13612
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %0, i32 0, i32 3, !dbg !13613
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !13613
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8, !dbg !13611
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13614, metadata !DIExpression()), !dbg !13615
  store i64 0, i64* @reg_reloaded_died, align 8, !dbg !13616
  store i32 0, i32* %j, align 4, !dbg !13617
  br label %for.cond, !dbg !13619

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %j, align 4, !dbg !13620
  %3 = load i32, i32* @reload_n_operands, align 4, !dbg !13622
  %cmp = icmp slt i32 %2, %3, !dbg !13623
  br i1 %cmp, label %for.body, label %for.end, !dbg !13624

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %j, align 4, !dbg !13625
  %idxprom = sext i32 %4 to i64, !dbg !13626
  %arrayidx = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @other_output_reload_insns, i64 0, i64 %idxprom, !dbg !13626
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx, align 8, !dbg !13627
  %5 = load i32, i32* %j, align 4, !dbg !13628
  %idxprom2 = sext i32 %5 to i64, !dbg !13629
  %arrayidx3 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @outaddr_address_reload_insns, i64 0, i64 %idxprom2, !dbg !13629
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx3, align 8, !dbg !13630
  %6 = load i32, i32* %j, align 4, !dbg !13631
  %idxprom4 = sext i32 %6 to i64, !dbg !13632
  %arrayidx5 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_address_reload_insns, i64 0, i64 %idxprom4, !dbg !13632
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx5, align 8, !dbg !13633
  %7 = load i32, i32* %j, align 4, !dbg !13634
  %idxprom6 = sext i32 %7 to i64, !dbg !13635
  %arrayidx7 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_reload_insns, i64 0, i64 %idxprom6, !dbg !13635
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx7, align 8, !dbg !13636
  %8 = load i32, i32* %j, align 4, !dbg !13637
  %idxprom8 = sext i32 %8 to i64, !dbg !13638
  %arrayidx9 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @inpaddr_address_reload_insns, i64 0, i64 %idxprom8, !dbg !13638
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx9, align 8, !dbg !13639
  %9 = load i32, i32* %j, align 4, !dbg !13640
  %idxprom10 = sext i32 %9 to i64, !dbg !13641
  %arrayidx11 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @input_address_reload_insns, i64 0, i64 %idxprom10, !dbg !13641
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx11, align 8, !dbg !13642
  %10 = load i32, i32* %j, align 4, !dbg !13643
  %idxprom12 = sext i32 %10 to i64, !dbg !13644
  %arrayidx13 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @input_reload_insns, i64 0, i64 %idxprom12, !dbg !13644
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx13, align 8, !dbg !13645
  br label %for.inc, !dbg !13644

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %j, align 4, !dbg !13646
  %inc = add nsw i32 %11, 1, !dbg !13646
  store i32 %inc, i32* %j, align 4, !dbg !13646
  br label %for.cond, !dbg !13647, !llvm.loop !13648

for.end:                                          ; preds = %for.cond
  store %struct.rtx_def* null, %struct.rtx_def** @other_input_address_reload_insns, align 8, !dbg !13650
  store %struct.rtx_def* null, %struct.rtx_def** @other_input_reload_insns, align 8, !dbg !13651
  store %struct.rtx_def* null, %struct.rtx_def** @operand_reload_insns, align 8, !dbg !13652
  store %struct.rtx_def* null, %struct.rtx_def** @other_operand_reload_insns, align 8, !dbg !13653
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !13654
  %tobool = icmp ne %struct._IO_FILE* %12, null, !dbg !13654
  br i1 %tobool, label %if.then, label %if.end, !dbg !13656

if.then:                                          ; preds = %for.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !13657
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13659
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !13659
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13659
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !13659
  %rt_int = bitcast %union.rtunion_def* %arrayidx14 to i32*, !dbg !13659
  %15 = load i32, i32* %rt_int, align 8, !dbg !13659
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i32 %15), !dbg !13660
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !13661
  call void @debug_reload_to_stream(%struct._IO_FILE* %16), !dbg !13662
  br label %if.end, !dbg !13663

if.end:                                           ; preds = %if.then, %for.end
  store i32 0, i32* %j, align 4, !dbg !13664
  br label %for.cond15, !dbg !13666

for.cond15:                                       ; preds = %for.inc59, %if.end
  %17 = load i32, i32* %j, align 4, !dbg !13667
  %18 = load i32, i32* @n_reloads, align 4, !dbg !13669
  %cmp16 = icmp slt i32 %17, %18, !dbg !13670
  br i1 %cmp16, label %for.body17, label %for.end61, !dbg !13671

for.body17:                                       ; preds = %for.cond15
  %19 = load i32, i32* %j, align 4, !dbg !13672
  %idxprom18 = sext i32 %19 to i64, !dbg !13675
  %arrayidx19 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom18, !dbg !13675
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx19, i32 0, i32 11, !dbg !13676
  %20 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !13676
  %tobool20 = icmp ne %struct.rtx_def* %20, null, !dbg !13675
  br i1 %tobool20, label %land.lhs.true, label %if.end56, !dbg !13677

land.lhs.true:                                    ; preds = %for.body17
  %21 = load i32, i32* %j, align 4, !dbg !13678
  %idxprom21 = sext i32 %21 to i64, !dbg !13678
  %arrayidx22 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom21, !dbg !13678
  %reg_rtx23 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx22, i32 0, i32 11, !dbg !13678
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx23, align 8, !dbg !13678
  %call24 = call i32 @rhs_regno(%struct.rtx_def* %22), !dbg !13678
  %cmp25 = icmp ult i32 %call24, 53, !dbg !13678
  br i1 %cmp25, label %if.then26, label %if.end56, !dbg !13679

if.then26:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13680, metadata !DIExpression()), !dbg !13682
  %23 = load i32, i32* %j, align 4, !dbg !13683
  %idxprom27 = sext i32 %23 to i64, !dbg !13683
  %arrayidx28 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom27, !dbg !13683
  %reg_rtx29 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx28, i32 0, i32 11, !dbg !13683
  %24 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx29, align 8, !dbg !13683
  %call30 = call i32 @rhs_regno(%struct.rtx_def* %24), !dbg !13683
  store i32 %call30, i32* %i, align 4, !dbg !13685
  br label %for.cond31, !dbg !13686

for.cond31:                                       ; preds = %for.inc53, %if.then26
  %25 = load i32, i32* %i, align 4, !dbg !13687
  %26 = load i32, i32* %j, align 4, !dbg !13689
  %idxprom32 = sext i32 %26 to i64, !dbg !13689
  %arrayidx33 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom32, !dbg !13689
  %reg_rtx34 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx33, i32 0, i32 11, !dbg !13689
  %27 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx34, align 8, !dbg !13689
  %call35 = call i32 @rhs_regno(%struct.rtx_def* %27), !dbg !13689
  %cmp36 = icmp ult i32 %call35, 53, !dbg !13689
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !13689

cond.true:                                        ; preds = %for.cond31
  %28 = load i32, i32* %j, align 4, !dbg !13689
  %idxprom37 = sext i32 %28 to i64, !dbg !13689
  %arrayidx38 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom37, !dbg !13689
  %reg_rtx39 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx38, i32 0, i32 11, !dbg !13689
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx39, align 8, !dbg !13689
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !13689
  %bf.load = load i32, i32* %30, align 8, !dbg !13689
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !13689
  %bf.clear = and i32 %bf.lshr, 255, !dbg !13689
  %31 = load i32, i32* %j, align 4, !dbg !13689
  %idxprom40 = sext i32 %31 to i64, !dbg !13689
  %arrayidx41 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom40, !dbg !13689
  %reg_rtx42 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx41, i32 0, i32 11, !dbg !13689
  %32 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx42, align 8, !dbg !13689
  %call43 = call i32 @rhs_regno(%struct.rtx_def* %32), !dbg !13689
  %call44 = call i32 @end_hard_regno(i32 %bf.clear, i32 %call43), !dbg !13689
  br label %cond.end, !dbg !13689

cond.false:                                       ; preds = %for.cond31
  %33 = load i32, i32* %j, align 4, !dbg !13689
  %idxprom45 = sext i32 %33 to i64, !dbg !13689
  %arrayidx46 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom45, !dbg !13689
  %reg_rtx47 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx46, i32 0, i32 11, !dbg !13689
  %34 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx47, align 8, !dbg !13689
  %call48 = call i32 @rhs_regno(%struct.rtx_def* %34), !dbg !13689
  %add = add i32 %call48, 1, !dbg !13689
  br label %cond.end, !dbg !13689

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call44, %cond.true ], [ %add, %cond.false ], !dbg !13689
  %cmp49 = icmp ult i32 %25, %cond, !dbg !13690
  br i1 %cmp49, label %for.body50, label %for.end55, !dbg !13691

for.body50:                                       ; preds = %cond.end
  %35 = load i32, i32* %i, align 4, !dbg !13692
  %idxprom51 = zext i32 %35 to i64, !dbg !13693
  %arrayidx52 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i64 0, i64 %idxprom51, !dbg !13693
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx52, align 8, !dbg !13694
  br label %for.inc53, !dbg !13693

for.inc53:                                        ; preds = %for.body50
  %36 = load i32, i32* %i, align 4, !dbg !13695
  %inc54 = add i32 %36, 1, !dbg !13695
  store i32 %inc54, i32* %i, align 4, !dbg !13695
  br label %for.cond31, !dbg !13696, !llvm.loop !13697

for.end55:                                        ; preds = %cond.end
  br label %if.end56, !dbg !13699

if.end56:                                         ; preds = %for.end55, %land.lhs.true, %for.body17
  %37 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !13700
  %38 = load i32, i32* %j, align 4, !dbg !13701
  %idx.ext = sext i32 %38 to i64, !dbg !13702
  %add.ptr = getelementptr inbounds %struct.reload, %struct.reload* getelementptr inbounds ([180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 0), i64 %idx.ext, !dbg !13702
  %39 = load i32, i32* %j, align 4, !dbg !13703
  call void @do_input_reload(%struct.insn_chain* %37, %struct.reload* %add.ptr, i32 %39), !dbg !13704
  %40 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !13705
  %41 = load i32, i32* %j, align 4, !dbg !13706
  %idx.ext57 = sext i32 %41 to i64, !dbg !13707
  %add.ptr58 = getelementptr inbounds %struct.reload, %struct.reload* getelementptr inbounds ([180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 0), i64 %idx.ext57, !dbg !13707
  %42 = load i32, i32* %j, align 4, !dbg !13708
  call void @do_output_reload(%struct.insn_chain* %40, %struct.reload* %add.ptr58, i32 %42), !dbg !13709
  br label %for.inc59, !dbg !13710

for.inc59:                                        ; preds = %if.end56
  %43 = load i32, i32* %j, align 4, !dbg !13711
  %inc60 = add nsw i32 %43, 1, !dbg !13711
  store i32 %inc60, i32* %j, align 4, !dbg !13711
  br label %for.cond15, !dbg !13712, !llvm.loop !13713

for.end61:                                        ; preds = %for.cond15
  %44 = load %struct.rtx_def*, %struct.rtx_def** @other_input_address_reload_insns, align 8, !dbg !13715
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13716
  %call62 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %44, %struct.rtx_def* %45), !dbg !13717
  %46 = load %struct.rtx_def*, %struct.rtx_def** @other_input_reload_insns, align 8, !dbg !13718
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13719
  %call63 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %46, %struct.rtx_def* %47), !dbg !13720
  store i32 0, i32* %j, align 4, !dbg !13721
  br label %for.cond64, !dbg !13723

for.cond64:                                       ; preds = %for.inc76, %for.end61
  %48 = load i32, i32* %j, align 4, !dbg !13724
  %49 = load i32, i32* @reload_n_operands, align 4, !dbg !13726
  %cmp65 = icmp slt i32 %48, %49, !dbg !13727
  br i1 %cmp65, label %for.body66, label %for.end78, !dbg !13728

for.body66:                                       ; preds = %for.cond64
  %50 = load i32, i32* %j, align 4, !dbg !13729
  %idxprom67 = sext i32 %50 to i64, !dbg !13731
  %arrayidx68 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @inpaddr_address_reload_insns, i64 0, i64 %idxprom67, !dbg !13731
  %51 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx68, align 8, !dbg !13731
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13732
  %call69 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %51, %struct.rtx_def* %52), !dbg !13733
  %53 = load i32, i32* %j, align 4, !dbg !13734
  %idxprom70 = sext i32 %53 to i64, !dbg !13735
  %arrayidx71 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @input_address_reload_insns, i64 0, i64 %idxprom70, !dbg !13735
  %54 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx71, align 8, !dbg !13735
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13736
  %call72 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %54, %struct.rtx_def* %55), !dbg !13737
  %56 = load i32, i32* %j, align 4, !dbg !13738
  %idxprom73 = sext i32 %56 to i64, !dbg !13739
  %arrayidx74 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @input_reload_insns, i64 0, i64 %idxprom73, !dbg !13739
  %57 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx74, align 8, !dbg !13739
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13740
  %call75 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %57, %struct.rtx_def* %58), !dbg !13741
  br label %for.inc76, !dbg !13742

for.inc76:                                        ; preds = %for.body66
  %59 = load i32, i32* %j, align 4, !dbg !13743
  %inc77 = add nsw i32 %59, 1, !dbg !13743
  store i32 %inc77, i32* %j, align 4, !dbg !13743
  br label %for.cond64, !dbg !13744, !llvm.loop !13745

for.end78:                                        ; preds = %for.cond64
  %60 = load %struct.rtx_def*, %struct.rtx_def** @other_operand_reload_insns, align 8, !dbg !13747
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13748
  %call79 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %60, %struct.rtx_def* %61), !dbg !13749
  %62 = load %struct.rtx_def*, %struct.rtx_def** @operand_reload_insns, align 8, !dbg !13750
  %63 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13751
  %call80 = call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %62, %struct.rtx_def* %63), !dbg !13752
  store i32 0, i32* %j, align 4, !dbg !13753
  br label %for.cond81, !dbg !13755

for.cond81:                                       ; preds = %for.inc96, %for.end78
  %64 = load i32, i32* %j, align 4, !dbg !13756
  %65 = load i32, i32* @reload_n_operands, align 4, !dbg !13758
  %cmp82 = icmp slt i32 %64, %65, !dbg !13759
  br i1 %cmp82, label %for.body83, label %for.end98, !dbg !13760

for.body83:                                       ; preds = %for.cond81
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !13761, metadata !DIExpression()), !dbg !13763
  %66 = load i32, i32* %j, align 4, !dbg !13764
  %idxprom84 = sext i32 %66 to i64, !dbg !13765
  %arrayidx85 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @outaddr_address_reload_insns, i64 0, i64 %idxprom84, !dbg !13765
  %67 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx85, align 8, !dbg !13765
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13766
  %call86 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %67, %struct.rtx_def* %68), !dbg !13767
  store %struct.rtx_def* %call86, %struct.rtx_def** %x, align 8, !dbg !13763
  %69 = load i32, i32* %j, align 4, !dbg !13768
  %idxprom87 = sext i32 %69 to i64, !dbg !13769
  %arrayidx88 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_address_reload_insns, i64 0, i64 %idxprom87, !dbg !13769
  %70 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx88, align 8, !dbg !13769
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !13770
  %call89 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %70, %struct.rtx_def* %71), !dbg !13771
  store %struct.rtx_def* %call89, %struct.rtx_def** %x, align 8, !dbg !13772
  %72 = load i32, i32* %j, align 4, !dbg !13773
  %idxprom90 = sext i32 %72 to i64, !dbg !13774
  %arrayidx91 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_reload_insns, i64 0, i64 %idxprom90, !dbg !13774
  %73 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx91, align 8, !dbg !13774
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !13775
  %call92 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %73, %struct.rtx_def* %74), !dbg !13776
  store %struct.rtx_def* %call92, %struct.rtx_def** %x, align 8, !dbg !13777
  %75 = load i32, i32* %j, align 4, !dbg !13778
  %idxprom93 = sext i32 %75 to i64, !dbg !13779
  %arrayidx94 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @other_output_reload_insns, i64 0, i64 %idxprom93, !dbg !13779
  %76 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx94, align 8, !dbg !13779
  %77 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !13780
  %call95 = call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %76, %struct.rtx_def* %77), !dbg !13781
  br label %for.inc96, !dbg !13782

for.inc96:                                        ; preds = %for.body83
  %78 = load i32, i32* %j, align 4, !dbg !13783
  %inc97 = add nsw i32 %78, 1, !dbg !13783
  store i32 %inc97, i32* %j, align 4, !dbg !13783
  br label %for.cond81, !dbg !13784, !llvm.loop !13785

for.end98:                                        ; preds = %for.cond81
  store i32 0, i32* %j, align 4, !dbg !13787
  br label %for.cond99, !dbg !13789

for.cond99:                                       ; preds = %for.inc886, %for.end98
  %79 = load i32, i32* %j, align 4, !dbg !13790
  %80 = load i32, i32* @n_reloads, align 4, !dbg !13792
  %cmp100 = icmp slt i32 %79, %80, !dbg !13793
  br i1 %cmp100, label %for.body101, label %for.end888, !dbg !13794

for.body101:                                      ; preds = %for.cond99
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13795, metadata !DIExpression()), !dbg !13797
  %81 = load i32, i32* %j, align 4, !dbg !13798
  %idxprom102 = sext i32 %81 to i64, !dbg !13799
  %arrayidx103 = getelementptr inbounds [180 x i16], [180 x i16]* @reload_order, i64 0, i64 %idxprom102, !dbg !13799
  %82 = load i16, i16* %arrayidx103, align 2, !dbg !13799
  %conv = sext i16 %82 to i32, !dbg !13799
  store i32 %conv, i32* %r, align 4, !dbg !13797
  call void @llvm.dbg.declare(metadata i32* %i104, metadata !13800, metadata !DIExpression()), !dbg !13801
  %83 = load i32, i32* %r, align 4, !dbg !13802
  %idxprom105 = sext i32 %83 to i64, !dbg !13803
  %arrayidx106 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom105, !dbg !13803
  %84 = load i32, i32* %arrayidx106, align 4, !dbg !13803
  store i32 %84, i32* %i104, align 4, !dbg !13801
  %85 = load i32, i32* %r, align 4, !dbg !13804
  %idxprom107 = sext i32 %85 to i64, !dbg !13806
  %arrayidx108 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom107, !dbg !13806
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx108, i32 0, i32 8, !dbg !13807
  %86 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8, !dbg !13807
  %cmp109 = icmp ne %struct.rtx_def* %86, null, !dbg !13808
  br i1 %cmp109, label %land.lhs.true111, label %if.end163, !dbg !13809

land.lhs.true111:                                 ; preds = %for.body101
  %87 = load i32, i32* %r, align 4, !dbg !13810
  %idxprom112 = sext i32 %87 to i64, !dbg !13811
  %arrayidx113 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom112, !dbg !13811
  %88 = load i8, i8* %arrayidx113, align 1, !dbg !13811
  %conv114 = sext i8 %88 to i32, !dbg !13811
  %tobool115 = icmp ne i32 %conv114, 0, !dbg !13811
  br i1 %tobool115, label %if.end163, label %lor.lhs.false, !dbg !13812

lor.lhs.false:                                    ; preds = %land.lhs.true111
  %89 = load i32, i32* %r, align 4, !dbg !13813
  %idxprom116 = sext i32 %89 to i64, !dbg !13814
  %arrayidx117 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom116, !dbg !13814
  %90 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx117, align 8, !dbg !13814
  %tobool118 = icmp ne %struct.rtx_def* %90, null, !dbg !13814
  br i1 %tobool118, label %if.end163, label %if.then119, !dbg !13815

if.then119:                                       ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg, metadata !13816, metadata !DIExpression()), !dbg !13818
  %91 = load i32, i32* %r, align 4, !dbg !13819
  %idxprom120 = sext i32 %91 to i64, !dbg !13820
  %arrayidx121 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom120, !dbg !13820
  %in_reg122 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx121, i32 0, i32 8, !dbg !13821
  %92 = load %struct.rtx_def*, %struct.rtx_def** %in_reg122, align 8, !dbg !13821
  store %struct.rtx_def* %92, %struct.rtx_def** %reg, align 8, !dbg !13818
  %93 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !13822
  %94 = bitcast %struct.rtx_def* %93 to i32*, !dbg !13822
  %bf.load123 = load i32, i32* %94, align 8, !dbg !13822
  %bf.clear124 = and i32 %bf.load123, 65535, !dbg !13822
  %cmp125 = icmp eq i32 %bf.clear124, 39, !dbg !13824
  br i1 %cmp125, label %if.then127, label %if.end131, !dbg !13825

if.then127:                                       ; preds = %if.then119
  %95 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !13826
  %u128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1, !dbg !13826
  %fld129 = bitcast %union.u* %u128 to [1 x %union.rtunion_def]*, !dbg !13826
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i64 0, i64 0, !dbg !13826
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtx_def**, !dbg !13826
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !13826
  store %struct.rtx_def* %96, %struct.rtx_def** %reg, align 8, !dbg !13827
  br label %if.end131, !dbg !13828

if.end131:                                        ; preds = %if.then127, %if.then119
  %97 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !13829
  %98 = bitcast %struct.rtx_def* %97 to i32*, !dbg !13829
  %bf.load132 = load i32, i32* %98, align 8, !dbg !13829
  %bf.clear133 = and i32 %bf.load132, 65535, !dbg !13829
  %cmp134 = icmp eq i32 %bf.clear133, 37, !dbg !13829
  br i1 %cmp134, label %land.lhs.true136, label %if.end162, !dbg !13831

land.lhs.true136:                                 ; preds = %if.end131
  %99 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !13832
  %call137 = call i32 @rhs_regno(%struct.rtx_def* %99), !dbg !13832
  %cmp138 = icmp uge i32 %call137, 53, !dbg !13833
  br i1 %cmp138, label %land.lhs.true140, label %if.end162, !dbg !13834

land.lhs.true140:                                 ; preds = %land.lhs.true136
  %100 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !13835
  %call141 = call i32 @rhs_regno(%struct.rtx_def* %100), !dbg !13835
  %call142 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* @reg_has_output_reload, i32 %call141), !dbg !13835
  %tobool143 = icmp ne i32 %call142, 0, !dbg !13835
  br i1 %tobool143, label %if.end162, label %if.then144, !dbg !13836

if.then144:                                       ; preds = %land.lhs.true140
  call void @llvm.dbg.declare(metadata i32* %nregno, metadata !13837, metadata !DIExpression()), !dbg !13839
  %101 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !13840
  %call145 = call i32 @rhs_regno(%struct.rtx_def* %101), !dbg !13840
  store i32 %call145, i32* %nregno, align 4, !dbg !13839
  %102 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !13841
  %103 = load i32, i32* %nregno, align 4, !dbg !13843
  %idxprom146 = sext i32 %103 to i64, !dbg !13841
  %arrayidx147 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %102, i64 %idxprom146, !dbg !13841
  %104 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx147, align 8, !dbg !13841
  %tobool148 = icmp ne %struct.rtx_def* %104, null, !dbg !13841
  br i1 %tobool148, label %if.then149, label %if.end161, !dbg !13844

if.then149:                                       ; preds = %if.then144
  call void @llvm.dbg.declare(metadata i32* %last_regno, metadata !13845, metadata !DIExpression()), !dbg !13847
  %105 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !13848
  %106 = load i32, i32* %nregno, align 4, !dbg !13848
  %idxprom150 = sext i32 %106 to i64, !dbg !13848
  %arrayidx151 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %105, i64 %idxprom150, !dbg !13848
  %107 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx151, align 8, !dbg !13848
  %call152 = call i32 @rhs_regno(%struct.rtx_def* %107), !dbg !13848
  store i32 %call152, i32* %last_regno, align 4, !dbg !13847
  %108 = load i32, i32* %last_regno, align 4, !dbg !13849
  %idxprom153 = sext i32 %108 to i64, !dbg !13851
  %arrayidx154 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i64 0, i64 %idxprom153, !dbg !13851
  %109 = load i32, i32* %arrayidx154, align 4, !dbg !13851
  %110 = load i32, i32* %nregno, align 4, !dbg !13852
  %cmp155 = icmp eq i32 %109, %110, !dbg !13853
  br i1 %cmp155, label %if.then157, label %if.end160, !dbg !13854

if.then157:                                       ; preds = %if.then149
  %111 = load i32, i32* %last_regno, align 4, !dbg !13855
  %idxprom158 = sext i32 %111 to i64, !dbg !13856
  %arrayidx159 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom158, !dbg !13856
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx159, align 8, !dbg !13857
  br label %if.end160, !dbg !13856

if.end160:                                        ; preds = %if.then157, %if.then149
  br label %if.end161, !dbg !13858

if.end161:                                        ; preds = %if.end160, %if.then144
  br label %if.end162, !dbg !13859

if.end162:                                        ; preds = %if.end161, %land.lhs.true140, %land.lhs.true136, %if.end131
  br label %if.end163, !dbg !13860

if.end163:                                        ; preds = %if.end162, %lor.lhs.false, %land.lhs.true111, %for.body101
  %112 = load i32, i32* %i104, align 4, !dbg !13861
  %cmp164 = icmp sge i32 %112, 0, !dbg !13863
  br i1 %cmp164, label %land.lhs.true166, label %if.end591, !dbg !13864

land.lhs.true166:                                 ; preds = %if.end163
  %113 = load i32, i32* %r, align 4, !dbg !13865
  %idxprom167 = sext i32 %113 to i64, !dbg !13866
  %arrayidx168 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom167, !dbg !13866
  %reg_rtx169 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx168, i32 0, i32 11, !dbg !13867
  %114 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx169, align 8, !dbg !13867
  %cmp170 = icmp ne %struct.rtx_def* %114, null, !dbg !13868
  br i1 %cmp170, label %if.then172, label %if.end591, !dbg !13869

if.then172:                                       ; preds = %land.lhs.true166
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !13870, metadata !DIExpression()), !dbg !13872
  %115 = load i32, i32* %i104, align 4, !dbg !13873
  %idxprom173 = sext i32 %115 to i64, !dbg !13874
  %arrayidx174 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom173, !dbg !13874
  %116 = load i32, i32* %r, align 4, !dbg !13875
  %idxprom175 = sext i32 %116 to i64, !dbg !13875
  %arrayidx176 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom175, !dbg !13875
  %reg_rtx177 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx176, i32 0, i32 11, !dbg !13875
  %117 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx177, align 8, !dbg !13875
  %118 = bitcast %struct.rtx_def* %117 to i32*, !dbg !13875
  %bf.load178 = load i32, i32* %118, align 8, !dbg !13875
  %bf.lshr179 = lshr i32 %bf.load178, 16, !dbg !13875
  %bf.clear180 = and i32 %bf.lshr179, 255, !dbg !13875
  %idxprom181 = zext i32 %bf.clear180 to i64, !dbg !13874
  %arrayidx182 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx174, i64 0, i64 %idxprom181, !dbg !13874
  %119 = load i8, i8* %arrayidx182, align 1, !dbg !13874
  %conv183 = zext i8 %119 to i32, !dbg !13874
  store i32 %conv183, i32* %nr, align 4, !dbg !13872
  call void @llvm.dbg.declare(metadata i32* %k, metadata !13876, metadata !DIExpression()), !dbg !13877
  store i32 0, i32* %k, align 4, !dbg !13878
  br label %for.cond184, !dbg !13880

for.cond184:                                      ; preds = %for.inc198, %if.then172
  %120 = load i32, i32* %k, align 4, !dbg !13881
  %121 = load i32, i32* %nr, align 4, !dbg !13883
  %cmp185 = icmp slt i32 %120, %121, !dbg !13884
  br i1 %cmp185, label %for.body187, label %for.end200, !dbg !13885

for.body187:                                      ; preds = %for.cond184
  %122 = load i32, i32* %i104, align 4, !dbg !13886
  %123 = load i32, i32* %k, align 4, !dbg !13888
  %add188 = add nsw i32 %122, %123, !dbg !13889
  %124 = load i32, i32* %r, align 4, !dbg !13890
  %idxprom189 = sext i32 %124 to i64, !dbg !13891
  %arrayidx190 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom189, !dbg !13891
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx190, i32 0, i32 12, !dbg !13892
  %125 = load i32, i32* %opnum, align 8, !dbg !13892
  %126 = load i32, i32* %r, align 4, !dbg !13893
  %idxprom191 = sext i32 %126 to i64, !dbg !13894
  %arrayidx192 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom191, !dbg !13894
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx192, i32 0, i32 17, !dbg !13895
  %127 = load i32, i32* %when_needed, align 4, !dbg !13895
  %call193 = call i32 @reload_reg_reaches_end_p(i32 %add188, i32 %125, i32 %127), !dbg !13896
  %tobool194 = icmp ne i32 %call193, 0, !dbg !13896
  br i1 %tobool194, label %if.then195, label %if.end197, !dbg !13897

if.then195:                                       ; preds = %for.body187
  %128 = load i32, i32* %i104, align 4, !dbg !13898
  %129 = load i32, i32* %k, align 4, !dbg !13898
  %add196 = add nsw i32 %128, %129, !dbg !13898
  %sh_prom = zext i32 %add196 to i64, !dbg !13898
  %shl = shl i64 1, %sh_prom, !dbg !13898
  %neg = xor i64 %shl, -1, !dbg !13898
  %130 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !13898
  %and = and i64 %130, %neg, !dbg !13898
  store i64 %and, i64* @reg_reloaded_valid, align 8, !dbg !13898
  br label %if.end197, !dbg !13898

if.end197:                                        ; preds = %if.then195, %for.body187
  br label %for.inc198, !dbg !13899

for.inc198:                                       ; preds = %if.end197
  %131 = load i32, i32* %k, align 4, !dbg !13900
  %inc199 = add nsw i32 %131, 1, !dbg !13900
  store i32 %inc199, i32* %k, align 4, !dbg !13900
  br label %for.cond184, !dbg !13901, !llvm.loop !13902

for.end200:                                       ; preds = %for.cond184
  %132 = load i32, i32* %r, align 4, !dbg !13904
  %idxprom201 = sext i32 %132 to i64, !dbg !13906
  %arrayidx202 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom201, !dbg !13906
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx202, i32 0, i32 1, !dbg !13907
  %133 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !13907
  %cmp203 = icmp ne %struct.rtx_def* %133, null, !dbg !13908
  br i1 %cmp203, label %land.lhs.true205, label %if.else, !dbg !13909

land.lhs.true205:                                 ; preds = %for.end200
  %134 = load i32, i32* %r, align 4, !dbg !13910
  %idxprom206 = sext i32 %134 to i64, !dbg !13910
  %arrayidx207 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom206, !dbg !13910
  %out208 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx207, i32 0, i32 1, !dbg !13910
  %135 = load %struct.rtx_def*, %struct.rtx_def** %out208, align 8, !dbg !13910
  %136 = bitcast %struct.rtx_def* %135 to i32*, !dbg !13910
  %bf.load209 = load i32, i32* %136, align 8, !dbg !13910
  %bf.clear210 = and i32 %bf.load209, 65535, !dbg !13910
  %cmp211 = icmp eq i32 %bf.clear210, 37, !dbg !13910
  br i1 %cmp211, label %if.then220, label %lor.lhs.false213, !dbg !13911

lor.lhs.false213:                                 ; preds = %land.lhs.true205
  %137 = load i32, i32* %r, align 4, !dbg !13912
  %idxprom214 = sext i32 %137 to i64, !dbg !13912
  %arrayidx215 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom214, !dbg !13912
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx215, i32 0, i32 9, !dbg !13912
  %138 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8, !dbg !13912
  %139 = bitcast %struct.rtx_def* %138 to i32*, !dbg !13912
  %bf.load216 = load i32, i32* %139, align 8, !dbg !13912
  %bf.clear217 = and i32 %bf.load216, 65535, !dbg !13912
  %cmp218 = icmp eq i32 %bf.clear217, 37, !dbg !13912
  br i1 %cmp218, label %if.then220, label %if.else, !dbg !13913

if.then220:                                       ; preds = %lor.lhs.false213, %land.lhs.true205
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg221, metadata !13914, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !13917, metadata !DIExpression()), !dbg !13918
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !13919, metadata !DIExpression()), !dbg !13920
  call void @llvm.dbg.declare(metadata i32* %nregs, metadata !13921, metadata !DIExpression()), !dbg !13922
  %140 = load i32, i32* %r, align 4, !dbg !13923
  %idxprom222 = sext i32 %140 to i64, !dbg !13924
  %arrayidx223 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_reg_rtx_for_output, i64 0, i64 %idxprom222, !dbg !13924
  %141 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx223, align 8, !dbg !13924
  store %struct.rtx_def* %141, %struct.rtx_def** %reg221, align 8, !dbg !13925
  %142 = load %struct.rtx_def*, %struct.rtx_def** %reg221, align 8, !dbg !13926
  %143 = bitcast %struct.rtx_def* %142 to i32*, !dbg !13926
  %bf.load224 = load i32, i32* %143, align 8, !dbg !13926
  %bf.lshr225 = lshr i32 %bf.load224, 16, !dbg !13926
  %bf.clear226 = and i32 %bf.lshr225, 255, !dbg !13926
  store i32 %bf.clear226, i32* %mode, align 4, !dbg !13927
  %144 = load %struct.rtx_def*, %struct.rtx_def** %reg221, align 8, !dbg !13928
  %call227 = call i32 @rhs_regno(%struct.rtx_def* %144), !dbg !13928
  store i32 %call227, i32* %regno, align 4, !dbg !13929
  %145 = load i32, i32* %regno, align 4, !dbg !13930
  %idxprom228 = sext i32 %145 to i64, !dbg !13931
  %arrayidx229 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom228, !dbg !13931
  %146 = load i32, i32* %mode, align 4, !dbg !13932
  %idxprom230 = zext i32 %146 to i64, !dbg !13931
  %arrayidx231 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx229, i64 0, i64 %idxprom230, !dbg !13931
  %147 = load i8, i8* %arrayidx231, align 1, !dbg !13931
  %conv232 = zext i8 %147 to i32, !dbg !13931
  store i32 %conv232, i32* %nregs, align 4, !dbg !13933
  %148 = load i32, i32* %regno, align 4, !dbg !13934
  %149 = load i32, i32* %nregs, align 4, !dbg !13936
  %150 = load i32, i32* %r, align 4, !dbg !13937
  %idxprom233 = sext i32 %150 to i64, !dbg !13938
  %arrayidx234 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom233, !dbg !13938
  %opnum235 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx234, i32 0, i32 12, !dbg !13939
  %151 = load i32, i32* %opnum235, align 8, !dbg !13939
  %152 = load i32, i32* %r, align 4, !dbg !13940
  %idxprom236 = sext i32 %152 to i64, !dbg !13941
  %arrayidx237 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom236, !dbg !13941
  %when_needed238 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx237, i32 0, i32 17, !dbg !13942
  %153 = load i32, i32* %when_needed238, align 4, !dbg !13942
  %call239 = call zeroext i8 @reload_regs_reach_end_p(i32 %148, i32 %149, i32 %151, i32 %153), !dbg !13943
  %tobool240 = icmp ne i8 %call239, 0, !dbg !13943
  br i1 %tobool240, label %if.then241, label %if.end362, !dbg !13944

if.then241:                                       ; preds = %if.then220
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out242, metadata !13945, metadata !DIExpression()), !dbg !13947
  %154 = load i32, i32* %r, align 4, !dbg !13948
  %idxprom243 = sext i32 %154 to i64, !dbg !13948
  %arrayidx244 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom243, !dbg !13948
  %out245 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx244, i32 0, i32 1, !dbg !13948
  %155 = load %struct.rtx_def*, %struct.rtx_def** %out245, align 8, !dbg !13948
  %156 = bitcast %struct.rtx_def* %155 to i32*, !dbg !13948
  %bf.load246 = load i32, i32* %156, align 8, !dbg !13948
  %bf.clear247 = and i32 %bf.load246, 65535, !dbg !13948
  %cmp248 = icmp eq i32 %bf.clear247, 37, !dbg !13948
  br i1 %cmp248, label %cond.true250, label %cond.false254, !dbg !13948

cond.true250:                                     ; preds = %if.then241
  %157 = load i32, i32* %r, align 4, !dbg !13949
  %idxprom251 = sext i32 %157 to i64, !dbg !13950
  %arrayidx252 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom251, !dbg !13950
  %out253 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx252, i32 0, i32 1, !dbg !13951
  %158 = load %struct.rtx_def*, %struct.rtx_def** %out253, align 8, !dbg !13951
  br label %cond.end273, !dbg !13948

cond.false254:                                    ; preds = %if.then241
  %159 = load i32, i32* %r, align 4, !dbg !13952
  %idxprom255 = sext i32 %159 to i64, !dbg !13953
  %arrayidx256 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom255, !dbg !13953
  %out_reg257 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx256, i32 0, i32 9, !dbg !13954
  %160 = load %struct.rtx_def*, %struct.rtx_def** %out_reg257, align 8, !dbg !13954
  %tobool258 = icmp ne %struct.rtx_def* %160, null, !dbg !13953
  br i1 %tobool258, label %cond.true259, label %cond.false263, !dbg !13953

cond.true259:                                     ; preds = %cond.false254
  %161 = load i32, i32* %r, align 4, !dbg !13955
  %idxprom260 = sext i32 %161 to i64, !dbg !13956
  %arrayidx261 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom260, !dbg !13956
  %out_reg262 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx261, i32 0, i32 9, !dbg !13957
  %162 = load %struct.rtx_def*, %struct.rtx_def** %out_reg262, align 8, !dbg !13957
  br label %cond.end271, !dbg !13953

cond.false263:                                    ; preds = %cond.false254
  %163 = load i32, i32* %r, align 4, !dbg !13958
  %idxprom264 = sext i32 %163 to i64, !dbg !13958
  %arrayidx265 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom264, !dbg !13958
  %in_reg266 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx265, i32 0, i32 8, !dbg !13958
  %164 = load %struct.rtx_def*, %struct.rtx_def** %in_reg266, align 8, !dbg !13958
  %u267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1, !dbg !13958
  %fld268 = bitcast %union.u* %u267 to [1 x %union.rtunion_def]*, !dbg !13958
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i64 0, i64 0, !dbg !13958
  %rt_rtx270 = bitcast %union.rtunion_def* %arrayidx269 to %struct.rtx_def**, !dbg !13958
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx270, align 8, !dbg !13958
  br label %cond.end271, !dbg !13953

cond.end271:                                      ; preds = %cond.false263, %cond.true259
  %cond272 = phi %struct.rtx_def* [ %162, %cond.true259 ], [ %165, %cond.false263 ], !dbg !13953
  br label %cond.end273, !dbg !13948

cond.end273:                                      ; preds = %cond.end271, %cond.true250
  %cond274 = phi %struct.rtx_def* [ %158, %cond.true250 ], [ %cond272, %cond.end271 ], !dbg !13948
  store %struct.rtx_def* %cond274, %struct.rtx_def** %out242, align 8, !dbg !13947
  call void @llvm.dbg.declare(metadata i32* %out_regno, metadata !13959, metadata !DIExpression()), !dbg !13960
  %166 = load %struct.rtx_def*, %struct.rtx_def** %out242, align 8, !dbg !13961
  %call275 = call i32 @rhs_regno(%struct.rtx_def* %166), !dbg !13961
  store i32 %call275, i32* %out_regno, align 4, !dbg !13960
  call void @llvm.dbg.declare(metadata i32* %out_nregs, metadata !13962, metadata !DIExpression()), !dbg !13963
  %167 = load i32, i32* %out_regno, align 4, !dbg !13964
  %cmp276 = icmp slt i32 %167, 53, !dbg !13964
  br i1 %cmp276, label %cond.false279, label %cond.true278, !dbg !13965

cond.true278:                                     ; preds = %cond.end273
  br label %cond.end285, !dbg !13965

cond.false279:                                    ; preds = %cond.end273
  %168 = load i32, i32* %out_regno, align 4, !dbg !13966
  %idxprom280 = sext i32 %168 to i64, !dbg !13967
  %arrayidx281 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom280, !dbg !13967
  %169 = load i32, i32* %mode, align 4, !dbg !13968
  %idxprom282 = zext i32 %169 to i64, !dbg !13967
  %arrayidx283 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx281, i64 0, i64 %idxprom282, !dbg !13967
  %170 = load i8, i8* %arrayidx283, align 1, !dbg !13967
  %conv284 = zext i8 %170 to i32, !dbg !13967
  br label %cond.end285, !dbg !13965

cond.end285:                                      ; preds = %cond.false279, %cond.true278
  %cond286 = phi i32 [ 1, %cond.true278 ], [ %conv284, %cond.false279 ], !dbg !13965
  store i32 %cond286, i32* %out_nregs, align 4, !dbg !13963
  call void @llvm.dbg.declare(metadata i8* %piecemeal, metadata !13969, metadata !DIExpression()), !dbg !13970
  %171 = load i32, i32* %regno, align 4, !dbg !13971
  %idxprom287 = sext i32 %171 to i64, !dbg !13972
  %arrayidx288 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i64 0, i64 %idxprom287, !dbg !13972
  %172 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx288, align 8, !dbg !13972
  %173 = load i32, i32* %regno, align 4, !dbg !13973
  %idxprom289 = sext i32 %173 to i64, !dbg !13974
  %arrayidx290 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom289, !dbg !13974
  store %struct.rtx_def* %172, %struct.rtx_def** %arrayidx290, align 8, !dbg !13975
  %174 = load %struct.rtx_def*, %struct.rtx_def** %out242, align 8, !dbg !13976
  %175 = load i32, i32* %regno, align 4, !dbg !13977
  %idxprom291 = sext i32 %175 to i64, !dbg !13978
  %arrayidx292 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i64 0, i64 %idxprom291, !dbg !13978
  store %struct.rtx_def* %174, %struct.rtx_def** %arrayidx292, align 8, !dbg !13979
  %176 = load %struct.rtx_def*, %struct.rtx_def** %reg221, align 8, !dbg !13980
  %177 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !13981
  %178 = load i32, i32* %out_regno, align 4, !dbg !13982
  %idxprom293 = sext i32 %178 to i64, !dbg !13981
  %arrayidx294 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %177, i64 %idxprom293, !dbg !13981
  store %struct.rtx_def* %176, %struct.rtx_def** %arrayidx294, align 8, !dbg !13983
  %179 = load i32, i32* %out_regno, align 4, !dbg !13984
  %cmp295 = icmp slt i32 %179, 53, !dbg !13984
  br i1 %cmp295, label %land.lhs.true297, label %land.end, !dbg !13985

land.lhs.true297:                                 ; preds = %cond.end285
  %180 = load i32, i32* %nregs, align 4, !dbg !13986
  %181 = load i32, i32* %out_nregs, align 4, !dbg !13987
  %cmp298 = icmp eq i32 %180, %181, !dbg !13988
  br i1 %cmp298, label %land.rhs, label %land.end, !dbg !13989

land.rhs:                                         ; preds = %land.lhs.true297
  %182 = load i32, i32* %out_regno, align 4, !dbg !13990
  %183 = load i32, i32* %regno, align 4, !dbg !13991
  %184 = load i32, i32* %mode, align 4, !dbg !13992
  %call300 = call zeroext i8 @inherit_piecemeal_p(i32 %182, i32 %183, i32 %184), !dbg !13993
  %conv301 = zext i8 %call300 to i32, !dbg !13993
  %tobool302 = icmp ne i32 %conv301, 0, !dbg !13989
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true297, %cond.end285
  %185 = phi i1 [ false, %land.lhs.true297 ], [ false, %cond.end285 ], [ %tobool302, %land.rhs ], !dbg !13994
  %land.ext = zext i1 %185 to i32, !dbg !13989
  %conv303 = trunc i32 %land.ext to i8, !dbg !13995
  store i8 %conv303, i8* %piecemeal, align 1, !dbg !13996
  %186 = load i32, i32* %out_regno, align 4, !dbg !13997
  %cmp304 = icmp slt i32 %186, 53, !dbg !13997
  br i1 %cmp304, label %if.then306, label %if.end326, !dbg !13999

if.then306:                                       ; preds = %land.end
  store i32 1, i32* %k, align 4, !dbg !14000
  br label %for.cond307, !dbg !14002

for.cond307:                                      ; preds = %for.inc323, %if.then306
  %187 = load i32, i32* %k, align 4, !dbg !14003
  %188 = load i32, i32* %out_nregs, align 4, !dbg !14005
  %cmp308 = icmp slt i32 %187, %188, !dbg !14006
  br i1 %cmp308, label %for.body310, label %for.end325, !dbg !14007

for.body310:                                      ; preds = %for.cond307
  %189 = load i8, i8* %piecemeal, align 1, !dbg !14008
  %conv311 = zext i8 %189 to i32, !dbg !14008
  %tobool312 = icmp ne i32 %conv311, 0, !dbg !14008
  br i1 %tobool312, label %cond.true313, label %cond.false317, !dbg !14008

cond.true313:                                     ; preds = %for.body310
  %190 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !14009
  %191 = load i32, i32* %regno, align 4, !dbg !14010
  %192 = load i32, i32* %k, align 4, !dbg !14011
  %add314 = add nsw i32 %191, %192, !dbg !14012
  %idxprom315 = sext i32 %add314 to i64, !dbg !14009
  %arrayidx316 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %190, i64 %idxprom315, !dbg !14009
  %193 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx316, align 8, !dbg !14009
  br label %cond.end318, !dbg !14008

cond.false317:                                    ; preds = %for.body310
  br label %cond.end318, !dbg !14008

cond.end318:                                      ; preds = %cond.false317, %cond.true313
  %cond319 = phi %struct.rtx_def* [ %193, %cond.true313 ], [ null, %cond.false317 ], !dbg !14008
  %194 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !14013
  %195 = load i32, i32* %out_regno, align 4, !dbg !14014
  %196 = load i32, i32* %k, align 4, !dbg !14015
  %add320 = add nsw i32 %195, %196, !dbg !14016
  %idxprom321 = sext i32 %add320 to i64, !dbg !14013
  %arrayidx322 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %194, i64 %idxprom321, !dbg !14013
  store %struct.rtx_def* %cond319, %struct.rtx_def** %arrayidx322, align 8, !dbg !14017
  br label %for.inc323, !dbg !14013

for.inc323:                                       ; preds = %cond.end318
  %197 = load i32, i32* %k, align 4, !dbg !14018
  %inc324 = add nsw i32 %197, 1, !dbg !14018
  store i32 %inc324, i32* %k, align 4, !dbg !14018
  br label %for.cond307, !dbg !14019, !llvm.loop !14020

for.end325:                                       ; preds = %for.cond307
  br label %if.end326, !dbg !14021

if.end326:                                        ; preds = %for.end325, %land.end
  store i32 0, i32* %k, align 4, !dbg !14022
  br label %for.cond327, !dbg !14024

for.cond327:                                      ; preds = %for.inc359, %if.end326
  %198 = load i32, i32* %k, align 4, !dbg !14025
  %199 = load i32, i32* %nregs, align 4, !dbg !14027
  %cmp328 = icmp slt i32 %198, %199, !dbg !14028
  br i1 %cmp328, label %for.body330, label %for.end361, !dbg !14029

for.body330:                                      ; preds = %for.cond327
  %200 = load i32, i32* %regno, align 4, !dbg !14030
  %201 = load i32, i32* %k, align 4, !dbg !14030
  %add331 = add nsw i32 %200, %201, !dbg !14030
  %sh_prom332 = zext i32 %add331 to i64, !dbg !14030
  %shl333 = shl i64 1, %sh_prom332, !dbg !14030
  %neg334 = xor i64 %shl333, -1, !dbg !14030
  %202 = load i64, i64* @reg_reloaded_dead, align 8, !dbg !14030
  %and335 = and i64 %202, %neg334, !dbg !14030
  store i64 %and335, i64* @reg_reloaded_dead, align 8, !dbg !14030
  %203 = load i32, i32* %out_regno, align 4, !dbg !14032
  %cmp336 = icmp slt i32 %203, 53, !dbg !14032
  br i1 %cmp336, label %lor.lhs.false338, label %cond.true340, !dbg !14033

lor.lhs.false338:                                 ; preds = %for.body330
  %204 = load i8, i8* %piecemeal, align 1, !dbg !14034
  %tobool339 = icmp ne i8 %204, 0, !dbg !14034
  br i1 %tobool339, label %cond.false341, label %cond.true340, !dbg !14035

cond.true340:                                     ; preds = %lor.lhs.false338, %for.body330
  %205 = load i32, i32* %out_regno, align 4, !dbg !14036
  br label %cond.end343, !dbg !14035

cond.false341:                                    ; preds = %lor.lhs.false338
  %206 = load i32, i32* %out_regno, align 4, !dbg !14037
  %207 = load i32, i32* %k, align 4, !dbg !14038
  %add342 = add nsw i32 %206, %207, !dbg !14039
  br label %cond.end343, !dbg !14035

cond.end343:                                      ; preds = %cond.false341, %cond.true340
  %cond344 = phi i32 [ %205, %cond.true340 ], [ %add342, %cond.false341 ], !dbg !14035
  %208 = load i32, i32* %regno, align 4, !dbg !14040
  %209 = load i32, i32* %k, align 4, !dbg !14041
  %add345 = add nsw i32 %208, %209, !dbg !14042
  %idxprom346 = sext i32 %add345 to i64, !dbg !14043
  %arrayidx347 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i64 0, i64 %idxprom346, !dbg !14043
  store i32 %cond344, i32* %arrayidx347, align 4, !dbg !14044
  %210 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14045
  %211 = load i32, i32* %regno, align 4, !dbg !14046
  %212 = load i32, i32* %k, align 4, !dbg !14047
  %add348 = add nsw i32 %211, %212, !dbg !14048
  %idxprom349 = sext i32 %add348 to i64, !dbg !14049
  %arrayidx350 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @reg_reloaded_insn, i64 0, i64 %idxprom349, !dbg !14049
  store %struct.rtx_def* %210, %struct.rtx_def** %arrayidx350, align 8, !dbg !14050
  %213 = load i32, i32* %regno, align 4, !dbg !14051
  %214 = load i32, i32* %k, align 4, !dbg !14051
  %add351 = add nsw i32 %213, %214, !dbg !14051
  %sh_prom352 = zext i32 %add351 to i64, !dbg !14051
  %shl353 = shl i64 1, %sh_prom352, !dbg !14051
  %215 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !14051
  %or = or i64 %215, %shl353, !dbg !14051
  store i64 %or, i64* @reg_reloaded_valid, align 8, !dbg !14051
  %216 = load i32, i32* %regno, align 4, !dbg !14052
  %217 = load i32, i32* %k, align 4, !dbg !14052
  %add354 = add nsw i32 %216, %217, !dbg !14052
  %sh_prom355 = zext i32 %add354 to i64, !dbg !14052
  %shl356 = shl i64 1, %sh_prom355, !dbg !14052
  %neg357 = xor i64 %shl356, -1, !dbg !14052
  %218 = load i64, i64* @reg_reloaded_call_part_clobbered, align 8, !dbg !14052
  %and358 = and i64 %218, %neg357, !dbg !14052
  store i64 %and358, i64* @reg_reloaded_call_part_clobbered, align 8, !dbg !14052
  br label %for.inc359, !dbg !14054

for.inc359:                                       ; preds = %cond.end343
  %219 = load i32, i32* %k, align 4, !dbg !14055
  %inc360 = add nsw i32 %219, 1, !dbg !14055
  store i32 %inc360, i32* %k, align 4, !dbg !14055
  br label %for.cond327, !dbg !14056, !llvm.loop !14057

for.end361:                                       ; preds = %for.cond327
  br label %if.end362, !dbg !14059

if.end362:                                        ; preds = %for.end361, %if.then220
  br label %if.end590, !dbg !14060

if.else:                                          ; preds = %lor.lhs.false213, %for.end200
  %220 = load i32, i32* %r, align 4, !dbg !14061
  %idxprom363 = sext i32 %220 to i64, !dbg !14063
  %arrayidx364 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom363, !dbg !14063
  %out_reg365 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx364, i32 0, i32 9, !dbg !14064
  %221 = load %struct.rtx_def*, %struct.rtx_def** %out_reg365, align 8, !dbg !14064
  %cmp366 = icmp eq %struct.rtx_def* %221, null, !dbg !14065
  br i1 %cmp366, label %land.lhs.true368, label %if.end589, !dbg !14066

land.lhs.true368:                                 ; preds = %if.else
  %222 = load i32, i32* %r, align 4, !dbg !14067
  %idxprom369 = sext i32 %222 to i64, !dbg !14068
  %arrayidx370 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom369, !dbg !14068
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx370, i32 0, i32 0, !dbg !14069
  %223 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !14069
  %cmp371 = icmp ne %struct.rtx_def* %223, null, !dbg !14070
  br i1 %cmp371, label %land.lhs.true373, label %if.end589, !dbg !14071

land.lhs.true373:                                 ; preds = %land.lhs.true368
  %224 = load i32, i32* %r, align 4, !dbg !14072
  %idxprom374 = sext i32 %224 to i64, !dbg !14072
  %arrayidx375 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom374, !dbg !14072
  %in376 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx375, i32 0, i32 0, !dbg !14072
  %225 = load %struct.rtx_def*, %struct.rtx_def** %in376, align 8, !dbg !14072
  %226 = bitcast %struct.rtx_def* %225 to i32*, !dbg !14072
  %bf.load377 = load i32, i32* %226, align 8, !dbg !14072
  %bf.clear378 = and i32 %bf.load377, 65535, !dbg !14072
  %cmp379 = icmp eq i32 %bf.clear378, 37, !dbg !14072
  br i1 %cmp379, label %land.lhs.true381, label %lor.lhs.false395, !dbg !14073

land.lhs.true381:                                 ; preds = %land.lhs.true373
  %227 = load i32, i32* %r, align 4, !dbg !14074
  %idxprom382 = sext i32 %227 to i64, !dbg !14074
  %arrayidx383 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom382, !dbg !14074
  %in384 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx383, i32 0, i32 0, !dbg !14074
  %228 = load %struct.rtx_def*, %struct.rtx_def** %in384, align 8, !dbg !14074
  %call385 = call i32 @rhs_regno(%struct.rtx_def* %228), !dbg !14074
  %cmp386 = icmp ult i32 %call385, 53, !dbg !14074
  br i1 %cmp386, label %lor.lhs.false395, label %land.lhs.true388, !dbg !14075

land.lhs.true388:                                 ; preds = %land.lhs.true381
  %229 = load i32, i32* %r, align 4, !dbg !14076
  %idxprom389 = sext i32 %229 to i64, !dbg !14076
  %arrayidx390 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom389, !dbg !14076
  %in391 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx390, i32 0, i32 0, !dbg !14076
  %230 = load %struct.rtx_def*, %struct.rtx_def** %in391, align 8, !dbg !14076
  %call392 = call i32 @rhs_regno(%struct.rtx_def* %230), !dbg !14076
  %call393 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* @reg_has_output_reload, i32 %call392), !dbg !14076
  %tobool394 = icmp ne i32 %call393, 0, !dbg !14076
  br i1 %tobool394, label %lor.lhs.false395, label %land.lhs.true410, !dbg !14077

lor.lhs.false395:                                 ; preds = %land.lhs.true388, %land.lhs.true381, %land.lhs.true373
  %231 = load i32, i32* %r, align 4, !dbg !14078
  %idxprom396 = sext i32 %231 to i64, !dbg !14078
  %arrayidx397 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom396, !dbg !14078
  %in_reg398 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx397, i32 0, i32 8, !dbg !14078
  %232 = load %struct.rtx_def*, %struct.rtx_def** %in_reg398, align 8, !dbg !14078
  %233 = bitcast %struct.rtx_def* %232 to i32*, !dbg !14078
  %bf.load399 = load i32, i32* %233, align 8, !dbg !14078
  %bf.clear400 = and i32 %bf.load399, 65535, !dbg !14078
  %cmp401 = icmp eq i32 %bf.clear400, 37, !dbg !14078
  br i1 %cmp401, label %land.lhs.true403, label %if.end589, !dbg !14079

land.lhs.true403:                                 ; preds = %lor.lhs.false395
  %234 = load i32, i32* %r, align 4, !dbg !14080
  %idxprom404 = sext i32 %234 to i64, !dbg !14080
  %arrayidx405 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom404, !dbg !14080
  %in_reg406 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx405, i32 0, i32 8, !dbg !14080
  %235 = load %struct.rtx_def*, %struct.rtx_def** %in_reg406, align 8, !dbg !14080
  %call407 = call i32 @rhs_regno(%struct.rtx_def* %235), !dbg !14080
  %call408 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* @reg_has_output_reload, i32 %call407), !dbg !14080
  %tobool409 = icmp ne i32 %call408, 0, !dbg !14080
  br i1 %tobool409, label %if.end589, label %land.lhs.true410, !dbg !14081

land.lhs.true410:                                 ; preds = %land.lhs.true403, %land.lhs.true388
  %236 = load i32, i32* %r, align 4, !dbg !14082
  %idxprom411 = sext i32 %236 to i64, !dbg !14083
  %arrayidx412 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_reg_rtx_for_input, i64 0, i64 %idxprom411, !dbg !14083
  %237 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx412, align 8, !dbg !14083
  %238 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14084
  %u413 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %238, i32 0, i32 1, !dbg !14084
  %fld414 = bitcast %union.u* %u413 to [1 x %union.rtunion_def]*, !dbg !14084
  %arrayidx415 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld414, i64 0, i64 5, !dbg !14084
  %rt_rtx416 = bitcast %union.rtunion_def* %arrayidx415 to %struct.rtx_def**, !dbg !14084
  %239 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx416, align 8, !dbg !14084
  %call417 = call i32 @reg_set_p(%struct.rtx_def* %237, %struct.rtx_def* %239), !dbg !14085
  %tobool418 = icmp ne i32 %call417, 0, !dbg !14085
  br i1 %tobool418, label %if.end589, label %if.then419, !dbg !14086

if.then419:                                       ; preds = %land.lhs.true410
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg420, metadata !14087, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.declare(metadata i32* %mode421, metadata !14090, metadata !DIExpression()), !dbg !14091
  call void @llvm.dbg.declare(metadata i32* %regno422, metadata !14092, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.declare(metadata i32* %nregs423, metadata !14094, metadata !DIExpression()), !dbg !14095
  %240 = load i32, i32* %r, align 4, !dbg !14096
  %idxprom424 = sext i32 %240 to i64, !dbg !14097
  %arrayidx425 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_reg_rtx_for_input, i64 0, i64 %idxprom424, !dbg !14097
  %241 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx425, align 8, !dbg !14097
  store %struct.rtx_def* %241, %struct.rtx_def** %reg420, align 8, !dbg !14098
  %242 = load %struct.rtx_def*, %struct.rtx_def** %reg420, align 8, !dbg !14099
  %243 = bitcast %struct.rtx_def* %242 to i32*, !dbg !14099
  %bf.load426 = load i32, i32* %243, align 8, !dbg !14099
  %bf.lshr427 = lshr i32 %bf.load426, 16, !dbg !14099
  %bf.clear428 = and i32 %bf.lshr427, 255, !dbg !14099
  store i32 %bf.clear428, i32* %mode421, align 4, !dbg !14100
  %244 = load %struct.rtx_def*, %struct.rtx_def** %reg420, align 8, !dbg !14101
  %call429 = call i32 @rhs_regno(%struct.rtx_def* %244), !dbg !14101
  store i32 %call429, i32* %regno422, align 4, !dbg !14102
  %245 = load i32, i32* %regno422, align 4, !dbg !14103
  %idxprom430 = sext i32 %245 to i64, !dbg !14104
  %arrayidx431 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom430, !dbg !14104
  %246 = load i32, i32* %mode421, align 4, !dbg !14105
  %idxprom432 = zext i32 %246 to i64, !dbg !14104
  %arrayidx433 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx431, i64 0, i64 %idxprom432, !dbg !14104
  %247 = load i8, i8* %arrayidx433, align 1, !dbg !14104
  %conv434 = zext i8 %247 to i32, !dbg !14104
  store i32 %conv434, i32* %nregs423, align 4, !dbg !14106
  %248 = load i32, i32* %regno422, align 4, !dbg !14107
  %249 = load i32, i32* %nregs423, align 4, !dbg !14109
  %250 = load i32, i32* %r, align 4, !dbg !14110
  %idxprom435 = sext i32 %250 to i64, !dbg !14111
  %arrayidx436 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom435, !dbg !14111
  %opnum437 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx436, i32 0, i32 12, !dbg !14112
  %251 = load i32, i32* %opnum437, align 8, !dbg !14112
  %252 = load i32, i32* %r, align 4, !dbg !14113
  %idxprom438 = sext i32 %252 to i64, !dbg !14114
  %arrayidx439 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom438, !dbg !14114
  %when_needed440 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx439, i32 0, i32 17, !dbg !14115
  %253 = load i32, i32* %when_needed440, align 4, !dbg !14115
  %call441 = call zeroext i8 @reload_regs_reach_end_p(i32 %248, i32 %249, i32 %251, i32 %253), !dbg !14116
  %tobool442 = icmp ne i8 %call441, 0, !dbg !14116
  br i1 %tobool442, label %if.then443, label %if.end588, !dbg !14117

if.then443:                                       ; preds = %if.then419
  call void @llvm.dbg.declare(metadata i32* %in_regno, metadata !14118, metadata !DIExpression()), !dbg !14120
  call void @llvm.dbg.declare(metadata i32* %in_nregs, metadata !14121, metadata !DIExpression()), !dbg !14122
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in444, metadata !14123, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.declare(metadata i8* %piecemeal445, metadata !14125, metadata !DIExpression()), !dbg !14126
  %254 = load i32, i32* %r, align 4, !dbg !14127
  %idxprom446 = sext i32 %254 to i64, !dbg !14127
  %arrayidx447 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom446, !dbg !14127
  %in448 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx447, i32 0, i32 0, !dbg !14127
  %255 = load %struct.rtx_def*, %struct.rtx_def** %in448, align 8, !dbg !14127
  %256 = bitcast %struct.rtx_def* %255 to i32*, !dbg !14127
  %bf.load449 = load i32, i32* %256, align 8, !dbg !14127
  %bf.clear450 = and i32 %bf.load449, 65535, !dbg !14127
  %cmp451 = icmp eq i32 %bf.clear450, 37, !dbg !14127
  br i1 %cmp451, label %land.lhs.true453, label %if.else464, !dbg !14129

land.lhs.true453:                                 ; preds = %if.then443
  %257 = load i32, i32* %r, align 4, !dbg !14130
  %idxprom454 = sext i32 %257 to i64, !dbg !14130
  %arrayidx455 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom454, !dbg !14130
  %in456 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx455, i32 0, i32 0, !dbg !14130
  %258 = load %struct.rtx_def*, %struct.rtx_def** %in456, align 8, !dbg !14130
  %call457 = call i32 @rhs_regno(%struct.rtx_def* %258), !dbg !14130
  %cmp458 = icmp uge i32 %call457, 53, !dbg !14131
  br i1 %cmp458, label %if.then460, label %if.else464, !dbg !14132

if.then460:                                       ; preds = %land.lhs.true453
  %259 = load i32, i32* %r, align 4, !dbg !14133
  %idxprom461 = sext i32 %259 to i64, !dbg !14134
  %arrayidx462 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom461, !dbg !14134
  %in463 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx462, i32 0, i32 0, !dbg !14135
  %260 = load %struct.rtx_def*, %struct.rtx_def** %in463, align 8, !dbg !14135
  store %struct.rtx_def* %260, %struct.rtx_def** %in444, align 8, !dbg !14136
  br label %if.end485, !dbg !14137

if.else464:                                       ; preds = %land.lhs.true453, %if.then443
  %261 = load i32, i32* %r, align 4, !dbg !14138
  %idxprom465 = sext i32 %261 to i64, !dbg !14138
  %arrayidx466 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom465, !dbg !14138
  %in_reg467 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx466, i32 0, i32 8, !dbg !14138
  %262 = load %struct.rtx_def*, %struct.rtx_def** %in_reg467, align 8, !dbg !14138
  %263 = bitcast %struct.rtx_def* %262 to i32*, !dbg !14138
  %bf.load468 = load i32, i32* %263, align 8, !dbg !14138
  %bf.clear469 = and i32 %bf.load468, 65535, !dbg !14138
  %cmp470 = icmp eq i32 %bf.clear469, 37, !dbg !14138
  br i1 %cmp470, label %if.then472, label %if.else476, !dbg !14140

if.then472:                                       ; preds = %if.else464
  %264 = load i32, i32* %r, align 4, !dbg !14141
  %idxprom473 = sext i32 %264 to i64, !dbg !14142
  %arrayidx474 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom473, !dbg !14142
  %in_reg475 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx474, i32 0, i32 8, !dbg !14143
  %265 = load %struct.rtx_def*, %struct.rtx_def** %in_reg475, align 8, !dbg !14143
  store %struct.rtx_def* %265, %struct.rtx_def** %in444, align 8, !dbg !14144
  br label %if.end484, !dbg !14145

if.else476:                                       ; preds = %if.else464
  %266 = load i32, i32* %r, align 4, !dbg !14146
  %idxprom477 = sext i32 %266 to i64, !dbg !14146
  %arrayidx478 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom477, !dbg !14146
  %in_reg479 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx478, i32 0, i32 8, !dbg !14146
  %267 = load %struct.rtx_def*, %struct.rtx_def** %in_reg479, align 8, !dbg !14146
  %u480 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %267, i32 0, i32 1, !dbg !14146
  %fld481 = bitcast %union.u* %u480 to [1 x %union.rtunion_def]*, !dbg !14146
  %arrayidx482 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld481, i64 0, i64 0, !dbg !14146
  %rt_rtx483 = bitcast %union.rtunion_def* %arrayidx482 to %struct.rtx_def**, !dbg !14146
  %268 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx483, align 8, !dbg !14146
  store %struct.rtx_def* %268, %struct.rtx_def** %in444, align 8, !dbg !14147
  br label %if.end484

if.end484:                                        ; preds = %if.else476, %if.then472
  br label %if.end485

if.end485:                                        ; preds = %if.end484, %if.then460
  %269 = load %struct.rtx_def*, %struct.rtx_def** %in444, align 8, !dbg !14148
  %call486 = call i32 @rhs_regno(%struct.rtx_def* %269), !dbg !14148
  store i32 %call486, i32* %in_regno, align 4, !dbg !14149
  %270 = load i32, i32* %in_regno, align 4, !dbg !14150
  %cmp487 = icmp slt i32 %270, 53, !dbg !14150
  br i1 %cmp487, label %cond.false490, label %cond.true489, !dbg !14151

cond.true489:                                     ; preds = %if.end485
  br label %cond.end496, !dbg !14151

cond.false490:                                    ; preds = %if.end485
  %271 = load i32, i32* %in_regno, align 4, !dbg !14152
  %idxprom491 = sext i32 %271 to i64, !dbg !14153
  %arrayidx492 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom491, !dbg !14153
  %272 = load i32, i32* %mode421, align 4, !dbg !14154
  %idxprom493 = zext i32 %272 to i64, !dbg !14153
  %arrayidx494 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx492, i64 0, i64 %idxprom493, !dbg !14153
  %273 = load i8, i8* %arrayidx494, align 1, !dbg !14153
  %conv495 = zext i8 %273 to i32, !dbg !14153
  br label %cond.end496, !dbg !14151

cond.end496:                                      ; preds = %cond.false490, %cond.true489
  %cond497 = phi i32 [ 1, %cond.true489 ], [ %conv495, %cond.false490 ], !dbg !14151
  store i32 %cond497, i32* %in_nregs, align 4, !dbg !14155
  %274 = load %struct.rtx_def*, %struct.rtx_def** %reg420, align 8, !dbg !14156
  %275 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !14157
  %276 = load i32, i32* %in_regno, align 4, !dbg !14158
  %idxprom498 = sext i32 %276 to i64, !dbg !14157
  %arrayidx499 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %275, i64 %idxprom498, !dbg !14157
  store %struct.rtx_def* %274, %struct.rtx_def** %arrayidx499, align 8, !dbg !14159
  %277 = load i32, i32* %in_regno, align 4, !dbg !14160
  %cmp500 = icmp slt i32 %277, 53, !dbg !14160
  br i1 %cmp500, label %land.lhs.true502, label %land.end509, !dbg !14161

land.lhs.true502:                                 ; preds = %cond.end496
  %278 = load i32, i32* %nregs423, align 4, !dbg !14162
  %279 = load i32, i32* %in_nregs, align 4, !dbg !14163
  %cmp503 = icmp eq i32 %278, %279, !dbg !14164
  br i1 %cmp503, label %land.rhs505, label %land.end509, !dbg !14165

land.rhs505:                                      ; preds = %land.lhs.true502
  %280 = load i32, i32* %regno422, align 4, !dbg !14166
  %281 = load i32, i32* %in_regno, align 4, !dbg !14167
  %282 = load i32, i32* %mode421, align 4, !dbg !14168
  %call506 = call zeroext i8 @inherit_piecemeal_p(i32 %280, i32 %281, i32 %282), !dbg !14169
  %conv507 = zext i8 %call506 to i32, !dbg !14169
  %tobool508 = icmp ne i32 %conv507, 0, !dbg !14165
  br label %land.end509

land.end509:                                      ; preds = %land.rhs505, %land.lhs.true502, %cond.end496
  %283 = phi i1 [ false, %land.lhs.true502 ], [ false, %cond.end496 ], [ %tobool508, %land.rhs505 ], !dbg !14170
  %land.ext510 = zext i1 %283 to i32, !dbg !14165
  %conv511 = trunc i32 %land.ext510 to i8, !dbg !14171
  store i8 %conv511, i8* %piecemeal445, align 1, !dbg !14172
  %284 = load i32, i32* %in_regno, align 4, !dbg !14173
  %cmp512 = icmp slt i32 %284, 53, !dbg !14173
  br i1 %cmp512, label %if.then514, label %if.end534, !dbg !14175

if.then514:                                       ; preds = %land.end509
  store i32 1, i32* %k, align 4, !dbg !14176
  br label %for.cond515, !dbg !14178

for.cond515:                                      ; preds = %for.inc531, %if.then514
  %285 = load i32, i32* %k, align 4, !dbg !14179
  %286 = load i32, i32* %in_nregs, align 4, !dbg !14181
  %cmp516 = icmp slt i32 %285, %286, !dbg !14182
  br i1 %cmp516, label %for.body518, label %for.end533, !dbg !14183

for.body518:                                      ; preds = %for.cond515
  %287 = load i8, i8* %piecemeal445, align 1, !dbg !14184
  %conv519 = zext i8 %287 to i32, !dbg !14184
  %tobool520 = icmp ne i32 %conv519, 0, !dbg !14184
  br i1 %tobool520, label %cond.true521, label %cond.false525, !dbg !14184

cond.true521:                                     ; preds = %for.body518
  %288 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !14185
  %289 = load i32, i32* %regno422, align 4, !dbg !14186
  %290 = load i32, i32* %k, align 4, !dbg !14187
  %add522 = add nsw i32 %289, %290, !dbg !14188
  %idxprom523 = sext i32 %add522 to i64, !dbg !14185
  %arrayidx524 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %288, i64 %idxprom523, !dbg !14185
  %291 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx524, align 8, !dbg !14185
  br label %cond.end526, !dbg !14184

cond.false525:                                    ; preds = %for.body518
  br label %cond.end526, !dbg !14184

cond.end526:                                      ; preds = %cond.false525, %cond.true521
  %cond527 = phi %struct.rtx_def* [ %291, %cond.true521 ], [ null, %cond.false525 ], !dbg !14184
  %292 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !14189
  %293 = load i32, i32* %in_regno, align 4, !dbg !14190
  %294 = load i32, i32* %k, align 4, !dbg !14191
  %add528 = add nsw i32 %293, %294, !dbg !14192
  %idxprom529 = sext i32 %add528 to i64, !dbg !14189
  %arrayidx530 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %292, i64 %idxprom529, !dbg !14189
  store %struct.rtx_def* %cond527, %struct.rtx_def** %arrayidx530, align 8, !dbg !14193
  br label %for.inc531, !dbg !14189

for.inc531:                                       ; preds = %cond.end526
  %295 = load i32, i32* %k, align 4, !dbg !14194
  %inc532 = add nsw i32 %295, 1, !dbg !14194
  store i32 %inc532, i32* %k, align 4, !dbg !14194
  br label %for.cond515, !dbg !14195, !llvm.loop !14196

for.end533:                                       ; preds = %for.cond515
  br label %if.end534, !dbg !14197

if.end534:                                        ; preds = %for.end533, %land.end509
  %296 = load i32, i32* %r, align 4, !dbg !14198
  %idxprom535 = sext i32 %296 to i64, !dbg !14200
  %arrayidx536 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom535, !dbg !14200
  %297 = load i8, i8* %arrayidx536, align 1, !dbg !14200
  %tobool537 = icmp ne i8 %297, 0, !dbg !14200
  br i1 %tobool537, label %lor.lhs.false538, label %if.then548, !dbg !14201

lor.lhs.false538:                                 ; preds = %if.end534
  %298 = load i32, i32* %r, align 4, !dbg !14202
  %idxprom539 = sext i32 %298 to i64, !dbg !14203
  %arrayidx540 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom539, !dbg !14203
  %out541 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx540, i32 0, i32 1, !dbg !14204
  %299 = load %struct.rtx_def*, %struct.rtx_def** %out541, align 8, !dbg !14204
  %tobool542 = icmp ne %struct.rtx_def* %299, null, !dbg !14203
  br i1 %tobool542, label %land.lhs.true543, label %if.end551, !dbg !14205

land.lhs.true543:                                 ; preds = %lor.lhs.false538
  %300 = load i32, i32* %r, align 4, !dbg !14206
  %idxprom544 = sext i32 %300 to i64, !dbg !14207
  %arrayidx545 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom544, !dbg !14207
  %out_reg546 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx545, i32 0, i32 9, !dbg !14208
  %301 = load %struct.rtx_def*, %struct.rtx_def** %out_reg546, align 8, !dbg !14208
  %tobool547 = icmp ne %struct.rtx_def* %301, null, !dbg !14207
  br i1 %tobool547, label %if.end551, label %if.then548, !dbg !14209

if.then548:                                       ; preds = %land.lhs.true543, %if.end534
  %302 = load i32, i32* %regno422, align 4, !dbg !14210
  %idxprom549 = sext i32 %302 to i64, !dbg !14211
  %arrayidx550 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom549, !dbg !14211
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx550, align 8, !dbg !14212
  br label %if.end551, !dbg !14211

if.end551:                                        ; preds = %if.then548, %land.lhs.true543, %lor.lhs.false538
  store i32 0, i32* %k, align 4, !dbg !14213
  br label %for.cond552, !dbg !14215

for.cond552:                                      ; preds = %for.inc585, %if.end551
  %303 = load i32, i32* %k, align 4, !dbg !14216
  %304 = load i32, i32* %nregs423, align 4, !dbg !14218
  %cmp553 = icmp slt i32 %303, %304, !dbg !14219
  br i1 %cmp553, label %for.body555, label %for.end587, !dbg !14220

for.body555:                                      ; preds = %for.cond552
  %305 = load i32, i32* %regno422, align 4, !dbg !14221
  %306 = load i32, i32* %k, align 4, !dbg !14221
  %add556 = add nsw i32 %305, %306, !dbg !14221
  %sh_prom557 = zext i32 %add556 to i64, !dbg !14221
  %shl558 = shl i64 1, %sh_prom557, !dbg !14221
  %neg559 = xor i64 %shl558, -1, !dbg !14221
  %307 = load i64, i64* @reg_reloaded_dead, align 8, !dbg !14221
  %and560 = and i64 %307, %neg559, !dbg !14221
  store i64 %and560, i64* @reg_reloaded_dead, align 8, !dbg !14221
  %308 = load i32, i32* %in_regno, align 4, !dbg !14223
  %cmp561 = icmp slt i32 %308, 53, !dbg !14223
  br i1 %cmp561, label %lor.lhs.false563, label %cond.true565, !dbg !14224

lor.lhs.false563:                                 ; preds = %for.body555
  %309 = load i8, i8* %piecemeal445, align 1, !dbg !14225
  %tobool564 = icmp ne i8 %309, 0, !dbg !14225
  br i1 %tobool564, label %cond.false566, label %cond.true565, !dbg !14226

cond.true565:                                     ; preds = %lor.lhs.false563, %for.body555
  %310 = load i32, i32* %in_regno, align 4, !dbg !14227
  br label %cond.end568, !dbg !14226

cond.false566:                                    ; preds = %lor.lhs.false563
  %311 = load i32, i32* %in_regno, align 4, !dbg !14228
  %312 = load i32, i32* %k, align 4, !dbg !14229
  %add567 = add nsw i32 %311, %312, !dbg !14230
  br label %cond.end568, !dbg !14226

cond.end568:                                      ; preds = %cond.false566, %cond.true565
  %cond569 = phi i32 [ %310, %cond.true565 ], [ %add567, %cond.false566 ], !dbg !14226
  %313 = load i32, i32* %regno422, align 4, !dbg !14231
  %314 = load i32, i32* %k, align 4, !dbg !14232
  %add570 = add nsw i32 %313, %314, !dbg !14233
  %idxprom571 = sext i32 %add570 to i64, !dbg !14234
  %arrayidx572 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i64 0, i64 %idxprom571, !dbg !14234
  store i32 %cond569, i32* %arrayidx572, align 4, !dbg !14235
  %315 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14236
  %316 = load i32, i32* %regno422, align 4, !dbg !14237
  %317 = load i32, i32* %k, align 4, !dbg !14238
  %add573 = add nsw i32 %316, %317, !dbg !14239
  %idxprom574 = sext i32 %add573 to i64, !dbg !14240
  %arrayidx575 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @reg_reloaded_insn, i64 0, i64 %idxprom574, !dbg !14240
  store %struct.rtx_def* %315, %struct.rtx_def** %arrayidx575, align 8, !dbg !14241
  %318 = load i32, i32* %regno422, align 4, !dbg !14242
  %319 = load i32, i32* %k, align 4, !dbg !14242
  %add576 = add nsw i32 %318, %319, !dbg !14242
  %sh_prom577 = zext i32 %add576 to i64, !dbg !14242
  %shl578 = shl i64 1, %sh_prom577, !dbg !14242
  %320 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !14242
  %or579 = or i64 %320, %shl578, !dbg !14242
  store i64 %or579, i64* @reg_reloaded_valid, align 8, !dbg !14242
  %321 = load i32, i32* %regno422, align 4, !dbg !14243
  %322 = load i32, i32* %k, align 4, !dbg !14243
  %add580 = add nsw i32 %321, %322, !dbg !14243
  %sh_prom581 = zext i32 %add580 to i64, !dbg !14243
  %shl582 = shl i64 1, %sh_prom581, !dbg !14243
  %neg583 = xor i64 %shl582, -1, !dbg !14243
  %323 = load i64, i64* @reg_reloaded_call_part_clobbered, align 8, !dbg !14243
  %and584 = and i64 %323, %neg583, !dbg !14243
  store i64 %and584, i64* @reg_reloaded_call_part_clobbered, align 8, !dbg !14243
  br label %for.inc585, !dbg !14245

for.inc585:                                       ; preds = %cond.end568
  %324 = load i32, i32* %k, align 4, !dbg !14246
  %inc586 = add nsw i32 %324, 1, !dbg !14246
  store i32 %inc586, i32* %k, align 4, !dbg !14246
  br label %for.cond552, !dbg !14247, !llvm.loop !14248

for.end587:                                       ; preds = %for.cond552
  br label %if.end588, !dbg !14250

if.end588:                                        ; preds = %for.end587, %if.then419
  br label %if.end589, !dbg !14251

if.end589:                                        ; preds = %if.end588, %land.lhs.true410, %land.lhs.true403, %lor.lhs.false395, %land.lhs.true368, %if.else
  br label %if.end590

if.end590:                                        ; preds = %if.end589, %if.end362
  br label %if.end591, !dbg !14252

if.end591:                                        ; preds = %if.end590, %land.lhs.true166, %if.end163
  %325 = load i32, i32* %i104, align 4, !dbg !14253
  %cmp592 = icmp slt i32 %325, 0, !dbg !14255
  br i1 %cmp592, label %land.lhs.true594, label %if.end885, !dbg !14256

land.lhs.true594:                                 ; preds = %if.end591
  %326 = load i32, i32* %r, align 4, !dbg !14257
  %idxprom595 = sext i32 %326 to i64, !dbg !14258
  %arrayidx596 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom595, !dbg !14258
  %out597 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx596, i32 0, i32 1, !dbg !14259
  %327 = load %struct.rtx_def*, %struct.rtx_def** %out597, align 8, !dbg !14259
  %cmp598 = icmp ne %struct.rtx_def* %327, null, !dbg !14260
  br i1 %cmp598, label %land.lhs.true600, label %lor.lhs.false624, !dbg !14261

land.lhs.true600:                                 ; preds = %land.lhs.true594
  %328 = load i32, i32* %r, align 4, !dbg !14262
  %idxprom601 = sext i32 %328 to i64, !dbg !14262
  %arrayidx602 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom601, !dbg !14262
  %out603 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx602, i32 0, i32 1, !dbg !14262
  %329 = load %struct.rtx_def*, %struct.rtx_def** %out603, align 8, !dbg !14262
  %330 = bitcast %struct.rtx_def* %329 to i32*, !dbg !14262
  %bf.load604 = load i32, i32* %330, align 8, !dbg !14262
  %bf.clear605 = and i32 %bf.load604, 65535, !dbg !14262
  %cmp606 = icmp eq i32 %bf.clear605, 37, !dbg !14262
  br i1 %cmp606, label %if.then643, label %lor.lhs.false608, !dbg !14263

lor.lhs.false608:                                 ; preds = %land.lhs.true600
  %331 = load i32, i32* %r, align 4, !dbg !14264
  %idxprom609 = sext i32 %331 to i64, !dbg !14264
  %arrayidx610 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom609, !dbg !14264
  %out611 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx610, i32 0, i32 1, !dbg !14264
  %332 = load %struct.rtx_def*, %struct.rtx_def** %out611, align 8, !dbg !14264
  %333 = bitcast %struct.rtx_def* %332 to i32*, !dbg !14264
  %bf.load612 = load i32, i32* %333, align 8, !dbg !14264
  %bf.clear613 = and i32 %bf.load612, 65535, !dbg !14264
  %cmp614 = icmp eq i32 %bf.clear613, 43, !dbg !14264
  br i1 %cmp614, label %land.lhs.true616, label %lor.lhs.false624, !dbg !14265

land.lhs.true616:                                 ; preds = %lor.lhs.false608
  %334 = load i32, i32* %r, align 4, !dbg !14266
  %idxprom617 = sext i32 %334 to i64, !dbg !14266
  %arrayidx618 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom617, !dbg !14266
  %out_reg619 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx618, i32 0, i32 9, !dbg !14266
  %335 = load %struct.rtx_def*, %struct.rtx_def** %out_reg619, align 8, !dbg !14266
  %336 = bitcast %struct.rtx_def* %335 to i32*, !dbg !14266
  %bf.load620 = load i32, i32* %336, align 8, !dbg !14266
  %bf.clear621 = and i32 %bf.load620, 65535, !dbg !14266
  %cmp622 = icmp eq i32 %bf.clear621, 37, !dbg !14266
  br i1 %cmp622, label %if.then643, label %lor.lhs.false624, !dbg !14267

lor.lhs.false624:                                 ; preds = %land.lhs.true616, %lor.lhs.false608, %land.lhs.true594
  %337 = load i32, i32* %r, align 4, !dbg !14268
  %idxprom625 = sext i32 %337 to i64, !dbg !14269
  %arrayidx626 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom625, !dbg !14269
  %out627 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx626, i32 0, i32 1, !dbg !14270
  %338 = load %struct.rtx_def*, %struct.rtx_def** %out627, align 8, !dbg !14270
  %cmp628 = icmp eq %struct.rtx_def* %338, null, !dbg !14271
  br i1 %cmp628, label %land.lhs.true630, label %if.end885, !dbg !14272

land.lhs.true630:                                 ; preds = %lor.lhs.false624
  %339 = load i32, i32* %r, align 4, !dbg !14273
  %idxprom631 = sext i32 %339 to i64, !dbg !14274
  %arrayidx632 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom631, !dbg !14274
  %out_reg633 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx632, i32 0, i32 9, !dbg !14275
  %340 = load %struct.rtx_def*, %struct.rtx_def** %out_reg633, align 8, !dbg !14275
  %tobool634 = icmp ne %struct.rtx_def* %340, null, !dbg !14274
  br i1 %tobool634, label %land.lhs.true635, label %if.end885, !dbg !14276

land.lhs.true635:                                 ; preds = %land.lhs.true630
  %341 = load i32, i32* %r, align 4, !dbg !14277
  %idxprom636 = sext i32 %341 to i64, !dbg !14277
  %arrayidx637 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom636, !dbg !14277
  %out_reg638 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx637, i32 0, i32 9, !dbg !14277
  %342 = load %struct.rtx_def*, %struct.rtx_def** %out_reg638, align 8, !dbg !14277
  %343 = bitcast %struct.rtx_def* %342 to i32*, !dbg !14277
  %bf.load639 = load i32, i32* %343, align 8, !dbg !14277
  %bf.clear640 = and i32 %bf.load639, 65535, !dbg !14277
  %cmp641 = icmp eq i32 %bf.clear640, 37, !dbg !14277
  br i1 %cmp641, label %if.then643, label %if.end885, !dbg !14278

if.then643:                                       ; preds = %land.lhs.true635, %land.lhs.true616, %land.lhs.true600
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out644, metadata !14279, metadata !DIExpression()), !dbg !14281
  %344 = load i32, i32* %r, align 4, !dbg !14282
  %idxprom645 = sext i32 %344 to i64, !dbg !14283
  %arrayidx646 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom645, !dbg !14283
  %out647 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx646, i32 0, i32 1, !dbg !14284
  %345 = load %struct.rtx_def*, %struct.rtx_def** %out647, align 8, !dbg !14284
  %tobool648 = icmp ne %struct.rtx_def* %345, null, !dbg !14283
  br i1 %tobool648, label %land.lhs.true649, label %cond.false661, !dbg !14285

land.lhs.true649:                                 ; preds = %if.then643
  %346 = load i32, i32* %r, align 4, !dbg !14286
  %idxprom650 = sext i32 %346 to i64, !dbg !14286
  %arrayidx651 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom650, !dbg !14286
  %out652 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx651, i32 0, i32 1, !dbg !14286
  %347 = load %struct.rtx_def*, %struct.rtx_def** %out652, align 8, !dbg !14286
  %348 = bitcast %struct.rtx_def* %347 to i32*, !dbg !14286
  %bf.load653 = load i32, i32* %348, align 8, !dbg !14286
  %bf.clear654 = and i32 %bf.load653, 65535, !dbg !14286
  %cmp655 = icmp eq i32 %bf.clear654, 37, !dbg !14286
  br i1 %cmp655, label %cond.true657, label %cond.false661, !dbg !14287

cond.true657:                                     ; preds = %land.lhs.true649
  %349 = load i32, i32* %r, align 4, !dbg !14288
  %idxprom658 = sext i32 %349 to i64, !dbg !14289
  %arrayidx659 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom658, !dbg !14289
  %out660 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx659, i32 0, i32 1, !dbg !14290
  %350 = load %struct.rtx_def*, %struct.rtx_def** %out660, align 8, !dbg !14290
  br label %cond.end665, !dbg !14287

cond.false661:                                    ; preds = %land.lhs.true649, %if.then643
  %351 = load i32, i32* %r, align 4, !dbg !14291
  %idxprom662 = sext i32 %351 to i64, !dbg !14292
  %arrayidx663 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom662, !dbg !14292
  %out_reg664 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx663, i32 0, i32 9, !dbg !14293
  %352 = load %struct.rtx_def*, %struct.rtx_def** %out_reg664, align 8, !dbg !14293
  br label %cond.end665, !dbg !14287

cond.end665:                                      ; preds = %cond.false661, %cond.true657
  %cond666 = phi %struct.rtx_def* [ %350, %cond.true657 ], [ %352, %cond.false661 ], !dbg !14287
  store %struct.rtx_def* %cond666, %struct.rtx_def** %out644, align 8, !dbg !14281
  call void @llvm.dbg.declare(metadata i32* %out_regno667, metadata !14294, metadata !DIExpression()), !dbg !14295
  %353 = load %struct.rtx_def*, %struct.rtx_def** %out644, align 8, !dbg !14296
  %call668 = call i32 @rhs_regno(%struct.rtx_def* %353), !dbg !14296
  store i32 %call668, i32* %out_regno667, align 4, !dbg !14295
  call void @llvm.dbg.declare(metadata i32* %mode669, metadata !14297, metadata !DIExpression()), !dbg !14298
  %354 = load %struct.rtx_def*, %struct.rtx_def** %out644, align 8, !dbg !14299
  %355 = bitcast %struct.rtx_def* %354 to i32*, !dbg !14299
  %bf.load670 = load i32, i32* %355, align 8, !dbg !14299
  %bf.lshr671 = lshr i32 %bf.load670, 16, !dbg !14299
  %bf.clear672 = and i32 %bf.lshr671, 255, !dbg !14299
  store i32 %bf.clear672, i32* %mode669, align 4, !dbg !14298
  %356 = load i32, i32* %r, align 4, !dbg !14300
  %idxprom673 = sext i32 %356 to i64, !dbg !14302
  %arrayidx674 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom673, !dbg !14302
  %reg_rtx675 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx674, i32 0, i32 11, !dbg !14303
  %357 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx675, align 8, !dbg !14303
  %tobool676 = icmp ne %struct.rtx_def* %357, null, !dbg !14302
  br i1 %tobool676, label %land.lhs.true677, label %if.end687, !dbg !14304

land.lhs.true677:                                 ; preds = %cond.end665
  %358 = load i32, i32* %r, align 4, !dbg !14305
  %idxprom678 = sext i32 %358 to i64, !dbg !14306
  %arrayidx679 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom678, !dbg !14306
  %reg_rtx680 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx679, i32 0, i32 11, !dbg !14307
  %359 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx680, align 8, !dbg !14307
  %360 = load %struct.rtx_def*, %struct.rtx_def** %out644, align 8, !dbg !14308
  %cmp681 = icmp ne %struct.rtx_def* %359, %360, !dbg !14309
  br i1 %cmp681, label %if.then683, label %if.end687, !dbg !14310

if.then683:                                       ; preds = %land.lhs.true677
  %361 = load i32, i32* %r, align 4, !dbg !14311
  %idxprom684 = sext i32 %361 to i64, !dbg !14312
  %arrayidx685 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom684, !dbg !14312
  %reg_rtx686 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx685, i32 0, i32 11, !dbg !14313
  %362 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx686, align 8, !dbg !14313
  call void @forget_old_reloads_1(%struct.rtx_def* %362, %struct.rtx_def* null, i8* null), !dbg !14314
  br label %if.end687, !dbg !14314

if.end687:                                        ; preds = %if.then683, %land.lhs.true677, %cond.end665
  %363 = load i32, i32* %out_regno667, align 4, !dbg !14315
  %cmp688 = icmp slt i32 %363, 53, !dbg !14315
  br i1 %cmp688, label %if.else866, label %if.then690, !dbg !14317

if.then690:                                       ; preds = %if.end687
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src_reg, metadata !14318, metadata !DIExpression()), !dbg !14320
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %store_insn, metadata !14321, metadata !DIExpression()), !dbg !14322
  store %struct.rtx_def* null, %struct.rtx_def** %store_insn, align 8, !dbg !14322
  %364 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !14323
  %365 = load i32, i32* %out_regno667, align 4, !dbg !14324
  %idxprom691 = sext i32 %365 to i64, !dbg !14323
  %arrayidx692 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %364, i64 %idxprom691, !dbg !14323
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx692, align 8, !dbg !14325
  %366 = load i32, i32* %r, align 4, !dbg !14326
  %idxprom693 = sext i32 %366 to i64, !dbg !14327
  %arrayidx694 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_reg_rtx_for_output, i64 0, i64 %idxprom693, !dbg !14327
  %367 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx694, align 8, !dbg !14327
  store %struct.rtx_def* %367, %struct.rtx_def** %src_reg, align 8, !dbg !14328
  %368 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8, !dbg !14329
  %tobool695 = icmp ne %struct.rtx_def* %368, null, !dbg !14329
  br i1 %tobool695, label %if.else775, label %if.then696, !dbg !14331

if.then696:                                       ; preds = %if.then690
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !14332, metadata !DIExpression()), !dbg !14334
  %369 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14335
  %370 = bitcast %struct.rtx_def* %369 to i32*, !dbg !14335
  %bf.load697 = load i32, i32* %370, align 8, !dbg !14335
  %bf.clear698 = and i32 %bf.load697, 65535, !dbg !14335
  %cmp699 = icmp eq i32 %bf.clear698, 8, !dbg !14335
  br i1 %cmp699, label %cond.true716, label %lor.lhs.false701, !dbg !14335

lor.lhs.false701:                                 ; preds = %if.then696
  %371 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14335
  %372 = bitcast %struct.rtx_def* %371 to i32*, !dbg !14335
  %bf.load702 = load i32, i32* %372, align 8, !dbg !14335
  %bf.clear703 = and i32 %bf.load702, 65535, !dbg !14335
  %cmp704 = icmp eq i32 %bf.clear703, 7, !dbg !14335
  br i1 %cmp704, label %cond.true716, label %lor.lhs.false706, !dbg !14335

lor.lhs.false706:                                 ; preds = %lor.lhs.false701
  %373 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14335
  %374 = bitcast %struct.rtx_def* %373 to i32*, !dbg !14335
  %bf.load707 = load i32, i32* %374, align 8, !dbg !14335
  %bf.clear708 = and i32 %bf.load707, 65535, !dbg !14335
  %cmp709 = icmp eq i32 %bf.clear708, 9, !dbg !14335
  br i1 %cmp709, label %cond.true716, label %lor.lhs.false711, !dbg !14335

lor.lhs.false711:                                 ; preds = %lor.lhs.false706
  %375 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14335
  %376 = bitcast %struct.rtx_def* %375 to i32*, !dbg !14335
  %bf.load712 = load i32, i32* %376, align 8, !dbg !14335
  %bf.clear713 = and i32 %bf.load712, 65535, !dbg !14335
  %cmp714 = icmp eq i32 %bf.clear713, 10, !dbg !14335
  br i1 %cmp714, label %cond.true716, label %cond.false738, !dbg !14335

cond.true716:                                     ; preds = %lor.lhs.false711, %lor.lhs.false706, %lor.lhs.false701, %if.then696
  %377 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14335
  %u717 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %377, i32 0, i32 1, !dbg !14335
  %fld718 = bitcast %union.u* %u717 to [1 x %union.rtunion_def]*, !dbg !14335
  %arrayidx719 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld718, i64 0, i64 5, !dbg !14335
  %rt_rtx720 = bitcast %union.rtunion_def* %arrayidx719 to %struct.rtx_def**, !dbg !14335
  %378 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx720, align 8, !dbg !14335
  %379 = bitcast %struct.rtx_def* %378 to i32*, !dbg !14335
  %bf.load721 = load i32, i32* %379, align 8, !dbg !14335
  %bf.clear722 = and i32 %bf.load721, 65535, !dbg !14335
  %cmp723 = icmp eq i32 %bf.clear722, 23, !dbg !14335
  br i1 %cmp723, label %cond.true725, label %cond.false730, !dbg !14335

cond.true725:                                     ; preds = %cond.true716
  %380 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14335
  %u726 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %380, i32 0, i32 1, !dbg !14335
  %fld727 = bitcast %union.u* %u726 to [1 x %union.rtunion_def]*, !dbg !14335
  %arrayidx728 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld727, i64 0, i64 5, !dbg !14335
  %rt_rtx729 = bitcast %union.rtunion_def* %arrayidx728 to %struct.rtx_def**, !dbg !14335
  %381 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx729, align 8, !dbg !14335
  br label %cond.end736, !dbg !14335

cond.false730:                                    ; preds = %cond.true716
  %382 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14335
  %383 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14335
  %u731 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %383, i32 0, i32 1, !dbg !14335
  %fld732 = bitcast %union.u* %u731 to [1 x %union.rtunion_def]*, !dbg !14335
  %arrayidx733 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld732, i64 0, i64 5, !dbg !14335
  %rt_rtx734 = bitcast %union.rtunion_def* %arrayidx733 to %struct.rtx_def**, !dbg !14335
  %384 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx734, align 8, !dbg !14335
  %call735 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %382, %struct.rtx_def* %384), !dbg !14335
  br label %cond.end736, !dbg !14335

cond.end736:                                      ; preds = %cond.false730, %cond.true725
  %cond737 = phi %struct.rtx_def* [ %381, %cond.true725 ], [ %call735, %cond.false730 ], !dbg !14335
  br label %cond.end739, !dbg !14335

cond.false738:                                    ; preds = %lor.lhs.false711
  br label %cond.end739, !dbg !14335

cond.end739:                                      ; preds = %cond.false738, %cond.end736
  %cond740 = phi %struct.rtx_def* [ %cond737, %cond.end736 ], [ null, %cond.false738 ], !dbg !14335
  store %struct.rtx_def* %cond740, %struct.rtx_def** %set, align 8, !dbg !14334
  %385 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !14336
  %tobool741 = icmp ne %struct.rtx_def* %385, null, !dbg !14336
  br i1 %tobool741, label %land.lhs.true742, label %if.end774, !dbg !14338

land.lhs.true742:                                 ; preds = %cond.end739
  %386 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !14339
  %u743 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %386, i32 0, i32 1, !dbg !14339
  %fld744 = bitcast %union.u* %u743 to [1 x %union.rtunion_def]*, !dbg !14339
  %arrayidx745 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld744, i64 0, i64 0, !dbg !14339
  %rt_rtx746 = bitcast %union.rtunion_def* %arrayidx745 to %struct.rtx_def**, !dbg !14339
  %387 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx746, align 8, !dbg !14339
  %388 = load i32, i32* %r, align 4, !dbg !14340
  %idxprom747 = sext i32 %388 to i64, !dbg !14341
  %arrayidx748 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom747, !dbg !14341
  %out749 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx748, i32 0, i32 1, !dbg !14342
  %389 = load %struct.rtx_def*, %struct.rtx_def** %out749, align 8, !dbg !14342
  %cmp750 = icmp eq %struct.rtx_def* %387, %389, !dbg !14343
  br i1 %cmp750, label %if.then752, label %if.end774, !dbg !14344

if.then752:                                       ; preds = %land.lhs.true742
  call void @llvm.dbg.declare(metadata i32* %k753, metadata !14345, metadata !DIExpression()), !dbg !14347
  %390 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !14348
  %u754 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %390, i32 0, i32 1, !dbg !14348
  %fld755 = bitcast %union.u* %u754 to [1 x %union.rtunion_def]*, !dbg !14348
  %arrayidx756 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld755, i64 0, i64 1, !dbg !14348
  %rt_rtx757 = bitcast %union.rtunion_def* %arrayidx756 to %struct.rtx_def**, !dbg !14348
  %391 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx757, align 8, !dbg !14348
  store %struct.rtx_def* %391, %struct.rtx_def** %src_reg, align 8, !dbg !14349
  %392 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14350
  store %struct.rtx_def* %392, %struct.rtx_def** %store_insn, align 8, !dbg !14351
  store i32 0, i32* %k753, align 4, !dbg !14352
  br label %for.cond758, !dbg !14354

for.cond758:                                      ; preds = %for.inc771, %if.then752
  %393 = load i32, i32* %k753, align 4, !dbg !14355
  %394 = load i32, i32* @n_reloads, align 4, !dbg !14357
  %cmp759 = icmp slt i32 %393, %394, !dbg !14358
  br i1 %cmp759, label %for.body761, label %for.end773, !dbg !14359

for.body761:                                      ; preds = %for.cond758
  %395 = load i32, i32* %k753, align 4, !dbg !14360
  %idxprom762 = sext i32 %395 to i64, !dbg !14363
  %arrayidx763 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom762, !dbg !14363
  %in764 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx763, i32 0, i32 0, !dbg !14364
  %396 = load %struct.rtx_def*, %struct.rtx_def** %in764, align 8, !dbg !14364
  %397 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8, !dbg !14365
  %cmp765 = icmp eq %struct.rtx_def* %396, %397, !dbg !14366
  br i1 %cmp765, label %if.then767, label %if.end770, !dbg !14367

if.then767:                                       ; preds = %for.body761
  %398 = load i32, i32* %k753, align 4, !dbg !14368
  %idxprom768 = sext i32 %398 to i64, !dbg !14370
  %arrayidx769 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_reg_rtx_for_input, i64 0, i64 %idxprom768, !dbg !14370
  %399 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx769, align 8, !dbg !14370
  store %struct.rtx_def* %399, %struct.rtx_def** %src_reg, align 8, !dbg !14371
  br label %for.end773, !dbg !14372

if.end770:                                        ; preds = %for.body761
  br label %for.inc771, !dbg !14373

for.inc771:                                       ; preds = %if.end770
  %400 = load i32, i32* %k753, align 4, !dbg !14374
  %inc772 = add nsw i32 %400, 1, !dbg !14374
  store i32 %inc772, i32* %k753, align 4, !dbg !14374
  br label %for.cond758, !dbg !14375, !llvm.loop !14376

for.end773:                                       ; preds = %if.then767, %for.cond758
  br label %if.end774, !dbg !14378

if.end774:                                        ; preds = %for.end773, %land.lhs.true742, %cond.end739
  br label %if.end779, !dbg !14379

if.else775:                                       ; preds = %if.then690
  %401 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8, !dbg !14380
  %call776 = call i32 @rhs_regno(%struct.rtx_def* %401), !dbg !14380
  %idxprom777 = zext i32 %call776 to i64, !dbg !14381
  %arrayidx778 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i64 0, i64 %idxprom777, !dbg !14381
  %402 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx778, align 8, !dbg !14381
  store %struct.rtx_def* %402, %struct.rtx_def** %store_insn, align 8, !dbg !14382
  br label %if.end779

if.end779:                                        ; preds = %if.else775, %if.end774
  %403 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8, !dbg !14383
  %tobool780 = icmp ne %struct.rtx_def* %403, null, !dbg !14383
  br i1 %tobool780, label %land.lhs.true781, label %if.end865, !dbg !14385

land.lhs.true781:                                 ; preds = %if.end779
  %404 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8, !dbg !14386
  %405 = bitcast %struct.rtx_def* %404 to i32*, !dbg !14386
  %bf.load782 = load i32, i32* %405, align 8, !dbg !14386
  %bf.clear783 = and i32 %bf.load782, 65535, !dbg !14386
  %cmp784 = icmp eq i32 %bf.clear783, 37, !dbg !14386
  br i1 %cmp784, label %land.lhs.true786, label %if.end865, !dbg !14387

land.lhs.true786:                                 ; preds = %land.lhs.true781
  %406 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8, !dbg !14388
  %call787 = call i32 @rhs_regno(%struct.rtx_def* %406), !dbg !14388
  %cmp788 = icmp ult i32 %call787, 53, !dbg !14389
  br i1 %cmp788, label %if.then790, label %if.end865, !dbg !14390

if.then790:                                       ; preds = %land.lhs.true786
  call void @llvm.dbg.declare(metadata i32* %src_regno, metadata !14391, metadata !DIExpression()), !dbg !14393
  call void @llvm.dbg.declare(metadata i32* %src_nregs, metadata !14394, metadata !DIExpression()), !dbg !14395
  call void @llvm.dbg.declare(metadata i32* %k791, metadata !14396, metadata !DIExpression()), !dbg !14397
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !14398, metadata !DIExpression()), !dbg !14399
  %407 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8, !dbg !14400
  %408 = bitcast %struct.rtx_def* %407 to i32*, !dbg !14400
  %bf.load792 = load i32, i32* %408, align 8, !dbg !14400
  %bf.lshr793 = lshr i32 %bf.load792, 16, !dbg !14400
  %bf.clear794 = and i32 %bf.lshr793, 255, !dbg !14400
  %409 = load i32, i32* %mode669, align 4, !dbg !14400
  %cmp795 = icmp eq i32 %bf.clear794, %409, !dbg !14400
  br i1 %cmp795, label %cond.false798, label %cond.true797, !dbg !14400

cond.true797:                                     ; preds = %if.then790
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 8156, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14400
  br label %cond.end799, !dbg !14400

cond.false798:                                    ; preds = %if.then790
  br label %cond.end799, !dbg !14400

cond.end799:                                      ; preds = %cond.false798, %cond.true797
  %cond800 = phi i32 [ 0, %cond.true797 ], [ 0, %cond.false798 ], !dbg !14400
  %410 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8, !dbg !14401
  %call801 = call i32 @rhs_regno(%struct.rtx_def* %410), !dbg !14401
  store i32 %call801, i32* %src_regno, align 4, !dbg !14402
  %411 = load i32, i32* %src_regno, align 4, !dbg !14403
  %idxprom802 = sext i32 %411 to i64, !dbg !14404
  %arrayidx803 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom802, !dbg !14404
  %412 = load i32, i32* %mode669, align 4, !dbg !14405
  %idxprom804 = zext i32 %412 to i64, !dbg !14404
  %arrayidx805 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx803, i64 0, i64 %idxprom804, !dbg !14404
  %413 = load i8, i8* %arrayidx805, align 1, !dbg !14404
  %conv806 = zext i8 %413 to i32, !dbg !14404
  store i32 %conv806, i32* %src_nregs, align 4, !dbg !14406
  %414 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !14407
  %415 = load i32, i32* %src_regno, align 4, !dbg !14408
  %call807 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %414, i32 1, i32 %415), !dbg !14409
  store %struct.rtx_def* %call807, %struct.rtx_def** %note, align 8, !dbg !14410
  %416 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !14411
  %tobool808 = icmp ne %struct.rtx_def* %416, null, !dbg !14411
  br i1 %tobool808, label %if.end813, label %land.lhs.true809, !dbg !14413

land.lhs.true809:                                 ; preds = %cond.end799
  %417 = load %struct.rtx_def*, %struct.rtx_def** %store_insn, align 8, !dbg !14414
  %tobool810 = icmp ne %struct.rtx_def* %417, null, !dbg !14414
  br i1 %tobool810, label %if.then811, label %if.end813, !dbg !14415

if.then811:                                       ; preds = %land.lhs.true809
  %418 = load %struct.rtx_def*, %struct.rtx_def** %store_insn, align 8, !dbg !14416
  %419 = load i32, i32* %src_regno, align 4, !dbg !14417
  %call812 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %418, i32 1, i32 %419), !dbg !14418
  store %struct.rtx_def* %call812, %struct.rtx_def** %note, align 8, !dbg !14419
  br label %if.end813, !dbg !14420

if.end813:                                        ; preds = %if.then811, %land.lhs.true809, %cond.end799
  store i32 0, i32* %k791, align 4, !dbg !14421
  br label %for.cond814, !dbg !14423

for.cond814:                                      ; preds = %for.inc859, %if.end813
  %420 = load i32, i32* %k791, align 4, !dbg !14424
  %421 = load i32, i32* %src_nregs, align 4, !dbg !14426
  %cmp815 = icmp slt i32 %420, %421, !dbg !14427
  br i1 %cmp815, label %for.body817, label %for.end861, !dbg !14428

for.body817:                                      ; preds = %for.cond814
  %422 = load %struct.rtx_def*, %struct.rtx_def** %store_insn, align 8, !dbg !14429
  %423 = load i32, i32* %src_regno, align 4, !dbg !14431
  %424 = load i32, i32* %k791, align 4, !dbg !14432
  %add818 = add nsw i32 %423, %424, !dbg !14433
  %idxprom819 = sext i32 %add818 to i64, !dbg !14434
  %arrayidx820 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom819, !dbg !14434
  store %struct.rtx_def* %422, %struct.rtx_def** %arrayidx820, align 8, !dbg !14435
  %425 = load %struct.rtx_def*, %struct.rtx_def** %out644, align 8, !dbg !14436
  %426 = load i32, i32* %src_regno, align 4, !dbg !14437
  %427 = load i32, i32* %k791, align 4, !dbg !14438
  %add821 = add nsw i32 %426, %427, !dbg !14439
  %idxprom822 = sext i32 %add821 to i64, !dbg !14440
  %arrayidx823 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i64 0, i64 %idxprom822, !dbg !14440
  store %struct.rtx_def* %425, %struct.rtx_def** %arrayidx823, align 8, !dbg !14441
  %428 = load i32, i32* %out_regno667, align 4, !dbg !14442
  %429 = load i32, i32* %src_regno, align 4, !dbg !14443
  %430 = load i32, i32* %k791, align 4, !dbg !14444
  %add824 = add nsw i32 %429, %430, !dbg !14445
  %idxprom825 = sext i32 %add824 to i64, !dbg !14446
  %arrayidx826 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i64 0, i64 %idxprom825, !dbg !14446
  store i32 %428, i32* %arrayidx826, align 4, !dbg !14447
  %431 = load %struct.rtx_def*, %struct.rtx_def** %store_insn, align 8, !dbg !14448
  %432 = load i32, i32* %src_regno, align 4, !dbg !14449
  %433 = load i32, i32* %k791, align 4, !dbg !14450
  %add827 = add nsw i32 %432, %433, !dbg !14451
  %idxprom828 = sext i32 %add827 to i64, !dbg !14452
  %arrayidx829 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @reg_reloaded_insn, i64 0, i64 %idxprom828, !dbg !14452
  store %struct.rtx_def* %431, %struct.rtx_def** %arrayidx829, align 8, !dbg !14453
  %434 = load i32, i32* %src_regno, align 4, !dbg !14454
  %435 = load i32, i32* %k791, align 4, !dbg !14454
  %add830 = add nsw i32 %434, %435, !dbg !14454
  %sh_prom831 = zext i32 %add830 to i64, !dbg !14454
  %shl832 = shl i64 1, %sh_prom831, !dbg !14454
  %neg833 = xor i64 %shl832, -1, !dbg !14454
  %436 = load i64, i64* @reg_reloaded_dead, align 8, !dbg !14454
  %and834 = and i64 %436, %neg833, !dbg !14454
  store i64 %and834, i64* @reg_reloaded_dead, align 8, !dbg !14454
  %437 = load i32, i32* %src_regno, align 4, !dbg !14455
  %438 = load i32, i32* %k791, align 4, !dbg !14455
  %add835 = add nsw i32 %437, %438, !dbg !14455
  %sh_prom836 = zext i32 %add835 to i64, !dbg !14455
  %shl837 = shl i64 1, %sh_prom836, !dbg !14455
  %439 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !14455
  %or838 = or i64 %439, %shl837, !dbg !14455
  store i64 %or838, i64* @reg_reloaded_valid, align 8, !dbg !14455
  %440 = load i32, i32* %src_regno, align 4, !dbg !14456
  %441 = load i32, i32* %k791, align 4, !dbg !14456
  %add839 = add nsw i32 %440, %441, !dbg !14456
  %sh_prom840 = zext i32 %add839 to i64, !dbg !14456
  %shl841 = shl i64 1, %sh_prom840, !dbg !14456
  %neg842 = xor i64 %shl841, -1, !dbg !14456
  %442 = load i64, i64* @reg_reloaded_call_part_clobbered, align 8, !dbg !14456
  %and843 = and i64 %442, %neg842, !dbg !14456
  store i64 %and843, i64* @reg_reloaded_call_part_clobbered, align 8, !dbg !14456
  %443 = load i32, i32* %src_regno, align 4, !dbg !14458
  %444 = load i32, i32* %k791, align 4, !dbg !14458
  %add844 = add nsw i32 %443, %444, !dbg !14458
  %sh_prom845 = zext i32 %add844 to i64, !dbg !14458
  %shl846 = shl i64 1, %sh_prom845, !dbg !14458
  %445 = load i64, i64* @reg_is_output_reload, align 8, !dbg !14458
  %or847 = or i64 %445, %shl846, !dbg !14458
  store i64 %or847, i64* @reg_is_output_reload, align 8, !dbg !14458
  %446 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !14459
  %tobool848 = icmp ne %struct.rtx_def* %446, null, !dbg !14459
  br i1 %tobool848, label %if.then849, label %if.else853, !dbg !14461

if.then849:                                       ; preds = %for.body817
  %447 = load i32, i32* %src_regno, align 4, !dbg !14462
  %sh_prom850 = zext i32 %447 to i64, !dbg !14462
  %shl851 = shl i64 1, %sh_prom850, !dbg !14462
  %448 = load i64, i64* @reg_reloaded_died, align 8, !dbg !14462
  %or852 = or i64 %448, %shl851, !dbg !14462
  store i64 %or852, i64* @reg_reloaded_died, align 8, !dbg !14462
  br label %if.end858, !dbg !14462

if.else853:                                       ; preds = %for.body817
  %449 = load i32, i32* %src_regno, align 4, !dbg !14463
  %sh_prom854 = zext i32 %449 to i64, !dbg !14463
  %shl855 = shl i64 1, %sh_prom854, !dbg !14463
  %neg856 = xor i64 %shl855, -1, !dbg !14463
  %450 = load i64, i64* @reg_reloaded_died, align 8, !dbg !14463
  %and857 = and i64 %450, %neg856, !dbg !14463
  store i64 %and857, i64* @reg_reloaded_died, align 8, !dbg !14463
  br label %if.end858

if.end858:                                        ; preds = %if.else853, %if.then849
  br label %for.inc859, !dbg !14464

for.inc859:                                       ; preds = %if.end858
  %451 = load i32, i32* %k791, align 4, !dbg !14465
  %inc860 = add nsw i32 %451, 1, !dbg !14465
  store i32 %inc860, i32* %k791, align 4, !dbg !14465
  br label %for.cond814, !dbg !14466, !llvm.loop !14467

for.end861:                                       ; preds = %for.cond814
  %452 = load %struct.rtx_def*, %struct.rtx_def** %src_reg, align 8, !dbg !14469
  %453 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !14470
  %454 = load i32, i32* %out_regno667, align 4, !dbg !14471
  %idxprom862 = sext i32 %454 to i64, !dbg !14470
  %arrayidx863 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %453, i64 %idxprom862, !dbg !14470
  store %struct.rtx_def* %452, %struct.rtx_def** %arrayidx863, align 8, !dbg !14472
  %455 = load i32, i32* %out_regno667, align 4, !dbg !14473
  %call864 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* @reg_has_output_reload, i32 %455), !dbg !14473
  br label %if.end865, !dbg !14474

if.end865:                                        ; preds = %for.end861, %land.lhs.true786, %land.lhs.true781, %if.end779
  br label %if.end884, !dbg !14475

if.else866:                                       ; preds = %if.end687
  call void @llvm.dbg.declare(metadata i32* %k867, metadata !14476, metadata !DIExpression()), !dbg !14478
  call void @llvm.dbg.declare(metadata i32* %out_nregs868, metadata !14479, metadata !DIExpression()), !dbg !14480
  %456 = load i32, i32* %out_regno667, align 4, !dbg !14481
  %idxprom869 = sext i32 %456 to i64, !dbg !14482
  %arrayidx870 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom869, !dbg !14482
  %457 = load i32, i32* %mode669, align 4, !dbg !14483
  %idxprom871 = zext i32 %457 to i64, !dbg !14482
  %arrayidx872 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx870, i64 0, i64 %idxprom871, !dbg !14482
  %458 = load i8, i8* %arrayidx872, align 1, !dbg !14482
  %conv873 = zext i8 %458 to i32, !dbg !14482
  store i32 %conv873, i32* %out_nregs868, align 4, !dbg !14480
  store i32 0, i32* %k867, align 4, !dbg !14484
  br label %for.cond874, !dbg !14486

for.cond874:                                      ; preds = %for.inc881, %if.else866
  %459 = load i32, i32* %k867, align 4, !dbg !14487
  %460 = load i32, i32* %out_nregs868, align 4, !dbg !14489
  %cmp875 = icmp slt i32 %459, %460, !dbg !14490
  br i1 %cmp875, label %for.body877, label %for.end883, !dbg !14491

for.body877:                                      ; preds = %for.cond874
  %461 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !14492
  %462 = load i32, i32* %out_regno667, align 4, !dbg !14493
  %463 = load i32, i32* %k867, align 4, !dbg !14494
  %add878 = add nsw i32 %462, %463, !dbg !14495
  %idxprom879 = sext i32 %add878 to i64, !dbg !14492
  %arrayidx880 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %461, i64 %idxprom879, !dbg !14492
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx880, align 8, !dbg !14496
  br label %for.inc881, !dbg !14492

for.inc881:                                       ; preds = %for.body877
  %464 = load i32, i32* %k867, align 4, !dbg !14497
  %inc882 = add nsw i32 %464, 1, !dbg !14497
  store i32 %inc882, i32* %k867, align 4, !dbg !14497
  br label %for.cond874, !dbg !14498, !llvm.loop !14499

for.end883:                                       ; preds = %for.cond874
  br label %if.end884

if.end884:                                        ; preds = %for.end883, %if.end865
  br label %if.end885, !dbg !14501

if.end885:                                        ; preds = %if.end884, %land.lhs.true635, %land.lhs.true630, %lor.lhs.false624, %if.end591
  br label %for.inc886, !dbg !14502

for.inc886:                                       ; preds = %if.end885
  %465 = load i32, i32* %j, align 4, !dbg !14503
  %inc887 = add nsw i32 %465, 1, !dbg !14503
  store i32 %inc887, i32* %j, align 4, !dbg !14503
  br label %for.cond99, !dbg !14504, !llvm.loop !14505

for.end888:                                       ; preds = %for.cond99
  %466 = load i64, i64* @reg_reloaded_died, align 8, !dbg !14507
  %467 = load i64, i64* @reg_reloaded_dead, align 8, !dbg !14507
  %or889 = or i64 %467, %466, !dbg !14507
  store i64 %or889, i64* @reg_reloaded_dead, align 8, !dbg !14507
  ret void, !dbg !14508
}

declare dso_local void @subst_reloads(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @fixup_eh_region_note(%struct.rtx_def* %insn, %struct.rtx_def* %prev, %struct.rtx_def* %next) #0 !dbg !14509 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %prev.addr = alloca %struct.rtx_def*, align 8
  %next.addr = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !14512, metadata !DIExpression()), !dbg !14513
  store %struct.rtx_def* %prev, %struct.rtx_def** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev.addr, metadata !14514, metadata !DIExpression()), !dbg !14515
  store %struct.rtx_def* %next, %struct.rtx_def** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next.addr, metadata !14516, metadata !DIExpression()), !dbg !14517
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !14518, metadata !DIExpression()), !dbg !14519
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !14520
  %call = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %0, i32 25, %struct.rtx_def* null), !dbg !14521
  store %struct.rtx_def* %call, %struct.rtx_def** %note, align 8, !dbg !14519
  %1 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !14522
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !14524
  br i1 %cmp, label %if.then, label %if.end, !dbg !14525

if.then:                                          ; preds = %entry
  br label %return, !dbg !14526

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !14527
  %call1 = call zeroext i8 @insn_could_throw_p(%struct.rtx_def* %2), !dbg !14529
  %tobool = icmp ne i8 %call1, 0, !dbg !14529
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !14530

if.then2:                                         ; preds = %if.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !14531
  %4 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !14532
  call void @remove_note(%struct.rtx_def* %3, %struct.rtx_def* %4), !dbg !14533
  br label %if.end3, !dbg !14533

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !14534
  %6 = load %struct.rtx_def*, %struct.rtx_def** %prev.addr, align 8, !dbg !14535
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !14535
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !14535
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !14535
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !14535
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !14535
  %8 = load %struct.rtx_def*, %struct.rtx_def** %next.addr, align 8, !dbg !14536
  call void @copy_reg_eh_region_note_forward(%struct.rtx_def* %5, %struct.rtx_def* %7, %struct.rtx_def* %8), !dbg !14537
  br label %return, !dbg !14538

return:                                           ; preds = %if.end3, %if.then
  ret void, !dbg !14538
}

; Function Attrs: noinline nounwind uwtable
define internal void @forget_marked_reloads(%struct.bitmap_head_def* %regs) #0 !dbg !14539 {
entry:
  %regs.addr = alloca %struct.bitmap_head_def*, align 8
  %reg = alloca i32, align 4
  %rsi = alloca %struct.bitmap_iterator, align 8
  store %struct.bitmap_head_def* %regs, %struct.bitmap_head_def** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %regs.addr, metadata !14542, metadata !DIExpression()), !dbg !14543
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !14544, metadata !DIExpression()), !dbg !14545
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %rsi, metadata !14546, metadata !DIExpression()), !dbg !14547
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regs.addr, align 8, !dbg !14548
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %rsi, %struct.bitmap_head_def* %0, i32 0, i32* %reg), !dbg !14548
  br label %for.cond, !dbg !14548

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %rsi, i32* %reg), !dbg !14550
  %tobool = icmp ne i8 %call, 0, !dbg !14548
  br i1 %tobool, label %for.body, label %for.end, !dbg !14548

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %reg, align 4, !dbg !14552
  %cmp = icmp ult i32 %1, 53, !dbg !14555
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !14556

land.lhs.true:                                    ; preds = %for.body
  %2 = load i32, i32* @n_reloads, align 4, !dbg !14557
  %cmp1 = icmp eq i32 %2, 0, !dbg !14558
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !14559

lor.lhs.false:                                    ; preds = %land.lhs.true
  %3 = load i64, i64* @reg_is_output_reload, align 8, !dbg !14560
  %4 = load i32, i32* %reg, align 4, !dbg !14560
  %sh_prom = zext i32 %4 to i64, !dbg !14560
  %shl = shl i64 1, %sh_prom, !dbg !14560
  %and = and i64 %3, %shl, !dbg !14560
  %tobool2 = icmp ne i64 %and, 0, !dbg !14560
  br i1 %tobool2, label %if.end, label %if.then, !dbg !14561

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %5 = load i32, i32* %reg, align 4, !dbg !14562
  %sh_prom3 = zext i32 %5 to i64, !dbg !14562
  %shl4 = shl i64 1, %sh_prom3, !dbg !14562
  %neg = xor i64 %shl4, -1, !dbg !14562
  %6 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !14562
  %and5 = and i64 %6, %neg, !dbg !14562
  store i64 %and5, i64* @reg_reloaded_valid, align 8, !dbg !14562
  %7 = load i32, i32* %reg, align 4, !dbg !14564
  %idxprom = zext i32 %7 to i64, !dbg !14565
  %arrayidx = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom, !dbg !14565
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx, align 8, !dbg !14566
  br label %if.end, !dbg !14567

if.end:                                           ; preds = %if.then, %lor.lhs.false, %for.body
  %8 = load i32, i32* @n_reloads, align 4, !dbg !14568
  %cmp6 = icmp eq i32 %8, 0, !dbg !14570
  br i1 %cmp6, label %if.then10, label %lor.lhs.false7, !dbg !14571

lor.lhs.false7:                                   ; preds = %if.end
  %9 = load i32, i32* %reg, align 4, !dbg !14572
  %call8 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* @reg_has_output_reload, i32 %9), !dbg !14572
  %tobool9 = icmp ne i32 %call8, 0, !dbg !14572
  br i1 %tobool9, label %if.end13, label %if.then10, !dbg !14573

if.then10:                                        ; preds = %lor.lhs.false7, %if.end
  %10 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !14574
  %11 = load i32, i32* %reg, align 4, !dbg !14575
  %idxprom11 = zext i32 %11 to i64, !dbg !14574
  %arrayidx12 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %10, i64 %idxprom11, !dbg !14574
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx12, align 8, !dbg !14576
  br label %if.end13, !dbg !14574

if.end13:                                         ; preds = %if.then10, %lor.lhs.false7
  br label %for.inc, !dbg !14577

for.inc:                                          ; preds = %if.end13
  call void @bmp_iter_next(%struct.bitmap_iterator* %rsi, i32* %reg), !dbg !14550
  br label %for.cond, !dbg !14550, !llvm.loop !14578

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14580
}

; Function Attrs: noinline nounwind uwtable
define internal void @choose_reload_regs_init(%struct.insn_chain* %chain, %struct.rtx_def** %save_reload_reg_rtx) #0 !dbg !14581 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %save_reload_reg_rtx.addr = alloca %struct.rtx_def**, align 8
  %i = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain.addr, metadata !14584, metadata !DIExpression()), !dbg !14585
  store %struct.rtx_def** %save_reload_reg_rtx, %struct.rtx_def*** %save_reload_reg_rtx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %save_reload_reg_rtx.addr, metadata !14586, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14588, metadata !DIExpression()), !dbg !14589
  store i32 0, i32* %i, align 4, !dbg !14590
  br label %for.cond, !dbg !14592

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14593
  %1 = load i32, i32* @n_reloads, align 4, !dbg !14595
  %cmp = icmp slt i32 %0, %1, !dbg !14596
  br i1 %cmp, label %for.body, label %for.end, !dbg !14597

for.body:                                         ; preds = %for.cond
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %save_reload_reg_rtx.addr, align 8, !dbg !14598
  %3 = load i32, i32* %i, align 4, !dbg !14599
  %idxprom = sext i32 %3 to i64, !dbg !14598
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %idxprom, !dbg !14598
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !14598
  %5 = load i32, i32* %i, align 4, !dbg !14600
  %idxprom1 = sext i32 %5 to i64, !dbg !14601
  %arrayidx2 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1, !dbg !14601
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2, i32 0, i32 11, !dbg !14602
  store %struct.rtx_def* %4, %struct.rtx_def** %reg_rtx, align 8, !dbg !14603
  br label %for.inc, !dbg !14601

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !14604
  %inc = add nsw i32 %6, 1, !dbg !14604
  store i32 %inc, i32* %i, align 4, !dbg !14604
  br label %for.cond, !dbg !14605, !llvm.loop !14606

for.end:                                          ; preds = %for.cond
  call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds ([180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 0), i8 0, i64 180, i1 false), !dbg !14608
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([180 x %struct.rtx_def*]* @reload_inheritance_insn to i8*), i8 0, i64 1440, i1 false), !dbg !14609
  call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([180 x %struct.rtx_def*]* @reload_override_in to i8*), i8 0, i64 1440, i1 false), !dbg !14610
  store i64 0, i64* @reload_reg_used, align 8, !dbg !14611
  store i64 0, i64* @reload_reg_used_at_all, align 8, !dbg !14612
  store i64 0, i64* @reload_reg_used_in_op_addr, align 8, !dbg !14613
  store i64 0, i64* @reload_reg_used_in_op_addr_reload, align 8, !dbg !14614
  store i64 0, i64* @reload_reg_used_in_insn, align 8, !dbg !14615
  store i64 0, i64* @reload_reg_used_in_other_addr, align 8, !dbg !14616
  store i64 0, i64* @reg_used_in_insn, align 8, !dbg !14617
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !14618, metadata !DIExpression()), !dbg !14620
  br label %do.body, !dbg !14621

do.body:                                          ; preds = %for.end
  store i64 0, i64* %tmp, align 8, !dbg !14622
  %7 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !14622
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %7, i32 0, i32 6, !dbg !14622
  call void @reg_set_to_hard_reg_set(i64* %tmp, %struct.bitmap_head_def* %live_throughout), !dbg !14622
  br label %do.end, !dbg !14622

do.end:                                           ; preds = %do.body
  %8 = load i64, i64* %tmp, align 8, !dbg !14624
  %9 = load i64, i64* @reg_used_in_insn, align 8, !dbg !14624
  %or = or i64 %9, %8, !dbg !14624
  store i64 %or, i64* @reg_used_in_insn, align 8, !dbg !14624
  br label %do.body3, !dbg !14625

do.body3:                                         ; preds = %do.end
  store i64 0, i64* %tmp, align 8, !dbg !14626
  %10 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !14626
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %10, i32 0, i32 7, !dbg !14626
  call void @reg_set_to_hard_reg_set(i64* %tmp, %struct.bitmap_head_def* %dead_or_set), !dbg !14626
  br label %do.end4, !dbg !14626

do.end4:                                          ; preds = %do.body3
  %11 = load i64, i64* %tmp, align 8, !dbg !14628
  %12 = load i64, i64* @reg_used_in_insn, align 8, !dbg !14628
  %or5 = or i64 %12, %11, !dbg !14628
  store i64 %or5, i64* @reg_used_in_insn, align 8, !dbg !14628
  %13 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !14629
  %live_throughout6 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %13, i32 0, i32 6, !dbg !14630
  call void @compute_use_by_pseudos(i64* @reg_used_in_insn, %struct.bitmap_head_def* %live_throughout6), !dbg !14631
  %14 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !14632
  %dead_or_set7 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %14, i32 0, i32 7, !dbg !14633
  call void @compute_use_by_pseudos(i64* @reg_used_in_insn, %struct.bitmap_head_def* %dead_or_set7), !dbg !14634
  store i32 0, i32* %i, align 4, !dbg !14635
  br label %for.cond8, !dbg !14637

for.cond8:                                        ; preds = %for.inc23, %do.end4
  %15 = load i32, i32* %i, align 4, !dbg !14638
  %16 = load i32, i32* @reload_n_operands, align 4, !dbg !14640
  %cmp9 = icmp slt i32 %15, %16, !dbg !14641
  br i1 %cmp9, label %for.body10, label %for.end25, !dbg !14642

for.body10:                                       ; preds = %for.cond8
  %17 = load i32, i32* %i, align 4, !dbg !14643
  %idxprom11 = sext i32 %17 to i64, !dbg !14643
  %arrayidx12 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i64 0, i64 %idxprom11, !dbg !14643
  store i64 0, i64* %arrayidx12, align 8, !dbg !14643
  %18 = load i32, i32* %i, align 4, !dbg !14645
  %idxprom13 = sext i32 %18 to i64, !dbg !14645
  %arrayidx14 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom13, !dbg !14645
  store i64 0, i64* %arrayidx14, align 8, !dbg !14645
  %19 = load i32, i32* %i, align 4, !dbg !14646
  %idxprom15 = sext i32 %19 to i64, !dbg !14646
  %arrayidx16 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i64 0, i64 %idxprom15, !dbg !14646
  store i64 0, i64* %arrayidx16, align 8, !dbg !14646
  %20 = load i32, i32* %i, align 4, !dbg !14647
  %idxprom17 = sext i32 %20 to i64, !dbg !14647
  %arrayidx18 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i64 0, i64 %idxprom17, !dbg !14647
  store i64 0, i64* %arrayidx18, align 8, !dbg !14647
  %21 = load i32, i32* %i, align 4, !dbg !14648
  %idxprom19 = sext i32 %21 to i64, !dbg !14648
  %arrayidx20 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i64 0, i64 %idxprom19, !dbg !14648
  store i64 0, i64* %arrayidx20, align 8, !dbg !14648
  %22 = load i32, i32* %i, align 4, !dbg !14649
  %idxprom21 = sext i32 %22 to i64, !dbg !14649
  %arrayidx22 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i64 0, i64 %idxprom21, !dbg !14649
  store i64 0, i64* %arrayidx22, align 8, !dbg !14649
  br label %for.inc23, !dbg !14650

for.inc23:                                        ; preds = %for.body10
  %23 = load i32, i32* %i, align 4, !dbg !14651
  %inc24 = add nsw i32 %23, 1, !dbg !14651
  store i32 %inc24, i32* %i, align 4, !dbg !14651
  br label %for.cond8, !dbg !14652, !llvm.loop !14653

for.end25:                                        ; preds = %for.cond8
  %24 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !14655
  %used_spill_regs = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %24, i32 0, i32 10, !dbg !14655
  %25 = load i64, i64* %used_spill_regs, align 8, !dbg !14655
  %neg = xor i64 %25, -1, !dbg !14655
  store i64 %neg, i64* @reload_reg_unavailable, align 8, !dbg !14655
  store i64 0, i64* @reload_reg_used_for_inherit, align 8, !dbg !14656
  store i32 0, i32* %i, align 4, !dbg !14657
  br label %for.cond26, !dbg !14659

for.cond26:                                       ; preds = %for.inc41, %for.end25
  %26 = load i32, i32* %i, align 4, !dbg !14660
  %27 = load i32, i32* @n_reloads, align 4, !dbg !14662
  %cmp27 = icmp slt i32 %26, %27, !dbg !14663
  br i1 %cmp27, label %for.body28, label %for.end43, !dbg !14664

for.body28:                                       ; preds = %for.cond26
  %28 = load i32, i32* %i, align 4, !dbg !14665
  %idxprom29 = sext i32 %28 to i64, !dbg !14667
  %arrayidx30 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom29, !dbg !14667
  %reg_rtx31 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx30, i32 0, i32 11, !dbg !14668
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx31, align 8, !dbg !14668
  %tobool = icmp ne %struct.rtx_def* %29, null, !dbg !14667
  br i1 %tobool, label %if.then, label %if.end, !dbg !14669

if.then:                                          ; preds = %for.body28
  %30 = load i32, i32* %i, align 4, !dbg !14670
  %idxprom32 = sext i32 %30 to i64, !dbg !14670
  %arrayidx33 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom32, !dbg !14670
  %reg_rtx34 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx33, i32 0, i32 11, !dbg !14670
  %31 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx34, align 8, !dbg !14670
  %call = call i32 @rhs_regno(%struct.rtx_def* %31), !dbg !14670
  %32 = load i32, i32* %i, align 4, !dbg !14671
  %idxprom35 = sext i32 %32 to i64, !dbg !14672
  %arrayidx36 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom35, !dbg !14672
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx36, i32 0, i32 12, !dbg !14673
  %33 = load i32, i32* %opnum, align 8, !dbg !14673
  %34 = load i32, i32* %i, align 4, !dbg !14674
  %idxprom37 = sext i32 %34 to i64, !dbg !14675
  %arrayidx38 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom37, !dbg !14675
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx38, i32 0, i32 17, !dbg !14676
  %35 = load i32, i32* %when_needed, align 4, !dbg !14676
  %36 = load i32, i32* %i, align 4, !dbg !14677
  %idxprom39 = sext i32 %36 to i64, !dbg !14678
  %arrayidx40 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom39, !dbg !14678
  %mode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx40, i32 0, i32 5, !dbg !14679
  %37 = load i32, i32* %mode, align 4, !dbg !14679
  call void @mark_reload_reg_in_use(i32 %call, i32 %33, i32 %35, i32 %37), !dbg !14680
  br label %if.end, !dbg !14680

if.end:                                           ; preds = %if.then, %for.body28
  br label %for.inc41, !dbg !14668

for.inc41:                                        ; preds = %if.end
  %38 = load i32, i32* %i, align 4, !dbg !14681
  %inc42 = add nsw i32 %38, 1, !dbg !14681
  store i32 %inc42, i32* %i, align 4, !dbg !14681
  br label %for.cond26, !dbg !14682, !llvm.loop !14683

for.end43:                                        ; preds = %for.cond26
  ret void, !dbg !14685
}

declare dso_local i32 @subreg_regno(%struct.rtx_def*) #2

declare dso_local zeroext i8 @ix86_cannot_change_mode_class(i32, i32, i32) #2

declare dso_local i32 @subreg_regno_offset(i32, i32, i32, i32) #2

declare dso_local i32 @smallest_mode_for_size(i32, i32) #2

declare dso_local i32 @ix86_register_move_cost(i32, i32, i32) #2

declare dso_local i32 @ix86_memory_move_cost(i32, i32, i32) #2

declare dso_local i32 @secondary_reload_class(i8 zeroext, i32, i32, %struct.rtx_def*) #2

declare dso_local i32 @ix86_secondary_memory_needed(i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @free_for_value_p(i32 %regno, i32 %mode, i32 %opnum, i32 %type, %struct.rtx_def* %value, %struct.rtx_def* %out, i32 %reloadnum, i32 %ignore_address_reloads) #0 !dbg !14686 {
entry:
  %retval = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %value.addr = alloca %struct.rtx_def*, align 8
  %out.addr = alloca %struct.rtx_def*, align 8
  %reloadnum.addr = alloca i32, align 4
  %ignore_address_reloads.addr = alloca i32, align 4
  %nregs = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !14689, metadata !DIExpression()), !dbg !14690
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !14691, metadata !DIExpression()), !dbg !14692
  store i32 %opnum, i32* %opnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opnum.addr, metadata !14693, metadata !DIExpression()), !dbg !14694
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14695, metadata !DIExpression()), !dbg !14696
  store %struct.rtx_def* %value, %struct.rtx_def** %value.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %value.addr, metadata !14697, metadata !DIExpression()), !dbg !14698
  store %struct.rtx_def* %out, %struct.rtx_def** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out.addr, metadata !14699, metadata !DIExpression()), !dbg !14700
  store i32 %reloadnum, i32* %reloadnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reloadnum.addr, metadata !14701, metadata !DIExpression()), !dbg !14702
  store i32 %ignore_address_reloads, i32* %ignore_address_reloads.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ignore_address_reloads.addr, metadata !14703, metadata !DIExpression()), !dbg !14704
  call void @llvm.dbg.declare(metadata i32* %nregs, metadata !14705, metadata !DIExpression()), !dbg !14706
  %0 = load i32, i32* %regno.addr, align 4, !dbg !14707
  %idxprom = sext i32 %0 to i64, !dbg !14708
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !14708
  %1 = load i32, i32* %mode.addr, align 4, !dbg !14709
  %idxprom1 = zext i32 %1 to i64, !dbg !14708
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom1, !dbg !14708
  %2 = load i8, i8* %arrayidx2, align 1, !dbg !14708
  %conv = zext i8 %2 to i32, !dbg !14708
  store i32 %conv, i32* %nregs, align 4, !dbg !14706
  br label %while.cond, !dbg !14710

while.cond:                                       ; preds = %if.end, %entry
  %3 = load i32, i32* %nregs, align 4, !dbg !14711
  %dec = add nsw i32 %3, -1, !dbg !14711
  store i32 %dec, i32* %nregs, align 4, !dbg !14711
  %cmp = icmp sgt i32 %3, 0, !dbg !14712
  br i1 %cmp, label %while.body, label %while.end, !dbg !14710

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %regno.addr, align 4, !dbg !14713
  %5 = load i32, i32* %regno.addr, align 4, !dbg !14715
  %6 = load i32, i32* %nregs, align 4, !dbg !14716
  %add = add nsw i32 %5, %6, !dbg !14717
  %7 = load i32, i32* %opnum.addr, align 4, !dbg !14718
  %8 = load i32, i32* %type.addr, align 4, !dbg !14719
  %9 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !14720
  %10 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !14721
  %11 = load i32, i32* %reloadnum.addr, align 4, !dbg !14722
  %12 = load i32, i32* %ignore_address_reloads.addr, align 4, !dbg !14723
  %call = call i32 @reload_reg_free_for_value_p(i32 %4, i32 %add, i32 %7, i32 %8, %struct.rtx_def* %9, %struct.rtx_def* %10, i32 %11, i32 %12), !dbg !14724
  %tobool = icmp ne i32 %call, 0, !dbg !14724
  br i1 %tobool, label %if.end, label %if.then, !dbg !14725

if.then:                                          ; preds = %while.body
  store i32 0, i32* %retval, align 4, !dbg !14726
  br label %return, !dbg !14726

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !14710, !llvm.loop !14727

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval, align 4, !dbg !14729
  br label %return, !dbg !14729

return:                                           ; preds = %while.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !14730
  ret i32 %13, !dbg !14730
}

declare dso_local i32 @reg_overlap_mentioned_for_reload_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mark_reload_reg_in_use(i32 %regno, i32 %opnum, i32 %type, i32 %mode) #0 !dbg !14731 {
entry:
  %regno.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %nregs = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !14732, metadata !DIExpression()), !dbg !14733
  store i32 %opnum, i32* %opnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opnum.addr, metadata !14734, metadata !DIExpression()), !dbg !14735
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14736, metadata !DIExpression()), !dbg !14737
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !14738, metadata !DIExpression()), !dbg !14739
  call void @llvm.dbg.declare(metadata i32* %nregs, metadata !14740, metadata !DIExpression()), !dbg !14741
  %0 = load i32, i32* %regno.addr, align 4, !dbg !14742
  %idxprom = zext i32 %0 to i64, !dbg !14743
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !14743
  %1 = load i32, i32* %mode.addr, align 4, !dbg !14744
  %idxprom1 = zext i32 %1 to i64, !dbg !14743
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom1, !dbg !14743
  %2 = load i8, i8* %arrayidx2, align 1, !dbg !14743
  %conv = zext i8 %2 to i32, !dbg !14743
  store i32 %conv, i32* %nregs, align 4, !dbg !14741
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14745, metadata !DIExpression()), !dbg !14746
  %3 = load i32, i32* %regno.addr, align 4, !dbg !14747
  store i32 %3, i32* %i, align 4, !dbg !14749
  br label %for.cond, !dbg !14750

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !14751
  %5 = load i32, i32* %nregs, align 4, !dbg !14753
  %6 = load i32, i32* %regno.addr, align 4, !dbg !14754
  %add = add i32 %5, %6, !dbg !14755
  %cmp = icmp ult i32 %4, %add, !dbg !14756
  br i1 %cmp, label %for.body, label %for.end, !dbg !14757

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %type.addr, align 4, !dbg !14758
  switch i32 %7, label %sw.epilog [
    i32 9, label %sw.bb
    i32 3, label %sw.bb4
    i32 4, label %sw.bb10
    i32 5, label %sw.bb16
    i32 6, label %sw.bb22
    i32 7, label %sw.bb28
    i32 8, label %sw.bb32
    i32 10, label %sw.bb36
    i32 0, label %sw.bb40
    i32 1, label %sw.bb46
    i32 2, label %sw.bb52
  ], !dbg !14760

sw.bb:                                            ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !14761
  %sh_prom = zext i32 %8 to i64, !dbg !14761
  %shl = shl i64 1, %sh_prom, !dbg !14761
  %9 = load i64, i64* @reload_reg_used, align 8, !dbg !14761
  %or = or i64 %9, %shl, !dbg !14761
  store i64 %or, i64* @reload_reg_used, align 8, !dbg !14761
  br label %sw.epilog, !dbg !14763

sw.bb4:                                           ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !14764
  %sh_prom5 = zext i32 %10 to i64, !dbg !14764
  %shl6 = shl i64 1, %sh_prom5, !dbg !14764
  %11 = load i32, i32* %opnum.addr, align 4, !dbg !14764
  %idxprom7 = sext i32 %11 to i64, !dbg !14764
  %arrayidx8 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i64 0, i64 %idxprom7, !dbg !14764
  %12 = load i64, i64* %arrayidx8, align 8, !dbg !14764
  %or9 = or i64 %12, %shl6, !dbg !14764
  store i64 %or9, i64* %arrayidx8, align 8, !dbg !14764
  br label %sw.epilog, !dbg !14765

sw.bb10:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !14766
  %sh_prom11 = zext i32 %13 to i64, !dbg !14766
  %shl12 = shl i64 1, %sh_prom11, !dbg !14766
  %14 = load i32, i32* %opnum.addr, align 4, !dbg !14766
  %idxprom13 = sext i32 %14 to i64, !dbg !14766
  %arrayidx14 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i64 0, i64 %idxprom13, !dbg !14766
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !14766
  %or15 = or i64 %15, %shl12, !dbg !14766
  store i64 %or15, i64* %arrayidx14, align 8, !dbg !14766
  br label %sw.epilog, !dbg !14767

sw.bb16:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !14768
  %sh_prom17 = zext i32 %16 to i64, !dbg !14768
  %shl18 = shl i64 1, %sh_prom17, !dbg !14768
  %17 = load i32, i32* %opnum.addr, align 4, !dbg !14768
  %idxprom19 = sext i32 %17 to i64, !dbg !14768
  %arrayidx20 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i64 0, i64 %idxprom19, !dbg !14768
  %18 = load i64, i64* %arrayidx20, align 8, !dbg !14768
  %or21 = or i64 %18, %shl18, !dbg !14768
  store i64 %or21, i64* %arrayidx20, align 8, !dbg !14768
  br label %sw.epilog, !dbg !14769

sw.bb22:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !14770
  %sh_prom23 = zext i32 %19 to i64, !dbg !14770
  %shl24 = shl i64 1, %sh_prom23, !dbg !14770
  %20 = load i32, i32* %opnum.addr, align 4, !dbg !14770
  %idxprom25 = sext i32 %20 to i64, !dbg !14770
  %arrayidx26 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i64 0, i64 %idxprom25, !dbg !14770
  %21 = load i64, i64* %arrayidx26, align 8, !dbg !14770
  %or27 = or i64 %21, %shl24, !dbg !14770
  store i64 %or27, i64* %arrayidx26, align 8, !dbg !14770
  br label %sw.epilog, !dbg !14771

sw.bb28:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !14772
  %sh_prom29 = zext i32 %22 to i64, !dbg !14772
  %shl30 = shl i64 1, %sh_prom29, !dbg !14772
  %23 = load i64, i64* @reload_reg_used_in_op_addr, align 8, !dbg !14772
  %or31 = or i64 %23, %shl30, !dbg !14772
  store i64 %or31, i64* @reload_reg_used_in_op_addr, align 8, !dbg !14772
  br label %sw.epilog, !dbg !14773

sw.bb32:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !14774
  %sh_prom33 = zext i32 %24 to i64, !dbg !14774
  %shl34 = shl i64 1, %sh_prom33, !dbg !14774
  %25 = load i64, i64* @reload_reg_used_in_op_addr_reload, align 8, !dbg !14774
  %or35 = or i64 %25, %shl34, !dbg !14774
  store i64 %or35, i64* @reload_reg_used_in_op_addr_reload, align 8, !dbg !14774
  br label %sw.epilog, !dbg !14775

sw.bb36:                                          ; preds = %for.body
  %26 = load i32, i32* %i, align 4, !dbg !14776
  %sh_prom37 = zext i32 %26 to i64, !dbg !14776
  %shl38 = shl i64 1, %sh_prom37, !dbg !14776
  %27 = load i64, i64* @reload_reg_used_in_other_addr, align 8, !dbg !14776
  %or39 = or i64 %27, %shl38, !dbg !14776
  store i64 %or39, i64* @reload_reg_used_in_other_addr, align 8, !dbg !14776
  br label %sw.epilog, !dbg !14777

sw.bb40:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !dbg !14778
  %sh_prom41 = zext i32 %28 to i64, !dbg !14778
  %shl42 = shl i64 1, %sh_prom41, !dbg !14778
  %29 = load i32, i32* %opnum.addr, align 4, !dbg !14778
  %idxprom43 = sext i32 %29 to i64, !dbg !14778
  %arrayidx44 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom43, !dbg !14778
  %30 = load i64, i64* %arrayidx44, align 8, !dbg !14778
  %or45 = or i64 %30, %shl42, !dbg !14778
  store i64 %or45, i64* %arrayidx44, align 8, !dbg !14778
  br label %sw.epilog, !dbg !14779

sw.bb46:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !14780
  %sh_prom47 = zext i32 %31 to i64, !dbg !14780
  %shl48 = shl i64 1, %sh_prom47, !dbg !14780
  %32 = load i32, i32* %opnum.addr, align 4, !dbg !14780
  %idxprom49 = sext i32 %32 to i64, !dbg !14780
  %arrayidx50 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i64 0, i64 %idxprom49, !dbg !14780
  %33 = load i64, i64* %arrayidx50, align 8, !dbg !14780
  %or51 = or i64 %33, %shl48, !dbg !14780
  store i64 %or51, i64* %arrayidx50, align 8, !dbg !14780
  br label %sw.epilog, !dbg !14781

sw.bb52:                                          ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !dbg !14782
  %sh_prom53 = zext i32 %34 to i64, !dbg !14782
  %shl54 = shl i64 1, %sh_prom53, !dbg !14782
  %35 = load i64, i64* @reload_reg_used_in_insn, align 8, !dbg !14782
  %or55 = or i64 %35, %shl54, !dbg !14782
  store i64 %or55, i64* @reload_reg_used_in_insn, align 8, !dbg !14782
  br label %sw.epilog, !dbg !14783

sw.epilog:                                        ; preds = %for.body, %sw.bb52, %sw.bb46, %sw.bb40, %sw.bb36, %sw.bb32, %sw.bb28, %sw.bb22, %sw.bb16, %sw.bb10, %sw.bb4, %sw.bb
  %36 = load i32, i32* %i, align 4, !dbg !14784
  %sh_prom56 = zext i32 %36 to i64, !dbg !14784
  %shl57 = shl i64 1, %sh_prom56, !dbg !14784
  %37 = load i64, i64* @reload_reg_used_at_all, align 8, !dbg !14784
  %or58 = or i64 %37, %shl57, !dbg !14784
  store i64 %or58, i64* @reload_reg_used_at_all, align 8, !dbg !14784
  br label %for.inc, !dbg !14785

for.inc:                                          ; preds = %sw.epilog
  %38 = load i32, i32* %i, align 4, !dbg !14786
  %inc = add i32 %38, 1, !dbg !14786
  store i32 %inc, i32* %i, align 4, !dbg !14786
  br label %for.cond, !dbg !14787, !llvm.loop !14788

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14790
}

declare dso_local i32 @reg_classes_intersect_p(i32, i32) #2

declare dso_local %struct.rtx_def* @find_equiv_reg(%struct.rtx_def*, %struct.rtx_def*, i32, i32, i16*, i32, i32) #2

declare dso_local i32 @regno_clobbered_p(i32, %struct.rtx_def*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @allocate_reload_reg(%struct.insn_chain* %chain, i32 %r, i32 %last_reload) #0 !dbg !14791 {
entry:
  %retval = alloca i32, align 4
  %chain.addr = alloca %struct.insn_chain*, align 8
  %r.addr = alloca i32, align 4
  %last_reload.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %pass = alloca i32, align 4
  %count = alloca i32, align 4
  %force_group = alloca i32, align 4
  %rclass = alloca i32, align 4
  %regnum = alloca i32, align 4
  %nr = alloca i32, align 4
  %regno = alloca i32, align 4
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain.addr, metadata !14794, metadata !DIExpression()), !dbg !14795
  store i32 %r, i32* %r.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r.addr, metadata !14796, metadata !DIExpression()), !dbg !14797
  store i32 %last_reload, i32* %last_reload.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last_reload.addr, metadata !14798, metadata !DIExpression()), !dbg !14799
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14800, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.declare(metadata i32* %pass, metadata !14802, metadata !DIExpression()), !dbg !14803
  call void @llvm.dbg.declare(metadata i32* %count, metadata !14804, metadata !DIExpression()), !dbg !14805
  call void @llvm.dbg.declare(metadata i32* %force_group, metadata !14806, metadata !DIExpression()), !dbg !14807
  %0 = load i32, i32* %r.addr, align 4, !dbg !14808
  %idxprom = sext i32 %0 to i64, !dbg !14809
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom, !dbg !14809
  %nregs = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 6, !dbg !14810
  %1 = load i32, i32* %nregs, align 8, !dbg !14810
  %cmp = icmp ugt i32 %1, 1, !dbg !14811
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !14812

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %last_reload.addr, align 4, !dbg !14813
  %tobool = icmp ne i32 %2, 0, !dbg !14814
  %lnot = xor i1 %tobool, true, !dbg !14814
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !14815
  %land.ext = zext i1 %3 to i32, !dbg !14812
  store i32 %land.ext, i32* %force_group, align 4, !dbg !14807
  store i32 0, i32* %pass, align 4, !dbg !14816
  br label %for.cond, !dbg !14818

for.cond:                                         ; preds = %for.inc120, %land.end
  %4 = load i32, i32* %pass, align 4, !dbg !14819
  %cmp1 = icmp slt i32 %4, 2, !dbg !14821
  br i1 %cmp1, label %for.body, label %for.end122, !dbg !14822

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* @last_spill_reg, align 4, !dbg !14823
  store i32 %5, i32* %i, align 4, !dbg !14825
  store i32 0, i32* %count, align 4, !dbg !14826
  br label %for.cond2, !dbg !14828

for.cond2:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %count, align 4, !dbg !14829
  %7 = load i32, i32* @n_spills, align 4, !dbg !14831
  %cmp3 = icmp slt i32 %6, %7, !dbg !14832
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !14833

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata i32* %rclass, metadata !14834, metadata !DIExpression()), !dbg !14836
  %8 = load i32, i32* %r.addr, align 4, !dbg !14837
  %idxprom5 = sext i32 %8 to i64, !dbg !14838
  %arrayidx6 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom5, !dbg !14838
  %rclass7 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx6, i32 0, i32 2, !dbg !14839
  %9 = load i32, i32* %rclass7, align 8, !dbg !14839
  store i32 %9, i32* %rclass, align 4, !dbg !14836
  call void @llvm.dbg.declare(metadata i32* %regnum, metadata !14840, metadata !DIExpression()), !dbg !14841
  %10 = load i32, i32* %i, align 4, !dbg !14842
  %inc = add nsw i32 %10, 1, !dbg !14842
  store i32 %inc, i32* %i, align 4, !dbg !14842
  %11 = load i32, i32* %i, align 4, !dbg !14843
  %12 = load i32, i32* @n_spills, align 4, !dbg !14845
  %cmp8 = icmp sge i32 %11, %12, !dbg !14846
  br i1 %cmp8, label %if.then, label %if.end, !dbg !14847

if.then:                                          ; preds = %for.body4
  %13 = load i32, i32* @n_spills, align 4, !dbg !14848
  %14 = load i32, i32* %i, align 4, !dbg !14849
  %sub = sub nsw i32 %14, %13, !dbg !14849
  store i32 %sub, i32* %i, align 4, !dbg !14849
  br label %if.end, !dbg !14850

if.end:                                           ; preds = %if.then, %for.body4
  %15 = load i32, i32* %i, align 4, !dbg !14851
  %idxprom9 = sext i32 %15 to i64, !dbg !14852
  %arrayidx10 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i64 0, i64 %idxprom9, !dbg !14852
  %16 = load i16, i16* %arrayidx10, align 2, !dbg !14852
  %conv = sext i16 %16 to i32, !dbg !14852
  store i32 %conv, i32* %regnum, align 4, !dbg !14853
  %17 = load i32, i32* %regnum, align 4, !dbg !14854
  %18 = load i32, i32* %r.addr, align 4, !dbg !14856
  %idxprom11 = sext i32 %18 to i64, !dbg !14857
  %arrayidx12 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom11, !dbg !14857
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx12, i32 0, i32 12, !dbg !14858
  %19 = load i32, i32* %opnum, align 8, !dbg !14858
  %20 = load i32, i32* %r.addr, align 4, !dbg !14859
  %idxprom13 = sext i32 %20 to i64, !dbg !14860
  %arrayidx14 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom13, !dbg !14860
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx14, i32 0, i32 17, !dbg !14861
  %21 = load i32, i32* %when_needed, align 4, !dbg !14861
  %call = call i32 @reload_reg_free_p(i32 %17, i32 %19, i32 %21), !dbg !14862
  %tobool15 = icmp ne i32 %call, 0, !dbg !14862
  br i1 %tobool15, label %land.lhs.true36, label %lor.lhs.false, !dbg !14863

lor.lhs.false:                                    ; preds = %if.end
  %22 = load i32, i32* %r.addr, align 4, !dbg !14864
  %idxprom16 = sext i32 %22 to i64, !dbg !14865
  %arrayidx17 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom16, !dbg !14865
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx17, i32 0, i32 0, !dbg !14866
  %23 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !14866
  %tobool18 = icmp ne %struct.rtx_def* %23, null, !dbg !14865
  br i1 %tobool18, label %land.lhs.true, label %if.end114, !dbg !14867

land.lhs.true:                                    ; preds = %lor.lhs.false
  %24 = load i64, i64* @reload_reg_used, align 8, !dbg !14868
  %25 = load i32, i32* %regnum, align 4, !dbg !14868
  %sh_prom = zext i32 %25 to i64, !dbg !14868
  %shl = shl i64 1, %sh_prom, !dbg !14868
  %and = and i64 %24, %shl, !dbg !14868
  %tobool19 = icmp ne i64 %and, 0, !dbg !14868
  br i1 %tobool19, label %if.end114, label %land.lhs.true20, !dbg !14869

land.lhs.true20:                                  ; preds = %land.lhs.true
  %26 = load i32, i32* %regnum, align 4, !dbg !14870
  %27 = load i32, i32* %r.addr, align 4, !dbg !14871
  %idxprom21 = sext i32 %27 to i64, !dbg !14872
  %arrayidx22 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom21, !dbg !14872
  %mode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx22, i32 0, i32 5, !dbg !14873
  %28 = load i32, i32* %mode, align 4, !dbg !14873
  %29 = load i32, i32* %r.addr, align 4, !dbg !14874
  %idxprom23 = sext i32 %29 to i64, !dbg !14875
  %arrayidx24 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom23, !dbg !14875
  %opnum25 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx24, i32 0, i32 12, !dbg !14876
  %30 = load i32, i32* %opnum25, align 8, !dbg !14876
  %31 = load i32, i32* %r.addr, align 4, !dbg !14877
  %idxprom26 = sext i32 %31 to i64, !dbg !14878
  %arrayidx27 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom26, !dbg !14878
  %when_needed28 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx27, i32 0, i32 17, !dbg !14879
  %32 = load i32, i32* %when_needed28, align 4, !dbg !14879
  %33 = load i32, i32* %r.addr, align 4, !dbg !14880
  %idxprom29 = sext i32 %33 to i64, !dbg !14881
  %arrayidx30 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom29, !dbg !14881
  %in31 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx30, i32 0, i32 0, !dbg !14882
  %34 = load %struct.rtx_def*, %struct.rtx_def** %in31, align 8, !dbg !14882
  %35 = load i32, i32* %r.addr, align 4, !dbg !14883
  %idxprom32 = sext i32 %35 to i64, !dbg !14884
  %arrayidx33 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom32, !dbg !14884
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx33, i32 0, i32 1, !dbg !14885
  %36 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !14885
  %37 = load i32, i32* %r.addr, align 4, !dbg !14886
  %call34 = call i32 @free_for_value_p(i32 %26, i32 %28, i32 %30, i32 %32, %struct.rtx_def* %34, %struct.rtx_def* %36, i32 %37, i32 1), !dbg !14887
  %tobool35 = icmp ne i32 %call34, 0, !dbg !14887
  br i1 %tobool35, label %land.lhs.true36, label %if.end114, !dbg !14888

land.lhs.true36:                                  ; preds = %land.lhs.true20, %if.end
  %38 = load i32, i32* %rclass, align 4, !dbg !14889
  %idxprom37 = sext i32 %38 to i64, !dbg !14889
  %arrayidx38 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom37, !dbg !14889
  %39 = load i64, i64* %arrayidx38, align 8, !dbg !14889
  %40 = load i32, i32* %regnum, align 4, !dbg !14889
  %sh_prom39 = zext i32 %40 to i64, !dbg !14889
  %shl40 = shl i64 1, %sh_prom39, !dbg !14889
  %and41 = and i64 %39, %shl40, !dbg !14889
  %tobool42 = icmp ne i64 %and41, 0, !dbg !14889
  br i1 %tobool42, label %land.lhs.true43, label %if.end114, !dbg !14890

land.lhs.true43:                                  ; preds = %land.lhs.true36
  %41 = load i32, i32* %regnum, align 4, !dbg !14891
  %42 = load i32, i32* %r.addr, align 4, !dbg !14891
  %idxprom44 = sext i32 %42 to i64, !dbg !14891
  %arrayidx45 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom44, !dbg !14891
  %mode46 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx45, i32 0, i32 5, !dbg !14891
  %43 = load i32, i32* %mode46, align 4, !dbg !14891
  %call47 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %41, i32 %43), !dbg !14891
  %conv48 = zext i8 %call47 to i32, !dbg !14891
  %tobool49 = icmp ne i32 %conv48, 0, !dbg !14891
  br i1 %tobool49, label %land.lhs.true50, label %if.end114, !dbg !14892

land.lhs.true50:                                  ; preds = %land.lhs.true43
  %44 = load i32, i32* %pass, align 4, !dbg !14893
  %tobool51 = icmp ne i32 %44, 0, !dbg !14893
  br i1 %tobool51, label %if.then62, label %lor.lhs.false52, !dbg !14894

lor.lhs.false52:                                  ; preds = %land.lhs.true50
  %45 = load i64, i64* @reload_reg_used_at_all, align 8, !dbg !14895
  %46 = load i32, i32* %regnum, align 4, !dbg !14895
  %sh_prom53 = zext i32 %46 to i64, !dbg !14895
  %shl54 = shl i64 1, %sh_prom53, !dbg !14895
  %and55 = and i64 %45, %shl54, !dbg !14895
  %tobool56 = icmp ne i64 %and55, 0, !dbg !14895
  br i1 %tobool56, label %land.lhs.true57, label %if.end114, !dbg !14896

land.lhs.true57:                                  ; preds = %lor.lhs.false52
  %47 = load i64, i64* @reload_reg_used_for_inherit, align 8, !dbg !14897
  %48 = load i32, i32* %regnum, align 4, !dbg !14897
  %sh_prom58 = zext i32 %48 to i64, !dbg !14897
  %shl59 = shl i64 1, %sh_prom58, !dbg !14897
  %and60 = and i64 %47, %shl59, !dbg !14897
  %tobool61 = icmp ne i64 %and60, 0, !dbg !14897
  br i1 %tobool61, label %if.end114, label %if.then62, !dbg !14898

if.then62:                                        ; preds = %land.lhs.true57, %land.lhs.true50
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !14899, metadata !DIExpression()), !dbg !14901
  %49 = load i32, i32* %regnum, align 4, !dbg !14902
  %idxprom63 = sext i32 %49 to i64, !dbg !14903
  %arrayidx64 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom63, !dbg !14903
  %50 = load i32, i32* %r.addr, align 4, !dbg !14904
  %idxprom65 = sext i32 %50 to i64, !dbg !14905
  %arrayidx66 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom65, !dbg !14905
  %mode67 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx66, i32 0, i32 5, !dbg !14906
  %51 = load i32, i32* %mode67, align 4, !dbg !14906
  %idxprom68 = zext i32 %51 to i64, !dbg !14903
  %arrayidx69 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx64, i64 0, i64 %idxprom68, !dbg !14903
  %52 = load i8, i8* %arrayidx69, align 1, !dbg !14903
  %conv70 = zext i8 %52 to i32, !dbg !14903
  store i32 %conv70, i32* %nr, align 4, !dbg !14901
  %53 = load i32, i32* %force_group, align 4, !dbg !14907
  %tobool71 = icmp ne i32 %53, 0, !dbg !14907
  br i1 %tobool71, label %if.then72, label %if.end76, !dbg !14909

if.then72:                                        ; preds = %if.then62
  %54 = load i32, i32* %r.addr, align 4, !dbg !14910
  %idxprom73 = sext i32 %54 to i64, !dbg !14911
  %arrayidx74 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom73, !dbg !14911
  %nregs75 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx74, i32 0, i32 6, !dbg !14912
  %55 = load i32, i32* %nregs75, align 8, !dbg !14912
  store i32 %55, i32* %nr, align 4, !dbg !14913
  br label %if.end76, !dbg !14914

if.end76:                                         ; preds = %if.then72, %if.then62
  %56 = load i32, i32* %nr, align 4, !dbg !14915
  %cmp77 = icmp eq i32 %56, 1, !dbg !14917
  br i1 %cmp77, label %if.then79, label %if.end83, !dbg !14918

if.then79:                                        ; preds = %if.end76
  %57 = load i32, i32* %force_group, align 4, !dbg !14919
  %tobool80 = icmp ne i32 %57, 0, !dbg !14919
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !14922

if.then81:                                        ; preds = %if.then79
  br label %for.inc, !dbg !14923

if.end82:                                         ; preds = %if.then79
  br label %for.end, !dbg !14924

if.end83:                                         ; preds = %if.end76
  br label %while.cond, !dbg !14925

while.cond:                                       ; preds = %if.end109, %if.end83
  %58 = load i32, i32* %nr, align 4, !dbg !14926
  %cmp84 = icmp sgt i32 %58, 1, !dbg !14927
  br i1 %cmp84, label %while.body, label %while.end, !dbg !14925

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !14928, metadata !DIExpression()), !dbg !14930
  %59 = load i32, i32* %regnum, align 4, !dbg !14931
  %60 = load i32, i32* %nr, align 4, !dbg !14932
  %add = add nsw i32 %59, %60, !dbg !14933
  %sub86 = sub nsw i32 %add, 1, !dbg !14934
  store i32 %sub86, i32* %regno, align 4, !dbg !14930
  %61 = load i32, i32* %rclass, align 4, !dbg !14935
  %idxprom87 = sext i32 %61 to i64, !dbg !14935
  %arrayidx88 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom87, !dbg !14935
  %62 = load i64, i64* %arrayidx88, align 8, !dbg !14935
  %63 = load i32, i32* %regno, align 4, !dbg !14935
  %sh_prom89 = zext i32 %63 to i64, !dbg !14935
  %shl90 = shl i64 1, %sh_prom89, !dbg !14935
  %and91 = and i64 %62, %shl90, !dbg !14935
  %tobool92 = icmp ne i64 %and91, 0, !dbg !14935
  br i1 %tobool92, label %land.lhs.true93, label %if.then108, !dbg !14937

land.lhs.true93:                                  ; preds = %while.body
  %64 = load i32, i32* %regno, align 4, !dbg !14938
  %idxprom94 = sext i32 %64 to i64, !dbg !14939
  %arrayidx95 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i64 0, i64 %idxprom94, !dbg !14939
  %65 = load i16, i16* %arrayidx95, align 2, !dbg !14939
  %conv96 = sext i16 %65 to i32, !dbg !14939
  %cmp97 = icmp sge i32 %conv96, 0, !dbg !14940
  br i1 %cmp97, label %land.lhs.true99, label %if.then108, !dbg !14941

land.lhs.true99:                                  ; preds = %land.lhs.true93
  %66 = load i32, i32* %regno, align 4, !dbg !14942
  %67 = load i32, i32* %r.addr, align 4, !dbg !14943
  %idxprom100 = sext i32 %67 to i64, !dbg !14944
  %arrayidx101 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom100, !dbg !14944
  %opnum102 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx101, i32 0, i32 12, !dbg !14945
  %68 = load i32, i32* %opnum102, align 8, !dbg !14945
  %69 = load i32, i32* %r.addr, align 4, !dbg !14946
  %idxprom103 = sext i32 %69 to i64, !dbg !14947
  %arrayidx104 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom103, !dbg !14947
  %when_needed105 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx104, i32 0, i32 17, !dbg !14948
  %70 = load i32, i32* %when_needed105, align 4, !dbg !14948
  %call106 = call i32 @reload_reg_free_p(i32 %66, i32 %68, i32 %70), !dbg !14949
  %tobool107 = icmp ne i32 %call106, 0, !dbg !14949
  br i1 %tobool107, label %if.end109, label %if.then108, !dbg !14950

if.then108:                                       ; preds = %land.lhs.true99, %land.lhs.true93, %while.body
  br label %while.end, !dbg !14951

if.end109:                                        ; preds = %land.lhs.true99
  %71 = load i32, i32* %nr, align 4, !dbg !14952
  %dec = add nsw i32 %71, -1, !dbg !14952
  store i32 %dec, i32* %nr, align 4, !dbg !14952
  br label %while.cond, !dbg !14925, !llvm.loop !14953

while.end:                                        ; preds = %if.then108, %while.cond
  %72 = load i32, i32* %nr, align 4, !dbg !14955
  %cmp110 = icmp eq i32 %72, 1, !dbg !14957
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !14958

if.then112:                                       ; preds = %while.end
  br label %for.end, !dbg !14959

if.end113:                                        ; preds = %while.end
  br label %if.end114, !dbg !14960

if.end114:                                        ; preds = %if.end113, %land.lhs.true57, %lor.lhs.false52, %land.lhs.true43, %land.lhs.true36, %land.lhs.true20, %land.lhs.true, %lor.lhs.false
  br label %for.inc, !dbg !14961

for.inc:                                          ; preds = %if.end114, %if.then81
  %73 = load i32, i32* %count, align 4, !dbg !14962
  %inc115 = add nsw i32 %73, 1, !dbg !14962
  store i32 %inc115, i32* %count, align 4, !dbg !14962
  br label %for.cond2, !dbg !14963, !llvm.loop !14964

for.end:                                          ; preds = %if.then112, %if.end82, %for.cond2
  %74 = load i32, i32* %count, align 4, !dbg !14966
  %75 = load i32, i32* @n_spills, align 4, !dbg !14968
  %cmp116 = icmp slt i32 %74, %75, !dbg !14969
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !14970

if.then118:                                       ; preds = %for.end
  br label %for.end122, !dbg !14971

if.end119:                                        ; preds = %for.end
  br label %for.inc120, !dbg !14972

for.inc120:                                       ; preds = %if.end119
  %76 = load i32, i32* %pass, align 4, !dbg !14973
  %inc121 = add nsw i32 %76, 1, !dbg !14973
  store i32 %inc121, i32* %pass, align 4, !dbg !14973
  br label %for.cond, !dbg !14974, !llvm.loop !14975

for.end122:                                       ; preds = %if.then118, %for.cond
  %77 = load i32, i32* %count, align 4, !dbg !14977
  %78 = load i32, i32* @n_spills, align 4, !dbg !14979
  %cmp123 = icmp sge i32 %77, %78, !dbg !14980
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !14981

if.then125:                                       ; preds = %for.end122
  store i32 0, i32* %retval, align 4, !dbg !14982
  br label %return, !dbg !14982

if.end126:                                        ; preds = %for.end122
  %79 = load i32, i32* %i, align 4, !dbg !14983
  %80 = load i32, i32* %r.addr, align 4, !dbg !14984
  %call127 = call i32 @set_reload_reg(i32 %79, i32 %80), !dbg !14985
  store i32 %call127, i32* %retval, align 4, !dbg !14986
  br label %return, !dbg !14986

return:                                           ; preds = %if.end126, %if.then125
  %81 = load i32, i32* %retval, align 4, !dbg !14987
  ret i32 %81, !dbg !14987
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @set_reload_reg(i32 %i, i32 %r) #0 !dbg !14988 {
entry:
  %retval = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %r.addr = alloca i32, align 4
  %regno = alloca i32, align 4
  %reg = alloca %struct.rtx_def*, align 8
  %test_mode = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !14989, metadata !DIExpression()), !dbg !14990
  store i32 %r, i32* %r.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r.addr, metadata !14991, metadata !DIExpression()), !dbg !14992
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !14993, metadata !DIExpression()), !dbg !14994
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg, metadata !14995, metadata !DIExpression()), !dbg !14996
  %0 = load i32, i32* %i.addr, align 4, !dbg !14997
  %idxprom = sext i32 %0 to i64, !dbg !14998
  %arrayidx = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_rtx, i64 0, i64 %idxprom, !dbg !14998
  %1 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !14998
  store %struct.rtx_def* %1, %struct.rtx_def** %reg, align 8, !dbg !14996
  %2 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !14999
  %cmp = icmp eq %struct.rtx_def* %2, null, !dbg !15001
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15002

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !15003
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !15003
  %bf.load = load i32, i32* %4, align 8, !dbg !15003
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !15003
  %bf.clear = and i32 %bf.lshr, 255, !dbg !15003
  %5 = load i32, i32* %r.addr, align 4, !dbg !15004
  %idxprom1 = sext i32 %5 to i64, !dbg !15005
  %arrayidx2 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom1, !dbg !15005
  %mode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx2, i32 0, i32 5, !dbg !15006
  %6 = load i32, i32* %mode, align 4, !dbg !15006
  %cmp3 = icmp ne i32 %bf.clear, %6, !dbg !15007
  br i1 %cmp3, label %if.then, label %if.end, !dbg !15008

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load i32, i32* %r.addr, align 4, !dbg !15009
  %idxprom4 = sext i32 %7 to i64, !dbg !15010
  %arrayidx5 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom4, !dbg !15010
  %mode6 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx5, i32 0, i32 5, !dbg !15011
  %8 = load i32, i32* %mode6, align 4, !dbg !15011
  %9 = load i32, i32* %i.addr, align 4, !dbg !15012
  %idxprom7 = sext i32 %9 to i64, !dbg !15013
  %arrayidx8 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i64 0, i64 %idxprom7, !dbg !15013
  %10 = load i16, i16* %arrayidx8, align 2, !dbg !15013
  %conv = sext i16 %10 to i32, !dbg !15013
  %call = call %struct.rtx_def* @gen_rtx_REG(i32 %8, i32 %conv), !dbg !15014
  store %struct.rtx_def* %call, %struct.rtx_def** %reg, align 8, !dbg !15015
  %11 = load i32, i32* %i.addr, align 4, !dbg !15016
  %idxprom9 = sext i32 %11 to i64, !dbg !15017
  %arrayidx10 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_rtx, i64 0, i64 %idxprom9, !dbg !15017
  store %struct.rtx_def* %call, %struct.rtx_def** %arrayidx10, align 8, !dbg !15018
  br label %if.end, !dbg !15017

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %12 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !15019
  %call11 = call i32 @true_regnum(%struct.rtx_def* %12), !dbg !15020
  store i32 %call11, i32* %regno, align 4, !dbg !15021
  %13 = load i32, i32* %regno, align 4, !dbg !15022
  %14 = load i32, i32* %r.addr, align 4, !dbg !15022
  %idxprom12 = sext i32 %14 to i64, !dbg !15022
  %arrayidx13 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom12, !dbg !15022
  %mode14 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx13, i32 0, i32 5, !dbg !15022
  %15 = load i32, i32* %mode14, align 4, !dbg !15022
  %call15 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %13, i32 %15), !dbg !15022
  %tobool = icmp ne i8 %call15, 0, !dbg !15022
  br i1 %tobool, label %if.then16, label %if.end72, !dbg !15024

if.then16:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %test_mode, metadata !15025, metadata !DIExpression()), !dbg !15027
  store i32 0, i32* %test_mode, align 4, !dbg !15027
  %16 = load i32, i32* %r.addr, align 4, !dbg !15028
  %idxprom17 = sext i32 %16 to i64, !dbg !15030
  %arrayidx18 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom17, !dbg !15030
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx18, i32 0, i32 0, !dbg !15031
  %17 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !15031
  %tobool19 = icmp ne %struct.rtx_def* %17, null, !dbg !15030
  br i1 %tobool19, label %if.then20, label %if.end27, !dbg !15032

if.then20:                                        ; preds = %if.then16
  %18 = load i32, i32* %r.addr, align 4, !dbg !15033
  %idxprom21 = sext i32 %18 to i64, !dbg !15033
  %arrayidx22 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom21, !dbg !15033
  %in23 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx22, i32 0, i32 0, !dbg !15033
  %19 = load %struct.rtx_def*, %struct.rtx_def** %in23, align 8, !dbg !15033
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !15033
  %bf.load24 = load i32, i32* %20, align 8, !dbg !15033
  %bf.lshr25 = lshr i32 %bf.load24, 16, !dbg !15033
  %bf.clear26 = and i32 %bf.lshr25, 255, !dbg !15033
  store i32 %bf.clear26, i32* %test_mode, align 4, !dbg !15034
  br label %if.end27, !dbg !15035

if.end27:                                         ; preds = %if.then20, %if.then16
  %21 = load i32, i32* %r.addr, align 4, !dbg !15036
  %idxprom28 = sext i32 %21 to i64, !dbg !15038
  %arrayidx29 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom28, !dbg !15038
  %in30 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx29, i32 0, i32 0, !dbg !15039
  %22 = load %struct.rtx_def*, %struct.rtx_def** %in30, align 8, !dbg !15039
  %cmp31 = icmp ne %struct.rtx_def* %22, null, !dbg !15040
  br i1 %cmp31, label %land.lhs.true, label %if.then38, !dbg !15041

land.lhs.true:                                    ; preds = %if.end27
  %23 = load i32, i32* %test_mode, align 4, !dbg !15042
  %cmp33 = icmp ne i32 %23, 0, !dbg !15043
  br i1 %cmp33, label %land.lhs.true35, label %if.then38, !dbg !15044

land.lhs.true35:                                  ; preds = %land.lhs.true
  %24 = load i32, i32* %regno, align 4, !dbg !15045
  %25 = load i32, i32* %test_mode, align 4, !dbg !15045
  %call36 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %24, i32 %25), !dbg !15045
  %tobool37 = icmp ne i8 %call36, 0, !dbg !15045
  br i1 %tobool37, label %if.then38, label %if.end71, !dbg !15046

if.then38:                                        ; preds = %land.lhs.true35, %land.lhs.true, %if.end27
  %26 = load i32, i32* %r.addr, align 4, !dbg !15047
  %idxprom39 = sext i32 %26 to i64, !dbg !15049
  %arrayidx40 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom39, !dbg !15049
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx40, i32 0, i32 1, !dbg !15050
  %27 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !15050
  %cmp41 = icmp ne %struct.rtx_def* %27, null, !dbg !15051
  br i1 %cmp41, label %land.lhs.true43, label %if.then52, !dbg !15052

land.lhs.true43:                                  ; preds = %if.then38
  %28 = load i32, i32* %regno, align 4, !dbg !15053
  %29 = load i32, i32* %r.addr, align 4, !dbg !15053
  %idxprom44 = sext i32 %29 to i64, !dbg !15053
  %arrayidx45 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom44, !dbg !15053
  %out46 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx45, i32 0, i32 1, !dbg !15053
  %30 = load %struct.rtx_def*, %struct.rtx_def** %out46, align 8, !dbg !15053
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !15053
  %bf.load47 = load i32, i32* %31, align 8, !dbg !15053
  %bf.lshr48 = lshr i32 %bf.load47, 16, !dbg !15053
  %bf.clear49 = and i32 %bf.lshr48, 255, !dbg !15053
  %call50 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %28, i32 %bf.clear49), !dbg !15053
  %tobool51 = icmp ne i8 %call50, 0, !dbg !15053
  br i1 %tobool51, label %if.then52, label %if.end70, !dbg !15054

if.then52:                                        ; preds = %land.lhs.true43, %if.then38
  %32 = load i32, i32* %i.addr, align 4, !dbg !15055
  store i32 %32, i32* @last_spill_reg, align 4, !dbg !15057
  %33 = load i32, i32* %i.addr, align 4, !dbg !15058
  %idxprom53 = sext i32 %33 to i64, !dbg !15059
  %arrayidx54 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i64 0, i64 %idxprom53, !dbg !15059
  %34 = load i16, i16* %arrayidx54, align 2, !dbg !15059
  %conv55 = sext i16 %34 to i32, !dbg !15059
  %35 = load i32, i32* %r.addr, align 4, !dbg !15060
  %idxprom56 = sext i32 %35 to i64, !dbg !15061
  %arrayidx57 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom56, !dbg !15061
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx57, i32 0, i32 12, !dbg !15062
  %36 = load i32, i32* %opnum, align 8, !dbg !15062
  %37 = load i32, i32* %r.addr, align 4, !dbg !15063
  %idxprom58 = sext i32 %37 to i64, !dbg !15064
  %arrayidx59 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom58, !dbg !15064
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx59, i32 0, i32 17, !dbg !15065
  %38 = load i32, i32* %when_needed, align 4, !dbg !15065
  %39 = load i32, i32* %r.addr, align 4, !dbg !15066
  %idxprom60 = sext i32 %39 to i64, !dbg !15067
  %arrayidx61 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom60, !dbg !15067
  %mode62 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx61, i32 0, i32 5, !dbg !15068
  %40 = load i32, i32* %mode62, align 4, !dbg !15068
  call void @mark_reload_reg_in_use(i32 %conv55, i32 %36, i32 %38, i32 %40), !dbg !15069
  %41 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !15070
  %42 = load i32, i32* %r.addr, align 4, !dbg !15071
  %idxprom63 = sext i32 %42 to i64, !dbg !15072
  %arrayidx64 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom63, !dbg !15072
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx64, i32 0, i32 11, !dbg !15073
  store %struct.rtx_def* %41, %struct.rtx_def** %reg_rtx, align 8, !dbg !15074
  %43 = load i32, i32* %i.addr, align 4, !dbg !15075
  %idxprom65 = sext i32 %43 to i64, !dbg !15076
  %arrayidx66 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_regs, i64 0, i64 %idxprom65, !dbg !15076
  %44 = load i16, i16* %arrayidx66, align 2, !dbg !15076
  %conv67 = sext i16 %44 to i32, !dbg !15076
  %45 = load i32, i32* %r.addr, align 4, !dbg !15077
  %idxprom68 = sext i32 %45 to i64, !dbg !15078
  %arrayidx69 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom68, !dbg !15078
  store i32 %conv67, i32* %arrayidx69, align 4, !dbg !15079
  store i32 1, i32* %retval, align 4, !dbg !15080
  br label %return, !dbg !15080

if.end70:                                         ; preds = %land.lhs.true43
  br label %if.end71, !dbg !15081

if.end71:                                         ; preds = %if.end70, %land.lhs.true35
  br label %if.end72, !dbg !15082

if.end72:                                         ; preds = %if.end71, %if.end
  store i32 0, i32* %retval, align 4, !dbg !15083
  br label %return, !dbg !15083

return:                                           ; preds = %if.end72, %if.then52
  %46 = load i32, i32* %retval, align 4, !dbg !15084
  ret i32 %46, !dbg !15084
}

; Function Attrs: noinline nounwind uwtable
define internal void @failed_reload(%struct.rtx_def* %insn, i32 %r) #0 !dbg !15085 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %r.addr = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !15088, metadata !DIExpression()), !dbg !15089
  store i32 %r, i32* %r.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %r.addr, metadata !15090, metadata !DIExpression()), !dbg !15091
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !15092
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !15092
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !15092
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !15092
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !15092
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !15092
  %call = call i32 @asm_noperands(%struct.rtx_def* %1), !dbg !15094
  %cmp = icmp slt i32 %call, 0, !dbg !15095
  br i1 %cmp, label %if.then, label %if.end, !dbg !15096

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !15097
  call void @_fatal_insn(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), %struct.rtx_def* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 5706, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !15097
  br label %if.end, !dbg !15097

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !15098
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i64 0, i64 0)), !dbg !15099
  %4 = load i32, i32* %r.addr, align 4, !dbg !15100
  %idxprom = sext i32 %4 to i64, !dbg !15101
  %arrayidx1 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom, !dbg !15101
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx1, i32 0, i32 0, !dbg !15102
  store %struct.rtx_def* null, %struct.rtx_def** %in, align 8, !dbg !15103
  %5 = load i32, i32* %r.addr, align 4, !dbg !15104
  %idxprom2 = sext i32 %5 to i64, !dbg !15105
  %arrayidx3 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom2, !dbg !15105
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx3, i32 0, i32 1, !dbg !15106
  store %struct.rtx_def* null, %struct.rtx_def** %out, align 8, !dbg !15107
  %6 = load i32, i32* %r.addr, align 4, !dbg !15108
  %idxprom4 = sext i32 %6 to i64, !dbg !15109
  %arrayidx5 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom4, !dbg !15109
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx5, i32 0, i32 11, !dbg !15110
  store %struct.rtx_def* null, %struct.rtx_def** %reg_rtx, align 8, !dbg !15111
  %7 = load i32, i32* %r.addr, align 4, !dbg !15112
  %idxprom6 = sext i32 %7 to i64, !dbg !15113
  %arrayidx7 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom6, !dbg !15113
  %optional = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx7, i32 0, i32 18, !dbg !15114
  %bf.load = load i8, i8* %optional, align 8, !dbg !15115
  %bf.clear = and i8 %bf.load, -2, !dbg !15115
  %bf.set = or i8 %bf.clear, 1, !dbg !15115
  store i8 %bf.set, i8* %optional, align 8, !dbg !15115
  %8 = load i32, i32* %r.addr, align 4, !dbg !15116
  %idxprom8 = sext i32 %8 to i64, !dbg !15117
  %arrayidx9 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom8, !dbg !15117
  %secondary_p = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx9, i32 0, i32 18, !dbg !15118
  %bf.load10 = load i8, i8* %secondary_p, align 8, !dbg !15119
  %bf.clear11 = and i8 %bf.load10, -5, !dbg !15119
  %bf.set12 = or i8 %bf.clear11, 4, !dbg !15119
  store i8 %bf.set12, i8* %secondary_p, align 8, !dbg !15119
  ret void, !dbg !15120
}

declare dso_local i32 @remove_address_replacements(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @reload_reg_free_for_value_p(i32 %start_regno, i32 %regno, i32 %opnum, i32 %type, %struct.rtx_def* %value, %struct.rtx_def* %out, i32 %reloadnum, i32 %ignore_address_reloads) #0 !dbg !15121 {
entry:
  %retval = alloca i32, align 4
  %start_regno.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %value.addr = alloca %struct.rtx_def*, align 8
  %out.addr = alloca %struct.rtx_def*, align 8
  %reloadnum.addr = alloca i32, align 4
  %ignore_address_reloads.addr = alloca i32, align 4
  %time1 = alloca i32, align 4
  %check_earlyclobber = alloca i32, align 4
  %i = alloca i32, align 4
  %copy = alloca i32, align 4
  %reg = alloca %struct.rtx_def*, align 8
  %other_input = alloca %struct.rtx_def*, align 8
  %time2 = alloca i32, align 4
  store i32 %start_regno, i32* %start_regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_regno.addr, metadata !15124, metadata !DIExpression()), !dbg !15125
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !15126, metadata !DIExpression()), !dbg !15127
  store i32 %opnum, i32* %opnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opnum.addr, metadata !15128, metadata !DIExpression()), !dbg !15129
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !15130, metadata !DIExpression()), !dbg !15131
  store %struct.rtx_def* %value, %struct.rtx_def** %value.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %value.addr, metadata !15132, metadata !DIExpression()), !dbg !15133
  store %struct.rtx_def* %out, %struct.rtx_def** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out.addr, metadata !15134, metadata !DIExpression()), !dbg !15135
  store i32 %reloadnum, i32* %reloadnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reloadnum.addr, metadata !15136, metadata !DIExpression()), !dbg !15137
  store i32 %ignore_address_reloads, i32* %ignore_address_reloads.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ignore_address_reloads.addr, metadata !15138, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.declare(metadata i32* %time1, metadata !15140, metadata !DIExpression()), !dbg !15141
  call void @llvm.dbg.declare(metadata i32* %check_earlyclobber, metadata !15142, metadata !DIExpression()), !dbg !15143
  store i32 0, i32* %check_earlyclobber, align 4, !dbg !15143
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15144, metadata !DIExpression()), !dbg !15145
  call void @llvm.dbg.declare(metadata i32* %copy, metadata !15146, metadata !DIExpression()), !dbg !15147
  store i32 0, i32* %copy, align 4, !dbg !15147
  %0 = load i64, i64* @reload_reg_unavailable, align 8, !dbg !15148
  %1 = load i32, i32* %regno.addr, align 4, !dbg !15148
  %sh_prom = zext i32 %1 to i64, !dbg !15148
  %shl = shl i64 1, %sh_prom, !dbg !15148
  %and = and i64 %0, %shl, !dbg !15148
  %tobool = icmp ne i64 %and, 0, !dbg !15148
  br i1 %tobool, label %if.then, label %if.end, !dbg !15150

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15151
  br label %return, !dbg !15151

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !15152
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !15154
  %cmp = icmp eq %struct.rtx_def* %2, %3, !dbg !15155
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !15156

if.then1:                                         ; preds = %if.end
  store i32 1, i32* %copy, align 4, !dbg !15157
  store %struct.rtx_def* null, %struct.rtx_def** %out.addr, align 8, !dbg !15159
  br label %if.end2, !dbg !15160

if.end2:                                          ; preds = %if.then1, %if.end
  %4 = load i32, i32* %type.addr, align 4, !dbg !15161
  switch i32 %4, label %sw.default [
    i32 10, label %sw.bb
    i32 9, label %sw.bb4
    i32 4, label %sw.bb7
    i32 3, label %sw.bb8
    i32 0, label %sw.bb11
    i32 8, label %sw.bb16
    i32 7, label %sw.bb17
    i32 6, label %sw.bb20
    i32 5, label %sw.bb22
  ], !dbg !15162

sw.bb:                                            ; preds = %if.end2
  %5 = load i32, i32* %copy, align 4, !dbg !15163
  %tobool3 = icmp ne i32 %5, 0, !dbg !15163
  %6 = zext i1 %tobool3 to i64, !dbg !15163
  %cond = select i1 %tobool3, i32 0, i32 1, !dbg !15163
  store i32 %cond, i32* %time1, align 4, !dbg !15165
  br label %sw.epilog, !dbg !15166

sw.bb4:                                           ; preds = %if.end2
  %7 = load i32, i32* %copy, align 4, !dbg !15167
  %tobool5 = icmp ne i32 %7, 0, !dbg !15167
  %8 = zext i1 %tobool5 to i64, !dbg !15167
  %cond6 = select i1 %tobool5, i32 1, i32 155, !dbg !15167
  store i32 %cond6, i32* %time1, align 4, !dbg !15168
  br label %sw.epilog, !dbg !15169

sw.bb7:                                           ; preds = %if.end2
  %9 = load i32, i32* %opnum.addr, align 4, !dbg !15170
  %mul = mul nsw i32 %9, 4, !dbg !15171
  %add = add nsw i32 %mul, 2, !dbg !15172
  store i32 %add, i32* %time1, align 4, !dbg !15173
  br label %sw.epilog, !dbg !15174

sw.bb8:                                           ; preds = %if.end2
  %10 = load i32, i32* %opnum.addr, align 4, !dbg !15175
  %mul9 = mul nsw i32 %10, 4, !dbg !15176
  %add10 = add nsw i32 %mul9, 3, !dbg !15177
  store i32 %add10, i32* %time1, align 4, !dbg !15178
  br label %sw.epilog, !dbg !15179

sw.bb11:                                          ; preds = %if.end2
  %11 = load i32, i32* %copy, align 4, !dbg !15180
  %tobool12 = icmp ne i32 %11, 0, !dbg !15180
  br i1 %tobool12, label %cond.true, label %cond.false, !dbg !15180

cond.true:                                        ; preds = %sw.bb11
  %12 = load i32, i32* %opnum.addr, align 4, !dbg !15181
  %mul13 = mul nsw i32 %12, 4, !dbg !15182
  %add14 = add nsw i32 %mul13, 4, !dbg !15183
  br label %cond.end, !dbg !15180

cond.false:                                       ; preds = %sw.bb11
  br label %cond.end, !dbg !15180

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %add14, %cond.true ], [ 123, %cond.false ], !dbg !15180
  store i32 %cond15, i32* %time1, align 4, !dbg !15184
  br label %sw.epilog, !dbg !15185

sw.bb16:                                          ; preds = %if.end2
  store i32 121, i32* %time1, align 4, !dbg !15186
  br label %sw.epilog, !dbg !15187

sw.bb17:                                          ; preds = %if.end2
  %13 = load i32, i32* %copy, align 4, !dbg !15188
  %tobool18 = icmp ne i32 %13, 0, !dbg !15188
  %14 = zext i1 %tobool18 to i64, !dbg !15188
  %cond19 = select i1 %tobool18, i32 122, i32 123, !dbg !15188
  store i32 %cond19, i32* %time1, align 4, !dbg !15189
  br label %sw.epilog, !dbg !15190

sw.bb20:                                          ; preds = %if.end2
  %15 = load i32, i32* %opnum.addr, align 4, !dbg !15191
  %add21 = add nsw i32 124, %15, !dbg !15192
  store i32 %add21, i32* %time1, align 4, !dbg !15193
  br label %sw.epilog, !dbg !15194

sw.bb22:                                          ; preds = %if.end2
  %16 = load i32, i32* %opnum.addr, align 4, !dbg !15195
  %add23 = add nsw i32 125, %16, !dbg !15196
  store i32 %add23, i32* %time1, align 4, !dbg !15197
  br label %sw.epilog, !dbg !15198

sw.default:                                       ; preds = %if.end2
  store i32 155, i32* %time1, align 4, !dbg !15199
  br label %sw.epilog, !dbg !15200

sw.epilog:                                        ; preds = %sw.default, %sw.bb22, %sw.bb20, %sw.bb17, %sw.bb16, %cond.end, %sw.bb8, %sw.bb7, %sw.bb4, %sw.bb
  store i32 0, i32* %i, align 4, !dbg !15201
  br label %for.cond, !dbg !15203

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %17 = load i32, i32* %i, align 4, !dbg !15204
  %18 = load i32, i32* @n_reloads, align 4, !dbg !15206
  %cmp24 = icmp slt i32 %17, %18, !dbg !15207
  br i1 %cmp24, label %for.body, label %for.end, !dbg !15208

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg, metadata !15209, metadata !DIExpression()), !dbg !15211
  %19 = load i32, i32* %i, align 4, !dbg !15212
  %idxprom = sext i32 %19 to i64, !dbg !15213
  %arrayidx = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom, !dbg !15213
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx, i32 0, i32 11, !dbg !15214
  %20 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15214
  store %struct.rtx_def* %20, %struct.rtx_def** %reg, align 8, !dbg !15211
  %21 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !15215
  %tobool25 = icmp ne %struct.rtx_def* %21, null, !dbg !15215
  br i1 %tobool25, label %land.lhs.true, label %if.end223, !dbg !15217

land.lhs.true:                                    ; preds = %for.body
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !15218
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !15218
  %bf.load = load i32, i32* %23, align 8, !dbg !15218
  %bf.clear = and i32 %bf.load, 65535, !dbg !15218
  %cmp26 = icmp eq i32 %bf.clear, 37, !dbg !15218
  br i1 %cmp26, label %land.lhs.true27, label %if.end223, !dbg !15219

land.lhs.true27:                                  ; preds = %land.lhs.true
  %24 = load i32, i32* %regno.addr, align 4, !dbg !15220
  %25 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !15221
  %call = call i32 @true_regnum(%struct.rtx_def* %25), !dbg !15222
  %sub = sub i32 %24, %call, !dbg !15223
  %26 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !15224
  %call28 = call i32 @rhs_regno(%struct.rtx_def* %26), !dbg !15224
  %idxprom29 = zext i32 %call28 to i64, !dbg !15225
  %arrayidx30 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom29, !dbg !15225
  %27 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !15226
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !15226
  %bf.load31 = load i32, i32* %28, align 8, !dbg !15226
  %bf.lshr = lshr i32 %bf.load31, 16, !dbg !15226
  %bf.clear32 = and i32 %bf.lshr, 255, !dbg !15226
  %idxprom33 = zext i32 %bf.clear32 to i64, !dbg !15225
  %arrayidx34 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx30, i64 0, i64 %idxprom33, !dbg !15225
  %29 = load i8, i8* %arrayidx34, align 1, !dbg !15225
  %conv = zext i8 %29 to i32, !dbg !15225
  %sub35 = sub i32 %conv, 1, !dbg !15227
  %cmp36 = icmp ule i32 %sub, %sub35, !dbg !15228
  br i1 %cmp36, label %land.lhs.true38, label %if.end223, !dbg !15229

land.lhs.true38:                                  ; preds = %land.lhs.true27
  %30 = load i32, i32* %i, align 4, !dbg !15230
  %31 = load i32, i32* %reloadnum.addr, align 4, !dbg !15231
  %cmp39 = icmp ne i32 %30, %31, !dbg !15232
  br i1 %cmp39, label %if.then41, label %if.end223, !dbg !15233

if.then41:                                        ; preds = %land.lhs.true38
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %other_input, metadata !15234, metadata !DIExpression()), !dbg !15236
  %32 = load i32, i32* %i, align 4, !dbg !15237
  %idxprom42 = sext i32 %32 to i64, !dbg !15238
  %arrayidx43 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom42, !dbg !15238
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx43, i32 0, i32 0, !dbg !15239
  %33 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !15239
  store %struct.rtx_def* %33, %struct.rtx_def** %other_input, align 8, !dbg !15236
  %34 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !15240
  %call44 = call i32 @true_regnum(%struct.rtx_def* %34), !dbg !15242
  %35 = load i32, i32* %start_regno.addr, align 4, !dbg !15243
  %cmp45 = icmp ne i32 %call44, %35, !dbg !15244
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !15245

if.then47:                                        ; preds = %if.then41
  store %struct.rtx_def* null, %struct.rtx_def** %other_input, align 8, !dbg !15246
  br label %if.end48, !dbg !15247

if.end48:                                         ; preds = %if.then47, %if.then41
  %36 = load %struct.rtx_def*, %struct.rtx_def** %other_input, align 8, !dbg !15248
  %tobool49 = icmp ne %struct.rtx_def* %36, null, !dbg !15248
  br i1 %tobool49, label %lor.lhs.false, label %if.then59, !dbg !15250

lor.lhs.false:                                    ; preds = %if.end48
  %37 = load %struct.rtx_def*, %struct.rtx_def** %other_input, align 8, !dbg !15251
  %38 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !15252
  %call50 = call i32 @rtx_equal_p(%struct.rtx_def* %37, %struct.rtx_def* %38), !dbg !15253
  %tobool51 = icmp ne i32 %call50, 0, !dbg !15253
  br i1 %tobool51, label %lor.lhs.false52, label %if.then59, !dbg !15254

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %39 = load i32, i32* %i, align 4, !dbg !15255
  %idxprom53 = sext i32 %39 to i64, !dbg !15256
  %arrayidx54 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom53, !dbg !15256
  %out55 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx54, i32 0, i32 1, !dbg !15257
  %40 = load %struct.rtx_def*, %struct.rtx_def** %out55, align 8, !dbg !15257
  %tobool56 = icmp ne %struct.rtx_def* %40, null, !dbg !15256
  br i1 %tobool56, label %if.then59, label %lor.lhs.false57, !dbg !15258

lor.lhs.false57:                                  ; preds = %lor.lhs.false52
  %41 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !15259
  %tobool58 = icmp ne %struct.rtx_def* %41, null, !dbg !15259
  br i1 %tobool58, label %if.then59, label %if.end222, !dbg !15260

if.then59:                                        ; preds = %lor.lhs.false57, %lor.lhs.false52, %lor.lhs.false, %if.end48
  call void @llvm.dbg.declare(metadata i32* %time2, metadata !15261, metadata !DIExpression()), !dbg !15263
  %42 = load i32, i32* %i, align 4, !dbg !15264
  %idxprom60 = sext i32 %42 to i64, !dbg !15265
  %arrayidx61 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom60, !dbg !15265
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx61, i32 0, i32 17, !dbg !15266
  %43 = load i32, i32* %when_needed, align 4, !dbg !15266
  switch i32 %43, label %sw.default194 [
    i32 10, label %sw.bb62
    i32 4, label %sw.bb63
    i32 3, label %sw.bb101
    i32 0, label %sw.bb124
    i32 8, label %sw.bb130
    i32 7, label %sw.bb146
    i32 2, label %sw.bb147
    i32 1, label %sw.bb148
    i32 6, label %sw.bb149
    i32 5, label %sw.bb169
    i32 9, label %sw.bb174
  ], !dbg !15267

sw.bb62:                                          ; preds = %if.then59
  store i32 0, i32* %time2, align 4, !dbg !15268
  br label %sw.epilog195, !dbg !15270

sw.bb63:                                          ; preds = %if.then59
  %44 = load i32, i32* %type.addr, align 4, !dbg !15271
  %cmp64 = icmp eq i32 %44, 3, !dbg !15273
  br i1 %cmp64, label %land.lhs.true66, label %if.end78, !dbg !15274

land.lhs.true66:                                  ; preds = %sw.bb63
  %45 = load i32, i32* %reloadnum.addr, align 4, !dbg !15275
  %46 = load i32, i32* %i, align 4, !dbg !15276
  %add67 = add nsw i32 %46, 1, !dbg !15277
  %cmp68 = icmp eq i32 %45, %add67, !dbg !15278
  br i1 %cmp68, label %land.lhs.true70, label %if.end78, !dbg !15279

land.lhs.true70:                                  ; preds = %land.lhs.true66
  %47 = load i32, i32* %ignore_address_reloads.addr, align 4, !dbg !15280
  %tobool71 = icmp ne i32 %47, 0, !dbg !15280
  br i1 %tobool71, label %land.lhs.true72, label %if.end78, !dbg !15281

land.lhs.true72:                                  ; preds = %land.lhs.true70
  %48 = load i32, i32* %reloadnum.addr, align 4, !dbg !15282
  %idxprom73 = sext i32 %48 to i64, !dbg !15283
  %arrayidx74 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom73, !dbg !15283
  %out75 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx74, i32 0, i32 1, !dbg !15284
  %49 = load %struct.rtx_def*, %struct.rtx_def** %out75, align 8, !dbg !15284
  %tobool76 = icmp ne %struct.rtx_def* %49, null, !dbg !15283
  br i1 %tobool76, label %if.end78, label %if.then77, !dbg !15285

if.then77:                                        ; preds = %land.lhs.true72
  br label %for.inc, !dbg !15286

if.end78:                                         ; preds = %land.lhs.true72, %land.lhs.true70, %land.lhs.true66, %sw.bb63
  %50 = load i32, i32* %type.addr, align 4, !dbg !15287
  %cmp79 = icmp eq i32 %50, 0, !dbg !15289
  br i1 %cmp79, label %land.lhs.true81, label %if.end95, !dbg !15290

land.lhs.true81:                                  ; preds = %if.end78
  %51 = load i32, i32* %opnum.addr, align 4, !dbg !15291
  %52 = load i32, i32* %i, align 4, !dbg !15292
  %idxprom82 = sext i32 %52 to i64, !dbg !15293
  %arrayidx83 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom82, !dbg !15293
  %opnum84 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx83, i32 0, i32 12, !dbg !15294
  %53 = load i32, i32* %opnum84, align 8, !dbg !15294
  %cmp85 = icmp eq i32 %51, %53, !dbg !15295
  br i1 %cmp85, label %land.lhs.true87, label %if.end95, !dbg !15296

land.lhs.true87:                                  ; preds = %land.lhs.true81
  %54 = load i32, i32* %ignore_address_reloads.addr, align 4, !dbg !15297
  %tobool88 = icmp ne i32 %54, 0, !dbg !15297
  br i1 %tobool88, label %land.lhs.true89, label %if.end95, !dbg !15298

land.lhs.true89:                                  ; preds = %land.lhs.true87
  %55 = load i32, i32* %reloadnum.addr, align 4, !dbg !15299
  %idxprom90 = sext i32 %55 to i64, !dbg !15300
  %arrayidx91 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom90, !dbg !15300
  %out92 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx91, i32 0, i32 1, !dbg !15301
  %56 = load %struct.rtx_def*, %struct.rtx_def** %out92, align 8, !dbg !15301
  %tobool93 = icmp ne %struct.rtx_def* %56, null, !dbg !15300
  br i1 %tobool93, label %if.end95, label %if.then94, !dbg !15302

if.then94:                                        ; preds = %land.lhs.true89
  br label %for.inc, !dbg !15303

if.end95:                                         ; preds = %land.lhs.true89, %land.lhs.true87, %land.lhs.true81, %if.end78
  %57 = load i32, i32* %i, align 4, !dbg !15304
  %idxprom96 = sext i32 %57 to i64, !dbg !15305
  %arrayidx97 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom96, !dbg !15305
  %opnum98 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx97, i32 0, i32 12, !dbg !15306
  %58 = load i32, i32* %opnum98, align 8, !dbg !15306
  %mul99 = mul nsw i32 %58, 4, !dbg !15307
  %add100 = add nsw i32 %mul99, 2, !dbg !15308
  store i32 %add100, i32* %time2, align 4, !dbg !15309
  br label %sw.epilog195, !dbg !15310

sw.bb101:                                         ; preds = %if.then59
  %59 = load i32, i32* %type.addr, align 4, !dbg !15311
  %cmp102 = icmp eq i32 %59, 0, !dbg !15313
  br i1 %cmp102, label %land.lhs.true104, label %if.end118, !dbg !15314

land.lhs.true104:                                 ; preds = %sw.bb101
  %60 = load i32, i32* %opnum.addr, align 4, !dbg !15315
  %61 = load i32, i32* %i, align 4, !dbg !15316
  %idxprom105 = sext i32 %61 to i64, !dbg !15317
  %arrayidx106 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom105, !dbg !15317
  %opnum107 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx106, i32 0, i32 12, !dbg !15318
  %62 = load i32, i32* %opnum107, align 8, !dbg !15318
  %cmp108 = icmp eq i32 %60, %62, !dbg !15319
  br i1 %cmp108, label %land.lhs.true110, label %if.end118, !dbg !15320

land.lhs.true110:                                 ; preds = %land.lhs.true104
  %63 = load i32, i32* %ignore_address_reloads.addr, align 4, !dbg !15321
  %tobool111 = icmp ne i32 %63, 0, !dbg !15321
  br i1 %tobool111, label %land.lhs.true112, label %if.end118, !dbg !15322

land.lhs.true112:                                 ; preds = %land.lhs.true110
  %64 = load i32, i32* %reloadnum.addr, align 4, !dbg !15323
  %idxprom113 = sext i32 %64 to i64, !dbg !15324
  %arrayidx114 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom113, !dbg !15324
  %out115 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx114, i32 0, i32 1, !dbg !15325
  %65 = load %struct.rtx_def*, %struct.rtx_def** %out115, align 8, !dbg !15325
  %tobool116 = icmp ne %struct.rtx_def* %65, null, !dbg !15324
  br i1 %tobool116, label %if.end118, label %if.then117, !dbg !15326

if.then117:                                       ; preds = %land.lhs.true112
  br label %for.inc, !dbg !15327

if.end118:                                        ; preds = %land.lhs.true112, %land.lhs.true110, %land.lhs.true104, %sw.bb101
  %66 = load i32, i32* %i, align 4, !dbg !15328
  %idxprom119 = sext i32 %66 to i64, !dbg !15329
  %arrayidx120 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom119, !dbg !15329
  %opnum121 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx120, i32 0, i32 12, !dbg !15330
  %67 = load i32, i32* %opnum121, align 8, !dbg !15330
  %mul122 = mul nsw i32 %67, 4, !dbg !15331
  %add123 = add nsw i32 %mul122, 3, !dbg !15332
  store i32 %add123, i32* %time2, align 4, !dbg !15333
  br label %sw.epilog195, !dbg !15334

sw.bb124:                                         ; preds = %if.then59
  %68 = load i32, i32* %i, align 4, !dbg !15335
  %idxprom125 = sext i32 %68 to i64, !dbg !15336
  %arrayidx126 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom125, !dbg !15336
  %opnum127 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx126, i32 0, i32 12, !dbg !15337
  %69 = load i32, i32* %opnum127, align 8, !dbg !15337
  %mul128 = mul nsw i32 %69, 4, !dbg !15338
  %add129 = add nsw i32 %mul128, 4, !dbg !15339
  store i32 %add129, i32* %time2, align 4, !dbg !15340
  store i32 1, i32* %check_earlyclobber, align 4, !dbg !15341
  br label %sw.epilog195, !dbg !15342

sw.bb130:                                         ; preds = %if.then59
  %70 = load i32, i32* %type.addr, align 4, !dbg !15343
  %cmp131 = icmp eq i32 %70, 7, !dbg !15345
  br i1 %cmp131, label %land.lhs.true133, label %if.end145, !dbg !15346

land.lhs.true133:                                 ; preds = %sw.bb130
  %71 = load i32, i32* %reloadnum.addr, align 4, !dbg !15347
  %72 = load i32, i32* %i, align 4, !dbg !15348
  %add134 = add nsw i32 %72, 1, !dbg !15349
  %cmp135 = icmp eq i32 %71, %add134, !dbg !15350
  br i1 %cmp135, label %land.lhs.true137, label %if.end145, !dbg !15351

land.lhs.true137:                                 ; preds = %land.lhs.true133
  %73 = load i32, i32* %ignore_address_reloads.addr, align 4, !dbg !15352
  %tobool138 = icmp ne i32 %73, 0, !dbg !15352
  br i1 %tobool138, label %land.lhs.true139, label %if.end145, !dbg !15353

land.lhs.true139:                                 ; preds = %land.lhs.true137
  %74 = load i32, i32* %reloadnum.addr, align 4, !dbg !15354
  %idxprom140 = sext i32 %74 to i64, !dbg !15355
  %arrayidx141 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom140, !dbg !15355
  %out142 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx141, i32 0, i32 1, !dbg !15356
  %75 = load %struct.rtx_def*, %struct.rtx_def** %out142, align 8, !dbg !15356
  %tobool143 = icmp ne %struct.rtx_def* %75, null, !dbg !15355
  br i1 %tobool143, label %if.end145, label %if.then144, !dbg !15357

if.then144:                                       ; preds = %land.lhs.true139
  br label %for.inc, !dbg !15358

if.end145:                                        ; preds = %land.lhs.true139, %land.lhs.true137, %land.lhs.true133, %sw.bb130
  store i32 121, i32* %time2, align 4, !dbg !15359
  br label %sw.epilog195, !dbg !15360

sw.bb146:                                         ; preds = %if.then59
  store i32 122, i32* %time2, align 4, !dbg !15361
  store i32 1, i32* %check_earlyclobber, align 4, !dbg !15362
  br label %sw.epilog195, !dbg !15363

sw.bb147:                                         ; preds = %if.then59
  store i32 123, i32* %time2, align 4, !dbg !15364
  br label %sw.epilog195, !dbg !15365

sw.bb148:                                         ; preds = %if.then59
  store i32 124, i32* %time2, align 4, !dbg !15366
  br label %sw.epilog195, !dbg !15367

sw.bb149:                                         ; preds = %if.then59
  %76 = load i32, i32* %type.addr, align 4, !dbg !15368
  %cmp150 = icmp eq i32 %76, 5, !dbg !15370
  br i1 %cmp150, label %land.lhs.true152, label %if.end164, !dbg !15371

land.lhs.true152:                                 ; preds = %sw.bb149
  %77 = load i32, i32* %reloadnum.addr, align 4, !dbg !15372
  %78 = load i32, i32* %i, align 4, !dbg !15373
  %add153 = add nsw i32 %78, 1, !dbg !15374
  %cmp154 = icmp eq i32 %77, %add153, !dbg !15375
  br i1 %cmp154, label %land.lhs.true156, label %if.end164, !dbg !15376

land.lhs.true156:                                 ; preds = %land.lhs.true152
  %79 = load i32, i32* %ignore_address_reloads.addr, align 4, !dbg !15377
  %tobool157 = icmp ne i32 %79, 0, !dbg !15377
  br i1 %tobool157, label %land.lhs.true158, label %if.end164, !dbg !15378

land.lhs.true158:                                 ; preds = %land.lhs.true156
  %80 = load i32, i32* %reloadnum.addr, align 4, !dbg !15379
  %idxprom159 = sext i32 %80 to i64, !dbg !15380
  %arrayidx160 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom159, !dbg !15380
  %out161 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx160, i32 0, i32 1, !dbg !15381
  %81 = load %struct.rtx_def*, %struct.rtx_def** %out161, align 8, !dbg !15381
  %tobool162 = icmp ne %struct.rtx_def* %81, null, !dbg !15380
  br i1 %tobool162, label %if.end164, label %if.then163, !dbg !15382

if.then163:                                       ; preds = %land.lhs.true158
  br label %for.inc, !dbg !15383

if.end164:                                        ; preds = %land.lhs.true158, %land.lhs.true156, %land.lhs.true152, %sw.bb149
  %82 = load i32, i32* %i, align 4, !dbg !15384
  %idxprom165 = sext i32 %82 to i64, !dbg !15385
  %arrayidx166 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom165, !dbg !15385
  %opnum167 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx166, i32 0, i32 12, !dbg !15386
  %83 = load i32, i32* %opnum167, align 8, !dbg !15386
  %add168 = add nsw i32 124, %83, !dbg !15387
  store i32 %add168, i32* %time2, align 4, !dbg !15388
  br label %sw.epilog195, !dbg !15389

sw.bb169:                                         ; preds = %if.then59
  %84 = load i32, i32* %i, align 4, !dbg !15390
  %idxprom170 = sext i32 %84 to i64, !dbg !15391
  %arrayidx171 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom170, !dbg !15391
  %opnum172 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx171, i32 0, i32 12, !dbg !15392
  %85 = load i32, i32* %opnum172, align 8, !dbg !15392
  %add173 = add nsw i32 125, %85, !dbg !15393
  store i32 %add173, i32* %time2, align 4, !dbg !15394
  br label %sw.epilog195, !dbg !15395

sw.bb174:                                         ; preds = %if.then59
  %86 = load i32, i32* %i, align 4, !dbg !15396
  %idxprom175 = sext i32 %86 to i64, !dbg !15398
  %arrayidx176 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom175, !dbg !15398
  %in177 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx176, i32 0, i32 0, !dbg !15399
  %87 = load %struct.rtx_def*, %struct.rtx_def** %in177, align 8, !dbg !15399
  %tobool178 = icmp ne %struct.rtx_def* %87, null, !dbg !15398
  br i1 %tobool178, label %lor.lhs.false179, label %if.then182, !dbg !15400

lor.lhs.false179:                                 ; preds = %sw.bb174
  %88 = load %struct.rtx_def*, %struct.rtx_def** %other_input, align 8, !dbg !15401
  %89 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !15402
  %call180 = call i32 @rtx_equal_p(%struct.rtx_def* %88, %struct.rtx_def* %89), !dbg !15403
  %tobool181 = icmp ne i32 %call180, 0, !dbg !15403
  br i1 %tobool181, label %if.then182, label %if.end190, !dbg !15404

if.then182:                                       ; preds = %lor.lhs.false179, %sw.bb174
  store i32 124, i32* %time2, align 4, !dbg !15405
  %90 = load i32, i32* %i, align 4, !dbg !15407
  %idxprom183 = sext i32 %90 to i64, !dbg !15409
  %arrayidx184 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom183, !dbg !15409
  %out185 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx184, i32 0, i32 1, !dbg !15410
  %91 = load %struct.rtx_def*, %struct.rtx_def** %out185, align 8, !dbg !15410
  %call186 = call i32 @earlyclobber_operand_p(%struct.rtx_def* %91), !dbg !15411
  %tobool187 = icmp ne i32 %call186, 0, !dbg !15411
  br i1 %tobool187, label %if.then188, label %if.end189, !dbg !15412

if.then188:                                       ; preds = %if.then182
  store i32 123, i32* %time2, align 4, !dbg !15413
  br label %if.end189, !dbg !15414

if.end189:                                        ; preds = %if.then188, %if.then182
  br label %sw.epilog195, !dbg !15415

if.end190:                                        ; preds = %lor.lhs.false179
  store i32 1, i32* %time2, align 4, !dbg !15416
  %92 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !15417
  %tobool191 = icmp ne %struct.rtx_def* %92, null, !dbg !15417
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !15419

if.then192:                                       ; preds = %if.end190
  store i32 0, i32* %retval, align 4, !dbg !15420
  br label %return, !dbg !15420

if.end193:                                        ; preds = %if.end190
  br label %sw.epilog195, !dbg !15421

sw.default194:                                    ; preds = %if.then59
  store i32 0, i32* %retval, align 4, !dbg !15422
  br label %return, !dbg !15422

sw.epilog195:                                     ; preds = %if.end193, %if.end189, %sw.bb169, %if.end164, %sw.bb148, %sw.bb147, %sw.bb146, %if.end145, %sw.bb124, %if.end118, %if.end95, %sw.bb62
  %93 = load i32, i32* %time1, align 4, !dbg !15423
  %94 = load i32, i32* %time2, align 4, !dbg !15425
  %cmp196 = icmp sge i32 %93, %94, !dbg !15426
  br i1 %cmp196, label %land.lhs.true198, label %lor.lhs.false211, !dbg !15427

land.lhs.true198:                                 ; preds = %sw.epilog195
  %95 = load i32, i32* %i, align 4, !dbg !15428
  %idxprom199 = sext i32 %95 to i64, !dbg !15429
  %arrayidx200 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom199, !dbg !15429
  %in201 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx200, i32 0, i32 0, !dbg !15430
  %96 = load %struct.rtx_def*, %struct.rtx_def** %in201, align 8, !dbg !15430
  %tobool202 = icmp ne %struct.rtx_def* %96, null, !dbg !15429
  br i1 %tobool202, label %lor.lhs.false203, label %if.then220, !dbg !15431

lor.lhs.false203:                                 ; preds = %land.lhs.true198
  %97 = load i32, i32* %i, align 4, !dbg !15432
  %idxprom204 = sext i32 %97 to i64, !dbg !15433
  %arrayidx205 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom204, !dbg !15433
  %out206 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx205, i32 0, i32 1, !dbg !15434
  %98 = load %struct.rtx_def*, %struct.rtx_def** %out206, align 8, !dbg !15434
  %tobool207 = icmp ne %struct.rtx_def* %98, null, !dbg !15433
  br i1 %tobool207, label %if.then220, label %lor.lhs.false208, !dbg !15435

lor.lhs.false208:                                 ; preds = %lor.lhs.false203
  %99 = load %struct.rtx_def*, %struct.rtx_def** %other_input, align 8, !dbg !15436
  %100 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !15437
  %call209 = call i32 @rtx_equal_p(%struct.rtx_def* %99, %struct.rtx_def* %100), !dbg !15438
  %tobool210 = icmp ne i32 %call209, 0, !dbg !15438
  br i1 %tobool210, label %lor.lhs.false211, label %if.then220, !dbg !15439

lor.lhs.false211:                                 ; preds = %lor.lhs.false208, %sw.epilog195
  %101 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !15440
  %tobool212 = icmp ne %struct.rtx_def* %101, null, !dbg !15440
  br i1 %tobool212, label %land.lhs.true213, label %if.end221, !dbg !15441

land.lhs.true213:                                 ; preds = %lor.lhs.false211
  %102 = load i32, i32* %reloadnum.addr, align 4, !dbg !15442
  %idxprom214 = sext i32 %102 to i64, !dbg !15443
  %arrayidx215 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom214, !dbg !15443
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx215, i32 0, i32 9, !dbg !15444
  %103 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8, !dbg !15444
  %tobool216 = icmp ne %struct.rtx_def* %103, null, !dbg !15443
  br i1 %tobool216, label %land.lhs.true217, label %if.end221, !dbg !15445

land.lhs.true217:                                 ; preds = %land.lhs.true213
  %104 = load i32, i32* %time2, align 4, !dbg !15446
  %cmp218 = icmp sge i32 %104, 123, !dbg !15447
  br i1 %cmp218, label %if.then220, label %if.end221, !dbg !15448

if.then220:                                       ; preds = %land.lhs.true217, %lor.lhs.false208, %lor.lhs.false203, %land.lhs.true198
  store i32 0, i32* %retval, align 4, !dbg !15449
  br label %return, !dbg !15449

if.end221:                                        ; preds = %land.lhs.true217, %land.lhs.true213, %lor.lhs.false211
  br label %if.end222, !dbg !15450

if.end222:                                        ; preds = %if.end221, %lor.lhs.false57
  br label %if.end223, !dbg !15451

if.end223:                                        ; preds = %if.end222, %land.lhs.true38, %land.lhs.true27, %land.lhs.true, %for.body
  br label %for.inc, !dbg !15452

for.inc:                                          ; preds = %if.end223, %if.then163, %if.then144, %if.then117, %if.then94, %if.then77
  %105 = load i32, i32* %i, align 4, !dbg !15453
  %inc = add nsw i32 %105, 1, !dbg !15453
  store i32 %inc, i32* %i, align 4, !dbg !15453
  br label %for.cond, !dbg !15454, !llvm.loop !15455

for.end:                                          ; preds = %for.cond
  %106 = load i32, i32* %check_earlyclobber, align 4, !dbg !15457
  %tobool224 = icmp ne i32 %106, 0, !dbg !15457
  br i1 %tobool224, label %land.lhs.true225, label %if.end231, !dbg !15459

land.lhs.true225:                                 ; preds = %for.end
  %107 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !15460
  %tobool226 = icmp ne %struct.rtx_def* %107, null, !dbg !15460
  br i1 %tobool226, label %land.lhs.true227, label %if.end231, !dbg !15461

land.lhs.true227:                                 ; preds = %land.lhs.true225
  %108 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !15462
  %call228 = call i32 @earlyclobber_operand_p(%struct.rtx_def* %108), !dbg !15463
  %tobool229 = icmp ne i32 %call228, 0, !dbg !15463
  br i1 %tobool229, label %if.then230, label %if.end231, !dbg !15464

if.then230:                                       ; preds = %land.lhs.true227
  store i32 0, i32* %retval, align 4, !dbg !15465
  br label %return, !dbg !15465

if.end231:                                        ; preds = %land.lhs.true227, %land.lhs.true225, %for.end
  store i32 1, i32* %retval, align 4, !dbg !15466
  br label %return, !dbg !15466

return:                                           ; preds = %if.end231, %if.then230, %if.then220, %sw.default194, %if.then192, %if.then
  %109 = load i32, i32* %retval, align 4, !dbg !15467
  ret i32 %109, !dbg !15467
}

declare dso_local i32 @earlyclobber_operand_p(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @reload_reg_free_p(i32 %regno, i32 %opnum, i32 %type) #0 !dbg !15468 {
entry:
  %retval = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !15471, metadata !DIExpression()), !dbg !15472
  store i32 %opnum, i32* %opnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opnum.addr, metadata !15473, metadata !DIExpression()), !dbg !15474
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !15475, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15477, metadata !DIExpression()), !dbg !15478
  %0 = load i64, i64* @reload_reg_used, align 8, !dbg !15479
  %1 = load i32, i32* %regno.addr, align 4, !dbg !15479
  %sh_prom = zext i32 %1 to i64, !dbg !15479
  %shl = shl i64 1, %sh_prom, !dbg !15479
  %and = and i64 %0, %shl, !dbg !15479
  %tobool = icmp ne i64 %and, 0, !dbg !15479
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !15481

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* @reload_reg_unavailable, align 8, !dbg !15482
  %3 = load i32, i32* %regno.addr, align 4, !dbg !15482
  %sh_prom1 = zext i32 %3 to i64, !dbg !15482
  %shl2 = shl i64 1, %sh_prom1, !dbg !15482
  %and3 = and i64 %2, %shl2, !dbg !15482
  %tobool4 = icmp ne i64 %and3, 0, !dbg !15482
  br i1 %tobool4, label %if.then, label %if.end, !dbg !15483

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !15484
  br label %return, !dbg !15484

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i32, i32* %type.addr, align 4, !dbg !15485
  switch i32 %4, label %sw.default [
    i32 9, label %sw.bb
    i32 0, label %sw.bb67
    i32 3, label %sw.bb120
    i32 4, label %sw.bb150
    i32 5, label %sw.bb173
    i32 6, label %sw.bb196
    i32 7, label %sw.bb219
    i32 8, label %sw.bb244
    i32 1, label %sw.bb266
    i32 2, label %sw.bb308
    i32 10, label %sw.bb347
  ], !dbg !15486

sw.bb:                                            ; preds = %if.end
  %5 = load i64, i64* @reload_reg_used_in_other_addr, align 8, !dbg !15487
  %6 = load i32, i32* %regno.addr, align 4, !dbg !15487
  %sh_prom5 = zext i32 %6 to i64, !dbg !15487
  %shl6 = shl i64 1, %sh_prom5, !dbg !15487
  %and7 = and i64 %5, %shl6, !dbg !15487
  %tobool8 = icmp ne i64 %and7, 0, !dbg !15487
  br i1 %tobool8, label %if.then24, label %lor.lhs.false9, !dbg !15490

lor.lhs.false9:                                   ; preds = %sw.bb
  %7 = load i64, i64* @reload_reg_used_in_op_addr, align 8, !dbg !15491
  %8 = load i32, i32* %regno.addr, align 4, !dbg !15491
  %sh_prom10 = zext i32 %8 to i64, !dbg !15491
  %shl11 = shl i64 1, %sh_prom10, !dbg !15491
  %and12 = and i64 %7, %shl11, !dbg !15491
  %tobool13 = icmp ne i64 %and12, 0, !dbg !15491
  br i1 %tobool13, label %if.then24, label %lor.lhs.false14, !dbg !15492

lor.lhs.false14:                                  ; preds = %lor.lhs.false9
  %9 = load i64, i64* @reload_reg_used_in_op_addr_reload, align 8, !dbg !15493
  %10 = load i32, i32* %regno.addr, align 4, !dbg !15493
  %sh_prom15 = zext i32 %10 to i64, !dbg !15493
  %shl16 = shl i64 1, %sh_prom15, !dbg !15493
  %and17 = and i64 %9, %shl16, !dbg !15493
  %tobool18 = icmp ne i64 %and17, 0, !dbg !15493
  br i1 %tobool18, label %if.then24, label %lor.lhs.false19, !dbg !15494

lor.lhs.false19:                                  ; preds = %lor.lhs.false14
  %11 = load i64, i64* @reload_reg_used_in_insn, align 8, !dbg !15495
  %12 = load i32, i32* %regno.addr, align 4, !dbg !15495
  %sh_prom20 = zext i32 %12 to i64, !dbg !15495
  %shl21 = shl i64 1, %sh_prom20, !dbg !15495
  %and22 = and i64 %11, %shl21, !dbg !15495
  %tobool23 = icmp ne i64 %and22, 0, !dbg !15495
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !15496

if.then24:                                        ; preds = %lor.lhs.false19, %lor.lhs.false14, %lor.lhs.false9, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !15497
  br label %return, !dbg !15497

if.end25:                                         ; preds = %lor.lhs.false19
  store i32 0, i32* %i, align 4, !dbg !15498
  br label %for.cond, !dbg !15500

for.cond:                                         ; preds = %for.inc, %if.end25
  %13 = load i32, i32* %i, align 4, !dbg !15501
  %14 = load i32, i32* @reload_n_operands, align 4, !dbg !15503
  %cmp = icmp slt i32 %13, %14, !dbg !15504
  br i1 %cmp, label %for.body, label %for.end, !dbg !15505

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !15506
  %idxprom = sext i32 %15 to i64, !dbg !15506
  %arrayidx = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i64 0, i64 %idxprom, !dbg !15506
  %16 = load i64, i64* %arrayidx, align 8, !dbg !15506
  %17 = load i32, i32* %regno.addr, align 4, !dbg !15506
  %sh_prom26 = zext i32 %17 to i64, !dbg !15506
  %shl27 = shl i64 1, %sh_prom26, !dbg !15506
  %and28 = and i64 %16, %shl27, !dbg !15506
  %tobool29 = icmp ne i64 %and28, 0, !dbg !15506
  br i1 %tobool29, label %if.then65, label %lor.lhs.false30, !dbg !15508

lor.lhs.false30:                                  ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !15509
  %idxprom31 = sext i32 %18 to i64, !dbg !15509
  %arrayidx32 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i64 0, i64 %idxprom31, !dbg !15509
  %19 = load i64, i64* %arrayidx32, align 8, !dbg !15509
  %20 = load i32, i32* %regno.addr, align 4, !dbg !15509
  %sh_prom33 = zext i32 %20 to i64, !dbg !15509
  %shl34 = shl i64 1, %sh_prom33, !dbg !15509
  %and35 = and i64 %19, %shl34, !dbg !15509
  %tobool36 = icmp ne i64 %and35, 0, !dbg !15509
  br i1 %tobool36, label %if.then65, label %lor.lhs.false37, !dbg !15510

lor.lhs.false37:                                  ; preds = %lor.lhs.false30
  %21 = load i32, i32* %i, align 4, !dbg !15511
  %idxprom38 = sext i32 %21 to i64, !dbg !15511
  %arrayidx39 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i64 0, i64 %idxprom38, !dbg !15511
  %22 = load i64, i64* %arrayidx39, align 8, !dbg !15511
  %23 = load i32, i32* %regno.addr, align 4, !dbg !15511
  %sh_prom40 = zext i32 %23 to i64, !dbg !15511
  %shl41 = shl i64 1, %sh_prom40, !dbg !15511
  %and42 = and i64 %22, %shl41, !dbg !15511
  %tobool43 = icmp ne i64 %and42, 0, !dbg !15511
  br i1 %tobool43, label %if.then65, label %lor.lhs.false44, !dbg !15512

lor.lhs.false44:                                  ; preds = %lor.lhs.false37
  %24 = load i32, i32* %i, align 4, !dbg !15513
  %idxprom45 = sext i32 %24 to i64, !dbg !15513
  %arrayidx46 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i64 0, i64 %idxprom45, !dbg !15513
  %25 = load i64, i64* %arrayidx46, align 8, !dbg !15513
  %26 = load i32, i32* %regno.addr, align 4, !dbg !15513
  %sh_prom47 = zext i32 %26 to i64, !dbg !15513
  %shl48 = shl i64 1, %sh_prom47, !dbg !15513
  %and49 = and i64 %25, %shl48, !dbg !15513
  %tobool50 = icmp ne i64 %and49, 0, !dbg !15513
  br i1 %tobool50, label %if.then65, label %lor.lhs.false51, !dbg !15514

lor.lhs.false51:                                  ; preds = %lor.lhs.false44
  %27 = load i32, i32* %i, align 4, !dbg !15515
  %idxprom52 = sext i32 %27 to i64, !dbg !15515
  %arrayidx53 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom52, !dbg !15515
  %28 = load i64, i64* %arrayidx53, align 8, !dbg !15515
  %29 = load i32, i32* %regno.addr, align 4, !dbg !15515
  %sh_prom54 = zext i32 %29 to i64, !dbg !15515
  %shl55 = shl i64 1, %sh_prom54, !dbg !15515
  %and56 = and i64 %28, %shl55, !dbg !15515
  %tobool57 = icmp ne i64 %and56, 0, !dbg !15515
  br i1 %tobool57, label %if.then65, label %lor.lhs.false58, !dbg !15516

lor.lhs.false58:                                  ; preds = %lor.lhs.false51
  %30 = load i32, i32* %i, align 4, !dbg !15517
  %idxprom59 = sext i32 %30 to i64, !dbg !15517
  %arrayidx60 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i64 0, i64 %idxprom59, !dbg !15517
  %31 = load i64, i64* %arrayidx60, align 8, !dbg !15517
  %32 = load i32, i32* %regno.addr, align 4, !dbg !15517
  %sh_prom61 = zext i32 %32 to i64, !dbg !15517
  %shl62 = shl i64 1, %sh_prom61, !dbg !15517
  %and63 = and i64 %31, %shl62, !dbg !15517
  %tobool64 = icmp ne i64 %and63, 0, !dbg !15517
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !15518

if.then65:                                        ; preds = %lor.lhs.false58, %lor.lhs.false51, %lor.lhs.false44, %lor.lhs.false37, %lor.lhs.false30, %for.body
  store i32 0, i32* %retval, align 4, !dbg !15519
  br label %return, !dbg !15519

if.end66:                                         ; preds = %lor.lhs.false58
  br label %for.inc, !dbg !15517

for.inc:                                          ; preds = %if.end66
  %33 = load i32, i32* %i, align 4, !dbg !15520
  %inc = add nsw i32 %33, 1, !dbg !15520
  store i32 %inc, i32* %i, align 4, !dbg !15520
  br label %for.cond, !dbg !15521, !llvm.loop !15522

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !15524
  br label %return, !dbg !15524

sw.bb67:                                          ; preds = %if.end
  %34 = load i64, i64* @reload_reg_used_in_insn, align 8, !dbg !15525
  %35 = load i32, i32* %regno.addr, align 4, !dbg !15525
  %sh_prom68 = zext i32 %35 to i64, !dbg !15525
  %shl69 = shl i64 1, %sh_prom68, !dbg !15525
  %and70 = and i64 %34, %shl69, !dbg !15525
  %tobool71 = icmp ne i64 %and70, 0, !dbg !15525
  br i1 %tobool71, label %if.then77, label %lor.lhs.false72, !dbg !15527

lor.lhs.false72:                                  ; preds = %sw.bb67
  %36 = load i64, i64* @reload_reg_used_in_op_addr, align 8, !dbg !15528
  %37 = load i32, i32* %regno.addr, align 4, !dbg !15528
  %sh_prom73 = zext i32 %37 to i64, !dbg !15528
  %shl74 = shl i64 1, %sh_prom73, !dbg !15528
  %and75 = and i64 %36, %shl74, !dbg !15528
  %tobool76 = icmp ne i64 %and75, 0, !dbg !15528
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !15529

if.then77:                                        ; preds = %lor.lhs.false72, %sw.bb67
  store i32 0, i32* %retval, align 4, !dbg !15530
  br label %return, !dbg !15530

if.end78:                                         ; preds = %lor.lhs.false72
  %38 = load i64, i64* @reload_reg_used_in_op_addr_reload, align 8, !dbg !15531
  %39 = load i32, i32* %regno.addr, align 4, !dbg !15531
  %sh_prom79 = zext i32 %39 to i64, !dbg !15531
  %shl80 = shl i64 1, %sh_prom79, !dbg !15531
  %and81 = and i64 %38, %shl80, !dbg !15531
  %tobool82 = icmp ne i64 %and81, 0, !dbg !15531
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !15533

if.then83:                                        ; preds = %if.end78
  store i32 0, i32* %retval, align 4, !dbg !15534
  br label %return, !dbg !15534

if.end84:                                         ; preds = %if.end78
  store i32 0, i32* %i, align 4, !dbg !15535
  br label %for.cond85, !dbg !15537

for.cond85:                                       ; preds = %for.inc96, %if.end84
  %40 = load i32, i32* %i, align 4, !dbg !15538
  %41 = load i32, i32* @reload_n_operands, align 4, !dbg !15540
  %cmp86 = icmp slt i32 %40, %41, !dbg !15541
  br i1 %cmp86, label %for.body87, label %for.end98, !dbg !15542

for.body87:                                       ; preds = %for.cond85
  %42 = load i32, i32* %i, align 4, !dbg !15543
  %idxprom88 = sext i32 %42 to i64, !dbg !15543
  %arrayidx89 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom88, !dbg !15543
  %43 = load i64, i64* %arrayidx89, align 8, !dbg !15543
  %44 = load i32, i32* %regno.addr, align 4, !dbg !15543
  %sh_prom90 = zext i32 %44 to i64, !dbg !15543
  %shl91 = shl i64 1, %sh_prom90, !dbg !15543
  %and92 = and i64 %43, %shl91, !dbg !15543
  %tobool93 = icmp ne i64 %and92, 0, !dbg !15543
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !15545

if.then94:                                        ; preds = %for.body87
  store i32 0, i32* %retval, align 4, !dbg !15546
  br label %return, !dbg !15546

if.end95:                                         ; preds = %for.body87
  br label %for.inc96, !dbg !15543

for.inc96:                                        ; preds = %if.end95
  %45 = load i32, i32* %i, align 4, !dbg !15547
  %inc97 = add nsw i32 %45, 1, !dbg !15547
  store i32 %inc97, i32* %i, align 4, !dbg !15547
  br label %for.cond85, !dbg !15548, !llvm.loop !15549

for.end98:                                        ; preds = %for.cond85
  %46 = load i32, i32* %opnum.addr, align 4, !dbg !15551
  %add = add nsw i32 %46, 1, !dbg !15553
  store i32 %add, i32* %i, align 4, !dbg !15554
  br label %for.cond99, !dbg !15555

for.cond99:                                       ; preds = %for.inc117, %for.end98
  %47 = load i32, i32* %i, align 4, !dbg !15556
  %48 = load i32, i32* @reload_n_operands, align 4, !dbg !15558
  %cmp100 = icmp slt i32 %47, %48, !dbg !15559
  br i1 %cmp100, label %for.body101, label %for.end119, !dbg !15560

for.body101:                                      ; preds = %for.cond99
  %49 = load i32, i32* %i, align 4, !dbg !15561
  %idxprom102 = sext i32 %49 to i64, !dbg !15561
  %arrayidx103 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i64 0, i64 %idxprom102, !dbg !15561
  %50 = load i64, i64* %arrayidx103, align 8, !dbg !15561
  %51 = load i32, i32* %regno.addr, align 4, !dbg !15561
  %sh_prom104 = zext i32 %51 to i64, !dbg !15561
  %shl105 = shl i64 1, %sh_prom104, !dbg !15561
  %and106 = and i64 %50, %shl105, !dbg !15561
  %tobool107 = icmp ne i64 %and106, 0, !dbg !15561
  br i1 %tobool107, label %if.then115, label %lor.lhs.false108, !dbg !15563

lor.lhs.false108:                                 ; preds = %for.body101
  %52 = load i32, i32* %i, align 4, !dbg !15564
  %idxprom109 = sext i32 %52 to i64, !dbg !15564
  %arrayidx110 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i64 0, i64 %idxprom109, !dbg !15564
  %53 = load i64, i64* %arrayidx110, align 8, !dbg !15564
  %54 = load i32, i32* %regno.addr, align 4, !dbg !15564
  %sh_prom111 = zext i32 %54 to i64, !dbg !15564
  %shl112 = shl i64 1, %sh_prom111, !dbg !15564
  %and113 = and i64 %53, %shl112, !dbg !15564
  %tobool114 = icmp ne i64 %and113, 0, !dbg !15564
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !15565

if.then115:                                       ; preds = %lor.lhs.false108, %for.body101
  store i32 0, i32* %retval, align 4, !dbg !15566
  br label %return, !dbg !15566

if.end116:                                        ; preds = %lor.lhs.false108
  br label %for.inc117, !dbg !15564

for.inc117:                                       ; preds = %if.end116
  %55 = load i32, i32* %i, align 4, !dbg !15567
  %inc118 = add nsw i32 %55, 1, !dbg !15567
  store i32 %inc118, i32* %i, align 4, !dbg !15567
  br label %for.cond99, !dbg !15568, !llvm.loop !15569

for.end119:                                       ; preds = %for.cond99
  store i32 1, i32* %retval, align 4, !dbg !15571
  br label %return, !dbg !15571

sw.bb120:                                         ; preds = %if.end
  %56 = load i32, i32* %opnum.addr, align 4, !dbg !15572
  %idxprom121 = sext i32 %56 to i64, !dbg !15572
  %arrayidx122 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i64 0, i64 %idxprom121, !dbg !15572
  %57 = load i64, i64* %arrayidx122, align 8, !dbg !15572
  %58 = load i32, i32* %regno.addr, align 4, !dbg !15572
  %sh_prom123 = zext i32 %58 to i64, !dbg !15572
  %shl124 = shl i64 1, %sh_prom123, !dbg !15572
  %and125 = and i64 %57, %shl124, !dbg !15572
  %tobool126 = icmp ne i64 %and125, 0, !dbg !15572
  br i1 %tobool126, label %if.then134, label %lor.lhs.false127, !dbg !15574

lor.lhs.false127:                                 ; preds = %sw.bb120
  %59 = load i32, i32* %opnum.addr, align 4, !dbg !15575
  %idxprom128 = sext i32 %59 to i64, !dbg !15575
  %arrayidx129 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i64 0, i64 %idxprom128, !dbg !15575
  %60 = load i64, i64* %arrayidx129, align 8, !dbg !15575
  %61 = load i32, i32* %regno.addr, align 4, !dbg !15575
  %sh_prom130 = zext i32 %61 to i64, !dbg !15575
  %shl131 = shl i64 1, %sh_prom130, !dbg !15575
  %and132 = and i64 %60, %shl131, !dbg !15575
  %tobool133 = icmp ne i64 %and132, 0, !dbg !15575
  br i1 %tobool133, label %if.then134, label %if.end135, !dbg !15576

if.then134:                                       ; preds = %lor.lhs.false127, %sw.bb120
  store i32 0, i32* %retval, align 4, !dbg !15577
  br label %return, !dbg !15577

if.end135:                                        ; preds = %lor.lhs.false127
  store i32 0, i32* %i, align 4, !dbg !15578
  br label %for.cond136, !dbg !15580

for.cond136:                                      ; preds = %for.inc147, %if.end135
  %62 = load i32, i32* %i, align 4, !dbg !15581
  %63 = load i32, i32* %opnum.addr, align 4, !dbg !15583
  %cmp137 = icmp slt i32 %62, %63, !dbg !15584
  br i1 %cmp137, label %for.body138, label %for.end149, !dbg !15585

for.body138:                                      ; preds = %for.cond136
  %64 = load i32, i32* %i, align 4, !dbg !15586
  %idxprom139 = sext i32 %64 to i64, !dbg !15586
  %arrayidx140 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom139, !dbg !15586
  %65 = load i64, i64* %arrayidx140, align 8, !dbg !15586
  %66 = load i32, i32* %regno.addr, align 4, !dbg !15586
  %sh_prom141 = zext i32 %66 to i64, !dbg !15586
  %shl142 = shl i64 1, %sh_prom141, !dbg !15586
  %and143 = and i64 %65, %shl142, !dbg !15586
  %tobool144 = icmp ne i64 %and143, 0, !dbg !15586
  br i1 %tobool144, label %if.then145, label %if.end146, !dbg !15588

if.then145:                                       ; preds = %for.body138
  store i32 0, i32* %retval, align 4, !dbg !15589
  br label %return, !dbg !15589

if.end146:                                        ; preds = %for.body138
  br label %for.inc147, !dbg !15586

for.inc147:                                       ; preds = %if.end146
  %67 = load i32, i32* %i, align 4, !dbg !15590
  %inc148 = add nsw i32 %67, 1, !dbg !15590
  store i32 %inc148, i32* %i, align 4, !dbg !15590
  br label %for.cond136, !dbg !15591, !llvm.loop !15592

for.end149:                                       ; preds = %for.cond136
  store i32 1, i32* %retval, align 4, !dbg !15594
  br label %return, !dbg !15594

sw.bb150:                                         ; preds = %if.end
  %68 = load i32, i32* %opnum.addr, align 4, !dbg !15595
  %idxprom151 = sext i32 %68 to i64, !dbg !15595
  %arrayidx152 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i64 0, i64 %idxprom151, !dbg !15595
  %69 = load i64, i64* %arrayidx152, align 8, !dbg !15595
  %70 = load i32, i32* %regno.addr, align 4, !dbg !15595
  %sh_prom153 = zext i32 %70 to i64, !dbg !15595
  %shl154 = shl i64 1, %sh_prom153, !dbg !15595
  %and155 = and i64 %69, %shl154, !dbg !15595
  %tobool156 = icmp ne i64 %and155, 0, !dbg !15595
  br i1 %tobool156, label %if.then157, label %if.end158, !dbg !15597

if.then157:                                       ; preds = %sw.bb150
  store i32 0, i32* %retval, align 4, !dbg !15598
  br label %return, !dbg !15598

if.end158:                                        ; preds = %sw.bb150
  store i32 0, i32* %i, align 4, !dbg !15599
  br label %for.cond159, !dbg !15601

for.cond159:                                      ; preds = %for.inc170, %if.end158
  %71 = load i32, i32* %i, align 4, !dbg !15602
  %72 = load i32, i32* %opnum.addr, align 4, !dbg !15604
  %cmp160 = icmp slt i32 %71, %72, !dbg !15605
  br i1 %cmp160, label %for.body161, label %for.end172, !dbg !15606

for.body161:                                      ; preds = %for.cond159
  %73 = load i32, i32* %i, align 4, !dbg !15607
  %idxprom162 = sext i32 %73 to i64, !dbg !15607
  %arrayidx163 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom162, !dbg !15607
  %74 = load i64, i64* %arrayidx163, align 8, !dbg !15607
  %75 = load i32, i32* %regno.addr, align 4, !dbg !15607
  %sh_prom164 = zext i32 %75 to i64, !dbg !15607
  %shl165 = shl i64 1, %sh_prom164, !dbg !15607
  %and166 = and i64 %74, %shl165, !dbg !15607
  %tobool167 = icmp ne i64 %and166, 0, !dbg !15607
  br i1 %tobool167, label %if.then168, label %if.end169, !dbg !15609

if.then168:                                       ; preds = %for.body161
  store i32 0, i32* %retval, align 4, !dbg !15610
  br label %return, !dbg !15610

if.end169:                                        ; preds = %for.body161
  br label %for.inc170, !dbg !15607

for.inc170:                                       ; preds = %if.end169
  %76 = load i32, i32* %i, align 4, !dbg !15611
  %inc171 = add nsw i32 %76, 1, !dbg !15611
  store i32 %inc171, i32* %i, align 4, !dbg !15611
  br label %for.cond159, !dbg !15612, !llvm.loop !15613

for.end172:                                       ; preds = %for.cond159
  store i32 1, i32* %retval, align 4, !dbg !15615
  br label %return, !dbg !15615

sw.bb173:                                         ; preds = %if.end
  %77 = load i32, i32* %opnum.addr, align 4, !dbg !15616
  %idxprom174 = sext i32 %77 to i64, !dbg !15616
  %arrayidx175 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i64 0, i64 %idxprom174, !dbg !15616
  %78 = load i64, i64* %arrayidx175, align 8, !dbg !15616
  %79 = load i32, i32* %regno.addr, align 4, !dbg !15616
  %sh_prom176 = zext i32 %79 to i64, !dbg !15616
  %shl177 = shl i64 1, %sh_prom176, !dbg !15616
  %and178 = and i64 %78, %shl177, !dbg !15616
  %tobool179 = icmp ne i64 %and178, 0, !dbg !15616
  br i1 %tobool179, label %if.then180, label %if.end181, !dbg !15618

if.then180:                                       ; preds = %sw.bb173
  store i32 0, i32* %retval, align 4, !dbg !15619
  br label %return, !dbg !15619

if.end181:                                        ; preds = %sw.bb173
  store i32 0, i32* %i, align 4, !dbg !15620
  br label %for.cond182, !dbg !15622

for.cond182:                                      ; preds = %for.inc193, %if.end181
  %80 = load i32, i32* %i, align 4, !dbg !15623
  %81 = load i32, i32* %opnum.addr, align 4, !dbg !15625
  %cmp183 = icmp sle i32 %80, %81, !dbg !15626
  br i1 %cmp183, label %for.body184, label %for.end195, !dbg !15627

for.body184:                                      ; preds = %for.cond182
  %82 = load i32, i32* %i, align 4, !dbg !15628
  %idxprom185 = sext i32 %82 to i64, !dbg !15628
  %arrayidx186 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i64 0, i64 %idxprom185, !dbg !15628
  %83 = load i64, i64* %arrayidx186, align 8, !dbg !15628
  %84 = load i32, i32* %regno.addr, align 4, !dbg !15628
  %sh_prom187 = zext i32 %84 to i64, !dbg !15628
  %shl188 = shl i64 1, %sh_prom187, !dbg !15628
  %and189 = and i64 %83, %shl188, !dbg !15628
  %tobool190 = icmp ne i64 %and189, 0, !dbg !15628
  br i1 %tobool190, label %if.then191, label %if.end192, !dbg !15630

if.then191:                                       ; preds = %for.body184
  store i32 0, i32* %retval, align 4, !dbg !15631
  br label %return, !dbg !15631

if.end192:                                        ; preds = %for.body184
  br label %for.inc193, !dbg !15628

for.inc193:                                       ; preds = %if.end192
  %85 = load i32, i32* %i, align 4, !dbg !15632
  %inc194 = add nsw i32 %85, 1, !dbg !15632
  store i32 %inc194, i32* %i, align 4, !dbg !15632
  br label %for.cond182, !dbg !15633, !llvm.loop !15634

for.end195:                                       ; preds = %for.cond182
  store i32 1, i32* %retval, align 4, !dbg !15636
  br label %return, !dbg !15636

sw.bb196:                                         ; preds = %if.end
  %86 = load i32, i32* %opnum.addr, align 4, !dbg !15637
  %idxprom197 = sext i32 %86 to i64, !dbg !15637
  %arrayidx198 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i64 0, i64 %idxprom197, !dbg !15637
  %87 = load i64, i64* %arrayidx198, align 8, !dbg !15637
  %88 = load i32, i32* %regno.addr, align 4, !dbg !15637
  %sh_prom199 = zext i32 %88 to i64, !dbg !15637
  %shl200 = shl i64 1, %sh_prom199, !dbg !15637
  %and201 = and i64 %87, %shl200, !dbg !15637
  %tobool202 = icmp ne i64 %and201, 0, !dbg !15637
  br i1 %tobool202, label %if.then203, label %if.end204, !dbg !15639

if.then203:                                       ; preds = %sw.bb196
  store i32 0, i32* %retval, align 4, !dbg !15640
  br label %return, !dbg !15640

if.end204:                                        ; preds = %sw.bb196
  store i32 0, i32* %i, align 4, !dbg !15641
  br label %for.cond205, !dbg !15643

for.cond205:                                      ; preds = %for.inc216, %if.end204
  %89 = load i32, i32* %i, align 4, !dbg !15644
  %90 = load i32, i32* %opnum.addr, align 4, !dbg !15646
  %cmp206 = icmp sle i32 %89, %90, !dbg !15647
  br i1 %cmp206, label %for.body207, label %for.end218, !dbg !15648

for.body207:                                      ; preds = %for.cond205
  %91 = load i32, i32* %i, align 4, !dbg !15649
  %idxprom208 = sext i32 %91 to i64, !dbg !15649
  %arrayidx209 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i64 0, i64 %idxprom208, !dbg !15649
  %92 = load i64, i64* %arrayidx209, align 8, !dbg !15649
  %93 = load i32, i32* %regno.addr, align 4, !dbg !15649
  %sh_prom210 = zext i32 %93 to i64, !dbg !15649
  %shl211 = shl i64 1, %sh_prom210, !dbg !15649
  %and212 = and i64 %92, %shl211, !dbg !15649
  %tobool213 = icmp ne i64 %and212, 0, !dbg !15649
  br i1 %tobool213, label %if.then214, label %if.end215, !dbg !15651

if.then214:                                       ; preds = %for.body207
  store i32 0, i32* %retval, align 4, !dbg !15652
  br label %return, !dbg !15652

if.end215:                                        ; preds = %for.body207
  br label %for.inc216, !dbg !15649

for.inc216:                                       ; preds = %if.end215
  %94 = load i32, i32* %i, align 4, !dbg !15653
  %inc217 = add nsw i32 %94, 1, !dbg !15653
  store i32 %inc217, i32* %i, align 4, !dbg !15653
  br label %for.cond205, !dbg !15654, !llvm.loop !15655

for.end218:                                       ; preds = %for.cond205
  store i32 1, i32* %retval, align 4, !dbg !15657
  br label %return, !dbg !15657

sw.bb219:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !15658
  br label %for.cond220, !dbg !15660

for.cond220:                                      ; preds = %for.inc231, %sw.bb219
  %95 = load i32, i32* %i, align 4, !dbg !15661
  %96 = load i32, i32* @reload_n_operands, align 4, !dbg !15663
  %cmp221 = icmp slt i32 %95, %96, !dbg !15664
  br i1 %cmp221, label %for.body222, label %for.end233, !dbg !15665

for.body222:                                      ; preds = %for.cond220
  %97 = load i32, i32* %i, align 4, !dbg !15666
  %idxprom223 = sext i32 %97 to i64, !dbg !15666
  %arrayidx224 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom223, !dbg !15666
  %98 = load i64, i64* %arrayidx224, align 8, !dbg !15666
  %99 = load i32, i32* %regno.addr, align 4, !dbg !15666
  %sh_prom225 = zext i32 %99 to i64, !dbg !15666
  %shl226 = shl i64 1, %sh_prom225, !dbg !15666
  %and227 = and i64 %98, %shl226, !dbg !15666
  %tobool228 = icmp ne i64 %and227, 0, !dbg !15666
  br i1 %tobool228, label %if.then229, label %if.end230, !dbg !15668

if.then229:                                       ; preds = %for.body222
  store i32 0, i32* %retval, align 4, !dbg !15669
  br label %return, !dbg !15669

if.end230:                                        ; preds = %for.body222
  br label %for.inc231, !dbg !15666

for.inc231:                                       ; preds = %if.end230
  %100 = load i32, i32* %i, align 4, !dbg !15670
  %inc232 = add nsw i32 %100, 1, !dbg !15670
  store i32 %inc232, i32* %i, align 4, !dbg !15670
  br label %for.cond220, !dbg !15671, !llvm.loop !15672

for.end233:                                       ; preds = %for.cond220
  %101 = load i64, i64* @reload_reg_used_in_insn, align 8, !dbg !15674
  %102 = load i32, i32* %regno.addr, align 4, !dbg !15674
  %sh_prom234 = zext i32 %102 to i64, !dbg !15674
  %shl235 = shl i64 1, %sh_prom234, !dbg !15674
  %and236 = and i64 %101, %shl235, !dbg !15674
  %tobool237 = icmp ne i64 %and236, 0, !dbg !15674
  br i1 %tobool237, label %land.end, label %land.rhs, !dbg !15675

land.rhs:                                         ; preds = %for.end233
  %103 = load i64, i64* @reload_reg_used_in_op_addr, align 8, !dbg !15676
  %104 = load i32, i32* %regno.addr, align 4, !dbg !15676
  %sh_prom238 = zext i32 %104 to i64, !dbg !15676
  %shl239 = shl i64 1, %sh_prom238, !dbg !15676
  %and240 = and i64 %103, %shl239, !dbg !15676
  %tobool241 = icmp ne i64 %and240, 0, !dbg !15676
  %lnot = xor i1 %tobool241, true, !dbg !15676
  %lnot242 = xor i1 %lnot, true, !dbg !15676
  %lnot243 = xor i1 %lnot242, true, !dbg !15677
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end233
  %105 = phi i1 [ false, %for.end233 ], [ %lnot243, %land.rhs ], !dbg !15678
  %land.ext = zext i1 %105 to i32, !dbg !15675
  store i32 %land.ext, i32* %retval, align 4, !dbg !15679
  br label %return, !dbg !15679

sw.bb244:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !15680
  br label %for.cond245, !dbg !15682

for.cond245:                                      ; preds = %for.inc256, %sw.bb244
  %106 = load i32, i32* %i, align 4, !dbg !15683
  %107 = load i32, i32* @reload_n_operands, align 4, !dbg !15685
  %cmp246 = icmp slt i32 %106, %107, !dbg !15686
  br i1 %cmp246, label %for.body247, label %for.end258, !dbg !15687

for.body247:                                      ; preds = %for.cond245
  %108 = load i32, i32* %i, align 4, !dbg !15688
  %idxprom248 = sext i32 %108 to i64, !dbg !15688
  %arrayidx249 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom248, !dbg !15688
  %109 = load i64, i64* %arrayidx249, align 8, !dbg !15688
  %110 = load i32, i32* %regno.addr, align 4, !dbg !15688
  %sh_prom250 = zext i32 %110 to i64, !dbg !15688
  %shl251 = shl i64 1, %sh_prom250, !dbg !15688
  %and252 = and i64 %109, %shl251, !dbg !15688
  %tobool253 = icmp ne i64 %and252, 0, !dbg !15688
  br i1 %tobool253, label %if.then254, label %if.end255, !dbg !15690

if.then254:                                       ; preds = %for.body247
  store i32 0, i32* %retval, align 4, !dbg !15691
  br label %return, !dbg !15691

if.end255:                                        ; preds = %for.body247
  br label %for.inc256, !dbg !15688

for.inc256:                                       ; preds = %if.end255
  %111 = load i32, i32* %i, align 4, !dbg !15692
  %inc257 = add nsw i32 %111, 1, !dbg !15692
  store i32 %inc257, i32* %i, align 4, !dbg !15692
  br label %for.cond245, !dbg !15693, !llvm.loop !15694

for.end258:                                       ; preds = %for.cond245
  %112 = load i64, i64* @reload_reg_used_in_op_addr_reload, align 8, !dbg !15696
  %113 = load i32, i32* %regno.addr, align 4, !dbg !15696
  %sh_prom259 = zext i32 %113 to i64, !dbg !15696
  %shl260 = shl i64 1, %sh_prom259, !dbg !15696
  %and261 = and i64 %112, %shl260, !dbg !15696
  %tobool262 = icmp ne i64 %and261, 0, !dbg !15696
  %lnot263 = xor i1 %tobool262, true, !dbg !15696
  %lnot264 = xor i1 %lnot263, true, !dbg !15696
  %lnot265 = xor i1 %lnot264, true, !dbg !15697
  %lnot.ext = zext i1 %lnot265 to i32, !dbg !15697
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !15698
  br label %return, !dbg !15698

sw.bb266:                                         ; preds = %if.end
  %114 = load i64, i64* @reload_reg_used_in_insn, align 8, !dbg !15699
  %115 = load i32, i32* %regno.addr, align 4, !dbg !15699
  %sh_prom267 = zext i32 %115 to i64, !dbg !15699
  %shl268 = shl i64 1, %sh_prom267, !dbg !15699
  %and269 = and i64 %114, %shl268, !dbg !15699
  %tobool270 = icmp ne i64 %and269, 0, !dbg !15699
  br i1 %tobool270, label %if.then271, label %if.end272, !dbg !15701

if.then271:                                       ; preds = %sw.bb266
  store i32 0, i32* %retval, align 4, !dbg !15702
  br label %return, !dbg !15702

if.end272:                                        ; preds = %sw.bb266
  store i32 0, i32* %i, align 4, !dbg !15703
  br label %for.cond273, !dbg !15705

for.cond273:                                      ; preds = %for.inc284, %if.end272
  %116 = load i32, i32* %i, align 4, !dbg !15706
  %117 = load i32, i32* @reload_n_operands, align 4, !dbg !15708
  %cmp274 = icmp slt i32 %116, %117, !dbg !15709
  br i1 %cmp274, label %for.body275, label %for.end286, !dbg !15710

for.body275:                                      ; preds = %for.cond273
  %118 = load i32, i32* %i, align 4, !dbg !15711
  %idxprom276 = sext i32 %118 to i64, !dbg !15711
  %arrayidx277 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i64 0, i64 %idxprom276, !dbg !15711
  %119 = load i64, i64* %arrayidx277, align 8, !dbg !15711
  %120 = load i32, i32* %regno.addr, align 4, !dbg !15711
  %sh_prom278 = zext i32 %120 to i64, !dbg !15711
  %shl279 = shl i64 1, %sh_prom278, !dbg !15711
  %and280 = and i64 %119, %shl279, !dbg !15711
  %tobool281 = icmp ne i64 %and280, 0, !dbg !15711
  br i1 %tobool281, label %if.then282, label %if.end283, !dbg !15713

if.then282:                                       ; preds = %for.body275
  store i32 0, i32* %retval, align 4, !dbg !15714
  br label %return, !dbg !15714

if.end283:                                        ; preds = %for.body275
  br label %for.inc284, !dbg !15711

for.inc284:                                       ; preds = %if.end283
  %121 = load i32, i32* %i, align 4, !dbg !15715
  %inc285 = add nsw i32 %121, 1, !dbg !15715
  store i32 %inc285, i32* %i, align 4, !dbg !15715
  br label %for.cond273, !dbg !15716, !llvm.loop !15717

for.end286:                                       ; preds = %for.cond273
  %122 = load i32, i32* %opnum.addr, align 4, !dbg !15719
  store i32 %122, i32* %i, align 4, !dbg !15721
  br label %for.cond287, !dbg !15722

for.cond287:                                      ; preds = %for.inc305, %for.end286
  %123 = load i32, i32* %i, align 4, !dbg !15723
  %124 = load i32, i32* @reload_n_operands, align 4, !dbg !15725
  %cmp288 = icmp slt i32 %123, %124, !dbg !15726
  br i1 %cmp288, label %for.body289, label %for.end307, !dbg !15727

for.body289:                                      ; preds = %for.cond287
  %125 = load i32, i32* %i, align 4, !dbg !15728
  %idxprom290 = sext i32 %125 to i64, !dbg !15728
  %arrayidx291 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i64 0, i64 %idxprom290, !dbg !15728
  %126 = load i64, i64* %arrayidx291, align 8, !dbg !15728
  %127 = load i32, i32* %regno.addr, align 4, !dbg !15728
  %sh_prom292 = zext i32 %127 to i64, !dbg !15728
  %shl293 = shl i64 1, %sh_prom292, !dbg !15728
  %and294 = and i64 %126, %shl293, !dbg !15728
  %tobool295 = icmp ne i64 %and294, 0, !dbg !15728
  br i1 %tobool295, label %if.then303, label %lor.lhs.false296, !dbg !15730

lor.lhs.false296:                                 ; preds = %for.body289
  %128 = load i32, i32* %i, align 4, !dbg !15731
  %idxprom297 = sext i32 %128 to i64, !dbg !15731
  %arrayidx298 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i64 0, i64 %idxprom297, !dbg !15731
  %129 = load i64, i64* %arrayidx298, align 8, !dbg !15731
  %130 = load i32, i32* %regno.addr, align 4, !dbg !15731
  %sh_prom299 = zext i32 %130 to i64, !dbg !15731
  %shl300 = shl i64 1, %sh_prom299, !dbg !15731
  %and301 = and i64 %129, %shl300, !dbg !15731
  %tobool302 = icmp ne i64 %and301, 0, !dbg !15731
  br i1 %tobool302, label %if.then303, label %if.end304, !dbg !15732

if.then303:                                       ; preds = %lor.lhs.false296, %for.body289
  store i32 0, i32* %retval, align 4, !dbg !15733
  br label %return, !dbg !15733

if.end304:                                        ; preds = %lor.lhs.false296
  br label %for.inc305, !dbg !15731

for.inc305:                                       ; preds = %if.end304
  %131 = load i32, i32* %i, align 4, !dbg !15734
  %inc306 = add nsw i32 %131, 1, !dbg !15734
  store i32 %inc306, i32* %i, align 4, !dbg !15734
  br label %for.cond287, !dbg !15735, !llvm.loop !15736

for.end307:                                       ; preds = %for.cond287
  store i32 1, i32* %retval, align 4, !dbg !15738
  br label %return, !dbg !15738

sw.bb308:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !15739
  br label %for.cond309, !dbg !15741

for.cond309:                                      ; preds = %for.inc327, %sw.bb308
  %132 = load i32, i32* %i, align 4, !dbg !15742
  %133 = load i32, i32* @reload_n_operands, align 4, !dbg !15744
  %cmp310 = icmp slt i32 %132, %133, !dbg !15745
  br i1 %cmp310, label %for.body311, label %for.end329, !dbg !15746

for.body311:                                      ; preds = %for.cond309
  %134 = load i32, i32* %i, align 4, !dbg !15747
  %idxprom312 = sext i32 %134 to i64, !dbg !15747
  %arrayidx313 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom312, !dbg !15747
  %135 = load i64, i64* %arrayidx313, align 8, !dbg !15747
  %136 = load i32, i32* %regno.addr, align 4, !dbg !15747
  %sh_prom314 = zext i32 %136 to i64, !dbg !15747
  %shl315 = shl i64 1, %sh_prom314, !dbg !15747
  %and316 = and i64 %135, %shl315, !dbg !15747
  %tobool317 = icmp ne i64 %and316, 0, !dbg !15747
  br i1 %tobool317, label %if.then325, label %lor.lhs.false318, !dbg !15749

lor.lhs.false318:                                 ; preds = %for.body311
  %137 = load i32, i32* %i, align 4, !dbg !15750
  %idxprom319 = sext i32 %137 to i64, !dbg !15750
  %arrayidx320 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i64 0, i64 %idxprom319, !dbg !15750
  %138 = load i64, i64* %arrayidx320, align 8, !dbg !15750
  %139 = load i32, i32* %regno.addr, align 4, !dbg !15750
  %sh_prom321 = zext i32 %139 to i64, !dbg !15750
  %shl322 = shl i64 1, %sh_prom321, !dbg !15750
  %and323 = and i64 %138, %shl322, !dbg !15750
  %tobool324 = icmp ne i64 %and323, 0, !dbg !15750
  br i1 %tobool324, label %if.then325, label %if.end326, !dbg !15751

if.then325:                                       ; preds = %lor.lhs.false318, %for.body311
  store i32 0, i32* %retval, align 4, !dbg !15752
  br label %return, !dbg !15752

if.end326:                                        ; preds = %lor.lhs.false318
  br label %for.inc327, !dbg !15750

for.inc327:                                       ; preds = %if.end326
  %140 = load i32, i32* %i, align 4, !dbg !15753
  %inc328 = add nsw i32 %140, 1, !dbg !15753
  store i32 %inc328, i32* %i, align 4, !dbg !15753
  br label %for.cond309, !dbg !15754, !llvm.loop !15755

for.end329:                                       ; preds = %for.cond309
  %141 = load i64, i64* @reload_reg_used_in_insn, align 8, !dbg !15757
  %142 = load i32, i32* %regno.addr, align 4, !dbg !15757
  %sh_prom330 = zext i32 %142 to i64, !dbg !15757
  %shl331 = shl i64 1, %sh_prom330, !dbg !15757
  %and332 = and i64 %141, %shl331, !dbg !15757
  %tobool333 = icmp ne i64 %and332, 0, !dbg !15757
  br i1 %tobool333, label %land.end345, label %land.rhs334, !dbg !15758

land.rhs334:                                      ; preds = %for.end329
  %143 = load i64, i64* @reload_reg_used_in_op_addr, align 8, !dbg !15759
  %144 = load i32, i32* %regno.addr, align 4, !dbg !15759
  %sh_prom335 = zext i32 %144 to i64, !dbg !15759
  %shl336 = shl i64 1, %sh_prom335, !dbg !15759
  %and337 = and i64 %143, %shl336, !dbg !15759
  %tobool338 = icmp ne i64 %and337, 0, !dbg !15759
  %lnot339 = xor i1 %tobool338, true, !dbg !15759
  %lnot341 = xor i1 %lnot339, true, !dbg !15759
  %lnot343 = xor i1 %lnot341, true, !dbg !15760
  br label %land.end345

land.end345:                                      ; preds = %land.rhs334, %for.end329
  %145 = phi i1 [ false, %for.end329 ], [ %lnot343, %land.rhs334 ], !dbg !15678
  %land.ext346 = zext i1 %145 to i32, !dbg !15758
  store i32 %land.ext346, i32* %retval, align 4, !dbg !15761
  br label %return, !dbg !15761

sw.bb347:                                         ; preds = %if.end
  %146 = load i64, i64* @reload_reg_used_in_other_addr, align 8, !dbg !15762
  %147 = load i32, i32* %regno.addr, align 4, !dbg !15762
  %sh_prom348 = zext i32 %147 to i64, !dbg !15762
  %shl349 = shl i64 1, %sh_prom348, !dbg !15762
  %and350 = and i64 %146, %shl349, !dbg !15762
  %tobool351 = icmp ne i64 %and350, 0, !dbg !15762
  %lnot352 = xor i1 %tobool351, true, !dbg !15762
  %lnot354 = xor i1 %lnot352, true, !dbg !15762
  %lnot356 = xor i1 %lnot354, true, !dbg !15763
  %lnot.ext357 = zext i1 %lnot356 to i32, !dbg !15763
  store i32 %lnot.ext357, i32* %retval, align 4, !dbg !15764
  br label %return, !dbg !15764

sw.default:                                       ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 4972, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !15765
  br label %sw.epilog, !dbg !15766

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %retval, align 4, !dbg !15767
  br label %return, !dbg !15767

return:                                           ; preds = %sw.epilog, %sw.bb347, %land.end345, %if.then325, %for.end307, %if.then303, %if.then282, %if.then271, %for.end258, %if.then254, %land.end, %if.then229, %for.end218, %if.then214, %if.then203, %for.end195, %if.then191, %if.then180, %for.end172, %if.then168, %if.then157, %for.end149, %if.then145, %if.then134, %for.end119, %if.then115, %if.then94, %if.then83, %if.then77, %for.end, %if.then65, %if.then24, %if.then
  %148 = load i32, i32* %retval, align 4, !dbg !15768
  ret i32 %148, !dbg !15768
}

declare dso_local i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local void @transfer_replacements(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_input_reload(%struct.insn_chain* %chain, %struct.reload* %rl, i32 %j) #0 !dbg !15769 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %rl.addr = alloca %struct.reload*, align 8
  %j.addr = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %old = alloca %struct.rtx_def*, align 8
  %reg_rtx = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain.addr, metadata !15772, metadata !DIExpression()), !dbg !15773
  store %struct.reload* %rl, %struct.reload** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.reload** %rl.addr, metadata !15774, metadata !DIExpression()), !dbg !15775
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !15776, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !15778, metadata !DIExpression()), !dbg !15779
  %0 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !15780
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %0, i32 0, i32 3, !dbg !15781
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !15781
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8, !dbg !15779
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old, metadata !15782, metadata !DIExpression()), !dbg !15783
  %2 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15784
  %in = getelementptr inbounds %struct.reload, %struct.reload* %2, i32 0, i32 0, !dbg !15785
  %3 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !15785
  %tobool = icmp ne %struct.rtx_def* %3, null, !dbg !15784
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !15786

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15787
  %in2 = getelementptr inbounds %struct.reload, %struct.reload* %4, i32 0, i32 0, !dbg !15787
  %5 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8, !dbg !15787
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !15787
  %bf.load = load i32, i32* %6, align 8, !dbg !15787
  %bf.clear = and i32 %bf.load, 65535, !dbg !15787
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !15787
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15784

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15788
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %7, i32 0, i32 8, !dbg !15789
  %8 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8, !dbg !15789
  br label %cond.end, !dbg !15784

cond.false:                                       ; preds = %land.lhs.true, %entry
  %9 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15790
  %in3 = getelementptr inbounds %struct.reload, %struct.reload* %9, i32 0, i32 0, !dbg !15791
  %10 = load %struct.rtx_def*, %struct.rtx_def** %in3, align 8, !dbg !15791
  br label %cond.end, !dbg !15784

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %8, %cond.true ], [ %10, %cond.false ], !dbg !15784
  store %struct.rtx_def* %cond, %struct.rtx_def** %old, align 8, !dbg !15783
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg_rtx, metadata !15792, metadata !DIExpression()), !dbg !15793
  %11 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15794
  %reg_rtx4 = getelementptr inbounds %struct.reload, %struct.reload* %11, i32 0, i32 11, !dbg !15795
  %12 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx4, align 8, !dbg !15795
  store %struct.rtx_def* %12, %struct.rtx_def** %reg_rtx, align 8, !dbg !15793
  %13 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !15796
  %tobool5 = icmp ne %struct.rtx_def* %13, null, !dbg !15796
  br i1 %tobool5, label %land.lhs.true6, label %if.end18, !dbg !15798

land.lhs.true6:                                   ; preds = %cond.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15799
  %tobool7 = icmp ne %struct.rtx_def* %14, null, !dbg !15799
  br i1 %tobool7, label %if.then, label %if.end18, !dbg !15800

if.then:                                          ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !15801, metadata !DIExpression()), !dbg !15803
  %15 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !15804
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !15804
  %bf.load8 = load i32, i32* %16, align 8, !dbg !15804
  %bf.lshr = lshr i32 %bf.load8, 16, !dbg !15804
  %bf.clear9 = and i32 %bf.lshr, 255, !dbg !15804
  store i32 %bf.clear9, i32* %mode, align 4, !dbg !15805
  %17 = load i32, i32* %mode, align 4, !dbg !15806
  %cmp10 = icmp eq i32 %17, 0, !dbg !15808
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !15809

if.then11:                                        ; preds = %if.then
  %18 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15810
  %inmode = getelementptr inbounds %struct.reload, %struct.reload* %18, i32 0, i32 3, !dbg !15811
  %19 = load i32, i32* %inmode, align 4, !dbg !15811
  store i32 %19, i32* %mode, align 4, !dbg !15812
  br label %if.end, !dbg !15813

if.end:                                           ; preds = %if.then11, %if.then
  %20 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15814
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !15814
  %bf.load12 = load i32, i32* %21, align 8, !dbg !15814
  %bf.lshr13 = lshr i32 %bf.load12, 16, !dbg !15814
  %bf.clear14 = and i32 %bf.lshr13, 255, !dbg !15814
  %22 = load i32, i32* %mode, align 4, !dbg !15816
  %cmp15 = icmp ne i32 %bf.clear14, %22, !dbg !15817
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !15818

if.then16:                                        ; preds = %if.end
  %23 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15819
  %24 = load i32, i32* %mode, align 4, !dbg !15820
  %call = call %struct.rtx_def* @reload_adjust_reg_for_mode(%struct.rtx_def* %23, i32 %24), !dbg !15821
  store %struct.rtx_def* %call, %struct.rtx_def** %reg_rtx, align 8, !dbg !15822
  br label %if.end17, !dbg !15823

if.end17:                                         ; preds = %if.then16, %if.end
  br label %if.end18, !dbg !15824

if.end18:                                         ; preds = %if.end17, %land.lhs.true6, %cond.end
  %25 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15825
  %26 = load i32, i32* %j.addr, align 4, !dbg !15826
  %idxprom = sext i32 %26 to i64, !dbg !15827
  %arrayidx = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_reg_rtx_for_input, i64 0, i64 %idxprom, !dbg !15827
  store %struct.rtx_def* %25, %struct.rtx_def** %arrayidx, align 8, !dbg !15828
  %27 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !15829
  %cmp19 = icmp ne %struct.rtx_def* %27, null, !dbg !15831
  br i1 %cmp19, label %land.lhs.true20, label %if.end33, !dbg !15832

land.lhs.true20:                                  ; preds = %if.end18
  %28 = load i32, i32* %j.addr, align 4, !dbg !15833
  %idxprom21 = sext i32 %28 to i64, !dbg !15834
  %arrayidx22 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom21, !dbg !15834
  %29 = load i8, i8* %arrayidx22, align 1, !dbg !15834
  %tobool23 = icmp ne i8 %29, 0, !dbg !15834
  br i1 %tobool23, label %lor.lhs.false, label %land.lhs.true27, !dbg !15835

lor.lhs.false:                                    ; preds = %land.lhs.true20
  %30 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15836
  %out = getelementptr inbounds %struct.reload, %struct.reload* %30, i32 0, i32 1, !dbg !15837
  %31 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !15837
  %tobool24 = icmp ne %struct.rtx_def* %31, null, !dbg !15836
  br i1 %tobool24, label %land.lhs.true25, label %if.end33, !dbg !15838

land.lhs.true25:                                  ; preds = %lor.lhs.false
  %32 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15839
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %32, i32 0, i32 9, !dbg !15840
  %33 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8, !dbg !15840
  %tobool26 = icmp ne %struct.rtx_def* %33, null, !dbg !15839
  br i1 %tobool26, label %if.end33, label %land.lhs.true27, !dbg !15841

land.lhs.true27:                                  ; preds = %land.lhs.true25, %land.lhs.true20
  %34 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15842
  %35 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !15843
  %call28 = call i32 @rtx_equal_p(%struct.rtx_def* %34, %struct.rtx_def* %35), !dbg !15844
  %tobool29 = icmp ne i32 %call28, 0, !dbg !15844
  br i1 %tobool29, label %if.end33, label %land.lhs.true30, !dbg !15845

land.lhs.true30:                                  ; preds = %land.lhs.true27
  %36 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15846
  %cmp31 = icmp ne %struct.rtx_def* %36, null, !dbg !15847
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !15848

if.then32:                                        ; preds = %land.lhs.true30
  %37 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !15849
  %38 = load i32, i32* %j.addr, align 4, !dbg !15850
  %idx.ext = sext i32 %38 to i64, !dbg !15851
  %add.ptr = getelementptr inbounds %struct.reload, %struct.reload* getelementptr inbounds ([180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 0), i64 %idx.ext, !dbg !15851
  %39 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !15852
  %40 = load i32, i32* %j.addr, align 4, !dbg !15853
  call void @emit_input_reload_insns(%struct.insn_chain* %37, %struct.reload* %add.ptr, %struct.rtx_def* %39, i32 %40), !dbg !15854
  br label %if.end33, !dbg !15854

if.end33:                                         ; preds = %if.then32, %land.lhs.true30, %land.lhs.true27, %land.lhs.true25, %lor.lhs.false, %if.end18
  %41 = load i32, i32* @optimize, align 4, !dbg !15855
  %tobool34 = icmp ne i32 %41, 0, !dbg !15855
  br i1 %tobool34, label %land.lhs.true35, label %if.end71, !dbg !15857

land.lhs.true35:                                  ; preds = %if.end33
  %42 = load i32, i32* %j.addr, align 4, !dbg !15858
  %idxprom36 = sext i32 %42 to i64, !dbg !15859
  %arrayidx37 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom36, !dbg !15859
  %43 = load i8, i8* %arrayidx37, align 1, !dbg !15859
  %conv = sext i8 %43 to i32, !dbg !15859
  %tobool38 = icmp ne i32 %conv, 0, !dbg !15859
  br i1 %tobool38, label %land.lhs.true39, label %if.end71, !dbg !15860

land.lhs.true39:                                  ; preds = %land.lhs.true35
  %44 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15861
  %in40 = getelementptr inbounds %struct.reload, %struct.reload* %44, i32 0, i32 0, !dbg !15862
  %45 = load %struct.rtx_def*, %struct.rtx_def** %in40, align 8, !dbg !15862
  %tobool41 = icmp ne %struct.rtx_def* %45, null, !dbg !15861
  br i1 %tobool41, label %land.lhs.true42, label %if.end71, !dbg !15863

land.lhs.true42:                                  ; preds = %land.lhs.true39
  %46 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15864
  %in43 = getelementptr inbounds %struct.reload, %struct.reload* %46, i32 0, i32 0, !dbg !15864
  %47 = load %struct.rtx_def*, %struct.rtx_def** %in43, align 8, !dbg !15864
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !15864
  %bf.load44 = load i32, i32* %48, align 8, !dbg !15864
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !15864
  %cmp46 = icmp eq i32 %bf.clear45, 43, !dbg !15864
  br i1 %cmp46, label %land.lhs.true48, label %if.end71, !dbg !15865

land.lhs.true48:                                  ; preds = %land.lhs.true42
  %49 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15866
  %in_reg49 = getelementptr inbounds %struct.reload, %struct.reload* %49, i32 0, i32 8, !dbg !15866
  %50 = load %struct.rtx_def*, %struct.rtx_def** %in_reg49, align 8, !dbg !15866
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !15866
  %bf.load50 = load i32, i32* %51, align 8, !dbg !15866
  %bf.clear51 = and i32 %bf.load50, 65535, !dbg !15866
  %cmp52 = icmp eq i32 %bf.clear51, 43, !dbg !15866
  br i1 %cmp52, label %land.lhs.true54, label %if.end71, !dbg !15867

land.lhs.true54:                                  ; preds = %land.lhs.true48
  %52 = load i32, i32* %j.addr, align 4, !dbg !15868
  %idxprom55 = sext i32 %52 to i64, !dbg !15869
  %arrayidx56 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom55, !dbg !15869
  %53 = load i32, i32* %arrayidx56, align 4, !dbg !15869
  %cmp57 = icmp sge i32 %53, 0, !dbg !15870
  br i1 %cmp57, label %land.lhs.true59, label %if.end71, !dbg !15871

land.lhs.true59:                                  ; preds = %land.lhs.true54
  %54 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !15872
  %55 = load i32, i32* %j.addr, align 4, !dbg !15872
  %idxprom60 = sext i32 %55 to i64, !dbg !15872
  %arrayidx61 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom60, !dbg !15872
  %56 = load i32, i32* %arrayidx61, align 4, !dbg !15872
  %sh_prom = zext i32 %56 to i64, !dbg !15872
  %shl = shl i64 1, %sh_prom, !dbg !15872
  %and = and i64 %54, %shl, !dbg !15872
  %tobool62 = icmp ne i64 %and, 0, !dbg !15872
  br i1 %tobool62, label %if.then63, label %if.end71, !dbg !15873

if.then63:                                        ; preds = %land.lhs.true59
  %57 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !15874
  %58 = load i32, i32* %j.addr, align 4, !dbg !15875
  %idxprom64 = sext i32 %58 to i64, !dbg !15876
  %arrayidx65 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom64, !dbg !15876
  %59 = load i32, i32* %arrayidx65, align 4, !dbg !15876
  %idxprom66 = sext i32 %59 to i64, !dbg !15877
  %arrayidx67 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i64 0, i64 %idxprom66, !dbg !15877
  %60 = load i32, i32* %arrayidx67, align 4, !dbg !15877
  %idxprom68 = sext i32 %60 to i64, !dbg !15874
  %arrayidx69 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %57, i64 %idxprom68, !dbg !15874
  %61 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx69, align 8, !dbg !15874
  %62 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15878
  %in70 = getelementptr inbounds %struct.reload, %struct.reload* %62, i32 0, i32 0, !dbg !15879
  store %struct.rtx_def* %61, %struct.rtx_def** %in70, align 8, !dbg !15880
  br label %if.end71, !dbg !15878

if.end71:                                         ; preds = %if.then63, %land.lhs.true59, %land.lhs.true54, %land.lhs.true48, %land.lhs.true42, %land.lhs.true39, %land.lhs.true35, %if.end33
  %63 = load i32, i32* @optimize, align 4, !dbg !15881
  %tobool72 = icmp ne i32 %63, 0, !dbg !15881
  br i1 %tobool72, label %land.lhs.true73, label %if.end110, !dbg !15883

land.lhs.true73:                                  ; preds = %if.end71
  %64 = load i32, i32* %j.addr, align 4, !dbg !15884
  %idxprom74 = sext i32 %64 to i64, !dbg !15885
  %arrayidx75 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom74, !dbg !15885
  %65 = load i8, i8* %arrayidx75, align 1, !dbg !15885
  %conv76 = sext i8 %65 to i32, !dbg !15885
  %tobool77 = icmp ne i32 %conv76, 0, !dbg !15885
  br i1 %tobool77, label %land.lhs.true82, label %lor.lhs.false78, !dbg !15886

lor.lhs.false78:                                  ; preds = %land.lhs.true73
  %66 = load i32, i32* %j.addr, align 4, !dbg !15887
  %idxprom79 = sext i32 %66 to i64, !dbg !15888
  %arrayidx80 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom79, !dbg !15888
  %67 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx80, align 8, !dbg !15888
  %tobool81 = icmp ne %struct.rtx_def* %67, null, !dbg !15888
  br i1 %tobool81, label %land.lhs.true82, label %if.end110, !dbg !15889

land.lhs.true82:                                  ; preds = %lor.lhs.false78, %land.lhs.true73
  %68 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15890
  %tobool83 = icmp ne %struct.rtx_def* %68, null, !dbg !15890
  br i1 %tobool83, label %land.lhs.true84, label %if.end110, !dbg !15891

land.lhs.true84:                                  ; preds = %land.lhs.true82
  %69 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15892
  %70 = bitcast %struct.rtx_def* %69 to i32*, !dbg !15892
  %bf.load85 = load i32, i32* %70, align 8, !dbg !15892
  %bf.clear86 = and i32 %bf.load85, 65535, !dbg !15892
  %cmp87 = icmp eq i32 %bf.clear86, 37, !dbg !15892
  br i1 %cmp87, label %land.lhs.true89, label %if.end110, !dbg !15893

land.lhs.true89:                                  ; preds = %land.lhs.true84
  %71 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15894
  %call90 = call i32 @rhs_regno(%struct.rtx_def* %71), !dbg !15894
  %idxprom91 = zext i32 %call90 to i64, !dbg !15895
  %arrayidx92 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom91, !dbg !15895
  %72 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx92, align 8, !dbg !15895
  %cmp93 = icmp ne %struct.rtx_def* %72, null, !dbg !15896
  br i1 %cmp93, label %land.lhs.true95, label %if.end110, !dbg !15897

land.lhs.true95:                                  ; preds = %land.lhs.true89
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15898
  %74 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15899
  %call96 = call i32 @rhs_regno(%struct.rtx_def* %74), !dbg !15899
  %idxprom97 = zext i32 %call96 to i64, !dbg !15900
  %arrayidx98 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i64 0, i64 %idxprom97, !dbg !15900
  %75 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx98, align 8, !dbg !15900
  %call99 = call i32 @dead_or_set_p(%struct.rtx_def* %73, %struct.rtx_def* %75), !dbg !15901
  %tobool100 = icmp ne i32 %call99, 0, !dbg !15901
  br i1 %tobool100, label %if.then108, label %lor.lhs.false101, !dbg !15902

lor.lhs.false101:                                 ; preds = %land.lhs.true95
  %76 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15903
  %call102 = call i32 @rhs_regno(%struct.rtx_def* %76), !dbg !15903
  %idxprom103 = zext i32 %call102 to i64, !dbg !15904
  %arrayidx104 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i64 0, i64 %idxprom103, !dbg !15904
  %77 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx104, align 8, !dbg !15904
  %78 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15905
  %out_reg105 = getelementptr inbounds %struct.reload, %struct.reload* %78, i32 0, i32 9, !dbg !15906
  %79 = load %struct.rtx_def*, %struct.rtx_def** %out_reg105, align 8, !dbg !15906
  %call106 = call i32 @rtx_equal_p(%struct.rtx_def* %77, %struct.rtx_def* %79), !dbg !15907
  %tobool107 = icmp ne i32 %call106, 0, !dbg !15907
  br i1 %tobool107, label %if.then108, label %if.end110, !dbg !15908

if.then108:                                       ; preds = %lor.lhs.false101, %land.lhs.true95
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15909
  %81 = load i32, i32* %j.addr, align 4, !dbg !15910
  %82 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15911
  %call109 = call i32 @rhs_regno(%struct.rtx_def* %82), !dbg !15911
  %83 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15912
  call void @delete_output_reload(%struct.rtx_def* %80, i32 %81, i32 %call109, %struct.rtx_def* %83), !dbg !15913
  br label %if.end110, !dbg !15913

if.end110:                                        ; preds = %if.then108, %lor.lhs.false101, %land.lhs.true89, %land.lhs.true84, %land.lhs.true82, %lor.lhs.false78, %if.end71
  ret void, !dbg !15914
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_output_reload(%struct.insn_chain* %chain, %struct.reload* %rl, i32 %j) #0 !dbg !15915 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %rl.addr = alloca %struct.reload*, align 8
  %j.addr = alloca i32, align 4
  %note = alloca %struct.rtx_def*, align 8
  %old = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %pseudo = alloca %struct.rtx_def*, align 8
  %reg_rtx = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %pseudo_no = alloca i32, align 4
  %last_regno = alloca i32, align 4
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain.addr, metadata !15916, metadata !DIExpression()), !dbg !15917
  store %struct.reload* %rl, %struct.reload** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.reload** %rl.addr, metadata !15918, metadata !DIExpression()), !dbg !15919
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !15920, metadata !DIExpression()), !dbg !15921
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !15922, metadata !DIExpression()), !dbg !15923
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old, metadata !15924, metadata !DIExpression()), !dbg !15925
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !15926, metadata !DIExpression()), !dbg !15927
  %0 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !15928
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %0, i32 0, i32 3, !dbg !15929
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !15929
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8, !dbg !15927
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pseudo, metadata !15930, metadata !DIExpression()), !dbg !15931
  %2 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15932
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %2, i32 0, i32 9, !dbg !15933
  %3 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8, !dbg !15933
  store %struct.rtx_def* %3, %struct.rtx_def** %pseudo, align 8, !dbg !15931
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg_rtx, metadata !15934, metadata !DIExpression()), !dbg !15935
  %4 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15936
  %reg_rtx2 = getelementptr inbounds %struct.reload, %struct.reload* %4, i32 0, i32 11, !dbg !15937
  %5 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx2, align 8, !dbg !15937
  store %struct.rtx_def* %5, %struct.rtx_def** %reg_rtx, align 8, !dbg !15935
  %6 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15938
  %out = getelementptr inbounds %struct.reload, %struct.reload* %6, i32 0, i32 1, !dbg !15940
  %7 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !15940
  %tobool = icmp ne %struct.rtx_def* %7, null, !dbg !15938
  br i1 %tobool, label %land.lhs.true, label %if.end19, !dbg !15941

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15942
  %tobool3 = icmp ne %struct.rtx_def* %8, null, !dbg !15942
  br i1 %tobool3, label %if.then, label %if.end19, !dbg !15943

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !15944, metadata !DIExpression()), !dbg !15946
  %9 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15947
  %out4 = getelementptr inbounds %struct.reload, %struct.reload* %9, i32 0, i32 1, !dbg !15947
  %10 = load %struct.rtx_def*, %struct.rtx_def** %out4, align 8, !dbg !15947
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !15947
  %bf.load = load i32, i32* %11, align 8, !dbg !15947
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !15947
  %bf.clear = and i32 %bf.lshr, 255, !dbg !15947
  store i32 %bf.clear, i32* %mode, align 4, !dbg !15948
  %12 = load i32, i32* %mode, align 4, !dbg !15949
  %cmp = icmp eq i32 %12, 0, !dbg !15951
  br i1 %cmp, label %if.then5, label %if.end11, !dbg !15952

if.then5:                                         ; preds = %if.then
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15953
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !15953
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !15953
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !15953
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !15953
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !15953
  %call = call i32 @asm_noperands(%struct.rtx_def* %14), !dbg !15956
  %cmp6 = icmp slt i32 %call, 0, !dbg !15957
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !15958

if.then7:                                         ; preds = %if.then5
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15959
  call void @_fatal_insn(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0), %struct.rtx_def* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 7695, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !15959
  br label %if.end, !dbg !15959

if.end:                                           ; preds = %if.then7, %if.then5
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !15960
  call void (%struct.rtx_def*, i8*, ...) @error_for_asm(%struct.rtx_def* %16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0)), !dbg !15961
  %17 = load i32, i32* @word_mode, align 4, !dbg !15962
  store i32 %17, i32* %mode, align 4, !dbg !15963
  %18 = load i32, i32* %mode, align 4, !dbg !15964
  %19 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15965
  %call8 = call i32 @rhs_regno(%struct.rtx_def* %19), !dbg !15965
  %call9 = call %struct.rtx_def* @gen_rtx_REG(i32 %18, i32 %call8), !dbg !15966
  %20 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15967
  %out10 = getelementptr inbounds %struct.reload, %struct.reload* %20, i32 0, i32 1, !dbg !15968
  store %struct.rtx_def* %call9, %struct.rtx_def** %out10, align 8, !dbg !15969
  br label %if.end11, !dbg !15970

if.end11:                                         ; preds = %if.end, %if.then
  %21 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15971
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !15971
  %bf.load12 = load i32, i32* %22, align 8, !dbg !15971
  %bf.lshr13 = lshr i32 %bf.load12, 16, !dbg !15971
  %bf.clear14 = and i32 %bf.lshr13, 255, !dbg !15971
  %23 = load i32, i32* %mode, align 4, !dbg !15973
  %cmp15 = icmp ne i32 %bf.clear14, %23, !dbg !15974
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !15975

if.then16:                                        ; preds = %if.end11
  %24 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15976
  %25 = load i32, i32* %mode, align 4, !dbg !15977
  %call17 = call %struct.rtx_def* @reload_adjust_reg_for_mode(%struct.rtx_def* %24, i32 %25), !dbg !15978
  store %struct.rtx_def* %call17, %struct.rtx_def** %reg_rtx, align 8, !dbg !15979
  br label %if.end18, !dbg !15980

if.end18:                                         ; preds = %if.then16, %if.end11
  br label %if.end19, !dbg !15981

if.end19:                                         ; preds = %if.end18, %land.lhs.true, %entry
  %26 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !15982
  %27 = load i32, i32* %j.addr, align 4, !dbg !15983
  %idxprom = sext i32 %27 to i64, !dbg !15984
  %arrayidx20 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_reg_rtx_for_output, i64 0, i64 %idxprom, !dbg !15984
  store %struct.rtx_def* %26, %struct.rtx_def** %arrayidx20, align 8, !dbg !15985
  %28 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8, !dbg !15986
  %tobool21 = icmp ne %struct.rtx_def* %28, null, !dbg !15986
  br i1 %tobool21, label %land.lhs.true22, label %if.end60, !dbg !15988

land.lhs.true22:                                  ; preds = %if.end19
  %29 = load i32, i32* @optimize, align 4, !dbg !15989
  %tobool23 = icmp ne i32 %29, 0, !dbg !15989
  br i1 %tobool23, label %land.lhs.true24, label %if.end60, !dbg !15990

land.lhs.true24:                                  ; preds = %land.lhs.true22
  %30 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8, !dbg !15991
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !15991
  %bf.load25 = load i32, i32* %31, align 8, !dbg !15991
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !15991
  %cmp27 = icmp eq i32 %bf.clear26, 37, !dbg !15991
  br i1 %cmp27, label %land.lhs.true28, label %if.end60, !dbg !15992

land.lhs.true28:                                  ; preds = %land.lhs.true24
  %32 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !15993
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %32, i32 0, i32 8, !dbg !15994
  %33 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8, !dbg !15994
  %34 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8, !dbg !15995
  %call29 = call i32 @rtx_equal_p(%struct.rtx_def* %33, %struct.rtx_def* %34), !dbg !15996
  %tobool30 = icmp ne i32 %call29, 0, !dbg !15996
  br i1 %tobool30, label %if.end60, label %land.lhs.true31, !dbg !15997

land.lhs.true31:                                  ; preds = %land.lhs.true28
  %35 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8, !dbg !15998
  %call32 = call i32 @rhs_regno(%struct.rtx_def* %35), !dbg !15998
  %cmp33 = icmp uge i32 %call32, 53, !dbg !15999
  br i1 %cmp33, label %land.lhs.true34, label %if.end60, !dbg !16000

land.lhs.true34:                                  ; preds = %land.lhs.true31
  %36 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !16001
  %37 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8, !dbg !16002
  %call35 = call i32 @rhs_regno(%struct.rtx_def* %37), !dbg !16002
  %idxprom36 = zext i32 %call35 to i64, !dbg !16001
  %arrayidx37 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %36, i64 %idxprom36, !dbg !16001
  %38 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx37, align 8, !dbg !16001
  %tobool38 = icmp ne %struct.rtx_def* %38, null, !dbg !16001
  br i1 %tobool38, label %if.then39, label %if.end60, !dbg !16003

if.then39:                                        ; preds = %land.lhs.true34
  call void @llvm.dbg.declare(metadata i32* %pseudo_no, metadata !16004, metadata !DIExpression()), !dbg !16006
  %39 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8, !dbg !16007
  %call40 = call i32 @rhs_regno(%struct.rtx_def* %39), !dbg !16007
  store i32 %call40, i32* %pseudo_no, align 4, !dbg !16006
  call void @llvm.dbg.declare(metadata i32* %last_regno, metadata !16008, metadata !DIExpression()), !dbg !16009
  %40 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !16010
  %41 = load i32, i32* %pseudo_no, align 4, !dbg !16010
  %idxprom41 = sext i32 %41 to i64, !dbg !16010
  %arrayidx42 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %40, i64 %idxprom41, !dbg !16010
  %42 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx42, align 8, !dbg !16010
  %call43 = call i32 @rhs_regno(%struct.rtx_def* %42), !dbg !16010
  store i32 %call43, i32* %last_regno, align 4, !dbg !16009
  %43 = load i64, i64* @reg_reloaded_valid, align 8, !dbg !16011
  %44 = load i32, i32* %last_regno, align 4, !dbg !16011
  %sh_prom = zext i32 %44 to i64, !dbg !16011
  %shl = shl i64 1, %sh_prom, !dbg !16011
  %and = and i64 %43, %shl, !dbg !16011
  %tobool44 = icmp ne i64 %and, 0, !dbg !16011
  br i1 %tobool44, label %land.lhs.true45, label %if.end59, !dbg !16013

land.lhs.true45:                                  ; preds = %if.then39
  %45 = load i32, i32* %last_regno, align 4, !dbg !16014
  %idxprom46 = sext i32 %45 to i64, !dbg !16015
  %arrayidx47 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i64 0, i64 %idxprom46, !dbg !16015
  %46 = load i32, i32* %arrayidx47, align 4, !dbg !16015
  %47 = load i32, i32* %pseudo_no, align 4, !dbg !16016
  %cmp48 = icmp eq i32 %46, %47, !dbg !16017
  br i1 %cmp48, label %land.lhs.true49, label %if.end59, !dbg !16018

land.lhs.true49:                                  ; preds = %land.lhs.true45
  %48 = load i32, i32* %last_regno, align 4, !dbg !16019
  %idxprom50 = sext i32 %48 to i64, !dbg !16020
  %arrayidx51 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom50, !dbg !16020
  %49 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx51, align 8, !dbg !16020
  %tobool52 = icmp ne %struct.rtx_def* %49, null, !dbg !16020
  br i1 %tobool52, label %land.lhs.true53, label %if.end59, !dbg !16021

land.lhs.true53:                                  ; preds = %land.lhs.true49
  %50 = load %struct.rtx_def*, %struct.rtx_def** %pseudo, align 8, !dbg !16022
  %51 = load i32, i32* %last_regno, align 4, !dbg !16023
  %idxprom54 = sext i32 %51 to i64, !dbg !16024
  %arrayidx55 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i64 0, i64 %idxprom54, !dbg !16024
  %52 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx55, align 8, !dbg !16024
  %call56 = call i32 @rtx_equal_p(%struct.rtx_def* %50, %struct.rtx_def* %52), !dbg !16025
  %tobool57 = icmp ne i32 %call56, 0, !dbg !16025
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !16026

if.then58:                                        ; preds = %land.lhs.true53
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !16027
  %54 = load i32, i32* %j.addr, align 4, !dbg !16028
  %55 = load i32, i32* %last_regno, align 4, !dbg !16029
  %56 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !16030
  call void @delete_output_reload(%struct.rtx_def* %53, i32 %54, i32 %55, %struct.rtx_def* %56), !dbg !16031
  br label %if.end59, !dbg !16031

if.end59:                                         ; preds = %if.then58, %land.lhs.true53, %land.lhs.true49, %land.lhs.true45, %if.then39
  br label %if.end60, !dbg !16032

if.end60:                                         ; preds = %if.end59, %land.lhs.true34, %land.lhs.true31, %land.lhs.true28, %land.lhs.true24, %land.lhs.true22, %if.end19
  %57 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16033
  %out_reg61 = getelementptr inbounds %struct.reload, %struct.reload* %57, i32 0, i32 9, !dbg !16034
  %58 = load %struct.rtx_def*, %struct.rtx_def** %out_reg61, align 8, !dbg !16034
  store %struct.rtx_def* %58, %struct.rtx_def** %old, align 8, !dbg !16035
  %59 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !16036
  %cmp62 = icmp eq %struct.rtx_def* %59, null, !dbg !16038
  br i1 %cmp62, label %if.then67, label %lor.lhs.false, !dbg !16039

lor.lhs.false:                                    ; preds = %if.end60
  %60 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !16040
  %cmp63 = icmp eq %struct.rtx_def* %60, null, !dbg !16041
  br i1 %cmp63, label %if.then67, label %lor.lhs.false64, !dbg !16042

lor.lhs.false64:                                  ; preds = %lor.lhs.false
  %61 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !16043
  %62 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !16044
  %call65 = call i32 @rtx_equal_p(%struct.rtx_def* %61, %struct.rtx_def* %62), !dbg !16045
  %tobool66 = icmp ne i32 %call65, 0, !dbg !16045
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !16046

if.then67:                                        ; preds = %lor.lhs.false64, %lor.lhs.false, %if.end60
  br label %return, !dbg !16047

if.end68:                                         ; preds = %lor.lhs.false64
  %63 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !16048
  %64 = bitcast %struct.rtx_def* %63 to i32*, !dbg !16048
  %bf.load69 = load i32, i32* %64, align 8, !dbg !16048
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !16048
  %cmp71 = icmp eq i32 %bf.clear70, 37, !dbg !16048
  br i1 %cmp71, label %land.lhs.true76, label %lor.lhs.false72, !dbg !16050

lor.lhs.false72:                                  ; preds = %if.end68
  %65 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !16051
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !16051
  %bf.load73 = load i32, i32* %66, align 8, !dbg !16051
  %bf.clear74 = and i32 %bf.load73, 65535, !dbg !16051
  %cmp75 = icmp eq i32 %bf.clear74, 38, !dbg !16052
  br i1 %cmp75, label %land.lhs.true76, label %if.else, !dbg !16053

land.lhs.true76:                                  ; preds = %lor.lhs.false72, %if.end68
  %67 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !16054
  %68 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !16055
  %call77 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %67, i32 6, %struct.rtx_def* %68), !dbg !16056
  store %struct.rtx_def* %call77, %struct.rtx_def** %note, align 8, !dbg !16057
  %cmp78 = icmp ne %struct.rtx_def* %call77, null, !dbg !16058
  br i1 %cmp78, label %if.then79, label %if.else, !dbg !16059

if.then79:                                        ; preds = %land.lhs.true76
  %69 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !16060
  %70 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !16062
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !16062
  %fld81 = bitcast %union.u* %u80 to [1 x %union.rtunion_def]*, !dbg !16062
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i64 0, i64 0, !dbg !16062
  %rt_rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**, !dbg !16062
  store %struct.rtx_def* %69, %struct.rtx_def** %rt_rtx83, align 8, !dbg !16063
  br label %return, !dbg !16064

if.else:                                          ; preds = %land.lhs.true76, %lor.lhs.false72
  %71 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !16065
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !16065
  %bf.load84 = load i32, i32* %72, align 8, !dbg !16065
  %bf.clear85 = and i32 %bf.load84, 65535, !dbg !16065
  %cmp86 = icmp eq i32 %bf.clear85, 39, !dbg !16067
  br i1 %cmp86, label %land.lhs.true87, label %if.else111, !dbg !16068

land.lhs.true87:                                  ; preds = %if.else
  %73 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !16069
  %u88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !16069
  %fld89 = bitcast %union.u* %u88 to [1 x %union.rtunion_def]*, !dbg !16069
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i64 0, i64 0, !dbg !16069
  %rt_rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**, !dbg !16069
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx91, align 8, !dbg !16069
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !16069
  %bf.load92 = load i32, i32* %75, align 8, !dbg !16069
  %bf.clear93 = and i32 %bf.load92, 65535, !dbg !16069
  %cmp94 = icmp eq i32 %bf.clear93, 37, !dbg !16069
  br i1 %cmp94, label %land.lhs.true95, label %if.else111, !dbg !16070

land.lhs.true95:                                  ; preds = %land.lhs.true87
  %76 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !16071
  %77 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !16072
  %u96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1, !dbg !16072
  %fld97 = bitcast %union.u* %u96 to [1 x %union.rtunion_def]*, !dbg !16072
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i64 0, i64 0, !dbg !16072
  %rt_rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**, !dbg !16072
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !16072
  %call100 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %76, i32 6, %struct.rtx_def* %78), !dbg !16073
  store %struct.rtx_def* %call100, %struct.rtx_def** %note, align 8, !dbg !16074
  %cmp101 = icmp ne %struct.rtx_def* null, %call100, !dbg !16075
  br i1 %cmp101, label %if.then102, label %if.else111, !dbg !16076

if.then102:                                       ; preds = %land.lhs.true95
  %79 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !16077
  %80 = bitcast %struct.rtx_def* %79 to i32*, !dbg !16077
  %bf.load103 = load i32, i32* %80, align 8, !dbg !16077
  %bf.lshr104 = lshr i32 %bf.load103, 16, !dbg !16077
  %bf.clear105 = and i32 %bf.lshr104, 255, !dbg !16077
  %81 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !16079
  %call106 = call %struct.rtx_def* @gen_lowpart_common(i32 %bf.clear105, %struct.rtx_def* %81), !dbg !16080
  %82 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !16081
  %u107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1, !dbg !16081
  %fld108 = bitcast %union.u* %u107 to [1 x %union.rtunion_def]*, !dbg !16081
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i64 0, i64 0, !dbg !16081
  %rt_rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**, !dbg !16081
  store %struct.rtx_def* %call106, %struct.rtx_def** %rt_rtx110, align 8, !dbg !16082
  br label %return, !dbg !16083

if.else111:                                       ; preds = %land.lhs.true95, %land.lhs.true87, %if.else
  %83 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !16084
  %84 = bitcast %struct.rtx_def* %83 to i32*, !dbg !16084
  %bf.load112 = load i32, i32* %84, align 8, !dbg !16084
  %bf.clear113 = and i32 %bf.load112, 65535, !dbg !16084
  %cmp114 = icmp eq i32 %bf.clear113, 38, !dbg !16086
  br i1 %cmp114, label %if.then115, label %if.end116, !dbg !16087

if.then115:                                       ; preds = %if.else111
  br label %return, !dbg !16088

if.end116:                                        ; preds = %if.else111
  br label %if.end117

if.end117:                                        ; preds = %if.end116
  br label %if.end118

if.end118:                                        ; preds = %if.end117
  %85 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !16089
  %86 = bitcast %struct.rtx_def* %85 to i32*, !dbg !16089
  %bf.load119 = load i32, i32* %86, align 8, !dbg !16089
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !16089
  %cmp121 = icmp eq i32 %bf.clear120, 8, !dbg !16089
  br i1 %cmp121, label %cond.false, label %cond.true, !dbg !16089

cond.true:                                        ; preds = %if.end118
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 7756, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16089
  br label %cond.end, !dbg !16089

cond.false:                                       ; preds = %if.end118
  br label %cond.end, !dbg !16089

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !16089
  %87 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !16090
  %88 = load i32, i32* %j.addr, align 4, !dbg !16091
  %idx.ext = sext i32 %88 to i64, !dbg !16092
  %add.ptr = getelementptr inbounds %struct.reload, %struct.reload* getelementptr inbounds ([180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 0), i64 %idx.ext, !dbg !16092
  %89 = load i32, i32* %j.addr, align 4, !dbg !16093
  call void @emit_output_reload_insns(%struct.insn_chain* %87, %struct.reload* %add.ptr, i32 %89), !dbg !16094
  br label %return, !dbg !16095

return:                                           ; preds = %cond.end, %if.then115, %if.then102, %if.then79, %if.then67
  ret void, !dbg !16095
}

declare dso_local %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @reload_reg_reaches_end_p(i32 %regno, i32 %opnum, i32 %type) #0 !dbg !16096 {
entry:
  %retval = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !16097, metadata !DIExpression()), !dbg !16098
  store i32 %opnum, i32* %opnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opnum.addr, metadata !16099, metadata !DIExpression()), !dbg !16100
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !16101, metadata !DIExpression()), !dbg !16102
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16103, metadata !DIExpression()), !dbg !16104
  %0 = load i32, i32* %type.addr, align 4, !dbg !16105
  switch i32 %0, label %sw.default [
    i32 9, label %sw.bb
    i32 10, label %sw.bb1
    i32 3, label %sw.bb55
    i32 4, label %sw.bb55
    i32 0, label %sw.bb144
    i32 7, label %sw.bb174
    i32 8, label %sw.bb210
    i32 2, label %sw.bb261
    i32 1, label %sw.bb262
    i32 5, label %sw.bb262
    i32 6, label %sw.bb262
  ], !dbg !16106

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !16107
  br label %return, !dbg !16107

sw.bb1:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !16109
  br label %for.cond, !dbg !16111

for.cond:                                         ; preds = %for.inc, %sw.bb1
  %1 = load i32, i32* %i, align 4, !dbg !16112
  %2 = load i32, i32* @reload_n_operands, align 4, !dbg !16114
  %cmp = icmp slt i32 %1, %2, !dbg !16115
  br i1 %cmp, label %for.body, label %for.end, !dbg !16116

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !16117
  %idxprom = sext i32 %3 to i64, !dbg !16117
  %arrayidx = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i64 0, i64 %idxprom, !dbg !16117
  %4 = load i64, i64* %arrayidx, align 8, !dbg !16117
  %5 = load i32, i32* %regno.addr, align 4, !dbg !16117
  %sh_prom = zext i32 %5 to i64, !dbg !16117
  %shl = shl i64 1, %sh_prom, !dbg !16117
  %and = and i64 %4, %shl, !dbg !16117
  %tobool = icmp ne i64 %and, 0, !dbg !16117
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !16119

lor.lhs.false:                                    ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !16120
  %idxprom2 = sext i32 %6 to i64, !dbg !16120
  %arrayidx3 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i64 0, i64 %idxprom2, !dbg !16120
  %7 = load i64, i64* %arrayidx3, align 8, !dbg !16120
  %8 = load i32, i32* %regno.addr, align 4, !dbg !16120
  %sh_prom4 = zext i32 %8 to i64, !dbg !16120
  %shl5 = shl i64 1, %sh_prom4, !dbg !16120
  %and6 = and i64 %7, %shl5, !dbg !16120
  %tobool7 = icmp ne i64 %and6, 0, !dbg !16120
  br i1 %tobool7, label %if.then, label %lor.lhs.false8, !dbg !16121

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %i, align 4, !dbg !16122
  %idxprom9 = sext i32 %9 to i64, !dbg !16122
  %arrayidx10 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i64 0, i64 %idxprom9, !dbg !16122
  %10 = load i64, i64* %arrayidx10, align 8, !dbg !16122
  %11 = load i32, i32* %regno.addr, align 4, !dbg !16122
  %sh_prom11 = zext i32 %11 to i64, !dbg !16122
  %shl12 = shl i64 1, %sh_prom11, !dbg !16122
  %and13 = and i64 %10, %shl12, !dbg !16122
  %tobool14 = icmp ne i64 %and13, 0, !dbg !16122
  br i1 %tobool14, label %if.then, label %lor.lhs.false15, !dbg !16123

lor.lhs.false15:                                  ; preds = %lor.lhs.false8
  %12 = load i32, i32* %i, align 4, !dbg !16124
  %idxprom16 = sext i32 %12 to i64, !dbg !16124
  %arrayidx17 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i64 0, i64 %idxprom16, !dbg !16124
  %13 = load i64, i64* %arrayidx17, align 8, !dbg !16124
  %14 = load i32, i32* %regno.addr, align 4, !dbg !16124
  %sh_prom18 = zext i32 %14 to i64, !dbg !16124
  %shl19 = shl i64 1, %sh_prom18, !dbg !16124
  %and20 = and i64 %13, %shl19, !dbg !16124
  %tobool21 = icmp ne i64 %and20, 0, !dbg !16124
  br i1 %tobool21, label %if.then, label %lor.lhs.false22, !dbg !16125

lor.lhs.false22:                                  ; preds = %lor.lhs.false15
  %15 = load i32, i32* %i, align 4, !dbg !16126
  %idxprom23 = sext i32 %15 to i64, !dbg !16126
  %arrayidx24 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i64 0, i64 %idxprom23, !dbg !16126
  %16 = load i64, i64* %arrayidx24, align 8, !dbg !16126
  %17 = load i32, i32* %regno.addr, align 4, !dbg !16126
  %sh_prom25 = zext i32 %17 to i64, !dbg !16126
  %shl26 = shl i64 1, %sh_prom25, !dbg !16126
  %and27 = and i64 %16, %shl26, !dbg !16126
  %tobool28 = icmp ne i64 %and27, 0, !dbg !16126
  br i1 %tobool28, label %if.then, label %lor.lhs.false29, !dbg !16127

lor.lhs.false29:                                  ; preds = %lor.lhs.false22
  %18 = load i32, i32* %i, align 4, !dbg !16128
  %idxprom30 = sext i32 %18 to i64, !dbg !16128
  %arrayidx31 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom30, !dbg !16128
  %19 = load i64, i64* %arrayidx31, align 8, !dbg !16128
  %20 = load i32, i32* %regno.addr, align 4, !dbg !16128
  %sh_prom32 = zext i32 %20 to i64, !dbg !16128
  %shl33 = shl i64 1, %sh_prom32, !dbg !16128
  %and34 = and i64 %19, %shl33, !dbg !16128
  %tobool35 = icmp ne i64 %and34, 0, !dbg !16128
  br i1 %tobool35, label %if.then, label %if.end, !dbg !16129

if.then:                                          ; preds = %lor.lhs.false29, %lor.lhs.false22, %lor.lhs.false15, %lor.lhs.false8, %lor.lhs.false, %for.body
  store i32 0, i32* %retval, align 4, !dbg !16130
  br label %return, !dbg !16130

if.end:                                           ; preds = %lor.lhs.false29
  br label %for.inc, !dbg !16128

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %i, align 4, !dbg !16131
  %inc = add nsw i32 %21, 1, !dbg !16131
  store i32 %inc, i32* %i, align 4, !dbg !16131
  br label %for.cond, !dbg !16132, !llvm.loop !16133

for.end:                                          ; preds = %for.cond
  %22 = load i64, i64* @reload_reg_used_in_op_addr, align 8, !dbg !16135
  %23 = load i32, i32* %regno.addr, align 4, !dbg !16135
  %sh_prom36 = zext i32 %23 to i64, !dbg !16135
  %shl37 = shl i64 1, %sh_prom36, !dbg !16135
  %and38 = and i64 %22, %shl37, !dbg !16135
  %tobool39 = icmp ne i64 %and38, 0, !dbg !16135
  br i1 %tobool39, label %land.end, label %land.lhs.true, !dbg !16136

land.lhs.true:                                    ; preds = %for.end
  %24 = load i64, i64* @reload_reg_used_in_op_addr_reload, align 8, !dbg !16137
  %25 = load i32, i32* %regno.addr, align 4, !dbg !16137
  %sh_prom40 = zext i32 %25 to i64, !dbg !16137
  %shl41 = shl i64 1, %sh_prom40, !dbg !16137
  %and42 = and i64 %24, %shl41, !dbg !16137
  %tobool43 = icmp ne i64 %and42, 0, !dbg !16137
  br i1 %tobool43, label %land.end, label %land.lhs.true44, !dbg !16138

land.lhs.true44:                                  ; preds = %land.lhs.true
  %26 = load i64, i64* @reload_reg_used_in_insn, align 8, !dbg !16139
  %27 = load i32, i32* %regno.addr, align 4, !dbg !16139
  %sh_prom45 = zext i32 %27 to i64, !dbg !16139
  %shl46 = shl i64 1, %sh_prom45, !dbg !16139
  %and47 = and i64 %26, %shl46, !dbg !16139
  %tobool48 = icmp ne i64 %and47, 0, !dbg !16139
  br i1 %tobool48, label %land.end, label %land.rhs, !dbg !16140

land.rhs:                                         ; preds = %land.lhs.true44
  %28 = load i64, i64* @reload_reg_used, align 8, !dbg !16141
  %29 = load i32, i32* %regno.addr, align 4, !dbg !16141
  %sh_prom49 = zext i32 %29 to i64, !dbg !16141
  %shl50 = shl i64 1, %sh_prom49, !dbg !16141
  %and51 = and i64 %28, %shl50, !dbg !16141
  %tobool52 = icmp ne i64 %and51, 0, !dbg !16141
  %lnot = xor i1 %tobool52, true, !dbg !16141
  %lnot53 = xor i1 %lnot, true, !dbg !16141
  %lnot54 = xor i1 %lnot53, true, !dbg !16142
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true44, %land.lhs.true, %for.end
  %30 = phi i1 [ false, %land.lhs.true44 ], [ false, %land.lhs.true ], [ false, %for.end ], [ %lnot54, %land.rhs ], !dbg !16143
  %land.ext = zext i1 %30 to i32, !dbg !16140
  store i32 %land.ext, i32* %retval, align 4, !dbg !16144
  br label %return, !dbg !16144

sw.bb55:                                          ; preds = %entry, %entry
  %31 = load i32, i32* %opnum.addr, align 4, !dbg !16145
  store i32 %31, i32* %i, align 4, !dbg !16147
  br label %for.cond56, !dbg !16148

for.cond56:                                       ; preds = %for.inc67, %sw.bb55
  %32 = load i32, i32* %i, align 4, !dbg !16149
  %33 = load i32, i32* @reload_n_operands, align 4, !dbg !16151
  %cmp57 = icmp slt i32 %32, %33, !dbg !16152
  br i1 %cmp57, label %for.body58, label %for.end69, !dbg !16153

for.body58:                                       ; preds = %for.cond56
  %34 = load i32, i32* %i, align 4, !dbg !16154
  %idxprom59 = sext i32 %34 to i64, !dbg !16154
  %arrayidx60 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom59, !dbg !16154
  %35 = load i64, i64* %arrayidx60, align 8, !dbg !16154
  %36 = load i32, i32* %regno.addr, align 4, !dbg !16154
  %sh_prom61 = zext i32 %36 to i64, !dbg !16154
  %shl62 = shl i64 1, %sh_prom61, !dbg !16154
  %and63 = and i64 %35, %shl62, !dbg !16154
  %tobool64 = icmp ne i64 %and63, 0, !dbg !16154
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !16156

if.then65:                                        ; preds = %for.body58
  store i32 0, i32* %retval, align 4, !dbg !16157
  br label %return, !dbg !16157

if.end66:                                         ; preds = %for.body58
  br label %for.inc67, !dbg !16154

for.inc67:                                        ; preds = %if.end66
  %37 = load i32, i32* %i, align 4, !dbg !16158
  %inc68 = add nsw i32 %37, 1, !dbg !16158
  store i32 %inc68, i32* %i, align 4, !dbg !16158
  br label %for.cond56, !dbg !16159, !llvm.loop !16160

for.end69:                                        ; preds = %for.cond56
  %38 = load i32, i32* %opnum.addr, align 4, !dbg !16162
  %add = add nsw i32 %38, 1, !dbg !16164
  store i32 %add, i32* %i, align 4, !dbg !16165
  br label %for.cond70, !dbg !16166

for.cond70:                                       ; preds = %for.inc88, %for.end69
  %39 = load i32, i32* %i, align 4, !dbg !16167
  %40 = load i32, i32* @reload_n_operands, align 4, !dbg !16169
  %cmp71 = icmp slt i32 %39, %40, !dbg !16170
  br i1 %cmp71, label %for.body72, label %for.end90, !dbg !16171

for.body72:                                       ; preds = %for.cond70
  %41 = load i32, i32* %i, align 4, !dbg !16172
  %idxprom73 = sext i32 %41 to i64, !dbg !16172
  %arrayidx74 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i64 0, i64 %idxprom73, !dbg !16172
  %42 = load i64, i64* %arrayidx74, align 8, !dbg !16172
  %43 = load i32, i32* %regno.addr, align 4, !dbg !16172
  %sh_prom75 = zext i32 %43 to i64, !dbg !16172
  %shl76 = shl i64 1, %sh_prom75, !dbg !16172
  %and77 = and i64 %42, %shl76, !dbg !16172
  %tobool78 = icmp ne i64 %and77, 0, !dbg !16172
  br i1 %tobool78, label %if.then86, label %lor.lhs.false79, !dbg !16174

lor.lhs.false79:                                  ; preds = %for.body72
  %44 = load i32, i32* %i, align 4, !dbg !16175
  %idxprom80 = sext i32 %44 to i64, !dbg !16175
  %arrayidx81 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i64 0, i64 %idxprom80, !dbg !16175
  %45 = load i64, i64* %arrayidx81, align 8, !dbg !16175
  %46 = load i32, i32* %regno.addr, align 4, !dbg !16175
  %sh_prom82 = zext i32 %46 to i64, !dbg !16175
  %shl83 = shl i64 1, %sh_prom82, !dbg !16175
  %and84 = and i64 %45, %shl83, !dbg !16175
  %tobool85 = icmp ne i64 %and84, 0, !dbg !16175
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !16176

if.then86:                                        ; preds = %lor.lhs.false79, %for.body72
  store i32 0, i32* %retval, align 4, !dbg !16177
  br label %return, !dbg !16177

if.end87:                                         ; preds = %lor.lhs.false79
  br label %for.inc88, !dbg !16175

for.inc88:                                        ; preds = %if.end87
  %47 = load i32, i32* %i, align 4, !dbg !16178
  %inc89 = add nsw i32 %47, 1, !dbg !16178
  store i32 %inc89, i32* %i, align 4, !dbg !16178
  br label %for.cond70, !dbg !16179, !llvm.loop !16180

for.end90:                                        ; preds = %for.cond70
  store i32 0, i32* %i, align 4, !dbg !16182
  br label %for.cond91, !dbg !16184

for.cond91:                                       ; preds = %for.inc116, %for.end90
  %48 = load i32, i32* %i, align 4, !dbg !16185
  %49 = load i32, i32* @reload_n_operands, align 4, !dbg !16187
  %cmp92 = icmp slt i32 %48, %49, !dbg !16188
  br i1 %cmp92, label %for.body93, label %for.end118, !dbg !16189

for.body93:                                       ; preds = %for.cond91
  %50 = load i32, i32* %i, align 4, !dbg !16190
  %idxprom94 = sext i32 %50 to i64, !dbg !16190
  %arrayidx95 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i64 0, i64 %idxprom94, !dbg !16190
  %51 = load i64, i64* %arrayidx95, align 8, !dbg !16190
  %52 = load i32, i32* %regno.addr, align 4, !dbg !16190
  %sh_prom96 = zext i32 %52 to i64, !dbg !16190
  %shl97 = shl i64 1, %sh_prom96, !dbg !16190
  %and98 = and i64 %51, %shl97, !dbg !16190
  %tobool99 = icmp ne i64 %and98, 0, !dbg !16190
  br i1 %tobool99, label %if.then114, label %lor.lhs.false100, !dbg !16192

lor.lhs.false100:                                 ; preds = %for.body93
  %53 = load i32, i32* %i, align 4, !dbg !16193
  %idxprom101 = sext i32 %53 to i64, !dbg !16193
  %arrayidx102 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i64 0, i64 %idxprom101, !dbg !16193
  %54 = load i64, i64* %arrayidx102, align 8, !dbg !16193
  %55 = load i32, i32* %regno.addr, align 4, !dbg !16193
  %sh_prom103 = zext i32 %55 to i64, !dbg !16193
  %shl104 = shl i64 1, %sh_prom103, !dbg !16193
  %and105 = and i64 %54, %shl104, !dbg !16193
  %tobool106 = icmp ne i64 %and105, 0, !dbg !16193
  br i1 %tobool106, label %if.then114, label %lor.lhs.false107, !dbg !16194

lor.lhs.false107:                                 ; preds = %lor.lhs.false100
  %56 = load i32, i32* %i, align 4, !dbg !16195
  %idxprom108 = sext i32 %56 to i64, !dbg !16195
  %arrayidx109 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i64 0, i64 %idxprom108, !dbg !16195
  %57 = load i64, i64* %arrayidx109, align 8, !dbg !16195
  %58 = load i32, i32* %regno.addr, align 4, !dbg !16195
  %sh_prom110 = zext i32 %58 to i64, !dbg !16195
  %shl111 = shl i64 1, %sh_prom110, !dbg !16195
  %and112 = and i64 %57, %shl111, !dbg !16195
  %tobool113 = icmp ne i64 %and112, 0, !dbg !16195
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !16196

if.then114:                                       ; preds = %lor.lhs.false107, %lor.lhs.false100, %for.body93
  store i32 0, i32* %retval, align 4, !dbg !16197
  br label %return, !dbg !16197

if.end115:                                        ; preds = %lor.lhs.false107
  br label %for.inc116, !dbg !16195

for.inc116:                                       ; preds = %if.end115
  %59 = load i32, i32* %i, align 4, !dbg !16198
  %inc117 = add nsw i32 %59, 1, !dbg !16198
  store i32 %inc117, i32* %i, align 4, !dbg !16198
  br label %for.cond91, !dbg !16199, !llvm.loop !16200

for.end118:                                       ; preds = %for.cond91
  %60 = load i64, i64* @reload_reg_used_in_op_addr_reload, align 8, !dbg !16202
  %61 = load i32, i32* %regno.addr, align 4, !dbg !16202
  %sh_prom119 = zext i32 %61 to i64, !dbg !16202
  %shl120 = shl i64 1, %sh_prom119, !dbg !16202
  %and121 = and i64 %60, %shl120, !dbg !16202
  %tobool122 = icmp ne i64 %and121, 0, !dbg !16202
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !16204

if.then123:                                       ; preds = %for.end118
  store i32 0, i32* %retval, align 4, !dbg !16205
  br label %return, !dbg !16205

if.end124:                                        ; preds = %for.end118
  %62 = load i64, i64* @reload_reg_used_in_op_addr, align 8, !dbg !16206
  %63 = load i32, i32* %regno.addr, align 4, !dbg !16206
  %sh_prom125 = zext i32 %63 to i64, !dbg !16206
  %shl126 = shl i64 1, %sh_prom125, !dbg !16206
  %and127 = and i64 %62, %shl126, !dbg !16206
  %tobool128 = icmp ne i64 %and127, 0, !dbg !16206
  br i1 %tobool128, label %land.end142, label %land.lhs.true129, !dbg !16207

land.lhs.true129:                                 ; preds = %if.end124
  %64 = load i64, i64* @reload_reg_used_in_insn, align 8, !dbg !16208
  %65 = load i32, i32* %regno.addr, align 4, !dbg !16208
  %sh_prom130 = zext i32 %65 to i64, !dbg !16208
  %shl131 = shl i64 1, %sh_prom130, !dbg !16208
  %and132 = and i64 %64, %shl131, !dbg !16208
  %tobool133 = icmp ne i64 %and132, 0, !dbg !16208
  br i1 %tobool133, label %land.end142, label %land.rhs134, !dbg !16209

land.rhs134:                                      ; preds = %land.lhs.true129
  %66 = load i64, i64* @reload_reg_used, align 8, !dbg !16210
  %67 = load i32, i32* %regno.addr, align 4, !dbg !16210
  %sh_prom135 = zext i32 %67 to i64, !dbg !16210
  %shl136 = shl i64 1, %sh_prom135, !dbg !16210
  %and137 = and i64 %66, %shl136, !dbg !16210
  %tobool138 = icmp ne i64 %and137, 0, !dbg !16210
  %lnot139 = xor i1 %tobool138, true, !dbg !16210
  %lnot140 = xor i1 %lnot139, true, !dbg !16210
  %lnot141 = xor i1 %lnot140, true, !dbg !16211
  br label %land.end142

land.end142:                                      ; preds = %land.rhs134, %land.lhs.true129, %if.end124
  %68 = phi i1 [ false, %land.lhs.true129 ], [ false, %if.end124 ], [ %lnot141, %land.rhs134 ], !dbg !16143
  %land.ext143 = zext i1 %68 to i32, !dbg !16209
  store i32 %land.ext143, i32* %retval, align 4, !dbg !16212
  br label %return, !dbg !16212

sw.bb144:                                         ; preds = %entry
  %69 = load i32, i32* %opnum.addr, align 4, !dbg !16213
  %add145 = add nsw i32 %69, 1, !dbg !16215
  store i32 %add145, i32* %i, align 4, !dbg !16216
  br label %for.cond146, !dbg !16217

for.cond146:                                      ; preds = %for.inc171, %sw.bb144
  %70 = load i32, i32* %i, align 4, !dbg !16218
  %71 = load i32, i32* @reload_n_operands, align 4, !dbg !16220
  %cmp147 = icmp slt i32 %70, %71, !dbg !16221
  br i1 %cmp147, label %for.body148, label %for.end173, !dbg !16222

for.body148:                                      ; preds = %for.cond146
  %72 = load i32, i32* %i, align 4, !dbg !16223
  %idxprom149 = sext i32 %72 to i64, !dbg !16223
  %arrayidx150 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input_addr, i64 0, i64 %idxprom149, !dbg !16223
  %73 = load i64, i64* %arrayidx150, align 8, !dbg !16223
  %74 = load i32, i32* %regno.addr, align 4, !dbg !16223
  %sh_prom151 = zext i32 %74 to i64, !dbg !16223
  %shl152 = shl i64 1, %sh_prom151, !dbg !16223
  %and153 = and i64 %73, %shl152, !dbg !16223
  %tobool154 = icmp ne i64 %and153, 0, !dbg !16223
  br i1 %tobool154, label %if.then169, label %lor.lhs.false155, !dbg !16225

lor.lhs.false155:                                 ; preds = %for.body148
  %75 = load i32, i32* %i, align 4, !dbg !16226
  %idxprom156 = sext i32 %75 to i64, !dbg !16226
  %arrayidx157 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_inpaddr_addr, i64 0, i64 %idxprom156, !dbg !16226
  %76 = load i64, i64* %arrayidx157, align 8, !dbg !16226
  %77 = load i32, i32* %regno.addr, align 4, !dbg !16226
  %sh_prom158 = zext i32 %77 to i64, !dbg !16226
  %shl159 = shl i64 1, %sh_prom158, !dbg !16226
  %and160 = and i64 %76, %shl159, !dbg !16226
  %tobool161 = icmp ne i64 %and160, 0, !dbg !16226
  br i1 %tobool161, label %if.then169, label %lor.lhs.false162, !dbg !16227

lor.lhs.false162:                                 ; preds = %lor.lhs.false155
  %78 = load i32, i32* %i, align 4, !dbg !16228
  %idxprom163 = sext i32 %78 to i64, !dbg !16228
  %arrayidx164 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_input, i64 0, i64 %idxprom163, !dbg !16228
  %79 = load i64, i64* %arrayidx164, align 8, !dbg !16228
  %80 = load i32, i32* %regno.addr, align 4, !dbg !16228
  %sh_prom165 = zext i32 %80 to i64, !dbg !16228
  %shl166 = shl i64 1, %sh_prom165, !dbg !16228
  %and167 = and i64 %79, %shl166, !dbg !16228
  %tobool168 = icmp ne i64 %and167, 0, !dbg !16228
  br i1 %tobool168, label %if.then169, label %if.end170, !dbg !16229

if.then169:                                       ; preds = %lor.lhs.false162, %lor.lhs.false155, %for.body148
  store i32 0, i32* %retval, align 4, !dbg !16230
  br label %return, !dbg !16230

if.end170:                                        ; preds = %lor.lhs.false162
  br label %for.inc171, !dbg !16228

for.inc171:                                       ; preds = %if.end170
  %81 = load i32, i32* %i, align 4, !dbg !16231
  %inc172 = add nsw i32 %81, 1, !dbg !16231
  store i32 %inc172, i32* %i, align 4, !dbg !16231
  br label %for.cond146, !dbg !16232, !llvm.loop !16233

for.end173:                                       ; preds = %for.cond146
  br label %sw.bb174, !dbg !16234

sw.bb174:                                         ; preds = %entry, %for.end173
  store i32 0, i32* %i, align 4, !dbg !16235
  br label %for.cond175, !dbg !16237

for.cond175:                                      ; preds = %for.inc200, %sw.bb174
  %82 = load i32, i32* %i, align 4, !dbg !16238
  %83 = load i32, i32* @reload_n_operands, align 4, !dbg !16240
  %cmp176 = icmp slt i32 %82, %83, !dbg !16241
  br i1 %cmp176, label %for.body177, label %for.end202, !dbg !16242

for.body177:                                      ; preds = %for.cond175
  %84 = load i32, i32* %i, align 4, !dbg !16243
  %idxprom178 = sext i32 %84 to i64, !dbg !16243
  %arrayidx179 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i64 0, i64 %idxprom178, !dbg !16243
  %85 = load i64, i64* %arrayidx179, align 8, !dbg !16243
  %86 = load i32, i32* %regno.addr, align 4, !dbg !16243
  %sh_prom180 = zext i32 %86 to i64, !dbg !16243
  %shl181 = shl i64 1, %sh_prom180, !dbg !16243
  %and182 = and i64 %85, %shl181, !dbg !16243
  %tobool183 = icmp ne i64 %and182, 0, !dbg !16243
  br i1 %tobool183, label %if.then198, label %lor.lhs.false184, !dbg !16245

lor.lhs.false184:                                 ; preds = %for.body177
  %87 = load i32, i32* %i, align 4, !dbg !16246
  %idxprom185 = sext i32 %87 to i64, !dbg !16246
  %arrayidx186 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i64 0, i64 %idxprom185, !dbg !16246
  %88 = load i64, i64* %arrayidx186, align 8, !dbg !16246
  %89 = load i32, i32* %regno.addr, align 4, !dbg !16246
  %sh_prom187 = zext i32 %89 to i64, !dbg !16246
  %shl188 = shl i64 1, %sh_prom187, !dbg !16246
  %and189 = and i64 %88, %shl188, !dbg !16246
  %tobool190 = icmp ne i64 %and189, 0, !dbg !16246
  br i1 %tobool190, label %if.then198, label %lor.lhs.false191, !dbg !16247

lor.lhs.false191:                                 ; preds = %lor.lhs.false184
  %90 = load i32, i32* %i, align 4, !dbg !16248
  %idxprom192 = sext i32 %90 to i64, !dbg !16248
  %arrayidx193 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i64 0, i64 %idxprom192, !dbg !16248
  %91 = load i64, i64* %arrayidx193, align 8, !dbg !16248
  %92 = load i32, i32* %regno.addr, align 4, !dbg !16248
  %sh_prom194 = zext i32 %92 to i64, !dbg !16248
  %shl195 = shl i64 1, %sh_prom194, !dbg !16248
  %and196 = and i64 %91, %shl195, !dbg !16248
  %tobool197 = icmp ne i64 %and196, 0, !dbg !16248
  br i1 %tobool197, label %if.then198, label %if.end199, !dbg !16249

if.then198:                                       ; preds = %lor.lhs.false191, %lor.lhs.false184, %for.body177
  store i32 0, i32* %retval, align 4, !dbg !16250
  br label %return, !dbg !16250

if.end199:                                        ; preds = %lor.lhs.false191
  br label %for.inc200, !dbg !16248

for.inc200:                                       ; preds = %if.end199
  %93 = load i32, i32* %i, align 4, !dbg !16251
  %inc201 = add nsw i32 %93, 1, !dbg !16251
  store i32 %inc201, i32* %i, align 4, !dbg !16251
  br label %for.cond175, !dbg !16252, !llvm.loop !16253

for.end202:                                       ; preds = %for.cond175
  %94 = load i64, i64* @reload_reg_used, align 8, !dbg !16255
  %95 = load i32, i32* %regno.addr, align 4, !dbg !16255
  %sh_prom203 = zext i32 %95 to i64, !dbg !16255
  %shl204 = shl i64 1, %sh_prom203, !dbg !16255
  %and205 = and i64 %94, %shl204, !dbg !16255
  %tobool206 = icmp ne i64 %and205, 0, !dbg !16255
  %lnot207 = xor i1 %tobool206, true, !dbg !16255
  %lnot208 = xor i1 %lnot207, true, !dbg !16255
  %lnot209 = xor i1 %lnot208, true, !dbg !16256
  %lnot.ext = zext i1 %lnot209 to i32, !dbg !16256
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !16257
  br label %return, !dbg !16257

sw.bb210:                                         ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !16258
  br label %for.cond211, !dbg !16260

for.cond211:                                      ; preds = %for.inc236, %sw.bb210
  %96 = load i32, i32* %i, align 4, !dbg !16261
  %97 = load i32, i32* @reload_n_operands, align 4, !dbg !16263
  %cmp212 = icmp slt i32 %96, %97, !dbg !16264
  br i1 %cmp212, label %for.body213, label %for.end238, !dbg !16265

for.body213:                                      ; preds = %for.cond211
  %98 = load i32, i32* %i, align 4, !dbg !16266
  %idxprom214 = sext i32 %98 to i64, !dbg !16266
  %arrayidx215 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i64 0, i64 %idxprom214, !dbg !16266
  %99 = load i64, i64* %arrayidx215, align 8, !dbg !16266
  %100 = load i32, i32* %regno.addr, align 4, !dbg !16266
  %sh_prom216 = zext i32 %100 to i64, !dbg !16266
  %shl217 = shl i64 1, %sh_prom216, !dbg !16266
  %and218 = and i64 %99, %shl217, !dbg !16266
  %tobool219 = icmp ne i64 %and218, 0, !dbg !16266
  br i1 %tobool219, label %if.then234, label %lor.lhs.false220, !dbg !16268

lor.lhs.false220:                                 ; preds = %for.body213
  %101 = load i32, i32* %i, align 4, !dbg !16269
  %idxprom221 = sext i32 %101 to i64, !dbg !16269
  %arrayidx222 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i64 0, i64 %idxprom221, !dbg !16269
  %102 = load i64, i64* %arrayidx222, align 8, !dbg !16269
  %103 = load i32, i32* %regno.addr, align 4, !dbg !16269
  %sh_prom223 = zext i32 %103 to i64, !dbg !16269
  %shl224 = shl i64 1, %sh_prom223, !dbg !16269
  %and225 = and i64 %102, %shl224, !dbg !16269
  %tobool226 = icmp ne i64 %and225, 0, !dbg !16269
  br i1 %tobool226, label %if.then234, label %lor.lhs.false227, !dbg !16270

lor.lhs.false227:                                 ; preds = %lor.lhs.false220
  %104 = load i32, i32* %i, align 4, !dbg !16271
  %idxprom228 = sext i32 %104 to i64, !dbg !16271
  %arrayidx229 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output, i64 0, i64 %idxprom228, !dbg !16271
  %105 = load i64, i64* %arrayidx229, align 8, !dbg !16271
  %106 = load i32, i32* %regno.addr, align 4, !dbg !16271
  %sh_prom230 = zext i32 %106 to i64, !dbg !16271
  %shl231 = shl i64 1, %sh_prom230, !dbg !16271
  %and232 = and i64 %105, %shl231, !dbg !16271
  %tobool233 = icmp ne i64 %and232, 0, !dbg !16271
  br i1 %tobool233, label %if.then234, label %if.end235, !dbg !16272

if.then234:                                       ; preds = %lor.lhs.false227, %lor.lhs.false220, %for.body213
  store i32 0, i32* %retval, align 4, !dbg !16273
  br label %return, !dbg !16273

if.end235:                                        ; preds = %lor.lhs.false227
  br label %for.inc236, !dbg !16271

for.inc236:                                       ; preds = %if.end235
  %107 = load i32, i32* %i, align 4, !dbg !16274
  %inc237 = add nsw i32 %107, 1, !dbg !16274
  store i32 %inc237, i32* %i, align 4, !dbg !16274
  br label %for.cond211, !dbg !16275, !llvm.loop !16276

for.end238:                                       ; preds = %for.cond211
  %108 = load i64, i64* @reload_reg_used_in_op_addr, align 8, !dbg !16278
  %109 = load i32, i32* %regno.addr, align 4, !dbg !16278
  %sh_prom239 = zext i32 %109 to i64, !dbg !16278
  %shl240 = shl i64 1, %sh_prom239, !dbg !16278
  %and241 = and i64 %108, %shl240, !dbg !16278
  %tobool242 = icmp ne i64 %and241, 0, !dbg !16278
  br i1 %tobool242, label %land.end259, label %land.lhs.true243, !dbg !16279

land.lhs.true243:                                 ; preds = %for.end238
  %110 = load i64, i64* @reload_reg_used_in_insn, align 8, !dbg !16280
  %111 = load i32, i32* %regno.addr, align 4, !dbg !16280
  %sh_prom244 = zext i32 %111 to i64, !dbg !16280
  %shl245 = shl i64 1, %sh_prom244, !dbg !16280
  %and246 = and i64 %110, %shl245, !dbg !16280
  %tobool247 = icmp ne i64 %and246, 0, !dbg !16280
  br i1 %tobool247, label %land.end259, label %land.rhs248, !dbg !16281

land.rhs248:                                      ; preds = %land.lhs.true243
  %112 = load i64, i64* @reload_reg_used, align 8, !dbg !16282
  %113 = load i32, i32* %regno.addr, align 4, !dbg !16282
  %sh_prom249 = zext i32 %113 to i64, !dbg !16282
  %shl250 = shl i64 1, %sh_prom249, !dbg !16282
  %and251 = and i64 %112, %shl250, !dbg !16282
  %tobool252 = icmp ne i64 %and251, 0, !dbg !16282
  %lnot253 = xor i1 %tobool252, true, !dbg !16282
  %lnot255 = xor i1 %lnot253, true, !dbg !16282
  %lnot257 = xor i1 %lnot255, true, !dbg !16283
  br label %land.end259

land.end259:                                      ; preds = %land.rhs248, %land.lhs.true243, %for.end238
  %114 = phi i1 [ false, %land.lhs.true243 ], [ false, %for.end238 ], [ %lnot257, %land.rhs248 ], !dbg !16143
  %land.ext260 = zext i1 %114 to i32, !dbg !16281
  store i32 %land.ext260, i32* %retval, align 4, !dbg !16284
  br label %return, !dbg !16284

sw.bb261:                                         ; preds = %entry
  %115 = load i32, i32* @reload_n_operands, align 4, !dbg !16285
  store i32 %115, i32* %opnum.addr, align 4, !dbg !16286
  br label %sw.bb262, !dbg !16287

sw.bb262:                                         ; preds = %entry, %entry, %entry, %sw.bb261
  store i32 0, i32* %i, align 4, !dbg !16288
  br label %for.cond263, !dbg !16290

for.cond263:                                      ; preds = %for.inc281, %sw.bb262
  %116 = load i32, i32* %i, align 4, !dbg !16291
  %117 = load i32, i32* %opnum.addr, align 4, !dbg !16293
  %cmp264 = icmp slt i32 %116, %117, !dbg !16294
  br i1 %cmp264, label %for.body265, label %for.end283, !dbg !16295

for.body265:                                      ; preds = %for.cond263
  %118 = load i32, i32* %i, align 4, !dbg !16296
  %idxprom266 = sext i32 %118 to i64, !dbg !16296
  %arrayidx267 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_output_addr, i64 0, i64 %idxprom266, !dbg !16296
  %119 = load i64, i64* %arrayidx267, align 8, !dbg !16296
  %120 = load i32, i32* %regno.addr, align 4, !dbg !16296
  %sh_prom268 = zext i32 %120 to i64, !dbg !16296
  %shl269 = shl i64 1, %sh_prom268, !dbg !16296
  %and270 = and i64 %119, %shl269, !dbg !16296
  %tobool271 = icmp ne i64 %and270, 0, !dbg !16296
  br i1 %tobool271, label %if.then279, label %lor.lhs.false272, !dbg !16298

lor.lhs.false272:                                 ; preds = %for.body265
  %121 = load i32, i32* %i, align 4, !dbg !16299
  %idxprom273 = sext i32 %121 to i64, !dbg !16299
  %arrayidx274 = getelementptr inbounds [30 x i64], [30 x i64]* @reload_reg_used_in_outaddr_addr, i64 0, i64 %idxprom273, !dbg !16299
  %122 = load i64, i64* %arrayidx274, align 8, !dbg !16299
  %123 = load i32, i32* %regno.addr, align 4, !dbg !16299
  %sh_prom275 = zext i32 %123 to i64, !dbg !16299
  %shl276 = shl i64 1, %sh_prom275, !dbg !16299
  %and277 = and i64 %122, %shl276, !dbg !16299
  %tobool278 = icmp ne i64 %and277, 0, !dbg !16299
  br i1 %tobool278, label %if.then279, label %if.end280, !dbg !16300

if.then279:                                       ; preds = %lor.lhs.false272, %for.body265
  store i32 0, i32* %retval, align 4, !dbg !16301
  br label %return, !dbg !16301

if.end280:                                        ; preds = %lor.lhs.false272
  br label %for.inc281, !dbg !16299

for.inc281:                                       ; preds = %if.end280
  %124 = load i32, i32* %i, align 4, !dbg !16302
  %inc282 = add nsw i32 %124, 1, !dbg !16302
  store i32 %inc282, i32* %i, align 4, !dbg !16302
  br label %for.cond263, !dbg !16303, !llvm.loop !16304

for.end283:                                       ; preds = %for.cond263
  store i32 1, i32* %retval, align 4, !dbg !16306
  br label %return, !dbg !16306

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 5110, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16307
  br label %sw.epilog, !dbg !16308

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %retval, align 4, !dbg !16309
  br label %return, !dbg !16309

return:                                           ; preds = %sw.epilog, %for.end283, %if.then279, %land.end259, %if.then234, %for.end202, %if.then198, %if.then169, %land.end142, %if.then123, %if.then114, %if.then86, %if.then65, %land.end, %if.then, %sw.bb
  %125 = load i32, i32* %retval, align 4, !dbg !16310
  ret i32 %125, !dbg !16310
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @reload_regs_reach_end_p(i32 %regno, i32 %nregs, i32 %opnum, i32 %type) #0 !dbg !16311 {
entry:
  %retval = alloca i8, align 1
  %regno.addr = alloca i32, align 4
  %nregs.addr = alloca i32, align 4
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !16314, metadata !DIExpression()), !dbg !16315
  store i32 %nregs, i32* %nregs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nregs.addr, metadata !16316, metadata !DIExpression()), !dbg !16317
  store i32 %opnum, i32* %opnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opnum.addr, metadata !16318, metadata !DIExpression()), !dbg !16319
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !16320, metadata !DIExpression()), !dbg !16321
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16322, metadata !DIExpression()), !dbg !16323
  store i32 0, i32* %i, align 4, !dbg !16324
  br label %for.cond, !dbg !16326

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !16327
  %1 = load i32, i32* %nregs.addr, align 4, !dbg !16329
  %cmp = icmp slt i32 %0, %1, !dbg !16330
  br i1 %cmp, label %for.body, label %for.end, !dbg !16331

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %regno.addr, align 4, !dbg !16332
  %3 = load i32, i32* %i, align 4, !dbg !16334
  %add = add i32 %2, %3, !dbg !16335
  %4 = load i32, i32* %opnum.addr, align 4, !dbg !16336
  %5 = load i32, i32* %type.addr, align 4, !dbg !16337
  %call = call i32 @reload_reg_reaches_end_p(i32 %add, i32 %4, i32 %5), !dbg !16338
  %tobool = icmp ne i32 %call, 0, !dbg !16338
  br i1 %tobool, label %if.end, label %if.then, !dbg !16339

if.then:                                          ; preds = %for.body
  store i8 0, i8* %retval, align 1, !dbg !16340
  br label %return, !dbg !16340

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !16341

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !16342
  %inc = add nsw i32 %6, 1, !dbg !16342
  store i32 %inc, i32* %i, align 4, !dbg !16342
  br label %for.cond, !dbg !16343, !llvm.loop !16344

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !16346
  br label %return, !dbg !16346

return:                                           ; preds = %for.end, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !16347
  ret i8 %7, !dbg !16347
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @inherit_piecemeal_p(i32 %dest, i32 %src, i32 %mode) #0 !dbg !16348 {
entry:
  %dest.addr = alloca i32, align 4
  %src.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !16351, metadata !DIExpression()), !dbg !16352
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !16353, metadata !DIExpression()), !dbg !16354
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !16355, metadata !DIExpression()), !dbg !16356
  %0 = load i32, i32* %mode.addr, align 4, !dbg !16357
  %1 = load i32, i32* %dest.addr, align 4, !dbg !16357
  %idxprom = sext i32 %1 to i64, !dbg !16357
  %arrayidx = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i64 0, i64 %idxprom, !dbg !16357
  %2 = load i32, i32* %arrayidx, align 4, !dbg !16357
  %3 = load i32, i32* %dest.addr, align 4, !dbg !16357
  %idxprom1 = sext i32 %3 to i64, !dbg !16357
  %arrayidx2 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom1, !dbg !16357
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !16357
  %call = call zeroext i8 @ix86_cannot_change_mode_class(i32 %0, i32 %2, i32 %4), !dbg !16357
  %tobool = icmp ne i8 %call, 0, !dbg !16357
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !16358

land.rhs:                                         ; preds = %entry
  %5 = load i32, i32* %mode.addr, align 4, !dbg !16359
  %6 = load i32, i32* %src.addr, align 4, !dbg !16359
  %idxprom3 = sext i32 %6 to i64, !dbg !16359
  %arrayidx4 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_raw_mode, i64 0, i64 %idxprom3, !dbg !16359
  %7 = load i32, i32* %arrayidx4, align 4, !dbg !16359
  %8 = load i32, i32* %src.addr, align 4, !dbg !16359
  %idxprom5 = sext i32 %8 to i64, !dbg !16359
  %arrayidx6 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom5, !dbg !16359
  %9 = load i32, i32* %arrayidx6, align 4, !dbg !16359
  %call7 = call zeroext i8 @ix86_cannot_change_mode_class(i32 %5, i32 %7, i32 %9), !dbg !16359
  %tobool8 = icmp ne i8 %call7, 0, !dbg !16360
  %lnot = xor i1 %tobool8, true, !dbg !16360
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %10 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !16361
  %land.ext = zext i1 %10 to i32, !dbg !16358
  %conv = trunc i32 %land.ext to i8, !dbg !16362
  ret i8 %conv, !dbg !16363
}

declare dso_local %struct.rtx_def* @reload_adjust_reg_for_mode(%struct.rtx_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @emit_input_reload_insns(%struct.insn_chain* %chain, %struct.reload* %rl, %struct.rtx_def* %old, i32 %j) #0 !dbg !16364 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %rl.addr = alloca %struct.reload*, align 8
  %old.addr = alloca %struct.rtx_def*, align 8
  %j.addr = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %reloadreg = alloca %struct.rtx_def*, align 8
  %oldequiv_reg = alloca %struct.rtx_def*, align 8
  %oldequiv = alloca %struct.rtx_def*, align 8
  %special = alloca i32, align 4
  %mode = alloca i32, align 4
  %where = alloca %struct.rtx_def**, align 8
  %temp = alloca %struct.rtx_def*, align 8
  %old232 = alloca %struct.rtx_def*, align 8
  %second_reload_reg = alloca %struct.rtx_def*, align 8
  %third_reload_reg = alloca %struct.rtx_def*, align 8
  %secondary_reload = alloca i32, align 4
  %real_oldequiv = alloca %struct.rtx_def*, align 8
  %real_old = alloca %struct.rtx_def*, align 8
  %tmp = alloca %struct.rtx_def*, align 8
  %icode = alloca i32, align 4
  %tertiary_icode = alloca i32, align 4
  %tertiary_reload = alloca i32, align 4
  %sri = alloca %struct.secondary_reload_info, align 8
  %sri2 = alloca %struct.secondary_reload_info, align 8
  %new_class = alloca i32, align 4
  %new_t_class = alloca i32, align 4
  %intermediate = alloca %struct.rtx_def*, align 8
  %intermediate576 = alloca %struct.rtx_def*, align 8
  %real_oldequiv642 = alloca %struct.rtx_def*, align 8
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain.addr, metadata !16367, metadata !DIExpression()), !dbg !16368
  store %struct.reload* %rl, %struct.reload** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.reload** %rl.addr, metadata !16369, metadata !DIExpression()), !dbg !16370
  store %struct.rtx_def* %old, %struct.rtx_def** %old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old.addr, metadata !16371, metadata !DIExpression()), !dbg !16372
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !16373, metadata !DIExpression()), !dbg !16374
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !16375, metadata !DIExpression()), !dbg !16376
  %0 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !16377
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %0, i32 0, i32 3, !dbg !16378
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !16378
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8, !dbg !16376
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reloadreg, metadata !16379, metadata !DIExpression()), !dbg !16380
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %oldequiv_reg, metadata !16381, metadata !DIExpression()), !dbg !16382
  store %struct.rtx_def* null, %struct.rtx_def** %oldequiv_reg, align 8, !dbg !16382
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %oldequiv, metadata !16383, metadata !DIExpression()), !dbg !16384
  store %struct.rtx_def* null, %struct.rtx_def** %oldequiv, align 8, !dbg !16384
  call void @llvm.dbg.declare(metadata i32* %special, metadata !16385, metadata !DIExpression()), !dbg !16386
  store i32 0, i32* %special, align 4, !dbg !16386
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !16387, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %where, metadata !16389, metadata !DIExpression()), !dbg !16390
  %2 = load i32, i32* %j.addr, align 4, !dbg !16391
  %idxprom = sext i32 %2 to i64, !dbg !16393
  %arrayidx = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom, !dbg !16393
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !16393
  %tobool = icmp ne %struct.rtx_def* %3, null, !dbg !16393
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !16394

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16395
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %4, i32 0, i32 8, !dbg !16395
  %5 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8, !dbg !16395
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !16395
  %bf.load = load i32, i32* %6, align 8, !dbg !16395
  %bf.clear = and i32 %bf.load, 65535, !dbg !16395
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !16395
  br i1 %cmp, label %if.then, label %if.end, !dbg !16396

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16397
  store %struct.rtx_def* %7, %struct.rtx_def** %oldequiv, align 8, !dbg !16399
  %8 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16400
  %in_reg2 = getelementptr inbounds %struct.reload, %struct.reload* %8, i32 0, i32 8, !dbg !16401
  %9 = load %struct.rtx_def*, %struct.rtx_def** %in_reg2, align 8, !dbg !16401
  store %struct.rtx_def* %9, %struct.rtx_def** %old.addr, align 8, !dbg !16402
  br label %if.end, !dbg !16403

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16404
  %cmp3 = icmp eq %struct.rtx_def* %10, null, !dbg !16406
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !16407

if.then4:                                         ; preds = %if.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16408
  store %struct.rtx_def* %11, %struct.rtx_def** %oldequiv, align 8, !dbg !16409
  br label %if.end17, !dbg !16410

if.else:                                          ; preds = %if.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16411
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !16411
  %bf.load5 = load i32, i32* %13, align 8, !dbg !16411
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !16411
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !16411
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !16413

if.then8:                                         ; preds = %if.else
  %14 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16414
  store %struct.rtx_def* %14, %struct.rtx_def** %oldequiv_reg, align 8, !dbg !16415
  br label %if.end16, !dbg !16416

if.else9:                                         ; preds = %if.else
  %15 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16417
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !16417
  %bf.load10 = load i32, i32* %16, align 8, !dbg !16417
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !16417
  %cmp12 = icmp eq i32 %bf.clear11, 39, !dbg !16419
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !16420

if.then13:                                        ; preds = %if.else9
  %17 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16421
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !16421
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !16421
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !16421
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !16421
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !16421
  store %struct.rtx_def* %18, %struct.rtx_def** %oldequiv_reg, align 8, !dbg !16422
  br label %if.end15, !dbg !16423

if.end15:                                         ; preds = %if.then13, %if.else9
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then4
  %19 = load i32, i32* %j.addr, align 4, !dbg !16424
  %idxprom18 = sext i32 %19 to i64, !dbg !16425
  %arrayidx19 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_reg_rtx_for_input, i64 0, i64 %idxprom18, !dbg !16425
  %20 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx19, align 8, !dbg !16425
  store %struct.rtx_def* %20, %struct.rtx_def** %reloadreg, align 8, !dbg !16426
  %21 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !16427
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !16427
  %bf.load20 = load i32, i32* %22, align 8, !dbg !16427
  %bf.lshr = lshr i32 %bf.load20, 16, !dbg !16427
  %bf.clear21 = and i32 %bf.lshr, 255, !dbg !16427
  store i32 %bf.clear21, i32* %mode, align 4, !dbg !16428
  %23 = load i32, i32* @optimize, align 4, !dbg !16429
  %tobool22 = icmp ne i32 %23, 0, !dbg !16429
  br i1 %tobool22, label %land.lhs.true23, label %if.end51, !dbg !16431

land.lhs.true23:                                  ; preds = %if.end17
  %24 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16432
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !16432
  %bf.load24 = load i32, i32* %25, align 8, !dbg !16432
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !16432
  %cmp26 = icmp eq i32 %bf.clear25, 37, !dbg !16432
  br i1 %cmp26, label %land.lhs.true27, label %if.end51, !dbg !16433

land.lhs.true27:                                  ; preds = %land.lhs.true23
  %26 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16434
  %call = call i32 @rhs_regno(%struct.rtx_def* %26), !dbg !16434
  %cmp28 = icmp ult i32 %call, 53, !dbg !16435
  br i1 %cmp28, label %land.lhs.true29, label %if.end51, !dbg !16436

land.lhs.true29:                                  ; preds = %land.lhs.true27
  %27 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16437
  %call30 = call i32 @rhs_regno(%struct.rtx_def* %27), !dbg !16437
  %idxprom31 = zext i32 %call30 to i64, !dbg !16438
  %arrayidx32 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom31, !dbg !16438
  %28 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx32, align 8, !dbg !16438
  %tobool33 = icmp ne %struct.rtx_def* %28, null, !dbg !16438
  br i1 %tobool33, label %land.lhs.true34, label %if.end51, !dbg !16439

land.lhs.true34:                                  ; preds = %land.lhs.true29
  %29 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16440
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !16440
  %bf.load35 = load i32, i32* %30, align 8, !dbg !16440
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !16440
  %cmp37 = icmp eq i32 %bf.clear36, 37, !dbg !16440
  br i1 %cmp37, label %land.lhs.true38, label %if.end51, !dbg !16441

land.lhs.true38:                                  ; preds = %land.lhs.true34
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !16442
  %32 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16443
  %call39 = call i32 @rhs_regno(%struct.rtx_def* %32), !dbg !16443
  %idxprom40 = zext i32 %call39 to i64, !dbg !16444
  %arrayidx41 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i64 0, i64 %idxprom40, !dbg !16444
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx41, align 8, !dbg !16444
  %call42 = call i32 @dead_or_set_p(%struct.rtx_def* %31, %struct.rtx_def* %33), !dbg !16445
  %tobool43 = icmp ne i32 %call42, 0, !dbg !16445
  br i1 %tobool43, label %if.then49, label %lor.lhs.false, !dbg !16446

lor.lhs.false:                                    ; preds = %land.lhs.true38
  %34 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16447
  %call44 = call i32 @rhs_regno(%struct.rtx_def* %34), !dbg !16447
  %idxprom45 = zext i32 %call44 to i64, !dbg !16448
  %arrayidx46 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i64 0, i64 %idxprom45, !dbg !16448
  %35 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx46, align 8, !dbg !16448
  %36 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16449
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %36, i32 0, i32 9, !dbg !16450
  %37 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8, !dbg !16450
  %call47 = call i32 @rtx_equal_p(%struct.rtx_def* %35, %struct.rtx_def* %37), !dbg !16451
  %tobool48 = icmp ne i32 %call47, 0, !dbg !16451
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !16452

if.then49:                                        ; preds = %lor.lhs.false, %land.lhs.true38
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !16453
  %39 = load i32, i32* %j.addr, align 4, !dbg !16454
  %40 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16455
  %call50 = call i32 @rhs_regno(%struct.rtx_def* %40), !dbg !16455
  %41 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !16456
  call void @delete_output_reload(%struct.rtx_def* %38, i32 %39, i32 %call50, %struct.rtx_def* %41), !dbg !16457
  br label %if.end51, !dbg !16457

if.end51:                                         ; preds = %if.then49, %lor.lhs.false, %land.lhs.true34, %land.lhs.true29, %land.lhs.true27, %land.lhs.true23, %if.end17
  br label %while.cond, !dbg !16458

while.cond:                                       ; preds = %while.body, %if.end51
  %42 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16459
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !16459
  %bf.load52 = load i32, i32* %43, align 8, !dbg !16459
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !16459
  %cmp54 = icmp eq i32 %bf.clear53, 39, !dbg !16460
  br i1 %cmp54, label %land.rhs, label %land.end, !dbg !16461

land.rhs:                                         ; preds = %while.cond
  %44 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16462
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !16462
  %bf.load55 = load i32, i32* %45, align 8, !dbg !16462
  %bf.lshr56 = lshr i32 %bf.load55, 16, !dbg !16462
  %bf.clear57 = and i32 %bf.lshr56, 255, !dbg !16462
  %46 = load i32, i32* %mode, align 4, !dbg !16463
  %cmp58 = icmp ne i32 %bf.clear57, %46, !dbg !16464
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %47 = phi i1 [ false, %while.cond ], [ %cmp58, %land.rhs ], !dbg !16465
  br i1 %47, label %while.body, label %while.end, !dbg !16458

while.body:                                       ; preds = %land.end
  %48 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16466
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !16466
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !16466
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 0, !dbg !16466
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !16466
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !16466
  store %struct.rtx_def* %49, %struct.rtx_def** %oldequiv, align 8, !dbg !16467
  br label %while.cond, !dbg !16458, !llvm.loop !16468

while.end:                                        ; preds = %land.end
  %50 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16469
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !16469
  %bf.load63 = load i32, i32* %51, align 8, !dbg !16469
  %bf.lshr64 = lshr i32 %bf.load63, 16, !dbg !16469
  %bf.clear65 = and i32 %bf.lshr64, 255, !dbg !16469
  %cmp66 = icmp ne i32 %bf.clear65, 0, !dbg !16471
  br i1 %cmp66, label %land.lhs.true67, label %if.end74, !dbg !16472

land.lhs.true67:                                  ; preds = %while.end
  %52 = load i32, i32* %mode, align 4, !dbg !16473
  %53 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16474
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !16474
  %bf.load68 = load i32, i32* %54, align 8, !dbg !16474
  %bf.lshr69 = lshr i32 %bf.load68, 16, !dbg !16474
  %bf.clear70 = and i32 %bf.lshr69, 255, !dbg !16474
  %cmp71 = icmp ne i32 %52, %bf.clear70, !dbg !16475
  br i1 %cmp71, label %if.then72, label %if.end74, !dbg !16476

if.then72:                                        ; preds = %land.lhs.true67
  %55 = load i32, i32* %mode, align 4, !dbg !16477
  %56 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16478
  %call73 = call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %55, %struct.rtx_def* %56), !dbg !16479
  store %struct.rtx_def* %call73, %struct.rtx_def** %oldequiv, align 8, !dbg !16480
  br label %if.end74, !dbg !16481

if.end74:                                         ; preds = %if.then72, %land.lhs.true67, %while.end
  %57 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16482
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %57, i32 0, i32 17, !dbg !16483
  %58 = load i32, i32* %when_needed, align 4, !dbg !16483
  switch i32 %58, label %sw.default [
    i32 9, label %sw.bb
    i32 0, label %sw.bb75
    i32 3, label %sw.bb78
    i32 4, label %sw.bb82
    i32 5, label %sw.bb86
    i32 6, label %sw.bb90
    i32 7, label %sw.bb94
    i32 8, label %sw.bb95
    i32 10, label %sw.bb96
  ], !dbg !16484

sw.bb:                                            ; preds = %if.end74
  store %struct.rtx_def** @other_input_reload_insns, %struct.rtx_def*** %where, align 8, !dbg !16485
  br label %sw.epilog, !dbg !16487

sw.bb75:                                          ; preds = %if.end74
  %59 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16488
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %59, i32 0, i32 12, !dbg !16489
  %60 = load i32, i32* %opnum, align 8, !dbg !16489
  %idxprom76 = sext i32 %60 to i64, !dbg !16490
  %arrayidx77 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @input_reload_insns, i64 0, i64 %idxprom76, !dbg !16490
  store %struct.rtx_def** %arrayidx77, %struct.rtx_def*** %where, align 8, !dbg !16491
  br label %sw.epilog, !dbg !16492

sw.bb78:                                          ; preds = %if.end74
  %61 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16493
  %opnum79 = getelementptr inbounds %struct.reload, %struct.reload* %61, i32 0, i32 12, !dbg !16494
  %62 = load i32, i32* %opnum79, align 8, !dbg !16494
  %idxprom80 = sext i32 %62 to i64, !dbg !16495
  %arrayidx81 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @input_address_reload_insns, i64 0, i64 %idxprom80, !dbg !16495
  store %struct.rtx_def** %arrayidx81, %struct.rtx_def*** %where, align 8, !dbg !16496
  br label %sw.epilog, !dbg !16497

sw.bb82:                                          ; preds = %if.end74
  %63 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16498
  %opnum83 = getelementptr inbounds %struct.reload, %struct.reload* %63, i32 0, i32 12, !dbg !16499
  %64 = load i32, i32* %opnum83, align 8, !dbg !16499
  %idxprom84 = sext i32 %64 to i64, !dbg !16500
  %arrayidx85 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @inpaddr_address_reload_insns, i64 0, i64 %idxprom84, !dbg !16500
  store %struct.rtx_def** %arrayidx85, %struct.rtx_def*** %where, align 8, !dbg !16501
  br label %sw.epilog, !dbg !16502

sw.bb86:                                          ; preds = %if.end74
  %65 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16503
  %opnum87 = getelementptr inbounds %struct.reload, %struct.reload* %65, i32 0, i32 12, !dbg !16504
  %66 = load i32, i32* %opnum87, align 8, !dbg !16504
  %idxprom88 = sext i32 %66 to i64, !dbg !16505
  %arrayidx89 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_address_reload_insns, i64 0, i64 %idxprom88, !dbg !16505
  store %struct.rtx_def** %arrayidx89, %struct.rtx_def*** %where, align 8, !dbg !16506
  br label %sw.epilog, !dbg !16507

sw.bb90:                                          ; preds = %if.end74
  %67 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16508
  %opnum91 = getelementptr inbounds %struct.reload, %struct.reload* %67, i32 0, i32 12, !dbg !16509
  %68 = load i32, i32* %opnum91, align 8, !dbg !16509
  %idxprom92 = sext i32 %68 to i64, !dbg !16510
  %arrayidx93 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @outaddr_address_reload_insns, i64 0, i64 %idxprom92, !dbg !16510
  store %struct.rtx_def** %arrayidx93, %struct.rtx_def*** %where, align 8, !dbg !16511
  br label %sw.epilog, !dbg !16512

sw.bb94:                                          ; preds = %if.end74
  store %struct.rtx_def** @operand_reload_insns, %struct.rtx_def*** %where, align 8, !dbg !16513
  br label %sw.epilog, !dbg !16514

sw.bb95:                                          ; preds = %if.end74
  store %struct.rtx_def** @other_operand_reload_insns, %struct.rtx_def*** %where, align 8, !dbg !16515
  br label %sw.epilog, !dbg !16516

sw.bb96:                                          ; preds = %if.end74
  store %struct.rtx_def** @other_input_address_reload_insns, %struct.rtx_def*** %where, align 8, !dbg !16517
  br label %sw.epilog, !dbg !16518

sw.default:                                       ; preds = %if.end74
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 6984, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16519
  br label %sw.epilog, !dbg !16520

sw.epilog:                                        ; preds = %sw.default, %sw.bb96, %sw.bb95, %sw.bb94, %sw.bb90, %sw.bb86, %sw.bb82, %sw.bb78, %sw.bb75, %sw.bb
  %69 = load %struct.rtx_def**, %struct.rtx_def*** %where, align 8, !dbg !16521
  %70 = load %struct.rtx_def*, %struct.rtx_def** %69, align 8, !dbg !16522
  call void @push_to_sequence(%struct.rtx_def* %70), !dbg !16523
  %71 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16524
  %out = getelementptr inbounds %struct.reload, %struct.reload* %71, i32 0, i32 1, !dbg !16526
  %72 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !16526
  %tobool97 = icmp ne %struct.rtx_def* %72, null, !dbg !16524
  br i1 %tobool97, label %land.lhs.true98, label %if.else150, !dbg !16527

land.lhs.true98:                                  ; preds = %sw.epilog
  %73 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16528
  %out_reg99 = getelementptr inbounds %struct.reload, %struct.reload* %73, i32 0, i32 9, !dbg !16529
  %74 = load %struct.rtx_def*, %struct.rtx_def** %out_reg99, align 8, !dbg !16529
  %tobool100 = icmp ne %struct.rtx_def* %74, null, !dbg !16528
  br i1 %tobool100, label %if.else150, label %if.then101, !dbg !16530

if.then101:                                       ; preds = %land.lhs.true98
  %75 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16531
  %secondary_in_reload = getelementptr inbounds %struct.reload, %struct.reload* %75, i32 0, i32 13, !dbg !16531
  %76 = load i32, i32* %secondary_in_reload, align 4, !dbg !16531
  %cmp102 = icmp slt i32 %76, 0, !dbg !16531
  br i1 %cmp102, label %cond.false, label %cond.true, !dbg !16531

cond.true:                                        ; preds = %if.then101
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 6995, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16531
  br label %cond.end, !dbg !16531

cond.false:                                       ; preds = %if.then101
  br label %cond.end, !dbg !16531

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !16531
  %77 = load i32, i32* %j.addr, align 4, !dbg !16533
  %idxprom103 = sext i32 %77 to i64, !dbg !16535
  %arrayidx104 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom103, !dbg !16535
  %78 = load i8, i8* %arrayidx104, align 1, !dbg !16535
  %tobool105 = icmp ne i8 %78, 0, !dbg !16535
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !16536

if.then106:                                       ; preds = %cond.end
  %79 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !16537
  store %struct.rtx_def* %79, %struct.rtx_def** %oldequiv, align 8, !dbg !16538
  br label %if.end107, !dbg !16539

if.end107:                                        ; preds = %if.then106, %cond.end
  %80 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16540
  %in_reg108 = getelementptr inbounds %struct.reload, %struct.reload* %80, i32 0, i32 8, !dbg !16540
  %81 = load %struct.rtx_def*, %struct.rtx_def** %in_reg108, align 8, !dbg !16540
  %u109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1, !dbg !16540
  %fld110 = bitcast %union.u* %u109 to [1 x %union.rtunion_def]*, !dbg !16540
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i64 0, i64 0, !dbg !16540
  %rt_rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**, !dbg !16540
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx112, align 8, !dbg !16540
  store %struct.rtx_def* %82, %struct.rtx_def** %old.addr, align 8, !dbg !16541
  %83 = load i32, i32* @optimize, align 4, !dbg !16542
  %tobool113 = icmp ne i32 %83, 0, !dbg !16542
  br i1 %tobool113, label %land.lhs.true114, label %if.end144, !dbg !16544

land.lhs.true114:                                 ; preds = %if.end107
  %84 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16545
  %85 = bitcast %struct.rtx_def* %84 to i32*, !dbg !16545
  %bf.load115 = load i32, i32* %85, align 8, !dbg !16545
  %bf.clear116 = and i32 %bf.load115, 65535, !dbg !16545
  %cmp117 = icmp eq i32 %bf.clear116, 37, !dbg !16545
  br i1 %cmp117, label %land.lhs.true118, label %if.end144, !dbg !16546

land.lhs.true118:                                 ; preds = %land.lhs.true114
  %86 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16547
  %call119 = call i32 @rhs_regno(%struct.rtx_def* %86), !dbg !16547
  %cmp120 = icmp ult i32 %call119, 53, !dbg !16548
  br i1 %cmp120, label %land.lhs.true121, label %if.end144, !dbg !16549

land.lhs.true121:                                 ; preds = %land.lhs.true118
  %87 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16550
  %call122 = call i32 @rhs_regno(%struct.rtx_def* %87), !dbg !16550
  %idxprom123 = zext i32 %call122 to i64, !dbg !16551
  %arrayidx124 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom123, !dbg !16551
  %88 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx124, align 8, !dbg !16551
  %tobool125 = icmp ne %struct.rtx_def* %88, null, !dbg !16551
  br i1 %tobool125, label %land.lhs.true126, label %if.end144, !dbg !16552

land.lhs.true126:                                 ; preds = %land.lhs.true121
  %89 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16553
  %90 = bitcast %struct.rtx_def* %89 to i32*, !dbg !16553
  %bf.load127 = load i32, i32* %90, align 8, !dbg !16553
  %bf.clear128 = and i32 %bf.load127, 65535, !dbg !16553
  %cmp129 = icmp eq i32 %bf.clear128, 37, !dbg !16553
  br i1 %cmp129, label %land.lhs.true130, label %if.end144, !dbg !16554

land.lhs.true130:                                 ; preds = %land.lhs.true126
  %91 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !16555
  %92 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16556
  %call131 = call i32 @rhs_regno(%struct.rtx_def* %92), !dbg !16556
  %idxprom132 = zext i32 %call131 to i64, !dbg !16557
  %arrayidx133 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i64 0, i64 %idxprom132, !dbg !16557
  %93 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx133, align 8, !dbg !16557
  %call134 = call i32 @dead_or_set_p(%struct.rtx_def* %91, %struct.rtx_def* %93), !dbg !16558
  %tobool135 = icmp ne i32 %call134, 0, !dbg !16558
  br i1 %tobool135, label %if.then142, label %lor.lhs.false136, !dbg !16559

lor.lhs.false136:                                 ; preds = %land.lhs.true130
  %94 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16560
  %call137 = call i32 @rhs_regno(%struct.rtx_def* %94), !dbg !16560
  %idxprom138 = zext i32 %call137 to i64, !dbg !16561
  %arrayidx139 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i64 0, i64 %idxprom138, !dbg !16561
  %95 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx139, align 8, !dbg !16561
  %96 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16562
  %call140 = call i32 @rtx_equal_p(%struct.rtx_def* %95, %struct.rtx_def* %96), !dbg !16563
  %tobool141 = icmp ne i32 %call140, 0, !dbg !16563
  br i1 %tobool141, label %if.then142, label %if.end144, !dbg !16564

if.then142:                                       ; preds = %lor.lhs.false136, %land.lhs.true130
  %97 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !16565
  %98 = load i32, i32* %j.addr, align 4, !dbg !16566
  %99 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16567
  %call143 = call i32 @rhs_regno(%struct.rtx_def* %99), !dbg !16567
  %100 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !16568
  call void @delete_output_reload(%struct.rtx_def* %97, i32 %98, i32 %call143, %struct.rtx_def* %100), !dbg !16569
  br label %if.end144, !dbg !16569

if.end144:                                        ; preds = %if.then142, %lor.lhs.false136, %land.lhs.true126, %land.lhs.true121, %land.lhs.true118, %land.lhs.true114, %if.end107
  store i32 1, i32* %special, align 4, !dbg !16570
  %101 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !16571
  %102 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16572
  %103 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16573
  %out145 = getelementptr inbounds %struct.reload, %struct.reload* %103, i32 0, i32 1, !dbg !16574
  %104 = load %struct.rtx_def*, %struct.rtx_def** %out145, align 8, !dbg !16574
  %105 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16575
  %inc = getelementptr inbounds %struct.reload, %struct.reload* %105, i32 0, i32 7, !dbg !16576
  %106 = load i32, i32* %inc, align 4, !dbg !16576
  %call146 = call %struct.rtx_def* @inc_for_reload(%struct.rtx_def* %101, %struct.rtx_def* %102, %struct.rtx_def* %104, i32 %106), !dbg !16577
  %107 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !16578
  %call147 = call i32 @rhs_regno(%struct.rtx_def* %107), !dbg !16578
  %idxprom148 = zext i32 %call147 to i64, !dbg !16579
  %arrayidx149 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i64 0, i64 %idxprom148, !dbg !16579
  store %struct.rtx_def* %call146, %struct.rtx_def** %arrayidx149, align 8, !dbg !16580
  br label %if.end358, !dbg !16581

if.else150:                                       ; preds = %land.lhs.true98, %sw.epilog
  %108 = load i32, i32* @optimize, align 4, !dbg !16582
  %tobool151 = icmp ne i32 %108, 0, !dbg !16582
  br i1 %tobool151, label %land.lhs.true152, label %if.end357, !dbg !16584

land.lhs.true152:                                 ; preds = %if.else150
  %109 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16585
  %110 = bitcast %struct.rtx_def* %109 to i32*, !dbg !16585
  %bf.load153 = load i32, i32* %110, align 8, !dbg !16585
  %bf.clear154 = and i32 %bf.load153, 65535, !dbg !16585
  %cmp155 = icmp eq i32 %bf.clear154, 37, !dbg !16585
  br i1 %cmp155, label %land.lhs.true156, label %if.end357, !dbg !16586

land.lhs.true156:                                 ; preds = %land.lhs.true152
  %111 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16587
  %call157 = call i32 @rhs_regno(%struct.rtx_def* %111), !dbg !16587
  %cmp158 = icmp uge i32 %call157, 53, !dbg !16588
  br i1 %cmp158, label %land.lhs.true159, label %if.end357, !dbg !16589

land.lhs.true159:                                 ; preds = %land.lhs.true156
  %112 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !16590
  %113 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16591
  %call160 = call i32 @dead_or_set_p(%struct.rtx_def* %112, %struct.rtx_def* %113), !dbg !16592
  %tobool161 = icmp ne i32 %call160, 0, !dbg !16592
  br i1 %tobool161, label %land.lhs.true162, label %if.end357, !dbg !16593

land.lhs.true162:                                 ; preds = %land.lhs.true159
  %114 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !16594
  %call163 = call i32 @conflicts_with_override(%struct.rtx_def* %114), !dbg !16595
  %tobool164 = icmp ne i32 %call163, 0, !dbg !16595
  br i1 %tobool164, label %if.end357, label %land.lhs.true165, !dbg !16596

land.lhs.true165:                                 ; preds = %land.lhs.true162
  %115 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !16597
  %call166 = call i32 @rhs_regno(%struct.rtx_def* %115), !dbg !16597
  %116 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16598
  %mode167 = getelementptr inbounds %struct.reload, %struct.reload* %116, i32 0, i32 5, !dbg !16599
  %117 = load i32, i32* %mode167, align 4, !dbg !16599
  %118 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16600
  %opnum168 = getelementptr inbounds %struct.reload, %struct.reload* %118, i32 0, i32 12, !dbg !16601
  %119 = load i32, i32* %opnum168, align 8, !dbg !16601
  %120 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16602
  %when_needed169 = getelementptr inbounds %struct.reload, %struct.reload* %120, i32 0, i32 17, !dbg !16603
  %121 = load i32, i32* %when_needed169, align 4, !dbg !16603
  %122 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16604
  %123 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16605
  %out170 = getelementptr inbounds %struct.reload, %struct.reload* %123, i32 0, i32 1, !dbg !16606
  %124 = load %struct.rtx_def*, %struct.rtx_def** %out170, align 8, !dbg !16606
  %125 = load i32, i32* %j.addr, align 4, !dbg !16607
  %call171 = call i32 @free_for_value_p(i32 %call166, i32 %117, i32 %119, i32 %121, %struct.rtx_def* %122, %struct.rtx_def* %124, i32 %125, i32 0), !dbg !16608
  %tobool172 = icmp ne i32 %call171, 0, !dbg !16608
  br i1 %tobool172, label %if.then173, label %if.end357, !dbg !16609

if.then173:                                       ; preds = %land.lhs.true165
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %temp, metadata !16610, metadata !DIExpression()), !dbg !16612
  %126 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !16613
  %u174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1, !dbg !16613
  %fld175 = bitcast %union.u* %u174 to [1 x %union.rtunion_def]*, !dbg !16613
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld175, i64 0, i64 1, !dbg !16613
  %rt_rtx177 = bitcast %union.rtunion_def* %arrayidx176 to %struct.rtx_def**, !dbg !16613
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx177, align 8, !dbg !16613
  store %struct.rtx_def* %127, %struct.rtx_def** %temp, align 8, !dbg !16612
  br label %while.cond178, !dbg !16614

while.cond178:                                    ; preds = %while.body188, %if.then173
  %128 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16615
  %tobool179 = icmp ne %struct.rtx_def* %128, null, !dbg !16615
  br i1 %tobool179, label %land.rhs180, label %land.end187, !dbg !16616

land.rhs180:                                      ; preds = %while.cond178
  %129 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16617
  %130 = bitcast %struct.rtx_def* %129 to i32*, !dbg !16617
  %bf.load181 = load i32, i32* %130, align 8, !dbg !16617
  %bf.clear182 = and i32 %bf.load181, 65535, !dbg !16617
  %cmp183 = icmp eq i32 %bf.clear182, 13, !dbg !16617
  br i1 %cmp183, label %lor.end, label %lor.rhs, !dbg !16618

lor.rhs:                                          ; preds = %land.rhs180
  %131 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16619
  %132 = bitcast %struct.rtx_def* %131 to i32*, !dbg !16619
  %bf.load184 = load i32, i32* %132, align 8, !dbg !16619
  %bf.clear185 = and i32 %bf.load184, 65535, !dbg !16619
  %cmp186 = icmp eq i32 %bf.clear185, 7, !dbg !16619
  br label %lor.end, !dbg !16618

lor.end:                                          ; preds = %lor.rhs, %land.rhs180
  %133 = phi i1 [ true, %land.rhs180 ], [ %cmp186, %lor.rhs ]
  br label %land.end187

land.end187:                                      ; preds = %lor.end, %while.cond178
  %134 = phi i1 [ false, %while.cond178 ], [ %133, %lor.end ], !dbg !16620
  br i1 %134, label %while.body188, label %while.end193, !dbg !16614

while.body188:                                    ; preds = %land.end187
  %135 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16621
  %u189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1, !dbg !16621
  %fld190 = bitcast %union.u* %u189 to [1 x %union.rtunion_def]*, !dbg !16621
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i64 0, i64 1, !dbg !16621
  %rt_rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**, !dbg !16621
  %136 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx192, align 8, !dbg !16621
  store %struct.rtx_def* %136, %struct.rtx_def** %temp, align 8, !dbg !16622
  br label %while.cond178, !dbg !16614, !llvm.loop !16623

while.end193:                                     ; preds = %land.end187
  %137 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16624
  %tobool194 = icmp ne %struct.rtx_def* %137, null, !dbg !16624
  br i1 %tobool194, label %land.lhs.true195, label %if.end356, !dbg !16626

land.lhs.true195:                                 ; preds = %while.end193
  %138 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16627
  %139 = bitcast %struct.rtx_def* %138 to i32*, !dbg !16627
  %bf.load196 = load i32, i32* %139, align 8, !dbg !16627
  %bf.clear197 = and i32 %bf.load196, 65535, !dbg !16627
  %cmp198 = icmp eq i32 %bf.clear197, 8, !dbg !16627
  br i1 %cmp198, label %land.lhs.true199, label %if.end356, !dbg !16628

land.lhs.true199:                                 ; preds = %land.lhs.true195
  %140 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16629
  %u200 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1, !dbg !16629
  %fld201 = bitcast %union.u* %u200 to [1 x %union.rtunion_def]*, !dbg !16629
  %arrayidx202 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld201, i64 0, i64 5, !dbg !16629
  %rt_rtx203 = bitcast %union.rtunion_def* %arrayidx202 to %struct.rtx_def**, !dbg !16629
  %141 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx203, align 8, !dbg !16629
  %142 = bitcast %struct.rtx_def* %141 to i32*, !dbg !16629
  %bf.load204 = load i32, i32* %142, align 8, !dbg !16629
  %bf.clear205 = and i32 %bf.load204, 65535, !dbg !16629
  %cmp206 = icmp eq i32 %bf.clear205, 23, !dbg !16630
  br i1 %cmp206, label %land.lhs.true207, label %if.end356, !dbg !16631

land.lhs.true207:                                 ; preds = %land.lhs.true199
  %143 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16632
  %u208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1, !dbg !16632
  %fld209 = bitcast %union.u* %u208 to [1 x %union.rtunion_def]*, !dbg !16632
  %arrayidx210 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld209, i64 0, i64 5, !dbg !16632
  %rt_rtx211 = bitcast %union.rtunion_def* %arrayidx210 to %struct.rtx_def**, !dbg !16632
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx211, align 8, !dbg !16632
  %u212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1, !dbg !16632
  %fld213 = bitcast %union.u* %u212 to [1 x %union.rtunion_def]*, !dbg !16632
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i64 0, i64 0, !dbg !16632
  %rt_rtx215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtx_def**, !dbg !16632
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx215, align 8, !dbg !16632
  %146 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16633
  %cmp216 = icmp eq %struct.rtx_def* %145, %146, !dbg !16634
  br i1 %cmp216, label %land.lhs.true217, label %if.end356, !dbg !16635

land.lhs.true217:                                 ; preds = %land.lhs.true207
  %147 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16636
  %u218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1, !dbg !16636
  %fld219 = bitcast %union.u* %u218 to [1 x %union.rtunion_def]*, !dbg !16636
  %arrayidx220 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld219, i64 0, i64 5, !dbg !16636
  %rt_rtx221 = bitcast %union.rtunion_def* %arrayidx220 to %struct.rtx_def**, !dbg !16636
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx221, align 8, !dbg !16636
  %call222 = call i32 @asm_noperands(%struct.rtx_def* %148), !dbg !16637
  %cmp223 = icmp slt i32 %call222, 0, !dbg !16638
  br i1 %cmp223, label %land.lhs.true224, label %if.end356, !dbg !16639

land.lhs.true224:                                 ; preds = %land.lhs.true217
  %149 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !16640
  %u225 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1, !dbg !16640
  %fld226 = bitcast %union.u* %u225 to [1 x %union.rtunion_def]*, !dbg !16640
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld226, i64 0, i64 5, !dbg !16640
  %rt_rtx228 = bitcast %union.rtunion_def* %arrayidx227 to %struct.rtx_def**, !dbg !16640
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx228, align 8, !dbg !16640
  %151 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16641
  %call229 = call i32 @count_occurrences(%struct.rtx_def* %150, %struct.rtx_def* %151, i32 0), !dbg !16642
  %cmp230 = icmp eq i32 %call229, 1, !dbg !16643
  br i1 %cmp230, label %if.then231, label %if.end356, !dbg !16644

if.then231:                                       ; preds = %land.lhs.true224
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old232, metadata !16645, metadata !DIExpression()), !dbg !16647
  %152 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16648
  %u233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1, !dbg !16648
  %fld234 = bitcast %union.u* %u233 to [1 x %union.rtunion_def]*, !dbg !16648
  %arrayidx235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld234, i64 0, i64 5, !dbg !16648
  %rt_rtx236 = bitcast %union.rtunion_def* %arrayidx235 to %struct.rtx_def**, !dbg !16648
  %153 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx236, align 8, !dbg !16648
  %u237 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1, !dbg !16648
  %fld238 = bitcast %union.u* %u237 to [1 x %union.rtunion_def]*, !dbg !16648
  %arrayidx239 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld238, i64 0, i64 0, !dbg !16648
  %rt_rtx240 = bitcast %union.rtunion_def* %arrayidx239 to %struct.rtx_def**, !dbg !16648
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx240, align 8, !dbg !16648
  store %struct.rtx_def* %154, %struct.rtx_def** %old232, align 8, !dbg !16647
  %155 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !16649
  %156 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16650
  %u241 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1, !dbg !16650
  %fld242 = bitcast %union.u* %u241 to [1 x %union.rtunion_def]*, !dbg !16650
  %arrayidx243 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld242, i64 0, i64 5, !dbg !16650
  %rt_rtx244 = bitcast %union.rtunion_def* %arrayidx243 to %struct.rtx_def**, !dbg !16650
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx244, align 8, !dbg !16650
  %u245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1, !dbg !16650
  %fld246 = bitcast %union.u* %u245 to [1 x %union.rtunion_def]*, !dbg !16650
  %arrayidx247 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld246, i64 0, i64 0, !dbg !16650
  %rt_rtx248 = bitcast %union.rtunion_def* %arrayidx247 to %struct.rtx_def**, !dbg !16650
  store %struct.rtx_def* %155, %struct.rtx_def** %rt_rtx248, align 8, !dbg !16651
  %158 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16652
  call void @extract_insn(%struct.rtx_def* %158), !dbg !16653
  %call249 = call i32 @constrain_operands(i32 1), !dbg !16654
  %tobool250 = icmp ne i32 %call249, 0, !dbg !16654
  br i1 %tobool250, label %if.then251, label %if.else346, !dbg !16656

if.then251:                                       ; preds = %if.then231
  %159 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16657
  %u252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1, !dbg !16657
  %fld253 = bitcast %union.u* %u252 to [1 x %union.rtunion_def]*, !dbg !16657
  %arrayidx254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld253, i64 0, i64 5, !dbg !16657
  %rt_rtx255 = bitcast %union.rtunion_def* %arrayidx254 to %struct.rtx_def**, !dbg !16657
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx255, align 8, !dbg !16657
  %u256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1, !dbg !16657
  %fld257 = bitcast %union.u* %u256 to [1 x %union.rtunion_def]*, !dbg !16657
  %arrayidx258 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld257, i64 0, i64 1, !dbg !16657
  %rt_rtx259 = bitcast %union.rtunion_def* %arrayidx258 to %struct.rtx_def**, !dbg !16657
  %161 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx259, align 8, !dbg !16657
  %162 = bitcast %struct.rtx_def* %161 to i32*, !dbg !16657
  %bf.load260 = load i32, i32* %162, align 8, !dbg !16657
  %bf.clear261 = and i32 %bf.load260, 65535, !dbg !16657
  %cmp262 = icmp eq i32 %bf.clear261, 37, !dbg !16657
  br i1 %cmp262, label %land.lhs.true263, label %if.end297, !dbg !16660

land.lhs.true263:                                 ; preds = %if.then251
  %163 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16661
  %u264 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1, !dbg !16661
  %fld265 = bitcast %union.u* %u264 to [1 x %union.rtunion_def]*, !dbg !16661
  %arrayidx266 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld265, i64 0, i64 5, !dbg !16661
  %rt_rtx267 = bitcast %union.rtunion_def* %arrayidx266 to %struct.rtx_def**, !dbg !16661
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx267, align 8, !dbg !16661
  %u268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1, !dbg !16661
  %fld269 = bitcast %union.u* %u268 to [1 x %union.rtunion_def]*, !dbg !16661
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i64 0, i64 1, !dbg !16661
  %rt_rtx271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtx_def**, !dbg !16661
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx271, align 8, !dbg !16661
  %call272 = call i32 @rhs_regno(%struct.rtx_def* %165), !dbg !16661
  %cmp273 = icmp ult i32 %call272, 53, !dbg !16662
  br i1 %cmp273, label %if.then274, label %if.end297, !dbg !16663

if.then274:                                       ; preds = %land.lhs.true263
  %166 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16664
  %u275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1, !dbg !16664
  %fld276 = bitcast %union.u* %u275 to [1 x %union.rtunion_def]*, !dbg !16664
  %arrayidx277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld276, i64 0, i64 5, !dbg !16664
  %rt_rtx278 = bitcast %union.rtunion_def* %arrayidx277 to %struct.rtx_def**, !dbg !16664
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx278, align 8, !dbg !16664
  %u279 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1, !dbg !16664
  %fld280 = bitcast %union.u* %u279 to [1 x %union.rtunion_def]*, !dbg !16664
  %arrayidx281 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld280, i64 0, i64 1, !dbg !16664
  %rt_rtx282 = bitcast %union.rtunion_def* %arrayidx281 to %struct.rtx_def**, !dbg !16664
  %168 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx282, align 8, !dbg !16664
  %call283 = call i32 @rhs_regno(%struct.rtx_def* %168), !dbg !16664
  %idxprom284 = zext i32 %call283 to i64, !dbg !16666
  %arrayidx285 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom284, !dbg !16666
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx285, align 8, !dbg !16667
  %169 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16668
  %u286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1, !dbg !16668
  %fld287 = bitcast %union.u* %u286 to [1 x %union.rtunion_def]*, !dbg !16668
  %arrayidx288 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld287, i64 0, i64 5, !dbg !16668
  %rt_rtx289 = bitcast %union.rtunion_def* %arrayidx288 to %struct.rtx_def**, !dbg !16668
  %170 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx289, align 8, !dbg !16668
  %u290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1, !dbg !16668
  %fld291 = bitcast %union.u* %u290 to [1 x %union.rtunion_def]*, !dbg !16668
  %arrayidx292 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld291, i64 0, i64 1, !dbg !16668
  %rt_rtx293 = bitcast %union.rtunion_def* %arrayidx292 to %struct.rtx_def**, !dbg !16668
  %171 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx293, align 8, !dbg !16668
  %call294 = call i32 @rhs_regno(%struct.rtx_def* %171), !dbg !16668
  %idxprom295 = zext i32 %call294 to i64, !dbg !16669
  %arrayidx296 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i64 0, i64 %idxprom295, !dbg !16669
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx296, align 8, !dbg !16670
  br label %if.end297, !dbg !16671

if.end297:                                        ; preds = %if.then274, %land.lhs.true263, %if.then251
  %172 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !16672
  %173 = load %struct.rtx_def*, %struct.rtx_def** %old232, align 8, !dbg !16672
  %call298 = call i32 @rhs_regno(%struct.rtx_def* %173), !dbg !16672
  %idxprom299 = zext i32 %call298 to i64, !dbg !16672
  %arrayidx300 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %172, i64 %idxprom299, !dbg !16672
  %deaths = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %arrayidx300, i32 0, i32 1, !dbg !16672
  %174 = load i32, i32* %deaths, align 4, !dbg !16672
  %cmp301 = icmp eq i32 %174, 1, !dbg !16674
  br i1 %cmp301, label %land.lhs.true302, label %if.end316, !dbg !16675

land.lhs.true302:                                 ; preds = %if.end297
  %175 = load %struct.rtx_def*, %struct.rtx_def** %old232, align 8, !dbg !16676
  %call303 = call i32 @rhs_regno(%struct.rtx_def* %175), !dbg !16676
  %call304 = call i32 @REG_N_SETS(i32 %call303), !dbg !16677
  %cmp305 = icmp eq i32 %call304, 1, !dbg !16678
  br i1 %cmp305, label %if.then306, label %if.end316, !dbg !16679

if.then306:                                       ; preds = %land.lhs.true302
  %176 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !16680
  %call307 = call i32 @rhs_regno(%struct.rtx_def* %176), !dbg !16680
  %conv = trunc i32 %call307 to i16, !dbg !16680
  %177 = load i16*, i16** @reg_renumber, align 8, !dbg !16682
  %178 = load %struct.rtx_def*, %struct.rtx_def** %old232, align 8, !dbg !16683
  %call308 = call i32 @rhs_regno(%struct.rtx_def* %178), !dbg !16683
  %idxprom309 = zext i32 %call308 to i64, !dbg !16682
  %arrayidx310 = getelementptr inbounds i16, i16* %177, i64 %idxprom309, !dbg !16682
  store i16 %conv, i16* %arrayidx310, align 2, !dbg !16684
  %179 = load i8, i8* @ira_conflicts_p, align 1, !dbg !16685
  %tobool311 = icmp ne i8 %179, 0, !dbg !16685
  br i1 %tobool311, label %if.then312, label %if.end314, !dbg !16687

if.then312:                                       ; preds = %if.then306
  %180 = load %struct.rtx_def*, %struct.rtx_def** %old232, align 8, !dbg !16688
  %call313 = call i32 @rhs_regno(%struct.rtx_def* %180), !dbg !16688
  call void @ira_mark_allocation_change(i32 %call313), !dbg !16689
  br label %if.end314, !dbg !16689

if.end314:                                        ; preds = %if.then312, %if.then306
  %181 = load %struct.rtx_def*, %struct.rtx_def** %old232, align 8, !dbg !16690
  %call315 = call i32 @rhs_regno(%struct.rtx_def* %181), !dbg !16690
  call void @alter_reg(i32 %call315, i32 -1, i8 zeroext 0), !dbg !16691
  br label %if.end316, !dbg !16692

if.end316:                                        ; preds = %if.end314, %land.lhs.true302, %if.end297
  store i32 1, i32* %special, align 4, !dbg !16693
  br label %while.cond317, !dbg !16694

while.cond317:                                    ; preds = %if.end344, %if.end316
  %182 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16695
  %u318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1, !dbg !16695
  %fld319 = bitcast %union.u* %u318 to [1 x %union.rtunion_def]*, !dbg !16695
  %arrayidx320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld319, i64 0, i64 2, !dbg !16695
  %rt_rtx321 = bitcast %union.rtunion_def* %arrayidx320 to %struct.rtx_def**, !dbg !16695
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx321, align 8, !dbg !16695
  store %struct.rtx_def* %183, %struct.rtx_def** %temp, align 8, !dbg !16696
  %184 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !16697
  %cmp322 = icmp ne %struct.rtx_def* %183, %184, !dbg !16698
  br i1 %cmp322, label %while.body324, label %while.end345, !dbg !16694

while.body324:                                    ; preds = %while.cond317
  %185 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16699
  %186 = bitcast %struct.rtx_def* %185 to i32*, !dbg !16699
  %bf.load325 = load i32, i32* %186, align 8, !dbg !16699
  %bf.clear326 = and i32 %bf.load325, 65535, !dbg !16699
  %cmp327 = icmp eq i32 %bf.clear326, 7, !dbg !16699
  br i1 %cmp327, label %if.then329, label %if.else335, !dbg !16701

if.then329:                                       ; preds = %while.body324
  %187 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16702
  %u330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %187, i32 0, i32 1, !dbg !16702
  %fld331 = bitcast %union.u* %u330 to [1 x %union.rtunion_def]*, !dbg !16702
  %arrayidx332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld331, i64 0, i64 5, !dbg !16702
  %rt_rtx333 = bitcast %union.rtunion_def* %arrayidx332 to %struct.rtx_def**, !dbg !16702
  %188 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx333, align 8, !dbg !16702
  %189 = load %struct.rtx_def*, %struct.rtx_def** %old232, align 8, !dbg !16703
  %190 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !16704
  %call334 = call %struct.rtx_def* @replace_rtx(%struct.rtx_def* %188, %struct.rtx_def* %189, %struct.rtx_def* %190), !dbg !16705
  br label %if.end344, !dbg !16705

if.else335:                                       ; preds = %while.body324
  %191 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16706
  %192 = bitcast %struct.rtx_def* %191 to i32*, !dbg !16706
  %bf.load336 = load i32, i32* %192, align 8, !dbg !16706
  %bf.clear337 = and i32 %bf.load336, 65535, !dbg !16706
  %cmp338 = icmp eq i32 %bf.clear337, 13, !dbg !16706
  br i1 %cmp338, label %cond.false341, label %cond.true340, !dbg !16706

cond.true340:                                     ; preds = %if.else335
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 7083, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16706
  br label %cond.end342, !dbg !16706

cond.false341:                                    ; preds = %if.else335
  br label %cond.end342, !dbg !16706

cond.end342:                                      ; preds = %cond.false341, %cond.true340
  %cond343 = phi i32 [ 0, %cond.true340 ], [ 0, %cond.false341 ], !dbg !16706
  br label %if.end344

if.end344:                                        ; preds = %cond.end342, %if.then329
  br label %while.cond317, !dbg !16694, !llvm.loop !16707

while.end345:                                     ; preds = %while.cond317
  br label %if.end355, !dbg !16709

if.else346:                                       ; preds = %if.then231
  %193 = load %struct.rtx_def*, %struct.rtx_def** %old232, align 8, !dbg !16710
  %194 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !16712
  %u347 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %194, i32 0, i32 1, !dbg !16712
  %fld348 = bitcast %union.u* %u347 to [1 x %union.rtunion_def]*, !dbg !16712
  %arrayidx349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld348, i64 0, i64 5, !dbg !16712
  %rt_rtx350 = bitcast %union.rtunion_def* %arrayidx349 to %struct.rtx_def**, !dbg !16712
  %195 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx350, align 8, !dbg !16712
  %u351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1, !dbg !16712
  %fld352 = bitcast %union.u* %u351 to [1 x %union.rtunion_def]*, !dbg !16712
  %arrayidx353 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld352, i64 0, i64 0, !dbg !16712
  %rt_rtx354 = bitcast %union.rtunion_def* %arrayidx353 to %struct.rtx_def**, !dbg !16712
  store %struct.rtx_def* %193, %struct.rtx_def** %rt_rtx354, align 8, !dbg !16713
  br label %if.end355

if.end355:                                        ; preds = %if.else346, %while.end345
  br label %if.end356, !dbg !16714

if.end356:                                        ; preds = %if.end355, %land.lhs.true224, %land.lhs.true217, %land.lhs.true207, %land.lhs.true199, %land.lhs.true195, %while.end193
  br label %if.end357, !dbg !16715

if.end357:                                        ; preds = %if.end356, %land.lhs.true165, %land.lhs.true162, %land.lhs.true159, %land.lhs.true156, %land.lhs.true152, %if.else150
  br label %if.end358

if.end358:                                        ; preds = %if.end357, %if.end144
  %196 = load i32, i32* %special, align 4, !dbg !16716
  %tobool359 = icmp ne i32 %196, 0, !dbg !16716
  br i1 %tobool359, label %if.end636, label %land.lhs.true360, !dbg !16718

land.lhs.true360:                                 ; preds = %if.end358
  %197 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16719
  %secondary_in_reload361 = getelementptr inbounds %struct.reload, %struct.reload* %197, i32 0, i32 13, !dbg !16720
  %198 = load i32, i32* %secondary_in_reload361, align 4, !dbg !16720
  %cmp362 = icmp sge i32 %198, 0, !dbg !16721
  br i1 %cmp362, label %if.then364, label %if.end636, !dbg !16722

if.then364:                                       ; preds = %land.lhs.true360
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %second_reload_reg, metadata !16723, metadata !DIExpression()), !dbg !16725
  store %struct.rtx_def* null, %struct.rtx_def** %second_reload_reg, align 8, !dbg !16725
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %third_reload_reg, metadata !16726, metadata !DIExpression()), !dbg !16727
  store %struct.rtx_def* null, %struct.rtx_def** %third_reload_reg, align 8, !dbg !16727
  call void @llvm.dbg.declare(metadata i32* %secondary_reload, metadata !16728, metadata !DIExpression()), !dbg !16729
  %199 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16730
  %secondary_in_reload365 = getelementptr inbounds %struct.reload, %struct.reload* %199, i32 0, i32 13, !dbg !16731
  %200 = load i32, i32* %secondary_in_reload365, align 4, !dbg !16731
  store i32 %200, i32* %secondary_reload, align 4, !dbg !16729
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %real_oldequiv, metadata !16732, metadata !DIExpression()), !dbg !16733
  %201 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16734
  store %struct.rtx_def* %201, %struct.rtx_def** %real_oldequiv, align 8, !dbg !16733
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %real_old, metadata !16735, metadata !DIExpression()), !dbg !16736
  %202 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16737
  store %struct.rtx_def* %202, %struct.rtx_def** %real_old, align 8, !dbg !16736
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tmp, metadata !16738, metadata !DIExpression()), !dbg !16739
  call void @llvm.dbg.declare(metadata i32* %icode, metadata !16740, metadata !DIExpression()), !dbg !16741
  call void @llvm.dbg.declare(metadata i32* %tertiary_icode, metadata !16742, metadata !DIExpression()), !dbg !16743
  store i32 2956, i32* %tertiary_icode, align 4, !dbg !16743
  %203 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16744
  store %struct.rtx_def* %203, %struct.rtx_def** %tmp, align 8, !dbg !16745
  %204 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16746
  %205 = bitcast %struct.rtx_def* %204 to i32*, !dbg !16746
  %bf.load366 = load i32, i32* %205, align 8, !dbg !16746
  %bf.clear367 = and i32 %bf.load366, 65535, !dbg !16746
  %cmp368 = icmp eq i32 %bf.clear367, 39, !dbg !16748
  br i1 %cmp368, label %if.then370, label %if.end375, !dbg !16749

if.then370:                                       ; preds = %if.then364
  %206 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16750
  %u371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1, !dbg !16750
  %fld372 = bitcast %union.u* %u371 to [1 x %union.rtunion_def]*, !dbg !16750
  %arrayidx373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld372, i64 0, i64 0, !dbg !16750
  %rt_rtx374 = bitcast %union.rtunion_def* %arrayidx373 to %struct.rtx_def**, !dbg !16750
  %207 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx374, align 8, !dbg !16750
  store %struct.rtx_def* %207, %struct.rtx_def** %tmp, align 8, !dbg !16751
  br label %if.end375, !dbg !16752

if.end375:                                        ; preds = %if.then370, %if.then364
  %208 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16753
  %209 = bitcast %struct.rtx_def* %208 to i32*, !dbg !16753
  %bf.load376 = load i32, i32* %209, align 8, !dbg !16753
  %bf.clear377 = and i32 %bf.load376, 65535, !dbg !16753
  %cmp378 = icmp eq i32 %bf.clear377, 37, !dbg !16753
  br i1 %cmp378, label %land.lhs.true380, label %if.end414, !dbg !16755

land.lhs.true380:                                 ; preds = %if.end375
  %210 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16756
  %call381 = call i32 @rhs_regno(%struct.rtx_def* %210), !dbg !16756
  %cmp382 = icmp uge i32 %call381, 53, !dbg !16757
  br i1 %cmp382, label %land.lhs.true384, label %if.end414, !dbg !16758

land.lhs.true384:                                 ; preds = %land.lhs.true380
  %211 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !16759
  %212 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16760
  %call385 = call i32 @rhs_regno(%struct.rtx_def* %212), !dbg !16760
  %idxprom386 = zext i32 %call385 to i64, !dbg !16759
  %arrayidx387 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %211, i64 %idxprom386, !dbg !16759
  %213 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx387, align 8, !dbg !16759
  %cmp388 = icmp ne %struct.rtx_def* %213, null, !dbg !16761
  br i1 %cmp388, label %if.then396, label %lor.lhs.false390, !dbg !16762

lor.lhs.false390:                                 ; preds = %land.lhs.true384
  %214 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !16763
  %215 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16764
  %call391 = call i32 @rhs_regno(%struct.rtx_def* %215), !dbg !16764
  %idxprom392 = zext i32 %call391 to i64, !dbg !16763
  %arrayidx393 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %214, i64 %idxprom392, !dbg !16763
  %216 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx393, align 8, !dbg !16763
  %cmp394 = icmp ne %struct.rtx_def* %216, null, !dbg !16765
  br i1 %cmp394, label %if.then396, label %if.end414, !dbg !16766

if.then396:                                       ; preds = %lor.lhs.false390, %land.lhs.true384
  %217 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !16767
  %218 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16770
  %call397 = call i32 @rhs_regno(%struct.rtx_def* %218), !dbg !16770
  %idxprom398 = zext i32 %call397 to i64, !dbg !16767
  %arrayidx399 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %217, i64 %idxprom398, !dbg !16767
  %219 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx399, align 8, !dbg !16767
  %tobool400 = icmp ne %struct.rtx_def* %219, null, !dbg !16767
  br i1 %tobool400, label %lor.lhs.false401, label %if.then408, !dbg !16771

lor.lhs.false401:                                 ; preds = %if.then396
  %220 = load i32, i32* @num_not_at_initial_offset, align 4, !dbg !16772
  %tobool402 = icmp ne i32 %220, 0, !dbg !16772
  br i1 %tobool402, label %if.then408, label %lor.lhs.false403, !dbg !16773

lor.lhs.false403:                                 ; preds = %lor.lhs.false401
  %221 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16774
  %222 = bitcast %struct.rtx_def* %221 to i32*, !dbg !16774
  %bf.load404 = load i32, i32* %222, align 8, !dbg !16774
  %bf.clear405 = and i32 %bf.load404, 65535, !dbg !16774
  %cmp406 = icmp eq i32 %bf.clear405, 39, !dbg !16775
  br i1 %cmp406, label %if.then408, label %if.else409, !dbg !16776

if.then408:                                       ; preds = %lor.lhs.false403, %lor.lhs.false401, %if.then396
  %223 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16777
  %in = getelementptr inbounds %struct.reload, %struct.reload* %223, i32 0, i32 0, !dbg !16778
  %224 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !16778
  store %struct.rtx_def* %224, %struct.rtx_def** %real_oldequiv, align 8, !dbg !16779
  br label %if.end413, !dbg !16780

if.else409:                                       ; preds = %lor.lhs.false403
  %225 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !16781
  %226 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16782
  %call410 = call i32 @rhs_regno(%struct.rtx_def* %226), !dbg !16782
  %idxprom411 = zext i32 %call410 to i64, !dbg !16781
  %arrayidx412 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %225, i64 %idxprom411, !dbg !16781
  %227 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx412, align 8, !dbg !16781
  store %struct.rtx_def* %227, %struct.rtx_def** %real_oldequiv, align 8, !dbg !16783
  br label %if.end413

if.end413:                                        ; preds = %if.else409, %if.then408
  br label %if.end414, !dbg !16784

if.end414:                                        ; preds = %if.end413, %lor.lhs.false390, %land.lhs.true380, %if.end375
  %228 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16785
  store %struct.rtx_def* %228, %struct.rtx_def** %tmp, align 8, !dbg !16786
  %229 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16787
  %230 = bitcast %struct.rtx_def* %229 to i32*, !dbg !16787
  %bf.load415 = load i32, i32* %230, align 8, !dbg !16787
  %bf.clear416 = and i32 %bf.load415, 65535, !dbg !16787
  %cmp417 = icmp eq i32 %bf.clear416, 39, !dbg !16789
  br i1 %cmp417, label %if.then419, label %if.end424, !dbg !16790

if.then419:                                       ; preds = %if.end414
  %231 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16791
  %u420 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %231, i32 0, i32 1, !dbg !16791
  %fld421 = bitcast %union.u* %u420 to [1 x %union.rtunion_def]*, !dbg !16791
  %arrayidx422 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld421, i64 0, i64 0, !dbg !16791
  %rt_rtx423 = bitcast %union.rtunion_def* %arrayidx422 to %struct.rtx_def**, !dbg !16791
  %232 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx423, align 8, !dbg !16791
  store %struct.rtx_def* %232, %struct.rtx_def** %tmp, align 8, !dbg !16792
  br label %if.end424, !dbg !16793

if.end424:                                        ; preds = %if.then419, %if.end414
  %233 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16794
  %234 = bitcast %struct.rtx_def* %233 to i32*, !dbg !16794
  %bf.load425 = load i32, i32* %234, align 8, !dbg !16794
  %bf.clear426 = and i32 %bf.load425, 65535, !dbg !16794
  %cmp427 = icmp eq i32 %bf.clear426, 37, !dbg !16794
  br i1 %cmp427, label %land.lhs.true429, label %if.end464, !dbg !16796

land.lhs.true429:                                 ; preds = %if.end424
  %235 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16797
  %call430 = call i32 @rhs_regno(%struct.rtx_def* %235), !dbg !16797
  %cmp431 = icmp uge i32 %call430, 53, !dbg !16798
  br i1 %cmp431, label %land.lhs.true433, label %if.end464, !dbg !16799

land.lhs.true433:                                 ; preds = %land.lhs.true429
  %236 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !16800
  %237 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16801
  %call434 = call i32 @rhs_regno(%struct.rtx_def* %237), !dbg !16801
  %idxprom435 = zext i32 %call434 to i64, !dbg !16800
  %arrayidx436 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %236, i64 %idxprom435, !dbg !16800
  %238 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx436, align 8, !dbg !16800
  %cmp437 = icmp ne %struct.rtx_def* %238, null, !dbg !16802
  br i1 %cmp437, label %if.then445, label %lor.lhs.false439, !dbg !16803

lor.lhs.false439:                                 ; preds = %land.lhs.true433
  %239 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !16804
  %240 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16805
  %call440 = call i32 @rhs_regno(%struct.rtx_def* %240), !dbg !16805
  %idxprom441 = zext i32 %call440 to i64, !dbg !16804
  %arrayidx442 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %239, i64 %idxprom441, !dbg !16804
  %241 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx442, align 8, !dbg !16804
  %cmp443 = icmp ne %struct.rtx_def* %241, null, !dbg !16806
  br i1 %cmp443, label %if.then445, label %if.end464, !dbg !16807

if.then445:                                       ; preds = %lor.lhs.false439, %land.lhs.true433
  %242 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !16808
  %243 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16811
  %call446 = call i32 @rhs_regno(%struct.rtx_def* %243), !dbg !16811
  %idxprom447 = zext i32 %call446 to i64, !dbg !16808
  %arrayidx448 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %242, i64 %idxprom447, !dbg !16808
  %244 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx448, align 8, !dbg !16808
  %tobool449 = icmp ne %struct.rtx_def* %244, null, !dbg !16808
  br i1 %tobool449, label %lor.lhs.false450, label %if.then457, !dbg !16812

lor.lhs.false450:                                 ; preds = %if.then445
  %245 = load i32, i32* @num_not_at_initial_offset, align 4, !dbg !16813
  %tobool451 = icmp ne i32 %245, 0, !dbg !16813
  br i1 %tobool451, label %if.then457, label %lor.lhs.false452, !dbg !16814

lor.lhs.false452:                                 ; preds = %lor.lhs.false450
  %246 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16815
  %247 = bitcast %struct.rtx_def* %246 to i32*, !dbg !16815
  %bf.load453 = load i32, i32* %247, align 8, !dbg !16815
  %bf.clear454 = and i32 %bf.load453, 65535, !dbg !16815
  %cmp455 = icmp eq i32 %bf.clear454, 39, !dbg !16816
  br i1 %cmp455, label %if.then457, label %if.else459, !dbg !16817

if.then457:                                       ; preds = %lor.lhs.false452, %lor.lhs.false450, %if.then445
  %248 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16818
  %in458 = getelementptr inbounds %struct.reload, %struct.reload* %248, i32 0, i32 0, !dbg !16819
  %249 = load %struct.rtx_def*, %struct.rtx_def** %in458, align 8, !dbg !16819
  store %struct.rtx_def* %249, %struct.rtx_def** %real_old, align 8, !dbg !16820
  br label %if.end463, !dbg !16821

if.else459:                                       ; preds = %lor.lhs.false452
  %250 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !16822
  %251 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !16823
  %call460 = call i32 @rhs_regno(%struct.rtx_def* %251), !dbg !16823
  %idxprom461 = zext i32 %call460 to i64, !dbg !16822
  %arrayidx462 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %250, i64 %idxprom461, !dbg !16822
  %252 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx462, align 8, !dbg !16822
  store %struct.rtx_def* %252, %struct.rtx_def** %real_old, align 8, !dbg !16824
  br label %if.end463

if.end463:                                        ; preds = %if.else459, %if.then457
  br label %if.end464, !dbg !16825

if.end464:                                        ; preds = %if.end463, %lor.lhs.false439, %land.lhs.true429, %if.end424
  %253 = load i32, i32* %secondary_reload, align 4, !dbg !16826
  %idxprom465 = sext i32 %253 to i64, !dbg !16827
  %arrayidx466 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom465, !dbg !16827
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx466, i32 0, i32 11, !dbg !16828
  %254 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !16828
  store %struct.rtx_def* %254, %struct.rtx_def** %second_reload_reg, align 8, !dbg !16829
  %255 = load i32, i32* %secondary_reload, align 4, !dbg !16830
  %idxprom467 = sext i32 %255 to i64, !dbg !16832
  %arrayidx468 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom467, !dbg !16832
  %secondary_in_reload469 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx468, i32 0, i32 13, !dbg !16833
  %256 = load i32, i32* %secondary_in_reload469, align 4, !dbg !16833
  %cmp470 = icmp sge i32 %256, 0, !dbg !16834
  br i1 %cmp470, label %if.then472, label %if.end490, !dbg !16835

if.then472:                                       ; preds = %if.end464
  call void @llvm.dbg.declare(metadata i32* %tertiary_reload, metadata !16836, metadata !DIExpression()), !dbg !16838
  %257 = load i32, i32* %secondary_reload, align 4, !dbg !16839
  %idxprom473 = sext i32 %257 to i64, !dbg !16840
  %arrayidx474 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom473, !dbg !16840
  %secondary_in_reload475 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx474, i32 0, i32 13, !dbg !16841
  %258 = load i32, i32* %secondary_in_reload475, align 4, !dbg !16841
  store i32 %258, i32* %tertiary_reload, align 4, !dbg !16838
  %259 = load i32, i32* %tertiary_reload, align 4, !dbg !16842
  %idxprom476 = sext i32 %259 to i64, !dbg !16843
  %arrayidx477 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom476, !dbg !16843
  %reg_rtx478 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx477, i32 0, i32 11, !dbg !16844
  %260 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx478, align 8, !dbg !16844
  store %struct.rtx_def* %260, %struct.rtx_def** %third_reload_reg, align 8, !dbg !16845
  %261 = load i32, i32* %secondary_reload, align 4, !dbg !16846
  %idxprom479 = sext i32 %261 to i64, !dbg !16847
  %arrayidx480 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom479, !dbg !16847
  %secondary_in_icode = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx480, i32 0, i32 15, !dbg !16848
  %262 = load i32, i32* %secondary_in_icode, align 4, !dbg !16848
  store i32 %262, i32* %tertiary_icode, align 4, !dbg !16849
  %263 = load i32, i32* %tertiary_reload, align 4, !dbg !16850
  %idxprom481 = sext i32 %263 to i64, !dbg !16850
  %arrayidx482 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom481, !dbg !16850
  %secondary_in_reload483 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx482, i32 0, i32 13, !dbg !16850
  %264 = load i32, i32* %secondary_in_reload483, align 4, !dbg !16850
  %cmp484 = icmp slt i32 %264, 0, !dbg !16850
  br i1 %cmp484, label %cond.false487, label %cond.true486, !dbg !16850

cond.true486:                                     ; preds = %if.then472
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 7169, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16850
  br label %cond.end488, !dbg !16850

cond.false487:                                    ; preds = %if.then472
  br label %cond.end488, !dbg !16850

cond.end488:                                      ; preds = %cond.false487, %cond.true486
  %cond489 = phi i32 [ 0, %cond.true486 ], [ 0, %cond.false487 ], !dbg !16850
  br label %if.end490, !dbg !16851

if.end490:                                        ; preds = %cond.end488, %if.end464
  %265 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16852
  %secondary_in_icode491 = getelementptr inbounds %struct.reload, %struct.reload* %265, i32 0, i32 15, !dbg !16853
  %266 = load i32, i32* %secondary_in_icode491, align 4, !dbg !16853
  store i32 %266, i32* %icode, align 4, !dbg !16854
  %267 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16855
  %268 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16857
  %cmp492 = icmp ne %struct.rtx_def* %267, %268, !dbg !16858
  br i1 %cmp492, label %land.lhs.true494, label %lor.lhs.false497, !dbg !16859

land.lhs.true494:                                 ; preds = %if.end490
  %269 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16860
  %270 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !16861
  %call495 = call i32 @rtx_equal_p(%struct.rtx_def* %269, %struct.rtx_def* %270), !dbg !16862
  %tobool496 = icmp ne i32 %call495, 0, !dbg !16862
  br i1 %tobool496, label %lor.lhs.false497, label %if.then505, !dbg !16863

lor.lhs.false497:                                 ; preds = %land.lhs.true494, %if.end490
  %271 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16864
  %in498 = getelementptr inbounds %struct.reload, %struct.reload* %271, i32 0, i32 0, !dbg !16865
  %272 = load %struct.rtx_def*, %struct.rtx_def** %in498, align 8, !dbg !16865
  %cmp499 = icmp ne %struct.rtx_def* %272, null, !dbg !16866
  br i1 %cmp499, label %land.lhs.true501, label %if.end595, !dbg !16867

land.lhs.true501:                                 ; preds = %lor.lhs.false497
  %273 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16868
  %out502 = getelementptr inbounds %struct.reload, %struct.reload* %273, i32 0, i32 1, !dbg !16869
  %274 = load %struct.rtx_def*, %struct.rtx_def** %out502, align 8, !dbg !16869
  %cmp503 = icmp ne %struct.rtx_def* %274, null, !dbg !16870
  br i1 %cmp503, label %if.then505, label %if.end595, !dbg !16871

if.then505:                                       ; preds = %land.lhs.true501, %land.lhs.true494
  call void @llvm.dbg.declare(metadata %struct.secondary_reload_info* %sri, metadata !16872, metadata !DIExpression()), !dbg !16883
  call void @llvm.dbg.declare(metadata %struct.secondary_reload_info* %sri2, metadata !16884, metadata !DIExpression()), !dbg !16885
  call void @llvm.dbg.declare(metadata i32* %new_class, metadata !16886, metadata !DIExpression()), !dbg !16887
  call void @llvm.dbg.declare(metadata i32* %new_t_class, metadata !16888, metadata !DIExpression()), !dbg !16889
  %icode506 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri, i32 0, i32 0, !dbg !16890
  store i32 2956, i32* %icode506, align 8, !dbg !16891
  %prev_sri = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri, i32 0, i32 2, !dbg !16892
  store %struct.secondary_reload_info* null, %struct.secondary_reload_info** %prev_sri, align 8, !dbg !16893
  %275 = load i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 97), align 8, !dbg !16894
  %276 = load %struct.rtx_def*, %struct.rtx_def** %real_oldequiv, align 8, !dbg !16895
  %277 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !16896
  %rclass = getelementptr inbounds %struct.reload, %struct.reload* %277, i32 0, i32 2, !dbg !16897
  %278 = load i32, i32* %rclass, align 8, !dbg !16897
  %279 = load i32, i32* %mode, align 4, !dbg !16898
  %call507 = call i32 %275(i8 zeroext 1, %struct.rtx_def* %276, i32 %278, i32 %279, %struct.secondary_reload_info* %sri), !dbg !16899
  store i32 %call507, i32* %new_class, align 4, !dbg !16900
  %280 = load i32, i32* %new_class, align 4, !dbg !16901
  %cmp508 = icmp eq i32 %280, 0, !dbg !16903
  br i1 %cmp508, label %land.lhs.true510, label %if.else515, !dbg !16904

land.lhs.true510:                                 ; preds = %if.then505
  %icode511 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri, i32 0, i32 0, !dbg !16905
  %281 = load i32, i32* %icode511, align 8, !dbg !16905
  %cmp512 = icmp eq i32 %281, 2956, !dbg !16906
  br i1 %cmp512, label %if.then514, label %if.else515, !dbg !16907

if.then514:                                       ; preds = %land.lhs.true510
  store %struct.rtx_def* null, %struct.rtx_def** %second_reload_reg, align 8, !dbg !16908
  br label %if.end594, !dbg !16909

if.else515:                                       ; preds = %land.lhs.true510, %if.then505
  %282 = load i32, i32* %new_class, align 4, !dbg !16910
  %cmp516 = icmp eq i32 %282, 0, !dbg !16912
  br i1 %cmp516, label %if.then518, label %if.else526, !dbg !16913

if.then518:                                       ; preds = %if.else515
  %283 = load %struct.rtx_def*, %struct.rtx_def** %third_reload_reg, align 8, !dbg !16914
  %icode519 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri, i32 0, i32 0, !dbg !16917
  %284 = load i32, i32* %icode519, align 8, !dbg !16917
  %call520 = call zeroext i8 @reload_adjust_reg_for_icode(%struct.rtx_def** %second_reload_reg, %struct.rtx_def* %283, i32 %284), !dbg !16918
  %tobool521 = icmp ne i8 %call520, 0, !dbg !16918
  br i1 %tobool521, label %if.then522, label %if.else524, !dbg !16919

if.then522:                                       ; preds = %if.then518
  %icode523 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri, i32 0, i32 0, !dbg !16920
  %285 = load i32, i32* %icode523, align 8, !dbg !16920
  store i32 %285, i32* %icode, align 4, !dbg !16922
  store %struct.rtx_def* null, %struct.rtx_def** %third_reload_reg, align 8, !dbg !16923
  br label %if.end525, !dbg !16924

if.else524:                                       ; preds = %if.then518
  %286 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16925
  store %struct.rtx_def* %286, %struct.rtx_def** %oldequiv, align 8, !dbg !16927
  %287 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !16928
  store %struct.rtx_def* %287, %struct.rtx_def** %real_oldequiv, align 8, !dbg !16929
  br label %if.end525

if.end525:                                        ; preds = %if.else524, %if.then522
  br label %if.end593, !dbg !16930

if.else526:                                       ; preds = %if.else515
  %icode527 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri, i32 0, i32 0, !dbg !16931
  %288 = load i32, i32* %icode527, align 8, !dbg !16931
  %cmp528 = icmp ne i32 %288, 2956, !dbg !16933
  br i1 %cmp528, label %if.then530, label %if.else531, !dbg !16934

if.then530:                                       ; preds = %if.else526
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 7203, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16935
  br label %if.end592, !dbg !16935

if.else531:                                       ; preds = %if.else526
  %icode532 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri2, i32 0, i32 0, !dbg !16936
  store i32 2956, i32* %icode532, align 8, !dbg !16938
  %prev_sri533 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri2, i32 0, i32 2, !dbg !16939
  store %struct.secondary_reload_info* %sri, %struct.secondary_reload_info** %prev_sri533, align 8, !dbg !16940
  %289 = load i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 97), align 8, !dbg !16941
  %290 = load %struct.rtx_def*, %struct.rtx_def** %real_oldequiv, align 8, !dbg !16942
  %291 = load i32, i32* %new_class, align 4, !dbg !16943
  %292 = load i32, i32* %mode, align 4, !dbg !16944
  %call534 = call i32 %289(i8 zeroext 1, %struct.rtx_def* %290, i32 %291, i32 %292, %struct.secondary_reload_info* %sri), !dbg !16945
  store i32 %call534, i32* %new_t_class, align 4, !dbg !16946
  %293 = load i32, i32* %new_t_class, align 4, !dbg !16947
  %cmp535 = icmp eq i32 %293, 0, !dbg !16949
  br i1 %cmp535, label %land.lhs.true537, label %if.else548, !dbg !16950

land.lhs.true537:                                 ; preds = %if.else531
  %icode538 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri2, i32 0, i32 0, !dbg !16951
  %294 = load i32, i32* %icode538, align 8, !dbg !16951
  %cmp539 = icmp eq i32 %294, 2956, !dbg !16952
  br i1 %cmp539, label %if.then541, label %if.else548, !dbg !16953

if.then541:                                       ; preds = %land.lhs.true537
  %295 = load %struct.rtx_def*, %struct.rtx_def** %third_reload_reg, align 8, !dbg !16954
  %296 = load i32, i32* %new_class, align 4, !dbg !16957
  %297 = load i32, i32* %mode, align 4, !dbg !16958
  %call542 = call zeroext i8 @reload_adjust_reg_for_temp(%struct.rtx_def** %second_reload_reg, %struct.rtx_def* %295, i32 %296, i32 %297), !dbg !16959
  %tobool543 = icmp ne i8 %call542, 0, !dbg !16959
  br i1 %tobool543, label %if.then544, label %if.else546, !dbg !16960

if.then544:                                       ; preds = %if.then541
  store %struct.rtx_def* null, %struct.rtx_def** %third_reload_reg, align 8, !dbg !16961
  %icode545 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri2, i32 0, i32 0, !dbg !16963
  %298 = load i32, i32* %icode545, align 8, !dbg !16963
  store i32 %298, i32* %tertiary_icode, align 4, !dbg !16964
  br label %if.end547, !dbg !16965

if.else546:                                       ; preds = %if.then541
  %299 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16966
  store %struct.rtx_def* %299, %struct.rtx_def** %oldequiv, align 8, !dbg !16968
  %300 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !16969
  store %struct.rtx_def* %300, %struct.rtx_def** %real_oldequiv, align 8, !dbg !16970
  br label %if.end547

if.end547:                                        ; preds = %if.else546, %if.then544
  br label %if.end591, !dbg !16971

if.else548:                                       ; preds = %land.lhs.true537, %if.else531
  %301 = load i32, i32* %new_t_class, align 4, !dbg !16972
  %cmp549 = icmp eq i32 %301, 0, !dbg !16974
  br i1 %cmp549, label %land.lhs.true551, label %if.else568, !dbg !16975

land.lhs.true551:                                 ; preds = %if.else548
  %icode552 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri2, i32 0, i32 0, !dbg !16976
  %302 = load i32, i32* %icode552, align 8, !dbg !16976
  %cmp553 = icmp ne i32 %302, 2956, !dbg !16977
  br i1 %cmp553, label %if.then555, label %if.else568, !dbg !16978

if.then555:                                       ; preds = %land.lhs.true551
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %intermediate, metadata !16979, metadata !DIExpression()), !dbg !16981
  %303 = load %struct.rtx_def*, %struct.rtx_def** %second_reload_reg, align 8, !dbg !16982
  store %struct.rtx_def* %303, %struct.rtx_def** %intermediate, align 8, !dbg !16981
  %304 = load i32, i32* %new_class, align 4, !dbg !16983
  %305 = load i32, i32* %mode, align 4, !dbg !16985
  %call556 = call zeroext i8 @reload_adjust_reg_for_temp(%struct.rtx_def** %intermediate, %struct.rtx_def* null, i32 %304, i32 %305), !dbg !16986
  %conv557 = zext i8 %call556 to i32, !dbg !16986
  %tobool558 = icmp ne i32 %conv557, 0, !dbg !16986
  br i1 %tobool558, label %land.lhs.true559, label %if.else566, !dbg !16987

land.lhs.true559:                                 ; preds = %if.then555
  %icode560 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri2, i32 0, i32 0, !dbg !16988
  %306 = load i32, i32* %icode560, align 8, !dbg !16988
  %call561 = call zeroext i8 @reload_adjust_reg_for_icode(%struct.rtx_def** %third_reload_reg, %struct.rtx_def* null, i32 %306), !dbg !16989
  %conv562 = zext i8 %call561 to i32, !dbg !16989
  %tobool563 = icmp ne i32 %conv562, 0, !dbg !16989
  br i1 %tobool563, label %if.then564, label %if.else566, !dbg !16990

if.then564:                                       ; preds = %land.lhs.true559
  %307 = load %struct.rtx_def*, %struct.rtx_def** %intermediate, align 8, !dbg !16991
  store %struct.rtx_def* %307, %struct.rtx_def** %second_reload_reg, align 8, !dbg !16993
  %icode565 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri2, i32 0, i32 0, !dbg !16994
  %308 = load i32, i32* %icode565, align 8, !dbg !16994
  store i32 %308, i32* %tertiary_icode, align 4, !dbg !16995
  br label %if.end567, !dbg !16996

if.else566:                                       ; preds = %land.lhs.true559, %if.then555
  %309 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !16997
  store %struct.rtx_def* %309, %struct.rtx_def** %oldequiv, align 8, !dbg !16999
  %310 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !17000
  store %struct.rtx_def* %310, %struct.rtx_def** %real_oldequiv, align 8, !dbg !17001
  br label %if.end567

if.end567:                                        ; preds = %if.else566, %if.then564
  br label %if.end590, !dbg !17002

if.else568:                                       ; preds = %land.lhs.true551, %if.else548
  %311 = load i32, i32* %new_t_class, align 4, !dbg !17003
  %cmp569 = icmp ne i32 %311, 0, !dbg !17005
  br i1 %cmp569, label %land.lhs.true571, label %if.else588, !dbg !17006

land.lhs.true571:                                 ; preds = %if.else568
  %icode572 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri2, i32 0, i32 0, !dbg !17007
  %312 = load i32, i32* %icode572, align 8, !dbg !17007
  %cmp573 = icmp eq i32 %312, 2956, !dbg !17008
  br i1 %cmp573, label %if.then575, label %if.else588, !dbg !17009

if.then575:                                       ; preds = %land.lhs.true571
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %intermediate576, metadata !17010, metadata !DIExpression()), !dbg !17012
  %313 = load %struct.rtx_def*, %struct.rtx_def** %second_reload_reg, align 8, !dbg !17013
  store %struct.rtx_def* %313, %struct.rtx_def** %intermediate576, align 8, !dbg !17012
  %314 = load i32, i32* %new_class, align 4, !dbg !17014
  %315 = load i32, i32* %mode, align 4, !dbg !17016
  %call577 = call zeroext i8 @reload_adjust_reg_for_temp(%struct.rtx_def** %intermediate576, %struct.rtx_def* null, i32 %314, i32 %315), !dbg !17017
  %conv578 = zext i8 %call577 to i32, !dbg !17017
  %tobool579 = icmp ne i32 %conv578, 0, !dbg !17017
  br i1 %tobool579, label %land.lhs.true580, label %if.else586, !dbg !17018

land.lhs.true580:                                 ; preds = %if.then575
  %316 = load i32, i32* %new_t_class, align 4, !dbg !17019
  %317 = load i32, i32* %mode, align 4, !dbg !17020
  %call581 = call zeroext i8 @reload_adjust_reg_for_temp(%struct.rtx_def** %third_reload_reg, %struct.rtx_def* null, i32 %316, i32 %317), !dbg !17021
  %conv582 = zext i8 %call581 to i32, !dbg !17021
  %tobool583 = icmp ne i32 %conv582, 0, !dbg !17021
  br i1 %tobool583, label %if.then584, label %if.else586, !dbg !17022

if.then584:                                       ; preds = %land.lhs.true580
  %318 = load %struct.rtx_def*, %struct.rtx_def** %intermediate576, align 8, !dbg !17023
  store %struct.rtx_def* %318, %struct.rtx_def** %second_reload_reg, align 8, !dbg !17025
  %icode585 = getelementptr inbounds %struct.secondary_reload_info, %struct.secondary_reload_info* %sri2, i32 0, i32 0, !dbg !17026
  %319 = load i32, i32* %icode585, align 8, !dbg !17026
  store i32 %319, i32* %tertiary_icode, align 4, !dbg !17027
  br label %if.end587, !dbg !17028

if.else586:                                       ; preds = %land.lhs.true580, %if.then575
  %320 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !17029
  store %struct.rtx_def* %320, %struct.rtx_def** %oldequiv, align 8, !dbg !17031
  %321 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !17032
  store %struct.rtx_def* %321, %struct.rtx_def** %real_oldequiv, align 8, !dbg !17033
  br label %if.end587

if.end587:                                        ; preds = %if.else586, %if.then584
  br label %if.end589, !dbg !17034

if.else588:                                       ; preds = %land.lhs.true571, %if.else568
  %322 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !17035
  store %struct.rtx_def* %322, %struct.rtx_def** %oldequiv, align 8, !dbg !17037
  %323 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !17038
  store %struct.rtx_def* %323, %struct.rtx_def** %real_oldequiv, align 8, !dbg !17039
  br label %if.end589

if.end589:                                        ; preds = %if.else588, %if.end587
  br label %if.end590

if.end590:                                        ; preds = %if.end589, %if.end567
  br label %if.end591

if.end591:                                        ; preds = %if.end590, %if.end547
  br label %if.end592

if.end592:                                        ; preds = %if.end591, %if.then530
  br label %if.end593

if.end593:                                        ; preds = %if.end592, %if.end525
  br label %if.end594

if.end594:                                        ; preds = %if.end593, %if.then514
  br label %if.end595, !dbg !17040

if.end595:                                        ; preds = %if.end594, %land.lhs.true501, %lor.lhs.false497
  %324 = load %struct.rtx_def*, %struct.rtx_def** %second_reload_reg, align 8, !dbg !17041
  %tobool596 = icmp ne %struct.rtx_def* %324, null, !dbg !17041
  br i1 %tobool596, label %if.then597, label %if.end635, !dbg !17043

if.then597:                                       ; preds = %if.end595
  %325 = load i32, i32* %icode, align 4, !dbg !17044
  %cmp598 = icmp ne i32 %325, 2956, !dbg !17047
  br i1 %cmp598, label %if.then600, label %if.else610, !dbg !17048

if.then600:                                       ; preds = %if.then597
  %326 = load %struct.rtx_def*, %struct.rtx_def** %third_reload_reg, align 8, !dbg !17049
  %tobool601 = icmp ne %struct.rtx_def* %326, null, !dbg !17049
  br i1 %tobool601, label %cond.true602, label %cond.false603, !dbg !17049

cond.true602:                                     ; preds = %if.then600
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 7283, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !17049
  br label %cond.end604, !dbg !17049

cond.false603:                                    ; preds = %if.then600
  br label %cond.end604, !dbg !17049

cond.end604:                                      ; preds = %cond.false603, %cond.true602
  %cond605 = phi i32 [ 0, %cond.true602 ], [ 0, %cond.false603 ], !dbg !17049
  %327 = load i32, i32* %icode, align 4, !dbg !17051
  %idxprom606 = zext i32 %327 to i64, !dbg !17051
  %arrayidx607 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom606, !dbg !17051
  %genfun = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx607, i32 0, i32 2, !dbg !17051
  %328 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !17051
  %329 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !17052
  %330 = load %struct.rtx_def*, %struct.rtx_def** %real_oldequiv, align 8, !dbg !17053
  %331 = load %struct.rtx_def*, %struct.rtx_def** %second_reload_reg, align 8, !dbg !17054
  %call608 = call %struct.rtx_def* (%struct.rtx_def*, ...) %328(%struct.rtx_def* %329, %struct.rtx_def* %330, %struct.rtx_def* %331), !dbg !17051
  %call609 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call608), !dbg !17055
  store i32 1, i32* %special, align 4, !dbg !17056
  br label %if.end634, !dbg !17057

if.else610:                                       ; preds = %if.then597
  %332 = load i32, i32* %tertiary_icode, align 4, !dbg !17058
  %cmp611 = icmp ne i32 %332, 2956, !dbg !17061
  br i1 %cmp611, label %if.then613, label %if.else619, !dbg !17062

if.then613:                                       ; preds = %if.else610
  %333 = load i32, i32* %tertiary_icode, align 4, !dbg !17063
  %idxprom614 = zext i32 %333 to i64, !dbg !17063
  %arrayidx615 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom614, !dbg !17063
  %genfun616 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx615, i32 0, i32 2, !dbg !17063
  %334 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun616, align 8, !dbg !17063
  %335 = load %struct.rtx_def*, %struct.rtx_def** %second_reload_reg, align 8, !dbg !17065
  %336 = load %struct.rtx_def*, %struct.rtx_def** %real_oldequiv, align 8, !dbg !17066
  %337 = load %struct.rtx_def*, %struct.rtx_def** %third_reload_reg, align 8, !dbg !17067
  %call617 = call %struct.rtx_def* (%struct.rtx_def*, ...) %334(%struct.rtx_def* %335, %struct.rtx_def* %336, %struct.rtx_def* %337), !dbg !17063
  %call618 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call617), !dbg !17068
  br label %if.end633, !dbg !17069

if.else619:                                       ; preds = %if.else610
  %338 = load %struct.rtx_def*, %struct.rtx_def** %third_reload_reg, align 8, !dbg !17070
  %tobool620 = icmp ne %struct.rtx_def* %338, null, !dbg !17070
  br i1 %tobool620, label %if.then621, label %if.else628, !dbg !17072

if.then621:                                       ; preds = %if.else619
  %339 = load %struct.rtx_def*, %struct.rtx_def** %third_reload_reg, align 8, !dbg !17073
  %340 = load %struct.rtx_def*, %struct.rtx_def** %real_oldequiv, align 8, !dbg !17075
  %341 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !17076
  %opnum622 = getelementptr inbounds %struct.reload, %struct.reload* %341, i32 0, i32 12, !dbg !17077
  %342 = load i32, i32* %opnum622, align 8, !dbg !17077
  %343 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !17078
  %when_needed623 = getelementptr inbounds %struct.reload, %struct.reload* %343, i32 0, i32 17, !dbg !17079
  %344 = load i32, i32* %when_needed623, align 4, !dbg !17079
  %call624 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %339, %struct.rtx_def* %340, i32 %342, i32 %344), !dbg !17080
  %345 = load %struct.rtx_def*, %struct.rtx_def** %second_reload_reg, align 8, !dbg !17081
  %346 = load %struct.rtx_def*, %struct.rtx_def** %third_reload_reg, align 8, !dbg !17082
  %347 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !17083
  %opnum625 = getelementptr inbounds %struct.reload, %struct.reload* %347, i32 0, i32 12, !dbg !17084
  %348 = load i32, i32* %opnum625, align 8, !dbg !17084
  %349 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !17085
  %when_needed626 = getelementptr inbounds %struct.reload, %struct.reload* %349, i32 0, i32 17, !dbg !17086
  %350 = load i32, i32* %when_needed626, align 4, !dbg !17086
  %call627 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %345, %struct.rtx_def* %346, i32 %348, i32 %350), !dbg !17087
  br label %if.end632, !dbg !17088

if.else628:                                       ; preds = %if.else619
  %351 = load %struct.rtx_def*, %struct.rtx_def** %second_reload_reg, align 8, !dbg !17089
  %352 = load %struct.rtx_def*, %struct.rtx_def** %real_oldequiv, align 8, !dbg !17090
  %353 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !17091
  %opnum629 = getelementptr inbounds %struct.reload, %struct.reload* %353, i32 0, i32 12, !dbg !17092
  %354 = load i32, i32* %opnum629, align 8, !dbg !17092
  %355 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !17093
  %when_needed630 = getelementptr inbounds %struct.reload, %struct.reload* %355, i32 0, i32 17, !dbg !17094
  %356 = load i32, i32* %when_needed630, align 4, !dbg !17094
  %call631 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %351, %struct.rtx_def* %352, i32 %354, i32 %356), !dbg !17095
  br label %if.end632

if.end632:                                        ; preds = %if.else628, %if.then621
  br label %if.end633

if.end633:                                        ; preds = %if.end632, %if.then613
  %357 = load %struct.rtx_def*, %struct.rtx_def** %second_reload_reg, align 8, !dbg !17096
  store %struct.rtx_def* %357, %struct.rtx_def** %oldequiv, align 8, !dbg !17097
  br label %if.end634

if.end634:                                        ; preds = %if.end633, %cond.end604
  br label %if.end635, !dbg !17098

if.end635:                                        ; preds = %if.end634, %if.end595
  br label %if.end636, !dbg !17099

if.end636:                                        ; preds = %if.end635, %land.lhs.true360, %if.end358
  %358 = load i32, i32* %special, align 4, !dbg !17100
  %tobool637 = icmp ne i32 %358, 0, !dbg !17100
  br i1 %tobool637, label %if.end725, label %land.lhs.true638, !dbg !17102

land.lhs.true638:                                 ; preds = %if.end636
  %359 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !17103
  %360 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17104
  %call639 = call i32 @rtx_equal_p(%struct.rtx_def* %359, %struct.rtx_def* %360), !dbg !17105
  %tobool640 = icmp ne i32 %call639, 0, !dbg !17105
  br i1 %tobool640, label %if.end725, label %if.then641, !dbg !17106

if.then641:                                       ; preds = %land.lhs.true638
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %real_oldequiv642, metadata !17107, metadata !DIExpression()), !dbg !17109
  %361 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17110
  store %struct.rtx_def* %361, %struct.rtx_def** %real_oldequiv642, align 8, !dbg !17109
  %362 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17111
  %363 = bitcast %struct.rtx_def* %362 to i32*, !dbg !17111
  %bf.load643 = load i32, i32* %363, align 8, !dbg !17111
  %bf.clear644 = and i32 %bf.load643, 65535, !dbg !17111
  %cmp645 = icmp eq i32 %bf.clear644, 37, !dbg !17111
  br i1 %cmp645, label %land.lhs.true647, label %lor.lhs.false663, !dbg !17113

land.lhs.true647:                                 ; preds = %if.then641
  %364 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17114
  %call648 = call i32 @rhs_regno(%struct.rtx_def* %364), !dbg !17114
  %cmp649 = icmp uge i32 %call648, 53, !dbg !17115
  br i1 %cmp649, label %land.lhs.true651, label %lor.lhs.false663, !dbg !17116

land.lhs.true651:                                 ; preds = %land.lhs.true647
  %365 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !17117
  %366 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17118
  %call652 = call i32 @rhs_regno(%struct.rtx_def* %366), !dbg !17118
  %idxprom653 = zext i32 %call652 to i64, !dbg !17117
  %arrayidx654 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %365, i64 %idxprom653, !dbg !17117
  %367 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx654, align 8, !dbg !17117
  %cmp655 = icmp ne %struct.rtx_def* %367, null, !dbg !17119
  br i1 %cmp655, label %if.then719, label %lor.lhs.false657, !dbg !17120

lor.lhs.false657:                                 ; preds = %land.lhs.true651
  %368 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !17121
  %369 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17122
  %call658 = call i32 @rhs_regno(%struct.rtx_def* %369), !dbg !17122
  %idxprom659 = zext i32 %call658 to i64, !dbg !17121
  %arrayidx660 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %368, i64 %idxprom659, !dbg !17121
  %370 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx660, align 8, !dbg !17121
  %cmp661 = icmp ne %struct.rtx_def* %370, null, !dbg !17123
  br i1 %cmp661, label %if.then719, label %lor.lhs.false663, !dbg !17124

lor.lhs.false663:                                 ; preds = %lor.lhs.false657, %land.lhs.true647, %if.then641
  %371 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17125
  %372 = bitcast %struct.rtx_def* %371 to i32*, !dbg !17125
  %bf.load664 = load i32, i32* %372, align 8, !dbg !17125
  %bf.clear665 = and i32 %bf.load664, 65535, !dbg !17125
  %cmp666 = icmp eq i32 %bf.clear665, 39, !dbg !17126
  br i1 %cmp666, label %land.lhs.true668, label %lor.lhs.false705, !dbg !17127

land.lhs.true668:                                 ; preds = %lor.lhs.false663
  %373 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17128
  %u669 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %373, i32 0, i32 1, !dbg !17128
  %fld670 = bitcast %union.u* %u669 to [1 x %union.rtunion_def]*, !dbg !17128
  %arrayidx671 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld670, i64 0, i64 0, !dbg !17128
  %rt_rtx672 = bitcast %union.rtunion_def* %arrayidx671 to %struct.rtx_def**, !dbg !17128
  %374 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx672, align 8, !dbg !17128
  %375 = bitcast %struct.rtx_def* %374 to i32*, !dbg !17128
  %bf.load673 = load i32, i32* %375, align 8, !dbg !17128
  %bf.clear674 = and i32 %bf.load673, 65535, !dbg !17128
  %cmp675 = icmp eq i32 %bf.clear674, 37, !dbg !17128
  br i1 %cmp675, label %land.lhs.true677, label %lor.lhs.false705, !dbg !17129

land.lhs.true677:                                 ; preds = %land.lhs.true668
  %376 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17130
  %u678 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %376, i32 0, i32 1, !dbg !17130
  %fld679 = bitcast %union.u* %u678 to [1 x %union.rtunion_def]*, !dbg !17130
  %arrayidx680 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld679, i64 0, i64 0, !dbg !17130
  %rt_rtx681 = bitcast %union.rtunion_def* %arrayidx680 to %struct.rtx_def**, !dbg !17130
  %377 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx681, align 8, !dbg !17130
  %call682 = call i32 @rhs_regno(%struct.rtx_def* %377), !dbg !17130
  %cmp683 = icmp uge i32 %call682, 53, !dbg !17131
  br i1 %cmp683, label %land.lhs.true685, label %lor.lhs.false705, !dbg !17132

land.lhs.true685:                                 ; preds = %land.lhs.true677
  %378 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !17133
  %379 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17134
  %u686 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %379, i32 0, i32 1, !dbg !17134
  %fld687 = bitcast %union.u* %u686 to [1 x %union.rtunion_def]*, !dbg !17134
  %arrayidx688 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld687, i64 0, i64 0, !dbg !17134
  %rt_rtx689 = bitcast %union.rtunion_def* %arrayidx688 to %struct.rtx_def**, !dbg !17134
  %380 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx689, align 8, !dbg !17134
  %call690 = call i32 @rhs_regno(%struct.rtx_def* %380), !dbg !17134
  %idxprom691 = zext i32 %call690 to i64, !dbg !17133
  %arrayidx692 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %378, i64 %idxprom691, !dbg !17133
  %381 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx692, align 8, !dbg !17133
  %cmp693 = icmp ne %struct.rtx_def* %381, null, !dbg !17135
  br i1 %cmp693, label %if.then719, label %lor.lhs.false695, !dbg !17136

lor.lhs.false695:                                 ; preds = %land.lhs.true685
  %382 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_constant, align 8, !dbg !17137
  %383 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17138
  %u696 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %383, i32 0, i32 1, !dbg !17138
  %fld697 = bitcast %union.u* %u696 to [1 x %union.rtunion_def]*, !dbg !17138
  %arrayidx698 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld697, i64 0, i64 0, !dbg !17138
  %rt_rtx699 = bitcast %union.rtunion_def* %arrayidx698 to %struct.rtx_def**, !dbg !17138
  %384 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx699, align 8, !dbg !17138
  %call700 = call i32 @rhs_regno(%struct.rtx_def* %384), !dbg !17138
  %idxprom701 = zext i32 %call700 to i64, !dbg !17137
  %arrayidx702 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %382, i64 %idxprom701, !dbg !17137
  %385 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx702, align 8, !dbg !17137
  %cmp703 = icmp ne %struct.rtx_def* %385, null, !dbg !17139
  br i1 %cmp703, label %if.then719, label %lor.lhs.false705, !dbg !17140

lor.lhs.false705:                                 ; preds = %lor.lhs.false695, %land.lhs.true677, %land.lhs.true668, %lor.lhs.false663
  %386 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17141
  %387 = bitcast %struct.rtx_def* %386 to i32*, !dbg !17141
  %bf.load706 = load i32, i32* %387, align 8, !dbg !17141
  %bf.clear707 = and i32 %bf.load706, 65535, !dbg !17141
  %idxprom708 = sext i32 %bf.clear707 to i64, !dbg !17141
  %arrayidx709 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom708, !dbg !17141
  %388 = load i32, i32* %arrayidx709, align 4, !dbg !17141
  %cmp710 = icmp eq i32 %388, 9, !dbg !17141
  br i1 %cmp710, label %land.lhs.true712, label %if.end721, !dbg !17142

land.lhs.true712:                                 ; preds = %lor.lhs.false705
  %389 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17143
  %390 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !17143
  %call713 = call i32 @rhs_regno(%struct.rtx_def* %390), !dbg !17143
  %idxprom714 = zext i32 %call713 to i64, !dbg !17143
  %arrayidx715 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom714, !dbg !17143
  %391 = load i32, i32* %arrayidx715, align 4, !dbg !17143
  %call716 = call i32 @ix86_preferred_reload_class(%struct.rtx_def* %389, i32 %391), !dbg !17143
  %cmp717 = icmp eq i32 %call716, 0, !dbg !17144
  br i1 %cmp717, label %if.then719, label %if.end721, !dbg !17145

if.then719:                                       ; preds = %land.lhs.true712, %lor.lhs.false695, %land.lhs.true685, %lor.lhs.false657, %land.lhs.true651
  %392 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !17146
  %in720 = getelementptr inbounds %struct.reload, %struct.reload* %392, i32 0, i32 0, !dbg !17147
  %393 = load %struct.rtx_def*, %struct.rtx_def** %in720, align 8, !dbg !17147
  store %struct.rtx_def* %393, %struct.rtx_def** %real_oldequiv642, align 8, !dbg !17148
  br label %if.end721, !dbg !17149

if.end721:                                        ; preds = %if.then719, %land.lhs.true712, %lor.lhs.false705
  %394 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !17150
  %395 = load %struct.rtx_def*, %struct.rtx_def** %real_oldequiv642, align 8, !dbg !17151
  %396 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !17152
  %opnum722 = getelementptr inbounds %struct.reload, %struct.reload* %396, i32 0, i32 12, !dbg !17153
  %397 = load i32, i32* %opnum722, align 8, !dbg !17153
  %398 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !17154
  %when_needed723 = getelementptr inbounds %struct.reload, %struct.reload* %398, i32 0, i32 17, !dbg !17155
  %399 = load i32, i32* %when_needed723, align 4, !dbg !17155
  %call724 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %394, %struct.rtx_def* %395, i32 %397, i32 %399), !dbg !17156
  br label %if.end725, !dbg !17157

if.end725:                                        ; preds = %if.end721, %land.lhs.true638, %if.end636
  %400 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !17158
  %tobool726 = icmp ne i32 %400, 0, !dbg !17158
  br i1 %tobool726, label %if.then727, label %if.end729, !dbg !17160

if.then727:                                       ; preds = %if.end725
  %401 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17161
  %call728 = call %struct.rtx_def* @get_insns(), !dbg !17162
  call void @copy_reg_eh_region_note_forward(%struct.rtx_def* %401, %struct.rtx_def* %call728, %struct.rtx_def* null), !dbg !17163
  br label %if.end729, !dbg !17163

if.end729:                                        ; preds = %if.then727, %if.end725
  %call730 = call %struct.rtx_def* @get_insns(), !dbg !17164
  %402 = load %struct.rtx_def**, %struct.rtx_def*** %where, align 8, !dbg !17165
  store %struct.rtx_def* %call730, %struct.rtx_def** %402, align 8, !dbg !17166
  call void @end_sequence(), !dbg !17167
  %403 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv_reg, align 8, !dbg !17168
  %tobool731 = icmp ne %struct.rtx_def* %403, null, !dbg !17168
  br i1 %tobool731, label %if.then732, label %if.end735, !dbg !17170

if.then732:                                       ; preds = %if.end729
  %404 = load %struct.rtx_def*, %struct.rtx_def** %oldequiv, align 8, !dbg !17171
  %405 = load i32, i32* %j.addr, align 4, !dbg !17172
  %idxprom733 = sext i32 %405 to i64, !dbg !17173
  %arrayidx734 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom733, !dbg !17173
  store %struct.rtx_def* %404, %struct.rtx_def** %arrayidx734, align 8, !dbg !17174
  br label %if.end735, !dbg !17173

if.end735:                                        ; preds = %if.then732, %if.end729
  ret void, !dbg !17175
}

declare dso_local i32 @dead_or_set_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @delete_output_reload(%struct.rtx_def* %insn, i32 %j, i32 %last_reload_reg, %struct.rtx_def* %new_reload_reg) #0 !dbg !17176 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %j.addr = alloca i32, align 4
  %last_reload_reg.addr = alloca i32, align 4
  %new_reload_reg.addr = alloca %struct.rtx_def*, align 8
  %output_reload_insn = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %k = alloca i32, align 4
  %n_occurrences = alloca i32, align 4
  %n_inherited = alloca i32, align 4
  %i1 = alloca %struct.rtx_def*, align 8
  %substed = alloca %struct.rtx_def*, align 8
  %reg2 = alloca %struct.rtx_def*, align 8
  %i2 = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %set349 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !17179, metadata !DIExpression()), !dbg !17180
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !17181, metadata !DIExpression()), !dbg !17182
  store i32 %last_reload_reg, i32* %last_reload_reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last_reload_reg.addr, metadata !17183, metadata !DIExpression()), !dbg !17184
  store %struct.rtx_def* %new_reload_reg, %struct.rtx_def** %new_reload_reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_reload_reg.addr, metadata !17185, metadata !DIExpression()), !dbg !17186
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %output_reload_insn, metadata !17187, metadata !DIExpression()), !dbg !17188
  %0 = load i32, i32* %last_reload_reg.addr, align 4, !dbg !17189
  %idxprom = sext i32 %0 to i64, !dbg !17190
  %arrayidx = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom, !dbg !17190
  %1 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !17190
  store %struct.rtx_def* %1, %struct.rtx_def** %output_reload_insn, align 8, !dbg !17188
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg, metadata !17191, metadata !DIExpression()), !dbg !17192
  %2 = load i32, i32* %last_reload_reg.addr, align 4, !dbg !17193
  %idxprom1 = sext i32 %2 to i64, !dbg !17194
  %arrayidx2 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i64 0, i64 %idxprom1, !dbg !17194
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2, align 8, !dbg !17194
  store %struct.rtx_def* %3, %struct.rtx_def** %reg, align 8, !dbg !17192
  call void @llvm.dbg.declare(metadata i32* %k, metadata !17195, metadata !DIExpression()), !dbg !17196
  call void @llvm.dbg.declare(metadata i32* %n_occurrences, metadata !17197, metadata !DIExpression()), !dbg !17198
  call void @llvm.dbg.declare(metadata i32* %n_inherited, metadata !17199, metadata !DIExpression()), !dbg !17200
  store i32 0, i32* %n_inherited, align 4, !dbg !17200
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %i1, metadata !17201, metadata !DIExpression()), !dbg !17202
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %substed, metadata !17203, metadata !DIExpression()), !dbg !17204
  %4 = load %struct.rtx_def*, %struct.rtx_def** %output_reload_insn, align 8, !dbg !17205
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !17205
  %bf.load = load i32, i32* %5, align 8, !dbg !17205
  %bf.lshr = lshr i32 %bf.load, 27, !dbg !17205
  %bf.clear = and i32 %bf.lshr, 1, !dbg !17205
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !17205
  br i1 %tobool, label %if.then, label %if.end, !dbg !17207

if.then:                                          ; preds = %entry
  br label %if.end435, !dbg !17208

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !17209

while.cond:                                       ; preds = %while.body, %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17210
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !17210
  %bf.load3 = load i32, i32* %7, align 8, !dbg !17210
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !17210
  %cmp = icmp eq i32 %bf.clear4, 39, !dbg !17211
  br i1 %cmp, label %while.body, label %while.end, !dbg !17209

while.body:                                       ; preds = %while.cond
  %8 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17212
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !17212
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !17212
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !17212
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !17212
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !17212
  store %struct.rtx_def* %9, %struct.rtx_def** %reg, align 8, !dbg !17213
  br label %while.cond, !dbg !17209, !llvm.loop !17214

while.end:                                        ; preds = %while.cond
  %10 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !17215
  %11 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17216
  %call = call i32 @rhs_regno(%struct.rtx_def* %11), !dbg !17216
  %idxprom6 = zext i32 %call to i64, !dbg !17215
  %arrayidx7 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %10, i64 %idxprom6, !dbg !17215
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx7, align 8, !dbg !17215
  store %struct.rtx_def* %12, %struct.rtx_def** %substed, align 8, !dbg !17217
  %13 = load i32, i32* @n_reloads, align 4, !dbg !17218
  %sub = sub nsw i32 %13, 1, !dbg !17220
  store i32 %sub, i32* %k, align 4, !dbg !17221
  br label %for.cond, !dbg !17222

for.cond:                                         ; preds = %for.inc, %while.end
  %14 = load i32, i32* %k, align 4, !dbg !17223
  %cmp8 = icmp sge i32 %14, 0, !dbg !17225
  br i1 %cmp8, label %for.body, label %for.end, !dbg !17226

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg2, metadata !17227, metadata !DIExpression()), !dbg !17229
  %15 = load i32, i32* %k, align 4, !dbg !17230
  %idxprom9 = sext i32 %15 to i64, !dbg !17231
  %arrayidx10 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom9, !dbg !17231
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx10, i32 0, i32 0, !dbg !17232
  %16 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !17232
  store %struct.rtx_def* %16, %struct.rtx_def** %reg2, align 8, !dbg !17229
  %17 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8, !dbg !17233
  %tobool11 = icmp ne %struct.rtx_def* %17, null, !dbg !17233
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !17235

if.then12:                                        ; preds = %for.body
  br label %for.inc, !dbg !17236

if.end13:                                         ; preds = %for.body
  %18 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8, !dbg !17237
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !17237
  %bf.load14 = load i32, i32* %19, align 8, !dbg !17237
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !17237
  %cmp16 = icmp eq i32 %bf.clear15, 43, !dbg !17237
  br i1 %cmp16, label %if.then20, label %lor.lhs.false, !dbg !17239

lor.lhs.false:                                    ; preds = %if.end13
  %20 = load i32, i32* %k, align 4, !dbg !17240
  %idxprom17 = sext i32 %20 to i64, !dbg !17241
  %arrayidx18 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom17, !dbg !17241
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx18, align 8, !dbg !17241
  %tobool19 = icmp ne %struct.rtx_def* %21, null, !dbg !17241
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !17242

if.then20:                                        ; preds = %lor.lhs.false, %if.end13
  %22 = load i32, i32* %k, align 4, !dbg !17243
  %idxprom21 = sext i32 %22 to i64, !dbg !17244
  %arrayidx22 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom21, !dbg !17244
  %in_reg = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx22, i32 0, i32 8, !dbg !17245
  %23 = load %struct.rtx_def*, %struct.rtx_def** %in_reg, align 8, !dbg !17245
  store %struct.rtx_def* %23, %struct.rtx_def** %reg2, align 8, !dbg !17246
  br label %if.end23, !dbg !17247

if.end23:                                         ; preds = %if.then20, %lor.lhs.false
  br label %while.cond24, !dbg !17248

while.cond24:                                     ; preds = %while.body28, %if.end23
  %24 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8, !dbg !17249
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !17249
  %bf.load25 = load i32, i32* %25, align 8, !dbg !17249
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !17249
  %cmp27 = icmp eq i32 %bf.clear26, 39, !dbg !17250
  br i1 %cmp27, label %while.body28, label %while.end33, !dbg !17248

while.body28:                                     ; preds = %while.cond24
  %26 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8, !dbg !17251
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !17251
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !17251
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !17251
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !17251
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !17251
  store %struct.rtx_def* %27, %struct.rtx_def** %reg2, align 8, !dbg !17252
  br label %while.cond24, !dbg !17248, !llvm.loop !17253

while.end33:                                      ; preds = %while.cond24
  %28 = load %struct.rtx_def*, %struct.rtx_def** %reg2, align 8, !dbg !17254
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17256
  %call34 = call i32 @rtx_equal_p(%struct.rtx_def* %28, %struct.rtx_def* %29), !dbg !17257
  %tobool35 = icmp ne i32 %call34, 0, !dbg !17257
  br i1 %tobool35, label %if.then36, label %if.end49, !dbg !17258

if.then36:                                        ; preds = %while.end33
  %30 = load i32, i32* %k, align 4, !dbg !17259
  %idxprom37 = sext i32 %30 to i64, !dbg !17262
  %arrayidx38 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom37, !dbg !17262
  %31 = load i8, i8* %arrayidx38, align 1, !dbg !17262
  %conv = sext i8 %31 to i32, !dbg !17262
  %tobool39 = icmp ne i32 %conv, 0, !dbg !17262
  br i1 %tobool39, label %if.then47, label %lor.lhs.false40, !dbg !17263

lor.lhs.false40:                                  ; preds = %if.then36
  %32 = load i32, i32* %k, align 4, !dbg !17264
  %idxprom41 = sext i32 %32 to i64, !dbg !17265
  %arrayidx42 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom41, !dbg !17265
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx42, align 8, !dbg !17265
  %tobool43 = icmp ne %struct.rtx_def* %33, null, !dbg !17265
  br i1 %tobool43, label %if.then47, label %lor.lhs.false44, !dbg !17266

lor.lhs.false44:                                  ; preds = %lor.lhs.false40
  %34 = load i32, i32* %k, align 4, !dbg !17267
  %35 = load i32, i32* %j.addr, align 4, !dbg !17268
  %cmp45 = icmp eq i32 %34, %35, !dbg !17269
  br i1 %cmp45, label %if.then47, label %if.else, !dbg !17270

if.then47:                                        ; preds = %lor.lhs.false44, %lor.lhs.false40, %if.then36
  %36 = load i32, i32* %n_inherited, align 4, !dbg !17271
  %inc = add nsw i32 %36, 1, !dbg !17271
  store i32 %inc, i32* %n_inherited, align 4, !dbg !17271
  br label %if.end48, !dbg !17272

if.else:                                          ; preds = %lor.lhs.false44
  br label %if.end435, !dbg !17273

if.end48:                                         ; preds = %if.then47
  br label %if.end49, !dbg !17274

if.end49:                                         ; preds = %if.end48, %while.end33
  br label %for.inc, !dbg !17275

for.inc:                                          ; preds = %if.end49, %if.then12
  %37 = load i32, i32* %k, align 4, !dbg !17276
  %dec = add nsw i32 %37, -1, !dbg !17276
  store i32 %dec, i32* %k, align 4, !dbg !17276
  br label %for.cond, !dbg !17277, !llvm.loop !17278

for.end:                                          ; preds = %for.cond
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17280
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !17280
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !17280
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 5, !dbg !17280
  %rt_rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !17280
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !17280
  %40 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17281
  %call54 = call i32 @count_occurrences(%struct.rtx_def* %39, %struct.rtx_def* %40, i32 0), !dbg !17282
  store i32 %call54, i32* %n_occurrences, align 4, !dbg !17283
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17284
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !17284
  %bf.load55 = load i32, i32* %42, align 8, !dbg !17284
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !17284
  %cmp57 = icmp eq i32 %bf.clear56, 10, !dbg !17284
  br i1 %cmp57, label %land.lhs.true, label %if.end70, !dbg !17286

land.lhs.true:                                    ; preds = %for.end
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17287
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !17287
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !17287
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 8, !dbg !17287
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !17287
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !17287
  %tobool63 = icmp ne %struct.rtx_def* %44, null, !dbg !17287
  br i1 %tobool63, label %if.then64, label %if.end70, !dbg !17288

if.then64:                                        ; preds = %land.lhs.true
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17289
  %u65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !17289
  %fld66 = bitcast %union.u* %u65 to [1 x %union.rtunion_def]*, !dbg !17289
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i64 0, i64 8, !dbg !17289
  %rt_rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**, !dbg !17289
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx68, align 8, !dbg !17289
  %47 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17290
  %call69 = call i32 @count_occurrences(%struct.rtx_def* %46, %struct.rtx_def* %47, i32 0), !dbg !17291
  %48 = load i32, i32* %n_occurrences, align 4, !dbg !17292
  %add = add nsw i32 %48, %call69, !dbg !17292
  store i32 %add, i32* %n_occurrences, align 4, !dbg !17292
  br label %if.end70, !dbg !17293

if.end70:                                         ; preds = %if.then64, %land.lhs.true, %for.end
  %49 = load %struct.rtx_def*, %struct.rtx_def** %substed, align 8, !dbg !17294
  %tobool71 = icmp ne %struct.rtx_def* %49, null, !dbg !17294
  br i1 %tobool71, label %if.then72, label %if.end80, !dbg !17296

if.then72:                                        ; preds = %if.end70
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17297
  %u73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !17297
  %fld74 = bitcast %union.u* %u73 to [1 x %union.rtunion_def]*, !dbg !17297
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i64 0, i64 5, !dbg !17297
  %rt_rtx76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**, !dbg !17297
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx76, align 8, !dbg !17297
  %52 = load %struct.rtx_def*, %struct.rtx_def** %substed, align 8, !dbg !17298
  %call77 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %52, i32 0, %struct.rtx_def* null), !dbg !17299
  %call78 = call i32 @count_occurrences(%struct.rtx_def* %51, %struct.rtx_def* %call77, i32 0), !dbg !17300
  %53 = load i32, i32* %n_occurrences, align 4, !dbg !17301
  %add79 = add nsw i32 %53, %call78, !dbg !17301
  store i32 %add79, i32* %n_occurrences, align 4, !dbg !17301
  br label %if.end80, !dbg !17302

if.end80:                                         ; preds = %if.then72, %if.end70
  %54 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_alt_mem_list, align 8, !dbg !17303
  %55 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17305
  %call81 = call i32 @rhs_regno(%struct.rtx_def* %55), !dbg !17305
  %idxprom82 = zext i32 %call81 to i64, !dbg !17303
  %arrayidx83 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %54, i64 %idxprom82, !dbg !17303
  %56 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx83, align 8, !dbg !17303
  store %struct.rtx_def* %56, %struct.rtx_def** %i1, align 8, !dbg !17306
  br label %for.cond84, !dbg !17307

for.cond84:                                       ; preds = %for.inc103, %if.end80
  %57 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17308
  %tobool85 = icmp ne %struct.rtx_def* %57, null, !dbg !17310
  br i1 %tobool85, label %for.body86, label %for.end108, !dbg !17310

for.body86:                                       ; preds = %for.cond84
  %58 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17311
  %u87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !17311
  %fld88 = bitcast %union.u* %u87 to [1 x %union.rtunion_def]*, !dbg !17311
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i64 0, i64 0, !dbg !17311
  %rt_rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**, !dbg !17311
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx90, align 8, !dbg !17311
  %60 = load %struct.rtx_def*, %struct.rtx_def** %substed, align 8, !dbg !17311
  %call91 = call i32 @rtx_equal_p(%struct.rtx_def* %59, %struct.rtx_def* %60), !dbg !17311
  %tobool92 = icmp ne i32 %call91, 0, !dbg !17311
  br i1 %tobool92, label %cond.true, label %cond.false, !dbg !17311

cond.true:                                        ; preds = %for.body86
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 8543, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !17311
  br label %cond.end, !dbg !17311

cond.false:                                       ; preds = %for.body86
  br label %cond.end, !dbg !17311

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !17311
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17313
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !17313
  %fld94 = bitcast %union.u* %u93 to [1 x %union.rtunion_def]*, !dbg !17313
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 5, !dbg !17313
  %rt_rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**, !dbg !17313
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx96, align 8, !dbg !17313
  %63 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17314
  %u97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1, !dbg !17314
  %fld98 = bitcast %union.u* %u97 to [1 x %union.rtunion_def]*, !dbg !17314
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i64 0, i64 0, !dbg !17314
  %rt_rtx100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtx_def**, !dbg !17314
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx100, align 8, !dbg !17314
  %call101 = call i32 @count_occurrences(%struct.rtx_def* %62, %struct.rtx_def* %64, i32 0), !dbg !17315
  %65 = load i32, i32* %n_occurrences, align 4, !dbg !17316
  %add102 = add nsw i32 %65, %call101, !dbg !17316
  store i32 %add102, i32* %n_occurrences, align 4, !dbg !17316
  br label %for.inc103, !dbg !17317

for.inc103:                                       ; preds = %cond.end
  %66 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17318
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !17318
  %fld105 = bitcast %union.u* %u104 to [1 x %union.rtunion_def]*, !dbg !17318
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i64 0, i64 1, !dbg !17318
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !17318
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !17318
  store %struct.rtx_def* %67, %struct.rtx_def** %i1, align 8, !dbg !17319
  br label %for.cond84, !dbg !17320, !llvm.loop !17321

for.end108:                                       ; preds = %for.cond84
  %68 = load i32, i32* %n_occurrences, align 4, !dbg !17323
  %69 = load i32, i32* %n_inherited, align 4, !dbg !17325
  %cmp109 = icmp sgt i32 %68, %69, !dbg !17326
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !17327

if.then111:                                       ; preds = %for.end108
  br label %if.end435, !dbg !17328

if.end112:                                        ; preds = %for.end108
  %70 = load %struct.rtx_def*, %struct.rtx_def** %output_reload_insn, align 8, !dbg !17329
  %u113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !17329
  %fld114 = bitcast %union.u* %u113 to [1 x %union.rtunion_def]*, !dbg !17329
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i64 0, i64 2, !dbg !17329
  %rt_rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**, !dbg !17329
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx116, align 8, !dbg !17329
  store %struct.rtx_def* %71, %struct.rtx_def** %i1, align 8, !dbg !17331
  br label %for.cond117, !dbg !17332

for.cond117:                                      ; preds = %for.inc189, %if.end112
  %72 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17333
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17335
  %cmp118 = icmp ne %struct.rtx_def* %72, %73, !dbg !17336
  br i1 %cmp118, label %for.body120, label %for.end194, !dbg !17337

for.body120:                                      ; preds = %for.cond117
  %74 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17338
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !17338
  %bf.load121 = load i32, i32* %75, align 8, !dbg !17338
  %bf.clear122 = and i32 %bf.load121, 65535, !dbg !17338
  %cmp123 = icmp eq i32 %bf.clear122, 13, !dbg !17338
  br i1 %cmp123, label %land.lhs.true125, label %if.end132, !dbg !17338

land.lhs.true125:                                 ; preds = %for.body120
  %76 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17338
  %u126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !17338
  %fld127 = bitcast %union.u* %u126 to [1 x %union.rtunion_def]*, !dbg !17338
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i64 0, i64 5, !dbg !17338
  %rt_int = bitcast %union.rtunion_def* %arrayidx128 to i32*, !dbg !17338
  %77 = load i32, i32* %rt_int, align 8, !dbg !17338
  %cmp129 = icmp eq i32 %77, 10, !dbg !17338
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !17341

if.then131:                                       ; preds = %land.lhs.true125
  br label %if.end435, !dbg !17342

if.end132:                                        ; preds = %land.lhs.true125, %for.body120
  %78 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17343
  %79 = bitcast %struct.rtx_def* %78 to i32*, !dbg !17343
  %bf.load133 = load i32, i32* %79, align 8, !dbg !17343
  %bf.clear134 = and i32 %bf.load133, 65535, !dbg !17343
  %cmp135 = icmp eq i32 %bf.clear134, 8, !dbg !17343
  br i1 %cmp135, label %land.lhs.true142, label %lor.lhs.false137, !dbg !17345

lor.lhs.false137:                                 ; preds = %if.end132
  %80 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17346
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !17346
  %bf.load138 = load i32, i32* %81, align 8, !dbg !17346
  %bf.clear139 = and i32 %bf.load138, 65535, !dbg !17346
  %cmp140 = icmp eq i32 %bf.clear139, 10, !dbg !17346
  br i1 %cmp140, label %land.lhs.true142, label %if.end188, !dbg !17347

land.lhs.true142:                                 ; preds = %lor.lhs.false137, %if.end132
  %82 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17348
  %83 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17349
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !17349
  %fld144 = bitcast %union.u* %u143 to [1 x %union.rtunion_def]*, !dbg !17349
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i64 0, i64 5, !dbg !17349
  %rt_rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**, !dbg !17349
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx146, align 8, !dbg !17349
  %call147 = call i32 @reg_mentioned_p(%struct.rtx_def* %82, %struct.rtx_def* %84), !dbg !17350
  %tobool148 = icmp ne i32 %call147, 0, !dbg !17350
  br i1 %tobool148, label %if.then149, label %if.end188, !dbg !17351

if.then149:                                       ; preds = %land.lhs.true142
  br label %while.cond150, !dbg !17352

while.cond150:                                    ; preds = %while.body163, %if.then149
  %85 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17354
  %86 = bitcast %struct.rtx_def* %85 to i32*, !dbg !17354
  %bf.load151 = load i32, i32* %86, align 8, !dbg !17354
  %bf.clear152 = and i32 %bf.load151, 65535, !dbg !17354
  %cmp153 = icmp eq i32 %bf.clear152, 8, !dbg !17354
  br i1 %cmp153, label %land.rhs, label %land.end, !dbg !17355

land.rhs:                                         ; preds = %while.cond150
  %87 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17356
  %u155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1, !dbg !17356
  %fld156 = bitcast %union.u* %u155 to [1 x %union.rtunion_def]*, !dbg !17356
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i64 0, i64 5, !dbg !17356
  %rt_rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**, !dbg !17356
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx158, align 8, !dbg !17356
  %89 = bitcast %struct.rtx_def* %88 to i32*, !dbg !17356
  %bf.load159 = load i32, i32* %89, align 8, !dbg !17356
  %bf.clear160 = and i32 %bf.load159, 65535, !dbg !17356
  %cmp161 = icmp eq i32 %bf.clear160, 24, !dbg !17357
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond150
  %90 = phi i1 [ false, %while.cond150 ], [ %cmp161, %land.rhs ], !dbg !17358
  br i1 %90, label %while.body163, label %while.end180, !dbg !17352

while.body163:                                    ; preds = %land.end
  %91 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17359
  %92 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17361
  %u164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !17361
  %fld165 = bitcast %union.u* %u164 to [1 x %union.rtunion_def]*, !dbg !17361
  %arrayidx166 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld165, i64 0, i64 5, !dbg !17361
  %rt_rtx167 = bitcast %union.rtunion_def* %arrayidx166 to %struct.rtx_def**, !dbg !17361
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx167, align 8, !dbg !17361
  %u168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1, !dbg !17361
  %fld169 = bitcast %union.u* %u168 to [1 x %union.rtunion_def]*, !dbg !17361
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i64 0, i64 0, !dbg !17361
  %rt_rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**, !dbg !17361
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx171, align 8, !dbg !17361
  %call172 = call i32 @rtx_equal_p(%struct.rtx_def* %91, %struct.rtx_def* %94), !dbg !17362
  %cmp173 = icmp ne i32 %call172, 0, !dbg !17363
  %conv174 = zext i1 %cmp173 to i32, !dbg !17363
  %95 = load i32, i32* %n_occurrences, align 4, !dbg !17364
  %add175 = add nsw i32 %95, %conv174, !dbg !17364
  store i32 %add175, i32* %n_occurrences, align 4, !dbg !17364
  %96 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17365
  %u176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1, !dbg !17365
  %fld177 = bitcast %union.u* %u176 to [1 x %union.rtunion_def]*, !dbg !17365
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i64 0, i64 2, !dbg !17365
  %rt_rtx179 = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtx_def**, !dbg !17365
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx179, align 8, !dbg !17365
  store %struct.rtx_def* %97, %struct.rtx_def** %i1, align 8, !dbg !17366
  br label %while.cond150, !dbg !17352, !llvm.loop !17367

while.end180:                                     ; preds = %land.end
  %98 = load i32, i32* %n_occurrences, align 4, !dbg !17369
  %99 = load i32, i32* %n_inherited, align 4, !dbg !17371
  %cmp181 = icmp sle i32 %98, %99, !dbg !17372
  br i1 %cmp181, label %land.lhs.true183, label %if.end187, !dbg !17373

land.lhs.true183:                                 ; preds = %while.end180
  %100 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17374
  %101 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17375
  %cmp184 = icmp eq %struct.rtx_def* %100, %101, !dbg !17376
  br i1 %cmp184, label %if.then186, label %if.end187, !dbg !17377

if.then186:                                       ; preds = %land.lhs.true183
  br label %for.end194, !dbg !17378

if.end187:                                        ; preds = %land.lhs.true183, %while.end180
  br label %if.end435, !dbg !17379

if.end188:                                        ; preds = %land.lhs.true142, %lor.lhs.false137
  br label %for.inc189, !dbg !17380

for.inc189:                                       ; preds = %if.end188
  %102 = load %struct.rtx_def*, %struct.rtx_def** %i1, align 8, !dbg !17381
  %u190 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1, !dbg !17381
  %fld191 = bitcast %union.u* %u190 to [1 x %union.rtunion_def]*, !dbg !17381
  %arrayidx192 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld191, i64 0, i64 2, !dbg !17381
  %rt_rtx193 = bitcast %union.rtunion_def* %arrayidx192 to %struct.rtx_def**, !dbg !17381
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx193, align 8, !dbg !17381
  store %struct.rtx_def* %103, %struct.rtx_def** %i1, align 8, !dbg !17382
  br label %for.cond117, !dbg !17383, !llvm.loop !17384

for.end194:                                       ; preds = %if.then186, %for.cond117
  %104 = load i32, i32* %last_reload_reg.addr, align 4, !dbg !17386
  %idxprom195 = sext i32 %104 to i64, !dbg !17388
  %arrayidx196 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom195, !dbg !17388
  %105 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17389
  %106 = bitcast %struct.rtx_def* %105 to i32*, !dbg !17389
  %bf.load197 = load i32, i32* %106, align 8, !dbg !17389
  %bf.lshr198 = lshr i32 %bf.load197, 16, !dbg !17389
  %bf.clear199 = and i32 %bf.lshr198, 255, !dbg !17389
  %idxprom200 = zext i32 %bf.clear199 to i64, !dbg !17388
  %arrayidx201 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx196, i64 0, i64 %idxprom200, !dbg !17388
  %107 = load i8, i8* %arrayidx201, align 1, !dbg !17388
  %conv202 = zext i8 %107 to i32, !dbg !17388
  store i32 %conv202, i32* %k, align 4, !dbg !17390
  br label %for.cond203, !dbg !17391

for.cond203:                                      ; preds = %for.body207, %for.end194
  %108 = load i32, i32* %k, align 4, !dbg !17392
  %dec204 = add nsw i32 %108, -1, !dbg !17392
  store i32 %dec204, i32* %k, align 4, !dbg !17392
  %cmp205 = icmp sgt i32 %108, 0, !dbg !17394
  br i1 %cmp205, label %for.body207, label %for.end214, !dbg !17395

for.body207:                                      ; preds = %for.cond203
  %109 = load i32, i32* %last_reload_reg.addr, align 4, !dbg !17396
  %110 = load i32, i32* %k, align 4, !dbg !17398
  %add208 = add nsw i32 %109, %110, !dbg !17399
  %idxprom209 = sext i32 %add208 to i64, !dbg !17400
  %arrayidx210 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_store, i64 0, i64 %idxprom209, !dbg !17400
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx210, align 8, !dbg !17401
  %111 = load i32, i32* %last_reload_reg.addr, align 4, !dbg !17402
  %112 = load i32, i32* %k, align 4, !dbg !17403
  %add211 = add nsw i32 %111, %112, !dbg !17404
  %idxprom212 = sext i32 %add211 to i64, !dbg !17405
  %arrayidx213 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @spill_reg_stored_to, i64 0, i64 %idxprom212, !dbg !17405
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx213, align 8, !dbg !17406
  br label %for.cond203, !dbg !17407, !llvm.loop !17408

for.end214:                                       ; preds = %for.cond203
  %113 = load i32, i32* %j.addr, align 4, !dbg !17410
  %idxprom215 = sext i32 %113 to i64, !dbg !17412
  %arrayidx216 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom215, !dbg !17412
  %out = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx216, i32 0, i32 1, !dbg !17413
  %114 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !17413
  %115 = load i32, i32* %j.addr, align 4, !dbg !17414
  %idxprom217 = sext i32 %115 to i64, !dbg !17415
  %arrayidx218 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom217, !dbg !17415
  %in219 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx218, i32 0, i32 0, !dbg !17416
  %116 = load %struct.rtx_def*, %struct.rtx_def** %in219, align 8, !dbg !17416
  %cmp220 = icmp ne %struct.rtx_def* %114, %116, !dbg !17417
  br i1 %cmp220, label %land.lhs.true222, label %if.else433, !dbg !17418

land.lhs.true222:                                 ; preds = %for.end214
  %117 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !17419
  %118 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17419
  %call223 = call i32 @rhs_regno(%struct.rtx_def* %118), !dbg !17419
  %idxprom224 = zext i32 %call223 to i64, !dbg !17419
  %arrayidx225 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %117, i64 %idxprom224, !dbg !17419
  %deaths = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %arrayidx225, i32 0, i32 1, !dbg !17419
  %119 = load i32, i32* %deaths, align 4, !dbg !17419
  %cmp226 = icmp eq i32 %119, 1, !dbg !17420
  br i1 %cmp226, label %land.lhs.true228, label %if.else433, !dbg !17421

land.lhs.true228:                                 ; preds = %land.lhs.true222
  %120 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17422
  %call229 = call i32 @rhs_regno(%struct.rtx_def* %120), !dbg !17422
  %call230 = call i32 @REG_N_SETS(i32 %call229), !dbg !17423
  %cmp231 = icmp eq i32 %call230, 1, !dbg !17424
  br i1 %cmp231, label %land.lhs.true233, label %if.else433, !dbg !17425

land.lhs.true233:                                 ; preds = %land.lhs.true228
  %121 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !17426
  %122 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17426
  %call234 = call i32 @rhs_regno(%struct.rtx_def* %122), !dbg !17426
  %idxprom235 = zext i32 %call234 to i64, !dbg !17426
  %arrayidx236 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %121, i64 %idxprom235, !dbg !17426
  %basic_block = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %arrayidx236, i32 0, i32 6, !dbg !17426
  %123 = load i32, i32* %basic_block, align 4, !dbg !17426
  %cmp237 = icmp sge i32 %123, 2, !dbg !17427
  br i1 %cmp237, label %land.lhs.true239, label %if.else433, !dbg !17428

land.lhs.true239:                                 ; preds = %land.lhs.true233
  %124 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17429
  %125 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17430
  %call240 = call i32 @rhs_regno(%struct.rtx_def* %125), !dbg !17430
  %call241 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %124, i32 1, i32 %call240), !dbg !17431
  %tobool242 = icmp ne %struct.rtx_def* %call241, null, !dbg !17431
  br i1 %tobool242, label %if.then243, label %if.else433, !dbg !17432

if.then243:                                       ; preds = %land.lhs.true239
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %i2, metadata !17433, metadata !DIExpression()), !dbg !17435
  %126 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17436
  %u244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1, !dbg !17436
  %fld245 = bitcast %union.u* %u244 to [1 x %union.rtunion_def]*, !dbg !17436
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i64 0, i64 1, !dbg !17436
  %rt_rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**, !dbg !17436
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx247, align 8, !dbg !17436
  store %struct.rtx_def* %127, %struct.rtx_def** %i2, align 8, !dbg !17438
  br label %for.cond248, !dbg !17439

for.cond248:                                      ; preds = %for.inc336, %if.then243
  %128 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17440
  %tobool249 = icmp ne %struct.rtx_def* %128, null, !dbg !17442
  br i1 %tobool249, label %for.body250, label %for.end341, !dbg !17442

for.body250:                                      ; preds = %for.cond248
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !17443, metadata !DIExpression()), !dbg !17445
  %129 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17446
  %130 = bitcast %struct.rtx_def* %129 to i32*, !dbg !17446
  %bf.load251 = load i32, i32* %130, align 8, !dbg !17446
  %bf.clear252 = and i32 %bf.load251, 65535, !dbg !17446
  %cmp253 = icmp eq i32 %bf.clear252, 8, !dbg !17446
  br i1 %cmp253, label %cond.true270, label %lor.lhs.false255, !dbg !17446

lor.lhs.false255:                                 ; preds = %for.body250
  %131 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17446
  %132 = bitcast %struct.rtx_def* %131 to i32*, !dbg !17446
  %bf.load256 = load i32, i32* %132, align 8, !dbg !17446
  %bf.clear257 = and i32 %bf.load256, 65535, !dbg !17446
  %cmp258 = icmp eq i32 %bf.clear257, 7, !dbg !17446
  br i1 %cmp258, label %cond.true270, label %lor.lhs.false260, !dbg !17446

lor.lhs.false260:                                 ; preds = %lor.lhs.false255
  %133 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17446
  %134 = bitcast %struct.rtx_def* %133 to i32*, !dbg !17446
  %bf.load261 = load i32, i32* %134, align 8, !dbg !17446
  %bf.clear262 = and i32 %bf.load261, 65535, !dbg !17446
  %cmp263 = icmp eq i32 %bf.clear262, 9, !dbg !17446
  br i1 %cmp263, label %cond.true270, label %lor.lhs.false265, !dbg !17446

lor.lhs.false265:                                 ; preds = %lor.lhs.false260
  %135 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17446
  %136 = bitcast %struct.rtx_def* %135 to i32*, !dbg !17446
  %bf.load266 = load i32, i32* %136, align 8, !dbg !17446
  %bf.clear267 = and i32 %bf.load266, 65535, !dbg !17446
  %cmp268 = icmp eq i32 %bf.clear267, 10, !dbg !17446
  br i1 %cmp268, label %cond.true270, label %cond.false292, !dbg !17446

cond.true270:                                     ; preds = %lor.lhs.false265, %lor.lhs.false260, %lor.lhs.false255, %for.body250
  %137 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17446
  %u271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1, !dbg !17446
  %fld272 = bitcast %union.u* %u271 to [1 x %union.rtunion_def]*, !dbg !17446
  %arrayidx273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld272, i64 0, i64 5, !dbg !17446
  %rt_rtx274 = bitcast %union.rtunion_def* %arrayidx273 to %struct.rtx_def**, !dbg !17446
  %138 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx274, align 8, !dbg !17446
  %139 = bitcast %struct.rtx_def* %138 to i32*, !dbg !17446
  %bf.load275 = load i32, i32* %139, align 8, !dbg !17446
  %bf.clear276 = and i32 %bf.load275, 65535, !dbg !17446
  %cmp277 = icmp eq i32 %bf.clear276, 23, !dbg !17446
  br i1 %cmp277, label %cond.true279, label %cond.false284, !dbg !17446

cond.true279:                                     ; preds = %cond.true270
  %140 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17446
  %u280 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1, !dbg !17446
  %fld281 = bitcast %union.u* %u280 to [1 x %union.rtunion_def]*, !dbg !17446
  %arrayidx282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld281, i64 0, i64 5, !dbg !17446
  %rt_rtx283 = bitcast %union.rtunion_def* %arrayidx282 to %struct.rtx_def**, !dbg !17446
  %141 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx283, align 8, !dbg !17446
  br label %cond.end290, !dbg !17446

cond.false284:                                    ; preds = %cond.true270
  %142 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17446
  %143 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17446
  %u285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1, !dbg !17446
  %fld286 = bitcast %union.u* %u285 to [1 x %union.rtunion_def]*, !dbg !17446
  %arrayidx287 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld286, i64 0, i64 5, !dbg !17446
  %rt_rtx288 = bitcast %union.rtunion_def* %arrayidx287 to %struct.rtx_def**, !dbg !17446
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx288, align 8, !dbg !17446
  %call289 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %142, %struct.rtx_def* %144), !dbg !17446
  br label %cond.end290, !dbg !17446

cond.end290:                                      ; preds = %cond.false284, %cond.true279
  %cond291 = phi %struct.rtx_def* [ %141, %cond.true279 ], [ %call289, %cond.false284 ], !dbg !17446
  br label %cond.end293, !dbg !17446

cond.false292:                                    ; preds = %lor.lhs.false265
  br label %cond.end293, !dbg !17446

cond.end293:                                      ; preds = %cond.false292, %cond.end290
  %cond294 = phi %struct.rtx_def* [ %cond291, %cond.end290 ], [ null, %cond.false292 ], !dbg !17446
  store %struct.rtx_def* %cond294, %struct.rtx_def** %set, align 8, !dbg !17445
  %145 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !17447
  %cmp295 = icmp ne %struct.rtx_def* %145, null, !dbg !17449
  br i1 %cmp295, label %land.lhs.true297, label %if.end305, !dbg !17450

land.lhs.true297:                                 ; preds = %cond.end293
  %146 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !17451
  %u298 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1, !dbg !17451
  %fld299 = bitcast %union.u* %u298 to [1 x %union.rtunion_def]*, !dbg !17451
  %arrayidx300 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld299, i64 0, i64 0, !dbg !17451
  %rt_rtx301 = bitcast %union.rtunion_def* %arrayidx300 to %struct.rtx_def**, !dbg !17451
  %147 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx301, align 8, !dbg !17451
  %148 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17452
  %cmp302 = icmp eq %struct.rtx_def* %147, %148, !dbg !17453
  br i1 %cmp302, label %if.then304, label %if.end305, !dbg !17454

if.then304:                                       ; preds = %land.lhs.true297
  br label %for.inc336, !dbg !17455

if.end305:                                        ; preds = %land.lhs.true297, %cond.end293
  %149 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17456
  %150 = bitcast %struct.rtx_def* %149 to i32*, !dbg !17456
  %bf.load306 = load i32, i32* %150, align 8, !dbg !17456
  %bf.clear307 = and i32 %bf.load306, 65535, !dbg !17456
  %cmp308 = icmp eq i32 %bf.clear307, 12, !dbg !17456
  br i1 %cmp308, label %if.then315, label %lor.lhs.false310, !dbg !17458

lor.lhs.false310:                                 ; preds = %if.end305
  %151 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17459
  %152 = bitcast %struct.rtx_def* %151 to i32*, !dbg !17459
  %bf.load311 = load i32, i32* %152, align 8, !dbg !17459
  %bf.clear312 = and i32 %bf.load311, 65535, !dbg !17459
  %cmp313 = icmp eq i32 %bf.clear312, 9, !dbg !17459
  br i1 %cmp313, label %if.then315, label %if.end316, !dbg !17460

if.then315:                                       ; preds = %lor.lhs.false310, %if.end305
  br label %for.end341, !dbg !17461

if.end316:                                        ; preds = %lor.lhs.false310
  %153 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17462
  %154 = bitcast %struct.rtx_def* %153 to i32*, !dbg !17462
  %bf.load317 = load i32, i32* %154, align 8, !dbg !17462
  %bf.clear318 = and i32 %bf.load317, 65535, !dbg !17462
  %cmp319 = icmp eq i32 %bf.clear318, 8, !dbg !17462
  br i1 %cmp319, label %land.lhs.true326, label %lor.lhs.false321, !dbg !17464

lor.lhs.false321:                                 ; preds = %if.end316
  %155 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17465
  %156 = bitcast %struct.rtx_def* %155 to i32*, !dbg !17465
  %bf.load322 = load i32, i32* %156, align 8, !dbg !17465
  %bf.clear323 = and i32 %bf.load322, 65535, !dbg !17465
  %cmp324 = icmp eq i32 %bf.clear323, 10, !dbg !17465
  br i1 %cmp324, label %land.lhs.true326, label %if.end335, !dbg !17466

land.lhs.true326:                                 ; preds = %lor.lhs.false321, %if.end316
  %157 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17467
  %158 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17468
  %u327 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1, !dbg !17468
  %fld328 = bitcast %union.u* %u327 to [1 x %union.rtunion_def]*, !dbg !17468
  %arrayidx329 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld328, i64 0, i64 5, !dbg !17468
  %rt_rtx330 = bitcast %union.rtunion_def* %arrayidx329 to %struct.rtx_def**, !dbg !17468
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx330, align 8, !dbg !17468
  %call331 = call i32 @reg_mentioned_p(%struct.rtx_def* %157, %struct.rtx_def* %159), !dbg !17469
  %tobool332 = icmp ne i32 %call331, 0, !dbg !17469
  br i1 %tobool332, label %if.then333, label %if.end335, !dbg !17470

if.then333:                                       ; preds = %land.lhs.true326
  %160 = load %struct.rtx_def*, %struct.rtx_def** %output_reload_insn, align 8, !dbg !17471
  %161 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17473
  call void @delete_address_reloads(%struct.rtx_def* %160, %struct.rtx_def* %161), !dbg !17474
  %162 = load %struct.rtx_def*, %struct.rtx_def** %output_reload_insn, align 8, !dbg !17475
  %call334 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %162), !dbg !17476
  br label %if.end435, !dbg !17477

if.end335:                                        ; preds = %land.lhs.true326, %lor.lhs.false321
  br label %for.inc336, !dbg !17478

for.inc336:                                       ; preds = %if.end335, %if.then304
  %163 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17479
  %u337 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1, !dbg !17479
  %fld338 = bitcast %union.u* %u337 to [1 x %union.rtunion_def]*, !dbg !17479
  %arrayidx339 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld338, i64 0, i64 1, !dbg !17479
  %rt_rtx340 = bitcast %union.rtunion_def* %arrayidx339 to %struct.rtx_def**, !dbg !17479
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx340, align 8, !dbg !17479
  store %struct.rtx_def* %164, %struct.rtx_def** %i2, align 8, !dbg !17480
  br label %for.cond248, !dbg !17481, !llvm.loop !17482

for.end341:                                       ; preds = %if.then315, %for.cond248
  %165 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17484
  %u342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1, !dbg !17484
  %fld343 = bitcast %union.u* %u342 to [1 x %union.rtunion_def]*, !dbg !17484
  %arrayidx344 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld343, i64 0, i64 1, !dbg !17484
  %rt_rtx345 = bitcast %union.rtunion_def* %arrayidx344 to %struct.rtx_def**, !dbg !17484
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx345, align 8, !dbg !17484
  store %struct.rtx_def* %166, %struct.rtx_def** %i2, align 8, !dbg !17486
  br label %for.cond346, !dbg !17487

for.cond346:                                      ; preds = %for.inc417, %for.end341
  %167 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17488
  %tobool347 = icmp ne %struct.rtx_def* %167, null, !dbg !17490
  br i1 %tobool347, label %for.body348, label %for.end422, !dbg !17490

for.body348:                                      ; preds = %for.cond346
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set349, metadata !17491, metadata !DIExpression()), !dbg !17493
  %168 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17494
  %169 = bitcast %struct.rtx_def* %168 to i32*, !dbg !17494
  %bf.load350 = load i32, i32* %169, align 8, !dbg !17494
  %bf.clear351 = and i32 %bf.load350, 65535, !dbg !17494
  %cmp352 = icmp eq i32 %bf.clear351, 8, !dbg !17494
  br i1 %cmp352, label %cond.true369, label %lor.lhs.false354, !dbg !17494

lor.lhs.false354:                                 ; preds = %for.body348
  %170 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17494
  %171 = bitcast %struct.rtx_def* %170 to i32*, !dbg !17494
  %bf.load355 = load i32, i32* %171, align 8, !dbg !17494
  %bf.clear356 = and i32 %bf.load355, 65535, !dbg !17494
  %cmp357 = icmp eq i32 %bf.clear356, 7, !dbg !17494
  br i1 %cmp357, label %cond.true369, label %lor.lhs.false359, !dbg !17494

lor.lhs.false359:                                 ; preds = %lor.lhs.false354
  %172 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17494
  %173 = bitcast %struct.rtx_def* %172 to i32*, !dbg !17494
  %bf.load360 = load i32, i32* %173, align 8, !dbg !17494
  %bf.clear361 = and i32 %bf.load360, 65535, !dbg !17494
  %cmp362 = icmp eq i32 %bf.clear361, 9, !dbg !17494
  br i1 %cmp362, label %cond.true369, label %lor.lhs.false364, !dbg !17494

lor.lhs.false364:                                 ; preds = %lor.lhs.false359
  %174 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17494
  %175 = bitcast %struct.rtx_def* %174 to i32*, !dbg !17494
  %bf.load365 = load i32, i32* %175, align 8, !dbg !17494
  %bf.clear366 = and i32 %bf.load365, 65535, !dbg !17494
  %cmp367 = icmp eq i32 %bf.clear366, 10, !dbg !17494
  br i1 %cmp367, label %cond.true369, label %cond.false391, !dbg !17494

cond.true369:                                     ; preds = %lor.lhs.false364, %lor.lhs.false359, %lor.lhs.false354, %for.body348
  %176 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17494
  %u370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1, !dbg !17494
  %fld371 = bitcast %union.u* %u370 to [1 x %union.rtunion_def]*, !dbg !17494
  %arrayidx372 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld371, i64 0, i64 5, !dbg !17494
  %rt_rtx373 = bitcast %union.rtunion_def* %arrayidx372 to %struct.rtx_def**, !dbg !17494
  %177 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx373, align 8, !dbg !17494
  %178 = bitcast %struct.rtx_def* %177 to i32*, !dbg !17494
  %bf.load374 = load i32, i32* %178, align 8, !dbg !17494
  %bf.clear375 = and i32 %bf.load374, 65535, !dbg !17494
  %cmp376 = icmp eq i32 %bf.clear375, 23, !dbg !17494
  br i1 %cmp376, label %cond.true378, label %cond.false383, !dbg !17494

cond.true378:                                     ; preds = %cond.true369
  %179 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17494
  %u379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1, !dbg !17494
  %fld380 = bitcast %union.u* %u379 to [1 x %union.rtunion_def]*, !dbg !17494
  %arrayidx381 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld380, i64 0, i64 5, !dbg !17494
  %rt_rtx382 = bitcast %union.rtunion_def* %arrayidx381 to %struct.rtx_def**, !dbg !17494
  %180 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx382, align 8, !dbg !17494
  br label %cond.end389, !dbg !17494

cond.false383:                                    ; preds = %cond.true369
  %181 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17494
  %182 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17494
  %u384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1, !dbg !17494
  %fld385 = bitcast %union.u* %u384 to [1 x %union.rtunion_def]*, !dbg !17494
  %arrayidx386 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld385, i64 0, i64 5, !dbg !17494
  %rt_rtx387 = bitcast %union.rtunion_def* %arrayidx386 to %struct.rtx_def**, !dbg !17494
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx387, align 8, !dbg !17494
  %call388 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %181, %struct.rtx_def* %183), !dbg !17494
  br label %cond.end389, !dbg !17494

cond.end389:                                      ; preds = %cond.false383, %cond.true378
  %cond390 = phi %struct.rtx_def* [ %180, %cond.true378 ], [ %call388, %cond.false383 ], !dbg !17494
  br label %cond.end392, !dbg !17494

cond.false391:                                    ; preds = %lor.lhs.false364
  br label %cond.end392, !dbg !17494

cond.end392:                                      ; preds = %cond.false391, %cond.end389
  %cond393 = phi %struct.rtx_def* [ %cond390, %cond.end389 ], [ null, %cond.false391 ], !dbg !17494
  store %struct.rtx_def* %cond393, %struct.rtx_def** %set349, align 8, !dbg !17493
  %184 = load %struct.rtx_def*, %struct.rtx_def** %set349, align 8, !dbg !17495
  %cmp394 = icmp ne %struct.rtx_def* %184, null, !dbg !17497
  br i1 %cmp394, label %land.lhs.true396, label %if.end405, !dbg !17498

land.lhs.true396:                                 ; preds = %cond.end392
  %185 = load %struct.rtx_def*, %struct.rtx_def** %set349, align 8, !dbg !17499
  %u397 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1, !dbg !17499
  %fld398 = bitcast %union.u* %u397 to [1 x %union.rtunion_def]*, !dbg !17499
  %arrayidx399 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld398, i64 0, i64 0, !dbg !17499
  %rt_rtx400 = bitcast %union.rtunion_def* %arrayidx399 to %struct.rtx_def**, !dbg !17499
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx400, align 8, !dbg !17499
  %187 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17500
  %cmp401 = icmp eq %struct.rtx_def* %186, %187, !dbg !17501
  br i1 %cmp401, label %if.then403, label %if.end405, !dbg !17502

if.then403:                                       ; preds = %land.lhs.true396
  %188 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17503
  %189 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17505
  call void @delete_address_reloads(%struct.rtx_def* %188, %struct.rtx_def* %189), !dbg !17506
  %190 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17507
  %call404 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %190), !dbg !17508
  br label %if.end405, !dbg !17509

if.end405:                                        ; preds = %if.then403, %land.lhs.true396, %cond.end392
  %191 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17510
  %192 = bitcast %struct.rtx_def* %191 to i32*, !dbg !17510
  %bf.load406 = load i32, i32* %192, align 8, !dbg !17510
  %bf.clear407 = and i32 %bf.load406, 65535, !dbg !17510
  %cmp408 = icmp eq i32 %bf.clear407, 12, !dbg !17510
  br i1 %cmp408, label %if.then415, label %lor.lhs.false410, !dbg !17512

lor.lhs.false410:                                 ; preds = %if.end405
  %193 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17513
  %194 = bitcast %struct.rtx_def* %193 to i32*, !dbg !17513
  %bf.load411 = load i32, i32* %194, align 8, !dbg !17513
  %bf.clear412 = and i32 %bf.load411, 65535, !dbg !17513
  %cmp413 = icmp eq i32 %bf.clear412, 9, !dbg !17513
  br i1 %cmp413, label %if.then415, label %if.end416, !dbg !17514

if.then415:                                       ; preds = %lor.lhs.false410, %if.end405
  br label %for.end422, !dbg !17515

if.end416:                                        ; preds = %lor.lhs.false410
  br label %for.inc417, !dbg !17516

for.inc417:                                       ; preds = %if.end416
  %195 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !17517
  %u418 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1, !dbg !17517
  %fld419 = bitcast %union.u* %u418 to [1 x %union.rtunion_def]*, !dbg !17517
  %arrayidx420 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld419, i64 0, i64 1, !dbg !17517
  %rt_rtx421 = bitcast %union.rtunion_def* %arrayidx420 to %struct.rtx_def**, !dbg !17517
  %196 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx421, align 8, !dbg !17517
  store %struct.rtx_def* %196, %struct.rtx_def** %i2, align 8, !dbg !17518
  br label %for.cond346, !dbg !17519, !llvm.loop !17520

for.end422:                                       ; preds = %if.then415, %for.cond346
  %197 = load %struct.rtx_def*, %struct.rtx_def** %new_reload_reg.addr, align 8, !dbg !17522
  %call423 = call i32 @rhs_regno(%struct.rtx_def* %197), !dbg !17522
  %conv424 = trunc i32 %call423 to i16, !dbg !17522
  %198 = load i16*, i16** @reg_renumber, align 8, !dbg !17523
  %199 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17524
  %call425 = call i32 @rhs_regno(%struct.rtx_def* %199), !dbg !17524
  %idxprom426 = zext i32 %call425 to i64, !dbg !17523
  %arrayidx427 = getelementptr inbounds i16, i16* %198, i64 %idxprom426, !dbg !17523
  store i16 %conv424, i16* %arrayidx427, align 2, !dbg !17525
  %200 = load i8, i8* @ira_conflicts_p, align 1, !dbg !17526
  %tobool428 = icmp ne i8 %200, 0, !dbg !17526
  br i1 %tobool428, label %if.then429, label %if.end431, !dbg !17528

if.then429:                                       ; preds = %for.end422
  %201 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17529
  %call430 = call i32 @rhs_regno(%struct.rtx_def* %201), !dbg !17529
  call void @ira_mark_allocation_change(i32 %call430), !dbg !17530
  br label %if.end431, !dbg !17530

if.end431:                                        ; preds = %if.then429, %for.end422
  %202 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17531
  %call432 = call i32 @rhs_regno(%struct.rtx_def* %202), !dbg !17531
  call void @alter_reg(i32 %call432, i32 -1, i8 zeroext 0), !dbg !17532
  br label %if.end435, !dbg !17533

if.else433:                                       ; preds = %land.lhs.true239, %land.lhs.true233, %land.lhs.true228, %land.lhs.true222, %for.end214
  %203 = load %struct.rtx_def*, %struct.rtx_def** %output_reload_insn, align 8, !dbg !17534
  %204 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17536
  call void @delete_address_reloads(%struct.rtx_def* %203, %struct.rtx_def* %204), !dbg !17537
  %205 = load %struct.rtx_def*, %struct.rtx_def** %output_reload_insn, align 8, !dbg !17538
  %call434 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %205), !dbg !17539
  br label %if.end435

if.end435:                                        ; preds = %if.then, %if.else, %if.then111, %if.then131, %if.end187, %if.then333, %if.else433, %if.end431
  ret void, !dbg !17540
}

declare dso_local %struct.rtx_def* @gen_lowpart_SUBREG(i32, %struct.rtx_def*) #2

declare dso_local void @push_to_sequence(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @inc_for_reload(%struct.rtx_def* %reloadreg, %struct.rtx_def* %in, %struct.rtx_def* %value, i32 %inc_amount) #0 !dbg !17541 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %reloadreg.addr = alloca %struct.rtx_def*, align 8
  %in.addr = alloca %struct.rtx_def*, align 8
  %value.addr = alloca %struct.rtx_def*, align 8
  %inc_amount.addr = alloca i32, align 4
  %incloc = alloca %struct.rtx_def*, align 8
  %post = alloca i32, align 4
  %last = alloca %struct.rtx_def*, align 8
  %inc = alloca %struct.rtx_def*, align 8
  %add_insn = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %store = alloca %struct.rtx_def*, align 8
  %real_in = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %reloadreg, %struct.rtx_def** %reloadreg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reloadreg.addr, metadata !17544, metadata !DIExpression()), !dbg !17545
  store %struct.rtx_def* %in, %struct.rtx_def** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in.addr, metadata !17546, metadata !DIExpression()), !dbg !17547
  store %struct.rtx_def* %value, %struct.rtx_def** %value.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %value.addr, metadata !17548, metadata !DIExpression()), !dbg !17549
  store i32 %inc_amount, i32* %inc_amount.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %inc_amount.addr, metadata !17550, metadata !DIExpression()), !dbg !17551
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %incloc, metadata !17552, metadata !DIExpression()), !dbg !17553
  %0 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !17554
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !17554
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !17554
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !17554
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !17554
  %call = call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rt_rtx), !dbg !17555
  store %struct.rtx_def* %call, %struct.rtx_def** %incloc, align 8, !dbg !17553
  call void @llvm.dbg.declare(metadata i32* %post, metadata !17556, metadata !DIExpression()), !dbg !17557
  %1 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !17558
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !17558
  %bf.load = load i32, i32* %2, align 8, !dbg !17558
  %bf.clear = and i32 %bf.load, 65535, !dbg !17558
  %cmp = icmp eq i32 %bf.clear, 76, !dbg !17559
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !17560

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !17561
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !17561
  %bf.load1 = load i32, i32* %4, align 8, !dbg !17561
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !17561
  %cmp3 = icmp eq i32 %bf.clear2, 77, !dbg !17562
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !17563

lor.rhs:                                          ; preds = %lor.lhs.false
  %5 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !17564
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !17564
  %bf.load4 = load i32, i32* %6, align 8, !dbg !17564
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !17564
  %cmp6 = icmp eq i32 %bf.clear5, 79, !dbg !17565
  br label %lor.end, !dbg !17563

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32, !dbg !17563
  store i32 %lor.ext, i32* %post, align 4, !dbg !17557
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last, metadata !17566, metadata !DIExpression()), !dbg !17567
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %inc, metadata !17568, metadata !DIExpression()), !dbg !17569
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %add_insn, metadata !17570, metadata !DIExpression()), !dbg !17571
  call void @llvm.dbg.declare(metadata i32* %code, metadata !17572, metadata !DIExpression()), !dbg !17573
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %store, metadata !17574, metadata !DIExpression()), !dbg !17575
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %real_in, metadata !17576, metadata !DIExpression()), !dbg !17577
  %8 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17578
  %9 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !17579
  %cmp7 = icmp eq %struct.rtx_def* %8, %9, !dbg !17580
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !17578

cond.true:                                        ; preds = %lor.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8, !dbg !17581
  br label %cond.end, !dbg !17578

cond.false:                                       ; preds = %lor.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17582
  br label %cond.end, !dbg !17578

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %10, %cond.true ], [ %11, %cond.false ], !dbg !17578
  store %struct.rtx_def* %cond, %struct.rtx_def** %real_in, align 8, !dbg !17577
  %12 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8, !dbg !17583
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !17583
  %bf.load8 = load i32, i32* %13, align 8, !dbg !17583
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !17583
  %cmp10 = icmp eq i32 %bf.clear9, 37, !dbg !17583
  br i1 %cmp10, label %if.then, label %if.end, !dbg !17585

if.then:                                          ; preds = %cond.end
  %14 = load %struct.rtx_def**, %struct.rtx_def*** @reg_last_reload_reg, align 8, !dbg !17586
  %15 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8, !dbg !17587
  %call11 = call i32 @rhs_regno(%struct.rtx_def* %15), !dbg !17587
  %idxprom = zext i32 %call11 to i64, !dbg !17586
  %arrayidx12 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %14, i64 %idxprom, !dbg !17586
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx12, align 8, !dbg !17588
  br label %if.end, !dbg !17586

if.end:                                           ; preds = %if.then, %cond.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !17589
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !17589
  %bf.load13 = load i32, i32* %17, align 8, !dbg !17589
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !17589
  %cmp15 = icmp eq i32 %bf.clear14, 78, !dbg !17591
  br i1 %cmp15, label %if.then20, label %lor.lhs.false16, !dbg !17592

lor.lhs.false16:                                  ; preds = %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !17593
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !17593
  %bf.load17 = load i32, i32* %19, align 8, !dbg !17593
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !17593
  %cmp19 = icmp eq i32 %bf.clear18, 79, !dbg !17594
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !17595

if.then20:                                        ; preds = %lor.lhs.false16, %if.end
  %20 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !17596
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !17596
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !17596
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 1, !dbg !17596
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !17596
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !17596
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !17596
  %bf.load25 = load i32, i32* %22, align 8, !dbg !17596
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !17596
  %cmp27 = icmp eq i32 %bf.clear26, 49, !dbg !17596
  br i1 %cmp27, label %cond.false29, label %cond.true28, !dbg !17596

cond.true28:                                      ; preds = %if.then20
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 8835, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !17596
  br label %cond.end30, !dbg !17596

cond.false29:                                     ; preds = %if.then20
  br label %cond.end30, !dbg !17596

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i32 [ 0, %cond.true28 ], [ 0, %cond.false29 ], !dbg !17596
  %23 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !17598
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !17598
  %fld33 = bitcast %union.u* %u32 to [1 x %union.rtunion_def]*, !dbg !17598
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i64 0, i64 1, !dbg !17598
  %rt_rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !17598
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx35, align 8, !dbg !17598
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !17598
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !17598
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 1, !dbg !17598
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !17598
  %call40 = call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rt_rtx39), !dbg !17599
  store %struct.rtx_def* %call40, %struct.rtx_def** %inc, align 8, !dbg !17600
  br label %if.end51, !dbg !17601

if.else:                                          ; preds = %lor.lhs.false16
  %25 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !17602
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !17602
  %bf.load41 = load i32, i32* %26, align 8, !dbg !17602
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !17602
  %cmp43 = icmp eq i32 %bf.clear42, 74, !dbg !17605
  br i1 %cmp43, label %if.then48, label %lor.lhs.false44, !dbg !17606

lor.lhs.false44:                                  ; preds = %if.else
  %27 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !17607
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !17607
  %bf.load45 = load i32, i32* %28, align 8, !dbg !17607
  %bf.clear46 = and i32 %bf.load45, 65535, !dbg !17607
  %cmp47 = icmp eq i32 %bf.clear46, 76, !dbg !17608
  br i1 %cmp47, label %if.then48, label %if.end49, !dbg !17609

if.then48:                                        ; preds = %lor.lhs.false44, %if.else
  %29 = load i32, i32* %inc_amount.addr, align 4, !dbg !17610
  %sub = sub nsw i32 0, %29, !dbg !17611
  store i32 %sub, i32* %inc_amount.addr, align 4, !dbg !17612
  br label %if.end49, !dbg !17613

if.end49:                                         ; preds = %if.then48, %lor.lhs.false44
  %30 = load i32, i32* %inc_amount.addr, align 4, !dbg !17614
  %conv = sext i32 %30 to i64, !dbg !17614
  %call50 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv), !dbg !17614
  store %struct.rtx_def* %call50, %struct.rtx_def** %inc, align 8, !dbg !17615
  br label %if.end51

if.end51:                                         ; preds = %if.end49, %cond.end30
  %31 = load i32, i32* %post, align 4, !dbg !17616
  %tobool = icmp ne i32 %31, 0, !dbg !17616
  br i1 %tobool, label %land.lhs.true, label %if.end57, !dbg !17618

land.lhs.true:                                    ; preds = %if.end51
  %32 = load %struct.rtx_def*, %struct.rtx_def** %real_in, align 8, !dbg !17619
  %33 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8, !dbg !17620
  %cmp52 = icmp ne %struct.rtx_def* %32, %33, !dbg !17621
  br i1 %cmp52, label %if.then54, label %if.end57, !dbg !17622

if.then54:                                        ; preds = %land.lhs.true
  %34 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8, !dbg !17623
  %35 = load %struct.rtx_def*, %struct.rtx_def** %real_in, align 8, !dbg !17624
  %call55 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %34, %struct.rtx_def* %35), !dbg !17625
  %call56 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call55), !dbg !17626
  br label %if.end57, !dbg !17626

if.end57:                                         ; preds = %if.then54, %land.lhs.true, %if.end51
  %36 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17627
  %37 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !17629
  %cmp58 = icmp eq %struct.rtx_def* %36, %37, !dbg !17630
  br i1 %cmp58, label %if.then60, label %if.end81, !dbg !17631

if.then60:                                        ; preds = %if.end57
  %call61 = call %struct.rtx_def* @get_last_insn(), !dbg !17632
  store %struct.rtx_def* %call61, %struct.rtx_def** %last, align 8, !dbg !17634
  %38 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8, !dbg !17635
  %39 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8, !dbg !17635
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !17635
  %bf.load62 = load i32, i32* %40, align 8, !dbg !17635
  %bf.lshr = lshr i32 %bf.load62, 16, !dbg !17635
  %bf.clear63 = and i32 %bf.lshr, 255, !dbg !17635
  %41 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8, !dbg !17635
  %42 = load %struct.rtx_def*, %struct.rtx_def** %inc, align 8, !dbg !17635
  %call64 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %bf.clear63, %struct.rtx_def* %41, %struct.rtx_def* %42), !dbg !17635
  %call65 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %38, %struct.rtx_def* %call64), !dbg !17635
  %call66 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call65), !dbg !17636
  store %struct.rtx_def* %call66, %struct.rtx_def** %add_insn, align 8, !dbg !17637
  %43 = load %struct.rtx_def*, %struct.rtx_def** %add_insn, align 8, !dbg !17638
  %call67 = call i32 @recog_memoized(%struct.rtx_def* %43), !dbg !17639
  store i32 %call67, i32* %code, align 4, !dbg !17640
  %44 = load i32, i32* %code, align 4, !dbg !17641
  %cmp68 = icmp sge i32 %44, 0, !dbg !17643
  br i1 %cmp68, label %if.then70, label %if.end80, !dbg !17644

if.then70:                                        ; preds = %if.then60
  %45 = load %struct.rtx_def*, %struct.rtx_def** %add_insn, align 8, !dbg !17645
  call void @extract_insn(%struct.rtx_def* %45), !dbg !17647
  %call71 = call i32 @constrain_operands(i32 1), !dbg !17648
  %tobool72 = icmp ne i32 %call71, 0, !dbg !17648
  br i1 %tobool72, label %if.then73, label %if.end79, !dbg !17650

if.then73:                                        ; preds = %if.then70
  %46 = load i32, i32* %post, align 4, !dbg !17651
  %tobool74 = icmp ne i32 %46, 0, !dbg !17651
  br i1 %tobool74, label %if.end78, label %if.then75, !dbg !17654

if.then75:                                        ; preds = %if.then73
  %47 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8, !dbg !17655
  %48 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8, !dbg !17656
  %call76 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %47, %struct.rtx_def* %48), !dbg !17657
  %call77 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call76), !dbg !17658
  br label %if.end78, !dbg !17658

if.end78:                                         ; preds = %if.then75, %if.then73
  %49 = load %struct.rtx_def*, %struct.rtx_def** %add_insn, align 8, !dbg !17659
  store %struct.rtx_def* %49, %struct.rtx_def** %retval, align 8, !dbg !17660
  br label %return, !dbg !17660

if.end79:                                         ; preds = %if.then70
  br label %if.end80, !dbg !17661

if.end80:                                         ; preds = %if.end79, %if.then60
  %50 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !17662
  call void @delete_insns_since(%struct.rtx_def* %50), !dbg !17663
  br label %if.end81, !dbg !17664

if.end81:                                         ; preds = %if.end80, %if.end57
  %51 = load i32, i32* %post, align 4, !dbg !17665
  %tobool82 = icmp ne i32 %51, 0, !dbg !17665
  br i1 %tobool82, label %if.else94, label %if.then83, !dbg !17667

if.then83:                                        ; preds = %if.end81
  %52 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17668
  %53 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8, !dbg !17671
  %cmp84 = icmp ne %struct.rtx_def* %52, %53, !dbg !17672
  br i1 %cmp84, label %if.then86, label %if.end89, !dbg !17673

if.then86:                                        ; preds = %if.then83
  %54 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8, !dbg !17674
  %55 = load %struct.rtx_def*, %struct.rtx_def** %real_in, align 8, !dbg !17675
  %call87 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %54, %struct.rtx_def* %55), !dbg !17676
  %call88 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call87), !dbg !17677
  br label %if.end89, !dbg !17677

if.end89:                                         ; preds = %if.then86, %if.then83
  %56 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8, !dbg !17678
  %57 = load %struct.rtx_def*, %struct.rtx_def** %inc, align 8, !dbg !17679
  %call90 = call %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %56, %struct.rtx_def* %57), !dbg !17680
  %call91 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call90), !dbg !17681
  %58 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8, !dbg !17682
  %59 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8, !dbg !17683
  %call92 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %58, %struct.rtx_def* %59), !dbg !17684
  %call93 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call92), !dbg !17685
  store %struct.rtx_def* %call93, %struct.rtx_def** %store, align 8, !dbg !17686
  br label %if.end114, !dbg !17687

if.else94:                                        ; preds = %if.end81
  %60 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8, !dbg !17688
  %61 = load %struct.rtx_def*, %struct.rtx_def** %inc, align 8, !dbg !17690
  %call95 = call %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %60, %struct.rtx_def* %61), !dbg !17691
  %call96 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call95), !dbg !17692
  %62 = load %struct.rtx_def*, %struct.rtx_def** %incloc, align 8, !dbg !17693
  %63 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8, !dbg !17694
  %call97 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %62, %struct.rtx_def* %63), !dbg !17695
  %call98 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call97), !dbg !17696
  store %struct.rtx_def* %call98, %struct.rtx_def** %store, align 8, !dbg !17697
  %64 = load %struct.rtx_def*, %struct.rtx_def** %inc, align 8, !dbg !17698
  %65 = bitcast %struct.rtx_def* %64 to i32*, !dbg !17698
  %bf.load99 = load i32, i32* %65, align 8, !dbg !17698
  %bf.clear100 = and i32 %bf.load99, 65535, !dbg !17698
  %cmp101 = icmp eq i32 %bf.clear100, 30, !dbg !17698
  br i1 %cmp101, label %if.then103, label %if.else110, !dbg !17700

if.then103:                                       ; preds = %if.else94
  %66 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8, !dbg !17701
  %67 = load %struct.rtx_def*, %struct.rtx_def** %inc, align 8, !dbg !17702
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !17702
  %hwint = bitcast %union.u* %u104 to [1 x i64]*, !dbg !17702
  %arrayidx105 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !17702
  %68 = load i64, i64* %arrayidx105, align 8, !dbg !17702
  %sub106 = sub nsw i64 0, %68, !dbg !17702
  %call107 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub106), !dbg !17702
  %call108 = call %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %66, %struct.rtx_def* %call107), !dbg !17703
  %call109 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call108), !dbg !17704
  br label %if.end113, !dbg !17704

if.else110:                                       ; preds = %if.else94
  %69 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg.addr, align 8, !dbg !17705
  %70 = load %struct.rtx_def*, %struct.rtx_def** %inc, align 8, !dbg !17706
  %call111 = call %struct.rtx_def* @gen_sub2_insn(%struct.rtx_def* %69, %struct.rtx_def* %70), !dbg !17707
  %call112 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call111), !dbg !17708
  br label %if.end113

if.end113:                                        ; preds = %if.else110, %if.then103
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.end89
  %71 = load %struct.rtx_def*, %struct.rtx_def** %store, align 8, !dbg !17709
  store %struct.rtx_def* %71, %struct.rtx_def** %retval, align 8, !dbg !17710
  br label %return, !dbg !17710

return:                                           ; preds = %if.end114, %if.end78
  %72 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !17711
  ret %struct.rtx_def* %72, !dbg !17711
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @conflicts_with_override(%struct.rtx_def* %x) #0 !dbg !17712 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !17713, metadata !DIExpression()), !dbg !17714
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17715, metadata !DIExpression()), !dbg !17716
  store i32 0, i32* %i, align 4, !dbg !17717
  br label %for.cond, !dbg !17719

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17720
  %1 = load i32, i32* @n_reloads, align 4, !dbg !17722
  %cmp = icmp slt i32 %0, %1, !dbg !17723
  br i1 %cmp, label %for.body, label %for.end, !dbg !17724

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !17725
  %idxprom = sext i32 %2 to i64, !dbg !17727
  %arrayidx = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom, !dbg !17727
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !17727
  %tobool = icmp ne %struct.rtx_def* %3, null, !dbg !17727
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !17728

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !17729
  %5 = load i32, i32* %i, align 4, !dbg !17730
  %idxprom1 = sext i32 %5 to i64, !dbg !17731
  %arrayidx2 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom1, !dbg !17731
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2, align 8, !dbg !17731
  %call = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %4, %struct.rtx_def* %6), !dbg !17732
  %tobool3 = icmp ne i32 %call, 0, !dbg !17732
  br i1 %tobool3, label %if.then, label %if.end, !dbg !17733

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !17734
  br label %return, !dbg !17734

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !17735

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !17736
  %inc = add nsw i32 %7, 1, !dbg !17736
  store i32 %inc, i32* %i, align 4, !dbg !17736
  br label %for.cond, !dbg !17737, !llvm.loop !17738

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !17740
  br label %return, !dbg !17740

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !17741
  ret i32 %8, !dbg !17741
}

declare dso_local i32 @count_occurrences(%struct.rtx_def*, %struct.rtx_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @REG_N_SETS(i32 %regno) #0 !dbg !17742 {
entry:
  %regno.addr = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !17743, metadata !DIExpression()), !dbg !17744
  %0 = load %struct.regstat_n_sets_and_refs_t*, %struct.regstat_n_sets_and_refs_t** @regstat_n_sets_and_refs, align 8, !dbg !17745
  %1 = load i32, i32* %regno.addr, align 4, !dbg !17746
  %idxprom = sext i32 %1 to i64, !dbg !17745
  %arrayidx = getelementptr inbounds %struct.regstat_n_sets_and_refs_t, %struct.regstat_n_sets_and_refs_t* %0, i64 %idxprom, !dbg !17745
  %sets = getelementptr inbounds %struct.regstat_n_sets_and_refs_t, %struct.regstat_n_sets_and_refs_t* %arrayidx, i32 0, i32 0, !dbg !17747
  %2 = load i32, i32* %sets, align 4, !dbg !17747
  ret i32 %2, !dbg !17748
}

declare dso_local %struct.rtx_def* @replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @reload_adjust_reg_for_icode(%struct.rtx_def** %reload_reg, %struct.rtx_def* %alt_reload_reg, i32 %icode) #0 !dbg !17749 {
entry:
  %reload_reg.addr = alloca %struct.rtx_def**, align 8
  %alt_reload_reg.addr = alloca %struct.rtx_def*, align 8
  %icode.addr = alloca i32, align 4
  %new_class = alloca i32, align 4
  %new_mode = alloca i32, align 4
  store %struct.rtx_def** %reload_reg, %struct.rtx_def*** %reload_reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %reload_reg.addr, metadata !17752, metadata !DIExpression()), !dbg !17753
  store %struct.rtx_def* %alt_reload_reg, %struct.rtx_def** %alt_reload_reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %alt_reload_reg.addr, metadata !17754, metadata !DIExpression()), !dbg !17755
  store i32 %icode, i32* %icode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icode.addr, metadata !17756, metadata !DIExpression()), !dbg !17757
  call void @llvm.dbg.declare(metadata i32* %new_class, metadata !17758, metadata !DIExpression()), !dbg !17759
  %0 = load i32, i32* %icode.addr, align 4, !dbg !17760
  %call = call i32 @scratch_reload_class(i32 %0), !dbg !17761
  store i32 %call, i32* %new_class, align 4, !dbg !17759
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !17762, metadata !DIExpression()), !dbg !17763
  %1 = load i32, i32* %icode.addr, align 4, !dbg !17764
  %idxprom = sext i32 %1 to i64, !dbg !17765
  %arrayidx = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, !dbg !17765
  %operand = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx, i32 0, i32 3, !dbg !17766
  %2 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !17766
  %arrayidx1 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %2, i64 2, !dbg !17765
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx1, i32 0, i32 2, !dbg !17767
  %bf.load = load i16, i16* %mode, align 8, !dbg !17767
  %bf.cast = zext i16 %bf.load to i32, !dbg !17767
  store i32 %bf.cast, i32* %new_mode, align 4, !dbg !17763
  %3 = load %struct.rtx_def**, %struct.rtx_def*** %reload_reg.addr, align 8, !dbg !17768
  %4 = load %struct.rtx_def*, %struct.rtx_def** %alt_reload_reg.addr, align 8, !dbg !17769
  %5 = load i32, i32* %new_class, align 4, !dbg !17770
  %6 = load i32, i32* %new_mode, align 4, !dbg !17771
  %call2 = call zeroext i8 @reload_adjust_reg_for_temp(%struct.rtx_def** %3, %struct.rtx_def* %4, i32 %5, i32 %6), !dbg !17772
  ret i8 %call2, !dbg !17773
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @reload_adjust_reg_for_temp(%struct.rtx_def** %reload_reg, %struct.rtx_def* %alt_reload_reg, i32 %new_class, i32 %new_mode) #0 !dbg !17774 {
entry:
  %retval = alloca i8, align 1
  %reload_reg.addr = alloca %struct.rtx_def**, align 8
  %alt_reload_reg.addr = alloca %struct.rtx_def*, align 8
  %new_class.addr = alloca i32, align 4
  %new_mode.addr = alloca i32, align 4
  %reg = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  store %struct.rtx_def** %reload_reg, %struct.rtx_def*** %reload_reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %reload_reg.addr, metadata !17777, metadata !DIExpression()), !dbg !17778
  store %struct.rtx_def* %alt_reload_reg, %struct.rtx_def** %alt_reload_reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %alt_reload_reg.addr, metadata !17779, metadata !DIExpression()), !dbg !17780
  store i32 %new_class, i32* %new_class.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_class.addr, metadata !17781, metadata !DIExpression()), !dbg !17782
  store i32 %new_mode, i32* %new_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_mode.addr, metadata !17783, metadata !DIExpression()), !dbg !17784
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg, metadata !17785, metadata !DIExpression()), !dbg !17786
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %reload_reg.addr, align 8, !dbg !17787
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !17789
  store %struct.rtx_def* %1, %struct.rtx_def** %reg, align 8, !dbg !17790
  br label %for.cond, !dbg !17791

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17792
  %tobool = icmp ne %struct.rtx_def* %2, null, !dbg !17794
  br i1 %tobool, label %for.body, label %for.end, !dbg !17794

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !17795, metadata !DIExpression()), !dbg !17797
  %3 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17798
  %call = call i32 @rhs_regno(%struct.rtx_def* %3), !dbg !17798
  store i32 %call, i32* %regno, align 4, !dbg !17797
  %4 = load i32, i32* %new_class.addr, align 4, !dbg !17799
  %idxprom = sext i32 %4 to i64, !dbg !17799
  %arrayidx = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom, !dbg !17799
  %5 = load i64, i64* %arrayidx, align 8, !dbg !17799
  %6 = load i32, i32* %regno, align 4, !dbg !17799
  %sh_prom = zext i32 %6 to i64, !dbg !17799
  %shl = shl i64 1, %sh_prom, !dbg !17799
  %and = and i64 %5, %shl, !dbg !17799
  %tobool1 = icmp ne i64 %and, 0, !dbg !17799
  br i1 %tobool1, label %if.end, label %if.then, !dbg !17801

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !17802

if.end:                                           ; preds = %for.body
  %7 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17803
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !17803
  %bf.load = load i32, i32* %8, align 8, !dbg !17803
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !17803
  %bf.clear = and i32 %bf.lshr, 255, !dbg !17803
  %9 = load i32, i32* %new_mode.addr, align 4, !dbg !17805
  %cmp = icmp ne i32 %bf.clear, %9, !dbg !17806
  br i1 %cmp, label %if.then2, label %if.end24, !dbg !17807

if.then2:                                         ; preds = %if.end
  %10 = load i32, i32* %regno, align 4, !dbg !17808
  %11 = load i32, i32* %new_mode.addr, align 4, !dbg !17808
  %call3 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %10, i32 %11), !dbg !17808
  %tobool4 = icmp ne i8 %call3, 0, !dbg !17808
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !17811

if.then5:                                         ; preds = %if.then2
  br label %for.inc, !dbg !17812

if.end6:                                          ; preds = %if.then2
  %12 = load i32, i32* %regno, align 4, !dbg !17813
  %idxprom7 = zext i32 %12 to i64, !dbg !17815
  %arrayidx8 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom7, !dbg !17815
  %13 = load i32, i32* %new_mode.addr, align 4, !dbg !17816
  %idxprom9 = zext i32 %13 to i64, !dbg !17815
  %arrayidx10 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx8, i64 0, i64 %idxprom9, !dbg !17815
  %14 = load i8, i8* %arrayidx10, align 1, !dbg !17815
  %conv = zext i8 %14 to i32, !dbg !17815
  %15 = load i32, i32* %regno, align 4, !dbg !17817
  %idxprom11 = zext i32 %15 to i64, !dbg !17818
  %arrayidx12 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom11, !dbg !17818
  %16 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17819
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !17819
  %bf.load13 = load i32, i32* %17, align 8, !dbg !17819
  %bf.lshr14 = lshr i32 %bf.load13, 16, !dbg !17819
  %bf.clear15 = and i32 %bf.lshr14, 255, !dbg !17819
  %idxprom16 = zext i32 %bf.clear15 to i64, !dbg !17818
  %arrayidx17 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx12, i64 0, i64 %idxprom16, !dbg !17818
  %18 = load i8, i8* %arrayidx17, align 1, !dbg !17818
  %conv18 = zext i8 %18 to i32, !dbg !17818
  %cmp19 = icmp sgt i32 %conv, %conv18, !dbg !17820
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !17821

if.then21:                                        ; preds = %if.end6
  br label %for.inc, !dbg !17822

if.end22:                                         ; preds = %if.end6
  %19 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17823
  %20 = load i32, i32* %new_mode.addr, align 4, !dbg !17824
  %call23 = call %struct.rtx_def* @reload_adjust_reg_for_mode(%struct.rtx_def* %19, i32 %20), !dbg !17825
  store %struct.rtx_def* %call23, %struct.rtx_def** %reg, align 8, !dbg !17826
  br label %if.end24, !dbg !17827

if.end24:                                         ; preds = %if.end22, %if.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !17828
  %22 = load %struct.rtx_def**, %struct.rtx_def*** %reload_reg.addr, align 8, !dbg !17829
  store %struct.rtx_def* %21, %struct.rtx_def** %22, align 8, !dbg !17830
  store i8 1, i8* %retval, align 1, !dbg !17831
  br label %return, !dbg !17831

for.inc:                                          ; preds = %if.then21, %if.then5, %if.then
  %23 = load %struct.rtx_def*, %struct.rtx_def** %alt_reload_reg.addr, align 8, !dbg !17832
  store %struct.rtx_def* %23, %struct.rtx_def** %reg, align 8, !dbg !17833
  store %struct.rtx_def* null, %struct.rtx_def** %alt_reload_reg.addr, align 8, !dbg !17834
  br label %for.cond, !dbg !17835, !llvm.loop !17836

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !17838
  br label %return, !dbg !17838

return:                                           ; preds = %for.end, %if.end24
  %24 = load i8, i8* %retval, align 1, !dbg !17839
  ret i8 %24, !dbg !17839
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @gen_reload(%struct.rtx_def* %out, %struct.rtx_def* %in, i32 %opnum, i32 %type) #0 !dbg !17840 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %out.addr = alloca %struct.rtx_def*, align 8
  %in.addr = alloca %struct.rtx_def*, align 8
  %opnum.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %last = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %tem140 = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %loc = alloca %struct.rtx_def*, align 8
  %insn364 = alloca %struct.rtx_def*, align 8
  %op1365 = alloca %struct.rtx_def*, align 8
  %out_moded = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %out, %struct.rtx_def** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out.addr, metadata !17843, metadata !DIExpression()), !dbg !17844
  store %struct.rtx_def* %in, %struct.rtx_def** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in.addr, metadata !17845, metadata !DIExpression()), !dbg !17846
  store i32 %opnum, i32* %opnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opnum.addr, metadata !17847, metadata !DIExpression()), !dbg !17848
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !17849, metadata !DIExpression()), !dbg !17850
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last, metadata !17851, metadata !DIExpression()), !dbg !17852
  %call = call %struct.rtx_def* @get_last_insn(), !dbg !17853
  store %struct.rtx_def* %call, %struct.rtx_def** %last, align 8, !dbg !17852
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !17854, metadata !DIExpression()), !dbg !17855
  %0 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17856
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !17856
  %bf.load = load i32, i32* %1, align 8, !dbg !17856
  %bf.clear = and i32 %bf.load, 65535, !dbg !17856
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !17858
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !17859

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17860
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !17860
  %bf.load1 = load i32, i32* %3, align 8, !dbg !17860
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !17860
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !17860
  %idxprom = zext i32 %bf.clear2 to i64, !dbg !17860
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !17860
  %4 = load i8, i8* %arrayidx, align 1, !dbg !17860
  %conv = zext i8 %4 to i16, !dbg !17860
  %conv3 = zext i16 %conv to i32, !dbg !17860
  %5 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17861
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !17861
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !17861
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !17861
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !17861
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !17861
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !17861
  %bf.load5 = load i32, i32* %7, align 8, !dbg !17861
  %bf.lshr6 = lshr i32 %bf.load5, 16, !dbg !17861
  %bf.clear7 = and i32 %bf.lshr6, 255, !dbg !17861
  %idxprom8 = zext i32 %bf.clear7 to i64, !dbg !17861
  %arrayidx9 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom8, !dbg !17861
  %8 = load i8, i8* %arrayidx9, align 1, !dbg !17861
  %conv10 = zext i8 %8 to i16, !dbg !17861
  %conv11 = zext i16 %conv10 to i32, !dbg !17861
  %cmp12 = icmp sgt i32 %conv3, %conv11, !dbg !17862
  br i1 %cmp12, label %land.lhs.true14, label %if.else, !dbg !17863

land.lhs.true14:                                  ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17864
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !17864
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !17864
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !17864
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !17864
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !17864
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !17864
  %bf.load19 = load i32, i32* %11, align 8, !dbg !17864
  %bf.lshr20 = lshr i32 %bf.load19, 16, !dbg !17864
  %bf.clear21 = and i32 %bf.lshr20, 255, !dbg !17864
  %12 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !17865
  %call22 = call %struct.rtx_def* @gen_lowpart_common(i32 %bf.clear21, %struct.rtx_def* %12), !dbg !17866
  store %struct.rtx_def* %call22, %struct.rtx_def** %tem, align 8, !dbg !17867
  %cmp23 = icmp ne %struct.rtx_def* %call22, null, !dbg !17868
  br i1 %cmp23, label %if.then, label %if.else, !dbg !17869

if.then:                                          ; preds = %land.lhs.true14
  %13 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17870
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !17870
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !17870
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !17870
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !17870
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !17870
  store %struct.rtx_def* %14, %struct.rtx_def** %in.addr, align 8, !dbg !17871
  %15 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !17872
  store %struct.rtx_def* %15, %struct.rtx_def** %out.addr, align 8, !dbg !17873
  br label %if.end70, !dbg !17874

if.else:                                          ; preds = %land.lhs.true14, %land.lhs.true, %entry
  %16 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !17875
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !17875
  %bf.load29 = load i32, i32* %17, align 8, !dbg !17875
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !17875
  %cmp31 = icmp eq i32 %bf.clear30, 39, !dbg !17877
  br i1 %cmp31, label %land.lhs.true33, label %if.end, !dbg !17878

land.lhs.true33:                                  ; preds = %if.else
  %18 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !17879
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !17879
  %bf.load34 = load i32, i32* %19, align 8, !dbg !17879
  %bf.lshr35 = lshr i32 %bf.load34, 16, !dbg !17879
  %bf.clear36 = and i32 %bf.lshr35, 255, !dbg !17879
  %idxprom37 = zext i32 %bf.clear36 to i64, !dbg !17879
  %arrayidx38 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom37, !dbg !17879
  %20 = load i8, i8* %arrayidx38, align 1, !dbg !17879
  %conv39 = zext i8 %20 to i16, !dbg !17879
  %conv40 = zext i16 %conv39 to i32, !dbg !17879
  %21 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !17880
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !17880
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !17880
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 0, !dbg !17880
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !17880
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !17880
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !17880
  %bf.load45 = load i32, i32* %23, align 8, !dbg !17880
  %bf.lshr46 = lshr i32 %bf.load45, 16, !dbg !17880
  %bf.clear47 = and i32 %bf.lshr46, 255, !dbg !17880
  %idxprom48 = zext i32 %bf.clear47 to i64, !dbg !17880
  %arrayidx49 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom48, !dbg !17880
  %24 = load i8, i8* %arrayidx49, align 1, !dbg !17880
  %conv50 = zext i8 %24 to i16, !dbg !17880
  %conv51 = zext i16 %conv50 to i32, !dbg !17880
  %cmp52 = icmp sgt i32 %conv40, %conv51, !dbg !17881
  br i1 %cmp52, label %land.lhs.true54, label %if.end, !dbg !17882

land.lhs.true54:                                  ; preds = %land.lhs.true33
  %25 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !17883
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !17883
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !17883
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 0, !dbg !17883
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !17883
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !17883
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !17883
  %bf.load59 = load i32, i32* %27, align 8, !dbg !17883
  %bf.lshr60 = lshr i32 %bf.load59, 16, !dbg !17883
  %bf.clear61 = and i32 %bf.lshr60, 255, !dbg !17883
  %28 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17884
  %call62 = call %struct.rtx_def* @gen_lowpart_common(i32 %bf.clear61, %struct.rtx_def* %28), !dbg !17885
  store %struct.rtx_def* %call62, %struct.rtx_def** %tem, align 8, !dbg !17886
  %cmp63 = icmp ne %struct.rtx_def* %call62, null, !dbg !17887
  br i1 %cmp63, label %if.then65, label %if.end, !dbg !17888

if.then65:                                        ; preds = %land.lhs.true54
  %29 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !17889
  %u66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !17889
  %fld67 = bitcast %union.u* %u66 to [1 x %union.rtunion_def]*, !dbg !17889
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i64 0, i64 0, !dbg !17889
  %rt_rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**, !dbg !17889
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx69, align 8, !dbg !17889
  store %struct.rtx_def* %30, %struct.rtx_def** %out.addr, align 8, !dbg !17890
  %31 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !17891
  store %struct.rtx_def* %31, %struct.rtx_def** %in.addr, align 8, !dbg !17892
  br label %if.end, !dbg !17893

if.end:                                           ; preds = %if.then65, %land.lhs.true54, %land.lhs.true33, %if.else
  br label %if.end70

if.end70:                                         ; preds = %if.end, %if.then
  %32 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17894
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !17894
  %bf.load71 = load i32, i32* %33, align 8, !dbg !17894
  %bf.clear72 = and i32 %bf.load71, 65535, !dbg !17894
  %cmp73 = icmp eq i32 %bf.clear72, 49, !dbg !17896
  br i1 %cmp73, label %land.lhs.true75, label %if.else256, !dbg !17897

land.lhs.true75:                                  ; preds = %if.end70
  %34 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17898
  %u76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !17898
  %fld77 = bitcast %union.u* %u76 to [1 x %union.rtunion_def]*, !dbg !17898
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i64 0, i64 0, !dbg !17898
  %rt_rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**, !dbg !17898
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !17898
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !17898
  %bf.load80 = load i32, i32* %36, align 8, !dbg !17898
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !17898
  %cmp82 = icmp eq i32 %bf.clear81, 37, !dbg !17898
  br i1 %cmp82, label %land.lhs.true101, label %lor.lhs.false, !dbg !17899

lor.lhs.false:                                    ; preds = %land.lhs.true75
  %37 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17900
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !17900
  %fld85 = bitcast %union.u* %u84 to [1 x %union.rtunion_def]*, !dbg !17900
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i64 0, i64 0, !dbg !17900
  %rt_rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**, !dbg !17900
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx87, align 8, !dbg !17900
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !17900
  %bf.load88 = load i32, i32* %39, align 8, !dbg !17900
  %bf.clear89 = and i32 %bf.load88, 65535, !dbg !17900
  %cmp90 = icmp eq i32 %bf.clear89, 39, !dbg !17901
  br i1 %cmp90, label %land.lhs.true101, label %lor.lhs.false92, !dbg !17902

lor.lhs.false92:                                  ; preds = %lor.lhs.false
  %40 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17903
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !17903
  %fld94 = bitcast %union.u* %u93 to [1 x %union.rtunion_def]*, !dbg !17903
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 0, !dbg !17903
  %rt_rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**, !dbg !17903
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx96, align 8, !dbg !17903
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !17903
  %bf.load97 = load i32, i32* %42, align 8, !dbg !17903
  %bf.clear98 = and i32 %bf.load97, 65535, !dbg !17903
  %cmp99 = icmp eq i32 %bf.clear98, 43, !dbg !17903
  br i1 %cmp99, label %land.lhs.true101, label %if.else256, !dbg !17904

land.lhs.true101:                                 ; preds = %lor.lhs.false92, %lor.lhs.false, %land.lhs.true75
  %43 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17905
  %u102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !17905
  %fld103 = bitcast %union.u* %u102 to [1 x %union.rtunion_def]*, !dbg !17905
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i64 0, i64 1, !dbg !17905
  %rt_rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**, !dbg !17905
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx105, align 8, !dbg !17905
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !17905
  %bf.load106 = load i32, i32* %45, align 8, !dbg !17905
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !17905
  %cmp108 = icmp eq i32 %bf.clear107, 37, !dbg !17905
  br i1 %cmp108, label %if.then139, label %lor.lhs.false110, !dbg !17906

lor.lhs.false110:                                 ; preds = %land.lhs.true101
  %46 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17907
  %u111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !17907
  %fld112 = bitcast %union.u* %u111 to [1 x %union.rtunion_def]*, !dbg !17907
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i64 0, i64 1, !dbg !17907
  %rt_rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**, !dbg !17907
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx114, align 8, !dbg !17907
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !17907
  %bf.load115 = load i32, i32* %48, align 8, !dbg !17907
  %bf.clear116 = and i32 %bf.load115, 65535, !dbg !17907
  %cmp117 = icmp eq i32 %bf.clear116, 39, !dbg !17908
  br i1 %cmp117, label %if.then139, label %lor.lhs.false119, !dbg !17909

lor.lhs.false119:                                 ; preds = %lor.lhs.false110
  %49 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17910
  %u120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !17910
  %fld121 = bitcast %union.u* %u120 to [1 x %union.rtunion_def]*, !dbg !17910
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i64 0, i64 1, !dbg !17910
  %rt_rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**, !dbg !17910
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx123, align 8, !dbg !17910
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !17910
  %bf.load124 = load i32, i32* %51, align 8, !dbg !17910
  %bf.clear125 = and i32 %bf.load124, 65535, !dbg !17910
  %idxprom126 = sext i32 %bf.clear125 to i64, !dbg !17910
  %arrayidx127 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom126, !dbg !17910
  %52 = load i32, i32* %arrayidx127, align 4, !dbg !17910
  %cmp128 = icmp eq i32 %52, 9, !dbg !17910
  br i1 %cmp128, label %if.then139, label %lor.lhs.false130, !dbg !17911

lor.lhs.false130:                                 ; preds = %lor.lhs.false119
  %53 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17912
  %u131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !17912
  %fld132 = bitcast %union.u* %u131 to [1 x %union.rtunion_def]*, !dbg !17912
  %arrayidx133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld132, i64 0, i64 1, !dbg !17912
  %rt_rtx134 = bitcast %union.rtunion_def* %arrayidx133 to %struct.rtx_def**, !dbg !17912
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx134, align 8, !dbg !17912
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !17912
  %bf.load135 = load i32, i32* %55, align 8, !dbg !17912
  %bf.clear136 = and i32 %bf.load135, 65535, !dbg !17912
  %cmp137 = icmp eq i32 %bf.clear136, 43, !dbg !17912
  br i1 %cmp137, label %if.then139, label %if.else256, !dbg !17913

if.then139:                                       ; preds = %lor.lhs.false130, %lor.lhs.false119, %lor.lhs.false110, %land.lhs.true101
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0, metadata !17914, metadata !DIExpression()), !dbg !17916
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1, metadata !17917, metadata !DIExpression()), !dbg !17918
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem140, metadata !17919, metadata !DIExpression()), !dbg !17920
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !17921, metadata !DIExpression()), !dbg !17922
  call void @llvm.dbg.declare(metadata i32* %code, metadata !17923, metadata !DIExpression()), !dbg !17924
  %56 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17925
  %u141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !17925
  %fld142 = bitcast %union.u* %u141 to [1 x %union.rtunion_def]*, !dbg !17925
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i64 0, i64 0, !dbg !17925
  %rt_rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**, !dbg !17925
  %call145 = call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rt_rtx144), !dbg !17926
  store %struct.rtx_def* %call145, %struct.rtx_def** %op0, align 8, !dbg !17927
  %57 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17928
  %u146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !17928
  %fld147 = bitcast %union.u* %u146 to [1 x %union.rtunion_def]*, !dbg !17928
  %arrayidx148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i64 0, i64 1, !dbg !17928
  %rt_rtx149 = bitcast %union.rtunion_def* %arrayidx148 to %struct.rtx_def**, !dbg !17928
  %call150 = call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rt_rtx149), !dbg !17929
  store %struct.rtx_def* %call150, %struct.rtx_def** %op1, align 8, !dbg !17930
  %58 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17931
  %u151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !17931
  %fld152 = bitcast %union.u* %u151 to [1 x %union.rtunion_def]*, !dbg !17931
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i64 0, i64 1, !dbg !17931
  %rt_rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**, !dbg !17931
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx154, align 8, !dbg !17931
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !17931
  %bf.load155 = load i32, i32* %60, align 8, !dbg !17931
  %bf.clear156 = and i32 %bf.load155, 65535, !dbg !17931
  %cmp157 = icmp eq i32 %bf.clear156, 37, !dbg !17931
  br i1 %cmp157, label %land.lhs.true159, label %if.end169, !dbg !17933

land.lhs.true159:                                 ; preds = %if.then139
  %61 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !17934
  %call160 = call i32 @rhs_regno(%struct.rtx_def* %61), !dbg !17934
  %62 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17935
  %u161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !17935
  %fld162 = bitcast %union.u* %u161 to [1 x %union.rtunion_def]*, !dbg !17935
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i64 0, i64 1, !dbg !17935
  %rt_rtx164 = bitcast %union.rtunion_def* %arrayidx163 to %struct.rtx_def**, !dbg !17935
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx164, align 8, !dbg !17935
  %call165 = call i32 @rhs_regno(%struct.rtx_def* %63), !dbg !17935
  %cmp166 = icmp eq i32 %call160, %call165, !dbg !17936
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !17937

if.then168:                                       ; preds = %land.lhs.true159
  %64 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !17938
  store %struct.rtx_def* %64, %struct.rtx_def** %tem140, align 8, !dbg !17939
  %65 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !17940
  store %struct.rtx_def* %65, %struct.rtx_def** %op0, align 8, !dbg !17941
  %66 = load %struct.rtx_def*, %struct.rtx_def** %tem140, align 8, !dbg !17942
  store %struct.rtx_def* %66, %struct.rtx_def** %op1, align 8, !dbg !17943
  br label %if.end169, !dbg !17944

if.end169:                                        ; preds = %if.then168, %land.lhs.true159, %if.then139
  %67 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !17945
  %68 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17947
  %u170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !17947
  %fld171 = bitcast %union.u* %u170 to [1 x %union.rtunion_def]*, !dbg !17947
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i64 0, i64 0, !dbg !17947
  %rt_rtx173 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtx_def**, !dbg !17947
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx173, align 8, !dbg !17947
  %cmp174 = icmp ne %struct.rtx_def* %67, %69, !dbg !17948
  br i1 %cmp174, label %if.then183, label %lor.lhs.false176, !dbg !17949

lor.lhs.false176:                                 ; preds = %if.end169
  %70 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !17950
  %71 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17951
  %u177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !17951
  %fld178 = bitcast %union.u* %u177 to [1 x %union.rtunion_def]*, !dbg !17951
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i64 0, i64 1, !dbg !17951
  %rt_rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**, !dbg !17951
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx180, align 8, !dbg !17951
  %cmp181 = icmp ne %struct.rtx_def* %70, %72, !dbg !17952
  br i1 %cmp181, label %if.then183, label %if.end188, !dbg !17953

if.then183:                                       ; preds = %lor.lhs.false176, %if.end169
  %73 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17954
  %74 = bitcast %struct.rtx_def* %73 to i32*, !dbg !17954
  %bf.load184 = load i32, i32* %74, align 8, !dbg !17954
  %bf.lshr185 = lshr i32 %bf.load184, 16, !dbg !17954
  %bf.clear186 = and i32 %bf.lshr185, 255, !dbg !17954
  %75 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !17954
  %76 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !17954
  %call187 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %bf.clear186, %struct.rtx_def* %75, %struct.rtx_def* %76), !dbg !17954
  store %struct.rtx_def* %call187, %struct.rtx_def** %in.addr, align 8, !dbg !17955
  br label %if.end188, !dbg !17956

if.end188:                                        ; preds = %if.then183, %lor.lhs.false176
  %77 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !17957
  %78 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !17957
  %call189 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %77, %struct.rtx_def* %78), !dbg !17957
  %call190 = call %struct.rtx_def* @emit_insn_if_valid_for_reload(%struct.rtx_def* %call189), !dbg !17958
  store %struct.rtx_def* %call190, %struct.rtx_def** %insn, align 8, !dbg !17959
  %79 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17960
  %tobool = icmp ne %struct.rtx_def* %79, null, !dbg !17960
  br i1 %tobool, label %if.then191, label %if.end192, !dbg !17962

if.then191:                                       ; preds = %if.end188
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17963
  store %struct.rtx_def* %80, %struct.rtx_def** %retval, align 8, !dbg !17964
  br label %return, !dbg !17964

if.end192:                                        ; preds = %if.end188
  %81 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !17965
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !17965
  %bf.load193 = load i32, i32* %82, align 8, !dbg !17965
  %bf.lshr194 = lshr i32 %bf.load193, 16, !dbg !17965
  %bf.clear195 = and i32 %bf.lshr194, 255, !dbg !17965
  %idxprom196 = sext i32 %bf.clear195 to i64, !dbg !17965
  %arrayidx197 = getelementptr inbounds [87 x %struct.optab_handlers], [87 x %struct.optab_handlers]* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 12, i32 4), i64 0, i64 %idxprom196, !dbg !17965
  %insn_code = getelementptr inbounds %struct.optab_handlers, %struct.optab_handlers* %arrayidx197, i32 0, i32 0, !dbg !17966
  %83 = load i32, i32* %insn_code, align 4, !dbg !17966
  store i32 %83, i32* %code, align 4, !dbg !17967
  %84 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !17968
  %85 = bitcast %struct.rtx_def* %84 to i32*, !dbg !17968
  %bf.load198 = load i32, i32* %85, align 8, !dbg !17968
  %bf.clear199 = and i32 %bf.load198, 65535, !dbg !17968
  %idxprom200 = sext i32 %bf.clear199 to i64, !dbg !17968
  %arrayidx201 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom200, !dbg !17968
  %86 = load i32, i32* %arrayidx201, align 4, !dbg !17968
  %cmp202 = icmp eq i32 %86, 9, !dbg !17968
  br i1 %cmp202, label %if.then237, label %lor.lhs.false204, !dbg !17970

lor.lhs.false204:                                 ; preds = %if.end192
  %87 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !17971
  %88 = bitcast %struct.rtx_def* %87 to i32*, !dbg !17971
  %bf.load205 = load i32, i32* %88, align 8, !dbg !17971
  %bf.clear206 = and i32 %bf.load205, 65535, !dbg !17971
  %cmp207 = icmp eq i32 %bf.clear206, 43, !dbg !17971
  br i1 %cmp207, label %if.then237, label %lor.lhs.false209, !dbg !17972

lor.lhs.false209:                                 ; preds = %lor.lhs.false204
  %89 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !17973
  %90 = bitcast %struct.rtx_def* %89 to i32*, !dbg !17973
  %bf.load210 = load i32, i32* %90, align 8, !dbg !17973
  %bf.clear211 = and i32 %bf.load210, 65535, !dbg !17973
  %cmp212 = icmp eq i32 %bf.clear211, 39, !dbg !17974
  br i1 %cmp212, label %if.then237, label %lor.lhs.false214, !dbg !17975

lor.lhs.false214:                                 ; preds = %lor.lhs.false209
  %91 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !17976
  %92 = bitcast %struct.rtx_def* %91 to i32*, !dbg !17976
  %bf.load215 = load i32, i32* %92, align 8, !dbg !17976
  %bf.clear216 = and i32 %bf.load215, 65535, !dbg !17976
  %cmp217 = icmp eq i32 %bf.clear216, 37, !dbg !17976
  br i1 %cmp217, label %land.lhs.true219, label %lor.lhs.false223, !dbg !17977

land.lhs.true219:                                 ; preds = %lor.lhs.false214
  %93 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !17978
  %call220 = call i32 @rhs_regno(%struct.rtx_def* %93), !dbg !17978
  %cmp221 = icmp uge i32 %call220, 53, !dbg !17979
  br i1 %cmp221, label %if.then237, label %lor.lhs.false223, !dbg !17980

lor.lhs.false223:                                 ; preds = %land.lhs.true219, %lor.lhs.false214
  %94 = load i32, i32* %code, align 4, !dbg !17981
  %cmp224 = icmp ne i32 %94, 2956, !dbg !17982
  br i1 %cmp224, label %land.lhs.true226, label %if.end238, !dbg !17983

land.lhs.true226:                                 ; preds = %lor.lhs.false223
  %95 = load i32, i32* %code, align 4, !dbg !17984
  %idxprom227 = sext i32 %95 to i64, !dbg !17985
  %arrayidx228 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom227, !dbg !17985
  %operand = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx228, i32 0, i32 3, !dbg !17986
  %96 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !17986
  %arrayidx229 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %96, i64 2, !dbg !17985
  %predicate = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx229, i32 0, i32 0, !dbg !17987
  %97 = load i32 (%struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)** %predicate, align 8, !dbg !17987
  %98 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !17988
  %99 = load i32, i32* %code, align 4, !dbg !17989
  %idxprom230 = sext i32 %99 to i64, !dbg !17990
  %arrayidx231 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom230, !dbg !17990
  %operand232 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx231, i32 0, i32 3, !dbg !17991
  %100 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand232, align 8, !dbg !17991
  %arrayidx233 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %100, i64 2, !dbg !17990
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx233, i32 0, i32 2, !dbg !17992
  %bf.load234 = load i16, i16* %mode, align 8, !dbg !17992
  %bf.cast = zext i16 %bf.load234 to i32, !dbg !17992
  %call235 = call i32 %97(%struct.rtx_def* %98, i32 %bf.cast), !dbg !17993
  %tobool236 = icmp ne i32 %call235, 0, !dbg !17993
  br i1 %tobool236, label %if.end238, label %if.then237, !dbg !17994

if.then237:                                       ; preds = %land.lhs.true226, %land.lhs.true219, %lor.lhs.false209, %lor.lhs.false204, %if.end192
  %101 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !17995
  store %struct.rtx_def* %101, %struct.rtx_def** %tem140, align 8, !dbg !17996
  %102 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !17997
  store %struct.rtx_def* %102, %struct.rtx_def** %op0, align 8, !dbg !17998
  %103 = load %struct.rtx_def*, %struct.rtx_def** %tem140, align 8, !dbg !17999
  store %struct.rtx_def* %103, %struct.rtx_def** %op1, align 8, !dbg !18000
  br label %if.end238, !dbg !18001

if.end238:                                        ; preds = %if.then237, %land.lhs.true226, %lor.lhs.false223
  %104 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18002
  %105 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !18003
  %106 = load i32, i32* %opnum.addr, align 4, !dbg !18004
  %107 = load i32, i32* %type.addr, align 4, !dbg !18005
  %call239 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %104, %struct.rtx_def* %105, i32 %106, i32 %107), !dbg !18006
  %108 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !18007
  %109 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !18009
  %call240 = call i32 @rtx_equal_p(%struct.rtx_def* %108, %struct.rtx_def* %109), !dbg !18010
  %tobool241 = icmp ne i32 %call240, 0, !dbg !18010
  br i1 %tobool241, label %if.then242, label %if.end243, !dbg !18011

if.then242:                                       ; preds = %if.end238
  %110 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18012
  store %struct.rtx_def* %110, %struct.rtx_def** %op1, align 8, !dbg !18013
  br label %if.end243, !dbg !18014

if.end243:                                        ; preds = %if.then242, %if.end238
  %111 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18015
  %112 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !18016
  %call244 = call %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %111, %struct.rtx_def* %112), !dbg !18017
  %call245 = call %struct.rtx_def* @emit_insn_if_valid_for_reload(%struct.rtx_def* %call244), !dbg !18018
  store %struct.rtx_def* %call245, %struct.rtx_def** %insn, align 8, !dbg !18019
  %113 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18020
  %tobool246 = icmp ne %struct.rtx_def* %113, null, !dbg !18020
  br i1 %tobool246, label %if.then247, label %if.end249, !dbg !18022

if.then247:                                       ; preds = %if.end243
  %114 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18023
  %115 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18025
  %call248 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %114, i32 3, %struct.rtx_def* %115), !dbg !18026
  %116 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18027
  store %struct.rtx_def* %116, %struct.rtx_def** %retval, align 8, !dbg !18028
  br label %return, !dbg !18028

if.end249:                                        ; preds = %if.end243
  %117 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18029
  %118 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !18029
  %call250 = call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %117, %struct.rtx_def* %118), !dbg !18029
  %tobool251 = icmp ne i32 %call250, 0, !dbg !18029
  br i1 %tobool251, label %cond.true, label %cond.false, !dbg !18029

cond.true:                                        ; preds = %if.end249
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 8381, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !18029
  br label %cond.end, !dbg !18029

cond.false:                                       ; preds = %if.end249
  br label %cond.end, !dbg !18029

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !18029
  %119 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18030
  %120 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !18031
  %121 = load i32, i32* %opnum.addr, align 4, !dbg !18032
  %122 = load i32, i32* %type.addr, align 4, !dbg !18033
  %call252 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %119, %struct.rtx_def* %120, i32 %121, i32 %122), !dbg !18034
  %123 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18035
  %124 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !18036
  %call253 = call %struct.rtx_def* @gen_add2_insn(%struct.rtx_def* %123, %struct.rtx_def* %124), !dbg !18037
  %call254 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call253), !dbg !18038
  store %struct.rtx_def* %call254, %struct.rtx_def** %insn, align 8, !dbg !18039
  %125 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18040
  %126 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18041
  %call255 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %125, i32 3, %struct.rtx_def* %126), !dbg !18042
  br label %if.end440, !dbg !18043

if.else256:                                       ; preds = %lor.lhs.false130, %lor.lhs.false92, %if.end70
  %127 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18044
  %128 = bitcast %struct.rtx_def* %127 to i32*, !dbg !18044
  %bf.load257 = load i32, i32* %128, align 8, !dbg !18044
  %bf.clear258 = and i32 %bf.load257, 65535, !dbg !18044
  %cmp259 = icmp eq i32 %bf.clear258, 37, !dbg !18044
  br i1 %cmp259, label %land.lhs.true275, label %lor.lhs.false261, !dbg !18046

lor.lhs.false261:                                 ; preds = %if.else256
  %129 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18047
  %130 = bitcast %struct.rtx_def* %129 to i32*, !dbg !18047
  %bf.load262 = load i32, i32* %130, align 8, !dbg !18047
  %bf.clear263 = and i32 %bf.load262, 65535, !dbg !18047
  %cmp264 = icmp eq i32 %bf.clear263, 39, !dbg !18048
  br i1 %cmp264, label %land.lhs.true266, label %if.else351, !dbg !18049

land.lhs.true266:                                 ; preds = %lor.lhs.false261
  %131 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18050
  %u267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1, !dbg !18050
  %fld268 = bitcast %union.u* %u267 to [1 x %union.rtunion_def]*, !dbg !18050
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i64 0, i64 0, !dbg !18050
  %rt_rtx270 = bitcast %union.rtunion_def* %arrayidx269 to %struct.rtx_def**, !dbg !18050
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx270, align 8, !dbg !18050
  %133 = bitcast %struct.rtx_def* %132 to i32*, !dbg !18050
  %bf.load271 = load i32, i32* %133, align 8, !dbg !18050
  %bf.clear272 = and i32 %bf.load271, 65535, !dbg !18050
  %cmp273 = icmp eq i32 %bf.clear272, 37, !dbg !18050
  br i1 %cmp273, label %land.lhs.true275, label %if.else351, !dbg !18051

land.lhs.true275:                                 ; preds = %land.lhs.true266, %if.else256
  %134 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18052
  %call276 = call i32 @reg_or_subregno(%struct.rtx_def* %134), !dbg !18053
  %cmp277 = icmp ult i32 %call276, 53, !dbg !18054
  br i1 %cmp277, label %land.lhs.true279, label %if.else351, !dbg !18055

land.lhs.true279:                                 ; preds = %land.lhs.true275
  %135 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18056
  %136 = bitcast %struct.rtx_def* %135 to i32*, !dbg !18056
  %bf.load280 = load i32, i32* %136, align 8, !dbg !18056
  %bf.clear281 = and i32 %bf.load280, 65535, !dbg !18056
  %cmp282 = icmp eq i32 %bf.clear281, 37, !dbg !18056
  br i1 %cmp282, label %land.lhs.true298, label %lor.lhs.false284, !dbg !18057

lor.lhs.false284:                                 ; preds = %land.lhs.true279
  %137 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18058
  %138 = bitcast %struct.rtx_def* %137 to i32*, !dbg !18058
  %bf.load285 = load i32, i32* %138, align 8, !dbg !18058
  %bf.clear286 = and i32 %bf.load285, 65535, !dbg !18058
  %cmp287 = icmp eq i32 %bf.clear286, 39, !dbg !18059
  br i1 %cmp287, label %land.lhs.true289, label %if.else351, !dbg !18060

land.lhs.true289:                                 ; preds = %lor.lhs.false284
  %139 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18061
  %u290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1, !dbg !18061
  %fld291 = bitcast %union.u* %u290 to [1 x %union.rtunion_def]*, !dbg !18061
  %arrayidx292 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld291, i64 0, i64 0, !dbg !18061
  %rt_rtx293 = bitcast %union.rtunion_def* %arrayidx292 to %struct.rtx_def**, !dbg !18061
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx293, align 8, !dbg !18061
  %141 = bitcast %struct.rtx_def* %140 to i32*, !dbg !18061
  %bf.load294 = load i32, i32* %141, align 8, !dbg !18061
  %bf.clear295 = and i32 %bf.load294, 65535, !dbg !18061
  %cmp296 = icmp eq i32 %bf.clear295, 37, !dbg !18061
  br i1 %cmp296, label %land.lhs.true298, label %if.else351, !dbg !18062

land.lhs.true298:                                 ; preds = %land.lhs.true289, %land.lhs.true279
  %142 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18063
  %call299 = call i32 @reg_or_subregno(%struct.rtx_def* %142), !dbg !18064
  %cmp300 = icmp ult i32 %call299, 53, !dbg !18065
  br i1 %cmp300, label %land.lhs.true302, label %if.else351, !dbg !18066

land.lhs.true302:                                 ; preds = %land.lhs.true298
  %143 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18067
  %call303 = call i32 @reg_or_subregno(%struct.rtx_def* %143), !dbg !18067
  %idxprom304 = zext i32 %call303 to i64, !dbg !18067
  %arrayidx305 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom304, !dbg !18067
  %144 = load i32, i32* %arrayidx305, align 4, !dbg !18067
  %145 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18067
  %call306 = call i32 @reg_or_subregno(%struct.rtx_def* %145), !dbg !18067
  %idxprom307 = zext i32 %call306 to i64, !dbg !18067
  %arrayidx308 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom307, !dbg !18067
  %146 = load i32, i32* %arrayidx308, align 4, !dbg !18067
  %147 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18067
  %148 = bitcast %struct.rtx_def* %147 to i32*, !dbg !18067
  %bf.load309 = load i32, i32* %148, align 8, !dbg !18067
  %bf.lshr310 = lshr i32 %bf.load309, 16, !dbg !18067
  %bf.clear311 = and i32 %bf.lshr310, 255, !dbg !18067
  %call312 = call i32 @ix86_secondary_memory_needed(i32 %144, i32 %146, i32 %bf.clear311, i32 1), !dbg !18067
  %tobool313 = icmp ne i32 %call312, 0, !dbg !18067
  br i1 %tobool313, label %if.then314, label %if.else351, !dbg !18068

if.then314:                                       ; preds = %land.lhs.true302
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc, metadata !18069, metadata !DIExpression()), !dbg !18071
  %149 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18072
  %150 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18073
  %151 = bitcast %struct.rtx_def* %150 to i32*, !dbg !18073
  %bf.load315 = load i32, i32* %151, align 8, !dbg !18073
  %bf.lshr316 = lshr i32 %bf.load315, 16, !dbg !18073
  %bf.clear317 = and i32 %bf.lshr316, 255, !dbg !18073
  %152 = load i32, i32* %opnum.addr, align 4, !dbg !18074
  %153 = load i32, i32* %type.addr, align 4, !dbg !18075
  %call318 = call %struct.rtx_def* @get_secondary_mem(%struct.rtx_def* %149, i32 %bf.clear317, i32 %152, i32 %153), !dbg !18076
  store %struct.rtx_def* %call318, %struct.rtx_def** %loc, align 8, !dbg !18071
  %154 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !18077
  %155 = bitcast %struct.rtx_def* %154 to i32*, !dbg !18077
  %bf.load319 = load i32, i32* %155, align 8, !dbg !18077
  %bf.lshr320 = lshr i32 %bf.load319, 16, !dbg !18077
  %bf.clear321 = and i32 %bf.lshr320, 255, !dbg !18077
  %156 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18079
  %157 = bitcast %struct.rtx_def* %156 to i32*, !dbg !18079
  %bf.load322 = load i32, i32* %157, align 8, !dbg !18079
  %bf.lshr323 = lshr i32 %bf.load322, 16, !dbg !18079
  %bf.clear324 = and i32 %bf.lshr323, 255, !dbg !18079
  %cmp325 = icmp ne i32 %bf.clear321, %bf.clear324, !dbg !18080
  br i1 %cmp325, label %if.then327, label %if.end333, !dbg !18081

if.then327:                                       ; preds = %if.then314
  %158 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !18082
  %159 = bitcast %struct.rtx_def* %158 to i32*, !dbg !18082
  %bf.load328 = load i32, i32* %159, align 8, !dbg !18082
  %bf.lshr329 = lshr i32 %bf.load328, 16, !dbg !18082
  %bf.clear330 = and i32 %bf.lshr329, 255, !dbg !18082
  %160 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18083
  %call331 = call i32 @rhs_regno(%struct.rtx_def* %160), !dbg !18083
  %call332 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear330, i32 %call331), !dbg !18084
  store %struct.rtx_def* %call332, %struct.rtx_def** %out.addr, align 8, !dbg !18085
  br label %if.end333, !dbg !18086

if.end333:                                        ; preds = %if.then327, %if.then314
  %161 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !18087
  %162 = bitcast %struct.rtx_def* %161 to i32*, !dbg !18087
  %bf.load334 = load i32, i32* %162, align 8, !dbg !18087
  %bf.lshr335 = lshr i32 %bf.load334, 16, !dbg !18087
  %bf.clear336 = and i32 %bf.lshr335, 255, !dbg !18087
  %163 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18089
  %164 = bitcast %struct.rtx_def* %163 to i32*, !dbg !18089
  %bf.load337 = load i32, i32* %164, align 8, !dbg !18089
  %bf.lshr338 = lshr i32 %bf.load337, 16, !dbg !18089
  %bf.clear339 = and i32 %bf.lshr338, 255, !dbg !18089
  %cmp340 = icmp ne i32 %bf.clear336, %bf.clear339, !dbg !18090
  br i1 %cmp340, label %if.then342, label %if.end348, !dbg !18091

if.then342:                                       ; preds = %if.end333
  %165 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !18092
  %166 = bitcast %struct.rtx_def* %165 to i32*, !dbg !18092
  %bf.load343 = load i32, i32* %166, align 8, !dbg !18092
  %bf.lshr344 = lshr i32 %bf.load343, 16, !dbg !18092
  %bf.clear345 = and i32 %bf.lshr344, 255, !dbg !18092
  %167 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18093
  %call346 = call i32 @rhs_regno(%struct.rtx_def* %167), !dbg !18093
  %call347 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear345, i32 %call346), !dbg !18094
  store %struct.rtx_def* %call347, %struct.rtx_def** %in.addr, align 8, !dbg !18095
  br label %if.end348, !dbg !18096

if.end348:                                        ; preds = %if.then342, %if.end333
  %168 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !18097
  %169 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18098
  %170 = load i32, i32* %opnum.addr, align 4, !dbg !18099
  %171 = load i32, i32* %type.addr, align 4, !dbg !18100
  %call349 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %168, %struct.rtx_def* %169, i32 %170, i32 %171), !dbg !18101
  %172 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18102
  %173 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !18103
  %174 = load i32, i32* %opnum.addr, align 4, !dbg !18104
  %175 = load i32, i32* %type.addr, align 4, !dbg !18105
  %call350 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %172, %struct.rtx_def* %173, i32 %174, i32 %175), !dbg !18106
  br label %if.end439, !dbg !18107

if.else351:                                       ; preds = %land.lhs.true302, %land.lhs.true298, %land.lhs.true289, %lor.lhs.false284, %land.lhs.true275, %land.lhs.true266, %lor.lhs.false261
  %176 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18108
  %177 = bitcast %struct.rtx_def* %176 to i32*, !dbg !18108
  %bf.load352 = load i32, i32* %177, align 8, !dbg !18108
  %bf.clear353 = and i32 %bf.load352, 65535, !dbg !18108
  %cmp354 = icmp eq i32 %bf.clear353, 37, !dbg !18108
  br i1 %cmp354, label %land.lhs.true356, label %if.else419, !dbg !18110

land.lhs.true356:                                 ; preds = %if.else351
  %178 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18111
  %179 = bitcast %struct.rtx_def* %178 to i32*, !dbg !18111
  %bf.load357 = load i32, i32* %179, align 8, !dbg !18111
  %bf.clear358 = and i32 %bf.load357, 65535, !dbg !18111
  %idxprom359 = sext i32 %bf.clear358 to i64, !dbg !18111
  %arrayidx360 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom359, !dbg !18111
  %180 = load i32, i32* %arrayidx360, align 4, !dbg !18111
  %cmp361 = icmp eq i32 %180, 4, !dbg !18111
  br i1 %cmp361, label %if.then363, label %if.else419, !dbg !18112

if.then363:                                       ; preds = %land.lhs.true356
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn364, metadata !18113, metadata !DIExpression()), !dbg !18115
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1365, metadata !18116, metadata !DIExpression()), !dbg !18117
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out_moded, metadata !18118, metadata !DIExpression()), !dbg !18119
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !18120, metadata !DIExpression()), !dbg !18121
  %181 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18122
  %u366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1, !dbg !18122
  %fld367 = bitcast %union.u* %u366 to [1 x %union.rtunion_def]*, !dbg !18122
  %arrayidx368 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld367, i64 0, i64 0, !dbg !18122
  %rt_rtx369 = bitcast %union.rtunion_def* %arrayidx368 to %struct.rtx_def**, !dbg !18122
  %call370 = call %struct.rtx_def* @find_replacement(%struct.rtx_def** %rt_rtx369), !dbg !18123
  store %struct.rtx_def* %call370, %struct.rtx_def** %op1365, align 8, !dbg !18124
  %182 = load %struct.rtx_def*, %struct.rtx_def** %op1365, align 8, !dbg !18125
  %183 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18127
  %u371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1, !dbg !18127
  %fld372 = bitcast %union.u* %u371 to [1 x %union.rtunion_def]*, !dbg !18127
  %arrayidx373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld372, i64 0, i64 0, !dbg !18127
  %rt_rtx374 = bitcast %union.rtunion_def* %arrayidx373 to %struct.rtx_def**, !dbg !18127
  %184 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx374, align 8, !dbg !18127
  %cmp375 = icmp ne %struct.rtx_def* %182, %184, !dbg !18128
  br i1 %cmp375, label %if.then377, label %if.end384, !dbg !18129

if.then377:                                       ; preds = %if.then363
  %185 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18130
  %186 = bitcast %struct.rtx_def* %185 to i32*, !dbg !18130
  %bf.load378 = load i32, i32* %186, align 8, !dbg !18130
  %bf.clear379 = and i32 %bf.load378, 65535, !dbg !18130
  %187 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18130
  %188 = bitcast %struct.rtx_def* %187 to i32*, !dbg !18130
  %bf.load380 = load i32, i32* %188, align 8, !dbg !18130
  %bf.lshr381 = lshr i32 %bf.load380, 16, !dbg !18130
  %bf.clear382 = and i32 %bf.lshr381, 255, !dbg !18130
  %189 = load %struct.rtx_def*, %struct.rtx_def** %op1365, align 8, !dbg !18130
  %call383 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %bf.clear379, i32 %bf.clear382, %struct.rtx_def* %189), !dbg !18130
  store %struct.rtx_def* %call383, %struct.rtx_def** %in.addr, align 8, !dbg !18131
  br label %if.end384, !dbg !18132

if.end384:                                        ; preds = %if.then377, %if.then363
  %190 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18133
  %191 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18133
  %call385 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %190, %struct.rtx_def* %191), !dbg !18133
  %call386 = call %struct.rtx_def* @emit_insn_if_valid_for_reload(%struct.rtx_def* %call385), !dbg !18134
  store %struct.rtx_def* %call386, %struct.rtx_def** %set, align 8, !dbg !18135
  %192 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18136
  %tobool387 = icmp ne %struct.rtx_def* %192, null, !dbg !18136
  br i1 %tobool387, label %if.then388, label %if.end389, !dbg !18138

if.then388:                                       ; preds = %if.end384
  %193 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18139
  store %struct.rtx_def* %193, %struct.rtx_def** %retval, align 8, !dbg !18140
  br label %return, !dbg !18140

if.end389:                                        ; preds = %if.end384
  %194 = load %struct.rtx_def*, %struct.rtx_def** %op1365, align 8, !dbg !18141
  %195 = bitcast %struct.rtx_def* %194 to i32*, !dbg !18141
  %bf.load390 = load i32, i32* %195, align 8, !dbg !18141
  %bf.lshr391 = lshr i32 %bf.load390, 16, !dbg !18141
  %bf.clear392 = and i32 %bf.lshr391, 255, !dbg !18141
  %196 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18143
  %197 = bitcast %struct.rtx_def* %196 to i32*, !dbg !18143
  %bf.load393 = load i32, i32* %197, align 8, !dbg !18143
  %bf.lshr394 = lshr i32 %bf.load393, 16, !dbg !18143
  %bf.clear395 = and i32 %bf.lshr394, 255, !dbg !18143
  %cmp396 = icmp ne i32 %bf.clear392, %bf.clear395, !dbg !18144
  br i1 %cmp396, label %if.then398, label %if.else404, !dbg !18145

if.then398:                                       ; preds = %if.end389
  %198 = load %struct.rtx_def*, %struct.rtx_def** %op1365, align 8, !dbg !18146
  %199 = bitcast %struct.rtx_def* %198 to i32*, !dbg !18146
  %bf.load399 = load i32, i32* %199, align 8, !dbg !18146
  %bf.lshr400 = lshr i32 %bf.load399, 16, !dbg !18146
  %bf.clear401 = and i32 %bf.lshr400, 255, !dbg !18146
  %200 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18147
  %call402 = call i32 @rhs_regno(%struct.rtx_def* %200), !dbg !18147
  %call403 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear401, i32 %call402), !dbg !18148
  store %struct.rtx_def* %call403, %struct.rtx_def** %out_moded, align 8, !dbg !18149
  br label %if.end405, !dbg !18150

if.else404:                                       ; preds = %if.end389
  %201 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18151
  store %struct.rtx_def* %201, %struct.rtx_def** %out_moded, align 8, !dbg !18152
  br label %if.end405

if.end405:                                        ; preds = %if.else404, %if.then398
  %202 = load %struct.rtx_def*, %struct.rtx_def** %out_moded, align 8, !dbg !18153
  %203 = load %struct.rtx_def*, %struct.rtx_def** %op1365, align 8, !dbg !18154
  %204 = load i32, i32* %opnum.addr, align 4, !dbg !18155
  %205 = load i32, i32* %type.addr, align 4, !dbg !18156
  %call406 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %202, %struct.rtx_def* %203, i32 %204, i32 %205), !dbg !18157
  %206 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18158
  %207 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18158
  %208 = bitcast %struct.rtx_def* %207 to i32*, !dbg !18158
  %bf.load407 = load i32, i32* %208, align 8, !dbg !18158
  %bf.clear408 = and i32 %bf.load407, 65535, !dbg !18158
  %209 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18158
  %210 = bitcast %struct.rtx_def* %209 to i32*, !dbg !18158
  %bf.load409 = load i32, i32* %210, align 8, !dbg !18158
  %bf.lshr410 = lshr i32 %bf.load409, 16, !dbg !18158
  %bf.clear411 = and i32 %bf.lshr410, 255, !dbg !18158
  %211 = load %struct.rtx_def*, %struct.rtx_def** %out_moded, align 8, !dbg !18158
  %call412 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %bf.clear408, i32 %bf.clear411, %struct.rtx_def* %211), !dbg !18158
  %call413 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %206, %struct.rtx_def* %call412), !dbg !18158
  store %struct.rtx_def* %call413, %struct.rtx_def** %insn364, align 8, !dbg !18159
  %212 = load %struct.rtx_def*, %struct.rtx_def** %insn364, align 8, !dbg !18160
  %call414 = call %struct.rtx_def* @emit_insn_if_valid_for_reload(%struct.rtx_def* %212), !dbg !18161
  store %struct.rtx_def* %call414, %struct.rtx_def** %insn364, align 8, !dbg !18162
  %213 = load %struct.rtx_def*, %struct.rtx_def** %insn364, align 8, !dbg !18163
  %tobool415 = icmp ne %struct.rtx_def* %213, null, !dbg !18163
  br i1 %tobool415, label %if.then416, label %if.end418, !dbg !18165

if.then416:                                       ; preds = %if.end405
  %214 = load %struct.rtx_def*, %struct.rtx_def** %insn364, align 8, !dbg !18166
  %215 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18168
  %call417 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %214, i32 3, %struct.rtx_def* %215), !dbg !18169
  %216 = load %struct.rtx_def*, %struct.rtx_def** %insn364, align 8, !dbg !18170
  store %struct.rtx_def* %216, %struct.rtx_def** %retval, align 8, !dbg !18171
  br label %return, !dbg !18171

if.end418:                                        ; preds = %if.end405
  %217 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18172
  call void @_fatal_insn(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0), %struct.rtx_def* %217, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 8450, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !18172
  br label %if.end438, !dbg !18173

if.else419:                                       ; preds = %land.lhs.true356, %if.else351
  %218 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18174
  %219 = bitcast %struct.rtx_def* %218 to i32*, !dbg !18174
  %bf.load420 = load i32, i32* %219, align 8, !dbg !18174
  %bf.clear421 = and i32 %bf.load420, 65535, !dbg !18174
  %idxprom422 = sext i32 %bf.clear421 to i64, !dbg !18174
  %arrayidx423 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom422, !dbg !18174
  %220 = load i32, i32* %arrayidx423, align 4, !dbg !18174
  %and = and i32 %220, -2, !dbg !18174
  %cmp424 = icmp eq i32 %and, 8, !dbg !18174
  br i1 %cmp424, label %if.then431, label %lor.lhs.false426, !dbg !18176

lor.lhs.false426:                                 ; preds = %if.else419
  %221 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18177
  %222 = bitcast %struct.rtx_def* %221 to i32*, !dbg !18177
  %bf.load427 = load i32, i32* %222, align 8, !dbg !18177
  %bf.clear428 = and i32 %bf.load427, 65535, !dbg !18177
  %cmp429 = icmp eq i32 %bf.clear428, 39, !dbg !18178
  br i1 %cmp429, label %if.then431, label %if.else434, !dbg !18179

if.then431:                                       ; preds = %lor.lhs.false426, %if.else419
  %223 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18180
  %224 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18182
  %call432 = call %struct.rtx_def* @gen_move_insn(%struct.rtx_def* %223, %struct.rtx_def* %224), !dbg !18183
  %call433 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call432), !dbg !18184
  store %struct.rtx_def* %call433, %struct.rtx_def** %tem, align 8, !dbg !18185
  %225 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18186
  %226 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !18187
  call void @mark_jump_label(%struct.rtx_def* %225, %struct.rtx_def* %226, i32 0), !dbg !18188
  br label %if.end437, !dbg !18189

if.else434:                                       ; preds = %lor.lhs.false426
  %227 = load %struct.rtx_def*, %struct.rtx_def** %out.addr, align 8, !dbg !18190
  %228 = load %struct.rtx_def*, %struct.rtx_def** %in.addr, align 8, !dbg !18190
  %call435 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %227, %struct.rtx_def* %228), !dbg !18190
  %call436 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call435), !dbg !18191
  br label %if.end437

if.end437:                                        ; preds = %if.else434, %if.then431
  br label %if.end438

if.end438:                                        ; preds = %if.end437, %if.end418
  br label %if.end439

if.end439:                                        ; preds = %if.end438, %if.end348
  br label %if.end440

if.end440:                                        ; preds = %if.end439, %cond.end
  %229 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !18192
  %tobool441 = icmp ne %struct.rtx_def* %229, null, !dbg !18192
  br i1 %tobool441, label %cond.true442, label %cond.false447, !dbg !18192

cond.true442:                                     ; preds = %if.end440
  %230 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !18193
  %u443 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1, !dbg !18193
  %fld444 = bitcast %union.u* %u443 to [1 x %union.rtunion_def]*, !dbg !18193
  %arrayidx445 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld444, i64 0, i64 2, !dbg !18193
  %rt_rtx446 = bitcast %union.rtunion_def* %arrayidx445 to %struct.rtx_def**, !dbg !18193
  %231 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx446, align 8, !dbg !18193
  br label %cond.end449, !dbg !18192

cond.false447:                                    ; preds = %if.end440
  %call448 = call %struct.rtx_def* @get_insns(), !dbg !18194
  br label %cond.end449, !dbg !18192

cond.end449:                                      ; preds = %cond.false447, %cond.true442
  %cond450 = phi %struct.rtx_def* [ %231, %cond.true442 ], [ %call448, %cond.false447 ], !dbg !18192
  store %struct.rtx_def* %cond450, %struct.rtx_def** %retval, align 8, !dbg !18195
  br label %return, !dbg !18195

return:                                           ; preds = %cond.end449, %if.then416, %if.then388, %if.then247, %if.then191
  %232 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !18196
  ret %struct.rtx_def* %232, !dbg !18196
}

declare dso_local i32 @ix86_preferred_reload_class(%struct.rtx_def*, i32) #2

declare dso_local void @copy_reg_eh_region_note_forward(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @get_insns() #2

declare dso_local void @end_sequence() #2

declare dso_local %struct.rtx_def* @find_replacement(%struct.rtx_def**) #2

declare dso_local %struct.rtx_def* @gen_move_insn(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_add2_insn(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_sub2_insn(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local i32 @scratch_reload_class(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @emit_insn_if_valid_for_reload(%struct.rtx_def* %insn) #0 !dbg !18197 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %last = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !18200, metadata !DIExpression()), !dbg !18201
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last, metadata !18202, metadata !DIExpression()), !dbg !18203
  %call = call %struct.rtx_def* @get_last_insn(), !dbg !18204
  store %struct.rtx_def* %call, %struct.rtx_def** %last, align 8, !dbg !18203
  call void @llvm.dbg.declare(metadata i32* %code, metadata !18205, metadata !DIExpression()), !dbg !18206
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !18207
  %call1 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %0), !dbg !18208
  store %struct.rtx_def* %call1, %struct.rtx_def** %insn.addr, align 8, !dbg !18209
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !18210
  %call2 = call i32 @recog_memoized(%struct.rtx_def* %1), !dbg !18211
  store i32 %call2, i32* %code, align 4, !dbg !18212
  %2 = load i32, i32* %code, align 4, !dbg !18213
  %cmp = icmp sge i32 %2, 0, !dbg !18215
  br i1 %cmp, label %if.then, label %if.end5, !dbg !18216

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !18217
  call void @extract_insn(%struct.rtx_def* %3), !dbg !18219
  %call3 = call i32 @constrain_operands(i32 1), !dbg !18220
  %tobool = icmp ne i32 %call3, 0, !dbg !18220
  br i1 %tobool, label %if.then4, label %if.end, !dbg !18222

if.then4:                                         ; preds = %if.then
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !18223
  store %struct.rtx_def* %4, %struct.rtx_def** %retval, align 8, !dbg !18224
  br label %return, !dbg !18224

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !18225

if.end5:                                          ; preds = %if.end, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !18226
  call void @delete_insns_since(%struct.rtx_def* %5), !dbg !18227
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !18228
  br label %return, !dbg !18228

return:                                           ; preds = %if.end5, %if.then4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !18229
  ret %struct.rtx_def* %6, !dbg !18229
}

declare dso_local %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

declare dso_local i32 @reg_or_subregno(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @get_secondary_mem(%struct.rtx_def*, i32, i32, i32) #2

declare dso_local void @mark_jump_label(%struct.rtx_def*, %struct.rtx_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @delete_address_reloads(%struct.rtx_def* %dead_insn, %struct.rtx_def* %current_insn) #0 !dbg !18230 {
entry:
  %dead_insn.addr = alloca %struct.rtx_def*, align 8
  %current_insn.addr = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %set2 = alloca %struct.rtx_def*, align 8
  %dst = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %dst27 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %dead_insn, %struct.rtx_def** %dead_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dead_insn.addr, metadata !18233, metadata !DIExpression()), !dbg !18234
  store %struct.rtx_def* %current_insn, %struct.rtx_def** %current_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %current_insn.addr, metadata !18235, metadata !DIExpression()), !dbg !18236
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !18237, metadata !DIExpression()), !dbg !18238
  %0 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18239
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !18239
  %bf.load = load i32, i32* %1, align 8, !dbg !18239
  %bf.clear = and i32 %bf.load, 65535, !dbg !18239
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !18239
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !18239

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18239
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !18239
  %bf.load1 = load i32, i32* %3, align 8, !dbg !18239
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !18239
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !18239
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !18239

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18239
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !18239
  %bf.load5 = load i32, i32* %5, align 8, !dbg !18239
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !18239
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !18239
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !18239

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18239
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !18239
  %bf.load9 = load i32, i32* %7, align 8, !dbg !18239
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !18239
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !18239
  br i1 %cmp11, label %cond.true, label %cond.false24, !dbg !18239

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18239
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !18239
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !18239
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !18239
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !18239
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !18239
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !18239
  %bf.load12 = load i32, i32* %10, align 8, !dbg !18239
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !18239
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !18239
  br i1 %cmp14, label %cond.true15, label %cond.false, !dbg !18239

cond.true15:                                      ; preds = %cond.true
  %11 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18239
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !18239
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !18239
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 5, !dbg !18239
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !18239
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !18239
  br label %cond.end, !dbg !18239

cond.false:                                       ; preds = %cond.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18239
  %14 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18239
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !18239
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !18239
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 5, !dbg !18239
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !18239
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !18239
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %13, %struct.rtx_def* %15), !dbg !18239
  br label %cond.end, !dbg !18239

cond.end:                                         ; preds = %cond.false, %cond.true15
  %cond = phi %struct.rtx_def* [ %12, %cond.true15 ], [ %call, %cond.false ], !dbg !18239
  br label %cond.end25, !dbg !18239

cond.false24:                                     ; preds = %lor.lhs.false8
  br label %cond.end25, !dbg !18239

cond.end25:                                       ; preds = %cond.false24, %cond.end
  %cond26 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false24 ], !dbg !18239
  store %struct.rtx_def* %cond26, %struct.rtx_def** %set, align 8, !dbg !18238
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set2, metadata !18240, metadata !DIExpression()), !dbg !18241
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dst, metadata !18242, metadata !DIExpression()), !dbg !18243
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev, metadata !18244, metadata !DIExpression()), !dbg !18245
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !18246, metadata !DIExpression()), !dbg !18247
  %16 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18248
  %tobool = icmp ne %struct.rtx_def* %16, null, !dbg !18248
  br i1 %tobool, label %if.then, label %if.end40, !dbg !18250

if.then:                                          ; preds = %cond.end25
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dst27, metadata !18251, metadata !DIExpression()), !dbg !18253
  %17 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18254
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !18254
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !18254
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 0, !dbg !18254
  %rt_rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**, !dbg !18254
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !18254
  store %struct.rtx_def* %18, %struct.rtx_def** %dst27, align 8, !dbg !18253
  %19 = load %struct.rtx_def*, %struct.rtx_def** %dst27, align 8, !dbg !18255
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !18255
  %bf.load32 = load i32, i32* %20, align 8, !dbg !18255
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !18255
  %cmp34 = icmp eq i32 %bf.clear33, 43, !dbg !18255
  br i1 %cmp34, label %if.then35, label %if.end, !dbg !18257

if.then35:                                        ; preds = %if.then
  %21 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18258
  %22 = load %struct.rtx_def*, %struct.rtx_def** %dst27, align 8, !dbg !18259
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !18259
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !18259
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 0, !dbg !18259
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !18259
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !18259
  %24 = load %struct.rtx_def*, %struct.rtx_def** %current_insn.addr, align 8, !dbg !18260
  call void @delete_address_reloads_1(%struct.rtx_def* %21, %struct.rtx_def* %23, %struct.rtx_def* %24), !dbg !18261
  br label %if.end, !dbg !18261

if.end:                                           ; preds = %if.then35, %if.then
  br label %if.end40, !dbg !18262

if.end40:                                         ; preds = %if.end, %cond.end25
  %25 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18263
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !18263
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !18263
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 1, !dbg !18263
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !18263
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !18263
  store %struct.rtx_def* %26, %struct.rtx_def** %prev, align 8, !dbg !18264
  %27 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18265
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !18265
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !18265
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 2, !dbg !18265
  %rt_rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**, !dbg !18265
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx48, align 8, !dbg !18265
  store %struct.rtx_def* %28, %struct.rtx_def** %next, align 8, !dbg !18266
  %29 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18267
  %tobool49 = icmp ne %struct.rtx_def* %29, null, !dbg !18267
  br i1 %tobool49, label %lor.lhs.false50, label %if.then52, !dbg !18269

lor.lhs.false50:                                  ; preds = %if.end40
  %30 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18270
  %tobool51 = icmp ne %struct.rtx_def* %30, null, !dbg !18270
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !18271

if.then52:                                        ; preds = %lor.lhs.false50, %if.end40
  br label %return, !dbg !18272

if.end53:                                         ; preds = %lor.lhs.false50
  %31 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18273
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !18273
  %bf.load54 = load i32, i32* %32, align 8, !dbg !18273
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !18273
  %cmp56 = icmp eq i32 %bf.clear55, 8, !dbg !18273
  br i1 %cmp56, label %cond.true69, label %lor.lhs.false57, !dbg !18273

lor.lhs.false57:                                  ; preds = %if.end53
  %33 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18273
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !18273
  %bf.load58 = load i32, i32* %34, align 8, !dbg !18273
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !18273
  %cmp60 = icmp eq i32 %bf.clear59, 7, !dbg !18273
  br i1 %cmp60, label %cond.true69, label %lor.lhs.false61, !dbg !18273

lor.lhs.false61:                                  ; preds = %lor.lhs.false57
  %35 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18273
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !18273
  %bf.load62 = load i32, i32* %36, align 8, !dbg !18273
  %bf.clear63 = and i32 %bf.load62, 65535, !dbg !18273
  %cmp64 = icmp eq i32 %bf.clear63, 9, !dbg !18273
  br i1 %cmp64, label %cond.true69, label %lor.lhs.false65, !dbg !18273

lor.lhs.false65:                                  ; preds = %lor.lhs.false61
  %37 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18273
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !18273
  %bf.load66 = load i32, i32* %38, align 8, !dbg !18273
  %bf.clear67 = and i32 %bf.load66, 65535, !dbg !18273
  %cmp68 = icmp eq i32 %bf.clear67, 10, !dbg !18273
  br i1 %cmp68, label %cond.true69, label %cond.false90, !dbg !18273

cond.true69:                                      ; preds = %lor.lhs.false65, %lor.lhs.false61, %lor.lhs.false57, %if.end53
  %39 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18273
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !18273
  %fld71 = bitcast %union.u* %u70 to [1 x %union.rtunion_def]*, !dbg !18273
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i64 0, i64 5, !dbg !18273
  %rt_rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**, !dbg !18273
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx73, align 8, !dbg !18273
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !18273
  %bf.load74 = load i32, i32* %41, align 8, !dbg !18273
  %bf.clear75 = and i32 %bf.load74, 65535, !dbg !18273
  %cmp76 = icmp eq i32 %bf.clear75, 23, !dbg !18273
  br i1 %cmp76, label %cond.true77, label %cond.false82, !dbg !18273

cond.true77:                                      ; preds = %cond.true69
  %42 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18273
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !18273
  %fld79 = bitcast %union.u* %u78 to [1 x %union.rtunion_def]*, !dbg !18273
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i64 0, i64 5, !dbg !18273
  %rt_rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**, !dbg !18273
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !18273
  br label %cond.end88, !dbg !18273

cond.false82:                                     ; preds = %cond.true69
  %44 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18273
  %45 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18273
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !18273
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !18273
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 5, !dbg !18273
  %rt_rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**, !dbg !18273
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !18273
  %call87 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %44, %struct.rtx_def* %46), !dbg !18273
  br label %cond.end88, !dbg !18273

cond.end88:                                       ; preds = %cond.false82, %cond.true77
  %cond89 = phi %struct.rtx_def* [ %43, %cond.true77 ], [ %call87, %cond.false82 ], !dbg !18273
  br label %cond.end91, !dbg !18273

cond.false90:                                     ; preds = %lor.lhs.false65
  br label %cond.end91, !dbg !18273

cond.end91:                                       ; preds = %cond.false90, %cond.end88
  %cond92 = phi %struct.rtx_def* [ %cond89, %cond.end88 ], [ null, %cond.false90 ], !dbg !18273
  store %struct.rtx_def* %cond92, %struct.rtx_def** %set, align 8, !dbg !18274
  %47 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18275
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !18275
  %bf.load93 = load i32, i32* %48, align 8, !dbg !18275
  %bf.clear94 = and i32 %bf.load93, 65535, !dbg !18275
  %cmp95 = icmp eq i32 %bf.clear94, 8, !dbg !18275
  br i1 %cmp95, label %cond.true108, label %lor.lhs.false96, !dbg !18275

lor.lhs.false96:                                  ; preds = %cond.end91
  %49 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18275
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !18275
  %bf.load97 = load i32, i32* %50, align 8, !dbg !18275
  %bf.clear98 = and i32 %bf.load97, 65535, !dbg !18275
  %cmp99 = icmp eq i32 %bf.clear98, 7, !dbg !18275
  br i1 %cmp99, label %cond.true108, label %lor.lhs.false100, !dbg !18275

lor.lhs.false100:                                 ; preds = %lor.lhs.false96
  %51 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18275
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !18275
  %bf.load101 = load i32, i32* %52, align 8, !dbg !18275
  %bf.clear102 = and i32 %bf.load101, 65535, !dbg !18275
  %cmp103 = icmp eq i32 %bf.clear102, 9, !dbg !18275
  br i1 %cmp103, label %cond.true108, label %lor.lhs.false104, !dbg !18275

lor.lhs.false104:                                 ; preds = %lor.lhs.false100
  %53 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18275
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !18275
  %bf.load105 = load i32, i32* %54, align 8, !dbg !18275
  %bf.clear106 = and i32 %bf.load105, 65535, !dbg !18275
  %cmp107 = icmp eq i32 %bf.clear106, 10, !dbg !18275
  br i1 %cmp107, label %cond.true108, label %cond.false129, !dbg !18275

cond.true108:                                     ; preds = %lor.lhs.false104, %lor.lhs.false100, %lor.lhs.false96, %cond.end91
  %55 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18275
  %u109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !18275
  %fld110 = bitcast %union.u* %u109 to [1 x %union.rtunion_def]*, !dbg !18275
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i64 0, i64 5, !dbg !18275
  %rt_rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**, !dbg !18275
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx112, align 8, !dbg !18275
  %57 = bitcast %struct.rtx_def* %56 to i32*, !dbg !18275
  %bf.load113 = load i32, i32* %57, align 8, !dbg !18275
  %bf.clear114 = and i32 %bf.load113, 65535, !dbg !18275
  %cmp115 = icmp eq i32 %bf.clear114, 23, !dbg !18275
  br i1 %cmp115, label %cond.true116, label %cond.false121, !dbg !18275

cond.true116:                                     ; preds = %cond.true108
  %58 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18275
  %u117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !18275
  %fld118 = bitcast %union.u* %u117 to [1 x %union.rtunion_def]*, !dbg !18275
  %arrayidx119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld118, i64 0, i64 5, !dbg !18275
  %rt_rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**, !dbg !18275
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx120, align 8, !dbg !18275
  br label %cond.end127, !dbg !18275

cond.false121:                                    ; preds = %cond.true108
  %60 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18275
  %61 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18275
  %u122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !18275
  %fld123 = bitcast %union.u* %u122 to [1 x %union.rtunion_def]*, !dbg !18275
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i64 0, i64 5, !dbg !18275
  %rt_rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**, !dbg !18275
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx125, align 8, !dbg !18275
  %call126 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %60, %struct.rtx_def* %62), !dbg !18275
  br label %cond.end127, !dbg !18275

cond.end127:                                      ; preds = %cond.false121, %cond.true116
  %cond128 = phi %struct.rtx_def* [ %59, %cond.true116 ], [ %call126, %cond.false121 ], !dbg !18275
  br label %cond.end130, !dbg !18275

cond.false129:                                    ; preds = %lor.lhs.false104
  br label %cond.end130, !dbg !18275

cond.end130:                                      ; preds = %cond.false129, %cond.end127
  %cond131 = phi %struct.rtx_def* [ %cond128, %cond.end127 ], [ null, %cond.false129 ], !dbg !18275
  store %struct.rtx_def* %cond131, %struct.rtx_def** %set2, align 8, !dbg !18276
  %63 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18277
  %tobool132 = icmp ne %struct.rtx_def* %63, null, !dbg !18277
  br i1 %tobool132, label %lor.lhs.false133, label %if.then175, !dbg !18279

lor.lhs.false133:                                 ; preds = %cond.end130
  %64 = load %struct.rtx_def*, %struct.rtx_def** %set2, align 8, !dbg !18280
  %tobool134 = icmp ne %struct.rtx_def* %64, null, !dbg !18280
  br i1 %tobool134, label %lor.lhs.false135, label %if.then175, !dbg !18281

lor.lhs.false135:                                 ; preds = %lor.lhs.false133
  %65 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18282
  %u136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !18282
  %fld137 = bitcast %union.u* %u136 to [1 x %union.rtunion_def]*, !dbg !18282
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i64 0, i64 1, !dbg !18282
  %rt_rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**, !dbg !18282
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx139, align 8, !dbg !18282
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !18282
  %bf.load140 = load i32, i32* %67, align 8, !dbg !18282
  %bf.clear141 = and i32 %bf.load140, 65535, !dbg !18282
  %cmp142 = icmp ne i32 %bf.clear141, 49, !dbg !18283
  br i1 %cmp142, label %if.then175, label %lor.lhs.false143, !dbg !18284

lor.lhs.false143:                                 ; preds = %lor.lhs.false135
  %68 = load %struct.rtx_def*, %struct.rtx_def** %set2, align 8, !dbg !18285
  %u144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !18285
  %fld145 = bitcast %union.u* %u144 to [1 x %union.rtunion_def]*, !dbg !18285
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i64 0, i64 1, !dbg !18285
  %rt_rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**, !dbg !18285
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx147, align 8, !dbg !18285
  %70 = bitcast %struct.rtx_def* %69 to i32*, !dbg !18285
  %bf.load148 = load i32, i32* %70, align 8, !dbg !18285
  %bf.clear149 = and i32 %bf.load148, 65535, !dbg !18285
  %cmp150 = icmp ne i32 %bf.clear149, 49, !dbg !18286
  br i1 %cmp150, label %if.then175, label %lor.lhs.false151, !dbg !18287

lor.lhs.false151:                                 ; preds = %lor.lhs.false143
  %71 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18288
  %u152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !18288
  %fld153 = bitcast %union.u* %u152 to [1 x %union.rtunion_def]*, !dbg !18288
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i64 0, i64 1, !dbg !18288
  %rt_rtx155 = bitcast %union.rtunion_def* %arrayidx154 to %struct.rtx_def**, !dbg !18288
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx155, align 8, !dbg !18288
  %u156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !18288
  %fld157 = bitcast %union.u* %u156 to [1 x %union.rtunion_def]*, !dbg !18288
  %arrayidx158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld157, i64 0, i64 1, !dbg !18288
  %rt_rtx159 = bitcast %union.rtunion_def* %arrayidx158 to %struct.rtx_def**, !dbg !18288
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx159, align 8, !dbg !18288
  %74 = bitcast %struct.rtx_def* %73 to i32*, !dbg !18288
  %bf.load160 = load i32, i32* %74, align 8, !dbg !18288
  %bf.clear161 = and i32 %bf.load160, 65535, !dbg !18288
  %cmp162 = icmp eq i32 %bf.clear161, 30, !dbg !18288
  br i1 %cmp162, label %lor.lhs.false163, label %if.then175, !dbg !18289

lor.lhs.false163:                                 ; preds = %lor.lhs.false151
  %75 = load %struct.rtx_def*, %struct.rtx_def** %set2, align 8, !dbg !18290
  %u164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !18290
  %fld165 = bitcast %union.u* %u164 to [1 x %union.rtunion_def]*, !dbg !18290
  %arrayidx166 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld165, i64 0, i64 1, !dbg !18290
  %rt_rtx167 = bitcast %union.rtunion_def* %arrayidx166 to %struct.rtx_def**, !dbg !18290
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx167, align 8, !dbg !18290
  %u168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !18290
  %fld169 = bitcast %union.u* %u168 to [1 x %union.rtunion_def]*, !dbg !18290
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i64 0, i64 1, !dbg !18290
  %rt_rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**, !dbg !18290
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx171, align 8, !dbg !18290
  %78 = bitcast %struct.rtx_def* %77 to i32*, !dbg !18290
  %bf.load172 = load i32, i32* %78, align 8, !dbg !18290
  %bf.clear173 = and i32 %bf.load172, 65535, !dbg !18290
  %cmp174 = icmp eq i32 %bf.clear173, 30, !dbg !18290
  br i1 %cmp174, label %if.end176, label %if.then175, !dbg !18291

if.then175:                                       ; preds = %lor.lhs.false163, %lor.lhs.false151, %lor.lhs.false143, %lor.lhs.false135, %lor.lhs.false133, %cond.end130
  br label %return, !dbg !18292

if.end176:                                        ; preds = %lor.lhs.false163
  %79 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18293
  %u177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !18293
  %fld178 = bitcast %union.u* %u177 to [1 x %union.rtunion_def]*, !dbg !18293
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i64 0, i64 0, !dbg !18293
  %rt_rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**, !dbg !18293
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx180, align 8, !dbg !18293
  store %struct.rtx_def* %80, %struct.rtx_def** %dst, align 8, !dbg !18294
  %81 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18295
  %82 = load %struct.rtx_def*, %struct.rtx_def** %set2, align 8, !dbg !18297
  %u181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1, !dbg !18297
  %fld182 = bitcast %union.u* %u181 to [1 x %union.rtunion_def]*, !dbg !18297
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i64 0, i64 0, !dbg !18297
  %rt_rtx184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**, !dbg !18297
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx184, align 8, !dbg !18297
  %call185 = call i32 @rtx_equal_p(%struct.rtx_def* %81, %struct.rtx_def* %83), !dbg !18298
  %tobool186 = icmp ne i32 %call185, 0, !dbg !18298
  br i1 %tobool186, label %lor.lhs.false187, label %if.then232, !dbg !18299

lor.lhs.false187:                                 ; preds = %if.end176
  %84 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18300
  %85 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18301
  %u188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1, !dbg !18301
  %fld189 = bitcast %union.u* %u188 to [1 x %union.rtunion_def]*, !dbg !18301
  %arrayidx190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld189, i64 0, i64 1, !dbg !18301
  %rt_rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**, !dbg !18301
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx191, align 8, !dbg !18301
  %u192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !18301
  %fld193 = bitcast %union.u* %u192 to [1 x %union.rtunion_def]*, !dbg !18301
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i64 0, i64 0, !dbg !18301
  %rt_rtx195 = bitcast %union.rtunion_def* %arrayidx194 to %struct.rtx_def**, !dbg !18301
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx195, align 8, !dbg !18301
  %call196 = call i32 @rtx_equal_p(%struct.rtx_def* %84, %struct.rtx_def* %87), !dbg !18302
  %tobool197 = icmp ne i32 %call196, 0, !dbg !18302
  br i1 %tobool197, label %lor.lhs.false198, label %if.then232, !dbg !18303

lor.lhs.false198:                                 ; preds = %lor.lhs.false187
  %88 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18304
  %89 = load %struct.rtx_def*, %struct.rtx_def** %set2, align 8, !dbg !18305
  %u199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1, !dbg !18305
  %fld200 = bitcast %union.u* %u199 to [1 x %union.rtunion_def]*, !dbg !18305
  %arrayidx201 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld200, i64 0, i64 1, !dbg !18305
  %rt_rtx202 = bitcast %union.rtunion_def* %arrayidx201 to %struct.rtx_def**, !dbg !18305
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx202, align 8, !dbg !18305
  %u203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1, !dbg !18305
  %fld204 = bitcast %union.u* %u203 to [1 x %union.rtunion_def]*, !dbg !18305
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i64 0, i64 0, !dbg !18305
  %rt_rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**, !dbg !18305
  %91 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx206, align 8, !dbg !18305
  %call207 = call i32 @rtx_equal_p(%struct.rtx_def* %88, %struct.rtx_def* %91), !dbg !18306
  %tobool208 = icmp ne i32 %call207, 0, !dbg !18306
  br i1 %tobool208, label %lor.lhs.false209, label %if.then232, !dbg !18307

lor.lhs.false209:                                 ; preds = %lor.lhs.false198
  %92 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18308
  %u210 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !18308
  %fld211 = bitcast %union.u* %u210 to [1 x %union.rtunion_def]*, !dbg !18308
  %arrayidx212 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld211, i64 0, i64 1, !dbg !18308
  %rt_rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**, !dbg !18308
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx213, align 8, !dbg !18308
  %u214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1, !dbg !18308
  %fld215 = bitcast %union.u* %u214 to [1 x %union.rtunion_def]*, !dbg !18308
  %arrayidx216 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld215, i64 0, i64 1, !dbg !18308
  %rt_rtx217 = bitcast %union.rtunion_def* %arrayidx216 to %struct.rtx_def**, !dbg !18308
  %94 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx217, align 8, !dbg !18308
  %u218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1, !dbg !18308
  %hwint = bitcast %union.u* %u218 to [1 x i64]*, !dbg !18308
  %arrayidx219 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !18308
  %95 = load i64, i64* %arrayidx219, align 8, !dbg !18308
  %96 = load %struct.rtx_def*, %struct.rtx_def** %set2, align 8, !dbg !18309
  %u220 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1, !dbg !18309
  %fld221 = bitcast %union.u* %u220 to [1 x %union.rtunion_def]*, !dbg !18309
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i64 0, i64 1, !dbg !18309
  %rt_rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**, !dbg !18309
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx223, align 8, !dbg !18309
  %u224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1, !dbg !18309
  %fld225 = bitcast %union.u* %u224 to [1 x %union.rtunion_def]*, !dbg !18309
  %arrayidx226 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld225, i64 0, i64 1, !dbg !18309
  %rt_rtx227 = bitcast %union.rtunion_def* %arrayidx226 to %struct.rtx_def**, !dbg !18309
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx227, align 8, !dbg !18309
  %u228 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1, !dbg !18309
  %hwint229 = bitcast %union.u* %u228 to [1 x i64]*, !dbg !18309
  %arrayidx230 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint229, i64 0, i64 0, !dbg !18309
  %99 = load i64, i64* %arrayidx230, align 8, !dbg !18309
  %sub = sub nsw i64 0, %99, !dbg !18310
  %cmp231 = icmp ne i64 %95, %sub, !dbg !18311
  br i1 %cmp231, label %if.then232, label %if.end233, !dbg !18312

if.then232:                                       ; preds = %lor.lhs.false209, %lor.lhs.false198, %lor.lhs.false187, %if.end176
  br label %return, !dbg !18313

if.end233:                                        ; preds = %lor.lhs.false209
  %100 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18314
  %call234 = call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %100), !dbg !18315
  %101 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18316
  %call235 = call %struct.rtx_def* @delete_related_insns(%struct.rtx_def* %101), !dbg !18317
  br label %return, !dbg !18318

return:                                           ; preds = %if.end233, %if.then232, %if.then175, %if.then52
  ret void, !dbg !18318
}

; Function Attrs: noinline nounwind uwtable
define internal void @delete_address_reloads_1(%struct.rtx_def* %dead_insn, %struct.rtx_def* %x, %struct.rtx_def* %current_insn) #0 !dbg !18319 {
entry:
  %dead_insn.addr = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %current_insn.addr = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %dst = alloca %struct.rtx_def*, align 8
  %i2 = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  store %struct.rtx_def* %dead_insn, %struct.rtx_def** %dead_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dead_insn.addr, metadata !18320, metadata !DIExpression()), !dbg !18321
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !18322, metadata !DIExpression()), !dbg !18323
  store %struct.rtx_def* %current_insn, %struct.rtx_def** %current_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %current_insn.addr, metadata !18324, metadata !DIExpression()), !dbg !18325
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev, metadata !18326, metadata !DIExpression()), !dbg !18327
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !18328, metadata !DIExpression()), !dbg !18329
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dst, metadata !18330, metadata !DIExpression()), !dbg !18331
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %i2, metadata !18332, metadata !DIExpression()), !dbg !18333
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18334, metadata !DIExpression()), !dbg !18335
  call void @llvm.dbg.declare(metadata i32* %j, metadata !18336, metadata !DIExpression()), !dbg !18337
  call void @llvm.dbg.declare(metadata i32* %code, metadata !18338, metadata !DIExpression()), !dbg !18339
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !18340
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !18340
  %bf.load = load i32, i32* %1, align 8, !dbg !18340
  %bf.clear = and i32 %bf.load, 65535, !dbg !18340
  store i32 %bf.clear, i32* %code, align 4, !dbg !18339
  %2 = load i32, i32* %code, align 4, !dbg !18341
  %cmp = icmp ne i32 %2, 37, !dbg !18343
  br i1 %cmp, label %if.then, label %if.end39, !dbg !18344

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !18345, metadata !DIExpression()), !dbg !18347
  %3 = load i32, i32* %code, align 4, !dbg !18348
  %idxprom = sext i32 %3 to i64, !dbg !18348
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !18348
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !18348
  store i8* %4, i8** %fmt, align 8, !dbg !18347
  %5 = load i32, i32* %code, align 4, !dbg !18349
  %idxprom1 = sext i32 %5 to i64, !dbg !18349
  %arrayidx2 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom1, !dbg !18349
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !18349
  %conv = zext i8 %6 to i32, !dbg !18349
  %sub = sub nsw i32 %conv, 1, !dbg !18351
  store i32 %sub, i32* %i, align 4, !dbg !18352
  br label %for.cond, !dbg !18353

for.cond:                                         ; preds = %for.inc36, %if.then
  %7 = load i32, i32* %i, align 4, !dbg !18354
  %cmp3 = icmp sge i32 %7, 0, !dbg !18356
  br i1 %cmp3, label %for.body, label %for.end38, !dbg !18357

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %fmt, align 8, !dbg !18358
  %9 = load i32, i32* %i, align 4, !dbg !18361
  %idxprom5 = sext i32 %9 to i64, !dbg !18358
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 %idxprom5, !dbg !18358
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !18358
  %conv7 = sext i8 %10 to i32, !dbg !18358
  %cmp8 = icmp eq i32 %conv7, 101, !dbg !18362
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !18363

if.then10:                                        ; preds = %for.body
  %11 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18364
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !18365
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !18365
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !18365
  %13 = load i32, i32* %i, align 4, !dbg !18365
  %idxprom11 = sext i32 %13 to i64, !dbg !18365
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom11, !dbg !18365
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !18365
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !18365
  %15 = load %struct.rtx_def*, %struct.rtx_def** %current_insn.addr, align 8, !dbg !18366
  call void @delete_address_reloads_1(%struct.rtx_def* %11, %struct.rtx_def* %14, %struct.rtx_def* %15), !dbg !18367
  br label %if.end35, !dbg !18367

if.else:                                          ; preds = %for.body
  %16 = load i8*, i8** %fmt, align 8, !dbg !18368
  %17 = load i32, i32* %i, align 4, !dbg !18370
  %idxprom13 = sext i32 %17 to i64, !dbg !18368
  %arrayidx14 = getelementptr inbounds i8, i8* %16, i64 %idxprom13, !dbg !18368
  %18 = load i8, i8* %arrayidx14, align 1, !dbg !18368
  %conv15 = sext i8 %18 to i32, !dbg !18368
  %cmp16 = icmp eq i32 %conv15, 69, !dbg !18371
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !18372

if.then18:                                        ; preds = %if.else
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !18373
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !18373
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !18373
  %20 = load i32, i32* %i, align 4, !dbg !18373
  %idxprom21 = sext i32 %20 to i64, !dbg !18373
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 %idxprom21, !dbg !18373
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtvec_def**, !dbg !18373
  %21 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !18373
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %21, i32 0, i32 0, !dbg !18373
  %22 = load i32, i32* %num_elem, align 8, !dbg !18373
  %sub23 = sub nsw i32 %22, 1, !dbg !18376
  store i32 %sub23, i32* %j, align 4, !dbg !18377
  br label %for.cond24, !dbg !18378

for.cond24:                                       ; preds = %for.inc, %if.then18
  %23 = load i32, i32* %j, align 4, !dbg !18379
  %cmp25 = icmp sge i32 %23, 0, !dbg !18381
  br i1 %cmp25, label %for.body27, label %for.end, !dbg !18382

for.body27:                                       ; preds = %for.cond24
  %24 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18383
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !18384
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !18384
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !18384
  %26 = load i32, i32* %i, align 4, !dbg !18384
  %idxprom30 = sext i32 %26 to i64, !dbg !18384
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 %idxprom30, !dbg !18384
  %rt_rtvec32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtvec_def**, !dbg !18384
  %27 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec32, align 8, !dbg !18384
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %27, i32 0, i32 1, !dbg !18384
  %28 = load i32, i32* %j, align 4, !dbg !18384
  %idxprom33 = sext i32 %28 to i64, !dbg !18384
  %arrayidx34 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom33, !dbg !18384
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx34, align 8, !dbg !18384
  %30 = load %struct.rtx_def*, %struct.rtx_def** %current_insn.addr, align 8, !dbg !18385
  call void @delete_address_reloads_1(%struct.rtx_def* %24, %struct.rtx_def* %29, %struct.rtx_def* %30), !dbg !18386
  br label %for.inc, !dbg !18386

for.inc:                                          ; preds = %for.body27
  %31 = load i32, i32* %j, align 4, !dbg !18387
  %dec = add nsw i32 %31, -1, !dbg !18387
  store i32 %dec, i32* %j, align 4, !dbg !18387
  br label %for.cond24, !dbg !18388, !llvm.loop !18389

for.end:                                          ; preds = %for.cond24
  br label %if.end, !dbg !18391

if.end:                                           ; preds = %for.end, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end, %if.then10
  br label %for.inc36, !dbg !18392

for.inc36:                                        ; preds = %if.end35
  %32 = load i32, i32* %i, align 4, !dbg !18393
  %dec37 = add nsw i32 %32, -1, !dbg !18393
  store i32 %dec37, i32* %i, align 4, !dbg !18393
  br label %for.cond, !dbg !18394, !llvm.loop !18395

for.end38:                                        ; preds = %for.cond
  br label %return, !dbg !18397

if.end39:                                         ; preds = %entry
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !18398
  %call = call i32 @rhs_regno(%struct.rtx_def* %33), !dbg !18398
  %idxprom40 = zext i32 %call to i64, !dbg !18400
  %arrayidx41 = getelementptr inbounds [53 x i16], [53 x i16]* @spill_reg_order, i64 0, i64 %idxprom40, !dbg !18400
  %34 = load i16, i16* %arrayidx41, align 2, !dbg !18400
  %conv42 = sext i16 %34 to i32, !dbg !18400
  %cmp43 = icmp slt i32 %conv42, 0, !dbg !18401
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !18402

if.then45:                                        ; preds = %if.end39
  br label %return, !dbg !18403

if.end46:                                         ; preds = %if.end39
  %35 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18404
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !18404
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !18404
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 1, !dbg !18404
  %rt_rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !18404
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !18404
  store %struct.rtx_def* %36, %struct.rtx_def** %prev, align 8, !dbg !18406
  br label %for.cond51, !dbg !18407

for.cond51:                                       ; preds = %for.inc98, %if.end46
  %37 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18408
  %tobool = icmp ne %struct.rtx_def* %37, null, !dbg !18410
  br i1 %tobool, label %for.body52, label %for.end103, !dbg !18410

for.body52:                                       ; preds = %for.cond51
  %38 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18411
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !18411
  %bf.load53 = load i32, i32* %39, align 8, !dbg !18411
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !18411
  store i32 %bf.clear54, i32* %code, align 4, !dbg !18413
  %40 = load i32, i32* %code, align 4, !dbg !18414
  %cmp55 = icmp eq i32 %40, 12, !dbg !18416
  br i1 %cmp55, label %if.then59, label %lor.lhs.false, !dbg !18417

lor.lhs.false:                                    ; preds = %for.body52
  %41 = load i32, i32* %code, align 4, !dbg !18418
  %cmp57 = icmp eq i32 %41, 9, !dbg !18419
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !18420

if.then59:                                        ; preds = %lor.lhs.false, %for.body52
  br label %return, !dbg !18421

if.end60:                                         ; preds = %lor.lhs.false
  %42 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18422
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !18422
  %bf.load61 = load i32, i32* %43, align 8, !dbg !18422
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !18422
  %cmp63 = icmp eq i32 %bf.clear62, 8, !dbg !18422
  br i1 %cmp63, label %if.end81, label %lor.lhs.false65, !dbg !18422

lor.lhs.false65:                                  ; preds = %if.end60
  %44 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18422
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !18422
  %bf.load66 = load i32, i32* %45, align 8, !dbg !18422
  %bf.clear67 = and i32 %bf.load66, 65535, !dbg !18422
  %cmp68 = icmp eq i32 %bf.clear67, 7, !dbg !18422
  br i1 %cmp68, label %if.end81, label %lor.lhs.false70, !dbg !18422

lor.lhs.false70:                                  ; preds = %lor.lhs.false65
  %46 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18422
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !18422
  %bf.load71 = load i32, i32* %47, align 8, !dbg !18422
  %bf.clear72 = and i32 %bf.load71, 65535, !dbg !18422
  %cmp73 = icmp eq i32 %bf.clear72, 9, !dbg !18422
  br i1 %cmp73, label %if.end81, label %lor.lhs.false75, !dbg !18422

lor.lhs.false75:                                  ; preds = %lor.lhs.false70
  %48 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18422
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !18422
  %bf.load76 = load i32, i32* %49, align 8, !dbg !18422
  %bf.clear77 = and i32 %bf.load76, 65535, !dbg !18422
  %cmp78 = icmp eq i32 %bf.clear77, 10, !dbg !18422
  br i1 %cmp78, label %if.end81, label %if.then80, !dbg !18424

if.then80:                                        ; preds = %lor.lhs.false75
  br label %for.inc98, !dbg !18425

if.end81:                                         ; preds = %lor.lhs.false75, %lor.lhs.false70, %lor.lhs.false65, %if.end60
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !18426
  %51 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18428
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !18428
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !18428
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 5, !dbg !18428
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !18428
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !18428
  %call86 = call i32 @reg_set_p(%struct.rtx_def* %50, %struct.rtx_def* %52), !dbg !18429
  %tobool87 = icmp ne i32 %call86, 0, !dbg !18429
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !18430

if.then88:                                        ; preds = %if.end81
  br label %for.end103, !dbg !18431

if.end89:                                         ; preds = %if.end81
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !18432
  %54 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18434
  %u90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !18434
  %fld91 = bitcast %union.u* %u90 to [1 x %union.rtunion_def]*, !dbg !18434
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i64 0, i64 5, !dbg !18434
  %rt_rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**, !dbg !18434
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93, align 8, !dbg !18434
  %call94 = call i32 @reg_referenced_p(%struct.rtx_def* %53, %struct.rtx_def* %55), !dbg !18435
  %tobool95 = icmp ne i32 %call94, 0, !dbg !18435
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !18436

if.then96:                                        ; preds = %if.end89
  br label %return, !dbg !18437

if.end97:                                         ; preds = %if.end89
  br label %for.inc98, !dbg !18438

for.inc98:                                        ; preds = %if.end97, %if.then80
  %56 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18439
  %u99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !18439
  %fld100 = bitcast %union.u* %u99 to [1 x %union.rtunion_def]*, !dbg !18439
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i64 0, i64 1, !dbg !18439
  %rt_rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**, !dbg !18439
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx102, align 8, !dbg !18439
  store %struct.rtx_def* %57, %struct.rtx_def** %prev, align 8, !dbg !18440
  br label %for.cond51, !dbg !18441, !llvm.loop !18442

for.end103:                                       ; preds = %if.then88, %for.cond51
  %58 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18444
  %tobool104 = icmp ne %struct.rtx_def* %58, null, !dbg !18444
  br i1 %tobool104, label %lor.lhs.false105, label %if.then111, !dbg !18446

lor.lhs.false105:                                 ; preds = %for.end103
  %59 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18447
  %u106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !18447
  %fld107 = bitcast %union.u* %u106 to [1 x %union.rtunion_def]*, !dbg !18447
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 0, !dbg !18447
  %rt_int = bitcast %union.rtunion_def* %arrayidx108 to i32*, !dbg !18447
  %60 = load i32, i32* %rt_int, align 8, !dbg !18447
  %61 = load i32, i32* @reload_first_uid, align 4, !dbg !18448
  %cmp109 = icmp slt i32 %60, %61, !dbg !18449
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !18450

if.then111:                                       ; preds = %lor.lhs.false105, %for.end103
  br label %return, !dbg !18451

if.end112:                                        ; preds = %lor.lhs.false105
  %62 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18452
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !18452
  %bf.load113 = load i32, i32* %63, align 8, !dbg !18452
  %bf.clear114 = and i32 %bf.load113, 65535, !dbg !18452
  %cmp115 = icmp eq i32 %bf.clear114, 8, !dbg !18452
  br i1 %cmp115, label %cond.true, label %lor.lhs.false117, !dbg !18452

lor.lhs.false117:                                 ; preds = %if.end112
  %64 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18452
  %65 = bitcast %struct.rtx_def* %64 to i32*, !dbg !18452
  %bf.load118 = load i32, i32* %65, align 8, !dbg !18452
  %bf.clear119 = and i32 %bf.load118, 65535, !dbg !18452
  %cmp120 = icmp eq i32 %bf.clear119, 7, !dbg !18452
  br i1 %cmp120, label %cond.true, label %lor.lhs.false122, !dbg !18452

lor.lhs.false122:                                 ; preds = %lor.lhs.false117
  %66 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18452
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !18452
  %bf.load123 = load i32, i32* %67, align 8, !dbg !18452
  %bf.clear124 = and i32 %bf.load123, 65535, !dbg !18452
  %cmp125 = icmp eq i32 %bf.clear124, 9, !dbg !18452
  br i1 %cmp125, label %cond.true, label %lor.lhs.false127, !dbg !18452

lor.lhs.false127:                                 ; preds = %lor.lhs.false122
  %68 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18452
  %69 = bitcast %struct.rtx_def* %68 to i32*, !dbg !18452
  %bf.load128 = load i32, i32* %69, align 8, !dbg !18452
  %bf.clear129 = and i32 %bf.load128, 65535, !dbg !18452
  %cmp130 = icmp eq i32 %bf.clear129, 10, !dbg !18452
  br i1 %cmp130, label %cond.true, label %cond.false150, !dbg !18452

cond.true:                                        ; preds = %lor.lhs.false127, %lor.lhs.false122, %lor.lhs.false117, %if.end112
  %70 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18452
  %u132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !18452
  %fld133 = bitcast %union.u* %u132 to [1 x %union.rtunion_def]*, !dbg !18452
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i64 0, i64 5, !dbg !18452
  %rt_rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**, !dbg !18452
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx135, align 8, !dbg !18452
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !18452
  %bf.load136 = load i32, i32* %72, align 8, !dbg !18452
  %bf.clear137 = and i32 %bf.load136, 65535, !dbg !18452
  %cmp138 = icmp eq i32 %bf.clear137, 23, !dbg !18452
  br i1 %cmp138, label %cond.true140, label %cond.false, !dbg !18452

cond.true140:                                     ; preds = %cond.true
  %73 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18452
  %u141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !18452
  %fld142 = bitcast %union.u* %u141 to [1 x %union.rtunion_def]*, !dbg !18452
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i64 0, i64 5, !dbg !18452
  %rt_rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**, !dbg !18452
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx144, align 8, !dbg !18452
  br label %cond.end, !dbg !18452

cond.false:                                       ; preds = %cond.true
  %75 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18452
  %76 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18452
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !18452
  %fld146 = bitcast %union.u* %u145 to [1 x %union.rtunion_def]*, !dbg !18452
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i64 0, i64 5, !dbg !18452
  %rt_rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**, !dbg !18452
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx148, align 8, !dbg !18452
  %call149 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %75, %struct.rtx_def* %77), !dbg !18452
  br label %cond.end, !dbg !18452

cond.end:                                         ; preds = %cond.false, %cond.true140
  %cond = phi %struct.rtx_def* [ %74, %cond.true140 ], [ %call149, %cond.false ], !dbg !18452
  br label %cond.end151, !dbg !18452

cond.false150:                                    ; preds = %lor.lhs.false127
  br label %cond.end151, !dbg !18452

cond.end151:                                      ; preds = %cond.false150, %cond.end
  %cond152 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false150 ], !dbg !18452
  store %struct.rtx_def* %cond152, %struct.rtx_def** %set, align 8, !dbg !18453
  %78 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18454
  %tobool153 = icmp ne %struct.rtx_def* %78, null, !dbg !18454
  br i1 %tobool153, label %if.end155, label %if.then154, !dbg !18456

if.then154:                                       ; preds = %cond.end151
  br label %return, !dbg !18457

if.end155:                                        ; preds = %cond.end151
  %79 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18458
  %u156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !18458
  %fld157 = bitcast %union.u* %u156 to [1 x %union.rtunion_def]*, !dbg !18458
  %arrayidx158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld157, i64 0, i64 0, !dbg !18458
  %rt_rtx159 = bitcast %union.rtunion_def* %arrayidx158 to %struct.rtx_def**, !dbg !18458
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx159, align 8, !dbg !18458
  store %struct.rtx_def* %80, %struct.rtx_def** %dst, align 8, !dbg !18459
  %81 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18460
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !18460
  %bf.load160 = load i32, i32* %82, align 8, !dbg !18460
  %bf.clear161 = and i32 %bf.load160, 65535, !dbg !18460
  %cmp162 = icmp eq i32 %bf.clear161, 37, !dbg !18460
  br i1 %cmp162, label %lor.lhs.false164, label %if.then167, !dbg !18462

lor.lhs.false164:                                 ; preds = %if.end155
  %83 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18463
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !18464
  %call165 = call i32 @rtx_equal_p(%struct.rtx_def* %83, %struct.rtx_def* %84), !dbg !18465
  %tobool166 = icmp ne i32 %call165, 0, !dbg !18465
  br i1 %tobool166, label %if.end168, label %if.then167, !dbg !18466

if.then167:                                       ; preds = %lor.lhs.false164, %if.end155
  br label %return, !dbg !18467

if.end168:                                        ; preds = %lor.lhs.false164
  %85 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18468
  %86 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18470
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !18470
  %fld170 = bitcast %union.u* %u169 to [1 x %union.rtunion_def]*, !dbg !18470
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i64 0, i64 5, !dbg !18470
  %rt_rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**, !dbg !18470
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx172, align 8, !dbg !18470
  %call173 = call i32 @reg_set_p(%struct.rtx_def* %85, %struct.rtx_def* %87), !dbg !18471
  %tobool174 = icmp ne i32 %call173, 0, !dbg !18471
  br i1 %tobool174, label %if.end317, label %if.then175, !dbg !18472

if.then175:                                       ; preds = %if.end168
  %88 = load %struct.rtx_def*, %struct.rtx_def** %dead_insn.addr, align 8, !dbg !18473
  %u176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1, !dbg !18473
  %fld177 = bitcast %union.u* %u176 to [1 x %union.rtunion_def]*, !dbg !18473
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i64 0, i64 2, !dbg !18473
  %rt_rtx179 = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtx_def**, !dbg !18473
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx179, align 8, !dbg !18473
  store %struct.rtx_def* %89, %struct.rtx_def** %i2, align 8, !dbg !18476
  br label %for.cond180, !dbg !18477

for.cond180:                                      ; preds = %for.inc311, %if.then175
  %90 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !18478
  %tobool181 = icmp ne %struct.rtx_def* %90, null, !dbg !18480
  br i1 %tobool181, label %for.body182, label %for.end316, !dbg !18480

for.body182:                                      ; preds = %for.cond180
  %91 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !18481
  %92 = bitcast %struct.rtx_def* %91 to i32*, !dbg !18481
  %bf.load183 = load i32, i32* %92, align 8, !dbg !18481
  %bf.clear184 = and i32 %bf.load183, 65535, !dbg !18481
  %cmp185 = icmp eq i32 %bf.clear184, 12, !dbg !18481
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !18484

if.then187:                                       ; preds = %for.body182
  br label %for.end316, !dbg !18485

if.end188:                                        ; preds = %for.body182
  %93 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !18486
  %94 = bitcast %struct.rtx_def* %93 to i32*, !dbg !18486
  %bf.load189 = load i32, i32* %94, align 8, !dbg !18486
  %bf.clear190 = and i32 %bf.load189, 65535, !dbg !18486
  %cmp191 = icmp eq i32 %bf.clear190, 8, !dbg !18486
  br i1 %cmp191, label %if.end209, label %lor.lhs.false193, !dbg !18486

lor.lhs.false193:                                 ; preds = %if.end188
  %95 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !18486
  %96 = bitcast %struct.rtx_def* %95 to i32*, !dbg !18486
  %bf.load194 = load i32, i32* %96, align 8, !dbg !18486
  %bf.clear195 = and i32 %bf.load194, 65535, !dbg !18486
  %cmp196 = icmp eq i32 %bf.clear195, 7, !dbg !18486
  br i1 %cmp196, label %if.end209, label %lor.lhs.false198, !dbg !18486

lor.lhs.false198:                                 ; preds = %lor.lhs.false193
  %97 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !18486
  %98 = bitcast %struct.rtx_def* %97 to i32*, !dbg !18486
  %bf.load199 = load i32, i32* %98, align 8, !dbg !18486
  %bf.clear200 = and i32 %bf.load199, 65535, !dbg !18486
  %cmp201 = icmp eq i32 %bf.clear200, 9, !dbg !18486
  br i1 %cmp201, label %if.end209, label %lor.lhs.false203, !dbg !18486

lor.lhs.false203:                                 ; preds = %lor.lhs.false198
  %99 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !18486
  %100 = bitcast %struct.rtx_def* %99 to i32*, !dbg !18486
  %bf.load204 = load i32, i32* %100, align 8, !dbg !18486
  %bf.clear205 = and i32 %bf.load204, 65535, !dbg !18486
  %cmp206 = icmp eq i32 %bf.clear205, 10, !dbg !18486
  br i1 %cmp206, label %if.end209, label %if.then208, !dbg !18488

if.then208:                                       ; preds = %lor.lhs.false203
  br label %for.inc311, !dbg !18489

if.end209:                                        ; preds = %lor.lhs.false203, %lor.lhs.false198, %lor.lhs.false193, %if.end188
  %101 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18490
  %102 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !18492
  %u210 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1, !dbg !18492
  %fld211 = bitcast %union.u* %u210 to [1 x %union.rtunion_def]*, !dbg !18492
  %arrayidx212 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld211, i64 0, i64 5, !dbg !18492
  %rt_rtx213 = bitcast %union.rtunion_def* %arrayidx212 to %struct.rtx_def**, !dbg !18492
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx213, align 8, !dbg !18492
  %call214 = call i32 @reg_referenced_p(%struct.rtx_def* %101, %struct.rtx_def* %103), !dbg !18493
  %tobool215 = icmp ne i32 %call214, 0, !dbg !18493
  br i1 %tobool215, label %if.then216, label %if.end267, !dbg !18494

if.then216:                                       ; preds = %if.end209
  %104 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !18495
  %105 = load %struct.rtx_def*, %struct.rtx_def** %current_insn.addr, align 8, !dbg !18498
  %cmp217 = icmp eq %struct.rtx_def* %104, %105, !dbg !18499
  br i1 %cmp217, label %if.then219, label %if.end266, !dbg !18500

if.then219:                                       ; preds = %if.then216
  %106 = load i32, i32* @n_reloads, align 4, !dbg !18501
  %sub220 = sub nsw i32 %106, 1, !dbg !18504
  store i32 %sub220, i32* %j, align 4, !dbg !18505
  br label %for.cond221, !dbg !18506

for.cond221:                                      ; preds = %for.inc240, %if.then219
  %107 = load i32, i32* %j, align 4, !dbg !18507
  %cmp222 = icmp sge i32 %107, 0, !dbg !18509
  br i1 %cmp222, label %for.body224, label %for.end242, !dbg !18510

for.body224:                                      ; preds = %for.cond221
  %108 = load i32, i32* %j, align 4, !dbg !18511
  %idxprom225 = sext i32 %108 to i64, !dbg !18513
  %arrayidx226 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom225, !dbg !18513
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx226, i32 0, i32 11, !dbg !18514
  %109 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !18514
  %110 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18515
  %cmp227 = icmp eq %struct.rtx_def* %109, %110, !dbg !18516
  br i1 %cmp227, label %land.lhs.true, label %lor.lhs.false233, !dbg !18517

land.lhs.true:                                    ; preds = %for.body224
  %111 = load i32, i32* %j, align 4, !dbg !18518
  %idxprom229 = sext i32 %111 to i64, !dbg !18519
  %arrayidx230 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom229, !dbg !18519
  %112 = load i8, i8* %arrayidx230, align 1, !dbg !18519
  %conv231 = sext i8 %112 to i32, !dbg !18519
  %tobool232 = icmp ne i32 %conv231, 0, !dbg !18519
  br i1 %tobool232, label %if.then238, label %lor.lhs.false233, !dbg !18520

lor.lhs.false233:                                 ; preds = %land.lhs.true, %for.body224
  %113 = load i32, i32* %j, align 4, !dbg !18521
  %idxprom234 = sext i32 %113 to i64, !dbg !18522
  %arrayidx235 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom234, !dbg !18522
  %114 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx235, align 8, !dbg !18522
  %115 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18523
  %cmp236 = icmp eq %struct.rtx_def* %114, %115, !dbg !18524
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !18525

if.then238:                                       ; preds = %lor.lhs.false233, %land.lhs.true
  br label %return, !dbg !18526

if.end239:                                        ; preds = %lor.lhs.false233
  br label %for.inc240, !dbg !18523

for.inc240:                                       ; preds = %if.end239
  %116 = load i32, i32* %j, align 4, !dbg !18527
  %dec241 = add nsw i32 %116, -1, !dbg !18527
  store i32 %dec241, i32* %j, align 4, !dbg !18527
  br label %for.cond221, !dbg !18528, !llvm.loop !18529

for.end242:                                       ; preds = %for.cond221
  %117 = load i32, i32* @n_reloads, align 4, !dbg !18531
  %sub243 = sub nsw i32 %117, 1, !dbg !18533
  store i32 %sub243, i32* %j, align 4, !dbg !18534
  br label %for.cond244, !dbg !18535

for.cond244:                                      ; preds = %for.inc259, %for.end242
  %118 = load i32, i32* %j, align 4, !dbg !18536
  %cmp245 = icmp sge i32 %118, 0, !dbg !18538
  br i1 %cmp245, label %for.body247, label %for.end261, !dbg !18539

for.body247:                                      ; preds = %for.cond244
  %119 = load i32, i32* %j, align 4, !dbg !18540
  %idxprom248 = sext i32 %119 to i64, !dbg !18542
  %arrayidx249 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom248, !dbg !18542
  %in = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx249, i32 0, i32 0, !dbg !18543
  %120 = load %struct.rtx_def*, %struct.rtx_def** %in, align 8, !dbg !18543
  %tobool250 = icmp ne %struct.rtx_def* %120, null, !dbg !18542
  br i1 %tobool250, label %land.lhs.true251, label %if.end258, !dbg !18544

land.lhs.true251:                                 ; preds = %for.body247
  %121 = load i32, i32* %j, align 4, !dbg !18545
  %idxprom252 = sext i32 %121 to i64, !dbg !18546
  %arrayidx253 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom252, !dbg !18546
  %reg_rtx254 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx253, i32 0, i32 11, !dbg !18547
  %122 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx254, align 8, !dbg !18547
  %123 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18548
  %cmp255 = icmp eq %struct.rtx_def* %122, %123, !dbg !18549
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !18550

if.then257:                                       ; preds = %land.lhs.true251
  br label %for.end261, !dbg !18551

if.end258:                                        ; preds = %land.lhs.true251, %for.body247
  br label %for.inc259, !dbg !18548

for.inc259:                                       ; preds = %if.end258
  %124 = load i32, i32* %j, align 4, !dbg !18552
  %dec260 = add nsw i32 %124, -1, !dbg !18552
  store i32 %dec260, i32* %j, align 4, !dbg !18552
  br label %for.cond244, !dbg !18553, !llvm.loop !18554

for.end261:                                       ; preds = %if.then257, %for.cond244
  %125 = load i32, i32* %j, align 4, !dbg !18556
  %cmp262 = icmp sge i32 %125, 0, !dbg !18558
  br i1 %cmp262, label %if.then264, label %if.end265, !dbg !18559

if.then264:                                       ; preds = %for.end261
  br label %for.end316, !dbg !18560

if.end265:                                        ; preds = %for.end261
  br label %if.end266, !dbg !18561

if.end266:                                        ; preds = %if.end265, %if.then216
  br label %return, !dbg !18562

if.end267:                                        ; preds = %if.end209
  %126 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !18563
  %127 = bitcast %struct.rtx_def* %126 to i32*, !dbg !18563
  %bf.load268 = load i32, i32* %127, align 8, !dbg !18563
  %bf.clear269 = and i32 %bf.load268, 65535, !dbg !18563
  %cmp270 = icmp eq i32 %bf.clear269, 9, !dbg !18563
  br i1 %cmp270, label %if.then272, label %if.end273, !dbg !18565

if.then272:                                       ; preds = %if.end267
  br label %for.end316, !dbg !18566

if.end273:                                        ; preds = %if.end267
  %128 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !18567
  %129 = load %struct.rtx_def*, %struct.rtx_def** %current_insn.addr, align 8, !dbg !18569
  %cmp274 = icmp eq %struct.rtx_def* %128, %129, !dbg !18570
  br i1 %cmp274, label %if.then276, label %if.end302, !dbg !18571

if.then276:                                       ; preds = %if.end273
  %130 = load i32, i32* @n_reloads, align 4, !dbg !18572
  %sub277 = sub nsw i32 %130, 1, !dbg !18575
  store i32 %sub277, i32* %j, align 4, !dbg !18576
  br label %for.cond278, !dbg !18577

for.cond278:                                      ; preds = %for.inc299, %if.then276
  %131 = load i32, i32* %j, align 4, !dbg !18578
  %cmp279 = icmp sge i32 %131, 0, !dbg !18580
  br i1 %cmp279, label %for.body281, label %for.end301, !dbg !18581

for.body281:                                      ; preds = %for.cond278
  %132 = load i32, i32* %j, align 4, !dbg !18582
  %idxprom282 = sext i32 %132 to i64, !dbg !18584
  %arrayidx283 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom282, !dbg !18584
  %reg_rtx284 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx283, i32 0, i32 11, !dbg !18585
  %133 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx284, align 8, !dbg !18585
  %134 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18586
  %cmp285 = icmp eq %struct.rtx_def* %133, %134, !dbg !18587
  br i1 %cmp285, label %land.lhs.true287, label %lor.lhs.false292, !dbg !18588

land.lhs.true287:                                 ; preds = %for.body281
  %135 = load i32, i32* %j, align 4, !dbg !18589
  %idxprom288 = sext i32 %135 to i64, !dbg !18590
  %arrayidx289 = getelementptr inbounds [180 x i8], [180 x i8]* @reload_inherited, i64 0, i64 %idxprom288, !dbg !18590
  %136 = load i8, i8* %arrayidx289, align 1, !dbg !18590
  %conv290 = sext i8 %136 to i32, !dbg !18590
  %tobool291 = icmp ne i32 %conv290, 0, !dbg !18590
  br i1 %tobool291, label %if.then297, label %lor.lhs.false292, !dbg !18591

lor.lhs.false292:                                 ; preds = %land.lhs.true287, %for.body281
  %137 = load i32, i32* %j, align 4, !dbg !18592
  %idxprom293 = sext i32 %137 to i64, !dbg !18593
  %arrayidx294 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_override_in, i64 0, i64 %idxprom293, !dbg !18593
  %138 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx294, align 8, !dbg !18593
  %139 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18594
  %cmp295 = icmp eq %struct.rtx_def* %138, %139, !dbg !18595
  br i1 %cmp295, label %if.then297, label %if.end298, !dbg !18596

if.then297:                                       ; preds = %lor.lhs.false292, %land.lhs.true287
  br label %return, !dbg !18597

if.end298:                                        ; preds = %lor.lhs.false292
  br label %for.inc299, !dbg !18594

for.inc299:                                       ; preds = %if.end298
  %140 = load i32, i32* %j, align 4, !dbg !18598
  %dec300 = add nsw i32 %140, -1, !dbg !18598
  store i32 %dec300, i32* %j, align 4, !dbg !18598
  br label %for.cond278, !dbg !18599, !llvm.loop !18600

for.end301:                                       ; preds = %for.cond278
  br label %if.end302, !dbg !18602

if.end302:                                        ; preds = %for.end301, %if.end273
  %141 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18603
  %142 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !18605
  %u303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1, !dbg !18605
  %fld304 = bitcast %union.u* %u303 to [1 x %union.rtunion_def]*, !dbg !18605
  %arrayidx305 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld304, i64 0, i64 5, !dbg !18605
  %rt_rtx306 = bitcast %union.rtunion_def* %arrayidx305 to %struct.rtx_def**, !dbg !18605
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx306, align 8, !dbg !18605
  %call307 = call i32 @reg_set_p(%struct.rtx_def* %141, %struct.rtx_def* %143), !dbg !18606
  %tobool308 = icmp ne i32 %call307, 0, !dbg !18606
  br i1 %tobool308, label %if.then309, label %if.end310, !dbg !18607

if.then309:                                       ; preds = %if.end302
  br label %for.end316, !dbg !18608

if.end310:                                        ; preds = %if.end302
  br label %for.inc311, !dbg !18609

for.inc311:                                       ; preds = %if.end310, %if.then208
  %144 = load %struct.rtx_def*, %struct.rtx_def** %i2, align 8, !dbg !18610
  %u312 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1, !dbg !18610
  %fld313 = bitcast %union.u* %u312 to [1 x %union.rtunion_def]*, !dbg !18610
  %arrayidx314 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld313, i64 0, i64 2, !dbg !18610
  %rt_rtx315 = bitcast %union.rtunion_def* %arrayidx314 to %struct.rtx_def**, !dbg !18610
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx315, align 8, !dbg !18610
  store %struct.rtx_def* %145, %struct.rtx_def** %i2, align 8, !dbg !18611
  br label %for.cond180, !dbg !18612, !llvm.loop !18613

for.end316:                                       ; preds = %if.then309, %if.then272, %if.then264, %if.then187, %for.cond180
  br label %if.end317, !dbg !18615

if.end317:                                        ; preds = %for.end316, %if.end168
  %146 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18616
  %147 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18617
  %u318 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1, !dbg !18617
  %fld319 = bitcast %union.u* %u318 to [1 x %union.rtunion_def]*, !dbg !18617
  %arrayidx320 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld319, i64 0, i64 1, !dbg !18617
  %rt_rtx321 = bitcast %union.rtunion_def* %arrayidx320 to %struct.rtx_def**, !dbg !18617
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx321, align 8, !dbg !18617
  %149 = load %struct.rtx_def*, %struct.rtx_def** %current_insn.addr, align 8, !dbg !18618
  call void @delete_address_reloads_1(%struct.rtx_def* %146, %struct.rtx_def* %148, %struct.rtx_def* %149), !dbg !18619
  %150 = load %struct.rtx_def*, %struct.rtx_def** %dst, align 8, !dbg !18620
  %call322 = call i32 @rhs_regno(%struct.rtx_def* %150), !dbg !18620
  %idxprom323 = zext i32 %call322 to i64, !dbg !18621
  %arrayidx324 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_reloaded_contents, i64 0, i64 %idxprom323, !dbg !18621
  store i32 -1, i32* %arrayidx324, align 4, !dbg !18622
  %151 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !18623
  %call325 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %151), !dbg !18624
  br label %return, !dbg !18625

return:                                           ; preds = %if.end317, %if.then297, %if.end266, %if.then238, %if.then167, %if.then154, %if.then111, %if.then96, %if.then59, %if.then45, %for.end38
  ret void, !dbg !18625
}

declare dso_local %struct.rtx_def* @delete_related_insns(%struct.rtx_def*) #2

declare dso_local i32 @reg_referenced_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @emit_output_reload_insns(%struct.insn_chain* %chain, %struct.reload* %rl, i32 %j) #0 !dbg !18626 {
entry:
  %chain.addr = alloca %struct.insn_chain*, align 8
  %rl.addr = alloca %struct.reload*, align 8
  %j.addr = alloca i32, align 4
  %reloadreg = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %special = alloca i32, align 4
  %old = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %p = alloca %struct.rtx_def*, align 8
  %rl_reg_rtx = alloca %struct.rtx_def*, align 8
  %real_old = alloca %struct.rtx_def*, align 8
  %secondary_reload = alloca i32, align 4
  %tertiary_reload = alloca i32, align 4
  %second_reloadreg = alloca %struct.rtx_def*, align 8
  %tertiary_icode = alloca i32, align 4
  %third_reloadreg = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %third_reloadreg114 = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %set237 = alloca %struct.rtx_def*, align 8
  %src = alloca i32, align 4
  %s = alloca i32, align 4
  %s_reg = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  store %struct.insn_chain* %chain, %struct.insn_chain** %chain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.insn_chain** %chain.addr, metadata !18627, metadata !DIExpression()), !dbg !18628
  store %struct.reload* %rl, %struct.reload** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.reload** %rl.addr, metadata !18629, metadata !DIExpression()), !dbg !18630
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !18631, metadata !DIExpression()), !dbg !18632
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reloadreg, metadata !18633, metadata !DIExpression()), !dbg !18634
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !18635, metadata !DIExpression()), !dbg !18636
  %0 = load %struct.insn_chain*, %struct.insn_chain** %chain.addr, align 8, !dbg !18637
  %insn1 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %0, i32 0, i32 3, !dbg !18638
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !18638
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8, !dbg !18636
  call void @llvm.dbg.declare(metadata i32* %special, metadata !18639, metadata !DIExpression()), !dbg !18640
  store i32 0, i32* %special, align 4, !dbg !18640
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old, metadata !18641, metadata !DIExpression()), !dbg !18642
  %2 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18643
  %out = getelementptr inbounds %struct.reload, %struct.reload* %2, i32 0, i32 1, !dbg !18644
  %3 = load %struct.rtx_def*, %struct.rtx_def** %out, align 8, !dbg !18644
  store %struct.rtx_def* %3, %struct.rtx_def** %old, align 8, !dbg !18642
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !18645, metadata !DIExpression()), !dbg !18646
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %p, metadata !18647, metadata !DIExpression()), !dbg !18648
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %rl_reg_rtx, metadata !18649, metadata !DIExpression()), !dbg !18650
  %4 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18651
  %when_needed = getelementptr inbounds %struct.reload, %struct.reload* %4, i32 0, i32 17, !dbg !18653
  %5 = load i32, i32* %when_needed, align 4, !dbg !18653
  %cmp = icmp eq i32 %5, 9, !dbg !18654
  br i1 %cmp, label %if.then, label %if.else, !dbg !18655

if.then:                                          ; preds = %entry
  call void @start_sequence(), !dbg !18656
  br label %if.end, !dbg !18656

if.else:                                          ; preds = %entry
  %6 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18657
  %opnum = getelementptr inbounds %struct.reload, %struct.reload* %6, i32 0, i32 12, !dbg !18658
  %7 = load i32, i32* %opnum, align 8, !dbg !18658
  %idxprom = sext i32 %7 to i64, !dbg !18659
  %arrayidx = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_reload_insns, i64 0, i64 %idxprom, !dbg !18659
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !18659
  call void @push_to_sequence(%struct.rtx_def* %8), !dbg !18660
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %j.addr, align 4, !dbg !18661
  %idxprom2 = sext i32 %9 to i64, !dbg !18662
  %arrayidx3 = getelementptr inbounds [180 x %struct.rtx_def*], [180 x %struct.rtx_def*]* @reload_reg_rtx_for_output, i64 0, i64 %idxprom2, !dbg !18662
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3, align 8, !dbg !18662
  store %struct.rtx_def* %10, %struct.rtx_def** %rl_reg_rtx, align 8, !dbg !18663
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rl_reg_rtx, align 8, !dbg !18664
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !18664
  %bf.load = load i32, i32* %12, align 8, !dbg !18664
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !18664
  %bf.clear = and i32 %bf.lshr, 255, !dbg !18664
  store i32 %bf.clear, i32* %mode, align 4, !dbg !18665
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rl_reg_rtx, align 8, !dbg !18666
  store %struct.rtx_def* %13, %struct.rtx_def** %reloadreg, align 8, !dbg !18667
  %14 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18668
  %secondary_out_reload = getelementptr inbounds %struct.reload, %struct.reload* %14, i32 0, i32 14, !dbg !18670
  %15 = load i32, i32* %secondary_out_reload, align 8, !dbg !18670
  %cmp4 = icmp sge i32 %15, 0, !dbg !18671
  br i1 %cmp4, label %if.then5, label %if.end125, !dbg !18672

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %real_old, metadata !18673, metadata !DIExpression()), !dbg !18675
  %16 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !18676
  store %struct.rtx_def* %16, %struct.rtx_def** %real_old, align 8, !dbg !18675
  call void @llvm.dbg.declare(metadata i32* %secondary_reload, metadata !18677, metadata !DIExpression()), !dbg !18678
  %17 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18679
  %secondary_out_reload6 = getelementptr inbounds %struct.reload, %struct.reload* %17, i32 0, i32 14, !dbg !18680
  %18 = load i32, i32* %secondary_out_reload6, align 8, !dbg !18680
  store i32 %18, i32* %secondary_reload, align 4, !dbg !18678
  call void @llvm.dbg.declare(metadata i32* %tertiary_reload, metadata !18681, metadata !DIExpression()), !dbg !18682
  %19 = load i32, i32* %secondary_reload, align 4, !dbg !18683
  %idxprom7 = sext i32 %19 to i64, !dbg !18684
  %arrayidx8 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom7, !dbg !18684
  %secondary_out_reload9 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx8, i32 0, i32 14, !dbg !18685
  %20 = load i32, i32* %secondary_out_reload9, align 8, !dbg !18685
  store i32 %20, i32* %tertiary_reload, align 4, !dbg !18682
  %21 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !18686
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !18686
  %bf.load10 = load i32, i32* %22, align 8, !dbg !18686
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !18686
  %cmp12 = icmp eq i32 %bf.clear11, 37, !dbg !18686
  br i1 %cmp12, label %land.lhs.true, label %if.end23, !dbg !18688

land.lhs.true:                                    ; preds = %if.then5
  %23 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !18689
  %call = call i32 @rhs_regno(%struct.rtx_def* %23), !dbg !18689
  %cmp13 = icmp uge i32 %call, 53, !dbg !18690
  br i1 %cmp13, label %land.lhs.true14, label %if.end23, !dbg !18691

land.lhs.true14:                                  ; preds = %land.lhs.true
  %24 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !18692
  %25 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !18693
  %call15 = call i32 @rhs_regno(%struct.rtx_def* %25), !dbg !18693
  %idxprom16 = zext i32 %call15 to i64, !dbg !18692
  %arrayidx17 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %24, i64 %idxprom16, !dbg !18692
  %26 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx17, align 8, !dbg !18692
  %cmp18 = icmp ne %struct.rtx_def* %26, null, !dbg !18694
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !18695

if.then19:                                        ; preds = %land.lhs.true14
  %27 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_mem, align 8, !dbg !18696
  %28 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !18697
  %call20 = call i32 @rhs_regno(%struct.rtx_def* %28), !dbg !18697
  %idxprom21 = zext i32 %call20 to i64, !dbg !18696
  %arrayidx22 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %27, i64 %idxprom21, !dbg !18696
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx22, align 8, !dbg !18696
  store %struct.rtx_def* %29, %struct.rtx_def** %real_old, align 8, !dbg !18698
  br label %if.end23, !dbg !18699

if.end23:                                         ; preds = %if.then19, %land.lhs.true14, %land.lhs.true, %if.then5
  %30 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18700
  %rclass = getelementptr inbounds %struct.reload, %struct.reload* %30, i32 0, i32 2, !dbg !18702
  %31 = load i32, i32* %rclass, align 8, !dbg !18702
  %32 = load i32, i32* %mode, align 4, !dbg !18703
  %33 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !18704
  %call24 = call i32 @secondary_reload_class(i8 zeroext 0, i32 %31, i32 %32, %struct.rtx_def* %33), !dbg !18705
  %cmp25 = icmp ne i32 %call24, 0, !dbg !18706
  br i1 %cmp25, label %if.then26, label %if.end124, !dbg !18707

if.then26:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %second_reloadreg, metadata !18708, metadata !DIExpression()), !dbg !18710
  %34 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !18711
  store %struct.rtx_def* %34, %struct.rtx_def** %second_reloadreg, align 8, !dbg !18710
  %35 = load i32, i32* %secondary_reload, align 4, !dbg !18712
  %idxprom27 = sext i32 %35 to i64, !dbg !18713
  %arrayidx28 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom27, !dbg !18713
  %reg_rtx = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx28, i32 0, i32 11, !dbg !18714
  %36 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx, align 8, !dbg !18714
  store %struct.rtx_def* %36, %struct.rtx_def** %reloadreg, align 8, !dbg !18715
  %37 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18716
  %secondary_out_icode = getelementptr inbounds %struct.reload, %struct.reload* %37, i32 0, i32 16, !dbg !18718
  %38 = load i32, i32* %secondary_out_icode, align 8, !dbg !18718
  %cmp29 = icmp ne i32 %38, 2956, !dbg !18719
  br i1 %cmp29, label %if.then30, label %if.else37, !dbg !18720

if.then30:                                        ; preds = %if.then26
  %39 = load i32, i32* %tertiary_reload, align 4, !dbg !18721
  %cmp31 = icmp slt i32 %39, 0, !dbg !18721
  br i1 %cmp31, label %cond.false, label %cond.true, !dbg !18721

cond.true:                                        ; preds = %if.then30
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 7404, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !18721
  br label %cond.end, !dbg !18721

cond.false:                                       ; preds = %if.then30
  br label %cond.end, !dbg !18721

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !18721
  %40 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18723
  %secondary_out_icode32 = getelementptr inbounds %struct.reload, %struct.reload* %40, i32 0, i32 16, !dbg !18723
  %41 = load i32, i32* %secondary_out_icode32, align 8, !dbg !18723
  %idxprom33 = zext i32 %41 to i64, !dbg !18723
  %arrayidx34 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom33, !dbg !18723
  %genfun = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx34, i32 0, i32 2, !dbg !18723
  %42 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun, align 8, !dbg !18723
  %43 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !18724
  %44 = load %struct.rtx_def*, %struct.rtx_def** %second_reloadreg, align 8, !dbg !18725
  %45 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !18726
  %call35 = call %struct.rtx_def* (%struct.rtx_def*, ...) %42(%struct.rtx_def* %43, %struct.rtx_def* %44, %struct.rtx_def* %45), !dbg !18723
  %call36 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call35), !dbg !18727
  store i32 1, i32* %special, align 4, !dbg !18728
  br label %if.end123, !dbg !18729

if.else37:                                        ; preds = %if.then26
  call void @llvm.dbg.declare(metadata i32* %tertiary_icode, metadata !18730, metadata !DIExpression()), !dbg !18732
  %46 = load i32, i32* %secondary_reload, align 4, !dbg !18733
  %idxprom38 = sext i32 %46 to i64, !dbg !18734
  %arrayidx39 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom38, !dbg !18734
  %secondary_out_icode40 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx39, i32 0, i32 16, !dbg !18735
  %47 = load i32, i32* %secondary_out_icode40, align 8, !dbg !18735
  store i32 %47, i32* %tertiary_icode, align 4, !dbg !18732
  %48 = load i32, i32* %tertiary_reload, align 4, !dbg !18736
  %cmp41 = icmp slt i32 %48, 0, !dbg !18736
  br i1 %cmp41, label %cond.false47, label %lor.lhs.false, !dbg !18736

lor.lhs.false:                                    ; preds = %if.else37
  %49 = load i32, i32* %tertiary_reload, align 4, !dbg !18736
  %idxprom42 = sext i32 %49 to i64, !dbg !18736
  %arrayidx43 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom42, !dbg !18736
  %secondary_out_reload44 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx43, i32 0, i32 14, !dbg !18736
  %50 = load i32, i32* %secondary_out_reload44, align 8, !dbg !18736
  %cmp45 = icmp slt i32 %50, 0, !dbg !18736
  br i1 %cmp45, label %cond.false47, label %cond.true46, !dbg !18736

cond.true46:                                      ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 7420, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !18736
  br label %cond.end48, !dbg !18736

cond.false47:                                     ; preds = %lor.lhs.false, %if.else37
  br label %cond.end48, !dbg !18736

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond49 = phi i32 [ 0, %cond.true46 ], [ 0, %cond.false47 ], !dbg !18736
  %51 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !18737
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !18737
  %bf.load50 = load i32, i32* %52, align 8, !dbg !18737
  %bf.lshr51 = lshr i32 %bf.load50, 16, !dbg !18737
  %bf.clear52 = and i32 %bf.lshr51, 255, !dbg !18737
  %53 = load i32, i32* %mode, align 4, !dbg !18739
  %cmp53 = icmp ne i32 %bf.clear52, %53, !dbg !18740
  br i1 %cmp53, label %if.then54, label %if.end56, !dbg !18741

if.then54:                                        ; preds = %cond.end48
  %54 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !18742
  %55 = load i32, i32* %mode, align 4, !dbg !18743
  %call55 = call %struct.rtx_def* @reload_adjust_reg_for_mode(%struct.rtx_def* %54, i32 %55), !dbg !18744
  store %struct.rtx_def* %call55, %struct.rtx_def** %reloadreg, align 8, !dbg !18745
  br label %if.end56, !dbg !18746

if.end56:                                         ; preds = %if.then54, %cond.end48
  %56 = load i32, i32* %tertiary_icode, align 4, !dbg !18747
  %cmp57 = icmp ne i32 %56, 2956, !dbg !18749
  br i1 %cmp57, label %if.then58, label %if.else107, !dbg !18750

if.then58:                                        ; preds = %if.end56
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %third_reloadreg, metadata !18751, metadata !DIExpression()), !dbg !18753
  %57 = load i32, i32* %tertiary_reload, align 4, !dbg !18754
  %idxprom59 = sext i32 %57 to i64, !dbg !18755
  %arrayidx60 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom59, !dbg !18755
  %reg_rtx61 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx60, i32 0, i32 11, !dbg !18756
  %58 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx61, align 8, !dbg !18756
  store %struct.rtx_def* %58, %struct.rtx_def** %third_reloadreg, align 8, !dbg !18753
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !18757, metadata !DIExpression()), !dbg !18758
  %59 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !18759
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !18759
  %bf.load62 = load i32, i32* %60, align 8, !dbg !18759
  %bf.clear63 = and i32 %bf.load62, 65535, !dbg !18759
  %cmp64 = icmp eq i32 %bf.clear63, 39, !dbg !18761
  br i1 %cmp64, label %land.lhs.true65, label %if.end98, !dbg !18762

land.lhs.true65:                                  ; preds = %if.then58
  %61 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !18763
  %62 = bitcast %struct.rtx_def* %61 to i32*, !dbg !18763
  %bf.load66 = load i32, i32* %62, align 8, !dbg !18763
  %bf.lshr67 = lshr i32 %bf.load66, 16, !dbg !18763
  %bf.clear68 = and i32 %bf.lshr67, 255, !dbg !18763
  %idxprom69 = zext i32 %bf.clear68 to i64, !dbg !18763
  %arrayidx70 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom69, !dbg !18763
  %63 = load i8, i8* %arrayidx70, align 1, !dbg !18763
  %conv = zext i8 %63 to i16, !dbg !18763
  %conv71 = zext i16 %conv to i32, !dbg !18763
  %64 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !18764
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1, !dbg !18764
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !18764
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !18764
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**, !dbg !18764
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !18764
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !18764
  %bf.load73 = load i32, i32* %66, align 8, !dbg !18764
  %bf.lshr74 = lshr i32 %bf.load73, 16, !dbg !18764
  %bf.clear75 = and i32 %bf.lshr74, 255, !dbg !18764
  %idxprom76 = zext i32 %bf.clear75 to i64, !dbg !18764
  %arrayidx77 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom76, !dbg !18764
  %67 = load i8, i8* %arrayidx77, align 1, !dbg !18764
  %conv78 = zext i8 %67 to i16, !dbg !18764
  %conv79 = zext i16 %conv78 to i32, !dbg !18764
  %cmp80 = icmp sgt i32 %conv71, %conv79, !dbg !18765
  br i1 %cmp80, label %land.lhs.true82, label %if.end98, !dbg !18766

land.lhs.true82:                                  ; preds = %land.lhs.true65
  %68 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !18767
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !18767
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !18767
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 0, !dbg !18767
  %rt_rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**, !dbg !18767
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !18767
  %70 = bitcast %struct.rtx_def* %69 to i32*, !dbg !18767
  %bf.load87 = load i32, i32* %70, align 8, !dbg !18767
  %bf.lshr88 = lshr i32 %bf.load87, 16, !dbg !18767
  %bf.clear89 = and i32 %bf.lshr88, 255, !dbg !18767
  %71 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !18768
  %call90 = call %struct.rtx_def* @gen_lowpart_common(i32 %bf.clear89, %struct.rtx_def* %71), !dbg !18769
  store %struct.rtx_def* %call90, %struct.rtx_def** %tem, align 8, !dbg !18770
  %cmp91 = icmp ne %struct.rtx_def* null, %call90, !dbg !18771
  br i1 %cmp91, label %if.then93, label %if.end98, !dbg !18772

if.then93:                                        ; preds = %land.lhs.true82
  %72 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !18773
  %u94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !18773
  %fld95 = bitcast %union.u* %u94 to [1 x %union.rtunion_def]*, !dbg !18773
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i64 0, i64 0, !dbg !18773
  %rt_rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**, !dbg !18773
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97, align 8, !dbg !18773
  store %struct.rtx_def* %73, %struct.rtx_def** %real_old, align 8, !dbg !18774
  %74 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !18775
  store %struct.rtx_def* %74, %struct.rtx_def** %reloadreg, align 8, !dbg !18776
  br label %if.end98, !dbg !18777

if.end98:                                         ; preds = %if.then93, %land.lhs.true82, %land.lhs.true65, %if.then58
  %75 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !18778
  %76 = load %struct.rtx_def*, %struct.rtx_def** %second_reloadreg, align 8, !dbg !18779
  %77 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18780
  %opnum99 = getelementptr inbounds %struct.reload, %struct.reload* %77, i32 0, i32 12, !dbg !18781
  %78 = load i32, i32* %opnum99, align 8, !dbg !18781
  %79 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18782
  %when_needed100 = getelementptr inbounds %struct.reload, %struct.reload* %79, i32 0, i32 17, !dbg !18783
  %80 = load i32, i32* %when_needed100, align 4, !dbg !18783
  %call101 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %75, %struct.rtx_def* %76, i32 %78, i32 %80), !dbg !18784
  %81 = load i32, i32* %tertiary_icode, align 4, !dbg !18785
  %idxprom102 = zext i32 %81 to i64, !dbg !18785
  %arrayidx103 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom102, !dbg !18785
  %genfun104 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx103, i32 0, i32 2, !dbg !18785
  %82 = load %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.rtx_def* (%struct.rtx_def*, ...)** %genfun104, align 8, !dbg !18785
  %83 = load %struct.rtx_def*, %struct.rtx_def** %real_old, align 8, !dbg !18786
  %84 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !18787
  %85 = load %struct.rtx_def*, %struct.rtx_def** %third_reloadreg, align 8, !dbg !18788
  %call105 = call %struct.rtx_def* (%struct.rtx_def*, ...) %82(%struct.rtx_def* %83, %struct.rtx_def* %84, %struct.rtx_def* %85), !dbg !18785
  %call106 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call105), !dbg !18789
  store i32 1, i32* %special, align 4, !dbg !18790
  br label %if.end122, !dbg !18791

if.else107:                                       ; preds = %if.end56
  %86 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !18792
  %87 = load %struct.rtx_def*, %struct.rtx_def** %second_reloadreg, align 8, !dbg !18794
  %88 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18795
  %opnum108 = getelementptr inbounds %struct.reload, %struct.reload* %88, i32 0, i32 12, !dbg !18796
  %89 = load i32, i32* %opnum108, align 8, !dbg !18796
  %90 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18797
  %when_needed109 = getelementptr inbounds %struct.reload, %struct.reload* %90, i32 0, i32 17, !dbg !18798
  %91 = load i32, i32* %when_needed109, align 4, !dbg !18798
  %call110 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %86, %struct.rtx_def* %87, i32 %89, i32 %91), !dbg !18799
  %92 = load i32, i32* %tertiary_reload, align 4, !dbg !18800
  %cmp111 = icmp sge i32 %92, 0, !dbg !18802
  br i1 %cmp111, label %if.then113, label %if.end121, !dbg !18803

if.then113:                                       ; preds = %if.else107
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %third_reloadreg114, metadata !18804, metadata !DIExpression()), !dbg !18806
  %93 = load i32, i32* %tertiary_reload, align 4, !dbg !18807
  %idxprom115 = sext i32 %93 to i64, !dbg !18808
  %arrayidx116 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom115, !dbg !18808
  %reg_rtx117 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx116, i32 0, i32 11, !dbg !18809
  %94 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx117, align 8, !dbg !18809
  store %struct.rtx_def* %94, %struct.rtx_def** %third_reloadreg114, align 8, !dbg !18806
  %95 = load %struct.rtx_def*, %struct.rtx_def** %third_reloadreg114, align 8, !dbg !18810
  %96 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !18811
  %97 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18812
  %opnum118 = getelementptr inbounds %struct.reload, %struct.reload* %97, i32 0, i32 12, !dbg !18813
  %98 = load i32, i32* %opnum118, align 8, !dbg !18813
  %99 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18814
  %when_needed119 = getelementptr inbounds %struct.reload, %struct.reload* %99, i32 0, i32 17, !dbg !18815
  %100 = load i32, i32* %when_needed119, align 4, !dbg !18815
  %call120 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %95, %struct.rtx_def* %96, i32 %98, i32 %100), !dbg !18816
  %101 = load %struct.rtx_def*, %struct.rtx_def** %third_reloadreg114, align 8, !dbg !18817
  store %struct.rtx_def* %101, %struct.rtx_def** %reloadreg, align 8, !dbg !18818
  br label %if.end121, !dbg !18819

if.end121:                                        ; preds = %if.then113, %if.else107
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end98
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %cond.end
  br label %if.end124, !dbg !18820

if.end124:                                        ; preds = %if.end123, %if.end23
  br label %if.end125, !dbg !18821

if.end125:                                        ; preds = %if.end124, %if.end
  %102 = load i32, i32* %special, align 4, !dbg !18822
  %tobool = icmp ne i32 %102, 0, !dbg !18822
  br i1 %tobool, label %if.end207, label %if.then126, !dbg !18824

if.then126:                                       ; preds = %if.end125
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !18825, metadata !DIExpression()), !dbg !18827
  %103 = load i32, i32* @flag_expensive_optimizations, align 4, !dbg !18828
  %tobool127 = icmp ne i32 %103, 0, !dbg !18828
  br i1 %tobool127, label %lor.lhs.false128, label %if.then202, !dbg !18830

lor.lhs.false128:                                 ; preds = %if.then126
  %104 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !18831
  %105 = bitcast %struct.rtx_def* %104 to i32*, !dbg !18831
  %bf.load129 = load i32, i32* %105, align 8, !dbg !18831
  %bf.clear130 = and i32 %bf.load129, 65535, !dbg !18831
  %cmp131 = icmp eq i32 %bf.clear130, 37, !dbg !18831
  br i1 %cmp131, label %lor.lhs.false133, label %if.then202, !dbg !18832

lor.lhs.false133:                                 ; preds = %lor.lhs.false128
  %106 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18833
  %107 = bitcast %struct.rtx_def* %106 to i32*, !dbg !18833
  %bf.load134 = load i32, i32* %107, align 8, !dbg !18833
  %bf.clear135 = and i32 %bf.load134, 65535, !dbg !18833
  %cmp136 = icmp eq i32 %bf.clear135, 8, !dbg !18833
  br i1 %cmp136, label %cond.true153, label %lor.lhs.false138, !dbg !18833

lor.lhs.false138:                                 ; preds = %lor.lhs.false133
  %108 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18833
  %109 = bitcast %struct.rtx_def* %108 to i32*, !dbg !18833
  %bf.load139 = load i32, i32* %109, align 8, !dbg !18833
  %bf.clear140 = and i32 %bf.load139, 65535, !dbg !18833
  %cmp141 = icmp eq i32 %bf.clear140, 7, !dbg !18833
  br i1 %cmp141, label %cond.true153, label %lor.lhs.false143, !dbg !18833

lor.lhs.false143:                                 ; preds = %lor.lhs.false138
  %110 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18833
  %111 = bitcast %struct.rtx_def* %110 to i32*, !dbg !18833
  %bf.load144 = load i32, i32* %111, align 8, !dbg !18833
  %bf.clear145 = and i32 %bf.load144, 65535, !dbg !18833
  %cmp146 = icmp eq i32 %bf.clear145, 9, !dbg !18833
  br i1 %cmp146, label %cond.true153, label %lor.lhs.false148, !dbg !18833

lor.lhs.false148:                                 ; preds = %lor.lhs.false143
  %112 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18833
  %113 = bitcast %struct.rtx_def* %112 to i32*, !dbg !18833
  %bf.load149 = load i32, i32* %113, align 8, !dbg !18833
  %bf.clear150 = and i32 %bf.load149, 65535, !dbg !18833
  %cmp151 = icmp eq i32 %bf.clear150, 10, !dbg !18833
  br i1 %cmp151, label %cond.true153, label %cond.false175, !dbg !18833

cond.true153:                                     ; preds = %lor.lhs.false148, %lor.lhs.false143, %lor.lhs.false138, %lor.lhs.false133
  %114 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18833
  %u154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1, !dbg !18833
  %fld155 = bitcast %union.u* %u154 to [1 x %union.rtunion_def]*, !dbg !18833
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i64 0, i64 5, !dbg !18833
  %rt_rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**, !dbg !18833
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx157, align 8, !dbg !18833
  %116 = bitcast %struct.rtx_def* %115 to i32*, !dbg !18833
  %bf.load158 = load i32, i32* %116, align 8, !dbg !18833
  %bf.clear159 = and i32 %bf.load158, 65535, !dbg !18833
  %cmp160 = icmp eq i32 %bf.clear159, 23, !dbg !18833
  br i1 %cmp160, label %cond.true162, label %cond.false167, !dbg !18833

cond.true162:                                     ; preds = %cond.true153
  %117 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18833
  %u163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1, !dbg !18833
  %fld164 = bitcast %union.u* %u163 to [1 x %union.rtunion_def]*, !dbg !18833
  %arrayidx165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld164, i64 0, i64 5, !dbg !18833
  %rt_rtx166 = bitcast %union.rtunion_def* %arrayidx165 to %struct.rtx_def**, !dbg !18833
  %118 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx166, align 8, !dbg !18833
  br label %cond.end173, !dbg !18833

cond.false167:                                    ; preds = %cond.true153
  %119 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18833
  %120 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18833
  %u168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !18833
  %fld169 = bitcast %union.u* %u168 to [1 x %union.rtunion_def]*, !dbg !18833
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i64 0, i64 5, !dbg !18833
  %rt_rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**, !dbg !18833
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx171, align 8, !dbg !18833
  %call172 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %119, %struct.rtx_def* %121), !dbg !18833
  br label %cond.end173, !dbg !18833

cond.end173:                                      ; preds = %cond.false167, %cond.true162
  %cond174 = phi %struct.rtx_def* [ %118, %cond.true162 ], [ %call172, %cond.false167 ], !dbg !18833
  br label %cond.end176, !dbg !18833

cond.false175:                                    ; preds = %lor.lhs.false148
  br label %cond.end176, !dbg !18833

cond.end176:                                      ; preds = %cond.false175, %cond.end173
  %cond177 = phi %struct.rtx_def* [ %cond174, %cond.end173 ], [ null, %cond.false175 ], !dbg !18833
  store %struct.rtx_def* %cond177, %struct.rtx_def** %set, align 8, !dbg !18834
  %tobool178 = icmp ne %struct.rtx_def* %cond177, null, !dbg !18834
  br i1 %tobool178, label %lor.lhs.false179, label %if.then202, !dbg !18835

lor.lhs.false179:                                 ; preds = %cond.end176
  %122 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !18836
  %123 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18837
  %u180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1, !dbg !18837
  %fld181 = bitcast %union.u* %u180 to [1 x %union.rtunion_def]*, !dbg !18837
  %arrayidx182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i64 0, i64 0, !dbg !18837
  %rt_rtx183 = bitcast %union.rtunion_def* %arrayidx182 to %struct.rtx_def**, !dbg !18837
  %124 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx183, align 8, !dbg !18837
  %call184 = call i32 @rtx_equal_p(%struct.rtx_def* %122, %struct.rtx_def* %124), !dbg !18838
  %tobool185 = icmp ne i32 %call184, 0, !dbg !18838
  br i1 %tobool185, label %if.then202, label %lor.lhs.false186, !dbg !18839

lor.lhs.false186:                                 ; preds = %lor.lhs.false179
  %125 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !18840
  %126 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !18841
  %u187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1, !dbg !18841
  %fld188 = bitcast %union.u* %u187 to [1 x %union.rtunion_def]*, !dbg !18841
  %arrayidx189 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld188, i64 0, i64 1, !dbg !18841
  %rt_rtx190 = bitcast %union.rtunion_def* %arrayidx189 to %struct.rtx_def**, !dbg !18841
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx190, align 8, !dbg !18841
  %call191 = call i32 @reg_mentioned_p(%struct.rtx_def* %125, %struct.rtx_def* %127), !dbg !18842
  %tobool192 = icmp ne i32 %call191, 0, !dbg !18842
  br i1 %tobool192, label %lor.lhs.false193, label %if.then202, !dbg !18843

lor.lhs.false193:                                 ; preds = %lor.lhs.false186
  %128 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !18844
  %call194 = call i32 @rhs_regno(%struct.rtx_def* %128), !dbg !18844
  %cmp195 = icmp ult i32 %call194, 53, !dbg !18845
  br i1 %cmp195, label %land.lhs.true197, label %if.then202, !dbg !18846

land.lhs.true197:                                 ; preds = %lor.lhs.false193
  %129 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !18847
  %call198 = call i32 @rhs_regno(%struct.rtx_def* %129), !dbg !18847
  %130 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18848
  %131 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18849
  %mode199 = getelementptr inbounds %struct.reload, %struct.reload* %131, i32 0, i32 5, !dbg !18850
  %132 = load i32, i32* %mode199, align 4, !dbg !18850
  %call200 = call i32 @regno_clobbered_p(i32 %call198, %struct.rtx_def* %130, i32 %132, i32 0), !dbg !18851
  %tobool201 = icmp ne i32 %call200, 0, !dbg !18851
  br i1 %tobool201, label %if.end206, label %if.then202, !dbg !18852

if.then202:                                       ; preds = %land.lhs.true197, %lor.lhs.false193, %lor.lhs.false186, %lor.lhs.false179, %cond.end176, %lor.lhs.false128, %if.then126
  %133 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !18853
  %134 = load %struct.rtx_def*, %struct.rtx_def** %reloadreg, align 8, !dbg !18854
  %135 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18855
  %opnum203 = getelementptr inbounds %struct.reload, %struct.reload* %135, i32 0, i32 12, !dbg !18856
  %136 = load i32, i32* %opnum203, align 8, !dbg !18856
  %137 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18857
  %when_needed204 = getelementptr inbounds %struct.reload, %struct.reload* %137, i32 0, i32 17, !dbg !18858
  %138 = load i32, i32* %when_needed204, align 4, !dbg !18858
  %call205 = call %struct.rtx_def* @gen_reload(%struct.rtx_def* %133, %struct.rtx_def* %134, i32 %136, i32 %138), !dbg !18859
  br label %if.end206, !dbg !18859

if.end206:                                        ; preds = %if.then202, %land.lhs.true197
  br label %if.end207, !dbg !18860

if.end207:                                        ; preds = %if.end206, %if.end125
  %call208 = call %struct.rtx_def* @get_insns(), !dbg !18861
  store %struct.rtx_def* %call208, %struct.rtx_def** %p, align 8, !dbg !18863
  br label %for.cond, !dbg !18864

for.cond:                                         ; preds = %for.inc, %if.end207
  %139 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18865
  %tobool209 = icmp ne %struct.rtx_def* %139, null, !dbg !18867
  br i1 %tobool209, label %for.body, label %for.end, !dbg !18867

for.body:                                         ; preds = %for.cond
  %140 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18868
  %141 = bitcast %struct.rtx_def* %140 to i32*, !dbg !18868
  %bf.load210 = load i32, i32* %141, align 8, !dbg !18868
  %bf.clear211 = and i32 %bf.load210, 65535, !dbg !18868
  %cmp212 = icmp eq i32 %bf.clear211, 8, !dbg !18868
  br i1 %cmp212, label %if.then229, label %lor.lhs.false214, !dbg !18868

lor.lhs.false214:                                 ; preds = %for.body
  %142 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18868
  %143 = bitcast %struct.rtx_def* %142 to i32*, !dbg !18868
  %bf.load215 = load i32, i32* %143, align 8, !dbg !18868
  %bf.clear216 = and i32 %bf.load215, 65535, !dbg !18868
  %cmp217 = icmp eq i32 %bf.clear216, 7, !dbg !18868
  br i1 %cmp217, label %if.then229, label %lor.lhs.false219, !dbg !18868

lor.lhs.false219:                                 ; preds = %lor.lhs.false214
  %144 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18868
  %145 = bitcast %struct.rtx_def* %144 to i32*, !dbg !18868
  %bf.load220 = load i32, i32* %145, align 8, !dbg !18868
  %bf.clear221 = and i32 %bf.load220, 65535, !dbg !18868
  %cmp222 = icmp eq i32 %bf.clear221, 9, !dbg !18868
  br i1 %cmp222, label %if.then229, label %lor.lhs.false224, !dbg !18868

lor.lhs.false224:                                 ; preds = %lor.lhs.false219
  %146 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18868
  %147 = bitcast %struct.rtx_def* %146 to i32*, !dbg !18868
  %bf.load225 = load i32, i32* %147, align 8, !dbg !18868
  %bf.clear226 = and i32 %bf.load225, 65535, !dbg !18868
  %cmp227 = icmp eq i32 %bf.clear226, 10, !dbg !18868
  br i1 %cmp227, label %if.then229, label %if.end475, !dbg !18870

if.then229:                                       ; preds = %lor.lhs.false224, %lor.lhs.false219, %lor.lhs.false214, %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat, metadata !18871, metadata !DIExpression()), !dbg !18873
  %148 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18874
  %u230 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1, !dbg !18874
  %fld231 = bitcast %union.u* %u230 to [1 x %union.rtunion_def]*, !dbg !18874
  %arrayidx232 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld231, i64 0, i64 5, !dbg !18874
  %rt_rtx233 = bitcast %union.rtunion_def* %arrayidx232 to %struct.rtx_def**, !dbg !18874
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx233, align 8, !dbg !18874
  store %struct.rtx_def* %149, %struct.rtx_def** %pat, align 8, !dbg !18873
  %150 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !18875
  call void @note_stores(%struct.rtx_def* %150, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @forget_old_reloads_1, i8* null), !dbg !18876
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rl_reg_rtx, align 8, !dbg !18877
  %152 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !18879
  %call234 = call i32 @reg_mentioned_p(%struct.rtx_def* %151, %struct.rtx_def* %152), !dbg !18880
  %tobool235 = icmp ne i32 %call234, 0, !dbg !18880
  br i1 %tobool235, label %if.then236, label %if.end474, !dbg !18881

if.then236:                                       ; preds = %if.then229
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set237, metadata !18882, metadata !DIExpression()), !dbg !18884
  %153 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18885
  %154 = bitcast %struct.rtx_def* %153 to i32*, !dbg !18885
  %bf.load238 = load i32, i32* %154, align 8, !dbg !18885
  %bf.clear239 = and i32 %bf.load238, 65535, !dbg !18885
  %cmp240 = icmp eq i32 %bf.clear239, 8, !dbg !18885
  br i1 %cmp240, label %cond.true257, label %lor.lhs.false242, !dbg !18885

lor.lhs.false242:                                 ; preds = %if.then236
  %155 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18885
  %156 = bitcast %struct.rtx_def* %155 to i32*, !dbg !18885
  %bf.load243 = load i32, i32* %156, align 8, !dbg !18885
  %bf.clear244 = and i32 %bf.load243, 65535, !dbg !18885
  %cmp245 = icmp eq i32 %bf.clear244, 7, !dbg !18885
  br i1 %cmp245, label %cond.true257, label %lor.lhs.false247, !dbg !18885

lor.lhs.false247:                                 ; preds = %lor.lhs.false242
  %157 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18885
  %158 = bitcast %struct.rtx_def* %157 to i32*, !dbg !18885
  %bf.load248 = load i32, i32* %158, align 8, !dbg !18885
  %bf.clear249 = and i32 %bf.load248, 65535, !dbg !18885
  %cmp250 = icmp eq i32 %bf.clear249, 9, !dbg !18885
  br i1 %cmp250, label %cond.true257, label %lor.lhs.false252, !dbg !18885

lor.lhs.false252:                                 ; preds = %lor.lhs.false247
  %159 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18885
  %160 = bitcast %struct.rtx_def* %159 to i32*, !dbg !18885
  %bf.load253 = load i32, i32* %160, align 8, !dbg !18885
  %bf.clear254 = and i32 %bf.load253, 65535, !dbg !18885
  %cmp255 = icmp eq i32 %bf.clear254, 10, !dbg !18885
  br i1 %cmp255, label %cond.true257, label %cond.false279, !dbg !18885

cond.true257:                                     ; preds = %lor.lhs.false252, %lor.lhs.false247, %lor.lhs.false242, %if.then236
  %161 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18885
  %u258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1, !dbg !18885
  %fld259 = bitcast %union.u* %u258 to [1 x %union.rtunion_def]*, !dbg !18885
  %arrayidx260 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld259, i64 0, i64 5, !dbg !18885
  %rt_rtx261 = bitcast %union.rtunion_def* %arrayidx260 to %struct.rtx_def**, !dbg !18885
  %162 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx261, align 8, !dbg !18885
  %163 = bitcast %struct.rtx_def* %162 to i32*, !dbg !18885
  %bf.load262 = load i32, i32* %163, align 8, !dbg !18885
  %bf.clear263 = and i32 %bf.load262, 65535, !dbg !18885
  %cmp264 = icmp eq i32 %bf.clear263, 23, !dbg !18885
  br i1 %cmp264, label %cond.true266, label %cond.false271, !dbg !18885

cond.true266:                                     ; preds = %cond.true257
  %164 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18885
  %u267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %164, i32 0, i32 1, !dbg !18885
  %fld268 = bitcast %union.u* %u267 to [1 x %union.rtunion_def]*, !dbg !18885
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i64 0, i64 5, !dbg !18885
  %rt_rtx270 = bitcast %union.rtunion_def* %arrayidx269 to %struct.rtx_def**, !dbg !18885
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx270, align 8, !dbg !18885
  br label %cond.end277, !dbg !18885

cond.false271:                                    ; preds = %cond.true257
  %166 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18885
  %167 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18885
  %u272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1, !dbg !18885
  %fld273 = bitcast %union.u* %u272 to [1 x %union.rtunion_def]*, !dbg !18885
  %arrayidx274 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld273, i64 0, i64 5, !dbg !18885
  %rt_rtx275 = bitcast %union.rtunion_def* %arrayidx274 to %struct.rtx_def**, !dbg !18885
  %168 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx275, align 8, !dbg !18885
  %call276 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %166, %struct.rtx_def* %168), !dbg !18885
  br label %cond.end277, !dbg !18885

cond.end277:                                      ; preds = %cond.false271, %cond.true266
  %cond278 = phi %struct.rtx_def* [ %165, %cond.true266 ], [ %call276, %cond.false271 ], !dbg !18885
  br label %cond.end280, !dbg !18885

cond.false279:                                    ; preds = %lor.lhs.false252
  br label %cond.end280, !dbg !18885

cond.end280:                                      ; preds = %cond.false279, %cond.end277
  %cond281 = phi %struct.rtx_def* [ %cond278, %cond.end277 ], [ null, %cond.false279 ], !dbg !18885
  store %struct.rtx_def* %cond281, %struct.rtx_def** %set237, align 8, !dbg !18884
  %169 = load i32, i32* %j.addr, align 4, !dbg !18886
  %idxprom282 = sext i32 %169 to i64, !dbg !18888
  %arrayidx283 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom282, !dbg !18888
  %170 = load i32, i32* %arrayidx283, align 4, !dbg !18888
  %cmp284 = icmp slt i32 %170, 0, !dbg !18889
  br i1 %cmp284, label %land.lhs.true286, label %if.end310, !dbg !18890

land.lhs.true286:                                 ; preds = %cond.end280
  %171 = load %struct.rtx_def*, %struct.rtx_def** %set237, align 8, !dbg !18891
  %tobool287 = icmp ne %struct.rtx_def* %171, null, !dbg !18891
  br i1 %tobool287, label %land.lhs.true288, label %if.end310, !dbg !18892

land.lhs.true288:                                 ; preds = %land.lhs.true286
  %172 = load %struct.rtx_def*, %struct.rtx_def** %set237, align 8, !dbg !18893
  %u289 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1, !dbg !18893
  %fld290 = bitcast %union.u* %u289 to [1 x %union.rtunion_def]*, !dbg !18893
  %arrayidx291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld290, i64 0, i64 1, !dbg !18893
  %rt_rtx292 = bitcast %union.rtunion_def* %arrayidx291 to %struct.rtx_def**, !dbg !18893
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx292, align 8, !dbg !18893
  %174 = load %struct.rtx_def*, %struct.rtx_def** %rl_reg_rtx, align 8, !dbg !18894
  %cmp293 = icmp eq %struct.rtx_def* %173, %174, !dbg !18895
  br i1 %cmp293, label %if.then295, label %if.end310, !dbg !18896

if.then295:                                       ; preds = %land.lhs.true288
  call void @llvm.dbg.declare(metadata i32* %src, metadata !18897, metadata !DIExpression()), !dbg !18899
  %175 = load %struct.rtx_def*, %struct.rtx_def** %set237, align 8, !dbg !18900
  %u296 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1, !dbg !18900
  %fld297 = bitcast %union.u* %u296 to [1 x %union.rtunion_def]*, !dbg !18900
  %arrayidx298 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld297, i64 0, i64 1, !dbg !18900
  %rt_rtx299 = bitcast %union.rtunion_def* %arrayidx298 to %struct.rtx_def**, !dbg !18900
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx299, align 8, !dbg !18900
  %call300 = call i32 @rhs_regno(%struct.rtx_def* %176), !dbg !18900
  store i32 %call300, i32* %src, align 4, !dbg !18899
  %177 = load i32, i32* %src, align 4, !dbg !18901
  %178 = load i32, i32* %j.addr, align 4, !dbg !18902
  %idxprom301 = sext i32 %178 to i64, !dbg !18903
  %arrayidx302 = getelementptr inbounds [180 x i32], [180 x i32]* @reload_spill_index, i64 0, i64 %idxprom301, !dbg !18903
  store i32 %177, i32* %arrayidx302, align 4, !dbg !18904
  %179 = load i32, i32* %src, align 4, !dbg !18905
  %sh_prom = zext i32 %179 to i64, !dbg !18905
  %shl = shl i64 1, %sh_prom, !dbg !18905
  %180 = load i64, i64* @reg_is_output_reload, align 8, !dbg !18905
  %or = or i64 %180, %shl, !dbg !18905
  store i64 %or, i64* @reg_is_output_reload, align 8, !dbg !18905
  %181 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18906
  %182 = load i32, i32* %src, align 4, !dbg !18908
  %call303 = call %struct.rtx_def* @find_regno_note(%struct.rtx_def* %181, i32 1, i32 %182), !dbg !18909
  %tobool304 = icmp ne %struct.rtx_def* %call303, null, !dbg !18909
  br i1 %tobool304, label %if.then305, label %if.end309, !dbg !18910

if.then305:                                       ; preds = %if.then295
  %183 = load i32, i32* %src, align 4, !dbg !18911
  %sh_prom306 = zext i32 %183 to i64, !dbg !18911
  %shl307 = shl i64 1, %sh_prom306, !dbg !18911
  %184 = load i64, i64* @reg_reloaded_died, align 8, !dbg !18911
  %or308 = or i64 %184, %shl307, !dbg !18911
  store i64 %or308, i64* @reg_reloaded_died, align 8, !dbg !18911
  br label %if.end309, !dbg !18911

if.end309:                                        ; preds = %if.then305, %if.then295
  br label %if.end310, !dbg !18912

if.end310:                                        ; preds = %if.end309, %land.lhs.true288, %land.lhs.true286, %cond.end280
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rl_reg_rtx, align 8, !dbg !18913
  %call311 = call i32 @rhs_regno(%struct.rtx_def* %185), !dbg !18913
  %cmp312 = icmp ult i32 %call311, 53, !dbg !18913
  br i1 %cmp312, label %if.then314, label %if.end473, !dbg !18915

if.then314:                                       ; preds = %if.end310
  call void @llvm.dbg.declare(metadata i32* %s, metadata !18916, metadata !DIExpression()), !dbg !18918
  %186 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18919
  %secondary_out_reload315 = getelementptr inbounds %struct.reload, %struct.reload* %186, i32 0, i32 14, !dbg !18920
  %187 = load i32, i32* %secondary_out_reload315, align 8, !dbg !18920
  store i32 %187, i32* %s, align 4, !dbg !18918
  %188 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18921
  %189 = bitcast %struct.rtx_def* %188 to i32*, !dbg !18921
  %bf.load316 = load i32, i32* %189, align 8, !dbg !18921
  %bf.clear317 = and i32 %bf.load316, 65535, !dbg !18921
  %cmp318 = icmp eq i32 %bf.clear317, 8, !dbg !18921
  br i1 %cmp318, label %cond.true335, label %lor.lhs.false320, !dbg !18921

lor.lhs.false320:                                 ; preds = %if.then314
  %190 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18921
  %191 = bitcast %struct.rtx_def* %190 to i32*, !dbg !18921
  %bf.load321 = load i32, i32* %191, align 8, !dbg !18921
  %bf.clear322 = and i32 %bf.load321, 65535, !dbg !18921
  %cmp323 = icmp eq i32 %bf.clear322, 7, !dbg !18921
  br i1 %cmp323, label %cond.true335, label %lor.lhs.false325, !dbg !18921

lor.lhs.false325:                                 ; preds = %lor.lhs.false320
  %192 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18921
  %193 = bitcast %struct.rtx_def* %192 to i32*, !dbg !18921
  %bf.load326 = load i32, i32* %193, align 8, !dbg !18921
  %bf.clear327 = and i32 %bf.load326, 65535, !dbg !18921
  %cmp328 = icmp eq i32 %bf.clear327, 9, !dbg !18921
  br i1 %cmp328, label %cond.true335, label %lor.lhs.false330, !dbg !18921

lor.lhs.false330:                                 ; preds = %lor.lhs.false325
  %194 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18921
  %195 = bitcast %struct.rtx_def* %194 to i32*, !dbg !18921
  %bf.load331 = load i32, i32* %195, align 8, !dbg !18921
  %bf.clear332 = and i32 %bf.load331, 65535, !dbg !18921
  %cmp333 = icmp eq i32 %bf.clear332, 10, !dbg !18921
  br i1 %cmp333, label %cond.true335, label %cond.false357, !dbg !18921

cond.true335:                                     ; preds = %lor.lhs.false330, %lor.lhs.false325, %lor.lhs.false320, %if.then314
  %196 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18921
  %u336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1, !dbg !18921
  %fld337 = bitcast %union.u* %u336 to [1 x %union.rtunion_def]*, !dbg !18921
  %arrayidx338 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld337, i64 0, i64 5, !dbg !18921
  %rt_rtx339 = bitcast %union.rtunion_def* %arrayidx338 to %struct.rtx_def**, !dbg !18921
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx339, align 8, !dbg !18921
  %198 = bitcast %struct.rtx_def* %197 to i32*, !dbg !18921
  %bf.load340 = load i32, i32* %198, align 8, !dbg !18921
  %bf.clear341 = and i32 %bf.load340, 65535, !dbg !18921
  %cmp342 = icmp eq i32 %bf.clear341, 23, !dbg !18921
  br i1 %cmp342, label %cond.true344, label %cond.false349, !dbg !18921

cond.true344:                                     ; preds = %cond.true335
  %199 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18921
  %u345 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1, !dbg !18921
  %fld346 = bitcast %union.u* %u345 to [1 x %union.rtunion_def]*, !dbg !18921
  %arrayidx347 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld346, i64 0, i64 5, !dbg !18921
  %rt_rtx348 = bitcast %union.rtunion_def* %arrayidx347 to %struct.rtx_def**, !dbg !18921
  %200 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx348, align 8, !dbg !18921
  br label %cond.end355, !dbg !18921

cond.false349:                                    ; preds = %cond.true335
  %201 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18921
  %202 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18921
  %u350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1, !dbg !18921
  %fld351 = bitcast %union.u* %u350 to [1 x %union.rtunion_def]*, !dbg !18921
  %arrayidx352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld351, i64 0, i64 5, !dbg !18921
  %rt_rtx353 = bitcast %union.rtunion_def* %arrayidx352 to %struct.rtx_def**, !dbg !18921
  %203 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx353, align 8, !dbg !18921
  %call354 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %201, %struct.rtx_def* %203), !dbg !18921
  br label %cond.end355, !dbg !18921

cond.end355:                                      ; preds = %cond.false349, %cond.true344
  %cond356 = phi %struct.rtx_def* [ %200, %cond.true344 ], [ %call354, %cond.false349 ], !dbg !18921
  br label %cond.end358, !dbg !18921

cond.false357:                                    ; preds = %lor.lhs.false330
  br label %cond.end358, !dbg !18921

cond.end358:                                      ; preds = %cond.false357, %cond.end355
  %cond359 = phi %struct.rtx_def* [ %cond356, %cond.end355 ], [ null, %cond.false357 ], !dbg !18921
  store %struct.rtx_def* %cond359, %struct.rtx_def** %set237, align 8, !dbg !18922
  %204 = load i32, i32* %s, align 4, !dbg !18923
  %cmp360 = icmp sge i32 %204, 0, !dbg !18925
  br i1 %cmp360, label %land.lhs.true362, label %if.else366, !dbg !18926

land.lhs.true362:                                 ; preds = %cond.end358
  %205 = load %struct.rtx_def*, %struct.rtx_def** %set237, align 8, !dbg !18927
  %cmp363 = icmp eq %struct.rtx_def* %205, null, !dbg !18928
  br i1 %cmp363, label %if.then365, label %if.else366, !dbg !18929

if.then365:                                       ; preds = %land.lhs.true362
  br label %if.end472, !dbg !18929

if.else366:                                       ; preds = %land.lhs.true362, %cond.end358
  %206 = load i32, i32* %s, align 4, !dbg !18930
  %cmp367 = icmp sge i32 %206, 0, !dbg !18932
  br i1 %cmp367, label %land.lhs.true369, label %if.else467, !dbg !18933

land.lhs.true369:                                 ; preds = %if.else366
  %207 = load %struct.rtx_def*, %struct.rtx_def** %set237, align 8, !dbg !18934
  %u370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1, !dbg !18934
  %fld371 = bitcast %union.u* %u370 to [1 x %union.rtunion_def]*, !dbg !18934
  %arrayidx372 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld371, i64 0, i64 1, !dbg !18934
  %rt_rtx373 = bitcast %union.rtunion_def* %arrayidx372 to %struct.rtx_def**, !dbg !18934
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx373, align 8, !dbg !18934
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rl_reg_rtx, align 8, !dbg !18935
  %cmp374 = icmp eq %struct.rtx_def* %208, %209, !dbg !18936
  br i1 %cmp374, label %land.lhs.true376, label %if.else467, !dbg !18937

land.lhs.true376:                                 ; preds = %land.lhs.true369
  %210 = load %struct.rtx_def*, %struct.rtx_def** %set237, align 8, !dbg !18938
  %u377 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1, !dbg !18938
  %fld378 = bitcast %union.u* %u377 to [1 x %union.rtunion_def]*, !dbg !18938
  %arrayidx379 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld378, i64 0, i64 0, !dbg !18938
  %rt_rtx380 = bitcast %union.rtunion_def* %arrayidx379 to %struct.rtx_def**, !dbg !18938
  %211 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx380, align 8, !dbg !18938
  %212 = load i32, i32* %s, align 4, !dbg !18939
  %idxprom381 = sext i32 %212 to i64, !dbg !18940
  %arrayidx382 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom381, !dbg !18940
  %reg_rtx383 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx382, i32 0, i32 11, !dbg !18941
  %213 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx383, align 8, !dbg !18941
  %cmp384 = icmp eq %struct.rtx_def* %211, %213, !dbg !18942
  br i1 %cmp384, label %if.then386, label %if.else467, !dbg !18943

if.then386:                                       ; preds = %land.lhs.true376
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %s_reg, metadata !18944, metadata !DIExpression()), !dbg !18946
  %214 = load i32, i32* %s, align 4, !dbg !18947
  %idxprom387 = sext i32 %214 to i64, !dbg !18948
  %arrayidx388 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom387, !dbg !18948
  %reg_rtx389 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx388, i32 0, i32 11, !dbg !18949
  %215 = load %struct.rtx_def*, %struct.rtx_def** %reg_rtx389, align 8, !dbg !18949
  store %struct.rtx_def* %215, %struct.rtx_def** %s_reg, align 8, !dbg !18946
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !18950, metadata !DIExpression()), !dbg !18951
  %216 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18952
  %u390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1, !dbg !18952
  %fld391 = bitcast %union.u* %u390 to [1 x %union.rtunion_def]*, !dbg !18952
  %arrayidx392 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld391, i64 0, i64 2, !dbg !18952
  %rt_rtx393 = bitcast %union.rtunion_def* %arrayidx392 to %struct.rtx_def**, !dbg !18952
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx393, align 8, !dbg !18952
  store %struct.rtx_def* %217, %struct.rtx_def** %next, align 8, !dbg !18951
  %218 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18953
  %out394 = getelementptr inbounds %struct.reload, %struct.reload* %218, i32 0, i32 1, !dbg !18954
  %219 = load %struct.rtx_def*, %struct.rtx_def** %out394, align 8, !dbg !18954
  %220 = load i32, i32* %s, align 4, !dbg !18955
  %idxprom395 = sext i32 %220 to i64, !dbg !18956
  %arrayidx396 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom395, !dbg !18956
  %out397 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx396, i32 0, i32 1, !dbg !18957
  store %struct.rtx_def* %219, %struct.rtx_def** %out397, align 8, !dbg !18958
  %221 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18959
  %out_reg = getelementptr inbounds %struct.reload, %struct.reload* %221, i32 0, i32 9, !dbg !18960
  %222 = load %struct.rtx_def*, %struct.rtx_def** %out_reg, align 8, !dbg !18960
  %223 = load i32, i32* %s, align 4, !dbg !18961
  %idxprom398 = sext i32 %223 to i64, !dbg !18962
  %arrayidx399 = getelementptr inbounds [180 x %struct.reload], [180 x %struct.reload]* @rld, i64 0, i64 %idxprom398, !dbg !18962
  %out_reg400 = getelementptr inbounds %struct.reload, %struct.reload* %arrayidx399, i32 0, i32 9, !dbg !18963
  store %struct.rtx_def* %222, %struct.rtx_def** %out_reg400, align 8, !dbg !18964
  %224 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18965
  %225 = bitcast %struct.rtx_def* %224 to i32*, !dbg !18965
  %bf.load401 = load i32, i32* %225, align 8, !dbg !18965
  %bf.clear402 = and i32 %bf.load401, 65535, !dbg !18965
  %cmp403 = icmp eq i32 %bf.clear402, 8, !dbg !18965
  br i1 %cmp403, label %cond.true420, label %lor.lhs.false405, !dbg !18965

lor.lhs.false405:                                 ; preds = %if.then386
  %226 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18965
  %227 = bitcast %struct.rtx_def* %226 to i32*, !dbg !18965
  %bf.load406 = load i32, i32* %227, align 8, !dbg !18965
  %bf.clear407 = and i32 %bf.load406, 65535, !dbg !18965
  %cmp408 = icmp eq i32 %bf.clear407, 7, !dbg !18965
  br i1 %cmp408, label %cond.true420, label %lor.lhs.false410, !dbg !18965

lor.lhs.false410:                                 ; preds = %lor.lhs.false405
  %228 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18965
  %229 = bitcast %struct.rtx_def* %228 to i32*, !dbg !18965
  %bf.load411 = load i32, i32* %229, align 8, !dbg !18965
  %bf.clear412 = and i32 %bf.load411, 65535, !dbg !18965
  %cmp413 = icmp eq i32 %bf.clear412, 9, !dbg !18965
  br i1 %cmp413, label %cond.true420, label %lor.lhs.false415, !dbg !18965

lor.lhs.false415:                                 ; preds = %lor.lhs.false410
  %230 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18965
  %231 = bitcast %struct.rtx_def* %230 to i32*, !dbg !18965
  %bf.load416 = load i32, i32* %231, align 8, !dbg !18965
  %bf.clear417 = and i32 %bf.load416, 65535, !dbg !18965
  %cmp418 = icmp eq i32 %bf.clear417, 10, !dbg !18965
  br i1 %cmp418, label %cond.true420, label %cond.false442, !dbg !18965

cond.true420:                                     ; preds = %lor.lhs.false415, %lor.lhs.false410, %lor.lhs.false405, %if.then386
  %232 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18965
  %u421 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1, !dbg !18965
  %fld422 = bitcast %union.u* %u421 to [1 x %union.rtunion_def]*, !dbg !18965
  %arrayidx423 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld422, i64 0, i64 5, !dbg !18965
  %rt_rtx424 = bitcast %union.rtunion_def* %arrayidx423 to %struct.rtx_def**, !dbg !18965
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx424, align 8, !dbg !18965
  %234 = bitcast %struct.rtx_def* %233 to i32*, !dbg !18965
  %bf.load425 = load i32, i32* %234, align 8, !dbg !18965
  %bf.clear426 = and i32 %bf.load425, 65535, !dbg !18965
  %cmp427 = icmp eq i32 %bf.clear426, 23, !dbg !18965
  br i1 %cmp427, label %cond.true429, label %cond.false434, !dbg !18965

cond.true429:                                     ; preds = %cond.true420
  %235 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18965
  %u430 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1, !dbg !18965
  %fld431 = bitcast %union.u* %u430 to [1 x %union.rtunion_def]*, !dbg !18965
  %arrayidx432 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld431, i64 0, i64 5, !dbg !18965
  %rt_rtx433 = bitcast %union.rtunion_def* %arrayidx432 to %struct.rtx_def**, !dbg !18965
  %236 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx433, align 8, !dbg !18965
  br label %cond.end440, !dbg !18965

cond.false434:                                    ; preds = %cond.true420
  %237 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18965
  %238 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18965
  %u435 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %238, i32 0, i32 1, !dbg !18965
  %fld436 = bitcast %union.u* %u435 to [1 x %union.rtunion_def]*, !dbg !18965
  %arrayidx437 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld436, i64 0, i64 5, !dbg !18965
  %rt_rtx438 = bitcast %union.rtunion_def* %arrayidx437 to %struct.rtx_def**, !dbg !18965
  %239 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx438, align 8, !dbg !18965
  %call439 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %237, %struct.rtx_def* %239), !dbg !18965
  br label %cond.end440, !dbg !18965

cond.end440:                                      ; preds = %cond.false434, %cond.true429
  %cond441 = phi %struct.rtx_def* [ %236, %cond.true429 ], [ %call439, %cond.false434 ], !dbg !18965
  br label %cond.end443, !dbg !18965

cond.false442:                                    ; preds = %lor.lhs.false415
  br label %cond.end443, !dbg !18965

cond.end443:                                      ; preds = %cond.false442, %cond.end440
  %cond444 = phi %struct.rtx_def* [ %cond441, %cond.end440 ], [ null, %cond.false442 ], !dbg !18965
  store %struct.rtx_def* %cond444, %struct.rtx_def** %set237, align 8, !dbg !18966
  %240 = load %struct.rtx_def*, %struct.rtx_def** %set237, align 8, !dbg !18967
  %tobool445 = icmp ne %struct.rtx_def* %240, null, !dbg !18967
  br i1 %tobool445, label %land.lhs.true446, label %if.end466, !dbg !18969

land.lhs.true446:                                 ; preds = %cond.end443
  %241 = load %struct.rtx_def*, %struct.rtx_def** %set237, align 8, !dbg !18970
  %u447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1, !dbg !18970
  %fld448 = bitcast %union.u* %u447 to [1 x %union.rtunion_def]*, !dbg !18970
  %arrayidx449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld448, i64 0, i64 1, !dbg !18970
  %rt_rtx450 = bitcast %union.rtunion_def* %arrayidx449 to %struct.rtx_def**, !dbg !18970
  %242 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx450, align 8, !dbg !18970
  %243 = load %struct.rtx_def*, %struct.rtx_def** %s_reg, align 8, !dbg !18971
  %cmp451 = icmp eq %struct.rtx_def* %242, %243, !dbg !18972
  br i1 %cmp451, label %land.lhs.true453, label %if.end466, !dbg !18973

land.lhs.true453:                                 ; preds = %land.lhs.true446
  %244 = load %struct.rtx_def*, %struct.rtx_def** %s_reg, align 8, !dbg !18974
  %call454 = call i32 @rhs_regno(%struct.rtx_def* %244), !dbg !18974
  %idxprom455 = zext i32 %call454 to i64, !dbg !18975
  %arrayidx456 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i64 0, i64 %idxprom455, !dbg !18975
  %245 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx456, align 8, !dbg !18975
  %tobool457 = icmp ne %struct.rtx_def* %245, null, !dbg !18975
  br i1 %tobool457, label %if.end466, label %if.then458, !dbg !18976

if.then458:                                       ; preds = %land.lhs.true453
  %246 = load %struct.rtx_def*, %struct.rtx_def** %s_reg, align 8, !dbg !18977
  %call459 = call i32 @rhs_regno(%struct.rtx_def* %246), !dbg !18977
  %sh_prom460 = zext i32 %call459 to i64, !dbg !18977
  %shl461 = shl i64 1, %sh_prom460, !dbg !18977
  %247 = load i64, i64* @reg_is_output_reload, align 8, !dbg !18977
  %or462 = or i64 %247, %shl461, !dbg !18977
  store i64 %or462, i64* @reg_is_output_reload, align 8, !dbg !18977
  %248 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !18979
  %249 = load %struct.rtx_def*, %struct.rtx_def** %s_reg, align 8, !dbg !18980
  %call463 = call i32 @rhs_regno(%struct.rtx_def* %249), !dbg !18980
  %idxprom464 = zext i32 %call463 to i64, !dbg !18981
  %arrayidx465 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i64 0, i64 %idxprom464, !dbg !18981
  store %struct.rtx_def* %248, %struct.rtx_def** %arrayidx465, align 8, !dbg !18982
  br label %if.end466, !dbg !18983

if.end466:                                        ; preds = %if.then458, %land.lhs.true453, %land.lhs.true446, %cond.end443
  br label %if.end471, !dbg !18984

if.else467:                                       ; preds = %land.lhs.true376, %land.lhs.true369, %if.else366
  %250 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18985
  %251 = load %struct.rtx_def*, %struct.rtx_def** %rl_reg_rtx, align 8, !dbg !18986
  %call468 = call i32 @rhs_regno(%struct.rtx_def* %251), !dbg !18986
  %idxprom469 = zext i32 %call468 to i64, !dbg !18987
  %arrayidx470 = getelementptr inbounds [53 x %struct.rtx_def*], [53 x %struct.rtx_def*]* @new_spill_reg_store, i64 0, i64 %idxprom469, !dbg !18987
  store %struct.rtx_def* %250, %struct.rtx_def** %arrayidx470, align 8, !dbg !18988
  br label %if.end471

if.end471:                                        ; preds = %if.else467, %if.end466
  br label %if.end472

if.end472:                                        ; preds = %if.end471, %if.then365
  br label %if.end473, !dbg !18989

if.end473:                                        ; preds = %if.end472, %if.end310
  br label %if.end474, !dbg !18990

if.end474:                                        ; preds = %if.end473, %if.then229
  br label %if.end475, !dbg !18991

if.end475:                                        ; preds = %if.end474, %lor.lhs.false224
  br label %for.inc, !dbg !18868

for.inc:                                          ; preds = %if.end475
  %252 = load %struct.rtx_def*, %struct.rtx_def** %p, align 8, !dbg !18992
  %u476 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %252, i32 0, i32 1, !dbg !18992
  %fld477 = bitcast %union.u* %u476 to [1 x %union.rtunion_def]*, !dbg !18992
  %arrayidx478 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld477, i64 0, i64 2, !dbg !18992
  %rt_rtx479 = bitcast %union.rtunion_def* %arrayidx478 to %struct.rtx_def**, !dbg !18992
  %253 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx479, align 8, !dbg !18992
  store %struct.rtx_def* %253, %struct.rtx_def** %p, align 8, !dbg !18993
  br label %for.cond, !dbg !18994, !llvm.loop !18995

for.end:                                          ; preds = %for.cond
  %254 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !18997
  %when_needed480 = getelementptr inbounds %struct.reload, %struct.reload* %254, i32 0, i32 17, !dbg !18999
  %255 = load i32, i32* %when_needed480, align 4, !dbg !18999
  %cmp481 = icmp eq i32 %255, 9, !dbg !19000
  br i1 %cmp481, label %if.then483, label %if.else492, !dbg !19001

if.then483:                                       ; preds = %for.end
  %256 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !19002
  %opnum484 = getelementptr inbounds %struct.reload, %struct.reload* %256, i32 0, i32 12, !dbg !19004
  %257 = load i32, i32* %opnum484, align 8, !dbg !19004
  %idxprom485 = sext i32 %257 to i64, !dbg !19005
  %arrayidx486 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @other_output_reload_insns, i64 0, i64 %idxprom485, !dbg !19005
  %258 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx486, align 8, !dbg !19005
  %call487 = call %struct.rtx_def* @emit_insn(%struct.rtx_def* %258), !dbg !19006
  %call488 = call %struct.rtx_def* @get_insns(), !dbg !19007
  %259 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !19008
  %opnum489 = getelementptr inbounds %struct.reload, %struct.reload* %259, i32 0, i32 12, !dbg !19009
  %260 = load i32, i32* %opnum489, align 8, !dbg !19009
  %idxprom490 = sext i32 %260 to i64, !dbg !19010
  %arrayidx491 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @other_output_reload_insns, i64 0, i64 %idxprom490, !dbg !19010
  store %struct.rtx_def* %call488, %struct.rtx_def** %arrayidx491, align 8, !dbg !19011
  br label %if.end497, !dbg !19012

if.else492:                                       ; preds = %for.end
  %call493 = call %struct.rtx_def* @get_insns(), !dbg !19013
  %261 = load %struct.reload*, %struct.reload** %rl.addr, align 8, !dbg !19014
  %opnum494 = getelementptr inbounds %struct.reload, %struct.reload* %261, i32 0, i32 12, !dbg !19015
  %262 = load i32, i32* %opnum494, align 8, !dbg !19015
  %idxprom495 = sext i32 %262 to i64, !dbg !19016
  %arrayidx496 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* @output_reload_insns, i64 0, i64 %idxprom495, !dbg !19016
  store %struct.rtx_def* %call493, %struct.rtx_def** %arrayidx496, align 8, !dbg !19017
  br label %if.end497

if.end497:                                        ; preds = %if.else492, %if.then483
  %263 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !19018
  %tobool498 = icmp ne i32 %263, 0, !dbg !19018
  br i1 %tobool498, label %if.then499, label %if.end501, !dbg !19020

if.then499:                                       ; preds = %if.end497
  %264 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !19021
  %call500 = call %struct.rtx_def* @get_insns(), !dbg !19022
  call void @copy_reg_eh_region_note_forward(%struct.rtx_def* %264, %struct.rtx_def* %call500, %struct.rtx_def* null), !dbg !19023
  br label %if.end501, !dbg !19023

if.end501:                                        ; preds = %if.then499, %if.end497
  call void @end_sequence(), !dbg !19024
  ret void, !dbg !19025
}

declare dso_local void @start_sequence() #2

declare dso_local zeroext i8 @insn_could_throw_p(%struct.rtx_def*) #2

declare dso_local void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !19026 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !19029, metadata !DIExpression()), !dbg !19030
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !19031
  %3 = load i32, i32* %index, align 8, !dbg !19031
  %4 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !19032
  %5 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 0, !dbg !19032
  %6 = load i32, i32* %5, align 8, !dbg !19032
  %7 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 1, !dbg !19032
  %8 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %7, align 8, !dbg !19032
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %6, %struct.VEC_edge_gc** %8), !dbg !19032
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !19032
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19032

cond.true:                                        ; preds = %entry
  %9 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !19032
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !19032
  %11 = load i32, i32* %10, align 8, !dbg !19032
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !19032
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !19032
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !19032
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !19032
  br label %cond.end, !dbg !19032

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !19032

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !19032
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !19032
  %cmp = icmp eq i32 %3, %call2, !dbg !19033
  %conv = zext i1 %cmp to i32, !dbg !19033
  %conv3 = trunc i32 %conv to i8, !dbg !19034
  ret i8 %conv3, !dbg !19035
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !19036 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !19039, metadata !DIExpression()), !dbg !19040
  %3 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !19041
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !19041
  %5 = load i32, i32* %4, align 8, !dbg !19041
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !19041
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !19041
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !19041
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !19041
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19041

cond.true:                                        ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !19041
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !19041
  %10 = load i32, i32* %9, align 8, !dbg !19041
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !19041
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !19041
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %10, %struct.VEC_edge_gc** %12), !dbg !19041
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !19041
  br label %cond.end, !dbg !19041

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !19041

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !19041
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !19041
  %13 = load i32, i32* %index, align 8, !dbg !19041
  %call2 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %13), !dbg !19041
  ret %struct.edge_def* %call2, !dbg !19042
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) #0 !dbg !19043 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !19048, metadata !DIExpression()), !dbg !19049
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !19049
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !19049
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19049

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !19049
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %1, i32 0, i32 0, !dbg !19049
  %2 = load i32, i32* %num, align 8, !dbg !19049
  br label %cond.end, !dbg !19049

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !19049

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !19049
  ret i32 %cond, !dbg !19049
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !19050 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !19053, metadata !DIExpression()), !dbg !19054
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !19055
  %3 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container, align 8, !dbg !19055
  %tobool = icmp ne %struct.VEC_edge_gc** %3, null, !dbg !19055
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !19055

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !19055
  br label %cond.end, !dbg !19055

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !19055

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !19055
  %container1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !19056
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container1, align 8, !dbg !19056
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %4, align 8, !dbg !19057
  ret %struct.VEC_edge_gc* %5, !dbg !19058
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) #0 !dbg !19059 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !19062, metadata !DIExpression()), !dbg !19063
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !19064, metadata !DIExpression()), !dbg !19063
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !19063
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !19063
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !19063

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !19063
  %2 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !19063
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %2, i32 0, i32 0, !dbg !19063
  %3 = load i32, i32* %num, align 8, !dbg !19063
  %cmp = icmp ult i32 %1, %3, !dbg !19063
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !19065
  %land.ext = zext i1 %4 to i32, !dbg !19063
  %5 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !19063
  %vec = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %5, i32 0, i32 2, !dbg !19063
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !19063
  %idxprom = zext i32 %6 to i64, !dbg !19063
  %arrayidx = getelementptr inbounds [1 x %struct.edge_def*], [1 x %struct.edge_def*]* %vec, i64 0, i64 %idxprom, !dbg !19063
  %7 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !19063
  ret %struct.edge_def* %7, !dbg !19063
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3866, !3867, !3868}
!llvm.ident = !{!3869}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "reload_in_progress", scope: !2, file: !3, line: 278, type: !2396, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !2354, globals: !3620, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "reload1.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !134, !141, !147, !152, !157, !176, !183, !190, !384, !527, !557, !2049, !2063, !2079, !2113, !2128, !2142, !2149, !2163, !2169, !2191}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !142, line: 363, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./basic-block.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!143 = !{!144, !145, !146}
!144 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !142, line: 355, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !153, line: 474, baseType: !7, size: 32, elements: !154)
!153 = !DIFile(filename: "./config/i386/i386.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156}
!155 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !158, line: 280, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175}
!160 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !158, line: 1817, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !158, line: 1805, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !158, line: 39, baseType: !7, size: 32, elements: !191)
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!192 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!281 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!282 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!283 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!284 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!285 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!286 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!287 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!288 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!289 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!290 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!291 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!292 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!293 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!294 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!295 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!296 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!297 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!298 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!299 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!300 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!301 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!302 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!303 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!304 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!305 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!307 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!308 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!309 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!310 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!311 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!312 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!313 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!314 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!315 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!316 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!317 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!318 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!319 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!320 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!321 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!322 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!323 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!324 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!325 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!326 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!327 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!328 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!329 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!330 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!331 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!332 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!333 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!334 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!335 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!336 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!337 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!338 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!339 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!340 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!341 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!342 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!343 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!344 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!356 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!357 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!358 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!359 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!360 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!361 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!377 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!378 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!379 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!380 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!381 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!382 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!383 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !385, line: 45, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./rtl.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526}
!387 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!397 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!398 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!399 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!400 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!401 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!402 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!403 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!404 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!405 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!406 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!407 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!408 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!409 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!410 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!411 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!412 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!413 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!414 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!415 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!416 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!417 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!418 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!419 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!420 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!421 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!422 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!423 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!424 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!425 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!426 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!427 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!428 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!429 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!430 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!431 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!432 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!433 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!434 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!435 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!436 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!437 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!438 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!439 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!440 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!441 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!442 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!443 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!444 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!445 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!446 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!447 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!448 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!449 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!450 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!451 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!452 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!453 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!454 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!455 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!456 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!457 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!458 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!459 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!460 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!461 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!462 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!463 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!464 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!465 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!466 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!467 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!468 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!469 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!470 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!471 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!472 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!473 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!474 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!475 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!476 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!477 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!478 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!479 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!480 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!481 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!482 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!483 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!484 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!485 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!486 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!487 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!488 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!489 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!490 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!491 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!492 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!493 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!494 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!495 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!496 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!497 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!498 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!499 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!500 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!501 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!502 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!503 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!504 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!505 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!506 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!507 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!508 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!509 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!510 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!511 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!512 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!513 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!514 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!515 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!517 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!518 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!519 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!520 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!521 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!522 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!523 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!524 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!525 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!526 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!527 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_class", file: !153, line: 1188, baseType: !7, size: 32, elements: !528)
!528 = !{!529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556}
!529 = !DIEnumerator(name: "NO_REGS", value: 0, isUnsigned: true)
!530 = !DIEnumerator(name: "AREG", value: 1, isUnsigned: true)
!531 = !DIEnumerator(name: "DREG", value: 2, isUnsigned: true)
!532 = !DIEnumerator(name: "CREG", value: 3, isUnsigned: true)
!533 = !DIEnumerator(name: "BREG", value: 4, isUnsigned: true)
!534 = !DIEnumerator(name: "SIREG", value: 5, isUnsigned: true)
!535 = !DIEnumerator(name: "DIREG", value: 6, isUnsigned: true)
!536 = !DIEnumerator(name: "AD_REGS", value: 7, isUnsigned: true)
!537 = !DIEnumerator(name: "CLOBBERED_REGS", value: 8, isUnsigned: true)
!538 = !DIEnumerator(name: "Q_REGS", value: 9, isUnsigned: true)
!539 = !DIEnumerator(name: "NON_Q_REGS", value: 10, isUnsigned: true)
!540 = !DIEnumerator(name: "INDEX_REGS", value: 11, isUnsigned: true)
!541 = !DIEnumerator(name: "LEGACY_REGS", value: 12, isUnsigned: true)
!542 = !DIEnumerator(name: "GENERAL_REGS", value: 13, isUnsigned: true)
!543 = !DIEnumerator(name: "FP_TOP_REG", value: 14, isUnsigned: true)
!544 = !DIEnumerator(name: "FP_SECOND_REG", value: 15, isUnsigned: true)
!545 = !DIEnumerator(name: "FLOAT_REGS", value: 16, isUnsigned: true)
!546 = !DIEnumerator(name: "SSE_FIRST_REG", value: 17, isUnsigned: true)
!547 = !DIEnumerator(name: "SSE_REGS", value: 18, isUnsigned: true)
!548 = !DIEnumerator(name: "MMX_REGS", value: 19, isUnsigned: true)
!549 = !DIEnumerator(name: "FP_TOP_SSE_REGS", value: 20, isUnsigned: true)
!550 = !DIEnumerator(name: "FP_SECOND_SSE_REGS", value: 21, isUnsigned: true)
!551 = !DIEnumerator(name: "FLOAT_SSE_REGS", value: 22, isUnsigned: true)
!552 = !DIEnumerator(name: "FLOAT_INT_REGS", value: 23, isUnsigned: true)
!553 = !DIEnumerator(name: "INT_SSE_REGS", value: 24, isUnsigned: true)
!554 = !DIEnumerator(name: "FLOAT_INT_SSE_REGS", value: 25, isUnsigned: true)
!555 = !DIEnumerator(name: "ALL_REGS", value: 26, isUnsigned: true)
!556 = !DIEnumerator(name: "LIM_REG_CLASSES", value: 27, isUnsigned: true)
!557 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insn_code", file: !558, line: 7, baseType: !7, size: 32, elements: !559)
!558 = !DIFile(filename: "./insn-codes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!559 = !{}
!560 = !DIEnumerator(name: "CODE_FOR_x86_fnstsw_1", value: 30, isUnsigned: true)
!561 = !DIEnumerator(name: "CODE_FOR_x86_sahf_1", value: 31, isUnsigned: true)
!562 = !DIEnumerator(name: "CODE_FOR_popsi1", value: 41, isUnsigned: true)
!563 = !DIEnumerator(name: "CODE_FOR_movsi_insv_1", value: 63, isUnsigned: true)
!564 = !DIEnumerator(name: "CODE_FOR_swapxf", value: 83, isUnsigned: true)
!565 = !DIEnumerator(name: "CODE_FOR_zero_extendhisi2_and", value: 84, isUnsigned: true)
!566 = !DIEnumerator(name: "CODE_FOR_zero_extendsidi2_32", value: 92, isUnsigned: true)
!567 = !DIEnumerator(name: "CODE_FOR_extendhisi2", value: 94, isUnsigned: true)
!568 = !DIEnumerator(name: "CODE_FOR_extendqihi2", value: 95, isUnsigned: true)
!569 = !DIEnumerator(name: "CODE_FOR_extendqisi2", value: 96, isUnsigned: true)
!570 = !DIEnumerator(name: "CODE_FOR_truncxfsf2_i387_noop", value: 110, isUnsigned: true)
!571 = !DIEnumerator(name: "CODE_FOR_truncxfdf2_i387_noop", value: 111, isUnsigned: true)
!572 = !DIEnumerator(name: "CODE_FOR_fix_truncsfsi_sse", value: 116, isUnsigned: true)
!573 = !DIEnumerator(name: "CODE_FOR_fix_truncdfsi_sse", value: 117, isUnsigned: true)
!574 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_fisttp_i387_1", value: 118, isUnsigned: true)
!575 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_fisttp_i387_1", value: 119, isUnsigned: true)
!576 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_fisttp_i387_1", value: 120, isUnsigned: true)
!577 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_fisttp", value: 121, isUnsigned: true)
!578 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_fisttp", value: 122, isUnsigned: true)
!579 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_fisttp", value: 123, isUnsigned: true)
!580 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_fisttp_with_temp", value: 124, isUnsigned: true)
!581 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_fisttp_with_temp", value: 125, isUnsigned: true)
!582 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_fisttp_with_temp", value: 126, isUnsigned: true)
!583 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387", value: 130, isUnsigned: true)
!584 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_with_temp", value: 131, isUnsigned: true)
!585 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387", value: 132, isUnsigned: true)
!586 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387", value: 133, isUnsigned: true)
!587 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_with_temp", value: 134, isUnsigned: true)
!588 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_with_temp", value: 135, isUnsigned: true)
!589 = !DIEnumerator(name: "CODE_FOR_x86_fnstcw_1", value: 136, isUnsigned: true)
!590 = !DIEnumerator(name: "CODE_FOR_x86_fldcw_1", value: 137, isUnsigned: true)
!591 = !DIEnumerator(name: "CODE_FOR_floatdisf2_i387_with_xmm", value: 185, isUnsigned: true)
!592 = !DIEnumerator(name: "CODE_FOR_floatdidf2_i387_with_xmm", value: 186, isUnsigned: true)
!593 = !DIEnumerator(name: "CODE_FOR_floatdixf2_i387_with_xmm", value: 187, isUnsigned: true)
!594 = !DIEnumerator(name: "CODE_FOR_addqi3_cc", value: 195, isUnsigned: true)
!595 = !DIEnumerator(name: "CODE_FOR_addqi_ext_1", value: 219, isUnsigned: true)
!596 = !DIEnumerator(name: "CODE_FOR_divqi3", value: 271, isUnsigned: true)
!597 = !DIEnumerator(name: "CODE_FOR_udivqi3", value: 272, isUnsigned: true)
!598 = !DIEnumerator(name: "CODE_FOR_andqi_ext_0", value: 298, isUnsigned: true)
!599 = !DIEnumerator(name: "CODE_FOR_copysignsf3_const", value: 367, isUnsigned: true)
!600 = !DIEnumerator(name: "CODE_FOR_copysigndf3_const", value: 368, isUnsigned: true)
!601 = !DIEnumerator(name: "CODE_FOR_copysigntf3_const", value: 369, isUnsigned: true)
!602 = !DIEnumerator(name: "CODE_FOR_copysignsf3_var", value: 370, isUnsigned: true)
!603 = !DIEnumerator(name: "CODE_FOR_copysigndf3_var", value: 371, isUnsigned: true)
!604 = !DIEnumerator(name: "CODE_FOR_copysigntf3_var", value: 372, isUnsigned: true)
!605 = !DIEnumerator(name: "CODE_FOR_x86_shld", value: 382, isUnsigned: true)
!606 = !DIEnumerator(name: "CODE_FOR_x86_shrd", value: 395, isUnsigned: true)
!607 = !DIEnumerator(name: "CODE_FOR_ix86_rotldi3", value: 438, isUnsigned: true)
!608 = !DIEnumerator(name: "CODE_FOR_ix86_rotrdi3", value: 447, isUnsigned: true)
!609 = !DIEnumerator(name: "CODE_FOR_jump", value: 478, isUnsigned: true)
!610 = !DIEnumerator(name: "CODE_FOR_blockage", value: 487, isUnsigned: true)
!611 = !DIEnumerator(name: "CODE_FOR_prologue_use", value: 489, isUnsigned: true)
!612 = !DIEnumerator(name: "CODE_FOR_return_internal", value: 490, isUnsigned: true)
!613 = !DIEnumerator(name: "CODE_FOR_return_internal_long", value: 491, isUnsigned: true)
!614 = !DIEnumerator(name: "CODE_FOR_return_pop_internal", value: 492, isUnsigned: true)
!615 = !DIEnumerator(name: "CODE_FOR_return_indirect_internal", value: 493, isUnsigned: true)
!616 = !DIEnumerator(name: "CODE_FOR_nop", value: 494, isUnsigned: true)
!617 = !DIEnumerator(name: "CODE_FOR_vswapmov", value: 495, isUnsigned: true)
!618 = !DIEnumerator(name: "CODE_FOR_pad", value: 496, isUnsigned: true)
!619 = !DIEnumerator(name: "CODE_FOR_set_got", value: 497, isUnsigned: true)
!620 = !DIEnumerator(name: "CODE_FOR_set_got_labelled", value: 498, isUnsigned: true)
!621 = !DIEnumerator(name: "CODE_FOR_eh_return_internal", value: 499, isUnsigned: true)
!622 = !DIEnumerator(name: "CODE_FOR_leave", value: 500, isUnsigned: true)
!623 = !DIEnumerator(name: "CODE_FOR_ctzsi2", value: 503, isUnsigned: true)
!624 = !DIEnumerator(name: "CODE_FOR_clzsi2_abm", value: 504, isUnsigned: true)
!625 = !DIEnumerator(name: "CODE_FOR_bsr", value: 505, isUnsigned: true)
!626 = !DIEnumerator(name: "CODE_FOR_popcounthi2", value: 506, isUnsigned: true)
!627 = !DIEnumerator(name: "CODE_FOR_popcountsi2", value: 507, isUnsigned: true)
!628 = !DIEnumerator(name: "CODE_FOR_bswaphi_lowpart", value: 514, isUnsigned: true)
!629 = !DIEnumerator(name: "CODE_FOR_clzhi2_abm", value: 515, isUnsigned: true)
!630 = !DIEnumerator(name: "CODE_FOR_paritydi2_cmp", value: 517, isUnsigned: true)
!631 = !DIEnumerator(name: "CODE_FOR_paritysi2_cmp", value: 518, isUnsigned: true)
!632 = !DIEnumerator(name: "CODE_FOR_truncxfsf2_i387_noop_unspec", value: 573, isUnsigned: true)
!633 = !DIEnumerator(name: "CODE_FOR_truncxfdf2_i387_noop_unspec", value: 574, isUnsigned: true)
!634 = !DIEnumerator(name: "CODE_FOR_sqrtxf2", value: 575, isUnsigned: true)
!635 = !DIEnumerator(name: "CODE_FOR_sqrt_extendsfxf2_i387", value: 576, isUnsigned: true)
!636 = !DIEnumerator(name: "CODE_FOR_sqrt_extenddfxf2_i387", value: 577, isUnsigned: true)
!637 = !DIEnumerator(name: "CODE_FOR_fpremxf4_i387", value: 581, isUnsigned: true)
!638 = !DIEnumerator(name: "CODE_FOR_fprem1xf4_i387", value: 582, isUnsigned: true)
!639 = !DIEnumerator(name: "CODE_FOR_sincosxf3", value: 589, isUnsigned: true)
!640 = !DIEnumerator(name: "CODE_FOR_sincos_extendsfxf3_i387", value: 590, isUnsigned: true)
!641 = !DIEnumerator(name: "CODE_FOR_sincos_extenddfxf3_i387", value: 591, isUnsigned: true)
!642 = !DIEnumerator(name: "CODE_FOR_fptanxf4_i387", value: 592, isUnsigned: true)
!643 = !DIEnumerator(name: "CODE_FOR_fptan_extendsfxf4_i387", value: 593, isUnsigned: true)
!644 = !DIEnumerator(name: "CODE_FOR_fptan_extenddfxf4_i387", value: 594, isUnsigned: true)
!645 = !DIEnumerator(name: "CODE_FOR_fpatan_extendsfxf3_i387", value: 596, isUnsigned: true)
!646 = !DIEnumerator(name: "CODE_FOR_fpatan_extenddfxf3_i387", value: 597, isUnsigned: true)
!647 = !DIEnumerator(name: "CODE_FOR_fyl2xxf3_i387", value: 598, isUnsigned: true)
!648 = !DIEnumerator(name: "CODE_FOR_fyl2x_extendsfxf3_i387", value: 599, isUnsigned: true)
!649 = !DIEnumerator(name: "CODE_FOR_fyl2x_extenddfxf3_i387", value: 600, isUnsigned: true)
!650 = !DIEnumerator(name: "CODE_FOR_fyl2xp1xf3_i387", value: 601, isUnsigned: true)
!651 = !DIEnumerator(name: "CODE_FOR_fyl2xp1_extendsfxf3_i387", value: 602, isUnsigned: true)
!652 = !DIEnumerator(name: "CODE_FOR_fyl2xp1_extenddfxf3_i387", value: 603, isUnsigned: true)
!653 = !DIEnumerator(name: "CODE_FOR_fxtractxf3_i387", value: 604, isUnsigned: true)
!654 = !DIEnumerator(name: "CODE_FOR_fxtract_extendsfxf3_i387", value: 605, isUnsigned: true)
!655 = !DIEnumerator(name: "CODE_FOR_fxtract_extenddfxf3_i387", value: 606, isUnsigned: true)
!656 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundsf2", value: 609, isUnsigned: true)
!657 = !DIEnumerator(name: "CODE_FOR_sse4_1_rounddf2", value: 610, isUnsigned: true)
!658 = !DIEnumerator(name: "CODE_FOR_rintxf2", value: 611, isUnsigned: true)
!659 = !DIEnumerator(name: "CODE_FOR_fistdi2", value: 613, isUnsigned: true)
!660 = !DIEnumerator(name: "CODE_FOR_fistdi2_with_temp", value: 614, isUnsigned: true)
!661 = !DIEnumerator(name: "CODE_FOR_fisthi2", value: 617, isUnsigned: true)
!662 = !DIEnumerator(name: "CODE_FOR_fistsi2", value: 618, isUnsigned: true)
!663 = !DIEnumerator(name: "CODE_FOR_fisthi2_with_temp", value: 619, isUnsigned: true)
!664 = !DIEnumerator(name: "CODE_FOR_fistsi2_with_temp", value: 620, isUnsigned: true)
!665 = !DIEnumerator(name: "CODE_FOR_frndintxf2_floor", value: 621, isUnsigned: true)
!666 = !DIEnumerator(name: "CODE_FOR_frndintxf2_floor_i387", value: 622, isUnsigned: true)
!667 = !DIEnumerator(name: "CODE_FOR_fistdi2_floor", value: 626, isUnsigned: true)
!668 = !DIEnumerator(name: "CODE_FOR_fistdi2_floor_with_temp", value: 627, isUnsigned: true)
!669 = !DIEnumerator(name: "CODE_FOR_fisthi2_floor", value: 628, isUnsigned: true)
!670 = !DIEnumerator(name: "CODE_FOR_fistsi2_floor", value: 629, isUnsigned: true)
!671 = !DIEnumerator(name: "CODE_FOR_fisthi2_floor_with_temp", value: 630, isUnsigned: true)
!672 = !DIEnumerator(name: "CODE_FOR_fistsi2_floor_with_temp", value: 631, isUnsigned: true)
!673 = !DIEnumerator(name: "CODE_FOR_frndintxf2_ceil", value: 632, isUnsigned: true)
!674 = !DIEnumerator(name: "CODE_FOR_frndintxf2_ceil_i387", value: 633, isUnsigned: true)
!675 = !DIEnumerator(name: "CODE_FOR_fistdi2_ceil", value: 637, isUnsigned: true)
!676 = !DIEnumerator(name: "CODE_FOR_fistdi2_ceil_with_temp", value: 638, isUnsigned: true)
!677 = !DIEnumerator(name: "CODE_FOR_fisthi2_ceil", value: 639, isUnsigned: true)
!678 = !DIEnumerator(name: "CODE_FOR_fistsi2_ceil", value: 640, isUnsigned: true)
!679 = !DIEnumerator(name: "CODE_FOR_fisthi2_ceil_with_temp", value: 641, isUnsigned: true)
!680 = !DIEnumerator(name: "CODE_FOR_fistsi2_ceil_with_temp", value: 642, isUnsigned: true)
!681 = !DIEnumerator(name: "CODE_FOR_frndintxf2_trunc", value: 643, isUnsigned: true)
!682 = !DIEnumerator(name: "CODE_FOR_frndintxf2_trunc_i387", value: 644, isUnsigned: true)
!683 = !DIEnumerator(name: "CODE_FOR_frndintxf2_mask_pm", value: 645, isUnsigned: true)
!684 = !DIEnumerator(name: "CODE_FOR_frndintxf2_mask_pm_i387", value: 646, isUnsigned: true)
!685 = !DIEnumerator(name: "CODE_FOR_fxamsf2_i387", value: 647, isUnsigned: true)
!686 = !DIEnumerator(name: "CODE_FOR_fxamdf2_i387", value: 648, isUnsigned: true)
!687 = !DIEnumerator(name: "CODE_FOR_fxamxf2_i387", value: 649, isUnsigned: true)
!688 = !DIEnumerator(name: "CODE_FOR_fxamsf2_i387_with_temp", value: 650, isUnsigned: true)
!689 = !DIEnumerator(name: "CODE_FOR_fxamdf2_i387_with_temp", value: 651, isUnsigned: true)
!690 = !DIEnumerator(name: "CODE_FOR_cld", value: 652, isUnsigned: true)
!691 = !DIEnumerator(name: "CODE_FOR_smaxsf3", value: 681, isUnsigned: true)
!692 = !DIEnumerator(name: "CODE_FOR_sminsf3", value: 682, isUnsigned: true)
!693 = !DIEnumerator(name: "CODE_FOR_smaxdf3", value: 683, isUnsigned: true)
!694 = !DIEnumerator(name: "CODE_FOR_smindf3", value: 684, isUnsigned: true)
!695 = !DIEnumerator(name: "CODE_FOR_pro_epilogue_adjust_stack_1", value: 693, isUnsigned: true)
!696 = !DIEnumerator(name: "CODE_FOR_allocate_stack_worker_32", value: 694, isUnsigned: true)
!697 = !DIEnumerator(name: "CODE_FOR_trap", value: 701, isUnsigned: true)
!698 = !DIEnumerator(name: "CODE_FOR_stack_protect_set_si", value: 704, isUnsigned: true)
!699 = !DIEnumerator(name: "CODE_FOR_stack_tls_protect_set_si", value: 705, isUnsigned: true)
!700 = !DIEnumerator(name: "CODE_FOR_stack_protect_test_si", value: 706, isUnsigned: true)
!701 = !DIEnumerator(name: "CODE_FOR_stack_tls_protect_test_si", value: 707, isUnsigned: true)
!702 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32qi", value: 708, isUnsigned: true)
!703 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32hi", value: 709, isUnsigned: true)
!704 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32si", value: 710, isUnsigned: true)
!705 = !DIEnumerator(name: "CODE_FOR_lwp_slwpcbsi", value: 715, isUnsigned: true)
!706 = !DIEnumerator(name: "CODE_FOR_sse_movntdi", value: 728, isUnsigned: true)
!707 = !DIEnumerator(name: "CODE_FOR_mmx_rcpv2sf2", value: 736, isUnsigned: true)
!708 = !DIEnumerator(name: "CODE_FOR_mmx_rcpit1v2sf3", value: 737, isUnsigned: true)
!709 = !DIEnumerator(name: "CODE_FOR_mmx_rcpit2v2sf3", value: 738, isUnsigned: true)
!710 = !DIEnumerator(name: "CODE_FOR_mmx_rsqrtv2sf2", value: 739, isUnsigned: true)
!711 = !DIEnumerator(name: "CODE_FOR_mmx_rsqit1v2sf3", value: 740, isUnsigned: true)
!712 = !DIEnumerator(name: "CODE_FOR_mmx_haddv2sf3", value: 741, isUnsigned: true)
!713 = !DIEnumerator(name: "CODE_FOR_mmx_hsubv2sf3", value: 742, isUnsigned: true)
!714 = !DIEnumerator(name: "CODE_FOR_mmx_addsubv2sf3", value: 743, isUnsigned: true)
!715 = !DIEnumerator(name: "CODE_FOR_mmx_gtv2sf3", value: 745, isUnsigned: true)
!716 = !DIEnumerator(name: "CODE_FOR_mmx_gev2sf3", value: 746, isUnsigned: true)
!717 = !DIEnumerator(name: "CODE_FOR_mmx_pf2id", value: 747, isUnsigned: true)
!718 = !DIEnumerator(name: "CODE_FOR_mmx_pf2iw", value: 748, isUnsigned: true)
!719 = !DIEnumerator(name: "CODE_FOR_mmx_pi2fw", value: 749, isUnsigned: true)
!720 = !DIEnumerator(name: "CODE_FOR_mmx_floatv2si2", value: 750, isUnsigned: true)
!721 = !DIEnumerator(name: "CODE_FOR_mmx_pswapdv2sf2", value: 751, isUnsigned: true)
!722 = !DIEnumerator(name: "CODE_FOR_mmx_ashrv4hi3", value: 782, isUnsigned: true)
!723 = !DIEnumerator(name: "CODE_FOR_mmx_ashrv2si3", value: 783, isUnsigned: true)
!724 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv4hi3", value: 784, isUnsigned: true)
!725 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv2si3", value: 785, isUnsigned: true)
!726 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv1di3", value: 786, isUnsigned: true)
!727 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv4hi3", value: 787, isUnsigned: true)
!728 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv2si3", value: 788, isUnsigned: true)
!729 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv1di3", value: 789, isUnsigned: true)
!730 = !DIEnumerator(name: "CODE_FOR_mmx_gtv8qi3", value: 793, isUnsigned: true)
!731 = !DIEnumerator(name: "CODE_FOR_mmx_gtv4hi3", value: 794, isUnsigned: true)
!732 = !DIEnumerator(name: "CODE_FOR_mmx_gtv2si3", value: 795, isUnsigned: true)
!733 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv8qi3", value: 796, isUnsigned: true)
!734 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv4hi3", value: 797, isUnsigned: true)
!735 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv2si3", value: 798, isUnsigned: true)
!736 = !DIEnumerator(name: "CODE_FOR_mmx_packsswb", value: 808, isUnsigned: true)
!737 = !DIEnumerator(name: "CODE_FOR_mmx_packssdw", value: 809, isUnsigned: true)
!738 = !DIEnumerator(name: "CODE_FOR_mmx_packuswb", value: 810, isUnsigned: true)
!739 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhbw", value: 811, isUnsigned: true)
!740 = !DIEnumerator(name: "CODE_FOR_mmx_punpcklbw", value: 812, isUnsigned: true)
!741 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhwd", value: 813, isUnsigned: true)
!742 = !DIEnumerator(name: "CODE_FOR_mmx_punpcklwd", value: 814, isUnsigned: true)
!743 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhdq", value: 815, isUnsigned: true)
!744 = !DIEnumerator(name: "CODE_FOR_mmx_punpckldq", value: 816, isUnsigned: true)
!745 = !DIEnumerator(name: "CODE_FOR_mmx_pextrw", value: 818, isUnsigned: true)
!746 = !DIEnumerator(name: "CODE_FOR_mmx_pshufw_1", value: 819, isUnsigned: true)
!747 = !DIEnumerator(name: "CODE_FOR_mmx_pswapdv2si2", value: 820, isUnsigned: true)
!748 = !DIEnumerator(name: "CODE_FOR_mmx_psadbw", value: 828, isUnsigned: true)
!749 = !DIEnumerator(name: "CODE_FOR_mmx_pmovmskb", value: 829, isUnsigned: true)
!750 = !DIEnumerator(name: "CODE_FOR_movdi_to_sse", value: 853, isUnsigned: true)
!751 = !DIEnumerator(name: "CODE_FOR_avx_movups", value: 854, isUnsigned: true)
!752 = !DIEnumerator(name: "CODE_FOR_avx_movupd", value: 855, isUnsigned: true)
!753 = !DIEnumerator(name: "CODE_FOR_avx_movups256", value: 856, isUnsigned: true)
!754 = !DIEnumerator(name: "CODE_FOR_avx_movupd256", value: 857, isUnsigned: true)
!755 = !DIEnumerator(name: "CODE_FOR_sse2_movq128", value: 858, isUnsigned: true)
!756 = !DIEnumerator(name: "CODE_FOR_sse_movups", value: 859, isUnsigned: true)
!757 = !DIEnumerator(name: "CODE_FOR_sse2_movupd", value: 860, isUnsigned: true)
!758 = !DIEnumerator(name: "CODE_FOR_avx_movdqu256", value: 861, isUnsigned: true)
!759 = !DIEnumerator(name: "CODE_FOR_avx_movdqu", value: 862, isUnsigned: true)
!760 = !DIEnumerator(name: "CODE_FOR_sse2_movdqu", value: 863, isUnsigned: true)
!761 = !DIEnumerator(name: "CODE_FOR_avx_movntv4sf", value: 864, isUnsigned: true)
!762 = !DIEnumerator(name: "CODE_FOR_avx_movntv2df", value: 865, isUnsigned: true)
!763 = !DIEnumerator(name: "CODE_FOR_avx_movntv8sf", value: 866, isUnsigned: true)
!764 = !DIEnumerator(name: "CODE_FOR_avx_movntv4df", value: 867, isUnsigned: true)
!765 = !DIEnumerator(name: "CODE_FOR_sse_movntv4sf", value: 868, isUnsigned: true)
!766 = !DIEnumerator(name: "CODE_FOR_sse2_movntv2df", value: 869, isUnsigned: true)
!767 = !DIEnumerator(name: "CODE_FOR_avx_movntv4di", value: 870, isUnsigned: true)
!768 = !DIEnumerator(name: "CODE_FOR_avx_movntv2di", value: 871, isUnsigned: true)
!769 = !DIEnumerator(name: "CODE_FOR_sse2_movntv2di", value: 872, isUnsigned: true)
!770 = !DIEnumerator(name: "CODE_FOR_sse2_movntsi", value: 873, isUnsigned: true)
!771 = !DIEnumerator(name: "CODE_FOR_avx_lddqu256", value: 874, isUnsigned: true)
!772 = !DIEnumerator(name: "CODE_FOR_avx_lddqu", value: 875, isUnsigned: true)
!773 = !DIEnumerator(name: "CODE_FOR_sse3_lddqu", value: 876, isUnsigned: true)
!774 = !DIEnumerator(name: "CODE_FOR_sse_vmaddv4sf3", value: 893, isUnsigned: true)
!775 = !DIEnumerator(name: "CODE_FOR_sse_vmsubv4sf3", value: 894, isUnsigned: true)
!776 = !DIEnumerator(name: "CODE_FOR_sse2_vmaddv2df3", value: 895, isUnsigned: true)
!777 = !DIEnumerator(name: "CODE_FOR_sse2_vmsubv2df3", value: 896, isUnsigned: true)
!778 = !DIEnumerator(name: "CODE_FOR_sse_vmmulv4sf3", value: 905, isUnsigned: true)
!779 = !DIEnumerator(name: "CODE_FOR_sse2_vmmulv2df3", value: 906, isUnsigned: true)
!780 = !DIEnumerator(name: "CODE_FOR_avx_divv4sf3", value: 907, isUnsigned: true)
!781 = !DIEnumerator(name: "CODE_FOR_avx_divv2df3", value: 908, isUnsigned: true)
!782 = !DIEnumerator(name: "CODE_FOR_avx_divv8sf3", value: 909, isUnsigned: true)
!783 = !DIEnumerator(name: "CODE_FOR_avx_divv4df3", value: 910, isUnsigned: true)
!784 = !DIEnumerator(name: "CODE_FOR_sse_divv4sf3", value: 913, isUnsigned: true)
!785 = !DIEnumerator(name: "CODE_FOR_sse2_divv2df3", value: 914, isUnsigned: true)
!786 = !DIEnumerator(name: "CODE_FOR_sse_vmdivv4sf3", value: 917, isUnsigned: true)
!787 = !DIEnumerator(name: "CODE_FOR_sse2_vmdivv2df3", value: 918, isUnsigned: true)
!788 = !DIEnumerator(name: "CODE_FOR_avx_rcpv8sf2", value: 919, isUnsigned: true)
!789 = !DIEnumerator(name: "CODE_FOR_sse_rcpv4sf2", value: 920, isUnsigned: true)
!790 = !DIEnumerator(name: "CODE_FOR_sse_vmrcpv4sf2", value: 922, isUnsigned: true)
!791 = !DIEnumerator(name: "CODE_FOR_avx_sqrtv8sf2", value: 923, isUnsigned: true)
!792 = !DIEnumerator(name: "CODE_FOR_sse_sqrtv4sf2", value: 924, isUnsigned: true)
!793 = !DIEnumerator(name: "CODE_FOR_sqrtv4df2", value: 925, isUnsigned: true)
!794 = !DIEnumerator(name: "CODE_FOR_sqrtv2df2", value: 926, isUnsigned: true)
!795 = !DIEnumerator(name: "CODE_FOR_sse_vmsqrtv4sf2", value: 929, isUnsigned: true)
!796 = !DIEnumerator(name: "CODE_FOR_sse2_vmsqrtv2df2", value: 930, isUnsigned: true)
!797 = !DIEnumerator(name: "CODE_FOR_avx_rsqrtv8sf2", value: 931, isUnsigned: true)
!798 = !DIEnumerator(name: "CODE_FOR_sse_rsqrtv4sf2", value: 932, isUnsigned: true)
!799 = !DIEnumerator(name: "CODE_FOR_sse_vmrsqrtv4sf2", value: 934, isUnsigned: true)
!800 = !DIEnumerator(name: "CODE_FOR_sse_vmsmaxv4sf3", value: 963, isUnsigned: true)
!801 = !DIEnumerator(name: "CODE_FOR_sse_vmsminv4sf3", value: 964, isUnsigned: true)
!802 = !DIEnumerator(name: "CODE_FOR_sse2_vmsmaxv2df3", value: 965, isUnsigned: true)
!803 = !DIEnumerator(name: "CODE_FOR_sse2_vmsminv2df3", value: 966, isUnsigned: true)
!804 = !DIEnumerator(name: "CODE_FOR_avx_addsubv8sf3", value: 979, isUnsigned: true)
!805 = !DIEnumerator(name: "CODE_FOR_avx_addsubv4df3", value: 980, isUnsigned: true)
!806 = !DIEnumerator(name: "CODE_FOR_sse3_addsubv4sf3", value: 982, isUnsigned: true)
!807 = !DIEnumerator(name: "CODE_FOR_sse3_addsubv2df3", value: 984, isUnsigned: true)
!808 = !DIEnumerator(name: "CODE_FOR_avx_haddv4df3", value: 985, isUnsigned: true)
!809 = !DIEnumerator(name: "CODE_FOR_avx_hsubv4df3", value: 986, isUnsigned: true)
!810 = !DIEnumerator(name: "CODE_FOR_avx_haddv8sf3", value: 987, isUnsigned: true)
!811 = !DIEnumerator(name: "CODE_FOR_avx_hsubv8sf3", value: 988, isUnsigned: true)
!812 = !DIEnumerator(name: "CODE_FOR_sse3_haddv4sf3", value: 991, isUnsigned: true)
!813 = !DIEnumerator(name: "CODE_FOR_sse3_hsubv4sf3", value: 992, isUnsigned: true)
!814 = !DIEnumerator(name: "CODE_FOR_sse3_haddv2df3", value: 995, isUnsigned: true)
!815 = !DIEnumerator(name: "CODE_FOR_sse3_hsubv2df3", value: 996, isUnsigned: true)
!816 = !DIEnumerator(name: "CODE_FOR_avx_cmppsv4sf3", value: 997, isUnsigned: true)
!817 = !DIEnumerator(name: "CODE_FOR_avx_cmppdv2df3", value: 998, isUnsigned: true)
!818 = !DIEnumerator(name: "CODE_FOR_avx_cmppsv8sf3", value: 999, isUnsigned: true)
!819 = !DIEnumerator(name: "CODE_FOR_avx_cmppdv4df3", value: 1000, isUnsigned: true)
!820 = !DIEnumerator(name: "CODE_FOR_avx_cmpssv4sf3", value: 1001, isUnsigned: true)
!821 = !DIEnumerator(name: "CODE_FOR_avx_cmpsdv2df3", value: 1002, isUnsigned: true)
!822 = !DIEnumerator(name: "CODE_FOR_sse_maskcmpsf3", value: 1007, isUnsigned: true)
!823 = !DIEnumerator(name: "CODE_FOR_sse2_maskcmpdf3", value: 1008, isUnsigned: true)
!824 = !DIEnumerator(name: "CODE_FOR_sse_maskcmpv4sf3", value: 1009, isUnsigned: true)
!825 = !DIEnumerator(name: "CODE_FOR_sse2_maskcmpv2df3", value: 1010, isUnsigned: true)
!826 = !DIEnumerator(name: "CODE_FOR_sse_vmmaskcmpv4sf3", value: 1011, isUnsigned: true)
!827 = !DIEnumerator(name: "CODE_FOR_sse2_vmmaskcmpv2df3", value: 1012, isUnsigned: true)
!828 = !DIEnumerator(name: "CODE_FOR_sse_comi", value: 1013, isUnsigned: true)
!829 = !DIEnumerator(name: "CODE_FOR_sse2_comi", value: 1014, isUnsigned: true)
!830 = !DIEnumerator(name: "CODE_FOR_sse_ucomi", value: 1015, isUnsigned: true)
!831 = !DIEnumerator(name: "CODE_FOR_sse2_ucomi", value: 1016, isUnsigned: true)
!832 = !DIEnumerator(name: "CODE_FOR_avx_andnotv4sf3", value: 1017, isUnsigned: true)
!833 = !DIEnumerator(name: "CODE_FOR_avx_andnotv2df3", value: 1018, isUnsigned: true)
!834 = !DIEnumerator(name: "CODE_FOR_avx_andnotv8sf3", value: 1019, isUnsigned: true)
!835 = !DIEnumerator(name: "CODE_FOR_avx_andnotv4df3", value: 1020, isUnsigned: true)
!836 = !DIEnumerator(name: "CODE_FOR_sse_andnotv4sf3", value: 1021, isUnsigned: true)
!837 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv2df3", value: 1022, isUnsigned: true)
!838 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv8sf4256", value: 1057, isUnsigned: true)
!839 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv4df4256", value: 1058, isUnsigned: true)
!840 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv8sf4256", value: 1059, isUnsigned: true)
!841 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv4df4256", value: 1060, isUnsigned: true)
!842 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv8sf4256", value: 1061, isUnsigned: true)
!843 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv4df4256", value: 1062, isUnsigned: true)
!844 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv8sf4256", value: 1063, isUnsigned: true)
!845 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv4df4256", value: 1064, isUnsigned: true)
!846 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsf4", value: 1065, isUnsigned: true)
!847 = !DIEnumerator(name: "CODE_FOR_fma4_fmadddf4", value: 1066, isUnsigned: true)
!848 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv4sf4", value: 1067, isUnsigned: true)
!849 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv2df4", value: 1068, isUnsigned: true)
!850 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmaddv4sf4", value: 1069, isUnsigned: true)
!851 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmaddv2df4", value: 1070, isUnsigned: true)
!852 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubsf4", value: 1071, isUnsigned: true)
!853 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubdf4", value: 1072, isUnsigned: true)
!854 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv4sf4", value: 1073, isUnsigned: true)
!855 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv2df4", value: 1074, isUnsigned: true)
!856 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmsubv4sf4", value: 1075, isUnsigned: true)
!857 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmsubv2df4", value: 1076, isUnsigned: true)
!858 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddsf4", value: 1077, isUnsigned: true)
!859 = !DIEnumerator(name: "CODE_FOR_fma4_fnmadddf4", value: 1078, isUnsigned: true)
!860 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv4sf4", value: 1079, isUnsigned: true)
!861 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv2df4", value: 1080, isUnsigned: true)
!862 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmaddv4sf4", value: 1081, isUnsigned: true)
!863 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmaddv2df4", value: 1082, isUnsigned: true)
!864 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubsf4", value: 1083, isUnsigned: true)
!865 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubdf4", value: 1084, isUnsigned: true)
!866 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv4sf4", value: 1085, isUnsigned: true)
!867 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv2df4", value: 1086, isUnsigned: true)
!868 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmsubv4sf4", value: 1087, isUnsigned: true)
!869 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmsubv2df4", value: 1088, isUnsigned: true)
!870 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv8sf4256", value: 1089, isUnsigned: true)
!871 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv4df4256", value: 1090, isUnsigned: true)
!872 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv8sf4256", value: 1091, isUnsigned: true)
!873 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv4df4256", value: 1092, isUnsigned: true)
!874 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv8sf4256", value: 1093, isUnsigned: true)
!875 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv4df4256", value: 1094, isUnsigned: true)
!876 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv8sf4256", value: 1095, isUnsigned: true)
!877 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv4df4256", value: 1096, isUnsigned: true)
!878 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv4sf4", value: 1097, isUnsigned: true)
!879 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv2df4", value: 1098, isUnsigned: true)
!880 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv4sf4", value: 1099, isUnsigned: true)
!881 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv2df4", value: 1100, isUnsigned: true)
!882 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv4sf4", value: 1101, isUnsigned: true)
!883 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv2df4", value: 1102, isUnsigned: true)
!884 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv4sf4", value: 1103, isUnsigned: true)
!885 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv2df4", value: 1104, isUnsigned: true)
!886 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmaddv4sf4", value: 1105, isUnsigned: true)
!887 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmaddv2df4", value: 1106, isUnsigned: true)
!888 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmsubv4sf4", value: 1107, isUnsigned: true)
!889 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmsubv2df4", value: 1108, isUnsigned: true)
!890 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmaddv4sf4", value: 1109, isUnsigned: true)
!891 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmaddv2df4", value: 1110, isUnsigned: true)
!892 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmsubv4sf4", value: 1111, isUnsigned: true)
!893 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmsubv2df4", value: 1112, isUnsigned: true)
!894 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv8sf4", value: 1113, isUnsigned: true)
!895 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv4df4", value: 1114, isUnsigned: true)
!896 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv4sf4", value: 1115, isUnsigned: true)
!897 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv2df4", value: 1116, isUnsigned: true)
!898 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv8sf4", value: 1117, isUnsigned: true)
!899 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv4df4", value: 1118, isUnsigned: true)
!900 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv4sf4", value: 1119, isUnsigned: true)
!901 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv2df4", value: 1120, isUnsigned: true)
!902 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv8sf4", value: 1121, isUnsigned: true)
!903 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv4df4", value: 1122, isUnsigned: true)
!904 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv4sf4", value: 1123, isUnsigned: true)
!905 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv2df4", value: 1124, isUnsigned: true)
!906 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv8sf4", value: 1125, isUnsigned: true)
!907 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv4df4", value: 1126, isUnsigned: true)
!908 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv4sf4", value: 1127, isUnsigned: true)
!909 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv2df4", value: 1128, isUnsigned: true)
!910 = !DIEnumerator(name: "CODE_FOR_sse_cvtpi2ps", value: 1129, isUnsigned: true)
!911 = !DIEnumerator(name: "CODE_FOR_sse_cvtps2pi", value: 1130, isUnsigned: true)
!912 = !DIEnumerator(name: "CODE_FOR_sse_cvttps2pi", value: 1131, isUnsigned: true)
!913 = !DIEnumerator(name: "CODE_FOR_sse_cvtsi2ss", value: 1133, isUnsigned: true)
!914 = !DIEnumerator(name: "CODE_FOR_sse_cvtss2si", value: 1134, isUnsigned: true)
!915 = !DIEnumerator(name: "CODE_FOR_sse_cvtss2si_2", value: 1135, isUnsigned: true)
!916 = !DIEnumerator(name: "CODE_FOR_sse_cvttss2si", value: 1136, isUnsigned: true)
!917 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2ps", value: 1137, isUnsigned: true)
!918 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2ps256", value: 1138, isUnsigned: true)
!919 = !DIEnumerator(name: "CODE_FOR_sse2_cvtdq2ps", value: 1139, isUnsigned: true)
!920 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2dq", value: 1140, isUnsigned: true)
!921 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2dq256", value: 1141, isUnsigned: true)
!922 = !DIEnumerator(name: "CODE_FOR_sse2_cvtps2dq", value: 1142, isUnsigned: true)
!923 = !DIEnumerator(name: "CODE_FOR_avx_cvttps2dq", value: 1143, isUnsigned: true)
!924 = !DIEnumerator(name: "CODE_FOR_avx_cvttps2dq256", value: 1144, isUnsigned: true)
!925 = !DIEnumerator(name: "CODE_FOR_sse2_cvttps2dq", value: 1145, isUnsigned: true)
!926 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpi2pd", value: 1146, isUnsigned: true)
!927 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2pi", value: 1147, isUnsigned: true)
!928 = !DIEnumerator(name: "CODE_FOR_sse2_cvttpd2pi", value: 1148, isUnsigned: true)
!929 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsi2sd", value: 1150, isUnsigned: true)
!930 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2si", value: 1151, isUnsigned: true)
!931 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2si_2", value: 1152, isUnsigned: true)
!932 = !DIEnumerator(name: "CODE_FOR_sse2_cvttsd2si", value: 1153, isUnsigned: true)
!933 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2pd256", value: 1154, isUnsigned: true)
!934 = !DIEnumerator(name: "CODE_FOR_sse2_cvtdq2pd", value: 1155, isUnsigned: true)
!935 = !DIEnumerator(name: "CODE_FOR_avx_cvtpd2dq256", value: 1156, isUnsigned: true)
!936 = !DIEnumerator(name: "CODE_FOR_avx_cvttpd2dq256", value: 1158, isUnsigned: true)
!937 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2ss", value: 1161, isUnsigned: true)
!938 = !DIEnumerator(name: "CODE_FOR_sse2_cvtss2sd", value: 1163, isUnsigned: true)
!939 = !DIEnumerator(name: "CODE_FOR_avx_cvtpd2ps256", value: 1164, isUnsigned: true)
!940 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2pd256", value: 1166, isUnsigned: true)
!941 = !DIEnumerator(name: "CODE_FOR_sse2_cvtps2pd", value: 1167, isUnsigned: true)
!942 = !DIEnumerator(name: "CODE_FOR_sse_movhlps", value: 1169, isUnsigned: true)
!943 = !DIEnumerator(name: "CODE_FOR_sse_movlhps", value: 1171, isUnsigned: true)
!944 = !DIEnumerator(name: "CODE_FOR_avx_unpckhps256", value: 1172, isUnsigned: true)
!945 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv4sf", value: 1174, isUnsigned: true)
!946 = !DIEnumerator(name: "CODE_FOR_avx_unpcklps256", value: 1175, isUnsigned: true)
!947 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv4sf", value: 1177, isUnsigned: true)
!948 = !DIEnumerator(name: "CODE_FOR_avx_movshdup256", value: 1178, isUnsigned: true)
!949 = !DIEnumerator(name: "CODE_FOR_sse3_movshdup", value: 1179, isUnsigned: true)
!950 = !DIEnumerator(name: "CODE_FOR_avx_movsldup256", value: 1180, isUnsigned: true)
!951 = !DIEnumerator(name: "CODE_FOR_sse3_movsldup", value: 1181, isUnsigned: true)
!952 = !DIEnumerator(name: "CODE_FOR_avx_shufps256_1", value: 1182, isUnsigned: true)
!953 = !DIEnumerator(name: "CODE_FOR_sse_shufps_v4sf", value: 1185, isUnsigned: true)
!954 = !DIEnumerator(name: "CODE_FOR_sse_shufps_v4si", value: 1186, isUnsigned: true)
!955 = !DIEnumerator(name: "CODE_FOR_sse_storehps", value: 1187, isUnsigned: true)
!956 = !DIEnumerator(name: "CODE_FOR_sse_loadhps", value: 1189, isUnsigned: true)
!957 = !DIEnumerator(name: "CODE_FOR_sse_storelps", value: 1191, isUnsigned: true)
!958 = !DIEnumerator(name: "CODE_FOR_sse_loadlps", value: 1193, isUnsigned: true)
!959 = !DIEnumerator(name: "CODE_FOR_sse_movss", value: 1195, isUnsigned: true)
!960 = !DIEnumerator(name: "CODE_FOR_vec_setv4sf_0", value: 1209, isUnsigned: true)
!961 = !DIEnumerator(name: "CODE_FOR_vec_setv4si_0", value: 1210, isUnsigned: true)
!962 = !DIEnumerator(name: "CODE_FOR_sse4_1_insertps", value: 1214, isUnsigned: true)
!963 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v4di", value: 1216, isUnsigned: true)
!964 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v4df", value: 1217, isUnsigned: true)
!965 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v4di", value: 1218, isUnsigned: true)
!966 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v4df", value: 1219, isUnsigned: true)
!967 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v8si", value: 1220, isUnsigned: true)
!968 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v8sf", value: 1221, isUnsigned: true)
!969 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v8si", value: 1222, isUnsigned: true)
!970 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v8sf", value: 1223, isUnsigned: true)
!971 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v16hi", value: 1224, isUnsigned: true)
!972 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v16hi", value: 1225, isUnsigned: true)
!973 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v32qi", value: 1226, isUnsigned: true)
!974 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v32qi", value: 1227, isUnsigned: true)
!975 = !DIEnumerator(name: "CODE_FOR_avx_unpckhpd256", value: 1230, isUnsigned: true)
!976 = !DIEnumerator(name: "CODE_FOR_avx_shufpd256_1", value: 1238, isUnsigned: true)
!977 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv2di", value: 1240, isUnsigned: true)
!978 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv2di", value: 1242, isUnsigned: true)
!979 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd_v2df", value: 1245, isUnsigned: true)
!980 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd_v2di", value: 1246, isUnsigned: true)
!981 = !DIEnumerator(name: "CODE_FOR_sse2_storehpd", value: 1248, isUnsigned: true)
!982 = !DIEnumerator(name: "CODE_FOR_sse2_storelpd", value: 1249, isUnsigned: true)
!983 = !DIEnumerator(name: "CODE_FOR_sse2_loadhpd", value: 1251, isUnsigned: true)
!984 = !DIEnumerator(name: "CODE_FOR_sse2_loadlpd", value: 1253, isUnsigned: true)
!985 = !DIEnumerator(name: "CODE_FOR_sse2_movsd", value: 1257, isUnsigned: true)
!986 = !DIEnumerator(name: "CODE_FOR_vec_dupv2df", value: 1259, isUnsigned: true)
!987 = !DIEnumerator(name: "CODE_FOR_mulv16qi3", value: 1295, isUnsigned: true)
!988 = !DIEnumerator(name: "CODE_FOR_mulv2di3", value: 1311, isUnsigned: true)
!989 = !DIEnumerator(name: "CODE_FOR_ashrv8hi3", value: 1314, isUnsigned: true)
!990 = !DIEnumerator(name: "CODE_FOR_ashrv4si3", value: 1315, isUnsigned: true)
!991 = !DIEnumerator(name: "CODE_FOR_sse2_lshrv1ti3", value: 1320, isUnsigned: true)
!992 = !DIEnumerator(name: "CODE_FOR_lshrv8hi3", value: 1321, isUnsigned: true)
!993 = !DIEnumerator(name: "CODE_FOR_lshrv4si3", value: 1322, isUnsigned: true)
!994 = !DIEnumerator(name: "CODE_FOR_lshrv2di3", value: 1323, isUnsigned: true)
!995 = !DIEnumerator(name: "CODE_FOR_sse2_ashlv1ti3", value: 1328, isUnsigned: true)
!996 = !DIEnumerator(name: "CODE_FOR_ashlv8hi3", value: 1329, isUnsigned: true)
!997 = !DIEnumerator(name: "CODE_FOR_ashlv4si3", value: 1330, isUnsigned: true)
!998 = !DIEnumerator(name: "CODE_FOR_ashlv2di3", value: 1331, isUnsigned: true)
!999 = !DIEnumerator(name: "CODE_FOR_sse2_gtv16qi3", value: 1368, isUnsigned: true)
!1000 = !DIEnumerator(name: "CODE_FOR_sse2_gtv8hi3", value: 1369, isUnsigned: true)
!1001 = !DIEnumerator(name: "CODE_FOR_sse2_gtv4si3", value: 1370, isUnsigned: true)
!1002 = !DIEnumerator(name: "CODE_FOR_sse4_2_gtv2di3", value: 1371, isUnsigned: true)
!1003 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv16qi3", value: 1384, isUnsigned: true)
!1004 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv8hi3", value: 1385, isUnsigned: true)
!1005 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv4si3", value: 1386, isUnsigned: true)
!1006 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv2di3", value: 1387, isUnsigned: true)
!1007 = !DIEnumerator(name: "CODE_FOR_sse2_packsswb", value: 1441, isUnsigned: true)
!1008 = !DIEnumerator(name: "CODE_FOR_sse2_packssdw", value: 1443, isUnsigned: true)
!1009 = !DIEnumerator(name: "CODE_FOR_sse2_packuswb", value: 1445, isUnsigned: true)
!1010 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv16qi", value: 1447, isUnsigned: true)
!1011 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv16qi", value: 1449, isUnsigned: true)
!1012 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv8hi", value: 1451, isUnsigned: true)
!1013 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv8hi", value: 1453, isUnsigned: true)
!1014 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv4si", value: 1455, isUnsigned: true)
!1015 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv4si", value: 1457, isUnsigned: true)
!1016 = !DIEnumerator(name: "CODE_FOR_sse2_pshufd_1", value: 1469, isUnsigned: true)
!1017 = !DIEnumerator(name: "CODE_FOR_sse2_pshuflw_1", value: 1470, isUnsigned: true)
!1018 = !DIEnumerator(name: "CODE_FOR_sse2_pshufhw_1", value: 1471, isUnsigned: true)
!1019 = !DIEnumerator(name: "CODE_FOR_sse2_loadld", value: 1473, isUnsigned: true)
!1020 = !DIEnumerator(name: "CODE_FOR_sse2_stored", value: 1474, isUnsigned: true)
!1021 = !DIEnumerator(name: "CODE_FOR_vec_concatv2di", value: 1492, isUnsigned: true)
!1022 = !DIEnumerator(name: "CODE_FOR_sse2_psadbw", value: 1498, isUnsigned: true)
!1023 = !DIEnumerator(name: "CODE_FOR_avx_movmskps256", value: 1499, isUnsigned: true)
!1024 = !DIEnumerator(name: "CODE_FOR_avx_movmskpd256", value: 1500, isUnsigned: true)
!1025 = !DIEnumerator(name: "CODE_FOR_sse_movmskps", value: 1501, isUnsigned: true)
!1026 = !DIEnumerator(name: "CODE_FOR_sse2_movmskpd", value: 1502, isUnsigned: true)
!1027 = !DIEnumerator(name: "CODE_FOR_sse2_pmovmskb", value: 1503, isUnsigned: true)
!1028 = !DIEnumerator(name: "CODE_FOR_sse_ldmxcsr", value: 1505, isUnsigned: true)
!1029 = !DIEnumerator(name: "CODE_FOR_sse_stmxcsr", value: 1506, isUnsigned: true)
!1030 = !DIEnumerator(name: "CODE_FOR_sse2_clflush", value: 1508, isUnsigned: true)
!1031 = !DIEnumerator(name: "CODE_FOR_sse3_mwait", value: 1511, isUnsigned: true)
!1032 = !DIEnumerator(name: "CODE_FOR_sse3_monitor", value: 1512, isUnsigned: true)
!1033 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddwv8hi3", value: 1514, isUnsigned: true)
!1034 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddwv4hi3", value: 1515, isUnsigned: true)
!1035 = !DIEnumerator(name: "CODE_FOR_ssse3_phadddv4si3", value: 1517, isUnsigned: true)
!1036 = !DIEnumerator(name: "CODE_FOR_ssse3_phadddv2si3", value: 1518, isUnsigned: true)
!1037 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddswv8hi3", value: 1520, isUnsigned: true)
!1038 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddswv4hi3", value: 1521, isUnsigned: true)
!1039 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubwv8hi3", value: 1523, isUnsigned: true)
!1040 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubwv4hi3", value: 1524, isUnsigned: true)
!1041 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubdv4si3", value: 1526, isUnsigned: true)
!1042 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubdv2si3", value: 1527, isUnsigned: true)
!1043 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubswv8hi3", value: 1529, isUnsigned: true)
!1044 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubswv4hi3", value: 1530, isUnsigned: true)
!1045 = !DIEnumerator(name: "CODE_FOR_ssse3_pmaddubsw128", value: 1532, isUnsigned: true)
!1046 = !DIEnumerator(name: "CODE_FOR_ssse3_pmaddubsw", value: 1533, isUnsigned: true)
!1047 = !DIEnumerator(name: "CODE_FOR_ssse3_pshufbv16qi3", value: 1538, isUnsigned: true)
!1048 = !DIEnumerator(name: "CODE_FOR_ssse3_pshufbv8qi3", value: 1539, isUnsigned: true)
!1049 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv16qi3", value: 1543, isUnsigned: true)
!1050 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv8hi3", value: 1544, isUnsigned: true)
!1051 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv4si3", value: 1545, isUnsigned: true)
!1052 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv8qi3", value: 1546, isUnsigned: true)
!1053 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv4hi3", value: 1547, isUnsigned: true)
!1054 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv2si3", value: 1548, isUnsigned: true)
!1055 = !DIEnumerator(name: "CODE_FOR_ssse3_palignrti", value: 1550, isUnsigned: true)
!1056 = !DIEnumerator(name: "CODE_FOR_ssse3_palignrdi", value: 1551, isUnsigned: true)
!1057 = !DIEnumerator(name: "CODE_FOR_absv16qi2", value: 1552, isUnsigned: true)
!1058 = !DIEnumerator(name: "CODE_FOR_absv8hi2", value: 1553, isUnsigned: true)
!1059 = !DIEnumerator(name: "CODE_FOR_absv4si2", value: 1554, isUnsigned: true)
!1060 = !DIEnumerator(name: "CODE_FOR_absv8qi2", value: 1555, isUnsigned: true)
!1061 = !DIEnumerator(name: "CODE_FOR_absv4hi2", value: 1556, isUnsigned: true)
!1062 = !DIEnumerator(name: "CODE_FOR_absv2si2", value: 1557, isUnsigned: true)
!1063 = !DIEnumerator(name: "CODE_FOR_sse4a_movntsf", value: 1558, isUnsigned: true)
!1064 = !DIEnumerator(name: "CODE_FOR_sse4a_movntdf", value: 1559, isUnsigned: true)
!1065 = !DIEnumerator(name: "CODE_FOR_sse4a_vmmovntv4sf", value: 1560, isUnsigned: true)
!1066 = !DIEnumerator(name: "CODE_FOR_sse4a_vmmovntv2df", value: 1561, isUnsigned: true)
!1067 = !DIEnumerator(name: "CODE_FOR_sse4a_extrqi", value: 1562, isUnsigned: true)
!1068 = !DIEnumerator(name: "CODE_FOR_sse4a_extrq", value: 1563, isUnsigned: true)
!1069 = !DIEnumerator(name: "CODE_FOR_sse4a_insertqi", value: 1564, isUnsigned: true)
!1070 = !DIEnumerator(name: "CODE_FOR_sse4a_insertq", value: 1565, isUnsigned: true)
!1071 = !DIEnumerator(name: "CODE_FOR_avx_blendps", value: 1566, isUnsigned: true)
!1072 = !DIEnumerator(name: "CODE_FOR_avx_blendpd", value: 1567, isUnsigned: true)
!1073 = !DIEnumerator(name: "CODE_FOR_avx_blendps256", value: 1568, isUnsigned: true)
!1074 = !DIEnumerator(name: "CODE_FOR_avx_blendpd256", value: 1569, isUnsigned: true)
!1075 = !DIEnumerator(name: "CODE_FOR_avx_blendvps", value: 1570, isUnsigned: true)
!1076 = !DIEnumerator(name: "CODE_FOR_avx_blendvpd", value: 1571, isUnsigned: true)
!1077 = !DIEnumerator(name: "CODE_FOR_avx_blendvps256", value: 1572, isUnsigned: true)
!1078 = !DIEnumerator(name: "CODE_FOR_avx_blendvpd256", value: 1573, isUnsigned: true)
!1079 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendps", value: 1574, isUnsigned: true)
!1080 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendpd", value: 1575, isUnsigned: true)
!1081 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendvps", value: 1576, isUnsigned: true)
!1082 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendvpd", value: 1577, isUnsigned: true)
!1083 = !DIEnumerator(name: "CODE_FOR_avx_dpps", value: 1578, isUnsigned: true)
!1084 = !DIEnumerator(name: "CODE_FOR_avx_dppd", value: 1579, isUnsigned: true)
!1085 = !DIEnumerator(name: "CODE_FOR_avx_dpps256", value: 1580, isUnsigned: true)
!1086 = !DIEnumerator(name: "CODE_FOR_avx_dppd256", value: 1581, isUnsigned: true)
!1087 = !DIEnumerator(name: "CODE_FOR_sse4_1_dpps", value: 1582, isUnsigned: true)
!1088 = !DIEnumerator(name: "CODE_FOR_sse4_1_dppd", value: 1583, isUnsigned: true)
!1089 = !DIEnumerator(name: "CODE_FOR_sse4_1_movntdqa", value: 1584, isUnsigned: true)
!1090 = !DIEnumerator(name: "CODE_FOR_sse4_1_mpsadbw", value: 1586, isUnsigned: true)
!1091 = !DIEnumerator(name: "CODE_FOR_sse4_1_packusdw", value: 1588, isUnsigned: true)
!1092 = !DIEnumerator(name: "CODE_FOR_sse4_1_pblendvb", value: 1590, isUnsigned: true)
!1093 = !DIEnumerator(name: "CODE_FOR_sse4_1_pblendw", value: 1592, isUnsigned: true)
!1094 = !DIEnumerator(name: "CODE_FOR_sse4_1_phminposuw", value: 1593, isUnsigned: true)
!1095 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv8qiv8hi2", value: 1594, isUnsigned: true)
!1096 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv4qiv4si2", value: 1596, isUnsigned: true)
!1097 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2qiv2di2", value: 1598, isUnsigned: true)
!1098 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv4hiv4si2", value: 1600, isUnsigned: true)
!1099 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2hiv2di2", value: 1602, isUnsigned: true)
!1100 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2siv2di2", value: 1604, isUnsigned: true)
!1101 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv8qiv8hi2", value: 1606, isUnsigned: true)
!1102 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv4qiv4si2", value: 1608, isUnsigned: true)
!1103 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2qiv2di2", value: 1610, isUnsigned: true)
!1104 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv4hiv4si2", value: 1612, isUnsigned: true)
!1105 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2hiv2di2", value: 1614, isUnsigned: true)
!1106 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2siv2di2", value: 1616, isUnsigned: true)
!1107 = !DIEnumerator(name: "CODE_FOR_avx_vtestps", value: 1618, isUnsigned: true)
!1108 = !DIEnumerator(name: "CODE_FOR_avx_vtestpd", value: 1619, isUnsigned: true)
!1109 = !DIEnumerator(name: "CODE_FOR_avx_vtestps256", value: 1620, isUnsigned: true)
!1110 = !DIEnumerator(name: "CODE_FOR_avx_vtestpd256", value: 1621, isUnsigned: true)
!1111 = !DIEnumerator(name: "CODE_FOR_avx_ptest256", value: 1622, isUnsigned: true)
!1112 = !DIEnumerator(name: "CODE_FOR_sse4_1_ptest", value: 1623, isUnsigned: true)
!1113 = !DIEnumerator(name: "CODE_FOR_avx_roundps256", value: 1624, isUnsigned: true)
!1114 = !DIEnumerator(name: "CODE_FOR_avx_roundpd256", value: 1625, isUnsigned: true)
!1115 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundps", value: 1626, isUnsigned: true)
!1116 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundpd", value: 1627, isUnsigned: true)
!1117 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundss", value: 1630, isUnsigned: true)
!1118 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundsd", value: 1631, isUnsigned: true)
!1119 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestr", value: 1632, isUnsigned: true)
!1120 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestri", value: 1633, isUnsigned: true)
!1121 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestrm", value: 1634, isUnsigned: true)
!1122 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestr_cconly", value: 1635, isUnsigned: true)
!1123 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistr", value: 1636, isUnsigned: true)
!1124 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistri", value: 1637, isUnsigned: true)
!1125 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistrm", value: 1638, isUnsigned: true)
!1126 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistr_cconly", value: 1639, isUnsigned: true)
!1127 = !DIEnumerator(name: "CODE_FOR_xop_pmacsww", value: 1640, isUnsigned: true)
!1128 = !DIEnumerator(name: "CODE_FOR_xop_pmacssww", value: 1641, isUnsigned: true)
!1129 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdd", value: 1642, isUnsigned: true)
!1130 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdd", value: 1643, isUnsigned: true)
!1131 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdql", value: 1644, isUnsigned: true)
!1132 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdqh", value: 1645, isUnsigned: true)
!1133 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdql", value: 1646, isUnsigned: true)
!1134 = !DIEnumerator(name: "CODE_FOR_xop_mulv2div2di3_low", value: 1647, isUnsigned: true)
!1135 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdqh", value: 1648, isUnsigned: true)
!1136 = !DIEnumerator(name: "CODE_FOR_xop_mulv2div2di3_high", value: 1649, isUnsigned: true)
!1137 = !DIEnumerator(name: "CODE_FOR_xop_pmacsswd", value: 1650, isUnsigned: true)
!1138 = !DIEnumerator(name: "CODE_FOR_xop_pmacswd", value: 1651, isUnsigned: true)
!1139 = !DIEnumerator(name: "CODE_FOR_xop_pmadcsswd", value: 1652, isUnsigned: true)
!1140 = !DIEnumerator(name: "CODE_FOR_xop_pmadcswd", value: 1653, isUnsigned: true)
!1141 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v16qi", value: 1654, isUnsigned: true)
!1142 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8hi", value: 1655, isUnsigned: true)
!1143 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4si", value: 1656, isUnsigned: true)
!1144 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v2di", value: 1657, isUnsigned: true)
!1145 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4sf", value: 1658, isUnsigned: true)
!1146 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v2df", value: 1659, isUnsigned: true)
!1147 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v32qi256", value: 1660, isUnsigned: true)
!1148 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v16hi256", value: 1661, isUnsigned: true)
!1149 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8si256", value: 1662, isUnsigned: true)
!1150 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4di256", value: 1663, isUnsigned: true)
!1151 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8sf256", value: 1664, isUnsigned: true)
!1152 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4df256", value: 1665, isUnsigned: true)
!1153 = !DIEnumerator(name: "CODE_FOR_xop_phaddbw", value: 1666, isUnsigned: true)
!1154 = !DIEnumerator(name: "CODE_FOR_xop_phaddbd", value: 1667, isUnsigned: true)
!1155 = !DIEnumerator(name: "CODE_FOR_xop_phaddbq", value: 1668, isUnsigned: true)
!1156 = !DIEnumerator(name: "CODE_FOR_xop_phaddwd", value: 1669, isUnsigned: true)
!1157 = !DIEnumerator(name: "CODE_FOR_xop_phaddwq", value: 1670, isUnsigned: true)
!1158 = !DIEnumerator(name: "CODE_FOR_xop_phadddq", value: 1671, isUnsigned: true)
!1159 = !DIEnumerator(name: "CODE_FOR_xop_phaddubw", value: 1672, isUnsigned: true)
!1160 = !DIEnumerator(name: "CODE_FOR_xop_phaddubd", value: 1673, isUnsigned: true)
!1161 = !DIEnumerator(name: "CODE_FOR_xop_phaddubq", value: 1674, isUnsigned: true)
!1162 = !DIEnumerator(name: "CODE_FOR_xop_phadduwd", value: 1675, isUnsigned: true)
!1163 = !DIEnumerator(name: "CODE_FOR_xop_phadduwq", value: 1676, isUnsigned: true)
!1164 = !DIEnumerator(name: "CODE_FOR_xop_phaddudq", value: 1677, isUnsigned: true)
!1165 = !DIEnumerator(name: "CODE_FOR_xop_phsubbw", value: 1678, isUnsigned: true)
!1166 = !DIEnumerator(name: "CODE_FOR_xop_phsubwd", value: 1679, isUnsigned: true)
!1167 = !DIEnumerator(name: "CODE_FOR_xop_phsubdq", value: 1680, isUnsigned: true)
!1168 = !DIEnumerator(name: "CODE_FOR_xop_pperm", value: 1681, isUnsigned: true)
!1169 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v2di_v4si", value: 1682, isUnsigned: true)
!1170 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v4si_v8hi", value: 1683, isUnsigned: true)
!1171 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v8hi_v16qi", value: 1684, isUnsigned: true)
!1172 = !DIEnumerator(name: "CODE_FOR_xop_rotlv16qi3", value: 1685, isUnsigned: true)
!1173 = !DIEnumerator(name: "CODE_FOR_xop_rotlv8hi3", value: 1686, isUnsigned: true)
!1174 = !DIEnumerator(name: "CODE_FOR_xop_rotlv4si3", value: 1687, isUnsigned: true)
!1175 = !DIEnumerator(name: "CODE_FOR_xop_rotlv2di3", value: 1688, isUnsigned: true)
!1176 = !DIEnumerator(name: "CODE_FOR_xop_rotrv16qi3", value: 1689, isUnsigned: true)
!1177 = !DIEnumerator(name: "CODE_FOR_xop_rotrv8hi3", value: 1690, isUnsigned: true)
!1178 = !DIEnumerator(name: "CODE_FOR_xop_rotrv4si3", value: 1691, isUnsigned: true)
!1179 = !DIEnumerator(name: "CODE_FOR_xop_rotrv2di3", value: 1692, isUnsigned: true)
!1180 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv16qi3", value: 1693, isUnsigned: true)
!1181 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv8hi3", value: 1694, isUnsigned: true)
!1182 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv4si3", value: 1695, isUnsigned: true)
!1183 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv2di3", value: 1696, isUnsigned: true)
!1184 = !DIEnumerator(name: "CODE_FOR_xop_ashlv16qi3", value: 1697, isUnsigned: true)
!1185 = !DIEnumerator(name: "CODE_FOR_xop_ashlv8hi3", value: 1698, isUnsigned: true)
!1186 = !DIEnumerator(name: "CODE_FOR_xop_ashlv4si3", value: 1699, isUnsigned: true)
!1187 = !DIEnumerator(name: "CODE_FOR_xop_ashlv2di3", value: 1700, isUnsigned: true)
!1188 = !DIEnumerator(name: "CODE_FOR_xop_lshlv16qi3", value: 1701, isUnsigned: true)
!1189 = !DIEnumerator(name: "CODE_FOR_xop_lshlv8hi3", value: 1702, isUnsigned: true)
!1190 = !DIEnumerator(name: "CODE_FOR_xop_lshlv4si3", value: 1703, isUnsigned: true)
!1191 = !DIEnumerator(name: "CODE_FOR_xop_lshlv2di3", value: 1704, isUnsigned: true)
!1192 = !DIEnumerator(name: "CODE_FOR_xop_frczv4sf2", value: 1705, isUnsigned: true)
!1193 = !DIEnumerator(name: "CODE_FOR_xop_frczv2df2", value: 1706, isUnsigned: true)
!1194 = !DIEnumerator(name: "CODE_FOR_xop_vmfrczv4sf2", value: 1707, isUnsigned: true)
!1195 = !DIEnumerator(name: "CODE_FOR_xop_vmfrczv2df2", value: 1708, isUnsigned: true)
!1196 = !DIEnumerator(name: "CODE_FOR_xop_frczv8sf2256", value: 1709, isUnsigned: true)
!1197 = !DIEnumerator(name: "CODE_FOR_xop_frczv4df2256", value: 1710, isUnsigned: true)
!1198 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv16qi3", value: 1711, isUnsigned: true)
!1199 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv8hi3", value: 1712, isUnsigned: true)
!1200 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv4si3", value: 1713, isUnsigned: true)
!1201 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv2di3", value: 1714, isUnsigned: true)
!1202 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv16qi3", value: 1715, isUnsigned: true)
!1203 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv8hi3", value: 1716, isUnsigned: true)
!1204 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv4si3", value: 1717, isUnsigned: true)
!1205 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv2di3", value: 1718, isUnsigned: true)
!1206 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v16qi3", value: 1719, isUnsigned: true)
!1207 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v8hi3", value: 1720, isUnsigned: true)
!1208 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v4si3", value: 1721, isUnsigned: true)
!1209 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v2di3", value: 1722, isUnsigned: true)
!1210 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv16qi3", value: 1723, isUnsigned: true)
!1211 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv8hi3", value: 1724, isUnsigned: true)
!1212 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv4si3", value: 1725, isUnsigned: true)
!1213 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv2di3", value: 1726, isUnsigned: true)
!1214 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v4sf3", value: 1727, isUnsigned: true)
!1215 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v2df3", value: 1728, isUnsigned: true)
!1216 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v8sf3", value: 1729, isUnsigned: true)
!1217 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v4df3", value: 1730, isUnsigned: true)
!1218 = !DIEnumerator(name: "CODE_FOR_aesenc", value: 1732, isUnsigned: true)
!1219 = !DIEnumerator(name: "CODE_FOR_aesenclast", value: 1734, isUnsigned: true)
!1220 = !DIEnumerator(name: "CODE_FOR_aesdec", value: 1736, isUnsigned: true)
!1221 = !DIEnumerator(name: "CODE_FOR_aesdeclast", value: 1738, isUnsigned: true)
!1222 = !DIEnumerator(name: "CODE_FOR_aesimc", value: 1739, isUnsigned: true)
!1223 = !DIEnumerator(name: "CODE_FOR_aeskeygenassist", value: 1740, isUnsigned: true)
!1224 = !DIEnumerator(name: "CODE_FOR_pclmulqdq", value: 1742, isUnsigned: true)
!1225 = !DIEnumerator(name: "CODE_FOR_vec_dupv8si", value: 1745, isUnsigned: true)
!1226 = !DIEnumerator(name: "CODE_FOR_vec_dupv8sf", value: 1746, isUnsigned: true)
!1227 = !DIEnumerator(name: "CODE_FOR_vec_dupv4di", value: 1747, isUnsigned: true)
!1228 = !DIEnumerator(name: "CODE_FOR_vec_dupv4df", value: 1748, isUnsigned: true)
!1229 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v32qi", value: 1749, isUnsigned: true)
!1230 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v16hi", value: 1750, isUnsigned: true)
!1231 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v8si", value: 1751, isUnsigned: true)
!1232 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v4di", value: 1752, isUnsigned: true)
!1233 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v8sf", value: 1753, isUnsigned: true)
!1234 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v4df", value: 1754, isUnsigned: true)
!1235 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv4sf3", value: 1762, isUnsigned: true)
!1236 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv2df3", value: 1763, isUnsigned: true)
!1237 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv8sf3", value: 1764, isUnsigned: true)
!1238 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv4df3", value: 1765, isUnsigned: true)
!1239 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v4di", value: 1772, isUnsigned: true)
!1240 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v4df", value: 1773, isUnsigned: true)
!1241 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v4di", value: 1774, isUnsigned: true)
!1242 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v4df", value: 1775, isUnsigned: true)
!1243 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v8si", value: 1776, isUnsigned: true)
!1244 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v8sf", value: 1777, isUnsigned: true)
!1245 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v8si", value: 1778, isUnsigned: true)
!1246 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v8sf", value: 1779, isUnsigned: true)
!1247 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v16hi", value: 1780, isUnsigned: true)
!1248 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v16hi", value: 1781, isUnsigned: true)
!1249 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v32qi", value: 1782, isUnsigned: true)
!1250 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v32qi", value: 1783, isUnsigned: true)
!1251 = !DIEnumerator(name: "CODE_FOR_avx_maskloadps", value: 1784, isUnsigned: true)
!1252 = !DIEnumerator(name: "CODE_FOR_avx_maskloadpd", value: 1785, isUnsigned: true)
!1253 = !DIEnumerator(name: "CODE_FOR_avx_maskloadps256", value: 1786, isUnsigned: true)
!1254 = !DIEnumerator(name: "CODE_FOR_avx_maskloadpd256", value: 1787, isUnsigned: true)
!1255 = !DIEnumerator(name: "CODE_FOR_avx_maskstoreps", value: 1788, isUnsigned: true)
!1256 = !DIEnumerator(name: "CODE_FOR_avx_maskstorepd", value: 1789, isUnsigned: true)
!1257 = !DIEnumerator(name: "CODE_FOR_avx_maskstoreps256", value: 1790, isUnsigned: true)
!1258 = !DIEnumerator(name: "CODE_FOR_avx_maskstorepd256", value: 1791, isUnsigned: true)
!1259 = !DIEnumerator(name: "CODE_FOR_avx_si256_si", value: 1792, isUnsigned: true)
!1260 = !DIEnumerator(name: "CODE_FOR_avx_ps256_ps", value: 1793, isUnsigned: true)
!1261 = !DIEnumerator(name: "CODE_FOR_avx_pd256_pd", value: 1794, isUnsigned: true)
!1262 = !DIEnumerator(name: "CODE_FOR_avx_si_si256", value: 1795, isUnsigned: true)
!1263 = !DIEnumerator(name: "CODE_FOR_avx_ps_ps256", value: 1796, isUnsigned: true)
!1264 = !DIEnumerator(name: "CODE_FOR_avx_pd_pd256", value: 1797, isUnsigned: true)
!1265 = !DIEnumerator(name: "CODE_FOR_memory_barrier_nosse", value: 1804, isUnsigned: true)
!1266 = !DIEnumerator(name: "CODE_FOR_sync_double_compare_and_swapdi", value: 1808, isUnsigned: true)
!1267 = !DIEnumerator(name: "CODE_FOR_sync_old_addqi", value: 1810, isUnsigned: true)
!1268 = !DIEnumerator(name: "CODE_FOR_sync_old_addhi", value: 1811, isUnsigned: true)
!1269 = !DIEnumerator(name: "CODE_FOR_sync_old_addsi", value: 1812, isUnsigned: true)
!1270 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_setqi", value: 1813, isUnsigned: true)
!1271 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_sethi", value: 1814, isUnsigned: true)
!1272 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_setsi", value: 1815, isUnsigned: true)
!1273 = !DIEnumerator(name: "CODE_FOR_sync_addqi", value: 1816, isUnsigned: true)
!1274 = !DIEnumerator(name: "CODE_FOR_sync_addhi", value: 1817, isUnsigned: true)
!1275 = !DIEnumerator(name: "CODE_FOR_sync_addsi", value: 1818, isUnsigned: true)
!1276 = !DIEnumerator(name: "CODE_FOR_sync_subqi", value: 1819, isUnsigned: true)
!1277 = !DIEnumerator(name: "CODE_FOR_sync_subhi", value: 1820, isUnsigned: true)
!1278 = !DIEnumerator(name: "CODE_FOR_sync_subsi", value: 1821, isUnsigned: true)
!1279 = !DIEnumerator(name: "CODE_FOR_sync_andqi", value: 1822, isUnsigned: true)
!1280 = !DIEnumerator(name: "CODE_FOR_sync_iorqi", value: 1823, isUnsigned: true)
!1281 = !DIEnumerator(name: "CODE_FOR_sync_xorqi", value: 1824, isUnsigned: true)
!1282 = !DIEnumerator(name: "CODE_FOR_sync_andhi", value: 1825, isUnsigned: true)
!1283 = !DIEnumerator(name: "CODE_FOR_sync_iorhi", value: 1826, isUnsigned: true)
!1284 = !DIEnumerator(name: "CODE_FOR_sync_xorhi", value: 1827, isUnsigned: true)
!1285 = !DIEnumerator(name: "CODE_FOR_sync_andsi", value: 1828, isUnsigned: true)
!1286 = !DIEnumerator(name: "CODE_FOR_sync_iorsi", value: 1829, isUnsigned: true)
!1287 = !DIEnumerator(name: "CODE_FOR_sync_xorsi", value: 1830, isUnsigned: true)
!1288 = !DIEnumerator(name: "CODE_FOR_cbranchqi4", value: 1831, isUnsigned: true)
!1289 = !DIEnumerator(name: "CODE_FOR_cbranchhi4", value: 1832, isUnsigned: true)
!1290 = !DIEnumerator(name: "CODE_FOR_cbranchsi4", value: 1833, isUnsigned: true)
!1291 = !DIEnumerator(name: "CODE_FOR_cbranchdi4", value: 1834, isUnsigned: true)
!1292 = !DIEnumerator(name: "CODE_FOR_cstoreqi4", value: 1835, isUnsigned: true)
!1293 = !DIEnumerator(name: "CODE_FOR_cstorehi4", value: 1836, isUnsigned: true)
!1294 = !DIEnumerator(name: "CODE_FOR_cstoresi4", value: 1837, isUnsigned: true)
!1295 = !DIEnumerator(name: "CODE_FOR_cmpsi_1", value: 1838, isUnsigned: true)
!1296 = !DIEnumerator(name: "CODE_FOR_cmpqi_ext_3", value: 1839, isUnsigned: true)
!1297 = !DIEnumerator(name: "CODE_FOR_cbranchxf4", value: 1840, isUnsigned: true)
!1298 = !DIEnumerator(name: "CODE_FOR_cstorexf4", value: 1841, isUnsigned: true)
!1299 = !DIEnumerator(name: "CODE_FOR_cbranchsf4", value: 1842, isUnsigned: true)
!1300 = !DIEnumerator(name: "CODE_FOR_cbranchdf4", value: 1843, isUnsigned: true)
!1301 = !DIEnumerator(name: "CODE_FOR_cstoresf4", value: 1844, isUnsigned: true)
!1302 = !DIEnumerator(name: "CODE_FOR_cstoredf4", value: 1845, isUnsigned: true)
!1303 = !DIEnumerator(name: "CODE_FOR_cbranchcc4", value: 1846, isUnsigned: true)
!1304 = !DIEnumerator(name: "CODE_FOR_cstorecc4", value: 1847, isUnsigned: true)
!1305 = !DIEnumerator(name: "CODE_FOR_movsi", value: 1855, isUnsigned: true)
!1306 = !DIEnumerator(name: "CODE_FOR_movhi", value: 1856, isUnsigned: true)
!1307 = !DIEnumerator(name: "CODE_FOR_movstricthi", value: 1857, isUnsigned: true)
!1308 = !DIEnumerator(name: "CODE_FOR_movqi", value: 1858, isUnsigned: true)
!1309 = !DIEnumerator(name: "CODE_FOR_movstrictqi", value: 1859, isUnsigned: true)
!1310 = !DIEnumerator(name: "CODE_FOR_movdi", value: 1860, isUnsigned: true)
!1311 = !DIEnumerator(name: "CODE_FOR_movoi", value: 1863, isUnsigned: true)
!1312 = !DIEnumerator(name: "CODE_FOR_movti", value: 1864, isUnsigned: true)
!1313 = !DIEnumerator(name: "CODE_FOR_movcdi", value: 1866, isUnsigned: true)
!1314 = !DIEnumerator(name: "CODE_FOR_movsf", value: 1867, isUnsigned: true)
!1315 = !DIEnumerator(name: "CODE_FOR_movdf", value: 1870, isUnsigned: true)
!1316 = !DIEnumerator(name: "CODE_FOR_movxf", value: 1874, isUnsigned: true)
!1317 = !DIEnumerator(name: "CODE_FOR_movtf", value: 1877, isUnsigned: true)
!1318 = !DIEnumerator(name: "CODE_FOR_zero_extendhisi2", value: 1887, isUnsigned: true)
!1319 = !DIEnumerator(name: "CODE_FOR_zero_extendqihi2", value: 1889, isUnsigned: true)
!1320 = !DIEnumerator(name: "CODE_FOR_zero_extendqisi2", value: 1893, isUnsigned: true)
!1321 = !DIEnumerator(name: "CODE_FOR_zero_extendsidi2", value: 1897, isUnsigned: true)
!1322 = !DIEnumerator(name: "CODE_FOR_extendsidi2", value: 1900, isUnsigned: true)
!1323 = !DIEnumerator(name: "CODE_FOR_extendsfdf2", value: 1907, isUnsigned: true)
!1324 = !DIEnumerator(name: "CODE_FOR_extendsfxf2", value: 1909, isUnsigned: true)
!1325 = !DIEnumerator(name: "CODE_FOR_extenddfxf2", value: 1910, isUnsigned: true)
!1326 = !DIEnumerator(name: "CODE_FOR_truncdfsf2", value: 1911, isUnsigned: true)
!1327 = !DIEnumerator(name: "CODE_FOR_truncdfsf2_with_temp", value: 1913, isUnsigned: true)
!1328 = !DIEnumerator(name: "CODE_FOR_truncxfsf2", value: 1915, isUnsigned: true)
!1329 = !DIEnumerator(name: "CODE_FOR_truncxfdf2", value: 1916, isUnsigned: true)
!1330 = !DIEnumerator(name: "CODE_FOR_fix_truncxfdi2", value: 1921, isUnsigned: true)
!1331 = !DIEnumerator(name: "CODE_FOR_fix_truncsfdi2", value: 1922, isUnsigned: true)
!1332 = !DIEnumerator(name: "CODE_FOR_fix_truncdfdi2", value: 1923, isUnsigned: true)
!1333 = !DIEnumerator(name: "CODE_FOR_fix_truncxfsi2", value: 1924, isUnsigned: true)
!1334 = !DIEnumerator(name: "CODE_FOR_fix_truncsfsi2", value: 1925, isUnsigned: true)
!1335 = !DIEnumerator(name: "CODE_FOR_fix_truncdfsi2", value: 1926, isUnsigned: true)
!1336 = !DIEnumerator(name: "CODE_FOR_fix_truncsfhi2", value: 1927, isUnsigned: true)
!1337 = !DIEnumerator(name: "CODE_FOR_fix_truncdfhi2", value: 1928, isUnsigned: true)
!1338 = !DIEnumerator(name: "CODE_FOR_fix_truncxfhi2", value: 1929, isUnsigned: true)
!1339 = !DIEnumerator(name: "CODE_FOR_fixuns_truncsfsi2", value: 1930, isUnsigned: true)
!1340 = !DIEnumerator(name: "CODE_FOR_fixuns_truncdfsi2", value: 1931, isUnsigned: true)
!1341 = !DIEnumerator(name: "CODE_FOR_fixuns_truncsfhi2", value: 1934, isUnsigned: true)
!1342 = !DIEnumerator(name: "CODE_FOR_fixuns_truncdfhi2", value: 1935, isUnsigned: true)
!1343 = !DIEnumerator(name: "CODE_FOR_floathisf2", value: 1962, isUnsigned: true)
!1344 = !DIEnumerator(name: "CODE_FOR_floathidf2", value: 1963, isUnsigned: true)
!1345 = !DIEnumerator(name: "CODE_FOR_floathixf2", value: 1964, isUnsigned: true)
!1346 = !DIEnumerator(name: "CODE_FOR_floatsisf2", value: 1974, isUnsigned: true)
!1347 = !DIEnumerator(name: "CODE_FOR_floatdisf2", value: 1975, isUnsigned: true)
!1348 = !DIEnumerator(name: "CODE_FOR_floatsidf2", value: 1976, isUnsigned: true)
!1349 = !DIEnumerator(name: "CODE_FOR_floatdidf2", value: 1977, isUnsigned: true)
!1350 = !DIEnumerator(name: "CODE_FOR_floatsixf2", value: 1978, isUnsigned: true)
!1351 = !DIEnumerator(name: "CODE_FOR_floatdixf2", value: 1979, isUnsigned: true)
!1352 = !DIEnumerator(name: "CODE_FOR_floatunssisf2", value: 2028, isUnsigned: true)
!1353 = !DIEnumerator(name: "CODE_FOR_floatunssidf2", value: 2029, isUnsigned: true)
!1354 = !DIEnumerator(name: "CODE_FOR_floatunssixf2", value: 2030, isUnsigned: true)
!1355 = !DIEnumerator(name: "CODE_FOR_addqi3", value: 2031, isUnsigned: true)
!1356 = !DIEnumerator(name: "CODE_FOR_addhi3", value: 2032, isUnsigned: true)
!1357 = !DIEnumerator(name: "CODE_FOR_addsi3", value: 2033, isUnsigned: true)
!1358 = !DIEnumerator(name: "CODE_FOR_adddi3", value: 2034, isUnsigned: true)
!1359 = !DIEnumerator(name: "CODE_FOR_subqi3", value: 2040, isUnsigned: true)
!1360 = !DIEnumerator(name: "CODE_FOR_subhi3", value: 2041, isUnsigned: true)
!1361 = !DIEnumerator(name: "CODE_FOR_subsi3", value: 2042, isUnsigned: true)
!1362 = !DIEnumerator(name: "CODE_FOR_subdi3", value: 2043, isUnsigned: true)
!1363 = !DIEnumerator(name: "CODE_FOR_addqi3_carry", value: 2045, isUnsigned: true)
!1364 = !DIEnumerator(name: "CODE_FOR_subqi3_carry", value: 2046, isUnsigned: true)
!1365 = !DIEnumerator(name: "CODE_FOR_addhi3_carry", value: 2047, isUnsigned: true)
!1366 = !DIEnumerator(name: "CODE_FOR_subhi3_carry", value: 2048, isUnsigned: true)
!1367 = !DIEnumerator(name: "CODE_FOR_addsi3_carry", value: 2049, isUnsigned: true)
!1368 = !DIEnumerator(name: "CODE_FOR_subsi3_carry", value: 2050, isUnsigned: true)
!1369 = !DIEnumerator(name: "CODE_FOR_adddi3_carry", value: 2051, isUnsigned: true)
!1370 = !DIEnumerator(name: "CODE_FOR_subdi3_carry", value: 2052, isUnsigned: true)
!1371 = !DIEnumerator(name: "CODE_FOR_addxf3", value: 2053, isUnsigned: true)
!1372 = !DIEnumerator(name: "CODE_FOR_subxf3", value: 2054, isUnsigned: true)
!1373 = !DIEnumerator(name: "CODE_FOR_addsf3", value: 2055, isUnsigned: true)
!1374 = !DIEnumerator(name: "CODE_FOR_subsf3", value: 2056, isUnsigned: true)
!1375 = !DIEnumerator(name: "CODE_FOR_adddf3", value: 2057, isUnsigned: true)
!1376 = !DIEnumerator(name: "CODE_FOR_subdf3", value: 2058, isUnsigned: true)
!1377 = !DIEnumerator(name: "CODE_FOR_mulhi3", value: 2059, isUnsigned: true)
!1378 = !DIEnumerator(name: "CODE_FOR_mulsi3", value: 2060, isUnsigned: true)
!1379 = !DIEnumerator(name: "CODE_FOR_mulqi3", value: 2061, isUnsigned: true)
!1380 = !DIEnumerator(name: "CODE_FOR_mulsidi3", value: 2062, isUnsigned: true)
!1381 = !DIEnumerator(name: "CODE_FOR_umulsidi3", value: 2063, isUnsigned: true)
!1382 = !DIEnumerator(name: "CODE_FOR_mulqihi3", value: 2064, isUnsigned: true)
!1383 = !DIEnumerator(name: "CODE_FOR_umulqihi3", value: 2065, isUnsigned: true)
!1384 = !DIEnumerator(name: "CODE_FOR_smulsi3_highpart", value: 2066, isUnsigned: true)
!1385 = !DIEnumerator(name: "CODE_FOR_umulsi3_highpart", value: 2067, isUnsigned: true)
!1386 = !DIEnumerator(name: "CODE_FOR_mulxf3", value: 2068, isUnsigned: true)
!1387 = !DIEnumerator(name: "CODE_FOR_mulsf3", value: 2069, isUnsigned: true)
!1388 = !DIEnumerator(name: "CODE_FOR_muldf3", value: 2070, isUnsigned: true)
!1389 = !DIEnumerator(name: "CODE_FOR_divxf3", value: 2071, isUnsigned: true)
!1390 = !DIEnumerator(name: "CODE_FOR_divdf3", value: 2072, isUnsigned: true)
!1391 = !DIEnumerator(name: "CODE_FOR_divsf3", value: 2073, isUnsigned: true)
!1392 = !DIEnumerator(name: "CODE_FOR_divmodhi4", value: 2074, isUnsigned: true)
!1393 = !DIEnumerator(name: "CODE_FOR_divmodsi4", value: 2075, isUnsigned: true)
!1394 = !DIEnumerator(name: "CODE_FOR_udivmodhi4", value: 2078, isUnsigned: true)
!1395 = !DIEnumerator(name: "CODE_FOR_udivmodsi4", value: 2079, isUnsigned: true)
!1396 = !DIEnumerator(name: "CODE_FOR_testsi_ccno_1", value: 2082, isUnsigned: true)
!1397 = !DIEnumerator(name: "CODE_FOR_testqi_ccz_1", value: 2083, isUnsigned: true)
!1398 = !DIEnumerator(name: "CODE_FOR_testqi_ext_ccno_0", value: 2084, isUnsigned: true)
!1399 = !DIEnumerator(name: "CODE_FOR_andqi3", value: 2088, isUnsigned: true)
!1400 = !DIEnumerator(name: "CODE_FOR_andhi3", value: 2089, isUnsigned: true)
!1401 = !DIEnumerator(name: "CODE_FOR_andsi3", value: 2090, isUnsigned: true)
!1402 = !DIEnumerator(name: "CODE_FOR_iorqi3", value: 2096, isUnsigned: true)
!1403 = !DIEnumerator(name: "CODE_FOR_xorqi3", value: 2097, isUnsigned: true)
!1404 = !DIEnumerator(name: "CODE_FOR_iorhi3", value: 2098, isUnsigned: true)
!1405 = !DIEnumerator(name: "CODE_FOR_xorhi3", value: 2099, isUnsigned: true)
!1406 = !DIEnumerator(name: "CODE_FOR_iorsi3", value: 2100, isUnsigned: true)
!1407 = !DIEnumerator(name: "CODE_FOR_xorsi3", value: 2101, isUnsigned: true)
!1408 = !DIEnumerator(name: "CODE_FOR_xorqi_cc_ext_1", value: 2106, isUnsigned: true)
!1409 = !DIEnumerator(name: "CODE_FOR_negqi2", value: 2107, isUnsigned: true)
!1410 = !DIEnumerator(name: "CODE_FOR_neghi2", value: 2108, isUnsigned: true)
!1411 = !DIEnumerator(name: "CODE_FOR_negsi2", value: 2109, isUnsigned: true)
!1412 = !DIEnumerator(name: "CODE_FOR_negdi2", value: 2110, isUnsigned: true)
!1413 = !DIEnumerator(name: "CODE_FOR_abssf2", value: 2112, isUnsigned: true)
!1414 = !DIEnumerator(name: "CODE_FOR_negsf2", value: 2113, isUnsigned: true)
!1415 = !DIEnumerator(name: "CODE_FOR_absdf2", value: 2114, isUnsigned: true)
!1416 = !DIEnumerator(name: "CODE_FOR_negdf2", value: 2115, isUnsigned: true)
!1417 = !DIEnumerator(name: "CODE_FOR_absxf2", value: 2116, isUnsigned: true)
!1418 = !DIEnumerator(name: "CODE_FOR_negxf2", value: 2117, isUnsigned: true)
!1419 = !DIEnumerator(name: "CODE_FOR_abstf2", value: 2118, isUnsigned: true)
!1420 = !DIEnumerator(name: "CODE_FOR_negtf2", value: 2119, isUnsigned: true)
!1421 = !DIEnumerator(name: "CODE_FOR_copysignsf3", value: 2125, isUnsigned: true)
!1422 = !DIEnumerator(name: "CODE_FOR_copysigndf3", value: 2126, isUnsigned: true)
!1423 = !DIEnumerator(name: "CODE_FOR_copysigntf3", value: 2127, isUnsigned: true)
!1424 = !DIEnumerator(name: "CODE_FOR_one_cmplqi2", value: 2134, isUnsigned: true)
!1425 = !DIEnumerator(name: "CODE_FOR_one_cmplhi2", value: 2135, isUnsigned: true)
!1426 = !DIEnumerator(name: "CODE_FOR_one_cmplsi2", value: 2136, isUnsigned: true)
!1427 = !DIEnumerator(name: "CODE_FOR_ashldi3", value: 2142, isUnsigned: true)
!1428 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_1", value: 2145, isUnsigned: true)
!1429 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_2", value: 2146, isUnsigned: true)
!1430 = !DIEnumerator(name: "CODE_FOR_ashlsi3", value: 2147, isUnsigned: true)
!1431 = !DIEnumerator(name: "CODE_FOR_ashlhi3", value: 2150, isUnsigned: true)
!1432 = !DIEnumerator(name: "CODE_FOR_ashlqi3", value: 2151, isUnsigned: true)
!1433 = !DIEnumerator(name: "CODE_FOR_ashrdi3", value: 2152, isUnsigned: true)
!1434 = !DIEnumerator(name: "CODE_FOR_x86_64_shift_adj_3", value: 2153, isUnsigned: true)
!1435 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_3", value: 2156, isUnsigned: true)
!1436 = !DIEnumerator(name: "CODE_FOR_ashrsi3_31", value: 2157, isUnsigned: true)
!1437 = !DIEnumerator(name: "CODE_FOR_ashrsi3", value: 2158, isUnsigned: true)
!1438 = !DIEnumerator(name: "CODE_FOR_ashrhi3", value: 2159, isUnsigned: true)
!1439 = !DIEnumerator(name: "CODE_FOR_ashrqi3", value: 2160, isUnsigned: true)
!1440 = !DIEnumerator(name: "CODE_FOR_lshrdi3", value: 2161, isUnsigned: true)
!1441 = !DIEnumerator(name: "CODE_FOR_lshrsi3", value: 2164, isUnsigned: true)
!1442 = !DIEnumerator(name: "CODE_FOR_lshrhi3", value: 2165, isUnsigned: true)
!1443 = !DIEnumerator(name: "CODE_FOR_lshrqi3", value: 2166, isUnsigned: true)
!1444 = !DIEnumerator(name: "CODE_FOR_rotldi3", value: 2167, isUnsigned: true)
!1445 = !DIEnumerator(name: "CODE_FOR_rotlsi3", value: 2169, isUnsigned: true)
!1446 = !DIEnumerator(name: "CODE_FOR_rotlhi3", value: 2170, isUnsigned: true)
!1447 = !DIEnumerator(name: "CODE_FOR_rotlqi3", value: 2172, isUnsigned: true)
!1448 = !DIEnumerator(name: "CODE_FOR_rotrdi3", value: 2173, isUnsigned: true)
!1449 = !DIEnumerator(name: "CODE_FOR_rotrsi3", value: 2175, isUnsigned: true)
!1450 = !DIEnumerator(name: "CODE_FOR_rotrhi3", value: 2176, isUnsigned: true)
!1451 = !DIEnumerator(name: "CODE_FOR_rotrqi3", value: 2178, isUnsigned: true)
!1452 = !DIEnumerator(name: "CODE_FOR_extv", value: 2179, isUnsigned: true)
!1453 = !DIEnumerator(name: "CODE_FOR_extzv", value: 2180, isUnsigned: true)
!1454 = !DIEnumerator(name: "CODE_FOR_insv", value: 2181, isUnsigned: true)
!1455 = !DIEnumerator(name: "CODE_FOR_indirect_jump", value: 2200, isUnsigned: true)
!1456 = !DIEnumerator(name: "CODE_FOR_tablejump", value: 2201, isUnsigned: true)
!1457 = !DIEnumerator(name: "CODE_FOR_call_pop", value: 2204, isUnsigned: true)
!1458 = !DIEnumerator(name: "CODE_FOR_call", value: 2205, isUnsigned: true)
!1459 = !DIEnumerator(name: "CODE_FOR_sibcall", value: 2206, isUnsigned: true)
!1460 = !DIEnumerator(name: "CODE_FOR_call_value_pop", value: 2207, isUnsigned: true)
!1461 = !DIEnumerator(name: "CODE_FOR_call_value", value: 2208, isUnsigned: true)
!1462 = !DIEnumerator(name: "CODE_FOR_sibcall_value", value: 2209, isUnsigned: true)
!1463 = !DIEnumerator(name: "CODE_FOR_untyped_call", value: 2210, isUnsigned: true)
!1464 = !DIEnumerator(name: "CODE_FOR_memory_blockage", value: 2211, isUnsigned: true)
!1465 = !DIEnumerator(name: "CODE_FOR_return", value: 2212, isUnsigned: true)
!1466 = !DIEnumerator(name: "CODE_FOR_prologue", value: 2213, isUnsigned: true)
!1467 = !DIEnumerator(name: "CODE_FOR_epilogue", value: 2214, isUnsigned: true)
!1468 = !DIEnumerator(name: "CODE_FOR_sibcall_epilogue", value: 2215, isUnsigned: true)
!1469 = !DIEnumerator(name: "CODE_FOR_eh_return", value: 2216, isUnsigned: true)
!1470 = !DIEnumerator(name: "CODE_FOR_ffssi2", value: 2218, isUnsigned: true)
!1471 = !DIEnumerator(name: "CODE_FOR_ffs_cmove", value: 2219, isUnsigned: true)
!1472 = !DIEnumerator(name: "CODE_FOR_clzsi2", value: 2221, isUnsigned: true)
!1473 = !DIEnumerator(name: "CODE_FOR_bswapsi2", value: 2222, isUnsigned: true)
!1474 = !DIEnumerator(name: "CODE_FOR_clzhi2", value: 2223, isUnsigned: true)
!1475 = !DIEnumerator(name: "CODE_FOR_paritydi2", value: 2224, isUnsigned: true)
!1476 = !DIEnumerator(name: "CODE_FOR_paritysi2", value: 2226, isUnsigned: true)
!1477 = !DIEnumerator(name: "CODE_FOR_tls_global_dynamic_32", value: 2228, isUnsigned: true)
!1478 = !DIEnumerator(name: "CODE_FOR_tls_global_dynamic_64", value: 2229, isUnsigned: true)
!1479 = !DIEnumerator(name: "CODE_FOR_tls_local_dynamic_base_32", value: 2230, isUnsigned: true)
!1480 = !DIEnumerator(name: "CODE_FOR_tls_local_dynamic_base_64", value: 2231, isUnsigned: true)
!1481 = !DIEnumerator(name: "CODE_FOR_tls_dynamic_gnu2_32", value: 2233, isUnsigned: true)
!1482 = !DIEnumerator(name: "CODE_FOR_rsqrtsf2", value: 2240, isUnsigned: true)
!1483 = !DIEnumerator(name: "CODE_FOR_sqrtsf2", value: 2241, isUnsigned: true)
!1484 = !DIEnumerator(name: "CODE_FOR_sqrtdf2", value: 2242, isUnsigned: true)
!1485 = !DIEnumerator(name: "CODE_FOR_fmodxf3", value: 2243, isUnsigned: true)
!1486 = !DIEnumerator(name: "CODE_FOR_fmodsf3", value: 2244, isUnsigned: true)
!1487 = !DIEnumerator(name: "CODE_FOR_fmoddf3", value: 2245, isUnsigned: true)
!1488 = !DIEnumerator(name: "CODE_FOR_remainderxf3", value: 2246, isUnsigned: true)
!1489 = !DIEnumerator(name: "CODE_FOR_remaindersf3", value: 2247, isUnsigned: true)
!1490 = !DIEnumerator(name: "CODE_FOR_remainderdf3", value: 2248, isUnsigned: true)
!1491 = !DIEnumerator(name: "CODE_FOR_sincossf3", value: 2255, isUnsigned: true)
!1492 = !DIEnumerator(name: "CODE_FOR_sincosdf3", value: 2256, isUnsigned: true)
!1493 = !DIEnumerator(name: "CODE_FOR_tanxf2", value: 2257, isUnsigned: true)
!1494 = !DIEnumerator(name: "CODE_FOR_tansf2", value: 2258, isUnsigned: true)
!1495 = !DIEnumerator(name: "CODE_FOR_tandf2", value: 2259, isUnsigned: true)
!1496 = !DIEnumerator(name: "CODE_FOR_atan2xf3", value: 2260, isUnsigned: true)
!1497 = !DIEnumerator(name: "CODE_FOR_atan2sf3", value: 2261, isUnsigned: true)
!1498 = !DIEnumerator(name: "CODE_FOR_atan2df3", value: 2262, isUnsigned: true)
!1499 = !DIEnumerator(name: "CODE_FOR_atanxf2", value: 2263, isUnsigned: true)
!1500 = !DIEnumerator(name: "CODE_FOR_atansf2", value: 2264, isUnsigned: true)
!1501 = !DIEnumerator(name: "CODE_FOR_atandf2", value: 2265, isUnsigned: true)
!1502 = !DIEnumerator(name: "CODE_FOR_asinxf2", value: 2266, isUnsigned: true)
!1503 = !DIEnumerator(name: "CODE_FOR_asinsf2", value: 2267, isUnsigned: true)
!1504 = !DIEnumerator(name: "CODE_FOR_asindf2", value: 2268, isUnsigned: true)
!1505 = !DIEnumerator(name: "CODE_FOR_acosxf2", value: 2269, isUnsigned: true)
!1506 = !DIEnumerator(name: "CODE_FOR_acossf2", value: 2270, isUnsigned: true)
!1507 = !DIEnumerator(name: "CODE_FOR_acosdf2", value: 2271, isUnsigned: true)
!1508 = !DIEnumerator(name: "CODE_FOR_logxf2", value: 2272, isUnsigned: true)
!1509 = !DIEnumerator(name: "CODE_FOR_logsf2", value: 2273, isUnsigned: true)
!1510 = !DIEnumerator(name: "CODE_FOR_logdf2", value: 2274, isUnsigned: true)
!1511 = !DIEnumerator(name: "CODE_FOR_log10xf2", value: 2275, isUnsigned: true)
!1512 = !DIEnumerator(name: "CODE_FOR_log10sf2", value: 2276, isUnsigned: true)
!1513 = !DIEnumerator(name: "CODE_FOR_log10df2", value: 2277, isUnsigned: true)
!1514 = !DIEnumerator(name: "CODE_FOR_log2xf2", value: 2278, isUnsigned: true)
!1515 = !DIEnumerator(name: "CODE_FOR_log2sf2", value: 2279, isUnsigned: true)
!1516 = !DIEnumerator(name: "CODE_FOR_log2df2", value: 2280, isUnsigned: true)
!1517 = !DIEnumerator(name: "CODE_FOR_log1pxf2", value: 2281, isUnsigned: true)
!1518 = !DIEnumerator(name: "CODE_FOR_log1psf2", value: 2282, isUnsigned: true)
!1519 = !DIEnumerator(name: "CODE_FOR_log1pdf2", value: 2283, isUnsigned: true)
!1520 = !DIEnumerator(name: "CODE_FOR_logbxf2", value: 2284, isUnsigned: true)
!1521 = !DIEnumerator(name: "CODE_FOR_logbsf2", value: 2285, isUnsigned: true)
!1522 = !DIEnumerator(name: "CODE_FOR_logbdf2", value: 2286, isUnsigned: true)
!1523 = !DIEnumerator(name: "CODE_FOR_ilogbxf2", value: 2287, isUnsigned: true)
!1524 = !DIEnumerator(name: "CODE_FOR_ilogbsf2", value: 2288, isUnsigned: true)
!1525 = !DIEnumerator(name: "CODE_FOR_ilogbdf2", value: 2289, isUnsigned: true)
!1526 = !DIEnumerator(name: "CODE_FOR_expNcorexf3", value: 2290, isUnsigned: true)
!1527 = !DIEnumerator(name: "CODE_FOR_expxf2", value: 2291, isUnsigned: true)
!1528 = !DIEnumerator(name: "CODE_FOR_expsf2", value: 2292, isUnsigned: true)
!1529 = !DIEnumerator(name: "CODE_FOR_expdf2", value: 2293, isUnsigned: true)
!1530 = !DIEnumerator(name: "CODE_FOR_exp10xf2", value: 2294, isUnsigned: true)
!1531 = !DIEnumerator(name: "CODE_FOR_exp10sf2", value: 2295, isUnsigned: true)
!1532 = !DIEnumerator(name: "CODE_FOR_exp10df2", value: 2296, isUnsigned: true)
!1533 = !DIEnumerator(name: "CODE_FOR_exp2xf2", value: 2297, isUnsigned: true)
!1534 = !DIEnumerator(name: "CODE_FOR_exp2sf2", value: 2298, isUnsigned: true)
!1535 = !DIEnumerator(name: "CODE_FOR_exp2df2", value: 2299, isUnsigned: true)
!1536 = !DIEnumerator(name: "CODE_FOR_expm1xf2", value: 2300, isUnsigned: true)
!1537 = !DIEnumerator(name: "CODE_FOR_expm1sf2", value: 2301, isUnsigned: true)
!1538 = !DIEnumerator(name: "CODE_FOR_expm1df2", value: 2302, isUnsigned: true)
!1539 = !DIEnumerator(name: "CODE_FOR_ldexpxf3", value: 2303, isUnsigned: true)
!1540 = !DIEnumerator(name: "CODE_FOR_ldexpsf3", value: 2304, isUnsigned: true)
!1541 = !DIEnumerator(name: "CODE_FOR_ldexpdf3", value: 2305, isUnsigned: true)
!1542 = !DIEnumerator(name: "CODE_FOR_scalbxf3", value: 2306, isUnsigned: true)
!1543 = !DIEnumerator(name: "CODE_FOR_scalbsf3", value: 2307, isUnsigned: true)
!1544 = !DIEnumerator(name: "CODE_FOR_scalbdf3", value: 2308, isUnsigned: true)
!1545 = !DIEnumerator(name: "CODE_FOR_significandxf2", value: 2309, isUnsigned: true)
!1546 = !DIEnumerator(name: "CODE_FOR_significandsf2", value: 2310, isUnsigned: true)
!1547 = !DIEnumerator(name: "CODE_FOR_significanddf2", value: 2311, isUnsigned: true)
!1548 = !DIEnumerator(name: "CODE_FOR_rintsf2", value: 2312, isUnsigned: true)
!1549 = !DIEnumerator(name: "CODE_FOR_rintdf2", value: 2313, isUnsigned: true)
!1550 = !DIEnumerator(name: "CODE_FOR_roundsf2", value: 2314, isUnsigned: true)
!1551 = !DIEnumerator(name: "CODE_FOR_rounddf2", value: 2315, isUnsigned: true)
!1552 = !DIEnumerator(name: "CODE_FOR_lrintxfhi2", value: 2325, isUnsigned: true)
!1553 = !DIEnumerator(name: "CODE_FOR_lrintxfsi2", value: 2326, isUnsigned: true)
!1554 = !DIEnumerator(name: "CODE_FOR_lrintxfdi2", value: 2327, isUnsigned: true)
!1555 = !DIEnumerator(name: "CODE_FOR_lrintsfsi2", value: 2328, isUnsigned: true)
!1556 = !DIEnumerator(name: "CODE_FOR_lrintdfsi2", value: 2329, isUnsigned: true)
!1557 = !DIEnumerator(name: "CODE_FOR_lroundsfsi2", value: 2330, isUnsigned: true)
!1558 = !DIEnumerator(name: "CODE_FOR_lrounddfsi2", value: 2331, isUnsigned: true)
!1559 = !DIEnumerator(name: "CODE_FOR_floorxf2", value: 2333, isUnsigned: true)
!1560 = !DIEnumerator(name: "CODE_FOR_floorsf2", value: 2334, isUnsigned: true)
!1561 = !DIEnumerator(name: "CODE_FOR_floordf2", value: 2335, isUnsigned: true)
!1562 = !DIEnumerator(name: "CODE_FOR_lfloorxfhi2", value: 2345, isUnsigned: true)
!1563 = !DIEnumerator(name: "CODE_FOR_lfloorxfsi2", value: 2346, isUnsigned: true)
!1564 = !DIEnumerator(name: "CODE_FOR_lfloorxfdi2", value: 2347, isUnsigned: true)
!1565 = !DIEnumerator(name: "CODE_FOR_lfloorsfsi2", value: 2348, isUnsigned: true)
!1566 = !DIEnumerator(name: "CODE_FOR_lfloordfsi2", value: 2349, isUnsigned: true)
!1567 = !DIEnumerator(name: "CODE_FOR_ceilxf2", value: 2351, isUnsigned: true)
!1568 = !DIEnumerator(name: "CODE_FOR_ceilsf2", value: 2352, isUnsigned: true)
!1569 = !DIEnumerator(name: "CODE_FOR_ceildf2", value: 2353, isUnsigned: true)
!1570 = !DIEnumerator(name: "CODE_FOR_lceilxfhi2", value: 2363, isUnsigned: true)
!1571 = !DIEnumerator(name: "CODE_FOR_lceilxfsi2", value: 2364, isUnsigned: true)
!1572 = !DIEnumerator(name: "CODE_FOR_lceilxfdi2", value: 2365, isUnsigned: true)
!1573 = !DIEnumerator(name: "CODE_FOR_lceilsfsi2", value: 2366, isUnsigned: true)
!1574 = !DIEnumerator(name: "CODE_FOR_lceildfsi2", value: 2367, isUnsigned: true)
!1575 = !DIEnumerator(name: "CODE_FOR_btruncxf2", value: 2369, isUnsigned: true)
!1576 = !DIEnumerator(name: "CODE_FOR_btruncsf2", value: 2370, isUnsigned: true)
!1577 = !DIEnumerator(name: "CODE_FOR_btruncdf2", value: 2371, isUnsigned: true)
!1578 = !DIEnumerator(name: "CODE_FOR_nearbyintxf2", value: 2373, isUnsigned: true)
!1579 = !DIEnumerator(name: "CODE_FOR_nearbyintsf2", value: 2374, isUnsigned: true)
!1580 = !DIEnumerator(name: "CODE_FOR_nearbyintdf2", value: 2375, isUnsigned: true)
!1581 = !DIEnumerator(name: "CODE_FOR_isinfxf2", value: 2378, isUnsigned: true)
!1582 = !DIEnumerator(name: "CODE_FOR_isinfsf2", value: 2379, isUnsigned: true)
!1583 = !DIEnumerator(name: "CODE_FOR_isinfdf2", value: 2380, isUnsigned: true)
!1584 = !DIEnumerator(name: "CODE_FOR_signbitsf2", value: 2381, isUnsigned: true)
!1585 = !DIEnumerator(name: "CODE_FOR_signbitdf2", value: 2382, isUnsigned: true)
!1586 = !DIEnumerator(name: "CODE_FOR_signbitxf2", value: 2383, isUnsigned: true)
!1587 = !DIEnumerator(name: "CODE_FOR_movmemsi", value: 2384, isUnsigned: true)
!1588 = !DIEnumerator(name: "CODE_FOR_strmov", value: 2385, isUnsigned: true)
!1589 = !DIEnumerator(name: "CODE_FOR_strmov_singleop", value: 2386, isUnsigned: true)
!1590 = !DIEnumerator(name: "CODE_FOR_rep_mov", value: 2387, isUnsigned: true)
!1591 = !DIEnumerator(name: "CODE_FOR_setmemsi", value: 2388, isUnsigned: true)
!1592 = !DIEnumerator(name: "CODE_FOR_strset", value: 2389, isUnsigned: true)
!1593 = !DIEnumerator(name: "CODE_FOR_strset_singleop", value: 2390, isUnsigned: true)
!1594 = !DIEnumerator(name: "CODE_FOR_rep_stos", value: 2391, isUnsigned: true)
!1595 = !DIEnumerator(name: "CODE_FOR_cmpstrnsi", value: 2392, isUnsigned: true)
!1596 = !DIEnumerator(name: "CODE_FOR_cmpintqi", value: 2393, isUnsigned: true)
!1597 = !DIEnumerator(name: "CODE_FOR_cmpstrnqi_nz_1", value: 2394, isUnsigned: true)
!1598 = !DIEnumerator(name: "CODE_FOR_cmpstrnqi_1", value: 2395, isUnsigned: true)
!1599 = !DIEnumerator(name: "CODE_FOR_strlensi", value: 2396, isUnsigned: true)
!1600 = !DIEnumerator(name: "CODE_FOR_strlendi", value: 2397, isUnsigned: true)
!1601 = !DIEnumerator(name: "CODE_FOR_strlenqi_1", value: 2398, isUnsigned: true)
!1602 = !DIEnumerator(name: "CODE_FOR_movqicc", value: 2401, isUnsigned: true)
!1603 = !DIEnumerator(name: "CODE_FOR_movhicc", value: 2402, isUnsigned: true)
!1604 = !DIEnumerator(name: "CODE_FOR_movsicc", value: 2403, isUnsigned: true)
!1605 = !DIEnumerator(name: "CODE_FOR_x86_movsicc_0_m1", value: 2404, isUnsigned: true)
!1606 = !DIEnumerator(name: "CODE_FOR_movsfcc", value: 2406, isUnsigned: true)
!1607 = !DIEnumerator(name: "CODE_FOR_movdfcc", value: 2407, isUnsigned: true)
!1608 = !DIEnumerator(name: "CODE_FOR_movxfcc", value: 2408, isUnsigned: true)
!1609 = !DIEnumerator(name: "CODE_FOR_addqicc", value: 2411, isUnsigned: true)
!1610 = !DIEnumerator(name: "CODE_FOR_addhicc", value: 2412, isUnsigned: true)
!1611 = !DIEnumerator(name: "CODE_FOR_addsicc", value: 2413, isUnsigned: true)
!1612 = !DIEnumerator(name: "CODE_FOR_allocate_stack", value: 2414, isUnsigned: true)
!1613 = !DIEnumerator(name: "CODE_FOR_probe_stack", value: 2415, isUnsigned: true)
!1614 = !DIEnumerator(name: "CODE_FOR_builtin_setjmp_receiver", value: 2416, isUnsigned: true)
!1615 = !DIEnumerator(name: "CODE_FOR_prefetch", value: 2486, isUnsigned: true)
!1616 = !DIEnumerator(name: "CODE_FOR_stack_protect_set", value: 2487, isUnsigned: true)
!1617 = !DIEnumerator(name: "CODE_FOR_stack_protect_test", value: 2488, isUnsigned: true)
!1618 = !DIEnumerator(name: "CODE_FOR_rdpmc", value: 2489, isUnsigned: true)
!1619 = !DIEnumerator(name: "CODE_FOR_rdtsc", value: 2490, isUnsigned: true)
!1620 = !DIEnumerator(name: "CODE_FOR_rdtscp", value: 2491, isUnsigned: true)
!1621 = !DIEnumerator(name: "CODE_FOR_lwp_llwpcb", value: 2492, isUnsigned: true)
!1622 = !DIEnumerator(name: "CODE_FOR_lwp_slwpcb", value: 2493, isUnsigned: true)
!1623 = !DIEnumerator(name: "CODE_FOR_lwp_lwpvalsi3", value: 2494, isUnsigned: true)
!1624 = !DIEnumerator(name: "CODE_FOR_lwp_lwpinssi3", value: 2495, isUnsigned: true)
!1625 = !DIEnumerator(name: "CODE_FOR_movv8qi", value: 2496, isUnsigned: true)
!1626 = !DIEnumerator(name: "CODE_FOR_movv4hi", value: 2497, isUnsigned: true)
!1627 = !DIEnumerator(name: "CODE_FOR_movv2si", value: 2498, isUnsigned: true)
!1628 = !DIEnumerator(name: "CODE_FOR_movv1di", value: 2499, isUnsigned: true)
!1629 = !DIEnumerator(name: "CODE_FOR_movv2sf", value: 2500, isUnsigned: true)
!1630 = !DIEnumerator(name: "CODE_FOR_pushv8qi1", value: 2506, isUnsigned: true)
!1631 = !DIEnumerator(name: "CODE_FOR_pushv4hi1", value: 2507, isUnsigned: true)
!1632 = !DIEnumerator(name: "CODE_FOR_pushv2si1", value: 2508, isUnsigned: true)
!1633 = !DIEnumerator(name: "CODE_FOR_pushv1di1", value: 2509, isUnsigned: true)
!1634 = !DIEnumerator(name: "CODE_FOR_pushv2sf1", value: 2510, isUnsigned: true)
!1635 = !DIEnumerator(name: "CODE_FOR_movmisalignv8qi", value: 2511, isUnsigned: true)
!1636 = !DIEnumerator(name: "CODE_FOR_movmisalignv4hi", value: 2512, isUnsigned: true)
!1637 = !DIEnumerator(name: "CODE_FOR_movmisalignv2si", value: 2513, isUnsigned: true)
!1638 = !DIEnumerator(name: "CODE_FOR_movmisalignv1di", value: 2514, isUnsigned: true)
!1639 = !DIEnumerator(name: "CODE_FOR_movmisalignv2sf", value: 2515, isUnsigned: true)
!1640 = !DIEnumerator(name: "CODE_FOR_mmx_addv2sf3", value: 2516, isUnsigned: true)
!1641 = !DIEnumerator(name: "CODE_FOR_mmx_subv2sf3", value: 2517, isUnsigned: true)
!1642 = !DIEnumerator(name: "CODE_FOR_mmx_subrv2sf3", value: 2518, isUnsigned: true)
!1643 = !DIEnumerator(name: "CODE_FOR_mmx_mulv2sf3", value: 2519, isUnsigned: true)
!1644 = !DIEnumerator(name: "CODE_FOR_mmx_smaxv2sf3", value: 2520, isUnsigned: true)
!1645 = !DIEnumerator(name: "CODE_FOR_mmx_sminv2sf3", value: 2521, isUnsigned: true)
!1646 = !DIEnumerator(name: "CODE_FOR_mmx_eqv2sf3", value: 2522, isUnsigned: true)
!1647 = !DIEnumerator(name: "CODE_FOR_vec_setv2sf", value: 2523, isUnsigned: true)
!1648 = !DIEnumerator(name: "CODE_FOR_vec_extractv2sf", value: 2526, isUnsigned: true)
!1649 = !DIEnumerator(name: "CODE_FOR_vec_initv2sf", value: 2527, isUnsigned: true)
!1650 = !DIEnumerator(name: "CODE_FOR_mmx_addv8qi3", value: 2528, isUnsigned: true)
!1651 = !DIEnumerator(name: "CODE_FOR_mmx_subv8qi3", value: 2529, isUnsigned: true)
!1652 = !DIEnumerator(name: "CODE_FOR_mmx_addv4hi3", value: 2530, isUnsigned: true)
!1653 = !DIEnumerator(name: "CODE_FOR_mmx_subv4hi3", value: 2531, isUnsigned: true)
!1654 = !DIEnumerator(name: "CODE_FOR_mmx_addv2si3", value: 2532, isUnsigned: true)
!1655 = !DIEnumerator(name: "CODE_FOR_mmx_subv2si3", value: 2533, isUnsigned: true)
!1656 = !DIEnumerator(name: "CODE_FOR_mmx_addv1di3", value: 2534, isUnsigned: true)
!1657 = !DIEnumerator(name: "CODE_FOR_mmx_subv1di3", value: 2535, isUnsigned: true)
!1658 = !DIEnumerator(name: "CODE_FOR_mmx_ssaddv8qi3", value: 2536, isUnsigned: true)
!1659 = !DIEnumerator(name: "CODE_FOR_mmx_usaddv8qi3", value: 2537, isUnsigned: true)
!1660 = !DIEnumerator(name: "CODE_FOR_mmx_sssubv8qi3", value: 2538, isUnsigned: true)
!1661 = !DIEnumerator(name: "CODE_FOR_mmx_ussubv8qi3", value: 2539, isUnsigned: true)
!1662 = !DIEnumerator(name: "CODE_FOR_mmx_ssaddv4hi3", value: 2540, isUnsigned: true)
!1663 = !DIEnumerator(name: "CODE_FOR_mmx_usaddv4hi3", value: 2541, isUnsigned: true)
!1664 = !DIEnumerator(name: "CODE_FOR_mmx_sssubv4hi3", value: 2542, isUnsigned: true)
!1665 = !DIEnumerator(name: "CODE_FOR_mmx_ussubv4hi3", value: 2543, isUnsigned: true)
!1666 = !DIEnumerator(name: "CODE_FOR_mmx_mulv4hi3", value: 2544, isUnsigned: true)
!1667 = !DIEnumerator(name: "CODE_FOR_mmx_smulv4hi3_highpart", value: 2545, isUnsigned: true)
!1668 = !DIEnumerator(name: "CODE_FOR_mmx_umulv4hi3_highpart", value: 2546, isUnsigned: true)
!1669 = !DIEnumerator(name: "CODE_FOR_mmx_pmaddwd", value: 2547, isUnsigned: true)
!1670 = !DIEnumerator(name: "CODE_FOR_mmx_pmulhrwv4hi3", value: 2548, isUnsigned: true)
!1671 = !DIEnumerator(name: "CODE_FOR_sse2_umulv1siv1di3", value: 2549, isUnsigned: true)
!1672 = !DIEnumerator(name: "CODE_FOR_mmx_smaxv4hi3", value: 2550, isUnsigned: true)
!1673 = !DIEnumerator(name: "CODE_FOR_mmx_sminv4hi3", value: 2551, isUnsigned: true)
!1674 = !DIEnumerator(name: "CODE_FOR_mmx_umaxv8qi3", value: 2552, isUnsigned: true)
!1675 = !DIEnumerator(name: "CODE_FOR_mmx_uminv8qi3", value: 2553, isUnsigned: true)
!1676 = !DIEnumerator(name: "CODE_FOR_mmx_eqv8qi3", value: 2554, isUnsigned: true)
!1677 = !DIEnumerator(name: "CODE_FOR_mmx_eqv4hi3", value: 2555, isUnsigned: true)
!1678 = !DIEnumerator(name: "CODE_FOR_mmx_eqv2si3", value: 2556, isUnsigned: true)
!1679 = !DIEnumerator(name: "CODE_FOR_mmx_andv8qi3", value: 2557, isUnsigned: true)
!1680 = !DIEnumerator(name: "CODE_FOR_mmx_iorv8qi3", value: 2558, isUnsigned: true)
!1681 = !DIEnumerator(name: "CODE_FOR_mmx_xorv8qi3", value: 2559, isUnsigned: true)
!1682 = !DIEnumerator(name: "CODE_FOR_mmx_andv4hi3", value: 2560, isUnsigned: true)
!1683 = !DIEnumerator(name: "CODE_FOR_mmx_iorv4hi3", value: 2561, isUnsigned: true)
!1684 = !DIEnumerator(name: "CODE_FOR_mmx_xorv4hi3", value: 2562, isUnsigned: true)
!1685 = !DIEnumerator(name: "CODE_FOR_mmx_andv2si3", value: 2563, isUnsigned: true)
!1686 = !DIEnumerator(name: "CODE_FOR_mmx_iorv2si3", value: 2564, isUnsigned: true)
!1687 = !DIEnumerator(name: "CODE_FOR_mmx_xorv2si3", value: 2565, isUnsigned: true)
!1688 = !DIEnumerator(name: "CODE_FOR_mmx_pinsrw", value: 2566, isUnsigned: true)
!1689 = !DIEnumerator(name: "CODE_FOR_mmx_pshufw", value: 2567, isUnsigned: true)
!1690 = !DIEnumerator(name: "CODE_FOR_vec_setv2si", value: 2568, isUnsigned: true)
!1691 = !DIEnumerator(name: "CODE_FOR_vec_extractv2si", value: 2571, isUnsigned: true)
!1692 = !DIEnumerator(name: "CODE_FOR_vec_initv2si", value: 2572, isUnsigned: true)
!1693 = !DIEnumerator(name: "CODE_FOR_vec_setv4hi", value: 2573, isUnsigned: true)
!1694 = !DIEnumerator(name: "CODE_FOR_vec_extractv4hi", value: 2574, isUnsigned: true)
!1695 = !DIEnumerator(name: "CODE_FOR_vec_initv4hi", value: 2575, isUnsigned: true)
!1696 = !DIEnumerator(name: "CODE_FOR_vec_setv8qi", value: 2576, isUnsigned: true)
!1697 = !DIEnumerator(name: "CODE_FOR_vec_extractv8qi", value: 2577, isUnsigned: true)
!1698 = !DIEnumerator(name: "CODE_FOR_vec_initv8qi", value: 2578, isUnsigned: true)
!1699 = !DIEnumerator(name: "CODE_FOR_mmx_uavgv8qi3", value: 2579, isUnsigned: true)
!1700 = !DIEnumerator(name: "CODE_FOR_mmx_uavgv4hi3", value: 2580, isUnsigned: true)
!1701 = !DIEnumerator(name: "CODE_FOR_mmx_maskmovq", value: 2581, isUnsigned: true)
!1702 = !DIEnumerator(name: "CODE_FOR_mmx_emms", value: 2582, isUnsigned: true)
!1703 = !DIEnumerator(name: "CODE_FOR_mmx_femms", value: 2583, isUnsigned: true)
!1704 = !DIEnumerator(name: "CODE_FOR_movv32qi", value: 2584, isUnsigned: true)
!1705 = !DIEnumerator(name: "CODE_FOR_movv16hi", value: 2585, isUnsigned: true)
!1706 = !DIEnumerator(name: "CODE_FOR_movv8si", value: 2586, isUnsigned: true)
!1707 = !DIEnumerator(name: "CODE_FOR_movv4di", value: 2587, isUnsigned: true)
!1708 = !DIEnumerator(name: "CODE_FOR_movv8sf", value: 2588, isUnsigned: true)
!1709 = !DIEnumerator(name: "CODE_FOR_movv4df", value: 2589, isUnsigned: true)
!1710 = !DIEnumerator(name: "CODE_FOR_movv16qi", value: 2590, isUnsigned: true)
!1711 = !DIEnumerator(name: "CODE_FOR_movv8hi", value: 2591, isUnsigned: true)
!1712 = !DIEnumerator(name: "CODE_FOR_movv4si", value: 2592, isUnsigned: true)
!1713 = !DIEnumerator(name: "CODE_FOR_movv2di", value: 2593, isUnsigned: true)
!1714 = !DIEnumerator(name: "CODE_FOR_movv1ti", value: 2594, isUnsigned: true)
!1715 = !DIEnumerator(name: "CODE_FOR_movv4sf", value: 2595, isUnsigned: true)
!1716 = !DIEnumerator(name: "CODE_FOR_movv2df", value: 2596, isUnsigned: true)
!1717 = !DIEnumerator(name: "CODE_FOR_pushv32qi1", value: 2600, isUnsigned: true)
!1718 = !DIEnumerator(name: "CODE_FOR_pushv16hi1", value: 2601, isUnsigned: true)
!1719 = !DIEnumerator(name: "CODE_FOR_pushv8si1", value: 2602, isUnsigned: true)
!1720 = !DIEnumerator(name: "CODE_FOR_pushv4di1", value: 2603, isUnsigned: true)
!1721 = !DIEnumerator(name: "CODE_FOR_pushv8sf1", value: 2604, isUnsigned: true)
!1722 = !DIEnumerator(name: "CODE_FOR_pushv4df1", value: 2605, isUnsigned: true)
!1723 = !DIEnumerator(name: "CODE_FOR_pushv16qi1", value: 2606, isUnsigned: true)
!1724 = !DIEnumerator(name: "CODE_FOR_pushv8hi1", value: 2607, isUnsigned: true)
!1725 = !DIEnumerator(name: "CODE_FOR_pushv4si1", value: 2608, isUnsigned: true)
!1726 = !DIEnumerator(name: "CODE_FOR_pushv2di1", value: 2609, isUnsigned: true)
!1727 = !DIEnumerator(name: "CODE_FOR_pushv1ti1", value: 2610, isUnsigned: true)
!1728 = !DIEnumerator(name: "CODE_FOR_pushv4sf1", value: 2611, isUnsigned: true)
!1729 = !DIEnumerator(name: "CODE_FOR_pushv2df1", value: 2612, isUnsigned: true)
!1730 = !DIEnumerator(name: "CODE_FOR_movmisalignv32qi", value: 2613, isUnsigned: true)
!1731 = !DIEnumerator(name: "CODE_FOR_movmisalignv16hi", value: 2614, isUnsigned: true)
!1732 = !DIEnumerator(name: "CODE_FOR_movmisalignv8si", value: 2615, isUnsigned: true)
!1733 = !DIEnumerator(name: "CODE_FOR_movmisalignv4di", value: 2616, isUnsigned: true)
!1734 = !DIEnumerator(name: "CODE_FOR_movmisalignv8sf", value: 2617, isUnsigned: true)
!1735 = !DIEnumerator(name: "CODE_FOR_movmisalignv4df", value: 2618, isUnsigned: true)
!1736 = !DIEnumerator(name: "CODE_FOR_movmisalignv16qi", value: 2619, isUnsigned: true)
!1737 = !DIEnumerator(name: "CODE_FOR_movmisalignv8hi", value: 2620, isUnsigned: true)
!1738 = !DIEnumerator(name: "CODE_FOR_movmisalignv4si", value: 2621, isUnsigned: true)
!1739 = !DIEnumerator(name: "CODE_FOR_movmisalignv2di", value: 2622, isUnsigned: true)
!1740 = !DIEnumerator(name: "CODE_FOR_movmisalignv1ti", value: 2623, isUnsigned: true)
!1741 = !DIEnumerator(name: "CODE_FOR_movmisalignv4sf", value: 2624, isUnsigned: true)
!1742 = !DIEnumerator(name: "CODE_FOR_movmisalignv2df", value: 2625, isUnsigned: true)
!1743 = !DIEnumerator(name: "CODE_FOR_storentv4sf", value: 2626, isUnsigned: true)
!1744 = !DIEnumerator(name: "CODE_FOR_storentv2df", value: 2627, isUnsigned: true)
!1745 = !DIEnumerator(name: "CODE_FOR_storentsf", value: 2628, isUnsigned: true)
!1746 = !DIEnumerator(name: "CODE_FOR_storentdf", value: 2629, isUnsigned: true)
!1747 = !DIEnumerator(name: "CODE_FOR_storentv2di", value: 2630, isUnsigned: true)
!1748 = !DIEnumerator(name: "CODE_FOR_storentsi", value: 2631, isUnsigned: true)
!1749 = !DIEnumerator(name: "CODE_FOR_absv4sf2", value: 2632, isUnsigned: true)
!1750 = !DIEnumerator(name: "CODE_FOR_negv4sf2", value: 2633, isUnsigned: true)
!1751 = !DIEnumerator(name: "CODE_FOR_absv2df2", value: 2634, isUnsigned: true)
!1752 = !DIEnumerator(name: "CODE_FOR_negv2df2", value: 2635, isUnsigned: true)
!1753 = !DIEnumerator(name: "CODE_FOR_addv8sf3", value: 2636, isUnsigned: true)
!1754 = !DIEnumerator(name: "CODE_FOR_subv8sf3", value: 2637, isUnsigned: true)
!1755 = !DIEnumerator(name: "CODE_FOR_addv4df3", value: 2638, isUnsigned: true)
!1756 = !DIEnumerator(name: "CODE_FOR_subv4df3", value: 2639, isUnsigned: true)
!1757 = !DIEnumerator(name: "CODE_FOR_addv4sf3", value: 2640, isUnsigned: true)
!1758 = !DIEnumerator(name: "CODE_FOR_subv4sf3", value: 2641, isUnsigned: true)
!1759 = !DIEnumerator(name: "CODE_FOR_addv2df3", value: 2642, isUnsigned: true)
!1760 = !DIEnumerator(name: "CODE_FOR_subv2df3", value: 2643, isUnsigned: true)
!1761 = !DIEnumerator(name: "CODE_FOR_mulv8sf3", value: 2644, isUnsigned: true)
!1762 = !DIEnumerator(name: "CODE_FOR_mulv4df3", value: 2645, isUnsigned: true)
!1763 = !DIEnumerator(name: "CODE_FOR_mulv4sf3", value: 2646, isUnsigned: true)
!1764 = !DIEnumerator(name: "CODE_FOR_mulv2df3", value: 2647, isUnsigned: true)
!1765 = !DIEnumerator(name: "CODE_FOR_divv8sf3", value: 2648, isUnsigned: true)
!1766 = !DIEnumerator(name: "CODE_FOR_divv4df3", value: 2649, isUnsigned: true)
!1767 = !DIEnumerator(name: "CODE_FOR_divv4sf3", value: 2650, isUnsigned: true)
!1768 = !DIEnumerator(name: "CODE_FOR_divv2df3", value: 2651, isUnsigned: true)
!1769 = !DIEnumerator(name: "CODE_FOR_sqrtv8sf2", value: 2652, isUnsigned: true)
!1770 = !DIEnumerator(name: "CODE_FOR_sqrtv4sf2", value: 2653, isUnsigned: true)
!1771 = !DIEnumerator(name: "CODE_FOR_rsqrtv8sf2", value: 2654, isUnsigned: true)
!1772 = !DIEnumerator(name: "CODE_FOR_rsqrtv4sf2", value: 2655, isUnsigned: true)
!1773 = !DIEnumerator(name: "CODE_FOR_smaxv8sf3", value: 2656, isUnsigned: true)
!1774 = !DIEnumerator(name: "CODE_FOR_sminv8sf3", value: 2657, isUnsigned: true)
!1775 = !DIEnumerator(name: "CODE_FOR_smaxv4df3", value: 2658, isUnsigned: true)
!1776 = !DIEnumerator(name: "CODE_FOR_sminv4df3", value: 2659, isUnsigned: true)
!1777 = !DIEnumerator(name: "CODE_FOR_smaxv4sf3", value: 2660, isUnsigned: true)
!1778 = !DIEnumerator(name: "CODE_FOR_sminv4sf3", value: 2661, isUnsigned: true)
!1779 = !DIEnumerator(name: "CODE_FOR_smaxv2df3", value: 2662, isUnsigned: true)
!1780 = !DIEnumerator(name: "CODE_FOR_sminv2df3", value: 2663, isUnsigned: true)
!1781 = !DIEnumerator(name: "CODE_FOR_reduc_splus_v4sf", value: 2664, isUnsigned: true)
!1782 = !DIEnumerator(name: "CODE_FOR_reduc_splus_v2df", value: 2665, isUnsigned: true)
!1783 = !DIEnumerator(name: "CODE_FOR_reduc_smax_v4sf", value: 2666, isUnsigned: true)
!1784 = !DIEnumerator(name: "CODE_FOR_reduc_smin_v4sf", value: 2667, isUnsigned: true)
!1785 = !DIEnumerator(name: "CODE_FOR_vcondv4sf", value: 2668, isUnsigned: true)
!1786 = !DIEnumerator(name: "CODE_FOR_vcondv2df", value: 2669, isUnsigned: true)
!1787 = !DIEnumerator(name: "CODE_FOR_andv8sf3", value: 2670, isUnsigned: true)
!1788 = !DIEnumerator(name: "CODE_FOR_iorv8sf3", value: 2671, isUnsigned: true)
!1789 = !DIEnumerator(name: "CODE_FOR_xorv8sf3", value: 2672, isUnsigned: true)
!1790 = !DIEnumerator(name: "CODE_FOR_andv4df3", value: 2673, isUnsigned: true)
!1791 = !DIEnumerator(name: "CODE_FOR_iorv4df3", value: 2674, isUnsigned: true)
!1792 = !DIEnumerator(name: "CODE_FOR_xorv4df3", value: 2675, isUnsigned: true)
!1793 = !DIEnumerator(name: "CODE_FOR_andv4sf3", value: 2676, isUnsigned: true)
!1794 = !DIEnumerator(name: "CODE_FOR_iorv4sf3", value: 2677, isUnsigned: true)
!1795 = !DIEnumerator(name: "CODE_FOR_xorv4sf3", value: 2678, isUnsigned: true)
!1796 = !DIEnumerator(name: "CODE_FOR_andv2df3", value: 2679, isUnsigned: true)
!1797 = !DIEnumerator(name: "CODE_FOR_iorv2df3", value: 2680, isUnsigned: true)
!1798 = !DIEnumerator(name: "CODE_FOR_xorv2df3", value: 2681, isUnsigned: true)
!1799 = !DIEnumerator(name: "CODE_FOR_copysignv4sf3", value: 2682, isUnsigned: true)
!1800 = !DIEnumerator(name: "CODE_FOR_copysignv2df3", value: 2683, isUnsigned: true)
!1801 = !DIEnumerator(name: "CODE_FOR_sse2_cvtudq2ps", value: 2684, isUnsigned: true)
!1802 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2dq", value: 2685, isUnsigned: true)
!1803 = !DIEnumerator(name: "CODE_FOR_sse2_cvttpd2dq", value: 2686, isUnsigned: true)
!1804 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2ps", value: 2687, isUnsigned: true)
!1805 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v4sf", value: 2688, isUnsigned: true)
!1806 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v4sf", value: 2689, isUnsigned: true)
!1807 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_hi_v8hi", value: 2690, isUnsigned: true)
!1808 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_lo_v8hi", value: 2691, isUnsigned: true)
!1809 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_hi_v8hi", value: 2692, isUnsigned: true)
!1810 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_lo_v8hi", value: 2693, isUnsigned: true)
!1811 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_hi_v4si", value: 2694, isUnsigned: true)
!1812 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_lo_v4si", value: 2695, isUnsigned: true)
!1813 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_hi_v4si", value: 2696, isUnsigned: true)
!1814 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_lo_v4si", value: 2697, isUnsigned: true)
!1815 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v2df", value: 2698, isUnsigned: true)
!1816 = !DIEnumerator(name: "CODE_FOR_vec_pack_sfix_trunc_v2df", value: 2699, isUnsigned: true)
!1817 = !DIEnumerator(name: "CODE_FOR_vec_pack_sfix_v2df", value: 2700, isUnsigned: true)
!1818 = !DIEnumerator(name: "CODE_FOR_sse_movhlps_exp", value: 2701, isUnsigned: true)
!1819 = !DIEnumerator(name: "CODE_FOR_sse_movlhps_exp", value: 2702, isUnsigned: true)
!1820 = !DIEnumerator(name: "CODE_FOR_avx_shufps256", value: 2703, isUnsigned: true)
!1821 = !DIEnumerator(name: "CODE_FOR_sse_shufps", value: 2704, isUnsigned: true)
!1822 = !DIEnumerator(name: "CODE_FOR_sse_loadhps_exp", value: 2705, isUnsigned: true)
!1823 = !DIEnumerator(name: "CODE_FOR_sse_loadlps_exp", value: 2706, isUnsigned: true)
!1824 = !DIEnumerator(name: "CODE_FOR_vec_dupv4sf", value: 2707, isUnsigned: true)
!1825 = !DIEnumerator(name: "CODE_FOR_vec_initv16qi", value: 2708, isUnsigned: true)
!1826 = !DIEnumerator(name: "CODE_FOR_vec_initv8hi", value: 2709, isUnsigned: true)
!1827 = !DIEnumerator(name: "CODE_FOR_vec_initv4si", value: 2710, isUnsigned: true)
!1828 = !DIEnumerator(name: "CODE_FOR_vec_initv2di", value: 2711, isUnsigned: true)
!1829 = !DIEnumerator(name: "CODE_FOR_vec_initv4sf", value: 2712, isUnsigned: true)
!1830 = !DIEnumerator(name: "CODE_FOR_vec_initv2df", value: 2713, isUnsigned: true)
!1831 = !DIEnumerator(name: "CODE_FOR_vec_setv16qi", value: 2715, isUnsigned: true)
!1832 = !DIEnumerator(name: "CODE_FOR_vec_setv8hi", value: 2716, isUnsigned: true)
!1833 = !DIEnumerator(name: "CODE_FOR_vec_setv4si", value: 2717, isUnsigned: true)
!1834 = !DIEnumerator(name: "CODE_FOR_vec_setv2di", value: 2718, isUnsigned: true)
!1835 = !DIEnumerator(name: "CODE_FOR_vec_setv4sf", value: 2719, isUnsigned: true)
!1836 = !DIEnumerator(name: "CODE_FOR_vec_setv2df", value: 2720, isUnsigned: true)
!1837 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v32qi", value: 2722, isUnsigned: true)
!1838 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v16hi", value: 2723, isUnsigned: true)
!1839 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v8si", value: 2724, isUnsigned: true)
!1840 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v4di", value: 2725, isUnsigned: true)
!1841 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v8sf", value: 2726, isUnsigned: true)
!1842 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v4df", value: 2727, isUnsigned: true)
!1843 = !DIEnumerator(name: "CODE_FOR_vec_extractv16qi", value: 2729, isUnsigned: true)
!1844 = !DIEnumerator(name: "CODE_FOR_vec_extractv8hi", value: 2730, isUnsigned: true)
!1845 = !DIEnumerator(name: "CODE_FOR_vec_extractv4si", value: 2731, isUnsigned: true)
!1846 = !DIEnumerator(name: "CODE_FOR_vec_extractv2di", value: 2732, isUnsigned: true)
!1847 = !DIEnumerator(name: "CODE_FOR_vec_extractv4sf", value: 2733, isUnsigned: true)
!1848 = !DIEnumerator(name: "CODE_FOR_vec_extractv2df", value: 2734, isUnsigned: true)
!1849 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv2df", value: 2735, isUnsigned: true)
!1850 = !DIEnumerator(name: "CODE_FOR_avx_movddup256", value: 2736, isUnsigned: true)
!1851 = !DIEnumerator(name: "CODE_FOR_avx_unpcklpd256", value: 2737, isUnsigned: true)
!1852 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv2df", value: 2738, isUnsigned: true)
!1853 = !DIEnumerator(name: "CODE_FOR_avx_shufpd256", value: 2741, isUnsigned: true)
!1854 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd", value: 2742, isUnsigned: true)
!1855 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4sf", value: 2743, isUnsigned: true)
!1856 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv2df", value: 2744, isUnsigned: true)
!1857 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv2di", value: 2745, isUnsigned: true)
!1858 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4si", value: 2746, isUnsigned: true)
!1859 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv8hi", value: 2747, isUnsigned: true)
!1860 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv16qi", value: 2748, isUnsigned: true)
!1861 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4df", value: 2749, isUnsigned: true)
!1862 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv8sf", value: 2750, isUnsigned: true)
!1863 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4sf", value: 2751, isUnsigned: true)
!1864 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv2df", value: 2752, isUnsigned: true)
!1865 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv2di", value: 2753, isUnsigned: true)
!1866 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4si", value: 2754, isUnsigned: true)
!1867 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv8hi", value: 2755, isUnsigned: true)
!1868 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv16qi", value: 2756, isUnsigned: true)
!1869 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4df", value: 2757, isUnsigned: true)
!1870 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv8sf", value: 2758, isUnsigned: true)
!1871 = !DIEnumerator(name: "CODE_FOR_sse2_loadhpd_exp", value: 2761, isUnsigned: true)
!1872 = !DIEnumerator(name: "CODE_FOR_sse2_loadlpd_exp", value: 2763, isUnsigned: true)
!1873 = !DIEnumerator(name: "CODE_FOR_negv16qi2", value: 2765, isUnsigned: true)
!1874 = !DIEnumerator(name: "CODE_FOR_negv8hi2", value: 2766, isUnsigned: true)
!1875 = !DIEnumerator(name: "CODE_FOR_negv4si2", value: 2767, isUnsigned: true)
!1876 = !DIEnumerator(name: "CODE_FOR_negv2di2", value: 2768, isUnsigned: true)
!1877 = !DIEnumerator(name: "CODE_FOR_addv16qi3", value: 2769, isUnsigned: true)
!1878 = !DIEnumerator(name: "CODE_FOR_subv16qi3", value: 2770, isUnsigned: true)
!1879 = !DIEnumerator(name: "CODE_FOR_addv8hi3", value: 2771, isUnsigned: true)
!1880 = !DIEnumerator(name: "CODE_FOR_subv8hi3", value: 2772, isUnsigned: true)
!1881 = !DIEnumerator(name: "CODE_FOR_addv4si3", value: 2773, isUnsigned: true)
!1882 = !DIEnumerator(name: "CODE_FOR_subv4si3", value: 2774, isUnsigned: true)
!1883 = !DIEnumerator(name: "CODE_FOR_addv2di3", value: 2775, isUnsigned: true)
!1884 = !DIEnumerator(name: "CODE_FOR_subv2di3", value: 2776, isUnsigned: true)
!1885 = !DIEnumerator(name: "CODE_FOR_sse2_ssaddv16qi3", value: 2777, isUnsigned: true)
!1886 = !DIEnumerator(name: "CODE_FOR_sse2_usaddv16qi3", value: 2778, isUnsigned: true)
!1887 = !DIEnumerator(name: "CODE_FOR_sse2_sssubv16qi3", value: 2779, isUnsigned: true)
!1888 = !DIEnumerator(name: "CODE_FOR_sse2_ussubv16qi3", value: 2780, isUnsigned: true)
!1889 = !DIEnumerator(name: "CODE_FOR_sse2_ssaddv8hi3", value: 2781, isUnsigned: true)
!1890 = !DIEnumerator(name: "CODE_FOR_sse2_usaddv8hi3", value: 2782, isUnsigned: true)
!1891 = !DIEnumerator(name: "CODE_FOR_sse2_sssubv8hi3", value: 2783, isUnsigned: true)
!1892 = !DIEnumerator(name: "CODE_FOR_sse2_ussubv8hi3", value: 2784, isUnsigned: true)
!1893 = !DIEnumerator(name: "CODE_FOR_mulv8hi3", value: 2786, isUnsigned: true)
!1894 = !DIEnumerator(name: "CODE_FOR_smulv8hi3_highpart", value: 2787, isUnsigned: true)
!1895 = !DIEnumerator(name: "CODE_FOR_umulv8hi3_highpart", value: 2788, isUnsigned: true)
!1896 = !DIEnumerator(name: "CODE_FOR_sse2_umulv2siv2di3", value: 2789, isUnsigned: true)
!1897 = !DIEnumerator(name: "CODE_FOR_sse4_1_mulv2siv2di3", value: 2790, isUnsigned: true)
!1898 = !DIEnumerator(name: "CODE_FOR_sse2_pmaddwd", value: 2791, isUnsigned: true)
!1899 = !DIEnumerator(name: "CODE_FOR_mulv4si3", value: 2792, isUnsigned: true)
!1900 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_hi_v8hi", value: 2795, isUnsigned: true)
!1901 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_lo_v8hi", value: 2796, isUnsigned: true)
!1902 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_hi_v8hi", value: 2797, isUnsigned: true)
!1903 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_lo_v8hi", value: 2798, isUnsigned: true)
!1904 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_hi_v4si", value: 2799, isUnsigned: true)
!1905 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_lo_v4si", value: 2800, isUnsigned: true)
!1906 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_hi_v4si", value: 2801, isUnsigned: true)
!1907 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_lo_v4si", value: 2802, isUnsigned: true)
!1908 = !DIEnumerator(name: "CODE_FOR_sdot_prodv8hi", value: 2803, isUnsigned: true)
!1909 = !DIEnumerator(name: "CODE_FOR_udot_prodv4si", value: 2804, isUnsigned: true)
!1910 = !DIEnumerator(name: "CODE_FOR_vec_shl_v16qi", value: 2805, isUnsigned: true)
!1911 = !DIEnumerator(name: "CODE_FOR_vec_shl_v8hi", value: 2806, isUnsigned: true)
!1912 = !DIEnumerator(name: "CODE_FOR_vec_shl_v4si", value: 2807, isUnsigned: true)
!1913 = !DIEnumerator(name: "CODE_FOR_vec_shl_v2di", value: 2808, isUnsigned: true)
!1914 = !DIEnumerator(name: "CODE_FOR_vec_shr_v16qi", value: 2809, isUnsigned: true)
!1915 = !DIEnumerator(name: "CODE_FOR_vec_shr_v8hi", value: 2810, isUnsigned: true)
!1916 = !DIEnumerator(name: "CODE_FOR_vec_shr_v4si", value: 2811, isUnsigned: true)
!1917 = !DIEnumerator(name: "CODE_FOR_vec_shr_v2di", value: 2812, isUnsigned: true)
!1918 = !DIEnumerator(name: "CODE_FOR_umaxv16qi3", value: 2813, isUnsigned: true)
!1919 = !DIEnumerator(name: "CODE_FOR_uminv16qi3", value: 2814, isUnsigned: true)
!1920 = !DIEnumerator(name: "CODE_FOR_smaxv8hi3", value: 2815, isUnsigned: true)
!1921 = !DIEnumerator(name: "CODE_FOR_sminv8hi3", value: 2816, isUnsigned: true)
!1922 = !DIEnumerator(name: "CODE_FOR_umaxv8hi3", value: 2817, isUnsigned: true)
!1923 = !DIEnumerator(name: "CODE_FOR_smaxv16qi3", value: 2818, isUnsigned: true)
!1924 = !DIEnumerator(name: "CODE_FOR_smaxv4si3", value: 2819, isUnsigned: true)
!1925 = !DIEnumerator(name: "CODE_FOR_smaxv2di3", value: 2820, isUnsigned: true)
!1926 = !DIEnumerator(name: "CODE_FOR_umaxv4si3", value: 2821, isUnsigned: true)
!1927 = !DIEnumerator(name: "CODE_FOR_umaxv2di3", value: 2822, isUnsigned: true)
!1928 = !DIEnumerator(name: "CODE_FOR_sminv16qi3", value: 2823, isUnsigned: true)
!1929 = !DIEnumerator(name: "CODE_FOR_sminv4si3", value: 2824, isUnsigned: true)
!1930 = !DIEnumerator(name: "CODE_FOR_sminv2di3", value: 2825, isUnsigned: true)
!1931 = !DIEnumerator(name: "CODE_FOR_uminv8hi3", value: 2826, isUnsigned: true)
!1932 = !DIEnumerator(name: "CODE_FOR_uminv4si3", value: 2827, isUnsigned: true)
!1933 = !DIEnumerator(name: "CODE_FOR_uminv2di3", value: 2828, isUnsigned: true)
!1934 = !DIEnumerator(name: "CODE_FOR_sse2_eqv16qi3", value: 2829, isUnsigned: true)
!1935 = !DIEnumerator(name: "CODE_FOR_sse2_eqv8hi3", value: 2830, isUnsigned: true)
!1936 = !DIEnumerator(name: "CODE_FOR_sse2_eqv4si3", value: 2831, isUnsigned: true)
!1937 = !DIEnumerator(name: "CODE_FOR_sse4_1_eqv2di3", value: 2832, isUnsigned: true)
!1938 = !DIEnumerator(name: "CODE_FOR_vcondv16qi", value: 2833, isUnsigned: true)
!1939 = !DIEnumerator(name: "CODE_FOR_vcondv8hi", value: 2834, isUnsigned: true)
!1940 = !DIEnumerator(name: "CODE_FOR_vcondv4si", value: 2835, isUnsigned: true)
!1941 = !DIEnumerator(name: "CODE_FOR_vcondv2di", value: 2836, isUnsigned: true)
!1942 = !DIEnumerator(name: "CODE_FOR_vconduv16qi", value: 2837, isUnsigned: true)
!1943 = !DIEnumerator(name: "CODE_FOR_vconduv8hi", value: 2838, isUnsigned: true)
!1944 = !DIEnumerator(name: "CODE_FOR_vconduv4si", value: 2839, isUnsigned: true)
!1945 = !DIEnumerator(name: "CODE_FOR_vconduv2di", value: 2840, isUnsigned: true)
!1946 = !DIEnumerator(name: "CODE_FOR_one_cmplv16qi2", value: 2841, isUnsigned: true)
!1947 = !DIEnumerator(name: "CODE_FOR_one_cmplv8hi2", value: 2842, isUnsigned: true)
!1948 = !DIEnumerator(name: "CODE_FOR_one_cmplv4si2", value: 2843, isUnsigned: true)
!1949 = !DIEnumerator(name: "CODE_FOR_one_cmplv2di2", value: 2844, isUnsigned: true)
!1950 = !DIEnumerator(name: "CODE_FOR_andv16qi3", value: 2845, isUnsigned: true)
!1951 = !DIEnumerator(name: "CODE_FOR_iorv16qi3", value: 2846, isUnsigned: true)
!1952 = !DIEnumerator(name: "CODE_FOR_xorv16qi3", value: 2847, isUnsigned: true)
!1953 = !DIEnumerator(name: "CODE_FOR_andv8hi3", value: 2848, isUnsigned: true)
!1954 = !DIEnumerator(name: "CODE_FOR_iorv8hi3", value: 2849, isUnsigned: true)
!1955 = !DIEnumerator(name: "CODE_FOR_xorv8hi3", value: 2850, isUnsigned: true)
!1956 = !DIEnumerator(name: "CODE_FOR_andv4si3", value: 2851, isUnsigned: true)
!1957 = !DIEnumerator(name: "CODE_FOR_iorv4si3", value: 2852, isUnsigned: true)
!1958 = !DIEnumerator(name: "CODE_FOR_xorv4si3", value: 2853, isUnsigned: true)
!1959 = !DIEnumerator(name: "CODE_FOR_andv2di3", value: 2854, isUnsigned: true)
!1960 = !DIEnumerator(name: "CODE_FOR_iorv2di3", value: 2855, isUnsigned: true)
!1961 = !DIEnumerator(name: "CODE_FOR_xorv2di3", value: 2856, isUnsigned: true)
!1962 = !DIEnumerator(name: "CODE_FOR_andtf3", value: 2857, isUnsigned: true)
!1963 = !DIEnumerator(name: "CODE_FOR_iortf3", value: 2858, isUnsigned: true)
!1964 = !DIEnumerator(name: "CODE_FOR_xortf3", value: 2859, isUnsigned: true)
!1965 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v8hi", value: 2860, isUnsigned: true)
!1966 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v4si", value: 2861, isUnsigned: true)
!1967 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v2di", value: 2862, isUnsigned: true)
!1968 = !DIEnumerator(name: "CODE_FOR_sse2_pshufd", value: 2863, isUnsigned: true)
!1969 = !DIEnumerator(name: "CODE_FOR_sse2_pshuflw", value: 2864, isUnsigned: true)
!1970 = !DIEnumerator(name: "CODE_FOR_sse2_pshufhw", value: 2865, isUnsigned: true)
!1971 = !DIEnumerator(name: "CODE_FOR_sse2_loadd", value: 2866, isUnsigned: true)
!1972 = !DIEnumerator(name: "CODE_FOR_sse_storeq", value: 2869, isUnsigned: true)
!1973 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v16qi", value: 2871, isUnsigned: true)
!1974 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v16qi", value: 2872, isUnsigned: true)
!1975 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v16qi", value: 2873, isUnsigned: true)
!1976 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v16qi", value: 2874, isUnsigned: true)
!1977 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v8hi", value: 2875, isUnsigned: true)
!1978 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v8hi", value: 2876, isUnsigned: true)
!1979 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v8hi", value: 2877, isUnsigned: true)
!1980 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v8hi", value: 2878, isUnsigned: true)
!1981 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v4si", value: 2879, isUnsigned: true)
!1982 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v4si", value: 2880, isUnsigned: true)
!1983 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v4si", value: 2881, isUnsigned: true)
!1984 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v4si", value: 2882, isUnsigned: true)
!1985 = !DIEnumerator(name: "CODE_FOR_sse2_uavgv16qi3", value: 2883, isUnsigned: true)
!1986 = !DIEnumerator(name: "CODE_FOR_sse2_uavgv8hi3", value: 2884, isUnsigned: true)
!1987 = !DIEnumerator(name: "CODE_FOR_sse2_maskmovdqu", value: 2885, isUnsigned: true)
!1988 = !DIEnumerator(name: "CODE_FOR_sse_sfence", value: 2886, isUnsigned: true)
!1989 = !DIEnumerator(name: "CODE_FOR_sse2_mfence", value: 2887, isUnsigned: true)
!1990 = !DIEnumerator(name: "CODE_FOR_sse2_lfence", value: 2888, isUnsigned: true)
!1991 = !DIEnumerator(name: "CODE_FOR_ssse3_pmulhrswv8hi3", value: 2889, isUnsigned: true)
!1992 = !DIEnumerator(name: "CODE_FOR_ssse3_pmulhrswv4hi3", value: 2890, isUnsigned: true)
!1993 = !DIEnumerator(name: "CODE_FOR_rotlv16qi3", value: 2895, isUnsigned: true)
!1994 = !DIEnumerator(name: "CODE_FOR_rotlv8hi3", value: 2896, isUnsigned: true)
!1995 = !DIEnumerator(name: "CODE_FOR_rotlv4si3", value: 2897, isUnsigned: true)
!1996 = !DIEnumerator(name: "CODE_FOR_rotlv2di3", value: 2898, isUnsigned: true)
!1997 = !DIEnumerator(name: "CODE_FOR_rotrv16qi3", value: 2899, isUnsigned: true)
!1998 = !DIEnumerator(name: "CODE_FOR_rotrv8hi3", value: 2900, isUnsigned: true)
!1999 = !DIEnumerator(name: "CODE_FOR_rotrv4si3", value: 2901, isUnsigned: true)
!2000 = !DIEnumerator(name: "CODE_FOR_rotrv2di3", value: 2902, isUnsigned: true)
!2001 = !DIEnumerator(name: "CODE_FOR_vrotrv16qi3", value: 2903, isUnsigned: true)
!2002 = !DIEnumerator(name: "CODE_FOR_vrotrv8hi3", value: 2904, isUnsigned: true)
!2003 = !DIEnumerator(name: "CODE_FOR_vrotrv4si3", value: 2905, isUnsigned: true)
!2004 = !DIEnumerator(name: "CODE_FOR_vrotrv2di3", value: 2906, isUnsigned: true)
!2005 = !DIEnumerator(name: "CODE_FOR_vrotlv16qi3", value: 2907, isUnsigned: true)
!2006 = !DIEnumerator(name: "CODE_FOR_vrotlv8hi3", value: 2908, isUnsigned: true)
!2007 = !DIEnumerator(name: "CODE_FOR_vrotlv4si3", value: 2909, isUnsigned: true)
!2008 = !DIEnumerator(name: "CODE_FOR_vrotlv2di3", value: 2910, isUnsigned: true)
!2009 = !DIEnumerator(name: "CODE_FOR_vlshrv16qi3", value: 2911, isUnsigned: true)
!2010 = !DIEnumerator(name: "CODE_FOR_vlshrv8hi3", value: 2912, isUnsigned: true)
!2011 = !DIEnumerator(name: "CODE_FOR_vlshrv4si3", value: 2913, isUnsigned: true)
!2012 = !DIEnumerator(name: "CODE_FOR_vashrv16qi3", value: 2914, isUnsigned: true)
!2013 = !DIEnumerator(name: "CODE_FOR_vashrv8hi3", value: 2915, isUnsigned: true)
!2014 = !DIEnumerator(name: "CODE_FOR_vashrv4si3", value: 2916, isUnsigned: true)
!2015 = !DIEnumerator(name: "CODE_FOR_vashlv16qi3", value: 2917, isUnsigned: true)
!2016 = !DIEnumerator(name: "CODE_FOR_vashlv8hi3", value: 2918, isUnsigned: true)
!2017 = !DIEnumerator(name: "CODE_FOR_vashlv4si3", value: 2919, isUnsigned: true)
!2018 = !DIEnumerator(name: "CODE_FOR_ashlv16qi3", value: 2920, isUnsigned: true)
!2019 = !DIEnumerator(name: "CODE_FOR_lshlv16qi3", value: 2921, isUnsigned: true)
!2020 = !DIEnumerator(name: "CODE_FOR_ashrv16qi3", value: 2922, isUnsigned: true)
!2021 = !DIEnumerator(name: "CODE_FOR_ashrv2di3", value: 2923, isUnsigned: true)
!2022 = !DIEnumerator(name: "CODE_FOR_avx_vzeroall", value: 2924, isUnsigned: true)
!2023 = !DIEnumerator(name: "CODE_FOR_avx_vzeroupper", value: 2925, isUnsigned: true)
!2024 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv2df", value: 2932, isUnsigned: true)
!2025 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv4df", value: 2933, isUnsigned: true)
!2026 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv4sf", value: 2934, isUnsigned: true)
!2027 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv8sf", value: 2935, isUnsigned: true)
!2028 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v8si3", value: 2936, isUnsigned: true)
!2029 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v8sf3", value: 2937, isUnsigned: true)
!2030 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v4df3", value: 2938, isUnsigned: true)
!2031 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v32qi", value: 2939, isUnsigned: true)
!2032 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v16hi", value: 2940, isUnsigned: true)
!2033 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v8si", value: 2941, isUnsigned: true)
!2034 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v4di", value: 2942, isUnsigned: true)
!2035 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v8sf", value: 2943, isUnsigned: true)
!2036 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v4df", value: 2944, isUnsigned: true)
!2037 = !DIEnumerator(name: "CODE_FOR_vec_initv32qi", value: 2945, isUnsigned: true)
!2038 = !DIEnumerator(name: "CODE_FOR_vec_initv16hi", value: 2946, isUnsigned: true)
!2039 = !DIEnumerator(name: "CODE_FOR_vec_initv8si", value: 2947, isUnsigned: true)
!2040 = !DIEnumerator(name: "CODE_FOR_vec_initv4di", value: 2948, isUnsigned: true)
!2041 = !DIEnumerator(name: "CODE_FOR_vec_initv8sf", value: 2949, isUnsigned: true)
!2042 = !DIEnumerator(name: "CODE_FOR_vec_initv4df", value: 2950, isUnsigned: true)
!2043 = !DIEnumerator(name: "CODE_FOR_memory_barrier", value: 2951, isUnsigned: true)
!2044 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapqi", value: 2952, isUnsigned: true)
!2045 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swaphi", value: 2953, isUnsigned: true)
!2046 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapsi", value: 2954, isUnsigned: true)
!2047 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapdi", value: 2955, isUnsigned: true)
!2048 = !DIEnumerator(name: "CODE_FOR_nothing", value: 2956, isUnsigned: true)
!2049 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reload_type", file: !2050, line: 67, baseType: !7, size: 32, elements: !2051)
!2050 = !DIFile(filename: "./reload.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2051 = !{!2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062}
!2052 = !DIEnumerator(name: "RELOAD_FOR_INPUT", value: 0, isUnsigned: true)
!2053 = !DIEnumerator(name: "RELOAD_FOR_OUTPUT", value: 1, isUnsigned: true)
!2054 = !DIEnumerator(name: "RELOAD_FOR_INSN", value: 2, isUnsigned: true)
!2055 = !DIEnumerator(name: "RELOAD_FOR_INPUT_ADDRESS", value: 3, isUnsigned: true)
!2056 = !DIEnumerator(name: "RELOAD_FOR_INPADDR_ADDRESS", value: 4, isUnsigned: true)
!2057 = !DIEnumerator(name: "RELOAD_FOR_OUTPUT_ADDRESS", value: 5, isUnsigned: true)
!2058 = !DIEnumerator(name: "RELOAD_FOR_OUTADDR_ADDRESS", value: 6, isUnsigned: true)
!2059 = !DIEnumerator(name: "RELOAD_FOR_OPERAND_ADDRESS", value: 7, isUnsigned: true)
!2060 = !DIEnumerator(name: "RELOAD_FOR_OPADDR_ADDR", value: 8, isUnsigned: true)
!2061 = !DIEnumerator(name: "RELOAD_OTHER", value: 9, isUnsigned: true)
!2062 = !DIEnumerator(name: "RELOAD_FOR_OTHER_ADDRESS", value: 10, isUnsigned: true)
!2063 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insn_note", file: !385, line: 956, baseType: !7, size: 32, elements: !2064)
!2064 = !{!2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078}
!2065 = !DIEnumerator(name: "NOTE_INSN_DELETED", value: 0, isUnsigned: true)
!2066 = !DIEnumerator(name: "NOTE_INSN_DELETED_LABEL", value: 1, isUnsigned: true)
!2067 = !DIEnumerator(name: "NOTE_INSN_BLOCK_BEG", value: 2, isUnsigned: true)
!2068 = !DIEnumerator(name: "NOTE_INSN_BLOCK_END", value: 3, isUnsigned: true)
!2069 = !DIEnumerator(name: "NOTE_INSN_FUNCTION_BEG", value: 4, isUnsigned: true)
!2070 = !DIEnumerator(name: "NOTE_INSN_PROLOGUE_END", value: 5, isUnsigned: true)
!2071 = !DIEnumerator(name: "NOTE_INSN_EPILOGUE_BEG", value: 6, isUnsigned: true)
!2072 = !DIEnumerator(name: "NOTE_INSN_EH_REGION_BEG", value: 7, isUnsigned: true)
!2073 = !DIEnumerator(name: "NOTE_INSN_EH_REGION_END", value: 8, isUnsigned: true)
!2074 = !DIEnumerator(name: "NOTE_INSN_VAR_LOCATION", value: 9, isUnsigned: true)
!2075 = !DIEnumerator(name: "NOTE_INSN_BASIC_BLOCK", value: 10, isUnsigned: true)
!2076 = !DIEnumerator(name: "NOTE_INSN_SWITCH_TEXT_SECTIONS", value: 11, isUnsigned: true)
!2077 = !DIEnumerator(name: "NOTE_INSN_CFA_RESTORE_STATE", value: 12, isUnsigned: true)
!2078 = !DIEnumerator(name: "NOTE_INSN_MAX", value: 13, isUnsigned: true)
!2079 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !385, line: 836, baseType: !7, size: 32, elements: !2080)
!2080 = !{!2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112}
!2081 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!2082 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!2083 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!2084 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!2085 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!2086 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!2087 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!2088 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!2089 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!2090 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!2091 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!2092 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!2093 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!2094 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!2095 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!2096 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!2097 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!2098 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!2099 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!2100 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!2101 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!2102 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!2103 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!2104 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!2105 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!2106 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!2107 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!2108 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!2109 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!2110 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!2111 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!2112 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!2113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_class", file: !385, line: 60, baseType: !7, size: 32, elements: !2114)
!2114 = !{!2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127}
!2115 = !DIEnumerator(name: "RTX_COMPARE", value: 0, isUnsigned: true)
!2116 = !DIEnumerator(name: "RTX_COMM_COMPARE", value: 1, isUnsigned: true)
!2117 = !DIEnumerator(name: "RTX_BIN_ARITH", value: 2, isUnsigned: true)
!2118 = !DIEnumerator(name: "RTX_COMM_ARITH", value: 3, isUnsigned: true)
!2119 = !DIEnumerator(name: "RTX_UNARY", value: 4, isUnsigned: true)
!2120 = !DIEnumerator(name: "RTX_EXTRA", value: 5, isUnsigned: true)
!2121 = !DIEnumerator(name: "RTX_MATCH", value: 6, isUnsigned: true)
!2122 = !DIEnumerator(name: "RTX_INSN", value: 7, isUnsigned: true)
!2123 = !DIEnumerator(name: "RTX_OBJ", value: 8, isUnsigned: true)
!2124 = !DIEnumerator(name: "RTX_CONST_OBJ", value: 9, isUnsigned: true)
!2125 = !DIEnumerator(name: "RTX_TERNARY", value: 10, isUnsigned: true)
!2126 = !DIEnumerator(name: "RTX_BITFIELD_OPS", value: 11, isUnsigned: true)
!2127 = !DIEnumerator(name: "RTX_AUTOINC", value: 12, isUnsigned: true)
!2128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "global_rtl_index", file: !385, line: 1994, baseType: !7, size: 32, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141}
!2130 = !DIEnumerator(name: "GR_PC", value: 0, isUnsigned: true)
!2131 = !DIEnumerator(name: "GR_CC0", value: 1, isUnsigned: true)
!2132 = !DIEnumerator(name: "GR_STACK_POINTER", value: 2, isUnsigned: true)
!2133 = !DIEnumerator(name: "GR_FRAME_POINTER", value: 3, isUnsigned: true)
!2134 = !DIEnumerator(name: "GR_HARD_FRAME_POINTER", value: 4, isUnsigned: true)
!2135 = !DIEnumerator(name: "GR_ARG_POINTER", value: 5, isUnsigned: true)
!2136 = !DIEnumerator(name: "GR_VIRTUAL_INCOMING_ARGS", value: 6, isUnsigned: true)
!2137 = !DIEnumerator(name: "GR_VIRTUAL_STACK_ARGS", value: 7, isUnsigned: true)
!2138 = !DIEnumerator(name: "GR_VIRTUAL_STACK_DYNAMIC", value: 8, isUnsigned: true)
!2139 = !DIEnumerator(name: "GR_VIRTUAL_OUTGOING_ARGS", value: 9, isUnsigned: true)
!2140 = !DIEnumerator(name: "GR_VIRTUAL_CFA", value: 10, isUnsigned: true)
!2141 = !DIEnumerator(name: "GR_MAX", value: 11, isUnsigned: true)
!2142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stack_check_type", file: !2143, line: 310, baseType: !7, size: 32, elements: !2144)
!2143 = !DIFile(filename: "./flags.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2144 = !{!2145, !2146, !2147, !2148}
!2145 = !DIEnumerator(name: "NO_STACK_CHECK", value: 0, isUnsigned: true)
!2146 = !DIEnumerator(name: "GENERIC_STACK_CHECK", value: 1, isUnsigned: true)
!2147 = !DIEnumerator(name: "STATIC_BUILTIN_STACK_CHECK", value: 2, isUnsigned: true)
!2148 = !DIEnumerator(name: "FULL_BUILTIN_STACK_CHECK", value: 3, isUnsigned: true)
!2149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bb_flags", file: !142, line: 295, baseType: !7, size: 32, elements: !2150)
!2150 = !{!2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162}
!2151 = !DIEnumerator(name: "BB_NEW", value: 1, isUnsigned: true)
!2152 = !DIEnumerator(name: "BB_REACHABLE", value: 2, isUnsigned: true)
!2153 = !DIEnumerator(name: "BB_IRREDUCIBLE_LOOP", value: 4, isUnsigned: true)
!2154 = !DIEnumerator(name: "BB_SUPERBLOCK", value: 8, isUnsigned: true)
!2155 = !DIEnumerator(name: "BB_DISABLE_SCHEDULE", value: 16, isUnsigned: true)
!2156 = !DIEnumerator(name: "BB_HOT_PARTITION", value: 32, isUnsigned: true)
!2157 = !DIEnumerator(name: "BB_COLD_PARTITION", value: 64, isUnsigned: true)
!2158 = !DIEnumerator(name: "BB_DUPLICATED", value: 128, isUnsigned: true)
!2159 = !DIEnumerator(name: "BB_NON_LOCAL_GOTO_TARGET", value: 256, isUnsigned: true)
!2160 = !DIEnumerator(name: "BB_RTL", value: 512, isUnsigned: true)
!2161 = !DIEnumerator(name: "BB_FORWARDER_BLOCK", value: 1024, isUnsigned: true)
!2162 = !DIEnumerator(name: "BB_NONTHREADABLE_BLOCK", value: 2048, isUnsigned: true)
!2163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "op_type", file: !2164, line: 25, baseType: !7, size: 32, elements: !2165)
!2164 = !DIFile(filename: "./recog.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2165 = !{!2166, !2167, !2168}
!2166 = !DIEnumerator(name: "OP_IN", value: 0, isUnsigned: true)
!2167 = !DIEnumerator(name: "OP_OUT", value: 1, isUnsigned: true)
!2168 = !DIEnumerator(name: "OP_INOUT", value: 2, isUnsigned: true)
!2169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !2170, line: 36, baseType: !7, size: 32, elements: !2171)
!2170 = !DIFile(filename: "./machmode.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2171 = !{!2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190}
!2172 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!2173 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!2174 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!2175 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!2176 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!2177 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!2178 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!2179 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!2180 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!2181 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!2182 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!2183 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!2184 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!2185 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!2186 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!2187 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!2188 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!2189 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!2190 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!2191 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "optab_index", file: !2192, line: 76, baseType: !7, size: 32, elements: !2193)
!2192 = !DIFile(filename: "./optabs.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2193 = !{!2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353}
!2194 = !DIEnumerator(name: "OTI_ssadd", value: 0, isUnsigned: true)
!2195 = !DIEnumerator(name: "OTI_usadd", value: 1, isUnsigned: true)
!2196 = !DIEnumerator(name: "OTI_sssub", value: 2, isUnsigned: true)
!2197 = !DIEnumerator(name: "OTI_ussub", value: 3, isUnsigned: true)
!2198 = !DIEnumerator(name: "OTI_ssmul", value: 4, isUnsigned: true)
!2199 = !DIEnumerator(name: "OTI_usmul", value: 5, isUnsigned: true)
!2200 = !DIEnumerator(name: "OTI_ssdiv", value: 6, isUnsigned: true)
!2201 = !DIEnumerator(name: "OTI_usdiv", value: 7, isUnsigned: true)
!2202 = !DIEnumerator(name: "OTI_ssneg", value: 8, isUnsigned: true)
!2203 = !DIEnumerator(name: "OTI_usneg", value: 9, isUnsigned: true)
!2204 = !DIEnumerator(name: "OTI_ssashl", value: 10, isUnsigned: true)
!2205 = !DIEnumerator(name: "OTI_usashl", value: 11, isUnsigned: true)
!2206 = !DIEnumerator(name: "OTI_add", value: 12, isUnsigned: true)
!2207 = !DIEnumerator(name: "OTI_addv", value: 13, isUnsigned: true)
!2208 = !DIEnumerator(name: "OTI_sub", value: 14, isUnsigned: true)
!2209 = !DIEnumerator(name: "OTI_subv", value: 15, isUnsigned: true)
!2210 = !DIEnumerator(name: "OTI_smul", value: 16, isUnsigned: true)
!2211 = !DIEnumerator(name: "OTI_smulv", value: 17, isUnsigned: true)
!2212 = !DIEnumerator(name: "OTI_smul_highpart", value: 18, isUnsigned: true)
!2213 = !DIEnumerator(name: "OTI_umul_highpart", value: 19, isUnsigned: true)
!2214 = !DIEnumerator(name: "OTI_smul_widen", value: 20, isUnsigned: true)
!2215 = !DIEnumerator(name: "OTI_umul_widen", value: 21, isUnsigned: true)
!2216 = !DIEnumerator(name: "OTI_usmul_widen", value: 22, isUnsigned: true)
!2217 = !DIEnumerator(name: "OTI_smadd_widen", value: 23, isUnsigned: true)
!2218 = !DIEnumerator(name: "OTI_umadd_widen", value: 24, isUnsigned: true)
!2219 = !DIEnumerator(name: "OTI_ssmadd_widen", value: 25, isUnsigned: true)
!2220 = !DIEnumerator(name: "OTI_usmadd_widen", value: 26, isUnsigned: true)
!2221 = !DIEnumerator(name: "OTI_smsub_widen", value: 27, isUnsigned: true)
!2222 = !DIEnumerator(name: "OTI_umsub_widen", value: 28, isUnsigned: true)
!2223 = !DIEnumerator(name: "OTI_ssmsub_widen", value: 29, isUnsigned: true)
!2224 = !DIEnumerator(name: "OTI_usmsub_widen", value: 30, isUnsigned: true)
!2225 = !DIEnumerator(name: "OTI_sdiv", value: 31, isUnsigned: true)
!2226 = !DIEnumerator(name: "OTI_sdivv", value: 32, isUnsigned: true)
!2227 = !DIEnumerator(name: "OTI_sdivmod", value: 33, isUnsigned: true)
!2228 = !DIEnumerator(name: "OTI_udiv", value: 34, isUnsigned: true)
!2229 = !DIEnumerator(name: "OTI_udivmod", value: 35, isUnsigned: true)
!2230 = !DIEnumerator(name: "OTI_smod", value: 36, isUnsigned: true)
!2231 = !DIEnumerator(name: "OTI_umod", value: 37, isUnsigned: true)
!2232 = !DIEnumerator(name: "OTI_fmod", value: 38, isUnsigned: true)
!2233 = !DIEnumerator(name: "OTI_remainder", value: 39, isUnsigned: true)
!2234 = !DIEnumerator(name: "OTI_ftrunc", value: 40, isUnsigned: true)
!2235 = !DIEnumerator(name: "OTI_and", value: 41, isUnsigned: true)
!2236 = !DIEnumerator(name: "OTI_ior", value: 42, isUnsigned: true)
!2237 = !DIEnumerator(name: "OTI_xor", value: 43, isUnsigned: true)
!2238 = !DIEnumerator(name: "OTI_ashl", value: 44, isUnsigned: true)
!2239 = !DIEnumerator(name: "OTI_lshr", value: 45, isUnsigned: true)
!2240 = !DIEnumerator(name: "OTI_ashr", value: 46, isUnsigned: true)
!2241 = !DIEnumerator(name: "OTI_rotl", value: 47, isUnsigned: true)
!2242 = !DIEnumerator(name: "OTI_rotr", value: 48, isUnsigned: true)
!2243 = !DIEnumerator(name: "OTI_vashl", value: 49, isUnsigned: true)
!2244 = !DIEnumerator(name: "OTI_vlshr", value: 50, isUnsigned: true)
!2245 = !DIEnumerator(name: "OTI_vashr", value: 51, isUnsigned: true)
!2246 = !DIEnumerator(name: "OTI_vrotl", value: 52, isUnsigned: true)
!2247 = !DIEnumerator(name: "OTI_vrotr", value: 53, isUnsigned: true)
!2248 = !DIEnumerator(name: "OTI_smin", value: 54, isUnsigned: true)
!2249 = !DIEnumerator(name: "OTI_smax", value: 55, isUnsigned: true)
!2250 = !DIEnumerator(name: "OTI_umin", value: 56, isUnsigned: true)
!2251 = !DIEnumerator(name: "OTI_umax", value: 57, isUnsigned: true)
!2252 = !DIEnumerator(name: "OTI_pow", value: 58, isUnsigned: true)
!2253 = !DIEnumerator(name: "OTI_atan2", value: 59, isUnsigned: true)
!2254 = !DIEnumerator(name: "OTI_mov", value: 60, isUnsigned: true)
!2255 = !DIEnumerator(name: "OTI_movstrict", value: 61, isUnsigned: true)
!2256 = !DIEnumerator(name: "OTI_movmisalign", value: 62, isUnsigned: true)
!2257 = !DIEnumerator(name: "OTI_storent", value: 63, isUnsigned: true)
!2258 = !DIEnumerator(name: "OTI_neg", value: 64, isUnsigned: true)
!2259 = !DIEnumerator(name: "OTI_negv", value: 65, isUnsigned: true)
!2260 = !DIEnumerator(name: "OTI_abs", value: 66, isUnsigned: true)
!2261 = !DIEnumerator(name: "OTI_absv", value: 67, isUnsigned: true)
!2262 = !DIEnumerator(name: "OTI_bswap", value: 68, isUnsigned: true)
!2263 = !DIEnumerator(name: "OTI_one_cmpl", value: 69, isUnsigned: true)
!2264 = !DIEnumerator(name: "OTI_ffs", value: 70, isUnsigned: true)
!2265 = !DIEnumerator(name: "OTI_clz", value: 71, isUnsigned: true)
!2266 = !DIEnumerator(name: "OTI_ctz", value: 72, isUnsigned: true)
!2267 = !DIEnumerator(name: "OTI_popcount", value: 73, isUnsigned: true)
!2268 = !DIEnumerator(name: "OTI_parity", value: 74, isUnsigned: true)
!2269 = !DIEnumerator(name: "OTI_sqrt", value: 75, isUnsigned: true)
!2270 = !DIEnumerator(name: "OTI_sincos", value: 76, isUnsigned: true)
!2271 = !DIEnumerator(name: "OTI_sin", value: 77, isUnsigned: true)
!2272 = !DIEnumerator(name: "OTI_asin", value: 78, isUnsigned: true)
!2273 = !DIEnumerator(name: "OTI_cos", value: 79, isUnsigned: true)
!2274 = !DIEnumerator(name: "OTI_acos", value: 80, isUnsigned: true)
!2275 = !DIEnumerator(name: "OTI_exp", value: 81, isUnsigned: true)
!2276 = !DIEnumerator(name: "OTI_exp10", value: 82, isUnsigned: true)
!2277 = !DIEnumerator(name: "OTI_exp2", value: 83, isUnsigned: true)
!2278 = !DIEnumerator(name: "OTI_expm1", value: 84, isUnsigned: true)
!2279 = !DIEnumerator(name: "OTI_ldexp", value: 85, isUnsigned: true)
!2280 = !DIEnumerator(name: "OTI_scalb", value: 86, isUnsigned: true)
!2281 = !DIEnumerator(name: "OTI_significand", value: 87, isUnsigned: true)
!2282 = !DIEnumerator(name: "OTI_logb", value: 88, isUnsigned: true)
!2283 = !DIEnumerator(name: "OTI_ilogb", value: 89, isUnsigned: true)
!2284 = !DIEnumerator(name: "OTI_log", value: 90, isUnsigned: true)
!2285 = !DIEnumerator(name: "OTI_log10", value: 91, isUnsigned: true)
!2286 = !DIEnumerator(name: "OTI_log2", value: 92, isUnsigned: true)
!2287 = !DIEnumerator(name: "OTI_log1p", value: 93, isUnsigned: true)
!2288 = !DIEnumerator(name: "OTI_floor", value: 94, isUnsigned: true)
!2289 = !DIEnumerator(name: "OTI_ceil", value: 95, isUnsigned: true)
!2290 = !DIEnumerator(name: "OTI_btrunc", value: 96, isUnsigned: true)
!2291 = !DIEnumerator(name: "OTI_round", value: 97, isUnsigned: true)
!2292 = !DIEnumerator(name: "OTI_nearbyint", value: 98, isUnsigned: true)
!2293 = !DIEnumerator(name: "OTI_rint", value: 99, isUnsigned: true)
!2294 = !DIEnumerator(name: "OTI_tan", value: 100, isUnsigned: true)
!2295 = !DIEnumerator(name: "OTI_atan", value: 101, isUnsigned: true)
!2296 = !DIEnumerator(name: "OTI_copysign", value: 102, isUnsigned: true)
!2297 = !DIEnumerator(name: "OTI_signbit", value: 103, isUnsigned: true)
!2298 = !DIEnumerator(name: "OTI_isinf", value: 104, isUnsigned: true)
!2299 = !DIEnumerator(name: "OTI_cmp", value: 105, isUnsigned: true)
!2300 = !DIEnumerator(name: "OTI_ucmp", value: 106, isUnsigned: true)
!2301 = !DIEnumerator(name: "OTI_eq", value: 107, isUnsigned: true)
!2302 = !DIEnumerator(name: "OTI_ne", value: 108, isUnsigned: true)
!2303 = !DIEnumerator(name: "OTI_gt", value: 109, isUnsigned: true)
!2304 = !DIEnumerator(name: "OTI_ge", value: 110, isUnsigned: true)
!2305 = !DIEnumerator(name: "OTI_lt", value: 111, isUnsigned: true)
!2306 = !DIEnumerator(name: "OTI_le", value: 112, isUnsigned: true)
!2307 = !DIEnumerator(name: "OTI_unord", value: 113, isUnsigned: true)
!2308 = !DIEnumerator(name: "OTI_strlen", value: 114, isUnsigned: true)
!2309 = !DIEnumerator(name: "OTI_cbranch", value: 115, isUnsigned: true)
!2310 = !DIEnumerator(name: "OTI_cmov", value: 116, isUnsigned: true)
!2311 = !DIEnumerator(name: "OTI_cstore", value: 117, isUnsigned: true)
!2312 = !DIEnumerator(name: "OTI_ctrap", value: 118, isUnsigned: true)
!2313 = !DIEnumerator(name: "OTI_push", value: 119, isUnsigned: true)
!2314 = !DIEnumerator(name: "OTI_addcc", value: 120, isUnsigned: true)
!2315 = !DIEnumerator(name: "OTI_reduc_smax", value: 121, isUnsigned: true)
!2316 = !DIEnumerator(name: "OTI_reduc_umax", value: 122, isUnsigned: true)
!2317 = !DIEnumerator(name: "OTI_reduc_smin", value: 123, isUnsigned: true)
!2318 = !DIEnumerator(name: "OTI_reduc_umin", value: 124, isUnsigned: true)
!2319 = !DIEnumerator(name: "OTI_reduc_splus", value: 125, isUnsigned: true)
!2320 = !DIEnumerator(name: "OTI_reduc_uplus", value: 126, isUnsigned: true)
!2321 = !DIEnumerator(name: "OTI_ssum_widen", value: 127, isUnsigned: true)
!2322 = !DIEnumerator(name: "OTI_usum_widen", value: 128, isUnsigned: true)
!2323 = !DIEnumerator(name: "OTI_sdot_prod", value: 129, isUnsigned: true)
!2324 = !DIEnumerator(name: "OTI_udot_prod", value: 130, isUnsigned: true)
!2325 = !DIEnumerator(name: "OTI_vec_set", value: 131, isUnsigned: true)
!2326 = !DIEnumerator(name: "OTI_vec_extract", value: 132, isUnsigned: true)
!2327 = !DIEnumerator(name: "OTI_vec_extract_even", value: 133, isUnsigned: true)
!2328 = !DIEnumerator(name: "OTI_vec_extract_odd", value: 134, isUnsigned: true)
!2329 = !DIEnumerator(name: "OTI_vec_interleave_high", value: 135, isUnsigned: true)
!2330 = !DIEnumerator(name: "OTI_vec_interleave_low", value: 136, isUnsigned: true)
!2331 = !DIEnumerator(name: "OTI_vec_init", value: 137, isUnsigned: true)
!2332 = !DIEnumerator(name: "OTI_vec_shl", value: 138, isUnsigned: true)
!2333 = !DIEnumerator(name: "OTI_vec_shr", value: 139, isUnsigned: true)
!2334 = !DIEnumerator(name: "OTI_vec_realign_load", value: 140, isUnsigned: true)
!2335 = !DIEnumerator(name: "OTI_vec_widen_umult_hi", value: 141, isUnsigned: true)
!2336 = !DIEnumerator(name: "OTI_vec_widen_umult_lo", value: 142, isUnsigned: true)
!2337 = !DIEnumerator(name: "OTI_vec_widen_smult_hi", value: 143, isUnsigned: true)
!2338 = !DIEnumerator(name: "OTI_vec_widen_smult_lo", value: 144, isUnsigned: true)
!2339 = !DIEnumerator(name: "OTI_vec_unpacks_hi", value: 145, isUnsigned: true)
!2340 = !DIEnumerator(name: "OTI_vec_unpacks_lo", value: 146, isUnsigned: true)
!2341 = !DIEnumerator(name: "OTI_vec_unpacku_hi", value: 147, isUnsigned: true)
!2342 = !DIEnumerator(name: "OTI_vec_unpacku_lo", value: 148, isUnsigned: true)
!2343 = !DIEnumerator(name: "OTI_vec_unpacks_float_hi", value: 149, isUnsigned: true)
!2344 = !DIEnumerator(name: "OTI_vec_unpacks_float_lo", value: 150, isUnsigned: true)
!2345 = !DIEnumerator(name: "OTI_vec_unpacku_float_hi", value: 151, isUnsigned: true)
!2346 = !DIEnumerator(name: "OTI_vec_unpacku_float_lo", value: 152, isUnsigned: true)
!2347 = !DIEnumerator(name: "OTI_vec_pack_trunc", value: 153, isUnsigned: true)
!2348 = !DIEnumerator(name: "OTI_vec_pack_usat", value: 154, isUnsigned: true)
!2349 = !DIEnumerator(name: "OTI_vec_pack_ssat", value: 155, isUnsigned: true)
!2350 = !DIEnumerator(name: "OTI_vec_pack_sfix_trunc", value: 156, isUnsigned: true)
!2351 = !DIEnumerator(name: "OTI_vec_pack_ufix_trunc", value: 157, isUnsigned: true)
!2352 = !DIEnumerator(name: "OTI_powi", value: 158, isUnsigned: true)
!2353 = !DIEnumerator(name: "OTI_MAX", value: 159, isUnsigned: true)
!2354 = !{!2355, !2360, !2363, !2358, !2365, !5, !3579, !3580, !3581, !3583, !3577, !384, !2372, !2396, !3584, !3586, !3587, !2079, !3588, !2445, !7, !3589, !3550, !3590, !3592, !3605, !3618, !2169, !557}
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DISubroutineType(types: !2357)
!2357 = !{!2358, !2359}
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!2359 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64)
!2361 = !DISubroutineType(types: !2362)
!2362 = !{null, !2358}
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "insn_chain", file: !2050, line: 200, size: 1024, elements: !2367)
!2367 = !{!2368, !2369, !2370, !2371, !3540, !3541, !3542, !3543, !3544, !3545, !3548, !3549, !3575, !3576}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2366, file: !2050, line: 203, baseType: !2365, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2366, file: !2050, line: 203, baseType: !2365, size: 64, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "next_need_reload", scope: !2366, file: !2050, line: 207, baseType: !2365, size: 64, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2366, file: !2050, line: 210, baseType: !2372, size: 64, offset: 192)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !2373, line: 50, baseType: !2374)
!2373 = !DIFile(filename: "./coretypes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !385, line: 240, size: 384, elements: !2376)
!2376 = !{!2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2375, file: !385, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2375, file: !385, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !2375, file: !385, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !2375, file: !385, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !2375, file: !385, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !2375, file: !385, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !2375, file: !385, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2375, file: !385, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !2375, file: !385, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !2375, file: !385, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2375, file: !385, line: 321, baseType: !2388, size: 320, offset: 64)
!2388 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !385, line: 315, size: 320, elements: !2389)
!2389 = !{!2390, !3475, !3477, !3538, !3539}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !2388, file: !385, line: 316, baseType: !2391, size: 64)
!2391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, size: 64, elements: !2410)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !385, line: 183, baseType: !2393)
!2393 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !385, line: 166, size: 64, elements: !2394)
!2394 = !{!2395, !2397, !2398, !2401, !2402, !2412, !2413, !2425, !2428, !2489, !3453, !3454, !3465, !3472}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !2393, file: !385, line: 168, baseType: !2396, size: 32)
!2396 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !2393, file: !385, line: 169, baseType: !7, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !2393, file: !385, line: 170, baseType: !2399, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2364)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !2393, file: !385, line: 171, baseType: !2372, size: 64)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !2393, file: !385, line: 172, baseType: !2403, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !2373, line: 53, baseType: !2404)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !385, line: 359, size: 128, elements: !2406)
!2406 = !{!2407, !2408}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !2405, file: !385, line: 360, baseType: !2396, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !2405, file: !385, line: 361, baseType: !2409, size: 64, offset: 64)
!2409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2372, size: 64, elements: !2410)
!2410 = !{!2411}
!2411 = !DISubrange(count: 1)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !2393, file: !385, line: 173, baseType: !5, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !2393, file: !385, line: 174, baseType: !2414, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !385, line: 133, baseType: !2415)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !385, line: 115, size: 32, elements: !2416)
!2416 = !{!2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !2415, file: !385, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !2415, file: !385, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !2415, file: !385, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !2415, file: !385, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !2415, file: !385, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !2415, file: !385, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !2415, file: !385, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2415, file: !385, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !2393, file: !385, line: 175, baseType: !2426, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !385, line: 175, flags: DIFlagFwdDecl)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !2393, file: !385, line: 176, baseType: !2429, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !2431, line: 75, size: 256, elements: !2432)
!2431 = !DIFile(filename: "./bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2432 = !{!2433, !2448, !2449, !2450}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2430, file: !2431, line: 76, baseType: !2434, size: 64)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !2431, line: 68, baseType: !2436)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !2431, line: 63, size: 320, elements: !2437)
!2437 = !{!2438, !2440, !2441, !2442}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2436, file: !2431, line: 64, baseType: !2439, size: 64)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2436, file: !2431, line: 65, baseType: !2439, size: 64, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !2436, file: !2431, line: 66, baseType: !7, size: 32, offset: 128)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2436, file: !2431, line: 67, baseType: !2443, size: 128, offset: 192)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2444, size: 128, elements: !2446)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !2431, line: 29, baseType: !2445)
!2445 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2446 = !{!2447}
!2447 = !DISubrange(count: 2)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2430, file: !2431, line: 77, baseType: !2434, size: 64, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !2430, file: !2431, line: 78, baseType: !7, size: 32, offset: 128)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !2430, file: !2431, line: 79, baseType: !2451, size: 64, offset: 192)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !2431, line: 49, baseType: !2453)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !2431, line: 45, size: 832, elements: !2454)
!2454 = !{!2455, !2456, !2457}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2453, file: !2431, line: 46, baseType: !2439, size: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !2453, file: !2431, line: 47, baseType: !2429, size: 64, offset: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !2453, file: !2431, line: 48, baseType: !2458, size: 704, offset: 128)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !2459, line: 164, size: 704, elements: !2460)
!2459 = !DIFile(filename: "./include/obstack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2460 = !{!2461, !2462, !2472, !2473, !2474, !2475, !2476, !2477, !2481, !2485, !2486, !2487, !2488}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !2458, file: !2459, line: 166, baseType: !2359, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !2458, file: !2459, line: 167, baseType: !2463, size: 64, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !2459, line: 157, size: 192, elements: !2465)
!2465 = !{!2466, !2467, !2468}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !2464, file: !2459, line: 159, baseType: !2363, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2464, file: !2459, line: 160, baseType: !2463, size: 64, offset: 64)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !2464, file: !2459, line: 161, baseType: !2469, size: 32, offset: 128)
!2469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2364, size: 32, elements: !2470)
!2470 = !{!2471}
!2471 = !DISubrange(count: 4)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !2458, file: !2459, line: 168, baseType: !2363, size: 64, offset: 128)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !2458, file: !2459, line: 169, baseType: !2363, size: 64, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !2458, file: !2459, line: 170, baseType: !2363, size: 64, offset: 256)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2458, file: !2459, line: 171, baseType: !2359, size: 64, offset: 320)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !2458, file: !2459, line: 172, baseType: !2396, size: 32, offset: 384)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !2458, file: !2459, line: 176, baseType: !2478, size: 64, offset: 448)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{!2463, !2358, !2359}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !2458, file: !2459, line: 177, baseType: !2482, size: 64, offset: 512)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{null, !2358, !2463}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !2458, file: !2459, line: 178, baseType: !2358, size: 64, offset: 576)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !2458, file: !2459, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !2458, file: !2459, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !2458, file: !2459, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !2393, file: !385, line: 177, baseType: !2490, size: 64)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !2373, line: 56, baseType: !2491)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64)
!2492 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !158, line: 3371, size: 1792, elements: !2493)
!2493 = !{!2494, !2527, !2533, !2544, !2563, !2574, !2579, !2586, !2592, !2606, !2618, !2656, !2661, !2689, !2697, !2698, !2703, !2712, !2718, !2723, !2727, !2731, !3089, !3138, !3144, !3150, !3157, !3183, !3197, !3214, !3226, !3248, !3263, !3435}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2492, file: !158, line: 3372, baseType: !2495, size: 64)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !158, line: 360, size: 64, elements: !2496)
!2496 = !{!2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2495, file: !158, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !2495, file: !158, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !2495, file: !158, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !2495, file: !158, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !2495, file: !158, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !2495, file: !158, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !2495, file: !158, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !2495, file: !158, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !2495, file: !158, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !2495, file: !158, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !2495, file: !158, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !2495, file: !158, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !2495, file: !158, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !2495, file: !158, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !2495, file: !158, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !2495, file: !158, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !2495, file: !158, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !2495, file: !158, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2495, file: !158, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2495, file: !158, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2495, file: !158, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2495, file: !158, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2495, file: !158, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2495, file: !158, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2495, file: !158, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2495, file: !158, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !2495, file: !158, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !2495, file: !158, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !2495, file: !158, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !2495, file: !158, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2492, file: !158, line: 3373, baseType: !2528, size: 192)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !158, line: 402, size: 192, elements: !2529)
!2529 = !{!2530, !2531, !2532}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2528, file: !158, line: 403, baseType: !2495, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !2528, file: !158, line: 404, baseType: !2490, size: 64, offset: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2528, file: !158, line: 405, baseType: !2490, size: 64, offset: 128)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !2492, file: !158, line: 3374, baseType: !2534, size: 320)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !158, line: 1384, size: 320, elements: !2535)
!2535 = !{!2536, !2537}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2534, file: !158, line: 1385, baseType: !2528, size: 192)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !2534, file: !158, line: 1386, baseType: !2538, size: 128, offset: 192)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !2539, line: 58, baseType: !2540)
!2539 = !DIFile(filename: "./double-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2539, line: 54, size: 128, elements: !2541)
!2541 = !{!2542, !2543}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !2540, file: !2539, line: 56, baseType: !2445, size: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !2540, file: !2539, line: 57, baseType: !2359, size: 64, offset: 64)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !2492, file: !158, line: 3375, baseType: !2545, size: 256)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !158, line: 1397, size: 256, elements: !2546)
!2546 = !{!2547, !2548}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2545, file: !158, line: 1398, baseType: !2528, size: 192)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !2545, file: !158, line: 1399, baseType: !2549, size: 64, offset: 192)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 64)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !2551, line: 52, size: 256, elements: !2552)
!2551 = !DIFile(filename: "./real.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2552 = !{!2553, !2554, !2555, !2556, !2557, !2558, !2559}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !2550, file: !2551, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !2550, file: !2551, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !2550, file: !2551, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !2550, file: !2551, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2550, file: !2551, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !2550, file: !2551, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2550, file: !2551, line: 62, baseType: !2560, size: 192, offset: 64)
!2560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2445, size: 192, elements: !2561)
!2561 = !{!2562}
!2562 = !DISubrange(count: 3)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !2492, file: !158, line: 3376, baseType: !2564, size: 256)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !158, line: 1408, size: 256, elements: !2565)
!2565 = !{!2566, !2567}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2564, file: !158, line: 1409, baseType: !2528, size: 192)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !2564, file: !158, line: 1410, baseType: !2568, size: 64, offset: 192)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !2570, line: 27, size: 192, elements: !2571)
!2570 = !DIFile(filename: "./fixed-value.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2571 = !{!2572, !2573}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2569, file: !2570, line: 29, baseType: !2538, size: 128)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2569, file: !2570, line: 30, baseType: !5, size: 32, offset: 128)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !2492, file: !158, line: 3377, baseType: !2575, size: 256)
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !158, line: 1437, size: 256, elements: !2576)
!2576 = !{!2577, !2578}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2575, file: !158, line: 1438, baseType: !2528, size: 192)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2575, file: !158, line: 1439, baseType: !2490, size: 64, offset: 192)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2492, file: !158, line: 3378, baseType: !2580, size: 256)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !158, line: 1418, size: 256, elements: !2581)
!2581 = !{!2582, !2583, !2584}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2580, file: !158, line: 1419, baseType: !2528, size: 192)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2580, file: !158, line: 1420, baseType: !2396, size: 32, offset: 192)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2580, file: !158, line: 1421, baseType: !2585, size: 8, offset: 224)
!2585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2364, size: 8, elements: !2410)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !2492, file: !158, line: 3379, baseType: !2587, size: 320)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !158, line: 1428, size: 320, elements: !2588)
!2588 = !{!2589, !2590, !2591}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2587, file: !158, line: 1429, baseType: !2528, size: 192)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !2587, file: !158, line: 1430, baseType: !2490, size: 64, offset: 192)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !2587, file: !158, line: 1431, baseType: !2490, size: 64, offset: 256)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2492, file: !158, line: 3380, baseType: !2593, size: 320)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !158, line: 1460, size: 320, elements: !2594)
!2594 = !{!2595, !2596}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2593, file: !158, line: 1461, baseType: !2528, size: 192)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2593, file: !158, line: 1462, baseType: !2597, size: 128, offset: 192)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !2598, line: 31, size: 128, elements: !2599)
!2598 = !DIFile(filename: "./symtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2599 = !{!2600, !2604, !2605}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2597, file: !2598, line: 32, baseType: !2601, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2603)
!2603 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2597, file: !2598, line: 33, baseType: !7, size: 32, offset: 64)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !2597, file: !2598, line: 34, baseType: !7, size: 32, offset: 96)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !2492, file: !158, line: 3381, baseType: !2607, size: 384)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !158, line: 2507, size: 384, elements: !2608)
!2608 = !{!2609, !2610, !2615, !2616, !2617}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2607, file: !158, line: 2508, baseType: !2528, size: 192)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2607, file: !158, line: 2509, baseType: !2611, size: 32, offset: 192)
!2611 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !2612, line: 58, baseType: !2613)
!2612 = !DIFile(filename: "./input.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2613 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !2614, line: 44, baseType: !7)
!2614 = !DIFile(filename: "./line-map.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2607, file: !158, line: 2510, baseType: !7, size: 32, offset: 224)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2607, file: !158, line: 2511, baseType: !2490, size: 64, offset: 256)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2607, file: !158, line: 2512, baseType: !2490, size: 64, offset: 320)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !2492, file: !158, line: 3382, baseType: !2619, size: 896)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !158, line: 2652, size: 896, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2619, file: !158, line: 2653, baseType: !2607, size: 384)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2619, file: !158, line: 2654, baseType: !2490, size: 64, offset: 384)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2619, file: !158, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !2619, file: !158, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !2619, file: !158, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !2619, file: !158, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2619, file: !158, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !2619, file: !158, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !2619, file: !158, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !2619, file: !158, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2619, file: !158, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2619, file: !158, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2619, file: !158, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2619, file: !158, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2619, file: !158, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2619, file: !158, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2619, file: !158, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !2619, file: !158, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !2619, file: !158, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !2619, file: !158, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !2619, file: !158, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !2619, file: !158, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !2619, file: !158, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !2619, file: !158, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !2619, file: !158, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !2619, file: !158, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !2619, file: !158, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2619, file: !158, line: 2703, baseType: !7, size: 32, offset: 512)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2619, file: !158, line: 2705, baseType: !2490, size: 64, offset: 576)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !2619, file: !158, line: 2706, baseType: !2490, size: 64, offset: 640)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2619, file: !158, line: 2707, baseType: !2490, size: 64, offset: 704)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2619, file: !158, line: 2708, baseType: !2490, size: 64, offset: 768)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2619, file: !158, line: 2711, baseType: !2654, size: 64, offset: 832)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !158, line: 2711, flags: DIFlagFwdDecl)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !2492, file: !158, line: 3383, baseType: !2657, size: 960)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !158, line: 2756, size: 960, elements: !2658)
!2658 = !{!2659, !2660}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2657, file: !158, line: 2757, baseType: !2619, size: 896)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2657, file: !158, line: 2758, baseType: !2372, size: 64, offset: 896)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !2492, file: !158, line: 3384, baseType: !2662, size: 1472)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !158, line: 3114, size: 1472, elements: !2663)
!2663 = !{!2664, !2685, !2686, !2687, !2688}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2662, file: !158, line: 3115, baseType: !2665, size: 1216)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !158, line: 2984, size: 1216, elements: !2666)
!2666 = !{!2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2665, file: !158, line: 2985, baseType: !2657, size: 960)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !2665, file: !158, line: 2986, baseType: !2490, size: 64, offset: 960)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !2665, file: !158, line: 2987, baseType: !2490, size: 64, offset: 1024)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !2665, file: !158, line: 2988, baseType: !2490, size: 64, offset: 1088)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !2665, file: !158, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !2665, file: !158, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !2665, file: !158, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !2665, file: !158, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !2665, file: !158, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !2665, file: !158, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !2665, file: !158, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !2665, file: !158, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !2665, file: !158, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !2665, file: !158, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !2665, file: !158, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !2665, file: !158, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !2665, file: !158, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !2665, file: !158, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !2662, file: !158, line: 3117, baseType: !2490, size: 64, offset: 1216)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !2662, file: !158, line: 3119, baseType: !2490, size: 64, offset: 1280)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2662, file: !158, line: 3121, baseType: !2490, size: 64, offset: 1344)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !2662, file: !158, line: 3123, baseType: !2490, size: 64, offset: 1408)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !2492, file: !158, line: 3385, baseType: !2690, size: 1088)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !158, line: 2874, size: 1088, elements: !2691)
!2691 = !{!2692, !2693, !2694}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2690, file: !158, line: 2875, baseType: !2657, size: 960)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !2690, file: !158, line: 2876, baseType: !2372, size: 64, offset: 960)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2690, file: !158, line: 2877, baseType: !2695, size: 64, offset: 1024)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !158, line: 2856, flags: DIFlagFwdDecl)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !2492, file: !158, line: 3386, baseType: !2665, size: 1216)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !2492, file: !158, line: 3387, baseType: !2699, size: 1280)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !158, line: 3093, size: 1280, elements: !2700)
!2700 = !{!2701, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2699, file: !158, line: 3094, baseType: !2665, size: 1216)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2699, file: !158, line: 3095, baseType: !2695, size: 64, offset: 1216)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !2492, file: !158, line: 3388, baseType: !2704, size: 1216)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !158, line: 2824, size: 1216, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709, !2710, !2711}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2704, file: !158, line: 2825, baseType: !2619, size: 896)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2704, file: !158, line: 2827, baseType: !2490, size: 64, offset: 896)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !2704, file: !158, line: 2828, baseType: !2490, size: 64, offset: 960)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !2704, file: !158, line: 2829, baseType: !2490, size: 64, offset: 1024)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !2704, file: !158, line: 2830, baseType: !2490, size: 64, offset: 1088)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !2704, file: !158, line: 2831, baseType: !2490, size: 64, offset: 1152)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !2492, file: !158, line: 3389, baseType: !2713, size: 1024)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !158, line: 2850, size: 1024, elements: !2714)
!2714 = !{!2715, !2716, !2717}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2713, file: !158, line: 2851, baseType: !2657, size: 960)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !2713, file: !158, line: 2852, baseType: !2396, size: 32, offset: 960)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !2713, file: !158, line: 2853, baseType: !2396, size: 32, offset: 992)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !2492, file: !158, line: 3390, baseType: !2719, size: 1024)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !158, line: 2857, size: 1024, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2719, file: !158, line: 2858, baseType: !2657, size: 960)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2719, file: !158, line: 2859, baseType: !2695, size: 64, offset: 960)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !2492, file: !158, line: 3391, baseType: !2724, size: 960)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !158, line: 2862, size: 960, elements: !2725)
!2725 = !{!2726}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2724, file: !158, line: 2863, baseType: !2657, size: 960)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !2492, file: !158, line: 3392, baseType: !2728, size: 1472)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !158, line: 3304, size: 1472, elements: !2729)
!2729 = !{!2730}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2728, file: !158, line: 3305, baseType: !2662, size: 1472)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !2492, file: !158, line: 3393, baseType: !2732, size: 1792)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !158, line: 3248, size: 1792, elements: !2733)
!2733 = !{!2734, !2735, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2732, file: !158, line: 3249, baseType: !2662, size: 1472)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2732, file: !158, line: 3251, baseType: !2736, size: 64, offset: 1472)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !2738, line: 463, size: 1152, elements: !2739)
!2738 = !DIFile(filename: "./function.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2739 = !{!2740, !2901, !3005, !3006, !3009, !3012, !3013, !3014, !3015, !3016, !3017, !3041, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !2737, file: !2738, line: 464, baseType: !2741, size: 64)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !2743)
!2743 = !{!2744, !2793, !2806, !2820, !2869, !2882}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !2742, file: !135, line: 197, baseType: !2745, size: 64)
!2745 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !2746)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !2748)
!2748 = !{!2749, !2750, !2751, !2752, !2753, !2754, !2781, !2790, !2791, !2792}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !2747, file: !135, line: 119, baseType: !2746, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2747, file: !135, line: 122, baseType: !2746, size: 64, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !2747, file: !135, line: 123, baseType: !2746, size: 64, offset: 128)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2747, file: !135, line: 126, baseType: !2396, size: 32, offset: 192)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2747, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2747, file: !135, line: 165, baseType: !2755, size: 192, offset: 256)
!2755 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !2756)
!2756 = !{!2757, !2770, !2776}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !2755, file: !135, line: 137, baseType: !2758, size: 128)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !2759)
!2759 = !{!2760, !2769}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !2758, file: !135, line: 135, baseType: !2761, size: 64)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !2763)
!2763 = !{!2764, !2765, !2766, !2767, !2768}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !2762, file: !135, line: 96, baseType: !2761, size: 64)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !2762, file: !135, line: 97, baseType: !2761, size: 64, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !2762, file: !135, line: 101, baseType: !2490, size: 64, offset: 128)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !2762, file: !135, line: 106, baseType: !2490, size: 64, offset: 192)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2762, file: !135, line: 111, baseType: !2490, size: 64, offset: 256)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !2758, file: !135, line: 136, baseType: !2761, size: 64, offset: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !2755, file: !135, line: 151, baseType: !2771, size: 192)
!2771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !2772)
!2772 = !{!2773, !2774, !2775}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !2771, file: !135, line: 141, baseType: !2490, size: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2771, file: !135, line: 145, baseType: !2490, size: 64, offset: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2771, file: !135, line: 150, baseType: !2396, size: 32, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !2755, file: !135, line: 164, baseType: !2777, size: 128)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !2778)
!2778 = !{!2779, !2780}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !2777, file: !135, line: 161, baseType: !2490, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !2777, file: !135, line: 163, baseType: !2611, size: 32, offset: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !2747, file: !135, line: 168, baseType: !2782, size: 64, offset: 448)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !2784)
!2784 = !{!2785, !2786, !2787, !2788, !2789}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !2783, file: !135, line: 70, baseType: !2782, size: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !2783, file: !135, line: 73, baseType: !2746, size: 64, offset: 64)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !2783, file: !135, line: 78, baseType: !2490, size: 64, offset: 128)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !2783, file: !135, line: 85, baseType: !2372, size: 64, offset: 192)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2783, file: !135, line: 88, baseType: !2396, size: 32, offset: 256)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !2747, file: !135, line: 173, baseType: !2372, size: 64, offset: 512)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !2747, file: !135, line: 173, baseType: !2372, size: 64, offset: 576)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !2747, file: !135, line: 177, baseType: !2603, size: 8, offset: 640)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !2742, file: !135, line: 200, baseType: !2794, size: 64, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 64)
!2795 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !2796)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !2797)
!2797 = !{!2798}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2796, file: !135, line: 185, baseType: !2799, size: 128)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !2800)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !2801)
!2801 = !{!2802, !2803, !2804}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2800, file: !135, line: 184, baseType: !7, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2800, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2800, file: !135, line: 184, baseType: !2805, size: 64, offset: 64)
!2805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2745, size: 64, elements: !2410)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !2742, file: !135, line: 203, baseType: !2807, size: 64, offset: 128)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!2808 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !2809)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !2810)
!2810 = !{!2811}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2809, file: !135, line: 189, baseType: !2812, size: 128)
!2812 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !2813)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !2814)
!2814 = !{!2815, !2816, !2817}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2813, file: !135, line: 188, baseType: !7, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2813, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2813, file: !135, line: 188, baseType: !2818, size: 64, offset: 64)
!2818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2819, size: 64, elements: !2410)
!2819 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !2782)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !2742, file: !135, line: 207, baseType: !2821, size: 64, offset: 192)
!2821 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !2822, line: 144, baseType: !2823)
!2822 = !DIFile(filename: "./include/hashtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !2822, line: 100, size: 896, elements: !2825)
!2825 = !{!2826, !2834, !2839, !2841, !2843, !2846, !2847, !2848, !2849, !2850, !2855, !2857, !2858, !2863, !2868}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !2824, file: !2822, line: 102, baseType: !2827, size: 64)
!2827 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !2822, line: 52, baseType: !2828)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = !DISubroutineType(types: !2830)
!2830 = !{!2831, !2832}
!2831 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !2822, line: 47, baseType: !7)
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !2824, file: !2822, line: 105, baseType: !2835, size: 64, offset: 64)
!2835 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !2822, line: 59, baseType: !2836)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{!2396, !2832, !2832}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !2824, file: !2822, line: 108, baseType: !2840, size: 64, offset: 128)
!2840 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !2822, line: 63, baseType: !2360)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2824, file: !2822, line: 111, baseType: !2842, size: 64, offset: 192)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2824, file: !2822, line: 114, baseType: !2844, size: 64, offset: 256)
!2844 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2845, line: 46, baseType: !2445)
!2845 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !2824, file: !2822, line: 117, baseType: !2844, size: 64, offset: 320)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !2824, file: !2822, line: 120, baseType: !2844, size: 64, offset: 384)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !2824, file: !2822, line: 124, baseType: !7, size: 32, offset: 448)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !2824, file: !2822, line: 128, baseType: !7, size: 32, offset: 480)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !2824, file: !2822, line: 131, baseType: !2851, size: 64, offset: 512)
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !2822, line: 75, baseType: !2852)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!2358, !2844, !2844}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !2824, file: !2822, line: 132, baseType: !2856, size: 64, offset: 576)
!2856 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !2822, line: 78, baseType: !2360)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !2824, file: !2822, line: 135, baseType: !2358, size: 64, offset: 640)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !2824, file: !2822, line: 136, baseType: !2859, size: 64, offset: 704)
!2859 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !2822, line: 82, baseType: !2860)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!2358, !2358, !2844, !2844}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !2824, file: !2822, line: 137, baseType: !2864, size: 64, offset: 768)
!2864 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !2822, line: 83, baseType: !2865)
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 64)
!2866 = !DISubroutineType(types: !2867)
!2867 = !{null, !2358, !2358}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !2824, file: !2822, line: 141, baseType: !7, size: 32, offset: 832)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !2742, file: !135, line: 211, baseType: !2870, size: 64, offset: 256)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !158, line: 183, baseType: !2872)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !158, line: 183, size: 128, elements: !2873)
!2873 = !{!2874}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2872, file: !158, line: 183, baseType: !2875, size: 128)
!2875 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !158, line: 182, baseType: !2876)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !158, line: 182, size: 128, elements: !2877)
!2877 = !{!2878, !2879, !2880}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2876, file: !158, line: 182, baseType: !7, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2876, file: !158, line: 182, baseType: !7, size: 32, offset: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2876, file: !158, line: 182, baseType: !2881, size: 64, offset: 64)
!2881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2490, size: 64, elements: !2410)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !2742, file: !135, line: 220, baseType: !2883, size: 64, offset: 320)
!2883 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !2884)
!2884 = !{!2885, !2886}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !2883, file: !135, line: 218, baseType: !2870, size: 64)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !2883, file: !135, line: 219, baseType: !2887, size: 64)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !2889, line: 29, baseType: !2890)
!2889 = !DIFile(filename: "./vecprim.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !2889, line: 29, size: 96, elements: !2891)
!2891 = !{!2892}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2890, file: !2889, line: 29, baseType: !2893, size: 96)
!2893 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !2889, line: 27, baseType: !2894)
!2894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !2889, line: 27, size: 96, elements: !2895)
!2895 = !{!2896, !2897, !2898}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2894, file: !2889, line: 27, baseType: !7, size: 32)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2894, file: !2889, line: 27, baseType: !7, size: 32, offset: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2894, file: !2889, line: 27, baseType: !2899, size: 8, offset: 64)
!2899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2900, size: 8, elements: !2410)
!2900 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !2889, line: 26, baseType: !2603)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !2737, file: !2738, line: 467, baseType: !2902, size: 64, offset: 64)
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2903, size: 64)
!2903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !142, line: 374, size: 640, elements: !2904)
!2904 = !{!2905, !2980, !2981, !2994, !2995, !2996, !2997, !2998, !2999, !3001, !3003, !3004}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !2903, file: !142, line: 377, baseType: !2906, size: 64)
!2906 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !2373, line: 111, baseType: !2907)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !142, line: 217, size: 832, elements: !2909)
!2909 = !{!2910, !2945, !2946, !2947, !2950, !2954, !2955, !2956, !2974, !2975, !2976, !2977, !2978, !2979}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !2908, file: !142, line: 219, baseType: !2911, size: 64)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2912 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !142, line: 151, baseType: !2913)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !142, line: 151, size: 128, elements: !2914)
!2914 = !{!2915}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2913, file: !142, line: 151, baseType: !2916, size: 128)
!2916 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !142, line: 150, baseType: !2917)
!2917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !142, line: 150, size: 128, elements: !2918)
!2918 = !{!2919, !2920, !2921}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2917, file: !142, line: 150, baseType: !7, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2917, file: !142, line: 150, baseType: !7, size: 32, offset: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2917, file: !142, line: 150, baseType: !2922, size: 64, offset: 64)
!2922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2923, size: 64, elements: !2410)
!2923 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !2373, line: 108, baseType: !2924)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !142, line: 122, size: 512, elements: !2926)
!2926 = !{!2927, !2928, !2929, !2937, !2938, !2939, !2940, !2941, !2942, !2943}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2925, file: !142, line: 124, baseType: !2907, size: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !2925, file: !142, line: 125, baseType: !2907, size: 64, offset: 64)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !2925, file: !142, line: 131, baseType: !2930, size: 64, offset: 128)
!2930 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !142, line: 128, size: 64, elements: !2931)
!2931 = !{!2932, !2936}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2930, file: !142, line: 129, baseType: !2933, size: 64)
!2933 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !2373, line: 66, baseType: !2934)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !2373, line: 65, flags: DIFlagFwdDecl)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2930, file: !142, line: 130, baseType: !2372, size: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2925, file: !142, line: 134, baseType: !2358, size: 64, offset: 192)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !2925, file: !142, line: 137, baseType: !2490, size: 64, offset: 256)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !2925, file: !142, line: 138, baseType: !2611, size: 32, offset: 320)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !2925, file: !142, line: 142, baseType: !7, size: 32, offset: 352)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2925, file: !142, line: 144, baseType: !2396, size: 32, offset: 384)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !2925, file: !142, line: 145, baseType: !2396, size: 32, offset: 416)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2925, file: !142, line: 146, baseType: !2944, size: 64, offset: 448)
!2944 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !142, line: 119, baseType: !2359)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !2908, file: !142, line: 220, baseType: !2911, size: 64, offset: 64)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2908, file: !142, line: 223, baseType: !2358, size: 64, offset: 128)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !2908, file: !142, line: 226, baseType: !2948, size: 64, offset: 192)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 185, flags: DIFlagFwdDecl)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !2908, file: !142, line: 229, baseType: !2951, size: 128, offset: 256)
!2951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2952, size: 128, elements: !2446)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !142, line: 229, flags: DIFlagFwdDecl)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !2908, file: !142, line: 232, baseType: !2907, size: 64, offset: 384)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !2908, file: !142, line: 233, baseType: !2907, size: 64, offset: 448)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !2908, file: !142, line: 238, baseType: !2957, size: 64, offset: 512)
!2957 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !142, line: 235, size: 64, elements: !2958)
!2958 = !{!2959, !2965}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !2957, file: !142, line: 236, baseType: !2960, size: 64)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !142, line: 273, size: 128, elements: !2962)
!2962 = !{!2963, !2964}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2961, file: !142, line: 275, baseType: !2933, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !2961, file: !142, line: 278, baseType: !2933, size: 64, offset: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2957, file: !142, line: 237, baseType: !2966, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !142, line: 259, size: 320, elements: !2968)
!2968 = !{!2969, !2970, !2971, !2972, !2973}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !2967, file: !142, line: 261, baseType: !2372, size: 64)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !2967, file: !142, line: 262, baseType: !2372, size: 64, offset: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2967, file: !142, line: 266, baseType: !2372, size: 64, offset: 128)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !2967, file: !142, line: 267, baseType: !2372, size: 64, offset: 192)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2967, file: !142, line: 270, baseType: !2396, size: 32, offset: 256)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2908, file: !142, line: 241, baseType: !2944, size: 64, offset: 576)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2908, file: !142, line: 244, baseType: !2396, size: 32, offset: 640)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !2908, file: !142, line: 247, baseType: !2396, size: 32, offset: 672)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2908, file: !142, line: 250, baseType: !2396, size: 32, offset: 704)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !2908, file: !142, line: 253, baseType: !2396, size: 32, offset: 736)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2908, file: !142, line: 256, baseType: !2396, size: 32, offset: 768)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !2903, file: !142, line: 378, baseType: !2906, size: 64, offset: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !2903, file: !142, line: 381, baseType: !2982, size: 64, offset: 128)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !142, line: 282, baseType: !2984)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !142, line: 282, size: 128, elements: !2985)
!2985 = !{!2986}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2984, file: !142, line: 282, baseType: !2987, size: 128)
!2987 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !142, line: 281, baseType: !2988)
!2988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !142, line: 281, size: 128, elements: !2989)
!2989 = !{!2990, !2991, !2992}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2988, file: !142, line: 281, baseType: !7, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2988, file: !142, line: 281, baseType: !7, size: 32, offset: 32)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2988, file: !142, line: 281, baseType: !2993, size: 64, offset: 64)
!2993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2906, size: 64, elements: !2410)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !2903, file: !142, line: 384, baseType: !2396, size: 32, offset: 192)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !2903, file: !142, line: 387, baseType: !2396, size: 32, offset: 224)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !2903, file: !142, line: 390, baseType: !2396, size: 32, offset: 256)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !2903, file: !142, line: 394, baseType: !2982, size: 64, offset: 320)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !2903, file: !142, line: 396, baseType: !141, size: 32, offset: 384)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !2903, file: !142, line: 399, baseType: !3000, size: 64, offset: 416)
!3000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 64, elements: !2446)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !2903, file: !142, line: 402, baseType: !3002, size: 64, offset: 480)
!3002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !2446)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !2903, file: !142, line: 406, baseType: !2396, size: 32, offset: 544)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !2903, file: !142, line: 409, baseType: !2396, size: 32, offset: 576)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !2737, file: !2738, line: 470, baseType: !2934, size: 64, offset: 128)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !2737, file: !2738, line: 473, baseType: !3007, size: 64, offset: 192)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3008 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !2738, line: 166, flags: DIFlagFwdDecl)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !2737, file: !2738, line: 476, baseType: !3010, size: 64, offset: 256)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !2738, line: 476, flags: DIFlagFwdDecl)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !2737, file: !2738, line: 479, baseType: !2821, size: 64, offset: 320)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2737, file: !2738, line: 484, baseType: !2490, size: 64, offset: 384)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !2737, file: !2738, line: 488, baseType: !2490, size: 64, offset: 448)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !2737, file: !2738, line: 493, baseType: !2490, size: 64, offset: 512)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !2737, file: !2738, line: 496, baseType: !2490, size: 64, offset: 576)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2737, file: !2738, line: 501, baseType: !3018, size: 64, offset: 640)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !153, line: 2355, size: 576, elements: !3020)
!3020 = !{!3021, !3024, !3025, !3026, !3027, !3029, !3030, !3035, !3036, !3037, !3038, !3039, !3040}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !3019, file: !153, line: 2356, baseType: !3022, size: 64)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 64)
!3023 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !153, line: 2356, flags: DIFlagFwdDecl)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !3019, file: !153, line: 2357, baseType: !2399, size: 64, offset: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !3019, file: !153, line: 2358, baseType: !2396, size: 32, offset: 128)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !3019, file: !153, line: 2359, baseType: !2396, size: 32, offset: 160)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !3019, file: !153, line: 2360, baseType: !3028, size: 128, offset: 192)
!3028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2396, size: 128, elements: !2470)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !3019, file: !153, line: 2364, baseType: !2396, size: 32, offset: 320)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !3019, file: !153, line: 2367, baseType: !3031, size: 128, offset: 384)
!3031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !153, line: 2349, size: 128, elements: !3032)
!3032 = !{!3033, !3034}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3031, file: !153, line: 2351, baseType: !2372, size: 64)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3031, file: !153, line: 2352, baseType: !2359, size: 64, offset: 64)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !3019, file: !153, line: 2371, baseType: !152, size: 32, offset: 512)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !3019, file: !153, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !3019, file: !153, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !3019, file: !153, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !3019, file: !153, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !3019, file: !153, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !2737, file: !2738, line: 504, baseType: !3042, size: 64, offset: 704)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !2738, line: 504, flags: DIFlagFwdDecl)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !2737, file: !2738, line: 507, baseType: !2821, size: 64, offset: 768)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !2737, file: !2738, line: 510, baseType: !2396, size: 32, offset: 832)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !2737, file: !2738, line: 513, baseType: !2396, size: 32, offset: 864)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !2737, file: !2738, line: 516, baseType: !2611, size: 32, offset: 896)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !2737, file: !2738, line: 519, baseType: !2611, size: 32, offset: 928)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !2737, file: !2738, line: 522, baseType: !7, size: 32, offset: 960)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !2737, file: !2738, line: 523, baseType: !7, size: 32, offset: 992)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !2737, file: !2738, line: 528, baseType: !2399, size: 64, offset: 1024)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !2737, file: !2738, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !2737, file: !2738, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !2737, file: !2738, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !2737, file: !2738, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !2737, file: !2738, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !2737, file: !2738, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !2737, file: !2738, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !2737, file: !2738, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !2737, file: !2738, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !2737, file: !2738, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !2737, file: !2738, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !2737, file: !2738, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !2737, file: !2738, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !2737, file: !2738, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !2737, file: !2738, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !2737, file: !2738, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2732, file: !158, line: 3254, baseType: !2490, size: 64, offset: 1536)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !2732, file: !158, line: 3257, baseType: !2490, size: 64, offset: 1600)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !2732, file: !158, line: 3258, baseType: !2490, size: 64, offset: 1664)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !2732, file: !158, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !2732, file: !158, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !2732, file: !158, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !2732, file: !158, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !2732, file: !158, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !2732, file: !158, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !2732, file: !158, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !2732, file: !158, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !2732, file: !158, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !2732, file: !158, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !2732, file: !158, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !2732, file: !158, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !2732, file: !158, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !2732, file: !158, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !2732, file: !158, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2732, file: !158, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !2732, file: !158, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !2732, file: !158, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2492, file: !158, line: 3394, baseType: !3090, size: 1344)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !158, line: 2279, size: 1344, elements: !3091)
!3091 = !{!3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3117, !3118, !3119, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3090, file: !158, line: 2280, baseType: !2528, size: 192)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3090, file: !158, line: 2281, baseType: !2490, size: 64, offset: 192)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3090, file: !158, line: 2282, baseType: !2490, size: 64, offset: 256)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !3090, file: !158, line: 2283, baseType: !2490, size: 64, offset: 320)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !3090, file: !158, line: 2284, baseType: !2490, size: 64, offset: 384)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3090, file: !158, line: 2285, baseType: !7, size: 32, offset: 448)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !3090, file: !158, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !3090, file: !158, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !3090, file: !158, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !3090, file: !158, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !3090, file: !158, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !3090, file: !158, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3090, file: !158, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !3090, file: !158, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !3090, file: !158, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !3090, file: !158, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !3090, file: !158, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !3090, file: !158, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !3090, file: !158, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !3090, file: !158, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !3090, file: !158, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3090, file: !158, line: 2305, baseType: !7, size: 32, offset: 512)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !3090, file: !158, line: 2306, baseType: !3115, size: 32, offset: 544)
!3115 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !3116, line: 31, baseType: !2396)
!3116 = !DIFile(filename: "./alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !3090, file: !158, line: 2307, baseType: !2490, size: 64, offset: 576)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !3090, file: !158, line: 2308, baseType: !2490, size: 64, offset: 640)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !3090, file: !158, line: 2314, baseType: !3120, size: 64, offset: 704)
!3120 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !158, line: 2309, size: 64, elements: !3121)
!3121 = !{!3122, !3123, !3124}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !3120, file: !158, line: 2310, baseType: !2396, size: 32)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3120, file: !158, line: 2311, baseType: !2399, size: 64)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !3120, file: !158, line: 2312, baseType: !3125, size: 64)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !158, line: 2277, flags: DIFlagFwdDecl)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3090, file: !158, line: 2315, baseType: !2490, size: 64, offset: 768)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !3090, file: !158, line: 2316, baseType: !2490, size: 64, offset: 832)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !3090, file: !158, line: 2317, baseType: !2490, size: 64, offset: 896)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !3090, file: !158, line: 2318, baseType: !2490, size: 64, offset: 960)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !3090, file: !158, line: 2319, baseType: !2490, size: 64, offset: 1024)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !3090, file: !158, line: 2320, baseType: !2490, size: 64, offset: 1088)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3090, file: !158, line: 2321, baseType: !2490, size: 64, offset: 1152)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !3090, file: !158, line: 2322, baseType: !2490, size: 64, offset: 1216)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !3090, file: !158, line: 2324, baseType: !3136, size: 64, offset: 1280)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !158, line: 2324, flags: DIFlagFwdDecl)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2492, file: !158, line: 3395, baseType: !3139, size: 320)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !158, line: 1469, size: 320, elements: !3140)
!3140 = !{!3141, !3142, !3143}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3139, file: !158, line: 1470, baseType: !2528, size: 192)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !3139, file: !158, line: 1471, baseType: !2490, size: 64, offset: 192)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3139, file: !158, line: 1472, baseType: !2490, size: 64, offset: 256)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2492, file: !158, line: 3396, baseType: !3145, size: 320)
!3145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !158, line: 1482, size: 320, elements: !3146)
!3146 = !{!3147, !3148, !3149}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3145, file: !158, line: 1483, baseType: !2528, size: 192)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3145, file: !158, line: 1484, baseType: !2396, size: 32, offset: 192)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3145, file: !158, line: 1485, baseType: !2881, size: 64, offset: 256)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2492, file: !158, line: 3397, baseType: !3151, size: 384)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !158, line: 1829, size: 384, elements: !3152)
!3152 = !{!3153, !3154, !3155, !3156}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3151, file: !158, line: 1830, baseType: !2528, size: 192)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3151, file: !158, line: 1831, baseType: !2611, size: 32, offset: 192)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3151, file: !158, line: 1832, baseType: !2490, size: 64, offset: 256)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !3151, file: !158, line: 1835, baseType: !2881, size: 64, offset: 320)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !2492, file: !158, line: 3398, baseType: !3158, size: 704)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !158, line: 1898, size: 704, elements: !3159)
!3159 = !{!3160, !3161, !3162, !3166, !3167, !3170}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3158, file: !158, line: 1899, baseType: !2528, size: 192)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !3158, file: !158, line: 1902, baseType: !2490, size: 64, offset: 192)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !3158, file: !158, line: 1905, baseType: !3163, size: 64, offset: 256)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !2373, line: 58, baseType: !3164)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !2373, line: 57, flags: DIFlagFwdDecl)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3158, file: !158, line: 1908, baseType: !7, size: 32, offset: 320)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !3158, file: !158, line: 1911, baseType: !3168, size: 64, offset: 384)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 64)
!3169 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !158, line: 1876, flags: DIFlagFwdDecl)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !3158, file: !158, line: 1914, baseType: !3171, size: 256, offset: 448)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !158, line: 1883, size: 256, elements: !3172)
!3172 = !{!3173, !3175, !3176, !3181}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3171, file: !158, line: 1884, baseType: !3174, size: 64)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3171, file: !158, line: 1885, baseType: !3174, size: 64, offset: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3171, file: !158, line: 1891, baseType: !3177, size: 64, offset: 128)
!3177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3171, file: !158, line: 1891, size: 64, elements: !3178)
!3178 = !{!3179, !3180}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !3177, file: !158, line: 1891, baseType: !3163, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !3177, file: !158, line: 1891, baseType: !2490, size: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !3171, file: !158, line: 1892, baseType: !3182, size: 64, offset: 192)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2492, file: !158, line: 3399, baseType: !3184, size: 704)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !158, line: 2008, size: 704, elements: !3185)
!3185 = !{!3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3184, file: !158, line: 2009, baseType: !2528, size: 192)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !3184, file: !158, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !3184, file: !158, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3184, file: !158, line: 2014, baseType: !2611, size: 32, offset: 224)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !3184, file: !158, line: 2016, baseType: !2490, size: 64, offset: 256)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !3184, file: !158, line: 2017, baseType: !2870, size: 64, offset: 320)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !3184, file: !158, line: 2019, baseType: !2490, size: 64, offset: 384)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !3184, file: !158, line: 2020, baseType: !2490, size: 64, offset: 448)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !3184, file: !158, line: 2021, baseType: !2490, size: 64, offset: 512)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !3184, file: !158, line: 2022, baseType: !2490, size: 64, offset: 576)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !3184, file: !158, line: 2023, baseType: !2490, size: 64, offset: 640)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2492, file: !158, line: 3400, baseType: !3198, size: 832)
!3198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !158, line: 2430, size: 832, elements: !3199)
!3199 = !{!3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3198, file: !158, line: 2431, baseType: !2528, size: 192)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3198, file: !158, line: 2433, baseType: !2490, size: 64, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !3198, file: !158, line: 2434, baseType: !2490, size: 64, offset: 256)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !3198, file: !158, line: 2435, baseType: !2490, size: 64, offset: 320)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !3198, file: !158, line: 2436, baseType: !2490, size: 64, offset: 384)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !3198, file: !158, line: 2437, baseType: !2870, size: 64, offset: 448)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !3198, file: !158, line: 2438, baseType: !2490, size: 64, offset: 512)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !3198, file: !158, line: 2440, baseType: !2490, size: 64, offset: 576)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !3198, file: !158, line: 2441, baseType: !2490, size: 64, offset: 640)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !3198, file: !158, line: 2443, baseType: !3210, size: 128, offset: 704)
!3210 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !158, line: 182, baseType: !3211)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !158, line: 182, size: 128, elements: !3212)
!3212 = !{!3213}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3211, file: !158, line: 182, baseType: !2875, size: 128)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !2492, file: !158, line: 3401, baseType: !3215, size: 320)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !158, line: 3327, size: 320, elements: !3216)
!3216 = !{!3217, !3218, !3225}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3215, file: !158, line: 3329, baseType: !2528, size: 192)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3215, file: !158, line: 3330, baseType: !3219, size: 64, offset: 192)
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !158, line: 3320, size: 192, elements: !3221)
!3221 = !{!3222, !3223, !3224}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3220, file: !158, line: 3322, baseType: !3219, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3220, file: !158, line: 3323, baseType: !3219, size: 64, offset: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !3220, file: !158, line: 3324, baseType: !2490, size: 64, offset: 128)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3215, file: !158, line: 3331, baseType: !3219, size: 64, offset: 256)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2492, file: !158, line: 3402, baseType: !3227, size: 256)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !158, line: 1540, size: 256, elements: !3228)
!3228 = !{!3229, !3230}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3227, file: !158, line: 1541, baseType: !2528, size: 192)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !3227, file: !158, line: 1542, baseType: !3231, size: 64, offset: 192)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !158, line: 1538, baseType: !3233)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !158, line: 1538, size: 192, elements: !3234)
!3234 = !{!3235}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3233, file: !158, line: 1538, baseType: !3236, size: 192)
!3236 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !158, line: 1537, baseType: !3237)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !158, line: 1537, size: 192, elements: !3238)
!3238 = !{!3239, !3240, !3241}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3237, file: !158, line: 1537, baseType: !7, size: 32)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3237, file: !158, line: 1537, baseType: !7, size: 32, offset: 32)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3237, file: !158, line: 1537, baseType: !3242, size: 128, offset: 64)
!3242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3243, size: 128, elements: !2410)
!3243 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !158, line: 1535, baseType: !3244)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !158, line: 1532, size: 128, elements: !3245)
!3245 = !{!3246, !3247}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3244, file: !158, line: 1533, baseType: !2490, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3244, file: !158, line: 1534, baseType: !2490, size: 64, offset: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !2492, file: !158, line: 3403, baseType: !3249, size: 512)
!3249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !158, line: 1938, size: 512, elements: !3250)
!3250 = !{!3251, !3252, !3253, !3254, !3260, !3261, !3262}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3249, file: !158, line: 1939, baseType: !2528, size: 192)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3249, file: !158, line: 1940, baseType: !2611, size: 32, offset: 192)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3249, file: !158, line: 1941, baseType: !157, size: 32, offset: 224)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !3249, file: !158, line: 1946, baseType: !3255, size: 32, offset: 256)
!3255 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !158, line: 1942, size: 32, elements: !3256)
!3256 = !{!3257, !3258, !3259}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !3255, file: !158, line: 1943, baseType: !176, size: 32)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !3255, file: !158, line: 1944, baseType: !183, size: 32)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !3255, file: !158, line: 1945, baseType: !190, size: 32)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !3249, file: !158, line: 1950, baseType: !2933, size: 64, offset: 320)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !3249, file: !158, line: 1951, baseType: !2933, size: 64, offset: 384)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3249, file: !158, line: 1953, baseType: !2881, size: 64, offset: 448)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !2492, file: !158, line: 3404, baseType: !3264, size: 1664)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !158, line: 3337, size: 1664, elements: !3265)
!3265 = !{!3266, !3267}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3264, file: !158, line: 3338, baseType: !2528, size: 192)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !3264, file: !158, line: 3341, baseType: !3268, size: 1472, offset: 192)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !3269, line: 410, size: 1472, elements: !3270)
!3269 = !DIFile(filename: "./options.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!3270 = !{!3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !3268, file: !3269, line: 412, baseType: !2396, size: 32)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !3268, file: !3269, line: 413, baseType: !2396, size: 32, offset: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !3268, file: !3269, line: 414, baseType: !2396, size: 32, offset: 64)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !3268, file: !3269, line: 415, baseType: !2396, size: 32, offset: 96)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !3268, file: !3269, line: 416, baseType: !2396, size: 32, offset: 128)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !3268, file: !3269, line: 417, baseType: !2396, size: 32, offset: 160)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !3268, file: !3269, line: 418, baseType: !2603, size: 8, offset: 192)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !3268, file: !3269, line: 419, baseType: !2603, size: 8, offset: 200)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !3268, file: !3269, line: 420, baseType: !3280, size: 8, offset: 208)
!3280 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !3268, file: !3269, line: 421, baseType: !3280, size: 8, offset: 216)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !3268, file: !3269, line: 422, baseType: !3280, size: 8, offset: 224)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !3268, file: !3269, line: 423, baseType: !3280, size: 8, offset: 232)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !3268, file: !3269, line: 424, baseType: !3280, size: 8, offset: 240)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !3268, file: !3269, line: 425, baseType: !3280, size: 8, offset: 248)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !3268, file: !3269, line: 426, baseType: !3280, size: 8, offset: 256)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !3268, file: !3269, line: 427, baseType: !3280, size: 8, offset: 264)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !3268, file: !3269, line: 428, baseType: !3280, size: 8, offset: 272)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !3268, file: !3269, line: 429, baseType: !3280, size: 8, offset: 280)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !3268, file: !3269, line: 430, baseType: !3280, size: 8, offset: 288)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !3268, file: !3269, line: 431, baseType: !3280, size: 8, offset: 296)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !3268, file: !3269, line: 432, baseType: !3280, size: 8, offset: 304)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !3268, file: !3269, line: 433, baseType: !3280, size: 8, offset: 312)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !3268, file: !3269, line: 434, baseType: !3280, size: 8, offset: 320)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !3268, file: !3269, line: 435, baseType: !3280, size: 8, offset: 328)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !3268, file: !3269, line: 436, baseType: !3280, size: 8, offset: 336)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !3268, file: !3269, line: 437, baseType: !3280, size: 8, offset: 344)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !3268, file: !3269, line: 438, baseType: !3280, size: 8, offset: 352)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !3268, file: !3269, line: 439, baseType: !3280, size: 8, offset: 360)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !3268, file: !3269, line: 440, baseType: !3280, size: 8, offset: 368)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !3268, file: !3269, line: 441, baseType: !3280, size: 8, offset: 376)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !3268, file: !3269, line: 442, baseType: !3280, size: 8, offset: 384)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !3268, file: !3269, line: 443, baseType: !3280, size: 8, offset: 392)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !3268, file: !3269, line: 444, baseType: !3280, size: 8, offset: 400)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !3268, file: !3269, line: 445, baseType: !3280, size: 8, offset: 408)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !3268, file: !3269, line: 446, baseType: !3280, size: 8, offset: 416)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !3268, file: !3269, line: 447, baseType: !3280, size: 8, offset: 424)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !3268, file: !3269, line: 448, baseType: !3280, size: 8, offset: 432)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !3268, file: !3269, line: 449, baseType: !3280, size: 8, offset: 440)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !3268, file: !3269, line: 450, baseType: !3280, size: 8, offset: 448)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !3268, file: !3269, line: 451, baseType: !3280, size: 8, offset: 456)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !3268, file: !3269, line: 452, baseType: !3280, size: 8, offset: 464)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !3268, file: !3269, line: 453, baseType: !3280, size: 8, offset: 472)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !3268, file: !3269, line: 454, baseType: !3280, size: 8, offset: 480)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !3268, file: !3269, line: 455, baseType: !3280, size: 8, offset: 488)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !3268, file: !3269, line: 456, baseType: !3280, size: 8, offset: 496)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !3268, file: !3269, line: 457, baseType: !3280, size: 8, offset: 504)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !3268, file: !3269, line: 458, baseType: !3280, size: 8, offset: 512)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !3268, file: !3269, line: 459, baseType: !3280, size: 8, offset: 520)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !3268, file: !3269, line: 460, baseType: !3280, size: 8, offset: 528)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !3268, file: !3269, line: 461, baseType: !3280, size: 8, offset: 536)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !3268, file: !3269, line: 462, baseType: !3280, size: 8, offset: 544)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !3268, file: !3269, line: 463, baseType: !3280, size: 8, offset: 552)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !3268, file: !3269, line: 464, baseType: !3280, size: 8, offset: 560)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !3268, file: !3269, line: 465, baseType: !3280, size: 8, offset: 568)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !3268, file: !3269, line: 466, baseType: !3280, size: 8, offset: 576)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !3268, file: !3269, line: 467, baseType: !3280, size: 8, offset: 584)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !3268, file: !3269, line: 468, baseType: !3280, size: 8, offset: 592)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !3268, file: !3269, line: 469, baseType: !3280, size: 8, offset: 600)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !3268, file: !3269, line: 470, baseType: !3280, size: 8, offset: 608)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !3268, file: !3269, line: 471, baseType: !3280, size: 8, offset: 616)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !3268, file: !3269, line: 472, baseType: !3280, size: 8, offset: 624)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !3268, file: !3269, line: 473, baseType: !3280, size: 8, offset: 632)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !3268, file: !3269, line: 474, baseType: !3280, size: 8, offset: 640)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !3268, file: !3269, line: 475, baseType: !3280, size: 8, offset: 648)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !3268, file: !3269, line: 476, baseType: !3280, size: 8, offset: 656)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !3268, file: !3269, line: 477, baseType: !3280, size: 8, offset: 664)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !3268, file: !3269, line: 478, baseType: !3280, size: 8, offset: 672)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !3268, file: !3269, line: 479, baseType: !3280, size: 8, offset: 680)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !3268, file: !3269, line: 480, baseType: !3280, size: 8, offset: 688)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !3268, file: !3269, line: 481, baseType: !3280, size: 8, offset: 696)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !3268, file: !3269, line: 482, baseType: !3280, size: 8, offset: 704)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !3268, file: !3269, line: 483, baseType: !3280, size: 8, offset: 712)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !3268, file: !3269, line: 484, baseType: !3280, size: 8, offset: 720)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !3268, file: !3269, line: 485, baseType: !3280, size: 8, offset: 728)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !3268, file: !3269, line: 486, baseType: !3280, size: 8, offset: 736)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !3268, file: !3269, line: 487, baseType: !3280, size: 8, offset: 744)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !3268, file: !3269, line: 488, baseType: !3280, size: 8, offset: 752)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !3268, file: !3269, line: 489, baseType: !3280, size: 8, offset: 760)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !3268, file: !3269, line: 490, baseType: !3280, size: 8, offset: 768)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !3268, file: !3269, line: 491, baseType: !3280, size: 8, offset: 776)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !3268, file: !3269, line: 492, baseType: !3280, size: 8, offset: 784)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !3268, file: !3269, line: 493, baseType: !3280, size: 8, offset: 792)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !3268, file: !3269, line: 494, baseType: !3280, size: 8, offset: 800)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !3268, file: !3269, line: 495, baseType: !3280, size: 8, offset: 808)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !3268, file: !3269, line: 496, baseType: !3280, size: 8, offset: 816)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !3268, file: !3269, line: 497, baseType: !3280, size: 8, offset: 824)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !3268, file: !3269, line: 498, baseType: !3280, size: 8, offset: 832)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !3268, file: !3269, line: 499, baseType: !3280, size: 8, offset: 840)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !3268, file: !3269, line: 500, baseType: !3280, size: 8, offset: 848)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !3268, file: !3269, line: 501, baseType: !3280, size: 8, offset: 856)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !3268, file: !3269, line: 502, baseType: !3280, size: 8, offset: 864)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !3268, file: !3269, line: 503, baseType: !3280, size: 8, offset: 872)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !3268, file: !3269, line: 504, baseType: !3280, size: 8, offset: 880)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !3268, file: !3269, line: 505, baseType: !3280, size: 8, offset: 888)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !3268, file: !3269, line: 506, baseType: !3280, size: 8, offset: 896)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !3268, file: !3269, line: 507, baseType: !3280, size: 8, offset: 904)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !3268, file: !3269, line: 508, baseType: !3280, size: 8, offset: 912)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !3268, file: !3269, line: 509, baseType: !3280, size: 8, offset: 920)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !3268, file: !3269, line: 510, baseType: !3280, size: 8, offset: 928)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !3268, file: !3269, line: 511, baseType: !3280, size: 8, offset: 936)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !3268, file: !3269, line: 512, baseType: !3280, size: 8, offset: 944)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !3268, file: !3269, line: 513, baseType: !3280, size: 8, offset: 952)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !3268, file: !3269, line: 514, baseType: !3280, size: 8, offset: 960)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !3268, file: !3269, line: 515, baseType: !3280, size: 8, offset: 968)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !3268, file: !3269, line: 516, baseType: !3280, size: 8, offset: 976)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !3268, file: !3269, line: 517, baseType: !3280, size: 8, offset: 984)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !3268, file: !3269, line: 518, baseType: !3280, size: 8, offset: 992)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !3268, file: !3269, line: 519, baseType: !3280, size: 8, offset: 1000)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !3268, file: !3269, line: 520, baseType: !3280, size: 8, offset: 1008)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !3268, file: !3269, line: 521, baseType: !3280, size: 8, offset: 1016)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !3268, file: !3269, line: 522, baseType: !3280, size: 8, offset: 1024)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !3268, file: !3269, line: 523, baseType: !3280, size: 8, offset: 1032)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !3268, file: !3269, line: 524, baseType: !3280, size: 8, offset: 1040)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !3268, file: !3269, line: 525, baseType: !3280, size: 8, offset: 1048)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !3268, file: !3269, line: 526, baseType: !3280, size: 8, offset: 1056)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !3268, file: !3269, line: 527, baseType: !3280, size: 8, offset: 1064)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !3268, file: !3269, line: 528, baseType: !3280, size: 8, offset: 1072)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !3268, file: !3269, line: 529, baseType: !3280, size: 8, offset: 1080)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !3268, file: !3269, line: 530, baseType: !3280, size: 8, offset: 1088)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !3268, file: !3269, line: 531, baseType: !3280, size: 8, offset: 1096)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !3268, file: !3269, line: 532, baseType: !3280, size: 8, offset: 1104)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !3268, file: !3269, line: 533, baseType: !3280, size: 8, offset: 1112)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !3268, file: !3269, line: 534, baseType: !3280, size: 8, offset: 1120)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !3268, file: !3269, line: 535, baseType: !3280, size: 8, offset: 1128)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !3268, file: !3269, line: 536, baseType: !3280, size: 8, offset: 1136)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !3268, file: !3269, line: 537, baseType: !3280, size: 8, offset: 1144)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !3268, file: !3269, line: 538, baseType: !3280, size: 8, offset: 1152)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !3268, file: !3269, line: 539, baseType: !3280, size: 8, offset: 1160)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !3268, file: !3269, line: 540, baseType: !3280, size: 8, offset: 1168)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !3268, file: !3269, line: 541, baseType: !3280, size: 8, offset: 1176)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !3268, file: !3269, line: 542, baseType: !3280, size: 8, offset: 1184)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !3268, file: !3269, line: 543, baseType: !3280, size: 8, offset: 1192)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !3268, file: !3269, line: 544, baseType: !3280, size: 8, offset: 1200)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !3268, file: !3269, line: 545, baseType: !3280, size: 8, offset: 1208)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !3268, file: !3269, line: 546, baseType: !3280, size: 8, offset: 1216)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !3268, file: !3269, line: 547, baseType: !3280, size: 8, offset: 1224)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !3268, file: !3269, line: 548, baseType: !3280, size: 8, offset: 1232)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !3268, file: !3269, line: 549, baseType: !3280, size: 8, offset: 1240)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !3268, file: !3269, line: 550, baseType: !3280, size: 8, offset: 1248)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !3268, file: !3269, line: 551, baseType: !3280, size: 8, offset: 1256)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !3268, file: !3269, line: 552, baseType: !3280, size: 8, offset: 1264)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !3268, file: !3269, line: 553, baseType: !3280, size: 8, offset: 1272)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !3268, file: !3269, line: 554, baseType: !3280, size: 8, offset: 1280)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !3268, file: !3269, line: 555, baseType: !3280, size: 8, offset: 1288)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !3268, file: !3269, line: 556, baseType: !3280, size: 8, offset: 1296)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !3268, file: !3269, line: 557, baseType: !3280, size: 8, offset: 1304)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !3268, file: !3269, line: 558, baseType: !3280, size: 8, offset: 1312)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !3268, file: !3269, line: 559, baseType: !3280, size: 8, offset: 1320)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !3268, file: !3269, line: 560, baseType: !3280, size: 8, offset: 1328)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !3268, file: !3269, line: 561, baseType: !3280, size: 8, offset: 1336)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !3268, file: !3269, line: 562, baseType: !3280, size: 8, offset: 1344)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !3268, file: !3269, line: 563, baseType: !3280, size: 8, offset: 1352)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !3268, file: !3269, line: 564, baseType: !3280, size: 8, offset: 1360)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !3268, file: !3269, line: 565, baseType: !3280, size: 8, offset: 1368)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !3268, file: !3269, line: 566, baseType: !3280, size: 8, offset: 1376)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !3268, file: !3269, line: 567, baseType: !3280, size: 8, offset: 1384)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !3268, file: !3269, line: 568, baseType: !3280, size: 8, offset: 1392)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !3268, file: !3269, line: 569, baseType: !3280, size: 8, offset: 1400)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !3268, file: !3269, line: 570, baseType: !3280, size: 8, offset: 1408)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !3268, file: !3269, line: 571, baseType: !3280, size: 8, offset: 1416)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !3268, file: !3269, line: 572, baseType: !3280, size: 8, offset: 1424)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !3268, file: !3269, line: 573, baseType: !3280, size: 8, offset: 1432)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !3268, file: !3269, line: 574, baseType: !3280, size: 8, offset: 1440)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !2492, file: !158, line: 3405, baseType: !3436, size: 384)
!3436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !158, line: 3352, size: 384, elements: !3437)
!3437 = !{!3438, !3439}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3436, file: !158, line: 3353, baseType: !2528, size: 192)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !3436, file: !158, line: 3356, baseType: !3440, size: 192, offset: 192)
!3440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !3269, line: 578, size: 192, elements: !3441)
!3441 = !{!3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !3440, file: !3269, line: 580, baseType: !2396, size: 32)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !3440, file: !3269, line: 581, baseType: !2396, size: 32, offset: 32)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !3440, file: !3269, line: 582, baseType: !2396, size: 32, offset: 64)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !3440, file: !3269, line: 583, baseType: !2396, size: 32, offset: 96)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3440, file: !3269, line: 584, baseType: !2603, size: 8, offset: 128)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !3440, file: !3269, line: 585, baseType: !2603, size: 8, offset: 136)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !3440, file: !3269, line: 586, baseType: !2603, size: 8, offset: 144)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !3440, file: !3269, line: 587, baseType: !2603, size: 8, offset: 152)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !3440, file: !3269, line: 588, baseType: !2603, size: 8, offset: 160)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !3440, file: !3269, line: 589, baseType: !2603, size: 8, offset: 168)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !3440, file: !3269, line: 590, baseType: !2603, size: 8, offset: 176)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !2393, file: !385, line: 178, baseType: !2907, size: 64)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !2393, file: !385, line: 179, baseType: !3455, size: 64)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !385, line: 150, baseType: !3457)
!3457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !385, line: 142, size: 320, elements: !3458)
!3458 = !{!3459, !3460, !3461, !3462, !3463, !3464}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !3457, file: !385, line: 144, baseType: !2490, size: 64)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3457, file: !385, line: 145, baseType: !2372, size: 64, offset: 64)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3457, file: !385, line: 146, baseType: !2372, size: 64, offset: 128)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3457, file: !385, line: 147, baseType: !3115, size: 32, offset: 192)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3457, file: !385, line: 148, baseType: !7, size: 32, offset: 224)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !3457, file: !385, line: 149, baseType: !2603, size: 8, offset: 256)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !2393, file: !385, line: 180, baseType: !3466, size: 64)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !385, line: 162, baseType: !3468)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !385, line: 159, size: 128, elements: !3469)
!3469 = !{!3470, !3471}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3468, file: !385, line: 160, baseType: !2490, size: 64)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3468, file: !385, line: 161, baseType: !2359, size: 64, offset: 64)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !2393, file: !385, line: 181, baseType: !3473, size: 64)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !385, line: 181, flags: DIFlagFwdDecl)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !2388, file: !385, line: 317, baseType: !3476, size: 64)
!3476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2359, size: 64, elements: !2410)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !2388, file: !385, line: 318, baseType: !3478, size: 320)
!3478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !385, line: 188, size: 320, elements: !3479)
!3479 = !{!3480, !3482, !3537}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !3478, file: !385, line: 190, baseType: !3481, size: 192)
!3481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, size: 192, elements: !2561)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3478, file: !385, line: 193, baseType: !3483, size: 64, offset: 192)
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3484, size: 64)
!3484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !385, line: 206, size: 320, elements: !3485)
!3485 = !{!3486, !3522, !3523, !3524, !3536}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !3484, file: !385, line: 208, baseType: !3487, size: 64)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !2373, line: 62, baseType: !3489)
!3489 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !3490, line: 538, size: 256, elements: !3491)
!3490 = !DIFile(filename: "./output.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!3491 = !{!3492, !3496, !3502, !3513}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3489, file: !3490, line: 539, baseType: !3493, size: 32)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !3490, line: 482, size: 32, elements: !3494)
!3494 = !{!3495}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3493, file: !3490, line: 484, baseType: !7, size: 32)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !3489, file: !3490, line: 540, baseType: !3497, size: 192)
!3497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !3490, line: 488, size: 192, elements: !3498)
!3498 = !{!3499, !3500, !3501}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3497, file: !3490, line: 489, baseType: !3493, size: 32)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3497, file: !3490, line: 492, baseType: !2399, size: 64, offset: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3497, file: !3490, line: 496, baseType: !2490, size: 64, offset: 128)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !3489, file: !3490, line: 541, baseType: !3503, size: 256)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !3490, line: 504, size: 256, elements: !3504)
!3504 = !{!3505, !3506, !3511, !3512}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3503, file: !3490, line: 505, baseType: !3493, size: 32)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !3503, file: !3490, line: 509, baseType: !3507, size: 64, offset: 64)
!3507 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !3490, line: 501, baseType: !3508)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DISubroutineType(types: !3510)
!3510 = !{null, !2832}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3503, file: !3490, line: 510, baseType: !2832, size: 64, offset: 128)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3503, file: !3490, line: 513, baseType: !3487, size: 64, offset: 192)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !3489, file: !3490, line: 542, baseType: !3514, size: 128)
!3514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !3490, line: 530, size: 128, elements: !3515)
!3515 = !{!3516, !3517}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3514, file: !3490, line: 531, baseType: !3493, size: 32)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !3514, file: !3490, line: 534, baseType: !3518, size: 64, offset: 64)
!3518 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !3490, line: 525, baseType: !3519)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = !DISubroutineType(types: !3521)
!3521 = !{!2603, !2490, !2399, !2445, !2445}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !3484, file: !385, line: 211, baseType: !7, size: 32, offset: 64)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3484, file: !385, line: 214, baseType: !2359, size: 64, offset: 128)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3484, file: !385, line: 224, baseType: !3525, size: 64, offset: 192)
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3526 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !385, line: 202, baseType: !3527)
!3527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !385, line: 202, size: 128, elements: !3528)
!3528 = !{!3529}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3527, file: !385, line: 202, baseType: !3530, size: 128)
!3530 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !385, line: 200, baseType: !3531)
!3531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !385, line: 200, size: 128, elements: !3532)
!3532 = !{!3533, !3534, !3535}
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3531, file: !385, line: 200, baseType: !7, size: 32)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3531, file: !385, line: 200, baseType: !7, size: 32, offset: 32)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3531, file: !385, line: 200, baseType: !2409, size: 64, offset: 64)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !3484, file: !385, line: 234, baseType: !3525, size: 64, offset: 256)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3478, file: !385, line: 197, baseType: !2359, size: 64, offset: 256)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !2388, file: !385, line: 319, baseType: !2550, size: 256)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !2388, file: !385, line: 320, baseType: !2569, size: 192)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2366, file: !2050, line: 213, baseType: !2396, size: 32, offset: 256)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "need_reload", scope: !2366, file: !2050, line: 216, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "need_operand_change", scope: !2366, file: !2050, line: 219, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "need_elim", scope: !2366, file: !2050, line: 221, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "is_caller_save_insn", scope: !2366, file: !2050, line: 223, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "live_throughout", scope: !2366, file: !2050, line: 228, baseType: !3546, size: 256, offset: 320)
!3546 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset_head", file: !142, line: 34, baseType: !3547)
!3547 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_head", file: !2431, line: 84, baseType: !2430)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "dead_or_set", scope: !2366, file: !2050, line: 229, baseType: !3546, size: 256, offset: 576)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "rld", scope: !2366, file: !2050, line: 232, baseType: !3550, size: 64, offset: 832)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reload", file: !2050, line: 78, size: 832, elements: !3552)
!3552 = !{!3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !3551, file: !2050, line: 81, baseType: !2372, size: 64)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !3551, file: !2050, line: 84, baseType: !2372, size: 64, offset: 64)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "rclass", scope: !3551, file: !2050, line: 87, baseType: !527, size: 32, offset: 128)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "inmode", scope: !3551, file: !2050, line: 90, baseType: !5, size: 32, offset: 160)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "outmode", scope: !3551, file: !2050, line: 92, baseType: !5, size: 32, offset: 192)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3551, file: !2050, line: 95, baseType: !5, size: 32, offset: 224)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "nregs", scope: !3551, file: !2050, line: 98, baseType: !7, size: 32, offset: 256)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "inc", scope: !3551, file: !2050, line: 103, baseType: !2396, size: 32, offset: 288)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "in_reg", scope: !3551, file: !2050, line: 108, baseType: !2372, size: 64, offset: 320)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "out_reg", scope: !3551, file: !2050, line: 109, baseType: !2372, size: 64, offset: 384)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !3551, file: !2050, line: 112, baseType: !2396, size: 32, offset: 448)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "reg_rtx", scope: !3551, file: !2050, line: 117, baseType: !2372, size: 64, offset: 512)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "opnum", scope: !3551, file: !2050, line: 122, baseType: !2396, size: 32, offset: 576)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_in_reload", scope: !3551, file: !2050, line: 126, baseType: !2396, size: 32, offset: 608)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_out_reload", scope: !3551, file: !2050, line: 129, baseType: !2396, size: 32, offset: 640)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_in_icode", scope: !3551, file: !2050, line: 133, baseType: !557, size: 32, offset: 672)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_out_icode", scope: !3551, file: !2050, line: 135, baseType: !557, size: 32, offset: 704)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "when_needed", scope: !3551, file: !2050, line: 140, baseType: !2049, size: 32, offset: 736)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "optional", scope: !3551, file: !2050, line: 144, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "nocombine", scope: !3551, file: !2050, line: 146, baseType: !7, size: 1, offset: 769, flags: DIFlagBitField, extraData: i64 768)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_p", scope: !3551, file: !2050, line: 148, baseType: !7, size: 1, offset: 770, flags: DIFlagBitField, extraData: i64 768)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "nongroup", scope: !3551, file: !2050, line: 151, baseType: !7, size: 1, offset: 771, flags: DIFlagBitField, extraData: i64 768)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "n_reloads", scope: !2366, file: !2050, line: 233, baseType: !2396, size: 32, offset: 896)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "used_spill_regs", scope: !2366, file: !2050, line: 236, baseType: !3577, size: 64, offset: 960)
!3577 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !3578, line: 42, baseType: !2445)
!3578 = !DIFile(filename: "./hard-reg-set.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3582 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2359, size: 256, elements: !2470)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!3587 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !2845, line: 35, baseType: !2359)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!3589 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 64)
!3591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3582)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_p_heap", file: !3, line: 393, baseType: !3594)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_p_heap", file: !3, line: 393, size: 128, elements: !3595)
!3595 = !{!3596}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3594, file: !3, line: 393, baseType: !3597, size: 128)
!3597 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_p_base", file: !3, line: 392, baseType: !3598)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_p_base", file: !3, line: 392, size: 128, elements: !3599)
!3599 = !{!3600, !3601, !3602}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3598, file: !3, line: 392, baseType: !7, size: 32)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3598, file: !3, line: 392, baseType: !7, size: 32, offset: 32)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3598, file: !3, line: 392, baseType: !3603, size: 64, offset: 64)
!3603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3604, size: 64, elements: !2410)
!3604 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx_p", file: !3, line: 391, baseType: !3579)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elim_table", file: !3, line: 315, size: 512, elements: !3607)
!3607 = !{!3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617}
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !3606, file: !3, line: 317, baseType: !2396, size: 32)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !3606, file: !3, line: 318, baseType: !2396, size: 32, offset: 32)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "initial_offset", scope: !3606, file: !3, line: 319, baseType: !2359, size: 64, offset: 64)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "can_eliminate", scope: !3606, file: !3, line: 320, baseType: !2396, size: 32, offset: 128)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "can_eliminate_previous", scope: !3606, file: !3, line: 321, baseType: !2396, size: 32, offset: 160)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3606, file: !3, line: 324, baseType: !2359, size: 64, offset: 192)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "previous_offset", scope: !3606, file: !3, line: 325, baseType: !2359, size: 64, offset: 256)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "ref_outside_mem", scope: !3606, file: !3, line: 326, baseType: !2396, size: 32, offset: 320)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "from_rtx", scope: !3606, file: !3, line: 327, baseType: !2372, size: 64, offset: 384)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "to_rtx", scope: !3606, file: !3, line: 332, baseType: !2372, size: 64, offset: 448)
!3618 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !142, line: 37, baseType: !3619)
!3619 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !2373, line: 47, baseType: !2429)
!3620 = !{!0, !3621, !3627, !3629, !3631, !3633, !3635, !3637, !3639, !3641, !3643, !3645, !3647, !3649, !3651, !3656, !3658, !3660, !3662, !3664, !3666, !3668, !3670, !3672, !3674, !3677, !3680, !3682, !3684, !3686, !3688, !3690, !3695, !3697, !3699, !3701, !3703, !3705, !3707, !3709, !3711, !3713, !3715, !3717, !3719, !3721, !3723, !3725, !3727, !3729, !3731, !3736, !3738, !3740, !3742, !3745, !3747, !3749, !3752, !3754, !3756, !3761, !3763, !3772, !3774, !3776, !3778, !3780, !3782, !3784, !3786, !3788, !3790, !3792, !3794, !3796, !3801, !3803, !3805, !3807, !3809, !3811, !3813, !3815, !3817, !3820, !3822, !3824, !3827, !3829, !3831, !3833, !3835, !3838, !3840, !3842, !3844, !3846, !3848, !3850, !3852, !3854, !3856, !3858, !3860, !3862, !3864}
!3621 = !DIGlobalVariableExpression(var: !3622, expr: !DIExpression())
!3622 = distinct !DIGlobalVariable(name: "verbose_warned", scope: !3623, file: !3, line: 1397, type: !2396, isLocal: true, isDefinition: true)
!3623 = distinct !DISubprogram(name: "reload", scope: !3, file: !3, line: 726, type: !3624, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!3624 = !DISubroutineType(types: !3625)
!3625 = !{!2396, !2372, !2396}
!3626 = !{}
!3627 = !DIGlobalVariableExpression(var: !3628, expr: !DIExpression())
!3628 = distinct !DIGlobalVariable(name: "reg_equiv_constant", scope: !2, file: !3, line: 102, type: !3579, isLocal: false, isDefinition: true)
!3629 = !DIGlobalVariableExpression(var: !3630, expr: !DIExpression())
!3630 = distinct !DIGlobalVariable(name: "reg_equiv_invariant", scope: !2, file: !3, line: 107, type: !3579, isLocal: false, isDefinition: true)
!3631 = !DIGlobalVariableExpression(var: !3632, expr: !DIExpression())
!3632 = distinct !DIGlobalVariable(name: "reg_equiv_memory_loc", scope: !2, file: !3, line: 113, type: !3579, isLocal: false, isDefinition: true)
!3633 = !DIGlobalVariableExpression(var: !3634, expr: !DIExpression())
!3634 = distinct !DIGlobalVariable(name: "reg_equiv_memory_loc_vec", scope: !2, file: !3, line: 117, type: !3525, isLocal: false, isDefinition: true)
!3635 = !DIGlobalVariableExpression(var: !3636, expr: !DIExpression())
!3636 = distinct !DIGlobalVariable(name: "reg_equiv_address", scope: !2, file: !3, line: 122, type: !3579, isLocal: false, isDefinition: true)
!3637 = !DIGlobalVariableExpression(var: !3638, expr: !DIExpression())
!3638 = distinct !DIGlobalVariable(name: "reg_equiv_mem", scope: !2, file: !3, line: 126, type: !3579, isLocal: false, isDefinition: true)
!3639 = !DIGlobalVariableExpression(var: !3640, expr: !DIExpression())
!3640 = distinct !DIGlobalVariable(name: "reg_equiv_alt_mem_list", scope: !2, file: !3, line: 130, type: !3579, isLocal: false, isDefinition: true)
!3641 = !DIGlobalVariableExpression(var: !3642, expr: !DIExpression())
!3642 = distinct !DIGlobalVariable(name: "reg_max_ref_width", scope: !2, file: !3, line: 133, type: !3580, isLocal: true, isDefinition: true)
!3643 = !DIGlobalVariableExpression(var: !3644, expr: !DIExpression())
!3644 = distinct !DIGlobalVariable(name: "reg_equiv_init", scope: !2, file: !3, line: 137, type: !3579, isLocal: false, isDefinition: true)
!3645 = !DIGlobalVariableExpression(var: !3646, expr: !DIExpression())
!3646 = distinct !DIGlobalVariable(name: "reg_equiv_init_size", scope: !2, file: !3, line: 138, type: !2396, isLocal: false, isDefinition: true)
!3647 = !DIGlobalVariableExpression(var: !3648, expr: !DIExpression())
!3648 = distinct !DIGlobalVariable(name: "reg_old_renumber", scope: !2, file: !3, line: 141, type: !3581, isLocal: true, isDefinition: true)
!3649 = !DIGlobalVariableExpression(var: !3650, expr: !DIExpression())
!3650 = distinct !DIGlobalVariable(name: "n_spills", scope: !2, file: !3, line: 166, type: !2396, isLocal: true, isDefinition: true)
!3651 = !DIGlobalVariableExpression(var: !3652, expr: !DIExpression())
!3652 = distinct !DIGlobalVariable(name: "spill_reg_order", scope: !2, file: !3, line: 190, type: !3653, isLocal: true, isDefinition: true)
!3653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3582, size: 848, elements: !3654)
!3654 = !{!3655}
!3655 = !DISubrange(count: 53)
!3656 = !DIGlobalVariableExpression(var: !3657, expr: !DIExpression())
!3657 = distinct !DIGlobalVariable(name: "bad_spill_regs_global", scope: !2, file: !3, line: 202, type: !3577, isLocal: true, isDefinition: true)
!3658 = !DIGlobalVariableExpression(var: !3659, expr: !DIExpression())
!3659 = distinct !DIGlobalVariable(name: "spill_regs", scope: !2, file: !3, line: 213, type: !3653, isLocal: true, isDefinition: true)
!3660 = !DIGlobalVariableExpression(var: !3661, expr: !DIExpression())
!3661 = distinct !DIGlobalVariable(name: "pseudo_previous_regs", scope: !2, file: !3, line: 220, type: !3583, isLocal: true, isDefinition: true)
!3662 = !DIGlobalVariableExpression(var: !3663, expr: !DIExpression())
!3663 = distinct !DIGlobalVariable(name: "pseudo_forbidden_regs", scope: !2, file: !3, line: 226, type: !3583, isLocal: true, isDefinition: true)
!3664 = !DIGlobalVariableExpression(var: !3665, expr: !DIExpression())
!3665 = distinct !DIGlobalVariable(name: "used_spill_regs", scope: !2, file: !3, line: 230, type: !3577, isLocal: true, isDefinition: true)
!3666 = !DIGlobalVariableExpression(var: !3667, expr: !DIExpression())
!3667 = distinct !DIGlobalVariable(name: "last_spill_reg", scope: !2, file: !3, line: 234, type: !2396, isLocal: true, isDefinition: true)
!3668 = !DIGlobalVariableExpression(var: !3669, expr: !DIExpression())
!3669 = distinct !DIGlobalVariable(name: "spill_indirect_levels", scope: !2, file: !3, line: 242, type: !2364, isLocal: true, isDefinition: true)
!3670 = !DIGlobalVariableExpression(var: !3671, expr: !DIExpression())
!3671 = distinct !DIGlobalVariable(name: "indirect_symref_ok", scope: !2, file: !3, line: 247, type: !2364, isLocal: false, isDefinition: true)
!3672 = !DIGlobalVariableExpression(var: !3673, expr: !DIExpression())
!3673 = distinct !DIGlobalVariable(name: "double_reg_address_ok", scope: !2, file: !3, line: 250, type: !2364, isLocal: false, isDefinition: true)
!3674 = !DIGlobalVariableExpression(var: !3675, expr: !DIExpression())
!3675 = distinct !DIGlobalVariable(name: "spill_stack_slot", scope: !2, file: !3, line: 253, type: !3676, isLocal: true, isDefinition: true)
!3676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2372, size: 3392, elements: !3654)
!3677 = !DIGlobalVariableExpression(var: !3678, expr: !DIExpression())
!3678 = distinct !DIGlobalVariable(name: "spill_stack_slot_width", scope: !2, file: !3, line: 256, type: !3679, isLocal: true, isDefinition: true)
!3679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 1696, elements: !3654)
!3680 = !DIGlobalVariableExpression(var: !3681, expr: !DIExpression())
!3681 = distinct !DIGlobalVariable(name: "spilled_pseudos", scope: !2, file: !3, line: 259, type: !3546, isLocal: true, isDefinition: true)
!3682 = !DIGlobalVariableExpression(var: !3683, expr: !DIExpression())
!3683 = distinct !DIGlobalVariable(name: "changed_allocation_pseudos", scope: !2, file: !3, line: 262, type: !3546, isLocal: true, isDefinition: true)
!3684 = !DIGlobalVariableExpression(var: !3685, expr: !DIExpression())
!3685 = distinct !DIGlobalVariable(name: "pseudos_counted", scope: !2, file: !3, line: 266, type: !3546, isLocal: true, isDefinition: true)
!3686 = !DIGlobalVariableExpression(var: !3687, expr: !DIExpression())
!3687 = distinct !DIGlobalVariable(name: "reload_first_uid", scope: !2, file: !3, line: 270, type: !2396, isLocal: false, isDefinition: true)
!3688 = !DIGlobalVariableExpression(var: !3689, expr: !DIExpression())
!3689 = distinct !DIGlobalVariable(name: "caller_save_needed", scope: !2, file: !3, line: 274, type: !2396, isLocal: false, isDefinition: true)
!3690 = !DIGlobalVariableExpression(var: !3691, expr: !DIExpression())
!3691 = distinct !DIGlobalVariable(name: "reload_in_optab", scope: !2, file: !3, line: 283, type: !3692, isLocal: false, isDefinition: true)
!3692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 2784, elements: !3693)
!3693 = !{!3694}
!3694 = !DISubrange(count: 87)
!3695 = !DIGlobalVariableExpression(var: !3696, expr: !DIExpression())
!3696 = distinct !DIGlobalVariable(name: "reload_out_optab", scope: !2, file: !3, line: 284, type: !3692, isLocal: false, isDefinition: true)
!3697 = !DIGlobalVariableExpression(var: !3698, expr: !DIExpression())
!3698 = distinct !DIGlobalVariable(name: "reload_obstack", scope: !2, file: !3, line: 289, type: !2458, isLocal: true, isDefinition: true)
!3699 = !DIGlobalVariableExpression(var: !3700, expr: !DIExpression())
!3700 = distinct !DIGlobalVariable(name: "reload_startobj", scope: !2, file: !3, line: 293, type: !2363, isLocal: true, isDefinition: true)
!3701 = !DIGlobalVariableExpression(var: !3702, expr: !DIExpression())
!3702 = distinct !DIGlobalVariable(name: "reload_firstobj", scope: !2, file: !3, line: 297, type: !2363, isLocal: true, isDefinition: true)
!3703 = !DIGlobalVariableExpression(var: !3704, expr: !DIExpression())
!3704 = distinct !DIGlobalVariable(name: "reload_insn_chain", scope: !2, file: !3, line: 305, type: !2365, isLocal: false, isDefinition: true)
!3705 = !DIGlobalVariableExpression(var: !3706, expr: !DIExpression())
!3706 = distinct !DIGlobalVariable(name: "insns_need_reload", scope: !2, file: !3, line: 308, type: !2365, isLocal: true, isDefinition: true)
!3707 = !DIGlobalVariableExpression(var: !3708, expr: !DIExpression())
!3708 = distinct !DIGlobalVariable(name: "num_not_at_initial_offset", scope: !2, file: !3, line: 360, type: !2396, isLocal: false, isDefinition: true)
!3709 = !DIGlobalVariableExpression(var: !3710, expr: !DIExpression())
!3710 = distinct !DIGlobalVariable(name: "num_eliminable", scope: !2, file: !3, line: 363, type: !2396, isLocal: true, isDefinition: true)
!3711 = !DIGlobalVariableExpression(var: !3712, expr: !DIExpression())
!3712 = distinct !DIGlobalVariable(name: "num_eliminable_invariants", scope: !2, file: !3, line: 366, type: !2396, isLocal: true, isDefinition: true)
!3713 = !DIGlobalVariableExpression(var: !3714, expr: !DIExpression())
!3714 = distinct !DIGlobalVariable(name: "first_label_num", scope: !2, file: !3, line: 377, type: !2396, isLocal: true, isDefinition: true)
!3715 = !DIGlobalVariableExpression(var: !3716, expr: !DIExpression())
!3716 = distinct !DIGlobalVariable(name: "offsets_known_at", scope: !2, file: !3, line: 378, type: !2363, isLocal: true, isDefinition: true)
!3717 = !DIGlobalVariableExpression(var: !3718, expr: !DIExpression())
!3718 = distinct !DIGlobalVariable(name: "offsets_at", scope: !2, file: !3, line: 379, type: !3584, isLocal: true, isDefinition: true)
!3719 = !DIGlobalVariableExpression(var: !3720, expr: !DIExpression())
!3720 = distinct !DIGlobalVariable(name: "substitute_stack", scope: !2, file: !3, line: 394, type: !3592, isLocal: true, isDefinition: true)
!3721 = !DIGlobalVariableExpression(var: !3722, expr: !DIExpression())
!3722 = distinct !DIGlobalVariable(name: "num_labels", scope: !2, file: !3, line: 398, type: !2396, isLocal: true, isDefinition: true)
!3723 = !DIGlobalVariableExpression(var: !3724, expr: !DIExpression())
!3724 = distinct !DIGlobalVariable(name: "something_needs_elimination", scope: !2, file: !3, line: 702, type: !2396, isLocal: true, isDefinition: true)
!3725 = !DIGlobalVariableExpression(var: !3726, expr: !DIExpression())
!3726 = distinct !DIGlobalVariable(name: "something_needs_operands_changed", scope: !2, file: !3, line: 704, type: !2396, isLocal: true, isDefinition: true)
!3727 = !DIGlobalVariableExpression(var: !3728, expr: !DIExpression())
!3728 = distinct !DIGlobalVariable(name: "failure", scope: !2, file: !3, line: 707, type: !2396, isLocal: true, isDefinition: true)
!3729 = !DIGlobalVariableExpression(var: !3730, expr: !DIExpression())
!3730 = distinct !DIGlobalVariable(name: "temp_pseudo_reg_arr", scope: !2, file: !3, line: 710, type: !3586, isLocal: true, isDefinition: true)
!3731 = !DIGlobalVariableExpression(var: !3732, expr: !DIExpression())
!3732 = distinct !DIGlobalVariable(name: "reload_spill_index", scope: !2, file: !3, line: 5399, type: !3733, isLocal: true, isDefinition: true)
!3733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2396, size: 5760, elements: !3734)
!3734 = !{!3735}
!3735 = !DISubrange(count: 180)
!3736 = !DIGlobalVariableExpression(var: !3737, expr: !DIExpression())
!3737 = distinct !DIGlobalVariable(name: "unused_insn_chains", scope: !2, file: !3, line: 530, type: !2365, isLocal: true, isDefinition: true)
!3738 = !DIGlobalVariableExpression(var: !3739, expr: !DIExpression())
!3739 = distinct !DIGlobalVariable(name: "reg_eliminate", scope: !2, file: !3, line: 335, type: !3605, isLocal: true, isDefinition: true)
!3740 = !DIGlobalVariableExpression(var: !3741, expr: !DIExpression())
!3741 = distinct !DIGlobalVariable(name: "reload_insn_firstobj", scope: !2, file: !3, line: 301, type: !2363, isLocal: true, isDefinition: true)
!3742 = !DIGlobalVariableExpression(var: !3743, expr: !DIExpression())
!3743 = distinct !DIGlobalVariable(name: "reload_order", scope: !2, file: !3, line: 1853, type: !3744, isLocal: true, isDefinition: true)
!3744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3582, size: 2880, elements: !3734)
!3745 = !DIGlobalVariableExpression(var: !3746, expr: !DIExpression())
!3746 = distinct !DIGlobalVariable(name: "used_spill_regs_local", scope: !2, file: !3, line: 1856, type: !3577, isLocal: true, isDefinition: true)
!3747 = !DIGlobalVariableExpression(var: !3748, expr: !DIExpression())
!3748 = distinct !DIGlobalVariable(name: "bad_spill_regs", scope: !2, file: !3, line: 196, type: !3577, isLocal: true, isDefinition: true)
!3749 = !DIGlobalVariableExpression(var: !3750, expr: !DIExpression())
!3750 = distinct !DIGlobalVariable(name: "spill_cost", scope: !2, file: !3, line: 1767, type: !3751, isLocal: true, isDefinition: true)
!3751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2396, size: 1696, elements: !3654)
!3752 = !DIGlobalVariableExpression(var: !3753, expr: !DIExpression())
!3753 = distinct !DIGlobalVariable(name: "spill_add_cost", scope: !2, file: !3, line: 1772, type: !3751, isLocal: true, isDefinition: true)
!3754 = !DIGlobalVariableExpression(var: !3755, expr: !DIExpression())
!3755 = distinct !DIGlobalVariable(name: "hard_regno_to_pseudo_regno", scope: !2, file: !3, line: 1776, type: !3751, isLocal: true, isDefinition: true)
!3756 = !DIGlobalVariableExpression(var: !3757, expr: !DIExpression())
!3757 = distinct !DIGlobalVariable(name: "regno_pseudo_regs", scope: !3758, file: !3, line: 1901, type: !3751, isLocal: true, isDefinition: true)
!3758 = distinct !DISubprogram(name: "find_reg", scope: !3, file: !3, line: 1890, type: !3759, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{!2396, !2365, !2396}
!3761 = !DIGlobalVariableExpression(var: !3762, expr: !DIExpression())
!3762 = distinct !DIGlobalVariable(name: "best_regno_pseudo_regs", scope: !3758, file: !3, line: 1902, type: !3751, isLocal: true, isDefinition: true)
!3763 = !DIGlobalVariableExpression(var: !3764, expr: !DIExpression())
!3764 = distinct !DIGlobalVariable(name: "reg_eliminate_1", scope: !2, file: !3, line: 343, type: !3765, isLocal: true, isDefinition: true)
!3765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3766, size: 256, elements: !2470)
!3766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3767)
!3767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elim_table_1", file: !3, line: 339, size: 64, elements: !3768)
!3768 = !{!3769, !3771}
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !3767, file: !3, line: 341, baseType: !3770, size: 32)
!3770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2396)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !3767, file: !3, line: 342, baseType: !3770, size: 32, offset: 32)
!3772 = !DIGlobalVariableExpression(var: !3773, expr: !DIExpression())
!3773 = distinct !DIGlobalVariable(name: "spill_reg_rtx", scope: !2, file: !3, line: 172, type: !3676, isLocal: true, isDefinition: true)
!3774 = !DIGlobalVariableExpression(var: !3775, expr: !DIExpression())
!3775 = distinct !DIGlobalVariable(name: "spill_reg_store", scope: !2, file: !3, line: 177, type: !3676, isLocal: true, isDefinition: true)
!3776 = !DIGlobalVariableExpression(var: !3777, expr: !DIExpression())
!3777 = distinct !DIGlobalVariable(name: "reg_last_reload_reg", scope: !2, file: !3, line: 88, type: !3579, isLocal: true, isDefinition: true)
!3778 = !DIGlobalVariableExpression(var: !3779, expr: !DIExpression())
!3779 = distinct !DIGlobalVariable(name: "reg_has_output_reload", scope: !2, file: !3, line: 92, type: !3546, isLocal: true, isDefinition: true)
!3780 = !DIGlobalVariableExpression(var: !3781, expr: !DIExpression())
!3781 = distinct !DIGlobalVariable(name: "reg_reloaded_valid", scope: !2, file: !3, line: 155, type: !3577, isLocal: true, isDefinition: true)
!3782 = !DIGlobalVariableExpression(var: !3783, expr: !DIExpression())
!3783 = distinct !DIGlobalVariable(name: "reg_reloaded_call_part_clobbered", scope: !2, file: !3, line: 163, type: !3577, isLocal: true, isDefinition: true)
!3784 = !DIGlobalVariableExpression(var: !3785, expr: !DIExpression())
!3785 = distinct !DIGlobalVariable(name: "reg_is_output_reload", scope: !2, file: !3, line: 96, type: !3577, isLocal: true, isDefinition: true)
!3786 = !DIGlobalVariableExpression(var: !3787, expr: !DIExpression())
!3787 = distinct !DIGlobalVariable(name: "reload_reg_used", scope: !2, file: !3, line: 4611, type: !3577, isLocal: true, isDefinition: true)
!3788 = !DIGlobalVariableExpression(var: !3789, expr: !DIExpression())
!3789 = distinct !DIGlobalVariable(name: "reload_reg_used_in_op_addr", scope: !2, file: !3, line: 4625, type: !3577, isLocal: true, isDefinition: true)
!3790 = !DIGlobalVariableExpression(var: !3791, expr: !DIExpression())
!3791 = distinct !DIGlobalVariable(name: "reload_reg_used_in_op_addr_reload", scope: !2, file: !3, line: 4627, type: !3577, isLocal: true, isDefinition: true)
!3792 = !DIGlobalVariableExpression(var: !3793, expr: !DIExpression())
!3793 = distinct !DIGlobalVariable(name: "reload_reg_used_in_insn", scope: !2, file: !3, line: 4629, type: !3577, isLocal: true, isDefinition: true)
!3794 = !DIGlobalVariableExpression(var: !3795, expr: !DIExpression())
!3795 = distinct !DIGlobalVariable(name: "reload_reg_used_in_other_addr", scope: !2, file: !3, line: 4631, type: !3577, isLocal: true, isDefinition: true)
!3796 = !DIGlobalVariableExpression(var: !3797, expr: !DIExpression())
!3797 = distinct !DIGlobalVariable(name: "reload_reg_used_in_output", scope: !2, file: !3, line: 4623, type: !3798, isLocal: true, isDefinition: true)
!3798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3577, size: 1920, elements: !3799)
!3799 = !{!3800}
!3800 = !DISubrange(count: 30)
!3801 = !DIGlobalVariableExpression(var: !3802, expr: !DIExpression())
!3802 = distinct !DIGlobalVariable(name: "reload_reg_used_in_input", scope: !2, file: !3, line: 4621, type: !3798, isLocal: true, isDefinition: true)
!3803 = !DIGlobalVariableExpression(var: !3804, expr: !DIExpression())
!3804 = distinct !DIGlobalVariable(name: "reload_reg_used_in_input_addr", scope: !2, file: !3, line: 4613, type: !3798, isLocal: true, isDefinition: true)
!3805 = !DIGlobalVariableExpression(var: !3806, expr: !DIExpression())
!3806 = distinct !DIGlobalVariable(name: "reload_reg_used_in_inpaddr_addr", scope: !2, file: !3, line: 4615, type: !3798, isLocal: true, isDefinition: true)
!3807 = !DIGlobalVariableExpression(var: !3808, expr: !DIExpression())
!3808 = distinct !DIGlobalVariable(name: "reload_reg_used_in_output_addr", scope: !2, file: !3, line: 4617, type: !3798, isLocal: true, isDefinition: true)
!3809 = !DIGlobalVariableExpression(var: !3810, expr: !DIExpression())
!3810 = distinct !DIGlobalVariable(name: "reload_reg_used_in_outaddr_addr", scope: !2, file: !3, line: 4619, type: !3798, isLocal: true, isDefinition: true)
!3811 = !DIGlobalVariableExpression(var: !3812, expr: !DIExpression())
!3812 = distinct !DIGlobalVariable(name: "reg_reloaded_contents", scope: !2, file: !3, line: 147, type: !3751, isLocal: true, isDefinition: true)
!3813 = !DIGlobalVariableExpression(var: !3814, expr: !DIExpression())
!3814 = distinct !DIGlobalVariable(name: "reg_used_in_insn", scope: !2, file: !3, line: 4642, type: !3577, isLocal: true, isDefinition: true)
!3815 = !DIGlobalVariableExpression(var: !3816, expr: !DIExpression())
!3816 = distinct !DIGlobalVariable(name: "reg_reloaded_dead", scope: !2, file: !3, line: 158, type: !3577, isLocal: true, isDefinition: true)
!3817 = !DIGlobalVariableExpression(var: !3818, expr: !DIExpression())
!3818 = distinct !DIGlobalVariable(name: "reload_override_in", scope: !2, file: !3, line: 5395, type: !3819, isLocal: true, isDefinition: true)
!3819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2372, size: 11520, elements: !3734)
!3820 = !DIGlobalVariableExpression(var: !3821, expr: !DIExpression())
!3821 = distinct !DIGlobalVariable(name: "reg_reloaded_insn", scope: !2, file: !3, line: 152, type: !3676, isLocal: true, isDefinition: true)
!3822 = !DIGlobalVariableExpression(var: !3823, expr: !DIExpression())
!3823 = distinct !DIGlobalVariable(name: "reload_inheritance_insn", scope: !2, file: !3, line: 5391, type: !3819, isLocal: true, isDefinition: true)
!3824 = !DIGlobalVariableExpression(var: !3825, expr: !DIExpression())
!3825 = distinct !DIGlobalVariable(name: "reload_inherited", scope: !2, file: !3, line: 5387, type: !3826, isLocal: true, isDefinition: true)
!3826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2364, size: 1440, elements: !3734)
!3827 = !DIGlobalVariableExpression(var: !3828, expr: !DIExpression())
!3828 = distinct !DIGlobalVariable(name: "reload_reg_used_for_inherit", scope: !2, file: !3, line: 4638, type: !3577, isLocal: true, isDefinition: true)
!3829 = !DIGlobalVariableExpression(var: !3830, expr: !DIExpression())
!3830 = distinct !DIGlobalVariable(name: "reload_reg_unavailable", scope: !2, file: !3, line: 4609, type: !3577, isLocal: true, isDefinition: true)
!3831 = !DIGlobalVariableExpression(var: !3832, expr: !DIExpression())
!3832 = distinct !DIGlobalVariable(name: "reload_reg_used_at_all", scope: !2, file: !3, line: 4634, type: !3577, isLocal: true, isDefinition: true)
!3833 = !DIGlobalVariableExpression(var: !3834, expr: !DIExpression())
!3834 = distinct !DIGlobalVariable(name: "reg_reloaded_died", scope: !2, file: !3, line: 6845, type: !3577, isLocal: true, isDefinition: true)
!3835 = !DIGlobalVariableExpression(var: !3836, expr: !DIExpression())
!3836 = distinct !DIGlobalVariable(name: "other_output_reload_insns", scope: !2, file: !3, line: 6841, type: !3837, isLocal: true, isDefinition: true)
!3837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2372, size: 1920, elements: !3799)
!3838 = !DIGlobalVariableExpression(var: !3839, expr: !DIExpression())
!3839 = distinct !DIGlobalVariable(name: "outaddr_address_reload_insns", scope: !2, file: !3, line: 6838, type: !3837, isLocal: true, isDefinition: true)
!3840 = !DIGlobalVariableExpression(var: !3841, expr: !DIExpression())
!3841 = distinct !DIGlobalVariable(name: "output_address_reload_insns", scope: !2, file: !3, line: 6837, type: !3837, isLocal: true, isDefinition: true)
!3842 = !DIGlobalVariableExpression(var: !3843, expr: !DIExpression())
!3843 = distinct !DIGlobalVariable(name: "output_reload_insns", scope: !2, file: !3, line: 6836, type: !3837, isLocal: true, isDefinition: true)
!3844 = !DIGlobalVariableExpression(var: !3845, expr: !DIExpression())
!3845 = distinct !DIGlobalVariable(name: "inpaddr_address_reload_insns", scope: !2, file: !3, line: 6835, type: !3837, isLocal: true, isDefinition: true)
!3846 = !DIGlobalVariableExpression(var: !3847, expr: !DIExpression())
!3847 = distinct !DIGlobalVariable(name: "input_address_reload_insns", scope: !2, file: !3, line: 6834, type: !3837, isLocal: true, isDefinition: true)
!3848 = !DIGlobalVariableExpression(var: !3849, expr: !DIExpression())
!3849 = distinct !DIGlobalVariable(name: "input_reload_insns", scope: !2, file: !3, line: 6831, type: !3837, isLocal: true, isDefinition: true)
!3850 = !DIGlobalVariableExpression(var: !3851, expr: !DIExpression())
!3851 = distinct !DIGlobalVariable(name: "other_input_address_reload_insns", scope: !2, file: !3, line: 6832, type: !2372, isLocal: true, isDefinition: true)
!3852 = !DIGlobalVariableExpression(var: !3853, expr: !DIExpression())
!3853 = distinct !DIGlobalVariable(name: "other_input_reload_insns", scope: !2, file: !3, line: 6833, type: !2372, isLocal: true, isDefinition: true)
!3854 = !DIGlobalVariableExpression(var: !3855, expr: !DIExpression())
!3855 = distinct !DIGlobalVariable(name: "operand_reload_insns", scope: !2, file: !3, line: 6839, type: !2372, isLocal: true, isDefinition: true)
!3856 = !DIGlobalVariableExpression(var: !3857, expr: !DIExpression())
!3857 = distinct !DIGlobalVariable(name: "other_operand_reload_insns", scope: !2, file: !3, line: 6840, type: !2372, isLocal: true, isDefinition: true)
!3858 = !DIGlobalVariableExpression(var: !3859, expr: !DIExpression())
!3859 = distinct !DIGlobalVariable(name: "new_spill_reg_store", scope: !2, file: !3, line: 6844, type: !3676, isLocal: true, isDefinition: true)
!3860 = !DIGlobalVariableExpression(var: !3861, expr: !DIExpression())
!3861 = distinct !DIGlobalVariable(name: "reload_reg_rtx_for_output", scope: !2, file: !3, line: 5405, type: !3819, isLocal: true, isDefinition: true)
!3862 = !DIGlobalVariableExpression(var: !3863, expr: !DIExpression())
!3863 = distinct !DIGlobalVariable(name: "spill_reg_stored_to", scope: !2, file: !3, line: 182, type: !3676, isLocal: true, isDefinition: true)
!3864 = !DIGlobalVariableExpression(var: !3865, expr: !DIExpression())
!3865 = distinct !DIGlobalVariable(name: "reload_reg_rtx_for_input", scope: !2, file: !3, line: 5402, type: !3819, isLocal: true, isDefinition: true)
!3866 = !{i32 7, !"Dwarf Version", i32 4}
!3867 = !{i32 2, !"Debug Info Version", i32 3}
!3868 = !{i32 1, !"wchar_size", i32 4}
!3869 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3870 = distinct !DISubprogram(name: "init_reload", scope: !3, file: !3, line: 475, type: !3871, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{null}
!3873 = !DILocalVariable(name: "i", scope: !3870, file: !3, line: 477, type: !2396)
!3874 = !DILocation(line: 477, column: 7, scope: !3870)
!3875 = !DILocalVariable(name: "tem", scope: !3870, file: !3, line: 483, type: !2372)
!3876 = !DILocation(line: 483, column: 7, scope: !3870)
!3877 = !DILocation(line: 485, column: 6, scope: !3870)
!3878 = !DILocation(line: 484, column: 7, scope: !3870)
!3879 = !DILocation(line: 489, column: 25, scope: !3870)
!3880 = !DILocation(line: 491, column: 3, scope: !3870)
!3881 = !DILocation(line: 491, column: 10, scope: !3870)
!3882 = !DILocation(line: 493, column: 28, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 492, column: 5)
!3884 = !DILocation(line: 494, column: 33, scope: !3883)
!3885 = !DILocation(line: 494, column: 13, scope: !3883)
!3886 = !DILocation(line: 494, column: 11, scope: !3883)
!3887 = distinct !{!3887, !3880, !3888}
!3888 = !DILocation(line: 495, column: 5, scope: !3870)
!3889 = !DILocation(line: 499, column: 29, scope: !3870)
!3890 = !DILocation(line: 499, column: 9, scope: !3870)
!3891 = !DILocation(line: 499, column: 7, scope: !3870)
!3892 = !DILocation(line: 500, column: 24, scope: !3870)
!3893 = !DILocation(line: 500, column: 22, scope: !3870)
!3894 = !DILocation(line: 504, column: 10, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 504, column: 3)
!3896 = !DILocation(line: 504, column: 8, scope: !3895)
!3897 = !DILocation(line: 504, column: 15, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 504, column: 3)
!3899 = !DILocation(line: 504, column: 17, scope: !3898)
!3900 = !DILocation(line: 504, column: 3, scope: !3895)
!3901 = !DILocation(line: 506, column: 13, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 505, column: 5)
!3903 = !DILocation(line: 506, column: 11, scope: !3902)
!3904 = !DILocation(line: 511, column: 28, scope: !3902)
!3905 = !DILocation(line: 511, column: 13, scope: !3902)
!3906 = !DILocation(line: 511, column: 11, scope: !3902)
!3907 = !DILocation(line: 513, column: 11, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 513, column: 11)
!3909 = !DILocation(line: 513, column: 11, scope: !3902)
!3910 = !DILocation(line: 515, column: 26, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3908, file: !3, line: 514, column: 2)
!3912 = !DILocation(line: 516, column: 4, scope: !3911)
!3913 = !DILocation(line: 518, column: 5, scope: !3902)
!3914 = !DILocation(line: 504, column: 43, scope: !3898)
!3915 = !DILocation(line: 504, column: 3, scope: !3898)
!3916 = distinct !{!3916, !3900, !3917}
!3917 = !DILocation(line: 518, column: 5, scope: !3895)
!3918 = !DILocation(line: 521, column: 3, scope: !3870)
!3919 = !DILocation(line: 522, column: 21, scope: !3870)
!3920 = !DILocation(line: 522, column: 19, scope: !3870)
!3921 = !DILocation(line: 524, column: 3, scope: !3870)
!3922 = !DILocation(line: 525, column: 3, scope: !3870)
!3923 = !DILocation(line: 526, column: 3, scope: !3870)
!3924 = !DILocation(line: 527, column: 1, scope: !3870)
!3925 = distinct !DISubprogram(name: "bitmap_initialize_stat", scope: !2431, file: !2431, line: 165, type: !3926, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{null, !3619, !2451}
!3928 = !DILocalVariable(name: "head", arg: 1, scope: !3925, file: !2431, line: 165, type: !3619)
!3929 = !DILocation(line: 165, column: 32, scope: !3925)
!3930 = !DILocalVariable(name: "obstack", arg: 2, scope: !3925, file: !2431, line: 165, type: !2451)
!3931 = !DILocation(line: 165, column: 54, scope: !3925)
!3932 = !DILocation(line: 167, column: 17, scope: !3925)
!3933 = !DILocation(line: 167, column: 23, scope: !3925)
!3934 = !DILocation(line: 167, column: 31, scope: !3925)
!3935 = !DILocation(line: 167, column: 3, scope: !3925)
!3936 = !DILocation(line: 167, column: 9, scope: !3925)
!3937 = !DILocation(line: 167, column: 15, scope: !3925)
!3938 = !DILocation(line: 168, column: 19, scope: !3925)
!3939 = !DILocation(line: 168, column: 3, scope: !3925)
!3940 = !DILocation(line: 168, column: 9, scope: !3925)
!3941 = !DILocation(line: 168, column: 17, scope: !3925)
!3942 = !DILocation(line: 172, column: 1, scope: !3925)
!3943 = distinct !DISubprogram(name: "new_insn_chain", scope: !3, file: !3, line: 534, type: !3944, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!2365}
!3946 = !DILocalVariable(name: "c", scope: !3943, file: !3, line: 536, type: !2365)
!3947 = !DILocation(line: 536, column: 22, scope: !3943)
!3948 = !DILocation(line: 538, column: 7, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3943, file: !3, line: 538, column: 7)
!3950 = !DILocation(line: 538, column: 26, scope: !3949)
!3951 = !DILocation(line: 538, column: 7, scope: !3943)
!3952 = !DILocation(line: 540, column: 11, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 539, column: 5)
!3954 = !DILocation(line: 540, column: 9, scope: !3953)
!3955 = !DILocation(line: 541, column: 7, scope: !3953)
!3956 = !DILocation(line: 542, column: 7, scope: !3953)
!3957 = !DILocation(line: 543, column: 5, scope: !3953)
!3958 = !DILocation(line: 546, column: 11, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 545, column: 5)
!3960 = !DILocation(line: 546, column: 9, scope: !3959)
!3961 = !DILocation(line: 547, column: 28, scope: !3959)
!3962 = !DILocation(line: 547, column: 31, scope: !3959)
!3963 = !DILocation(line: 547, column: 26, scope: !3959)
!3964 = !DILocation(line: 549, column: 3, scope: !3943)
!3965 = !DILocation(line: 549, column: 6, scope: !3943)
!3966 = !DILocation(line: 549, column: 26, scope: !3943)
!3967 = !DILocation(line: 550, column: 3, scope: !3943)
!3968 = !DILocation(line: 550, column: 6, scope: !3943)
!3969 = !DILocation(line: 550, column: 26, scope: !3943)
!3970 = !DILocation(line: 551, column: 3, scope: !3943)
!3971 = !DILocation(line: 551, column: 6, scope: !3943)
!3972 = !DILocation(line: 551, column: 18, scope: !3943)
!3973 = !DILocation(line: 552, column: 3, scope: !3943)
!3974 = !DILocation(line: 552, column: 6, scope: !3943)
!3975 = !DILocation(line: 552, column: 16, scope: !3943)
!3976 = !DILocation(line: 553, column: 10, scope: !3943)
!3977 = !DILocation(line: 553, column: 3, scope: !3943)
!3978 = distinct !DISubprogram(name: "compute_use_by_pseudos", scope: !3, file: !3, line: 560, type: !3979, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{null, !3583, !3618}
!3981 = !DILocalVariable(name: "to", arg: 1, scope: !3978, file: !3, line: 560, type: !3583)
!3982 = !DILocation(line: 560, column: 39, scope: !3978)
!3983 = !DILocalVariable(name: "from", arg: 2, scope: !3978, file: !3, line: 560, type: !3618)
!3984 = !DILocation(line: 560, column: 50, scope: !3978)
!3985 = !DILocalVariable(name: "regno", scope: !3978, file: !3, line: 562, type: !7)
!3986 = !DILocation(line: 562, column: 16, scope: !3978)
!3987 = !DILocalVariable(name: "rsi", scope: !3978, file: !3, line: 563, type: !3988)
!3988 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_set_iterator", file: !142, line: 90, baseType: !3989)
!3989 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !2431, line: 218, baseType: !3990)
!3990 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2431, line: 203, size: 256, elements: !3991)
!3991 = !{!3992, !3993, !3994, !3995}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !3990, file: !2431, line: 206, baseType: !2434, size: 64)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !3990, file: !2431, line: 209, baseType: !2434, size: 64, offset: 64)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !3990, file: !2431, line: 212, baseType: !7, size: 32, offset: 128)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !3990, file: !2431, line: 217, baseType: !2444, size: 64, offset: 192)
!3996 = !DILocation(line: 563, column: 20, scope: !3978)
!3997 = !DILocation(line: 565, column: 3, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 565, column: 3)
!3999 = !DILocation(line: 565, column: 3, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 565, column: 3)
!4001 = !DILocalVariable(name: "r", scope: !4002, file: !3, line: 567, type: !2396)
!4002 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 566, column: 5)
!4003 = !DILocation(line: 567, column: 11, scope: !4002)
!4004 = !DILocation(line: 567, column: 15, scope: !4002)
!4005 = !DILocation(line: 567, column: 28, scope: !4002)
!4006 = !DILocation(line: 569, column: 11, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 569, column: 11)
!4008 = !DILocation(line: 569, column: 13, scope: !4007)
!4009 = !DILocation(line: 569, column: 11, scope: !4002)
!4010 = !DILocation(line: 575, column: 4, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 570, column: 2)
!4012 = !DILocation(line: 576, column: 2, scope: !4011)
!4013 = !DILocation(line: 578, column: 23, scope: !4007)
!4014 = !DILocation(line: 578, column: 27, scope: !4007)
!4015 = !DILocation(line: 578, column: 54, scope: !4007)
!4016 = !DILocation(line: 578, column: 2, scope: !4007)
!4017 = !DILocation(line: 579, column: 5, scope: !4002)
!4018 = distinct !{!4018, !3997, !4019}
!4019 = !DILocation(line: 579, column: 5, scope: !3998)
!4020 = !DILocation(line: 580, column: 1, scope: !3978)
!4021 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !2431, file: !2431, line: 224, type: !4022, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{null, !4024, !4025, !7, !3580}
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!4025 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !2373, line: 48, baseType: !4026)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2430)
!4028 = !DILocalVariable(name: "bi", arg: 1, scope: !4021, file: !2431, line: 224, type: !4024)
!4029 = !DILocation(line: 224, column: 37, scope: !4021)
!4030 = !DILocalVariable(name: "map", arg: 2, scope: !4021, file: !2431, line: 224, type: !4025)
!4031 = !DILocation(line: 224, column: 54, scope: !4021)
!4032 = !DILocalVariable(name: "start_bit", arg: 3, scope: !4021, file: !2431, line: 225, type: !7)
!4033 = !DILocation(line: 225, column: 15, scope: !4021)
!4034 = !DILocalVariable(name: "bit_no", arg: 4, scope: !4021, file: !2431, line: 225, type: !3580)
!4035 = !DILocation(line: 225, column: 36, scope: !4021)
!4036 = !DILocation(line: 227, column: 14, scope: !4021)
!4037 = !DILocation(line: 227, column: 19, scope: !4021)
!4038 = !DILocation(line: 227, column: 3, scope: !4021)
!4039 = !DILocation(line: 227, column: 7, scope: !4021)
!4040 = !DILocation(line: 227, column: 12, scope: !4021)
!4041 = !DILocation(line: 228, column: 3, scope: !4021)
!4042 = !DILocation(line: 228, column: 7, scope: !4021)
!4043 = !DILocation(line: 228, column: 12, scope: !4021)
!4044 = !DILocation(line: 231, column: 3, scope: !4021)
!4045 = !DILocation(line: 233, column: 12, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !2431, line: 233, column: 11)
!4047 = distinct !DILexicalBlock(scope: !4021, file: !2431, line: 232, column: 5)
!4048 = !DILocation(line: 233, column: 16, scope: !4046)
!4049 = !DILocation(line: 233, column: 11, scope: !4047)
!4050 = !DILocation(line: 235, column: 4, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4046, file: !2431, line: 234, column: 2)
!4052 = !DILocation(line: 235, column: 8, scope: !4051)
!4053 = !DILocation(line: 235, column: 13, scope: !4051)
!4054 = !DILocation(line: 236, column: 4, scope: !4051)
!4055 = !DILocation(line: 239, column: 11, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4047, file: !2431, line: 239, column: 11)
!4057 = !DILocation(line: 239, column: 15, scope: !4056)
!4058 = !DILocation(line: 239, column: 21, scope: !4056)
!4059 = !DILocation(line: 239, column: 29, scope: !4056)
!4060 = !DILocation(line: 239, column: 39, scope: !4056)
!4061 = !DILocation(line: 239, column: 26, scope: !4056)
!4062 = !DILocation(line: 239, column: 11, scope: !4047)
!4063 = !DILocation(line: 240, column: 2, scope: !4056)
!4064 = !DILocation(line: 241, column: 18, scope: !4047)
!4065 = !DILocation(line: 241, column: 22, scope: !4047)
!4066 = !DILocation(line: 241, column: 28, scope: !4047)
!4067 = !DILocation(line: 241, column: 7, scope: !4047)
!4068 = !DILocation(line: 241, column: 11, scope: !4047)
!4069 = !DILocation(line: 241, column: 16, scope: !4047)
!4070 = distinct !{!4070, !4044, !4071}
!4071 = !DILocation(line: 242, column: 5, scope: !4021)
!4072 = !DILocation(line: 245, column: 7, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4021, file: !2431, line: 245, column: 7)
!4074 = !DILocation(line: 245, column: 11, scope: !4073)
!4075 = !DILocation(line: 245, column: 17, scope: !4073)
!4076 = !DILocation(line: 245, column: 25, scope: !4073)
!4077 = !DILocation(line: 245, column: 35, scope: !4073)
!4078 = !DILocation(line: 245, column: 22, scope: !4073)
!4079 = !DILocation(line: 245, column: 7, scope: !4021)
!4080 = !DILocation(line: 246, column: 17, scope: !4073)
!4081 = !DILocation(line: 246, column: 21, scope: !4073)
!4082 = !DILocation(line: 246, column: 27, scope: !4073)
!4083 = !DILocation(line: 246, column: 32, scope: !4073)
!4084 = !DILocation(line: 246, column: 15, scope: !4073)
!4085 = !DILocation(line: 246, column: 5, scope: !4073)
!4086 = !DILocation(line: 249, column: 17, scope: !4021)
!4087 = !DILocation(line: 249, column: 27, scope: !4021)
!4088 = !DILocation(line: 249, column: 46, scope: !4021)
!4089 = !DILocation(line: 249, column: 3, scope: !4021)
!4090 = !DILocation(line: 249, column: 7, scope: !4021)
!4091 = !DILocation(line: 249, column: 15, scope: !4021)
!4092 = !DILocation(line: 250, column: 14, scope: !4021)
!4093 = !DILocation(line: 250, column: 18, scope: !4021)
!4094 = !DILocation(line: 250, column: 24, scope: !4021)
!4095 = !DILocation(line: 250, column: 29, scope: !4021)
!4096 = !DILocation(line: 250, column: 33, scope: !4021)
!4097 = !DILocation(line: 250, column: 3, scope: !4021)
!4098 = !DILocation(line: 250, column: 7, scope: !4021)
!4099 = !DILocation(line: 250, column: 12, scope: !4021)
!4100 = !DILocation(line: 251, column: 16, scope: !4021)
!4101 = !DILocation(line: 251, column: 26, scope: !4021)
!4102 = !DILocation(line: 251, column: 3, scope: !4021)
!4103 = !DILocation(line: 251, column: 7, scope: !4021)
!4104 = !DILocation(line: 251, column: 12, scope: !4021)
!4105 = !DILocation(line: 257, column: 17, scope: !4021)
!4106 = !DILocation(line: 257, column: 21, scope: !4021)
!4107 = !DILocation(line: 257, column: 16, scope: !4021)
!4108 = !DILocation(line: 257, column: 13, scope: !4021)
!4109 = !DILocation(line: 259, column: 13, scope: !4021)
!4110 = !DILocation(line: 259, column: 4, scope: !4021)
!4111 = !DILocation(line: 259, column: 11, scope: !4021)
!4112 = !DILocation(line: 260, column: 1, scope: !4021)
!4113 = distinct !DISubprogram(name: "bmp_iter_set", scope: !2431, file: !2431, line: 393, type: !4114, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!2603, !4024, !3580}
!4116 = !DILocalVariable(name: "bi", arg: 1, scope: !4113, file: !2431, line: 393, type: !4024)
!4117 = !DILocation(line: 393, column: 32, scope: !4113)
!4118 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4113, file: !2431, line: 393, type: !3580)
!4119 = !DILocation(line: 393, column: 46, scope: !4113)
!4120 = !DILocation(line: 396, column: 7, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4113, file: !2431, line: 396, column: 7)
!4122 = !DILocation(line: 396, column: 11, scope: !4121)
!4123 = !DILocation(line: 396, column: 7, scope: !4113)
!4124 = !DILocation(line: 397, column: 5, scope: !4121)
!4125 = !DILabel(scope: !4126, name: "next_bit", file: !2431, line: 398)
!4126 = distinct !DILexicalBlock(scope: !4121, file: !2431, line: 397, column: 5)
!4127 = !DILocation(line: 398, column: 5, scope: !4126)
!4128 = !DILocation(line: 399, column: 7, scope: !4126)
!4129 = !DILocation(line: 399, column: 16, scope: !4126)
!4130 = !DILocation(line: 399, column: 20, scope: !4126)
!4131 = !DILocation(line: 399, column: 25, scope: !4126)
!4132 = !DILocation(line: 399, column: 14, scope: !4126)
!4133 = !DILocation(line: 401, column: 4, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4126, file: !2431, line: 400, column: 2)
!4135 = !DILocation(line: 401, column: 8, scope: !4134)
!4136 = !DILocation(line: 401, column: 13, scope: !4134)
!4137 = !DILocation(line: 402, column: 5, scope: !4134)
!4138 = !DILocation(line: 402, column: 12, scope: !4134)
!4139 = distinct !{!4139, !4128, !4140}
!4140 = !DILocation(line: 403, column: 2, scope: !4126)
!4141 = !DILocation(line: 404, column: 7, scope: !4126)
!4142 = !DILocation(line: 410, column: 16, scope: !4113)
!4143 = !DILocation(line: 410, column: 15, scope: !4113)
!4144 = !DILocation(line: 410, column: 23, scope: !4113)
!4145 = !DILocation(line: 410, column: 42, scope: !4113)
!4146 = !DILocation(line: 411, column: 7, scope: !4113)
!4147 = !DILocation(line: 411, column: 26, scope: !4113)
!4148 = !DILocation(line: 410, column: 4, scope: !4113)
!4149 = !DILocation(line: 410, column: 11, scope: !4113)
!4150 = !DILocation(line: 412, column: 3, scope: !4113)
!4151 = !DILocation(line: 412, column: 7, scope: !4113)
!4152 = !DILocation(line: 412, column: 14, scope: !4113)
!4153 = !DILocation(line: 414, column: 3, scope: !4113)
!4154 = !DILocation(line: 417, column: 7, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4113, file: !2431, line: 415, column: 5)
!4156 = !DILocation(line: 417, column: 14, scope: !4155)
!4157 = !DILocation(line: 417, column: 18, scope: !4155)
!4158 = !DILocation(line: 417, column: 26, scope: !4155)
!4159 = !DILocation(line: 419, column: 15, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4155, file: !2431, line: 418, column: 2)
!4161 = !DILocation(line: 419, column: 19, scope: !4160)
!4162 = !DILocation(line: 419, column: 25, scope: !4160)
!4163 = !DILocation(line: 419, column: 30, scope: !4160)
!4164 = !DILocation(line: 419, column: 34, scope: !4160)
!4165 = !DILocation(line: 419, column: 4, scope: !4160)
!4166 = !DILocation(line: 419, column: 8, scope: !4160)
!4167 = !DILocation(line: 419, column: 13, scope: !4160)
!4168 = !DILocation(line: 420, column: 8, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4160, file: !2431, line: 420, column: 8)
!4170 = !DILocation(line: 420, column: 12, scope: !4169)
!4171 = !DILocation(line: 420, column: 8, scope: !4160)
!4172 = !DILocation(line: 421, column: 6, scope: !4169)
!4173 = !DILocation(line: 422, column: 5, scope: !4160)
!4174 = !DILocation(line: 422, column: 12, scope: !4160)
!4175 = !DILocation(line: 423, column: 4, scope: !4160)
!4176 = !DILocation(line: 423, column: 8, scope: !4160)
!4177 = !DILocation(line: 423, column: 15, scope: !4160)
!4178 = distinct !{!4178, !4154, !4179}
!4179 = !DILocation(line: 424, column: 2, scope: !4155)
!4180 = !DILocation(line: 427, column: 18, scope: !4155)
!4181 = !DILocation(line: 427, column: 22, scope: !4155)
!4182 = !DILocation(line: 427, column: 28, scope: !4155)
!4183 = !DILocation(line: 427, column: 7, scope: !4155)
!4184 = !DILocation(line: 427, column: 11, scope: !4155)
!4185 = !DILocation(line: 427, column: 16, scope: !4155)
!4186 = !DILocation(line: 428, column: 12, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4155, file: !2431, line: 428, column: 11)
!4188 = !DILocation(line: 428, column: 16, scope: !4187)
!4189 = !DILocation(line: 428, column: 11, scope: !4155)
!4190 = !DILocation(line: 429, column: 2, scope: !4187)
!4191 = !DILocation(line: 430, column: 17, scope: !4155)
!4192 = !DILocation(line: 430, column: 21, scope: !4155)
!4193 = !DILocation(line: 430, column: 27, scope: !4155)
!4194 = !DILocation(line: 430, column: 32, scope: !4155)
!4195 = !DILocation(line: 430, column: 8, scope: !4155)
!4196 = !DILocation(line: 430, column: 15, scope: !4155)
!4197 = !DILocation(line: 431, column: 7, scope: !4155)
!4198 = !DILocation(line: 431, column: 11, scope: !4155)
!4199 = !DILocation(line: 431, column: 19, scope: !4155)
!4200 = distinct !{!4200, !4153, !4201}
!4201 = !DILocation(line: 432, column: 5, scope: !4113)
!4202 = !DILocation(line: 433, column: 1, scope: !4113)
!4203 = distinct !DISubprogram(name: "add_to_hard_reg_set", scope: !4204, file: !4204, line: 307, type: !4205, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!4204 = !DIFile(filename: "./regs.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4205 = !DISubroutineType(types: !4206)
!4206 = !{null, !3583, !5, !7}
!4207 = !DILocalVariable(name: "regs", arg: 1, scope: !4203, file: !4204, line: 307, type: !3583)
!4208 = !DILocation(line: 307, column: 36, scope: !4203)
!4209 = !DILocalVariable(name: "mode", arg: 2, scope: !4203, file: !4204, line: 307, type: !5)
!4210 = !DILocation(line: 307, column: 60, scope: !4203)
!4211 = !DILocalVariable(name: "regno", arg: 3, scope: !4203, file: !4204, line: 308, type: !7)
!4212 = !DILocation(line: 308, column: 21, scope: !4203)
!4213 = !DILocalVariable(name: "end_regno", scope: !4203, file: !4204, line: 310, type: !7)
!4214 = !DILocation(line: 310, column: 16, scope: !4203)
!4215 = !DILocation(line: 312, column: 31, scope: !4203)
!4216 = !DILocation(line: 312, column: 37, scope: !4203)
!4217 = !DILocation(line: 312, column: 15, scope: !4203)
!4218 = !DILocation(line: 312, column: 13, scope: !4203)
!4219 = !DILocation(line: 313, column: 3, scope: !4203)
!4220 = !DILocation(line: 314, column: 5, scope: !4203)
!4221 = !DILocation(line: 315, column: 10, scope: !4203)
!4222 = !DILocation(line: 315, column: 20, scope: !4203)
!4223 = !DILocation(line: 315, column: 18, scope: !4203)
!4224 = distinct !{!4224, !4219, !4225}
!4225 = !DILocation(line: 315, column: 29, scope: !4203)
!4226 = !DILocation(line: 316, column: 1, scope: !4203)
!4227 = distinct !DISubprogram(name: "bmp_iter_next", scope: !2431, file: !2431, line: 382, type: !4228, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{null, !4024, !3580}
!4230 = !DILocalVariable(name: "bi", arg: 1, scope: !4227, file: !2431, line: 382, type: !4024)
!4231 = !DILocation(line: 382, column: 33, scope: !4227)
!4232 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4227, file: !2431, line: 382, type: !3580)
!4233 = !DILocation(line: 382, column: 47, scope: !4227)
!4234 = !DILocation(line: 384, column: 3, scope: !4227)
!4235 = !DILocation(line: 384, column: 7, scope: !4227)
!4236 = !DILocation(line: 384, column: 12, scope: !4227)
!4237 = !DILocation(line: 385, column: 4, scope: !4227)
!4238 = !DILocation(line: 385, column: 11, scope: !4227)
!4239 = !DILocation(line: 386, column: 1, scope: !4227)
!4240 = !DILocalVariable(name: "first", arg: 1, scope: !3623, file: !3, line: 726, type: !2372)
!4241 = !DILocation(line: 726, column: 13, scope: !3623)
!4242 = !DILocalVariable(name: "global", arg: 2, scope: !3623, file: !3, line: 726, type: !2396)
!4243 = !DILocation(line: 726, column: 24, scope: !3623)
!4244 = !DILocalVariable(name: "i", scope: !3623, file: !3, line: 728, type: !2396)
!4245 = !DILocation(line: 728, column: 7, scope: !3623)
!4246 = !DILocalVariable(name: "n", scope: !3623, file: !3, line: 728, type: !2396)
!4247 = !DILocation(line: 728, column: 10, scope: !3623)
!4248 = !DILocalVariable(name: "insn", scope: !3623, file: !3, line: 729, type: !2372)
!4249 = !DILocation(line: 729, column: 7, scope: !3623)
!4250 = !DILocalVariable(name: "ep", scope: !3623, file: !3, line: 730, type: !3605)
!4251 = !DILocation(line: 730, column: 22, scope: !3623)
!4252 = !DILocalVariable(name: "bb", scope: !3623, file: !3, line: 731, type: !2906)
!4253 = !DILocation(line: 731, column: 15, scope: !3623)
!4254 = !DILocation(line: 734, column: 3, scope: !3623)
!4255 = !DILocation(line: 736, column: 11, scope: !3623)
!4256 = !DILocation(line: 738, column: 21, scope: !3623)
!4257 = !DILocation(line: 738, column: 19, scope: !3623)
!4258 = !DILocation(line: 742, column: 3, scope: !3623)
!4259 = !DILocation(line: 745, column: 22, scope: !3623)
!4260 = !DILocation(line: 745, column: 20, scope: !3623)
!4261 = !DILocation(line: 749, column: 3, scope: !3623)
!4262 = !DILocation(line: 753, column: 3, scope: !3623)
!4263 = !DILocation(line: 754, column: 3, scope: !3623)
!4264 = !DILocation(line: 758, column: 3, scope: !3623)
!4265 = !DILocation(line: 764, column: 10, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 764, column: 3)
!4267 = !DILocation(line: 764, column: 8, scope: !4266)
!4268 = !DILocation(line: 764, column: 35, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4266, file: !3, line: 764, column: 3)
!4270 = !DILocation(line: 764, column: 39, scope: !4269)
!4271 = !DILocation(line: 764, column: 37, scope: !4269)
!4272 = !DILocation(line: 764, column: 3, scope: !4266)
!4273 = !DILocation(line: 765, column: 21, scope: !4269)
!4274 = !DILocation(line: 765, column: 5, scope: !4269)
!4275 = !DILocation(line: 764, column: 51, scope: !4269)
!4276 = !DILocation(line: 764, column: 3, scope: !4269)
!4277 = distinct !{!4277, !4272, !4278}
!4278 = !DILocation(line: 765, column: 22, scope: !4266)
!4279 = !DILocation(line: 770, column: 7, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 770, column: 7)
!4281 = !DILocation(line: 770, column: 13, scope: !4280)
!4282 = !DILocation(line: 771, column: 7, scope: !4280)
!4283 = !DILocation(line: 771, column: 10, scope: !4280)
!4284 = !DILocation(line: 770, column: 7, scope: !3623)
!4285 = !DILocation(line: 772, column: 31, scope: !4280)
!4286 = !DILocation(line: 772, column: 5, scope: !4280)
!4287 = !DILocation(line: 774, column: 13, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 774, column: 7)
!4289 = !DILocation(line: 774, column: 7, scope: !4288)
!4290 = !DILocation(line: 774, column: 7, scope: !3623)
!4291 = !DILocation(line: 775, column: 12, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4288, file: !3, line: 775, column: 5)
!4293 = !DILocation(line: 775, column: 10, scope: !4292)
!4294 = !DILocation(line: 775, column: 17, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4292, file: !3, line: 775, column: 5)
!4296 = !DILocation(line: 775, column: 19, scope: !4295)
!4297 = !DILocation(line: 775, column: 5, scope: !4292)
!4298 = !DILocation(line: 776, column: 28, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 776, column: 11)
!4300 = !DILocation(line: 776, column: 13, scope: !4299)
!4301 = !DILocation(line: 776, column: 31, scope: !4299)
!4302 = !DILocation(line: 776, column: 47, scope: !4299)
!4303 = !DILocation(line: 776, column: 36, scope: !4299)
!4304 = !DILocation(line: 776, column: 11, scope: !4295)
!4305 = !DILocation(line: 777, column: 25, scope: !4299)
!4306 = !DILocation(line: 777, column: 2, scope: !4299)
!4307 = !DILocation(line: 776, column: 55, scope: !4299)
!4308 = !DILocation(line: 775, column: 45, scope: !4295)
!4309 = !DILocation(line: 775, column: 5, scope: !4295)
!4310 = distinct !{!4310, !4297, !4311}
!4311 = !DILocation(line: 777, column: 32, scope: !4292)
!4312 = !DILocation(line: 789, column: 24, scope: !3623)
!4313 = !DILocation(line: 789, column: 22, scope: !3623)
!4314 = !DILocation(line: 790, column: 25, scope: !3623)
!4315 = !DILocation(line: 790, column: 23, scope: !3623)
!4316 = !DILocation(line: 791, column: 19, scope: !3623)
!4317 = !DILocation(line: 791, column: 17, scope: !3623)
!4318 = !DILocation(line: 792, column: 28, scope: !3623)
!4319 = !DILocation(line: 792, column: 26, scope: !3623)
!4320 = !DILocation(line: 793, column: 23, scope: !3623)
!4321 = !DILocation(line: 793, column: 21, scope: !3623)
!4322 = !DILocation(line: 794, column: 23, scope: !3623)
!4323 = !DILocation(line: 794, column: 21, scope: !3623)
!4324 = !DILocation(line: 795, column: 22, scope: !3623)
!4325 = !DILocation(line: 795, column: 20, scope: !3623)
!4326 = !DILocation(line: 796, column: 11, scope: !3623)
!4327 = !DILocation(line: 796, column: 3, scope: !3623)
!4328 = !DILocation(line: 796, column: 29, scope: !3623)
!4329 = !DILocation(line: 796, column: 43, scope: !3623)
!4330 = !DILocation(line: 796, column: 53, scope: !3623)
!4331 = !DILocation(line: 797, column: 27, scope: !3623)
!4332 = !DILocation(line: 797, column: 25, scope: !3623)
!4333 = !DILocation(line: 798, column: 26, scope: !3623)
!4334 = !DILocation(line: 798, column: 24, scope: !3623)
!4335 = !DILocation(line: 800, column: 3, scope: !3623)
!4336 = !DILocation(line: 806, column: 29, scope: !3623)
!4337 = !DILocation(line: 807, column: 15, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 807, column: 3)
!4339 = !DILocation(line: 807, column: 13, scope: !4338)
!4340 = !DILocation(line: 807, column: 8, scope: !4338)
!4341 = !DILocation(line: 807, column: 22, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 807, column: 3)
!4343 = !DILocation(line: 807, column: 3, scope: !4338)
!4344 = !DILocalVariable(name: "set", scope: !4345, file: !3, line: 809, type: !2372)
!4345 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 808, column: 5)
!4346 = !DILocation(line: 809, column: 11, scope: !4345)
!4347 = !DILocation(line: 809, column: 17, scope: !4345)
!4348 = !DILocation(line: 814, column: 11, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 814, column: 11)
!4350 = !DILocation(line: 814, column: 25, scope: !4349)
!4351 = !DILocation(line: 814, column: 28, scope: !4349)
!4352 = !DILocation(line: 814, column: 54, scope: !4349)
!4353 = !DILocation(line: 815, column: 4, scope: !4349)
!4354 = !DILocation(line: 815, column: 7, scope: !4349)
!4355 = !DILocation(line: 815, column: 23, scope: !4349)
!4356 = !DILocation(line: 814, column: 11, scope: !4345)
!4357 = !DILocation(line: 816, column: 2, scope: !4349)
!4358 = !DILocation(line: 818, column: 11, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 818, column: 11)
!4360 = !DILocation(line: 818, column: 11, scope: !4345)
!4361 = !DILocation(line: 819, column: 28, scope: !4359)
!4362 = !DILocation(line: 819, column: 2, scope: !4359)
!4363 = !DILocation(line: 821, column: 11, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 821, column: 11)
!4365 = !DILocation(line: 821, column: 15, scope: !4364)
!4366 = !DILocation(line: 821, column: 20, scope: !4364)
!4367 = !DILocation(line: 821, column: 23, scope: !4364)
!4368 = !DILocation(line: 821, column: 11, scope: !4345)
!4369 = !DILocalVariable(name: "note", scope: !4370, file: !3, line: 823, type: !2372)
!4370 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 822, column: 2)
!4371 = !DILocation(line: 823, column: 8, scope: !4370)
!4372 = !DILocation(line: 823, column: 30, scope: !4370)
!4373 = !DILocation(line: 823, column: 15, scope: !4370)
!4374 = !DILocalVariable(name: "x", scope: !4370, file: !3, line: 824, type: !2372)
!4375 = !DILocation(line: 824, column: 8, scope: !4370)
!4376 = !DILocation(line: 826, column: 10, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 826, column: 8)
!4378 = !DILocation(line: 826, column: 8, scope: !4370)
!4379 = !DILocation(line: 827, column: 6, scope: !4377)
!4380 = !DILocation(line: 829, column: 8, scope: !4370)
!4381 = !DILocation(line: 829, column: 6, scope: !4370)
!4382 = !DILocation(line: 830, column: 8, scope: !4370)
!4383 = !DILocation(line: 830, column: 6, scope: !4370)
!4384 = !DILocation(line: 832, column: 8, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 832, column: 8)
!4386 = !DILocation(line: 832, column: 10, scope: !4385)
!4387 = !DILocation(line: 832, column: 8, scope: !4370)
!4388 = !DILocation(line: 833, column: 6, scope: !4385)
!4389 = !DILocation(line: 835, column: 32, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 835, column: 8)
!4391 = !DILocation(line: 835, column: 10, scope: !4390)
!4392 = !DILocation(line: 836, column: 8, scope: !4390)
!4393 = !DILocation(line: 836, column: 13, scope: !4390)
!4394 = !DILocation(line: 840, column: 8, scope: !4390)
!4395 = !DILocation(line: 840, column: 12, scope: !4390)
!4396 = !DILocation(line: 841, column: 5, scope: !4390)
!4397 = !DILocation(line: 841, column: 8, scope: !4390)
!4398 = !DILocation(line: 835, column: 8, scope: !4370)
!4399 = !DILocation(line: 848, column: 28, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 848, column: 12)
!4401 = distinct !DILexicalBlock(scope: !4390, file: !3, line: 842, column: 6)
!4402 = !DILocation(line: 848, column: 12, scope: !4400)
!4403 = !DILocation(line: 848, column: 12, scope: !4401)
!4404 = !DILocation(line: 853, column: 41, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 849, column: 3)
!4406 = !DILocation(line: 853, column: 31, scope: !4405)
!4407 = !DILocation(line: 853, column: 5, scope: !4405)
!4408 = !DILocation(line: 853, column: 26, scope: !4405)
!4409 = !DILocation(line: 853, column: 29, scope: !4405)
!4410 = !DILocation(line: 854, column: 3, scope: !4405)
!4411 = !DILocation(line: 855, column: 39, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 855, column: 17)
!4413 = !DILocation(line: 855, column: 17, scope: !4412)
!4414 = !DILocation(line: 855, column: 17, scope: !4400)
!4415 = !DILocation(line: 857, column: 9, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 857, column: 9)
!4417 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 856, column: 3)
!4418 = !DILocation(line: 857, column: 22, scope: !4416)
!4419 = !DILocation(line: 857, column: 9, scope: !4417)
!4420 = !DILocation(line: 861, column: 44, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 858, column: 7)
!4422 = !DILocation(line: 861, column: 34, scope: !4421)
!4423 = !DILocation(line: 861, column: 9, scope: !4421)
!4424 = !DILocation(line: 861, column: 29, scope: !4421)
!4425 = !DILocation(line: 861, column: 32, scope: !4421)
!4426 = !DILocation(line: 862, column: 34, scope: !4421)
!4427 = !DILocation(line: 863, column: 7, scope: !4421)
!4428 = !DILocation(line: 864, column: 14, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4416, file: !3, line: 864, column: 14)
!4430 = !DILocation(line: 864, column: 19, scope: !4429)
!4431 = !DILocation(line: 864, column: 16, scope: !4429)
!4432 = !DILocation(line: 864, column: 37, scope: !4429)
!4433 = !DILocation(line: 864, column: 40, scope: !4429)
!4434 = !DILocation(line: 864, column: 45, scope: !4429)
!4435 = !DILocation(line: 864, column: 42, scope: !4429)
!4436 = !DILocation(line: 864, column: 14, scope: !4416)
!4437 = !DILocation(line: 866, column: 34, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 865, column: 7)
!4439 = !DILocation(line: 866, column: 9, scope: !4438)
!4440 = !DILocation(line: 866, column: 29, scope: !4438)
!4441 = !DILocation(line: 866, column: 32, scope: !4438)
!4442 = !DILocation(line: 867, column: 34, scope: !4438)
!4443 = !DILocation(line: 868, column: 7, scope: !4438)
!4444 = !DILocation(line: 869, column: 14, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 869, column: 14)
!4446 = !DILocation(line: 869, column: 14, scope: !4429)
!4447 = !DILocation(line: 870, column: 31, scope: !4445)
!4448 = !DILocation(line: 870, column: 7, scope: !4445)
!4449 = !DILocation(line: 870, column: 26, scope: !4445)
!4450 = !DILocation(line: 870, column: 29, scope: !4445)
!4451 = !DILocation(line: 874, column: 23, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 872, column: 7)
!4453 = !DILocation(line: 874, column: 50, scope: !4452)
!4454 = !DILocation(line: 874, column: 6, scope: !4452)
!4455 = !DILocation(line: 873, column: 9, scope: !4452)
!4456 = !DILocation(line: 873, column: 30, scope: !4452)
!4457 = !DILocation(line: 874, column: 4, scope: !4452)
!4458 = !DILocation(line: 875, column: 15, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 875, column: 13)
!4460 = !DILocation(line: 875, column: 36, scope: !4459)
!4461 = !DILocation(line: 875, column: 13, scope: !4452)
!4462 = !DILocation(line: 876, column: 4, scope: !4459)
!4463 = !DILocation(line: 876, column: 19, scope: !4459)
!4464 = !DILocation(line: 876, column: 22, scope: !4459)
!4465 = !DILocation(line: 878, column: 3, scope: !4417)
!4466 = !DILocation(line: 881, column: 5, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 880, column: 3)
!4468 = !DILocation(line: 881, column: 20, scope: !4467)
!4469 = !DILocation(line: 881, column: 23, scope: !4467)
!4470 = !DILocation(line: 882, column: 5, scope: !4467)
!4471 = !DILocation(line: 884, column: 6, scope: !4401)
!4472 = !DILocation(line: 886, column: 6, scope: !4390)
!4473 = !DILocation(line: 886, column: 21, scope: !4390)
!4474 = !DILocation(line: 886, column: 24, scope: !4390)
!4475 = !DILocation(line: 887, column: 2, scope: !4370)
!4476 = !DILocation(line: 888, column: 5, scope: !4345)
!4477 = !DILocation(line: 807, column: 35, scope: !4342)
!4478 = !DILocation(line: 807, column: 33, scope: !4342)
!4479 = !DILocation(line: 807, column: 3, scope: !4342)
!4480 = distinct !{!4480, !4343, !4481}
!4481 = !DILocation(line: 888, column: 5, scope: !4338)
!4482 = !DILocation(line: 890, column: 7, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 890, column: 7)
!4484 = !DILocation(line: 890, column: 7, scope: !3623)
!4485 = !DILocation(line: 891, column: 12, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 891, column: 5)
!4487 = !DILocation(line: 891, column: 10, scope: !4486)
!4488 = !DILocation(line: 891, column: 37, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4486, file: !3, line: 891, column: 5)
!4490 = !DILocation(line: 891, column: 41, scope: !4489)
!4491 = !DILocation(line: 891, column: 39, scope: !4489)
!4492 = !DILocation(line: 891, column: 5, scope: !4486)
!4493 = !DILocation(line: 892, column: 11, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4489, file: !3, line: 892, column: 11)
!4495 = !DILocation(line: 892, column: 26, scope: !4494)
!4496 = !DILocation(line: 892, column: 11, scope: !4489)
!4497 = !DILocation(line: 894, column: 13, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 893, column: 2)
!4499 = !DILocation(line: 894, column: 47, scope: !4498)
!4500 = !DILocation(line: 894, column: 4, scope: !4498)
!4501 = !DILocation(line: 895, column: 22, scope: !4498)
!4502 = !DILocation(line: 895, column: 33, scope: !4498)
!4503 = !DILocation(line: 895, column: 48, scope: !4498)
!4504 = !DILocation(line: 895, column: 4, scope: !4498)
!4505 = !DILocation(line: 896, column: 13, scope: !4498)
!4506 = !DILocation(line: 896, column: 4, scope: !4498)
!4507 = !DILocation(line: 897, column: 2, scope: !4498)
!4508 = !DILocation(line: 892, column: 27, scope: !4494)
!4509 = !DILocation(line: 891, column: 53, scope: !4489)
!4510 = !DILocation(line: 891, column: 5, scope: !4489)
!4511 = distinct !{!4511, !4492, !4512}
!4512 = !DILocation(line: 897, column: 2, scope: !4486)
!4513 = !DILocation(line: 899, column: 3, scope: !3623)
!4514 = !DILocation(line: 901, column: 21, scope: !3623)
!4515 = !DILocation(line: 901, column: 19, scope: !3623)
!4516 = !DILocation(line: 902, column: 16, scope: !3623)
!4517 = !DILocation(line: 902, column: 35, scope: !3623)
!4518 = !DILocation(line: 902, column: 33, scope: !3623)
!4519 = !DILocation(line: 902, column: 14, scope: !3623)
!4520 = !DILocation(line: 908, column: 22, scope: !3623)
!4521 = !DILocation(line: 908, column: 20, scope: !3623)
!4522 = !DILocation(line: 909, column: 66, scope: !3623)
!4523 = !DILocation(line: 909, column: 77, scope: !3623)
!4524 = !DILocation(line: 909, column: 99, scope: !3623)
!4525 = !DILocation(line: 909, column: 57, scope: !3623)
!4526 = !DILocation(line: 909, column: 16, scope: !3623)
!4527 = !DILocation(line: 909, column: 14, scope: !3623)
!4528 = !DILocation(line: 915, column: 25, scope: !3623)
!4529 = !DILocation(line: 915, column: 23, scope: !3623)
!4530 = !DILocation(line: 916, column: 10, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 916, column: 3)
!4532 = !DILocation(line: 916, column: 17, scope: !4531)
!4533 = !DILocation(line: 916, column: 8, scope: !4531)
!4534 = !DILocation(line: 916, column: 46, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 916, column: 3)
!4536 = !DILocation(line: 916, column: 50, scope: !4535)
!4537 = !DILocation(line: 916, column: 48, scope: !4535)
!4538 = !DILocation(line: 916, column: 3, scope: !4531)
!4539 = !DILocation(line: 917, column: 32, scope: !4535)
!4540 = !DILocation(line: 917, column: 5, scope: !4535)
!4541 = !DILocation(line: 917, column: 26, scope: !4535)
!4542 = !DILocation(line: 917, column: 30, scope: !4535)
!4543 = !DILocation(line: 916, column: 62, scope: !4535)
!4544 = !DILocation(line: 916, column: 3, scope: !4535)
!4545 = distinct !{!4545, !4538, !4546}
!4546 = !DILocation(line: 917, column: 32, scope: !4531)
!4547 = !DILocation(line: 919, column: 7, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 919, column: 7)
!4549 = !DILocation(line: 919, column: 7, scope: !3623)
!4550 = !DILocation(line: 922, column: 36, scope: !4548)
!4551 = !DILocation(line: 922, column: 57, scope: !4548)
!4552 = !DILocation(line: 922, column: 60, scope: !4548)
!4553 = !DILocation(line: 922, column: 5, scope: !4548)
!4554 = !DILocation(line: 924, column: 10, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 924, column: 3)
!4556 = !DILocation(line: 924, column: 8, scope: !4555)
!4557 = !DILocation(line: 924, column: 15, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 924, column: 3)
!4559 = !DILocation(line: 924, column: 19, scope: !4558)
!4560 = !DILocation(line: 924, column: 17, scope: !4558)
!4561 = !DILocation(line: 924, column: 3, scope: !4555)
!4562 = !DILocation(line: 925, column: 16, scope: !4558)
!4563 = !DILocation(line: 925, column: 36, scope: !4558)
!4564 = !DILocation(line: 925, column: 5, scope: !4558)
!4565 = !DILocation(line: 924, column: 23, scope: !4558)
!4566 = !DILocation(line: 924, column: 3, scope: !4558)
!4567 = distinct !{!4567, !4561, !4568}
!4568 = !DILocation(line: 925, column: 49, scope: !4555)
!4569 = !DILocation(line: 933, column: 15, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 933, column: 3)
!4571 = !DILocation(line: 933, column: 13, scope: !4570)
!4572 = !DILocation(line: 933, column: 8, scope: !4570)
!4573 = !DILocation(line: 933, column: 22, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 933, column: 3)
!4575 = !DILocation(line: 933, column: 27, scope: !4574)
!4576 = !DILocation(line: 933, column: 30, scope: !4574)
!4577 = !DILocation(line: 0, scope: !4574)
!4578 = !DILocation(line: 933, column: 3, scope: !4570)
!4579 = !DILocation(line: 934, column: 9, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 934, column: 9)
!4581 = !DILocation(line: 934, column: 9, scope: !4574)
!4582 = !DILocation(line: 935, column: 20, scope: !4580)
!4583 = !DILocation(line: 935, column: 7, scope: !4580)
!4584 = !DILocation(line: 933, column: 53, scope: !4574)
!4585 = !DILocation(line: 933, column: 51, scope: !4574)
!4586 = !DILocation(line: 933, column: 3, scope: !4574)
!4587 = distinct !{!4587, !4578, !4588}
!4588 = !DILocation(line: 935, column: 61, scope: !4570)
!4589 = !DILocation(line: 937, column: 3, scope: !3623)
!4590 = !DILocation(line: 939, column: 21, scope: !3623)
!4591 = !DILocation(line: 940, column: 31, scope: !3623)
!4592 = !DILocation(line: 943, column: 18, scope: !3623)
!4593 = !DILocation(line: 946, column: 3, scope: !3623)
!4594 = !DILocation(line: 950, column: 13, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 950, column: 3)
!4596 = !DILocation(line: 950, column: 11, scope: !4595)
!4597 = !DILocation(line: 950, column: 8, scope: !4595)
!4598 = !DILocation(line: 950, column: 28, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 950, column: 3)
!4600 = !DILocation(line: 950, column: 34, scope: !4599)
!4601 = !DILocation(line: 950, column: 31, scope: !4599)
!4602 = !DILocation(line: 950, column: 3, scope: !4595)
!4603 = !DILocalVariable(name: "from", scope: !4604, file: !3, line: 952, type: !2396)
!4604 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 951, column: 5)
!4605 = !DILocation(line: 952, column: 11, scope: !4604)
!4606 = !DILocation(line: 952, column: 18, scope: !4604)
!4607 = !DILocation(line: 952, column: 22, scope: !4604)
!4608 = !DILocalVariable(name: "can_eliminate", scope: !4604, file: !3, line: 953, type: !2396)
!4609 = !DILocation(line: 953, column: 11, scope: !4604)
!4610 = !DILocation(line: 954, column: 7, scope: !4604)
!4611 = !DILocation(line: 956, column: 28, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 955, column: 2)
!4613 = !DILocation(line: 956, column: 32, scope: !4612)
!4614 = !DILocation(line: 956, column: 25, scope: !4612)
!4615 = !DILocation(line: 957, column: 13, scope: !4612)
!4616 = !DILocation(line: 958, column: 2, scope: !4612)
!4617 = !DILocation(line: 959, column: 14, scope: !4604)
!4618 = !DILocation(line: 959, column: 20, scope: !4604)
!4619 = !DILocation(line: 959, column: 17, scope: !4604)
!4620 = !DILocation(line: 959, column: 55, scope: !4604)
!4621 = !DILocation(line: 959, column: 58, scope: !4604)
!4622 = !DILocation(line: 959, column: 62, scope: !4604)
!4623 = !DILocation(line: 959, column: 70, scope: !4604)
!4624 = !DILocation(line: 959, column: 67, scope: !4604)
!4625 = !DILocation(line: 0, scope: !4604)
!4626 = distinct !{!4626, !4610, !4627}
!4627 = !DILocation(line: 959, column: 74, scope: !4604)
!4628 = !DILocation(line: 960, column: 13, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 960, column: 11)
!4630 = !DILocation(line: 960, column: 11, scope: !4604)
!4631 = !DILocation(line: 961, column: 18, scope: !4629)
!4632 = !DILocation(line: 961, column: 2, scope: !4629)
!4633 = !DILocation(line: 950, column: 3, scope: !4599)
!4634 = distinct !{!4634, !4602, !4635}
!4635 = !DILocation(line: 962, column: 5, scope: !4595)
!4636 = !DILocation(line: 965, column: 7, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 965, column: 7)
!4638 = !DILocation(line: 965, column: 7, scope: !3623)
!4639 = !DILocation(line: 966, column: 5, scope: !4637)
!4640 = !DILocation(line: 968, column: 18, scope: !3623)
!4641 = !DILocation(line: 968, column: 3, scope: !3623)
!4642 = !DILocation(line: 973, column: 22, scope: !3623)
!4643 = !DILocation(line: 977, column: 3, scope: !3623)
!4644 = !DILocalVariable(name: "something_changed", scope: !4645, file: !3, line: 979, type: !2396)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 978, column: 5)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 977, column: 3)
!4647 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 977, column: 3)
!4648 = !DILocation(line: 979, column: 11, scope: !4645)
!4649 = !DILocalVariable(name: "did_spill", scope: !4645, file: !3, line: 980, type: !2396)
!4650 = !DILocation(line: 980, column: 11, scope: !4645)
!4651 = !DILocalVariable(name: "starting_frame_size", scope: !4645, file: !3, line: 981, type: !2359)
!4652 = !DILocation(line: 981, column: 21, scope: !4645)
!4653 = !DILocation(line: 983, column: 29, scope: !4645)
!4654 = !DILocation(line: 983, column: 27, scope: !4645)
!4655 = !DILocation(line: 985, column: 7, scope: !4645)
!4656 = !DILocation(line: 986, column: 7, scope: !4645)
!4657 = !DILocation(line: 1012, column: 14, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1012, column: 7)
!4659 = !DILocation(line: 1012, column: 12, scope: !4658)
!4660 = !DILocation(line: 1012, column: 39, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 1012, column: 7)
!4662 = !DILocation(line: 1012, column: 43, scope: !4661)
!4663 = !DILocation(line: 1012, column: 41, scope: !4661)
!4664 = !DILocation(line: 1012, column: 7, scope: !4658)
!4665 = !DILocation(line: 1013, column: 6, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4661, file: !3, line: 1013, column: 6)
!4667 = !DILocation(line: 1013, column: 19, scope: !4666)
!4668 = !DILocation(line: 1013, column: 22, scope: !4666)
!4669 = !DILocation(line: 1013, column: 26, scope: !4666)
!4670 = !DILocation(line: 1013, column: 29, scope: !4666)
!4671 = !DILocation(line: 1013, column: 50, scope: !4666)
!4672 = !DILocation(line: 1013, column: 6, scope: !4661)
!4673 = !DILocalVariable(name: "x", scope: !4674, file: !3, line: 1015, type: !2372)
!4674 = distinct !DILexicalBlock(scope: !4666, file: !3, line: 1014, column: 4)
!4675 = !DILocation(line: 1015, column: 10, scope: !4674)
!4676 = !DILocation(line: 1015, column: 30, scope: !4674)
!4677 = !DILocation(line: 1015, column: 51, scope: !4674)
!4678 = !DILocation(line: 1015, column: 14, scope: !4674)
!4679 = !DILocation(line: 1019, column: 6, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 1018, column: 10)
!4681 = !DILocation(line: 1019, column: 35, scope: !4680)
!4682 = !DILocation(line: 1020, column: 6, scope: !4680)
!4683 = !DILocation(line: 1018, column: 10, scope: !4680)
!4684 = !DILocation(line: 1018, column: 10, scope: !4674)
!4685 = !DILocation(line: 1021, column: 27, scope: !4680)
!4686 = !DILocation(line: 1021, column: 8, scope: !4680)
!4687 = !DILocation(line: 1021, column: 22, scope: !4680)
!4688 = !DILocation(line: 1021, column: 25, scope: !4680)
!4689 = !DILocation(line: 1021, column: 30, scope: !4680)
!4690 = !DILocation(line: 1021, column: 48, scope: !4680)
!4691 = !DILocation(line: 1021, column: 51, scope: !4680)
!4692 = !DILocation(line: 1022, column: 15, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 1022, column: 15)
!4694 = !DILocation(line: 1023, column: 8, scope: !4693)
!4695 = !DILocation(line: 1023, column: 12, scope: !4693)
!4696 = !DILocation(line: 1024, column: 5, scope: !4693)
!4697 = !DILocation(line: 1024, column: 8, scope: !4693)
!4698 = !DILocation(line: 1024, column: 28, scope: !4693)
!4699 = !DILocation(line: 1025, column: 8, scope: !4693)
!4700 = !DILocation(line: 1025, column: 12, scope: !4693)
!4701 = !DILocation(line: 1025, column: 35, scope: !4693)
!4702 = !DILocation(line: 1026, column: 5, scope: !4693)
!4703 = !DILocation(line: 1026, column: 8, scope: !4693)
!4704 = !DILocation(line: 1027, column: 5, scope: !4693)
!4705 = !DILocation(line: 1027, column: 9, scope: !4693)
!4706 = !DILocation(line: 1028, column: 9, scope: !4693)
!4707 = !DILocation(line: 1029, column: 5, scope: !4693)
!4708 = !DILocation(line: 1029, column: 8, scope: !4693)
!4709 = !DILocation(line: 1022, column: 15, scope: !4680)
!4710 = !DILocation(line: 1030, column: 31, scope: !4693)
!4711 = !DILocation(line: 1030, column: 8, scope: !4693)
!4712 = !DILocation(line: 1030, column: 26, scope: !4693)
!4713 = !DILocation(line: 1030, column: 29, scope: !4693)
!4714 = !DILocation(line: 1030, column: 44, scope: !4693)
!4715 = !DILocation(line: 1030, column: 58, scope: !4693)
!4716 = !DILocation(line: 1030, column: 61, scope: !4693)
!4717 = !DILocation(line: 1039, column: 3, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 1032, column: 8)
!4719 = !DILocation(line: 1039, column: 24, scope: !4718)
!4720 = !DILocation(line: 1039, column: 27, scope: !4718)
!4721 = !DILocation(line: 1040, column: 3, scope: !4718)
!4722 = !DILocation(line: 1040, column: 18, scope: !4718)
!4723 = !DILocation(line: 1040, column: 21, scope: !4718)
!4724 = !DILocation(line: 1041, column: 14, scope: !4718)
!4725 = !DILocation(line: 1041, column: 3, scope: !4718)
!4726 = !DILocation(line: 1043, column: 4, scope: !4674)
!4727 = !DILocation(line: 1013, column: 51, scope: !4666)
!4728 = !DILocation(line: 1012, column: 55, scope: !4661)
!4729 = !DILocation(line: 1012, column: 7, scope: !4661)
!4730 = distinct !{!4730, !4664, !4731}
!4731 = !DILocation(line: 1043, column: 4, scope: !4658)
!4732 = !DILocation(line: 1045, column: 11, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1045, column: 11)
!4734 = !DILocation(line: 1045, column: 11, scope: !4645)
!4735 = !DILocation(line: 1046, column: 2, scope: !4733)
!4736 = !DILocation(line: 1049, column: 11, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1049, column: 11)
!4738 = !DILocation(line: 1049, column: 34, scope: !4737)
!4739 = !DILocation(line: 1049, column: 31, scope: !4737)
!4740 = !DILocation(line: 1049, column: 11, scope: !4645)
!4741 = !DILocation(line: 1050, column: 2, scope: !4737)
!4742 = distinct !{!4742, !4743, !4744}
!4743 = !DILocation(line: 977, column: 3, scope: !4647)
!4744 = !DILocation(line: 1136, column: 5, scope: !4647)
!4745 = !DILocation(line: 1051, column: 11, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1051, column: 11)
!4747 = !DILocation(line: 1051, column: 31, scope: !4746)
!4748 = !DILocation(line: 1051, column: 40, scope: !4746)
!4749 = !DILocation(line: 1051, column: 34, scope: !4746)
!4750 = !DILocation(line: 1051, column: 11, scope: !4645)
!4751 = !DILocation(line: 1061, column: 42, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 1052, column: 2)
!4753 = !DILocation(line: 1061, column: 4, scope: !4752)
!4754 = !DILocation(line: 1062, column: 8, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 1062, column: 8)
!4756 = !DILocation(line: 1062, column: 31, scope: !4755)
!4757 = !DILocation(line: 1062, column: 28, scope: !4755)
!4758 = !DILocation(line: 1062, column: 8, scope: !4752)
!4759 = !DILocation(line: 1063, column: 6, scope: !4755)
!4760 = !DILocation(line: 1064, column: 2, scope: !4752)
!4761 = !DILocation(line: 1066, column: 11, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1066, column: 11)
!4763 = !DILocation(line: 1066, column: 11, scope: !4645)
!4764 = !DILocation(line: 1068, column: 4, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 1067, column: 2)
!4766 = !DILocation(line: 1070, column: 22, scope: !4765)
!4767 = !DILocation(line: 1070, column: 20, scope: !4765)
!4768 = !DILocation(line: 1071, column: 2, scope: !4765)
!4769 = !DILocation(line: 1073, column: 34, scope: !4645)
!4770 = !DILocation(line: 1073, column: 7, scope: !4645)
!4771 = !DILocation(line: 1075, column: 13, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1075, column: 11)
!4773 = !DILocation(line: 1075, column: 11, scope: !4645)
!4774 = !DILocation(line: 1079, column: 2, scope: !4772)
!4775 = !DILocation(line: 1081, column: 17, scope: !4645)
!4776 = !DILocation(line: 1083, column: 25, scope: !4645)
!4777 = !DILocation(line: 1087, column: 11, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1087, column: 11)
!4779 = !DILocation(line: 1087, column: 34, scope: !4778)
!4780 = !DILocation(line: 1087, column: 31, scope: !4778)
!4781 = !DILocation(line: 1087, column: 11, scope: !4645)
!4782 = !DILocation(line: 1088, column: 20, scope: !4778)
!4783 = !DILocation(line: 1088, column: 2, scope: !4778)
!4784 = !DILocation(line: 1094, column: 17, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 1094, column: 16)
!4786 = !DILocation(line: 1094, column: 16, scope: !4778)
!4787 = !DILocation(line: 1095, column: 20, scope: !4785)
!4788 = !DILocation(line: 1095, column: 2, scope: !4785)
!4789 = !DILocalVariable(name: "to_spill", scope: !4790, file: !3, line: 1098, type: !3577)
!4790 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1097, column: 7)
!4791 = !DILocation(line: 1098, column: 15, scope: !4790)
!4792 = !DILocation(line: 1099, column: 2, scope: !4790)
!4793 = !DILocation(line: 1100, column: 2, scope: !4790)
!4794 = !DILocation(line: 1101, column: 2, scope: !4790)
!4795 = !DILocation(line: 1103, column: 9, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 1103, column: 2)
!4797 = !DILocation(line: 1103, column: 7, scope: !4796)
!4798 = !DILocation(line: 1103, column: 14, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 1103, column: 2)
!4800 = !DILocation(line: 1103, column: 16, scope: !4799)
!4801 = !DILocation(line: 1103, column: 2, scope: !4796)
!4802 = !DILocation(line: 1104, column: 8, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 1104, column: 8)
!4804 = !DILocation(line: 1104, column: 8, scope: !4799)
!4805 = !DILocation(line: 1106, column: 24, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 1105, column: 6)
!4807 = !DILocation(line: 1106, column: 8, scope: !4806)
!4808 = !DILocation(line: 1107, column: 18, scope: !4806)
!4809 = !DILocation(line: 1118, column: 26, scope: !4806)
!4810 = !DILocation(line: 1119, column: 6, scope: !4806)
!4811 = !DILocation(line: 1103, column: 42, scope: !4799)
!4812 = !DILocation(line: 1103, column: 2, scope: !4799)
!4813 = distinct !{!4813, !4801, !4814}
!4814 = !DILocation(line: 1119, column: 6, scope: !4796)
!4815 = !DILocation(line: 1122, column: 7, scope: !4645)
!4816 = !DILocation(line: 1123, column: 11, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1123, column: 11)
!4818 = !DILocation(line: 1123, column: 11, scope: !4645)
!4819 = !DILocation(line: 1124, column: 2, scope: !4817)
!4820 = !DILocation(line: 1126, column: 11, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1126, column: 11)
!4822 = !DILocation(line: 1126, column: 29, scope: !4821)
!4823 = !DILocation(line: 1126, column: 34, scope: !4821)
!4824 = !DILocation(line: 1126, column: 37, scope: !4821)
!4825 = !DILocation(line: 1126, column: 11, scope: !4645)
!4826 = !DILocation(line: 1127, column: 38, scope: !4821)
!4827 = !DILocation(line: 1127, column: 23, scope: !4821)
!4828 = !DILocation(line: 1127, column: 20, scope: !4821)
!4829 = !DILocation(line: 1127, column: 2, scope: !4821)
!4830 = !DILocation(line: 1129, column: 13, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1129, column: 11)
!4832 = !DILocation(line: 1129, column: 11, scope: !4645)
!4833 = !DILocation(line: 1130, column: 2, scope: !4831)
!4834 = !DILocation(line: 1132, column: 11, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1132, column: 11)
!4836 = !DILocation(line: 1132, column: 11, scope: !4645)
!4837 = !DILocation(line: 1133, column: 2, scope: !4835)
!4838 = !DILocation(line: 1135, column: 7, scope: !4645)
!4839 = !DILocation(line: 977, column: 3, scope: !4646)
!4840 = !DILocation(line: 1140, column: 7, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1140, column: 7)
!4842 = !DILocation(line: 1140, column: 7, scope: !3623)
!4843 = !DILocation(line: 1141, column: 15, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 1141, column: 5)
!4845 = !DILocation(line: 1141, column: 13, scope: !4844)
!4846 = !DILocation(line: 1141, column: 10, scope: !4844)
!4847 = !DILocation(line: 1141, column: 30, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 1141, column: 5)
!4849 = !DILocation(line: 1141, column: 36, scope: !4848)
!4850 = !DILocation(line: 1141, column: 33, scope: !4848)
!4851 = !DILocation(line: 1141, column: 5, scope: !4844)
!4852 = !DILocation(line: 1142, column: 11, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 1142, column: 11)
!4854 = !DILocation(line: 1142, column: 15, scope: !4853)
!4855 = !DILocation(line: 1142, column: 11, scope: !4848)
!4856 = !DILocation(line: 1143, column: 20, scope: !4853)
!4857 = !DILocation(line: 1143, column: 24, scope: !4853)
!4858 = !DILocation(line: 1143, column: 30, scope: !4853)
!4859 = !DILocation(line: 1143, column: 34, scope: !4853)
!4860 = !DILocation(line: 1143, column: 2, scope: !4853)
!4861 = !DILocation(line: 1141, column: 74, scope: !4848)
!4862 = !DILocation(line: 1141, column: 5, scope: !4848)
!4863 = distinct !{!4863, !4851, !4864}
!4864 = !DILocation(line: 1143, column: 36, scope: !4844)
!4865 = !DILocation(line: 1152, column: 10, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1152, column: 3)
!4867 = !DILocation(line: 1152, column: 8, scope: !4866)
!4868 = !DILocation(line: 1152, column: 35, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 1152, column: 3)
!4870 = !DILocation(line: 1152, column: 39, scope: !4869)
!4871 = !DILocation(line: 1152, column: 37, scope: !4869)
!4872 = !DILocation(line: 1152, column: 3, scope: !4866)
!4873 = !DILocation(line: 1154, column: 11, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 1154, column: 11)
!4875 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 1153, column: 5)
!4876 = !DILocation(line: 1154, column: 24, scope: !4874)
!4877 = !DILocation(line: 1154, column: 27, scope: !4874)
!4878 = !DILocation(line: 1154, column: 31, scope: !4874)
!4879 = !DILocation(line: 1154, column: 34, scope: !4874)
!4880 = !DILocation(line: 1154, column: 49, scope: !4874)
!4881 = !DILocation(line: 1154, column: 52, scope: !4874)
!4882 = !DILocation(line: 1154, column: 11, scope: !4875)
!4883 = !DILocalVariable(name: "list", scope: !4884, file: !3, line: 1156, type: !2372)
!4884 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1155, column: 2)
!4885 = !DILocation(line: 1156, column: 8, scope: !4884)
!4886 = !DILocation(line: 1157, column: 16, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 1157, column: 4)
!4888 = !DILocation(line: 1157, column: 31, scope: !4887)
!4889 = !DILocation(line: 1157, column: 14, scope: !4887)
!4890 = !DILocation(line: 1157, column: 9, scope: !4887)
!4891 = !DILocation(line: 1157, column: 35, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 1157, column: 4)
!4893 = !DILocation(line: 1157, column: 4, scope: !4887)
!4894 = !DILocalVariable(name: "equiv_insn", scope: !4895, file: !3, line: 1159, type: !2372)
!4895 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 1158, column: 6)
!4896 = !DILocation(line: 1159, column: 12, scope: !4895)
!4897 = !DILocation(line: 1159, column: 25, scope: !4895)
!4898 = !DILocation(line: 1166, column: 12, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 1166, column: 12)
!4900 = !DILocation(line: 1167, column: 5, scope: !4899)
!4901 = !DILocation(line: 1167, column: 28, scope: !4899)
!4902 = !DILocation(line: 1167, column: 8, scope: !4899)
!4903 = !DILocation(line: 1166, column: 12, scope: !4895)
!4904 = !DILocation(line: 1169, column: 28, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 1169, column: 17)
!4906 = !DILocation(line: 1169, column: 42, scope: !4905)
!4907 = !DILocation(line: 1169, column: 46, scope: !4905)
!4908 = !DILocation(line: 1169, column: 17, scope: !4905)
!4909 = !DILocation(line: 1169, column: 17, scope: !4899)
!4910 = !DILocation(line: 1170, column: 21, scope: !4905)
!4911 = !DILocation(line: 1170, column: 3, scope: !4905)
!4912 = !DILocation(line: 1172, column: 3, scope: !4905)
!4913 = !DILocation(line: 1173, column: 6, scope: !4895)
!4914 = !DILocation(line: 1157, column: 48, scope: !4892)
!4915 = !DILocation(line: 1157, column: 46, scope: !4892)
!4916 = !DILocation(line: 1157, column: 4, scope: !4892)
!4917 = distinct !{!4917, !4893, !4918}
!4918 = !DILocation(line: 1173, column: 6, scope: !4887)
!4919 = !DILocation(line: 1174, column: 2, scope: !4884)
!4920 = !DILocation(line: 1175, column: 5, scope: !4875)
!4921 = !DILocation(line: 1152, column: 51, scope: !4869)
!4922 = !DILocation(line: 1152, column: 3, scope: !4869)
!4923 = distinct !{!4923, !4872, !4924}
!4924 = !DILocation(line: 1175, column: 5, scope: !4866)
!4925 = !DILocation(line: 1181, column: 7, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1181, column: 7)
!4927 = !DILocation(line: 1181, column: 25, scope: !4926)
!4928 = !DILocation(line: 1181, column: 30, scope: !4926)
!4929 = !DILocation(line: 1181, column: 33, scope: !4926)
!4930 = !DILocation(line: 1182, column: 7, scope: !4926)
!4931 = !DILocation(line: 1182, column: 10, scope: !4926)
!4932 = !DILocation(line: 1181, column: 7, scope: !3623)
!4933 = !DILocalVariable(name: "old_frame_size", scope: !4934, file: !3, line: 1184, type: !2359)
!4934 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 1183, column: 5)
!4935 = !DILocation(line: 1184, column: 21, scope: !4934)
!4936 = !DILocation(line: 1184, column: 38, scope: !4934)
!4937 = !DILocation(line: 1186, column: 25, scope: !4934)
!4938 = !DILocation(line: 1186, column: 7, scope: !4934)
!4939 = !DILocation(line: 1188, column: 7, scope: !4934)
!4940 = !DILocation(line: 1190, column: 7, scope: !4934)
!4941 = !DILocation(line: 1191, column: 5, scope: !4934)
!4942 = !DILocation(line: 1199, column: 9, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1199, column: 7)
!4944 = !DILocation(line: 1199, column: 7, scope: !3623)
!4945 = !DILocation(line: 1200, column: 5, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 1200, column: 5)
!4947 = !DILocation(line: 1200, column: 5, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4946, file: !3, line: 1200, column: 5)
!4949 = !DILocation(line: 1201, column: 41, scope: !4948)
!4950 = !DILocation(line: 1201, column: 25, scope: !4948)
!4951 = !DILocation(line: 1201, column: 7, scope: !4948)
!4952 = distinct !{!4952, !4945, !4953}
!4953 = !DILocation(line: 1201, column: 71, scope: !4946)
!4954 = !DILabel(scope: !3623, name: "failed", file: !3, line: 1205)
!4955 = !DILocation(line: 1205, column: 2, scope: !3623)
!4956 = !DILocation(line: 1207, column: 3, scope: !3623)
!4957 = !DILocation(line: 1208, column: 3, scope: !3623)
!4958 = !DILocation(line: 1209, column: 22, scope: !3623)
!4959 = !DILocation(line: 1221, column: 10, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1221, column: 3)
!4961 = !DILocation(line: 1221, column: 8, scope: !4960)
!4962 = !DILocation(line: 1221, column: 35, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4960, file: !3, line: 1221, column: 3)
!4964 = !DILocation(line: 1221, column: 39, scope: !4963)
!4965 = !DILocation(line: 1221, column: 37, scope: !4963)
!4966 = !DILocation(line: 1221, column: 3, scope: !4960)
!4967 = !DILocalVariable(name: "addr", scope: !4968, file: !3, line: 1223, type: !2372)
!4968 = distinct !DILexicalBlock(scope: !4963, file: !3, line: 1222, column: 5)
!4969 = !DILocation(line: 1223, column: 11, scope: !4968)
!4970 = !DILocation(line: 1225, column: 11, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 1225, column: 11)
!4972 = !DILocation(line: 1225, column: 25, scope: !4971)
!4973 = !DILocation(line: 1225, column: 11, scope: !4968)
!4974 = !DILocation(line: 1226, column: 9, scope: !4971)
!4975 = !DILocation(line: 1226, column: 7, scope: !4971)
!4976 = !DILocation(line: 1226, column: 2, scope: !4971)
!4977 = !DILocation(line: 1228, column: 11, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 1228, column: 11)
!4979 = !DILocation(line: 1228, column: 29, scope: !4978)
!4980 = !DILocation(line: 1228, column: 11, scope: !4968)
!4981 = !DILocation(line: 1229, column: 9, scope: !4978)
!4982 = !DILocation(line: 1229, column: 27, scope: !4978)
!4983 = !DILocation(line: 1229, column: 7, scope: !4978)
!4984 = !DILocation(line: 1229, column: 2, scope: !4978)
!4985 = !DILocation(line: 1231, column: 11, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 1231, column: 11)
!4987 = !DILocation(line: 1231, column: 11, scope: !4968)
!4988 = !DILocation(line: 1233, column: 8, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 1233, column: 8)
!4990 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 1232, column: 2)
!4991 = !DILocation(line: 1233, column: 21, scope: !4989)
!4992 = !DILocation(line: 1233, column: 24, scope: !4989)
!4993 = !DILocation(line: 1233, column: 8, scope: !4990)
!4994 = !DILocalVariable(name: "reg", scope: !4995, file: !3, line: 1235, type: !2372)
!4995 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 1234, column: 6)
!4996 = !DILocation(line: 1235, column: 12, scope: !4995)
!4997 = !DILocation(line: 1235, column: 18, scope: !4995)
!4998 = !DILocation(line: 1235, column: 32, scope: !4995)
!4999 = !DILocation(line: 1237, column: 8, scope: !4995)
!5000 = !DILocation(line: 1237, column: 28, scope: !4995)
!5001 = !DILocation(line: 1238, column: 8, scope: !4995)
!5002 = !DILocation(line: 1239, column: 24, scope: !4995)
!5003 = !DILocation(line: 1239, column: 8, scope: !4995)
!5004 = !DILocation(line: 1239, column: 22, scope: !4995)
!5005 = !DILocation(line: 1240, column: 12, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 1240, column: 12)
!5007 = !DILocation(line: 1240, column: 33, scope: !5006)
!5008 = !DILocation(line: 1240, column: 12, scope: !4995)
!5009 = !DILocation(line: 1241, column: 3, scope: !5006)
!5010 = !DILocation(line: 1244, column: 29, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 1243, column: 3)
!5012 = !DILocation(line: 1244, column: 48, scope: !5011)
!5013 = !DILocation(line: 1244, column: 5, scope: !5011)
!5014 = !DILocation(line: 1244, column: 27, scope: !5011)
!5015 = !DILocation(line: 1245, column: 5, scope: !5011)
!5016 = !DILocation(line: 1245, column: 21, scope: !5011)
!5017 = !DILocation(line: 1247, column: 8, scope: !4995)
!5018 = !DILocation(line: 1247, column: 27, scope: !4995)
!5019 = !DILocation(line: 1248, column: 6, scope: !4995)
!5020 = !DILocation(line: 1249, column: 13, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 1249, column: 13)
!5022 = !DILocation(line: 1249, column: 27, scope: !5021)
!5023 = !DILocation(line: 1249, column: 13, scope: !4989)
!5024 = !DILocation(line: 1250, column: 35, scope: !5021)
!5025 = !DILocation(line: 1250, column: 6, scope: !5021)
!5026 = !DILocation(line: 1250, column: 33, scope: !5021)
!5027 = !DILocation(line: 1251, column: 2, scope: !4990)
!5028 = !DILocation(line: 1256, column: 11, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 1256, column: 11)
!5030 = !DILocation(line: 1256, column: 32, scope: !5029)
!5031 = !DILocation(line: 1256, column: 35, scope: !5029)
!5032 = !DILocation(line: 1256, column: 48, scope: !5029)
!5033 = !DILocation(line: 1256, column: 51, scope: !5029)
!5034 = !DILocation(line: 1256, column: 11, scope: !4968)
!5035 = !DILocalVariable(name: "reg", scope: !5036, file: !3, line: 1258, type: !2372)
!5036 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 1257, column: 2)
!5037 = !DILocation(line: 1258, column: 8, scope: !5036)
!5038 = !DILocation(line: 1258, column: 14, scope: !5036)
!5039 = !DILocation(line: 1258, column: 28, scope: !5036)
!5040 = !DILocalVariable(name: "equiv", scope: !5036, file: !3, line: 1259, type: !2372)
!5041 = !DILocation(line: 1259, column: 8, scope: !5036)
!5042 = !DILocalVariable(name: "use", scope: !5036, file: !3, line: 1260, type: !5043)
!5043 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_ref", file: !5044, line: 429, baseType: !5045)
!5044 = !DIFile(filename: "./df.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!5045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5046, size: 64)
!5046 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "df_ref_d", file: !5044, line: 422, size: 704, elements: !5047)
!5047 = !{!5048, !5087, !5092, !5097}
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5046, file: !5044, line: 424, baseType: !5049, size: 512)
!5049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_base_ref", file: !5044, line: 356, size: 512, elements: !5050)
!5050 = !{!5051, !5052, !5053, !5054, !5055, !5061, !5082, !5083, !5084, !5085, !5086}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !5049, file: !5044, line: 360, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5049, file: !5044, line: 362, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5049, file: !5044, line: 364, baseType: !2396, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !5049, file: !5044, line: 365, baseType: !2372, size: 64, offset: 64)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !5049, file: !5044, line: 366, baseType: !5056, size: 64, offset: 128)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5057, size: 64)
!5057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_link", file: !5044, line: 449, size: 128, elements: !5058)
!5058 = !{!5059, !5060}
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5057, file: !5044, line: 451, baseType: !5043, size: 64)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5057, file: !5044, line: 452, baseType: !5056, size: 64, offset: 64)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "insn_info", scope: !5049, file: !5044, line: 370, baseType: !5062, size: 64, offset: 192)
!5062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5063, size: 64)
!5063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_insn_info", file: !5044, line: 433, size: 384, elements: !5064)
!5064 = !{!5065, !5066, !5068, !5069, !5070, !5081}
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5063, file: !5044, line: 435, baseType: !2372, size: 64)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !5063, file: !5044, line: 436, baseType: !5067, size: 64, offset: 64)
!5067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5043, size: 64)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !5063, file: !5044, line: 437, baseType: !5067, size: 64, offset: 128)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "eq_uses", scope: !5063, file: !5044, line: 439, baseType: !5067, size: 64, offset: 192)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "mw_hardregs", scope: !5063, file: !5044, line: 440, baseType: !5071, size: 64, offset: 256)
!5071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5072, size: 64)
!5072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5073, size: 64)
!5073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_mw_hardreg", file: !5044, line: 339, size: 192, elements: !5074)
!5074 = !{!5075, !5076, !5077, !5078, !5079, !5080}
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "mw_reg", scope: !5073, file: !5044, line: 341, baseType: !2372, size: 64)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5073, file: !5044, line: 344, baseType: !7, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5073, file: !5044, line: 346, baseType: !2396, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 64)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "start_regno", scope: !5073, file: !5044, line: 347, baseType: !7, size: 32, offset: 96)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "end_regno", scope: !5073, file: !5044, line: 348, baseType: !7, size: 32, offset: 128)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "mw_order", scope: !5073, file: !5044, line: 349, baseType: !7, size: 32, offset: 160)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !5063, file: !5044, line: 444, baseType: !2396, size: 32, offset: 320)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "next_reg", scope: !5049, file: !5044, line: 374, baseType: !5045, size: 64, offset: 256)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "prev_reg", scope: !5049, file: !5044, line: 375, baseType: !5045, size: 64, offset: 320)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !5049, file: !5044, line: 376, baseType: !7, size: 32, offset: 384)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5049, file: !5044, line: 379, baseType: !2396, size: 32, offset: 416)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "ref_order", scope: !5049, file: !5044, line: 382, baseType: !7, size: 32, offset: 448)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "regular_ref", scope: !5046, file: !5044, line: 425, baseType: !5088, size: 576)
!5088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_regular_ref", file: !5044, line: 398, size: 576, elements: !5089)
!5089 = !{!5090, !5091}
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5088, file: !5044, line: 400, baseType: !5049, size: 512)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !5088, file: !5044, line: 405, baseType: !3579, size: 64, offset: 512)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_ref", scope: !5046, file: !5044, line: 426, baseType: !5093, size: 576)
!5093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_artificial_ref", file: !5044, line: 388, size: 576, elements: !5094)
!5094 = !{!5095, !5096}
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5093, file: !5044, line: 390, baseType: !5049, size: 512)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !5093, file: !5044, line: 394, baseType: !2906, size: 64, offset: 512)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "extract_ref", scope: !5046, file: !5044, line: 427, baseType: !5098, size: 704)
!5098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_extract_ref", file: !5044, line: 413, size: 704, elements: !5099)
!5099 = !{!5100, !5101, !5102, !5103}
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5098, file: !5044, line: 415, baseType: !5088, size: 576)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !5098, file: !5044, line: 416, baseType: !2396, size: 32, offset: 576)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5098, file: !5044, line: 417, baseType: !2396, size: 32, offset: 608)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5098, file: !5044, line: 418, baseType: !5, size: 32, offset: 640)
!5104 = !DILocation(line: 1260, column: 11, scope: !5036)
!5105 = !DILocalVariable(name: "next", scope: !5036, file: !3, line: 1260, type: !5043)
!5106 = !DILocation(line: 1260, column: 16, scope: !5036)
!5107 = !DILocation(line: 1262, column: 8, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 1262, column: 8)
!5109 = !DILocation(line: 1262, column: 27, scope: !5108)
!5110 = !DILocation(line: 1262, column: 8, scope: !5036)
!5111 = !DILocation(line: 1263, column: 14, scope: !5108)
!5112 = !DILocation(line: 1263, column: 33, scope: !5108)
!5113 = !DILocation(line: 1263, column: 12, scope: !5108)
!5114 = !DILocation(line: 1263, column: 6, scope: !5108)
!5115 = !DILocation(line: 1264, column: 13, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 1264, column: 13)
!5117 = !DILocation(line: 1264, column: 33, scope: !5116)
!5118 = !DILocation(line: 1264, column: 13, scope: !5108)
!5119 = !DILocation(line: 1265, column: 14, scope: !5116)
!5120 = !DILocation(line: 1265, column: 34, scope: !5116)
!5121 = !DILocation(line: 1265, column: 12, scope: !5116)
!5122 = !DILocation(line: 1265, column: 6, scope: !5116)
!5123 = !DILocation(line: 1266, column: 13, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 1266, column: 13)
!5125 = !DILocation(line: 1266, column: 17, scope: !5124)
!5126 = !DILocation(line: 1266, column: 20, scope: !5124)
!5127 = !DILocation(line: 1266, column: 13, scope: !5116)
!5128 = !DILocation(line: 1267, column: 22, scope: !5124)
!5129 = !DILocation(line: 1267, column: 44, scope: !5124)
!5130 = !DILocation(line: 1267, column: 14, scope: !5124)
!5131 = !DILocation(line: 1267, column: 12, scope: !5124)
!5132 = !DILocation(line: 1267, column: 6, scope: !5124)
!5133 = !DILocation(line: 1268, column: 13, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 1268, column: 13)
!5135 = !DILocation(line: 1268, column: 17, scope: !5134)
!5136 = !DILocation(line: 1268, column: 20, scope: !5134)
!5137 = !DILocation(line: 1268, column: 32, scope: !5134)
!5138 = !DILocation(line: 1268, column: 40, scope: !5134)
!5139 = !DILocation(line: 1268, column: 55, scope: !5134)
!5140 = !DILocation(line: 1268, column: 52, scope: !5134)
!5141 = !DILocation(line: 1268, column: 13, scope: !5124)
!5142 = !DILocation(line: 1269, column: 14, scope: !5134)
!5143 = !DILocation(line: 1269, column: 12, scope: !5134)
!5144 = !DILocation(line: 1269, column: 6, scope: !5134)
!5145 = !DILocation(line: 1271, column: 8, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 1271, column: 8)
!5147 = !DILocation(line: 1271, column: 17, scope: !5146)
!5148 = !DILocation(line: 1271, column: 14, scope: !5146)
!5149 = !DILocation(line: 1271, column: 8, scope: !5036)
!5150 = !DILocation(line: 1272, column: 6, scope: !5146)
!5151 = !DILocation(line: 1274, column: 15, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 1274, column: 4)
!5153 = !DILocation(line: 1274, column: 13, scope: !5152)
!5154 = !DILocation(line: 1274, column: 9, scope: !5152)
!5155 = !DILocation(line: 1274, column: 37, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 1274, column: 4)
!5157 = !DILocation(line: 1274, column: 4, scope: !5152)
!5158 = !DILocation(line: 1276, column: 15, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 1275, column: 6)
!5160 = !DILocation(line: 1276, column: 13, scope: !5159)
!5161 = !DILocation(line: 1280, column: 15, scope: !5159)
!5162 = !DILocation(line: 1280, column: 13, scope: !5159)
!5163 = !DILocation(line: 1281, column: 8, scope: !5159)
!5164 = !DILocation(line: 1281, column: 15, scope: !5159)
!5165 = !DILocation(line: 1281, column: 20, scope: !5159)
!5166 = !DILocation(line: 1281, column: 23, scope: !5159)
!5167 = !DILocation(line: 1281, column: 45, scope: !5159)
!5168 = !DILocation(line: 1281, column: 42, scope: !5159)
!5169 = !DILocation(line: 0, scope: !5159)
!5170 = !DILocation(line: 1282, column: 10, scope: !5159)
!5171 = !DILocation(line: 1282, column: 8, scope: !5159)
!5172 = distinct !{!5172, !5163, !5170}
!5173 = !DILocation(line: 1284, column: 12, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 1284, column: 12)
!5175 = !DILocation(line: 1284, column: 12, scope: !5159)
!5176 = !DILocation(line: 1286, column: 10, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 1286, column: 9)
!5178 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 1285, column: 3)
!5179 = !DILocation(line: 1286, column: 9, scope: !5178)
!5180 = !DILocation(line: 1288, column: 40, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 1287, column: 7)
!5182 = !DILocation(line: 1288, column: 9, scope: !5181)
!5183 = !DILocation(line: 1288, column: 38, scope: !5181)
!5184 = !DILocation(line: 1289, column: 40, scope: !5181)
!5185 = !DILocation(line: 1289, column: 9, scope: !5181)
!5186 = !DILocation(line: 1290, column: 7, scope: !5181)
!5187 = !DILocation(line: 1293, column: 33, scope: !5177)
!5188 = !DILocation(line: 1294, column: 12, scope: !5177)
!5189 = !DILocation(line: 1294, column: 17, scope: !5177)
!5190 = !DILocation(line: 1293, column: 11, scope: !5177)
!5191 = !DILocation(line: 1292, column: 7, scope: !5177)
!5192 = !DILocation(line: 1293, column: 9, scope: !5177)
!5193 = !DILocation(line: 1295, column: 3, scope: !5178)
!5194 = !DILocation(line: 1296, column: 6, scope: !5159)
!5195 = !DILocation(line: 1274, column: 48, scope: !5156)
!5196 = !DILocation(line: 1274, column: 46, scope: !5156)
!5197 = !DILocation(line: 1274, column: 4, scope: !5156)
!5198 = distinct !{!5198, !5157, !5199}
!5199 = !DILocation(line: 1296, column: 6, scope: !5152)
!5200 = !DILocation(line: 1297, column: 2, scope: !5036)
!5201 = !DILocation(line: 1298, column: 5, scope: !4968)
!5202 = !DILocation(line: 1221, column: 51, scope: !4963)
!5203 = !DILocation(line: 1221, column: 3, scope: !4963)
!5204 = distinct !{!5204, !4966, !5205}
!5205 = !DILocation(line: 1298, column: 5, scope: !4960)
!5206 = !DILocation(line: 1303, column: 20, scope: !3623)
!5207 = !DILocation(line: 1313, column: 15, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1313, column: 3)
!5209 = !DILocation(line: 1313, column: 13, scope: !5208)
!5210 = !DILocation(line: 1313, column: 8, scope: !5208)
!5211 = !DILocation(line: 1313, column: 22, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 1313, column: 3)
!5213 = !DILocation(line: 1313, column: 3, scope: !5208)
!5214 = !DILocation(line: 1314, column: 9, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 1314, column: 9)
!5216 = !DILocation(line: 1314, column: 9, scope: !5212)
!5217 = !DILocalVariable(name: "pnote", scope: !5218, file: !3, line: 1316, type: !3579)
!5218 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 1315, column: 7)
!5219 = !DILocation(line: 1316, column: 7, scope: !5218)
!5220 = !DILocation(line: 1318, column: 6, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 1318, column: 6)
!5222 = !DILocation(line: 1318, column: 6, scope: !5218)
!5223 = !DILocation(line: 1319, column: 26, scope: !5221)
!5224 = !DILocation(line: 1320, column: 20, scope: !5221)
!5225 = !DILocation(line: 1319, column: 4, scope: !5221)
!5226 = !DILocation(line: 1322, column: 7, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 1322, column: 6)
!5228 = !DILocation(line: 1322, column: 33, scope: !5227)
!5229 = !DILocation(line: 1324, column: 7, scope: !5227)
!5230 = !DILocation(line: 1324, column: 11, scope: !5227)
!5231 = !DILocation(line: 1324, column: 27, scope: !5227)
!5232 = !DILocation(line: 1325, column: 4, scope: !5227)
!5233 = !DILocation(line: 1325, column: 22, scope: !5227)
!5234 = !DILocation(line: 1325, column: 7, scope: !5227)
!5235 = !DILocation(line: 1326, column: 6, scope: !5227)
!5236 = !DILocation(line: 1326, column: 10, scope: !5227)
!5237 = !DILocation(line: 1326, column: 36, scope: !5227)
!5238 = !DILocation(line: 1327, column: 3, scope: !5227)
!5239 = !DILocation(line: 1327, column: 8, scope: !5227)
!5240 = !DILocation(line: 1328, column: 7, scope: !5227)
!5241 = !DILocation(line: 1328, column: 10, scope: !5227)
!5242 = !DILocation(line: 1328, column: 46, scope: !5227)
!5243 = !DILocation(line: 1329, column: 7, scope: !5227)
!5244 = !DILocation(line: 1329, column: 11, scope: !5227)
!5245 = !DILocation(line: 1329, column: 57, scope: !5227)
!5246 = !DILocation(line: 1330, column: 4, scope: !5227)
!5247 = !DILocation(line: 1330, column: 7, scope: !5227)
!5248 = !DILocation(line: 1331, column: 8, scope: !5227)
!5249 = !DILocation(line: 1331, column: 5, scope: !5227)
!5250 = !DILocation(line: 1332, column: 3, scope: !5227)
!5251 = !DILocation(line: 1332, column: 8, scope: !5227)
!5252 = !DILocation(line: 1333, column: 7, scope: !5227)
!5253 = !DILocation(line: 1333, column: 12, scope: !5227)
!5254 = !DILocation(line: 1322, column: 6, scope: !5218)
!5255 = !DILocation(line: 1335, column: 19, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 1334, column: 4)
!5257 = !DILocation(line: 1335, column: 6, scope: !5256)
!5258 = !DILocation(line: 1336, column: 6, scope: !5256)
!5259 = !DILocation(line: 1342, column: 6, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 1342, column: 6)
!5261 = !DILocation(line: 1342, column: 32, scope: !5260)
!5262 = !DILocation(line: 1342, column: 6, scope: !5218)
!5263 = !DILocation(line: 1343, column: 26, scope: !5260)
!5264 = !DILocation(line: 1344, column: 20, scope: !5260)
!5265 = !DILocation(line: 1343, column: 4, scope: !5260)
!5266 = !DILocation(line: 1348, column: 6, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 1348, column: 6)
!5268 = !DILocation(line: 1349, column: 6, scope: !5267)
!5269 = !DILocation(line: 1349, column: 9, scope: !5267)
!5270 = !DILocation(line: 1349, column: 35, scope: !5267)
!5271 = !DILocation(line: 1350, column: 6, scope: !5267)
!5272 = !DILocation(line: 1350, column: 9, scope: !5267)
!5273 = !DILocation(line: 1351, column: 6, scope: !5267)
!5274 = !DILocation(line: 1351, column: 9, scope: !5267)
!5275 = !DILocation(line: 1352, column: 6, scope: !5267)
!5276 = !DILocation(line: 1352, column: 10, scope: !5267)
!5277 = !DILocation(line: 1353, column: 6, scope: !5267)
!5278 = !DILocation(line: 1353, column: 3, scope: !5267)
!5279 = !DILocation(line: 1348, column: 6, scope: !5218)
!5280 = !DILocation(line: 1355, column: 19, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 1354, column: 4)
!5282 = !DILocation(line: 1355, column: 6, scope: !5281)
!5283 = !DILocation(line: 1356, column: 6, scope: !5281)
!5284 = !DILocation(line: 1359, column: 11, scope: !5218)
!5285 = !DILocation(line: 1359, column: 8, scope: !5218)
!5286 = !DILocation(line: 1360, column: 2, scope: !5218)
!5287 = !DILocation(line: 1360, column: 10, scope: !5218)
!5288 = !DILocation(line: 1360, column: 9, scope: !5218)
!5289 = !DILocation(line: 1360, column: 16, scope: !5218)
!5290 = !DILocation(line: 1362, column: 10, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 1362, column: 10)
!5292 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 1361, column: 4)
!5293 = !DILocation(line: 1362, column: 33, scope: !5291)
!5294 = !DILocation(line: 1363, column: 3, scope: !5291)
!5295 = !DILocation(line: 1363, column: 6, scope: !5291)
!5296 = !DILocation(line: 1363, column: 29, scope: !5291)
!5297 = !DILocation(line: 1364, column: 3, scope: !5291)
!5298 = !DILocation(line: 1364, column: 6, scope: !5291)
!5299 = !DILocation(line: 1364, column: 29, scope: !5291)
!5300 = !DILocation(line: 1362, column: 10, scope: !5292)
!5301 = !DILocation(line: 1365, column: 17, scope: !5291)
!5302 = !DILocation(line: 1365, column: 9, scope: !5291)
!5303 = !DILocation(line: 1365, column: 15, scope: !5291)
!5304 = !DILocation(line: 1365, column: 8, scope: !5291)
!5305 = !DILocation(line: 1367, column: 17, scope: !5291)
!5306 = !DILocation(line: 1367, column: 14, scope: !5291)
!5307 = distinct !{!5307, !5286, !5308}
!5308 = !DILocation(line: 1368, column: 4, scope: !5218)
!5309 = !DILocation(line: 1375, column: 27, scope: !5218)
!5310 = !DILocation(line: 1375, column: 2, scope: !5218)
!5311 = !DILocation(line: 1379, column: 21, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 1379, column: 6)
!5313 = !DILocation(line: 1379, column: 6, scope: !5312)
!5314 = !DILocation(line: 1379, column: 37, scope: !5312)
!5315 = !DILocation(line: 1379, column: 6, scope: !5218)
!5316 = !DILocation(line: 1381, column: 20, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 1380, column: 4)
!5318 = !DILocation(line: 1381, column: 6, scope: !5317)
!5319 = !DILocation(line: 1382, column: 11, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1382, column: 10)
!5321 = !DILocation(line: 1382, column: 10, scope: !5317)
!5322 = !DILocation(line: 1384, column: 18, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 1383, column: 8)
!5324 = !DILocation(line: 1384, column: 3, scope: !5323)
!5325 = !DILocation(line: 1386, column: 16, scope: !5323)
!5326 = !DILocation(line: 1386, column: 3, scope: !5323)
!5327 = !DILocation(line: 1387, column: 3, scope: !5323)
!5328 = !DILocation(line: 1389, column: 4, scope: !5317)
!5329 = !DILocation(line: 1390, column: 7, scope: !5218)
!5330 = !DILocation(line: 1313, column: 35, scope: !5212)
!5331 = !DILocation(line: 1313, column: 33, scope: !5212)
!5332 = !DILocation(line: 1313, column: 3, scope: !5212)
!5333 = distinct !{!5333, !5213, !5334}
!5334 = !DILocation(line: 1390, column: 7, scope: !5208)
!5335 = !DILocation(line: 1394, column: 7, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1394, column: 7)
!5337 = !DILocation(line: 1394, column: 24, scope: !5336)
!5338 = !DILocation(line: 1394, column: 7, scope: !3623)
!5339 = !DILocalVariable(name: "size", scope: !5340, file: !3, line: 1396, type: !2359)
!5340 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 1395, column: 5)
!5341 = !DILocation(line: 1396, column: 21, scope: !5340)
!5342 = !DILocation(line: 1396, column: 28, scope: !5340)
!5343 = !DILocation(line: 1396, column: 46, scope: !5340)
!5344 = !DILocation(line: 1399, column: 14, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 1399, column: 7)
!5346 = !DILocation(line: 1399, column: 12, scope: !5345)
!5347 = !DILocation(line: 1399, column: 19, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 1399, column: 7)
!5349 = !DILocation(line: 1399, column: 21, scope: !5348)
!5350 = !DILocation(line: 1399, column: 7, scope: !5345)
!5351 = !DILocation(line: 1400, column: 27, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 1400, column: 6)
!5353 = !DILocation(line: 1400, column: 6, scope: !5352)
!5354 = !DILocation(line: 1400, column: 30, scope: !5352)
!5355 = !DILocation(line: 1400, column: 46, scope: !5352)
!5356 = !DILocation(line: 1400, column: 35, scope: !5352)
!5357 = !DILocation(line: 1400, column: 49, scope: !5352)
!5358 = !DILocation(line: 1400, column: 67, scope: !5352)
!5359 = !DILocation(line: 1400, column: 52, scope: !5352)
!5360 = !DILocation(line: 1400, column: 6, scope: !5348)
!5361 = !DILocation(line: 1401, column: 9, scope: !5352)
!5362 = !DILocation(line: 1401, column: 4, scope: !5352)
!5363 = !DILocation(line: 1400, column: 68, scope: !5352)
!5364 = !DILocation(line: 1399, column: 47, scope: !5348)
!5365 = !DILocation(line: 1399, column: 7, scope: !5348)
!5366 = distinct !{!5366, !5350, !5367}
!5367 = !DILocation(line: 1401, column: 12, scope: !5345)
!5368 = !DILocation(line: 1403, column: 11, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 1403, column: 11)
!5370 = !DILocation(line: 1403, column: 16, scope: !5369)
!5371 = !DILocation(line: 1403, column: 11, scope: !5340)
!5372 = !DILocation(line: 1405, column: 4, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5369, file: !3, line: 1404, column: 2)
!5374 = !DILocation(line: 1406, column: 10, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 1406, column: 8)
!5376 = !DILocation(line: 1406, column: 8, scope: !5373)
!5377 = !DILocation(line: 1408, column: 8, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5375, file: !3, line: 1407, column: 6)
!5379 = !DILocation(line: 1409, column: 23, scope: !5378)
!5380 = !DILocation(line: 1410, column: 6, scope: !5378)
!5381 = !DILocation(line: 1411, column: 2, scope: !5373)
!5382 = !DILocation(line: 1412, column: 5, scope: !5340)
!5383 = !DILocation(line: 1415, column: 7, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1415, column: 7)
!5385 = !DILocation(line: 1415, column: 7, scope: !3623)
!5386 = !DILocation(line: 1416, column: 11, scope: !5384)
!5387 = !DILocation(line: 1416, column: 5, scope: !5384)
!5388 = !DILocation(line: 1417, column: 7, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1417, column: 7)
!5390 = !DILocation(line: 1417, column: 7, scope: !3623)
!5391 = !DILocation(line: 1418, column: 11, scope: !5389)
!5392 = !DILocation(line: 1418, column: 5, scope: !5389)
!5393 = !DILocation(line: 1419, column: 22, scope: !3623)
!5394 = !DILocation(line: 1420, column: 23, scope: !3623)
!5395 = !DILocation(line: 1421, column: 3, scope: !3623)
!5396 = !DILocation(line: 1422, column: 24, scope: !3623)
!5397 = !DILocation(line: 1424, column: 9, scope: !3623)
!5398 = !DILocation(line: 1424, column: 3, scope: !3623)
!5399 = !DILocation(line: 1426, column: 7, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1426, column: 7)
!5401 = !DILocation(line: 1426, column: 7, scope: !3623)
!5402 = !DILocation(line: 1427, column: 11, scope: !5400)
!5403 = !DILocation(line: 1427, column: 5, scope: !5400)
!5404 = !DILocation(line: 1428, column: 7, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1428, column: 7)
!5406 = !DILocation(line: 1428, column: 7, scope: !3623)
!5407 = !DILocation(line: 1429, column: 11, scope: !5405)
!5408 = !DILocation(line: 1429, column: 5, scope: !5405)
!5409 = !DILocation(line: 1431, column: 10, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1431, column: 3)
!5411 = !DILocation(line: 1431, column: 8, scope: !5410)
!5412 = !DILocation(line: 1431, column: 15, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 1431, column: 3)
!5414 = !DILocation(line: 1431, column: 17, scope: !5413)
!5415 = !DILocation(line: 1431, column: 3, scope: !5410)
!5416 = !DILocation(line: 1432, column: 9, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5413, file: !3, line: 1432, column: 9)
!5418 = !DILocation(line: 1432, column: 32, scope: !5417)
!5419 = !DILocation(line: 1432, column: 9, scope: !5413)
!5420 = !DILocation(line: 1433, column: 29, scope: !5417)
!5421 = !DILocation(line: 1433, column: 52, scope: !5417)
!5422 = !DILocation(line: 1433, column: 7, scope: !5417)
!5423 = !DILocation(line: 1432, column: 33, scope: !5417)
!5424 = !DILocation(line: 1431, column: 43, scope: !5413)
!5425 = !DILocation(line: 1431, column: 3, scope: !5413)
!5426 = distinct !{!5426, !5415, !5427}
!5427 = !DILocation(line: 1433, column: 54, scope: !5410)
!5428 = !DILocation(line: 1434, column: 9, scope: !3623)
!5429 = !DILocation(line: 1434, column: 3, scope: !3623)
!5430 = !DILocation(line: 1436, column: 9, scope: !3623)
!5431 = !DILocation(line: 1436, column: 3, scope: !3623)
!5432 = !DILocation(line: 1437, column: 18, scope: !3623)
!5433 = !DILocation(line: 1438, column: 9, scope: !3623)
!5434 = !DILocation(line: 1438, column: 3, scope: !3623)
!5435 = !DILocation(line: 1439, column: 9, scope: !3623)
!5436 = !DILocation(line: 1439, column: 3, scope: !3623)
!5437 = !DILocation(line: 1440, column: 9, scope: !3623)
!5438 = !DILocation(line: 1440, column: 3, scope: !3623)
!5439 = !DILocation(line: 1441, column: 9, scope: !3623)
!5440 = !DILocation(line: 1441, column: 3, scope: !3623)
!5441 = !DILocation(line: 1442, column: 9, scope: !3623)
!5442 = !DILocation(line: 1442, column: 3, scope: !3623)
!5443 = !DILocation(line: 1444, column: 3, scope: !3623)
!5444 = !DILocation(line: 1445, column: 10, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1445, column: 3)
!5446 = !DILocation(line: 1445, column: 8, scope: !5445)
!5447 = !DILocation(line: 1445, column: 15, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 1445, column: 3)
!5449 = !DILocation(line: 1445, column: 19, scope: !5448)
!5450 = !DILocation(line: 1445, column: 17, scope: !5448)
!5451 = !DILocation(line: 1445, column: 3, scope: !5445)
!5452 = !DILocation(line: 1446, column: 5, scope: !5448)
!5453 = !DILocation(line: 1445, column: 30, scope: !5448)
!5454 = !DILocation(line: 1445, column: 3, scope: !5448)
!5455 = distinct !{!5455, !5451, !5456}
!5456 = !DILocation(line: 1446, column: 5, scope: !5445)
!5457 = !DILocation(line: 1449, column: 3, scope: !3623)
!5458 = !DILocation(line: 1450, column: 22, scope: !3623)
!5459 = !DILocation(line: 1451, column: 3, scope: !3623)
!5460 = !DILocation(line: 1456, column: 26, scope: !3623)
!5461 = !DILocation(line: 1456, column: 3, scope: !3623)
!5462 = !DILocation(line: 1462, column: 8, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1462, column: 7)
!5464 = !DILocation(line: 1462, column: 7, scope: !3623)
!5465 = !DILocation(line: 1463, column: 5, scope: !5463)
!5466 = !DILocation(line: 1463, column: 53, scope: !5463)
!5467 = !DILocation(line: 1466, column: 3, scope: !3623)
!5468 = !DILocation(line: 1468, column: 10, scope: !3623)
!5469 = !DILocation(line: 1468, column: 3, scope: !3623)
!5470 = distinct !DISubprogram(name: "mark_home_live", scope: !3, file: !3, line: 2366, type: !5471, scopeLine: 2367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!5471 = !DISubroutineType(types: !5472)
!5472 = !{null, !2396}
!5473 = !DILocalVariable(name: "regno", arg: 1, scope: !5470, file: !3, line: 2366, type: !2396)
!5474 = !DILocation(line: 2366, column: 21, scope: !5470)
!5475 = !DILocation(line: 2368, column: 7, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 2368, column: 7)
!5477 = !DILocation(line: 2368, column: 20, scope: !5476)
!5478 = !DILocation(line: 2368, column: 27, scope: !5476)
!5479 = !DILocation(line: 2368, column: 7, scope: !5470)
!5480 = !DILocation(line: 2369, column: 23, scope: !5476)
!5481 = !DILocation(line: 2369, column: 30, scope: !5476)
!5482 = !DILocation(line: 2369, column: 5, scope: !5476)
!5483 = !DILocation(line: 2370, column: 1, scope: !5470)
!5484 = distinct !DISubprogram(name: "has_nonexceptional_receiver", scope: !3, file: !3, line: 647, type: !5485, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!5485 = !DISubroutineType(types: !5486)
!5486 = !{!2603}
!5487 = !DILocalVariable(name: "e", scope: !5484, file: !3, line: 649, type: !2923)
!5488 = !DILocation(line: 649, column: 8, scope: !5484)
!5489 = !DILocalVariable(name: "ei", scope: !5484, file: !3, line: 650, type: !5490)
!5490 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !142, line: 682, baseType: !5491)
!5491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 679, size: 128, elements: !5492)
!5492 = !{!5493, !5494}
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5491, file: !142, line: 680, baseType: !7, size: 32)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !5491, file: !142, line: 681, baseType: !5495, size: 64, offset: 64)
!5495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!5496 = !DILocation(line: 650, column: 17, scope: !5484)
!5497 = !DILocalVariable(name: "tos", scope: !5484, file: !3, line: 651, type: !3588)
!5498 = !DILocation(line: 651, column: 16, scope: !5484)
!5499 = !DILocalVariable(name: "worklist", scope: !5484, file: !3, line: 651, type: !3588)
!5500 = !DILocation(line: 651, column: 22, scope: !5484)
!5501 = !DILocalVariable(name: "bb", scope: !5484, file: !3, line: 651, type: !2906)
!5502 = !DILocation(line: 651, column: 32, scope: !5484)
!5503 = !DILocation(line: 654, column: 8, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 654, column: 7)
!5505 = !DILocation(line: 654, column: 7, scope: !5484)
!5506 = !DILocation(line: 655, column: 5, scope: !5504)
!5507 = !DILocation(line: 658, column: 20, scope: !5484)
!5508 = !DILocation(line: 658, column: 18, scope: !5484)
!5509 = !DILocation(line: 658, column: 7, scope: !5484)
!5510 = !DILocation(line: 660, column: 3, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 660, column: 3)
!5512 = !DILocation(line: 660, column: 3, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 660, column: 3)
!5514 = !DILocation(line: 661, column: 5, scope: !5513)
!5515 = !DILocation(line: 661, column: 9, scope: !5513)
!5516 = !DILocation(line: 661, column: 15, scope: !5513)
!5517 = distinct !{!5517, !5510, !5518}
!5518 = !DILocation(line: 661, column: 19, scope: !5511)
!5519 = !DILocation(line: 664, column: 3, scope: !5484)
!5520 = !DILocation(line: 664, column: 19, scope: !5484)
!5521 = !DILocation(line: 664, column: 25, scope: !5484)
!5522 = !DILocation(line: 665, column: 12, scope: !5484)
!5523 = !DILocation(line: 665, column: 7, scope: !5484)
!5524 = !DILocation(line: 665, column: 10, scope: !5484)
!5525 = !DILocation(line: 668, column: 3, scope: !5484)
!5526 = !DILocation(line: 668, column: 10, scope: !5484)
!5527 = !DILocation(line: 668, column: 17, scope: !5484)
!5528 = !DILocation(line: 668, column: 14, scope: !5484)
!5529 = !DILocation(line: 670, column: 13, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 669, column: 5)
!5531 = !DILocation(line: 670, column: 12, scope: !5530)
!5532 = !DILocation(line: 670, column: 10, scope: !5530)
!5533 = !DILocation(line: 672, column: 7, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 672, column: 7)
!5535 = !DILocation(line: 672, column: 7, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 672, column: 7)
!5537 = !DILocation(line: 673, column: 8, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5536, file: !3, line: 673, column: 6)
!5539 = !DILocation(line: 673, column: 11, scope: !5538)
!5540 = !DILocation(line: 673, column: 17, scope: !5538)
!5541 = !DILocation(line: 673, column: 6, scope: !5536)
!5542 = !DILocalVariable(name: "src", scope: !5543, file: !3, line: 675, type: !2906)
!5543 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 674, column: 4)
!5544 = !DILocation(line: 675, column: 18, scope: !5543)
!5545 = !DILocation(line: 675, column: 24, scope: !5543)
!5546 = !DILocation(line: 675, column: 27, scope: !5543)
!5547 = !DILocation(line: 677, column: 12, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 677, column: 10)
!5549 = !DILocation(line: 677, column: 17, scope: !5548)
!5550 = !DILocation(line: 677, column: 23, scope: !5548)
!5551 = !DILocation(line: 677, column: 10, scope: !5543)
!5552 = !DILocation(line: 679, column: 3, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 678, column: 8)
!5554 = !DILocation(line: 679, column: 8, scope: !5553)
!5555 = !DILocation(line: 679, column: 14, scope: !5553)
!5556 = !DILocation(line: 680, column: 12, scope: !5553)
!5557 = !DILocation(line: 680, column: 7, scope: !5553)
!5558 = !DILocation(line: 680, column: 10, scope: !5553)
!5559 = !DILocation(line: 681, column: 8, scope: !5553)
!5560 = !DILocation(line: 682, column: 4, scope: !5543)
!5561 = !DILocation(line: 673, column: 32, scope: !5538)
!5562 = distinct !{!5562, !5533, !5563}
!5563 = !DILocation(line: 682, column: 4, scope: !5534)
!5564 = distinct !{!5564, !5525, !5565}
!5565 = !DILocation(line: 683, column: 5, scope: !5484)
!5566 = !DILocation(line: 684, column: 9, scope: !5484)
!5567 = !DILocation(line: 684, column: 3, scope: !5484)
!5568 = !DILocation(line: 688, column: 3, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 688, column: 3)
!5570 = !DILocation(line: 688, column: 3, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 688, column: 3)
!5572 = !DILocation(line: 689, column: 9, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 689, column: 9)
!5574 = !DILocation(line: 689, column: 13, scope: !5573)
!5575 = !DILocation(line: 689, column: 19, scope: !5573)
!5576 = !DILocation(line: 689, column: 9, scope: !5571)
!5577 = !DILocation(line: 690, column: 7, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5573, file: !3, line: 690, column: 7)
!5579 = !DILocation(line: 690, column: 7, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 690, column: 7)
!5581 = !DILocation(line: 691, column: 6, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 691, column: 6)
!5583 = !DILocation(line: 691, column: 9, scope: !5582)
!5584 = !DILocation(line: 691, column: 15, scope: !5582)
!5585 = !DILocation(line: 691, column: 6, scope: !5580)
!5586 = !DILocation(line: 692, column: 4, scope: !5582)
!5587 = !DILocation(line: 691, column: 17, scope: !5582)
!5588 = distinct !{!5588, !5577, !5589}
!5589 = !DILocation(line: 692, column: 11, scope: !5578)
!5590 = !DILocation(line: 689, column: 21, scope: !5573)
!5591 = distinct !{!5591, !5568, !5592}
!5592 = !DILocation(line: 692, column: 11, scope: !5569)
!5593 = !DILocation(line: 695, column: 3, scope: !5484)
!5594 = !DILocation(line: 696, column: 1, scope: !5484)
!5595 = distinct !DISubprogram(name: "scan_paradoxical_subregs", scope: !3, file: !3, line: 4109, type: !5596, scopeLine: 4110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!5596 = !DISubroutineType(types: !5597)
!5597 = !{null, !2372}
!5598 = !DILocalVariable(name: "x", arg: 1, scope: !5595, file: !3, line: 4109, type: !2372)
!5599 = !DILocation(line: 4109, column: 31, scope: !5595)
!5600 = !DILocalVariable(name: "i", scope: !5595, file: !3, line: 4111, type: !2396)
!5601 = !DILocation(line: 4111, column: 7, scope: !5595)
!5602 = !DILocalVariable(name: "fmt", scope: !5595, file: !3, line: 4112, type: !2399)
!5603 = !DILocation(line: 4112, column: 15, scope: !5595)
!5604 = !DILocalVariable(name: "code", scope: !5595, file: !3, line: 4113, type: !384)
!5605 = !DILocation(line: 4113, column: 17, scope: !5595)
!5606 = !DILocation(line: 4113, column: 24, scope: !5595)
!5607 = !DILocation(line: 4115, column: 11, scope: !5595)
!5608 = !DILocation(line: 4115, column: 3, scope: !5595)
!5609 = !DILocation(line: 4129, column: 7, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 4116, column: 5)
!5611 = !DILocation(line: 4132, column: 11, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5610, file: !3, line: 4132, column: 11)
!5613 = !DILocation(line: 4133, column: 4, scope: !5612)
!5614 = !DILocation(line: 4133, column: 8, scope: !5612)
!5615 = !DILocation(line: 4134, column: 10, scope: !5612)
!5616 = !DILocation(line: 4134, column: 28, scope: !5612)
!5617 = !DILocation(line: 4134, column: 8, scope: !5612)
!5618 = !DILocation(line: 4132, column: 11, scope: !5610)
!5619 = !DILocation(line: 4137, column: 8, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5612, file: !3, line: 4135, column: 2)
!5621 = !DILocation(line: 4136, column: 4, scope: !5620)
!5622 = !DILocation(line: 4136, column: 22, scope: !5620)
!5623 = !DILocation(line: 4137, column: 6, scope: !5620)
!5624 = !DILocation(line: 4138, column: 22, scope: !5620)
!5625 = !DILocation(line: 4138, column: 46, scope: !5620)
!5626 = !DILocation(line: 4138, column: 4, scope: !5620)
!5627 = !DILocation(line: 4139, column: 2, scope: !5620)
!5628 = !DILocation(line: 4140, column: 7, scope: !5610)
!5629 = !DILocation(line: 4143, column: 7, scope: !5610)
!5630 = !DILocation(line: 4146, column: 9, scope: !5595)
!5631 = !DILocation(line: 4146, column: 7, scope: !5595)
!5632 = !DILocation(line: 4147, column: 12, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 4147, column: 3)
!5634 = !DILocation(line: 4147, column: 34, scope: !5633)
!5635 = !DILocation(line: 4147, column: 10, scope: !5633)
!5636 = !DILocation(line: 4147, column: 8, scope: !5633)
!5637 = !DILocation(line: 4147, column: 39, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 4147, column: 3)
!5639 = !DILocation(line: 4147, column: 41, scope: !5638)
!5640 = !DILocation(line: 4147, column: 3, scope: !5633)
!5641 = !DILocation(line: 4149, column: 11, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 4149, column: 11)
!5643 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 4148, column: 5)
!5644 = !DILocation(line: 4149, column: 15, scope: !5642)
!5645 = !DILocation(line: 4149, column: 18, scope: !5642)
!5646 = !DILocation(line: 4149, column: 11, scope: !5643)
!5647 = !DILocation(line: 4150, column: 28, scope: !5642)
!5648 = !DILocation(line: 4150, column: 2, scope: !5642)
!5649 = !DILocation(line: 4151, column: 16, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 4151, column: 16)
!5651 = !DILocation(line: 4151, column: 20, scope: !5650)
!5652 = !DILocation(line: 4151, column: 23, scope: !5650)
!5653 = !DILocation(line: 4151, column: 16, scope: !5642)
!5654 = !DILocalVariable(name: "j", scope: !5655, file: !3, line: 4153, type: !2396)
!5655 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 4152, column: 2)
!5656 = !DILocation(line: 4153, column: 8, scope: !5655)
!5657 = !DILocation(line: 4154, column: 13, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 4154, column: 4)
!5659 = !DILocation(line: 4154, column: 28, scope: !5658)
!5660 = !DILocation(line: 4154, column: 11, scope: !5658)
!5661 = !DILocation(line: 4154, column: 9, scope: !5658)
!5662 = !DILocation(line: 4154, column: 33, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 4154, column: 4)
!5664 = !DILocation(line: 4154, column: 35, scope: !5663)
!5665 = !DILocation(line: 4154, column: 4, scope: !5658)
!5666 = !DILocation(line: 4155, column: 32, scope: !5663)
!5667 = !DILocation(line: 4155, column: 6, scope: !5663)
!5668 = !DILocation(line: 4154, column: 42, scope: !5663)
!5669 = !DILocation(line: 4154, column: 4, scope: !5663)
!5670 = distinct !{!5670, !5665, !5671}
!5671 = !DILocation(line: 4155, column: 49, scope: !5658)
!5672 = !DILocation(line: 4156, column: 2, scope: !5655)
!5673 = !DILocation(line: 4157, column: 5, scope: !5643)
!5674 = !DILocation(line: 4147, column: 48, scope: !5638)
!5675 = !DILocation(line: 4147, column: 3, scope: !5638)
!5676 = distinct !{!5676, !5640, !5677}
!5677 = !DILocation(line: 4157, column: 5, scope: !5633)
!5678 = !DILocation(line: 4158, column: 1, scope: !5595)
!5679 = distinct !DISubprogram(name: "rhs_regno", scope: !385, file: !385, line: 1051, type: !5680, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!5680 = !DISubroutineType(types: !5681)
!5681 = !{!7, !5682}
!5682 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !2373, line: 51, baseType: !5683)
!5683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5684, size: 64)
!5684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2375)
!5685 = !DILocalVariable(name: "x", arg: 1, scope: !5679, file: !385, line: 1051, type: !5682)
!5686 = !DILocation(line: 1051, column: 22, scope: !5679)
!5687 = !DILocation(line: 1053, column: 10, scope: !5679)
!5688 = !DILocation(line: 1053, column: 3, scope: !5679)
!5689 = distinct !DISubprogram(name: "function_invariant_p", scope: !3, file: !3, line: 5672, type: !5690, scopeLine: 5673, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{!2396, !5682}
!5692 = !DILocalVariable(name: "x", arg: 1, scope: !5689, file: !3, line: 5672, type: !5682)
!5693 = !DILocation(line: 5672, column: 33, scope: !5689)
!5694 = !DILocation(line: 5674, column: 7, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 5674, column: 7)
!5696 = !DILocation(line: 5674, column: 7, scope: !5689)
!5697 = !DILocation(line: 5675, column: 5, scope: !5695)
!5698 = !DILocation(line: 5676, column: 7, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 5676, column: 7)
!5700 = !DILocation(line: 5676, column: 12, scope: !5699)
!5701 = !DILocation(line: 5676, column: 9, scope: !5699)
!5702 = !DILocation(line: 5676, column: 30, scope: !5699)
!5703 = !DILocation(line: 5676, column: 33, scope: !5699)
!5704 = !DILocation(line: 5676, column: 38, scope: !5699)
!5705 = !DILocation(line: 5676, column: 35, scope: !5699)
!5706 = !DILocation(line: 5676, column: 7, scope: !5689)
!5707 = !DILocation(line: 5677, column: 5, scope: !5699)
!5708 = !DILocation(line: 5678, column: 7, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 5678, column: 7)
!5710 = !DILocation(line: 5678, column: 20, scope: !5709)
!5711 = !DILocation(line: 5679, column: 7, scope: !5709)
!5712 = !DILocation(line: 5679, column: 11, scope: !5709)
!5713 = !DILocation(line: 5679, column: 26, scope: !5709)
!5714 = !DILocation(line: 5679, column: 23, scope: !5709)
!5715 = !DILocation(line: 5679, column: 44, scope: !5709)
!5716 = !DILocation(line: 5679, column: 47, scope: !5709)
!5717 = !DILocation(line: 5679, column: 62, scope: !5709)
!5718 = !DILocation(line: 5679, column: 59, scope: !5709)
!5719 = !DILocation(line: 5680, column: 7, scope: !5709)
!5720 = !DILocation(line: 5680, column: 10, scope: !5709)
!5721 = !DILocation(line: 5678, column: 7, scope: !5689)
!5722 = !DILocation(line: 5681, column: 5, scope: !5709)
!5723 = !DILocation(line: 5682, column: 3, scope: !5689)
!5724 = !DILocation(line: 5683, column: 1, scope: !5689)
!5725 = distinct !DISubprogram(name: "init_elim_table", scope: !3, file: !3, line: 3872, type: !3871, scopeLine: 3873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!5726 = !DILocalVariable(name: "ep", scope: !5725, file: !3, line: 3874, type: !3605)
!5727 = !DILocation(line: 3874, column: 22, scope: !5725)
!5728 = !DILocalVariable(name: "ep1", scope: !5725, file: !3, line: 3876, type: !5729)
!5729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!5730 = !DILocation(line: 3876, column: 30, scope: !5725)
!5731 = !DILocation(line: 3879, column: 8, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 3879, column: 7)
!5733 = !DILocation(line: 3879, column: 7, scope: !5725)
!5734 = !DILocation(line: 3880, column: 21, scope: !5732)
!5735 = !DILocation(line: 3880, column: 19, scope: !5732)
!5736 = !DILocation(line: 3880, column: 5, scope: !5732)
!5737 = !DILocation(line: 3882, column: 18, scope: !5725)
!5738 = !DILocation(line: 3885, column: 13, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 3885, column: 3)
!5740 = !DILocation(line: 3885, column: 11, scope: !5739)
!5741 = !DILocation(line: 3885, column: 32, scope: !5739)
!5742 = !DILocation(line: 3885, column: 8, scope: !5739)
!5743 = !DILocation(line: 3886, column: 8, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 3885, column: 3)
!5745 = !DILocation(line: 3886, column: 14, scope: !5744)
!5746 = !DILocation(line: 3886, column: 11, scope: !5744)
!5747 = !DILocation(line: 3885, column: 3, scope: !5739)
!5748 = !DILocation(line: 3888, column: 18, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 3887, column: 5)
!5750 = !DILocation(line: 3888, column: 23, scope: !5749)
!5751 = !DILocation(line: 3888, column: 7, scope: !5749)
!5752 = !DILocation(line: 3888, column: 11, scope: !5749)
!5753 = !DILocation(line: 3888, column: 16, scope: !5749)
!5754 = !DILocation(line: 3889, column: 16, scope: !5749)
!5755 = !DILocation(line: 3889, column: 21, scope: !5749)
!5756 = !DILocation(line: 3889, column: 7, scope: !5749)
!5757 = !DILocation(line: 3889, column: 11, scope: !5749)
!5758 = !DILocation(line: 3889, column: 14, scope: !5749)
!5759 = !DILocation(line: 3891, column: 13, scope: !5749)
!5760 = !DILocation(line: 3891, column: 28, scope: !5749)
!5761 = !DILocation(line: 3891, column: 32, scope: !5749)
!5762 = !DILocation(line: 3891, column: 38, scope: !5749)
!5763 = !DILocation(line: 3891, column: 42, scope: !5749)
!5764 = !DILocation(line: 3891, column: 5, scope: !5749)
!5765 = !DILocation(line: 3892, column: 5, scope: !5749)
!5766 = !DILocation(line: 3892, column: 11, scope: !5749)
!5767 = !DILocation(line: 3892, column: 15, scope: !5749)
!5768 = !DILocation(line: 3892, column: 18, scope: !5749)
!5769 = !DILocation(line: 3893, column: 4, scope: !5749)
!5770 = !DILocation(line: 3893, column: 7, scope: !5749)
!5771 = !DILocation(line: 3894, column: 4, scope: !5749)
!5772 = !DILocation(line: 3895, column: 13, scope: !5749)
!5773 = !DILocation(line: 0, scope: !5749)
!5774 = !DILocation(line: 3895, column: 11, scope: !5749)
!5775 = !DILocation(line: 3892, column: 8, scope: !5749)
!5776 = !DILocation(line: 3890, column: 27, scope: !5749)
!5777 = !DILocation(line: 3890, column: 31, scope: !5749)
!5778 = !DILocation(line: 3891, column: 2, scope: !5749)
!5779 = !DILocation(line: 3890, column: 7, scope: !5749)
!5780 = !DILocation(line: 3890, column: 11, scope: !5749)
!5781 = !DILocation(line: 3890, column: 25, scope: !5749)
!5782 = !DILocation(line: 3896, column: 5, scope: !5749)
!5783 = !DILocation(line: 3886, column: 52, scope: !5744)
!5784 = !DILocation(line: 3886, column: 59, scope: !5744)
!5785 = !DILocation(line: 3885, column: 3, scope: !5744)
!5786 = distinct !{!5786, !5747, !5787}
!5787 = !DILocation(line: 3896, column: 5, scope: !5739)
!5788 = !DILocation(line: 3908, column: 13, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 3908, column: 3)
!5790 = !DILocation(line: 3908, column: 11, scope: !5789)
!5791 = !DILocation(line: 3908, column: 8, scope: !5789)
!5792 = !DILocation(line: 3908, column: 28, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 3908, column: 3)
!5794 = !DILocation(line: 3908, column: 34, scope: !5793)
!5795 = !DILocation(line: 3908, column: 31, scope: !5793)
!5796 = !DILocation(line: 3908, column: 3, scope: !5789)
!5797 = !DILocation(line: 3910, column: 25, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 3909, column: 5)
!5799 = !DILocation(line: 3910, column: 29, scope: !5798)
!5800 = !DILocation(line: 3910, column: 22, scope: !5798)
!5801 = !DILocation(line: 3911, column: 42, scope: !5798)
!5802 = !DILocation(line: 3911, column: 46, scope: !5798)
!5803 = !DILocation(line: 3911, column: 22, scope: !5798)
!5804 = !DILocation(line: 3911, column: 7, scope: !5798)
!5805 = !DILocation(line: 3911, column: 11, scope: !5798)
!5806 = !DILocation(line: 3911, column: 20, scope: !5798)
!5807 = !DILocation(line: 3912, column: 40, scope: !5798)
!5808 = !DILocation(line: 3912, column: 44, scope: !5798)
!5809 = !DILocation(line: 3912, column: 20, scope: !5798)
!5810 = !DILocation(line: 3912, column: 7, scope: !5798)
!5811 = !DILocation(line: 3912, column: 11, scope: !5798)
!5812 = !DILocation(line: 3912, column: 18, scope: !5798)
!5813 = !DILocation(line: 3913, column: 5, scope: !5798)
!5814 = !DILocation(line: 3908, column: 72, scope: !5793)
!5815 = !DILocation(line: 3908, column: 3, scope: !5793)
!5816 = distinct !{!5816, !5796, !5817}
!5817 = !DILocation(line: 3913, column: 5, scope: !5789)
!5818 = !DILocation(line: 3914, column: 1, scope: !5725)
!5819 = distinct !DISubprogram(name: "alter_reg", scope: !3, file: !3, line: 2196, type: !5820, scopeLine: 2197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!5820 = !DISubroutineType(types: !5821)
!5821 = !{null, !2396, !2396, !2603}
!5822 = !DILocalVariable(name: "i", arg: 1, scope: !5819, file: !3, line: 2196, type: !2396)
!5823 = !DILocation(line: 2196, column: 16, scope: !5819)
!5824 = !DILocalVariable(name: "from_reg", arg: 2, scope: !5819, file: !3, line: 2196, type: !2396)
!5825 = !DILocation(line: 2196, column: 23, scope: !5819)
!5826 = !DILocalVariable(name: "dont_share_p", arg: 3, scope: !5819, file: !3, line: 2196, type: !2603)
!5827 = !DILocation(line: 2196, column: 38, scope: !5819)
!5828 = !DILocation(line: 2200, column: 7, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 2200, column: 7)
!5830 = !DILocation(line: 2200, column: 21, scope: !5829)
!5831 = !DILocation(line: 2200, column: 24, scope: !5829)
!5832 = !DILocation(line: 2200, column: 7, scope: !5819)
!5833 = !DILocation(line: 2201, column: 5, scope: !5829)
!5834 = !DILocation(line: 2205, column: 8, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 2205, column: 7)
!5836 = !DILocation(line: 2205, column: 7, scope: !5819)
!5837 = !DILocation(line: 2206, column: 5, scope: !5835)
!5838 = !DILocation(line: 2210, column: 3, scope: !5819)
!5839 = !DILocation(line: 2216, column: 7, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 2216, column: 7)
!5841 = !DILocation(line: 2216, column: 20, scope: !5840)
!5842 = !DILocation(line: 2216, column: 23, scope: !5840)
!5843 = !DILocation(line: 2217, column: 7, scope: !5840)
!5844 = !DILocation(line: 2217, column: 22, scope: !5840)
!5845 = !DILocation(line: 2217, column: 10, scope: !5840)
!5846 = !DILocation(line: 2217, column: 25, scope: !5840)
!5847 = !DILocation(line: 2218, column: 7, scope: !5840)
!5848 = !DILocation(line: 2218, column: 10, scope: !5840)
!5849 = !DILocation(line: 2218, column: 29, scope: !5840)
!5850 = !DILocation(line: 2218, column: 32, scope: !5840)
!5851 = !DILocation(line: 2219, column: 7, scope: !5840)
!5852 = !DILocation(line: 2219, column: 11, scope: !5840)
!5853 = !DILocation(line: 2219, column: 31, scope: !5840)
!5854 = !DILocation(line: 2219, column: 34, scope: !5840)
!5855 = !DILocation(line: 2219, column: 39, scope: !5840)
!5856 = !DILocation(line: 2219, column: 42, scope: !5840)
!5857 = !DILocation(line: 2219, column: 57, scope: !5840)
!5858 = !DILocation(line: 2219, column: 60, scope: !5840)
!5859 = !DILocation(line: 2220, column: 7, scope: !5840)
!5860 = !DILocation(line: 2220, column: 10, scope: !5840)
!5861 = !DILocation(line: 2220, column: 31, scope: !5840)
!5862 = !DILocation(line: 2220, column: 34, scope: !5840)
!5863 = !DILocation(line: 2216, column: 7, scope: !5819)
!5864 = !DILocalVariable(name: "x", scope: !5865, file: !3, line: 2222, type: !2372)
!5865 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 2221, column: 5)
!5866 = !DILocation(line: 2222, column: 11, scope: !5865)
!5867 = !DILocalVariable(name: "mode", scope: !5865, file: !3, line: 2223, type: !5)
!5868 = !DILocation(line: 2223, column: 25, scope: !5865)
!5869 = !DILocation(line: 2223, column: 32, scope: !5865)
!5870 = !DILocalVariable(name: "inherent_size", scope: !5865, file: !3, line: 2224, type: !7)
!5871 = !DILocation(line: 2224, column: 20, scope: !5865)
!5872 = !DILocation(line: 2224, column: 36, scope: !5865)
!5873 = !DILocalVariable(name: "inherent_align", scope: !5865, file: !3, line: 2225, type: !7)
!5874 = !DILocation(line: 2225, column: 20, scope: !5865)
!5875 = !DILocation(line: 2225, column: 37, scope: !5865)
!5876 = !DILocalVariable(name: "total_size", scope: !5865, file: !3, line: 2226, type: !7)
!5877 = !DILocation(line: 2226, column: 20, scope: !5865)
!5878 = !DILocation(line: 2226, column: 33, scope: !5865)
!5879 = !DILocalVariable(name: "min_align", scope: !5865, file: !3, line: 2227, type: !7)
!5880 = !DILocation(line: 2227, column: 20, scope: !5865)
!5881 = !DILocation(line: 2227, column: 32, scope: !5865)
!5882 = !DILocation(line: 2227, column: 50, scope: !5865)
!5883 = !DILocation(line: 2227, column: 53, scope: !5865)
!5884 = !DILocalVariable(name: "adjust", scope: !5865, file: !3, line: 2228, type: !2396)
!5885 = !DILocation(line: 2228, column: 11, scope: !5865)
!5886 = !DILocation(line: 2230, column: 11, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 2230, column: 11)
!5888 = !DILocation(line: 2230, column: 11, scope: !5865)
!5889 = !DILocation(line: 2233, column: 4, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 2231, column: 2)
!5891 = !DILocation(line: 2234, column: 9, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5890, file: !3, line: 2234, column: 8)
!5893 = !DILocation(line: 2234, column: 8, scope: !5890)
!5894 = !DILocation(line: 2235, column: 32, scope: !5892)
!5895 = !DILocation(line: 2235, column: 35, scope: !5892)
!5896 = !DILocation(line: 2235, column: 50, scope: !5892)
!5897 = !DILocation(line: 2235, column: 10, scope: !5892)
!5898 = !DILocation(line: 2235, column: 8, scope: !5892)
!5899 = !DILocation(line: 2235, column: 6, scope: !5892)
!5900 = !DILocation(line: 2236, column: 2, scope: !5890)
!5901 = !DILocation(line: 2238, column: 11, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 2238, column: 11)
!5903 = !DILocation(line: 2238, column: 11, scope: !5865)
!5904 = !DILocation(line: 2249, column: 16, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 2249, column: 16)
!5906 = !DILocation(line: 2249, column: 25, scope: !5905)
!5907 = !DILocation(line: 2249, column: 31, scope: !5905)
!5908 = !DILocation(line: 2249, column: 36, scope: !5905)
!5909 = !DILocation(line: 2249, column: 49, scope: !5905)
!5910 = !DILocation(line: 2249, column: 52, scope: !5905)
!5911 = !DILocation(line: 2249, column: 16, scope: !5902)
!5912 = !DILocalVariable(name: "stack_slot", scope: !5913, file: !3, line: 2251, type: !2372)
!5913 = distinct !DILexicalBlock(scope: !5905, file: !3, line: 2250, column: 2)
!5914 = !DILocation(line: 2251, column: 8, scope: !5913)
!5915 = !DILocation(line: 2254, column: 28, scope: !5913)
!5916 = !DILocation(line: 2254, column: 34, scope: !5913)
!5917 = !DILocation(line: 2255, column: 7, scope: !5913)
!5918 = !DILocation(line: 2255, column: 19, scope: !5913)
!5919 = !DILocation(line: 2255, column: 17, scope: !5913)
!5920 = !DILocation(line: 2256, column: 7, scope: !5913)
!5921 = !DILocation(line: 2256, column: 10, scope: !5913)
!5922 = !DILocation(line: 2256, column: 23, scope: !5913)
!5923 = !DILocation(line: 2256, column: 21, scope: !5913)
!5924 = !DILocation(line: 2254, column: 8, scope: !5913)
!5925 = !DILocation(line: 2254, column: 6, scope: !5913)
!5926 = !DILocation(line: 2258, column: 17, scope: !5913)
!5927 = !DILocation(line: 2258, column: 15, scope: !5913)
!5928 = !DILocation(line: 2274, column: 10, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 2274, column: 8)
!5930 = !DILocation(line: 2274, column: 23, scope: !5929)
!5931 = !DILocation(line: 2274, column: 26, scope: !5929)
!5932 = !DILocation(line: 2274, column: 8, scope: !5913)
!5933 = !DILocation(line: 2276, column: 31, scope: !5929)
!5934 = !DILocation(line: 2276, column: 43, scope: !5929)
!5935 = !DILocation(line: 2276, column: 46, scope: !5929)
!5936 = !DILocation(line: 2276, column: 6, scope: !5929)
!5937 = !DILocation(line: 2277, column: 2, scope: !5913)
!5938 = !DILocation(line: 2280, column: 33, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5905, file: !3, line: 2280, column: 16)
!5940 = !DILocation(line: 2280, column: 16, scope: !5939)
!5941 = !DILocation(line: 2280, column: 43, scope: !5939)
!5942 = !DILocation(line: 2281, column: 9, scope: !5939)
!5943 = !DILocation(line: 2281, column: 35, scope: !5939)
!5944 = !DILocation(line: 2281, column: 12, scope: !5939)
!5945 = !DILocation(line: 2281, column: 48, scope: !5939)
!5946 = !DILocation(line: 2281, column: 45, scope: !5939)
!5947 = !DILocation(line: 2282, column: 9, scope: !5939)
!5948 = !DILocation(line: 2282, column: 13, scope: !5939)
!5949 = !DILocation(line: 2283, column: 9, scope: !5939)
!5950 = !DILocation(line: 2283, column: 6, scope: !5939)
!5951 = !DILocation(line: 2284, column: 9, scope: !5939)
!5952 = !DILocation(line: 2284, column: 12, scope: !5939)
!5953 = !DILocation(line: 2284, column: 54, scope: !5939)
!5954 = !DILocation(line: 2284, column: 51, scope: !5939)
!5955 = !DILocation(line: 2280, column: 16, scope: !5905)
!5956 = !DILocation(line: 2285, column: 23, scope: !5939)
!5957 = !DILocation(line: 2285, column: 6, scope: !5939)
!5958 = !DILocation(line: 2285, column: 4, scope: !5939)
!5959 = !DILocation(line: 2285, column: 2, scope: !5939)
!5960 = !DILocalVariable(name: "stack_slot", scope: !5961, file: !3, line: 2292, type: !2372)
!5961 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 2289, column: 2)
!5962 = !DILocation(line: 2292, column: 8, scope: !5961)
!5963 = !DILocation(line: 2294, column: 25, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 2294, column: 8)
!5965 = !DILocation(line: 2294, column: 8, scope: !5964)
!5966 = !DILocation(line: 2294, column: 8, scope: !5961)
!5967 = !DILocation(line: 2296, column: 12, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 2296, column: 12)
!5969 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 2295, column: 6)
!5970 = !DILocation(line: 2297, column: 7, scope: !5968)
!5971 = !DILocation(line: 2297, column: 5, scope: !5968)
!5972 = !DILocation(line: 2296, column: 12, scope: !5969)
!5973 = !DILocation(line: 2298, column: 10, scope: !5968)
!5974 = !DILocation(line: 2298, column: 8, scope: !5968)
!5975 = !DILocation(line: 2298, column: 3, scope: !5968)
!5976 = !DILocation(line: 2299, column: 35, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 2299, column: 12)
!5978 = !DILocation(line: 2299, column: 12, scope: !5977)
!5979 = !DILocation(line: 2299, column: 47, scope: !5977)
!5980 = !DILocation(line: 2299, column: 45, scope: !5977)
!5981 = !DILocation(line: 2299, column: 12, scope: !5969)
!5982 = !DILocation(line: 2300, column: 39, scope: !5977)
!5983 = !DILocation(line: 2300, column: 16, scope: !5977)
!5984 = !DILocation(line: 2300, column: 14, scope: !5977)
!5985 = !DILocation(line: 2300, column: 3, scope: !5977)
!5986 = !DILocation(line: 2301, column: 12, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 2301, column: 12)
!5988 = !DILocation(line: 2301, column: 53, scope: !5987)
!5989 = !DILocation(line: 2301, column: 51, scope: !5987)
!5990 = !DILocation(line: 2301, column: 12, scope: !5969)
!5991 = !DILocation(line: 2302, column: 15, scope: !5987)
!5992 = !DILocation(line: 2302, column: 13, scope: !5987)
!5993 = !DILocation(line: 2302, column: 3, scope: !5987)
!5994 = !DILocation(line: 2303, column: 6, scope: !5969)
!5995 = !DILocation(line: 2306, column: 28, scope: !5961)
!5996 = !DILocation(line: 2306, column: 34, scope: !5961)
!5997 = !DILocation(line: 2307, column: 7, scope: !5961)
!5998 = !DILocation(line: 2307, column: 19, scope: !5961)
!5999 = !DILocation(line: 2307, column: 17, scope: !5961)
!6000 = !DILocation(line: 2308, column: 7, scope: !5961)
!6001 = !DILocation(line: 2308, column: 10, scope: !5961)
!6002 = !DILocation(line: 2308, column: 23, scope: !5961)
!6003 = !DILocation(line: 2308, column: 21, scope: !5961)
!6004 = !DILocation(line: 2306, column: 8, scope: !5961)
!6005 = !DILocation(line: 2306, column: 6, scope: !5961)
!6006 = !DILocation(line: 2309, column: 17, scope: !5961)
!6007 = !DILocation(line: 2309, column: 15, scope: !5961)
!6008 = !DILocation(line: 2325, column: 33, scope: !5961)
!6009 = !DILocation(line: 2325, column: 21, scope: !5961)
!6010 = !DILocation(line: 2325, column: 4, scope: !5961)
!6011 = !DILocation(line: 2325, column: 31, scope: !5961)
!6012 = !DILocation(line: 2326, column: 39, scope: !5961)
!6013 = !DILocation(line: 2326, column: 27, scope: !5961)
!6014 = !DILocation(line: 2326, column: 4, scope: !5961)
!6015 = !DILocation(line: 2326, column: 37, scope: !5961)
!6016 = !DILocation(line: 2336, column: 11, scope: !5865)
!6017 = !DILocation(line: 2336, column: 9, scope: !5865)
!6018 = !DILocation(line: 2339, column: 32, scope: !5865)
!6019 = !DILocation(line: 2339, column: 7, scope: !5865)
!6020 = !DILocation(line: 2342, column: 33, scope: !5865)
!6021 = !DILocation(line: 2342, column: 7, scope: !5865)
!6022 = !DILocation(line: 2342, column: 28, scope: !5865)
!6023 = !DILocation(line: 2342, column: 31, scope: !5865)
!6024 = !DILocation(line: 2343, column: 5, scope: !5865)
!6025 = !DILocation(line: 2344, column: 1, scope: !5819)
!6026 = distinct !DISubprogram(name: "mark_not_eliminable", scope: !3, file: !3, line: 3641, type: !6027, scopeLine: 3642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!6027 = !DISubroutineType(types: !6028)
!6028 = !{null, !2372, !5682, !2358}
!6029 = !DILocalVariable(name: "dest", arg: 1, scope: !6026, file: !3, line: 3641, type: !2372)
!6030 = !DILocation(line: 3641, column: 26, scope: !6026)
!6031 = !DILocalVariable(name: "x", arg: 2, scope: !6026, file: !3, line: 3641, type: !5682)
!6032 = !DILocation(line: 3641, column: 42, scope: !6026)
!6033 = !DILocalVariable(name: "data", arg: 3, scope: !6026, file: !3, line: 3641, type: !2358)
!6034 = !DILocation(line: 3641, column: 51, scope: !6026)
!6035 = !DILocalVariable(name: "i", scope: !6026, file: !3, line: 3643, type: !7)
!6036 = !DILocation(line: 3643, column: 16, scope: !6026)
!6037 = !DILocation(line: 3648, column: 7, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 3648, column: 7)
!6039 = !DILocation(line: 3648, column: 23, scope: !6038)
!6040 = !DILocation(line: 3648, column: 7, scope: !6026)
!6041 = !DILocation(line: 3649, column: 12, scope: !6038)
!6042 = !DILocation(line: 3649, column: 10, scope: !6038)
!6043 = !DILocation(line: 3649, column: 5, scope: !6038)
!6044 = !DILocation(line: 3651, column: 7, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 3651, column: 7)
!6046 = !DILocation(line: 3651, column: 15, scope: !6045)
!6047 = !DILocation(line: 3651, column: 12, scope: !6045)
!6048 = !DILocation(line: 3651, column: 7, scope: !6026)
!6049 = !DILocation(line: 3652, column: 5, scope: !6045)
!6050 = !DILocation(line: 3654, column: 10, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 3654, column: 3)
!6052 = !DILocation(line: 3654, column: 8, scope: !6051)
!6053 = !DILocation(line: 3654, column: 15, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 3654, column: 3)
!6055 = !DILocation(line: 3654, column: 17, scope: !6054)
!6056 = !DILocation(line: 3654, column: 3, scope: !6051)
!6057 = !DILocation(line: 3655, column: 9, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 3655, column: 9)
!6059 = !DILocation(line: 3655, column: 23, scope: !6058)
!6060 = !DILocation(line: 3655, column: 26, scope: !6058)
!6061 = !DILocation(line: 3655, column: 40, scope: !6058)
!6062 = !DILocation(line: 3655, column: 43, scope: !6058)
!6063 = !DILocation(line: 3655, column: 51, scope: !6058)
!6064 = !DILocation(line: 3655, column: 65, scope: !6058)
!6065 = !DILocation(line: 3655, column: 68, scope: !6058)
!6066 = !DILocation(line: 3655, column: 48, scope: !6058)
!6067 = !DILocation(line: 3656, column: 2, scope: !6058)
!6068 = !DILocation(line: 3656, column: 6, scope: !6058)
!6069 = !DILocation(line: 3656, column: 19, scope: !6058)
!6070 = !DILocation(line: 3657, column: 6, scope: !6058)
!6071 = !DILocation(line: 3657, column: 9, scope: !6058)
!6072 = !DILocation(line: 3657, column: 32, scope: !6058)
!6073 = !DILocation(line: 3658, column: 6, scope: !6058)
!6074 = !DILocation(line: 3658, column: 9, scope: !6058)
!6075 = !DILocation(line: 3658, column: 34, scope: !6058)
!6076 = !DILocation(line: 3658, column: 31, scope: !6058)
!6077 = !DILocation(line: 3659, column: 6, scope: !6058)
!6078 = !DILocation(line: 3659, column: 10, scope: !6058)
!6079 = !DILocation(line: 3655, column: 9, scope: !6054)
!6080 = !DILocation(line: 3662, column: 6, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 3660, column: 7)
!6082 = !DILocation(line: 3662, column: 20, scope: !6081)
!6083 = !DILocation(line: 3662, column: 23, scope: !6081)
!6084 = !DILocation(line: 3662, column: 37, scope: !6081)
!6085 = !DILocation(line: 3661, column: 2, scope: !6081)
!6086 = !DILocation(line: 3661, column: 16, scope: !6081)
!6087 = !DILocation(line: 3661, column: 19, scope: !6081)
!6088 = !DILocation(line: 3662, column: 4, scope: !6081)
!6089 = !DILocation(line: 3663, column: 16, scope: !6081)
!6090 = !DILocation(line: 3664, column: 7, scope: !6081)
!6091 = !DILocation(line: 3659, column: 45, scope: !6058)
!6092 = !DILocation(line: 3654, column: 41, scope: !6054)
!6093 = !DILocation(line: 3654, column: 3, scope: !6054)
!6094 = distinct !{!6094, !6056, !6095}
!6095 = !DILocation(line: 3664, column: 7, scope: !6051)
!6096 = !DILocation(line: 3665, column: 1, scope: !6026)
!6097 = distinct !DISubprogram(name: "maybe_fix_stack_asms", scope: !3, file: !3, line: 1479, type: !3871, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!6098 = !DILocalVariable(name: "constraints", scope: !6097, file: !3, line: 1482, type: !6099)
!6099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2399, size: 1920, elements: !3799)
!6100 = !DILocation(line: 1482, column: 15, scope: !6097)
!6101 = !DILocalVariable(name: "operand_mode", scope: !6097, file: !3, line: 1483, type: !6102)
!6102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 960, elements: !3799)
!6103 = !DILocation(line: 1483, column: 21, scope: !6097)
!6104 = !DILocalVariable(name: "chain", scope: !6097, file: !3, line: 1484, type: !2365)
!6105 = !DILocation(line: 1484, column: 22, scope: !6097)
!6106 = !DILocation(line: 1486, column: 16, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 1486, column: 3)
!6108 = !DILocation(line: 1486, column: 14, scope: !6107)
!6109 = !DILocation(line: 1486, column: 8, scope: !6107)
!6110 = !DILocation(line: 1486, column: 35, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 1486, column: 3)
!6112 = !DILocation(line: 1486, column: 41, scope: !6111)
!6113 = !DILocation(line: 1486, column: 3, scope: !6107)
!6114 = !DILocalVariable(name: "i", scope: !6115, file: !3, line: 1488, type: !2396)
!6115 = distinct !DILexicalBlock(scope: !6111, file: !3, line: 1487, column: 5)
!6116 = !DILocation(line: 1488, column: 11, scope: !6115)
!6117 = !DILocalVariable(name: "noperands", scope: !6115, file: !3, line: 1488, type: !2396)
!6118 = !DILocation(line: 1488, column: 14, scope: !6115)
!6119 = !DILocalVariable(name: "clobbered", scope: !6115, file: !3, line: 1489, type: !3577)
!6120 = !DILocation(line: 1489, column: 20, scope: !6115)
!6121 = !DILocalVariable(name: "allowed", scope: !6115, file: !3, line: 1489, type: !3577)
!6122 = !DILocation(line: 1489, column: 31, scope: !6115)
!6123 = !DILocalVariable(name: "pat", scope: !6115, file: !3, line: 1490, type: !2372)
!6124 = !DILocation(line: 1490, column: 11, scope: !6115)
!6125 = !DILocation(line: 1492, column: 13, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1492, column: 11)
!6127 = !DILocation(line: 1493, column: 4, scope: !6126)
!6128 = !DILocation(line: 1493, column: 35, scope: !6126)
!6129 = !DILocation(line: 1493, column: 20, scope: !6126)
!6130 = !DILocation(line: 1493, column: 18, scope: !6126)
!6131 = !DILocation(line: 1493, column: 59, scope: !6126)
!6132 = !DILocation(line: 1492, column: 11, scope: !6115)
!6133 = !DILocation(line: 1494, column: 2, scope: !6126)
!6134 = !DILocation(line: 1495, column: 13, scope: !6115)
!6135 = !DILocation(line: 1495, column: 11, scope: !6115)
!6136 = !DILocation(line: 1496, column: 11, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1496, column: 11)
!6138 = !DILocation(line: 1496, column: 26, scope: !6137)
!6139 = !DILocation(line: 1496, column: 11, scope: !6115)
!6140 = !DILocation(line: 1497, column: 2, scope: !6137)
!6141 = !DILocation(line: 1499, column: 7, scope: !6115)
!6142 = !DILocation(line: 1500, column: 7, scope: !6115)
!6143 = !DILocation(line: 1503, column: 14, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1503, column: 7)
!6145 = !DILocation(line: 1503, column: 12, scope: !6144)
!6146 = !DILocation(line: 1503, column: 19, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 1503, column: 7)
!6148 = !DILocation(line: 1503, column: 23, scope: !6147)
!6149 = !DILocation(line: 1503, column: 21, scope: !6147)
!6150 = !DILocation(line: 1503, column: 7, scope: !6144)
!6151 = !DILocalVariable(name: "t", scope: !6152, file: !3, line: 1505, type: !2372)
!6152 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 1504, column: 2)
!6153 = !DILocation(line: 1505, column: 8, scope: !6152)
!6154 = !DILocation(line: 1505, column: 12, scope: !6152)
!6155 = !DILocation(line: 1506, column: 8, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 1506, column: 8)
!6157 = !DILocation(line: 1506, column: 21, scope: !6156)
!6158 = !DILocation(line: 1506, column: 32, scope: !6156)
!6159 = !DILocation(line: 1506, column: 35, scope: !6156)
!6160 = !DILocation(line: 1506, column: 8, scope: !6152)
!6161 = !DILocation(line: 1507, column: 6, scope: !6156)
!6162 = !DILocation(line: 1508, column: 2, scope: !6152)
!6163 = !DILocation(line: 1503, column: 42, scope: !6147)
!6164 = !DILocation(line: 1503, column: 7, scope: !6147)
!6165 = distinct !{!6165, !6150, !6166}
!6166 = !DILocation(line: 1508, column: 2, scope: !6144)
!6167 = !DILocation(line: 1511, column: 28, scope: !6115)
!6168 = !DILocation(line: 1512, column: 7, scope: !6115)
!6169 = !DILocation(line: 1512, column: 20, scope: !6115)
!6170 = !DILocation(line: 1511, column: 7, scope: !6115)
!6171 = !DILocation(line: 1515, column: 14, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1515, column: 7)
!6173 = !DILocation(line: 1515, column: 12, scope: !6172)
!6174 = !DILocation(line: 1515, column: 19, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6172, file: !3, line: 1515, column: 7)
!6176 = !DILocation(line: 1515, column: 23, scope: !6175)
!6177 = !DILocation(line: 1515, column: 21, scope: !6175)
!6178 = !DILocation(line: 1515, column: 7, scope: !6172)
!6179 = !DILocalVariable(name: "p", scope: !6180, file: !3, line: 1517, type: !2399)
!6180 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 1516, column: 2)
!6181 = !DILocation(line: 1517, column: 16, scope: !6180)
!6182 = !DILocation(line: 1517, column: 32, scope: !6180)
!6183 = !DILocation(line: 1517, column: 20, scope: !6180)
!6184 = !DILocalVariable(name: "cls", scope: !6180, file: !3, line: 1521, type: !2396)
!6185 = !DILocation(line: 1521, column: 8, scope: !6180)
!6186 = !DILocation(line: 1523, column: 4, scope: !6180)
!6187 = !DILocalVariable(name: "c", scope: !6188, file: !3, line: 1525, type: !2364)
!6188 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 1524, column: 6)
!6189 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 1523, column: 4)
!6190 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 1523, column: 4)
!6191 = !DILocation(line: 1525, column: 13, scope: !6188)
!6192 = !DILocation(line: 1525, column: 18, scope: !6188)
!6193 = !DILocation(line: 1525, column: 17, scope: !6188)
!6194 = !DILocation(line: 1527, column: 12, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 1527, column: 12)
!6196 = !DILocation(line: 1527, column: 14, scope: !6195)
!6197 = !DILocation(line: 1527, column: 22, scope: !6195)
!6198 = !DILocation(line: 1527, column: 25, scope: !6195)
!6199 = !DILocation(line: 1527, column: 27, scope: !6195)
!6200 = !DILocation(line: 1527, column: 34, scope: !6195)
!6201 = !DILocation(line: 1527, column: 37, scope: !6195)
!6202 = !DILocation(line: 1527, column: 39, scope: !6195)
!6203 = !DILocation(line: 1527, column: 12, scope: !6188)
!6204 = !DILocation(line: 1531, column: 5, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 1528, column: 3)
!6206 = !DILocation(line: 1532, column: 9, scope: !6205)
!6207 = !DILocation(line: 1533, column: 6, scope: !6205)
!6208 = !DILocation(line: 1534, column: 9, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 1534, column: 9)
!6210 = !DILocation(line: 1534, column: 11, scope: !6209)
!6211 = !DILocation(line: 1534, column: 9, scope: !6205)
!6212 = !DILocation(line: 1535, column: 7, scope: !6209)
!6213 = !DILocation(line: 1536, column: 15, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 1535, column: 10)
!6215 = !DILocation(line: 1536, column: 13, scope: !6214)
!6216 = !DILocation(line: 1536, column: 11, scope: !6214)
!6217 = !DILocation(line: 1537, column: 7, scope: !6214)
!6218 = !DILocation(line: 1537, column: 16, scope: !6209)
!6219 = !DILocation(line: 1537, column: 18, scope: !6209)
!6220 = !DILocation(line: 1537, column: 26, scope: !6209)
!6221 = !DILocation(line: 1537, column: 29, scope: !6209)
!6222 = !DILocation(line: 1537, column: 31, scope: !6209)
!6223 = !DILocation(line: 0, scope: !6209)
!6224 = distinct !{!6224, !6212, !6225}
!6225 = !DILocation(line: 1537, column: 37, scope: !6209)
!6226 = !DILocation(line: 1538, column: 9, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 1538, column: 9)
!6228 = !DILocation(line: 1538, column: 11, scope: !6227)
!6229 = !DILocation(line: 1538, column: 9, scope: !6205)
!6230 = !DILocation(line: 1539, column: 7, scope: !6227)
!6231 = !DILocation(line: 1540, column: 5, scope: !6205)
!6232 = distinct !{!6232, !6233, !6234}
!6233 = !DILocation(line: 1523, column: 4, scope: !6190)
!6234 = !DILocation(line: 1572, column: 6, scope: !6190)
!6235 = !DILocation(line: 1543, column: 16, scope: !6188)
!6236 = !DILocation(line: 1543, column: 8, scope: !6188)
!6237 = !DILocation(line: 1551, column: 5, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 1544, column: 3)
!6239 = !DILocation(line: 1554, column: 36, scope: !6238)
!6240 = !DILocation(line: 1554, column: 17, scope: !6238)
!6241 = !DILocation(line: 1555, column: 16, scope: !6238)
!6242 = !DILocation(line: 1554, column: 9, scope: !6238)
!6243 = !DILocation(line: 1556, column: 5, scope: !6238)
!6244 = !DILocation(line: 1560, column: 36, scope: !6238)
!6245 = !DILocation(line: 1560, column: 17, scope: !6238)
!6246 = !DILocation(line: 1560, column: 9, scope: !6238)
!6247 = !DILocation(line: 1561, column: 5, scope: !6238)
!6248 = !DILocation(line: 1568, column: 38, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1564, column: 9)
!6250 = !DILocation(line: 1568, column: 19, scope: !6249)
!6251 = !DILocation(line: 1569, column: 16, scope: !6249)
!6252 = !DILocation(line: 1568, column: 11, scope: !6249)
!6253 = !DILocation(line: 1570, column: 3, scope: !6238)
!6254 = !DILocation(line: 1571, column: 13, scope: !6188)
!6255 = !DILocation(line: 1571, column: 10, scope: !6188)
!6256 = !DILocation(line: 1523, column: 4, scope: !6189)
!6257 = !DILocation(line: 1573, column: 2, scope: !6180)
!6258 = !DILocation(line: 1515, column: 35, scope: !6175)
!6259 = !DILocation(line: 1515, column: 7, scope: !6175)
!6260 = distinct !{!6260, !6178, !6261}
!6261 = !DILocation(line: 1573, column: 2, scope: !6172)
!6262 = !DILocation(line: 1577, column: 7, scope: !6115)
!6263 = !DILocation(line: 1578, column: 14, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1578, column: 7)
!6265 = !DILocation(line: 1578, column: 12, scope: !6264)
!6266 = !DILocation(line: 1578, column: 19, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 1578, column: 7)
!6268 = !DILocation(line: 1578, column: 21, scope: !6267)
!6269 = !DILocation(line: 1578, column: 7, scope: !6264)
!6270 = !DILocation(line: 1579, column: 6, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 1579, column: 6)
!6272 = !DILocation(line: 1579, column: 6, scope: !6267)
!6273 = !DILocation(line: 1581, column: 6, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 1580, column: 4)
!6275 = !DILocation(line: 1582, column: 6, scope: !6274)
!6276 = !DILocation(line: 1583, column: 4, scope: !6274)
!6277 = !DILocation(line: 1578, column: 47, scope: !6267)
!6278 = !DILocation(line: 1578, column: 7, scope: !6267)
!6279 = distinct !{!6279, !6269, !6280}
!6280 = !DILocation(line: 1583, column: 4, scope: !6264)
!6281 = !DILocation(line: 1584, column: 5, scope: !6115)
!6282 = !DILocation(line: 1486, column: 55, scope: !6111)
!6283 = !DILocation(line: 1486, column: 62, scope: !6111)
!6284 = !DILocation(line: 1486, column: 53, scope: !6111)
!6285 = !DILocation(line: 1486, column: 3, scope: !6111)
!6286 = distinct !{!6286, !6113, !6287}
!6287 = !DILocation(line: 1584, column: 5, scope: !6107)
!6288 = !DILocation(line: 1587, column: 1, scope: !6097)
!6289 = distinct !DISubprogram(name: "spill_hard_reg", scope: !3, file: !3, line: 3927, type: !6290, scopeLine: 3928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!6290 = !DISubroutineType(types: !6291)
!6291 = !{null, !7, !2396}
!6292 = !DILocalVariable(name: "regno", arg: 1, scope: !6289, file: !3, line: 3927, type: !7)
!6293 = !DILocation(line: 3927, column: 30, scope: !6289)
!6294 = !DILocalVariable(name: "cant_eliminate", arg: 2, scope: !6289, file: !3, line: 3927, type: !2396)
!6295 = !DILocation(line: 3927, column: 41, scope: !6289)
!6296 = !DILocalVariable(name: "i", scope: !6289, file: !3, line: 3929, type: !2396)
!6297 = !DILocation(line: 3929, column: 7, scope: !6289)
!6298 = !DILocation(line: 3931, column: 7, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 3931, column: 7)
!6300 = !DILocation(line: 3931, column: 7, scope: !6289)
!6301 = !DILocation(line: 3933, column: 7, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 3932, column: 5)
!6303 = !DILocation(line: 3934, column: 30, scope: !6302)
!6304 = !DILocation(line: 3934, column: 7, scope: !6302)
!6305 = !DILocation(line: 3935, column: 5, scope: !6302)
!6306 = !DILocation(line: 3940, column: 10, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 3940, column: 3)
!6308 = !DILocation(line: 3940, column: 8, scope: !6307)
!6309 = !DILocation(line: 3940, column: 35, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 3940, column: 3)
!6311 = !DILocation(line: 3940, column: 39, scope: !6310)
!6312 = !DILocation(line: 3940, column: 37, scope: !6310)
!6313 = !DILocation(line: 3940, column: 3, scope: !6307)
!6314 = !DILocation(line: 3941, column: 9, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 3941, column: 9)
!6316 = !DILocation(line: 3941, column: 22, scope: !6315)
!6317 = !DILocation(line: 3941, column: 25, scope: !6315)
!6318 = !DILocation(line: 3942, column: 2, scope: !6315)
!6319 = !DILocation(line: 3942, column: 20, scope: !6315)
!6320 = !DILocation(line: 3942, column: 33, scope: !6315)
!6321 = !DILocation(line: 3942, column: 5, scope: !6315)
!6322 = !DILocation(line: 3942, column: 39, scope: !6315)
!6323 = !DILocation(line: 3942, column: 36, scope: !6315)
!6324 = !DILocation(line: 3943, column: 2, scope: !6315)
!6325 = !DILocation(line: 3943, column: 21, scope: !6315)
!6326 = !DILocation(line: 3943, column: 44, scope: !6315)
!6327 = !DILocation(line: 3943, column: 57, scope: !6315)
!6328 = !DILocation(line: 3943, column: 5, scope: !6315)
!6329 = !DILocation(line: 3943, column: 63, scope: !6315)
!6330 = !DILocation(line: 3943, column: 61, scope: !6315)
!6331 = !DILocation(line: 3941, column: 9, scope: !6310)
!6332 = !DILocation(line: 3944, column: 7, scope: !6315)
!6333 = !DILocation(line: 3940, column: 51, scope: !6310)
!6334 = !DILocation(line: 3940, column: 3, scope: !6310)
!6335 = distinct !{!6335, !6313, !6336}
!6336 = !DILocation(line: 3944, column: 7, scope: !6307)
!6337 = !DILocation(line: 3945, column: 1, scope: !6289)
!6338 = distinct !DISubprogram(name: "finish_spills", scope: !3, file: !3, line: 3953, type: !6339, scopeLine: 3954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!6339 = !DISubroutineType(types: !6340)
!6340 = !{!2396, !2396}
!6341 = !DILocalVariable(name: "global", arg: 1, scope: !6338, file: !3, line: 3953, type: !2396)
!6342 = !DILocation(line: 3953, column: 20, scope: !6338)
!6343 = !DILocalVariable(name: "chain", scope: !6338, file: !3, line: 3955, type: !2365)
!6344 = !DILocation(line: 3955, column: 22, scope: !6338)
!6345 = !DILocalVariable(name: "something_changed", scope: !6338, file: !3, line: 3956, type: !2396)
!6346 = !DILocation(line: 3956, column: 7, scope: !6338)
!6347 = !DILocalVariable(name: "i", scope: !6338, file: !3, line: 3957, type: !7)
!6348 = !DILocation(line: 3957, column: 12, scope: !6338)
!6349 = !DILocalVariable(name: "rsi", scope: !6338, file: !3, line: 3958, type: !3988)
!6350 = !DILocation(line: 3958, column: 20, scope: !6338)
!6351 = !DILocation(line: 3972, column: 12, scope: !6338)
!6352 = !DILocation(line: 3973, column: 10, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 3973, column: 3)
!6354 = !DILocation(line: 3973, column: 8, scope: !6353)
!6355 = !DILocation(line: 3973, column: 15, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 3973, column: 3)
!6357 = !DILocation(line: 3973, column: 17, scope: !6356)
!6358 = !DILocation(line: 3973, column: 3, scope: !6353)
!6359 = !DILocation(line: 3974, column: 9, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 3974, column: 9)
!6361 = !DILocation(line: 3974, column: 9, scope: !6356)
!6362 = !DILocation(line: 3976, column: 23, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 3975, column: 7)
!6364 = !DILocation(line: 3976, column: 18, scope: !6363)
!6365 = !DILocation(line: 3976, column: 2, scope: !6363)
!6366 = !DILocation(line: 3976, column: 21, scope: !6363)
!6367 = !DILocation(line: 3977, column: 27, scope: !6363)
!6368 = !DILocation(line: 3977, column: 21, scope: !6363)
!6369 = !DILocation(line: 3977, column: 2, scope: !6363)
!6370 = !DILocation(line: 3977, column: 25, scope: !6363)
!6371 = !DILocation(line: 3978, column: 6, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 3978, column: 6)
!6373 = !DILocation(line: 3978, column: 21, scope: !6372)
!6374 = !DILocation(line: 3978, column: 47, scope: !6372)
!6375 = !DILocation(line: 3978, column: 26, scope: !6372)
!6376 = !DILocation(line: 3978, column: 6, scope: !6363)
!6377 = !DILocation(line: 3979, column: 22, scope: !6372)
!6378 = !DILocation(line: 3979, column: 4, scope: !6372)
!6379 = !DILocation(line: 3980, column: 25, scope: !6363)
!6380 = !DILocation(line: 3980, column: 2, scope: !6363)
!6381 = !DILocation(line: 3981, column: 7, scope: !6363)
!6382 = !DILocation(line: 3983, column: 23, scope: !6360)
!6383 = !DILocation(line: 3983, column: 7, scope: !6360)
!6384 = !DILocation(line: 3983, column: 26, scope: !6360)
!6385 = !DILocation(line: 3973, column: 43, scope: !6356)
!6386 = !DILocation(line: 3973, column: 3, scope: !6356)
!6387 = distinct !{!6387, !6358, !6388}
!6388 = !DILocation(line: 3983, column: 29, scope: !6353)
!6389 = !DILocation(line: 3985, column: 3, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 3985, column: 3)
!6391 = !DILocation(line: 3985, column: 3, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 3985, column: 3)
!6393 = !DILocation(line: 3986, column: 11, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 3986, column: 9)
!6395 = !DILocation(line: 3986, column: 27, scope: !6394)
!6396 = !DILocation(line: 3986, column: 30, scope: !6394)
!6397 = !DILocation(line: 3986, column: 43, scope: !6394)
!6398 = !DILocation(line: 3986, column: 46, scope: !6394)
!6399 = !DILocation(line: 3986, column: 9, scope: !6392)
!6400 = !DILocation(line: 3991, column: 2, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 3987, column: 7)
!6402 = !DILocation(line: 3993, column: 2, scope: !6401)
!6403 = !DILocation(line: 3995, column: 2, scope: !6401)
!6404 = !DILocation(line: 3995, column: 15, scope: !6401)
!6405 = !DILocation(line: 3995, column: 18, scope: !6401)
!6406 = !DILocation(line: 3996, column: 6, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 3996, column: 6)
!6408 = !DILocation(line: 3996, column: 6, scope: !6401)
!6409 = !DILocation(line: 3998, column: 32, scope: !6407)
!6410 = !DILocation(line: 3998, column: 4, scope: !6407)
!6411 = !DILocation(line: 4000, column: 20, scope: !6401)
!6412 = !DILocation(line: 4001, column: 7, scope: !6401)
!6413 = !DILocation(line: 3986, column: 49, scope: !6394)
!6414 = distinct !{!6414, !6389, !6415}
!6415 = !DILocation(line: 4001, column: 7, scope: !6390)
!6416 = !DILocation(line: 4004, column: 7, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 4004, column: 7)
!6418 = !DILocation(line: 4004, column: 14, scope: !6417)
!6419 = !DILocation(line: 4004, column: 17, scope: !6417)
!6420 = !DILocation(line: 4004, column: 7, scope: !6338)
!6421 = !DILocalVariable(name: "n", scope: !6422, file: !3, line: 4006, type: !7)
!6422 = distinct !DILexicalBlock(scope: !6417, file: !3, line: 4005, column: 5)
!6423 = !DILocation(line: 4006, column: 20, scope: !6422)
!6424 = !DILocation(line: 4008, column: 15, scope: !6422)
!6425 = !DILocation(line: 4008, column: 7, scope: !6422)
!6426 = !DILocation(line: 4008, column: 41, scope: !6422)
!6427 = !DILocation(line: 4008, column: 51, scope: !6422)
!6428 = !DILocation(line: 4012, column: 20, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 4012, column: 7)
!6430 = !DILocation(line: 4012, column: 18, scope: !6429)
!6431 = !DILocation(line: 4012, column: 12, scope: !6429)
!6432 = !DILocation(line: 4012, column: 39, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 4012, column: 7)
!6434 = !DILocation(line: 4012, column: 7, scope: !6429)
!6435 = !DILocation(line: 4014, column: 4, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 4014, column: 4)
!6437 = distinct !DILexicalBlock(scope: !6433, file: !3, line: 4013, column: 2)
!6438 = !DILocation(line: 4014, column: 4, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 4014, column: 4)
!6440 = !DILocation(line: 4017, column: 8, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6439, file: !3, line: 4016, column: 6)
!6442 = !DILocation(line: 4019, column: 6, scope: !6441)
!6443 = distinct !{!6443, !6435, !6444}
!6444 = !DILocation(line: 4019, column: 6, scope: !6436)
!6445 = !DILocation(line: 4020, column: 4, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 4020, column: 4)
!6447 = !DILocation(line: 4020, column: 4, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 4020, column: 4)
!6449 = !DILocation(line: 4023, column: 8, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 4022, column: 6)
!6451 = !DILocation(line: 4025, column: 6, scope: !6450)
!6452 = distinct !{!6452, !6445, !6453}
!6453 = !DILocation(line: 4025, column: 6, scope: !6446)
!6454 = !DILocation(line: 4026, column: 2, scope: !6437)
!6455 = !DILocation(line: 4012, column: 54, scope: !6433)
!6456 = !DILocation(line: 4012, column: 61, scope: !6433)
!6457 = !DILocation(line: 4012, column: 52, scope: !6433)
!6458 = !DILocation(line: 4012, column: 7, scope: !6433)
!6459 = distinct !{!6459, !6434, !6460}
!6460 = !DILocation(line: 4026, column: 2, scope: !6429)
!6461 = !DILocation(line: 4032, column: 14, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 4032, column: 7)
!6463 = !DILocation(line: 4032, column: 21, scope: !6462)
!6464 = !DILocation(line: 4032, column: 12, scope: !6462)
!6465 = !DILocation(line: 4032, column: 46, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 4032, column: 7)
!6467 = !DILocation(line: 4032, column: 61, scope: !6466)
!6468 = !DILocation(line: 4032, column: 48, scope: !6466)
!6469 = !DILocation(line: 4032, column: 7, scope: !6462)
!6470 = !DILocation(line: 4033, column: 6, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 4033, column: 6)
!6472 = !DILocation(line: 4033, column: 23, scope: !6471)
!6473 = !DILocation(line: 4033, column: 29, scope: !6471)
!6474 = !DILocation(line: 4033, column: 42, scope: !6471)
!6475 = !DILocation(line: 4033, column: 26, scope: !6471)
!6476 = !DILocation(line: 4033, column: 6, scope: !6466)
!6477 = !DILocation(line: 4035, column: 10, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6479, file: !3, line: 4035, column: 10)
!6479 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 4034, column: 4)
!6480 = !DILocation(line: 4035, column: 23, scope: !6478)
!6481 = !DILocation(line: 4035, column: 26, scope: !6478)
!6482 = !DILocation(line: 4035, column: 10, scope: !6479)
!6483 = !DILocation(line: 4036, column: 35, scope: !6478)
!6484 = !DILocation(line: 4036, column: 8, scope: !6478)
!6485 = !DILocation(line: 4036, column: 29, scope: !6478)
!6486 = !DILocation(line: 4036, column: 33, scope: !6478)
!6487 = !DILocation(line: 4038, column: 8, scope: !6478)
!6488 = !DILocation(line: 4039, column: 4, scope: !6479)
!6489 = !DILocation(line: 4033, column: 43, scope: !6471)
!6490 = !DILocation(line: 4032, column: 73, scope: !6466)
!6491 = !DILocation(line: 4032, column: 7, scope: !6466)
!6492 = distinct !{!6492, !6469, !6493}
!6493 = !DILocation(line: 4039, column: 4, scope: !6462)
!6494 = !DILocation(line: 4040, column: 33, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 4040, column: 11)
!6496 = !DILocation(line: 4040, column: 54, scope: !6495)
!6497 = !DILocation(line: 4041, column: 5, scope: !6495)
!6498 = !DILocation(line: 4042, column: 5, scope: !6495)
!6499 = !DILocation(line: 4042, column: 28, scope: !6495)
!6500 = !DILocation(line: 4040, column: 11, scope: !6495)
!6501 = !DILocation(line: 4040, column: 11, scope: !6422)
!6502 = !DILocation(line: 4044, column: 20, scope: !6495)
!6503 = !DILocation(line: 4044, column: 2, scope: !6495)
!6504 = !DILocation(line: 4045, column: 5, scope: !6422)
!6505 = !DILocation(line: 4049, column: 16, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 4049, column: 3)
!6507 = !DILocation(line: 4049, column: 14, scope: !6506)
!6508 = !DILocation(line: 4049, column: 8, scope: !6506)
!6509 = !DILocation(line: 4049, column: 35, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 4049, column: 3)
!6511 = !DILocation(line: 4049, column: 3, scope: !6506)
!6512 = !DILocalVariable(name: "used_by_pseudos", scope: !6513, file: !3, line: 4051, type: !3577)
!6513 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 4050, column: 5)
!6514 = !DILocation(line: 4051, column: 20, scope: !6513)
!6515 = !DILocalVariable(name: "used_by_pseudos2", scope: !6513, file: !3, line: 4052, type: !3577)
!6516 = !DILocation(line: 4052, column: 20, scope: !6513)
!6517 = !DILocation(line: 4054, column: 13, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 4054, column: 11)
!6519 = !DILocation(line: 4054, column: 11, scope: !6513)
!6520 = !DILocation(line: 4059, column: 4, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 4055, column: 2)
!6522 = !DILocation(line: 4060, column: 4, scope: !6521)
!6523 = !DILocation(line: 4061, column: 2, scope: !6521)
!6524 = !DILocation(line: 4064, column: 11, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 4064, column: 11)
!6526 = !DILocation(line: 4064, column: 18, scope: !6525)
!6527 = !DILocation(line: 4064, column: 11, scope: !6513)
!6528 = !DILocation(line: 4066, column: 4, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4065, column: 2)
!6530 = !DILocation(line: 4066, column: 4, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 4066, column: 4)
!6532 = !DILocation(line: 4067, column: 4, scope: !6529)
!6533 = !DILocation(line: 4067, column: 4, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 4067, column: 4)
!6535 = !DILocation(line: 4068, column: 4, scope: !6529)
!6536 = !DILocation(line: 4070, column: 47, scope: !6529)
!6537 = !DILocation(line: 4070, column: 54, scope: !6529)
!6538 = !DILocation(line: 4070, column: 4, scope: !6529)
!6539 = !DILocation(line: 4071, column: 47, scope: !6529)
!6540 = !DILocation(line: 4071, column: 54, scope: !6529)
!6541 = !DILocation(line: 4071, column: 4, scope: !6529)
!6542 = !DILocation(line: 4076, column: 4, scope: !6529)
!6543 = !DILocation(line: 4077, column: 4, scope: !6529)
!6544 = !DILocation(line: 4078, column: 2, scope: !6529)
!6545 = !DILocation(line: 4079, column: 5, scope: !6513)
!6546 = !DILocation(line: 4049, column: 50, scope: !6510)
!6547 = !DILocation(line: 4049, column: 57, scope: !6510)
!6548 = !DILocation(line: 4049, column: 48, scope: !6510)
!6549 = !DILocation(line: 4049, column: 3, scope: !6510)
!6550 = distinct !{!6550, !6511, !6551}
!6551 = !DILocation(line: 4079, column: 5, scope: !6506)
!6552 = !DILocation(line: 4081, column: 3, scope: !6338)
!6553 = !DILocation(line: 4083, column: 10, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 4083, column: 3)
!6555 = !DILocation(line: 4083, column: 8, scope: !6554)
!6556 = !DILocation(line: 4083, column: 35, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 4083, column: 3)
!6558 = !DILocation(line: 4083, column: 49, scope: !6557)
!6559 = !DILocation(line: 4083, column: 37, scope: !6557)
!6560 = !DILocation(line: 4083, column: 3, scope: !6554)
!6561 = !DILocalVariable(name: "regno", scope: !6562, file: !3, line: 4085, type: !2396)
!6562 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 4084, column: 5)
!6563 = !DILocation(line: 4085, column: 11, scope: !6562)
!6564 = !DILocation(line: 4085, column: 19, scope: !6562)
!6565 = !DILocation(line: 4085, column: 32, scope: !6562)
!6566 = !DILocation(line: 4086, column: 11, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 4086, column: 11)
!6568 = !DILocation(line: 4086, column: 28, scope: !6567)
!6569 = !DILocation(line: 4086, column: 34, scope: !6567)
!6570 = !DILocation(line: 4086, column: 31, scope: !6567)
!6571 = !DILocation(line: 4086, column: 11, scope: !6562)
!6572 = !DILocation(line: 4087, column: 2, scope: !6567)
!6573 = !DILocation(line: 4089, column: 7, scope: !6562)
!6574 = !DILocation(line: 4091, column: 18, scope: !6562)
!6575 = !DILocation(line: 4091, column: 21, scope: !6562)
!6576 = !DILocation(line: 4091, column: 38, scope: !6562)
!6577 = !DILocation(line: 4091, column: 7, scope: !6562)
!6578 = !DILocation(line: 4092, column: 29, scope: !6562)
!6579 = !DILocation(line: 4092, column: 7, scope: !6562)
!6580 = !DILocation(line: 4092, column: 24, scope: !6562)
!6581 = !DILocation(line: 4092, column: 27, scope: !6562)
!6582 = !DILocation(line: 4093, column: 11, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 4093, column: 11)
!6584 = !DILocation(line: 4093, column: 11, scope: !6562)
!6585 = !DILocation(line: 4095, column: 8, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 4095, column: 8)
!6587 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 4094, column: 2)
!6588 = !DILocation(line: 4095, column: 14, scope: !6586)
!6589 = !DILocation(line: 4095, column: 8, scope: !6587)
!6590 = !DILocation(line: 4096, column: 15, scope: !6586)
!6591 = !DILocation(line: 4096, column: 60, scope: !6586)
!6592 = !DILocation(line: 4096, column: 6, scope: !6586)
!6593 = !DILocation(line: 4098, column: 15, scope: !6586)
!6594 = !DILocation(line: 4099, column: 8, scope: !6586)
!6595 = !DILocation(line: 4099, column: 11, scope: !6586)
!6596 = !DILocation(line: 4099, column: 24, scope: !6586)
!6597 = !DILocation(line: 4098, column: 6, scope: !6586)
!6598 = !DILocation(line: 4100, column: 2, scope: !6587)
!6599 = !DILocation(line: 4101, column: 5, scope: !6562)
!6600 = !DILocation(line: 4083, column: 61, scope: !6557)
!6601 = !DILocation(line: 4083, column: 3, scope: !6557)
!6602 = distinct !{!6602, !6560, !6603}
!6603 = !DILocation(line: 4101, column: 5, scope: !6554)
!6604 = !DILocation(line: 4103, column: 10, scope: !6338)
!6605 = !DILocation(line: 4103, column: 3, scope: !6338)
!6606 = distinct !DISubprogram(name: "set_initial_elim_offsets", scope: !3, file: !3, line: 3703, type: !3871, scopeLine: 3704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!6607 = !DILocalVariable(name: "ep", scope: !6606, file: !3, line: 3705, type: !3605)
!6608 = !DILocation(line: 3705, column: 22, scope: !6606)
!6609 = !DILocation(line: 3705, column: 27, scope: !6606)
!6610 = !DILocation(line: 3708, column: 3, scope: !6606)
!6611 = !DILocation(line: 3708, column: 10, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 3708, column: 3)
!6613 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 3708, column: 3)
!6614 = !DILocation(line: 3708, column: 16, scope: !6612)
!6615 = !DILocation(line: 3708, column: 13, scope: !6612)
!6616 = !DILocation(line: 3708, column: 3, scope: !6613)
!6617 = !DILocation(line: 3710, column: 7, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 3709, column: 5)
!6619 = !DILocation(line: 3711, column: 42, scope: !6618)
!6620 = !DILocation(line: 3711, column: 46, scope: !6618)
!6621 = !DILocation(line: 3711, column: 29, scope: !6618)
!6622 = !DILocation(line: 3711, column: 33, scope: !6618)
!6623 = !DILocation(line: 3711, column: 40, scope: !6618)
!6624 = !DILocation(line: 3711, column: 7, scope: !6618)
!6625 = !DILocation(line: 3711, column: 11, scope: !6618)
!6626 = !DILocation(line: 3711, column: 27, scope: !6618)
!6627 = !DILocation(line: 3712, column: 5, scope: !6618)
!6628 = !DILocation(line: 3708, column: 54, scope: !6612)
!6629 = !DILocation(line: 3708, column: 3, scope: !6612)
!6630 = distinct !{!6630, !6616, !6631}
!6631 = !DILocation(line: 3712, column: 5, scope: !6613)
!6632 = !DILocation(line: 3718, column: 29, scope: !6606)
!6633 = !DILocation(line: 3719, column: 1, scope: !6606)
!6634 = distinct !DISubprogram(name: "set_initial_label_offsets", scope: !3, file: !3, line: 3737, type: !3871, scopeLine: 3738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!6635 = !DILocalVariable(name: "x", scope: !6634, file: !3, line: 3739, type: !2372)
!6636 = !DILocation(line: 3739, column: 7, scope: !6634)
!6637 = !DILocation(line: 3740, column: 11, scope: !6634)
!6638 = !DILocation(line: 3740, column: 32, scope: !6634)
!6639 = !DILocation(line: 3740, column: 3, scope: !6634)
!6640 = !DILocation(line: 3742, column: 12, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 3742, column: 3)
!6642 = !DILocation(line: 3742, column: 10, scope: !6641)
!6643 = !DILocation(line: 3742, column: 8, scope: !6641)
!6644 = !DILocation(line: 3742, column: 27, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 3742, column: 3)
!6646 = !DILocation(line: 3742, column: 3, scope: !6641)
!6647 = !DILocation(line: 3743, column: 9, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 3743, column: 9)
!6649 = !DILocation(line: 3743, column: 9, scope: !6645)
!6650 = !DILocation(line: 3744, column: 26, scope: !6648)
!6651 = !DILocation(line: 3744, column: 7, scope: !6648)
!6652 = !DILocation(line: 3742, column: 34, scope: !6645)
!6653 = !DILocation(line: 3742, column: 32, scope: !6645)
!6654 = !DILocation(line: 3742, column: 3, scope: !6645)
!6655 = distinct !{!6655, !6646, !6656}
!6656 = !DILocation(line: 3744, column: 50, scope: !6641)
!6657 = !DILocation(line: 3746, column: 3, scope: !6634)
!6658 = !DILocation(line: 3747, column: 1, scope: !6634)
!6659 = distinct !DISubprogram(name: "eliminate_regs", scope: !3, file: !3, line: 2942, type: !6660, scopeLine: 2943, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!6660 = !DISubroutineType(types: !6661)
!6661 = !{!2372, !2372, !5, !2372}
!6662 = !DILocalVariable(name: "x", arg: 1, scope: !6659, file: !3, line: 2942, type: !2372)
!6663 = !DILocation(line: 2942, column: 21, scope: !6659)
!6664 = !DILocalVariable(name: "mem_mode", arg: 2, scope: !6659, file: !3, line: 2942, type: !5)
!6665 = !DILocation(line: 2942, column: 42, scope: !6659)
!6666 = !DILocalVariable(name: "insn", arg: 3, scope: !6659, file: !3, line: 2942, type: !2372)
!6667 = !DILocation(line: 2942, column: 56, scope: !6659)
!6668 = !DILocation(line: 2944, column: 28, scope: !6659)
!6669 = !DILocation(line: 2944, column: 31, scope: !6659)
!6670 = !DILocation(line: 2944, column: 41, scope: !6659)
!6671 = !DILocation(line: 2944, column: 10, scope: !6659)
!6672 = !DILocation(line: 2944, column: 3, scope: !6659)
!6673 = distinct !DISubprogram(name: "calculate_needs_all_insns", scope: !3, file: !3, line: 1604, type: !5471, scopeLine: 1605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!6674 = !DILocalVariable(name: "global", arg: 1, scope: !6673, file: !3, line: 1604, type: !2396)
!6675 = !DILocation(line: 1604, column: 32, scope: !6673)
!6676 = !DILocalVariable(name: "pprev_reload", scope: !6673, file: !3, line: 1606, type: !6677)
!6677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!6678 = !DILocation(line: 1606, column: 23, scope: !6673)
!6679 = !DILocalVariable(name: "chain", scope: !6673, file: !3, line: 1607, type: !2365)
!6680 = !DILocation(line: 1607, column: 22, scope: !6673)
!6681 = !DILocalVariable(name: "next", scope: !6673, file: !3, line: 1607, type: !2365)
!6682 = !DILocation(line: 1607, column: 30, scope: !6673)
!6683 = !DILocation(line: 1609, column: 31, scope: !6673)
!6684 = !DILocation(line: 1611, column: 26, scope: !6673)
!6685 = !DILocation(line: 1611, column: 24, scope: !6673)
!6686 = !DILocation(line: 1612, column: 16, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 1612, column: 3)
!6688 = !DILocation(line: 1612, column: 14, scope: !6687)
!6689 = !DILocation(line: 1612, column: 8, scope: !6687)
!6690 = !DILocation(line: 1612, column: 35, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 1612, column: 3)
!6692 = !DILocation(line: 1612, column: 41, scope: !6691)
!6693 = !DILocation(line: 1612, column: 3, scope: !6687)
!6694 = !DILocalVariable(name: "insn", scope: !6695, file: !3, line: 1614, type: !2372)
!6695 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 1613, column: 5)
!6696 = !DILocation(line: 1614, column: 11, scope: !6695)
!6697 = !DILocation(line: 1614, column: 18, scope: !6695)
!6698 = !DILocation(line: 1614, column: 25, scope: !6695)
!6699 = !DILocation(line: 1616, column: 14, scope: !6695)
!6700 = !DILocation(line: 1616, column: 21, scope: !6695)
!6701 = !DILocation(line: 1616, column: 12, scope: !6695)
!6702 = !DILocation(line: 1619, column: 7, scope: !6695)
!6703 = !DILocation(line: 1619, column: 14, scope: !6695)
!6704 = !DILocation(line: 1619, column: 24, scope: !6695)
!6705 = !DILocation(line: 1620, column: 7, scope: !6695)
!6706 = !DILocation(line: 1620, column: 14, scope: !6695)
!6707 = !DILocation(line: 1620, column: 24, scope: !6695)
!6708 = !DILocation(line: 1621, column: 7, scope: !6695)
!6709 = !DILocation(line: 1621, column: 14, scope: !6695)
!6710 = !DILocation(line: 1621, column: 26, scope: !6695)
!6711 = !DILocation(line: 1622, column: 7, scope: !6695)
!6712 = !DILocation(line: 1622, column: 14, scope: !6695)
!6713 = !DILocation(line: 1622, column: 34, scope: !6695)
!6714 = !DILocation(line: 1628, column: 11, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 1628, column: 11)
!6716 = !DILocation(line: 1628, column: 26, scope: !6715)
!6717 = !DILocation(line: 1628, column: 29, scope: !6715)
!6718 = !DILocation(line: 1629, column: 4, scope: !6715)
!6719 = !DILocation(line: 1629, column: 8, scope: !6715)
!6720 = !DILocation(line: 1629, column: 22, scope: !6715)
!6721 = !DILocation(line: 1629, column: 25, scope: !6715)
!6722 = !DILocation(line: 1629, column: 42, scope: !6715)
!6723 = !DILocation(line: 1628, column: 11, scope: !6695)
!6724 = !DILocation(line: 1630, column: 21, scope: !6715)
!6725 = !DILocation(line: 1630, column: 27, scope: !6715)
!6726 = !DILocation(line: 1630, column: 2, scope: !6715)
!6727 = !DILocation(line: 1632, column: 11, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 1632, column: 11)
!6729 = !DILocation(line: 1632, column: 11, scope: !6695)
!6730 = !DILocalVariable(name: "old_body", scope: !6731, file: !3, line: 1634, type: !2372)
!6731 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 1633, column: 2)
!6732 = !DILocation(line: 1634, column: 8, scope: !6731)
!6733 = !DILocation(line: 1634, column: 19, scope: !6731)
!6734 = !DILocalVariable(name: "old_code", scope: !6731, file: !3, line: 1635, type: !2396)
!6735 = !DILocation(line: 1635, column: 8, scope: !6731)
!6736 = !DILocation(line: 1635, column: 19, scope: !6731)
!6737 = !DILocalVariable(name: "old_notes", scope: !6731, file: !3, line: 1636, type: !2372)
!6738 = !DILocation(line: 1636, column: 8, scope: !6731)
!6739 = !DILocation(line: 1636, column: 20, scope: !6731)
!6740 = !DILocalVariable(name: "did_elimination", scope: !6731, file: !3, line: 1637, type: !2396)
!6741 = !DILocation(line: 1637, column: 8, scope: !6731)
!6742 = !DILocalVariable(name: "operands_changed", scope: !6731, file: !3, line: 1638, type: !2396)
!6743 = !DILocation(line: 1638, column: 8, scope: !6731)
!6744 = !DILocalVariable(name: "set", scope: !6731, file: !3, line: 1639, type: !2372)
!6745 = !DILocation(line: 1639, column: 8, scope: !6731)
!6746 = !DILocation(line: 1639, column: 14, scope: !6731)
!6747 = !DILocation(line: 1642, column: 8, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 1642, column: 8)
!6749 = !DILocation(line: 1642, column: 12, scope: !6748)
!6750 = !DILocation(line: 1642, column: 15, scope: !6748)
!6751 = !DILocation(line: 1643, column: 8, scope: !6748)
!6752 = !DILocation(line: 1643, column: 11, scope: !6748)
!6753 = !DILocation(line: 1643, column: 24, scope: !6748)
!6754 = !DILocation(line: 1643, column: 48, scope: !6748)
!6755 = !DILocation(line: 1644, column: 8, scope: !6748)
!6756 = !DILocation(line: 1644, column: 12, scope: !6748)
!6757 = !DILocation(line: 1644, column: 31, scope: !6748)
!6758 = !DILocation(line: 1645, column: 5, scope: !6748)
!6759 = !DILocation(line: 1645, column: 9, scope: !6748)
!6760 = !DILocation(line: 1645, column: 29, scope: !6748)
!6761 = !DILocation(line: 1645, column: 8, scope: !6748)
!6762 = !DILocation(line: 1646, column: 9, scope: !6748)
!6763 = !DILocation(line: 1646, column: 12, scope: !6748)
!6764 = !DILocation(line: 1646, column: 27, scope: !6748)
!6765 = !DILocation(line: 1642, column: 8, scope: !6731)
!6766 = !DILocation(line: 1647, column: 6, scope: !6748)
!6767 = !DILocation(line: 1650, column: 8, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 1650, column: 8)
!6769 = !DILocation(line: 1650, column: 23, scope: !6768)
!6770 = !DILocation(line: 1650, column: 26, scope: !6768)
!6771 = !DILocation(line: 1650, column: 8, scope: !6731)
!6772 = !DILocation(line: 1651, column: 48, scope: !6768)
!6773 = !DILocation(line: 1651, column: 24, scope: !6768)
!6774 = !DILocation(line: 1651, column: 22, scope: !6768)
!6775 = !DILocation(line: 1651, column: 6, scope: !6768)
!6776 = !DILocation(line: 1654, column: 37, scope: !6731)
!6777 = !DILocation(line: 1654, column: 46, scope: !6731)
!6778 = !DILocation(line: 1655, column: 9, scope: !6731)
!6779 = !DILocation(line: 1654, column: 23, scope: !6731)
!6780 = !DILocation(line: 1654, column: 21, scope: !6731)
!6781 = !DILocation(line: 1664, column: 8, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 1664, column: 8)
!6783 = !DILocation(line: 1664, column: 37, scope: !6782)
!6784 = !DILocation(line: 1664, column: 40, scope: !6782)
!6785 = !DILocation(line: 1664, column: 50, scope: !6782)
!6786 = !DILocation(line: 1664, column: 8, scope: !6731)
!6787 = !DILocalVariable(name: "set", scope: !6788, file: !3, line: 1666, type: !2372)
!6788 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 1665, column: 6)
!6789 = !DILocation(line: 1666, column: 12, scope: !6788)
!6790 = !DILocation(line: 1666, column: 18, scope: !6788)
!6791 = !DILocation(line: 1667, column: 12, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 1667, column: 12)
!6793 = !DILocation(line: 1668, column: 5, scope: !6792)
!6794 = !DILocation(line: 1669, column: 7, scope: !6792)
!6795 = !DILocation(line: 1669, column: 24, scope: !6792)
!6796 = !DILocation(line: 1669, column: 21, scope: !6792)
!6797 = !DILocation(line: 1670, column: 7, scope: !6792)
!6798 = !DILocation(line: 1670, column: 10, scope: !6792)
!6799 = !DILocation(line: 1671, column: 7, scope: !6792)
!6800 = !DILocation(line: 1671, column: 10, scope: !6792)
!6801 = !DILocation(line: 1671, column: 32, scope: !6792)
!6802 = !DILocation(line: 1672, column: 6, scope: !6792)
!6803 = !DILocation(line: 1672, column: 10, scope: !6792)
!6804 = !DILocation(line: 1672, column: 32, scope: !6792)
!6805 = !DILocation(line: 1672, column: 35, scope: !6792)
!6806 = !DILocation(line: 1673, column: 10, scope: !6792)
!6807 = !DILocation(line: 1673, column: 13, scope: !6792)
!6808 = !DILocation(line: 1673, column: 26, scope: !6792)
!6809 = !DILocation(line: 1673, column: 49, scope: !6792)
!6810 = !DILocation(line: 1674, column: 10, scope: !6792)
!6811 = !DILocation(line: 1674, column: 13, scope: !6792)
!6812 = !DILocation(line: 1674, column: 26, scope: !6792)
!6813 = !DILocation(line: 1674, column: 50, scope: !6792)
!6814 = !DILocation(line: 1675, column: 10, scope: !6792)
!6815 = !DILocation(line: 1675, column: 13, scope: !6792)
!6816 = !DILocation(line: 1675, column: 34, scope: !6792)
!6817 = !DILocation(line: 1675, column: 57, scope: !6792)
!6818 = !DILocation(line: 1676, column: 10, scope: !6792)
!6819 = !DILocation(line: 1676, column: 13, scope: !6792)
!6820 = !DILocation(line: 1676, column: 34, scope: !6792)
!6821 = !DILocation(line: 1676, column: 58, scope: !6792)
!6822 = !DILocation(line: 1677, column: 10, scope: !6792)
!6823 = !DILocation(line: 1677, column: 26, scope: !6792)
!6824 = !DILocation(line: 1678, column: 13, scope: !6792)
!6825 = !DILocation(line: 1679, column: 12, scope: !6792)
!6826 = !DILocation(line: 1680, column: 13, scope: !6792)
!6827 = !DILocation(line: 1677, column: 13, scope: !6792)
!6828 = !DILocation(line: 1667, column: 12, scope: !6788)
!6829 = !DILocation(line: 1682, column: 9, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 1682, column: 9)
!6831 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 1681, column: 3)
!6832 = !DILocation(line: 1682, column: 9, scope: !6831)
!6833 = !DILocation(line: 1684, column: 38, scope: !6830)
!6834 = !DILocation(line: 1685, column: 10, scope: !6830)
!6835 = !DILocation(line: 1684, column: 7, scope: !6830)
!6836 = !DILocation(line: 1686, column: 18, scope: !6831)
!6837 = !DILocation(line: 1686, column: 5, scope: !6831)
!6838 = !DILocation(line: 1688, column: 9, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 1688, column: 9)
!6840 = !DILocation(line: 1688, column: 16, scope: !6839)
!6841 = !DILocation(line: 1688, column: 9, scope: !6831)
!6842 = !DILocation(line: 1689, column: 27, scope: !6839)
!6843 = !DILocation(line: 1689, column: 7, scope: !6839)
!6844 = !DILocation(line: 1689, column: 14, scope: !6839)
!6845 = !DILocation(line: 1689, column: 20, scope: !6839)
!6846 = !DILocation(line: 1689, column: 25, scope: !6839)
!6847 = !DILocation(line: 1691, column: 27, scope: !6839)
!6848 = !DILocation(line: 1691, column: 25, scope: !6839)
!6849 = !DILocation(line: 1692, column: 9, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 1692, column: 9)
!6851 = !DILocation(line: 1692, column: 9, scope: !6831)
!6852 = !DILocation(line: 1693, column: 20, scope: !6850)
!6853 = !DILocation(line: 1693, column: 27, scope: !6850)
!6854 = !DILocation(line: 1693, column: 7, scope: !6850)
!6855 = !DILocation(line: 1693, column: 13, scope: !6850)
!6856 = !DILocation(line: 1693, column: 18, scope: !6850)
!6857 = !DILocation(line: 1694, column: 19, scope: !6831)
!6858 = !DILocation(line: 1694, column: 5, scope: !6831)
!6859 = !DILocation(line: 1694, column: 12, scope: !6831)
!6860 = !DILocation(line: 1694, column: 17, scope: !6831)
!6861 = !DILocation(line: 1695, column: 26, scope: !6831)
!6862 = !DILocation(line: 1695, column: 24, scope: !6831)
!6863 = !DILocation(line: 1696, column: 5, scope: !6831)
!6864 = !DILocation(line: 1698, column: 6, scope: !6788)
!6865 = !DILocation(line: 1699, column: 8, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 1699, column: 8)
!6867 = !DILocation(line: 1699, column: 8, scope: !6731)
!6868 = !DILocation(line: 1700, column: 6, scope: !6866)
!6869 = !DILocation(line: 1704, column: 23, scope: !6731)
!6870 = !DILocation(line: 1704, column: 4, scope: !6731)
!6871 = !DILocation(line: 1704, column: 11, scope: !6731)
!6872 = !DILocation(line: 1704, column: 21, scope: !6731)
!6873 = !DILocation(line: 1705, column: 25, scope: !6731)
!6874 = !DILocation(line: 1705, column: 35, scope: !6731)
!6875 = !DILocation(line: 1705, column: 4, scope: !6731)
!6876 = !DILocation(line: 1705, column: 11, scope: !6731)
!6877 = !DILocation(line: 1705, column: 23, scope: !6731)
!6878 = !DILocation(line: 1706, column: 33, scope: !6731)
!6879 = !DILocation(line: 1706, column: 4, scope: !6731)
!6880 = !DILocation(line: 1706, column: 11, scope: !6731)
!6881 = !DILocation(line: 1706, column: 31, scope: !6731)
!6882 = !DILocation(line: 1709, column: 8, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 1709, column: 8)
!6884 = !DILocation(line: 1709, column: 8, scope: !6731)
!6885 = !DILocation(line: 1711, column: 8, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 1710, column: 6)
!6887 = !DILocation(line: 1712, column: 25, scope: !6886)
!6888 = !DILocation(line: 1712, column: 8, scope: !6886)
!6889 = !DILocation(line: 1712, column: 23, scope: !6886)
!6890 = !DILocation(line: 1713, column: 27, scope: !6886)
!6891 = !DILocation(line: 1713, column: 8, scope: !6886)
!6892 = !DILocation(line: 1713, column: 25, scope: !6886)
!6893 = !DILocation(line: 1714, column: 27, scope: !6886)
!6894 = !DILocation(line: 1714, column: 8, scope: !6886)
!6895 = !DILocation(line: 1714, column: 25, scope: !6886)
!6896 = !DILocation(line: 1715, column: 36, scope: !6886)
!6897 = !DILocation(line: 1716, column: 6, scope: !6886)
!6898 = !DILocation(line: 1718, column: 40, scope: !6731)
!6899 = !DILocation(line: 1718, column: 37, scope: !6731)
!6900 = !DILocation(line: 1720, column: 8, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 1720, column: 8)
!6902 = !DILocation(line: 1720, column: 18, scope: !6901)
!6903 = !DILocation(line: 1720, column: 8, scope: !6731)
!6904 = !DILocation(line: 1722, column: 22, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 1721, column: 6)
!6906 = !DILocation(line: 1722, column: 8, scope: !6905)
!6907 = !DILocation(line: 1723, column: 24, scope: !6905)
!6908 = !DILocation(line: 1723, column: 9, scope: !6905)
!6909 = !DILocation(line: 1723, column: 22, scope: !6905)
!6910 = !DILocation(line: 1724, column: 24, scope: !6905)
!6911 = !DILocation(line: 1724, column: 31, scope: !6905)
!6912 = !DILocation(line: 1724, column: 21, scope: !6905)
!6913 = !DILocation(line: 1725, column: 6, scope: !6905)
!6914 = !DILocation(line: 1726, column: 2, scope: !6731)
!6915 = !DILocation(line: 1727, column: 5, scope: !6695)
!6916 = !DILocation(line: 1612, column: 55, scope: !6691)
!6917 = !DILocation(line: 1612, column: 53, scope: !6691)
!6918 = !DILocation(line: 1612, column: 3, scope: !6691)
!6919 = distinct !{!6919, !6693, !6920}
!6920 = !DILocation(line: 1727, column: 5, scope: !6687)
!6921 = !DILocation(line: 1728, column: 4, scope: !6673)
!6922 = !DILocation(line: 1728, column: 17, scope: !6673)
!6923 = !DILocation(line: 1729, column: 1, scope: !6673)
!6924 = distinct !DISubprogram(name: "verify_initial_elim_offsets", scope: !3, file: !3, line: 3673, type: !5485, scopeLine: 3674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!6925 = !DILocalVariable(name: "t", scope: !6924, file: !3, line: 3675, type: !2359)
!6926 = !DILocation(line: 3675, column: 17, scope: !6924)
!6927 = !DILocation(line: 3677, column: 8, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 3677, column: 7)
!6929 = !DILocation(line: 3677, column: 7, scope: !6924)
!6930 = !DILocation(line: 3678, column: 5, scope: !6928)
!6931 = !DILocalVariable(name: "ep", scope: !6932, file: !3, line: 3682, type: !3605)
!6932 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 3681, column: 3)
!6933 = !DILocation(line: 3682, column: 23, scope: !6932)
!6934 = !DILocation(line: 3684, column: 14, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 3684, column: 4)
!6936 = !DILocation(line: 3684, column: 12, scope: !6935)
!6937 = !DILocation(line: 3684, column: 9, scope: !6935)
!6938 = !DILocation(line: 3684, column: 29, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6935, file: !3, line: 3684, column: 4)
!6940 = !DILocation(line: 3684, column: 35, scope: !6939)
!6941 = !DILocation(line: 3684, column: 32, scope: !6939)
!6942 = !DILocation(line: 3684, column: 4, scope: !6935)
!6943 = !DILocation(line: 3686, column: 8, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 3685, column: 6)
!6945 = !DILocation(line: 3687, column: 12, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 3687, column: 12)
!6947 = !DILocation(line: 3687, column: 17, scope: !6946)
!6948 = !DILocation(line: 3687, column: 21, scope: !6946)
!6949 = !DILocation(line: 3687, column: 14, scope: !6946)
!6950 = !DILocation(line: 3687, column: 12, scope: !6944)
!6951 = !DILocation(line: 3688, column: 3, scope: !6946)
!6952 = !DILocation(line: 3689, column: 6, scope: !6944)
!6953 = !DILocation(line: 3684, column: 73, scope: !6939)
!6954 = !DILocation(line: 3684, column: 4, scope: !6939)
!6955 = distinct !{!6955, !6942, !6956}
!6956 = !DILocation(line: 3689, column: 6, scope: !6935)
!6957 = !DILocation(line: 3697, column: 3, scope: !6924)
!6958 = !DILocation(line: 3698, column: 1, scope: !6924)
!6959 = distinct !DISubprogram(name: "update_eliminables", scope: !3, file: !3, line: 3776, type: !6960, scopeLine: 3777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!6960 = !DISubroutineType(types: !6961)
!6961 = !{null, !3583}
!6962 = !DILocalVariable(name: "pset", arg: 1, scope: !6959, file: !3, line: 3776, type: !3583)
!6963 = !DILocation(line: 3776, column: 35, scope: !6959)
!6964 = !DILocalVariable(name: "previous_frame_pointer_needed", scope: !6959, file: !3, line: 3778, type: !2396)
!6965 = !DILocation(line: 3778, column: 7, scope: !6959)
!6966 = !DILocation(line: 3778, column: 39, scope: !6959)
!6967 = !DILocalVariable(name: "ep", scope: !6959, file: !3, line: 3779, type: !3605)
!6968 = !DILocation(line: 3779, column: 22, scope: !6959)
!6969 = !DILocation(line: 3781, column: 13, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 3781, column: 3)
!6971 = !DILocation(line: 3781, column: 11, scope: !6970)
!6972 = !DILocation(line: 3781, column: 8, scope: !6970)
!6973 = !DILocation(line: 3781, column: 28, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 3781, column: 3)
!6975 = !DILocation(line: 3781, column: 34, scope: !6974)
!6976 = !DILocation(line: 3781, column: 31, scope: !6974)
!6977 = !DILocation(line: 3781, column: 3, scope: !6970)
!6978 = !DILocation(line: 3782, column: 10, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 3782, column: 9)
!6980 = !DILocation(line: 3782, column: 14, scope: !6979)
!6981 = !DILocation(line: 3782, column: 19, scope: !6979)
!6982 = !DILocation(line: 3783, column: 10, scope: !6979)
!6983 = !DILocation(line: 3783, column: 21, scope: !6979)
!6984 = !DILocation(line: 3783, column: 13, scope: !6979)
!6985 = !DILocation(line: 3785, column: 2, scope: !6979)
!6986 = !DILocation(line: 3785, column: 15, scope: !6979)
!6987 = !DILocation(line: 3785, column: 30, scope: !6979)
!6988 = !DILocation(line: 3785, column: 34, scope: !6979)
!6989 = !DILocation(line: 3785, column: 40, scope: !6979)
!6990 = !DILocation(line: 3785, column: 44, scope: !6979)
!6991 = !DILocation(line: 3785, column: 7, scope: !6979)
!6992 = !DILocation(line: 3782, column: 9, scope: !6974)
!6993 = !DILocation(line: 3788, column: 7, scope: !6979)
!6994 = !DILocation(line: 3788, column: 11, scope: !6979)
!6995 = !DILocation(line: 3788, column: 25, scope: !6979)
!6996 = !DILocation(line: 3785, column: 46, scope: !6979)
!6997 = !DILocation(line: 3781, column: 72, scope: !6974)
!6998 = !DILocation(line: 3781, column: 3, scope: !6974)
!6999 = distinct !{!6999, !6977, !7000}
!7000 = !DILocation(line: 3788, column: 27, scope: !6970)
!7001 = !DILocation(line: 3797, column: 13, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 3797, column: 3)
!7003 = !DILocation(line: 3797, column: 11, scope: !7002)
!7004 = !DILocation(line: 3797, column: 8, scope: !7002)
!7005 = !DILocation(line: 3797, column: 28, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 3797, column: 3)
!7007 = !DILocation(line: 3797, column: 34, scope: !7006)
!7008 = !DILocation(line: 3797, column: 31, scope: !7006)
!7009 = !DILocation(line: 3797, column: 3, scope: !7002)
!7010 = !DILocalVariable(name: "op", scope: !7011, file: !3, line: 3799, type: !3605)
!7011 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 3798, column: 5)
!7012 = !DILocation(line: 3799, column: 26, scope: !7011)
!7013 = !DILocalVariable(name: "new_to", scope: !7011, file: !3, line: 3800, type: !2396)
!7014 = !DILocation(line: 3800, column: 11, scope: !7011)
!7015 = !DILocation(line: 3802, column: 13, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 3802, column: 11)
!7017 = !DILocation(line: 3802, column: 17, scope: !7016)
!7018 = !DILocation(line: 3802, column: 31, scope: !7016)
!7019 = !DILocation(line: 3802, column: 34, scope: !7016)
!7020 = !DILocation(line: 3802, column: 38, scope: !7016)
!7021 = !DILocation(line: 3802, column: 11, scope: !7011)
!7022 = !DILocation(line: 3806, column: 14, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 3806, column: 4)
!7024 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 3803, column: 2)
!7025 = !DILocation(line: 3806, column: 12, scope: !7023)
!7026 = !DILocation(line: 3806, column: 9, scope: !7023)
!7027 = !DILocation(line: 3807, column: 9, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 3806, column: 4)
!7029 = !DILocation(line: 3807, column: 15, scope: !7028)
!7030 = !DILocation(line: 3807, column: 12, scope: !7028)
!7031 = !DILocation(line: 3806, column: 4, scope: !7023)
!7032 = !DILocation(line: 3808, column: 10, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 3808, column: 10)
!7034 = !DILocation(line: 3808, column: 14, scope: !7033)
!7035 = !DILocation(line: 3808, column: 22, scope: !7033)
!7036 = !DILocation(line: 3808, column: 26, scope: !7033)
!7037 = !DILocation(line: 3808, column: 19, scope: !7033)
!7038 = !DILocation(line: 3808, column: 31, scope: !7033)
!7039 = !DILocation(line: 3808, column: 34, scope: !7033)
!7040 = !DILocation(line: 3808, column: 38, scope: !7033)
!7041 = !DILocation(line: 3808, column: 10, scope: !7028)
!7042 = !DILocation(line: 3810, column: 12, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 3809, column: 8)
!7044 = !DILocation(line: 3810, column: 16, scope: !7043)
!7045 = !DILocation(line: 3810, column: 10, scope: !7043)
!7046 = !DILocation(line: 3811, column: 3, scope: !7043)
!7047 = !DILocation(line: 3807, column: 53, scope: !7028)
!7048 = !DILocation(line: 3806, column: 4, scope: !7028)
!7049 = distinct !{!7049, !7031, !7050}
!7050 = !DILocation(line: 3812, column: 8, scope: !7023)
!7051 = !DILocation(line: 3816, column: 14, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 3816, column: 4)
!7053 = !DILocation(line: 3816, column: 12, scope: !7052)
!7054 = !DILocation(line: 3816, column: 9, scope: !7052)
!7055 = !DILocation(line: 3817, column: 9, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 3816, column: 4)
!7057 = !DILocation(line: 3817, column: 15, scope: !7056)
!7058 = !DILocation(line: 3817, column: 12, scope: !7056)
!7059 = !DILocation(line: 3816, column: 4, scope: !7052)
!7060 = !DILocation(line: 3818, column: 10, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 3818, column: 10)
!7062 = !DILocation(line: 3818, column: 14, scope: !7061)
!7063 = !DILocation(line: 3818, column: 22, scope: !7061)
!7064 = !DILocation(line: 3818, column: 19, scope: !7061)
!7065 = !DILocation(line: 3818, column: 29, scope: !7061)
!7066 = !DILocation(line: 3818, column: 32, scope: !7061)
!7067 = !DILocation(line: 3818, column: 36, scope: !7061)
!7068 = !DILocation(line: 3818, column: 42, scope: !7061)
!7069 = !DILocation(line: 3818, column: 46, scope: !7061)
!7070 = !DILocation(line: 3818, column: 39, scope: !7061)
!7071 = !DILocation(line: 3818, column: 10, scope: !7056)
!7072 = !DILocation(line: 3819, column: 8, scope: !7061)
!7073 = !DILocation(line: 3819, column: 12, scope: !7061)
!7074 = !DILocation(line: 3819, column: 26, scope: !7061)
!7075 = !DILocation(line: 3817, column: 53, scope: !7056)
!7076 = !DILocation(line: 3816, column: 4, scope: !7056)
!7077 = distinct !{!7077, !7059, !7078}
!7078 = !DILocation(line: 3819, column: 28, scope: !7052)
!7079 = !DILocation(line: 3820, column: 2, scope: !7024)
!7080 = !DILocation(line: 3821, column: 5, scope: !7011)
!7081 = !DILocation(line: 3797, column: 72, scope: !7006)
!7082 = !DILocation(line: 3797, column: 3, scope: !7006)
!7083 = distinct !{!7083, !7009, !7084}
!7084 = !DILocation(line: 3821, column: 5, scope: !7002)
!7085 = !DILocation(line: 3829, column: 24, scope: !6959)
!7086 = !DILocation(line: 3830, column: 13, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 3830, column: 3)
!7088 = !DILocation(line: 3830, column: 11, scope: !7087)
!7089 = !DILocation(line: 3830, column: 8, scope: !7087)
!7090 = !DILocation(line: 3830, column: 28, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 3830, column: 3)
!7092 = !DILocation(line: 3830, column: 34, scope: !7091)
!7093 = !DILocation(line: 3830, column: 31, scope: !7091)
!7094 = !DILocation(line: 3830, column: 3, scope: !7087)
!7095 = !DILocation(line: 3832, column: 11, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 3832, column: 11)
!7097 = distinct !DILexicalBlock(scope: !7091, file: !3, line: 3831, column: 5)
!7098 = !DILocation(line: 3832, column: 15, scope: !7096)
!7099 = !DILocation(line: 3833, column: 4, scope: !7096)
!7100 = !DILocation(line: 3833, column: 7, scope: !7096)
!7101 = !DILocation(line: 3833, column: 11, scope: !7096)
!7102 = !DILocation(line: 3833, column: 16, scope: !7096)
!7103 = !DILocation(line: 3834, column: 4, scope: !7096)
!7104 = !DILocation(line: 3834, column: 7, scope: !7096)
!7105 = !DILocation(line: 3834, column: 11, scope: !7096)
!7106 = !DILocation(line: 3834, column: 14, scope: !7096)
!7107 = !DILocation(line: 3835, column: 4, scope: !7096)
!7108 = !DILocation(line: 3836, column: 19, scope: !7096)
!7109 = !DILocation(line: 3836, column: 13, scope: !7096)
!7110 = !DILocation(line: 3832, column: 11, scope: !7097)
!7111 = !DILocation(line: 3837, column: 23, scope: !7096)
!7112 = !DILocation(line: 3837, column: 2, scope: !7096)
!7113 = !DILocation(line: 3839, column: 13, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 3839, column: 11)
!7115 = !DILocation(line: 3839, column: 17, scope: !7114)
!7116 = !DILocation(line: 3839, column: 31, scope: !7114)
!7117 = !DILocation(line: 3839, column: 34, scope: !7114)
!7118 = !DILocation(line: 3839, column: 38, scope: !7114)
!7119 = !DILocation(line: 3839, column: 11, scope: !7097)
!7120 = !DILocation(line: 3841, column: 4, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 3840, column: 2)
!7122 = !DILocation(line: 3841, column: 8, scope: !7121)
!7123 = !DILocation(line: 3841, column: 31, scope: !7121)
!7124 = !DILocation(line: 3842, column: 4, scope: !7121)
!7125 = !DILocation(line: 3843, column: 18, scope: !7121)
!7126 = !DILocation(line: 3844, column: 2, scope: !7121)
!7127 = !DILocation(line: 3845, column: 5, scope: !7097)
!7128 = !DILocation(line: 3830, column: 72, scope: !7091)
!7129 = !DILocation(line: 3830, column: 3, scope: !7091)
!7130 = distinct !{!7130, !7094, !7131}
!7131 = !DILocation(line: 3845, column: 5, scope: !7087)
!7132 = !DILocation(line: 3849, column: 7, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 3849, column: 7)
!7134 = !DILocation(line: 3849, column: 28, scope: !7133)
!7135 = !DILocation(line: 3849, column: 33, scope: !7133)
!7136 = !DILocation(line: 3849, column: 7, scope: !6959)
!7137 = !DILocation(line: 3850, column: 5, scope: !7133)
!7138 = !DILocation(line: 3851, column: 1, scope: !6959)
!7139 = distinct !DISubprogram(name: "select_reload_regs", scope: !3, file: !3, line: 2101, type: !3871, scopeLine: 2102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!7140 = !DILocalVariable(name: "chain", scope: !7139, file: !3, line: 2103, type: !2365)
!7141 = !DILocation(line: 2103, column: 22, scope: !7139)
!7142 = !DILocation(line: 2106, column: 16, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 2106, column: 3)
!7144 = !DILocation(line: 2106, column: 14, scope: !7143)
!7145 = !DILocation(line: 2106, column: 8, scope: !7143)
!7146 = !DILocation(line: 2106, column: 35, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7143, file: !3, line: 2106, column: 3)
!7148 = !DILocation(line: 2106, column: 41, scope: !7147)
!7149 = !DILocation(line: 2106, column: 3, scope: !7143)
!7150 = !DILocation(line: 2108, column: 23, scope: !7147)
!7151 = !DILocation(line: 2108, column: 5, scope: !7147)
!7152 = !DILocation(line: 2107, column: 16, scope: !7147)
!7153 = !DILocation(line: 2107, column: 23, scope: !7147)
!7154 = !DILocation(line: 2107, column: 14, scope: !7147)
!7155 = !DILocation(line: 2106, column: 3, scope: !7147)
!7156 = distinct !{!7156, !7149, !7157}
!7157 = !DILocation(line: 2108, column: 28, scope: !7143)
!7158 = !DILocation(line: 2109, column: 1, scope: !7139)
!7159 = distinct !DISubprogram(name: "delete_caller_save_insns", scope: !3, file: !3, line: 2114, type: !3871, scopeLine: 2115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!7160 = !DILocalVariable(name: "c", scope: !7159, file: !3, line: 2116, type: !2365)
!7161 = !DILocation(line: 2116, column: 22, scope: !7159)
!7162 = !DILocation(line: 2116, column: 26, scope: !7159)
!7163 = !DILocation(line: 2118, column: 3, scope: !7159)
!7164 = !DILocation(line: 2118, column: 10, scope: !7159)
!7165 = !DILocation(line: 2118, column: 12, scope: !7159)
!7166 = !DILocation(line: 2120, column: 7, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 2119, column: 5)
!7168 = !DILocation(line: 2120, column: 14, scope: !7167)
!7169 = !DILocation(line: 2120, column: 16, scope: !7167)
!7170 = !DILocation(line: 2120, column: 21, scope: !7167)
!7171 = !DILocation(line: 2120, column: 24, scope: !7167)
!7172 = !DILocation(line: 2120, column: 27, scope: !7167)
!7173 = !DILocation(line: 0, scope: !7167)
!7174 = !DILocalVariable(name: "next", scope: !7175, file: !3, line: 2122, type: !2365)
!7175 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 2121, column: 2)
!7176 = !DILocation(line: 2122, column: 23, scope: !7175)
!7177 = !DILocation(line: 2122, column: 30, scope: !7175)
!7178 = !DILocation(line: 2122, column: 33, scope: !7175)
!7179 = !DILocalVariable(name: "insn", scope: !7175, file: !3, line: 2123, type: !2372)
!7180 = !DILocation(line: 2123, column: 8, scope: !7175)
!7181 = !DILocation(line: 2123, column: 15, scope: !7175)
!7182 = !DILocation(line: 2123, column: 18, scope: !7175)
!7183 = !DILocation(line: 2125, column: 8, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 2125, column: 8)
!7185 = !DILocation(line: 2125, column: 13, scope: !7184)
!7186 = !DILocation(line: 2125, column: 10, scope: !7184)
!7187 = !DILocation(line: 2125, column: 8, scope: !7175)
!7188 = !DILocation(line: 2126, column: 26, scope: !7184)
!7189 = !DILocation(line: 2126, column: 24, scope: !7184)
!7190 = !DILocation(line: 2126, column: 6, scope: !7184)
!7191 = !DILocation(line: 2127, column: 17, scope: !7175)
!7192 = !DILocation(line: 2127, column: 4, scope: !7175)
!7193 = !DILocation(line: 2129, column: 8, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 2129, column: 8)
!7195 = !DILocation(line: 2129, column: 8, scope: !7175)
!7196 = !DILocation(line: 2130, column: 19, scope: !7194)
!7197 = !DILocation(line: 2130, column: 22, scope: !7194)
!7198 = !DILocation(line: 2130, column: 6, scope: !7194)
!7199 = !DILocation(line: 2130, column: 12, scope: !7194)
!7200 = !DILocation(line: 2130, column: 17, scope: !7194)
!7201 = !DILocation(line: 2131, column: 8, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 2131, column: 8)
!7203 = !DILocation(line: 2131, column: 11, scope: !7202)
!7204 = !DILocation(line: 2131, column: 8, scope: !7175)
!7205 = !DILocation(line: 2132, column: 22, scope: !7202)
!7206 = !DILocation(line: 2132, column: 6, scope: !7202)
!7207 = !DILocation(line: 2132, column: 9, scope: !7202)
!7208 = !DILocation(line: 2132, column: 15, scope: !7202)
!7209 = !DILocation(line: 2132, column: 20, scope: !7202)
!7210 = !DILocation(line: 2133, column: 14, scope: !7175)
!7211 = !DILocation(line: 2133, column: 4, scope: !7175)
!7212 = !DILocation(line: 2133, column: 7, scope: !7175)
!7213 = !DILocation(line: 2133, column: 12, scope: !7175)
!7214 = !DILocation(line: 2134, column: 25, scope: !7175)
!7215 = !DILocation(line: 2134, column: 23, scope: !7175)
!7216 = !DILocation(line: 2135, column: 8, scope: !7175)
!7217 = !DILocation(line: 2135, column: 6, scope: !7175)
!7218 = distinct !{!7218, !7166, !7219}
!7219 = !DILocation(line: 2136, column: 2, scope: !7167)
!7220 = !DILocation(line: 2137, column: 11, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 2137, column: 11)
!7222 = !DILocation(line: 2137, column: 13, scope: !7221)
!7223 = !DILocation(line: 2137, column: 11, scope: !7167)
!7224 = !DILocation(line: 2138, column: 6, scope: !7221)
!7225 = !DILocation(line: 2138, column: 9, scope: !7221)
!7226 = !DILocation(line: 2138, column: 4, scope: !7221)
!7227 = !DILocation(line: 2138, column: 2, scope: !7221)
!7228 = distinct !{!7228, !7163, !7229}
!7229 = !DILocation(line: 2139, column: 5, scope: !7159)
!7230 = !DILocation(line: 2140, column: 1, scope: !7159)
!7231 = distinct !DISubprogram(name: "delete_dead_insn", scope: !3, file: !3, line: 2170, type: !5596, scopeLine: 2171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!7232 = !DILocalVariable(name: "insn", arg: 1, scope: !7231, file: !3, line: 2170, type: !2372)
!7233 = !DILocation(line: 2170, column: 23, scope: !7231)
!7234 = !DILocalVariable(name: "prev", scope: !7231, file: !3, line: 2172, type: !2372)
!7235 = !DILocation(line: 2172, column: 7, scope: !7231)
!7236 = !DILocation(line: 2172, column: 30, scope: !7231)
!7237 = !DILocation(line: 2172, column: 14, scope: !7231)
!7238 = !DILocalVariable(name: "prev_dest", scope: !7231, file: !3, line: 2173, type: !2372)
!7239 = !DILocation(line: 2173, column: 7, scope: !7231)
!7240 = !DILocation(line: 2177, column: 7, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 2177, column: 7)
!7242 = !DILocation(line: 2177, column: 12, scope: !7241)
!7243 = !DILocation(line: 2177, column: 15, scope: !7241)
!7244 = !DILocation(line: 2177, column: 41, scope: !7241)
!7245 = !DILocation(line: 2178, column: 7, scope: !7241)
!7246 = !DILocation(line: 2178, column: 23, scope: !7241)
!7247 = !DILocation(line: 2178, column: 21, scope: !7241)
!7248 = !DILocation(line: 2178, column: 50, scope: !7241)
!7249 = !DILocation(line: 2179, column: 7, scope: !7241)
!7250 = !DILocation(line: 2179, column: 27, scope: !7241)
!7251 = !DILocation(line: 2179, column: 38, scope: !7241)
!7252 = !DILocation(line: 2179, column: 10, scope: !7241)
!7253 = !DILocation(line: 2180, column: 7, scope: !7241)
!7254 = !DILocation(line: 2180, column: 27, scope: !7241)
!7255 = !DILocation(line: 2180, column: 43, scope: !7241)
!7256 = !DILocation(line: 2180, column: 10, scope: !7241)
!7257 = !DILocation(line: 2181, column: 7, scope: !7241)
!7258 = !DILocation(line: 2181, column: 28, scope: !7241)
!7259 = !DILocation(line: 2181, column: 12, scope: !7241)
!7260 = !DILocation(line: 2177, column: 7, scope: !7231)
!7261 = !DILocation(line: 2182, column: 23, scope: !7241)
!7262 = !DILocation(line: 2182, column: 5, scope: !7241)
!7263 = !DILocation(line: 2184, column: 3, scope: !7231)
!7264 = !DILocation(line: 2185, column: 1, scope: !7231)
!7265 = distinct !DISubprogram(name: "reload_as_needed", scope: !3, file: !3, line: 4185, type: !5471, scopeLine: 4186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!7266 = !DILocalVariable(name: "live_known", arg: 1, scope: !7265, file: !3, line: 4185, type: !2396)
!7267 = !DILocation(line: 4185, column: 23, scope: !7265)
!7268 = !DILocalVariable(name: "chain", scope: !7265, file: !3, line: 4187, type: !2365)
!7269 = !DILocation(line: 4187, column: 22, scope: !7265)
!7270 = !DILocalVariable(name: "x", scope: !7265, file: !3, line: 4191, type: !2372)
!7271 = !DILocation(line: 4191, column: 7, scope: !7265)
!7272 = !DILocation(line: 4193, column: 3, scope: !7265)
!7273 = !DILocation(line: 4194, column: 3, scope: !7265)
!7274 = !DILocation(line: 4195, column: 25, scope: !7265)
!7275 = !DILocation(line: 4195, column: 23, scope: !7265)
!7276 = !DILocation(line: 4196, column: 3, scope: !7265)
!7277 = !DILocation(line: 4197, column: 3, scope: !7265)
!7278 = !DILocation(line: 4198, column: 3, scope: !7265)
!7279 = !DILocation(line: 4200, column: 3, scope: !7265)
!7280 = !DILocation(line: 4202, column: 16, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 4202, column: 3)
!7282 = !DILocation(line: 4202, column: 14, scope: !7281)
!7283 = !DILocation(line: 4202, column: 8, scope: !7281)
!7284 = !DILocation(line: 4202, column: 35, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 4202, column: 3)
!7286 = !DILocation(line: 4202, column: 3, scope: !7281)
!7287 = !DILocalVariable(name: "prev", scope: !7288, file: !3, line: 4204, type: !2372)
!7288 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 4203, column: 5)
!7289 = !DILocation(line: 4204, column: 11, scope: !7288)
!7290 = !DILocalVariable(name: "insn", scope: !7288, file: !3, line: 4205, type: !2372)
!7291 = !DILocation(line: 4205, column: 11, scope: !7288)
!7292 = !DILocation(line: 4205, column: 18, scope: !7288)
!7293 = !DILocation(line: 4205, column: 25, scope: !7288)
!7294 = !DILocalVariable(name: "old_next", scope: !7288, file: !3, line: 4206, type: !2372)
!7295 = !DILocation(line: 4206, column: 11, scope: !7288)
!7296 = !DILocation(line: 4206, column: 22, scope: !7288)
!7297 = !DILocation(line: 4213, column: 11, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7288, file: !3, line: 4213, column: 11)
!7299 = !DILocation(line: 4213, column: 11, scope: !7288)
!7300 = !DILocation(line: 4214, column: 25, scope: !7298)
!7301 = !DILocation(line: 4214, column: 2, scope: !7298)
!7302 = !DILocation(line: 4216, column: 16, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7298, file: !3, line: 4216, column: 16)
!7304 = !DILocation(line: 4216, column: 16, scope: !7298)
!7305 = !DILocalVariable(name: "regs_to_forget", scope: !7306, file: !3, line: 4218, type: !3546)
!7306 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 4217, column: 2)
!7307 = !DILocation(line: 4218, column: 16, scope: !7306)
!7308 = !DILocation(line: 4219, column: 4, scope: !7306)
!7309 = !DILocation(line: 4220, column: 17, scope: !7306)
!7310 = !DILocation(line: 4220, column: 55, scope: !7306)
!7311 = !DILocation(line: 4220, column: 4, scope: !7306)
!7312 = !DILocation(line: 4225, column: 9, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 4225, column: 8)
!7314 = !DILocation(line: 4225, column: 35, scope: !7313)
!7315 = !DILocation(line: 4226, column: 9, scope: !7313)
!7316 = !DILocation(line: 4226, column: 12, scope: !7313)
!7317 = !DILocation(line: 4226, column: 38, scope: !7313)
!7318 = !DILocation(line: 4227, column: 8, scope: !7313)
!7319 = !DILocation(line: 4227, column: 11, scope: !7313)
!7320 = !DILocation(line: 4225, column: 8, scope: !7306)
!7321 = !DILocation(line: 4229, column: 26, scope: !7313)
!7322 = !DILocation(line: 4230, column: 5, scope: !7313)
!7323 = !DILocation(line: 4229, column: 10, scope: !7313)
!7324 = !DILocation(line: 4228, column: 6, scope: !7313)
!7325 = !DILocation(line: 4229, column: 8, scope: !7313)
!7326 = !DILocation(line: 4235, column: 9, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 4235, column: 8)
!7328 = !DILocation(line: 4235, column: 24, scope: !7327)
!7329 = !DILocation(line: 4235, column: 27, scope: !7327)
!7330 = !DILocation(line: 4235, column: 54, scope: !7327)
!7331 = !DILocation(line: 4235, column: 57, scope: !7327)
!7332 = !DILocation(line: 4235, column: 64, scope: !7327)
!7333 = !DILocation(line: 4235, column: 8, scope: !7306)
!7334 = !DILocation(line: 4237, column: 32, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 4236, column: 6)
!7336 = !DILocation(line: 4237, column: 8, scope: !7335)
!7337 = !DILocation(line: 4238, column: 12, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 4238, column: 12)
!7339 = !DILocation(line: 4238, column: 12, scope: !7335)
!7340 = !DILocation(line: 4240, column: 5, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 4239, column: 3)
!7342 = !DILocation(line: 4241, column: 5, scope: !7341)
!7343 = !DILocation(line: 4242, column: 5, scope: !7341)
!7344 = !DILocation(line: 4244, column: 6, scope: !7335)
!7345 = !DILocation(line: 4253, column: 10, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 4253, column: 8)
!7347 = !DILocation(line: 4253, column: 17, scope: !7346)
!7348 = !DILocation(line: 4253, column: 27, scope: !7346)
!7349 = !DILocation(line: 4253, column: 32, scope: !7346)
!7350 = !DILocation(line: 4253, column: 39, scope: !7346)
!7351 = !DILocation(line: 4254, column: 8, scope: !7346)
!7352 = !DILocation(line: 4254, column: 13, scope: !7346)
!7353 = !DILocation(line: 4254, column: 20, scope: !7346)
!7354 = !DILocation(line: 4253, column: 8, scope: !7306)
!7355 = !DILocation(line: 4255, column: 16, scope: !7346)
!7356 = !DILocation(line: 4255, column: 6, scope: !7346)
!7357 = !DILocation(line: 4262, column: 8, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 4261, column: 6)
!7359 = !DILocation(line: 4263, column: 8, scope: !7358)
!7360 = !DILocation(line: 4265, column: 22, scope: !7358)
!7361 = !DILocation(line: 4265, column: 31, scope: !7358)
!7362 = !DILocation(line: 4265, column: 54, scope: !7358)
!7363 = !DILocation(line: 4265, column: 8, scope: !7358)
!7364 = !DILocation(line: 4269, column: 8, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 4269, column: 8)
!7366 = !DILocation(line: 4269, column: 18, scope: !7365)
!7367 = !DILocation(line: 4269, column: 8, scope: !7306)
!7368 = !DILocalVariable(name: "next", scope: !7369, file: !3, line: 4271, type: !2372)
!7369 = distinct !DILexicalBlock(scope: !7365, file: !3, line: 4270, column: 6)
!7370 = !DILocation(line: 4271, column: 12, scope: !7369)
!7371 = !DILocation(line: 4271, column: 19, scope: !7369)
!7372 = !DILocalVariable(name: "p", scope: !7369, file: !3, line: 4272, type: !2372)
!7373 = !DILocation(line: 4272, column: 12, scope: !7369)
!7374 = !DILocation(line: 4274, column: 15, scope: !7369)
!7375 = !DILocation(line: 4274, column: 13, scope: !7369)
!7376 = !DILocation(line: 4280, column: 28, scope: !7369)
!7377 = !DILocation(line: 4280, column: 8, scope: !7369)
!7378 = !DILocation(line: 4286, column: 27, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 4285, column: 12)
!7380 = !DILocation(line: 4286, column: 3, scope: !7379)
!7381 = !DILocation(line: 4290, column: 27, scope: !7369)
!7382 = !DILocation(line: 4290, column: 8, scope: !7369)
!7383 = !DILocation(line: 4296, column: 23, scope: !7369)
!7384 = !DILocation(line: 4296, column: 8, scope: !7369)
!7385 = !DILocation(line: 4299, column: 12, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 4299, column: 12)
!7387 = !DILocation(line: 4299, column: 37, scope: !7386)
!7388 = !DILocation(line: 4299, column: 41, scope: !7386)
!7389 = !DILocation(line: 4299, column: 12, scope: !7369)
!7390 = !DILocation(line: 4300, column: 25, scope: !7386)
!7391 = !DILocation(line: 4300, column: 31, scope: !7386)
!7392 = !DILocation(line: 4300, column: 37, scope: !7386)
!7393 = !DILocation(line: 4300, column: 3, scope: !7386)
!7394 = !DILocation(line: 4305, column: 27, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 4305, column: 12)
!7396 = !DILocation(line: 4305, column: 12, scope: !7395)
!7397 = !DILocation(line: 4305, column: 43, scope: !7395)
!7398 = !DILocation(line: 4305, column: 12, scope: !7369)
!7399 = !DILocation(line: 4306, column: 12, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 4306, column: 3)
!7401 = !DILocation(line: 4306, column: 10, scope: !7400)
!7402 = !DILocation(line: 4306, column: 8, scope: !7400)
!7403 = !DILocation(line: 4306, column: 30, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 4306, column: 3)
!7405 = !DILocation(line: 4306, column: 35, scope: !7404)
!7406 = !DILocation(line: 4306, column: 32, scope: !7404)
!7407 = !DILocation(line: 4306, column: 3, scope: !7400)
!7408 = !DILocation(line: 4307, column: 9, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 4307, column: 9)
!7410 = !DILocation(line: 4307, column: 14, scope: !7409)
!7411 = !DILocation(line: 4307, column: 11, scope: !7409)
!7412 = !DILocation(line: 4307, column: 19, scope: !7409)
!7413 = !DILocation(line: 4307, column: 22, scope: !7409)
!7414 = !DILocation(line: 4308, column: 9, scope: !7409)
!7415 = !DILocation(line: 4308, column: 12, scope: !7409)
!7416 = !DILocation(line: 4308, column: 35, scope: !7409)
!7417 = !DILocation(line: 4309, column: 9, scope: !7409)
!7418 = !DILocation(line: 4309, column: 29, scope: !7409)
!7419 = !DILocation(line: 4309, column: 13, scope: !7409)
!7420 = !DILocation(line: 4309, column: 32, scope: !7409)
!7421 = !DILocation(line: 4310, column: 6, scope: !7409)
!7422 = !DILocation(line: 4310, column: 24, scope: !7409)
!7423 = !DILocation(line: 4310, column: 10, scope: !7409)
!7424 = !DILocation(line: 4310, column: 30, scope: !7409)
!7425 = !DILocation(line: 4310, column: 28, scope: !7409)
!7426 = !DILocation(line: 4307, column: 9, scope: !7404)
!7427 = !DILocation(line: 4312, column: 24, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 4311, column: 7)
!7429 = !DILocation(line: 4312, column: 9, scope: !7428)
!7430 = !DILocation(line: 4315, column: 22, scope: !7428)
!7431 = !DILocation(line: 4315, column: 9, scope: !7428)
!7432 = !DILocation(line: 4316, column: 7, scope: !7428)
!7433 = !DILocation(line: 4310, column: 53, scope: !7409)
!7434 = !DILocation(line: 4306, column: 45, scope: !7404)
!7435 = !DILocation(line: 4306, column: 43, scope: !7404)
!7436 = !DILocation(line: 4306, column: 3, scope: !7404)
!7437 = distinct !{!7437, !7407, !7438}
!7438 = !DILocation(line: 4316, column: 7, scope: !7400)
!7439 = !DILocation(line: 4317, column: 6, scope: !7369)
!7440 = !DILocation(line: 4319, column: 8, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 4319, column: 8)
!7442 = !DILocation(line: 4319, column: 23, scope: !7441)
!7443 = !DILocation(line: 4319, column: 26, scope: !7441)
!7444 = !DILocation(line: 4319, column: 33, scope: !7441)
!7445 = !DILocation(line: 4319, column: 8, scope: !7306)
!7446 = !DILocation(line: 4320, column: 6, scope: !7441)
!7447 = !DILocation(line: 4328, column: 4, scope: !7306)
!7448 = !DILocation(line: 4329, column: 4, scope: !7306)
!7449 = !DILocation(line: 4333, column: 13, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 4333, column: 4)
!7451 = !DILocation(line: 4333, column: 11, scope: !7450)
!7452 = !DILocation(line: 4333, column: 9, scope: !7450)
!7453 = !DILocation(line: 4333, column: 31, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7450, file: !3, line: 4333, column: 4)
!7455 = !DILocation(line: 4333, column: 36, scope: !7454)
!7456 = !DILocation(line: 4333, column: 33, scope: !7454)
!7457 = !DILocation(line: 4333, column: 4, scope: !7450)
!7458 = !DILocation(line: 4334, column: 10, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 4334, column: 10)
!7460 = !DILocation(line: 4334, column: 29, scope: !7459)
!7461 = !DILocation(line: 4334, column: 32, scope: !7459)
!7462 = !DILocation(line: 4334, column: 55, scope: !7459)
!7463 = !DILocation(line: 4334, column: 10, scope: !7454)
!7464 = !DILocation(line: 4335, column: 21, scope: !7459)
!7465 = !DILocation(line: 4335, column: 8, scope: !7459)
!7466 = !DILocation(line: 4334, column: 58, scope: !7459)
!7467 = !DILocation(line: 4333, column: 50, scope: !7454)
!7468 = !DILocation(line: 4333, column: 48, scope: !7454)
!7469 = !DILocation(line: 4333, column: 4, scope: !7454)
!7470 = distinct !{!7470, !7457, !7471}
!7471 = !DILocation(line: 4335, column: 60, scope: !7450)
!7472 = !DILocation(line: 4489, column: 2, scope: !7306)
!7473 = !DILocation(line: 4491, column: 11, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7288, file: !3, line: 4491, column: 11)
!7475 = !DILocation(line: 4491, column: 11, scope: !7288)
!7476 = !DILocation(line: 4492, column: 2, scope: !7474)
!7477 = !DILocation(line: 4497, column: 16, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 4497, column: 16)
!7479 = !DILocation(line: 4497, column: 16, scope: !7474)
!7480 = !DILocation(line: 4499, column: 4, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7478, file: !3, line: 4498, column: 2)
!7482 = !DILocation(line: 4500, column: 4, scope: !7481)
!7483 = !DILocation(line: 4501, column: 2, scope: !7481)
!7484 = !DILocation(line: 4502, column: 5, scope: !7288)
!7485 = !DILocation(line: 4202, column: 50, scope: !7285)
!7486 = !DILocation(line: 4202, column: 57, scope: !7285)
!7487 = !DILocation(line: 4202, column: 48, scope: !7285)
!7488 = !DILocation(line: 4202, column: 3, scope: !7285)
!7489 = distinct !{!7489, !7286, !7490}
!7490 = !DILocation(line: 4502, column: 5, scope: !7281)
!7491 = !DILocation(line: 4505, column: 9, scope: !7265)
!7492 = !DILocation(line: 4505, column: 3, scope: !7265)
!7493 = !DILocation(line: 4506, column: 3, scope: !7265)
!7494 = !DILocation(line: 4507, column: 1, scope: !7265)
!7495 = distinct !DISubprogram(name: "replace_pseudos_in", scope: !3, file: !3, line: 586, type: !7496, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{null, !3579, !5, !2372}
!7498 = !DILocalVariable(name: "loc", arg: 1, scope: !7495, file: !3, line: 586, type: !3579)
!7499 = !DILocation(line: 586, column: 26, scope: !7495)
!7500 = !DILocalVariable(name: "mem_mode", arg: 2, scope: !7495, file: !3, line: 586, type: !5)
!7501 = !DILocation(line: 586, column: 49, scope: !7495)
!7502 = !DILocalVariable(name: "usage", arg: 3, scope: !7495, file: !3, line: 586, type: !2372)
!7503 = !DILocation(line: 586, column: 63, scope: !7495)
!7504 = !DILocalVariable(name: "x", scope: !7495, file: !3, line: 588, type: !2372)
!7505 = !DILocation(line: 588, column: 7, scope: !7495)
!7506 = !DILocation(line: 588, column: 12, scope: !7495)
!7507 = !DILocation(line: 588, column: 11, scope: !7495)
!7508 = !DILocalVariable(name: "code", scope: !7495, file: !3, line: 589, type: !384)
!7509 = !DILocation(line: 589, column: 17, scope: !7495)
!7510 = !DILocalVariable(name: "fmt", scope: !7495, file: !3, line: 590, type: !2399)
!7511 = !DILocation(line: 590, column: 15, scope: !7495)
!7512 = !DILocalVariable(name: "i", scope: !7495, file: !3, line: 591, type: !2396)
!7513 = !DILocation(line: 591, column: 7, scope: !7495)
!7514 = !DILocalVariable(name: "j", scope: !7495, file: !3, line: 591, type: !2396)
!7515 = !DILocation(line: 591, column: 10, scope: !7495)
!7516 = !DILocation(line: 593, column: 9, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 593, column: 7)
!7518 = !DILocation(line: 593, column: 7, scope: !7495)
!7519 = !DILocation(line: 594, column: 5, scope: !7517)
!7520 = !DILocation(line: 596, column: 10, scope: !7495)
!7521 = !DILocation(line: 596, column: 8, scope: !7495)
!7522 = !DILocation(line: 597, column: 7, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 597, column: 7)
!7524 = !DILocation(line: 597, column: 12, scope: !7523)
!7525 = !DILocation(line: 597, column: 7, scope: !7495)
!7526 = !DILocalVariable(name: "regno", scope: !7527, file: !3, line: 599, type: !7)
!7527 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 598, column: 5)
!7528 = !DILocation(line: 599, column: 20, scope: !7527)
!7529 = !DILocation(line: 599, column: 28, scope: !7527)
!7530 = !DILocation(line: 601, column: 11, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 601, column: 11)
!7532 = !DILocation(line: 601, column: 17, scope: !7531)
!7533 = !DILocation(line: 601, column: 11, scope: !7527)
!7534 = !DILocation(line: 602, column: 2, scope: !7531)
!7535 = !DILocation(line: 604, column: 27, scope: !7527)
!7536 = !DILocation(line: 604, column: 30, scope: !7527)
!7537 = !DILocation(line: 604, column: 40, scope: !7527)
!7538 = !DILocation(line: 604, column: 11, scope: !7527)
!7539 = !DILocation(line: 604, column: 9, scope: !7527)
!7540 = !DILocation(line: 605, column: 11, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 605, column: 11)
!7542 = !DILocation(line: 605, column: 17, scope: !7541)
!7543 = !DILocation(line: 605, column: 16, scope: !7541)
!7544 = !DILocation(line: 605, column: 13, scope: !7541)
!7545 = !DILocation(line: 605, column: 11, scope: !7527)
!7546 = !DILocation(line: 607, column: 11, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 606, column: 2)
!7548 = !DILocation(line: 607, column: 5, scope: !7547)
!7549 = !DILocation(line: 607, column: 9, scope: !7547)
!7550 = !DILocation(line: 608, column: 24, scope: !7547)
!7551 = !DILocation(line: 608, column: 29, scope: !7547)
!7552 = !DILocation(line: 608, column: 39, scope: !7547)
!7553 = !DILocation(line: 608, column: 4, scope: !7547)
!7554 = !DILocation(line: 609, column: 4, scope: !7547)
!7555 = !DILocation(line: 612, column: 11, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 612, column: 11)
!7557 = !DILocation(line: 612, column: 30, scope: !7556)
!7558 = !DILocation(line: 612, column: 11, scope: !7527)
!7559 = !DILocation(line: 613, column: 9, scope: !7556)
!7560 = !DILocation(line: 613, column: 28, scope: !7556)
!7561 = !DILocation(line: 613, column: 3, scope: !7556)
!7562 = !DILocation(line: 613, column: 7, scope: !7556)
!7563 = !DILocation(line: 613, column: 2, scope: !7556)
!7564 = !DILocation(line: 614, column: 16, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 614, column: 16)
!7566 = !DILocation(line: 614, column: 30, scope: !7565)
!7567 = !DILocation(line: 614, column: 16, scope: !7556)
!7568 = !DILocation(line: 615, column: 9, scope: !7565)
!7569 = !DILocation(line: 615, column: 23, scope: !7565)
!7570 = !DILocation(line: 615, column: 3, scope: !7565)
!7571 = !DILocation(line: 615, column: 7, scope: !7565)
!7572 = !DILocation(line: 615, column: 2, scope: !7565)
!7573 = !DILocation(line: 616, column: 16, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 616, column: 16)
!7575 = !DILocation(line: 616, column: 34, scope: !7574)
!7576 = !DILocation(line: 616, column: 16, scope: !7565)
!7577 = !DILocation(line: 617, column: 22, scope: !7574)
!7578 = !DILocation(line: 617, column: 36, scope: !7574)
!7579 = !DILocation(line: 617, column: 54, scope: !7574)
!7580 = !DILocation(line: 617, column: 9, scope: !7574)
!7581 = !DILocation(line: 617, column: 3, scope: !7574)
!7582 = !DILocation(line: 617, column: 7, scope: !7574)
!7583 = !DILocation(line: 617, column: 2, scope: !7574)
!7584 = !DILocation(line: 620, column: 4, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 619, column: 2)
!7586 = !DILocation(line: 622, column: 11, scope: !7585)
!7587 = !DILocation(line: 622, column: 25, scope: !7585)
!7588 = !DILocation(line: 622, column: 5, scope: !7585)
!7589 = !DILocation(line: 622, column: 9, scope: !7585)
!7590 = !DILocation(line: 625, column: 7, scope: !7527)
!7591 = !DILocation(line: 627, column: 12, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 627, column: 12)
!7593 = !DILocation(line: 627, column: 17, scope: !7592)
!7594 = !DILocation(line: 627, column: 12, scope: !7523)
!7595 = !DILocation(line: 629, column: 29, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 628, column: 5)
!7597 = !DILocation(line: 629, column: 42, scope: !7596)
!7598 = !DILocation(line: 629, column: 56, scope: !7596)
!7599 = !DILocation(line: 629, column: 7, scope: !7596)
!7600 = !DILocation(line: 630, column: 7, scope: !7596)
!7601 = !DILocation(line: 634, column: 9, scope: !7495)
!7602 = !DILocation(line: 634, column: 7, scope: !7495)
!7603 = !DILocation(line: 635, column: 10, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 635, column: 3)
!7605 = !DILocation(line: 635, column: 8, scope: !7604)
!7606 = !DILocation(line: 635, column: 15, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 635, column: 3)
!7608 = !DILocation(line: 635, column: 19, scope: !7607)
!7609 = !DILocation(line: 635, column: 17, scope: !7607)
!7610 = !DILocation(line: 635, column: 3, scope: !7604)
!7611 = !DILocation(line: 636, column: 10, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 636, column: 9)
!7613 = !DILocation(line: 636, column: 9, scope: !7612)
!7614 = !DILocation(line: 636, column: 14, scope: !7612)
!7615 = !DILocation(line: 636, column: 9, scope: !7607)
!7616 = !DILocation(line: 637, column: 28, scope: !7612)
!7617 = !DILocation(line: 637, column: 41, scope: !7612)
!7618 = !DILocation(line: 637, column: 51, scope: !7612)
!7619 = !DILocation(line: 637, column: 7, scope: !7612)
!7620 = !DILocation(line: 638, column: 15, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7612, file: !3, line: 638, column: 14)
!7622 = !DILocation(line: 638, column: 14, scope: !7621)
!7623 = !DILocation(line: 638, column: 19, scope: !7621)
!7624 = !DILocation(line: 638, column: 14, scope: !7612)
!7625 = !DILocation(line: 639, column: 14, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 639, column: 7)
!7627 = !DILocation(line: 639, column: 12, scope: !7626)
!7628 = !DILocation(line: 639, column: 19, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 639, column: 7)
!7630 = !DILocation(line: 639, column: 23, scope: !7629)
!7631 = !DILocation(line: 639, column: 21, scope: !7629)
!7632 = !DILocation(line: 639, column: 7, scope: !7626)
!7633 = !DILocation(line: 640, column: 24, scope: !7629)
!7634 = !DILocation(line: 640, column: 43, scope: !7629)
!7635 = !DILocation(line: 640, column: 53, scope: !7629)
!7636 = !DILocation(line: 640, column: 2, scope: !7629)
!7637 = !DILocation(line: 639, column: 40, scope: !7629)
!7638 = !DILocation(line: 639, column: 7, scope: !7629)
!7639 = distinct !{!7639, !7632, !7640}
!7640 = !DILocation(line: 640, column: 58, scope: !7626)
!7641 = !DILocation(line: 636, column: 17, scope: !7612)
!7642 = !DILocation(line: 635, column: 43, scope: !7607)
!7643 = !DILocation(line: 635, column: 50, scope: !7607)
!7644 = !DILocation(line: 635, column: 3, scope: !7607)
!7645 = distinct !{!7645, !7610, !7646}
!7646 = !DILocation(line: 640, column: 58, scope: !7604)
!7647 = !DILocation(line: 641, column: 1, scope: !7495)
!7648 = distinct !DISubprogram(name: "VEC_rtx_gc_free", scope: !385, file: !385, line: 202, type: !7649, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!7649 = !DISubroutineType(types: !7650)
!7650 = !{null, !7651}
!7651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!7652 = !DILocalVariable(name: "vec_", arg: 1, scope: !7648, file: !385, line: 202, type: !7651)
!7653 = !DILocation(line: 202, column: 1, scope: !7648)
!7654 = !DILocation(line: 202, column: 1, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7648, file: !385, line: 202, column: 1)
!7656 = distinct !DISubprogram(name: "fixup_abnormal_edges", scope: !3, file: !3, line: 8947, type: !3871, scopeLine: 8948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!7657 = !DILocalVariable(name: "inserted", scope: !7656, file: !3, line: 8949, type: !2603)
!7658 = !DILocation(line: 8949, column: 8, scope: !7656)
!7659 = !DILocalVariable(name: "bb", scope: !7656, file: !3, line: 8950, type: !2906)
!7660 = !DILocation(line: 8950, column: 15, scope: !7656)
!7661 = !DILocation(line: 8952, column: 3, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 8952, column: 3)
!7663 = !DILocation(line: 8952, column: 3, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 8952, column: 3)
!7665 = !DILocalVariable(name: "e", scope: !7666, file: !3, line: 8954, type: !2923)
!7666 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 8953, column: 5)
!7667 = !DILocation(line: 8954, column: 12, scope: !7666)
!7668 = !DILocalVariable(name: "ei", scope: !7666, file: !3, line: 8955, type: !5490)
!7669 = !DILocation(line: 8955, column: 21, scope: !7666)
!7670 = !DILocation(line: 8959, column: 7, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 8959, column: 7)
!7672 = !DILocation(line: 8959, column: 7, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 8959, column: 7)
!7674 = !DILocation(line: 8961, column: 8, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 8961, column: 8)
!7676 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 8960, column: 2)
!7677 = !DILocation(line: 8961, column: 11, scope: !7675)
!7678 = !DILocation(line: 8961, column: 17, scope: !7675)
!7679 = !DILocation(line: 8961, column: 8, scope: !7676)
!7680 = !DILocation(line: 8962, column: 6, scope: !7675)
!7681 = !DILocation(line: 8963, column: 9, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 8963, column: 8)
!7683 = !DILocation(line: 8963, column: 12, scope: !7682)
!7684 = !DILocation(line: 8963, column: 18, scope: !7682)
!7685 = !DILocation(line: 8964, column: 8, scope: !7682)
!7686 = !DILocation(line: 8963, column: 8, scope: !7676)
!7687 = !DILocation(line: 8965, column: 6, scope: !7682)
!7688 = !DILocation(line: 8966, column: 2, scope: !7676)
!7689 = distinct !{!7689, !7670, !7690}
!7690 = !DILocation(line: 8966, column: 2, scope: !7671)
!7691 = !DILocation(line: 8967, column: 11, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 8967, column: 11)
!7693 = !DILocation(line: 8967, column: 13, scope: !7692)
!7694 = !DILocation(line: 8967, column: 17, scope: !7692)
!7695 = !DILocation(line: 8968, column: 4, scope: !7692)
!7696 = !DILocation(line: 8968, column: 28, scope: !7692)
!7697 = !DILocation(line: 8968, column: 8, scope: !7692)
!7698 = !DILocation(line: 8967, column: 11, scope: !7666)
!7699 = !DILocalVariable(name: "insn", scope: !7700, file: !3, line: 8970, type: !2372)
!7700 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 8969, column: 2)
!7701 = !DILocation(line: 8970, column: 8, scope: !7700)
!7702 = !DILocation(line: 8974, column: 11, scope: !7700)
!7703 = !DILocation(line: 8974, column: 9, scope: !7700)
!7704 = !DILocation(line: 8975, column: 4, scope: !7700)
!7705 = !DILocation(line: 8975, column: 12, scope: !7700)
!7706 = !DILocation(line: 8975, column: 34, scope: !7700)
!7707 = !DILocation(line: 8975, column: 37, scope: !7700)
!7708 = !DILocation(line: 8976, column: 4, scope: !7700)
!7709 = !DILocation(line: 8976, column: 28, scope: !7700)
!7710 = !DILocation(line: 8976, column: 8, scope: !7700)
!7711 = !DILocation(line: 8977, column: 4, scope: !7700)
!7712 = !DILocation(line: 8977, column: 7, scope: !7700)
!7713 = !DILocation(line: 8977, column: 15, scope: !7700)
!7714 = !DILocation(line: 8977, column: 12, scope: !7700)
!7715 = !DILocation(line: 0, scope: !7700)
!7716 = !DILocation(line: 8978, column: 13, scope: !7700)
!7717 = !DILocation(line: 8978, column: 11, scope: !7700)
!7718 = distinct !{!7718, !7704, !7716}
!7719 = !DILocation(line: 8980, column: 8, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7700, file: !3, line: 8980, column: 8)
!7721 = !DILocation(line: 8980, column: 22, scope: !7720)
!7722 = !DILocation(line: 8980, column: 45, scope: !7720)
!7723 = !DILocation(line: 8980, column: 25, scope: !7720)
!7724 = !DILocation(line: 8980, column: 8, scope: !7700)
!7725 = !DILocalVariable(name: "stop", scope: !7726, file: !3, line: 8982, type: !2372)
!7726 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 8981, column: 6)
!7727 = !DILocation(line: 8982, column: 12, scope: !7726)
!7728 = !DILocalVariable(name: "next", scope: !7726, file: !3, line: 8982, type: !2372)
!7729 = !DILocation(line: 8982, column: 18, scope: !7726)
!7730 = !DILocation(line: 8984, column: 15, scope: !7726)
!7731 = !DILocation(line: 8984, column: 13, scope: !7726)
!7732 = !DILocation(line: 8985, column: 22, scope: !7726)
!7733 = !DILocation(line: 8985, column: 8, scope: !7726)
!7734 = !DILocation(line: 8985, column: 20, scope: !7726)
!7735 = !DILocation(line: 8986, column: 15, scope: !7726)
!7736 = !DILocation(line: 8986, column: 13, scope: !7726)
!7737 = !DILocation(line: 8988, column: 8, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 8988, column: 8)
!7739 = !DILocation(line: 8988, column: 8, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 8988, column: 8)
!7741 = !DILocation(line: 8989, column: 7, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 8989, column: 7)
!7743 = !DILocation(line: 8989, column: 10, scope: !7742)
!7744 = !DILocation(line: 8989, column: 16, scope: !7742)
!7745 = !DILocation(line: 8989, column: 7, scope: !7740)
!7746 = !DILocation(line: 8990, column: 5, scope: !7742)
!7747 = !DILocation(line: 8989, column: 18, scope: !7742)
!7748 = distinct !{!7748, !7737, !7749}
!7749 = !DILocation(line: 8990, column: 5, scope: !7738)
!7750 = !DILocation(line: 8992, column: 8, scope: !7726)
!7751 = !DILocation(line: 8992, column: 15, scope: !7726)
!7752 = !DILocation(line: 8992, column: 20, scope: !7726)
!7753 = !DILocation(line: 8992, column: 23, scope: !7726)
!7754 = !DILocation(line: 8992, column: 31, scope: !7726)
!7755 = !DILocation(line: 8992, column: 28, scope: !7726)
!7756 = !DILocation(line: 0, scope: !7726)
!7757 = !DILocation(line: 8994, column: 12, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 8993, column: 3)
!7759 = !DILocation(line: 8994, column: 10, scope: !7758)
!7760 = !DILocation(line: 8995, column: 9, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 8995, column: 9)
!7762 = !DILocation(line: 8995, column: 9, scope: !7758)
!7763 = !DILocation(line: 8997, column: 22, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 8996, column: 7)
!7765 = !DILocation(line: 8997, column: 9, scope: !7764)
!7766 = !DILocation(line: 9004, column: 13, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 9004, column: 13)
!7768 = !DILocation(line: 9004, column: 39, scope: !7767)
!7769 = !DILocation(line: 9004, column: 13, scope: !7764)
!7770 = !DILocation(line: 9007, column: 6, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 9005, column: 4)
!7772 = !DILocation(line: 9007, column: 28, scope: !7771)
!7773 = !DILocation(line: 9008, column: 6, scope: !7771)
!7774 = !DILocation(line: 9008, column: 23, scope: !7771)
!7775 = !DILocation(line: 9009, column: 6, scope: !7771)
!7776 = !DILocation(line: 9009, column: 23, scope: !7771)
!7777 = !DILocation(line: 9011, column: 27, scope: !7771)
!7778 = !DILocation(line: 9011, column: 33, scope: !7771)
!7779 = !DILocation(line: 9011, column: 6, scope: !7771)
!7780 = !DILocation(line: 9012, column: 15, scope: !7771)
!7781 = !DILocation(line: 9013, column: 4, scope: !7771)
!7782 = !DILocation(line: 9014, column: 7, scope: !7764)
!7783 = !DILocation(line: 9015, column: 15, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 9015, column: 14)
!7785 = !DILocation(line: 9015, column: 14, scope: !7761)
!7786 = !DILocation(line: 9016, column: 7, scope: !7784)
!7787 = !DILocation(line: 9017, column: 12, scope: !7758)
!7788 = !DILocation(line: 9017, column: 10, scope: !7758)
!7789 = distinct !{!7789, !7750, !7790}
!7790 = !DILocation(line: 9018, column: 3, scope: !7726)
!7791 = !DILocation(line: 9019, column: 6, scope: !7726)
!7792 = !DILocation(line: 9026, column: 24, scope: !7720)
!7793 = !DILocation(line: 9026, column: 6, scope: !7720)
!7794 = !DILocation(line: 9027, column: 2, scope: !7700)
!7795 = !DILocation(line: 9028, column: 5, scope: !7666)
!7796 = distinct !{!7796, !7661, !7797}
!7797 = !DILocation(line: 9028, column: 5, scope: !7662)
!7798 = !DILocation(line: 9031, column: 7, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 9031, column: 7)
!7800 = !DILocation(line: 9031, column: 7, scope: !7656)
!7801 = !DILocalVariable(name: "blocks", scope: !7802, file: !3, line: 9033, type: !7803)
!7802 = distinct !DILexicalBlock(scope: !7799, file: !3, line: 9032, column: 5)
!7803 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !7804, line: 45, baseType: !7805)
!7804 = !DIFile(filename: "./sbitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7806, size: 64)
!7806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !7804, line: 39, size: 192, elements: !7807)
!7807 = !{!7808, !7810, !7811, !7812}
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !7806, file: !7804, line: 41, baseType: !7809, size: 64)
!7809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !7806, file: !7804, line: 42, baseType: !7, size: 32, offset: 64)
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7806, file: !7804, line: 43, baseType: !7, size: 32, offset: 96)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !7806, file: !7804, line: 44, baseType: !7813, size: 64, offset: 128)
!7813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2445, size: 64, elements: !2410)
!7814 = !DILocation(line: 9033, column: 15, scope: !7802)
!7815 = !DILocation(line: 9034, column: 31, scope: !7802)
!7816 = !DILocation(line: 9034, column: 16, scope: !7802)
!7817 = !DILocation(line: 9034, column: 14, scope: !7802)
!7818 = !DILocation(line: 9035, column: 21, scope: !7802)
!7819 = !DILocation(line: 9035, column: 7, scope: !7802)
!7820 = !DILocation(line: 9036, column: 35, scope: !7802)
!7821 = !DILocation(line: 9036, column: 7, scope: !7802)
!7822 = !DILocation(line: 9037, column: 7, scope: !7802)
!7823 = !DILocation(line: 9038, column: 5, scope: !7802)
!7824 = !DILocation(line: 9040, column: 7, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 9040, column: 7)
!7826 = !DILocation(line: 9040, column: 7, scope: !7656)
!7827 = !DILocation(line: 9041, column: 5, scope: !7825)
!7828 = !DILocation(line: 9049, column: 1, scope: !7656)
!7829 = distinct !DISubprogram(name: "VEC_rtx_p_heap_free", scope: !3, file: !3, line: 393, type: !7830, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!7830 = !DISubroutineType(types: !7831)
!7831 = !{null, !7832}
!7832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!7833 = !DILocalVariable(name: "vec_", arg: 1, scope: !7829, file: !3, line: 393, type: !7832)
!7834 = !DILocation(line: 393, column: 1, scope: !7829)
!7835 = !DILocation(line: 393, column: 1, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 393, column: 1)
!7837 = distinct !DISubprogram(name: "mark_home_live_1", scope: !3, file: !3, line: 2350, type: !7838, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!7838 = !DISubroutineType(types: !7839)
!7839 = !{null, !2396, !5}
!7840 = !DILocalVariable(name: "regno", arg: 1, scope: !7837, file: !3, line: 2350, type: !2396)
!7841 = !DILocation(line: 2350, column: 23, scope: !7837)
!7842 = !DILocalVariable(name: "mode", arg: 2, scope: !7837, file: !3, line: 2350, type: !5)
!7843 = !DILocation(line: 2350, column: 48, scope: !7837)
!7844 = !DILocalVariable(name: "i", scope: !7837, file: !3, line: 2352, type: !2396)
!7845 = !DILocation(line: 2352, column: 7, scope: !7837)
!7846 = !DILocalVariable(name: "lim", scope: !7837, file: !3, line: 2352, type: !2396)
!7847 = !DILocation(line: 2352, column: 10, scope: !7837)
!7848 = !DILocation(line: 2354, column: 7, scope: !7837)
!7849 = !DILocation(line: 2354, column: 20, scope: !7837)
!7850 = !DILocation(line: 2354, column: 5, scope: !7837)
!7851 = !DILocation(line: 2355, column: 7, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 2355, column: 7)
!7853 = !DILocation(line: 2355, column: 9, scope: !7852)
!7854 = !DILocation(line: 2355, column: 7, scope: !7837)
!7855 = !DILocation(line: 2356, column: 5, scope: !7852)
!7856 = !DILocation(line: 2357, column: 25, scope: !7837)
!7857 = !DILocation(line: 2357, column: 31, scope: !7837)
!7858 = !DILocation(line: 2357, column: 9, scope: !7837)
!7859 = !DILocation(line: 2357, column: 7, scope: !7837)
!7860 = !DILocation(line: 2358, column: 3, scope: !7837)
!7861 = !DILocation(line: 2358, column: 10, scope: !7837)
!7862 = !DILocation(line: 2358, column: 14, scope: !7837)
!7863 = !DILocation(line: 2358, column: 12, scope: !7837)
!7864 = !DILocation(line: 2359, column: 28, scope: !7837)
!7865 = !DILocation(line: 2359, column: 5, scope: !7837)
!7866 = distinct !{!7866, !7860, !7867}
!7867 = !DILocation(line: 2359, column: 36, scope: !7837)
!7868 = !DILocation(line: 2360, column: 1, scope: !7837)
!7869 = distinct !DISubprogram(name: "eliminate_regs_1", scope: !3, file: !3, line: 2547, type: !7870, scopeLine: 2549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!7870 = !DISubroutineType(types: !7871)
!7871 = !{!2372, !2372, !5, !2372, !2603}
!7872 = !DILocalVariable(name: "x", arg: 1, scope: !7869, file: !3, line: 2547, type: !2372)
!7873 = !DILocation(line: 2547, column: 23, scope: !7869)
!7874 = !DILocalVariable(name: "mem_mode", arg: 2, scope: !7869, file: !3, line: 2547, type: !5)
!7875 = !DILocation(line: 2547, column: 44, scope: !7869)
!7876 = !DILocalVariable(name: "insn", arg: 3, scope: !7869, file: !3, line: 2547, type: !2372)
!7877 = !DILocation(line: 2547, column: 58, scope: !7869)
!7878 = !DILocalVariable(name: "may_use_invariant", arg: 4, scope: !7869, file: !3, line: 2548, type: !2603)
!7879 = !DILocation(line: 2548, column: 10, scope: !7869)
!7880 = !DILocalVariable(name: "code", scope: !7869, file: !3, line: 2550, type: !384)
!7881 = !DILocation(line: 2550, column: 17, scope: !7869)
!7882 = !DILocation(line: 2550, column: 24, scope: !7869)
!7883 = !DILocalVariable(name: "ep", scope: !7869, file: !3, line: 2551, type: !3605)
!7884 = !DILocation(line: 2551, column: 22, scope: !7869)
!7885 = !DILocalVariable(name: "regno", scope: !7869, file: !3, line: 2552, type: !2396)
!7886 = !DILocation(line: 2552, column: 7, scope: !7869)
!7887 = !DILocalVariable(name: "new_rtx", scope: !7869, file: !3, line: 2553, type: !2372)
!7888 = !DILocation(line: 2553, column: 7, scope: !7869)
!7889 = !DILocalVariable(name: "i", scope: !7869, file: !3, line: 2554, type: !2396)
!7890 = !DILocation(line: 2554, column: 7, scope: !7869)
!7891 = !DILocalVariable(name: "j", scope: !7869, file: !3, line: 2554, type: !2396)
!7892 = !DILocation(line: 2554, column: 10, scope: !7869)
!7893 = !DILocalVariable(name: "fmt", scope: !7869, file: !3, line: 2555, type: !2399)
!7894 = !DILocation(line: 2555, column: 15, scope: !7869)
!7895 = !DILocalVariable(name: "copied", scope: !7869, file: !3, line: 2556, type: !2396)
!7896 = !DILocation(line: 2556, column: 7, scope: !7869)
!7897 = !DILocation(line: 2558, column: 9, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7869, file: !3, line: 2558, column: 7)
!7899 = !DILocation(line: 2558, column: 7, scope: !7869)
!7900 = !DILocation(line: 2559, column: 12, scope: !7898)
!7901 = !DILocation(line: 2559, column: 5, scope: !7898)
!7902 = !DILocation(line: 2561, column: 11, scope: !7869)
!7903 = !DILocation(line: 2561, column: 3, scope: !7869)
!7904 = !DILocation(line: 2576, column: 14, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7869, file: !3, line: 2562, column: 5)
!7906 = !DILocation(line: 2576, column: 7, scope: !7905)
!7907 = !DILocation(line: 2579, column: 15, scope: !7905)
!7908 = !DILocation(line: 2579, column: 13, scope: !7905)
!7909 = !DILocation(line: 2583, column: 11, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2583, column: 11)
!7911 = !DILocation(line: 2583, column: 17, scope: !7910)
!7912 = !DILocation(line: 2583, column: 11, scope: !7905)
!7913 = !DILocation(line: 2585, column: 14, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 2585, column: 4)
!7915 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 2584, column: 2)
!7916 = !DILocation(line: 2585, column: 12, scope: !7914)
!7917 = !DILocation(line: 2585, column: 9, scope: !7914)
!7918 = !DILocation(line: 2585, column: 29, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 2585, column: 4)
!7920 = !DILocation(line: 2585, column: 35, scope: !7919)
!7921 = !DILocation(line: 2585, column: 32, scope: !7919)
!7922 = !DILocation(line: 2585, column: 4, scope: !7914)
!7923 = !DILocation(line: 2587, column: 10, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 2587, column: 10)
!7925 = !DILocation(line: 2587, column: 14, scope: !7924)
!7926 = !DILocation(line: 2587, column: 26, scope: !7924)
!7927 = !DILocation(line: 2587, column: 23, scope: !7924)
!7928 = !DILocation(line: 2587, column: 28, scope: !7924)
!7929 = !DILocation(line: 2587, column: 31, scope: !7924)
!7930 = !DILocation(line: 2587, column: 35, scope: !7924)
!7931 = !DILocation(line: 2587, column: 10, scope: !7919)
!7932 = !DILocation(line: 2588, column: 30, scope: !7924)
!7933 = !DILocation(line: 2588, column: 34, scope: !7924)
!7934 = !DILocation(line: 2588, column: 42, scope: !7924)
!7935 = !DILocation(line: 2588, column: 46, scope: !7924)
!7936 = !DILocation(line: 2588, column: 15, scope: !7924)
!7937 = !DILocation(line: 2588, column: 8, scope: !7924)
!7938 = !DILocation(line: 2586, column: 11, scope: !7919)
!7939 = !DILocation(line: 2585, column: 4, scope: !7919)
!7940 = distinct !{!7940, !7922, !7941}
!7941 = !DILocation(line: 2588, column: 61, scope: !7914)
!7942 = !DILocation(line: 2590, column: 2, scope: !7915)
!7943 = !DILocation(line: 2591, column: 16, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 2591, column: 16)
!7945 = !DILocation(line: 2591, column: 29, scope: !7944)
!7946 = !DILocation(line: 2591, column: 32, scope: !7944)
!7947 = !DILocation(line: 2591, column: 45, scope: !7944)
!7948 = !DILocation(line: 2591, column: 52, scope: !7944)
!7949 = !DILocation(line: 2592, column: 9, scope: !7944)
!7950 = !DILocation(line: 2592, column: 12, scope: !7944)
!7951 = !DILocation(line: 2592, column: 32, scope: !7944)
!7952 = !DILocation(line: 2592, column: 35, scope: !7944)
!7953 = !DILocation(line: 2592, column: 55, scope: !7944)
!7954 = !DILocation(line: 2591, column: 16, scope: !7910)
!7955 = !DILocation(line: 2594, column: 8, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 2594, column: 8)
!7957 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 2593, column: 2)
!7958 = !DILocation(line: 2594, column: 26, scope: !7956)
!7959 = !DILocation(line: 2594, column: 30, scope: !7956)
!7960 = !DILocation(line: 2594, column: 35, scope: !7956)
!7961 = !DILocation(line: 2594, column: 38, scope: !7956)
!7962 = !DILocation(line: 2594, column: 8, scope: !7957)
!7963 = !DILocation(line: 2595, column: 41, scope: !7956)
!7964 = !DILocation(line: 2595, column: 61, scope: !7956)
!7965 = !DILocation(line: 2595, column: 31, scope: !7956)
!7966 = !DILocation(line: 2596, column: 17, scope: !7956)
!7967 = !DILocation(line: 2596, column: 27, scope: !7956)
!7968 = !DILocation(line: 2595, column: 13, scope: !7956)
!7969 = !DILocation(line: 2595, column: 6, scope: !7956)
!7970 = !DILocation(line: 2599, column: 4, scope: !7957)
!7971 = !DILocation(line: 2599, column: 19, scope: !7957)
!7972 = !DILocation(line: 2599, column: 26, scope: !7957)
!7973 = !DILocation(line: 2600, column: 15, scope: !7957)
!7974 = !DILocation(line: 2600, column: 4, scope: !7957)
!7975 = !DILocation(line: 2601, column: 2, scope: !7957)
!7976 = !DILocation(line: 2602, column: 14, scope: !7905)
!7977 = !DILocation(line: 2602, column: 7, scope: !7905)
!7978 = !DILocation(line: 2621, column: 11, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2621, column: 11)
!7980 = !DILocation(line: 2622, column: 4, scope: !7979)
!7981 = !DILocation(line: 2622, column: 7, scope: !7979)
!7982 = !DILocation(line: 2622, column: 27, scope: !7979)
!7983 = !DILocation(line: 2623, column: 4, scope: !7979)
!7984 = !DILocation(line: 2623, column: 7, scope: !7979)
!7985 = !DILocation(line: 2621, column: 11, scope: !7905)
!7986 = !DILocation(line: 2625, column: 14, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !3, line: 2625, column: 4)
!7988 = distinct !DILexicalBlock(scope: !7979, file: !3, line: 2624, column: 2)
!7989 = !DILocation(line: 2625, column: 12, scope: !7987)
!7990 = !DILocation(line: 2625, column: 9, scope: !7987)
!7991 = !DILocation(line: 2625, column: 29, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 2625, column: 4)
!7993 = !DILocation(line: 2625, column: 35, scope: !7992)
!7994 = !DILocation(line: 2625, column: 32, scope: !7992)
!7995 = !DILocation(line: 2625, column: 4, scope: !7987)
!7996 = !DILocation(line: 2627, column: 10, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 2627, column: 10)
!7998 = !DILocation(line: 2627, column: 14, scope: !7997)
!7999 = !DILocation(line: 2627, column: 26, scope: !7997)
!8000 = !DILocation(line: 2627, column: 23, scope: !7997)
!8001 = !DILocation(line: 2627, column: 38, scope: !7997)
!8002 = !DILocation(line: 2627, column: 41, scope: !7997)
!8003 = !DILocation(line: 2627, column: 45, scope: !7997)
!8004 = !DILocation(line: 2627, column: 10, scope: !7992)
!8005 = !DILocation(line: 2637, column: 7, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 2637, column: 7)
!8007 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 2628, column: 8)
!8008 = !DILocation(line: 2637, column: 16, scope: !8006)
!8009 = !DILocation(line: 2637, column: 21, scope: !8006)
!8010 = !DILocation(line: 2637, column: 24, scope: !8006)
!8011 = !DILocation(line: 2638, column: 7, scope: !8006)
!8012 = !DILocation(line: 2638, column: 10, scope: !8006)
!8013 = !DILocation(line: 2638, column: 36, scope: !8006)
!8014 = !DILocation(line: 2638, column: 40, scope: !8006)
!8015 = !DILocation(line: 2638, column: 34, scope: !8006)
!8016 = !DILocation(line: 2638, column: 31, scope: !8006)
!8017 = !DILocation(line: 2637, column: 7, scope: !8007)
!8018 = !DILocation(line: 2639, column: 12, scope: !8006)
!8019 = !DILocation(line: 2639, column: 16, scope: !8006)
!8020 = !DILocation(line: 2639, column: 5, scope: !8006)
!8021 = !DILocation(line: 2641, column: 12, scope: !8006)
!8022 = !DILocation(line: 2641, column: 5, scope: !8006)
!8023 = !DILocation(line: 2626, column: 11, scope: !7992)
!8024 = !DILocation(line: 2625, column: 4, scope: !7992)
!8025 = distinct !{!8025, !7995, !8026}
!8026 = !DILocation(line: 2644, column: 8, scope: !7987)
!8027 = !DILocation(line: 2648, column: 11, scope: !7988)
!8028 = !DILocation(line: 2648, column: 4, scope: !7988)
!8029 = !DILocalVariable(name: "new0", scope: !8030, file: !3, line: 2661, type: !2372)
!8030 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2660, column: 7)
!8031 = !DILocation(line: 2661, column: 6, scope: !8030)
!8032 = !DILocation(line: 2661, column: 31, scope: !8030)
!8033 = !DILocation(line: 2661, column: 44, scope: !8030)
!8034 = !DILocation(line: 2661, column: 54, scope: !8030)
!8035 = !DILocation(line: 2661, column: 13, scope: !8030)
!8036 = !DILocalVariable(name: "new1", scope: !8030, file: !3, line: 2662, type: !2372)
!8037 = !DILocation(line: 2662, column: 6, scope: !8030)
!8038 = !DILocation(line: 2662, column: 31, scope: !8030)
!8039 = !DILocation(line: 2662, column: 44, scope: !8030)
!8040 = !DILocation(line: 2662, column: 54, scope: !8030)
!8041 = !DILocation(line: 2662, column: 13, scope: !8030)
!8042 = !DILocation(line: 2664, column: 6, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 2664, column: 6)
!8044 = !DILocation(line: 2664, column: 19, scope: !8043)
!8045 = !DILocation(line: 2664, column: 23, scope: !8043)
!8046 = !DILocation(line: 2664, column: 31, scope: !8043)
!8047 = !DILocation(line: 2664, column: 28, scope: !8043)
!8048 = !DILocation(line: 2664, column: 43, scope: !8043)
!8049 = !DILocation(line: 2664, column: 46, scope: !8043)
!8050 = !DILocation(line: 2664, column: 54, scope: !8043)
!8051 = !DILocation(line: 2664, column: 51, scope: !8043)
!8052 = !DILocation(line: 2664, column: 6, scope: !8030)
!8053 = !DILocation(line: 2670, column: 10, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2670, column: 10)
!8055 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 2665, column: 4)
!8056 = !DILocation(line: 2670, column: 26, scope: !8054)
!8057 = !DILocation(line: 2670, column: 34, scope: !8054)
!8058 = !DILocation(line: 2670, column: 37, scope: !8054)
!8059 = !DILocation(line: 2671, column: 3, scope: !8054)
!8060 = !DILocation(line: 2671, column: 6, scope: !8054)
!8061 = !DILocation(line: 2671, column: 19, scope: !8054)
!8062 = !DILocation(line: 2672, column: 3, scope: !8054)
!8063 = !DILocation(line: 2672, column: 6, scope: !8054)
!8064 = !DILocation(line: 2672, column: 19, scope: !8054)
!8065 = !DILocation(line: 2672, column: 33, scope: !8054)
!8066 = !DILocation(line: 2673, column: 3, scope: !8054)
!8067 = !DILocation(line: 2673, column: 6, scope: !8054)
!8068 = !DILocation(line: 2673, column: 25, scope: !8054)
!8069 = !DILocation(line: 2674, column: 3, scope: !8054)
!8070 = !DILocation(line: 2674, column: 6, scope: !8054)
!8071 = !DILocation(line: 2674, column: 25, scope: !8054)
!8072 = !DILocation(line: 2674, column: 39, scope: !8054)
!8073 = !DILocation(line: 2670, column: 10, scope: !8055)
!8074 = !DILocation(line: 2675, column: 15, scope: !8054)
!8075 = !DILocation(line: 2675, column: 34, scope: !8054)
!8076 = !DILocation(line: 2675, column: 13, scope: !8054)
!8077 = !DILocation(line: 2675, column: 8, scope: !8054)
!8078 = !DILocation(line: 2676, column: 15, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 2676, column: 15)
!8080 = !DILocation(line: 2676, column: 31, scope: !8079)
!8081 = !DILocation(line: 2676, column: 39, scope: !8079)
!8082 = !DILocation(line: 2676, column: 42, scope: !8079)
!8083 = !DILocation(line: 2677, column: 8, scope: !8079)
!8084 = !DILocation(line: 2677, column: 11, scope: !8079)
!8085 = !DILocation(line: 2677, column: 24, scope: !8079)
!8086 = !DILocation(line: 2678, column: 8, scope: !8079)
!8087 = !DILocation(line: 2678, column: 11, scope: !8079)
!8088 = !DILocation(line: 2678, column: 24, scope: !8079)
!8089 = !DILocation(line: 2678, column: 38, scope: !8079)
!8090 = !DILocation(line: 2679, column: 8, scope: !8079)
!8091 = !DILocation(line: 2679, column: 11, scope: !8079)
!8092 = !DILocation(line: 2679, column: 30, scope: !8079)
!8093 = !DILocation(line: 2679, column: 44, scope: !8079)
!8094 = !DILocation(line: 2676, column: 15, scope: !8054)
!8095 = !DILocation(line: 2680, column: 15, scope: !8079)
!8096 = !DILocation(line: 2680, column: 34, scope: !8079)
!8097 = !DILocation(line: 2680, column: 13, scope: !8079)
!8098 = !DILocation(line: 2680, column: 8, scope: !8079)
!8099 = !DILocation(line: 2682, column: 26, scope: !8055)
!8100 = !DILocation(line: 2682, column: 40, scope: !8055)
!8101 = !DILocation(line: 2682, column: 46, scope: !8055)
!8102 = !DILocation(line: 2682, column: 16, scope: !8055)
!8103 = !DILocation(line: 2682, column: 14, scope: !8055)
!8104 = !DILocation(line: 2687, column: 12, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2687, column: 10)
!8106 = !DILocation(line: 2687, column: 21, scope: !8105)
!8107 = !DILocation(line: 2687, column: 24, scope: !8105)
!8108 = !DILocation(line: 2687, column: 43, scope: !8105)
!8109 = !DILocation(line: 2687, column: 10, scope: !8055)
!8110 = !DILocation(line: 2688, column: 15, scope: !8105)
!8111 = !DILocation(line: 2688, column: 8, scope: !8105)
!8112 = !DILocation(line: 2690, column: 15, scope: !8105)
!8113 = !DILocation(line: 2690, column: 8, scope: !8105)
!8114 = !DILocation(line: 2693, column: 14, scope: !7905)
!8115 = !DILocation(line: 2693, column: 7, scope: !7905)
!8116 = !DILocation(line: 2701, column: 11, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2701, column: 11)
!8118 = !DILocation(line: 2702, column: 4, scope: !8117)
!8119 = !DILocation(line: 2702, column: 7, scope: !8117)
!8120 = !DILocation(line: 2702, column: 27, scope: !8117)
!8121 = !DILocation(line: 2703, column: 4, scope: !8117)
!8122 = !DILocation(line: 2703, column: 7, scope: !8117)
!8123 = !DILocation(line: 2701, column: 11, scope: !7905)
!8124 = !DILocation(line: 2704, column: 12, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8117, file: !3, line: 2704, column: 2)
!8126 = !DILocation(line: 2704, column: 10, scope: !8125)
!8127 = !DILocation(line: 2704, column: 7, scope: !8125)
!8128 = !DILocation(line: 2704, column: 27, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 2704, column: 2)
!8130 = !DILocation(line: 2704, column: 33, scope: !8129)
!8131 = !DILocation(line: 2704, column: 30, scope: !8129)
!8132 = !DILocation(line: 2704, column: 2, scope: !8125)
!8133 = !DILocation(line: 2706, column: 8, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 2706, column: 8)
!8135 = !DILocation(line: 2706, column: 12, scope: !8134)
!8136 = !DILocation(line: 2706, column: 24, scope: !8134)
!8137 = !DILocation(line: 2706, column: 21, scope: !8134)
!8138 = !DILocation(line: 2706, column: 36, scope: !8134)
!8139 = !DILocation(line: 2706, column: 39, scope: !8134)
!8140 = !DILocation(line: 2706, column: 43, scope: !8134)
!8141 = !DILocation(line: 2706, column: 8, scope: !8129)
!8142 = !DILocation(line: 2708, column: 14, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 2708, column: 12)
!8144 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 2707, column: 6)
!8145 = !DILocation(line: 2711, column: 5, scope: !8143)
!8146 = !DILocation(line: 2711, column: 11, scope: !8143)
!8147 = !DILocation(line: 2711, column: 16, scope: !8143)
!8148 = !DILocation(line: 2711, column: 21, scope: !8143)
!8149 = !DILocation(line: 2711, column: 25, scope: !8143)
!8150 = !DILocation(line: 2711, column: 41, scope: !8143)
!8151 = !DILocation(line: 2712, column: 11, scope: !8143)
!8152 = !DILocation(line: 2712, column: 14, scope: !8143)
!8153 = !DILocation(line: 2712, column: 30, scope: !8143)
!8154 = !DILocation(line: 2713, column: 11, scope: !8143)
!8155 = !DILocation(line: 2713, column: 14, scope: !8143)
!8156 = !DILocation(line: 2708, column: 12, scope: !8144)
!8157 = !DILocation(line: 2714, column: 3, scope: !8143)
!8158 = !DILocation(line: 2714, column: 7, scope: !8143)
!8159 = !DILocation(line: 2714, column: 23, scope: !8143)
!8160 = !DILocation(line: 2717, column: 18, scope: !8144)
!8161 = !DILocation(line: 2718, column: 11, scope: !8144)
!8162 = !DILocation(line: 2718, column: 15, scope: !8144)
!8163 = !DILocation(line: 2718, column: 33, scope: !8144)
!8164 = !DILocation(line: 2718, column: 31, scope: !8144)
!8165 = !DILocation(line: 2717, column: 3, scope: !8144)
!8166 = !DILocation(line: 2716, column: 8, scope: !8144)
!8167 = !DILocation(line: 2705, column: 9, scope: !8129)
!8168 = !DILocation(line: 2704, column: 2, scope: !8129)
!8169 = distinct !{!8169, !8132, !8170}
!8170 = !DILocation(line: 2719, column: 6, scope: !8125)
!8171 = !DILocalVariable(name: "new0", scope: !8172, file: !3, line: 2736, type: !2372)
!8172 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2735, column: 7)
!8173 = !DILocation(line: 2736, column: 6, scope: !8172)
!8174 = !DILocation(line: 2736, column: 31, scope: !8172)
!8175 = !DILocation(line: 2736, column: 44, scope: !8172)
!8176 = !DILocation(line: 2736, column: 54, scope: !8172)
!8177 = !DILocation(line: 2736, column: 13, scope: !8172)
!8178 = !DILocalVariable(name: "new1", scope: !8172, file: !3, line: 2737, type: !2372)
!8179 = !DILocation(line: 2737, column: 6, scope: !8172)
!8180 = !DILocation(line: 2737, column: 13, scope: !8172)
!8181 = !DILocation(line: 2738, column: 26, scope: !8172)
!8182 = !DILocation(line: 2738, column: 39, scope: !8172)
!8183 = !DILocation(line: 2738, column: 49, scope: !8172)
!8184 = !DILocation(line: 2738, column: 8, scope: !8172)
!8185 = !DILocation(line: 2740, column: 6, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8172, file: !3, line: 2740, column: 6)
!8187 = !DILocation(line: 2740, column: 14, scope: !8186)
!8188 = !DILocation(line: 2740, column: 11, scope: !8186)
!8189 = !DILocation(line: 2740, column: 26, scope: !8186)
!8190 = !DILocation(line: 2740, column: 29, scope: !8186)
!8191 = !DILocation(line: 2740, column: 37, scope: !8186)
!8192 = !DILocation(line: 2740, column: 34, scope: !8186)
!8193 = !DILocation(line: 2740, column: 6, scope: !8172)
!8194 = !DILocation(line: 2741, column: 11, scope: !8186)
!8195 = !DILocation(line: 2741, column: 4, scope: !8186)
!8196 = !DILocation(line: 2743, column: 14, scope: !7905)
!8197 = !DILocation(line: 2743, column: 7, scope: !7905)
!8198 = !DILocation(line: 2747, column: 11, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2747, column: 11)
!8200 = !DILocation(line: 2747, column: 11, scope: !7905)
!8201 = !DILocation(line: 2749, column: 32, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 2748, column: 2)
!8203 = !DILocation(line: 2749, column: 45, scope: !8202)
!8204 = !DILocation(line: 2749, column: 55, scope: !8202)
!8205 = !DILocation(line: 2749, column: 14, scope: !8202)
!8206 = !DILocation(line: 2749, column: 12, scope: !8202)
!8207 = !DILocation(line: 2750, column: 8, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 2750, column: 8)
!8209 = !DILocation(line: 2750, column: 19, scope: !8208)
!8210 = !DILocation(line: 2750, column: 16, scope: !8208)
!8211 = !DILocation(line: 2750, column: 8, scope: !8202)
!8212 = !DILocation(line: 2755, column: 12, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 2755, column: 12)
!8214 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 2751, column: 6)
!8215 = !DILocation(line: 2755, column: 30, scope: !8213)
!8216 = !DILocation(line: 2755, column: 12, scope: !8214)
!8217 = !DILocation(line: 2756, column: 11, scope: !8213)
!8218 = !DILocation(line: 2757, column: 24, scope: !8213)
!8219 = !DILocation(line: 2757, column: 37, scope: !8213)
!8220 = !DILocation(line: 2757, column: 47, scope: !8213)
!8221 = !DILocation(line: 2757, column: 6, scope: !8213)
!8222 = !DILocation(line: 2756, column: 3, scope: !8213)
!8223 = !DILocation(line: 2760, column: 28, scope: !8214)
!8224 = !DILocation(line: 2760, column: 47, scope: !8214)
!8225 = !DILocation(line: 2760, column: 56, scope: !8214)
!8226 = !DILocation(line: 2760, column: 12, scope: !8214)
!8227 = !DILocation(line: 2760, column: 10, scope: !8214)
!8228 = !DILocation(line: 2761, column: 6, scope: !8214)
!8229 = !DILocation(line: 2762, column: 2, scope: !8202)
!8230 = !DILocation(line: 2770, column: 11, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2770, column: 11)
!8232 = !DILocation(line: 2770, column: 11, scope: !7905)
!8233 = !DILocation(line: 2772, column: 32, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 2771, column: 2)
!8235 = !DILocation(line: 2772, column: 45, scope: !8234)
!8236 = !DILocation(line: 2772, column: 55, scope: !8234)
!8237 = !DILocation(line: 2772, column: 14, scope: !8234)
!8238 = !DILocation(line: 2772, column: 12, scope: !8234)
!8239 = !DILocation(line: 2773, column: 8, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 2773, column: 8)
!8241 = !DILocation(line: 2773, column: 19, scope: !8240)
!8242 = !DILocation(line: 2773, column: 16, scope: !8240)
!8243 = !DILocation(line: 2773, column: 8, scope: !8234)
!8244 = !DILocation(line: 2775, column: 8, scope: !8240)
!8245 = !DILocation(line: 2774, column: 6, scope: !8240)
!8246 = !DILocation(line: 2776, column: 2, scope: !8234)
!8247 = !DILocation(line: 2777, column: 14, scope: !7905)
!8248 = !DILocation(line: 2777, column: 7, scope: !7905)
!8249 = !DILocation(line: 2786, column: 14, scope: !7905)
!8250 = !DILocation(line: 2786, column: 7, scope: !7905)
!8251 = !DILocation(line: 2794, column: 11, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2794, column: 11)
!8253 = !DILocation(line: 2794, column: 34, scope: !8252)
!8254 = !DILocation(line: 2795, column: 4, scope: !8252)
!8255 = !DILocation(line: 2795, column: 7, scope: !8252)
!8256 = !DILocation(line: 2795, column: 32, scope: !8252)
!8257 = !DILocation(line: 2795, column: 29, scope: !8252)
!8258 = !DILocation(line: 2794, column: 11, scope: !7905)
!8259 = !DILocalVariable(name: "new_rtx", scope: !8260, file: !3, line: 2797, type: !2372)
!8260 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 2796, column: 2)
!8261 = !DILocation(line: 2797, column: 8, scope: !8260)
!8262 = !DILocation(line: 2797, column: 36, scope: !8260)
!8263 = !DILocation(line: 2797, column: 59, scope: !8260)
!8264 = !DILocation(line: 2798, column: 11, scope: !8260)
!8265 = !DILocation(line: 2797, column: 18, scope: !8260)
!8266 = !DILocation(line: 2800, column: 8, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2800, column: 8)
!8268 = !DILocation(line: 2800, column: 19, scope: !8267)
!8269 = !DILocation(line: 2800, column: 16, scope: !8267)
!8270 = !DILocation(line: 2800, column: 8, scope: !8260)
!8271 = !DILocation(line: 2801, column: 13, scope: !8267)
!8272 = !DILocation(line: 2801, column: 6, scope: !8267)
!8273 = !DILocation(line: 2804, column: 2, scope: !8260)
!8274 = !DILocation(line: 2805, column: 14, scope: !7905)
!8275 = !DILocation(line: 2805, column: 7, scope: !7905)
!8276 = !DILocation(line: 2821, column: 35, scope: !7905)
!8277 = !DILocation(line: 2821, column: 48, scope: !7905)
!8278 = !DILocation(line: 2821, column: 58, scope: !7905)
!8279 = !DILocation(line: 2821, column: 17, scope: !7905)
!8280 = !DILocation(line: 2821, column: 15, scope: !7905)
!8281 = !DILocation(line: 2822, column: 11, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2822, column: 11)
!8283 = !DILocation(line: 2822, column: 22, scope: !8282)
!8284 = !DILocation(line: 2822, column: 19, scope: !8282)
!8285 = !DILocation(line: 2822, column: 11, scope: !7905)
!8286 = !DILocation(line: 2823, column: 9, scope: !8282)
!8287 = !DILocation(line: 2823, column: 2, scope: !8282)
!8288 = !DILocation(line: 2824, column: 14, scope: !7905)
!8289 = !DILocation(line: 2824, column: 7, scope: !7905)
!8290 = !DILocation(line: 2833, column: 11, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2833, column: 11)
!8292 = !DILocation(line: 2834, column: 4, scope: !8291)
!8293 = !DILocation(line: 2834, column: 8, scope: !8291)
!8294 = !DILocation(line: 2835, column: 11, scope: !8291)
!8295 = !DILocation(line: 2835, column: 8, scope: !8291)
!8296 = !DILocation(line: 2836, column: 4, scope: !8291)
!8297 = !DILocation(line: 2836, column: 7, scope: !8291)
!8298 = !DILocation(line: 2836, column: 28, scope: !8291)
!8299 = !DILocation(line: 2837, column: 4, scope: !8291)
!8300 = !DILocation(line: 2837, column: 7, scope: !8291)
!8301 = !DILocation(line: 2837, column: 28, scope: !8291)
!8302 = !DILocation(line: 2837, column: 52, scope: !8291)
!8303 = !DILocation(line: 2833, column: 11, scope: !7905)
!8304 = !DILocation(line: 2839, column: 14, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 2838, column: 2)
!8306 = !DILocation(line: 2839, column: 12, scope: !8305)
!8307 = !DILocation(line: 2840, column: 2, scope: !8305)
!8308 = !DILocation(line: 2842, column: 30, scope: !8291)
!8309 = !DILocation(line: 2842, column: 46, scope: !8291)
!8310 = !DILocation(line: 2842, column: 56, scope: !8291)
!8311 = !DILocation(line: 2842, column: 12, scope: !8291)
!8312 = !DILocation(line: 2842, column: 10, scope: !8291)
!8313 = !DILocation(line: 2844, column: 11, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2844, column: 11)
!8315 = !DILocation(line: 2844, column: 22, scope: !8314)
!8316 = !DILocation(line: 2844, column: 19, scope: !8314)
!8317 = !DILocation(line: 2844, column: 11, scope: !7905)
!8318 = !DILocalVariable(name: "x_size", scope: !8319, file: !3, line: 2846, type: !2396)
!8319 = distinct !DILexicalBlock(scope: !8314, file: !3, line: 2845, column: 2)
!8320 = !DILocation(line: 2846, column: 8, scope: !8319)
!8321 = !DILocation(line: 2846, column: 17, scope: !8319)
!8322 = !DILocalVariable(name: "new_size", scope: !8319, file: !3, line: 2847, type: !2396)
!8323 = !DILocation(line: 2847, column: 8, scope: !8319)
!8324 = !DILocation(line: 2847, column: 19, scope: !8319)
!8325 = !DILocation(line: 2849, column: 8, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 2849, column: 8)
!8327 = !DILocation(line: 2850, column: 8, scope: !8326)
!8328 = !DILocation(line: 2850, column: 13, scope: !8326)
!8329 = !DILocation(line: 2850, column: 22, scope: !8326)
!8330 = !DILocation(line: 2850, column: 20, scope: !8326)
!8331 = !DILocation(line: 2863, column: 5, scope: !8326)
!8332 = !DILocation(line: 2863, column: 8, scope: !8326)
!8333 = !DILocation(line: 2863, column: 18, scope: !8326)
!8334 = !DILocation(line: 2863, column: 15, scope: !8326)
!8335 = !DILocation(line: 2849, column: 8, scope: !8319)
!8336 = !DILocation(line: 2865, column: 13, scope: !8326)
!8337 = !DILocation(line: 2865, column: 6, scope: !8326)
!8338 = !DILocation(line: 2867, column: 29, scope: !8326)
!8339 = !DILocation(line: 2867, column: 43, scope: !8326)
!8340 = !DILocation(line: 2867, column: 52, scope: !8326)
!8341 = !DILocation(line: 2867, column: 13, scope: !8326)
!8342 = !DILocation(line: 2867, column: 6, scope: !8326)
!8343 = !DILocation(line: 2870, column: 14, scope: !7905)
!8344 = !DILocation(line: 2870, column: 7, scope: !7905)
!8345 = !DILocation(line: 2877, column: 28, scope: !7905)
!8346 = !DILocation(line: 2878, column: 25, scope: !7905)
!8347 = !DILocation(line: 2878, column: 38, scope: !7905)
!8348 = !DILocation(line: 2879, column: 11, scope: !7905)
!8349 = !DILocation(line: 2878, column: 7, scope: !7905)
!8350 = !DILocation(line: 2877, column: 2, scope: !7905)
!8351 = !DILocation(line: 2876, column: 7, scope: !7905)
!8352 = !DILocation(line: 2883, column: 35, scope: !7905)
!8353 = !DILocation(line: 2883, column: 58, scope: !7905)
!8354 = !DILocation(line: 2883, column: 17, scope: !7905)
!8355 = !DILocation(line: 2883, column: 15, scope: !7905)
!8356 = !DILocation(line: 2884, column: 11, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2884, column: 11)
!8358 = !DILocation(line: 2884, column: 22, scope: !8357)
!8359 = !DILocation(line: 2884, column: 19, scope: !8357)
!8360 = !DILocation(line: 2884, column: 11, scope: !7905)
!8361 = !DILocation(line: 2885, column: 9, scope: !8357)
!8362 = !DILocation(line: 2885, column: 2, scope: !8357)
!8363 = !DILocation(line: 2886, column: 14, scope: !7905)
!8364 = !DILocation(line: 2886, column: 7, scope: !7905)
!8365 = !DILocation(line: 2889, column: 7, scope: !7905)
!8366 = !DILocation(line: 2890, column: 7, scope: !7905)
!8367 = !DILocation(line: 2894, column: 7, scope: !7905)
!8368 = !DILocation(line: 2897, column: 7, scope: !7905)
!8369 = !DILocation(line: 2902, column: 9, scope: !7869)
!8370 = !DILocation(line: 2902, column: 7, scope: !7869)
!8371 = !DILocation(line: 2903, column: 10, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !7869, file: !3, line: 2903, column: 3)
!8373 = !DILocation(line: 2903, column: 8, scope: !8372)
!8374 = !DILocation(line: 2903, column: 15, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 2903, column: 3)
!8376 = !DILocation(line: 2903, column: 19, scope: !8375)
!8377 = !DILocation(line: 2903, column: 17, scope: !8375)
!8378 = !DILocation(line: 2903, column: 3, scope: !8372)
!8379 = !DILocation(line: 2905, column: 12, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 2905, column: 11)
!8381 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 2904, column: 5)
!8382 = !DILocation(line: 2905, column: 11, scope: !8380)
!8383 = !DILocation(line: 2905, column: 16, scope: !8380)
!8384 = !DILocation(line: 2905, column: 11, scope: !8381)
!8385 = !DILocation(line: 2907, column: 32, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 2906, column: 2)
!8387 = !DILocation(line: 2907, column: 45, scope: !8386)
!8388 = !DILocation(line: 2907, column: 55, scope: !8386)
!8389 = !DILocation(line: 2907, column: 14, scope: !8386)
!8390 = !DILocation(line: 2907, column: 12, scope: !8386)
!8391 = !DILocation(line: 2908, column: 8, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 2908, column: 8)
!8393 = !DILocation(line: 2908, column: 19, scope: !8392)
!8394 = !DILocation(line: 2908, column: 16, scope: !8392)
!8395 = !DILocation(line: 2908, column: 31, scope: !8392)
!8396 = !DILocation(line: 2908, column: 36, scope: !8392)
!8397 = !DILocation(line: 2908, column: 8, scope: !8386)
!8398 = !DILocation(line: 2910, column: 12, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 2909, column: 6)
!8400 = !DILocation(line: 2910, column: 10, scope: !8399)
!8401 = !DILocation(line: 2911, column: 15, scope: !8399)
!8402 = !DILocation(line: 2912, column: 6, scope: !8399)
!8403 = !DILocation(line: 2913, column: 18, scope: !8386)
!8404 = !DILocation(line: 2913, column: 4, scope: !8386)
!8405 = !DILocation(line: 2913, column: 16, scope: !8386)
!8406 = !DILocation(line: 2914, column: 2, scope: !8386)
!8407 = !DILocation(line: 2915, column: 17, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 2915, column: 16)
!8409 = !DILocation(line: 2915, column: 16, scope: !8408)
!8410 = !DILocation(line: 2915, column: 21, scope: !8408)
!8411 = !DILocation(line: 2915, column: 16, scope: !8380)
!8412 = !DILocalVariable(name: "copied_vec", scope: !8413, file: !3, line: 2917, type: !2396)
!8413 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 2916, column: 2)
!8414 = !DILocation(line: 2917, column: 8, scope: !8413)
!8415 = !DILocation(line: 2918, column: 11, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 2918, column: 4)
!8417 = !DILocation(line: 2918, column: 9, scope: !8416)
!8418 = !DILocation(line: 2918, column: 16, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 2918, column: 4)
!8420 = !DILocation(line: 2918, column: 20, scope: !8419)
!8421 = !DILocation(line: 2918, column: 18, scope: !8419)
!8422 = !DILocation(line: 2918, column: 4, scope: !8416)
!8423 = !DILocation(line: 2920, column: 36, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 2919, column: 6)
!8425 = !DILocation(line: 2920, column: 55, scope: !8424)
!8426 = !DILocation(line: 2920, column: 65, scope: !8424)
!8427 = !DILocation(line: 2920, column: 18, scope: !8424)
!8428 = !DILocation(line: 2920, column: 16, scope: !8424)
!8429 = !DILocation(line: 2921, column: 12, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 2921, column: 12)
!8431 = !DILocation(line: 2921, column: 23, scope: !8430)
!8432 = !DILocation(line: 2921, column: 20, scope: !8430)
!8433 = !DILocation(line: 2921, column: 41, scope: !8430)
!8434 = !DILocation(line: 2921, column: 46, scope: !8430)
!8435 = !DILocation(line: 2921, column: 12, scope: !8424)
!8436 = !DILocalVariable(name: "new_v", scope: !8437, file: !3, line: 2923, type: !2403)
!8437 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 2922, column: 3)
!8438 = !DILocation(line: 2923, column: 11, scope: !8437)
!8439 = !DILocation(line: 2923, column: 32, scope: !8437)
!8440 = !DILocation(line: 2924, column: 11, scope: !8437)
!8441 = !DILocation(line: 2924, column: 24, scope: !8437)
!8442 = !DILocation(line: 2923, column: 19, scope: !8437)
!8443 = !DILocation(line: 2925, column: 11, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 2925, column: 9)
!8445 = !DILocation(line: 2925, column: 9, scope: !8437)
!8446 = !DILocation(line: 2927, column: 13, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8444, file: !3, line: 2926, column: 7)
!8448 = !DILocation(line: 2927, column: 11, scope: !8447)
!8449 = !DILocation(line: 2928, column: 16, scope: !8447)
!8450 = !DILocation(line: 2929, column: 7, scope: !8447)
!8451 = !DILocation(line: 2930, column: 19, scope: !8437)
!8452 = !DILocation(line: 2930, column: 5, scope: !8437)
!8453 = !DILocation(line: 2930, column: 17, scope: !8437)
!8454 = !DILocation(line: 2931, column: 16, scope: !8437)
!8455 = !DILocation(line: 2932, column: 3, scope: !8437)
!8456 = !DILocation(line: 2933, column: 28, scope: !8424)
!8457 = !DILocation(line: 2933, column: 8, scope: !8424)
!8458 = !DILocation(line: 2933, column: 26, scope: !8424)
!8459 = !DILocation(line: 2934, column: 6, scope: !8424)
!8460 = !DILocation(line: 2918, column: 37, scope: !8419)
!8461 = !DILocation(line: 2918, column: 4, scope: !8419)
!8462 = distinct !{!8462, !8422, !8463}
!8463 = !DILocation(line: 2934, column: 6, scope: !8416)
!8464 = !DILocation(line: 2935, column: 2, scope: !8413)
!8465 = !DILocation(line: 2936, column: 5, scope: !8381)
!8466 = !DILocation(line: 2903, column: 43, scope: !8375)
!8467 = !DILocation(line: 2903, column: 50, scope: !8375)
!8468 = !DILocation(line: 2903, column: 3, scope: !8375)
!8469 = distinct !{!8469, !8378, !8470}
!8470 = !DILocation(line: 2936, column: 5, scope: !8372)
!8471 = !DILocation(line: 2938, column: 10, scope: !7869)
!8472 = !DILocation(line: 2938, column: 3, scope: !7869)
!8473 = !DILocation(line: 2939, column: 1, scope: !7869)
!8474 = distinct !DISubprogram(name: "elimination_target_reg_p", scope: !3, file: !3, line: 3856, type: !8475, scopeLine: 3857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!8475 = !DISubroutineType(types: !8476)
!8476 = !{!2603, !2372}
!8477 = !DILocalVariable(name: "x", arg: 1, scope: !8474, file: !3, line: 3856, type: !2372)
!8478 = !DILocation(line: 3856, column: 31, scope: !8474)
!8479 = !DILocalVariable(name: "ep", scope: !8474, file: !3, line: 3858, type: !3605)
!8480 = !DILocation(line: 3858, column: 22, scope: !8474)
!8481 = !DILocation(line: 3860, column: 13, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 3860, column: 3)
!8483 = !DILocation(line: 3860, column: 11, scope: !8482)
!8484 = !DILocation(line: 3860, column: 8, scope: !8482)
!8485 = !DILocation(line: 3860, column: 28, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 3860, column: 3)
!8487 = !DILocation(line: 3860, column: 34, scope: !8486)
!8488 = !DILocation(line: 3860, column: 31, scope: !8486)
!8489 = !DILocation(line: 3860, column: 3, scope: !8482)
!8490 = !DILocation(line: 3861, column: 9, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8486, file: !3, line: 3861, column: 9)
!8492 = !DILocation(line: 3861, column: 13, scope: !8491)
!8493 = !DILocation(line: 3861, column: 23, scope: !8491)
!8494 = !DILocation(line: 3861, column: 20, scope: !8491)
!8495 = !DILocation(line: 3861, column: 25, scope: !8491)
!8496 = !DILocation(line: 3861, column: 28, scope: !8491)
!8497 = !DILocation(line: 3861, column: 32, scope: !8491)
!8498 = !DILocation(line: 3861, column: 9, scope: !8486)
!8499 = !DILocation(line: 3862, column: 7, scope: !8491)
!8500 = !DILocation(line: 3860, column: 72, scope: !8486)
!8501 = !DILocation(line: 3860, column: 3, scope: !8486)
!8502 = distinct !{!8502, !8489, !8503}
!8503 = !DILocation(line: 3862, column: 14, scope: !8482)
!8504 = !DILocation(line: 3864, column: 3, scope: !8474)
!8505 = !DILocation(line: 3865, column: 1, scope: !8474)
!8506 = distinct !DISubprogram(name: "deallocate_reload_reg", scope: !3, file: !3, line: 6670, type: !5471, scopeLine: 6671, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!8507 = !DILocalVariable(name: "r", arg: 1, scope: !8506, file: !3, line: 6670, type: !2396)
!8508 = !DILocation(line: 6670, column: 28, scope: !8506)
!8509 = !DILocalVariable(name: "regno", scope: !8506, file: !3, line: 6672, type: !2396)
!8510 = !DILocation(line: 6672, column: 7, scope: !8506)
!8511 = !DILocation(line: 6674, column: 13, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 6674, column: 7)
!8513 = !DILocation(line: 6674, column: 9, scope: !8512)
!8514 = !DILocation(line: 6674, column: 16, scope: !8512)
!8515 = !DILocation(line: 6674, column: 7, scope: !8506)
!8516 = !DILocation(line: 6675, column: 5, scope: !8512)
!8517 = !DILocation(line: 6676, column: 28, scope: !8506)
!8518 = !DILocation(line: 6676, column: 24, scope: !8506)
!8519 = !DILocation(line: 6676, column: 31, scope: !8506)
!8520 = !DILocation(line: 6676, column: 11, scope: !8506)
!8521 = !DILocation(line: 6676, column: 9, scope: !8506)
!8522 = !DILocation(line: 6677, column: 7, scope: !8506)
!8523 = !DILocation(line: 6677, column: 3, scope: !8506)
!8524 = !DILocation(line: 6677, column: 10, scope: !8506)
!8525 = !DILocation(line: 6677, column: 18, scope: !8506)
!8526 = !DILocation(line: 6678, column: 23, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 6678, column: 7)
!8528 = !DILocation(line: 6678, column: 7, scope: !8527)
!8529 = !DILocation(line: 6678, column: 30, scope: !8527)
!8530 = !DILocation(line: 6678, column: 7, scope: !8506)
!8531 = !DILocation(line: 6679, column: 30, scope: !8527)
!8532 = !DILocation(line: 6679, column: 41, scope: !8527)
!8533 = !DILocation(line: 6679, column: 37, scope: !8527)
!8534 = !DILocation(line: 6679, column: 44, scope: !8527)
!8535 = !DILocation(line: 6679, column: 55, scope: !8527)
!8536 = !DILocation(line: 6679, column: 51, scope: !8527)
!8537 = !DILocation(line: 6679, column: 58, scope: !8527)
!8538 = !DILocation(line: 6680, column: 13, scope: !8527)
!8539 = !DILocation(line: 6680, column: 9, scope: !8527)
!8540 = !DILocation(line: 6680, column: 16, scope: !8527)
!8541 = !DILocation(line: 6679, column: 5, scope: !8527)
!8542 = !DILocation(line: 6681, column: 22, scope: !8506)
!8543 = !DILocation(line: 6681, column: 3, scope: !8506)
!8544 = !DILocation(line: 6681, column: 25, scope: !8506)
!8545 = !DILocation(line: 6682, column: 1, scope: !8506)
!8546 = distinct !DISubprogram(name: "clear_reload_reg_in_use", scope: !3, file: !3, line: 4711, type: !8547, scopeLine: 4713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!8547 = !DISubroutineType(types: !8548)
!8548 = !{null, !7, !2396, !2049, !5}
!8549 = !DILocalVariable(name: "regno", arg: 1, scope: !8546, file: !3, line: 4711, type: !7)
!8550 = !DILocation(line: 4711, column: 39, scope: !8546)
!8551 = !DILocalVariable(name: "opnum", arg: 2, scope: !8546, file: !3, line: 4711, type: !2396)
!8552 = !DILocation(line: 4711, column: 50, scope: !8546)
!8553 = !DILocalVariable(name: "type", arg: 3, scope: !8546, file: !3, line: 4712, type: !2049)
!8554 = !DILocation(line: 4712, column: 22, scope: !8546)
!8555 = !DILocalVariable(name: "mode", arg: 4, scope: !8546, file: !3, line: 4712, type: !5)
!8556 = !DILocation(line: 4712, column: 46, scope: !8546)
!8557 = !DILocalVariable(name: "nregs", scope: !8546, file: !3, line: 4714, type: !7)
!8558 = !DILocation(line: 4714, column: 16, scope: !8546)
!8559 = !DILocation(line: 4714, column: 41, scope: !8546)
!8560 = !DILocation(line: 4714, column: 24, scope: !8546)
!8561 = !DILocation(line: 4714, column: 48, scope: !8546)
!8562 = !DILocalVariable(name: "start_regno", scope: !8546, file: !3, line: 4715, type: !7)
!8563 = !DILocation(line: 4715, column: 16, scope: !8546)
!8564 = !DILocalVariable(name: "end_regno", scope: !8546, file: !3, line: 4715, type: !7)
!8565 = !DILocation(line: 4715, column: 29, scope: !8546)
!8566 = !DILocalVariable(name: "r", scope: !8546, file: !3, line: 4715, type: !7)
!8567 = !DILocation(line: 4715, column: 40, scope: !8546)
!8568 = !DILocalVariable(name: "i", scope: !8546, file: !3, line: 4716, type: !2396)
!8569 = !DILocation(line: 4716, column: 7, scope: !8546)
!8570 = !DILocalVariable(name: "check_opnum", scope: !8546, file: !3, line: 4721, type: !2396)
!8571 = !DILocation(line: 4721, column: 7, scope: !8546)
!8572 = !DILocalVariable(name: "check_any", scope: !8546, file: !3, line: 4722, type: !2396)
!8573 = !DILocation(line: 4722, column: 7, scope: !8546)
!8574 = !DILocalVariable(name: "used_in_set", scope: !8546, file: !3, line: 4723, type: !3583)
!8575 = !DILocation(line: 4723, column: 17, scope: !8546)
!8576 = !DILocation(line: 4725, column: 11, scope: !8546)
!8577 = !DILocation(line: 4725, column: 3, scope: !8546)
!8578 = !DILocation(line: 4728, column: 19, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 4726, column: 5)
!8580 = !DILocation(line: 4729, column: 7, scope: !8579)
!8581 = !DILocation(line: 4732, column: 52, scope: !8579)
!8582 = !DILocation(line: 4732, column: 22, scope: !8579)
!8583 = !DILocation(line: 4732, column: 19, scope: !8579)
!8584 = !DILocation(line: 4733, column: 7, scope: !8579)
!8585 = !DILocation(line: 4736, column: 19, scope: !8579)
!8586 = !DILocation(line: 4737, column: 54, scope: !8579)
!8587 = !DILocation(line: 4737, column: 22, scope: !8579)
!8588 = !DILocation(line: 4737, column: 19, scope: !8579)
!8589 = !DILocation(line: 4738, column: 7, scope: !8579)
!8590 = !DILocation(line: 4741, column: 53, scope: !8579)
!8591 = !DILocation(line: 4741, column: 22, scope: !8579)
!8592 = !DILocation(line: 4741, column: 19, scope: !8579)
!8593 = !DILocation(line: 4742, column: 7, scope: !8579)
!8594 = !DILocation(line: 4745, column: 19, scope: !8579)
!8595 = !DILocation(line: 4746, column: 54, scope: !8579)
!8596 = !DILocation(line: 4746, column: 22, scope: !8579)
!8597 = !DILocation(line: 4746, column: 19, scope: !8579)
!8598 = !DILocation(line: 4747, column: 7, scope: !8579)
!8599 = !DILocation(line: 4750, column: 19, scope: !8579)
!8600 = !DILocation(line: 4751, column: 7, scope: !8579)
!8601 = !DILocation(line: 4754, column: 17, scope: !8579)
!8602 = !DILocation(line: 4755, column: 19, scope: !8579)
!8603 = !DILocation(line: 4756, column: 7, scope: !8579)
!8604 = !DILocation(line: 4759, column: 19, scope: !8579)
!8605 = !DILocation(line: 4760, column: 17, scope: !8579)
!8606 = !DILocation(line: 4761, column: 7, scope: !8579)
!8607 = !DILocation(line: 4764, column: 47, scope: !8579)
!8608 = !DILocation(line: 4764, column: 22, scope: !8579)
!8609 = !DILocation(line: 4764, column: 19, scope: !8579)
!8610 = !DILocation(line: 4765, column: 7, scope: !8579)
!8611 = !DILocation(line: 4768, column: 48, scope: !8579)
!8612 = !DILocation(line: 4768, column: 22, scope: !8579)
!8613 = !DILocation(line: 4768, column: 19, scope: !8579)
!8614 = !DILocation(line: 4769, column: 7, scope: !8579)
!8615 = !DILocation(line: 4772, column: 19, scope: !8579)
!8616 = !DILocation(line: 4773, column: 7, scope: !8579)
!8617 = !DILocation(line: 4775, column: 7, scope: !8579)
!8618 = !DILocation(line: 4776, column: 5, scope: !8579)
!8619 = !DILocation(line: 4785, column: 17, scope: !8546)
!8620 = !DILocation(line: 4785, column: 15, scope: !8546)
!8621 = !DILocation(line: 4786, column: 15, scope: !8546)
!8622 = !DILocation(line: 4786, column: 23, scope: !8546)
!8623 = !DILocation(line: 4786, column: 21, scope: !8546)
!8624 = !DILocation(line: 4786, column: 13, scope: !8546)
!8625 = !DILocation(line: 4787, column: 7, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 4787, column: 7)
!8627 = !DILocation(line: 4787, column: 19, scope: !8626)
!8628 = !DILocation(line: 4787, column: 22, scope: !8626)
!8629 = !DILocation(line: 4787, column: 7, scope: !8546)
!8630 = !DILocation(line: 4789, column: 16, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 4789, column: 7)
!8632 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 4788, column: 5)
!8633 = !DILocation(line: 4789, column: 26, scope: !8631)
!8634 = !DILocation(line: 4789, column: 14, scope: !8631)
!8635 = !DILocation(line: 4789, column: 12, scope: !8631)
!8636 = !DILocation(line: 4789, column: 31, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 4789, column: 7)
!8638 = !DILocation(line: 4789, column: 33, scope: !8637)
!8639 = !DILocation(line: 4789, column: 7, scope: !8631)
!8640 = !DILocation(line: 4791, column: 12, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 4791, column: 8)
!8642 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 4790, column: 2)
!8643 = !DILocation(line: 4791, column: 8, scope: !8641)
!8644 = !DILocation(line: 4791, column: 15, scope: !8641)
!8645 = !DILocation(line: 4791, column: 30, scope: !8641)
!8646 = !DILocation(line: 4791, column: 27, scope: !8641)
!8647 = !DILocation(line: 4792, column: 8, scope: !8641)
!8648 = !DILocation(line: 4792, column: 12, scope: !8641)
!8649 = !DILocation(line: 4792, column: 22, scope: !8641)
!8650 = !DILocation(line: 4792, column: 29, scope: !8641)
!8651 = !DILocation(line: 4792, column: 25, scope: !8641)
!8652 = !DILocation(line: 4792, column: 32, scope: !8641)
!8653 = !DILocation(line: 4792, column: 41, scope: !8641)
!8654 = !DILocation(line: 4792, column: 38, scope: !8641)
!8655 = !DILocation(line: 4793, column: 8, scope: !8641)
!8656 = !DILocation(line: 4793, column: 15, scope: !8641)
!8657 = !DILocation(line: 4793, column: 11, scope: !8641)
!8658 = !DILocation(line: 4793, column: 18, scope: !8641)
!8659 = !DILocation(line: 4791, column: 8, scope: !8642)
!8660 = !DILocalVariable(name: "conflict_start", scope: !8661, file: !3, line: 4795, type: !7)
!8661 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 4794, column: 6)
!8662 = !DILocation(line: 4795, column: 21, scope: !8661)
!8663 = !DILocation(line: 4795, column: 55, scope: !8661)
!8664 = !DILocation(line: 4795, column: 51, scope: !8661)
!8665 = !DILocation(line: 4795, column: 58, scope: !8661)
!8666 = !DILocation(line: 4795, column: 38, scope: !8661)
!8667 = !DILocalVariable(name: "conflict_end", scope: !8661, file: !3, line: 4796, type: !7)
!8668 = !DILocation(line: 4796, column: 21, scope: !8661)
!8669 = !DILocation(line: 4797, column: 25, scope: !8661)
!8670 = !DILocation(line: 4797, column: 21, scope: !8661)
!8671 = !DILocation(line: 4797, column: 28, scope: !8661)
!8672 = !DILocation(line: 4797, column: 34, scope: !8661)
!8673 = !DILocation(line: 4797, column: 5, scope: !8661)
!8674 = !DILocation(line: 4801, column: 12, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 4801, column: 12)
!8676 = !DILocation(line: 4801, column: 30, scope: !8675)
!8677 = !DILocation(line: 4801, column: 27, scope: !8675)
!8678 = !DILocation(line: 4801, column: 42, scope: !8675)
!8679 = !DILocation(line: 4801, column: 45, scope: !8675)
!8680 = !DILocation(line: 4801, column: 60, scope: !8675)
!8681 = !DILocation(line: 4801, column: 58, scope: !8675)
!8682 = !DILocation(line: 4801, column: 12, scope: !8661)
!8683 = !DILocation(line: 4802, column: 17, scope: !8675)
!8684 = !DILocation(line: 4802, column: 15, scope: !8675)
!8685 = !DILocation(line: 4802, column: 3, scope: !8675)
!8686 = !DILocation(line: 4805, column: 12, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 4805, column: 12)
!8688 = !DILocation(line: 4805, column: 29, scope: !8687)
!8689 = !DILocation(line: 4805, column: 27, scope: !8687)
!8690 = !DILocation(line: 4805, column: 41, scope: !8687)
!8691 = !DILocation(line: 4805, column: 44, scope: !8687)
!8692 = !DILocation(line: 4805, column: 61, scope: !8687)
!8693 = !DILocation(line: 4805, column: 59, scope: !8687)
!8694 = !DILocation(line: 4805, column: 12, scope: !8661)
!8695 = !DILocation(line: 4806, column: 15, scope: !8687)
!8696 = !DILocation(line: 4806, column: 13, scope: !8687)
!8697 = !DILocation(line: 4806, column: 3, scope: !8687)
!8698 = !DILocation(line: 4807, column: 6, scope: !8661)
!8699 = !DILocation(line: 4808, column: 2, scope: !8642)
!8700 = !DILocation(line: 4789, column: 40, scope: !8637)
!8701 = !DILocation(line: 4789, column: 7, scope: !8637)
!8702 = distinct !{!8702, !8639, !8703}
!8703 = !DILocation(line: 4808, column: 2, scope: !8631)
!8704 = !DILocation(line: 4809, column: 5, scope: !8632)
!8705 = !DILocation(line: 4811, column: 12, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 4811, column: 3)
!8707 = !DILocation(line: 4811, column: 10, scope: !8706)
!8708 = !DILocation(line: 4811, column: 8, scope: !8706)
!8709 = !DILocation(line: 4811, column: 25, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 4811, column: 3)
!8711 = !DILocation(line: 4811, column: 29, scope: !8710)
!8712 = !DILocation(line: 4811, column: 27, scope: !8710)
!8713 = !DILocation(line: 4811, column: 3, scope: !8706)
!8714 = !DILocation(line: 4812, column: 5, scope: !8710)
!8715 = !DILocation(line: 4811, column: 41, scope: !8710)
!8716 = !DILocation(line: 4811, column: 3, scope: !8710)
!8717 = distinct !{!8717, !8713, !8718}
!8718 = !DILocation(line: 4812, column: 5, scope: !8706)
!8719 = !DILocation(line: 4813, column: 1, scope: !8546)
!8720 = distinct !DISubprogram(name: "ei_start_1", scope: !142, file: !142, line: 696, type: !8721, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{!5490, !5495}
!8723 = !DILocalVariable(name: "ev", arg: 1, scope: !8720, file: !142, line: 696, type: !5495)
!8724 = !DILocation(line: 696, column: 28, scope: !8720)
!8725 = !DILocalVariable(name: "i", scope: !8720, file: !142, line: 698, type: !5490)
!8726 = !DILocation(line: 698, column: 17, scope: !8720)
!8727 = !DILocation(line: 700, column: 5, scope: !8720)
!8728 = !DILocation(line: 700, column: 11, scope: !8720)
!8729 = !DILocation(line: 701, column: 17, scope: !8720)
!8730 = !DILocation(line: 701, column: 5, scope: !8720)
!8731 = !DILocation(line: 701, column: 15, scope: !8720)
!8732 = !DILocation(line: 703, column: 3, scope: !8720)
!8733 = distinct !DISubprogram(name: "ei_cond", scope: !142, file: !142, line: 771, type: !8734, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!8734 = !DISubroutineType(types: !8735)
!8735 = !{!2603, !5490, !8736}
!8736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!8737 = !DILocalVariable(name: "ei", arg: 1, scope: !8733, file: !142, line: 771, type: !5490)
!8738 = !DILocation(line: 771, column: 24, scope: !8733)
!8739 = !DILocalVariable(name: "p", arg: 2, scope: !8733, file: !142, line: 771, type: !8736)
!8740 = !DILocation(line: 771, column: 34, scope: !8733)
!8741 = !DILocation(line: 773, column: 8, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8733, file: !142, line: 773, column: 7)
!8743 = !DILocation(line: 773, column: 7, scope: !8733)
!8744 = !DILocation(line: 775, column: 12, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8742, file: !142, line: 774, column: 5)
!8746 = !DILocation(line: 775, column: 8, scope: !8745)
!8747 = !DILocation(line: 775, column: 10, scope: !8745)
!8748 = !DILocation(line: 776, column: 7, scope: !8745)
!8749 = !DILocation(line: 780, column: 8, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8742, file: !142, line: 779, column: 5)
!8751 = !DILocation(line: 780, column: 10, scope: !8750)
!8752 = !DILocation(line: 781, column: 7, scope: !8750)
!8753 = !DILocation(line: 783, column: 1, scope: !8733)
!8754 = distinct !DISubprogram(name: "ei_next", scope: !142, file: !142, line: 736, type: !8755, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!8755 = !DISubroutineType(types: !8756)
!8756 = !{null, !8757}
!8757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5490, size: 64)
!8758 = !DILocalVariable(name: "i", arg: 1, scope: !8754, file: !142, line: 736, type: !8757)
!8759 = !DILocation(line: 736, column: 25, scope: !8754)
!8760 = !DILocation(line: 738, column: 3, scope: !8754)
!8761 = !DILocation(line: 739, column: 3, scope: !8754)
!8762 = !DILocation(line: 739, column: 6, scope: !8754)
!8763 = !DILocation(line: 739, column: 11, scope: !8754)
!8764 = !DILocation(line: 740, column: 1, scope: !8754)
!8765 = distinct !DISubprogram(name: "end_hard_regno", scope: !4204, file: !4204, line: 290, type: !8766, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!8766 = !DISubroutineType(types: !8767)
!8767 = !{!7, !5, !7}
!8768 = !DILocalVariable(name: "mode", arg: 1, scope: !8765, file: !4204, line: 290, type: !5)
!8769 = !DILocation(line: 290, column: 35, scope: !8765)
!8770 = !DILocalVariable(name: "regno", arg: 2, scope: !8765, file: !4204, line: 290, type: !7)
!8771 = !DILocation(line: 290, column: 54, scope: !8765)
!8772 = !DILocation(line: 292, column: 10, scope: !8765)
!8773 = !DILocation(line: 292, column: 35, scope: !8765)
!8774 = !DILocation(line: 292, column: 18, scope: !8765)
!8775 = !DILocation(line: 292, column: 48, scope: !8765)
!8776 = !DILocation(line: 292, column: 16, scope: !8765)
!8777 = !DILocation(line: 292, column: 3, scope: !8765)
!8778 = distinct !DISubprogram(name: "base_reg_class", scope: !8779, file: !8779, line: 25, type: !8780, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!8779 = !DIFile(filename: "./addresses.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!8780 = !DISubroutineType(types: !8781)
!8781 = !{!527, !5, !384, !384}
!8782 = !DILocalVariable(name: "mode", arg: 1, scope: !8778, file: !8779, line: 25, type: !5)
!8783 = !DILocation(line: 25, column: 35, scope: !8778)
!8784 = !DILocalVariable(name: "outer_code", arg: 2, scope: !8778, file: !8779, line: 26, type: !384)
!8785 = !DILocation(line: 26, column: 17, scope: !8778)
!8786 = !DILocalVariable(name: "index_code", arg: 3, scope: !8778, file: !8779, line: 27, type: !384)
!8787 = !DILocation(line: 27, column: 17, scope: !8778)
!8788 = !DILocation(line: 39, column: 3, scope: !8778)
!8789 = distinct !DISubprogram(name: "insn_constraint_len", scope: !8790, file: !8790, line: 177, type: !8791, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!8790 = !DIFile(filename: "./tm-preds.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!8791 = !DISubroutineType(types: !8792)
!8792 = !{!2844, !2364, !2399}
!8793 = !DILocalVariable(name: "fc", arg: 1, scope: !8789, file: !8790, line: 177, type: !2364)
!8794 = !DILocation(line: 177, column: 27, scope: !8789)
!8795 = !DILocalVariable(name: "str", arg: 2, scope: !8789, file: !8790, line: 177, type: !2399)
!8796 = !DILocation(line: 177, column: 43, scope: !8789)
!8797 = !DILocation(line: 179, column: 11, scope: !8789)
!8798 = !DILocation(line: 179, column: 3, scope: !8789)
!8799 = !DILocation(line: 181, column: 15, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8789, file: !8790, line: 180, column: 5)
!8801 = !DILocation(line: 182, column: 14, scope: !8800)
!8802 = !DILocation(line: 184, column: 3, scope: !8789)
!8803 = !DILocation(line: 185, column: 1, scope: !8789)
!8804 = distinct !DISubprogram(name: "set_label_offsets", scope: !3, file: !3, line: 2383, type: !8805, scopeLine: 2384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{null, !2372, !2372, !2396}
!8807 = !DILocalVariable(name: "x", arg: 1, scope: !8804, file: !3, line: 2383, type: !2372)
!8808 = !DILocation(line: 2383, column: 24, scope: !8804)
!8809 = !DILocalVariable(name: "insn", arg: 2, scope: !8804, file: !3, line: 2383, type: !2372)
!8810 = !DILocation(line: 2383, column: 31, scope: !8804)
!8811 = !DILocalVariable(name: "initial_p", arg: 3, scope: !8804, file: !3, line: 2383, type: !2396)
!8812 = !DILocation(line: 2383, column: 41, scope: !8804)
!8813 = !DILocalVariable(name: "code", scope: !8804, file: !3, line: 2385, type: !384)
!8814 = !DILocation(line: 2385, column: 17, scope: !8804)
!8815 = !DILocation(line: 2385, column: 24, scope: !8804)
!8816 = !DILocalVariable(name: "tem", scope: !8804, file: !3, line: 2386, type: !2372)
!8817 = !DILocation(line: 2386, column: 7, scope: !8804)
!8818 = !DILocalVariable(name: "i", scope: !8804, file: !3, line: 2387, type: !7)
!8819 = !DILocation(line: 2387, column: 16, scope: !8804)
!8820 = !DILocalVariable(name: "p", scope: !8804, file: !3, line: 2388, type: !3605)
!8821 = !DILocation(line: 2388, column: 22, scope: !8804)
!8822 = !DILocation(line: 2390, column: 11, scope: !8804)
!8823 = !DILocation(line: 2390, column: 3, scope: !8804)
!8824 = !DILocation(line: 2393, column: 11, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 2393, column: 11)
!8826 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 2391, column: 5)
!8827 = !DILocation(line: 2393, column: 11, scope: !8826)
!8828 = !DILocation(line: 2394, column: 2, scope: !8825)
!8829 = !DILocation(line: 2396, column: 11, scope: !8826)
!8830 = !DILocation(line: 2396, column: 9, scope: !8826)
!8831 = !DILocation(line: 2396, column: 7, scope: !8826)
!8832 = !DILocation(line: 2408, column: 13, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 2408, column: 11)
!8834 = !DILocation(line: 2408, column: 30, scope: !8833)
!8835 = !DILocation(line: 2408, column: 54, scope: !8833)
!8836 = !DILocation(line: 2408, column: 52, scope: !8833)
!8837 = !DILocation(line: 2408, column: 11, scope: !8826)
!8838 = !DILocation(line: 2410, column: 11, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !3, line: 2410, column: 4)
!8840 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 2409, column: 2)
!8841 = !DILocation(line: 2410, column: 9, scope: !8839)
!8842 = !DILocation(line: 2410, column: 16, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2410, column: 4)
!8844 = !DILocation(line: 2410, column: 18, scope: !8843)
!8845 = !DILocation(line: 2410, column: 4, scope: !8839)
!8846 = !DILocation(line: 2412, column: 11, scope: !8843)
!8847 = !DILocation(line: 2412, column: 23, scope: !8843)
!8848 = !DILocation(line: 2412, column: 37, scope: !8843)
!8849 = !DILocation(line: 2412, column: 40, scope: !8843)
!8850 = !DILocation(line: 2413, column: 6, scope: !8843)
!8851 = !DILocation(line: 2413, column: 20, scope: !8843)
!8852 = !DILocation(line: 2413, column: 23, scope: !8843)
!8853 = !DILocation(line: 2411, column: 6, scope: !8843)
!8854 = !DILocation(line: 2411, column: 17, scope: !8843)
!8855 = !DILocation(line: 2411, column: 41, scope: !8843)
!8856 = !DILocation(line: 2411, column: 39, scope: !8843)
!8857 = !DILocation(line: 2411, column: 58, scope: !8843)
!8858 = !DILocation(line: 2412, column: 8, scope: !8843)
!8859 = !DILocation(line: 2410, column: 42, scope: !8843)
!8860 = !DILocation(line: 2410, column: 4, scope: !8843)
!8861 = distinct !{!8861, !8845, !8862}
!8862 = !DILocation(line: 2413, column: 29, scope: !8839)
!8863 = !DILocation(line: 2414, column: 4, scope: !8840)
!8864 = !DILocation(line: 2414, column: 21, scope: !8840)
!8865 = !DILocation(line: 2414, column: 45, scope: !8840)
!8866 = !DILocation(line: 2414, column: 43, scope: !8840)
!8867 = !DILocation(line: 2414, column: 62, scope: !8840)
!8868 = !DILocation(line: 2415, column: 2, scope: !8840)
!8869 = !DILocation(line: 2421, column: 16, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 2421, column: 16)
!8871 = !DILocation(line: 2421, column: 21, scope: !8870)
!8872 = !DILocation(line: 2421, column: 18, scope: !8870)
!8873 = !DILocation(line: 2422, column: 9, scope: !8870)
!8874 = !DILocation(line: 2422, column: 38, scope: !8870)
!8875 = !DILocation(line: 2422, column: 19, scope: !8870)
!8876 = !DILocation(line: 2422, column: 17, scope: !8870)
!8877 = !DILocation(line: 2422, column: 45, scope: !8870)
!8878 = !DILocation(line: 2423, column: 9, scope: !8870)
!8879 = !DILocation(line: 2423, column: 12, scope: !8870)
!8880 = !DILocation(line: 2421, column: 16, scope: !8833)
!8881 = !DILocation(line: 2424, column: 25, scope: !8870)
!8882 = !DILocation(line: 2424, column: 2, scope: !8870)
!8883 = !DILocation(line: 2430, column: 9, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8870, file: !3, line: 2430, column: 2)
!8885 = !DILocation(line: 2430, column: 7, scope: !8884)
!8886 = !DILocation(line: 2430, column: 14, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8884, file: !3, line: 2430, column: 2)
!8888 = !DILocation(line: 2430, column: 16, scope: !8887)
!8889 = !DILocation(line: 2430, column: 2, scope: !8884)
!8890 = !DILocation(line: 2431, column: 8, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 2431, column: 8)
!8892 = !DILocation(line: 2431, column: 19, scope: !8891)
!8893 = !DILocation(line: 2431, column: 43, scope: !8891)
!8894 = !DILocation(line: 2431, column: 41, scope: !8891)
!8895 = !DILocation(line: 2431, column: 60, scope: !8891)
!8896 = !DILocation(line: 2432, column: 12, scope: !8891)
!8897 = !DILocation(line: 2432, column: 24, scope: !8891)
!8898 = !DILocation(line: 2432, column: 38, scope: !8891)
!8899 = !DILocation(line: 2432, column: 41, scope: !8891)
!8900 = !DILocation(line: 2433, column: 7, scope: !8891)
!8901 = !DILocation(line: 2433, column: 21, scope: !8891)
!8902 = !DILocation(line: 2433, column: 24, scope: !8891)
!8903 = !DILocation(line: 2432, column: 8, scope: !8891)
!8904 = !DILocation(line: 2431, column: 8, scope: !8887)
!8905 = !DILocation(line: 2434, column: 6, scope: !8891)
!8906 = !DILocation(line: 2434, column: 20, scope: !8891)
!8907 = !DILocation(line: 2434, column: 23, scope: !8891)
!8908 = !DILocation(line: 2434, column: 37, scope: !8891)
!8909 = !DILocation(line: 2433, column: 30, scope: !8891)
!8910 = !DILocation(line: 2430, column: 40, scope: !8887)
!8911 = !DILocation(line: 2430, column: 2, scope: !8887)
!8912 = distinct !{!8912, !8889, !8913}
!8913 = !DILocation(line: 2434, column: 39, scope: !8884)
!8914 = !DILocation(line: 2436, column: 7, scope: !8826)
!8915 = !DILocation(line: 2439, column: 26, scope: !8826)
!8916 = !DILocation(line: 2439, column: 42, scope: !8826)
!8917 = !DILocation(line: 2439, column: 48, scope: !8826)
!8918 = !DILocation(line: 2439, column: 7, scope: !8826)
!8919 = !DILocation(line: 2448, column: 18, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 2448, column: 7)
!8921 = !DILocation(line: 2448, column: 16, scope: !8920)
!8922 = !DILocation(line: 2448, column: 12, scope: !8920)
!8923 = !DILocation(line: 2448, column: 33, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8920, file: !3, line: 2448, column: 7)
!8925 = !DILocation(line: 2448, column: 7, scope: !8920)
!8926 = !DILocation(line: 2449, column: 6, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 2449, column: 6)
!8928 = !DILocation(line: 2449, column: 26, scope: !8927)
!8929 = !DILocation(line: 2449, column: 6, scope: !8924)
!8930 = !DILocation(line: 2450, column: 23, scope: !8927)
!8931 = !DILocation(line: 2450, column: 38, scope: !8927)
!8932 = !DILocation(line: 2450, column: 4, scope: !8927)
!8933 = !DILocation(line: 2449, column: 29, scope: !8927)
!8934 = !DILocation(line: 2448, column: 44, scope: !8924)
!8935 = !DILocation(line: 2448, column: 42, scope: !8924)
!8936 = !DILocation(line: 2448, column: 7, scope: !8924)
!8937 = distinct !{!8937, !8925, !8938}
!8938 = !DILocation(line: 2450, column: 45, scope: !8920)
!8939 = !DILocation(line: 2451, column: 7, scope: !8826)
!8940 = !DILocation(line: 2460, column: 14, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 2460, column: 7)
!8942 = !DILocation(line: 2460, column: 12, scope: !8941)
!8943 = !DILocation(line: 2460, column: 19, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 2460, column: 7)
!8945 = !DILocation(line: 2460, column: 34, scope: !8944)
!8946 = !DILocation(line: 2460, column: 21, scope: !8944)
!8947 = !DILocation(line: 2460, column: 7, scope: !8941)
!8948 = !DILocation(line: 2461, column: 21, scope: !8944)
!8949 = !DILocation(line: 2462, column: 7, scope: !8944)
!8950 = !DILocation(line: 2462, column: 13, scope: !8944)
!8951 = !DILocation(line: 2461, column: 2, scope: !8944)
!8952 = !DILocation(line: 2460, column: 71, scope: !8944)
!8953 = !DILocation(line: 2460, column: 7, scope: !8944)
!8954 = distinct !{!8954, !8947, !8955}
!8955 = !DILocation(line: 2462, column: 22, scope: !8941)
!8956 = !DILocation(line: 2463, column: 7, scope: !8826)
!8957 = !DILocation(line: 2478, column: 11, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 2478, column: 11)
!8959 = !DILocation(line: 2478, column: 27, scope: !8958)
!8960 = !DILocation(line: 2478, column: 24, scope: !8958)
!8961 = !DILocation(line: 2478, column: 11, scope: !8826)
!8962 = !DILocation(line: 2479, column: 2, scope: !8958)
!8963 = !DILocation(line: 2481, column: 15, scope: !8826)
!8964 = !DILocation(line: 2481, column: 7, scope: !8826)
!8965 = !DILocation(line: 2485, column: 4, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 2482, column: 2)
!8967 = !DILocation(line: 2488, column: 23, scope: !8966)
!8968 = !DILocation(line: 2488, column: 36, scope: !8966)
!8969 = !DILocation(line: 2488, column: 42, scope: !8966)
!8970 = !DILocation(line: 2488, column: 4, scope: !8966)
!8971 = !DILocation(line: 2489, column: 4, scope: !8966)
!8972 = !DILocation(line: 2492, column: 10, scope: !8966)
!8973 = !DILocation(line: 2492, column: 8, scope: !8966)
!8974 = !DILocation(line: 2493, column: 8, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 2493, column: 8)
!8976 = !DILocation(line: 2493, column: 23, scope: !8975)
!8977 = !DILocation(line: 2493, column: 8, scope: !8966)
!8978 = !DILocation(line: 2494, column: 25, scope: !8975)
!8979 = !DILocation(line: 2494, column: 40, scope: !8975)
!8980 = !DILocation(line: 2494, column: 46, scope: !8975)
!8981 = !DILocation(line: 2494, column: 6, scope: !8975)
!8982 = !DILocation(line: 2495, column: 13, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8975, file: !3, line: 2495, column: 13)
!8984 = !DILocation(line: 2495, column: 28, scope: !8983)
!8985 = !DILocation(line: 2495, column: 34, scope: !8983)
!8986 = !DILocation(line: 2495, column: 37, scope: !8983)
!8987 = !DILocation(line: 2495, column: 52, scope: !8983)
!8988 = !DILocation(line: 2495, column: 13, scope: !8975)
!8989 = !DILocation(line: 2496, column: 6, scope: !8983)
!8990 = !DILocation(line: 2498, column: 10, scope: !8966)
!8991 = !DILocation(line: 2498, column: 8, scope: !8966)
!8992 = !DILocation(line: 2499, column: 8, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 2499, column: 8)
!8994 = !DILocation(line: 2499, column: 23, scope: !8993)
!8995 = !DILocation(line: 2499, column: 8, scope: !8966)
!8996 = !DILocation(line: 2500, column: 25, scope: !8993)
!8997 = !DILocation(line: 2500, column: 40, scope: !8993)
!8998 = !DILocation(line: 2500, column: 46, scope: !8993)
!8999 = !DILocation(line: 2500, column: 6, scope: !8993)
!9000 = !DILocation(line: 2501, column: 13, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 2501, column: 13)
!9002 = !DILocation(line: 2501, column: 28, scope: !9001)
!9003 = !DILocation(line: 2501, column: 34, scope: !9001)
!9004 = !DILocation(line: 2501, column: 37, scope: !9001)
!9005 = !DILocation(line: 2501, column: 52, scope: !9001)
!9006 = !DILocation(line: 2501, column: 13, scope: !8993)
!9007 = !DILocation(line: 2502, column: 6, scope: !9001)
!9008 = !DILocation(line: 2503, column: 4, scope: !8966)
!9009 = !DILocation(line: 2506, column: 4, scope: !8966)
!9010 = !DILocation(line: 2511, column: 16, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 2511, column: 7)
!9012 = !DILocation(line: 2511, column: 14, scope: !9011)
!9013 = !DILocation(line: 2511, column: 12, scope: !9011)
!9014 = !DILocation(line: 2511, column: 31, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9011, file: !3, line: 2511, column: 7)
!9016 = !DILocation(line: 2511, column: 36, scope: !9015)
!9017 = !DILocation(line: 2511, column: 33, scope: !9015)
!9018 = !DILocation(line: 2511, column: 7, scope: !9011)
!9019 = !DILocation(line: 2512, column: 6, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 2512, column: 6)
!9021 = !DILocation(line: 2512, column: 9, scope: !9020)
!9022 = !DILocation(line: 2512, column: 19, scope: !9020)
!9023 = !DILocation(line: 2512, column: 22, scope: !9020)
!9024 = !DILocation(line: 2512, column: 16, scope: !9020)
!9025 = !DILocation(line: 2512, column: 6, scope: !9015)
!9026 = !DILocation(line: 2513, column: 4, scope: !9020)
!9027 = !DILocation(line: 2513, column: 7, scope: !9020)
!9028 = !DILocation(line: 2513, column: 21, scope: !9020)
!9029 = !DILocation(line: 2511, column: 73, scope: !9015)
!9030 = !DILocation(line: 2511, column: 7, scope: !9015)
!9031 = distinct !{!9031, !9018, !9032}
!9032 = !DILocation(line: 2513, column: 23, scope: !9011)
!9033 = !DILocation(line: 2514, column: 7, scope: !8826)
!9034 = !DILocation(line: 2517, column: 7, scope: !8826)
!9035 = !DILocation(line: 2519, column: 1, scope: !8804)
!9036 = distinct !DISubprogram(name: "eliminate_regs_in_insn", scope: !3, file: !3, line: 3206, type: !3624, scopeLine: 3207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!9037 = !DILocalVariable(name: "insn", arg: 1, scope: !9036, file: !3, line: 3206, type: !2372)
!9038 = !DILocation(line: 3206, column: 29, scope: !9036)
!9039 = !DILocalVariable(name: "replace", arg: 2, scope: !9036, file: !3, line: 3206, type: !2396)
!9040 = !DILocation(line: 3206, column: 39, scope: !9036)
!9041 = !DILocalVariable(name: "icode", scope: !9036, file: !3, line: 3208, type: !2396)
!9042 = !DILocation(line: 3208, column: 7, scope: !9036)
!9043 = !DILocation(line: 3208, column: 31, scope: !9036)
!9044 = !DILocation(line: 3208, column: 15, scope: !9036)
!9045 = !DILocalVariable(name: "old_body", scope: !9036, file: !3, line: 3209, type: !2372)
!9046 = !DILocation(line: 3209, column: 7, scope: !9036)
!9047 = !DILocation(line: 3209, column: 18, scope: !9036)
!9048 = !DILocalVariable(name: "insn_is_asm", scope: !9036, file: !3, line: 3210, type: !2396)
!9049 = !DILocation(line: 3210, column: 7, scope: !9036)
!9050 = !DILocation(line: 3210, column: 36, scope: !9036)
!9051 = !DILocation(line: 3210, column: 21, scope: !9036)
!9052 = !DILocation(line: 3210, column: 46, scope: !9036)
!9053 = !DILocalVariable(name: "old_set", scope: !9036, file: !3, line: 3211, type: !2372)
!9054 = !DILocation(line: 3211, column: 7, scope: !9036)
!9055 = !DILocation(line: 3211, column: 17, scope: !9036)
!9056 = !DILocalVariable(name: "new_body", scope: !9036, file: !3, line: 3212, type: !2372)
!9057 = !DILocation(line: 3212, column: 7, scope: !9036)
!9058 = !DILocalVariable(name: "val", scope: !9036, file: !3, line: 3213, type: !2396)
!9059 = !DILocation(line: 3213, column: 7, scope: !9036)
!9060 = !DILocalVariable(name: "i", scope: !9036, file: !3, line: 3214, type: !2396)
!9061 = !DILocation(line: 3214, column: 7, scope: !9036)
!9062 = !DILocalVariable(name: "substed_operand", scope: !9036, file: !3, line: 3215, type: !3837)
!9063 = !DILocation(line: 3215, column: 7, scope: !9036)
!9064 = !DILocalVariable(name: "orig_operand", scope: !9036, file: !3, line: 3216, type: !3837)
!9065 = !DILocation(line: 3216, column: 7, scope: !9036)
!9066 = !DILocalVariable(name: "ep", scope: !9036, file: !3, line: 3217, type: !3605)
!9067 = !DILocation(line: 3217, column: 22, scope: !9036)
!9068 = !DILocalVariable(name: "plus_src", scope: !9036, file: !3, line: 3218, type: !2372)
!9069 = !DILocation(line: 3218, column: 7, scope: !9036)
!9070 = !DILocalVariable(name: "plus_cst_src", scope: !9036, file: !3, line: 3218, type: !2372)
!9071 = !DILocation(line: 3218, column: 17, scope: !9036)
!9072 = !DILocation(line: 3220, column: 9, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3220, column: 7)
!9074 = !DILocation(line: 3220, column: 21, scope: !9073)
!9075 = !DILocation(line: 3220, column: 24, scope: !9073)
!9076 = !DILocation(line: 3220, column: 30, scope: !9073)
!9077 = !DILocation(line: 3220, column: 7, scope: !9036)
!9078 = !DILocation(line: 3222, column: 7, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 3221, column: 5)
!9080 = !DILocation(line: 3228, column: 11, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 3228, column: 11)
!9082 = !DILocation(line: 3228, column: 11, scope: !9079)
!9083 = !DILocation(line: 3230, column: 22, scope: !9081)
!9084 = !DILocation(line: 3230, column: 62, scope: !9081)
!9085 = !DILocation(line: 3230, column: 6, scope: !9081)
!9086 = !DILocation(line: 3229, column: 2, scope: !9081)
!9087 = !DILocation(line: 3230, column: 4, scope: !9081)
!9088 = !DILocation(line: 3231, column: 7, scope: !9079)
!9089 = !DILocation(line: 3234, column: 7, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3234, column: 7)
!9091 = !DILocation(line: 3234, column: 15, scope: !9090)
!9092 = !DILocation(line: 3234, column: 20, scope: !9090)
!9093 = !DILocation(line: 3234, column: 23, scope: !9090)
!9094 = !DILocation(line: 3235, column: 7, scope: !9090)
!9095 = !DILocation(line: 3235, column: 10, scope: !9090)
!9096 = !DILocation(line: 3235, column: 37, scope: !9090)
!9097 = !DILocation(line: 3234, column: 7, scope: !9036)
!9098 = !DILocation(line: 3238, column: 17, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 3238, column: 7)
!9100 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 3236, column: 5)
!9101 = !DILocation(line: 3238, column: 15, scope: !9099)
!9102 = !DILocation(line: 3238, column: 12, scope: !9099)
!9103 = !DILocation(line: 3238, column: 32, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 3238, column: 7)
!9105 = !DILocation(line: 3238, column: 38, scope: !9104)
!9106 = !DILocation(line: 3238, column: 35, scope: !9104)
!9107 = !DILocation(line: 3238, column: 7, scope: !9099)
!9108 = !DILocation(line: 3239, column: 6, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9104, file: !3, line: 3239, column: 6)
!9110 = !DILocation(line: 3239, column: 10, scope: !9109)
!9111 = !DILocation(line: 3239, column: 22, scope: !9109)
!9112 = !DILocation(line: 3239, column: 19, scope: !9109)
!9113 = !DILocation(line: 3239, column: 41, scope: !9109)
!9114 = !DILocation(line: 3239, column: 44, scope: !9109)
!9115 = !DILocation(line: 3239, column: 48, scope: !9109)
!9116 = !DILocation(line: 3239, column: 6, scope: !9104)
!9117 = !DILocation(line: 3247, column: 10, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9119, file: !3, line: 3247, column: 10)
!9119 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 3240, column: 4)
!9120 = !DILocation(line: 3247, column: 14, scope: !9118)
!9121 = !DILocation(line: 3247, column: 19, scope: !9118)
!9122 = !DILocation(line: 3248, column: 3, scope: !9118)
!9123 = !DILocation(line: 3248, column: 6, scope: !9118)
!9124 = !DILocation(line: 3248, column: 10, scope: !9118)
!9125 = !DILocation(line: 3248, column: 13, scope: !9118)
!9126 = !DILocation(line: 3247, column: 10, scope: !9119)
!9127 = !DILocalVariable(name: "base", scope: !9128, file: !3, line: 3250, type: !2372)
!9128 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 3249, column: 8)
!9129 = !DILocation(line: 3250, column: 7, scope: !9128)
!9130 = !DILocation(line: 3250, column: 14, scope: !9128)
!9131 = !DILocalVariable(name: "base_insn", scope: !9128, file: !3, line: 3251, type: !2372)
!9132 = !DILocation(line: 3251, column: 7, scope: !9128)
!9133 = !DILocation(line: 3251, column: 19, scope: !9128)
!9134 = !DILocalVariable(name: "offset", scope: !9128, file: !3, line: 3252, type: !2359)
!9135 = !DILocation(line: 3252, column: 17, scope: !9128)
!9136 = !DILocation(line: 3254, column: 3, scope: !9128)
!9137 = !DILocation(line: 3254, column: 10, scope: !9128)
!9138 = !DILocation(line: 3254, column: 18, scope: !9128)
!9139 = !DILocation(line: 3254, column: 22, scope: !9128)
!9140 = !DILocation(line: 3254, column: 15, scope: !9128)
!9141 = !DILocalVariable(name: "prev_insn", scope: !9142, file: !3, line: 3256, type: !2372)
!9142 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 3255, column: 5)
!9143 = !DILocation(line: 3256, column: 11, scope: !9142)
!9144 = !DILocalVariable(name: "prev_set", scope: !9142, file: !3, line: 3256, type: !2372)
!9145 = !DILocation(line: 3256, column: 22, scope: !9142)
!9146 = !DILocation(line: 3258, column: 11, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 3258, column: 11)
!9148 = !DILocation(line: 3258, column: 27, scope: !9147)
!9149 = !DILocation(line: 3259, column: 11, scope: !9147)
!9150 = !DILocation(line: 3259, column: 14, scope: !9147)
!9151 = !DILocation(line: 3258, column: 11, scope: !9142)
!9152 = !DILocation(line: 3261, column: 21, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 3260, column: 9)
!9154 = !DILocation(line: 3261, column: 18, scope: !9153)
!9155 = !DILocation(line: 3262, column: 18, scope: !9153)
!9156 = !DILocation(line: 3262, column: 16, scope: !9153)
!9157 = !DILocation(line: 3263, column: 9, scope: !9153)
!9158 = !DILocation(line: 3264, column: 48, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 3264, column: 16)
!9160 = !DILocation(line: 3264, column: 29, scope: !9159)
!9161 = !DILocation(line: 3264, column: 27, scope: !9159)
!9162 = !DILocation(line: 3264, column: 60, scope: !9159)
!9163 = !DILocation(line: 3265, column: 9, scope: !9159)
!9164 = !DILocation(line: 3265, column: 24, scope: !9159)
!9165 = !DILocation(line: 3265, column: 22, scope: !9159)
!9166 = !DILocation(line: 3265, column: 48, scope: !9159)
!9167 = !DILocation(line: 3266, column: 9, scope: !9159)
!9168 = !DILocation(line: 3266, column: 25, scope: !9159)
!9169 = !DILocation(line: 3266, column: 46, scope: !9159)
!9170 = !DILocation(line: 3266, column: 12, scope: !9159)
!9171 = !DILocation(line: 3264, column: 16, scope: !9147)
!9172 = !DILocation(line: 3268, column: 18, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9159, file: !3, line: 3267, column: 9)
!9174 = !DILocation(line: 3268, column: 16, scope: !9173)
!9175 = !DILocation(line: 3269, column: 23, scope: !9173)
!9176 = !DILocation(line: 3269, column: 21, scope: !9173)
!9177 = !DILocation(line: 3270, column: 9, scope: !9173)
!9178 = !DILocation(line: 3272, column: 9, scope: !9159)
!9179 = distinct !{!9179, !9136, !9180}
!9180 = !DILocation(line: 3273, column: 5, scope: !9128)
!9181 = !DILocation(line: 3275, column: 7, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 3275, column: 7)
!9183 = !DILocation(line: 3275, column: 15, scope: !9182)
!9184 = !DILocation(line: 3275, column: 19, scope: !9182)
!9185 = !DILocation(line: 3275, column: 12, scope: !9182)
!9186 = !DILocation(line: 3275, column: 7, scope: !9128)
!9187 = !DILocalVariable(name: "src", scope: !9188, file: !3, line: 3277, type: !2372)
!9188 = distinct !DILexicalBlock(scope: !9182, file: !3, line: 3276, column: 5)
!9189 = !DILocation(line: 3277, column: 11, scope: !9188)
!9190 = !DILocation(line: 3278, column: 26, scope: !9188)
!9191 = !DILocation(line: 3278, column: 30, scope: !9188)
!9192 = !DILocation(line: 3278, column: 38, scope: !9188)
!9193 = !DILocation(line: 3278, column: 47, scope: !9188)
!9194 = !DILocation(line: 3278, column: 51, scope: !9188)
!9195 = !DILocation(line: 3278, column: 45, scope: !9188)
!9196 = !DILocation(line: 3278, column: 11, scope: !9188)
!9197 = !DILocation(line: 3280, column: 18, scope: !9188)
!9198 = !DILocation(line: 3280, column: 16, scope: !9188)
!9199 = !DILocation(line: 3281, column: 13, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 3281, column: 11)
!9201 = !DILocation(line: 3281, column: 11, scope: !9188)
!9202 = !DILocation(line: 3283, column: 26, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 3282, column: 9)
!9204 = !DILocation(line: 3283, column: 15, scope: !9203)
!9205 = !DILocation(line: 3283, column: 13, scope: !9203)
!9206 = !DILocation(line: 3284, column: 8, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 3284, column: 8)
!9208 = !DILocation(line: 3284, column: 8, scope: !9203)
!9209 = !DILocation(line: 3285, column: 38, scope: !9207)
!9210 = !DILocation(line: 3285, column: 25, scope: !9207)
!9211 = !DILocation(line: 3285, column: 6, scope: !9207)
!9212 = !DILocation(line: 3285, column: 23, scope: !9207)
!9213 = !DILocation(line: 3286, column: 9, scope: !9203)
!9214 = !DILocation(line: 3287, column: 24, scope: !9188)
!9215 = !DILocation(line: 3287, column: 7, scope: !9188)
!9216 = !DILocation(line: 3287, column: 22, scope: !9188)
!9217 = !DILocation(line: 3288, column: 17, scope: !9188)
!9218 = !DILocation(line: 3288, column: 15, scope: !9188)
!9219 = !DILocation(line: 3293, column: 24, scope: !9188)
!9220 = !DILocation(line: 3293, column: 31, scope: !9188)
!9221 = !DILocation(line: 3293, column: 50, scope: !9188)
!9222 = !DILocation(line: 3293, column: 7, scope: !9188)
!9223 = !DILocation(line: 3294, column: 24, scope: !9188)
!9224 = !DILocation(line: 3294, column: 31, scope: !9188)
!9225 = !DILocation(line: 3295, column: 10, scope: !9188)
!9226 = !DILocation(line: 3295, column: 14, scope: !9188)
!9227 = !DILocation(line: 3294, column: 7, scope: !9188)
!9228 = !DILocation(line: 3296, column: 13, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 3296, column: 11)
!9230 = !DILocation(line: 3296, column: 11, scope: !9188)
!9231 = !DILocation(line: 3298, column: 24, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 3297, column: 9)
!9233 = !DILocation(line: 3298, column: 4, scope: !9232)
!9234 = !DILocation(line: 3298, column: 22, scope: !9232)
!9235 = !DILocation(line: 3299, column: 25, scope: !9232)
!9236 = !DILocation(line: 3299, column: 29, scope: !9232)
!9237 = !DILocation(line: 3299, column: 4, scope: !9232)
!9238 = !DILocation(line: 3299, column: 23, scope: !9232)
!9239 = !DILocation(line: 3300, column: 9, scope: !9232)
!9240 = !DILocation(line: 3302, column: 11, scope: !9188)
!9241 = !DILocation(line: 3303, column: 7, scope: !9188)
!9242 = !DILocation(line: 3305, column: 8, scope: !9128)
!9243 = !DILocation(line: 3314, column: 10, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9119, file: !3, line: 3314, column: 10)
!9245 = !DILocation(line: 3314, column: 10, scope: !9119)
!9246 = !DILocation(line: 3316, column: 21, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9244, file: !3, line: 3315, column: 8)
!9248 = !DILocation(line: 3316, column: 3, scope: !9247)
!9249 = !DILocation(line: 3317, column: 3, scope: !9247)
!9250 = !DILocation(line: 3319, column: 10, scope: !9119)
!9251 = !DILocation(line: 3320, column: 6, scope: !9119)
!9252 = !DILocation(line: 3238, column: 76, scope: !9104)
!9253 = !DILocation(line: 3238, column: 7, scope: !9104)
!9254 = distinct !{!9254, !9107, !9255}
!9255 = !DILocation(line: 3321, column: 4, scope: !9099)
!9256 = !DILocation(line: 3322, column: 5, scope: !9100)
!9257 = !DILocation(line: 3327, column: 27, scope: !9036)
!9258 = !DILocation(line: 3327, column: 12, scope: !9036)
!9259 = !DILocation(line: 3328, column: 7, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3328, column: 7)
!9261 = !DILocation(line: 3328, column: 15, scope: !9260)
!9262 = !DILocation(line: 3328, column: 18, scope: !9260)
!9263 = !DILocation(line: 3328, column: 7, scope: !9036)
!9264 = !DILocation(line: 3330, column: 11, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 3330, column: 11)
!9266 = distinct !DILexicalBlock(scope: !9260, file: !3, line: 3329, column: 5)
!9267 = !DILocation(line: 3330, column: 40, scope: !9265)
!9268 = !DILocation(line: 3330, column: 11, scope: !9266)
!9269 = !DILocation(line: 3331, column: 13, scope: !9265)
!9270 = !DILocation(line: 3331, column: 11, scope: !9265)
!9271 = !DILocation(line: 3331, column: 2, scope: !9265)
!9272 = !DILocation(line: 3333, column: 11, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 3333, column: 11)
!9274 = !DILocation(line: 3334, column: 4, scope: !9273)
!9275 = !DILocation(line: 3334, column: 7, scope: !9273)
!9276 = !DILocation(line: 3333, column: 11, scope: !9266)
!9277 = !DILocation(line: 3335, column: 17, scope: !9273)
!9278 = !DILocation(line: 3335, column: 15, scope: !9273)
!9279 = !DILocation(line: 3335, column: 2, scope: !9273)
!9280 = !DILocation(line: 3336, column: 16, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9273, file: !3, line: 3336, column: 16)
!9282 = !DILocation(line: 3337, column: 9, scope: !9281)
!9283 = !DILocation(line: 3337, column: 12, scope: !9281)
!9284 = !DILocation(line: 3336, column: 16, scope: !9273)
!9285 = !DILocalVariable(name: "links", scope: !9286, file: !3, line: 3341, type: !2372)
!9286 = distinct !DILexicalBlock(scope: !9281, file: !3, line: 3338, column: 2)
!9287 = !DILocation(line: 3341, column: 8, scope: !9286)
!9288 = !DILocation(line: 3342, column: 17, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 3342, column: 4)
!9290 = !DILocation(line: 3342, column: 15, scope: !9289)
!9291 = !DILocation(line: 3342, column: 9, scope: !9289)
!9292 = !DILocation(line: 3342, column: 35, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 3342, column: 4)
!9294 = !DILocation(line: 3342, column: 4, scope: !9289)
!9295 = !DILocation(line: 3344, column: 13, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 3344, column: 12)
!9297 = distinct !DILexicalBlock(scope: !9293, file: !3, line: 3343, column: 6)
!9298 = !DILocation(line: 3344, column: 35, scope: !9296)
!9299 = !DILocation(line: 3345, column: 6, scope: !9296)
!9300 = !DILocation(line: 3345, column: 9, scope: !9296)
!9301 = !DILocation(line: 3345, column: 31, scope: !9296)
!9302 = !DILocation(line: 3346, column: 5, scope: !9296)
!9303 = !DILocation(line: 3346, column: 8, scope: !9296)
!9304 = !DILocation(line: 3346, column: 35, scope: !9296)
!9305 = !DILocation(line: 3347, column: 5, scope: !9296)
!9306 = !DILocation(line: 3347, column: 8, scope: !9296)
!9307 = !DILocation(line: 3344, column: 12, scope: !9297)
!9308 = !DILocation(line: 3349, column: 20, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9296, file: !3, line: 3348, column: 3)
!9310 = !DILocation(line: 3349, column: 18, scope: !9309)
!9311 = !DILocation(line: 3350, column: 5, scope: !9309)
!9312 = !DILocation(line: 3352, column: 6, scope: !9297)
!9313 = !DILocation(line: 3342, column: 50, scope: !9293)
!9314 = !DILocation(line: 3342, column: 48, scope: !9293)
!9315 = !DILocation(line: 3342, column: 4, scope: !9293)
!9316 = distinct !{!9316, !9294, !9317}
!9317 = !DILocation(line: 3352, column: 6, scope: !9289)
!9318 = !DILocation(line: 3353, column: 2, scope: !9286)
!9319 = !DILocation(line: 3357, column: 11, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 3357, column: 11)
!9321 = !DILocation(line: 3357, column: 11, scope: !9266)
!9322 = !DILocalVariable(name: "reg", scope: !9323, file: !3, line: 3359, type: !2372)
!9323 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 3358, column: 2)
!9324 = !DILocation(line: 3359, column: 8, scope: !9323)
!9325 = !DILocation(line: 3359, column: 14, scope: !9323)
!9326 = !DILocation(line: 3360, column: 8, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9323, file: !3, line: 3360, column: 8)
!9328 = !DILocation(line: 3360, column: 23, scope: !9327)
!9329 = !DILocation(line: 3360, column: 33, scope: !9327)
!9330 = !DILocation(line: 3360, column: 54, scope: !9327)
!9331 = !DILocation(line: 3360, column: 36, scope: !9327)
!9332 = !DILocation(line: 3360, column: 8, scope: !9323)
!9333 = !DILocation(line: 3361, column: 12, scope: !9327)
!9334 = !DILocation(line: 3361, column: 10, scope: !9327)
!9335 = !DILocation(line: 3361, column: 6, scope: !9327)
!9336 = !DILocation(line: 3363, column: 9, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9323, file: !3, line: 3363, column: 8)
!9338 = !DILocation(line: 3363, column: 21, scope: !9337)
!9339 = !DILocation(line: 3363, column: 24, scope: !9337)
!9340 = !DILocation(line: 3363, column: 36, scope: !9337)
!9341 = !DILocation(line: 3363, column: 8, scope: !9323)
!9342 = !DILocation(line: 3364, column: 19, scope: !9337)
!9343 = !DILocation(line: 3364, column: 6, scope: !9337)
!9344 = !DILocation(line: 3365, column: 2, scope: !9323)
!9345 = !DILocation(line: 3366, column: 5, scope: !9266)
!9346 = !DILocation(line: 3367, column: 7, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3367, column: 7)
!9348 = !DILocation(line: 3367, column: 7, scope: !9036)
!9349 = !DILocalVariable(name: "reg", scope: !9350, file: !3, line: 3369, type: !2372)
!9350 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 3368, column: 5)
!9351 = !DILocation(line: 3369, column: 11, scope: !9350)
!9352 = !DILocation(line: 3369, column: 17, scope: !9350)
!9353 = !DILocalVariable(name: "offset", scope: !9350, file: !3, line: 3370, type: !2359)
!9354 = !DILocation(line: 3370, column: 21, scope: !9350)
!9355 = !DILocation(line: 3370, column: 30, scope: !9350)
!9356 = !DILocation(line: 3372, column: 11, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 3372, column: 11)
!9358 = !DILocation(line: 3372, column: 26, scope: !9357)
!9359 = !DILocation(line: 3372, column: 11, scope: !9350)
!9360 = !DILocation(line: 3373, column: 8, scope: !9357)
!9361 = !DILocation(line: 3373, column: 6, scope: !9357)
!9362 = !DILocation(line: 3373, column: 2, scope: !9357)
!9363 = !DILocation(line: 3375, column: 17, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 3375, column: 7)
!9365 = !DILocation(line: 3375, column: 15, scope: !9364)
!9366 = !DILocation(line: 3375, column: 12, scope: !9364)
!9367 = !DILocation(line: 3375, column: 32, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 3375, column: 7)
!9369 = !DILocation(line: 3375, column: 38, scope: !9368)
!9370 = !DILocation(line: 3375, column: 35, scope: !9368)
!9371 = !DILocation(line: 3375, column: 7, scope: !9364)
!9372 = !DILocation(line: 3376, column: 6, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9368, file: !3, line: 3376, column: 6)
!9374 = !DILocation(line: 3376, column: 10, scope: !9373)
!9375 = !DILocation(line: 3376, column: 22, scope: !9373)
!9376 = !DILocation(line: 3376, column: 19, scope: !9373)
!9377 = !DILocation(line: 3376, column: 26, scope: !9373)
!9378 = !DILocation(line: 3376, column: 29, scope: !9373)
!9379 = !DILocation(line: 3376, column: 33, scope: !9373)
!9380 = !DILocation(line: 3376, column: 6, scope: !9368)
!9381 = !DILocalVariable(name: "to_rtx", scope: !9382, file: !3, line: 3378, type: !2372)
!9382 = distinct !DILexicalBlock(scope: !9373, file: !3, line: 3377, column: 4)
!9383 = !DILocation(line: 3378, column: 10, scope: !9382)
!9384 = !DILocation(line: 3378, column: 19, scope: !9382)
!9385 = !DILocation(line: 3378, column: 23, scope: !9382)
!9386 = !DILocation(line: 3379, column: 16, scope: !9382)
!9387 = !DILocation(line: 3379, column: 20, scope: !9382)
!9388 = !DILocation(line: 3379, column: 13, scope: !9382)
!9389 = !DILocation(line: 3380, column: 35, scope: !9382)
!9390 = !DILocation(line: 3380, column: 43, scope: !9382)
!9391 = !DILocation(line: 3380, column: 15, scope: !9382)
!9392 = !DILocation(line: 3380, column: 13, scope: !9382)
!9393 = !DILocation(line: 3382, column: 10, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9382, file: !3, line: 3382, column: 10)
!9395 = !DILocation(line: 3382, column: 44, scope: !9394)
!9396 = !DILocation(line: 3382, column: 10, scope: !9382)
!9397 = !DILocation(line: 3383, column: 17, scope: !9394)
!9398 = !DILocation(line: 3383, column: 30, scope: !9394)
!9399 = !DILocation(line: 3384, column: 9, scope: !9394)
!9400 = !DILocation(line: 3383, column: 15, scope: !9394)
!9401 = !DILocation(line: 3383, column: 8, scope: !9394)
!9402 = !DILocation(line: 3390, column: 10, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9382, file: !3, line: 3390, column: 10)
!9404 = !DILocation(line: 3390, column: 17, scope: !9403)
!9405 = !DILocation(line: 3390, column: 22, scope: !9403)
!9406 = !DILocation(line: 3390, column: 25, scope: !9403)
!9407 = !DILocation(line: 3390, column: 10, scope: !9382)
!9408 = !DILocalVariable(name: "new_src", scope: !9409, file: !3, line: 3392, type: !2372)
!9409 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 3391, column: 8)
!9410 = !DILocation(line: 3392, column: 7, scope: !9409)
!9411 = !DILocation(line: 3392, column: 32, scope: !9409)
!9412 = !DILocation(line: 3392, column: 40, scope: !9409)
!9413 = !DILocation(line: 3392, column: 17, scope: !9409)
!9414 = !DILocation(line: 3394, column: 14, scope: !9409)
!9415 = !DILocation(line: 3394, column: 12, scope: !9409)
!9416 = !DILocation(line: 3395, column: 9, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9409, file: !3, line: 3395, column: 7)
!9418 = !DILocation(line: 3395, column: 7, scope: !9409)
!9419 = !DILocation(line: 3397, column: 29, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9417, file: !3, line: 3396, column: 5)
!9421 = !DILocation(line: 3397, column: 18, scope: !9420)
!9422 = !DILocation(line: 3397, column: 16, scope: !9420)
!9423 = !DILocation(line: 3398, column: 11, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9420, file: !3, line: 3398, column: 11)
!9425 = !DILocation(line: 3398, column: 11, scope: !9420)
!9426 = !DILocation(line: 3399, column: 41, scope: !9424)
!9427 = !DILocation(line: 3399, column: 28, scope: !9424)
!9428 = !DILocation(line: 3399, column: 9, scope: !9424)
!9429 = !DILocation(line: 3399, column: 26, scope: !9424)
!9430 = !DILocation(line: 3400, column: 5, scope: !9420)
!9431 = !DILocation(line: 3401, column: 20, scope: !9409)
!9432 = !DILocation(line: 3401, column: 3, scope: !9409)
!9433 = !DILocation(line: 3401, column: 18, scope: !9409)
!9434 = !DILocation(line: 3402, column: 13, scope: !9409)
!9435 = !DILocation(line: 3402, column: 11, scope: !9409)
!9436 = !DILocation(line: 3410, column: 25, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9409, file: !3, line: 3410, column: 7)
!9438 = !DILocation(line: 3410, column: 32, scope: !9437)
!9439 = !DILocation(line: 3410, column: 51, scope: !9437)
!9440 = !DILocation(line: 3410, column: 8, scope: !9437)
!9441 = !DILocation(line: 3410, column: 7, scope: !9409)
!9442 = !DILocalVariable(name: "new_pat", scope: !9443, file: !3, line: 3412, type: !2372)
!9443 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 3411, column: 5)
!9444 = !DILocation(line: 3412, column: 11, scope: !9443)
!9445 = !DILocation(line: 3412, column: 21, scope: !9443)
!9446 = !DILocation(line: 3415, column: 29, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9443, file: !3, line: 3415, column: 11)
!9448 = !DILocation(line: 3415, column: 36, scope: !9447)
!9449 = !DILocation(line: 3415, column: 52, scope: !9447)
!9450 = !DILocation(line: 3415, column: 12, scope: !9447)
!9451 = !DILocation(line: 3415, column: 11, scope: !9443)
!9452 = !DILocation(line: 3416, column: 29, scope: !9447)
!9453 = !DILocation(line: 3416, column: 9, scope: !9447)
!9454 = !DILocation(line: 3416, column: 27, scope: !9447)
!9455 = !DILocation(line: 3417, column: 5, scope: !9443)
!9456 = !DILocation(line: 3418, column: 8, scope: !9409)
!9457 = !DILocation(line: 3420, column: 8, scope: !9403)
!9458 = !DILocation(line: 3422, column: 10, scope: !9382)
!9459 = !DILocation(line: 3425, column: 6, scope: !9382)
!9460 = !DILocation(line: 3375, column: 76, scope: !9368)
!9461 = !DILocation(line: 3375, column: 7, scope: !9368)
!9462 = distinct !{!9462, !9371, !9463}
!9463 = !DILocation(line: 3426, column: 4, scope: !9364)
!9464 = !DILocation(line: 3427, column: 5, scope: !9350)
!9465 = !DILocation(line: 3430, column: 24, scope: !9036)
!9466 = !DILocation(line: 3430, column: 3, scope: !9036)
!9467 = !DILocation(line: 3434, column: 17, scope: !9036)
!9468 = !DILocation(line: 3434, column: 3, scope: !9036)
!9469 = !DILocation(line: 3435, column: 10, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3435, column: 3)
!9471 = !DILocation(line: 3435, column: 8, scope: !9470)
!9472 = !DILocation(line: 3435, column: 15, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 3435, column: 3)
!9474 = !DILocation(line: 3435, column: 30, scope: !9473)
!9475 = !DILocation(line: 3435, column: 19, scope: !9473)
!9476 = !DILocation(line: 3435, column: 17, scope: !9473)
!9477 = !DILocation(line: 3435, column: 3, scope: !9470)
!9478 = !DILocation(line: 3437, column: 44, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9473, file: !3, line: 3436, column: 5)
!9480 = !DILocation(line: 3437, column: 25, scope: !9479)
!9481 = !DILocation(line: 3437, column: 20, scope: !9479)
!9482 = !DILocation(line: 3437, column: 7, scope: !9479)
!9483 = !DILocation(line: 3437, column: 23, scope: !9479)
!9484 = !DILocation(line: 3438, column: 47, scope: !9479)
!9485 = !DILocation(line: 3438, column: 28, scope: !9479)
!9486 = !DILocation(line: 3438, column: 23, scope: !9479)
!9487 = !DILocation(line: 3438, column: 7, scope: !9479)
!9488 = !DILocation(line: 3438, column: 26, scope: !9479)
!9489 = !DILocation(line: 3441, column: 11, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9479, file: !3, line: 3441, column: 11)
!9491 = !DILocation(line: 3441, column: 23, scope: !9490)
!9492 = !DILocation(line: 3441, column: 36, scope: !9490)
!9493 = !DILocation(line: 3441, column: 26, scope: !9490)
!9494 = !DILocation(line: 3441, column: 43, scope: !9490)
!9495 = !DILocation(line: 3441, column: 51, scope: !9490)
!9496 = !DILocation(line: 3441, column: 54, scope: !9490)
!9497 = !DILocation(line: 3441, column: 11, scope: !9479)
!9498 = !DILocalVariable(name: "is_set_src", scope: !9499, file: !3, line: 3443, type: !2603)
!9499 = distinct !DILexicalBlock(scope: !9490, file: !3, line: 3442, column: 2)
!9500 = !DILocation(line: 3443, column: 9, scope: !9499)
!9501 = !DILocalVariable(name: "in_plus", scope: !9499, file: !3, line: 3443, type: !2603)
!9502 = !DILocation(line: 3443, column: 21, scope: !9499)
!9503 = !DILocation(line: 3446, column: 32, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 3446, column: 8)
!9505 = !DILocation(line: 3446, column: 8, scope: !9504)
!9506 = !DILocation(line: 3446, column: 35, scope: !9504)
!9507 = !DILocation(line: 3447, column: 8, scope: !9504)
!9508 = !DILocation(line: 3447, column: 11, scope: !9504)
!9509 = !DILocation(line: 3446, column: 8, scope: !9499)
!9510 = !DILocation(line: 3453, column: 18, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9512, file: !3, line: 3453, column: 8)
!9512 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 3448, column: 6)
!9513 = !DILocation(line: 3453, column: 16, scope: !9511)
!9514 = !DILocation(line: 3453, column: 13, scope: !9511)
!9515 = !DILocation(line: 3453, column: 33, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 3453, column: 8)
!9517 = !DILocation(line: 3453, column: 39, scope: !9516)
!9518 = !DILocation(line: 3453, column: 36, scope: !9516)
!9519 = !DILocation(line: 3453, column: 8, scope: !9511)
!9520 = !DILocation(line: 3455, column: 7, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9516, file: !3, line: 3455, column: 7)
!9522 = !DILocation(line: 3455, column: 11, scope: !9521)
!9523 = !DILocation(line: 3455, column: 36, scope: !9521)
!9524 = !DILocation(line: 3455, column: 23, scope: !9521)
!9525 = !DILocation(line: 3455, column: 20, scope: !9521)
!9526 = !DILocation(line: 3455, column: 7, scope: !9516)
!9527 = !DILocation(line: 3456, column: 5, scope: !9521)
!9528 = !DILocation(line: 3456, column: 9, scope: !9521)
!9529 = !DILocation(line: 3456, column: 23, scope: !9521)
!9530 = !DILocation(line: 3455, column: 37, scope: !9521)
!9531 = !DILocation(line: 3454, column: 8, scope: !9516)
!9532 = !DILocation(line: 3453, column: 8, scope: !9516)
!9533 = distinct !{!9533, !9519, !9534}
!9534 = !DILocation(line: 3456, column: 25, scope: !9511)
!9535 = !DILocation(line: 3457, column: 6, scope: !9512)
!9536 = !DILocation(line: 3461, column: 15, scope: !9499)
!9537 = !DILocation(line: 3462, column: 8, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 3462, column: 8)
!9539 = !DILocation(line: 3462, column: 16, scope: !9538)
!9540 = !DILocation(line: 3462, column: 42, scope: !9538)
!9541 = !DILocation(line: 3462, column: 19, scope: !9538)
!9542 = !DILocation(line: 3462, column: 49, scope: !9538)
!9543 = !DILocation(line: 3462, column: 45, scope: !9538)
!9544 = !DILocation(line: 3462, column: 8, scope: !9499)
!9545 = !DILocation(line: 3463, column: 17, scope: !9538)
!9546 = !DILocation(line: 3463, column: 6, scope: !9538)
!9547 = !DILocation(line: 3464, column: 12, scope: !9499)
!9548 = !DILocation(line: 3465, column: 8, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 3465, column: 8)
!9550 = !DILocation(line: 3466, column: 8, scope: !9549)
!9551 = !DILocation(line: 3466, column: 35, scope: !9549)
!9552 = !DILocation(line: 3466, column: 12, scope: !9549)
!9553 = !DILocation(line: 3466, column: 42, scope: !9549)
!9554 = !DILocation(line: 3466, column: 38, scope: !9549)
!9555 = !DILocation(line: 3467, column: 5, scope: !9549)
!9556 = !DILocation(line: 3467, column: 31, scope: !9549)
!9557 = !DILocation(line: 3467, column: 8, scope: !9549)
!9558 = !DILocation(line: 3467, column: 38, scope: !9549)
!9559 = !DILocation(line: 3467, column: 34, scope: !9549)
!9560 = !DILocation(line: 3465, column: 8, scope: !9499)
!9561 = !DILocation(line: 3468, column: 14, scope: !9549)
!9562 = !DILocation(line: 3468, column: 6, scope: !9549)
!9563 = !DILocation(line: 3471, column: 45, scope: !9499)
!9564 = !DILocation(line: 3471, column: 26, scope: !9499)
!9565 = !DILocation(line: 3472, column: 12, scope: !9499)
!9566 = !DILocation(line: 3472, column: 22, scope: !9499)
!9567 = !DILocation(line: 3473, column: 5, scope: !9499)
!9568 = !DILocation(line: 3473, column: 16, scope: !9499)
!9569 = !DILocation(line: 3473, column: 19, scope: !9499)
!9570 = !DILocation(line: 3471, column: 8, scope: !9499)
!9571 = !DILocation(line: 3470, column: 20, scope: !9499)
!9572 = !DILocation(line: 3470, column: 4, scope: !9499)
!9573 = !DILocation(line: 3471, column: 6, scope: !9499)
!9574 = !DILocation(line: 3474, column: 24, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 3474, column: 8)
!9576 = !DILocation(line: 3474, column: 8, scope: !9575)
!9577 = !DILocation(line: 3474, column: 43, scope: !9575)
!9578 = !DILocation(line: 3474, column: 30, scope: !9575)
!9579 = !DILocation(line: 3474, column: 27, scope: !9575)
!9580 = !DILocation(line: 3474, column: 8, scope: !9499)
!9581 = !DILocation(line: 3475, column: 10, scope: !9575)
!9582 = !DILocation(line: 3475, column: 6, scope: !9575)
!9583 = !DILocation(line: 3478, column: 28, scope: !9499)
!9584 = !DILocation(line: 3478, column: 5, scope: !9499)
!9585 = !DILocation(line: 3478, column: 31, scope: !9499)
!9586 = !DILocation(line: 3482, column: 32, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 3482, column: 8)
!9588 = !DILocation(line: 3482, column: 8, scope: !9587)
!9589 = !DILocation(line: 3482, column: 35, scope: !9587)
!9590 = !DILocation(line: 3483, column: 8, scope: !9587)
!9591 = !DILocation(line: 3483, column: 11, scope: !9587)
!9592 = !DILocation(line: 3484, column: 8, scope: !9587)
!9593 = !DILocation(line: 3484, column: 11, scope: !9587)
!9594 = !DILocation(line: 3485, column: 8, scope: !9587)
!9595 = !DILocation(line: 3485, column: 11, scope: !9587)
!9596 = !DILocation(line: 3482, column: 8, scope: !9499)
!9597 = !DILocation(line: 3486, column: 49, scope: !9587)
!9598 = !DILocation(line: 3486, column: 36, scope: !9587)
!9599 = !DILocation(line: 3486, column: 23, scope: !9587)
!9600 = !DILocation(line: 3486, column: 54, scope: !9587)
!9601 = !DILocation(line: 3486, column: 6, scope: !9587)
!9602 = !DILocation(line: 3487, column: 2, scope: !9499)
!9603 = !DILocation(line: 3488, column: 5, scope: !9479)
!9604 = !DILocation(line: 3435, column: 43, scope: !9473)
!9605 = !DILocation(line: 3435, column: 3, scope: !9473)
!9606 = distinct !{!9606, !9477, !9607}
!9607 = !DILocation(line: 3488, column: 5, scope: !9470)
!9608 = !DILocation(line: 3490, column: 10, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3490, column: 3)
!9610 = !DILocation(line: 3490, column: 8, scope: !9609)
!9611 = !DILocation(line: 3490, column: 15, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 3490, column: 3)
!9613 = !DILocation(line: 3490, column: 30, scope: !9612)
!9614 = !DILocation(line: 3490, column: 19, scope: !9612)
!9615 = !DILocation(line: 3490, column: 17, scope: !9612)
!9616 = !DILocation(line: 3490, column: 3, scope: !9609)
!9617 = !DILocation(line: 3492, column: 58, scope: !9612)
!9618 = !DILocation(line: 3492, column: 39, scope: !9612)
!9619 = !DILocation(line: 3492, column: 33, scope: !9612)
!9620 = !DILocation(line: 3492, column: 10, scope: !9612)
!9621 = !DILocation(line: 3492, column: 9, scope: !9612)
!9622 = !DILocation(line: 3491, column: 25, scope: !9612)
!9623 = !DILocation(line: 3491, column: 6, scope: !9612)
!9624 = !DILocation(line: 3492, column: 7, scope: !9612)
!9625 = !DILocation(line: 3491, column: 5, scope: !9612)
!9626 = !DILocation(line: 3490, column: 39, scope: !9612)
!9627 = !DILocation(line: 3490, column: 3, scope: !9612)
!9628 = distinct !{!9628, !9616, !9629}
!9629 = !DILocation(line: 3492, column: 60, scope: !9609)
!9630 = !DILocation(line: 3495, column: 33, scope: !9036)
!9631 = !DILocation(line: 3495, column: 3, scope: !9036)
!9632 = !DILocation(line: 3499, column: 10, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3499, column: 3)
!9634 = !DILocation(line: 3499, column: 8, scope: !9633)
!9635 = !DILocation(line: 3499, column: 15, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 3499, column: 3)
!9637 = !DILocation(line: 3499, column: 30, scope: !9636)
!9638 = !DILocation(line: 3499, column: 19, scope: !9636)
!9639 = !DILocation(line: 3499, column: 17, scope: !9636)
!9640 = !DILocation(line: 3499, column: 3, scope: !9633)
!9641 = !DILocation(line: 3500, column: 50, scope: !9636)
!9642 = !DILocation(line: 3500, column: 34, scope: !9636)
!9643 = !DILocation(line: 3500, column: 29, scope: !9636)
!9644 = !DILocation(line: 3500, column: 6, scope: !9636)
!9645 = !DILocation(line: 3500, column: 32, scope: !9636)
!9646 = !DILocation(line: 3500, column: 5, scope: !9636)
!9647 = !DILocation(line: 3499, column: 43, scope: !9636)
!9648 = !DILocation(line: 3499, column: 3, scope: !9636)
!9649 = distinct !{!9649, !9640, !9650}
!9650 = !DILocation(line: 3500, column: 51, scope: !9633)
!9651 = !DILocation(line: 3501, column: 10, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3501, column: 3)
!9653 = !DILocation(line: 3501, column: 8, scope: !9652)
!9654 = !DILocation(line: 3501, column: 15, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 3501, column: 3)
!9656 = !DILocation(line: 3501, column: 30, scope: !9655)
!9657 = !DILocation(line: 3501, column: 19, scope: !9655)
!9658 = !DILocation(line: 3501, column: 17, scope: !9655)
!9659 = !DILocation(line: 3501, column: 3, scope: !9652)
!9660 = !DILocation(line: 3502, column: 71, scope: !9655)
!9661 = !DILocation(line: 3502, column: 52, scope: !9655)
!9662 = !DILocation(line: 3502, column: 46, scope: !9655)
!9663 = !DILocation(line: 3502, column: 30, scope: !9655)
!9664 = !DILocation(line: 3502, column: 25, scope: !9655)
!9665 = !DILocation(line: 3502, column: 6, scope: !9655)
!9666 = !DILocation(line: 3502, column: 28, scope: !9655)
!9667 = !DILocation(line: 3502, column: 5, scope: !9655)
!9668 = !DILocation(line: 3501, column: 39, scope: !9655)
!9669 = !DILocation(line: 3501, column: 3, scope: !9655)
!9670 = distinct !{!9670, !9659, !9671}
!9671 = !DILocation(line: 3502, column: 73, scope: !9652)
!9672 = !DILocation(line: 3513, column: 7, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3513, column: 7)
!9674 = !DILocation(line: 3513, column: 7, scope: !9036)
!9675 = !DILocation(line: 3519, column: 18, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9673, file: !3, line: 3514, column: 5)
!9677 = !DILocation(line: 3519, column: 16, scope: !9676)
!9678 = !DILocation(line: 3520, column: 13, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 3520, column: 11)
!9680 = !DILocation(line: 3520, column: 11, scope: !9676)
!9681 = !DILocation(line: 3522, column: 26, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9679, file: !3, line: 3521, column: 2)
!9683 = !DILocation(line: 3522, column: 15, scope: !9682)
!9684 = !DILocation(line: 3522, column: 13, scope: !9682)
!9685 = !DILocation(line: 3523, column: 8, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 3523, column: 8)
!9687 = !DILocation(line: 3523, column: 8, scope: !9682)
!9688 = !DILocation(line: 3524, column: 38, scope: !9686)
!9689 = !DILocation(line: 3524, column: 25, scope: !9686)
!9690 = !DILocation(line: 3524, column: 6, scope: !9686)
!9691 = !DILocation(line: 3524, column: 23, scope: !9686)
!9692 = !DILocation(line: 3525, column: 2, scope: !9682)
!9693 = !DILocation(line: 3526, column: 24, scope: !9676)
!9694 = !DILocation(line: 3526, column: 7, scope: !9676)
!9695 = !DILocation(line: 3526, column: 22, scope: !9676)
!9696 = !DILocation(line: 3535, column: 13, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 3535, column: 11)
!9698 = !DILocation(line: 3536, column: 4, scope: !9697)
!9699 = !DILocation(line: 3536, column: 7, scope: !9697)
!9700 = !DILocation(line: 3536, column: 15, scope: !9697)
!9701 = !DILocation(line: 3537, column: 4, scope: !9697)
!9702 = !DILocation(line: 3537, column: 9, scope: !9697)
!9703 = !DILocation(line: 3538, column: 9, scope: !9697)
!9704 = !DILocation(line: 3538, column: 13, scope: !9697)
!9705 = !DILocation(line: 3538, column: 33, scope: !9697)
!9706 = !DILocation(line: 3539, column: 6, scope: !9697)
!9707 = !DILocation(line: 3539, column: 10, scope: !9697)
!9708 = !DILocation(line: 3543, column: 8, scope: !9697)
!9709 = !DILocation(line: 3543, column: 12, scope: !9697)
!9710 = !DILocation(line: 3543, column: 20, scope: !9697)
!9711 = !DILocation(line: 3544, column: 5, scope: !9697)
!9712 = !DILocation(line: 3544, column: 10, scope: !9697)
!9713 = !DILocation(line: 3545, column: 10, scope: !9697)
!9714 = !DILocation(line: 3545, column: 13, scope: !9697)
!9715 = !DILocation(line: 3545, column: 34, scope: !9697)
!9716 = !DILocation(line: 3545, column: 31, scope: !9697)
!9717 = !DILocation(line: 3546, column: 9, scope: !9697)
!9718 = !DILocation(line: 3546, column: 13, scope: !9697)
!9719 = !DILocation(line: 3547, column: 6, scope: !9697)
!9720 = !DILocation(line: 3547, column: 9, scope: !9697)
!9721 = !DILocation(line: 3547, column: 31, scope: !9697)
!9722 = !DILocation(line: 3547, column: 28, scope: !9697)
!9723 = !DILocation(line: 3549, column: 8, scope: !9697)
!9724 = !DILocation(line: 3549, column: 11, scope: !9697)
!9725 = !DILocation(line: 3549, column: 40, scope: !9697)
!9726 = !DILocation(line: 3535, column: 11, scope: !9676)
!9727 = !DILocalVariable(name: "new_icode", scope: !9728, file: !3, line: 3551, type: !2396)
!9728 = distinct !DILexicalBlock(scope: !9697, file: !3, line: 3550, column: 2)
!9729 = !DILocation(line: 3551, column: 8, scope: !9728)
!9730 = !DILocation(line: 3551, column: 27, scope: !9728)
!9731 = !DILocation(line: 3551, column: 43, scope: !9728)
!9732 = !DILocation(line: 3551, column: 20, scope: !9728)
!9733 = !DILocation(line: 3552, column: 8, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9728, file: !3, line: 3552, column: 8)
!9735 = !DILocation(line: 3552, column: 18, scope: !9734)
!9736 = !DILocation(line: 3552, column: 8, scope: !9728)
!9737 = !DILocation(line: 3553, column: 25, scope: !9734)
!9738 = !DILocation(line: 3553, column: 6, scope: !9734)
!9739 = !DILocation(line: 3553, column: 23, scope: !9734)
!9740 = !DILocation(line: 3554, column: 2, scope: !9728)
!9741 = !DILocation(line: 3555, column: 5, scope: !9676)
!9742 = !DILocation(line: 3560, column: 9, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3560, column: 7)
!9744 = !DILocation(line: 3560, column: 7, scope: !9036)
!9745 = !DILocation(line: 3563, column: 14, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9747, file: !3, line: 3563, column: 7)
!9747 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 3561, column: 5)
!9748 = !DILocation(line: 3563, column: 12, scope: !9746)
!9749 = !DILocation(line: 3563, column: 19, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9746, file: !3, line: 3563, column: 7)
!9751 = !DILocation(line: 3563, column: 34, scope: !9750)
!9752 = !DILocation(line: 3563, column: 23, scope: !9750)
!9753 = !DILocation(line: 3563, column: 21, scope: !9750)
!9754 = !DILocation(line: 3563, column: 7, scope: !9746)
!9755 = !DILocation(line: 3564, column: 44, scope: !9750)
!9756 = !DILocation(line: 3564, column: 31, scope: !9750)
!9757 = !DILocation(line: 3564, column: 26, scope: !9750)
!9758 = !DILocation(line: 3564, column: 3, scope: !9750)
!9759 = !DILocation(line: 3564, column: 29, scope: !9750)
!9760 = !DILocation(line: 3564, column: 2, scope: !9750)
!9761 = !DILocation(line: 3563, column: 47, scope: !9750)
!9762 = !DILocation(line: 3563, column: 7, scope: !9750)
!9763 = distinct !{!9763, !9754, !9764}
!9764 = !DILocation(line: 3564, column: 45, scope: !9746)
!9765 = !DILocation(line: 3565, column: 14, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9747, file: !3, line: 3565, column: 7)
!9767 = !DILocation(line: 3565, column: 12, scope: !9766)
!9768 = !DILocation(line: 3565, column: 19, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 3565, column: 7)
!9770 = !DILocation(line: 3565, column: 34, scope: !9769)
!9771 = !DILocation(line: 3565, column: 23, scope: !9769)
!9772 = !DILocation(line: 3565, column: 21, scope: !9769)
!9773 = !DILocation(line: 3565, column: 7, scope: !9766)
!9774 = !DILocation(line: 3566, column: 65, scope: !9769)
!9775 = !DILocation(line: 3566, column: 46, scope: !9769)
!9776 = !DILocation(line: 3566, column: 40, scope: !9769)
!9777 = !DILocation(line: 3566, column: 27, scope: !9769)
!9778 = !DILocation(line: 3566, column: 22, scope: !9769)
!9779 = !DILocation(line: 3566, column: 3, scope: !9769)
!9780 = !DILocation(line: 3566, column: 25, scope: !9769)
!9781 = !DILocation(line: 3566, column: 2, scope: !9769)
!9782 = !DILocation(line: 3565, column: 43, scope: !9769)
!9783 = !DILocation(line: 3565, column: 7, scope: !9769)
!9784 = distinct !{!9784, !9773, !9785}
!9785 = !DILocation(line: 3566, column: 67, scope: !9766)
!9786 = !DILocation(line: 3567, column: 5, scope: !9747)
!9787 = !DILocation(line: 3582, column: 13, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3582, column: 3)
!9789 = !DILocation(line: 3582, column: 11, scope: !9788)
!9790 = !DILocation(line: 3582, column: 8, scope: !9788)
!9791 = !DILocation(line: 3582, column: 28, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9788, file: !3, line: 3582, column: 3)
!9793 = !DILocation(line: 3582, column: 34, scope: !9792)
!9794 = !DILocation(line: 3582, column: 31, scope: !9792)
!9795 = !DILocation(line: 3582, column: 3, scope: !9788)
!9796 = !DILocation(line: 3584, column: 11, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 3584, column: 11)
!9798 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 3583, column: 5)
!9799 = !DILocation(line: 3584, column: 15, scope: !9797)
!9800 = !DILocation(line: 3584, column: 34, scope: !9797)
!9801 = !DILocation(line: 3584, column: 38, scope: !9797)
!9802 = !DILocation(line: 3584, column: 31, scope: !9797)
!9803 = !DILocation(line: 3584, column: 45, scope: !9797)
!9804 = !DILocation(line: 3584, column: 48, scope: !9797)
!9805 = !DILocation(line: 3584, column: 52, scope: !9797)
!9806 = !DILocation(line: 3584, column: 11, scope: !9798)
!9807 = !DILocation(line: 3585, column: 2, scope: !9797)
!9808 = !DILocation(line: 3585, column: 6, scope: !9797)
!9809 = !DILocation(line: 3585, column: 20, scope: !9797)
!9810 = !DILocation(line: 3587, column: 7, scope: !9798)
!9811 = !DILocation(line: 3587, column: 11, scope: !9798)
!9812 = !DILocation(line: 3587, column: 27, scope: !9798)
!9813 = !DILocation(line: 3589, column: 11, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 3589, column: 11)
!9815 = !DILocation(line: 3589, column: 15, scope: !9814)
!9816 = !DILocation(line: 3589, column: 34, scope: !9814)
!9817 = !DILocation(line: 3589, column: 38, scope: !9814)
!9818 = !DILocation(line: 3589, column: 31, scope: !9814)
!9819 = !DILocation(line: 3589, column: 11, scope: !9798)
!9820 = !DILocation(line: 3590, column: 6, scope: !9814)
!9821 = !DILocation(line: 3590, column: 2, scope: !9814)
!9822 = !DILocation(line: 3591, column: 5, scope: !9798)
!9823 = !DILocation(line: 3582, column: 72, scope: !9792)
!9824 = !DILocation(line: 3582, column: 3, scope: !9792)
!9825 = distinct !{!9825, !9795, !9826}
!9826 = !DILocation(line: 3591, column: 5, scope: !9788)
!9827 = !DILabel(scope: !9036, name: "done", file: !3, line: 3593)
!9828 = !DILocation(line: 3593, column: 2, scope: !9036)
!9829 = !DILocation(line: 3599, column: 7, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 3599, column: 7)
!9831 = !DILocation(line: 3599, column: 11, scope: !9830)
!9832 = !DILocation(line: 3599, column: 14, scope: !9830)
!9833 = !DILocation(line: 3599, column: 31, scope: !9830)
!9834 = !DILocation(line: 3599, column: 7, scope: !9036)
!9835 = !DILocation(line: 3601, column: 27, scope: !9830)
!9836 = !DILocation(line: 3601, column: 55, scope: !9830)
!9837 = !DILocation(line: 3601, column: 9, scope: !9830)
!9838 = !DILocation(line: 3600, column: 5, scope: !9830)
!9839 = !DILocation(line: 3601, column: 7, scope: !9830)
!9840 = !DILocation(line: 3603, column: 10, scope: !9036)
!9841 = !DILocation(line: 3603, column: 3, scope: !9036)
!9842 = !DILocation(line: 3604, column: 1, scope: !9036)
!9843 = distinct !DISubprogram(name: "update_eliminable_offsets", scope: !3, file: !3, line: 3613, type: !3871, scopeLine: 3614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!9844 = !DILocalVariable(name: "ep", scope: !9843, file: !3, line: 3615, type: !3605)
!9845 = !DILocation(line: 3615, column: 22, scope: !9843)
!9846 = !DILocation(line: 3617, column: 29, scope: !9843)
!9847 = !DILocation(line: 3618, column: 13, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 3618, column: 3)
!9849 = !DILocation(line: 3618, column: 11, scope: !9848)
!9850 = !DILocation(line: 3618, column: 8, scope: !9848)
!9851 = !DILocation(line: 3618, column: 28, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 3618, column: 3)
!9853 = !DILocation(line: 3618, column: 34, scope: !9852)
!9854 = !DILocation(line: 3618, column: 31, scope: !9852)
!9855 = !DILocation(line: 3618, column: 3, scope: !9848)
!9856 = !DILocation(line: 3620, column: 29, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 3619, column: 5)
!9858 = !DILocation(line: 3620, column: 33, scope: !9857)
!9859 = !DILocation(line: 3620, column: 7, scope: !9857)
!9860 = !DILocation(line: 3620, column: 11, scope: !9857)
!9861 = !DILocation(line: 3620, column: 27, scope: !9857)
!9862 = !DILocation(line: 3621, column: 11, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9857, file: !3, line: 3621, column: 11)
!9864 = !DILocation(line: 3621, column: 15, scope: !9863)
!9865 = !DILocation(line: 3621, column: 29, scope: !9863)
!9866 = !DILocation(line: 3621, column: 32, scope: !9863)
!9867 = !DILocation(line: 3621, column: 36, scope: !9863)
!9868 = !DILocation(line: 3621, column: 46, scope: !9863)
!9869 = !DILocation(line: 3621, column: 50, scope: !9863)
!9870 = !DILocation(line: 3621, column: 43, scope: !9863)
!9871 = !DILocation(line: 3621, column: 11, scope: !9857)
!9872 = !DILocation(line: 3622, column: 27, scope: !9863)
!9873 = !DILocation(line: 3622, column: 2, scope: !9863)
!9874 = !DILocation(line: 3623, column: 5, scope: !9857)
!9875 = !DILocation(line: 3618, column: 72, scope: !9852)
!9876 = !DILocation(line: 3618, column: 3, scope: !9852)
!9877 = distinct !{!9877, !9855, !9878}
!9878 = !DILocation(line: 3623, column: 5, scope: !9848)
!9879 = !DILocation(line: 3624, column: 1, scope: !9843)
!9880 = distinct !DISubprogram(name: "copy_reloads", scope: !3, file: !3, line: 1592, type: !9881, scopeLine: 1593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!9881 = !DISubroutineType(types: !9882)
!9882 = !{null, !2365}
!9883 = !DILocalVariable(name: "chain", arg: 1, scope: !9880, file: !3, line: 1592, type: !2365)
!9884 = !DILocation(line: 1592, column: 34, scope: !9880)
!9885 = !DILocation(line: 1594, column: 22, scope: !9880)
!9886 = !DILocation(line: 1594, column: 3, scope: !9880)
!9887 = !DILocation(line: 1594, column: 10, scope: !9880)
!9888 = !DILocation(line: 1594, column: 20, scope: !9880)
!9889 = !DILocation(line: 1595, column: 16, scope: !9880)
!9890 = !DILocation(line: 1595, column: 3, scope: !9880)
!9891 = !DILocation(line: 1595, column: 10, scope: !9880)
!9892 = !DILocation(line: 1595, column: 14, scope: !9880)
!9893 = !DILocation(line: 1596, column: 11, scope: !9880)
!9894 = !DILocation(line: 1596, column: 18, scope: !9880)
!9895 = !DILocation(line: 1596, column: 3, scope: !9880)
!9896 = !DILocation(line: 1596, column: 28, scope: !9880)
!9897 = !DILocation(line: 1596, column: 38, scope: !9880)
!9898 = !DILocation(line: 1597, column: 26, scope: !9880)
!9899 = !DILocation(line: 1597, column: 24, scope: !9880)
!9900 = !DILocation(line: 1598, column: 1, scope: !9880)
!9901 = distinct !DISubprogram(name: "set_offsets_for_label", scope: !3, file: !3, line: 3753, type: !5596, scopeLine: 3754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!9902 = !DILocalVariable(name: "insn", arg: 1, scope: !9901, file: !3, line: 3753, type: !2372)
!9903 = !DILocation(line: 3753, column: 28, scope: !9901)
!9904 = !DILocalVariable(name: "i", scope: !9901, file: !3, line: 3755, type: !7)
!9905 = !DILocation(line: 3755, column: 16, scope: !9901)
!9906 = !DILocalVariable(name: "label_nr", scope: !9901, file: !3, line: 3756, type: !2396)
!9907 = !DILocation(line: 3756, column: 7, scope: !9901)
!9908 = !DILocation(line: 3756, column: 18, scope: !9901)
!9909 = !DILocalVariable(name: "ep", scope: !9901, file: !3, line: 3757, type: !3605)
!9910 = !DILocation(line: 3757, column: 22, scope: !9901)
!9911 = !DILocation(line: 3759, column: 29, scope: !9901)
!9912 = !DILocation(line: 3760, column: 10, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 3760, column: 3)
!9914 = !DILocation(line: 3760, column: 20, scope: !9913)
!9915 = !DILocation(line: 3760, column: 18, scope: !9913)
!9916 = !DILocation(line: 3760, column: 8, scope: !9913)
!9917 = !DILocation(line: 3760, column: 35, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9913, file: !3, line: 3760, column: 3)
!9919 = !DILocation(line: 3760, column: 37, scope: !9918)
!9920 = !DILocation(line: 3760, column: 3, scope: !9913)
!9921 = !DILocation(line: 3763, column: 6, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 3761, column: 5)
!9923 = !DILocation(line: 3763, column: 17, scope: !9922)
!9924 = !DILocation(line: 3763, column: 28, scope: !9922)
!9925 = !DILocation(line: 3763, column: 26, scope: !9922)
!9926 = !DILocation(line: 3763, column: 45, scope: !9922)
!9927 = !DILocation(line: 3762, column: 20, scope: !9922)
!9928 = !DILocation(line: 3762, column: 24, scope: !9922)
!9929 = !DILocation(line: 3763, column: 4, scope: !9922)
!9930 = !DILocation(line: 3762, column: 7, scope: !9922)
!9931 = !DILocation(line: 3762, column: 11, scope: !9922)
!9932 = !DILocation(line: 3762, column: 18, scope: !9922)
!9933 = !DILocation(line: 3764, column: 11, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9922, file: !3, line: 3764, column: 11)
!9935 = !DILocation(line: 3764, column: 15, scope: !9934)
!9936 = !DILocation(line: 3764, column: 29, scope: !9934)
!9937 = !DILocation(line: 3764, column: 32, scope: !9934)
!9938 = !DILocation(line: 3764, column: 36, scope: !9934)
!9939 = !DILocation(line: 3764, column: 46, scope: !9934)
!9940 = !DILocation(line: 3764, column: 50, scope: !9934)
!9941 = !DILocation(line: 3764, column: 43, scope: !9934)
!9942 = !DILocation(line: 3764, column: 11, scope: !9922)
!9943 = !DILocation(line: 3765, column: 27, scope: !9934)
!9944 = !DILocation(line: 3765, column: 2, scope: !9934)
!9945 = !DILocation(line: 3766, column: 5, scope: !9922)
!9946 = !DILocation(line: 3760, column: 62, scope: !9918)
!9947 = !DILocation(line: 3760, column: 67, scope: !9918)
!9948 = !DILocation(line: 3760, column: 3, scope: !9918)
!9949 = distinct !{!9949, !9920, !9950}
!9950 = !DILocation(line: 3766, column: 5, scope: !9913)
!9951 = !DILocation(line: 3767, column: 1, scope: !9901)
!9952 = distinct !DISubprogram(name: "recog_memoized", scope: !2164, file: !2164, line: 150, type: !9953, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!9953 = !DISubroutineType(types: !9954)
!9954 = !{!2396, !2372}
!9955 = !DILocalVariable(name: "insn", arg: 1, scope: !9952, file: !2164, line: 150, type: !2372)
!9956 = !DILocation(line: 150, column: 21, scope: !9952)
!9957 = !DILocation(line: 152, column: 7, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9952, file: !2164, line: 152, column: 7)
!9959 = !DILocation(line: 152, column: 24, scope: !9958)
!9960 = !DILocation(line: 152, column: 7, scope: !9952)
!9961 = !DILocation(line: 153, column: 31, scope: !9958)
!9962 = !DILocation(line: 153, column: 47, scope: !9958)
!9963 = !DILocation(line: 153, column: 24, scope: !9958)
!9964 = !DILocation(line: 153, column: 5, scope: !9958)
!9965 = !DILocation(line: 153, column: 22, scope: !9958)
!9966 = !DILocation(line: 154, column: 10, scope: !9952)
!9967 = !DILocation(line: 154, column: 3, scope: !9952)
!9968 = distinct !DISubprogram(name: "elimination_effects", scope: !3, file: !3, line: 2952, type: !9969, scopeLine: 2953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!9969 = !DISubroutineType(types: !9970)
!9970 = !{null, !2372, !5}
!9971 = !DILocalVariable(name: "x", arg: 1, scope: !9968, file: !3, line: 2952, type: !2372)
!9972 = !DILocation(line: 2952, column: 26, scope: !9968)
!9973 = !DILocalVariable(name: "mem_mode", arg: 2, scope: !9968, file: !3, line: 2952, type: !5)
!9974 = !DILocation(line: 2952, column: 47, scope: !9968)
!9975 = !DILocalVariable(name: "code", scope: !9968, file: !3, line: 2954, type: !384)
!9976 = !DILocation(line: 2954, column: 17, scope: !9968)
!9977 = !DILocation(line: 2954, column: 24, scope: !9968)
!9978 = !DILocalVariable(name: "ep", scope: !9968, file: !3, line: 2955, type: !3605)
!9979 = !DILocation(line: 2955, column: 22, scope: !9968)
!9980 = !DILocalVariable(name: "regno", scope: !9968, file: !3, line: 2956, type: !2396)
!9981 = !DILocation(line: 2956, column: 7, scope: !9968)
!9982 = !DILocalVariable(name: "i", scope: !9968, file: !3, line: 2957, type: !2396)
!9983 = !DILocation(line: 2957, column: 7, scope: !9968)
!9984 = !DILocalVariable(name: "j", scope: !9968, file: !3, line: 2957, type: !2396)
!9985 = !DILocation(line: 2957, column: 10, scope: !9968)
!9986 = !DILocalVariable(name: "fmt", scope: !9968, file: !3, line: 2958, type: !2399)
!9987 = !DILocation(line: 2958, column: 15, scope: !9968)
!9988 = !DILocation(line: 2960, column: 11, scope: !9968)
!9989 = !DILocation(line: 2960, column: 3, scope: !9968)
!9990 = !DILocation(line: 2975, column: 7, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 2961, column: 5)
!9992 = !DILocation(line: 2978, column: 15, scope: !9991)
!9993 = !DILocation(line: 2978, column: 13, scope: !9991)
!9994 = !DILocation(line: 2982, column: 11, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 2982, column: 11)
!9996 = !DILocation(line: 2982, column: 17, scope: !9995)
!9997 = !DILocation(line: 2982, column: 11, scope: !9991)
!9998 = !DILocation(line: 2984, column: 14, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 2984, column: 4)
!10000 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 2983, column: 2)
!10001 = !DILocation(line: 2984, column: 12, scope: !9999)
!10002 = !DILocation(line: 2984, column: 9, scope: !9999)
!10003 = !DILocation(line: 2984, column: 29, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9999, file: !3, line: 2984, column: 4)
!10005 = !DILocation(line: 2984, column: 35, scope: !10004)
!10006 = !DILocation(line: 2984, column: 32, scope: !10004)
!10007 = !DILocation(line: 2984, column: 4, scope: !9999)
!10008 = !DILocation(line: 2986, column: 10, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2986, column: 10)
!10010 = !DILocation(line: 2986, column: 14, scope: !10009)
!10011 = !DILocation(line: 2986, column: 26, scope: !10009)
!10012 = !DILocation(line: 2986, column: 23, scope: !10009)
!10013 = !DILocation(line: 2986, column: 28, scope: !10009)
!10014 = !DILocation(line: 2986, column: 31, scope: !10009)
!10015 = !DILocation(line: 2986, column: 35, scope: !10009)
!10016 = !DILocation(line: 2986, column: 10, scope: !10004)
!10017 = !DILocation(line: 2988, column: 9, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 2988, column: 7)
!10019 = distinct !DILexicalBlock(scope: !10009, file: !3, line: 2987, column: 8)
!10020 = !DILocation(line: 2988, column: 7, scope: !10019)
!10021 = !DILocation(line: 2989, column: 5, scope: !10018)
!10022 = !DILocation(line: 2989, column: 9, scope: !10018)
!10023 = !DILocation(line: 2989, column: 25, scope: !10018)
!10024 = !DILocation(line: 2990, column: 3, scope: !10019)
!10025 = !DILocation(line: 2985, column: 11, scope: !10004)
!10026 = !DILocation(line: 2984, column: 4, scope: !10004)
!10027 = distinct !{!10027, !10007, !10028}
!10028 = !DILocation(line: 2991, column: 8, scope: !9999)
!10029 = !DILocation(line: 2993, column: 2, scope: !10000)
!10030 = !DILocation(line: 2994, column: 16, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 2994, column: 16)
!10032 = !DILocation(line: 2994, column: 29, scope: !10031)
!10033 = !DILocation(line: 2994, column: 36, scope: !10031)
!10034 = !DILocation(line: 2994, column: 40, scope: !10031)
!10035 = !DILocation(line: 2994, column: 43, scope: !10031)
!10036 = !DILocation(line: 2995, column: 9, scope: !10031)
!10037 = !DILocation(line: 2995, column: 12, scope: !10031)
!10038 = !DILocation(line: 2995, column: 31, scope: !10031)
!10039 = !DILocation(line: 2996, column: 9, scope: !10031)
!10040 = !DILocation(line: 2996, column: 36, scope: !10031)
!10041 = !DILocation(line: 2996, column: 55, scope: !10031)
!10042 = !DILocation(line: 2996, column: 14, scope: !10031)
!10043 = !DILocation(line: 2994, column: 16, scope: !9995)
!10044 = !DILocation(line: 2997, column: 23, scope: !10031)
!10045 = !DILocation(line: 2997, column: 42, scope: !10031)
!10046 = !DILocation(line: 2997, column: 50, scope: !10031)
!10047 = !DILocation(line: 2997, column: 2, scope: !10031)
!10048 = !DILocation(line: 2998, column: 7, scope: !9991)
!10049 = !DILocation(line: 3007, column: 17, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 3007, column: 7)
!10051 = !DILocation(line: 3007, column: 15, scope: !10050)
!10052 = !DILocation(line: 3007, column: 12, scope: !10050)
!10053 = !DILocation(line: 3007, column: 32, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 3007, column: 7)
!10055 = !DILocation(line: 3007, column: 38, scope: !10054)
!10056 = !DILocation(line: 3007, column: 35, scope: !10054)
!10057 = !DILocation(line: 3007, column: 7, scope: !10050)
!10058 = !DILocation(line: 3008, column: 6, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10054, file: !3, line: 3008, column: 6)
!10060 = !DILocation(line: 3008, column: 10, scope: !10059)
!10061 = !DILocation(line: 3008, column: 22, scope: !10059)
!10062 = !DILocation(line: 3008, column: 19, scope: !10059)
!10063 = !DILocation(line: 3008, column: 6, scope: !10054)
!10064 = !DILocation(line: 3009, column: 4, scope: !10059)
!10065 = !DILocation(line: 3009, column: 8, scope: !10059)
!10066 = !DILocation(line: 3009, column: 22, scope: !10059)
!10067 = !DILocation(line: 3007, column: 76, scope: !10054)
!10068 = !DILocation(line: 3007, column: 7, scope: !10054)
!10069 = distinct !{!10069, !10057, !10070}
!10070 = !DILocation(line: 3009, column: 24, scope: !10050)
!10071 = !DILocation(line: 3014, column: 17, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 3014, column: 7)
!10073 = !DILocation(line: 3014, column: 15, scope: !10072)
!10074 = !DILocation(line: 3014, column: 12, scope: !10072)
!10075 = !DILocation(line: 3014, column: 32, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10072, file: !3, line: 3014, column: 7)
!10077 = !DILocation(line: 3014, column: 38, scope: !10076)
!10078 = !DILocation(line: 3014, column: 35, scope: !10076)
!10079 = !DILocation(line: 3014, column: 7, scope: !10072)
!10080 = !DILocation(line: 3015, column: 6, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10076, file: !3, line: 3015, column: 6)
!10082 = !DILocation(line: 3015, column: 10, scope: !10081)
!10083 = !DILocation(line: 3015, column: 20, scope: !10081)
!10084 = !DILocation(line: 3015, column: 17, scope: !10081)
!10085 = !DILocation(line: 3015, column: 6, scope: !10076)
!10086 = !DILocalVariable(name: "size", scope: !10087, file: !3, line: 3017, type: !2396)
!10087 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 3016, column: 4)
!10088 = !DILocation(line: 3017, column: 10, scope: !10087)
!10089 = !DILocation(line: 3017, column: 17, scope: !10087)
!10090 = !DILocation(line: 3021, column: 10, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 3021, column: 10)
!10092 = !DILocation(line: 3021, column: 14, scope: !10091)
!10093 = !DILocation(line: 3021, column: 24, scope: !10091)
!10094 = !DILocation(line: 3021, column: 21, scope: !10091)
!10095 = !DILocation(line: 3021, column: 10, scope: !10087)
!10096 = !DILocation(line: 3022, column: 15, scope: !10091)
!10097 = !DILocation(line: 3022, column: 13, scope: !10091)
!10098 = !DILocation(line: 3022, column: 8, scope: !10091)
!10099 = !DILocation(line: 3024, column: 10, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 3024, column: 10)
!10101 = !DILocation(line: 3024, column: 15, scope: !10100)
!10102 = !DILocation(line: 3024, column: 26, scope: !10100)
!10103 = !DILocation(line: 3024, column: 29, scope: !10100)
!10104 = !DILocation(line: 3024, column: 34, scope: !10100)
!10105 = !DILocation(line: 3024, column: 10, scope: !10087)
!10106 = !DILocation(line: 3025, column: 22, scope: !10100)
!10107 = !DILocation(line: 3025, column: 8, scope: !10100)
!10108 = !DILocation(line: 3025, column: 12, scope: !10100)
!10109 = !DILocation(line: 3025, column: 19, scope: !10100)
!10110 = !DILocation(line: 3026, column: 15, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10100, file: !3, line: 3026, column: 15)
!10112 = !DILocation(line: 3026, column: 20, scope: !10111)
!10113 = !DILocation(line: 3026, column: 31, scope: !10111)
!10114 = !DILocation(line: 3026, column: 34, scope: !10111)
!10115 = !DILocation(line: 3026, column: 39, scope: !10111)
!10116 = !DILocation(line: 3026, column: 15, scope: !10100)
!10117 = !DILocation(line: 3027, column: 22, scope: !10111)
!10118 = !DILocation(line: 3027, column: 8, scope: !10111)
!10119 = !DILocation(line: 3027, column: 12, scope: !10111)
!10120 = !DILocation(line: 3027, column: 19, scope: !10111)
!10121 = !DILocation(line: 3028, column: 15, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10111, file: !3, line: 3028, column: 15)
!10123 = !DILocation(line: 3028, column: 20, scope: !10122)
!10124 = !DILocation(line: 3028, column: 34, scope: !10122)
!10125 = !DILocation(line: 3028, column: 37, scope: !10122)
!10126 = !DILocation(line: 3028, column: 42, scope: !10122)
!10127 = !DILocation(line: 3028, column: 15, scope: !10111)
!10128 = !DILocation(line: 3030, column: 7, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 3030, column: 7)
!10130 = distinct !DILexicalBlock(scope: !10122, file: !3, line: 3029, column: 8)
!10131 = !DILocation(line: 3030, column: 30, scope: !10129)
!10132 = !DILocation(line: 3031, column: 7, scope: !10129)
!10133 = !DILocation(line: 3031, column: 10, scope: !10129)
!10134 = !DILocation(line: 3031, column: 25, scope: !10129)
!10135 = !DILocation(line: 3031, column: 22, scope: !10129)
!10136 = !DILocation(line: 3032, column: 7, scope: !10129)
!10137 = !DILocation(line: 3032, column: 10, scope: !10129)
!10138 = !DILocation(line: 3030, column: 7, scope: !10130)
!10139 = !DILocation(line: 3033, column: 19, scope: !10129)
!10140 = !DILocation(line: 3033, column: 5, scope: !10129)
!10141 = !DILocation(line: 3033, column: 9, scope: !10129)
!10142 = !DILocation(line: 3033, column: 16, scope: !10129)
!10143 = !DILocation(line: 3035, column: 5, scope: !10129)
!10144 = !DILocation(line: 3035, column: 9, scope: !10129)
!10145 = !DILocation(line: 3035, column: 23, scope: !10129)
!10146 = !DILocation(line: 3036, column: 8, scope: !10130)
!10147 = !DILocation(line: 3037, column: 4, scope: !10087)
!10148 = !DILocation(line: 3014, column: 76, scope: !10076)
!10149 = !DILocation(line: 3014, column: 7, scope: !10076)
!10150 = distinct !{!10150, !10079, !10151}
!10151 = !DILocation(line: 3037, column: 4, scope: !10072)
!10152 = !DILocation(line: 3040, column: 11, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 3040, column: 11)
!10154 = !DILocation(line: 3040, column: 16, scope: !10153)
!10155 = !DILocation(line: 3040, column: 31, scope: !10153)
!10156 = !DILocation(line: 3040, column: 34, scope: !10153)
!10157 = !DILocation(line: 3040, column: 39, scope: !10153)
!10158 = !DILocation(line: 3040, column: 11, scope: !9991)
!10159 = !DILocation(line: 3041, column: 2, scope: !10153)
!10160 = !DILocation(line: 3040, column: 42, scope: !10153)
!10161 = !DILocation(line: 3058, column: 28, scope: !9991)
!10162 = !DILocation(line: 3058, column: 41, scope: !9991)
!10163 = !DILocation(line: 3058, column: 7, scope: !9991)
!10164 = !DILocation(line: 3059, column: 7, scope: !9991)
!10165 = !DILocation(line: 3062, column: 11, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 3062, column: 11)
!10167 = !DILocation(line: 3063, column: 4, scope: !10166)
!10168 = !DILocation(line: 3063, column: 8, scope: !10166)
!10169 = !DILocation(line: 3064, column: 11, scope: !10166)
!10170 = !DILocation(line: 3064, column: 8, scope: !10166)
!10171 = !DILocation(line: 3065, column: 4, scope: !10166)
!10172 = !DILocation(line: 3065, column: 7, scope: !10166)
!10173 = !DILocation(line: 3065, column: 28, scope: !10166)
!10174 = !DILocation(line: 3066, column: 4, scope: !10166)
!10175 = !DILocation(line: 3066, column: 7, scope: !10166)
!10176 = !DILocation(line: 3066, column: 28, scope: !10166)
!10177 = !DILocation(line: 3066, column: 52, scope: !10166)
!10178 = !DILocation(line: 3062, column: 11, scope: !9991)
!10179 = !DILocation(line: 3067, column: 2, scope: !10166)
!10180 = !DILocation(line: 3069, column: 28, scope: !9991)
!10181 = !DILocation(line: 3069, column: 44, scope: !9991)
!10182 = !DILocation(line: 3069, column: 7, scope: !9991)
!10183 = !DILocation(line: 3070, column: 7, scope: !9991)
!10184 = !DILocation(line: 3076, column: 17, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 3076, column: 7)
!10186 = !DILocation(line: 3076, column: 15, scope: !10185)
!10187 = !DILocation(line: 3076, column: 12, scope: !10185)
!10188 = !DILocation(line: 3076, column: 32, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10185, file: !3, line: 3076, column: 7)
!10190 = !DILocation(line: 3076, column: 38, scope: !10189)
!10191 = !DILocation(line: 3076, column: 35, scope: !10189)
!10192 = !DILocation(line: 3076, column: 7, scope: !10185)
!10193 = !DILocation(line: 3077, column: 6, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10189, file: !3, line: 3077, column: 6)
!10195 = !DILocation(line: 3077, column: 10, scope: !10194)
!10196 = !DILocation(line: 3077, column: 22, scope: !10194)
!10197 = !DILocation(line: 3077, column: 19, scope: !10194)
!10198 = !DILocation(line: 3077, column: 6, scope: !10189)
!10199 = !DILocation(line: 3078, column: 4, scope: !10194)
!10200 = !DILocation(line: 3078, column: 8, scope: !10194)
!10201 = !DILocation(line: 3078, column: 22, scope: !10194)
!10202 = !DILocation(line: 3076, column: 76, scope: !10189)
!10203 = !DILocation(line: 3076, column: 7, scope: !10189)
!10204 = distinct !{!10204, !10192, !10205}
!10205 = !DILocation(line: 3078, column: 24, scope: !10185)
!10206 = !DILocation(line: 3080, column: 28, scope: !9991)
!10207 = !DILocation(line: 3080, column: 41, scope: !9991)
!10208 = !DILocation(line: 3080, column: 7, scope: !9991)
!10209 = !DILocation(line: 3081, column: 7, scope: !9991)
!10210 = !DILocation(line: 3087, column: 17, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 3087, column: 7)
!10212 = !DILocation(line: 3087, column: 15, scope: !10211)
!10213 = !DILocation(line: 3087, column: 12, scope: !10211)
!10214 = !DILocation(line: 3087, column: 32, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 3087, column: 7)
!10216 = !DILocation(line: 3087, column: 38, scope: !10215)
!10217 = !DILocation(line: 3087, column: 35, scope: !10215)
!10218 = !DILocation(line: 3087, column: 7, scope: !10211)
!10219 = !DILocation(line: 3088, column: 6, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10215, file: !3, line: 3088, column: 6)
!10221 = !DILocation(line: 3088, column: 10, scope: !10220)
!10222 = !DILocation(line: 3088, column: 20, scope: !10220)
!10223 = !DILocation(line: 3088, column: 17, scope: !10220)
!10224 = !DILocation(line: 3088, column: 6, scope: !10215)
!10225 = !DILocation(line: 3089, column: 4, scope: !10220)
!10226 = !DILocation(line: 3089, column: 8, scope: !10220)
!10227 = !DILocation(line: 3089, column: 22, scope: !10220)
!10228 = !DILocation(line: 3087, column: 76, scope: !10215)
!10229 = !DILocation(line: 3087, column: 7, scope: !10215)
!10230 = distinct !{!10230, !10218, !10231}
!10231 = !DILocation(line: 3089, column: 24, scope: !10211)
!10232 = !DILocation(line: 3091, column: 28, scope: !9991)
!10233 = !DILocation(line: 3091, column: 41, scope: !9991)
!10234 = !DILocation(line: 3091, column: 7, scope: !9991)
!10235 = !DILocation(line: 3092, column: 7, scope: !9991)
!10236 = !DILocation(line: 3096, column: 11, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 3096, column: 11)
!10238 = !DILocation(line: 3096, column: 11, scope: !9991)
!10239 = !DILocation(line: 3109, column: 14, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10241, file: !3, line: 3109, column: 4)
!10241 = distinct !DILexicalBlock(scope: !10237, file: !3, line: 3097, column: 2)
!10242 = !DILocation(line: 3109, column: 12, scope: !10240)
!10243 = !DILocation(line: 3109, column: 9, scope: !10240)
!10244 = !DILocation(line: 3109, column: 29, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 3109, column: 4)
!10246 = !DILocation(line: 3109, column: 35, scope: !10245)
!10247 = !DILocation(line: 3109, column: 32, scope: !10245)
!10248 = !DILocation(line: 3109, column: 4, scope: !10240)
!10249 = !DILocation(line: 3111, column: 10, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10245, file: !3, line: 3111, column: 10)
!10251 = !DILocation(line: 3111, column: 14, scope: !10250)
!10252 = !DILocation(line: 3111, column: 24, scope: !10250)
!10253 = !DILocation(line: 3111, column: 21, scope: !10250)
!10254 = !DILocation(line: 3112, column: 3, scope: !10250)
!10255 = !DILocation(line: 3112, column: 6, scope: !10250)
!10256 = !DILocation(line: 3112, column: 22, scope: !10250)
!10257 = !DILocation(line: 3112, column: 19, scope: !10250)
!10258 = !DILocation(line: 3111, column: 10, scope: !10245)
!10259 = !DILocalVariable(name: "src", scope: !10260, file: !3, line: 3116, type: !2372)
!10260 = distinct !DILexicalBlock(scope: !10250, file: !3, line: 3113, column: 8)
!10261 = !DILocation(line: 3116, column: 7, scope: !10260)
!10262 = !DILocation(line: 3116, column: 13, scope: !10260)
!10263 = !DILocation(line: 3118, column: 7, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10260, file: !3, line: 3118, column: 7)
!10265 = !DILocation(line: 3118, column: 22, scope: !10264)
!10266 = !DILocation(line: 3119, column: 7, scope: !10264)
!10267 = !DILocation(line: 3119, column: 10, scope: !10264)
!10268 = !DILocation(line: 3119, column: 27, scope: !10264)
!10269 = !DILocation(line: 3119, column: 24, scope: !10264)
!10270 = !DILocation(line: 3120, column: 7, scope: !10264)
!10271 = !DILocation(line: 3120, column: 10, scope: !10264)
!10272 = !DILocation(line: 3118, column: 7, scope: !10260)
!10273 = !DILocation(line: 3121, column: 19, scope: !10264)
!10274 = !DILocation(line: 3121, column: 5, scope: !10264)
!10275 = !DILocation(line: 3121, column: 9, scope: !10264)
!10276 = !DILocation(line: 3121, column: 16, scope: !10264)
!10277 = !DILocation(line: 3123, column: 5, scope: !10264)
!10278 = !DILocation(line: 3123, column: 9, scope: !10264)
!10279 = !DILocation(line: 3123, column: 23, scope: !10264)
!10280 = !DILocation(line: 3124, column: 8, scope: !10260)
!10281 = !DILocation(line: 3110, column: 11, scope: !10245)
!10282 = !DILocation(line: 3109, column: 4, scope: !10245)
!10283 = distinct !{!10283, !10248, !10284}
!10284 = !DILocation(line: 3124, column: 8, scope: !10240)
!10285 = !DILocation(line: 3125, column: 2, scope: !10241)
!10286 = !DILocation(line: 3127, column: 28, scope: !9991)
!10287 = !DILocation(line: 3127, column: 7, scope: !9991)
!10288 = !DILocation(line: 3128, column: 28, scope: !9991)
!10289 = !DILocation(line: 3128, column: 7, scope: !9991)
!10290 = !DILocation(line: 3129, column: 7, scope: !9991)
!10291 = !DILocation(line: 3134, column: 28, scope: !9991)
!10292 = !DILocation(line: 3134, column: 41, scope: !9991)
!10293 = !DILocation(line: 3134, column: 7, scope: !9991)
!10294 = !DILocation(line: 3135, column: 7, scope: !9991)
!10295 = !DILocation(line: 3138, column: 7, scope: !9991)
!10296 = !DILocation(line: 3141, column: 9, scope: !9968)
!10297 = !DILocation(line: 3141, column: 7, scope: !9968)
!10298 = !DILocation(line: 3142, column: 10, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 3142, column: 3)
!10300 = !DILocation(line: 3142, column: 8, scope: !10299)
!10301 = !DILocation(line: 3142, column: 15, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 3142, column: 3)
!10303 = !DILocation(line: 3142, column: 19, scope: !10302)
!10304 = !DILocation(line: 3142, column: 17, scope: !10302)
!10305 = !DILocation(line: 3142, column: 3, scope: !10299)
!10306 = !DILocation(line: 3144, column: 12, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10308, file: !3, line: 3144, column: 11)
!10308 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 3143, column: 5)
!10309 = !DILocation(line: 3144, column: 11, scope: !10307)
!10310 = !DILocation(line: 3144, column: 16, scope: !10307)
!10311 = !DILocation(line: 3144, column: 11, scope: !10308)
!10312 = !DILocation(line: 3145, column: 23, scope: !10307)
!10313 = !DILocation(line: 3145, column: 36, scope: !10307)
!10314 = !DILocation(line: 3145, column: 2, scope: !10307)
!10315 = !DILocation(line: 3146, column: 17, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 3146, column: 16)
!10317 = !DILocation(line: 3146, column: 16, scope: !10316)
!10318 = !DILocation(line: 3146, column: 21, scope: !10316)
!10319 = !DILocation(line: 3146, column: 16, scope: !10307)
!10320 = !DILocation(line: 3147, column: 9, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 3147, column: 2)
!10322 = !DILocation(line: 3147, column: 7, scope: !10321)
!10323 = !DILocation(line: 3147, column: 14, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 3147, column: 2)
!10325 = !DILocation(line: 3147, column: 18, scope: !10324)
!10326 = !DILocation(line: 3147, column: 16, scope: !10324)
!10327 = !DILocation(line: 3147, column: 2, scope: !10321)
!10328 = !DILocation(line: 3148, column: 25, scope: !10324)
!10329 = !DILocation(line: 3148, column: 44, scope: !10324)
!10330 = !DILocation(line: 3148, column: 4, scope: !10324)
!10331 = !DILocation(line: 3147, column: 35, scope: !10324)
!10332 = !DILocation(line: 3147, column: 2, scope: !10324)
!10333 = distinct !{!10333, !10327, !10334}
!10334 = !DILocation(line: 3148, column: 52, scope: !10321)
!10335 = !DILocation(line: 3149, column: 5, scope: !10308)
!10336 = !DILocation(line: 3142, column: 43, scope: !10302)
!10337 = !DILocation(line: 3142, column: 50, scope: !10302)
!10338 = !DILocation(line: 3142, column: 3, scope: !10302)
!10339 = distinct !{!10339, !10305, !10340}
!10340 = !DILocation(line: 3149, column: 5, scope: !10299)
!10341 = !DILocation(line: 3150, column: 1, scope: !9968)
!10342 = distinct !DISubprogram(name: "check_eliminable_occurrences", scope: !3, file: !3, line: 3157, type: !5596, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!10343 = !DILocalVariable(name: "x", arg: 1, scope: !10342, file: !3, line: 3157, type: !2372)
!10344 = !DILocation(line: 3157, column: 35, scope: !10342)
!10345 = !DILocalVariable(name: "fmt", scope: !10342, file: !3, line: 3159, type: !2399)
!10346 = !DILocation(line: 3159, column: 15, scope: !10342)
!10347 = !DILocalVariable(name: "i", scope: !10342, file: !3, line: 3160, type: !2396)
!10348 = !DILocation(line: 3160, column: 7, scope: !10342)
!10349 = !DILocalVariable(name: "code", scope: !10342, file: !3, line: 3161, type: !384)
!10350 = !DILocation(line: 3161, column: 17, scope: !10342)
!10351 = !DILocation(line: 3163, column: 7, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 3163, column: 7)
!10353 = !DILocation(line: 3163, column: 9, scope: !10352)
!10354 = !DILocation(line: 3163, column: 7, scope: !10342)
!10355 = !DILocation(line: 3164, column: 5, scope: !10352)
!10356 = !DILocation(line: 3166, column: 10, scope: !10342)
!10357 = !DILocation(line: 3166, column: 8, scope: !10342)
!10358 = !DILocation(line: 3168, column: 7, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 3168, column: 7)
!10360 = !DILocation(line: 3168, column: 12, scope: !10359)
!10361 = !DILocation(line: 3168, column: 19, scope: !10359)
!10362 = !DILocation(line: 3168, column: 22, scope: !10359)
!10363 = !DILocation(line: 3168, column: 32, scope: !10359)
!10364 = !DILocation(line: 3168, column: 7, scope: !10342)
!10365 = !DILocalVariable(name: "ep", scope: !10366, file: !3, line: 3170, type: !3605)
!10366 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 3169, column: 5)
!10367 = !DILocation(line: 3170, column: 26, scope: !10366)
!10368 = !DILocation(line: 3172, column: 17, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 3172, column: 7)
!10370 = !DILocation(line: 3172, column: 15, scope: !10369)
!10371 = !DILocation(line: 3172, column: 12, scope: !10369)
!10372 = !DILocation(line: 3172, column: 32, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 3172, column: 7)
!10374 = !DILocation(line: 3172, column: 38, scope: !10373)
!10375 = !DILocation(line: 3172, column: 35, scope: !10373)
!10376 = !DILocation(line: 3172, column: 7, scope: !10369)
!10377 = !DILocation(line: 3173, column: 6, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 3173, column: 6)
!10379 = !DILocation(line: 3173, column: 10, scope: !10378)
!10380 = !DILocation(line: 3173, column: 22, scope: !10378)
!10381 = !DILocation(line: 3173, column: 19, scope: !10378)
!10382 = !DILocation(line: 3173, column: 6, scope: !10373)
!10383 = !DILocation(line: 3174, column: 4, scope: !10378)
!10384 = !DILocation(line: 3174, column: 8, scope: !10378)
!10385 = !DILocation(line: 3174, column: 22, scope: !10378)
!10386 = !DILocation(line: 3172, column: 76, scope: !10373)
!10387 = !DILocation(line: 3172, column: 7, scope: !10373)
!10388 = distinct !{!10388, !10376, !10389}
!10389 = !DILocation(line: 3174, column: 24, scope: !10369)
!10390 = !DILocation(line: 3175, column: 7, scope: !10366)
!10391 = !DILocation(line: 3178, column: 9, scope: !10342)
!10392 = !DILocation(line: 3178, column: 7, scope: !10342)
!10393 = !DILocation(line: 3179, column: 10, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 3179, column: 3)
!10395 = !DILocation(line: 3179, column: 8, scope: !10394)
!10396 = !DILocation(line: 3179, column: 15, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 3179, column: 3)
!10398 = !DILocation(line: 3179, column: 19, scope: !10397)
!10399 = !DILocation(line: 3179, column: 17, scope: !10397)
!10400 = !DILocation(line: 3179, column: 3, scope: !10394)
!10401 = !DILocation(line: 3181, column: 12, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 3181, column: 11)
!10403 = distinct !DILexicalBlock(scope: !10397, file: !3, line: 3180, column: 5)
!10404 = !DILocation(line: 3181, column: 11, scope: !10402)
!10405 = !DILocation(line: 3181, column: 16, scope: !10402)
!10406 = !DILocation(line: 3181, column: 11, scope: !10403)
!10407 = !DILocation(line: 3182, column: 32, scope: !10402)
!10408 = !DILocation(line: 3182, column: 2, scope: !10402)
!10409 = !DILocation(line: 3183, column: 17, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10402, file: !3, line: 3183, column: 16)
!10411 = !DILocation(line: 3183, column: 16, scope: !10410)
!10412 = !DILocation(line: 3183, column: 21, scope: !10410)
!10413 = !DILocation(line: 3183, column: 16, scope: !10402)
!10414 = !DILocalVariable(name: "j", scope: !10415, file: !3, line: 3185, type: !2396)
!10415 = distinct !DILexicalBlock(scope: !10410, file: !3, line: 3184, column: 2)
!10416 = !DILocation(line: 3185, column: 8, scope: !10415)
!10417 = !DILocation(line: 3186, column: 11, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 3186, column: 4)
!10419 = !DILocation(line: 3186, column: 9, scope: !10418)
!10420 = !DILocation(line: 3186, column: 16, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 3186, column: 4)
!10422 = !DILocation(line: 3186, column: 20, scope: !10421)
!10423 = !DILocation(line: 3186, column: 18, scope: !10421)
!10424 = !DILocation(line: 3186, column: 4, scope: !10418)
!10425 = !DILocation(line: 3187, column: 36, scope: !10421)
!10426 = !DILocation(line: 3187, column: 6, scope: !10421)
!10427 = !DILocation(line: 3186, column: 37, scope: !10421)
!10428 = !DILocation(line: 3186, column: 4, scope: !10421)
!10429 = distinct !{!10429, !10424, !10430}
!10430 = !DILocation(line: 3187, column: 53, scope: !10418)
!10431 = !DILocation(line: 3188, column: 2, scope: !10415)
!10432 = !DILocation(line: 3189, column: 5, scope: !10403)
!10433 = !DILocation(line: 3179, column: 43, scope: !10397)
!10434 = !DILocation(line: 3179, column: 50, scope: !10397)
!10435 = !DILocation(line: 3179, column: 3, scope: !10397)
!10436 = distinct !{!10436, !10400, !10437}
!10437 = !DILocation(line: 3189, column: 5, scope: !10394)
!10438 = !DILocation(line: 3190, column: 1, scope: !10342)
!10439 = distinct !DISubprogram(name: "find_reload_regs", scope: !3, file: !3, line: 2035, type: !9881, scopeLine: 2036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!10440 = !DILocalVariable(name: "chain", arg: 1, scope: !10439, file: !3, line: 2035, type: !2365)
!10441 = !DILocation(line: 2035, column: 38, scope: !10439)
!10442 = !DILocalVariable(name: "i", scope: !10439, file: !3, line: 2037, type: !2396)
!10443 = !DILocation(line: 2037, column: 7, scope: !10439)
!10444 = !DILocation(line: 2043, column: 10, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 2043, column: 3)
!10446 = !DILocation(line: 2043, column: 8, scope: !10445)
!10447 = !DILocation(line: 2043, column: 15, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 2043, column: 3)
!10449 = !DILocation(line: 2043, column: 19, scope: !10448)
!10450 = !DILocation(line: 2043, column: 26, scope: !10448)
!10451 = !DILocation(line: 2043, column: 17, scope: !10448)
!10452 = !DILocation(line: 2043, column: 3, scope: !10445)
!10453 = !DILocation(line: 2046, column: 11, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 2046, column: 11)
!10455 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 2044, column: 5)
!10456 = !DILocation(line: 2046, column: 18, scope: !10454)
!10457 = !DILocation(line: 2046, column: 22, scope: !10454)
!10458 = !DILocation(line: 2046, column: 25, scope: !10454)
!10459 = !DILocation(line: 2046, column: 11, scope: !10455)
!10460 = !DILocalVariable(name: "regno", scope: !10461, file: !3, line: 2048, type: !2396)
!10461 = distinct !DILexicalBlock(scope: !10454, file: !3, line: 2047, column: 2)
!10462 = !DILocation(line: 2048, column: 8, scope: !10461)
!10463 = !DILocation(line: 2048, column: 16, scope: !10461)
!10464 = !DILocation(line: 2049, column: 26, scope: !10461)
!10465 = !DILocation(line: 2049, column: 4, scope: !10461)
!10466 = !DILocation(line: 2049, column: 11, scope: !10461)
!10467 = !DILocation(line: 2049, column: 15, scope: !10461)
!10468 = !DILocation(line: 2049, column: 18, scope: !10461)
!10469 = !DILocation(line: 2049, column: 24, scope: !10461)
!10470 = !DILocation(line: 2051, column: 25, scope: !10461)
!10471 = !DILocation(line: 2051, column: 8, scope: !10461)
!10472 = !DILocation(line: 2051, column: 32, scope: !10461)
!10473 = !DILocation(line: 2050, column: 4, scope: !10461)
!10474 = !DILocation(line: 2050, column: 11, scope: !10461)
!10475 = !DILocation(line: 2050, column: 15, scope: !10461)
!10476 = !DILocation(line: 2050, column: 18, scope: !10461)
!10477 = !DILocation(line: 2051, column: 6, scope: !10461)
!10478 = !DILocation(line: 2052, column: 2, scope: !10461)
!10479 = !DILocation(line: 2054, column: 2, scope: !10454)
!10480 = !DILocation(line: 2054, column: 9, scope: !10454)
!10481 = !DILocation(line: 2054, column: 13, scope: !10454)
!10482 = !DILocation(line: 2054, column: 16, scope: !10454)
!10483 = !DILocation(line: 2054, column: 22, scope: !10454)
!10484 = !DILocation(line: 2055, column: 25, scope: !10455)
!10485 = !DILocation(line: 2055, column: 20, scope: !10455)
!10486 = !DILocation(line: 2055, column: 7, scope: !10455)
!10487 = !DILocation(line: 2055, column: 23, scope: !10455)
!10488 = !DILocation(line: 2056, column: 5, scope: !10455)
!10489 = !DILocation(line: 2043, column: 38, scope: !10448)
!10490 = !DILocation(line: 2043, column: 3, scope: !10448)
!10491 = distinct !{!10491, !10452, !10492}
!10492 = !DILocation(line: 2056, column: 5, scope: !10445)
!10493 = !DILocation(line: 2058, column: 15, scope: !10439)
!10494 = !DILocation(line: 2058, column: 22, scope: !10439)
!10495 = !DILocation(line: 2058, column: 13, scope: !10439)
!10496 = !DILocation(line: 2059, column: 16, scope: !10439)
!10497 = !DILocation(line: 2059, column: 23, scope: !10439)
!10498 = !DILocation(line: 2059, column: 3, scope: !10439)
!10499 = !DILocation(line: 2059, column: 28, scope: !10439)
!10500 = !DILocation(line: 2059, column: 38, scope: !10439)
!10501 = !DILocation(line: 2061, column: 3, scope: !10439)
!10502 = !DILocation(line: 2063, column: 7, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 2063, column: 7)
!10504 = !DILocation(line: 2063, column: 7, scope: !10439)
!10505 = !DILocation(line: 2064, column: 14, scope: !10503)
!10506 = !DILocation(line: 2064, column: 52, scope: !10503)
!10507 = !DILocation(line: 2064, column: 5, scope: !10503)
!10508 = !DILocation(line: 2067, column: 29, scope: !10439)
!10509 = !DILocation(line: 2067, column: 3, scope: !10439)
!10510 = !DILocation(line: 2074, column: 26, scope: !10439)
!10511 = !DILocation(line: 2074, column: 3, scope: !10439)
!10512 = !DILocation(line: 2076, column: 10, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 2076, column: 3)
!10514 = !DILocation(line: 2076, column: 8, scope: !10513)
!10515 = !DILocation(line: 2076, column: 15, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10513, file: !3, line: 2076, column: 3)
!10517 = !DILocation(line: 2076, column: 19, scope: !10516)
!10518 = !DILocation(line: 2076, column: 17, scope: !10516)
!10519 = !DILocation(line: 2076, column: 3, scope: !10513)
!10520 = !DILocalVariable(name: "r", scope: !10521, file: !3, line: 2078, type: !2396)
!10521 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 2077, column: 5)
!10522 = !DILocation(line: 2078, column: 11, scope: !10521)
!10523 = !DILocation(line: 2078, column: 28, scope: !10521)
!10524 = !DILocation(line: 2078, column: 15, scope: !10521)
!10525 = !DILocation(line: 2081, column: 16, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 2081, column: 11)
!10527 = !DILocation(line: 2081, column: 12, scope: !10526)
!10528 = !DILocation(line: 2081, column: 19, scope: !10526)
!10529 = !DILocation(line: 2081, column: 23, scope: !10526)
!10530 = !DILocation(line: 2081, column: 28, scope: !10526)
!10531 = !DILocation(line: 2081, column: 35, scope: !10526)
!10532 = !DILocation(line: 2081, column: 31, scope: !10526)
!10533 = !DILocation(line: 2081, column: 38, scope: !10526)
!10534 = !DILocation(line: 2081, column: 41, scope: !10526)
!10535 = !DILocation(line: 2081, column: 46, scope: !10526)
!10536 = !DILocation(line: 2081, column: 53, scope: !10526)
!10537 = !DILocation(line: 2081, column: 49, scope: !10526)
!10538 = !DILocation(line: 2081, column: 56, scope: !10526)
!10539 = !DILocation(line: 2082, column: 4, scope: !10526)
!10540 = !DILocation(line: 2082, column: 13, scope: !10526)
!10541 = !DILocation(line: 2082, column: 9, scope: !10526)
!10542 = !DILocation(line: 2082, column: 16, scope: !10526)
!10543 = !DILocation(line: 2083, column: 4, scope: !10526)
!10544 = !DILocation(line: 2083, column: 11, scope: !10526)
!10545 = !DILocation(line: 2083, column: 7, scope: !10526)
!10546 = !DILocation(line: 2083, column: 14, scope: !10526)
!10547 = !DILocation(line: 2083, column: 20, scope: !10526)
!10548 = !DILocation(line: 2081, column: 11, scope: !10521)
!10549 = !DILocation(line: 2084, column: 18, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 2084, column: 6)
!10551 = !DILocation(line: 2084, column: 25, scope: !10550)
!10552 = !DILocation(line: 2084, column: 8, scope: !10550)
!10553 = !DILocation(line: 2084, column: 6, scope: !10526)
!10554 = !DILocation(line: 2086, column: 10, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 2086, column: 10)
!10556 = distinct !DILexicalBlock(scope: !10550, file: !3, line: 2085, column: 4)
!10557 = !DILocation(line: 2086, column: 10, scope: !10556)
!10558 = !DILocation(line: 2087, column: 17, scope: !10555)
!10559 = !DILocation(line: 2087, column: 62, scope: !10555)
!10560 = !DILocation(line: 2087, column: 8, scope: !10555)
!10561 = !DILocation(line: 2088, column: 21, scope: !10556)
!10562 = !DILocation(line: 2088, column: 28, scope: !10556)
!10563 = !DILocation(line: 2088, column: 38, scope: !10556)
!10564 = !DILocation(line: 2088, column: 34, scope: !10556)
!10565 = !DILocation(line: 2088, column: 41, scope: !10556)
!10566 = !DILocation(line: 2088, column: 6, scope: !10556)
!10567 = !DILocation(line: 2089, column: 14, scope: !10556)
!10568 = !DILocation(line: 2090, column: 6, scope: !10556)
!10569 = !DILocation(line: 2084, column: 26, scope: !10550)
!10570 = !DILocation(line: 2092, column: 5, scope: !10521)
!10571 = !DILocation(line: 2076, column: 31, scope: !10516)
!10572 = !DILocation(line: 2076, column: 3, scope: !10516)
!10573 = distinct !{!10573, !10519, !10574}
!10574 = !DILocation(line: 2092, column: 5, scope: !10513)
!10575 = !DILocation(line: 2094, column: 3, scope: !10439)
!10576 = !DILocation(line: 2095, column: 3, scope: !10439)
!10577 = !DILocation(line: 2097, column: 11, scope: !10439)
!10578 = !DILocation(line: 2097, column: 18, scope: !10439)
!10579 = !DILocation(line: 2097, column: 3, scope: !10439)
!10580 = !DILocation(line: 2097, column: 28, scope: !10439)
!10581 = !DILocation(line: 2097, column: 38, scope: !10439)
!10582 = !DILocation(line: 2098, column: 1, scope: !10439)
!10583 = distinct !DISubprogram(name: "reload_reg_class_lower", scope: !3, file: !3, line: 1735, type: !2837, scopeLine: 1736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!10584 = !DILocalVariable(name: "r1p", arg: 1, scope: !10583, file: !3, line: 1735, type: !2832)
!10585 = !DILocation(line: 1735, column: 37, scope: !10583)
!10586 = !DILocalVariable(name: "r2p", arg: 2, scope: !10583, file: !3, line: 1735, type: !2832)
!10587 = !DILocation(line: 1735, column: 54, scope: !10583)
!10588 = !DILocalVariable(name: "r1", scope: !10583, file: !3, line: 1737, type: !2396)
!10589 = !DILocation(line: 1737, column: 7, scope: !10583)
!10590 = !DILocation(line: 1737, column: 29, scope: !10583)
!10591 = !DILocation(line: 1737, column: 13, scope: !10583)
!10592 = !DILocation(line: 1737, column: 12, scope: !10583)
!10593 = !DILocalVariable(name: "r2", scope: !10583, file: !3, line: 1737, type: !2396)
!10594 = !DILocation(line: 1737, column: 34, scope: !10583)
!10595 = !DILocation(line: 1737, column: 56, scope: !10583)
!10596 = !DILocation(line: 1737, column: 40, scope: !10583)
!10597 = !DILocation(line: 1737, column: 39, scope: !10583)
!10598 = !DILocalVariable(name: "t", scope: !10583, file: !3, line: 1738, type: !2396)
!10599 = !DILocation(line: 1738, column: 7, scope: !10583)
!10600 = !DILocation(line: 1741, column: 11, scope: !10583)
!10601 = !DILocation(line: 1741, column: 7, scope: !10583)
!10602 = !DILocation(line: 1741, column: 15, scope: !10583)
!10603 = !DILocation(line: 1741, column: 30, scope: !10583)
!10604 = !DILocation(line: 1741, column: 26, scope: !10583)
!10605 = !DILocation(line: 1741, column: 34, scope: !10583)
!10606 = !DILocation(line: 1741, column: 24, scope: !10583)
!10607 = !DILocation(line: 1741, column: 5, scope: !10583)
!10608 = !DILocation(line: 1742, column: 7, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 1742, column: 7)
!10610 = !DILocation(line: 1742, column: 9, scope: !10609)
!10611 = !DILocation(line: 1742, column: 7, scope: !10583)
!10612 = !DILocation(line: 1743, column: 12, scope: !10609)
!10613 = !DILocation(line: 1743, column: 5, scope: !10609)
!10614 = !DILocation(line: 1746, column: 34, scope: !10583)
!10615 = !DILocation(line: 1746, column: 30, scope: !10583)
!10616 = !DILocation(line: 1746, column: 38, scope: !10583)
!10617 = !DILocation(line: 1746, column: 9, scope: !10583)
!10618 = !DILocation(line: 1746, column: 46, scope: !10583)
!10619 = !DILocation(line: 1747, column: 36, scope: !10583)
!10620 = !DILocation(line: 1747, column: 32, scope: !10583)
!10621 = !DILocation(line: 1747, column: 40, scope: !10583)
!10622 = !DILocation(line: 1747, column: 11, scope: !10583)
!10623 = !DILocation(line: 1747, column: 48, scope: !10583)
!10624 = !DILocation(line: 1747, column: 8, scope: !10583)
!10625 = !DILocation(line: 1746, column: 5, scope: !10583)
!10626 = !DILocation(line: 1748, column: 7, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 1748, column: 7)
!10628 = !DILocation(line: 1748, column: 9, scope: !10627)
!10629 = !DILocation(line: 1748, column: 7, scope: !10583)
!10630 = !DILocation(line: 1749, column: 12, scope: !10627)
!10631 = !DILocation(line: 1749, column: 5, scope: !10627)
!10632 = !DILocation(line: 1752, column: 11, scope: !10583)
!10633 = !DILocation(line: 1752, column: 7, scope: !10583)
!10634 = !DILocation(line: 1752, column: 15, scope: !10583)
!10635 = !DILocation(line: 1752, column: 27, scope: !10583)
!10636 = !DILocation(line: 1752, column: 23, scope: !10583)
!10637 = !DILocation(line: 1752, column: 31, scope: !10583)
!10638 = !DILocation(line: 1752, column: 21, scope: !10583)
!10639 = !DILocation(line: 1752, column: 5, scope: !10583)
!10640 = !DILocation(line: 1753, column: 7, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 1753, column: 7)
!10642 = !DILocation(line: 1753, column: 9, scope: !10641)
!10643 = !DILocation(line: 1753, column: 7, scope: !10583)
!10644 = !DILocation(line: 1754, column: 12, scope: !10641)
!10645 = !DILocation(line: 1754, column: 5, scope: !10641)
!10646 = !DILocation(line: 1757, column: 17, scope: !10583)
!10647 = !DILocation(line: 1757, column: 13, scope: !10583)
!10648 = !DILocation(line: 1757, column: 21, scope: !10583)
!10649 = !DILocation(line: 1757, column: 40, scope: !10583)
!10650 = !DILocation(line: 1757, column: 36, scope: !10583)
!10651 = !DILocation(line: 1757, column: 44, scope: !10583)
!10652 = !DILocation(line: 1757, column: 28, scope: !10583)
!10653 = !DILocation(line: 1757, column: 5, scope: !10583)
!10654 = !DILocation(line: 1758, column: 7, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 1758, column: 7)
!10656 = !DILocation(line: 1758, column: 9, scope: !10655)
!10657 = !DILocation(line: 1758, column: 7, scope: !10583)
!10658 = !DILocation(line: 1759, column: 12, scope: !10655)
!10659 = !DILocation(line: 1759, column: 5, scope: !10655)
!10660 = !DILocation(line: 1763, column: 10, scope: !10583)
!10661 = !DILocation(line: 1763, column: 15, scope: !10583)
!10662 = !DILocation(line: 1763, column: 13, scope: !10583)
!10663 = !DILocation(line: 1763, column: 3, scope: !10583)
!10664 = !DILocation(line: 1764, column: 1, scope: !10583)
!10665 = distinct !DISubprogram(name: "order_regs_for_reload", scope: !3, file: !3, line: 1811, type: !9881, scopeLine: 1812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!10666 = !DILocalVariable(name: "chain", arg: 1, scope: !10665, file: !3, line: 1811, type: !2365)
!10667 = !DILocation(line: 1811, column: 43, scope: !10665)
!10668 = !DILocalVariable(name: "i", scope: !10665, file: !3, line: 1813, type: !7)
!10669 = !DILocation(line: 1813, column: 12, scope: !10665)
!10670 = !DILocalVariable(name: "used_by_pseudos", scope: !10665, file: !3, line: 1814, type: !3577)
!10671 = !DILocation(line: 1814, column: 16, scope: !10665)
!10672 = !DILocalVariable(name: "used_by_pseudos2", scope: !10665, file: !3, line: 1815, type: !3577)
!10673 = !DILocation(line: 1815, column: 16, scope: !10665)
!10674 = !DILocalVariable(name: "rsi", scope: !10665, file: !3, line: 1816, type: !3988)
!10675 = !DILocation(line: 1816, column: 20, scope: !10665)
!10676 = !DILocation(line: 1818, column: 3, scope: !10665)
!10677 = !DILocation(line: 1820, column: 3, scope: !10665)
!10678 = !DILocation(line: 1821, column: 3, scope: !10665)
!10679 = !DILocation(line: 1822, column: 10, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 1822, column: 3)
!10681 = !DILocation(line: 1822, column: 8, scope: !10680)
!10682 = !DILocation(line: 1822, column: 15, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10680, file: !3, line: 1822, column: 3)
!10684 = !DILocation(line: 1822, column: 17, scope: !10683)
!10685 = !DILocation(line: 1822, column: 3, scope: !10680)
!10686 = !DILocation(line: 1823, column: 32, scope: !10683)
!10687 = !DILocation(line: 1823, column: 5, scope: !10683)
!10688 = !DILocation(line: 1823, column: 35, scope: !10683)
!10689 = !DILocation(line: 1822, column: 43, scope: !10683)
!10690 = !DILocation(line: 1822, column: 3, scope: !10683)
!10691 = distinct !{!10691, !10685, !10692}
!10692 = !DILocation(line: 1823, column: 38, scope: !10680)
!10693 = !DILocation(line: 1829, column: 3, scope: !10665)
!10694 = !DILocation(line: 1829, column: 3, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 1829, column: 3)
!10696 = !DILocation(line: 1830, column: 3, scope: !10665)
!10697 = !DILocation(line: 1830, column: 3, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 1830, column: 3)
!10699 = !DILocation(line: 1831, column: 3, scope: !10665)
!10700 = !DILocation(line: 1832, column: 3, scope: !10665)
!10701 = !DILocation(line: 1836, column: 3, scope: !10665)
!10702 = !DILocation(line: 1838, column: 3, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 1838, column: 3)
!10704 = !DILocation(line: 1838, column: 3, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 1838, column: 3)
!10706 = !DILocation(line: 1841, column: 21, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10705, file: !3, line: 1840, column: 5)
!10708 = !DILocation(line: 1841, column: 7, scope: !10707)
!10709 = !DILocation(line: 1842, column: 5, scope: !10707)
!10710 = distinct !{!10710, !10702, !10711}
!10711 = !DILocation(line: 1842, column: 5, scope: !10703)
!10712 = !DILocation(line: 1843, column: 3, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 1843, column: 3)
!10714 = !DILocation(line: 1843, column: 3, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 1843, column: 3)
!10716 = !DILocation(line: 1846, column: 21, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10715, file: !3, line: 1845, column: 5)
!10718 = !DILocation(line: 1846, column: 7, scope: !10717)
!10719 = !DILocation(line: 1847, column: 5, scope: !10717)
!10720 = distinct !{!10720, !10712, !10721}
!10721 = !DILocation(line: 1847, column: 5, scope: !10713)
!10722 = !DILocation(line: 1848, column: 3, scope: !10665)
!10723 = !DILocation(line: 1849, column: 1, scope: !10665)
!10724 = !DILocalVariable(name: "chain", arg: 1, scope: !3758, file: !3, line: 1890, type: !2365)
!10725 = !DILocation(line: 1890, column: 30, scope: !3758)
!10726 = !DILocalVariable(name: "order", arg: 2, scope: !3758, file: !3, line: 1890, type: !2396)
!10727 = !DILocation(line: 1890, column: 41, scope: !3758)
!10728 = !DILocalVariable(name: "rnum", scope: !3758, file: !3, line: 1892, type: !2396)
!10729 = !DILocation(line: 1892, column: 7, scope: !3758)
!10730 = !DILocation(line: 1892, column: 27, scope: !3758)
!10731 = !DILocation(line: 1892, column: 14, scope: !3758)
!10732 = !DILocalVariable(name: "rl", scope: !3758, file: !3, line: 1893, type: !3550)
!10733 = !DILocation(line: 1893, column: 18, scope: !3758)
!10734 = !DILocation(line: 1893, column: 29, scope: !3758)
!10735 = !DILocation(line: 1893, column: 27, scope: !3758)
!10736 = !DILocalVariable(name: "best_cost", scope: !3758, file: !3, line: 1894, type: !2396)
!10737 = !DILocation(line: 1894, column: 7, scope: !3758)
!10738 = !DILocalVariable(name: "best_reg", scope: !3758, file: !3, line: 1895, type: !2396)
!10739 = !DILocation(line: 1895, column: 7, scope: !3758)
!10740 = !DILocalVariable(name: "i", scope: !3758, file: !3, line: 1896, type: !7)
!10741 = !DILocation(line: 1896, column: 16, scope: !3758)
!10742 = !DILocalVariable(name: "j", scope: !3758, file: !3, line: 1896, type: !7)
!10743 = !DILocation(line: 1896, column: 19, scope: !3758)
!10744 = !DILocalVariable(name: "n", scope: !3758, file: !3, line: 1896, type: !7)
!10745 = !DILocation(line: 1896, column: 22, scope: !3758)
!10746 = !DILocalVariable(name: "k", scope: !3758, file: !3, line: 1897, type: !2396)
!10747 = !DILocation(line: 1897, column: 7, scope: !3758)
!10748 = !DILocalVariable(name: "not_usable", scope: !3758, file: !3, line: 1898, type: !3577)
!10749 = !DILocation(line: 1898, column: 16, scope: !3758)
!10750 = !DILocalVariable(name: "used_by_other_reload", scope: !3758, file: !3, line: 1899, type: !3577)
!10751 = !DILocation(line: 1899, column: 16, scope: !3758)
!10752 = !DILocalVariable(name: "rsi", scope: !3758, file: !3, line: 1900, type: !3988)
!10753 = !DILocation(line: 1900, column: 20, scope: !3758)
!10754 = !DILocation(line: 1904, column: 3, scope: !3758)
!10755 = !DILocation(line: 1905, column: 3, scope: !3758)
!10756 = !DILocation(line: 1906, column: 3, scope: !3758)
!10757 = !DILocation(line: 1908, column: 3, scope: !3758)
!10758 = !DILocation(line: 1909, column: 10, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 1909, column: 3)
!10760 = !DILocation(line: 1909, column: 8, scope: !10759)
!10761 = !DILocation(line: 1909, column: 15, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 1909, column: 3)
!10763 = !DILocation(line: 1909, column: 19, scope: !10762)
!10764 = !DILocation(line: 1909, column: 17, scope: !10762)
!10765 = !DILocation(line: 1909, column: 3, scope: !10759)
!10766 = !DILocalVariable(name: "other", scope: !10767, file: !3, line: 1911, type: !2396)
!10767 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 1910, column: 5)
!10768 = !DILocation(line: 1911, column: 11, scope: !10767)
!10769 = !DILocation(line: 1911, column: 32, scope: !10767)
!10770 = !DILocation(line: 1911, column: 19, scope: !10767)
!10771 = !DILocation(line: 1913, column: 15, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10767, file: !3, line: 1913, column: 11)
!10773 = !DILocation(line: 1913, column: 11, scope: !10772)
!10774 = !DILocation(line: 1913, column: 22, scope: !10772)
!10775 = !DILocation(line: 1913, column: 28, scope: !10772)
!10776 = !DILocation(line: 1913, column: 33, scope: !10772)
!10777 = !DILocation(line: 1913, column: 54, scope: !10772)
!10778 = !DILocation(line: 1913, column: 61, scope: !10772)
!10779 = !DILocation(line: 1913, column: 36, scope: !10772)
!10780 = !DILocation(line: 1913, column: 11, scope: !10767)
!10781 = !DILocation(line: 1914, column: 9, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 1914, column: 2)
!10783 = !DILocation(line: 1914, column: 7, scope: !10782)
!10784 = !DILocation(line: 1914, column: 14, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 1914, column: 2)
!10786 = !DILocation(line: 1914, column: 22, scope: !10785)
!10787 = !DILocation(line: 1914, column: 18, scope: !10785)
!10788 = !DILocation(line: 1914, column: 29, scope: !10785)
!10789 = !DILocation(line: 1914, column: 16, scope: !10785)
!10790 = !DILocation(line: 1914, column: 2, scope: !10782)
!10791 = !DILocation(line: 1915, column: 4, scope: !10785)
!10792 = !DILocation(line: 1914, column: 37, scope: !10785)
!10793 = !DILocation(line: 1914, column: 2, scope: !10785)
!10794 = distinct !{!10794, !10790, !10795}
!10795 = !DILocation(line: 1915, column: 4, scope: !10782)
!10796 = !DILocation(line: 1916, column: 5, scope: !10767)
!10797 = !DILocation(line: 1909, column: 27, scope: !10762)
!10798 = !DILocation(line: 1909, column: 3, scope: !10762)
!10799 = distinct !{!10799, !10765, !10800}
!10800 = !DILocation(line: 1916, column: 5, scope: !10759)
!10801 = !DILocation(line: 1918, column: 10, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 1918, column: 3)
!10803 = !DILocation(line: 1918, column: 8, scope: !10802)
!10804 = !DILocation(line: 1918, column: 15, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 1918, column: 3)
!10806 = !DILocation(line: 1918, column: 17, scope: !10805)
!10807 = !DILocation(line: 1918, column: 3, scope: !10802)
!10808 = !DILocalVariable(name: "regno", scope: !10809, file: !3, line: 1921, type: !7)
!10809 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 1919, column: 5)
!10810 = !DILocation(line: 1921, column: 20, scope: !10809)
!10811 = !DILocation(line: 1921, column: 44, scope: !10809)
!10812 = !DILocation(line: 1921, column: 28, scope: !10809)
!10813 = !DILocation(line: 1926, column: 13, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 1926, column: 11)
!10815 = !DILocation(line: 1927, column: 4, scope: !10814)
!10816 = !DILocation(line: 1927, column: 9, scope: !10814)
!10817 = !DILocation(line: 1928, column: 4, scope: !10814)
!10818 = !DILocation(line: 1928, column: 7, scope: !10814)
!10819 = !DILocation(line: 1926, column: 11, scope: !10809)
!10820 = !DILocalVariable(name: "this_cost", scope: !10821, file: !3, line: 1930, type: !2396)
!10821 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 1929, column: 2)
!10822 = !DILocation(line: 1930, column: 8, scope: !10821)
!10823 = !DILocation(line: 1930, column: 31, scope: !10821)
!10824 = !DILocation(line: 1930, column: 20, scope: !10821)
!10825 = !DILocalVariable(name: "ok", scope: !10821, file: !3, line: 1931, type: !2396)
!10826 = !DILocation(line: 1931, column: 8, scope: !10821)
!10827 = !DILocalVariable(name: "this_nregs", scope: !10821, file: !3, line: 1932, type: !7)
!10828 = !DILocation(line: 1932, column: 17, scope: !10821)
!10829 = !DILocation(line: 1932, column: 47, scope: !10821)
!10830 = !DILocation(line: 1932, column: 30, scope: !10821)
!10831 = !DILocation(line: 1932, column: 54, scope: !10821)
!10832 = !DILocation(line: 1932, column: 58, scope: !10821)
!10833 = !DILocation(line: 1934, column: 11, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 1934, column: 4)
!10835 = !DILocation(line: 1934, column: 9, scope: !10834)
!10836 = !DILocation(line: 1934, column: 16, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 1934, column: 4)
!10838 = !DILocation(line: 1934, column: 20, scope: !10837)
!10839 = !DILocation(line: 1934, column: 18, scope: !10837)
!10840 = !DILocation(line: 1934, column: 4, scope: !10834)
!10841 = !DILocation(line: 1936, column: 36, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 1935, column: 6)
!10843 = !DILocation(line: 1936, column: 44, scope: !10842)
!10844 = !DILocation(line: 1936, column: 42, scope: !10842)
!10845 = !DILocation(line: 1936, column: 21, scope: !10842)
!10846 = !DILocation(line: 1936, column: 18, scope: !10842)
!10847 = !DILocation(line: 1937, column: 13, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 1937, column: 12)
!10849 = !DILocation(line: 1938, column: 5, scope: !10848)
!10850 = !DILocation(line: 1938, column: 8, scope: !10848)
!10851 = !DILocation(line: 1937, column: 12, scope: !10842)
!10852 = !DILocation(line: 1939, column: 6, scope: !10848)
!10853 = !DILocation(line: 1939, column: 3, scope: !10848)
!10854 = !DILocation(line: 1940, column: 6, scope: !10842)
!10855 = !DILocation(line: 1934, column: 33, scope: !10837)
!10856 = !DILocation(line: 1934, column: 4, scope: !10837)
!10857 = distinct !{!10857, !10840, !10858}
!10858 = !DILocation(line: 1940, column: 6, scope: !10834)
!10859 = !DILocation(line: 1941, column: 10, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 1941, column: 8)
!10861 = !DILocation(line: 1941, column: 8, scope: !10821)
!10862 = !DILocation(line: 1942, column: 6, scope: !10860)
!10863 = !DILocation(line: 1944, column: 8, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 1944, column: 8)
!10865 = !DILocation(line: 1944, column: 8, scope: !10821)
!10866 = !DILocation(line: 1948, column: 19, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10868, file: !3, line: 1948, column: 8)
!10868 = distinct !DILexicalBlock(scope: !10864, file: !3, line: 1945, column: 6)
!10869 = !DILocation(line: 1948, column: 15, scope: !10867)
!10870 = !DILocation(line: 1948, column: 13, scope: !10867)
!10871 = !DILocation(line: 1948, column: 24, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 1948, column: 8)
!10873 = !DILocation(line: 1948, column: 28, scope: !10872)
!10874 = !DILocation(line: 1948, column: 26, scope: !10872)
!10875 = !DILocation(line: 1948, column: 8, scope: !10867)
!10876 = !DILocalVariable(name: "r", scope: !10877, file: !3, line: 1950, type: !2396)
!10877 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 1949, column: 3)
!10878 = !DILocation(line: 1950, column: 9, scope: !10877)
!10879 = !DILocation(line: 1950, column: 40, scope: !10877)
!10880 = !DILocation(line: 1950, column: 48, scope: !10877)
!10881 = !DILocation(line: 1950, column: 46, scope: !10877)
!10882 = !DILocation(line: 1950, column: 13, scope: !10877)
!10883 = !DILocation(line: 1952, column: 9, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 1952, column: 9)
!10885 = !DILocation(line: 1952, column: 11, scope: !10884)
!10886 = !DILocation(line: 1952, column: 9, scope: !10877)
!10887 = !DILocation(line: 1953, column: 7, scope: !10884)
!10888 = !DILocation(line: 1954, column: 9, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 1954, column: 9)
!10890 = !DILocation(line: 1954, column: 11, scope: !10889)
!10891 = !DILocation(line: 1954, column: 16, scope: !10889)
!10892 = !DILocation(line: 1954, column: 37, scope: !10889)
!10893 = !DILocation(line: 1954, column: 39, scope: !10889)
!10894 = !DILocation(line: 1954, column: 19, scope: !10889)
!10895 = !DILocation(line: 1954, column: 47, scope: !10889)
!10896 = !DILocation(line: 1954, column: 44, scope: !10889)
!10897 = !DILocation(line: 1954, column: 9, scope: !10877)
!10898 = !DILocation(line: 1955, column: 32, scope: !10889)
!10899 = !DILocation(line: 1955, column: 26, scope: !10889)
!10900 = !DILocation(line: 1955, column: 7, scope: !10889)
!10901 = !DILocation(line: 1955, column: 30, scope: !10889)
!10902 = !DILocation(line: 1956, column: 3, scope: !10877)
!10903 = !DILocation(line: 1948, column: 41, scope: !10872)
!10904 = !DILocation(line: 1948, column: 8, scope: !10872)
!10905 = distinct !{!10905, !10875, !10906}
!10906 = !DILocation(line: 1956, column: 3, scope: !10867)
!10907 = !DILocation(line: 1957, column: 27, scope: !10868)
!10908 = !DILocation(line: 1957, column: 8, scope: !10868)
!10909 = !DILocation(line: 1957, column: 31, scope: !10868)
!10910 = !DILocation(line: 1958, column: 12, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10868, file: !3, line: 1958, column: 12)
!10912 = !DILocation(line: 1958, column: 21, scope: !10911)
!10913 = !DILocation(line: 1959, column: 5, scope: !10911)
!10914 = !DILocation(line: 1961, column: 13, scope: !10911)
!10915 = !DILocation(line: 1961, column: 17, scope: !10911)
!10916 = !DILocation(line: 1961, column: 21, scope: !10911)
!10917 = !DILocation(line: 1961, column: 25, scope: !10911)
!10918 = !DILocation(line: 1962, column: 13, scope: !10911)
!10919 = !DILocation(line: 1962, column: 20, scope: !10911)
!10920 = !DILocation(line: 1959, column: 8, scope: !10911)
!10921 = !DILocation(line: 1958, column: 12, scope: !10868)
!10922 = !DILocation(line: 1964, column: 16, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 1963, column: 3)
!10924 = !DILocation(line: 1964, column: 14, scope: !10923)
!10925 = !DILocation(line: 1965, column: 12, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 1965, column: 5)
!10927 = !DILocation(line: 1965, column: 10, scope: !10926)
!10928 = !DILocation(line: 1967, column: 55, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 1966, column: 7)
!10930 = distinct !DILexicalBlock(scope: !10926, file: !3, line: 1965, column: 5)
!10931 = !DILocation(line: 1967, column: 37, scope: !10929)
!10932 = !DILocation(line: 1967, column: 32, scope: !10929)
!10933 = !DILocation(line: 1967, column: 9, scope: !10929)
!10934 = !DILocation(line: 1967, column: 35, scope: !10929)
!10935 = !DILocation(line: 1968, column: 31, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 1968, column: 13)
!10937 = !DILocation(line: 1968, column: 13, scope: !10936)
!10938 = !DILocation(line: 1968, column: 34, scope: !10936)
!10939 = !DILocation(line: 1968, column: 13, scope: !10929)
!10940 = !DILocation(line: 1969, column: 4, scope: !10936)
!10941 = !DILocation(line: 1970, column: 7, scope: !10929)
!10942 = !DILocation(line: 1965, column: 19, scope: !10930)
!10943 = !DILocation(line: 1965, column: 5, scope: !10930)
!10944 = distinct !{!10944, !10945, !10946}
!10945 = !DILocation(line: 1965, column: 5, scope: !10926)
!10946 = !DILocation(line: 1970, column: 7, scope: !10926)
!10947 = !DILocation(line: 1971, column: 3, scope: !10923)
!10948 = !DILocation(line: 1972, column: 8, scope: !10868)
!10949 = !DILocation(line: 1975, column: 8, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 1975, column: 8)
!10951 = !DILocation(line: 1975, column: 12, scope: !10950)
!10952 = !DILocation(line: 1975, column: 15, scope: !10950)
!10953 = !DILocation(line: 1975, column: 18, scope: !10950)
!10954 = !DILocation(line: 1975, column: 33, scope: !10950)
!10955 = !DILocation(line: 1975, column: 36, scope: !10950)
!10956 = !DILocation(line: 1975, column: 54, scope: !10950)
!10957 = !DILocation(line: 1975, column: 51, scope: !10950)
!10958 = !DILocation(line: 1975, column: 8, scope: !10821)
!10959 = !DILocation(line: 1976, column: 15, scope: !10950)
!10960 = !DILocation(line: 1976, column: 6, scope: !10950)
!10961 = !DILocation(line: 1977, column: 8, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 1977, column: 8)
!10963 = !DILocation(line: 1977, column: 12, scope: !10962)
!10964 = !DILocation(line: 1977, column: 16, scope: !10962)
!10965 = !DILocation(line: 1977, column: 19, scope: !10962)
!10966 = !DILocation(line: 1977, column: 35, scope: !10962)
!10967 = !DILocation(line: 1977, column: 38, scope: !10962)
!10968 = !DILocation(line: 1977, column: 57, scope: !10962)
!10969 = !DILocation(line: 1977, column: 54, scope: !10962)
!10970 = !DILocation(line: 1977, column: 8, scope: !10821)
!10971 = !DILocation(line: 1978, column: 15, scope: !10962)
!10972 = !DILocation(line: 1978, column: 6, scope: !10962)
!10973 = !DILocation(line: 1979, column: 8, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 1979, column: 8)
!10975 = !DILocation(line: 1979, column: 20, scope: !10974)
!10976 = !DILocation(line: 1979, column: 18, scope: !10974)
!10977 = !DILocation(line: 1982, column: 8, scope: !10974)
!10978 = !DILocation(line: 1982, column: 12, scope: !10974)
!10979 = !DILocation(line: 1982, column: 25, scope: !10974)
!10980 = !DILocation(line: 1982, column: 22, scope: !10974)
!10981 = !DILocation(line: 1984, column: 5, scope: !10974)
!10982 = !DILocation(line: 1984, column: 29, scope: !10974)
!10983 = !DILocation(line: 1984, column: 9, scope: !10974)
!10984 = !DILocation(line: 1985, column: 31, scope: !10974)
!10985 = !DILocation(line: 1985, column: 11, scope: !10974)
!10986 = !DILocation(line: 1985, column: 9, scope: !10974)
!10987 = !DILocation(line: 1979, column: 8, scope: !10821)
!10988 = !DILocation(line: 1992, column: 19, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 1991, column: 6)
!10990 = !DILocation(line: 1992, column: 17, scope: !10989)
!10991 = !DILocation(line: 1993, column: 20, scope: !10989)
!10992 = !DILocation(line: 1993, column: 18, scope: !10989)
!10993 = !DILocation(line: 1994, column: 6, scope: !10989)
!10994 = !DILocation(line: 1995, column: 2, scope: !10821)
!10995 = !DILocation(line: 1996, column: 5, scope: !10809)
!10996 = !DILocation(line: 1918, column: 43, scope: !10805)
!10997 = !DILocation(line: 1918, column: 3, scope: !10805)
!10998 = distinct !{!10998, !10807, !10999}
!10999 = !DILocation(line: 1996, column: 5, scope: !10802)
!11000 = !DILocation(line: 1997, column: 7, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 1997, column: 7)
!11002 = !DILocation(line: 1997, column: 16, scope: !11001)
!11003 = !DILocation(line: 1997, column: 7, scope: !3758)
!11004 = !DILocation(line: 1998, column: 5, scope: !11001)
!11005 = !DILocation(line: 2000, column: 7, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 2000, column: 7)
!11007 = !DILocation(line: 2000, column: 7, scope: !3758)
!11008 = !DILocation(line: 2001, column: 14, scope: !11006)
!11009 = !DILocation(line: 2001, column: 57, scope: !11006)
!11010 = !DILocation(line: 2001, column: 67, scope: !11006)
!11011 = !DILocation(line: 2001, column: 5, scope: !11006)
!11012 = !DILocation(line: 2003, column: 32, scope: !3758)
!11013 = !DILocation(line: 2003, column: 15, scope: !3758)
!11014 = !DILocation(line: 2003, column: 42, scope: !3758)
!11015 = !DILocation(line: 2003, column: 46, scope: !3758)
!11016 = !DILocation(line: 2003, column: 3, scope: !3758)
!11017 = !DILocation(line: 2003, column: 7, scope: !3758)
!11018 = !DILocation(line: 2003, column: 13, scope: !3758)
!11019 = !DILocation(line: 2004, column: 15, scope: !3758)
!11020 = !DILocation(line: 2004, column: 3, scope: !3758)
!11021 = !DILocation(line: 2004, column: 7, scope: !3758)
!11022 = !DILocation(line: 2004, column: 13, scope: !3758)
!11023 = !DILocation(line: 2006, column: 3, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 2006, column: 3)
!11025 = !DILocation(line: 2006, column: 3, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 2006, column: 3)
!11027 = !DILocation(line: 2009, column: 29, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11026, file: !3, line: 2008, column: 5)
!11029 = !DILocation(line: 2009, column: 39, scope: !11028)
!11030 = !DILocation(line: 2009, column: 43, scope: !11028)
!11031 = !DILocation(line: 2009, column: 50, scope: !11028)
!11032 = !DILocation(line: 2009, column: 7, scope: !11028)
!11033 = !DILocation(line: 2010, column: 5, scope: !11028)
!11034 = distinct !{!11034, !11023, !11035}
!11035 = !DILocation(line: 2010, column: 5, scope: !11024)
!11036 = !DILocation(line: 2012, column: 3, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 2012, column: 3)
!11038 = !DILocation(line: 2012, column: 3, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11037, file: !3, line: 2012, column: 3)
!11040 = !DILocation(line: 2015, column: 29, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 2014, column: 5)
!11042 = !DILocation(line: 2015, column: 39, scope: !11041)
!11043 = !DILocation(line: 2015, column: 43, scope: !11041)
!11044 = !DILocation(line: 2015, column: 50, scope: !11041)
!11045 = !DILocation(line: 2015, column: 7, scope: !11041)
!11046 = !DILocation(line: 2016, column: 5, scope: !11041)
!11047 = distinct !{!11047, !11036, !11048}
!11048 = !DILocation(line: 2016, column: 5, scope: !11037)
!11049 = !DILocation(line: 2018, column: 10, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 2018, column: 3)
!11051 = !DILocation(line: 2018, column: 8, scope: !11050)
!11052 = !DILocation(line: 2018, column: 15, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 2018, column: 3)
!11054 = !DILocation(line: 2018, column: 19, scope: !11053)
!11055 = !DILocation(line: 2018, column: 23, scope: !11053)
!11056 = !DILocation(line: 2018, column: 17, scope: !11053)
!11057 = !DILocation(line: 2018, column: 3, scope: !11050)
!11058 = !DILocation(line: 2020, column: 7, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 2019, column: 5)
!11060 = !DILocation(line: 2021, column: 7, scope: !11059)
!11061 = !DILocation(line: 2022, column: 7, scope: !11059)
!11062 = !DILocation(line: 2023, column: 7, scope: !11059)
!11063 = !DILocation(line: 2024, column: 5, scope: !11059)
!11064 = !DILocation(line: 2018, column: 31, scope: !11053)
!11065 = !DILocation(line: 2018, column: 3, scope: !11053)
!11066 = distinct !{!11066, !11057, !11067}
!11067 = !DILocation(line: 2024, column: 5, scope: !11050)
!11068 = !DILocation(line: 2025, column: 3, scope: !3758)
!11069 = !DILocation(line: 2026, column: 1, scope: !3758)
!11070 = distinct !DISubprogram(name: "spill_failure", scope: !3, file: !3, line: 2146, type: !11071, scopeLine: 2147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11071 = !DISubroutineType(types: !11072)
!11072 = !{null, !2372, !527}
!11073 = !DILocalVariable(name: "insn", arg: 1, scope: !11070, file: !3, line: 2146, type: !2372)
!11074 = !DILocation(line: 2146, column: 20, scope: !11070)
!11075 = !DILocalVariable(name: "rclass", arg: 2, scope: !11070, file: !3, line: 2146, type: !527)
!11076 = !DILocation(line: 2146, column: 41, scope: !11070)
!11077 = !DILocation(line: 2148, column: 22, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11070, file: !3, line: 2148, column: 7)
!11079 = !DILocation(line: 2148, column: 7, scope: !11078)
!11080 = !DILocation(line: 2148, column: 38, scope: !11078)
!11081 = !DILocation(line: 2148, column: 7, scope: !11070)
!11082 = !DILocation(line: 2149, column: 20, scope: !11078)
!11083 = !DILocation(line: 2151, column: 22, scope: !11078)
!11084 = !DILocation(line: 2151, column: 6, scope: !11078)
!11085 = !DILocation(line: 2149, column: 5, scope: !11078)
!11086 = !DILocation(line: 2155, column: 23, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11078, file: !3, line: 2153, column: 5)
!11088 = !DILocation(line: 2155, column: 7, scope: !11087)
!11089 = !DILocation(line: 2154, column: 7, scope: !11087)
!11090 = !DILocation(line: 2157, column: 11, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 2157, column: 11)
!11092 = !DILocation(line: 2157, column: 11, scope: !11087)
!11093 = !DILocation(line: 2159, column: 13, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11091, file: !3, line: 2158, column: 2)
!11095 = !DILocation(line: 2159, column: 53, scope: !11094)
!11096 = !DILocation(line: 2159, column: 4, scope: !11094)
!11097 = !DILocation(line: 2160, column: 28, scope: !11094)
!11098 = !DILocation(line: 2160, column: 4, scope: !11094)
!11099 = !DILocation(line: 2161, column: 2, scope: !11094)
!11100 = !DILocation(line: 2162, column: 7, scope: !11087)
!11101 = !DILocation(line: 2164, column: 1, scope: !11070)
!11102 = distinct !DISubprogram(name: "count_pseudo", scope: !3, file: !3, line: 1781, type: !5471, scopeLine: 1782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11103 = !DILocalVariable(name: "reg", arg: 1, scope: !11102, file: !3, line: 1781, type: !2396)
!11104 = !DILocation(line: 1781, column: 19, scope: !11102)
!11105 = !DILocalVariable(name: "freq", scope: !11102, file: !3, line: 1783, type: !2396)
!11106 = !DILocation(line: 1783, column: 7, scope: !11102)
!11107 = !DILocation(line: 1783, column: 14, scope: !11102)
!11108 = !DILocalVariable(name: "r", scope: !11102, file: !3, line: 1784, type: !2396)
!11109 = !DILocation(line: 1784, column: 7, scope: !11102)
!11110 = !DILocation(line: 1784, column: 11, scope: !11102)
!11111 = !DILocation(line: 1784, column: 24, scope: !11102)
!11112 = !DILocalVariable(name: "nregs", scope: !11102, file: !3, line: 1785, type: !2396)
!11113 = !DILocation(line: 1785, column: 7, scope: !11102)
!11114 = !DILocation(line: 1787, column: 7, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 1787, column: 7)
!11116 = !DILocation(line: 1788, column: 7, scope: !11115)
!11117 = !DILocation(line: 1788, column: 10, scope: !11115)
!11118 = !DILocation(line: 1791, column: 7, scope: !11115)
!11119 = !DILocation(line: 1791, column: 11, scope: !11115)
!11120 = !DILocation(line: 1791, column: 27, scope: !11115)
!11121 = !DILocation(line: 1791, column: 30, scope: !11115)
!11122 = !DILocation(line: 1791, column: 32, scope: !11115)
!11123 = !DILocation(line: 1787, column: 7, scope: !11102)
!11124 = !DILocation(line: 1792, column: 5, scope: !11115)
!11125 = !DILocation(line: 1794, column: 3, scope: !11102)
!11126 = !DILocation(line: 1796, column: 3, scope: !11102)
!11127 = !DILocation(line: 1798, column: 24, scope: !11102)
!11128 = !DILocation(line: 1798, column: 18, scope: !11102)
!11129 = !DILocation(line: 1798, column: 3, scope: !11102)
!11130 = !DILocation(line: 1798, column: 21, scope: !11102)
!11131 = !DILocation(line: 1799, column: 28, scope: !11102)
!11132 = !DILocation(line: 1799, column: 11, scope: !11102)
!11133 = !DILocation(line: 1799, column: 31, scope: !11102)
!11134 = !DILocation(line: 1799, column: 9, scope: !11102)
!11135 = !DILocation(line: 1800, column: 3, scope: !11102)
!11136 = !DILocation(line: 1800, column: 15, scope: !11102)
!11137 = !DILocation(line: 1800, column: 18, scope: !11102)
!11138 = !DILocation(line: 1802, column: 47, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 1801, column: 5)
!11140 = !DILocation(line: 1802, column: 34, scope: !11139)
!11141 = !DILocation(line: 1802, column: 38, scope: !11139)
!11142 = !DILocation(line: 1802, column: 36, scope: !11139)
!11143 = !DILocation(line: 1802, column: 7, scope: !11139)
!11144 = !DILocation(line: 1802, column: 45, scope: !11139)
!11145 = !DILocation(line: 1803, column: 32, scope: !11139)
!11146 = !DILocation(line: 1803, column: 18, scope: !11139)
!11147 = !DILocation(line: 1803, column: 22, scope: !11139)
!11148 = !DILocation(line: 1803, column: 20, scope: !11139)
!11149 = !DILocation(line: 1803, column: 7, scope: !11139)
!11150 = !DILocation(line: 1803, column: 29, scope: !11139)
!11151 = distinct !{!11151, !11135, !11152}
!11152 = !DILocation(line: 1804, column: 5, scope: !11102)
!11153 = !DILocation(line: 1805, column: 1, scope: !11102)
!11154 = distinct !DISubprogram(name: "reloads_conflict", scope: !3, file: !3, line: 5310, type: !11155, scopeLine: 5311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11155 = !DISubroutineType(types: !11156)
!11156 = !{!2396, !2396, !2396}
!11157 = !DILocalVariable(name: "r1", arg: 1, scope: !11154, file: !3, line: 5310, type: !2396)
!11158 = !DILocation(line: 5310, column: 23, scope: !11154)
!11159 = !DILocalVariable(name: "r2", arg: 2, scope: !11154, file: !3, line: 5310, type: !2396)
!11160 = !DILocation(line: 5310, column: 31, scope: !11154)
!11161 = !DILocalVariable(name: "r1_type", scope: !11154, file: !3, line: 5312, type: !2049)
!11162 = !DILocation(line: 5312, column: 20, scope: !11154)
!11163 = !DILocation(line: 5312, column: 34, scope: !11154)
!11164 = !DILocation(line: 5312, column: 30, scope: !11154)
!11165 = !DILocation(line: 5312, column: 38, scope: !11154)
!11166 = !DILocalVariable(name: "r2_type", scope: !11154, file: !3, line: 5313, type: !2049)
!11167 = !DILocation(line: 5313, column: 20, scope: !11154)
!11168 = !DILocation(line: 5313, column: 34, scope: !11154)
!11169 = !DILocation(line: 5313, column: 30, scope: !11154)
!11170 = !DILocation(line: 5313, column: 38, scope: !11154)
!11171 = !DILocalVariable(name: "r1_opnum", scope: !11154, file: !3, line: 5314, type: !2396)
!11172 = !DILocation(line: 5314, column: 7, scope: !11154)
!11173 = !DILocation(line: 5314, column: 22, scope: !11154)
!11174 = !DILocation(line: 5314, column: 18, scope: !11154)
!11175 = !DILocation(line: 5314, column: 26, scope: !11154)
!11176 = !DILocalVariable(name: "r2_opnum", scope: !11154, file: !3, line: 5315, type: !2396)
!11177 = !DILocation(line: 5315, column: 7, scope: !11154)
!11178 = !DILocation(line: 5315, column: 22, scope: !11154)
!11179 = !DILocation(line: 5315, column: 18, scope: !11154)
!11180 = !DILocation(line: 5315, column: 26, scope: !11154)
!11181 = !DILocation(line: 5318, column: 7, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 5318, column: 7)
!11183 = !DILocation(line: 5318, column: 15, scope: !11182)
!11184 = !DILocation(line: 5318, column: 7, scope: !11154)
!11185 = !DILocation(line: 5319, column: 5, scope: !11182)
!11186 = !DILocation(line: 5323, column: 11, scope: !11154)
!11187 = !DILocation(line: 5323, column: 3, scope: !11154)
!11188 = !DILocation(line: 5326, column: 15, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 5324, column: 5)
!11190 = !DILocation(line: 5326, column: 23, scope: !11189)
!11191 = !DILocation(line: 5327, column: 8, scope: !11189)
!11192 = !DILocation(line: 5327, column: 11, scope: !11189)
!11193 = !DILocation(line: 5327, column: 19, scope: !11189)
!11194 = !DILocation(line: 5328, column: 8, scope: !11189)
!11195 = !DILocation(line: 5328, column: 11, scope: !11189)
!11196 = !DILocation(line: 5328, column: 19, scope: !11189)
!11197 = !DILocation(line: 5329, column: 8, scope: !11189)
!11198 = !DILocation(line: 5329, column: 11, scope: !11189)
!11199 = !DILocation(line: 5329, column: 19, scope: !11189)
!11200 = !DILocation(line: 5330, column: 8, scope: !11189)
!11201 = !DILocation(line: 5330, column: 13, scope: !11189)
!11202 = !DILocation(line: 5330, column: 21, scope: !11189)
!11203 = !DILocation(line: 5331, column: 6, scope: !11189)
!11204 = !DILocation(line: 5331, column: 9, scope: !11189)
!11205 = !DILocation(line: 5331, column: 17, scope: !11189)
!11206 = !DILocation(line: 5332, column: 5, scope: !11189)
!11207 = !DILocation(line: 5332, column: 8, scope: !11189)
!11208 = !DILocation(line: 5332, column: 19, scope: !11189)
!11209 = !DILocation(line: 5332, column: 17, scope: !11189)
!11210 = !DILocation(line: 0, scope: !11189)
!11211 = !DILocation(line: 5326, column: 7, scope: !11189)
!11212 = !DILocation(line: 5335, column: 16, scope: !11189)
!11213 = !DILocation(line: 5335, column: 24, scope: !11189)
!11214 = !DILocation(line: 5335, column: 52, scope: !11189)
!11215 = !DILocation(line: 5335, column: 55, scope: !11189)
!11216 = !DILocation(line: 5335, column: 67, scope: !11189)
!11217 = !DILocation(line: 5335, column: 64, scope: !11189)
!11218 = !DILocation(line: 5336, column: 8, scope: !11189)
!11219 = !DILocation(line: 5336, column: 12, scope: !11189)
!11220 = !DILocation(line: 5336, column: 20, scope: !11189)
!11221 = !DILocation(line: 5336, column: 40, scope: !11189)
!11222 = !DILocation(line: 5336, column: 43, scope: !11189)
!11223 = !DILocation(line: 5336, column: 54, scope: !11189)
!11224 = !DILocation(line: 5336, column: 52, scope: !11189)
!11225 = !DILocation(line: 5335, column: 7, scope: !11189)
!11226 = !DILocation(line: 5339, column: 16, scope: !11189)
!11227 = !DILocation(line: 5339, column: 24, scope: !11189)
!11228 = !DILocation(line: 5339, column: 54, scope: !11189)
!11229 = !DILocation(line: 5339, column: 57, scope: !11189)
!11230 = !DILocation(line: 5339, column: 69, scope: !11189)
!11231 = !DILocation(line: 5339, column: 66, scope: !11189)
!11232 = !DILocation(line: 5340, column: 8, scope: !11189)
!11233 = !DILocation(line: 5340, column: 12, scope: !11189)
!11234 = !DILocation(line: 5340, column: 20, scope: !11189)
!11235 = !DILocation(line: 5340, column: 40, scope: !11189)
!11236 = !DILocation(line: 5340, column: 43, scope: !11189)
!11237 = !DILocation(line: 5340, column: 54, scope: !11189)
!11238 = !DILocation(line: 5340, column: 52, scope: !11189)
!11239 = !DILocation(line: 5339, column: 7, scope: !11189)
!11240 = !DILocation(line: 5343, column: 16, scope: !11189)
!11241 = !DILocation(line: 5343, column: 24, scope: !11189)
!11242 = !DILocation(line: 5343, column: 53, scope: !11189)
!11243 = !DILocation(line: 5343, column: 56, scope: !11189)
!11244 = !DILocation(line: 5343, column: 68, scope: !11189)
!11245 = !DILocation(line: 5343, column: 65, scope: !11189)
!11246 = !DILocation(line: 5344, column: 8, scope: !11189)
!11247 = !DILocation(line: 5344, column: 12, scope: !11189)
!11248 = !DILocation(line: 5344, column: 20, scope: !11189)
!11249 = !DILocation(line: 5344, column: 41, scope: !11189)
!11250 = !DILocation(line: 5344, column: 44, scope: !11189)
!11251 = !DILocation(line: 5344, column: 56, scope: !11189)
!11252 = !DILocation(line: 5344, column: 53, scope: !11189)
!11253 = !DILocation(line: 5343, column: 7, scope: !11189)
!11254 = !DILocation(line: 5347, column: 16, scope: !11189)
!11255 = !DILocation(line: 5347, column: 24, scope: !11189)
!11256 = !DILocation(line: 5347, column: 54, scope: !11189)
!11257 = !DILocation(line: 5347, column: 57, scope: !11189)
!11258 = !DILocation(line: 5347, column: 69, scope: !11189)
!11259 = !DILocation(line: 5347, column: 66, scope: !11189)
!11260 = !DILocation(line: 5348, column: 8, scope: !11189)
!11261 = !DILocation(line: 5348, column: 12, scope: !11189)
!11262 = !DILocation(line: 5348, column: 20, scope: !11189)
!11263 = !DILocation(line: 5348, column: 41, scope: !11189)
!11264 = !DILocation(line: 5348, column: 44, scope: !11189)
!11265 = !DILocation(line: 5348, column: 56, scope: !11189)
!11266 = !DILocation(line: 5348, column: 53, scope: !11189)
!11267 = !DILocation(line: 5347, column: 7, scope: !11189)
!11268 = !DILocation(line: 5351, column: 15, scope: !11189)
!11269 = !DILocation(line: 5351, column: 23, scope: !11189)
!11270 = !DILocation(line: 5351, column: 43, scope: !11189)
!11271 = !DILocation(line: 5351, column: 46, scope: !11189)
!11272 = !DILocation(line: 5351, column: 54, scope: !11189)
!11273 = !DILocation(line: 5352, column: 8, scope: !11189)
!11274 = !DILocation(line: 5352, column: 12, scope: !11189)
!11275 = !DILocation(line: 5352, column: 20, scope: !11189)
!11276 = !DILocation(line: 5353, column: 5, scope: !11189)
!11277 = !DILocation(line: 5353, column: 34, scope: !11189)
!11278 = !DILocation(line: 5353, column: 38, scope: !11189)
!11279 = !DILocation(line: 5353, column: 10, scope: !11189)
!11280 = !DILocation(line: 5354, column: 9, scope: !11189)
!11281 = !DILocation(line: 5354, column: 52, scope: !11189)
!11282 = !DILocation(line: 5354, column: 56, scope: !11189)
!11283 = !DILocation(line: 5354, column: 13, scope: !11189)
!11284 = !DILocation(line: 5354, column: 12, scope: !11189)
!11285 = !DILocation(line: 5351, column: 7, scope: !11189)
!11286 = !DILocation(line: 5357, column: 15, scope: !11189)
!11287 = !DILocation(line: 5357, column: 23, scope: !11189)
!11288 = !DILocation(line: 5358, column: 8, scope: !11189)
!11289 = !DILocation(line: 5358, column: 11, scope: !11189)
!11290 = !DILocation(line: 5358, column: 19, scope: !11189)
!11291 = !DILocation(line: 5357, column: 7, scope: !11189)
!11292 = !DILocation(line: 5361, column: 15, scope: !11189)
!11293 = !DILocation(line: 5361, column: 23, scope: !11189)
!11294 = !DILocation(line: 5361, column: 42, scope: !11189)
!11295 = !DILocation(line: 5361, column: 45, scope: !11189)
!11296 = !DILocation(line: 5361, column: 53, scope: !11189)
!11297 = !DILocation(line: 5362, column: 8, scope: !11189)
!11298 = !DILocation(line: 5362, column: 13, scope: !11189)
!11299 = !DILocation(line: 5362, column: 21, scope: !11189)
!11300 = !DILocation(line: 5363, column: 6, scope: !11189)
!11301 = !DILocation(line: 5363, column: 9, scope: !11189)
!11302 = !DILocation(line: 5363, column: 17, scope: !11189)
!11303 = !DILocation(line: 5364, column: 5, scope: !11189)
!11304 = !DILocation(line: 5364, column: 8, scope: !11189)
!11305 = !DILocation(line: 5364, column: 20, scope: !11189)
!11306 = !DILocation(line: 5364, column: 17, scope: !11189)
!11307 = !DILocation(line: 5361, column: 7, scope: !11189)
!11308 = !DILocation(line: 5367, column: 15, scope: !11189)
!11309 = !DILocation(line: 5367, column: 23, scope: !11189)
!11310 = !DILocation(line: 5367, column: 43, scope: !11189)
!11311 = !DILocation(line: 5367, column: 46, scope: !11189)
!11312 = !DILocation(line: 5367, column: 54, scope: !11189)
!11313 = !DILocation(line: 5368, column: 8, scope: !11189)
!11314 = !DILocation(line: 5368, column: 11, scope: !11189)
!11315 = !DILocation(line: 5368, column: 19, scope: !11189)
!11316 = !DILocation(line: 5369, column: 8, scope: !11189)
!11317 = !DILocation(line: 5369, column: 11, scope: !11189)
!11318 = !DILocation(line: 5369, column: 19, scope: !11189)
!11319 = !DILocation(line: 5367, column: 7, scope: !11189)
!11320 = !DILocation(line: 5372, column: 14, scope: !11189)
!11321 = !DILocation(line: 5372, column: 22, scope: !11189)
!11322 = !DILocation(line: 5372, column: 7, scope: !11189)
!11323 = !DILocation(line: 5375, column: 7, scope: !11189)
!11324 = !DILocation(line: 5378, column: 7, scope: !11189)
!11325 = !DILocation(line: 5379, column: 5, scope: !11189)
!11326 = !DILocation(line: 5381, column: 5, scope: !11154)
!11327 = !DILocation(line: 5383, column: 1, scope: !11154)
!11328 = distinct !DISubprogram(name: "count_spilled_pseudo", scope: !3, file: !3, line: 1864, type: !11329, scopeLine: 1865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11329 = !DISubroutineType(types: !11330)
!11330 = !{null, !2396, !2396, !2396}
!11331 = !DILocalVariable(name: "spilled", arg: 1, scope: !11328, file: !3, line: 1864, type: !2396)
!11332 = !DILocation(line: 1864, column: 27, scope: !11328)
!11333 = !DILocalVariable(name: "spilled_nregs", arg: 2, scope: !11328, file: !3, line: 1864, type: !2396)
!11334 = !DILocation(line: 1864, column: 40, scope: !11328)
!11335 = !DILocalVariable(name: "reg", arg: 3, scope: !11328, file: !3, line: 1864, type: !2396)
!11336 = !DILocation(line: 1864, column: 59, scope: !11328)
!11337 = !DILocalVariable(name: "freq", scope: !11328, file: !3, line: 1866, type: !2396)
!11338 = !DILocation(line: 1866, column: 7, scope: !11328)
!11339 = !DILocation(line: 1866, column: 14, scope: !11328)
!11340 = !DILocalVariable(name: "r", scope: !11328, file: !3, line: 1867, type: !2396)
!11341 = !DILocation(line: 1867, column: 7, scope: !11328)
!11342 = !DILocation(line: 1867, column: 11, scope: !11328)
!11343 = !DILocation(line: 1867, column: 24, scope: !11328)
!11344 = !DILocalVariable(name: "nregs", scope: !11328, file: !3, line: 1868, type: !2396)
!11345 = !DILocation(line: 1868, column: 7, scope: !11328)
!11346 = !DILocation(line: 1868, column: 32, scope: !11328)
!11347 = !DILocation(line: 1868, column: 15, scope: !11328)
!11348 = !DILocation(line: 1868, column: 35, scope: !11328)
!11349 = !DILocation(line: 1872, column: 8, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 1872, column: 7)
!11351 = !DILocation(line: 1872, column: 24, scope: !11350)
!11352 = !DILocation(line: 1872, column: 27, scope: !11350)
!11353 = !DILocation(line: 1872, column: 29, scope: !11350)
!11354 = !DILocation(line: 1873, column: 7, scope: !11350)
!11355 = !DILocation(line: 1873, column: 10, scope: !11350)
!11356 = !DILocation(line: 1874, column: 7, scope: !11350)
!11357 = !DILocation(line: 1874, column: 10, scope: !11350)
!11358 = !DILocation(line: 1874, column: 20, scope: !11350)
!11359 = !DILocation(line: 1874, column: 18, scope: !11350)
!11360 = !DILocation(line: 1874, column: 37, scope: !11350)
!11361 = !DILocation(line: 1874, column: 34, scope: !11350)
!11362 = !DILocation(line: 1874, column: 39, scope: !11350)
!11363 = !DILocation(line: 1874, column: 42, scope: !11350)
!11364 = !DILocation(line: 1874, column: 46, scope: !11350)
!11365 = !DILocation(line: 1874, column: 44, scope: !11350)
!11366 = !DILocation(line: 1874, column: 55, scope: !11350)
!11367 = !DILocation(line: 1874, column: 52, scope: !11350)
!11368 = !DILocation(line: 1872, column: 7, scope: !11328)
!11369 = !DILocation(line: 1875, column: 5, scope: !11350)
!11370 = !DILocation(line: 1877, column: 3, scope: !11328)
!11371 = !DILocation(line: 1879, column: 24, scope: !11328)
!11372 = !DILocation(line: 1879, column: 18, scope: !11328)
!11373 = !DILocation(line: 1879, column: 3, scope: !11328)
!11374 = !DILocation(line: 1879, column: 21, scope: !11328)
!11375 = !DILocation(line: 1880, column: 3, scope: !11328)
!11376 = !DILocation(line: 1880, column: 15, scope: !11328)
!11377 = !DILocation(line: 1880, column: 18, scope: !11328)
!11378 = !DILocation(line: 1882, column: 34, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 1881, column: 5)
!11380 = !DILocation(line: 1882, column: 38, scope: !11379)
!11381 = !DILocation(line: 1882, column: 36, scope: !11379)
!11382 = !DILocation(line: 1882, column: 7, scope: !11379)
!11383 = !DILocation(line: 1882, column: 45, scope: !11379)
!11384 = !DILocation(line: 1883, column: 32, scope: !11379)
!11385 = !DILocation(line: 1883, column: 18, scope: !11379)
!11386 = !DILocation(line: 1883, column: 22, scope: !11379)
!11387 = !DILocation(line: 1883, column: 20, scope: !11379)
!11388 = !DILocation(line: 1883, column: 7, scope: !11379)
!11389 = !DILocation(line: 1883, column: 29, scope: !11379)
!11390 = distinct !{!11390, !11375, !11391}
!11391 = !DILocation(line: 1884, column: 5, scope: !11328)
!11392 = !DILocation(line: 1885, column: 1, scope: !11328)
!11393 = distinct !DISubprogram(name: "reloads_unique_chain_p", scope: !3, file: !3, line: 5145, type: !11394, scopeLine: 5146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11394 = !DISubroutineType(types: !11395)
!11395 = !{!2603, !2396, !2396}
!11396 = !DILocalVariable(name: "r1", arg: 1, scope: !11393, file: !3, line: 5145, type: !2396)
!11397 = !DILocation(line: 5145, column: 29, scope: !11393)
!11398 = !DILocalVariable(name: "r2", arg: 2, scope: !11393, file: !3, line: 5145, type: !2396)
!11399 = !DILocation(line: 5145, column: 37, scope: !11393)
!11400 = !DILocalVariable(name: "i", scope: !11393, file: !3, line: 5147, type: !2396)
!11401 = !DILocation(line: 5147, column: 7, scope: !11393)
!11402 = !DILocation(line: 5150, column: 13, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 5150, column: 7)
!11404 = !DILocation(line: 5150, column: 9, scope: !11403)
!11405 = !DILocation(line: 5150, column: 17, scope: !11403)
!11406 = !DILocation(line: 5150, column: 20, scope: !11403)
!11407 = !DILocation(line: 5150, column: 29, scope: !11403)
!11408 = !DILocation(line: 5150, column: 25, scope: !11403)
!11409 = !DILocation(line: 5150, column: 33, scope: !11403)
!11410 = !DILocation(line: 5150, column: 7, scope: !11393)
!11411 = !DILocation(line: 5151, column: 5, scope: !11403)
!11412 = !DILocation(line: 5154, column: 11, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 5154, column: 7)
!11414 = !DILocation(line: 5154, column: 7, scope: !11413)
!11415 = !DILocation(line: 5154, column: 15, scope: !11413)
!11416 = !DILocation(line: 5154, column: 19, scope: !11413)
!11417 = !DILocation(line: 5154, column: 26, scope: !11413)
!11418 = !DILocation(line: 5154, column: 22, scope: !11413)
!11419 = !DILocation(line: 5154, column: 30, scope: !11413)
!11420 = !DILocation(line: 5154, column: 7, scope: !11393)
!11421 = !DILocation(line: 5155, column: 5, scope: !11413)
!11422 = !DILocation(line: 5159, column: 11, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 5159, column: 7)
!11424 = !DILocation(line: 5159, column: 7, scope: !11423)
!11425 = !DILocation(line: 5159, column: 15, scope: !11423)
!11426 = !DILocation(line: 5159, column: 28, scope: !11423)
!11427 = !DILocation(line: 5159, column: 24, scope: !11423)
!11428 = !DILocation(line: 5159, column: 32, scope: !11423)
!11429 = !DILocation(line: 5159, column: 21, scope: !11423)
!11430 = !DILocation(line: 5160, column: 7, scope: !11423)
!11431 = !DILocation(line: 5160, column: 27, scope: !11423)
!11432 = !DILocation(line: 5160, column: 23, scope: !11423)
!11433 = !DILocation(line: 5160, column: 31, scope: !11423)
!11434 = !DILocation(line: 5160, column: 39, scope: !11423)
!11435 = !DILocation(line: 5160, column: 35, scope: !11423)
!11436 = !DILocation(line: 5160, column: 43, scope: !11423)
!11437 = !DILocation(line: 5160, column: 10, scope: !11423)
!11438 = !DILocation(line: 5161, column: 7, scope: !11423)
!11439 = !DILocation(line: 5161, column: 14, scope: !11423)
!11440 = !DILocation(line: 5161, column: 10, scope: !11423)
!11441 = !DILocation(line: 5161, column: 18, scope: !11423)
!11442 = !DILocation(line: 5161, column: 27, scope: !11423)
!11443 = !DILocation(line: 5161, column: 34, scope: !11423)
!11444 = !DILocation(line: 5161, column: 30, scope: !11423)
!11445 = !DILocation(line: 5161, column: 38, scope: !11423)
!11446 = !DILocation(line: 5162, column: 7, scope: !11423)
!11447 = !DILocation(line: 5162, column: 34, scope: !11423)
!11448 = !DILocation(line: 5162, column: 30, scope: !11423)
!11449 = !DILocation(line: 5162, column: 38, scope: !11423)
!11450 = !DILocation(line: 5162, column: 46, scope: !11423)
!11451 = !DILocation(line: 5162, column: 42, scope: !11423)
!11452 = !DILocation(line: 5162, column: 50, scope: !11423)
!11453 = !DILocation(line: 5162, column: 13, scope: !11423)
!11454 = !DILocation(line: 5163, column: 6, scope: !11423)
!11455 = !DILocation(line: 5163, column: 30, scope: !11423)
!11456 = !DILocation(line: 5163, column: 26, scope: !11423)
!11457 = !DILocation(line: 5163, column: 34, scope: !11423)
!11458 = !DILocation(line: 5163, column: 42, scope: !11423)
!11459 = !DILocation(line: 5163, column: 38, scope: !11423)
!11460 = !DILocation(line: 5163, column: 46, scope: !11423)
!11461 = !DILocation(line: 5163, column: 9, scope: !11423)
!11462 = !DILocation(line: 5159, column: 7, scope: !11393)
!11463 = !DILocation(line: 5164, column: 5, scope: !11423)
!11464 = !DILocation(line: 5166, column: 10, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 5166, column: 3)
!11466 = !DILocation(line: 5166, column: 8, scope: !11465)
!11467 = !DILocation(line: 5166, column: 15, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 5166, column: 3)
!11469 = !DILocation(line: 5166, column: 19, scope: !11468)
!11470 = !DILocation(line: 5166, column: 17, scope: !11468)
!11471 = !DILocation(line: 5166, column: 3, scope: !11465)
!11472 = !DILocation(line: 5168, column: 9, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 5168, column: 9)
!11474 = !DILocation(line: 5168, column: 14, scope: !11473)
!11475 = !DILocation(line: 5168, column: 11, scope: !11473)
!11476 = !DILocation(line: 5168, column: 17, scope: !11473)
!11477 = !DILocation(line: 5168, column: 20, scope: !11473)
!11478 = !DILocation(line: 5168, column: 25, scope: !11473)
!11479 = !DILocation(line: 5168, column: 22, scope: !11473)
!11480 = !DILocation(line: 5168, column: 28, scope: !11473)
!11481 = !DILocation(line: 5168, column: 35, scope: !11473)
!11482 = !DILocation(line: 5168, column: 31, scope: !11473)
!11483 = !DILocation(line: 5168, column: 38, scope: !11473)
!11484 = !DILocation(line: 5168, column: 9, scope: !11468)
!11485 = !DILocation(line: 5171, column: 27, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 5171, column: 6)
!11487 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 5169, column: 7)
!11488 = !DILocation(line: 5171, column: 23, scope: !11486)
!11489 = !DILocation(line: 5171, column: 31, scope: !11486)
!11490 = !DILocation(line: 5171, column: 39, scope: !11486)
!11491 = !DILocation(line: 5171, column: 35, scope: !11486)
!11492 = !DILocation(line: 5171, column: 42, scope: !11486)
!11493 = !DILocation(line: 5171, column: 6, scope: !11486)
!11494 = !DILocation(line: 5171, column: 6, scope: !11487)
!11495 = !DILocation(line: 5172, column: 4, scope: !11486)
!11496 = !DILocation(line: 5173, column: 7, scope: !11487)
!11497 = !DILocation(line: 5166, column: 32, scope: !11468)
!11498 = !DILocation(line: 5166, column: 3, scope: !11468)
!11499 = distinct !{!11499, !11471, !11500}
!11500 = !DILocation(line: 5173, column: 7, scope: !11465)
!11501 = !DILocation(line: 5174, column: 3, scope: !11393)
!11502 = !DILocation(line: 5175, column: 1, scope: !11393)
!11503 = distinct !DISubprogram(name: "gen_reload_chain_without_interm_reg_p", scope: !3, file: !3, line: 5238, type: !11394, scopeLine: 5239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11504 = !DILocalVariable(name: "r1", arg: 1, scope: !11503, file: !3, line: 5238, type: !2396)
!11505 = !DILocation(line: 5238, column: 44, scope: !11503)
!11506 = !DILocalVariable(name: "r2", arg: 2, scope: !11503, file: !3, line: 5238, type: !2396)
!11507 = !DILocation(line: 5238, column: 52, scope: !11503)
!11508 = !DILocalVariable(name: "result", scope: !11503, file: !3, line: 5242, type: !2603)
!11509 = !DILocation(line: 5242, column: 8, scope: !11503)
!11510 = !DILocalVariable(name: "regno", scope: !11503, file: !3, line: 5243, type: !2396)
!11511 = !DILocation(line: 5243, column: 7, scope: !11503)
!11512 = !DILocalVariable(name: "n", scope: !11503, file: !3, line: 5243, type: !2396)
!11513 = !DILocation(line: 5243, column: 14, scope: !11503)
!11514 = !DILocalVariable(name: "code", scope: !11503, file: !3, line: 5243, type: !2396)
!11515 = !DILocation(line: 5243, column: 17, scope: !11503)
!11516 = !DILocalVariable(name: "out", scope: !11503, file: !3, line: 5244, type: !2372)
!11517 = !DILocation(line: 5244, column: 7, scope: !11503)
!11518 = !DILocalVariable(name: "in", scope: !11503, file: !3, line: 5244, type: !2372)
!11519 = !DILocation(line: 5244, column: 12, scope: !11503)
!11520 = !DILocalVariable(name: "tem", scope: !11503, file: !3, line: 5244, type: !2372)
!11521 = !DILocation(line: 5244, column: 16, scope: !11503)
!11522 = !DILocalVariable(name: "insn", scope: !11503, file: !3, line: 5244, type: !2372)
!11523 = !DILocation(line: 5244, column: 21, scope: !11503)
!11524 = !DILocalVariable(name: "last", scope: !11503, file: !3, line: 5245, type: !2372)
!11525 = !DILocation(line: 5245, column: 7, scope: !11503)
!11526 = !DILocation(line: 5245, column: 14, scope: !11503)
!11527 = !DILocation(line: 5248, column: 28, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 5248, column: 7)
!11529 = !DILocation(line: 5248, column: 24, scope: !11528)
!11530 = !DILocation(line: 5248, column: 32, scope: !11528)
!11531 = !DILocation(line: 5248, column: 40, scope: !11528)
!11532 = !DILocation(line: 5248, column: 36, scope: !11528)
!11533 = !DILocation(line: 5248, column: 44, scope: !11528)
!11534 = !DILocation(line: 5248, column: 7, scope: !11528)
!11535 = !DILocation(line: 5248, column: 7, scope: !11503)
!11536 = !DILocation(line: 5250, column: 11, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 5249, column: 5)
!11538 = !DILocation(line: 5250, column: 9, scope: !11537)
!11539 = !DILocation(line: 5251, column: 12, scope: !11537)
!11540 = !DILocation(line: 5251, column: 10, scope: !11537)
!11541 = !DILocation(line: 5252, column: 12, scope: !11537)
!11542 = !DILocation(line: 5252, column: 10, scope: !11537)
!11543 = !DILocation(line: 5253, column: 5, scope: !11537)
!11544 = !DILocation(line: 5254, column: 3, scope: !11503)
!11545 = !DILocation(line: 5255, column: 15, scope: !11503)
!11546 = !DILocation(line: 5255, column: 11, scope: !11503)
!11547 = !DILocation(line: 5255, column: 19, scope: !11503)
!11548 = !DILocation(line: 5255, column: 25, scope: !11503)
!11549 = !DILocation(line: 5255, column: 36, scope: !11503)
!11550 = !DILocation(line: 5255, column: 32, scope: !11503)
!11551 = !DILocation(line: 5255, column: 40, scope: !11503)
!11552 = !DILocation(line: 5255, column: 52, scope: !11503)
!11553 = !DILocation(line: 5255, column: 48, scope: !11503)
!11554 = !DILocation(line: 5255, column: 56, scope: !11503)
!11555 = !DILocation(line: 5255, column: 9, scope: !11503)
!11556 = !DILocation(line: 5256, column: 3, scope: !11503)
!11557 = !DILocation(line: 5257, column: 26, scope: !11503)
!11558 = !DILocation(line: 5257, column: 22, scope: !11503)
!11559 = !DILocation(line: 5257, column: 30, scope: !11503)
!11560 = !DILocation(line: 5257, column: 36, scope: !11503)
!11561 = !DILocation(line: 5257, column: 9, scope: !11503)
!11562 = !DILocation(line: 5257, column: 7, scope: !11503)
!11563 = !DILocation(line: 5258, column: 12, scope: !11503)
!11564 = !DILocation(line: 5258, column: 8, scope: !11503)
!11565 = !DILocation(line: 5258, column: 16, scope: !11503)
!11566 = !DILocation(line: 5258, column: 6, scope: !11503)
!11567 = !DILocation(line: 5259, column: 24, scope: !11503)
!11568 = !DILocation(line: 5259, column: 20, scope: !11503)
!11569 = !DILocation(line: 5259, column: 28, scope: !11503)
!11570 = !DILocation(line: 5259, column: 49, scope: !11503)
!11571 = !DILocation(line: 5259, column: 45, scope: !11503)
!11572 = !DILocation(line: 5259, column: 53, scope: !11503)
!11573 = !DILocation(line: 5259, column: 59, scope: !11503)
!11574 = !DILocation(line: 5259, column: 32, scope: !11503)
!11575 = !DILocation(line: 5259, column: 3, scope: !11503)
!11576 = !DILocation(line: 5263, column: 7, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 5263, column: 7)
!11578 = !DILocation(line: 5263, column: 21, scope: !11577)
!11579 = !DILocation(line: 5264, column: 7, scope: !11577)
!11580 = !DILocation(line: 5264, column: 11, scope: !11577)
!11581 = !DILocation(line: 5265, column: 6, scope: !11577)
!11582 = !DILocation(line: 5265, column: 4, scope: !11577)
!11583 = !DILocation(line: 5266, column: 7, scope: !11577)
!11584 = !DILocation(line: 5266, column: 37, scope: !11577)
!11585 = !DILocation(line: 5266, column: 65, scope: !11577)
!11586 = !DILocation(line: 5266, column: 17, scope: !11577)
!11587 = !DILocation(line: 5266, column: 15, scope: !11577)
!11588 = !DILocation(line: 5266, column: 71, scope: !11577)
!11589 = !DILocation(line: 5263, column: 7, scope: !11503)
!11590 = !DILocation(line: 5267, column: 10, scope: !11577)
!11591 = !DILocation(line: 5267, column: 8, scope: !11577)
!11592 = !DILocation(line: 5267, column: 33, scope: !11577)
!11593 = !DILocation(line: 5267, column: 31, scope: !11577)
!11594 = !DILocation(line: 5267, column: 5, scope: !11577)
!11595 = !DILocation(line: 5269, column: 7, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 5269, column: 7)
!11597 = !DILocation(line: 5269, column: 21, scope: !11596)
!11598 = !DILocation(line: 5270, column: 7, scope: !11596)
!11599 = !DILocation(line: 5270, column: 11, scope: !11596)
!11600 = !DILocation(line: 5271, column: 4, scope: !11596)
!11601 = !DILocation(line: 5271, column: 7, scope: !11596)
!11602 = !DILocation(line: 5271, column: 31, scope: !11596)
!11603 = !DILocation(line: 5272, column: 4, scope: !11596)
!11604 = !DILocation(line: 5272, column: 7, scope: !11596)
!11605 = !DILocation(line: 5273, column: 7, scope: !11596)
!11606 = !DILocation(line: 5273, column: 11, scope: !11596)
!11607 = !DILocation(line: 5274, column: 4, scope: !11596)
!11608 = !DILocation(line: 5274, column: 7, scope: !11596)
!11609 = !DILocation(line: 5274, column: 31, scope: !11596)
!11610 = !DILocation(line: 5275, column: 4, scope: !11596)
!11611 = !DILocation(line: 5275, column: 7, scope: !11596)
!11612 = !DILocation(line: 5276, column: 4, scope: !11596)
!11613 = !DILocation(line: 5276, column: 7, scope: !11596)
!11614 = !DILocation(line: 5269, column: 7, scope: !11503)
!11615 = !DILocation(line: 5278, column: 25, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 5277, column: 5)
!11617 = !DILocation(line: 5278, column: 14, scope: !11616)
!11618 = !DILocation(line: 5278, column: 12, scope: !11616)
!11619 = !DILocation(line: 5279, column: 30, scope: !11616)
!11620 = !DILocation(line: 5279, column: 14, scope: !11616)
!11621 = !DILocation(line: 5279, column: 12, scope: !11616)
!11622 = !DILocation(line: 5280, column: 14, scope: !11616)
!11623 = !DILocation(line: 5282, column: 11, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 5282, column: 11)
!11625 = !DILocation(line: 5282, column: 16, scope: !11624)
!11626 = !DILocation(line: 5282, column: 11, scope: !11616)
!11627 = !DILocation(line: 5284, column: 18, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 5283, column: 2)
!11629 = !DILocation(line: 5284, column: 4, scope: !11628)
!11630 = !DILocation(line: 5288, column: 13, scope: !11628)
!11631 = !DILocation(line: 5288, column: 11, scope: !11628)
!11632 = !DILocation(line: 5289, column: 2, scope: !11628)
!11633 = !DILocation(line: 5291, column: 27, scope: !11616)
!11634 = !DILocation(line: 5291, column: 7, scope: !11616)
!11635 = !DILocation(line: 5292, column: 5, scope: !11616)
!11636 = !DILocation(line: 5295, column: 3, scope: !11503)
!11637 = !DILocation(line: 5295, column: 11, scope: !11503)
!11638 = !DILocation(line: 5295, column: 10, scope: !11503)
!11639 = !DILocalVariable(name: "where", scope: !11640, file: !3, line: 5297, type: !3579)
!11640 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 5296, column: 5)
!11641 = !DILocation(line: 5297, column: 12, scope: !11640)
!11642 = !DILocation(line: 5297, column: 20, scope: !11640)
!11643 = !DILocation(line: 5298, column: 20, scope: !11640)
!11644 = !DILocation(line: 5298, column: 16, scope: !11640)
!11645 = !DILocation(line: 5298, column: 24, scope: !11640)
!11646 = !DILocation(line: 5298, column: 8, scope: !11640)
!11647 = !DILocation(line: 5298, column: 14, scope: !11640)
!11648 = distinct !{!11648, !11636, !11649}
!11649 = !DILocation(line: 5299, column: 5, scope: !11503)
!11650 = !DILocation(line: 5301, column: 10, scope: !11503)
!11651 = !DILocation(line: 5301, column: 3, scope: !11503)
!11652 = distinct !DISubprogram(name: "substitute", scope: !3, file: !3, line: 5180, type: !11653, scopeLine: 5181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11653 = !DISubroutineType(types: !11654)
!11654 = !{null, !3579, !5682, !2372}
!11655 = !DILocalVariable(name: "where", arg: 1, scope: !11652, file: !3, line: 5180, type: !3579)
!11656 = !DILocation(line: 5180, column: 18, scope: !11652)
!11657 = !DILocalVariable(name: "what", arg: 2, scope: !11652, file: !3, line: 5180, type: !5682)
!11658 = !DILocation(line: 5180, column: 35, scope: !11652)
!11659 = !DILocalVariable(name: "repl", arg: 3, scope: !11652, file: !3, line: 5180, type: !2372)
!11660 = !DILocation(line: 5180, column: 45, scope: !11652)
!11661 = !DILocalVariable(name: "fmt", scope: !11652, file: !3, line: 5182, type: !2399)
!11662 = !DILocation(line: 5182, column: 15, scope: !11652)
!11663 = !DILocalVariable(name: "i", scope: !11652, file: !3, line: 5183, type: !2396)
!11664 = !DILocation(line: 5183, column: 7, scope: !11652)
!11665 = !DILocalVariable(name: "code", scope: !11652, file: !3, line: 5184, type: !384)
!11666 = !DILocation(line: 5184, column: 17, scope: !11652)
!11667 = !DILocation(line: 5186, column: 8, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11652, file: !3, line: 5186, column: 7)
!11669 = !DILocation(line: 5186, column: 7, scope: !11668)
!11670 = !DILocation(line: 5186, column: 14, scope: !11668)
!11671 = !DILocation(line: 5186, column: 7, scope: !11652)
!11672 = !DILocation(line: 5187, column: 5, scope: !11668)
!11673 = !DILocation(line: 5189, column: 8, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11652, file: !3, line: 5189, column: 7)
!11675 = !DILocation(line: 5189, column: 7, scope: !11674)
!11676 = !DILocation(line: 5189, column: 17, scope: !11674)
!11677 = !DILocation(line: 5189, column: 14, scope: !11674)
!11678 = !DILocation(line: 5189, column: 22, scope: !11674)
!11679 = !DILocation(line: 5189, column: 39, scope: !11674)
!11680 = !DILocation(line: 5189, column: 38, scope: !11674)
!11681 = !DILocation(line: 5189, column: 46, scope: !11674)
!11682 = !DILocation(line: 5189, column: 25, scope: !11674)
!11683 = !DILocation(line: 5189, column: 7, scope: !11652)
!11684 = !DILocation(line: 5192, column: 7, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 5190, column: 5)
!11686 = !DILocation(line: 5193, column: 16, scope: !11685)
!11687 = !DILocation(line: 5193, column: 8, scope: !11685)
!11688 = !DILocation(line: 5193, column: 14, scope: !11685)
!11689 = !DILocation(line: 5194, column: 7, scope: !11685)
!11690 = !DILocation(line: 5197, column: 10, scope: !11652)
!11691 = !DILocation(line: 5197, column: 8, scope: !11652)
!11692 = !DILocation(line: 5198, column: 9, scope: !11652)
!11693 = !DILocation(line: 5198, column: 7, scope: !11652)
!11694 = !DILocation(line: 5199, column: 12, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11652, file: !3, line: 5199, column: 3)
!11696 = !DILocation(line: 5199, column: 34, scope: !11695)
!11697 = !DILocation(line: 5199, column: 10, scope: !11695)
!11698 = !DILocation(line: 5199, column: 8, scope: !11695)
!11699 = !DILocation(line: 5199, column: 39, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11695, file: !3, line: 5199, column: 3)
!11701 = !DILocation(line: 5199, column: 41, scope: !11700)
!11702 = !DILocation(line: 5199, column: 3, scope: !11695)
!11703 = !DILocation(line: 5201, column: 11, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11705, file: !3, line: 5201, column: 11)
!11705 = distinct !DILexicalBlock(scope: !11700, file: !3, line: 5200, column: 5)
!11706 = !DILocation(line: 5201, column: 15, scope: !11704)
!11707 = !DILocation(line: 5201, column: 18, scope: !11704)
!11708 = !DILocation(line: 5201, column: 11, scope: !11705)
!11709 = !DILocalVariable(name: "j", scope: !11710, file: !3, line: 5203, type: !2396)
!11710 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 5202, column: 2)
!11711 = !DILocation(line: 5203, column: 8, scope: !11710)
!11712 = !DILocation(line: 5205, column: 13, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11710, file: !3, line: 5205, column: 4)
!11714 = !DILocation(line: 5205, column: 33, scope: !11713)
!11715 = !DILocation(line: 5205, column: 11, scope: !11713)
!11716 = !DILocation(line: 5205, column: 9, scope: !11713)
!11717 = !DILocation(line: 5205, column: 38, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11713, file: !3, line: 5205, column: 4)
!11719 = !DILocation(line: 5205, column: 40, scope: !11718)
!11720 = !DILocation(line: 5205, column: 4, scope: !11713)
!11721 = !DILocation(line: 5206, column: 19, scope: !11718)
!11722 = !DILocation(line: 5206, column: 43, scope: !11718)
!11723 = !DILocation(line: 5206, column: 49, scope: !11718)
!11724 = !DILocation(line: 5206, column: 6, scope: !11718)
!11725 = !DILocation(line: 5205, column: 47, scope: !11718)
!11726 = !DILocation(line: 5205, column: 4, scope: !11718)
!11727 = distinct !{!11727, !11720, !11728}
!11728 = !DILocation(line: 5206, column: 53, scope: !11713)
!11729 = !DILocation(line: 5207, column: 2, scope: !11710)
!11730 = !DILocation(line: 5208, column: 16, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 5208, column: 16)
!11732 = !DILocation(line: 5208, column: 20, scope: !11731)
!11733 = !DILocation(line: 5208, column: 23, scope: !11731)
!11734 = !DILocation(line: 5208, column: 16, scope: !11704)
!11735 = !DILocation(line: 5209, column: 15, scope: !11731)
!11736 = !DILocation(line: 5209, column: 33, scope: !11731)
!11737 = !DILocation(line: 5209, column: 39, scope: !11731)
!11738 = !DILocation(line: 5209, column: 2, scope: !11731)
!11739 = !DILocation(line: 5210, column: 5, scope: !11705)
!11740 = !DILocation(line: 5199, column: 48, scope: !11700)
!11741 = !DILocation(line: 5199, column: 3, scope: !11700)
!11742 = distinct !{!11742, !11702, !11743}
!11743 = !DILocation(line: 5210, column: 5, scope: !11695)
!11744 = !DILocation(line: 5211, column: 1, scope: !11652)
!11745 = distinct !DISubprogram(name: "VEC_rtx_p_base_length", scope: !3, file: !3, line: 392, type: !11746, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11746 = !DISubroutineType(types: !11747)
!11747 = !{!7, !11748}
!11748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11749, size: 64)
!11749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3597)
!11750 = !DILocalVariable(name: "vec_", arg: 1, scope: !11745, file: !3, line: 392, type: !11748)
!11751 = !DILocation(line: 392, column: 1, scope: !11745)
!11752 = distinct !DISubprogram(name: "VEC_rtx_p_base_pop", scope: !3, file: !3, line: 392, type: !11753, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11753 = !DISubroutineType(types: !11754)
!11754 = !{!3604, !11755}
!11755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!11756 = !DILocalVariable(name: "vec_", arg: 1, scope: !11752, file: !3, line: 392, type: !11755)
!11757 = !DILocation(line: 392, column: 1, scope: !11752)
!11758 = !DILocalVariable(name: "obj_", scope: !11752, file: !3, line: 392, type: !3604)
!11759 = distinct !DISubprogram(name: "VEC_rtx_p_heap_safe_push", scope: !3, file: !3, line: 393, type: !11760, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11760 = !DISubroutineType(types: !11761)
!11761 = !{!11762, !7832, !3604}
!11762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!11763 = !DILocalVariable(name: "vec_", arg: 1, scope: !11759, file: !3, line: 393, type: !7832)
!11764 = !DILocation(line: 393, column: 1, scope: !11759)
!11765 = !DILocalVariable(name: "obj_", arg: 2, scope: !11759, file: !3, line: 393, type: !3604)
!11766 = distinct !DISubprogram(name: "VEC_rtx_p_heap_reserve", scope: !3, file: !3, line: 393, type: !11767, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11767 = !DISubroutineType(types: !11768)
!11768 = !{!2396, !7832, !2396}
!11769 = !DILocalVariable(name: "vec_", arg: 1, scope: !11766, file: !3, line: 393, type: !7832)
!11770 = !DILocation(line: 393, column: 1, scope: !11766)
!11771 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11766, file: !3, line: 393, type: !2396)
!11772 = !DILocalVariable(name: "extend", scope: !11766, file: !3, line: 393, type: !2396)
!11773 = !DILocation(line: 393, column: 1, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 393, column: 1)
!11775 = distinct !DISubprogram(name: "VEC_rtx_p_base_quick_push", scope: !3, file: !3, line: 392, type: !11776, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11776 = !DISubroutineType(types: !11777)
!11777 = !{!11762, !11755, !3604}
!11778 = !DILocalVariable(name: "vec_", arg: 1, scope: !11775, file: !3, line: 392, type: !11755)
!11779 = !DILocation(line: 392, column: 1, scope: !11775)
!11780 = !DILocalVariable(name: "obj_", arg: 2, scope: !11775, file: !3, line: 392, type: !3604)
!11781 = !DILocalVariable(name: "slot_", scope: !11775, file: !3, line: 392, type: !11762)
!11782 = distinct !DISubprogram(name: "VEC_rtx_p_base_space", scope: !3, file: !3, line: 392, type: !11783, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11783 = !DISubroutineType(types: !11784)
!11784 = !{!2396, !11755, !2396}
!11785 = !DILocalVariable(name: "vec_", arg: 1, scope: !11782, file: !3, line: 392, type: !11755)
!11786 = !DILocation(line: 392, column: 1, scope: !11782)
!11787 = !DILocalVariable(name: "alloc_", arg: 2, scope: !11782, file: !3, line: 392, type: !2396)
!11788 = distinct !DISubprogram(name: "REG_N_REFS", scope: !4204, file: !4204, line: 79, type: !6339, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11789 = !DILocalVariable(name: "regno", arg: 1, scope: !11788, file: !4204, line: 79, type: !2396)
!11790 = !DILocation(line: 79, column: 16, scope: !11788)
!11791 = !DILocation(line: 81, column: 10, scope: !11788)
!11792 = !DILocation(line: 81, column: 34, scope: !11788)
!11793 = !DILocation(line: 81, column: 41, scope: !11788)
!11794 = !DILocation(line: 81, column: 3, scope: !11788)
!11795 = distinct !DISubprogram(name: "set_initial_eh_label_offset", scope: !3, file: !3, line: 3724, type: !5596, scopeLine: 3725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11796 = !DILocalVariable(name: "label", arg: 1, scope: !11795, file: !3, line: 3724, type: !2372)
!11797 = !DILocation(line: 3724, column: 34, scope: !11795)
!11798 = !DILocation(line: 3726, column: 22, scope: !11795)
!11799 = !DILocation(line: 3726, column: 3, scope: !11795)
!11800 = !DILocation(line: 3727, column: 1, scope: !11795)
!11801 = distinct !DISubprogram(name: "forget_old_reloads_1", scope: !3, file: !3, line: 4520, type: !6027, scopeLine: 4522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11802 = !DILocalVariable(name: "x", arg: 1, scope: !11801, file: !3, line: 4520, type: !2372)
!11803 = !DILocation(line: 4520, column: 27, scope: !11801)
!11804 = !DILocalVariable(name: "ignored", arg: 2, scope: !11801, file: !3, line: 4520, type: !5682)
!11805 = !DILocation(line: 4520, column: 40, scope: !11801)
!11806 = !DILocalVariable(name: "data", arg: 3, scope: !11801, file: !3, line: 4521, type: !2358)
!11807 = !DILocation(line: 4521, column: 15, scope: !11801)
!11808 = !DILocalVariable(name: "regno", scope: !11801, file: !3, line: 4523, type: !7)
!11809 = !DILocation(line: 4523, column: 16, scope: !11801)
!11810 = !DILocalVariable(name: "nr", scope: !11801, file: !3, line: 4524, type: !7)
!11811 = !DILocation(line: 4524, column: 16, scope: !11801)
!11812 = !DILocalVariable(name: "regs", scope: !11801, file: !3, line: 4525, type: !3618)
!11813 = !DILocation(line: 4525, column: 10, scope: !11801)
!11814 = !DILocation(line: 4525, column: 26, scope: !11801)
!11815 = !DILocation(line: 4525, column: 17, scope: !11801)
!11816 = !DILocation(line: 4529, column: 3, scope: !11801)
!11817 = !DILocation(line: 4529, column: 10, scope: !11801)
!11818 = !DILocation(line: 4529, column: 23, scope: !11801)
!11819 = !DILocation(line: 4534, column: 11, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11801, file: !3, line: 4530, column: 5)
!11821 = !DILocation(line: 4534, column: 9, scope: !11820)
!11822 = distinct !{!11822, !11816, !11823}
!11823 = !DILocation(line: 4535, column: 5, scope: !11801)
!11824 = !DILocation(line: 4537, column: 8, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11801, file: !3, line: 4537, column: 7)
!11826 = !DILocation(line: 4537, column: 7, scope: !11801)
!11827 = !DILocation(line: 4538, column: 5, scope: !11825)
!11828 = !DILocation(line: 4540, column: 11, scope: !11801)
!11829 = !DILocation(line: 4540, column: 9, scope: !11801)
!11830 = !DILocation(line: 4542, column: 7, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11801, file: !3, line: 4542, column: 7)
!11832 = !DILocation(line: 4542, column: 13, scope: !11831)
!11833 = !DILocation(line: 4542, column: 7, scope: !11801)
!11834 = !DILocation(line: 4543, column: 8, scope: !11831)
!11835 = !DILocation(line: 4543, column: 5, scope: !11831)
!11836 = !DILocalVariable(name: "i", scope: !11837, file: !3, line: 4546, type: !7)
!11837 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 4545, column: 5)
!11838 = !DILocation(line: 4546, column: 20, scope: !11837)
!11839 = !DILocation(line: 4548, column: 29, scope: !11837)
!11840 = !DILocation(line: 4548, column: 12, scope: !11837)
!11841 = !DILocation(line: 4548, column: 36, scope: !11837)
!11842 = !DILocation(line: 4548, column: 10, scope: !11837)
!11843 = !DILocation(line: 4553, column: 12, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11837, file: !3, line: 4553, column: 11)
!11845 = !DILocation(line: 4553, column: 11, scope: !11837)
!11846 = !DILocation(line: 4554, column: 9, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11844, file: !3, line: 4554, column: 2)
!11848 = !DILocation(line: 4554, column: 7, scope: !11847)
!11849 = !DILocation(line: 4554, column: 14, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11847, file: !3, line: 4554, column: 2)
!11851 = !DILocation(line: 4554, column: 18, scope: !11850)
!11852 = !DILocation(line: 4554, column: 16, scope: !11850)
!11853 = !DILocation(line: 4554, column: 2, scope: !11847)
!11854 = !DILocation(line: 4557, column: 8, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11850, file: !3, line: 4557, column: 8)
!11856 = !DILocation(line: 4557, column: 18, scope: !11855)
!11857 = !DILocation(line: 4558, column: 8, scope: !11855)
!11858 = !DILocation(line: 4558, column: 13, scope: !11855)
!11859 = !DILocation(line: 4557, column: 8, scope: !11850)
!11860 = !DILocation(line: 4560, column: 8, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 4559, column: 6)
!11862 = !DILocation(line: 4561, column: 24, scope: !11861)
!11863 = !DILocation(line: 4561, column: 32, scope: !11861)
!11864 = !DILocation(line: 4561, column: 30, scope: !11861)
!11865 = !DILocation(line: 4561, column: 8, scope: !11861)
!11866 = !DILocation(line: 4561, column: 35, scope: !11861)
!11867 = !DILocation(line: 4562, column: 6, scope: !11861)
!11868 = !DILocation(line: 4554, column: 23, scope: !11850)
!11869 = !DILocation(line: 4554, column: 2, scope: !11850)
!11870 = distinct !{!11870, !11853, !11871}
!11871 = !DILocation(line: 4562, column: 6, scope: !11847)
!11872 = !DILocation(line: 4565, column: 7, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11801, file: !3, line: 4565, column: 7)
!11874 = !DILocation(line: 4565, column: 7, scope: !11801)
!11875 = !DILocation(line: 4566, column: 5, scope: !11873)
!11876 = !DILocation(line: 4566, column: 14, scope: !11873)
!11877 = !DILocation(line: 4566, column: 17, scope: !11873)
!11878 = !DILocation(line: 4567, column: 7, scope: !11873)
!11879 = distinct !{!11879, !11875, !11878}
!11880 = !DILocation(line: 4573, column: 7, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11873, file: !3, line: 4569, column: 5)
!11882 = !DILocation(line: 4573, column: 16, scope: !11881)
!11883 = !DILocation(line: 4573, column: 19, scope: !11881)
!11884 = !DILocation(line: 4576, column: 6, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11881, file: !3, line: 4576, column: 6)
!11886 = !DILocation(line: 4576, column: 16, scope: !11885)
!11887 = !DILocation(line: 4577, column: 6, scope: !11885)
!11888 = !DILocation(line: 4577, column: 10, scope: !11885)
!11889 = !DILocation(line: 4576, column: 6, scope: !11881)
!11890 = !DILocation(line: 4578, column: 4, scope: !11885)
!11891 = !DILocation(line: 4578, column: 24, scope: !11885)
!11892 = !DILocation(line: 4578, column: 32, scope: !11885)
!11893 = !DILocation(line: 4578, column: 30, scope: !11885)
!11894 = !DILocation(line: 4578, column: 36, scope: !11885)
!11895 = distinct !{!11895, !11880, !11896}
!11896 = !DILocation(line: 4578, column: 38, scope: !11881)
!11897 = !DILocation(line: 4580, column: 1, scope: !11801)
!11898 = distinct !DISubprogram(name: "choose_reload_regs", scope: !3, file: !3, line: 5959, type: !9881, scopeLine: 5960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!11899 = !DILocalVariable(name: "chain", arg: 1, scope: !11898, file: !3, line: 5959, type: !2365)
!11900 = !DILocation(line: 5959, column: 40, scope: !11898)
!11901 = !DILocalVariable(name: "insn", scope: !11898, file: !3, line: 5961, type: !2372)
!11902 = !DILocation(line: 5961, column: 7, scope: !11898)
!11903 = !DILocation(line: 5961, column: 14, scope: !11898)
!11904 = !DILocation(line: 5961, column: 21, scope: !11898)
!11905 = !DILocalVariable(name: "i", scope: !11898, file: !3, line: 5962, type: !2396)
!11906 = !DILocation(line: 5962, column: 7, scope: !11898)
!11907 = !DILocalVariable(name: "j", scope: !11898, file: !3, line: 5962, type: !2396)
!11908 = !DILocation(line: 5962, column: 10, scope: !11898)
!11909 = !DILocalVariable(name: "max_group_size", scope: !11898, file: !3, line: 5963, type: !7)
!11910 = !DILocation(line: 5963, column: 16, scope: !11898)
!11911 = !DILocalVariable(name: "group_class", scope: !11898, file: !3, line: 5964, type: !527)
!11912 = !DILocation(line: 5964, column: 18, scope: !11898)
!11913 = !DILocalVariable(name: "pass", scope: !11898, file: !3, line: 5965, type: !2396)
!11914 = !DILocation(line: 5965, column: 7, scope: !11898)
!11915 = !DILocalVariable(name: "win", scope: !11898, file: !3, line: 5965, type: !2396)
!11916 = !DILocation(line: 5965, column: 13, scope: !11898)
!11917 = !DILocalVariable(name: "inheritance", scope: !11898, file: !3, line: 5965, type: !2396)
!11918 = !DILocation(line: 5965, column: 18, scope: !11898)
!11919 = !DILocalVariable(name: "save_reload_reg_rtx", scope: !11898, file: !3, line: 5967, type: !3819)
!11920 = !DILocation(line: 5967, column: 7, scope: !11898)
!11921 = !DILocation(line: 5978, column: 10, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 5978, column: 3)
!11923 = !DILocation(line: 5978, column: 8, scope: !11922)
!11924 = !DILocation(line: 5978, column: 15, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11922, file: !3, line: 5978, column: 3)
!11926 = !DILocation(line: 5978, column: 19, scope: !11925)
!11927 = !DILocation(line: 5978, column: 17, scope: !11925)
!11928 = !DILocation(line: 5978, column: 3, scope: !11922)
!11929 = !DILocation(line: 5980, column: 25, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11925, file: !3, line: 5979, column: 5)
!11931 = !DILocation(line: 5980, column: 20, scope: !11930)
!11932 = !DILocation(line: 5980, column: 7, scope: !11930)
!11933 = !DILocation(line: 5980, column: 23, scope: !11930)
!11934 = !DILocation(line: 5981, column: 15, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 5981, column: 11)
!11936 = !DILocation(line: 5981, column: 11, scope: !11935)
!11937 = !DILocation(line: 5981, column: 18, scope: !11935)
!11938 = !DILocation(line: 5981, column: 26, scope: !11935)
!11939 = !DILocation(line: 5981, column: 11, scope: !11930)
!11940 = !DILocation(line: 5983, column: 4, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11935, file: !3, line: 5982, column: 2)
!11942 = !DILocation(line: 5985, column: 28, scope: !11941)
!11943 = !DILocation(line: 5985, column: 23, scope: !11941)
!11944 = !DILocation(line: 5985, column: 4, scope: !11941)
!11945 = !DILocation(line: 5985, column: 26, scope: !11941)
!11946 = !DILocation(line: 5986, column: 2, scope: !11941)
!11947 = !DILocation(line: 5988, column: 21, scope: !11935)
!11948 = !DILocation(line: 5988, column: 2, scope: !11935)
!11949 = !DILocation(line: 5988, column: 24, scope: !11935)
!11950 = !DILocation(line: 5990, column: 15, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 5990, column: 11)
!11952 = !DILocation(line: 5990, column: 11, scope: !11951)
!11953 = !DILocation(line: 5990, column: 18, scope: !11951)
!11954 = !DILocation(line: 5990, column: 24, scope: !11951)
!11955 = !DILocation(line: 5990, column: 11, scope: !11930)
!11956 = !DILocation(line: 5992, column: 21, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 5991, column: 2)
!11958 = !DILocation(line: 5992, column: 19, scope: !11957)
!11959 = !DILocation(line: 5994, column: 39, scope: !11957)
!11960 = !DILocation(line: 5994, column: 35, scope: !11957)
!11961 = !DILocation(line: 5994, column: 42, scope: !11957)
!11962 = !DILocation(line: 5994, column: 8, scope: !11957)
!11963 = !DILocation(line: 5994, column: 56, scope: !11957)
!11964 = !DILocation(line: 5994, column: 6, scope: !11957)
!11965 = !DILocation(line: 5995, column: 2, scope: !11957)
!11966 = !DILocation(line: 5997, column: 36, scope: !11930)
!11967 = !DILocation(line: 5997, column: 32, scope: !11930)
!11968 = !DILocation(line: 5997, column: 39, scope: !11930)
!11969 = !DILocation(line: 5997, column: 27, scope: !11930)
!11970 = !DILocation(line: 5997, column: 7, scope: !11930)
!11971 = !DILocation(line: 5997, column: 30, scope: !11930)
!11972 = !DILocation(line: 5998, column: 5, scope: !11930)
!11973 = !DILocation(line: 5978, column: 31, scope: !11925)
!11974 = !DILocation(line: 5978, column: 3, scope: !11925)
!11975 = distinct !{!11975, !11928, !11976}
!11976 = !DILocation(line: 5998, column: 5, scope: !11922)
!11977 = !DILocation(line: 6000, column: 7, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 6000, column: 7)
!11979 = !DILocation(line: 6000, column: 17, scope: !11978)
!11980 = !DILocation(line: 6000, column: 7, scope: !11898)
!11981 = !DILocation(line: 6002, column: 31, scope: !11978)
!11982 = !DILocation(line: 6002, column: 5, scope: !11978)
!11983 = !DILocation(line: 6012, column: 7, scope: !11898)
!11984 = !DILocation(line: 6013, column: 22, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 6013, column: 3)
!11986 = !DILocation(line: 6013, column: 31, scope: !11985)
!11987 = !DILocation(line: 6013, column: 20, scope: !11985)
!11988 = !DILocation(line: 6013, column: 8, scope: !11985)
!11989 = !DILocation(line: 6013, column: 36, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 6013, column: 3)
!11991 = !DILocation(line: 6013, column: 48, scope: !11990)
!11992 = !DILocation(line: 6013, column: 3, scope: !11985)
!11993 = !DILocation(line: 6015, column: 32, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 6014, column: 5)
!11995 = !DILocation(line: 6015, column: 39, scope: !11994)
!11996 = !DILocation(line: 6015, column: 7, scope: !11994)
!11997 = !DILocation(line: 6035, column: 14, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 6035, column: 7)
!11999 = !DILocation(line: 6035, column: 12, scope: !11998)
!12000 = !DILocation(line: 6035, column: 19, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11998, file: !3, line: 6035, column: 7)
!12002 = !DILocation(line: 6035, column: 23, scope: !12001)
!12003 = !DILocation(line: 6035, column: 21, scope: !12001)
!12004 = !DILocation(line: 6035, column: 7, scope: !11998)
!12005 = !DILocalVariable(name: "r", scope: !12006, file: !3, line: 6037, type: !2396)
!12006 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 6036, column: 2)
!12007 = !DILocation(line: 6037, column: 8, scope: !12006)
!12008 = !DILocation(line: 6037, column: 25, scope: !12006)
!12009 = !DILocation(line: 6037, column: 12, scope: !12006)
!12010 = !DILocalVariable(name: "search_equiv", scope: !12006, file: !3, line: 6038, type: !2372)
!12011 = !DILocation(line: 6038, column: 8, scope: !12006)
!12012 = !DILocation(line: 6041, column: 12, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12006, file: !3, line: 6041, column: 8)
!12014 = !DILocation(line: 6041, column: 8, scope: !12013)
!12015 = !DILocation(line: 6041, column: 15, scope: !12013)
!12016 = !DILocation(line: 6041, column: 19, scope: !12013)
!12017 = !DILocation(line: 6041, column: 24, scope: !12013)
!12018 = !DILocation(line: 6041, column: 31, scope: !12013)
!12019 = !DILocation(line: 6041, column: 27, scope: !12013)
!12020 = !DILocation(line: 6041, column: 34, scope: !12013)
!12021 = !DILocation(line: 6041, column: 37, scope: !12013)
!12022 = !DILocation(line: 6042, column: 8, scope: !12013)
!12023 = !DILocation(line: 6042, column: 17, scope: !12013)
!12024 = !DILocation(line: 6042, column: 13, scope: !12013)
!12025 = !DILocation(line: 6042, column: 20, scope: !12013)
!12026 = !DILocation(line: 6041, column: 8, scope: !12006)
!12027 = !DILocation(line: 6043, column: 6, scope: !12013)
!12028 = !DILocation(line: 6050, column: 12, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12006, file: !3, line: 6050, column: 8)
!12030 = !DILocation(line: 6050, column: 8, scope: !12029)
!12031 = !DILocation(line: 6050, column: 15, scope: !12029)
!12032 = !DILocation(line: 6050, column: 18, scope: !12029)
!12033 = !DILocation(line: 6050, column: 23, scope: !12029)
!12034 = !DILocation(line: 6050, column: 30, scope: !12029)
!12035 = !DILocation(line: 6050, column: 26, scope: !12029)
!12036 = !DILocation(line: 6050, column: 33, scope: !12029)
!12037 = !DILocation(line: 6050, column: 41, scope: !12029)
!12038 = !DILocation(line: 6051, column: 8, scope: !12029)
!12039 = !DILocation(line: 6051, column: 29, scope: !12029)
!12040 = !DILocation(line: 6051, column: 25, scope: !12029)
!12041 = !DILocation(line: 6051, column: 32, scope: !12029)
!12042 = !DILocation(line: 6051, column: 40, scope: !12029)
!12043 = !DILocation(line: 6051, column: 36, scope: !12029)
!12044 = !DILocation(line: 6051, column: 43, scope: !12029)
!12045 = !DILocation(line: 6051, column: 12, scope: !12029)
!12046 = !DILocation(line: 6052, column: 5, scope: !12029)
!12047 = !DILocation(line: 6052, column: 26, scope: !12029)
!12048 = !DILocation(line: 6052, column: 22, scope: !12029)
!12049 = !DILocation(line: 6052, column: 29, scope: !12029)
!12050 = !DILocation(line: 6052, column: 38, scope: !12029)
!12051 = !DILocation(line: 6052, column: 34, scope: !12029)
!12052 = !DILocation(line: 6052, column: 41, scope: !12029)
!12053 = !DILocation(line: 6052, column: 9, scope: !12029)
!12054 = !DILocation(line: 6053, column: 9, scope: !12029)
!12055 = !DILocation(line: 6053, column: 13, scope: !12029)
!12056 = !DILocation(line: 6054, column: 9, scope: !12029)
!12057 = !DILocation(line: 6054, column: 29, scope: !12029)
!12058 = !DILocation(line: 6054, column: 25, scope: !12029)
!12059 = !DILocation(line: 6054, column: 32, scope: !12029)
!12060 = !DILocation(line: 6054, column: 12, scope: !12029)
!12061 = !DILocation(line: 6054, column: 36, scope: !12029)
!12062 = !DILocation(line: 6050, column: 8, scope: !12006)
!12063 = !DILocation(line: 6055, column: 6, scope: !12029)
!12064 = !DILocation(line: 6087, column: 8, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12006, file: !3, line: 6087, column: 8)
!12066 = !DILocation(line: 6087, column: 8, scope: !12006)
!12067 = !DILocalVariable(name: "byte", scope: !12068, file: !3, line: 6089, type: !2396)
!12068 = distinct !DILexicalBlock(scope: !12065, file: !3, line: 6088, column: 6)
!12069 = !DILocation(line: 6089, column: 12, scope: !12068)
!12070 = !DILocalVariable(name: "regno", scope: !12068, file: !3, line: 6090, type: !2396)
!12071 = !DILocation(line: 6090, column: 12, scope: !12068)
!12072 = !DILocalVariable(name: "mode", scope: !12068, file: !3, line: 6091, type: !5)
!12073 = !DILocation(line: 6091, column: 26, scope: !12068)
!12074 = !DILocation(line: 6093, column: 16, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12068, file: !3, line: 6093, column: 12)
!12076 = !DILocation(line: 6093, column: 12, scope: !12075)
!12077 = !DILocation(line: 6093, column: 19, scope: !12075)
!12078 = !DILocation(line: 6093, column: 22, scope: !12075)
!12079 = !DILocation(line: 6093, column: 12, scope: !12068)
!12080 = !DILocation(line: 6095, column: 17, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12075, file: !3, line: 6095, column: 17)
!12082 = !DILocation(line: 6095, column: 17, scope: !12075)
!12083 = !DILocation(line: 6097, column: 13, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 6096, column: 3)
!12085 = !DILocation(line: 6097, column: 11, scope: !12084)
!12086 = !DILocation(line: 6098, column: 12, scope: !12084)
!12087 = !DILocation(line: 6098, column: 10, scope: !12084)
!12088 = !DILocation(line: 6099, column: 3, scope: !12084)
!12089 = !DILocation(line: 6100, column: 17, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 6100, column: 17)
!12091 = !DILocation(line: 6100, column: 17, scope: !12081)
!12092 = !DILocation(line: 6102, column: 13, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12090, file: !3, line: 6101, column: 3)
!12094 = !DILocation(line: 6102, column: 11, scope: !12093)
!12095 = !DILocation(line: 6103, column: 12, scope: !12093)
!12096 = !DILocation(line: 6103, column: 10, scope: !12093)
!12097 = !DILocation(line: 6104, column: 3, scope: !12093)
!12098 = !DILocation(line: 6105, column: 17, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12090, file: !3, line: 6105, column: 17)
!12100 = !DILocation(line: 6105, column: 42, scope: !12099)
!12101 = !DILocation(line: 6106, column: 10, scope: !12099)
!12102 = !DILocation(line: 6106, column: 13, scope: !12099)
!12103 = !DILocation(line: 6105, column: 17, scope: !12090)
!12104 = !DILocation(line: 6108, column: 13, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12099, file: !3, line: 6107, column: 3)
!12106 = !DILocation(line: 6108, column: 11, scope: !12105)
!12107 = !DILocation(line: 6109, column: 9, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12105, file: !3, line: 6109, column: 9)
!12109 = !DILocation(line: 6109, column: 15, scope: !12108)
!12110 = !DILocation(line: 6109, column: 9, scope: !12105)
!12111 = !DILocation(line: 6110, column: 33, scope: !12108)
!12112 = !DILocation(line: 6110, column: 29, scope: !12108)
!12113 = !DILocation(line: 6110, column: 36, scope: !12108)
!12114 = !DILocation(line: 6110, column: 15, scope: !12108)
!12115 = !DILocation(line: 6110, column: 13, scope: !12108)
!12116 = !DILocation(line: 6110, column: 7, scope: !12108)
!12117 = !DILocation(line: 6112, column: 14, scope: !12108)
!12118 = !DILocation(line: 6112, column: 12, scope: !12108)
!12119 = !DILocation(line: 6113, column: 12, scope: !12105)
!12120 = !DILocation(line: 6113, column: 10, scope: !12105)
!12121 = !DILocation(line: 6114, column: 3, scope: !12105)
!12122 = !DILocation(line: 6133, column: 12, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12068, file: !3, line: 6133, column: 12)
!12124 = !DILocation(line: 6133, column: 18, scope: !12123)
!12125 = !DILocation(line: 6134, column: 5, scope: !12123)
!12126 = !DILocation(line: 6134, column: 8, scope: !12123)
!12127 = !DILocation(line: 6134, column: 28, scope: !12123)
!12128 = !DILocation(line: 6134, column: 35, scope: !12123)
!12129 = !DILocation(line: 6138, column: 5, scope: !12123)
!12130 = !DILocation(line: 6138, column: 9, scope: !12123)
!12131 = !DILocation(line: 6133, column: 12, scope: !12068)
!12132 = !DILocalVariable(name: "rclass", scope: !12133, file: !3, line: 6144, type: !527)
!12133 = distinct !DILexicalBlock(scope: !12123, file: !3, line: 6143, column: 3)
!12134 = !DILocation(line: 6144, column: 20, scope: !12133)
!12135 = !DILocation(line: 6144, column: 33, scope: !12133)
!12136 = !DILocation(line: 6144, column: 29, scope: !12133)
!12137 = !DILocation(line: 6144, column: 36, scope: !12133)
!12138 = !DILocalVariable(name: "last_class", scope: !12133, file: !3, line: 6144, type: !527)
!12139 = !DILocation(line: 6144, column: 44, scope: !12133)
!12140 = !DILocalVariable(name: "last_reg", scope: !12133, file: !3, line: 6145, type: !2372)
!12141 = !DILocation(line: 6145, column: 9, scope: !12133)
!12142 = !DILocation(line: 6145, column: 20, scope: !12133)
!12143 = !DILocation(line: 6145, column: 40, scope: !12133)
!12144 = !DILocalVariable(name: "need_mode", scope: !12133, file: !3, line: 6146, type: !5)
!12145 = !DILocation(line: 6146, column: 23, scope: !12133)
!12146 = !DILocation(line: 6148, column: 9, scope: !12133)
!12147 = !DILocation(line: 6148, column: 7, scope: !12133)
!12148 = !DILocation(line: 6149, column: 31, scope: !12133)
!12149 = !DILocation(line: 6149, column: 34, scope: !12133)
!12150 = !DILocation(line: 6149, column: 55, scope: !12133)
!12151 = !DILocation(line: 6149, column: 61, scope: !12133)
!12152 = !DILocation(line: 6149, column: 10, scope: !12133)
!12153 = !DILocation(line: 6149, column: 7, scope: !12133)
!12154 = !DILocation(line: 6150, column: 18, scope: !12133)
!12155 = !DILocation(line: 6150, column: 16, scope: !12133)
!12156 = !DILocation(line: 6152, column: 9, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12133, file: !3, line: 6152, column: 9)
!12158 = !DILocation(line: 6152, column: 14, scope: !12157)
!12159 = !DILocation(line: 6152, column: 9, scope: !12133)
!12160 = !DILocation(line: 6153, column: 19, scope: !12157)
!12161 = !DILocation(line: 6153, column: 17, scope: !12157)
!12162 = !DILocation(line: 6153, column: 7, scope: !12157)
!12163 = !DILocation(line: 6157, column: 12, scope: !12157)
!12164 = !DILocation(line: 6157, column: 38, scope: !12157)
!12165 = !DILocation(line: 6157, column: 43, scope: !12157)
!12166 = !DILocation(line: 6157, column: 36, scope: !12157)
!12167 = !DILocation(line: 6158, column: 5, scope: !12157)
!12168 = !DILocation(line: 6158, column: 27, scope: !12157)
!12169 = !DILocation(line: 6159, column: 18, scope: !12157)
!12170 = !DILocation(line: 6156, column: 11, scope: !12157)
!12171 = !DILocation(line: 6156, column: 9, scope: !12157)
!12172 = !DILocation(line: 6161, column: 10, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12133, file: !3, line: 6161, column: 9)
!12174 = !DILocation(line: 6162, column: 13, scope: !12173)
!12175 = !DILocation(line: 6162, column: 10, scope: !12173)
!12176 = !DILocation(line: 6163, column: 9, scope: !12173)
!12177 = !DILocation(line: 6163, column: 34, scope: !12173)
!12178 = !DILocation(line: 6163, column: 12, scope: !12173)
!12179 = !DILocation(line: 6163, column: 40, scope: !12173)
!12180 = !DILocation(line: 6163, column: 37, scope: !12173)
!12181 = !DILocation(line: 6164, column: 9, scope: !12173)
!12182 = !DILocation(line: 6164, column: 12, scope: !12173)
!12183 = !DILocation(line: 6165, column: 9, scope: !12173)
!12184 = !DILocation(line: 6165, column: 12, scope: !12173)
!12185 = !DILocation(line: 6166, column: 9, scope: !12173)
!12186 = !DILocation(line: 6166, column: 13, scope: !12173)
!12187 = !DILocation(line: 6171, column: 6, scope: !12173)
!12188 = !DILocation(line: 6171, column: 11, scope: !12173)
!12189 = !DILocation(line: 6172, column: 13, scope: !12173)
!12190 = !DILocation(line: 6172, column: 11, scope: !12173)
!12191 = !DILocation(line: 6173, column: 10, scope: !12173)
!12192 = !DILocation(line: 6173, column: 41, scope: !12173)
!12193 = !DILocation(line: 6173, column: 49, scope: !12173)
!12194 = !DILocation(line: 6174, column: 10, scope: !12173)
!12195 = !DILocation(line: 6173, column: 14, scope: !12173)
!12196 = !DILocation(line: 6175, column: 7, scope: !12173)
!12197 = !DILocation(line: 6177, column: 10, scope: !12173)
!12198 = !DILocation(line: 6177, column: 15, scope: !12173)
!12199 = !DILocation(line: 6182, column: 9, scope: !12173)
!12200 = !DILocation(line: 6182, column: 17, scope: !12173)
!12201 = !DILocation(line: 6182, column: 13, scope: !12173)
!12202 = !DILocation(line: 6182, column: 20, scope: !12173)
!12203 = !DILocation(line: 6182, column: 29, scope: !12173)
!12204 = !DILocation(line: 6182, column: 26, scope: !12173)
!12205 = !DILocation(line: 6183, column: 6, scope: !12173)
!12206 = !DILocation(line: 6183, column: 11, scope: !12173)
!12207 = !DILocation(line: 6185, column: 9, scope: !12173)
!12208 = !DILocation(line: 6185, column: 30, scope: !12173)
!12209 = !DILocation(line: 6185, column: 37, scope: !12173)
!12210 = !DILocation(line: 6185, column: 33, scope: !12173)
!12211 = !DILocation(line: 6185, column: 40, scope: !12173)
!12212 = !DILocation(line: 6185, column: 50, scope: !12173)
!12213 = !DILocation(line: 6185, column: 46, scope: !12173)
!12214 = !DILocation(line: 6185, column: 53, scope: !12173)
!12215 = !DILocation(line: 6186, column: 13, scope: !12173)
!12216 = !DILocation(line: 6186, column: 9, scope: !12173)
!12217 = !DILocation(line: 6186, column: 16, scope: !12173)
!12218 = !DILocation(line: 6186, column: 33, scope: !12173)
!12219 = !DILocation(line: 6186, column: 29, scope: !12173)
!12220 = !DILocation(line: 6186, column: 36, scope: !12173)
!12221 = !DILocation(line: 6187, column: 9, scope: !12173)
!12222 = !DILocation(line: 6187, column: 21, scope: !12173)
!12223 = !DILocation(line: 6185, column: 12, scope: !12173)
!12224 = !DILocation(line: 6161, column: 9, scope: !12133)
!12225 = !DILocalVariable(name: "nr", scope: !12226, file: !3, line: 6191, type: !2396)
!12226 = distinct !DILexicalBlock(scope: !12173, file: !3, line: 6188, column: 7)
!12227 = !DILocation(line: 6191, column: 13, scope: !12226)
!12228 = !DILocation(line: 6191, column: 35, scope: !12226)
!12229 = !DILocation(line: 6191, column: 18, scope: !12226)
!12230 = !DILocation(line: 6191, column: 42, scope: !12226)
!12231 = !DILocation(line: 6191, column: 38, scope: !12226)
!12232 = !DILocation(line: 6191, column: 45, scope: !12226)
!12233 = !DILocalVariable(name: "k", scope: !12226, file: !3, line: 6192, type: !2396)
!12234 = !DILocation(line: 6192, column: 13, scope: !12226)
!12235 = !DILocation(line: 6194, column: 16, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12226, file: !3, line: 6194, column: 9)
!12237 = !DILocation(line: 6194, column: 14, scope: !12236)
!12238 = !DILocation(line: 6194, column: 21, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12236, file: !3, line: 6194, column: 9)
!12240 = !DILocation(line: 6194, column: 25, scope: !12239)
!12241 = !DILocation(line: 6194, column: 23, scope: !12239)
!12242 = !DILocation(line: 6194, column: 9, scope: !12236)
!12243 = !DILocation(line: 6195, column: 30, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12239, file: !3, line: 6195, column: 8)
!12245 = !DILocation(line: 6195, column: 34, scope: !12244)
!12246 = !DILocation(line: 6195, column: 32, scope: !12244)
!12247 = !DILocation(line: 6195, column: 8, scope: !12244)
!12248 = !DILocation(line: 6195, column: 40, scope: !12244)
!12249 = !DILocation(line: 6195, column: 37, scope: !12244)
!12250 = !DILocation(line: 6196, column: 8, scope: !12244)
!12251 = !DILocation(line: 6196, column: 13, scope: !12244)
!12252 = !DILocation(line: 6195, column: 8, scope: !12239)
!12253 = !DILocation(line: 6197, column: 6, scope: !12244)
!12254 = !DILocation(line: 6194, column: 30, scope: !12239)
!12255 = !DILocation(line: 6194, column: 9, scope: !12239)
!12256 = distinct !{!12256, !12242, !12257}
!12257 = !DILocation(line: 6197, column: 6, scope: !12236)
!12258 = !DILocation(line: 6199, column: 13, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12226, file: !3, line: 6199, column: 13)
!12260 = !DILocation(line: 6199, column: 18, scope: !12259)
!12261 = !DILocation(line: 6199, column: 15, scope: !12259)
!12262 = !DILocation(line: 6199, column: 13, scope: !12226)
!12263 = !DILocalVariable(name: "i1", scope: !12264, file: !3, line: 6201, type: !2396)
!12264 = distinct !DILexicalBlock(scope: !12259, file: !3, line: 6200, column: 4)
!12265 = !DILocation(line: 6201, column: 10, scope: !12264)
!12266 = !DILocalVariable(name: "bad_for_class", scope: !12264, file: !3, line: 6202, type: !2396)
!12267 = !DILocation(line: 6202, column: 10, scope: !12264)
!12268 = !DILocation(line: 6204, column: 18, scope: !12264)
!12269 = !DILocation(line: 6204, column: 41, scope: !12264)
!12270 = !DILocation(line: 6204, column: 38, scope: !12264)
!12271 = !DILocation(line: 6205, column: 13, scope: !12264)
!12272 = !DILocation(line: 6205, column: 37, scope: !12264)
!12273 = !DILocation(line: 6205, column: 43, scope: !12264)
!12274 = !DILocation(line: 6205, column: 24, scope: !12264)
!12275 = !DILocation(line: 6204, column: 15, scope: !12264)
!12276 = !DILocation(line: 6207, column: 20, scope: !12264)
!12277 = !DILocation(line: 6208, column: 13, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12264, file: !3, line: 6208, column: 6)
!12279 = !DILocation(line: 6208, column: 11, scope: !12278)
!12280 = !DILocation(line: 6208, column: 18, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 6208, column: 6)
!12282 = !DILocation(line: 6208, column: 22, scope: !12281)
!12283 = !DILocation(line: 6208, column: 20, scope: !12281)
!12284 = !DILocation(line: 6208, column: 6, scope: !12278)
!12285 = !DILocation(line: 6209, column: 27, scope: !12281)
!12286 = !DILocation(line: 6209, column: 25, scope: !12281)
!12287 = !DILocation(line: 6209, column: 22, scope: !12281)
!12288 = !DILocation(line: 6209, column: 8, scope: !12281)
!12289 = !DILocation(line: 6208, column: 27, scope: !12281)
!12290 = !DILocation(line: 6208, column: 6, scope: !12281)
!12291 = distinct !{!12291, !12284, !12292}
!12292 = !DILocation(line: 6209, column: 27, scope: !12278)
!12293 = !DILocation(line: 6219, column: 14, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12264, file: !3, line: 6219, column: 6)
!12295 = !DILocation(line: 6219, column: 11, scope: !12294)
!12296 = !DILocation(line: 6219, column: 19, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 6219, column: 6)
!12298 = !DILocation(line: 6219, column: 24, scope: !12297)
!12299 = !DILocation(line: 6219, column: 22, scope: !12297)
!12300 = !DILocation(line: 6219, column: 6, scope: !12294)
!12301 = !DILocation(line: 6221, column: 6, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12297, file: !3, line: 6220, column: 12)
!12303 = !DILocation(line: 6221, column: 26, scope: !12302)
!12304 = !DILocation(line: 6222, column: 27, scope: !12302)
!12305 = !DILocation(line: 6222, column: 6, scope: !12302)
!12306 = !DILocation(line: 6220, column: 12, scope: !12302)
!12307 = !DILocation(line: 6220, column: 12, scope: !12297)
!12308 = !DILocation(line: 6223, column: 10, scope: !12302)
!12309 = !DILocation(line: 6222, column: 30, scope: !12302)
!12310 = !DILocation(line: 6219, column: 43, scope: !12297)
!12311 = !DILocation(line: 6219, column: 6, scope: !12297)
!12312 = distinct !{!12312, !12300, !12313}
!12313 = !DILocation(line: 6223, column: 10, scope: !12294)
!12314 = !DILocation(line: 6225, column: 10, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12264, file: !3, line: 6225, column: 10)
!12316 = !DILocation(line: 6225, column: 16, scope: !12315)
!12317 = !DILocation(line: 6225, column: 13, scope: !12315)
!12318 = !DILocation(line: 6226, column: 10, scope: !12315)
!12319 = !DILocation(line: 6226, column: 34, scope: !12315)
!12320 = !DILocation(line: 6226, column: 41, scope: !12315)
!12321 = !DILocation(line: 6226, column: 37, scope: !12315)
!12322 = !DILocation(line: 6226, column: 44, scope: !12315)
!12323 = !DILocation(line: 6227, column: 17, scope: !12315)
!12324 = !DILocation(line: 6227, column: 13, scope: !12315)
!12325 = !DILocation(line: 6227, column: 20, scope: !12315)
!12326 = !DILocation(line: 6228, column: 17, scope: !12315)
!12327 = !DILocation(line: 6228, column: 13, scope: !12315)
!12328 = !DILocation(line: 6228, column: 20, scope: !12315)
!12329 = !DILocation(line: 6228, column: 37, scope: !12315)
!12330 = !DILocation(line: 6228, column: 33, scope: !12315)
!12331 = !DILocation(line: 6228, column: 40, scope: !12315)
!12332 = !DILocation(line: 6229, column: 17, scope: !12315)
!12333 = !DILocation(line: 6229, column: 13, scope: !12315)
!12334 = !DILocation(line: 6229, column: 20, scope: !12315)
!12335 = !DILocation(line: 6229, column: 25, scope: !12315)
!12336 = !DILocation(line: 6226, column: 16, scope: !12315)
!12337 = !DILocation(line: 6231, column: 10, scope: !12315)
!12338 = !DILocation(line: 6231, column: 14, scope: !12315)
!12339 = !DILocation(line: 6232, column: 7, scope: !12315)
!12340 = !DILocation(line: 6232, column: 14, scope: !12315)
!12341 = !DILocation(line: 6232, column: 10, scope: !12315)
!12342 = !DILocation(line: 6232, column: 17, scope: !12315)
!12343 = !DILocation(line: 6233, column: 7, scope: !12315)
!12344 = !DILocation(line: 6233, column: 12, scope: !12315)
!12345 = !DILocation(line: 6235, column: 10, scope: !12315)
!12346 = !DILocation(line: 6235, column: 14, scope: !12315)
!12347 = !DILocation(line: 6235, column: 16, scope: !12315)
!12348 = !DILocation(line: 6236, column: 7, scope: !12315)
!12349 = !DILocation(line: 6236, column: 10, scope: !12315)
!12350 = !DILocation(line: 6237, column: 7, scope: !12315)
!12351 = !DILocation(line: 6237, column: 14, scope: !12315)
!12352 = !DILocation(line: 6237, column: 10, scope: !12315)
!12353 = !DILocation(line: 6237, column: 17, scope: !12315)
!12354 = !DILocation(line: 6240, column: 10, scope: !12315)
!12355 = !DILocation(line: 6240, column: 14, scope: !12315)
!12356 = !DILocation(line: 6241, column: 9, scope: !12315)
!12357 = !DILocation(line: 6241, column: 7, scope: !12315)
!12358 = !DILocation(line: 6242, column: 10, scope: !12315)
!12359 = !DILocation(line: 6242, column: 13, scope: !12315)
!12360 = !DILocation(line: 6247, column: 10, scope: !12315)
!12361 = !DILocation(line: 6247, column: 18, scope: !12315)
!12362 = !DILocation(line: 6247, column: 14, scope: !12315)
!12363 = !DILocation(line: 6247, column: 21, scope: !12315)
!12364 = !DILocation(line: 6247, column: 25, scope: !12315)
!12365 = !DILocation(line: 6247, column: 32, scope: !12315)
!12366 = !DILocation(line: 6247, column: 28, scope: !12315)
!12367 = !DILocation(line: 6247, column: 35, scope: !12315)
!12368 = !DILocation(line: 6248, column: 7, scope: !12315)
!12369 = !DILocation(line: 6248, column: 27, scope: !12315)
!12370 = !DILocation(line: 6248, column: 23, scope: !12315)
!12371 = !DILocation(line: 6248, column: 30, scope: !12315)
!12372 = !DILocation(line: 6248, column: 39, scope: !12315)
!12373 = !DILocation(line: 6248, column: 35, scope: !12315)
!12374 = !DILocation(line: 6248, column: 42, scope: !12315)
!12375 = !DILocation(line: 6248, column: 10, scope: !12315)
!12376 = !DILocation(line: 6225, column: 10, scope: !12264)
!12377 = !DILocation(line: 6250, column: 20, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12379, file: !3, line: 6250, column: 14)
!12379 = distinct !DILexicalBlock(scope: !12315, file: !3, line: 6249, column: 8)
!12380 = !DILocation(line: 6250, column: 16, scope: !12378)
!12381 = !DILocation(line: 6250, column: 23, scope: !12378)
!12382 = !DILocation(line: 6250, column: 14, scope: !12379)
!12383 = !DILocation(line: 6252, column: 31, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12378, file: !3, line: 6251, column: 5)
!12385 = !DILocation(line: 6252, column: 26, scope: !12384)
!12386 = !DILocation(line: 6252, column: 7, scope: !12384)
!12387 = !DILocation(line: 6252, column: 29, scope: !12384)
!12388 = !DILocation(line: 6254, column: 29, scope: !12384)
!12389 = !DILocation(line: 6254, column: 11, scope: !12384)
!12390 = !DILocation(line: 6253, column: 31, scope: !12384)
!12391 = !DILocation(line: 6253, column: 7, scope: !12384)
!12392 = !DILocation(line: 6254, column: 9, scope: !12384)
!12393 = !DILocation(line: 6255, column: 5, scope: !12384)
!12394 = !DILocation(line: 6256, column: 8, scope: !12379)
!12395 = !DILocalVariable(name: "k", scope: !12396, file: !3, line: 6259, type: !2396)
!12396 = distinct !DILexicalBlock(scope: !12315, file: !3, line: 6258, column: 8)
!12397 = !DILocation(line: 6259, column: 14, scope: !12396)
!12398 = !DILocation(line: 6263, column: 34, scope: !12396)
!12399 = !DILocation(line: 6264, column: 17, scope: !12396)
!12400 = !DILocation(line: 6264, column: 13, scope: !12396)
!12401 = !DILocation(line: 6264, column: 20, scope: !12396)
!12402 = !DILocation(line: 6265, column: 17, scope: !12396)
!12403 = !DILocation(line: 6265, column: 13, scope: !12396)
!12404 = !DILocation(line: 6265, column: 20, scope: !12396)
!12405 = !DILocation(line: 6266, column: 17, scope: !12396)
!12406 = !DILocation(line: 6266, column: 13, scope: !12396)
!12407 = !DILocation(line: 6266, column: 20, scope: !12396)
!12408 = !DILocation(line: 6263, column: 10, scope: !12396)
!12409 = !DILocation(line: 6267, column: 27, scope: !12396)
!12410 = !DILocation(line: 6267, column: 14, scope: !12396)
!12411 = !DILocation(line: 6267, column: 10, scope: !12396)
!12412 = !DILocation(line: 6267, column: 17, scope: !12396)
!12413 = !DILocation(line: 6267, column: 25, scope: !12396)
!12414 = !DILocation(line: 6268, column: 27, scope: !12396)
!12415 = !DILocation(line: 6268, column: 10, scope: !12396)
!12416 = !DILocation(line: 6268, column: 30, scope: !12396)
!12417 = !DILocation(line: 6270, column: 25, scope: !12396)
!12418 = !DILocation(line: 6270, column: 7, scope: !12396)
!12419 = !DILocation(line: 6269, column: 34, scope: !12396)
!12420 = !DILocation(line: 6269, column: 10, scope: !12396)
!12421 = !DILocation(line: 6270, column: 5, scope: !12396)
!12422 = !DILocation(line: 6271, column: 34, scope: !12396)
!12423 = !DILocation(line: 6271, column: 29, scope: !12396)
!12424 = !DILocation(line: 6271, column: 10, scope: !12396)
!12425 = !DILocation(line: 6271, column: 32, scope: !12396)
!12426 = !DILocation(line: 6272, column: 17, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12396, file: !3, line: 6272, column: 10)
!12428 = !DILocation(line: 6272, column: 15, scope: !12427)
!12429 = !DILocation(line: 6272, column: 22, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12427, file: !3, line: 6272, column: 10)
!12431 = !DILocation(line: 6272, column: 26, scope: !12430)
!12432 = !DILocation(line: 6272, column: 24, scope: !12430)
!12433 = !DILocation(line: 6272, column: 10, scope: !12427)
!12434 = !DILocation(line: 6273, column: 5, scope: !12430)
!12435 = !DILocation(line: 6272, column: 31, scope: !12430)
!12436 = !DILocation(line: 6272, column: 10, scope: !12430)
!12437 = distinct !{!12437, !12433, !12438}
!12438 = !DILocation(line: 6273, column: 5, scope: !12427)
!12439 = !DILocation(line: 6276, column: 4, scope: !12264)
!12440 = !DILocation(line: 6277, column: 7, scope: !12226)
!12441 = !DILocation(line: 6278, column: 3, scope: !12133)
!12442 = !DILocation(line: 6279, column: 6, scope: !12068)
!12443 = !DILocation(line: 6282, column: 8, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12006, file: !3, line: 6282, column: 8)
!12445 = !DILocation(line: 6283, column: 8, scope: !12444)
!12446 = !DILocation(line: 6283, column: 15, scope: !12444)
!12447 = !DILocation(line: 6283, column: 11, scope: !12444)
!12448 = !DILocation(line: 6283, column: 18, scope: !12444)
!12449 = !DILocation(line: 6283, column: 21, scope: !12444)
!12450 = !DILocation(line: 6284, column: 8, scope: !12444)
!12451 = !DILocation(line: 6284, column: 30, scope: !12444)
!12452 = !DILocation(line: 6284, column: 13, scope: !12444)
!12453 = !DILocation(line: 6285, column: 8, scope: !12444)
!12454 = !DILocation(line: 6285, column: 15, scope: !12444)
!12455 = !DILocation(line: 6285, column: 11, scope: !12444)
!12456 = !DILocation(line: 6285, column: 18, scope: !12444)
!12457 = !DILocation(line: 6285, column: 22, scope: !12444)
!12458 = !DILocation(line: 6286, column: 8, scope: !12444)
!12459 = !DILocation(line: 6286, column: 12, scope: !12444)
!12460 = !DILocation(line: 6287, column: 5, scope: !12444)
!12461 = !DILocation(line: 6287, column: 8, scope: !12444)
!12462 = !DILocation(line: 6287, column: 29, scope: !12444)
!12463 = !DILocation(line: 6288, column: 5, scope: !12444)
!12464 = !DILocation(line: 6288, column: 8, scope: !12444)
!12465 = !DILocation(line: 6289, column: 5, scope: !12444)
!12466 = !DILocation(line: 6289, column: 8, scope: !12444)
!12467 = !DILocation(line: 6290, column: 8, scope: !12444)
!12468 = !DILocation(line: 6290, column: 16, scope: !12444)
!12469 = !DILocation(line: 6290, column: 12, scope: !12444)
!12470 = !DILocation(line: 6290, column: 19, scope: !12444)
!12471 = !DILocation(line: 6290, column: 28, scope: !12444)
!12472 = !DILocation(line: 6290, column: 25, scope: !12444)
!12473 = !DILocation(line: 6291, column: 5, scope: !12444)
!12474 = !DILocation(line: 6291, column: 39, scope: !12444)
!12475 = !DILocation(line: 6291, column: 35, scope: !12444)
!12476 = !DILocation(line: 6291, column: 42, scope: !12444)
!12477 = !DILocation(line: 6291, column: 50, scope: !12444)
!12478 = !DILocation(line: 6291, column: 10, scope: !12444)
!12479 = !DILocation(line: 6282, column: 8, scope: !12006)
!12480 = !DILocation(line: 6292, column: 25, scope: !12444)
!12481 = !DILocation(line: 6292, column: 21, scope: !12444)
!12482 = !DILocation(line: 6292, column: 28, scope: !12444)
!12483 = !DILocation(line: 6292, column: 19, scope: !12444)
!12484 = !DILocation(line: 6292, column: 6, scope: !12444)
!12485 = !DILocation(line: 6295, column: 13, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12444, file: !3, line: 6295, column: 13)
!12487 = !DILocation(line: 6295, column: 25, scope: !12486)
!12488 = !DILocation(line: 6295, column: 32, scope: !12486)
!12489 = !DILocation(line: 6295, column: 28, scope: !12486)
!12490 = !DILocation(line: 6295, column: 35, scope: !12486)
!12491 = !DILocation(line: 6295, column: 38, scope: !12486)
!12492 = !DILocation(line: 6295, column: 43, scope: !12486)
!12493 = !DILocation(line: 6295, column: 50, scope: !12486)
!12494 = !DILocation(line: 6295, column: 46, scope: !12486)
!12495 = !DILocation(line: 6295, column: 53, scope: !12486)
!12496 = !DILocation(line: 6295, column: 57, scope: !12486)
!12497 = !DILocation(line: 6295, column: 13, scope: !12444)
!12498 = !DILocalVariable(name: "set", scope: !12499, file: !3, line: 6297, type: !2372)
!12499 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 6296, column: 6)
!12500 = !DILocation(line: 6297, column: 12, scope: !12499)
!12501 = !DILocation(line: 6297, column: 18, scope: !12499)
!12502 = !DILocation(line: 6299, column: 12, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12499, file: !3, line: 6299, column: 12)
!12504 = !DILocation(line: 6300, column: 5, scope: !12503)
!12505 = !DILocation(line: 6300, column: 25, scope: !12503)
!12506 = !DILocation(line: 6300, column: 21, scope: !12503)
!12507 = !DILocation(line: 6300, column: 28, scope: !12503)
!12508 = !DILocation(line: 6300, column: 33, scope: !12503)
!12509 = !DILocation(line: 6300, column: 8, scope: !12503)
!12510 = !DILocation(line: 6301, column: 5, scope: !12503)
!12511 = !DILocation(line: 6301, column: 8, scope: !12503)
!12512 = !DILocation(line: 6299, column: 12, scope: !12499)
!12513 = !DILocation(line: 6302, column: 18, scope: !12503)
!12514 = !DILocation(line: 6302, column: 16, scope: !12503)
!12515 = !DILocation(line: 6302, column: 3, scope: !12503)
!12516 = !DILocation(line: 6303, column: 6, scope: !12499)
!12517 = !DILocation(line: 6305, column: 8, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12006, file: !3, line: 6305, column: 8)
!12519 = !DILocation(line: 6305, column: 8, scope: !12006)
!12520 = !DILocalVariable(name: "equiv", scope: !12521, file: !3, line: 6307, type: !2372)
!12521 = distinct !DILexicalBlock(scope: !12518, file: !3, line: 6306, column: 6)
!12522 = !DILocation(line: 6307, column: 12, scope: !12521)
!12523 = !DILocation(line: 6308, column: 21, scope: !12521)
!12524 = !DILocation(line: 6308, column: 35, scope: !12521)
!12525 = !DILocation(line: 6308, column: 45, scope: !12521)
!12526 = !DILocation(line: 6308, column: 41, scope: !12521)
!12527 = !DILocation(line: 6308, column: 48, scope: !12521)
!12528 = !DILocation(line: 6309, column: 24, scope: !12521)
!12529 = !DILocation(line: 6309, column: 20, scope: !12521)
!12530 = !DILocation(line: 6309, column: 27, scope: !12521)
!12531 = !DILocation(line: 6308, column: 5, scope: !12521)
!12532 = !DILocalVariable(name: "regno", scope: !12521, file: !3, line: 6310, type: !2396)
!12533 = !DILocation(line: 6310, column: 12, scope: !12521)
!12534 = !DILocation(line: 6312, column: 12, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 6312, column: 12)
!12536 = !DILocation(line: 6312, column: 18, scope: !12535)
!12537 = !DILocation(line: 6312, column: 12, scope: !12521)
!12538 = !DILocation(line: 6314, column: 9, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12540, file: !3, line: 6314, column: 9)
!12540 = distinct !DILexicalBlock(scope: !12535, file: !3, line: 6313, column: 3)
!12541 = !DILocation(line: 6314, column: 9, scope: !12540)
!12542 = !DILocation(line: 6315, column: 15, scope: !12539)
!12543 = !DILocation(line: 6315, column: 13, scope: !12539)
!12544 = !DILocation(line: 6315, column: 7, scope: !12539)
!12545 = !DILocation(line: 6322, column: 9, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12539, file: !3, line: 6317, column: 7)
!12547 = !DILocation(line: 6323, column: 31, scope: !12546)
!12548 = !DILocation(line: 6323, column: 17, scope: !12546)
!12549 = !DILocation(line: 6323, column: 15, scope: !12546)
!12550 = !DILocation(line: 6324, column: 34, scope: !12546)
!12551 = !DILocation(line: 6324, column: 30, scope: !12546)
!12552 = !DILocation(line: 6324, column: 37, scope: !12546)
!12553 = !DILocation(line: 6324, column: 43, scope: !12546)
!12554 = !DILocation(line: 6324, column: 17, scope: !12546)
!12555 = !DILocation(line: 6324, column: 15, scope: !12546)
!12556 = !DILocation(line: 6331, column: 18, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12546, file: !3, line: 6331, column: 9)
!12558 = !DILocation(line: 6331, column: 16, scope: !12557)
!12559 = !DILocation(line: 6331, column: 14, scope: !12557)
!12560 = !DILocation(line: 6331, column: 25, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12557, file: !3, line: 6331, column: 9)
!12562 = !DILocation(line: 6331, column: 29, scope: !12561)
!12563 = !DILocation(line: 6331, column: 47, scope: !12561)
!12564 = !DILocation(line: 6331, column: 43, scope: !12561)
!12565 = !DILocation(line: 6331, column: 50, scope: !12561)
!12566 = !DILocation(line: 6331, column: 35, scope: !12561)
!12567 = !DILocation(line: 6331, column: 27, scope: !12561)
!12568 = !DILocation(line: 6331, column: 9, scope: !12557)
!12569 = !DILocation(line: 6332, column: 8, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 6332, column: 8)
!12571 = !DILocation(line: 6332, column: 8, scope: !12561)
!12572 = !DILocation(line: 6333, column: 12, scope: !12570)
!12573 = !DILocation(line: 6333, column: 6, scope: !12570)
!12574 = !DILocation(line: 6331, column: 58, scope: !12561)
!12575 = !DILocation(line: 6331, column: 9, scope: !12561)
!12576 = distinct !{!12576, !12568, !12577}
!12577 = !DILocation(line: 6333, column: 14, scope: !12557)
!12578 = !DILocation(line: 6335, column: 3, scope: !12540)
!12579 = !DILocation(line: 6339, column: 12, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 6339, column: 12)
!12581 = !DILocation(line: 6339, column: 18, scope: !12580)
!12582 = !DILocation(line: 6339, column: 12, scope: !12521)
!12583 = !DILocalVariable(name: "regs_used", scope: !12584, file: !3, line: 6341, type: !2396)
!12584 = distinct !DILexicalBlock(scope: !12580, file: !3, line: 6340, column: 3)
!12585 = !DILocation(line: 6341, column: 9, scope: !12584)
!12586 = !DILocalVariable(name: "bad_for_class", scope: !12584, file: !3, line: 6342, type: !2396)
!12587 = !DILocation(line: 6342, column: 9, scope: !12584)
!12588 = !DILocalVariable(name: "max_regno", scope: !12584, file: !3, line: 6343, type: !2396)
!12589 = !DILocation(line: 6343, column: 9, scope: !12584)
!12590 = !DILocation(line: 6343, column: 21, scope: !12584)
!12591 = !DILocation(line: 6343, column: 33, scope: !12584)
!12592 = !DILocation(line: 6343, column: 29, scope: !12584)
!12593 = !DILocation(line: 6343, column: 36, scope: !12584)
!12594 = !DILocation(line: 6343, column: 27, scope: !12584)
!12595 = !DILocation(line: 6345, column: 14, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12584, file: !3, line: 6345, column: 5)
!12597 = !DILocation(line: 6345, column: 12, scope: !12596)
!12598 = !DILocation(line: 6345, column: 10, scope: !12596)
!12599 = !DILocation(line: 6345, column: 21, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12596, file: !3, line: 6345, column: 5)
!12601 = !DILocation(line: 6345, column: 25, scope: !12600)
!12602 = !DILocation(line: 6345, column: 23, scope: !12600)
!12603 = !DILocation(line: 6345, column: 5, scope: !12596)
!12604 = !DILocation(line: 6347, column: 22, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 6346, column: 7)
!12606 = !DILocation(line: 6347, column: 19, scope: !12605)
!12607 = !DILocation(line: 6349, column: 28, scope: !12605)
!12608 = !DILocation(line: 6349, column: 26, scope: !12605)
!12609 = !DILocation(line: 6349, column: 23, scope: !12605)
!12610 = !DILocation(line: 6351, column: 7, scope: !12605)
!12611 = !DILocation(line: 6345, column: 37, scope: !12600)
!12612 = !DILocation(line: 6345, column: 5, scope: !12600)
!12613 = distinct !{!12613, !12603, !12614}
!12614 = !DILocation(line: 6351, column: 7, scope: !12596)
!12615 = !DILocation(line: 6353, column: 10, scope: !12616)
!12616 = distinct !DILexicalBlock(scope: !12584, file: !3, line: 6353, column: 9)
!12617 = !DILocation(line: 6354, column: 10, scope: !12616)
!12618 = !DILocation(line: 6354, column: 33, scope: !12616)
!12619 = !DILocation(line: 6354, column: 44, scope: !12616)
!12620 = !DILocation(line: 6354, column: 40, scope: !12616)
!12621 = !DILocation(line: 6354, column: 47, scope: !12616)
!12622 = !DILocation(line: 6355, column: 16, scope: !12616)
!12623 = !DILocation(line: 6355, column: 12, scope: !12616)
!12624 = !DILocation(line: 6355, column: 19, scope: !12616)
!12625 = !DILocation(line: 6355, column: 30, scope: !12616)
!12626 = !DILocation(line: 6355, column: 26, scope: !12616)
!12627 = !DILocation(line: 6355, column: 33, scope: !12616)
!12628 = !DILocation(line: 6356, column: 16, scope: !12616)
!12629 = !DILocation(line: 6356, column: 12, scope: !12616)
!12630 = !DILocation(line: 6356, column: 19, scope: !12616)
!12631 = !DILocation(line: 6356, column: 27, scope: !12616)
!12632 = !DILocation(line: 6356, column: 23, scope: !12616)
!12633 = !DILocation(line: 6356, column: 30, scope: !12616)
!12634 = !DILocation(line: 6356, column: 35, scope: !12616)
!12635 = !DILocation(line: 6354, column: 15, scope: !12616)
!12636 = !DILocation(line: 6357, column: 9, scope: !12616)
!12637 = !DILocation(line: 6357, column: 12, scope: !12616)
!12638 = !DILocation(line: 6353, column: 9, scope: !12584)
!12639 = !DILocation(line: 6358, column: 13, scope: !12616)
!12640 = !DILocation(line: 6358, column: 7, scope: !12616)
!12641 = !DILocation(line: 6359, column: 3, scope: !12584)
!12642 = !DILocation(line: 6361, column: 12, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 6361, column: 12)
!12644 = !DILocation(line: 6361, column: 18, scope: !12643)
!12645 = !DILocation(line: 6361, column: 23, scope: !12643)
!12646 = !DILocation(line: 6361, column: 28, scope: !12643)
!12647 = !DILocation(line: 6361, column: 12, scope: !12521)
!12648 = !DILocation(line: 6362, column: 9, scope: !12643)
!12649 = !DILocation(line: 6362, column: 3, scope: !12643)
!12650 = !DILocation(line: 6369, column: 12, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 6369, column: 12)
!12652 = !DILocation(line: 6369, column: 18, scope: !12651)
!12653 = !DILocation(line: 6369, column: 12, scope: !12521)
!12654 = !DILocation(line: 6370, column: 10, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12651, file: !3, line: 6370, column: 3)
!12656 = !DILocation(line: 6370, column: 8, scope: !12655)
!12657 = !DILocation(line: 6370, column: 15, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12655, file: !3, line: 6370, column: 3)
!12659 = !DILocation(line: 6370, column: 19, scope: !12658)
!12660 = !DILocation(line: 6370, column: 17, scope: !12658)
!12661 = !DILocation(line: 6370, column: 3, scope: !12655)
!12662 = !DILocation(line: 6371, column: 45, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12658, file: !3, line: 6371, column: 9)
!12664 = !DILocation(line: 6372, column: 31, scope: !12663)
!12665 = !DILocation(line: 6372, column: 10, scope: !12663)
!12666 = !DILocation(line: 6371, column: 9, scope: !12663)
!12667 = !DILocation(line: 6371, column: 9, scope: !12658)
!12668 = !DILocation(line: 6374, column: 19, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !3, line: 6374, column: 13)
!12670 = distinct !DILexicalBlock(scope: !12663, file: !3, line: 6373, column: 7)
!12671 = !DILocation(line: 6374, column: 15, scope: !12669)
!12672 = !DILocation(line: 6374, column: 22, scope: !12669)
!12673 = !DILocation(line: 6374, column: 13, scope: !12670)
!12674 = !DILocation(line: 6375, column: 28, scope: !12669)
!12675 = !DILocation(line: 6375, column: 23, scope: !12669)
!12676 = !DILocation(line: 6375, column: 4, scope: !12669)
!12677 = !DILocation(line: 6375, column: 26, scope: !12669)
!12678 = !DILocation(line: 6376, column: 15, scope: !12670)
!12679 = !DILocation(line: 6377, column: 9, scope: !12670)
!12680 = !DILocation(line: 6372, column: 33, scope: !12663)
!12681 = !DILocation(line: 6370, column: 37, scope: !12658)
!12682 = !DILocation(line: 6370, column: 3, scope: !12658)
!12683 = distinct !{!12683, !12661, !12684}
!12684 = !DILocation(line: 6378, column: 7, scope: !12655)
!12685 = !DILocation(line: 6386, column: 12, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 6386, column: 12)
!12687 = !DILocation(line: 6386, column: 18, scope: !12686)
!12688 = !DILocation(line: 6386, column: 12, scope: !12521)
!12689 = !DILocation(line: 6388, column: 28, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12691, file: !3, line: 6388, column: 9)
!12691 = distinct !DILexicalBlock(scope: !12686, file: !3, line: 6387, column: 3)
!12692 = !DILocation(line: 6388, column: 35, scope: !12690)
!12693 = !DILocation(line: 6388, column: 45, scope: !12690)
!12694 = !DILocation(line: 6388, column: 41, scope: !12690)
!12695 = !DILocation(line: 6388, column: 48, scope: !12690)
!12696 = !DILocation(line: 6388, column: 9, scope: !12690)
!12697 = !DILocation(line: 6388, column: 9, scope: !12691)
!12698 = !DILocation(line: 6389, column: 19, scope: !12690)
!12699 = !DILocation(line: 6389, column: 15, scope: !12690)
!12700 = !DILocation(line: 6389, column: 22, scope: !12690)
!12701 = !DILocation(line: 6389, column: 7, scope: !12690)
!12702 = !DILocation(line: 6395, column: 4, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12690, file: !3, line: 6390, column: 9)
!12704 = !DILocation(line: 6399, column: 14, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12703, file: !3, line: 6399, column: 8)
!12706 = !DILocation(line: 6399, column: 10, scope: !12705)
!12707 = !DILocation(line: 6399, column: 17, scope: !12705)
!12708 = !DILocation(line: 6399, column: 8, scope: !12703)
!12709 = !DILocation(line: 6400, column: 30, scope: !12705)
!12710 = !DILocation(line: 6400, column: 25, scope: !12705)
!12711 = !DILocation(line: 6400, column: 6, scope: !12705)
!12712 = !DILocation(line: 6400, column: 28, scope: !12705)
!12713 = !DILocation(line: 6403, column: 10, scope: !12703)
!12714 = !DILocation(line: 6404, column: 4, scope: !12703)
!12715 = !DILocation(line: 6405, column: 9, scope: !12703)
!12716 = !DILocation(line: 6406, column: 33, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12690, file: !3, line: 6406, column: 14)
!12718 = !DILocation(line: 6406, column: 40, scope: !12717)
!12719 = !DILocation(line: 6406, column: 50, scope: !12717)
!12720 = !DILocation(line: 6406, column: 46, scope: !12717)
!12721 = !DILocation(line: 6406, column: 53, scope: !12717)
!12722 = !DILocation(line: 6406, column: 14, scope: !12717)
!12723 = !DILocation(line: 6406, column: 14, scope: !12690)
!12724 = !DILocation(line: 6407, column: 19, scope: !12717)
!12725 = !DILocation(line: 6407, column: 15, scope: !12717)
!12726 = !DILocation(line: 6407, column: 22, scope: !12717)
!12727 = !DILocation(line: 6407, column: 7, scope: !12717)
!12728 = !DILocation(line: 6415, column: 4, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12717, file: !3, line: 6408, column: 9)
!12730 = !DILocation(line: 6417, column: 14, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12729, file: !3, line: 6417, column: 8)
!12732 = !DILocation(line: 6417, column: 10, scope: !12731)
!12733 = !DILocation(line: 6417, column: 17, scope: !12731)
!12734 = !DILocation(line: 6417, column: 8, scope: !12729)
!12735 = !DILocation(line: 6418, column: 30, scope: !12731)
!12736 = !DILocation(line: 6418, column: 25, scope: !12731)
!12737 = !DILocation(line: 6418, column: 6, scope: !12731)
!12738 = !DILocation(line: 6418, column: 28, scope: !12731)
!12739 = !DILocation(line: 6421, column: 10, scope: !12729)
!12740 = !DILocation(line: 6422, column: 4, scope: !12729)
!12741 = !DILocation(line: 6423, column: 9, scope: !12729)
!12742 = !DILocation(line: 6424, column: 3, scope: !12691)
!12743 = !DILocation(line: 6428, column: 12, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 6428, column: 12)
!12745 = !DILocation(line: 6428, column: 18, scope: !12744)
!12746 = !DILocation(line: 6429, column: 5, scope: !12744)
!12747 = !DILocation(line: 6429, column: 9, scope: !12744)
!12748 = !DILocation(line: 6429, column: 15, scope: !12744)
!12749 = !DILocation(line: 6430, column: 9, scope: !12744)
!12750 = !DILocation(line: 6430, column: 13, scope: !12744)
!12751 = !DILocation(line: 6428, column: 12, scope: !12521)
!12752 = !DILocalVariable(name: "nr", scope: !12753, file: !3, line: 6432, type: !2396)
!12753 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 6431, column: 3)
!12754 = !DILocation(line: 6432, column: 9, scope: !12753)
!12755 = !DILocation(line: 6432, column: 31, scope: !12753)
!12756 = !DILocation(line: 6432, column: 14, scope: !12753)
!12757 = !DILocation(line: 6432, column: 42, scope: !12753)
!12758 = !DILocation(line: 6432, column: 38, scope: !12753)
!12759 = !DILocation(line: 6432, column: 45, scope: !12753)
!12760 = !DILocalVariable(name: "k", scope: !12753, file: !3, line: 6433, type: !2396)
!12761 = !DILocation(line: 6433, column: 9, scope: !12753)
!12762 = !DILocation(line: 6434, column: 22, scope: !12753)
!12763 = !DILocation(line: 6434, column: 9, scope: !12753)
!12764 = !DILocation(line: 6434, column: 5, scope: !12753)
!12765 = !DILocation(line: 6434, column: 12, scope: !12753)
!12766 = !DILocation(line: 6434, column: 20, scope: !12753)
!12767 = !DILocation(line: 6435, column: 29, scope: !12753)
!12768 = !DILocation(line: 6435, column: 24, scope: !12753)
!12769 = !DILocation(line: 6435, column: 5, scope: !12753)
!12770 = !DILocation(line: 6435, column: 27, scope: !12753)
!12771 = !DILocation(line: 6436, column: 22, scope: !12753)
!12772 = !DILocation(line: 6436, column: 5, scope: !12753)
!12773 = !DILocation(line: 6436, column: 25, scope: !12753)
!12774 = !DILocation(line: 6442, column: 11, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 6442, column: 9)
!12776 = !DILocation(line: 6442, column: 9, scope: !12753)
!12777 = !DILocation(line: 6443, column: 23, scope: !12775)
!12778 = !DILocation(line: 6443, column: 7, scope: !12775)
!12779 = !DILocation(line: 6443, column: 30, scope: !12775)
!12780 = !DILocation(line: 6446, column: 12, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 6446, column: 5)
!12782 = !DILocation(line: 6446, column: 10, scope: !12781)
!12783 = !DILocation(line: 6446, column: 17, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 6446, column: 5)
!12785 = !DILocation(line: 6446, column: 21, scope: !12784)
!12786 = !DILocation(line: 6446, column: 19, scope: !12784)
!12787 = !DILocation(line: 6446, column: 5, scope: !12781)
!12788 = !DILocation(line: 6448, column: 29, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12784, file: !3, line: 6447, column: 7)
!12790 = !DILocation(line: 6448, column: 37, scope: !12789)
!12791 = !DILocation(line: 6448, column: 35, scope: !12789)
!12792 = !DILocation(line: 6448, column: 13, scope: !12789)
!12793 = !DILocation(line: 6448, column: 11, scope: !12789)
!12794 = !DILocation(line: 6449, column: 13, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12789, file: !3, line: 6449, column: 13)
!12796 = !DILocation(line: 6449, column: 15, scope: !12795)
!12797 = !DILocation(line: 6449, column: 13, scope: !12789)
!12798 = !DILocation(line: 6451, column: 30, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12795, file: !3, line: 6450, column: 4)
!12800 = !DILocation(line: 6451, column: 41, scope: !12799)
!12801 = !DILocation(line: 6451, column: 37, scope: !12799)
!12802 = !DILocation(line: 6451, column: 44, scope: !12799)
!12803 = !DILocation(line: 6452, column: 13, scope: !12799)
!12804 = !DILocation(line: 6452, column: 9, scope: !12799)
!12805 = !DILocation(line: 6452, column: 16, scope: !12799)
!12806 = !DILocation(line: 6453, column: 13, scope: !12799)
!12807 = !DILocation(line: 6453, column: 9, scope: !12799)
!12808 = !DILocation(line: 6453, column: 16, scope: !12799)
!12809 = !DILocation(line: 6451, column: 6, scope: !12799)
!12810 = !DILocation(line: 6454, column: 6, scope: !12799)
!12811 = !DILocation(line: 6456, column: 4, scope: !12799)
!12812 = !DILocation(line: 6457, column: 7, scope: !12789)
!12813 = !DILocation(line: 6446, column: 26, scope: !12784)
!12814 = !DILocation(line: 6446, column: 5, scope: !12784)
!12815 = distinct !{!12815, !12787, !12816}
!12816 = !DILocation(line: 6457, column: 7, scope: !12781)
!12817 = !DILocation(line: 6458, column: 3, scope: !12753)
!12818 = !DILocation(line: 6459, column: 6, scope: !12521)
!12819 = !DILocation(line: 6463, column: 12, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12006, file: !3, line: 6463, column: 8)
!12821 = !DILocation(line: 6463, column: 8, scope: !12820)
!12822 = !DILocation(line: 6463, column: 15, scope: !12820)
!12823 = !DILocation(line: 6463, column: 23, scope: !12820)
!12824 = !DILocation(line: 6463, column: 28, scope: !12820)
!12825 = !DILocation(line: 6463, column: 35, scope: !12820)
!12826 = !DILocation(line: 6463, column: 31, scope: !12820)
!12827 = !DILocation(line: 6463, column: 38, scope: !12820)
!12828 = !DILocation(line: 6463, column: 47, scope: !12820)
!12829 = !DILocation(line: 6463, column: 8, scope: !12006)
!12830 = !DILocation(line: 6464, column: 6, scope: !12820)
!12831 = !DILocation(line: 6500, column: 2, scope: !12006)
!12832 = !DILocation(line: 6035, column: 35, scope: !12001)
!12833 = !DILocation(line: 6035, column: 7, scope: !12001)
!12834 = distinct !{!12834, !12004, !12835}
!12835 = !DILocation(line: 6500, column: 2, scope: !11998)
!12836 = !DILocation(line: 6504, column: 14, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 6504, column: 7)
!12838 = !DILocation(line: 6504, column: 12, scope: !12837)
!12839 = !DILocation(line: 6504, column: 19, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12837, file: !3, line: 6504, column: 7)
!12841 = !DILocation(line: 6504, column: 23, scope: !12840)
!12842 = !DILocation(line: 6504, column: 21, scope: !12840)
!12843 = !DILocation(line: 6504, column: 7, scope: !12837)
!12844 = !DILocalVariable(name: "r", scope: !12845, file: !3, line: 6506, type: !2396)
!12845 = distinct !DILexicalBlock(scope: !12840, file: !3, line: 6505, column: 2)
!12846 = !DILocation(line: 6506, column: 8, scope: !12845)
!12847 = !DILocation(line: 6506, column: 25, scope: !12845)
!12848 = !DILocation(line: 6506, column: 12, scope: !12845)
!12849 = !DILocation(line: 6509, column: 12, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12845, file: !3, line: 6509, column: 8)
!12851 = !DILocation(line: 6509, column: 8, scope: !12850)
!12852 = !DILocation(line: 6509, column: 15, scope: !12850)
!12853 = !DILocation(line: 6509, column: 19, scope: !12850)
!12854 = !DILocation(line: 6509, column: 24, scope: !12850)
!12855 = !DILocation(line: 6509, column: 31, scope: !12850)
!12856 = !DILocation(line: 6509, column: 27, scope: !12850)
!12857 = !DILocation(line: 6509, column: 34, scope: !12850)
!12858 = !DILocation(line: 6509, column: 37, scope: !12850)
!12859 = !DILocation(line: 6509, column: 42, scope: !12850)
!12860 = !DILocation(line: 6509, column: 51, scope: !12850)
!12861 = !DILocation(line: 6509, column: 47, scope: !12850)
!12862 = !DILocation(line: 6509, column: 54, scope: !12850)
!12863 = !DILocation(line: 6509, column: 8, scope: !12845)
!12864 = !DILocation(line: 6510, column: 6, scope: !12850)
!12865 = !DILocation(line: 6514, column: 12, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12845, file: !3, line: 6514, column: 8)
!12867 = !DILocation(line: 6514, column: 8, scope: !12866)
!12868 = !DILocation(line: 6514, column: 15, scope: !12866)
!12869 = !DILocation(line: 6514, column: 23, scope: !12866)
!12870 = !DILocation(line: 6514, column: 28, scope: !12866)
!12871 = !DILocation(line: 6514, column: 35, scope: !12866)
!12872 = !DILocation(line: 6514, column: 31, scope: !12866)
!12873 = !DILocation(line: 6514, column: 38, scope: !12866)
!12874 = !DILocation(line: 6514, column: 8, scope: !12845)
!12875 = !DILocation(line: 6515, column: 6, scope: !12866)
!12876 = !DILocation(line: 6517, column: 31, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12845, file: !3, line: 6517, column: 8)
!12878 = !DILocation(line: 6517, column: 38, scope: !12877)
!12879 = !DILocation(line: 6517, column: 41, scope: !12877)
!12880 = !DILocation(line: 6517, column: 46, scope: !12877)
!12881 = !DILocation(line: 6517, column: 56, scope: !12877)
!12882 = !DILocation(line: 6517, column: 43, scope: !12877)
!12883 = !DILocation(line: 6517, column: 10, scope: !12877)
!12884 = !DILocation(line: 6517, column: 8, scope: !12845)
!12885 = !DILocation(line: 6518, column: 6, scope: !12877)
!12886 = !DILocation(line: 6519, column: 2, scope: !12845)
!12887 = !DILocation(line: 6504, column: 35, scope: !12840)
!12888 = !DILocation(line: 6504, column: 7, scope: !12840)
!12889 = distinct !{!12889, !12843, !12890}
!12890 = !DILocation(line: 6519, column: 2, scope: !12837)
!12891 = !DILocation(line: 6522, column: 11, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 6522, column: 11)
!12893 = !DILocation(line: 6522, column: 16, scope: !12892)
!12894 = !DILocation(line: 6522, column: 13, scope: !12892)
!12895 = !DILocation(line: 6522, column: 11, scope: !11994)
!12896 = !DILocation(line: 6524, column: 8, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12892, file: !3, line: 6523, column: 2)
!12898 = !DILocation(line: 6525, column: 4, scope: !12897)
!12899 = !DILocation(line: 6529, column: 5, scope: !11994)
!12900 = !DILocation(line: 6013, column: 65, scope: !11990)
!12901 = !DILocation(line: 6013, column: 3, scope: !11990)
!12902 = distinct !{!12902, !11992, !12903}
!12903 = !DILocation(line: 6529, column: 5, scope: !11985)
!12904 = !DILocation(line: 6531, column: 9, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 6531, column: 7)
!12906 = !DILocation(line: 6531, column: 7, scope: !11898)
!12907 = !DILocation(line: 6535, column: 32, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12905, file: !3, line: 6532, column: 5)
!12909 = !DILocation(line: 6535, column: 39, scope: !12908)
!12910 = !DILocation(line: 6535, column: 7, scope: !12908)
!12911 = !DILocation(line: 6539, column: 7, scope: !12908)
!12912 = !DILocation(line: 6541, column: 14, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12908, file: !3, line: 6541, column: 7)
!12914 = !DILocation(line: 6541, column: 12, scope: !12913)
!12915 = !DILocation(line: 6541, column: 19, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 6541, column: 7)
!12917 = !DILocation(line: 6541, column: 23, scope: !12916)
!12918 = !DILocation(line: 6541, column: 21, scope: !12916)
!12919 = !DILocation(line: 6541, column: 7, scope: !12913)
!12920 = !DILocation(line: 6543, column: 8, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !3, line: 6543, column: 8)
!12922 = distinct !DILexicalBlock(scope: !12916, file: !3, line: 6542, column: 2)
!12923 = !DILocation(line: 6543, column: 15, scope: !12921)
!12924 = !DILocation(line: 6543, column: 19, scope: !12921)
!12925 = !DILocation(line: 6543, column: 22, scope: !12921)
!12926 = !DILocation(line: 6543, column: 28, scope: !12921)
!12927 = !DILocation(line: 6543, column: 32, scope: !12921)
!12928 = !DILocation(line: 6543, column: 35, scope: !12921)
!12929 = !DILocation(line: 6543, column: 42, scope: !12921)
!12930 = !DILocation(line: 6543, column: 46, scope: !12921)
!12931 = !DILocation(line: 6543, column: 49, scope: !12921)
!12932 = !DILocation(line: 6543, column: 57, scope: !12921)
!12933 = !DILocation(line: 6543, column: 8, scope: !12922)
!12934 = !DILocation(line: 6544, column: 6, scope: !12921)
!12935 = !DILocation(line: 6545, column: 4, scope: !12922)
!12936 = !DILocation(line: 6546, column: 11, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12922, file: !3, line: 6546, column: 4)
!12938 = !DILocation(line: 6546, column: 9, scope: !12937)
!12939 = !DILocation(line: 6546, column: 16, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12937, file: !3, line: 6546, column: 4)
!12941 = !DILocation(line: 6546, column: 20, scope: !12940)
!12942 = !DILocation(line: 6546, column: 18, scope: !12940)
!12943 = !DILocation(line: 6546, column: 4, scope: !12937)
!12944 = !DILocation(line: 6547, column: 21, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12940, file: !3, line: 6547, column: 10)
!12946 = !DILocation(line: 6547, column: 10, scope: !12945)
!12947 = !DILocation(line: 6547, column: 27, scope: !12945)
!12948 = !DILocation(line: 6547, column: 34, scope: !12945)
!12949 = !DILocation(line: 6547, column: 38, scope: !12945)
!12950 = !DILocation(line: 6547, column: 41, scope: !12945)
!12951 = !DILocation(line: 6547, column: 24, scope: !12945)
!12952 = !DILocation(line: 6547, column: 10, scope: !12940)
!12953 = !DILocation(line: 6548, column: 30, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !12945, file: !3, line: 6548, column: 12)
!12955 = !DILocation(line: 6548, column: 33, scope: !12954)
!12956 = !DILocation(line: 6548, column: 14, scope: !12954)
!12957 = !DILocation(line: 6548, column: 12, scope: !12945)
!12958 = !DILocation(line: 6549, column: 18, scope: !12954)
!12959 = !DILocation(line: 6549, column: 25, scope: !12954)
!12960 = !DILocation(line: 6549, column: 31, scope: !12954)
!12961 = !DILocation(line: 6549, column: 3, scope: !12954)
!12962 = !DILocation(line: 6548, column: 34, scope: !12954)
!12963 = !DILocation(line: 6546, column: 31, scope: !12940)
!12964 = !DILocation(line: 6546, column: 4, scope: !12940)
!12965 = distinct !{!12965, !12943, !12966}
!12966 = !DILocation(line: 6549, column: 32, scope: !12937)
!12967 = !DILocation(line: 6550, column: 2, scope: !12922)
!12968 = !DILocation(line: 6541, column: 35, scope: !12916)
!12969 = !DILocation(line: 6541, column: 7, scope: !12916)
!12970 = distinct !{!12970, !12919, !12971}
!12971 = !DILocation(line: 6550, column: 2, scope: !12913)
!12972 = !DILocation(line: 6551, column: 5, scope: !12908)
!12973 = !DILocation(line: 6561, column: 15, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 6561, column: 3)
!12975 = !DILocation(line: 6561, column: 13, scope: !12974)
!12976 = !DILocation(line: 6561, column: 8, scope: !12974)
!12977 = !DILocation(line: 6561, column: 45, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12974, file: !3, line: 6561, column: 3)
!12979 = !DILocation(line: 6561, column: 50, scope: !12978)
!12980 = !DILocation(line: 6561, column: 3, scope: !12974)
!12981 = !DILocation(line: 6563, column: 14, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12983, file: !3, line: 6563, column: 7)
!12983 = distinct !DILexicalBlock(scope: !12978, file: !3, line: 6562, column: 5)
!12984 = !DILocation(line: 6563, column: 12, scope: !12982)
!12985 = !DILocation(line: 6563, column: 19, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12982, file: !3, line: 6563, column: 7)
!12987 = !DILocation(line: 6563, column: 23, scope: !12986)
!12988 = !DILocation(line: 6563, column: 21, scope: !12986)
!12989 = !DILocation(line: 6563, column: 7, scope: !12982)
!12990 = !DILocalVariable(name: "r", scope: !12991, file: !3, line: 6565, type: !2396)
!12991 = distinct !DILexicalBlock(scope: !12986, file: !3, line: 6564, column: 2)
!12992 = !DILocation(line: 6565, column: 8, scope: !12991)
!12993 = !DILocation(line: 6565, column: 25, scope: !12991)
!12994 = !DILocation(line: 6565, column: 12, scope: !12991)
!12995 = !DILocalVariable(name: "check_reg", scope: !12991, file: !3, line: 6566, type: !2372)
!12996 = !DILocation(line: 6566, column: 8, scope: !12991)
!12997 = !DILocation(line: 6567, column: 25, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12991, file: !3, line: 6567, column: 8)
!12999 = !DILocation(line: 6567, column: 8, scope: !12998)
!13000 = !DILocation(line: 6567, column: 28, scope: !12998)
!13001 = !DILocation(line: 6567, column: 35, scope: !12998)
!13002 = !DILocation(line: 6567, column: 31, scope: !12998)
!13003 = !DILocation(line: 6567, column: 38, scope: !12998)
!13004 = !DILocation(line: 6567, column: 8, scope: !12991)
!13005 = !DILocation(line: 6568, column: 22, scope: !12998)
!13006 = !DILocation(line: 6568, column: 18, scope: !12998)
!13007 = !DILocation(line: 6568, column: 25, scope: !12998)
!13008 = !DILocation(line: 6568, column: 16, scope: !12998)
!13009 = !DILocation(line: 6568, column: 6, scope: !12998)
!13010 = !DILocation(line: 6569, column: 32, scope: !13011)
!13011 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 6569, column: 13)
!13012 = !DILocation(line: 6569, column: 13, scope: !13011)
!13013 = !DILocation(line: 6570, column: 6, scope: !13011)
!13014 = !DILocation(line: 6570, column: 10, scope: !13011)
!13015 = !DILocation(line: 6571, column: 10, scope: !13011)
!13016 = !DILocation(line: 6571, column: 13, scope: !13011)
!13017 = !DILocation(line: 6571, column: 46, scope: !13011)
!13018 = !DILocation(line: 6569, column: 13, scope: !12998)
!13019 = !DILocation(line: 6572, column: 37, scope: !13011)
!13020 = !DILocation(line: 6572, column: 18, scope: !13011)
!13021 = !DILocation(line: 6572, column: 16, scope: !13011)
!13022 = !DILocation(line: 6572, column: 6, scope: !13011)
!13023 = !DILocation(line: 6574, column: 6, scope: !13011)
!13024 = !DILocation(line: 6575, column: 41, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !12991, file: !3, line: 6575, column: 8)
!13026 = !DILocation(line: 6575, column: 28, scope: !13025)
!13027 = !DILocation(line: 6575, column: 57, scope: !13025)
!13028 = !DILocation(line: 6575, column: 53, scope: !13025)
!13029 = !DILocation(line: 6575, column: 60, scope: !13025)
!13030 = !DILocation(line: 6576, column: 11, scope: !13025)
!13031 = !DILocation(line: 6576, column: 7, scope: !13025)
!13032 = !DILocation(line: 6576, column: 14, scope: !13025)
!13033 = !DILocation(line: 6576, column: 25, scope: !13025)
!13034 = !DILocation(line: 6576, column: 21, scope: !13025)
!13035 = !DILocation(line: 6576, column: 28, scope: !13025)
!13036 = !DILocation(line: 6576, column: 45, scope: !13025)
!13037 = !DILocation(line: 6576, column: 41, scope: !13025)
!13038 = !DILocation(line: 6576, column: 48, scope: !13025)
!13039 = !DILocation(line: 6577, column: 25, scope: !13025)
!13040 = !DILocation(line: 6577, column: 8, scope: !13025)
!13041 = !DILocation(line: 6578, column: 14, scope: !13025)
!13042 = !DILocation(line: 6578, column: 10, scope: !13025)
!13043 = !DILocation(line: 6578, column: 17, scope: !13025)
!13044 = !DILocation(line: 6578, column: 23, scope: !13025)
!13045 = !DILocation(line: 6579, column: 7, scope: !13025)
!13046 = !DILocation(line: 6575, column: 10, scope: !13025)
!13047 = !DILocation(line: 6575, column: 8, scope: !12991)
!13048 = !DILocation(line: 6581, column: 12, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13050, file: !3, line: 6581, column: 12)
!13050 = distinct !DILexicalBlock(scope: !13025, file: !3, line: 6580, column: 6)
!13051 = !DILocation(line: 6581, column: 12, scope: !13050)
!13052 = !DILocation(line: 6582, column: 3, scope: !13049)
!13053 = !DILocation(line: 6583, column: 25, scope: !13050)
!13054 = !DILocation(line: 6583, column: 8, scope: !13050)
!13055 = !DILocation(line: 6583, column: 28, scope: !13050)
!13056 = !DILocation(line: 6584, column: 27, scope: !13050)
!13057 = !DILocation(line: 6584, column: 8, scope: !13050)
!13058 = !DILocation(line: 6584, column: 30, scope: !13050)
!13059 = !DILocation(line: 6585, column: 6, scope: !13050)
!13060 = !DILocation(line: 6598, column: 17, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13025, file: !3, line: 6598, column: 13)
!13062 = !DILocation(line: 6598, column: 13, scope: !13061)
!13063 = !DILocation(line: 6598, column: 20, scope: !13061)
!13064 = !DILocation(line: 6599, column: 6, scope: !13061)
!13065 = !DILocation(line: 6599, column: 13, scope: !13061)
!13066 = !DILocation(line: 6599, column: 9, scope: !13061)
!13067 = !DILocation(line: 6599, column: 16, scope: !13061)
!13068 = !DILocation(line: 6599, column: 27, scope: !13061)
!13069 = !DILocation(line: 6599, column: 23, scope: !13061)
!13070 = !DILocation(line: 6599, column: 30, scope: !13061)
!13071 = !DILocation(line: 6599, column: 20, scope: !13061)
!13072 = !DILocation(line: 6600, column: 6, scope: !13061)
!13073 = !DILocation(line: 6600, column: 42, scope: !13061)
!13074 = !DILocation(line: 6600, column: 38, scope: !13061)
!13075 = !DILocation(line: 6600, column: 45, scope: !13061)
!13076 = !DILocation(line: 6600, column: 9, scope: !13061)
!13077 = !DILocation(line: 6600, column: 49, scope: !13061)
!13078 = !DILocation(line: 6600, column: 52, scope: !13061)
!13079 = !DILocation(line: 6598, column: 13, scope: !13025)
!13080 = !DILocation(line: 6601, column: 11, scope: !13061)
!13081 = !DILocation(line: 6601, column: 6, scope: !13061)
!13082 = !DILocation(line: 6602, column: 2, scope: !12991)
!13083 = !DILocation(line: 6563, column: 35, scope: !12986)
!13084 = !DILocation(line: 6563, column: 7, scope: !12986)
!13085 = distinct !{!13085, !12989, !13086}
!13086 = !DILocation(line: 6602, column: 2, scope: !12982)
!13087 = !DILocation(line: 6603, column: 5, scope: !12983)
!13088 = !DILocation(line: 6561, column: 60, scope: !12978)
!13089 = !DILocation(line: 6561, column: 3, scope: !12978)
!13090 = distinct !{!13090, !12980, !13091}
!13091 = !DILocation(line: 6603, column: 5, scope: !12974)
!13092 = !DILocation(line: 6607, column: 10, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 6607, column: 3)
!13094 = !DILocation(line: 6607, column: 8, scope: !13093)
!13095 = !DILocation(line: 6607, column: 15, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13093, file: !3, line: 6607, column: 3)
!13097 = !DILocation(line: 6607, column: 19, scope: !13096)
!13098 = !DILocation(line: 6607, column: 17, scope: !13096)
!13099 = !DILocation(line: 6607, column: 3, scope: !13093)
!13100 = !DILocation(line: 6608, column: 28, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 6608, column: 9)
!13102 = !DILocation(line: 6608, column: 9, scope: !13101)
!13103 = !DILocation(line: 6608, column: 9, scope: !13096)
!13104 = !DILocation(line: 6609, column: 38, scope: !13101)
!13105 = !DILocation(line: 6609, column: 19, scope: !13101)
!13106 = !DILocation(line: 6609, column: 11, scope: !13101)
!13107 = !DILocation(line: 6609, column: 7, scope: !13101)
!13108 = !DILocation(line: 6609, column: 14, scope: !13101)
!13109 = !DILocation(line: 6609, column: 17, scope: !13101)
!13110 = !DILocation(line: 6608, column: 29, scope: !13101)
!13111 = !DILocation(line: 6607, column: 31, scope: !13096)
!13112 = !DILocation(line: 6607, column: 3, scope: !13096)
!13113 = distinct !{!13113, !13099, !13114}
!13114 = !DILocation(line: 6609, column: 39, scope: !13093)
!13115 = !DILocation(line: 6614, column: 10, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 6614, column: 3)
!13117 = !DILocation(line: 6614, column: 8, scope: !13116)
!13118 = !DILocation(line: 6614, column: 15, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13116, file: !3, line: 6614, column: 3)
!13120 = !DILocation(line: 6614, column: 19, scope: !13119)
!13121 = !DILocation(line: 6614, column: 17, scope: !13119)
!13122 = !DILocation(line: 6614, column: 3, scope: !13116)
!13123 = !DILocation(line: 6615, column: 13, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13119, file: !3, line: 6615, column: 9)
!13125 = !DILocation(line: 6615, column: 9, scope: !13124)
!13126 = !DILocation(line: 6615, column: 16, scope: !13124)
!13127 = !DILocation(line: 6615, column: 24, scope: !13124)
!13128 = !DILocation(line: 6616, column: 2, scope: !13124)
!13129 = !DILocation(line: 6616, column: 11, scope: !13124)
!13130 = !DILocation(line: 6616, column: 7, scope: !13124)
!13131 = !DILocation(line: 6616, column: 14, scope: !13124)
!13132 = !DILocation(line: 6616, column: 23, scope: !13124)
!13133 = !DILocation(line: 6616, column: 45, scope: !13124)
!13134 = !DILocation(line: 6616, column: 28, scope: !13124)
!13135 = !DILocation(line: 6617, column: 6, scope: !13124)
!13136 = !DILocation(line: 6617, column: 14, scope: !13124)
!13137 = !DILocation(line: 6617, column: 10, scope: !13124)
!13138 = !DILocation(line: 6617, column: 17, scope: !13124)
!13139 = !DILocation(line: 6617, column: 20, scope: !13124)
!13140 = !DILocation(line: 6617, column: 25, scope: !13124)
!13141 = !DILocation(line: 6617, column: 32, scope: !13124)
!13142 = !DILocation(line: 6617, column: 28, scope: !13124)
!13143 = !DILocation(line: 6617, column: 35, scope: !13124)
!13144 = !DILocation(line: 6617, column: 39, scope: !13124)
!13145 = !DILocation(line: 6618, column: 3, scope: !13124)
!13146 = !DILocation(line: 6618, column: 12, scope: !13124)
!13147 = !DILocation(line: 6618, column: 8, scope: !13124)
!13148 = !DILocation(line: 6618, column: 15, scope: !13124)
!13149 = !DILocation(line: 6615, column: 9, scope: !13119)
!13150 = !DILocalVariable(name: "regno", scope: !13151, file: !3, line: 6620, type: !2396)
!13151 = distinct !DILexicalBlock(scope: !13124, file: !3, line: 6619, column: 7)
!13152 = !DILocation(line: 6620, column: 6, scope: !13151)
!13153 = !DILocation(line: 6620, column: 31, scope: !13151)
!13154 = !DILocation(line: 6620, column: 27, scope: !13151)
!13155 = !DILocation(line: 6620, column: 34, scope: !13151)
!13156 = !DILocation(line: 6620, column: 14, scope: !13151)
!13157 = !DILocation(line: 6622, column: 22, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13151, file: !3, line: 6622, column: 6)
!13159 = !DILocation(line: 6622, column: 6, scope: !13158)
!13160 = !DILocation(line: 6622, column: 29, scope: !13158)
!13161 = !DILocation(line: 6622, column: 6, scope: !13151)
!13162 = !DILocation(line: 6623, column: 29, scope: !13158)
!13163 = !DILocation(line: 6623, column: 40, scope: !13158)
!13164 = !DILocation(line: 6623, column: 36, scope: !13158)
!13165 = !DILocation(line: 6623, column: 43, scope: !13158)
!13166 = !DILocation(line: 6624, column: 12, scope: !13158)
!13167 = !DILocation(line: 6624, column: 8, scope: !13158)
!13168 = !DILocation(line: 6624, column: 15, scope: !13158)
!13169 = !DILocation(line: 6624, column: 32, scope: !13158)
!13170 = !DILocation(line: 6624, column: 28, scope: !13158)
!13171 = !DILocation(line: 6624, column: 35, scope: !13158)
!13172 = !DILocation(line: 6623, column: 4, scope: !13158)
!13173 = !DILocation(line: 6625, column: 6, scope: !13151)
!13174 = !DILocation(line: 6625, column: 2, scope: !13151)
!13175 = !DILocation(line: 6625, column: 9, scope: !13151)
!13176 = !DILocation(line: 6625, column: 17, scope: !13151)
!13177 = !DILocation(line: 6626, column: 21, scope: !13151)
!13178 = !DILocation(line: 6626, column: 2, scope: !13151)
!13179 = !DILocation(line: 6626, column: 24, scope: !13151)
!13180 = !DILocation(line: 6627, column: 7, scope: !13151)
!13181 = !DILocation(line: 6618, column: 27, scope: !13124)
!13182 = !DILocation(line: 6614, column: 31, scope: !13119)
!13183 = !DILocation(line: 6614, column: 3, scope: !13119)
!13184 = distinct !{!13184, !13122, !13185}
!13185 = !DILocation(line: 6627, column: 7, scope: !13116)
!13186 = !DILocation(line: 6630, column: 10, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 6630, column: 3)
!13188 = !DILocation(line: 6630, column: 8, scope: !13187)
!13189 = !DILocation(line: 6630, column: 15, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13187, file: !3, line: 6630, column: 3)
!13191 = !DILocation(line: 6630, column: 19, scope: !13190)
!13192 = !DILocation(line: 6630, column: 17, scope: !13190)
!13193 = !DILocation(line: 6630, column: 3, scope: !13187)
!13194 = !DILocalVariable(name: "r", scope: !13195, file: !3, line: 6632, type: !2396)
!13195 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 6631, column: 5)
!13196 = !DILocation(line: 6632, column: 11, scope: !13195)
!13197 = !DILocation(line: 6632, column: 28, scope: !13195)
!13198 = !DILocation(line: 6632, column: 15, scope: !13195)
!13199 = !DILocation(line: 6634, column: 30, scope: !13195)
!13200 = !DILocation(line: 6634, column: 11, scope: !13195)
!13201 = !DILocation(line: 6634, column: 9, scope: !13195)
!13202 = !DILocation(line: 6639, column: 15, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13195, file: !3, line: 6639, column: 11)
!13204 = !DILocation(line: 6639, column: 11, scope: !13203)
!13205 = !DILocation(line: 6639, column: 18, scope: !13203)
!13206 = !DILocation(line: 6639, column: 26, scope: !13203)
!13207 = !DILocation(line: 6639, column: 31, scope: !13203)
!13208 = !DILocation(line: 6639, column: 34, scope: !13203)
!13209 = !DILocation(line: 6640, column: 4, scope: !13203)
!13210 = !DILocation(line: 6640, column: 11, scope: !13203)
!13211 = !DILocation(line: 6640, column: 7, scope: !13203)
!13212 = !DILocation(line: 6640, column: 14, scope: !13203)
!13213 = !DILocation(line: 6640, column: 22, scope: !13203)
!13214 = !DILocation(line: 6639, column: 11, scope: !13195)
!13215 = !DILocalVariable(name: "nregno", scope: !13216, file: !3, line: 6642, type: !2396)
!13216 = distinct !DILexicalBlock(scope: !13203, file: !3, line: 6641, column: 2)
!13217 = !DILocation(line: 6642, column: 8, scope: !13216)
!13218 = !DILocation(line: 6642, column: 17, scope: !13216)
!13219 = !DILocalVariable(name: "nr", scope: !13216, file: !3, line: 6643, type: !2396)
!13220 = !DILocation(line: 6643, column: 8, scope: !13216)
!13221 = !DILocation(line: 6645, column: 8, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13216, file: !3, line: 6645, column: 8)
!13223 = !DILocation(line: 6645, column: 15, scope: !13222)
!13224 = !DILocation(line: 6645, column: 8, scope: !13216)
!13225 = !DILocation(line: 6646, column: 28, scope: !13222)
!13226 = !DILocation(line: 6646, column: 11, scope: !13222)
!13227 = !DILocation(line: 6646, column: 40, scope: !13222)
!13228 = !DILocation(line: 6646, column: 36, scope: !13222)
!13229 = !DILocation(line: 6646, column: 43, scope: !13222)
!13230 = !DILocation(line: 6646, column: 9, scope: !13222)
!13231 = !DILocation(line: 6646, column: 6, scope: !13222)
!13232 = !DILocation(line: 6648, column: 4, scope: !13216)
!13233 = !DILocation(line: 6648, column: 11, scope: !13216)
!13234 = !DILocation(line: 6648, column: 16, scope: !13216)
!13235 = !DILocation(line: 6649, column: 6, scope: !13216)
!13236 = distinct !{!13236, !13232, !13235}
!13237 = !DILocation(line: 6652, column: 8, scope: !13238)
!13238 = distinct !DILexicalBlock(scope: !13216, file: !3, line: 6652, column: 8)
!13239 = !DILocation(line: 6652, column: 10, scope: !13238)
!13240 = !DILocation(line: 6652, column: 8, scope: !13216)
!13241 = !DILocation(line: 6654, column: 30, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13238, file: !3, line: 6653, column: 6)
!13243 = !DILocation(line: 6654, column: 13, scope: !13242)
!13244 = !DILocation(line: 6654, column: 37, scope: !13242)
!13245 = !DILocation(line: 6654, column: 33, scope: !13242)
!13246 = !DILocation(line: 6654, column: 40, scope: !13242)
!13247 = !DILocation(line: 6654, column: 11, scope: !13242)
!13248 = !DILocation(line: 6655, column: 8, scope: !13242)
!13249 = !DILocation(line: 6655, column: 15, scope: !13242)
!13250 = !DILocation(line: 6655, column: 20, scope: !13242)
!13251 = !DILocation(line: 6656, column: 3, scope: !13242)
!13252 = distinct !{!13252, !13248, !13251}
!13253 = !DILocation(line: 6657, column: 6, scope: !13242)
!13254 = !DILocation(line: 6659, column: 4, scope: !13216)
!13255 = !DILocation(line: 6662, column: 2, scope: !13216)
!13256 = !DILocation(line: 6663, column: 5, scope: !13195)
!13257 = !DILocation(line: 6630, column: 31, scope: !13190)
!13258 = !DILocation(line: 6630, column: 3, scope: !13190)
!13259 = distinct !{!13259, !13193, !13260}
!13260 = !DILocation(line: 6663, column: 5, scope: !13187)
!13261 = !DILocation(line: 6664, column: 1, scope: !11898)
!13262 = distinct !DISubprogram(name: "merge_assigned_reloads", scope: !3, file: !3, line: 6698, type: !5596, scopeLine: 6699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!13263 = !DILocalVariable(name: "insn", arg: 1, scope: !13262, file: !3, line: 6698, type: !2372)
!13264 = !DILocation(line: 6698, column: 29, scope: !13262)
!13265 = !DILocalVariable(name: "i", scope: !13262, file: !3, line: 6700, type: !2396)
!13266 = !DILocation(line: 6700, column: 7, scope: !13262)
!13267 = !DILocalVariable(name: "j", scope: !13262, file: !3, line: 6700, type: !2396)
!13268 = !DILocation(line: 6700, column: 10, scope: !13262)
!13269 = !DILocation(line: 6706, column: 10, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13262, file: !3, line: 6706, column: 3)
!13271 = !DILocation(line: 6706, column: 8, scope: !13270)
!13272 = !DILocation(line: 6706, column: 15, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13270, file: !3, line: 6706, column: 3)
!13274 = !DILocation(line: 6706, column: 19, scope: !13273)
!13275 = !DILocation(line: 6706, column: 17, scope: !13273)
!13276 = !DILocation(line: 6706, column: 3, scope: !13270)
!13277 = !DILocalVariable(name: "conflicting_input", scope: !13278, file: !3, line: 6708, type: !2396)
!13278 = distinct !DILexicalBlock(scope: !13273, file: !3, line: 6707, column: 5)
!13279 = !DILocation(line: 6708, column: 11, scope: !13278)
!13280 = !DILocalVariable(name: "max_input_address_opnum", scope: !13278, file: !3, line: 6709, type: !2396)
!13281 = !DILocation(line: 6709, column: 11, scope: !13278)
!13282 = !DILocalVariable(name: "min_conflicting_input_opnum", scope: !13278, file: !3, line: 6710, type: !2396)
!13283 = !DILocation(line: 6710, column: 11, scope: !13278)
!13284 = !DILocation(line: 6712, column: 15, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13278, file: !3, line: 6712, column: 11)
!13286 = !DILocation(line: 6712, column: 11, scope: !13285)
!13287 = !DILocation(line: 6712, column: 18, scope: !13285)
!13288 = !DILocation(line: 6712, column: 21, scope: !13285)
!13289 = !DILocation(line: 6712, column: 26, scope: !13285)
!13290 = !DILocation(line: 6712, column: 33, scope: !13285)
!13291 = !DILocation(line: 6712, column: 29, scope: !13285)
!13292 = !DILocation(line: 6712, column: 36, scope: !13285)
!13293 = !DILocation(line: 6712, column: 48, scope: !13285)
!13294 = !DILocation(line: 6713, column: 4, scope: !13285)
!13295 = !DILocation(line: 6713, column: 11, scope: !13285)
!13296 = !DILocation(line: 6713, column: 7, scope: !13285)
!13297 = !DILocation(line: 6713, column: 14, scope: !13285)
!13298 = !DILocation(line: 6713, column: 18, scope: !13285)
!13299 = !DILocation(line: 6713, column: 23, scope: !13285)
!13300 = !DILocation(line: 6713, column: 30, scope: !13285)
!13301 = !DILocation(line: 6713, column: 26, scope: !13285)
!13302 = !DILocation(line: 6713, column: 33, scope: !13285)
!13303 = !DILocation(line: 6713, column: 41, scope: !13285)
!13304 = !DILocation(line: 6714, column: 4, scope: !13285)
!13305 = !DILocation(line: 6714, column: 22, scope: !13285)
!13306 = !DILocation(line: 6714, column: 18, scope: !13285)
!13307 = !DILocation(line: 6714, column: 25, scope: !13285)
!13308 = !DILocation(line: 6714, column: 34, scope: !13285)
!13309 = !DILocation(line: 6714, column: 7, scope: !13285)
!13310 = !DILocation(line: 6712, column: 11, scope: !13278)
!13311 = !DILocation(line: 6715, column: 2, scope: !13285)
!13312 = !DILocation(line: 6723, column: 14, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13278, file: !3, line: 6723, column: 7)
!13314 = !DILocation(line: 6723, column: 12, scope: !13313)
!13315 = !DILocation(line: 6723, column: 19, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 6723, column: 7)
!13317 = !DILocation(line: 6723, column: 23, scope: !13316)
!13318 = !DILocation(line: 6723, column: 21, scope: !13316)
!13319 = !DILocation(line: 6723, column: 7, scope: !13313)
!13320 = !DILocation(line: 6725, column: 8, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 6725, column: 8)
!13322 = distinct !DILexicalBlock(scope: !13316, file: !3, line: 6724, column: 2)
!13323 = !DILocation(line: 6725, column: 13, scope: !13321)
!13324 = !DILocation(line: 6725, column: 10, scope: !13321)
!13325 = !DILocation(line: 6725, column: 15, scope: !13321)
!13326 = !DILocation(line: 6725, column: 22, scope: !13321)
!13327 = !DILocation(line: 6725, column: 18, scope: !13321)
!13328 = !DILocation(line: 6725, column: 25, scope: !13321)
!13329 = !DILocation(line: 6725, column: 33, scope: !13321)
!13330 = !DILocation(line: 6726, column: 8, scope: !13321)
!13331 = !DILocation(line: 6726, column: 42, scope: !13321)
!13332 = !DILocation(line: 6726, column: 38, scope: !13321)
!13333 = !DILocation(line: 6726, column: 45, scope: !13321)
!13334 = !DILocation(line: 6727, column: 14, scope: !13321)
!13335 = !DILocation(line: 6727, column: 10, scope: !13321)
!13336 = !DILocation(line: 6727, column: 17, scope: !13321)
!13337 = !DILocation(line: 6726, column: 13, scope: !13321)
!13338 = !DILocation(line: 6725, column: 8, scope: !13322)
!13339 = !DILocation(line: 6728, column: 6, scope: !13321)
!13340 = !DILocation(line: 6730, column: 12, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 6730, column: 8)
!13342 = !DILocation(line: 6730, column: 8, scope: !13341)
!13343 = !DILocation(line: 6730, column: 15, scope: !13341)
!13344 = !DILocation(line: 6730, column: 27, scope: !13341)
!13345 = !DILocation(line: 6731, column: 8, scope: !13341)
!13346 = !DILocation(line: 6731, column: 15, scope: !13341)
!13347 = !DILocation(line: 6731, column: 11, scope: !13341)
!13348 = !DILocation(line: 6731, column: 18, scope: !13341)
!13349 = !DILocation(line: 6731, column: 26, scope: !13341)
!13350 = !DILocation(line: 6731, column: 24, scope: !13341)
!13351 = !DILocation(line: 6730, column: 8, scope: !13322)
!13352 = !DILocation(line: 6732, column: 36, scope: !13341)
!13353 = !DILocation(line: 6732, column: 32, scope: !13341)
!13354 = !DILocation(line: 6732, column: 39, scope: !13341)
!13355 = !DILocation(line: 6732, column: 30, scope: !13341)
!13356 = !DILocation(line: 6732, column: 6, scope: !13341)
!13357 = !DILocation(line: 6739, column: 27, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 6739, column: 8)
!13359 = !DILocation(line: 6739, column: 23, scope: !13358)
!13360 = !DILocation(line: 6739, column: 30, scope: !13358)
!13361 = !DILocation(line: 6739, column: 43, scope: !13358)
!13362 = !DILocation(line: 6739, column: 39, scope: !13358)
!13363 = !DILocation(line: 6739, column: 46, scope: !13358)
!13364 = !DILocation(line: 6739, column: 10, scope: !13358)
!13365 = !DILocation(line: 6740, column: 8, scope: !13358)
!13366 = !DILocation(line: 6740, column: 15, scope: !13358)
!13367 = !DILocation(line: 6740, column: 11, scope: !13358)
!13368 = !DILocation(line: 6740, column: 18, scope: !13358)
!13369 = !DILocation(line: 6740, column: 22, scope: !13358)
!13370 = !DILocation(line: 6740, column: 27, scope: !13358)
!13371 = !DILocation(line: 6740, column: 34, scope: !13358)
!13372 = !DILocation(line: 6740, column: 30, scope: !13358)
!13373 = !DILocation(line: 6740, column: 37, scope: !13358)
!13374 = !DILocation(line: 6740, column: 40, scope: !13358)
!13375 = !DILocation(line: 6741, column: 8, scope: !13358)
!13376 = !DILocation(line: 6741, column: 30, scope: !13358)
!13377 = !DILocation(line: 6741, column: 26, scope: !13358)
!13378 = !DILocation(line: 6741, column: 33, scope: !13358)
!13379 = !DILocation(line: 6741, column: 41, scope: !13358)
!13380 = !DILocation(line: 6741, column: 37, scope: !13358)
!13381 = !DILocation(line: 6741, column: 44, scope: !13358)
!13382 = !DILocation(line: 6741, column: 13, scope: !13358)
!13383 = !DILocation(line: 6739, column: 8, scope: !13322)
!13384 = !DILocation(line: 6743, column: 16, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13386, file: !3, line: 6743, column: 12)
!13386 = distinct !DILexicalBlock(scope: !13358, file: !3, line: 6742, column: 6)
!13387 = !DILocation(line: 6743, column: 12, scope: !13385)
!13388 = !DILocation(line: 6743, column: 19, scope: !13385)
!13389 = !DILocation(line: 6743, column: 31, scope: !13385)
!13390 = !DILocation(line: 6744, column: 5, scope: !13385)
!13391 = !DILocation(line: 6744, column: 14, scope: !13385)
!13392 = !DILocation(line: 6744, column: 10, scope: !13385)
!13393 = !DILocation(line: 6744, column: 17, scope: !13385)
!13394 = !DILocation(line: 6744, column: 29, scope: !13385)
!13395 = !DILocation(line: 6745, column: 10, scope: !13385)
!13396 = !DILocation(line: 6745, column: 17, scope: !13385)
!13397 = !DILocation(line: 6745, column: 13, scope: !13385)
!13398 = !DILocation(line: 6745, column: 20, scope: !13385)
!13399 = !DILocation(line: 6745, column: 32, scope: !13385)
!13400 = !DILocation(line: 6745, column: 28, scope: !13385)
!13401 = !DILocation(line: 6745, column: 35, scope: !13385)
!13402 = !DILocation(line: 6745, column: 26, scope: !13385)
!13403 = !DILocation(line: 6746, column: 9, scope: !13385)
!13404 = !DILocation(line: 6746, column: 16, scope: !13385)
!13405 = !DILocation(line: 6746, column: 12, scope: !13385)
!13406 = !DILocation(line: 6746, column: 19, scope: !13385)
!13407 = !DILocation(line: 6746, column: 31, scope: !13385)
!13408 = !DILocation(line: 6743, column: 12, scope: !13386)
!13409 = !DILocation(line: 6747, column: 3, scope: !13385)
!13410 = !DILocation(line: 6748, column: 26, scope: !13386)
!13411 = !DILocation(line: 6749, column: 12, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13386, file: !3, line: 6749, column: 12)
!13413 = !DILocation(line: 6749, column: 46, scope: !13412)
!13414 = !DILocation(line: 6749, column: 42, scope: !13412)
!13415 = !DILocation(line: 6749, column: 49, scope: !13412)
!13416 = !DILocation(line: 6749, column: 40, scope: !13412)
!13417 = !DILocation(line: 6749, column: 12, scope: !13386)
!13418 = !DILocation(line: 6750, column: 37, scope: !13412)
!13419 = !DILocation(line: 6750, column: 33, scope: !13412)
!13420 = !DILocation(line: 6750, column: 40, scope: !13412)
!13421 = !DILocation(line: 6750, column: 31, scope: !13412)
!13422 = !DILocation(line: 6750, column: 3, scope: !13412)
!13423 = !DILocation(line: 6751, column: 6, scope: !13386)
!13424 = !DILocation(line: 6752, column: 2, scope: !13322)
!13425 = !DILocation(line: 6723, column: 35, scope: !13316)
!13426 = !DILocation(line: 6723, column: 7, scope: !13316)
!13427 = distinct !{!13427, !13319, !13428}
!13428 = !DILocation(line: 6752, column: 2, scope: !13313)
!13429 = !DILocation(line: 6757, column: 11, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13278, file: !3, line: 6757, column: 11)
!13431 = !DILocation(line: 6757, column: 16, scope: !13430)
!13432 = !DILocation(line: 6757, column: 13, scope: !13430)
!13433 = !DILocation(line: 6758, column: 4, scope: !13430)
!13434 = !DILocation(line: 6758, column: 7, scope: !13430)
!13435 = !DILocation(line: 6758, column: 34, scope: !13430)
!13436 = !DILocation(line: 6758, column: 31, scope: !13430)
!13437 = !DILocation(line: 6757, column: 11, scope: !13278)
!13438 = !DILocation(line: 6760, column: 4, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13430, file: !3, line: 6759, column: 2)
!13440 = !DILocation(line: 6762, column: 11, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13439, file: !3, line: 6762, column: 4)
!13442 = !DILocation(line: 6762, column: 9, scope: !13441)
!13443 = !DILocation(line: 6762, column: 16, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13441, file: !3, line: 6762, column: 4)
!13445 = !DILocation(line: 6762, column: 20, scope: !13444)
!13446 = !DILocation(line: 6762, column: 18, scope: !13444)
!13447 = !DILocation(line: 6762, column: 4, scope: !13441)
!13448 = !DILocation(line: 6763, column: 10, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13444, file: !3, line: 6763, column: 10)
!13450 = !DILocation(line: 6763, column: 15, scope: !13449)
!13451 = !DILocation(line: 6763, column: 12, scope: !13449)
!13452 = !DILocation(line: 6763, column: 17, scope: !13449)
!13453 = !DILocation(line: 6763, column: 24, scope: !13449)
!13454 = !DILocation(line: 6763, column: 20, scope: !13449)
!13455 = !DILocation(line: 6763, column: 27, scope: !13449)
!13456 = !DILocation(line: 6763, column: 35, scope: !13449)
!13457 = !DILocation(line: 6764, column: 3, scope: !13449)
!13458 = !DILocation(line: 6764, column: 23, scope: !13449)
!13459 = !DILocation(line: 6764, column: 19, scope: !13449)
!13460 = !DILocation(line: 6764, column: 26, scope: !13449)
!13461 = !DILocation(line: 6764, column: 39, scope: !13449)
!13462 = !DILocation(line: 6764, column: 35, scope: !13449)
!13463 = !DILocation(line: 6764, column: 42, scope: !13449)
!13464 = !DILocation(line: 6764, column: 6, scope: !13449)
!13465 = !DILocation(line: 6765, column: 3, scope: !13449)
!13466 = !DILocation(line: 6765, column: 9, scope: !13449)
!13467 = !DILocation(line: 6766, column: 7, scope: !13449)
!13468 = !DILocation(line: 6766, column: 14, scope: !13449)
!13469 = !DILocation(line: 6766, column: 10, scope: !13449)
!13470 = !DILocation(line: 6766, column: 17, scope: !13449)
!13471 = !DILocation(line: 6766, column: 29, scope: !13449)
!13472 = !DILocation(line: 6767, column: 7, scope: !13449)
!13473 = !DILocation(line: 6767, column: 14, scope: !13449)
!13474 = !DILocation(line: 6767, column: 10, scope: !13449)
!13475 = !DILocation(line: 6767, column: 17, scope: !13449)
!13476 = !DILocation(line: 6767, column: 29, scope: !13449)
!13477 = !DILocation(line: 6763, column: 10, scope: !13444)
!13478 = !DILocation(line: 6769, column: 7, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13449, file: !3, line: 6768, column: 8)
!13480 = !DILocation(line: 6769, column: 3, scope: !13479)
!13481 = !DILocation(line: 6769, column: 10, scope: !13479)
!13482 = !DILocation(line: 6769, column: 22, scope: !13479)
!13483 = !DILocation(line: 6770, column: 7, scope: !13479)
!13484 = !DILocation(line: 6770, column: 3, scope: !13479)
!13485 = !DILocation(line: 6770, column: 10, scope: !13479)
!13486 = !DILocation(line: 6770, column: 13, scope: !13479)
!13487 = !DILocation(line: 6771, column: 22, scope: !13479)
!13488 = !DILocation(line: 6771, column: 3, scope: !13479)
!13489 = !DILocation(line: 6771, column: 25, scope: !13479)
!13490 = !DILocation(line: 6772, column: 26, scope: !13479)
!13491 = !DILocation(line: 6772, column: 29, scope: !13479)
!13492 = !DILocation(line: 6772, column: 3, scope: !13479)
!13493 = !DILocation(line: 6773, column: 8, scope: !13479)
!13494 = !DILocation(line: 6767, column: 56, scope: !13449)
!13495 = !DILocation(line: 6762, column: 32, scope: !13444)
!13496 = !DILocation(line: 6762, column: 4, scope: !13444)
!13497 = distinct !{!13497, !13447, !13498}
!13498 = !DILocation(line: 6773, column: 8, scope: !13441)
!13499 = !DILocation(line: 6793, column: 12, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13439, file: !3, line: 6793, column: 8)
!13501 = !DILocation(line: 6793, column: 8, scope: !13500)
!13502 = !DILocation(line: 6793, column: 15, scope: !13500)
!13503 = !DILocation(line: 6793, column: 27, scope: !13500)
!13504 = !DILocation(line: 6793, column: 8, scope: !13439)
!13505 = !DILocation(line: 6794, column: 13, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13500, file: !3, line: 6794, column: 6)
!13507 = !DILocation(line: 6794, column: 11, scope: !13506)
!13508 = !DILocation(line: 6794, column: 18, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13506, file: !3, line: 6794, column: 6)
!13510 = !DILocation(line: 6794, column: 22, scope: !13509)
!13511 = !DILocation(line: 6794, column: 20, scope: !13509)
!13512 = !DILocation(line: 6794, column: 6, scope: !13506)
!13513 = !DILocation(line: 6795, column: 16, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13509, file: !3, line: 6795, column: 12)
!13515 = !DILocation(line: 6795, column: 12, scope: !13514)
!13516 = !DILocation(line: 6795, column: 19, scope: !13514)
!13517 = !DILocation(line: 6795, column: 22, scope: !13514)
!13518 = !DILocation(line: 6796, column: 5, scope: !13514)
!13519 = !DILocation(line: 6796, column: 12, scope: !13514)
!13520 = !DILocation(line: 6796, column: 8, scope: !13514)
!13521 = !DILocation(line: 6796, column: 15, scope: !13514)
!13522 = !DILocation(line: 6796, column: 27, scope: !13514)
!13523 = !DILocation(line: 6797, column: 5, scope: !13514)
!13524 = !DILocation(line: 6797, column: 12, scope: !13514)
!13525 = !DILocation(line: 6797, column: 8, scope: !13514)
!13526 = !DILocation(line: 6797, column: 15, scope: !13514)
!13527 = !DILocation(line: 6797, column: 27, scope: !13514)
!13528 = !DILocation(line: 6798, column: 5, scope: !13514)
!13529 = !DILocation(line: 6798, column: 12, scope: !13514)
!13530 = !DILocation(line: 6798, column: 8, scope: !13514)
!13531 = !DILocation(line: 6798, column: 15, scope: !13514)
!13532 = !DILocation(line: 6798, column: 27, scope: !13514)
!13533 = !DILocation(line: 6799, column: 5, scope: !13514)
!13534 = !DILocation(line: 6799, column: 12, scope: !13514)
!13535 = !DILocation(line: 6799, column: 8, scope: !13514)
!13536 = !DILocation(line: 6799, column: 15, scope: !13514)
!13537 = !DILocation(line: 6799, column: 27, scope: !13514)
!13538 = !DILocation(line: 6800, column: 5, scope: !13514)
!13539 = !DILocation(line: 6800, column: 11, scope: !13514)
!13540 = !DILocation(line: 6801, column: 9, scope: !13514)
!13541 = !DILocation(line: 6801, column: 16, scope: !13514)
!13542 = !DILocation(line: 6801, column: 12, scope: !13514)
!13543 = !DILocation(line: 6801, column: 19, scope: !13514)
!13544 = !DILocation(line: 6801, column: 31, scope: !13514)
!13545 = !DILocation(line: 6802, column: 9, scope: !13514)
!13546 = !DILocation(line: 6802, column: 16, scope: !13514)
!13547 = !DILocation(line: 6802, column: 12, scope: !13514)
!13548 = !DILocation(line: 6802, column: 19, scope: !13514)
!13549 = !DILocation(line: 6802, column: 31, scope: !13514)
!13550 = !DILocation(line: 6803, column: 5, scope: !13514)
!13551 = !DILocation(line: 6803, column: 48, scope: !13514)
!13552 = !DILocation(line: 6803, column: 44, scope: !13514)
!13553 = !DILocation(line: 6803, column: 51, scope: !13514)
!13554 = !DILocation(line: 6804, column: 13, scope: !13514)
!13555 = !DILocation(line: 6804, column: 9, scope: !13514)
!13556 = !DILocation(line: 6804, column: 16, scope: !13514)
!13557 = !DILocation(line: 6803, column: 8, scope: !13514)
!13558 = !DILocation(line: 6795, column: 12, scope: !13509)
!13559 = !DILocalVariable(name: "k", scope: !13560, file: !3, line: 6806, type: !2396)
!13560 = distinct !DILexicalBlock(scope: !13514, file: !3, line: 6805, column: 3)
!13561 = !DILocation(line: 6806, column: 9, scope: !13560)
!13562 = !DILocation(line: 6809, column: 15, scope: !13560)
!13563 = !DILocation(line: 6809, column: 11, scope: !13560)
!13564 = !DILocation(line: 6809, column: 18, scope: !13560)
!13565 = !DILocation(line: 6809, column: 30, scope: !13560)
!13566 = !DILocation(line: 6810, column: 4, scope: !13560)
!13567 = !DILocation(line: 6810, column: 11, scope: !13560)
!13568 = !DILocation(line: 6810, column: 7, scope: !13560)
!13569 = !DILocation(line: 6810, column: 14, scope: !13560)
!13570 = !DILocation(line: 6810, column: 26, scope: !13560)
!13571 = !DILocation(line: 6809, column: 10, scope: !13560)
!13572 = !DILocation(line: 6808, column: 9, scope: !13560)
!13573 = !DILocation(line: 6808, column: 5, scope: !13560)
!13574 = !DILocation(line: 6808, column: 12, scope: !13560)
!13575 = !DILocation(line: 6809, column: 7, scope: !13560)
!13576 = !DILocation(line: 6817, column: 13, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13560, file: !3, line: 6817, column: 9)
!13578 = !DILocation(line: 6817, column: 9, scope: !13577)
!13579 = !DILocation(line: 6817, column: 16, scope: !13577)
!13580 = !DILocation(line: 6817, column: 9, scope: !13560)
!13581 = !DILocation(line: 6818, column: 14, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 6818, column: 7)
!13583 = !DILocation(line: 6818, column: 12, scope: !13582)
!13584 = !DILocation(line: 6818, column: 19, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 6818, column: 7)
!13586 = !DILocation(line: 6818, column: 23, scope: !13585)
!13587 = !DILocation(line: 6818, column: 21, scope: !13585)
!13588 = !DILocation(line: 6818, column: 7, scope: !13582)
!13589 = !DILocation(line: 6819, column: 9, scope: !13585)
!13590 = !DILocation(line: 6818, column: 27, scope: !13585)
!13591 = !DILocation(line: 6818, column: 7, scope: !13585)
!13592 = distinct !{!13592, !13588, !13593}
!13593 = !DILocation(line: 6819, column: 9, scope: !13582)
!13594 = !DILocation(line: 6825, column: 3, scope: !13560)
!13595 = !DILocation(line: 6804, column: 18, scope: !13514)
!13596 = !DILocation(line: 6794, column: 34, scope: !13509)
!13597 = !DILocation(line: 6794, column: 6, scope: !13509)
!13598 = distinct !{!13598, !13512, !13599}
!13599 = !DILocation(line: 6825, column: 3, scope: !13506)
!13600 = !DILocation(line: 6826, column: 2, scope: !13439)
!13601 = !DILocation(line: 6827, column: 5, scope: !13278)
!13602 = !DILocation(line: 6706, column: 31, scope: !13273)
!13603 = !DILocation(line: 6706, column: 3, scope: !13273)
!13604 = distinct !{!13604, !13276, !13605}
!13605 = !DILocation(line: 6827, column: 5, scope: !13270)
!13606 = !DILocation(line: 6828, column: 1, scope: !13262)
!13607 = distinct !DISubprogram(name: "emit_reload_insns", scope: !3, file: !3, line: 7783, type: !9881, scopeLine: 7784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!13608 = !DILocalVariable(name: "chain", arg: 1, scope: !13607, file: !3, line: 7783, type: !2365)
!13609 = !DILocation(line: 7783, column: 39, scope: !13607)
!13610 = !DILocalVariable(name: "insn", scope: !13607, file: !3, line: 7785, type: !2372)
!13611 = !DILocation(line: 7785, column: 7, scope: !13607)
!13612 = !DILocation(line: 7785, column: 14, scope: !13607)
!13613 = !DILocation(line: 7785, column: 21, scope: !13607)
!13614 = !DILocalVariable(name: "j", scope: !13607, file: !3, line: 7787, type: !2396)
!13615 = !DILocation(line: 7787, column: 7, scope: !13607)
!13616 = !DILocation(line: 7789, column: 3, scope: !13607)
!13617 = !DILocation(line: 7791, column: 10, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 7791, column: 3)
!13619 = !DILocation(line: 7791, column: 8, scope: !13618)
!13620 = !DILocation(line: 7791, column: 15, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13618, file: !3, line: 7791, column: 3)
!13622 = !DILocation(line: 7791, column: 19, scope: !13621)
!13623 = !DILocation(line: 7791, column: 17, scope: !13621)
!13624 = !DILocation(line: 7791, column: 3, scope: !13618)
!13625 = !DILocation(line: 7796, column: 35, scope: !13621)
!13626 = !DILocation(line: 7796, column: 9, scope: !13621)
!13627 = !DILocation(line: 7796, column: 38, scope: !13621)
!13628 = !DILocation(line: 7795, column: 38, scope: !13621)
!13629 = !DILocation(line: 7795, column: 9, scope: !13621)
!13630 = !DILocation(line: 7796, column: 7, scope: !13621)
!13631 = !DILocation(line: 7794, column: 62, scope: !13621)
!13632 = !DILocation(line: 7794, column: 34, scope: !13621)
!13633 = !DILocation(line: 7795, column: 7, scope: !13621)
!13634 = !DILocation(line: 7794, column: 29, scope: !13621)
!13635 = !DILocation(line: 7794, column: 9, scope: !13621)
!13636 = !DILocation(line: 7794, column: 32, scope: !13621)
!13637 = !DILocation(line: 7793, column: 38, scope: !13621)
!13638 = !DILocation(line: 7793, column: 9, scope: !13621)
!13639 = !DILocation(line: 7794, column: 7, scope: !13621)
!13640 = !DILocation(line: 7792, column: 56, scope: !13621)
!13641 = !DILocation(line: 7792, column: 29, scope: !13621)
!13642 = !DILocation(line: 7793, column: 7, scope: !13621)
!13643 = !DILocation(line: 7792, column: 24, scope: !13621)
!13644 = !DILocation(line: 7792, column: 5, scope: !13621)
!13645 = !DILocation(line: 7792, column: 27, scope: !13621)
!13646 = !DILocation(line: 7791, column: 39, scope: !13621)
!13647 = !DILocation(line: 7791, column: 3, scope: !13621)
!13648 = distinct !{!13648, !13624, !13649}
!13649 = !DILocation(line: 7796, column: 40, scope: !13618)
!13650 = !DILocation(line: 7797, column: 36, scope: !13607)
!13651 = !DILocation(line: 7798, column: 28, scope: !13607)
!13652 = !DILocation(line: 7799, column: 24, scope: !13607)
!13653 = !DILocation(line: 7800, column: 30, scope: !13607)
!13654 = !DILocation(line: 7803, column: 7, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 7803, column: 7)
!13656 = !DILocation(line: 7803, column: 7, scope: !13607)
!13657 = !DILocation(line: 7805, column: 16, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13655, file: !3, line: 7804, column: 5)
!13659 = !DILocation(line: 7805, column: 56, scope: !13658)
!13660 = !DILocation(line: 7805, column: 7, scope: !13658)
!13661 = !DILocation(line: 7806, column: 31, scope: !13658)
!13662 = !DILocation(line: 7806, column: 7, scope: !13658)
!13663 = !DILocation(line: 7807, column: 5, scope: !13658)
!13664 = !DILocation(line: 7814, column: 10, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 7814, column: 3)
!13666 = !DILocation(line: 7814, column: 8, scope: !13665)
!13667 = !DILocation(line: 7814, column: 15, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13665, file: !3, line: 7814, column: 3)
!13669 = !DILocation(line: 7814, column: 19, scope: !13668)
!13670 = !DILocation(line: 7814, column: 17, scope: !13668)
!13671 = !DILocation(line: 7814, column: 3, scope: !13665)
!13672 = !DILocation(line: 7816, column: 15, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13674, file: !3, line: 7816, column: 11)
!13674 = distinct !DILexicalBlock(scope: !13668, file: !3, line: 7815, column: 5)
!13675 = !DILocation(line: 7816, column: 11, scope: !13673)
!13676 = !DILocation(line: 7816, column: 18, scope: !13673)
!13677 = !DILocation(line: 7816, column: 26, scope: !13673)
!13678 = !DILocation(line: 7816, column: 29, scope: !13673)
!13679 = !DILocation(line: 7816, column: 11, scope: !13674)
!13680 = !DILocalVariable(name: "i", scope: !13681, file: !3, line: 7818, type: !7)
!13681 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 7817, column: 2)
!13682 = !DILocation(line: 7818, column: 17, scope: !13681)
!13683 = !DILocation(line: 7820, column: 13, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13681, file: !3, line: 7820, column: 4)
!13685 = !DILocation(line: 7820, column: 11, scope: !13684)
!13686 = !DILocation(line: 7820, column: 9, scope: !13684)
!13687 = !DILocation(line: 7820, column: 37, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13684, file: !3, line: 7820, column: 4)
!13689 = !DILocation(line: 7820, column: 41, scope: !13688)
!13690 = !DILocation(line: 7820, column: 39, scope: !13688)
!13691 = !DILocation(line: 7820, column: 4, scope: !13684)
!13692 = !DILocation(line: 7821, column: 26, scope: !13688)
!13693 = !DILocation(line: 7821, column: 6, scope: !13688)
!13694 = !DILocation(line: 7821, column: 29, scope: !13688)
!13695 = !DILocation(line: 7820, column: 70, scope: !13688)
!13696 = !DILocation(line: 7820, column: 4, scope: !13688)
!13697 = distinct !{!13697, !13691, !13698}
!13698 = !DILocation(line: 7821, column: 31, scope: !13684)
!13699 = !DILocation(line: 7822, column: 2, scope: !13681)
!13700 = !DILocation(line: 7824, column: 24, scope: !13674)
!13701 = !DILocation(line: 7824, column: 37, scope: !13674)
!13702 = !DILocation(line: 7824, column: 35, scope: !13674)
!13703 = !DILocation(line: 7824, column: 40, scope: !13674)
!13704 = !DILocation(line: 7824, column: 7, scope: !13674)
!13705 = !DILocation(line: 7825, column: 25, scope: !13674)
!13706 = !DILocation(line: 7825, column: 38, scope: !13674)
!13707 = !DILocation(line: 7825, column: 36, scope: !13674)
!13708 = !DILocation(line: 7825, column: 41, scope: !13674)
!13709 = !DILocation(line: 7825, column: 7, scope: !13674)
!13710 = !DILocation(line: 7826, column: 5, scope: !13674)
!13711 = !DILocation(line: 7814, column: 31, scope: !13668)
!13712 = !DILocation(line: 7814, column: 3, scope: !13668)
!13713 = distinct !{!13713, !13671, !13714}
!13714 = !DILocation(line: 7826, column: 5, scope: !13665)
!13715 = !DILocation(line: 7852, column: 21, scope: !13607)
!13716 = !DILocation(line: 7852, column: 55, scope: !13607)
!13717 = !DILocation(line: 7852, column: 3, scope: !13607)
!13718 = !DILocation(line: 7853, column: 21, scope: !13607)
!13719 = !DILocation(line: 7853, column: 47, scope: !13607)
!13720 = !DILocation(line: 7853, column: 3, scope: !13607)
!13721 = !DILocation(line: 7855, column: 10, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 7855, column: 3)
!13723 = !DILocation(line: 7855, column: 8, scope: !13722)
!13724 = !DILocation(line: 7855, column: 15, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13722, file: !3, line: 7855, column: 3)
!13726 = !DILocation(line: 7855, column: 19, scope: !13725)
!13727 = !DILocation(line: 7855, column: 17, scope: !13725)
!13728 = !DILocation(line: 7855, column: 3, scope: !13722)
!13729 = !DILocation(line: 7857, column: 54, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13725, file: !3, line: 7856, column: 5)
!13731 = !DILocation(line: 7857, column: 25, scope: !13730)
!13732 = !DILocation(line: 7857, column: 58, scope: !13730)
!13733 = !DILocation(line: 7857, column: 7, scope: !13730)
!13734 = !DILocation(line: 7858, column: 52, scope: !13730)
!13735 = !DILocation(line: 7858, column: 25, scope: !13730)
!13736 = !DILocation(line: 7858, column: 56, scope: !13730)
!13737 = !DILocation(line: 7858, column: 7, scope: !13730)
!13738 = !DILocation(line: 7859, column: 44, scope: !13730)
!13739 = !DILocation(line: 7859, column: 25, scope: !13730)
!13740 = !DILocation(line: 7859, column: 48, scope: !13730)
!13741 = !DILocation(line: 7859, column: 7, scope: !13730)
!13742 = !DILocation(line: 7860, column: 5, scope: !13730)
!13743 = !DILocation(line: 7855, column: 39, scope: !13725)
!13744 = !DILocation(line: 7855, column: 3, scope: !13725)
!13745 = distinct !{!13745, !13728, !13746}
!13746 = !DILocation(line: 7860, column: 5, scope: !13722)
!13747 = !DILocation(line: 7862, column: 21, scope: !13607)
!13748 = !DILocation(line: 7862, column: 49, scope: !13607)
!13749 = !DILocation(line: 7862, column: 3, scope: !13607)
!13750 = !DILocation(line: 7863, column: 21, scope: !13607)
!13751 = !DILocation(line: 7863, column: 43, scope: !13607)
!13752 = !DILocation(line: 7863, column: 3, scope: !13607)
!13753 = !DILocation(line: 7865, column: 10, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 7865, column: 3)
!13755 = !DILocation(line: 7865, column: 8, scope: !13754)
!13756 = !DILocation(line: 7865, column: 15, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 7865, column: 3)
!13758 = !DILocation(line: 7865, column: 19, scope: !13757)
!13759 = !DILocation(line: 7865, column: 17, scope: !13757)
!13760 = !DILocation(line: 7865, column: 3, scope: !13754)
!13761 = !DILocalVariable(name: "x", scope: !13762, file: !3, line: 7867, type: !2372)
!13762 = distinct !DILexicalBlock(scope: !13757, file: !3, line: 7866, column: 5)
!13763 = !DILocation(line: 7867, column: 11, scope: !13762)
!13764 = !DILocation(line: 7867, column: 61, scope: !13762)
!13765 = !DILocation(line: 7867, column: 32, scope: !13762)
!13766 = !DILocation(line: 7867, column: 65, scope: !13762)
!13767 = !DILocation(line: 7867, column: 15, scope: !13762)
!13768 = !DILocation(line: 7868, column: 56, scope: !13762)
!13769 = !DILocation(line: 7868, column: 28, scope: !13762)
!13770 = !DILocation(line: 7868, column: 60, scope: !13762)
!13771 = !DILocation(line: 7868, column: 11, scope: !13762)
!13772 = !DILocation(line: 7868, column: 9, scope: !13762)
!13773 = !DILocation(line: 7869, column: 48, scope: !13762)
!13774 = !DILocation(line: 7869, column: 28, scope: !13762)
!13775 = !DILocation(line: 7869, column: 52, scope: !13762)
!13776 = !DILocation(line: 7869, column: 11, scope: !13762)
!13777 = !DILocation(line: 7869, column: 9, scope: !13762)
!13778 = !DILocation(line: 7870, column: 50, scope: !13762)
!13779 = !DILocation(line: 7870, column: 24, scope: !13762)
!13780 = !DILocation(line: 7870, column: 54, scope: !13762)
!13781 = !DILocation(line: 7870, column: 7, scope: !13762)
!13782 = !DILocation(line: 7871, column: 5, scope: !13762)
!13783 = !DILocation(line: 7865, column: 39, scope: !13757)
!13784 = !DILocation(line: 7865, column: 3, scope: !13757)
!13785 = distinct !{!13785, !13760, !13786}
!13786 = !DILocation(line: 7871, column: 5, scope: !13754)
!13787 = !DILocation(line: 7880, column: 10, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 7880, column: 3)
!13789 = !DILocation(line: 7880, column: 8, scope: !13788)
!13790 = !DILocation(line: 7880, column: 15, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13788, file: !3, line: 7880, column: 3)
!13792 = !DILocation(line: 7880, column: 19, scope: !13791)
!13793 = !DILocation(line: 7880, column: 17, scope: !13791)
!13794 = !DILocation(line: 7880, column: 3, scope: !13788)
!13795 = !DILocalVariable(name: "r", scope: !13796, file: !3, line: 7882, type: !2396)
!13796 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 7881, column: 5)
!13797 = !DILocation(line: 7882, column: 11, scope: !13796)
!13798 = !DILocation(line: 7882, column: 28, scope: !13796)
!13799 = !DILocation(line: 7882, column: 15, scope: !13796)
!13800 = !DILocalVariable(name: "i", scope: !13796, file: !3, line: 7883, type: !2396)
!13801 = !DILocation(line: 7883, column: 11, scope: !13796)
!13802 = !DILocation(line: 7883, column: 34, scope: !13796)
!13803 = !DILocation(line: 7883, column: 15, scope: !13796)
!13804 = !DILocation(line: 7889, column: 15, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13796, file: !3, line: 7889, column: 11)
!13806 = !DILocation(line: 7889, column: 11, scope: !13805)
!13807 = !DILocation(line: 7889, column: 18, scope: !13805)
!13808 = !DILocation(line: 7889, column: 25, scope: !13805)
!13809 = !DILocation(line: 7890, column: 4, scope: !13805)
!13810 = !DILocation(line: 7890, column: 27, scope: !13805)
!13811 = !DILocation(line: 7890, column: 10, scope: !13805)
!13812 = !DILocation(line: 7890, column: 30, scope: !13805)
!13813 = !DILocation(line: 7890, column: 52, scope: !13805)
!13814 = !DILocation(line: 7890, column: 33, scope: !13805)
!13815 = !DILocation(line: 7889, column: 11, scope: !13796)
!13816 = !DILocalVariable(name: "reg", scope: !13817, file: !3, line: 7892, type: !2372)
!13817 = distinct !DILexicalBlock(scope: !13805, file: !3, line: 7891, column: 2)
!13818 = !DILocation(line: 7892, column: 8, scope: !13817)
!13819 = !DILocation(line: 7892, column: 18, scope: !13817)
!13820 = !DILocation(line: 7892, column: 14, scope: !13817)
!13821 = !DILocation(line: 7892, column: 21, scope: !13817)
!13822 = !DILocation(line: 7894, column: 8, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13817, file: !3, line: 7894, column: 8)
!13824 = !DILocation(line: 7894, column: 23, scope: !13823)
!13825 = !DILocation(line: 7894, column: 8, scope: !13817)
!13826 = !DILocation(line: 7895, column: 12, scope: !13823)
!13827 = !DILocation(line: 7895, column: 10, scope: !13823)
!13828 = !DILocation(line: 7895, column: 6, scope: !13823)
!13829 = !DILocation(line: 7897, column: 8, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13817, file: !3, line: 7897, column: 8)
!13831 = !DILocation(line: 7898, column: 8, scope: !13830)
!13832 = !DILocation(line: 7898, column: 11, scope: !13830)
!13833 = !DILocation(line: 7898, column: 23, scope: !13830)
!13834 = !DILocation(line: 7899, column: 8, scope: !13830)
!13835 = !DILocation(line: 7899, column: 12, scope: !13830)
!13836 = !DILocation(line: 7897, column: 8, scope: !13817)
!13837 = !DILocalVariable(name: "nregno", scope: !13838, file: !3, line: 7901, type: !2396)
!13838 = distinct !DILexicalBlock(scope: !13830, file: !3, line: 7900, column: 6)
!13839 = !DILocation(line: 7901, column: 12, scope: !13838)
!13840 = !DILocation(line: 7901, column: 21, scope: !13838)
!13841 = !DILocation(line: 7903, column: 12, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13838, file: !3, line: 7903, column: 12)
!13843 = !DILocation(line: 7903, column: 32, scope: !13842)
!13844 = !DILocation(line: 7903, column: 12, scope: !13838)
!13845 = !DILocalVariable(name: "last_regno", scope: !13846, file: !3, line: 7905, type: !2396)
!13846 = distinct !DILexicalBlock(scope: !13842, file: !3, line: 7904, column: 3)
!13847 = !DILocation(line: 7905, column: 9, scope: !13846)
!13848 = !DILocation(line: 7905, column: 22, scope: !13846)
!13849 = !DILocation(line: 7907, column: 31, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13846, file: !3, line: 7907, column: 9)
!13851 = !DILocation(line: 7907, column: 9, scope: !13850)
!13852 = !DILocation(line: 7907, column: 46, scope: !13850)
!13853 = !DILocation(line: 7907, column: 43, scope: !13850)
!13854 = !DILocation(line: 7907, column: 9, scope: !13846)
!13855 = !DILocation(line: 7908, column: 23, scope: !13850)
!13856 = !DILocation(line: 7908, column: 7, scope: !13850)
!13857 = !DILocation(line: 7908, column: 35, scope: !13850)
!13858 = !DILocation(line: 7909, column: 3, scope: !13846)
!13859 = !DILocation(line: 7910, column: 6, scope: !13838)
!13860 = !DILocation(line: 7911, column: 2, scope: !13817)
!13861 = !DILocation(line: 7917, column: 11, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13796, file: !3, line: 7917, column: 11)
!13863 = !DILocation(line: 7917, column: 13, scope: !13862)
!13864 = !DILocation(line: 7917, column: 18, scope: !13862)
!13865 = !DILocation(line: 7917, column: 25, scope: !13862)
!13866 = !DILocation(line: 7917, column: 21, scope: !13862)
!13867 = !DILocation(line: 7917, column: 28, scope: !13862)
!13868 = !DILocation(line: 7917, column: 36, scope: !13862)
!13869 = !DILocation(line: 7917, column: 11, scope: !13796)
!13870 = !DILocalVariable(name: "nr", scope: !13871, file: !3, line: 7919, type: !2396)
!13871 = distinct !DILexicalBlock(scope: !13862, file: !3, line: 7918, column: 2)
!13872 = !DILocation(line: 7919, column: 8, scope: !13871)
!13873 = !DILocation(line: 7919, column: 30, scope: !13871)
!13874 = !DILocation(line: 7919, column: 13, scope: !13871)
!13875 = !DILocation(line: 7919, column: 33, scope: !13871)
!13876 = !DILocalVariable(name: "k", scope: !13871, file: !3, line: 7920, type: !2396)
!13877 = !DILocation(line: 7920, column: 8, scope: !13871)
!13878 = !DILocation(line: 7924, column: 11, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 7924, column: 4)
!13880 = !DILocation(line: 7924, column: 9, scope: !13879)
!13881 = !DILocation(line: 7924, column: 16, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13879, file: !3, line: 7924, column: 4)
!13883 = !DILocation(line: 7924, column: 20, scope: !13882)
!13884 = !DILocation(line: 7924, column: 18, scope: !13882)
!13885 = !DILocation(line: 7924, column: 4, scope: !13879)
!13886 = !DILocation(line: 7925, column: 36, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13882, file: !3, line: 7925, column: 10)
!13888 = !DILocation(line: 7925, column: 40, scope: !13887)
!13889 = !DILocation(line: 7925, column: 38, scope: !13887)
!13890 = !DILocation(line: 7925, column: 47, scope: !13887)
!13891 = !DILocation(line: 7925, column: 43, scope: !13887)
!13892 = !DILocation(line: 7925, column: 50, scope: !13887)
!13893 = !DILocation(line: 7926, column: 12, scope: !13887)
!13894 = !DILocation(line: 7926, column: 8, scope: !13887)
!13895 = !DILocation(line: 7926, column: 15, scope: !13887)
!13896 = !DILocation(line: 7925, column: 10, scope: !13887)
!13897 = !DILocation(line: 7925, column: 10, scope: !13882)
!13898 = !DILocation(line: 7927, column: 8, scope: !13887)
!13899 = !DILocation(line: 7926, column: 26, scope: !13887)
!13900 = !DILocation(line: 7924, column: 25, scope: !13882)
!13901 = !DILocation(line: 7924, column: 4, scope: !13882)
!13902 = distinct !{!13902, !13885, !13903}
!13903 = !DILocation(line: 7927, column: 8, scope: !13879)
!13904 = !DILocation(line: 7930, column: 12, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 7930, column: 8)
!13906 = !DILocation(line: 7930, column: 8, scope: !13905)
!13907 = !DILocation(line: 7930, column: 15, scope: !13905)
!13908 = !DILocation(line: 7930, column: 19, scope: !13905)
!13909 = !DILocation(line: 7931, column: 8, scope: !13905)
!13910 = !DILocation(line: 7931, column: 12, scope: !13905)
!13911 = !DILocation(line: 7935, column: 5, scope: !13905)
!13912 = !DILocation(line: 7935, column: 8, scope: !13905)
!13913 = !DILocation(line: 7930, column: 8, scope: !13871)
!13914 = !DILocalVariable(name: "reg", scope: !13915, file: !3, line: 7937, type: !2372)
!13915 = distinct !DILexicalBlock(scope: !13905, file: !3, line: 7936, column: 6)
!13916 = !DILocation(line: 7937, column: 12, scope: !13915)
!13917 = !DILocalVariable(name: "mode", scope: !13915, file: !3, line: 7938, type: !5)
!13918 = !DILocation(line: 7938, column: 26, scope: !13915)
!13919 = !DILocalVariable(name: "regno", scope: !13915, file: !3, line: 7939, type: !2396)
!13920 = !DILocation(line: 7939, column: 12, scope: !13915)
!13921 = !DILocalVariable(name: "nregs", scope: !13915, file: !3, line: 7939, type: !2396)
!13922 = !DILocation(line: 7939, column: 19, scope: !13915)
!13923 = !DILocation(line: 7941, column: 40, scope: !13915)
!13924 = !DILocation(line: 7941, column: 14, scope: !13915)
!13925 = !DILocation(line: 7941, column: 12, scope: !13915)
!13926 = !DILocation(line: 7942, column: 15, scope: !13915)
!13927 = !DILocation(line: 7942, column: 13, scope: !13915)
!13928 = !DILocation(line: 7943, column: 16, scope: !13915)
!13929 = !DILocation(line: 7943, column: 14, scope: !13915)
!13930 = !DILocation(line: 7944, column: 33, scope: !13915)
!13931 = !DILocation(line: 7944, column: 16, scope: !13915)
!13932 = !DILocation(line: 7944, column: 40, scope: !13915)
!13933 = !DILocation(line: 7944, column: 14, scope: !13915)
!13934 = !DILocation(line: 7945, column: 37, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13915, file: !3, line: 7945, column: 12)
!13936 = !DILocation(line: 7945, column: 44, scope: !13935)
!13937 = !DILocation(line: 7945, column: 55, scope: !13935)
!13938 = !DILocation(line: 7945, column: 51, scope: !13935)
!13939 = !DILocation(line: 7945, column: 58, scope: !13935)
!13940 = !DILocation(line: 7946, column: 13, scope: !13935)
!13941 = !DILocation(line: 7946, column: 9, scope: !13935)
!13942 = !DILocation(line: 7946, column: 16, scope: !13935)
!13943 = !DILocation(line: 7945, column: 12, scope: !13935)
!13944 = !DILocation(line: 7945, column: 12, scope: !13915)
!13945 = !DILocalVariable(name: "out", scope: !13946, file: !3, line: 7948, type: !2372)
!13946 = distinct !DILexicalBlock(scope: !13935, file: !3, line: 7947, column: 3)
!13947 = !DILocation(line: 7948, column: 9, scope: !13946)
!13948 = !DILocation(line: 7948, column: 16, scope: !13946)
!13949 = !DILocation(line: 7949, column: 15, scope: !13946)
!13950 = !DILocation(line: 7949, column: 11, scope: !13946)
!13951 = !DILocation(line: 7949, column: 18, scope: !13946)
!13952 = !DILocation(line: 7950, column: 15, scope: !13946)
!13953 = !DILocation(line: 7950, column: 11, scope: !13946)
!13954 = !DILocation(line: 7950, column: 18, scope: !13946)
!13955 = !DILocation(line: 7951, column: 15, scope: !13946)
!13956 = !DILocation(line: 7951, column: 11, scope: !13946)
!13957 = !DILocation(line: 7951, column: 18, scope: !13946)
!13958 = !DILocation(line: 7952, column: 24, scope: !13946)
!13959 = !DILocalVariable(name: "out_regno", scope: !13946, file: !3, line: 7953, type: !2396)
!13960 = !DILocation(line: 7953, column: 9, scope: !13946)
!13961 = !DILocation(line: 7953, column: 21, scope: !13946)
!13962 = !DILocalVariable(name: "out_nregs", scope: !13946, file: !3, line: 7954, type: !2396)
!13963 = !DILocation(line: 7954, column: 9, scope: !13946)
!13964 = !DILocation(line: 7954, column: 23, scope: !13946)
!13965 = !DILocation(line: 7954, column: 22, scope: !13946)
!13966 = !DILocation(line: 7955, column: 27, scope: !13946)
!13967 = !DILocation(line: 7955, column: 10, scope: !13946)
!13968 = !DILocation(line: 7955, column: 38, scope: !13946)
!13969 = !DILocalVariable(name: "piecemeal", scope: !13946, file: !3, line: 7956, type: !2603)
!13970 = !DILocation(line: 7956, column: 10, scope: !13946)
!13971 = !DILocation(line: 7958, column: 50, scope: !13946)
!13972 = !DILocation(line: 7958, column: 30, scope: !13946)
!13973 = !DILocation(line: 7958, column: 21, scope: !13946)
!13974 = !DILocation(line: 7958, column: 5, scope: !13946)
!13975 = !DILocation(line: 7958, column: 28, scope: !13946)
!13976 = !DILocation(line: 7959, column: 34, scope: !13946)
!13977 = !DILocation(line: 7959, column: 25, scope: !13946)
!13978 = !DILocation(line: 7959, column: 5, scope: !13946)
!13979 = !DILocation(line: 7959, column: 32, scope: !13946)
!13980 = !DILocation(line: 7960, column: 38, scope: !13946)
!13981 = !DILocation(line: 7960, column: 5, scope: !13946)
!13982 = !DILocation(line: 7960, column: 25, scope: !13946)
!13983 = !DILocation(line: 7960, column: 36, scope: !13946)
!13984 = !DILocation(line: 7962, column: 18, scope: !13946)
!13985 = !DILocation(line: 7963, column: 11, scope: !13946)
!13986 = !DILocation(line: 7963, column: 14, scope: !13946)
!13987 = !DILocation(line: 7963, column: 23, scope: !13946)
!13988 = !DILocation(line: 7963, column: 20, scope: !13946)
!13989 = !DILocation(line: 7964, column: 11, scope: !13946)
!13990 = !DILocation(line: 7964, column: 35, scope: !13946)
!13991 = !DILocation(line: 7964, column: 46, scope: !13946)
!13992 = !DILocation(line: 7964, column: 53, scope: !13946)
!13993 = !DILocation(line: 7964, column: 14, scope: !13946)
!13994 = !DILocation(line: 0, scope: !13946)
!13995 = !DILocation(line: 7962, column: 17, scope: !13946)
!13996 = !DILocation(line: 7962, column: 15, scope: !13946)
!13997 = !DILocation(line: 7972, column: 9, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13946, file: !3, line: 7972, column: 9)
!13999 = !DILocation(line: 7972, column: 9, scope: !13946)
!14000 = !DILocation(line: 7973, column: 14, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13998, file: !3, line: 7973, column: 7)
!14002 = !DILocation(line: 7973, column: 12, scope: !14001)
!14003 = !DILocation(line: 7973, column: 19, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !14001, file: !3, line: 7973, column: 7)
!14005 = !DILocation(line: 7973, column: 23, scope: !14004)
!14006 = !DILocation(line: 7973, column: 21, scope: !14004)
!14007 = !DILocation(line: 7973, column: 7, scope: !14001)
!14008 = !DILocation(line: 7975, column: 7, scope: !14004)
!14009 = !DILocation(line: 7975, column: 19, scope: !14004)
!14010 = !DILocation(line: 7975, column: 33, scope: !14004)
!14011 = !DILocation(line: 7975, column: 41, scope: !14004)
!14012 = !DILocation(line: 7975, column: 39, scope: !14004)
!14013 = !DILocation(line: 7974, column: 9, scope: !14004)
!14014 = !DILocation(line: 7974, column: 29, scope: !14004)
!14015 = !DILocation(line: 7974, column: 41, scope: !14004)
!14016 = !DILocation(line: 7974, column: 39, scope: !14004)
!14017 = !DILocation(line: 7975, column: 4, scope: !14004)
!14018 = !DILocation(line: 7973, column: 35, scope: !14004)
!14019 = !DILocation(line: 7973, column: 7, scope: !14004)
!14020 = distinct !{!14020, !14007, !14021}
!14021 = !DILocation(line: 7975, column: 47, scope: !14001)
!14022 = !DILocation(line: 7978, column: 12, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !13946, file: !3, line: 7978, column: 5)
!14024 = !DILocation(line: 7978, column: 10, scope: !14023)
!14025 = !DILocation(line: 7978, column: 17, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14023, file: !3, line: 7978, column: 5)
!14027 = !DILocation(line: 7978, column: 21, scope: !14026)
!14028 = !DILocation(line: 7978, column: 19, scope: !14026)
!14029 = !DILocation(line: 7978, column: 5, scope: !14023)
!14030 = !DILocation(line: 7980, column: 9, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14026, file: !3, line: 7979, column: 7)
!14032 = !DILocation(line: 7982, column: 8, scope: !14031)
!14033 = !DILocation(line: 7982, column: 40, scope: !14031)
!14034 = !DILocation(line: 7982, column: 44, scope: !14031)
!14035 = !DILocation(line: 7982, column: 7, scope: !14031)
!14036 = !DILocation(line: 7983, column: 9, scope: !14031)
!14037 = !DILocation(line: 7984, column: 9, scope: !14031)
!14038 = !DILocation(line: 7984, column: 21, scope: !14031)
!14039 = !DILocation(line: 7984, column: 19, scope: !14031)
!14040 = !DILocation(line: 7981, column: 31, scope: !14031)
!14041 = !DILocation(line: 7981, column: 39, scope: !14031)
!14042 = !DILocation(line: 7981, column: 37, scope: !14031)
!14043 = !DILocation(line: 7981, column: 9, scope: !14031)
!14044 = !DILocation(line: 7982, column: 4, scope: !14031)
!14045 = !DILocation(line: 7985, column: 40, scope: !14031)
!14046 = !DILocation(line: 7985, column: 27, scope: !14031)
!14047 = !DILocation(line: 7985, column: 35, scope: !14031)
!14048 = !DILocation(line: 7985, column: 33, scope: !14031)
!14049 = !DILocation(line: 7985, column: 9, scope: !14031)
!14050 = !DILocation(line: 7985, column: 38, scope: !14031)
!14051 = !DILocation(line: 7986, column: 9, scope: !14031)
!14052 = !DILocation(line: 7991, column: 4, scope: !14053)
!14053 = distinct !DILexicalBlock(scope: !14031, file: !3, line: 7987, column: 13)
!14054 = !DILocation(line: 7993, column: 7, scope: !14031)
!14055 = !DILocation(line: 7978, column: 29, scope: !14026)
!14056 = !DILocation(line: 7978, column: 5, scope: !14026)
!14057 = distinct !{!14057, !14029, !14058}
!14058 = !DILocation(line: 7993, column: 7, scope: !14023)
!14059 = !DILocation(line: 7994, column: 3, scope: !13946)
!14060 = !DILocation(line: 7995, column: 6, scope: !13915)
!14061 = !DILocation(line: 7999, column: 17, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !13905, file: !3, line: 7999, column: 13)
!14063 = !DILocation(line: 7999, column: 13, scope: !14062)
!14064 = !DILocation(line: 7999, column: 20, scope: !14062)
!14065 = !DILocation(line: 7999, column: 28, scope: !14062)
!14066 = !DILocation(line: 8000, column: 6, scope: !14062)
!14067 = !DILocation(line: 8000, column: 13, scope: !14062)
!14068 = !DILocation(line: 8000, column: 9, scope: !14062)
!14069 = !DILocation(line: 8000, column: 16, scope: !14062)
!14070 = !DILocation(line: 8000, column: 19, scope: !14062)
!14071 = !DILocation(line: 8001, column: 6, scope: !14062)
!14072 = !DILocation(line: 8001, column: 11, scope: !14062)
!14073 = !DILocation(line: 8002, column: 4, scope: !14062)
!14074 = !DILocation(line: 8002, column: 8, scope: !14062)
!14075 = !DILocation(line: 8003, column: 4, scope: !14062)
!14076 = !DILocation(line: 8003, column: 8, scope: !14062)
!14077 = !DILocation(line: 8005, column: 10, scope: !14062)
!14078 = !DILocation(line: 8005, column: 14, scope: !14062)
!14079 = !DILocation(line: 8006, column: 7, scope: !14062)
!14080 = !DILocation(line: 8006, column: 11, scope: !14062)
!14081 = !DILocation(line: 8008, column: 6, scope: !14062)
!14082 = !DILocation(line: 8008, column: 46, scope: !14062)
!14083 = !DILocation(line: 8008, column: 21, scope: !14062)
!14084 = !DILocation(line: 8008, column: 50, scope: !14062)
!14085 = !DILocation(line: 8008, column: 10, scope: !14062)
!14086 = !DILocation(line: 7999, column: 13, scope: !13905)
!14087 = !DILocalVariable(name: "reg", scope: !14088, file: !3, line: 8010, type: !2372)
!14088 = distinct !DILexicalBlock(scope: !14062, file: !3, line: 8009, column: 6)
!14089 = !DILocation(line: 8010, column: 12, scope: !14088)
!14090 = !DILocalVariable(name: "mode", scope: !14088, file: !3, line: 8011, type: !5)
!14091 = !DILocation(line: 8011, column: 26, scope: !14088)
!14092 = !DILocalVariable(name: "regno", scope: !14088, file: !3, line: 8012, type: !2396)
!14093 = !DILocation(line: 8012, column: 12, scope: !14088)
!14094 = !DILocalVariable(name: "nregs", scope: !14088, file: !3, line: 8012, type: !2396)
!14095 = !DILocation(line: 8012, column: 19, scope: !14088)
!14096 = !DILocation(line: 8014, column: 39, scope: !14088)
!14097 = !DILocation(line: 8014, column: 14, scope: !14088)
!14098 = !DILocation(line: 8014, column: 12, scope: !14088)
!14099 = !DILocation(line: 8015, column: 15, scope: !14088)
!14100 = !DILocation(line: 8015, column: 13, scope: !14088)
!14101 = !DILocation(line: 8016, column: 16, scope: !14088)
!14102 = !DILocation(line: 8016, column: 14, scope: !14088)
!14103 = !DILocation(line: 8017, column: 33, scope: !14088)
!14104 = !DILocation(line: 8017, column: 16, scope: !14088)
!14105 = !DILocation(line: 8017, column: 40, scope: !14088)
!14106 = !DILocation(line: 8017, column: 14, scope: !14088)
!14107 = !DILocation(line: 8018, column: 37, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14088, file: !3, line: 8018, column: 12)
!14109 = !DILocation(line: 8018, column: 44, scope: !14108)
!14110 = !DILocation(line: 8018, column: 55, scope: !14108)
!14111 = !DILocation(line: 8018, column: 51, scope: !14108)
!14112 = !DILocation(line: 8018, column: 58, scope: !14108)
!14113 = !DILocation(line: 8019, column: 13, scope: !14108)
!14114 = !DILocation(line: 8019, column: 9, scope: !14108)
!14115 = !DILocation(line: 8019, column: 16, scope: !14108)
!14116 = !DILocation(line: 8018, column: 12, scope: !14108)
!14117 = !DILocation(line: 8018, column: 12, scope: !14088)
!14118 = !DILocalVariable(name: "in_regno", scope: !14119, file: !3, line: 8021, type: !2396)
!14119 = distinct !DILexicalBlock(scope: !14108, file: !3, line: 8020, column: 3)
!14120 = !DILocation(line: 8021, column: 9, scope: !14119)
!14121 = !DILocalVariable(name: "in_nregs", scope: !14119, file: !3, line: 8022, type: !2396)
!14122 = !DILocation(line: 8022, column: 9, scope: !14119)
!14123 = !DILocalVariable(name: "in", scope: !14119, file: !3, line: 8023, type: !2372)
!14124 = !DILocation(line: 8023, column: 9, scope: !14119)
!14125 = !DILocalVariable(name: "piecemeal", scope: !14119, file: !3, line: 8024, type: !2603)
!14126 = !DILocation(line: 8024, column: 10, scope: !14119)
!14127 = !DILocation(line: 8026, column: 9, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14119, file: !3, line: 8026, column: 9)
!14129 = !DILocation(line: 8027, column: 9, scope: !14128)
!14130 = !DILocation(line: 8027, column: 12, scope: !14128)
!14131 = !DILocation(line: 8027, column: 30, scope: !14128)
!14132 = !DILocation(line: 8026, column: 9, scope: !14119)
!14133 = !DILocation(line: 8028, column: 16, scope: !14128)
!14134 = !DILocation(line: 8028, column: 12, scope: !14128)
!14135 = !DILocation(line: 8028, column: 19, scope: !14128)
!14136 = !DILocation(line: 8028, column: 10, scope: !14128)
!14137 = !DILocation(line: 8028, column: 7, scope: !14128)
!14138 = !DILocation(line: 8029, column: 14, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14128, file: !3, line: 8029, column: 14)
!14140 = !DILocation(line: 8029, column: 14, scope: !14128)
!14141 = !DILocation(line: 8030, column: 16, scope: !14139)
!14142 = !DILocation(line: 8030, column: 12, scope: !14139)
!14143 = !DILocation(line: 8030, column: 19, scope: !14139)
!14144 = !DILocation(line: 8030, column: 10, scope: !14139)
!14145 = !DILocation(line: 8030, column: 7, scope: !14139)
!14146 = !DILocation(line: 8032, column: 12, scope: !14139)
!14147 = !DILocation(line: 8032, column: 10, scope: !14139)
!14148 = !DILocation(line: 8033, column: 16, scope: !14119)
!14149 = !DILocation(line: 8033, column: 14, scope: !14119)
!14150 = !DILocation(line: 8035, column: 18, scope: !14119)
!14151 = !DILocation(line: 8035, column: 17, scope: !14119)
!14152 = !DILocation(line: 8036, column: 29, scope: !14119)
!14153 = !DILocation(line: 8036, column: 12, scope: !14119)
!14154 = !DILocation(line: 8036, column: 39, scope: !14119)
!14155 = !DILocation(line: 8035, column: 14, scope: !14119)
!14156 = !DILocation(line: 8038, column: 37, scope: !14119)
!14157 = !DILocation(line: 8038, column: 5, scope: !14119)
!14158 = !DILocation(line: 8038, column: 25, scope: !14119)
!14159 = !DILocation(line: 8038, column: 35, scope: !14119)
!14160 = !DILocation(line: 8040, column: 18, scope: !14119)
!14161 = !DILocation(line: 8041, column: 11, scope: !14119)
!14162 = !DILocation(line: 8041, column: 14, scope: !14119)
!14163 = !DILocation(line: 8041, column: 23, scope: !14119)
!14164 = !DILocation(line: 8041, column: 20, scope: !14119)
!14165 = !DILocation(line: 8042, column: 11, scope: !14119)
!14166 = !DILocation(line: 8042, column: 35, scope: !14119)
!14167 = !DILocation(line: 8042, column: 42, scope: !14119)
!14168 = !DILocation(line: 8042, column: 52, scope: !14119)
!14169 = !DILocation(line: 8042, column: 14, scope: !14119)
!14170 = !DILocation(line: 0, scope: !14119)
!14171 = !DILocation(line: 8040, column: 17, scope: !14119)
!14172 = !DILocation(line: 8040, column: 15, scope: !14119)
!14173 = !DILocation(line: 8044, column: 9, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14119, file: !3, line: 8044, column: 9)
!14175 = !DILocation(line: 8044, column: 9, scope: !14119)
!14176 = !DILocation(line: 8045, column: 14, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14174, file: !3, line: 8045, column: 7)
!14178 = !DILocation(line: 8045, column: 12, scope: !14177)
!14179 = !DILocation(line: 8045, column: 19, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14177, file: !3, line: 8045, column: 7)
!14181 = !DILocation(line: 8045, column: 23, scope: !14180)
!14182 = !DILocation(line: 8045, column: 21, scope: !14180)
!14183 = !DILocation(line: 8045, column: 7, scope: !14177)
!14184 = !DILocation(line: 8047, column: 7, scope: !14180)
!14185 = !DILocation(line: 8047, column: 19, scope: !14180)
!14186 = !DILocation(line: 8047, column: 33, scope: !14180)
!14187 = !DILocation(line: 8047, column: 41, scope: !14180)
!14188 = !DILocation(line: 8047, column: 39, scope: !14180)
!14189 = !DILocation(line: 8046, column: 9, scope: !14180)
!14190 = !DILocation(line: 8046, column: 29, scope: !14180)
!14191 = !DILocation(line: 8046, column: 40, scope: !14180)
!14192 = !DILocation(line: 8046, column: 38, scope: !14180)
!14193 = !DILocation(line: 8047, column: 4, scope: !14180)
!14194 = !DILocation(line: 8045, column: 34, scope: !14180)
!14195 = !DILocation(line: 8045, column: 7, scope: !14180)
!14196 = distinct !{!14196, !14183, !14197}
!14197 = !DILocation(line: 8047, column: 47, scope: !14177)
!14198 = !DILocation(line: 8053, column: 28, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14119, file: !3, line: 8053, column: 9)
!14200 = !DILocation(line: 8053, column: 11, scope: !14199)
!14201 = !DILocation(line: 8054, column: 9, scope: !14199)
!14202 = !DILocation(line: 8054, column: 17, scope: !14199)
!14203 = !DILocation(line: 8054, column: 13, scope: !14199)
!14204 = !DILocation(line: 8054, column: 20, scope: !14199)
!14205 = !DILocation(line: 8054, column: 24, scope: !14199)
!14206 = !DILocation(line: 8054, column: 33, scope: !14199)
!14207 = !DILocation(line: 8054, column: 29, scope: !14199)
!14208 = !DILocation(line: 8054, column: 36, scope: !14199)
!14209 = !DILocation(line: 8053, column: 9, scope: !14119)
!14210 = !DILocation(line: 8055, column: 23, scope: !14199)
!14211 = !DILocation(line: 8055, column: 7, scope: !14199)
!14212 = !DILocation(line: 8055, column: 30, scope: !14199)
!14213 = !DILocation(line: 8057, column: 12, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14119, file: !3, line: 8057, column: 5)
!14215 = !DILocation(line: 8057, column: 10, scope: !14214)
!14216 = !DILocation(line: 8057, column: 17, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14214, file: !3, line: 8057, column: 5)
!14218 = !DILocation(line: 8057, column: 21, scope: !14217)
!14219 = !DILocation(line: 8057, column: 19, scope: !14217)
!14220 = !DILocation(line: 8057, column: 5, scope: !14214)
!14221 = !DILocation(line: 8059, column: 9, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 8058, column: 7)
!14223 = !DILocation(line: 8061, column: 8, scope: !14222)
!14224 = !DILocation(line: 8061, column: 39, scope: !14222)
!14225 = !DILocation(line: 8061, column: 43, scope: !14222)
!14226 = !DILocation(line: 8061, column: 7, scope: !14222)
!14227 = !DILocation(line: 8062, column: 9, scope: !14222)
!14228 = !DILocation(line: 8063, column: 9, scope: !14222)
!14229 = !DILocation(line: 8063, column: 20, scope: !14222)
!14230 = !DILocation(line: 8063, column: 18, scope: !14222)
!14231 = !DILocation(line: 8060, column: 31, scope: !14222)
!14232 = !DILocation(line: 8060, column: 39, scope: !14222)
!14233 = !DILocation(line: 8060, column: 37, scope: !14222)
!14234 = !DILocation(line: 8060, column: 9, scope: !14222)
!14235 = !DILocation(line: 8061, column: 4, scope: !14222)
!14236 = !DILocation(line: 8064, column: 40, scope: !14222)
!14237 = !DILocation(line: 8064, column: 27, scope: !14222)
!14238 = !DILocation(line: 8064, column: 35, scope: !14222)
!14239 = !DILocation(line: 8064, column: 33, scope: !14222)
!14240 = !DILocation(line: 8064, column: 9, scope: !14222)
!14241 = !DILocation(line: 8064, column: 38, scope: !14222)
!14242 = !DILocation(line: 8065, column: 9, scope: !14222)
!14243 = !DILocation(line: 8070, column: 4, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14222, file: !3, line: 8066, column: 13)
!14245 = !DILocation(line: 8072, column: 7, scope: !14222)
!14246 = !DILocation(line: 8057, column: 29, scope: !14217)
!14247 = !DILocation(line: 8057, column: 5, scope: !14217)
!14248 = distinct !{!14248, !14220, !14249}
!14249 = !DILocation(line: 8072, column: 7, scope: !14214)
!14250 = !DILocation(line: 8073, column: 3, scope: !14119)
!14251 = !DILocation(line: 8074, column: 6, scope: !14088)
!14252 = !DILocation(line: 8075, column: 2, scope: !13871)
!14253 = !DILocation(line: 8087, column: 11, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !13796, file: !3, line: 8087, column: 11)
!14255 = !DILocation(line: 8087, column: 13, scope: !14254)
!14256 = !DILocation(line: 8088, column: 4, scope: !14254)
!14257 = !DILocation(line: 8088, column: 13, scope: !14254)
!14258 = !DILocation(line: 8088, column: 9, scope: !14254)
!14259 = !DILocation(line: 8088, column: 16, scope: !14254)
!14260 = !DILocation(line: 8088, column: 20, scope: !14254)
!14261 = !DILocation(line: 8089, column: 9, scope: !14254)
!14262 = !DILocation(line: 8089, column: 13, scope: !14254)
!14263 = !DILocation(line: 8090, column: 6, scope: !14254)
!14264 = !DILocation(line: 8090, column: 10, scope: !14254)
!14265 = !DILocation(line: 8091, column: 10, scope: !14254)
!14266 = !DILocation(line: 8091, column: 13, scope: !14254)
!14267 = !DILocation(line: 8092, column: 8, scope: !14254)
!14268 = !DILocation(line: 8092, column: 16, scope: !14254)
!14269 = !DILocation(line: 8092, column: 12, scope: !14254)
!14270 = !DILocation(line: 8092, column: 19, scope: !14254)
!14271 = !DILocation(line: 8092, column: 23, scope: !14254)
!14272 = !DILocation(line: 8092, column: 28, scope: !14254)
!14273 = !DILocation(line: 8092, column: 35, scope: !14254)
!14274 = !DILocation(line: 8092, column: 31, scope: !14254)
!14275 = !DILocation(line: 8092, column: 38, scope: !14254)
!14276 = !DILocation(line: 8093, column: 5, scope: !14254)
!14277 = !DILocation(line: 8093, column: 8, scope: !14254)
!14278 = !DILocation(line: 8087, column: 11, scope: !13796)
!14279 = !DILocalVariable(name: "out", scope: !14280, file: !3, line: 8095, type: !2372)
!14280 = distinct !DILexicalBlock(scope: !14254, file: !3, line: 8094, column: 2)
!14281 = !DILocation(line: 8095, column: 8, scope: !14280)
!14282 = !DILocation(line: 8095, column: 20, scope: !14280)
!14283 = !DILocation(line: 8095, column: 16, scope: !14280)
!14284 = !DILocation(line: 8095, column: 23, scope: !14280)
!14285 = !DILocation(line: 8095, column: 27, scope: !14280)
!14286 = !DILocation(line: 8095, column: 30, scope: !14280)
!14287 = !DILocation(line: 8095, column: 15, scope: !14280)
!14288 = !DILocation(line: 8096, column: 14, scope: !14280)
!14289 = !DILocation(line: 8096, column: 10, scope: !14280)
!14290 = !DILocation(line: 8096, column: 17, scope: !14280)
!14291 = !DILocation(line: 8096, column: 27, scope: !14280)
!14292 = !DILocation(line: 8096, column: 23, scope: !14280)
!14293 = !DILocation(line: 8096, column: 30, scope: !14280)
!14294 = !DILocalVariable(name: "out_regno", scope: !14280, file: !3, line: 8097, type: !2396)
!14295 = !DILocation(line: 8097, column: 8, scope: !14280)
!14296 = !DILocation(line: 8097, column: 20, scope: !14280)
!14297 = !DILocalVariable(name: "mode", scope: !14280, file: !3, line: 8098, type: !5)
!14298 = !DILocation(line: 8098, column: 22, scope: !14280)
!14299 = !DILocation(line: 8098, column: 29, scope: !14280)
!14300 = !DILocation(line: 8113, column: 12, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14280, file: !3, line: 8113, column: 8)
!14302 = !DILocation(line: 8113, column: 8, scope: !14301)
!14303 = !DILocation(line: 8113, column: 15, scope: !14301)
!14304 = !DILocation(line: 8113, column: 23, scope: !14301)
!14305 = !DILocation(line: 8113, column: 30, scope: !14301)
!14306 = !DILocation(line: 8113, column: 26, scope: !14301)
!14307 = !DILocation(line: 8113, column: 33, scope: !14301)
!14308 = !DILocation(line: 8113, column: 44, scope: !14301)
!14309 = !DILocation(line: 8113, column: 41, scope: !14301)
!14310 = !DILocation(line: 8113, column: 8, scope: !14280)
!14311 = !DILocation(line: 8114, column: 32, scope: !14301)
!14312 = !DILocation(line: 8114, column: 28, scope: !14301)
!14313 = !DILocation(line: 8114, column: 35, scope: !14301)
!14314 = !DILocation(line: 8114, column: 6, scope: !14301)
!14315 = !DILocation(line: 8116, column: 9, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14280, file: !3, line: 8116, column: 8)
!14317 = !DILocation(line: 8116, column: 8, scope: !14280)
!14318 = !DILocalVariable(name: "src_reg", scope: !14319, file: !3, line: 8118, type: !2372)
!14319 = distinct !DILexicalBlock(scope: !14316, file: !3, line: 8117, column: 6)
!14320 = !DILocation(line: 8118, column: 12, scope: !14319)
!14321 = !DILocalVariable(name: "store_insn", scope: !14319, file: !3, line: 8118, type: !2372)
!14322 = !DILocation(line: 8118, column: 21, scope: !14319)
!14323 = !DILocation(line: 8120, column: 8, scope: !14319)
!14324 = !DILocation(line: 8120, column: 28, scope: !14319)
!14325 = !DILocation(line: 8120, column: 39, scope: !14319)
!14326 = !DILocation(line: 8125, column: 44, scope: !14319)
!14327 = !DILocation(line: 8125, column: 18, scope: !14319)
!14328 = !DILocation(line: 8125, column: 16, scope: !14319)
!14329 = !DILocation(line: 8129, column: 14, scope: !14330)
!14330 = distinct !DILexicalBlock(scope: !14319, file: !3, line: 8129, column: 12)
!14331 = !DILocation(line: 8129, column: 12, scope: !14319)
!14332 = !DILocalVariable(name: "set", scope: !14333, file: !3, line: 8131, type: !2372)
!14333 = distinct !DILexicalBlock(scope: !14330, file: !3, line: 8130, column: 3)
!14334 = !DILocation(line: 8131, column: 9, scope: !14333)
!14335 = !DILocation(line: 8131, column: 15, scope: !14333)
!14336 = !DILocation(line: 8132, column: 9, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14333, file: !3, line: 8132, column: 9)
!14338 = !DILocation(line: 8132, column: 13, scope: !14337)
!14339 = !DILocation(line: 8132, column: 16, scope: !14337)
!14340 = !DILocation(line: 8132, column: 38, scope: !14337)
!14341 = !DILocation(line: 8132, column: 34, scope: !14337)
!14342 = !DILocation(line: 8132, column: 41, scope: !14337)
!14343 = !DILocation(line: 8132, column: 31, scope: !14337)
!14344 = !DILocation(line: 8132, column: 9, scope: !14333)
!14345 = !DILocalVariable(name: "k", scope: !14346, file: !3, line: 8134, type: !2396)
!14346 = distinct !DILexicalBlock(scope: !14337, file: !3, line: 8133, column: 7)
!14347 = !DILocation(line: 8134, column: 13, scope: !14346)
!14348 = !DILocation(line: 8136, column: 19, scope: !14346)
!14349 = !DILocation(line: 8136, column: 17, scope: !14346)
!14350 = !DILocation(line: 8137, column: 22, scope: !14346)
!14351 = !DILocation(line: 8137, column: 20, scope: !14346)
!14352 = !DILocation(line: 8138, column: 16, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14346, file: !3, line: 8138, column: 9)
!14354 = !DILocation(line: 8138, column: 14, scope: !14353)
!14355 = !DILocation(line: 8138, column: 21, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14353, file: !3, line: 8138, column: 9)
!14357 = !DILocation(line: 8138, column: 25, scope: !14356)
!14358 = !DILocation(line: 8138, column: 23, scope: !14356)
!14359 = !DILocation(line: 8138, column: 9, scope: !14353)
!14360 = !DILocation(line: 8140, column: 14, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14362, file: !3, line: 8140, column: 10)
!14362 = distinct !DILexicalBlock(scope: !14356, file: !3, line: 8139, column: 4)
!14363 = !DILocation(line: 8140, column: 10, scope: !14361)
!14364 = !DILocation(line: 8140, column: 17, scope: !14361)
!14365 = !DILocation(line: 8140, column: 23, scope: !14361)
!14366 = !DILocation(line: 8140, column: 20, scope: !14361)
!14367 = !DILocation(line: 8140, column: 10, scope: !14362)
!14368 = !DILocation(line: 8142, column: 45, scope: !14369)
!14369 = distinct !DILexicalBlock(scope: !14361, file: !3, line: 8141, column: 8)
!14370 = !DILocation(line: 8142, column: 20, scope: !14369)
!14371 = !DILocation(line: 8142, column: 18, scope: !14369)
!14372 = !DILocation(line: 8143, column: 10, scope: !14369)
!14373 = !DILocation(line: 8145, column: 4, scope: !14362)
!14374 = !DILocation(line: 8138, column: 37, scope: !14356)
!14375 = !DILocation(line: 8138, column: 9, scope: !14356)
!14376 = distinct !{!14376, !14359, !14377}
!14377 = !DILocation(line: 8145, column: 4, scope: !14353)
!14378 = !DILocation(line: 8146, column: 7, scope: !14346)
!14379 = !DILocation(line: 8147, column: 3, scope: !14333)
!14380 = !DILocation(line: 8149, column: 36, scope: !14330)
!14381 = !DILocation(line: 8149, column: 16, scope: !14330)
!14382 = !DILocation(line: 8149, column: 14, scope: !14330)
!14383 = !DILocation(line: 8150, column: 12, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14319, file: !3, line: 8150, column: 12)
!14385 = !DILocation(line: 8150, column: 20, scope: !14384)
!14386 = !DILocation(line: 8150, column: 23, scope: !14384)
!14387 = !DILocation(line: 8151, column: 5, scope: !14384)
!14388 = !DILocation(line: 8151, column: 8, scope: !14384)
!14389 = !DILocation(line: 8151, column: 24, scope: !14384)
!14390 = !DILocation(line: 8150, column: 12, scope: !14319)
!14391 = !DILocalVariable(name: "src_regno", scope: !14392, file: !3, line: 8153, type: !2396)
!14392 = distinct !DILexicalBlock(scope: !14384, file: !3, line: 8152, column: 3)
!14393 = !DILocation(line: 8153, column: 9, scope: !14392)
!14394 = !DILocalVariable(name: "src_nregs", scope: !14392, file: !3, line: 8153, type: !2396)
!14395 = !DILocation(line: 8153, column: 20, scope: !14392)
!14396 = !DILocalVariable(name: "k", scope: !14392, file: !3, line: 8153, type: !2396)
!14397 = !DILocation(line: 8153, column: 31, scope: !14392)
!14398 = !DILocalVariable(name: "note", scope: !14392, file: !3, line: 8154, type: !2372)
!14399 = !DILocation(line: 8154, column: 9, scope: !14392)
!14400 = !DILocation(line: 8156, column: 5, scope: !14392)
!14401 = !DILocation(line: 8157, column: 17, scope: !14392)
!14402 = !DILocation(line: 8157, column: 15, scope: !14392)
!14403 = !DILocation(line: 8158, column: 34, scope: !14392)
!14404 = !DILocation(line: 8158, column: 17, scope: !14392)
!14405 = !DILocation(line: 8158, column: 45, scope: !14392)
!14406 = !DILocation(line: 8158, column: 15, scope: !14392)
!14407 = !DILocation(line: 8163, column: 29, scope: !14392)
!14408 = !DILocation(line: 8163, column: 45, scope: !14392)
!14409 = !DILocation(line: 8163, column: 12, scope: !14392)
!14410 = !DILocation(line: 8163, column: 10, scope: !14392)
!14411 = !DILocation(line: 8164, column: 11, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14392, file: !3, line: 8164, column: 9)
!14413 = !DILocation(line: 8164, column: 16, scope: !14412)
!14414 = !DILocation(line: 8164, column: 19, scope: !14412)
!14415 = !DILocation(line: 8164, column: 9, scope: !14392)
!14416 = !DILocation(line: 8165, column: 31, scope: !14412)
!14417 = !DILocation(line: 8165, column: 53, scope: !14412)
!14418 = !DILocation(line: 8165, column: 14, scope: !14412)
!14419 = !DILocation(line: 8165, column: 12, scope: !14412)
!14420 = !DILocation(line: 8165, column: 7, scope: !14412)
!14421 = !DILocation(line: 8166, column: 12, scope: !14422)
!14422 = distinct !DILexicalBlock(scope: !14392, file: !3, line: 8166, column: 5)
!14423 = !DILocation(line: 8166, column: 10, scope: !14422)
!14424 = !DILocation(line: 8166, column: 17, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14422, file: !3, line: 8166, column: 5)
!14426 = !DILocation(line: 8166, column: 21, scope: !14425)
!14427 = !DILocation(line: 8166, column: 19, scope: !14425)
!14428 = !DILocation(line: 8166, column: 5, scope: !14422)
!14429 = !DILocation(line: 8168, column: 42, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14425, file: !3, line: 8167, column: 7)
!14431 = !DILocation(line: 8168, column: 25, scope: !14430)
!14432 = !DILocation(line: 8168, column: 37, scope: !14430)
!14433 = !DILocation(line: 8168, column: 35, scope: !14430)
!14434 = !DILocation(line: 8168, column: 9, scope: !14430)
!14435 = !DILocation(line: 8168, column: 40, scope: !14430)
!14436 = !DILocation(line: 8169, column: 46, scope: !14430)
!14437 = !DILocation(line: 8169, column: 29, scope: !14430)
!14438 = !DILocation(line: 8169, column: 41, scope: !14430)
!14439 = !DILocation(line: 8169, column: 39, scope: !14430)
!14440 = !DILocation(line: 8169, column: 9, scope: !14430)
!14441 = !DILocation(line: 8169, column: 44, scope: !14430)
!14442 = !DILocation(line: 8170, column: 48, scope: !14430)
!14443 = !DILocation(line: 8170, column: 31, scope: !14430)
!14444 = !DILocation(line: 8170, column: 43, scope: !14430)
!14445 = !DILocation(line: 8170, column: 41, scope: !14430)
!14446 = !DILocation(line: 8170, column: 9, scope: !14430)
!14447 = !DILocation(line: 8170, column: 46, scope: !14430)
!14448 = !DILocation(line: 8171, column: 44, scope: !14430)
!14449 = !DILocation(line: 8171, column: 27, scope: !14430)
!14450 = !DILocation(line: 8171, column: 39, scope: !14430)
!14451 = !DILocation(line: 8171, column: 37, scope: !14430)
!14452 = !DILocation(line: 8171, column: 9, scope: !14430)
!14453 = !DILocation(line: 8171, column: 42, scope: !14430)
!14454 = !DILocation(line: 8172, column: 9, scope: !14430)
!14455 = !DILocation(line: 8173, column: 9, scope: !14430)
!14456 = !DILocation(line: 8179, column: 4, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 8174, column: 13)
!14458 = !DILocation(line: 8181, column: 9, scope: !14430)
!14459 = !DILocation(line: 8182, column: 13, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 8182, column: 13)
!14461 = !DILocation(line: 8182, column: 13, scope: !14430)
!14462 = !DILocation(line: 8183, column: 4, scope: !14460)
!14463 = !DILocation(line: 8185, column: 4, scope: !14460)
!14464 = !DILocation(line: 8186, column: 7, scope: !14430)
!14465 = !DILocation(line: 8166, column: 33, scope: !14425)
!14466 = !DILocation(line: 8166, column: 5, scope: !14425)
!14467 = distinct !{!14467, !14428, !14468}
!14468 = !DILocation(line: 8186, column: 7, scope: !14422)
!14469 = !DILocation(line: 8187, column: 38, scope: !14392)
!14470 = !DILocation(line: 8187, column: 5, scope: !14392)
!14471 = !DILocation(line: 8187, column: 25, scope: !14392)
!14472 = !DILocation(line: 8187, column: 36, scope: !14392)
!14473 = !DILocation(line: 8191, column: 5, scope: !14392)
!14474 = !DILocation(line: 8193, column: 3, scope: !14392)
!14475 = !DILocation(line: 8194, column: 6, scope: !14319)
!14476 = !DILocalVariable(name: "k", scope: !14477, file: !3, line: 8197, type: !2396)
!14477 = distinct !DILexicalBlock(scope: !14316, file: !3, line: 8196, column: 6)
!14478 = !DILocation(line: 8197, column: 12, scope: !14477)
!14479 = !DILocalVariable(name: "out_nregs", scope: !14477, file: !3, line: 8197, type: !2396)
!14480 = !DILocation(line: 8197, column: 15, scope: !14477)
!14481 = !DILocation(line: 8197, column: 44, scope: !14477)
!14482 = !DILocation(line: 8197, column: 27, scope: !14477)
!14483 = !DILocation(line: 8197, column: 55, scope: !14477)
!14484 = !DILocation(line: 8199, column: 15, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !14477, file: !3, line: 8199, column: 8)
!14486 = !DILocation(line: 8199, column: 13, scope: !14485)
!14487 = !DILocation(line: 8199, column: 20, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !14485, file: !3, line: 8199, column: 8)
!14489 = !DILocation(line: 8199, column: 24, scope: !14488)
!14490 = !DILocation(line: 8199, column: 22, scope: !14488)
!14491 = !DILocation(line: 8199, column: 8, scope: !14485)
!14492 = !DILocation(line: 8200, column: 3, scope: !14488)
!14493 = !DILocation(line: 8200, column: 23, scope: !14488)
!14494 = !DILocation(line: 8200, column: 35, scope: !14488)
!14495 = !DILocation(line: 8200, column: 33, scope: !14488)
!14496 = !DILocation(line: 8200, column: 38, scope: !14488)
!14497 = !DILocation(line: 8199, column: 36, scope: !14488)
!14498 = !DILocation(line: 8199, column: 8, scope: !14488)
!14499 = distinct !{!14499, !14491, !14500}
!14500 = !DILocation(line: 8200, column: 40, scope: !14485)
!14501 = !DILocation(line: 8202, column: 2, scope: !14280)
!14502 = !DILocation(line: 8203, column: 5, scope: !13796)
!14503 = !DILocation(line: 7880, column: 31, scope: !13791)
!14504 = !DILocation(line: 7880, column: 3, scope: !13791)
!14505 = distinct !{!14505, !13794, !14506}
!14506 = !DILocation(line: 8203, column: 5, scope: !13788)
!14507 = !DILocation(line: 8204, column: 3, scope: !13607)
!14508 = !DILocation(line: 8205, column: 1, scope: !13607)
!14509 = distinct !DISubprogram(name: "fixup_eh_region_note", scope: !3, file: !3, line: 4165, type: !14510, scopeLine: 4166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!14510 = !DISubroutineType(types: !14511)
!14511 = !{null, !2372, !2372, !2372}
!14512 = !DILocalVariable(name: "insn", arg: 1, scope: !14509, file: !3, line: 4165, type: !2372)
!14513 = !DILocation(line: 4165, column: 27, scope: !14509)
!14514 = !DILocalVariable(name: "prev", arg: 2, scope: !14509, file: !3, line: 4165, type: !2372)
!14515 = !DILocation(line: 4165, column: 37, scope: !14509)
!14516 = !DILocalVariable(name: "next", arg: 3, scope: !14509, file: !3, line: 4165, type: !2372)
!14517 = !DILocation(line: 4165, column: 47, scope: !14509)
!14518 = !DILocalVariable(name: "note", scope: !14509, file: !3, line: 4167, type: !2372)
!14519 = !DILocation(line: 4167, column: 7, scope: !14509)
!14520 = !DILocation(line: 4167, column: 29, scope: !14509)
!14521 = !DILocation(line: 4167, column: 14, scope: !14509)
!14522 = !DILocation(line: 4168, column: 7, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14509, file: !3, line: 4168, column: 7)
!14524 = !DILocation(line: 4168, column: 12, scope: !14523)
!14525 = !DILocation(line: 4168, column: 7, scope: !14509)
!14526 = !DILocation(line: 4169, column: 5, scope: !14523)
!14527 = !DILocation(line: 4170, column: 28, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !14509, file: !3, line: 4170, column: 7)
!14529 = !DILocation(line: 4170, column: 8, scope: !14528)
!14530 = !DILocation(line: 4170, column: 7, scope: !14509)
!14531 = !DILocation(line: 4171, column: 18, scope: !14528)
!14532 = !DILocation(line: 4171, column: 24, scope: !14528)
!14533 = !DILocation(line: 4171, column: 5, scope: !14528)
!14534 = !DILocation(line: 4172, column: 36, scope: !14509)
!14535 = !DILocation(line: 4172, column: 42, scope: !14509)
!14536 = !DILocation(line: 4172, column: 60, scope: !14509)
!14537 = !DILocation(line: 4172, column: 3, scope: !14509)
!14538 = !DILocation(line: 4173, column: 1, scope: !14509)
!14539 = distinct !DISubprogram(name: "forget_marked_reloads", scope: !3, file: !3, line: 4584, type: !14540, scopeLine: 4585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!14540 = !DISubroutineType(types: !14541)
!14541 = !{null, !3618}
!14542 = !DILocalVariable(name: "regs", arg: 1, scope: !14539, file: !3, line: 4584, type: !3618)
!14543 = !DILocation(line: 4584, column: 31, scope: !14539)
!14544 = !DILocalVariable(name: "reg", scope: !14539, file: !3, line: 4586, type: !7)
!14545 = !DILocation(line: 4586, column: 16, scope: !14539)
!14546 = !DILocalVariable(name: "rsi", scope: !14539, file: !3, line: 4587, type: !3988)
!14547 = !DILocation(line: 4587, column: 20, scope: !14539)
!14548 = !DILocation(line: 4588, column: 3, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14539, file: !3, line: 4588, column: 3)
!14550 = !DILocation(line: 4588, column: 3, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14549, file: !3, line: 4588, column: 3)
!14552 = !DILocation(line: 4590, column: 11, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14554, file: !3, line: 4590, column: 11)
!14554 = distinct !DILexicalBlock(scope: !14551, file: !3, line: 4589, column: 5)
!14555 = !DILocation(line: 4590, column: 15, scope: !14553)
!14556 = !DILocation(line: 4593, column: 4, scope: !14553)
!14557 = !DILocation(line: 4593, column: 8, scope: !14553)
!14558 = !DILocation(line: 4593, column: 18, scope: !14553)
!14559 = !DILocation(line: 4594, column: 8, scope: !14553)
!14560 = !DILocation(line: 4594, column: 13, scope: !14553)
!14561 = !DILocation(line: 4590, column: 11, scope: !14554)
!14562 = !DILocation(line: 4596, column: 6, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14553, file: !3, line: 4595, column: 4)
!14564 = !DILocation(line: 4597, column: 22, scope: !14563)
!14565 = !DILocation(line: 4597, column: 6, scope: !14563)
!14566 = !DILocation(line: 4597, column: 27, scope: !14563)
!14567 = !DILocation(line: 4598, column: 4, scope: !14563)
!14568 = !DILocation(line: 4599, column: 11, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14554, file: !3, line: 4599, column: 11)
!14570 = !DILocation(line: 4599, column: 21, scope: !14569)
!14571 = !DILocation(line: 4600, column: 4, scope: !14569)
!14572 = !DILocation(line: 4600, column: 8, scope: !14569)
!14573 = !DILocation(line: 4599, column: 11, scope: !14554)
!14574 = !DILocation(line: 4601, column: 2, scope: !14569)
!14575 = !DILocation(line: 4601, column: 22, scope: !14569)
!14576 = !DILocation(line: 4601, column: 27, scope: !14569)
!14577 = !DILocation(line: 4602, column: 5, scope: !14554)
!14578 = distinct !{!14578, !14548, !14579}
!14579 = !DILocation(line: 4602, column: 5, scope: !14549)
!14580 = !DILocation(line: 4603, column: 1, scope: !14539)
!14581 = distinct !DISubprogram(name: "choose_reload_regs_init", scope: !3, file: !3, line: 5900, type: !14582, scopeLine: 5901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!14582 = !DISubroutineType(types: !14583)
!14583 = !{null, !2365, !3579}
!14584 = !DILocalVariable(name: "chain", arg: 1, scope: !14581, file: !3, line: 5900, type: !2365)
!14585 = !DILocation(line: 5900, column: 45, scope: !14581)
!14586 = !DILocalVariable(name: "save_reload_reg_rtx", arg: 2, scope: !14581, file: !3, line: 5900, type: !3579)
!14587 = !DILocation(line: 5900, column: 57, scope: !14581)
!14588 = !DILocalVariable(name: "i", scope: !14581, file: !3, line: 5902, type: !2396)
!14589 = !DILocation(line: 5902, column: 7, scope: !14581)
!14590 = !DILocation(line: 5904, column: 10, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14581, file: !3, line: 5904, column: 3)
!14592 = !DILocation(line: 5904, column: 8, scope: !14591)
!14593 = !DILocation(line: 5904, column: 15, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !14591, file: !3, line: 5904, column: 3)
!14595 = !DILocation(line: 5904, column: 19, scope: !14594)
!14596 = !DILocation(line: 5904, column: 17, scope: !14594)
!14597 = !DILocation(line: 5904, column: 3, scope: !14591)
!14598 = !DILocation(line: 5905, column: 22, scope: !14594)
!14599 = !DILocation(line: 5905, column: 42, scope: !14594)
!14600 = !DILocation(line: 5905, column: 9, scope: !14594)
!14601 = !DILocation(line: 5905, column: 5, scope: !14594)
!14602 = !DILocation(line: 5905, column: 12, scope: !14594)
!14603 = !DILocation(line: 5905, column: 20, scope: !14594)
!14604 = !DILocation(line: 5904, column: 31, scope: !14594)
!14605 = !DILocation(line: 5904, column: 3, scope: !14594)
!14606 = distinct !{!14606, !14597, !14607}
!14607 = !DILocation(line: 5905, column: 43, scope: !14591)
!14608 = !DILocation(line: 5907, column: 3, scope: !14581)
!14609 = !DILocation(line: 5908, column: 3, scope: !14581)
!14610 = !DILocation(line: 5909, column: 3, scope: !14581)
!14611 = !DILocation(line: 5911, column: 3, scope: !14581)
!14612 = !DILocation(line: 5912, column: 3, scope: !14581)
!14613 = !DILocation(line: 5913, column: 3, scope: !14581)
!14614 = !DILocation(line: 5914, column: 3, scope: !14581)
!14615 = !DILocation(line: 5915, column: 3, scope: !14581)
!14616 = !DILocation(line: 5916, column: 3, scope: !14581)
!14617 = !DILocation(line: 5918, column: 3, scope: !14581)
!14618 = !DILocalVariable(name: "tmp", scope: !14619, file: !3, line: 5920, type: !3577)
!14619 = distinct !DILexicalBlock(scope: !14581, file: !3, line: 5919, column: 3)
!14620 = !DILocation(line: 5920, column: 18, scope: !14619)
!14621 = !DILocation(line: 5921, column: 5, scope: !14619)
!14622 = !DILocation(line: 5921, column: 5, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14619, file: !3, line: 5921, column: 5)
!14624 = !DILocation(line: 5922, column: 5, scope: !14619)
!14625 = !DILocation(line: 5923, column: 5, scope: !14619)
!14626 = !DILocation(line: 5923, column: 5, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14619, file: !3, line: 5923, column: 5)
!14628 = !DILocation(line: 5924, column: 5, scope: !14619)
!14629 = !DILocation(line: 5925, column: 49, scope: !14619)
!14630 = !DILocation(line: 5925, column: 56, scope: !14619)
!14631 = !DILocation(line: 5925, column: 5, scope: !14619)
!14632 = !DILocation(line: 5926, column: 49, scope: !14619)
!14633 = !DILocation(line: 5926, column: 56, scope: !14619)
!14634 = !DILocation(line: 5926, column: 5, scope: !14619)
!14635 = !DILocation(line: 5929, column: 10, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14581, file: !3, line: 5929, column: 3)
!14637 = !DILocation(line: 5929, column: 8, scope: !14636)
!14638 = !DILocation(line: 5929, column: 15, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14636, file: !3, line: 5929, column: 3)
!14640 = !DILocation(line: 5929, column: 19, scope: !14639)
!14641 = !DILocation(line: 5929, column: 17, scope: !14639)
!14642 = !DILocation(line: 5929, column: 3, scope: !14636)
!14643 = !DILocation(line: 5931, column: 7, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !14639, file: !3, line: 5930, column: 5)
!14645 = !DILocation(line: 5932, column: 7, scope: !14644)
!14646 = !DILocation(line: 5933, column: 7, scope: !14644)
!14647 = !DILocation(line: 5934, column: 7, scope: !14644)
!14648 = !DILocation(line: 5935, column: 7, scope: !14644)
!14649 = !DILocation(line: 5936, column: 7, scope: !14644)
!14650 = !DILocation(line: 5937, column: 5, scope: !14644)
!14651 = !DILocation(line: 5929, column: 39, scope: !14639)
!14652 = !DILocation(line: 5929, column: 3, scope: !14639)
!14653 = distinct !{!14653, !14642, !14654}
!14654 = !DILocation(line: 5937, column: 5, scope: !14636)
!14655 = !DILocation(line: 5939, column: 3, scope: !14581)
!14656 = !DILocation(line: 5941, column: 3, scope: !14581)
!14657 = !DILocation(line: 5943, column: 10, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14581, file: !3, line: 5943, column: 3)
!14659 = !DILocation(line: 5943, column: 8, scope: !14658)
!14660 = !DILocation(line: 5943, column: 15, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14658, file: !3, line: 5943, column: 3)
!14662 = !DILocation(line: 5943, column: 19, scope: !14661)
!14663 = !DILocation(line: 5943, column: 17, scope: !14661)
!14664 = !DILocation(line: 5943, column: 3, scope: !14658)
!14665 = !DILocation(line: 5946, column: 13, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 5946, column: 9)
!14667 = !DILocation(line: 5946, column: 9, scope: !14666)
!14668 = !DILocation(line: 5946, column: 16, scope: !14666)
!14669 = !DILocation(line: 5946, column: 9, scope: !14661)
!14670 = !DILocation(line: 5947, column: 31, scope: !14666)
!14671 = !DILocation(line: 5947, column: 59, scope: !14666)
!14672 = !DILocation(line: 5947, column: 55, scope: !14666)
!14673 = !DILocation(line: 5947, column: 62, scope: !14666)
!14674 = !DILocation(line: 5948, column: 14, scope: !14666)
!14675 = !DILocation(line: 5948, column: 10, scope: !14666)
!14676 = !DILocation(line: 5948, column: 17, scope: !14666)
!14677 = !DILocation(line: 5948, column: 34, scope: !14666)
!14678 = !DILocation(line: 5948, column: 30, scope: !14666)
!14679 = !DILocation(line: 5948, column: 37, scope: !14666)
!14680 = !DILocation(line: 5947, column: 7, scope: !14666)
!14681 = !DILocation(line: 5943, column: 31, scope: !14661)
!14682 = !DILocation(line: 5943, column: 3, scope: !14661)
!14683 = distinct !{!14683, !14664, !14684}
!14684 = !DILocation(line: 5948, column: 41, scope: !14658)
!14685 = !DILocation(line: 5949, column: 1, scope: !14581)
!14686 = distinct !DISubprogram(name: "free_for_value_p", scope: !3, file: !3, line: 5651, type: !14687, scopeLine: 5654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!14687 = !DISubroutineType(types: !14688)
!14688 = !{!2396, !2396, !5, !2396, !2049, !2372, !2372, !2396, !2396}
!14689 = !DILocalVariable(name: "regno", arg: 1, scope: !14686, file: !3, line: 5651, type: !2396)
!14690 = !DILocation(line: 5651, column: 23, scope: !14686)
!14691 = !DILocalVariable(name: "mode", arg: 2, scope: !14686, file: !3, line: 5651, type: !5)
!14692 = !DILocation(line: 5651, column: 48, scope: !14686)
!14693 = !DILocalVariable(name: "opnum", arg: 3, scope: !14686, file: !3, line: 5651, type: !2396)
!14694 = !DILocation(line: 5651, column: 58, scope: !14686)
!14695 = !DILocalVariable(name: "type", arg: 4, scope: !14686, file: !3, line: 5652, type: !2049)
!14696 = !DILocation(line: 5652, column: 22, scope: !14686)
!14697 = !DILocalVariable(name: "value", arg: 5, scope: !14686, file: !3, line: 5652, type: !2372)
!14698 = !DILocation(line: 5652, column: 32, scope: !14686)
!14699 = !DILocalVariable(name: "out", arg: 6, scope: !14686, file: !3, line: 5652, type: !2372)
!14700 = !DILocation(line: 5652, column: 43, scope: !14686)
!14701 = !DILocalVariable(name: "reloadnum", arg: 7, scope: !14686, file: !3, line: 5652, type: !2396)
!14702 = !DILocation(line: 5652, column: 52, scope: !14686)
!14703 = !DILocalVariable(name: "ignore_address_reloads", arg: 8, scope: !14686, file: !3, line: 5653, type: !2396)
!14704 = !DILocation(line: 5653, column: 9, scope: !14686)
!14705 = !DILocalVariable(name: "nregs", scope: !14686, file: !3, line: 5655, type: !2396)
!14706 = !DILocation(line: 5655, column: 7, scope: !14686)
!14707 = !DILocation(line: 5655, column: 32, scope: !14686)
!14708 = !DILocation(line: 5655, column: 15, scope: !14686)
!14709 = !DILocation(line: 5655, column: 39, scope: !14686)
!14710 = !DILocation(line: 5656, column: 3, scope: !14686)
!14711 = !DILocation(line: 5656, column: 15, scope: !14686)
!14712 = !DILocation(line: 5656, column: 18, scope: !14686)
!14713 = !DILocation(line: 5657, column: 40, scope: !14714)
!14714 = distinct !DILexicalBlock(scope: !14686, file: !3, line: 5657, column: 9)
!14715 = !DILocation(line: 5657, column: 47, scope: !14714)
!14716 = !DILocation(line: 5657, column: 55, scope: !14714)
!14717 = !DILocation(line: 5657, column: 53, scope: !14714)
!14718 = !DILocation(line: 5657, column: 62, scope: !14714)
!14719 = !DILocation(line: 5657, column: 69, scope: !14714)
!14720 = !DILocation(line: 5658, column: 12, scope: !14714)
!14721 = !DILocation(line: 5658, column: 19, scope: !14714)
!14722 = !DILocation(line: 5658, column: 24, scope: !14714)
!14723 = !DILocation(line: 5659, column: 12, scope: !14714)
!14724 = !DILocation(line: 5657, column: 11, scope: !14714)
!14725 = !DILocation(line: 5657, column: 9, scope: !14686)
!14726 = !DILocation(line: 5660, column: 7, scope: !14714)
!14727 = distinct !{!14727, !14710, !14728}
!14728 = !DILocation(line: 5660, column: 14, scope: !14686)
!14729 = !DILocation(line: 5661, column: 3, scope: !14686)
!14730 = !DILocation(line: 5662, column: 1, scope: !14686)
!14731 = distinct !DISubprogram(name: "mark_reload_reg_in_use", scope: !3, file: !3, line: 4649, type: !8547, scopeLine: 4651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!14732 = !DILocalVariable(name: "regno", arg: 1, scope: !14731, file: !3, line: 4649, type: !7)
!14733 = !DILocation(line: 4649, column: 38, scope: !14731)
!14734 = !DILocalVariable(name: "opnum", arg: 2, scope: !14731, file: !3, line: 4649, type: !2396)
!14735 = !DILocation(line: 4649, column: 49, scope: !14731)
!14736 = !DILocalVariable(name: "type", arg: 3, scope: !14731, file: !3, line: 4649, type: !2049)
!14737 = !DILocation(line: 4649, column: 73, scope: !14731)
!14738 = !DILocalVariable(name: "mode", arg: 4, scope: !14731, file: !3, line: 4650, type: !5)
!14739 = !DILocation(line: 4650, column: 22, scope: !14731)
!14740 = !DILocalVariable(name: "nregs", scope: !14731, file: !3, line: 4652, type: !7)
!14741 = !DILocation(line: 4652, column: 16, scope: !14731)
!14742 = !DILocation(line: 4652, column: 41, scope: !14731)
!14743 = !DILocation(line: 4652, column: 24, scope: !14731)
!14744 = !DILocation(line: 4652, column: 48, scope: !14731)
!14745 = !DILocalVariable(name: "i", scope: !14731, file: !3, line: 4653, type: !7)
!14746 = !DILocation(line: 4653, column: 16, scope: !14731)
!14747 = !DILocation(line: 4655, column: 12, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14731, file: !3, line: 4655, column: 3)
!14749 = !DILocation(line: 4655, column: 10, scope: !14748)
!14750 = !DILocation(line: 4655, column: 8, scope: !14748)
!14751 = !DILocation(line: 4655, column: 19, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14748, file: !3, line: 4655, column: 3)
!14753 = !DILocation(line: 4655, column: 23, scope: !14752)
!14754 = !DILocation(line: 4655, column: 31, scope: !14752)
!14755 = !DILocation(line: 4655, column: 29, scope: !14752)
!14756 = !DILocation(line: 4655, column: 21, scope: !14752)
!14757 = !DILocation(line: 4655, column: 3, scope: !14748)
!14758 = !DILocation(line: 4657, column: 15, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14752, file: !3, line: 4656, column: 5)
!14760 = !DILocation(line: 4657, column: 7, scope: !14759)
!14761 = !DILocation(line: 4660, column: 4, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14759, file: !3, line: 4658, column: 2)
!14763 = !DILocation(line: 4661, column: 4, scope: !14762)
!14764 = !DILocation(line: 4664, column: 4, scope: !14762)
!14765 = !DILocation(line: 4665, column: 4, scope: !14762)
!14766 = !DILocation(line: 4668, column: 4, scope: !14762)
!14767 = !DILocation(line: 4669, column: 4, scope: !14762)
!14768 = !DILocation(line: 4672, column: 4, scope: !14762)
!14769 = !DILocation(line: 4673, column: 4, scope: !14762)
!14770 = !DILocation(line: 4676, column: 4, scope: !14762)
!14771 = !DILocation(line: 4677, column: 4, scope: !14762)
!14772 = !DILocation(line: 4680, column: 4, scope: !14762)
!14773 = !DILocation(line: 4681, column: 4, scope: !14762)
!14774 = !DILocation(line: 4684, column: 4, scope: !14762)
!14775 = !DILocation(line: 4685, column: 4, scope: !14762)
!14776 = !DILocation(line: 4688, column: 4, scope: !14762)
!14777 = !DILocation(line: 4689, column: 4, scope: !14762)
!14778 = !DILocation(line: 4692, column: 4, scope: !14762)
!14779 = !DILocation(line: 4693, column: 4, scope: !14762)
!14780 = !DILocation(line: 4696, column: 4, scope: !14762)
!14781 = !DILocation(line: 4697, column: 4, scope: !14762)
!14782 = !DILocation(line: 4700, column: 4, scope: !14762)
!14783 = !DILocation(line: 4701, column: 4, scope: !14762)
!14784 = !DILocation(line: 4704, column: 7, scope: !14759)
!14785 = !DILocation(line: 4705, column: 5, scope: !14759)
!14786 = !DILocation(line: 4655, column: 39, scope: !14752)
!14787 = !DILocation(line: 4655, column: 3, scope: !14752)
!14788 = distinct !{!14788, !14757, !14789}
!14789 = !DILocation(line: 4705, column: 5, scope: !14748)
!14790 = !DILocation(line: 4706, column: 1, scope: !14731)
!14791 = distinct !DISubprogram(name: "allocate_reload_reg", scope: !3, file: !3, line: 5778, type: !14792, scopeLine: 5780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!14792 = !DISubroutineType(types: !14793)
!14793 = !{!2396, !2365, !2396, !2396}
!14794 = !DILocalVariable(name: "chain", arg: 1, scope: !14791, file: !3, line: 5778, type: !2365)
!14795 = !DILocation(line: 5778, column: 41, scope: !14791)
!14796 = !DILocalVariable(name: "r", arg: 2, scope: !14791, file: !3, line: 5778, type: !2396)
!14797 = !DILocation(line: 5778, column: 69, scope: !14791)
!14798 = !DILocalVariable(name: "last_reload", arg: 3, scope: !14791, file: !3, line: 5779, type: !2396)
!14799 = !DILocation(line: 5779, column: 12, scope: !14791)
!14800 = !DILocalVariable(name: "i", scope: !14791, file: !3, line: 5781, type: !2396)
!14801 = !DILocation(line: 5781, column: 7, scope: !14791)
!14802 = !DILocalVariable(name: "pass", scope: !14791, file: !3, line: 5781, type: !2396)
!14803 = !DILocation(line: 5781, column: 10, scope: !14791)
!14804 = !DILocalVariable(name: "count", scope: !14791, file: !3, line: 5781, type: !2396)
!14805 = !DILocation(line: 5781, column: 16, scope: !14791)
!14806 = !DILocalVariable(name: "force_group", scope: !14791, file: !3, line: 5796, type: !2396)
!14807 = !DILocation(line: 5796, column: 7, scope: !14791)
!14808 = !DILocation(line: 5796, column: 25, scope: !14791)
!14809 = !DILocation(line: 5796, column: 21, scope: !14791)
!14810 = !DILocation(line: 5796, column: 28, scope: !14791)
!14811 = !DILocation(line: 5796, column: 34, scope: !14791)
!14812 = !DILocation(line: 5796, column: 38, scope: !14791)
!14813 = !DILocation(line: 5796, column: 43, scope: !14791)
!14814 = !DILocation(line: 5796, column: 41, scope: !14791)
!14815 = !DILocation(line: 0, scope: !14791)
!14816 = !DILocation(line: 5810, column: 13, scope: !14817)
!14817 = distinct !DILexicalBlock(scope: !14791, file: !3, line: 5810, column: 3)
!14818 = !DILocation(line: 5810, column: 8, scope: !14817)
!14819 = !DILocation(line: 5810, column: 18, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14817, file: !3, line: 5810, column: 3)
!14821 = !DILocation(line: 5810, column: 23, scope: !14820)
!14822 = !DILocation(line: 5810, column: 3, scope: !14817)
!14823 = !DILocation(line: 5817, column: 11, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14820, file: !3, line: 5811, column: 5)
!14825 = !DILocation(line: 5817, column: 9, scope: !14824)
!14826 = !DILocation(line: 5819, column: 18, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14824, file: !3, line: 5819, column: 7)
!14828 = !DILocation(line: 5819, column: 12, scope: !14827)
!14829 = !DILocation(line: 5819, column: 23, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14827, file: !3, line: 5819, column: 7)
!14831 = !DILocation(line: 5819, column: 31, scope: !14830)
!14832 = !DILocation(line: 5819, column: 29, scope: !14830)
!14833 = !DILocation(line: 5819, column: 7, scope: !14827)
!14834 = !DILocalVariable(name: "rclass", scope: !14835, file: !3, line: 5821, type: !2396)
!14835 = distinct !DILexicalBlock(scope: !14830, file: !3, line: 5820, column: 2)
!14836 = !DILocation(line: 5821, column: 8, scope: !14835)
!14837 = !DILocation(line: 5821, column: 27, scope: !14835)
!14838 = !DILocation(line: 5821, column: 23, scope: !14835)
!14839 = !DILocation(line: 5821, column: 30, scope: !14835)
!14840 = !DILocalVariable(name: "regnum", scope: !14835, file: !3, line: 5822, type: !2396)
!14841 = !DILocation(line: 5822, column: 8, scope: !14835)
!14842 = !DILocation(line: 5824, column: 5, scope: !14835)
!14843 = !DILocation(line: 5825, column: 8, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14835, file: !3, line: 5825, column: 8)
!14845 = !DILocation(line: 5825, column: 13, scope: !14844)
!14846 = !DILocation(line: 5825, column: 10, scope: !14844)
!14847 = !DILocation(line: 5825, column: 8, scope: !14835)
!14848 = !DILocation(line: 5826, column: 11, scope: !14844)
!14849 = !DILocation(line: 5826, column: 8, scope: !14844)
!14850 = !DILocation(line: 5826, column: 6, scope: !14844)
!14851 = !DILocation(line: 5827, column: 24, scope: !14835)
!14852 = !DILocation(line: 5827, column: 13, scope: !14835)
!14853 = !DILocation(line: 5827, column: 11, scope: !14835)
!14854 = !DILocation(line: 5829, column: 28, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14835, file: !3, line: 5829, column: 8)
!14856 = !DILocation(line: 5829, column: 40, scope: !14855)
!14857 = !DILocation(line: 5829, column: 36, scope: !14855)
!14858 = !DILocation(line: 5829, column: 43, scope: !14855)
!14859 = !DILocation(line: 5830, column: 11, scope: !14855)
!14860 = !DILocation(line: 5830, column: 7, scope: !14855)
!14861 = !DILocation(line: 5830, column: 14, scope: !14855)
!14862 = !DILocation(line: 5829, column: 9, scope: !14855)
!14863 = !DILocation(line: 5831, column: 9, scope: !14855)
!14864 = !DILocation(line: 5831, column: 17, scope: !14855)
!14865 = !DILocation(line: 5831, column: 13, scope: !14855)
!14866 = !DILocation(line: 5831, column: 20, scope: !14855)
!14867 = !DILocation(line: 5834, column: 6, scope: !14855)
!14868 = !DILocation(line: 5834, column: 11, scope: !14855)
!14869 = !DILocation(line: 5835, column: 6, scope: !14855)
!14870 = !DILocation(line: 5835, column: 27, scope: !14855)
!14871 = !DILocation(line: 5835, column: 39, scope: !14855)
!14872 = !DILocation(line: 5835, column: 35, scope: !14855)
!14873 = !DILocation(line: 5835, column: 42, scope: !14855)
!14874 = !DILocation(line: 5835, column: 52, scope: !14855)
!14875 = !DILocation(line: 5835, column: 48, scope: !14855)
!14876 = !DILocation(line: 5835, column: 55, scope: !14855)
!14877 = !DILocation(line: 5836, column: 10, scope: !14855)
!14878 = !DILocation(line: 5836, column: 6, scope: !14855)
!14879 = !DILocation(line: 5836, column: 13, scope: !14855)
!14880 = !DILocation(line: 5836, column: 30, scope: !14855)
!14881 = !DILocation(line: 5836, column: 26, scope: !14855)
!14882 = !DILocation(line: 5836, column: 33, scope: !14855)
!14883 = !DILocation(line: 5837, column: 10, scope: !14855)
!14884 = !DILocation(line: 5837, column: 6, scope: !14855)
!14885 = !DILocation(line: 5837, column: 13, scope: !14855)
!14886 = !DILocation(line: 5837, column: 18, scope: !14855)
!14887 = !DILocation(line: 5835, column: 9, scope: !14855)
!14888 = !DILocation(line: 5838, column: 8, scope: !14855)
!14889 = !DILocation(line: 5838, column: 11, scope: !14855)
!14890 = !DILocation(line: 5839, column: 8, scope: !14855)
!14891 = !DILocation(line: 5839, column: 11, scope: !14855)
!14892 = !DILocation(line: 5843, column: 8, scope: !14855)
!14893 = !DILocation(line: 5843, column: 12, scope: !14855)
!14894 = !DILocation(line: 5844, column: 5, scope: !14855)
!14895 = !DILocation(line: 5844, column: 9, scope: !14855)
!14896 = !DILocation(line: 5846, column: 9, scope: !14855)
!14897 = !DILocation(line: 5846, column: 14, scope: !14855)
!14898 = !DILocation(line: 5829, column: 8, scope: !14835)
!14899 = !DILocalVariable(name: "nr", scope: !14900, file: !3, line: 5849, type: !2396)
!14900 = distinct !DILexicalBlock(scope: !14855, file: !3, line: 5848, column: 6)
!14901 = !DILocation(line: 5849, column: 12, scope: !14900)
!14902 = !DILocation(line: 5849, column: 34, scope: !14900)
!14903 = !DILocation(line: 5849, column: 17, scope: !14900)
!14904 = !DILocation(line: 5849, column: 46, scope: !14900)
!14905 = !DILocation(line: 5849, column: 42, scope: !14900)
!14906 = !DILocation(line: 5849, column: 49, scope: !14900)
!14907 = !DILocation(line: 5853, column: 12, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14900, file: !3, line: 5853, column: 12)
!14909 = !DILocation(line: 5853, column: 12, scope: !14900)
!14910 = !DILocation(line: 5854, column: 12, scope: !14908)
!14911 = !DILocation(line: 5854, column: 8, scope: !14908)
!14912 = !DILocation(line: 5854, column: 15, scope: !14908)
!14913 = !DILocation(line: 5854, column: 6, scope: !14908)
!14914 = !DILocation(line: 5854, column: 3, scope: !14908)
!14915 = !DILocation(line: 5856, column: 12, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14900, file: !3, line: 5856, column: 12)
!14917 = !DILocation(line: 5856, column: 15, scope: !14916)
!14918 = !DILocation(line: 5856, column: 12, scope: !14900)
!14919 = !DILocation(line: 5859, column: 9, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14921, file: !3, line: 5859, column: 9)
!14921 = distinct !DILexicalBlock(scope: !14916, file: !3, line: 5857, column: 3)
!14922 = !DILocation(line: 5859, column: 9, scope: !14921)
!14923 = !DILocation(line: 5860, column: 7, scope: !14920)
!14924 = !DILocation(line: 5861, column: 5, scope: !14921)
!14925 = !DILocation(line: 5865, column: 8, scope: !14900)
!14926 = !DILocation(line: 5865, column: 15, scope: !14900)
!14927 = !DILocation(line: 5865, column: 18, scope: !14900)
!14928 = !DILocalVariable(name: "regno", scope: !14929, file: !3, line: 5867, type: !2396)
!14929 = distinct !DILexicalBlock(scope: !14900, file: !3, line: 5866, column: 3)
!14930 = !DILocation(line: 5867, column: 9, scope: !14929)
!14931 = !DILocation(line: 5867, column: 17, scope: !14929)
!14932 = !DILocation(line: 5867, column: 26, scope: !14929)
!14933 = !DILocation(line: 5867, column: 24, scope: !14929)
!14934 = !DILocation(line: 5867, column: 29, scope: !14929)
!14935 = !DILocation(line: 5868, column: 11, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14929, file: !3, line: 5868, column: 9)
!14937 = !DILocation(line: 5869, column: 4, scope: !14936)
!14938 = !DILocation(line: 5869, column: 23, scope: !14936)
!14939 = !DILocation(line: 5869, column: 7, scope: !14936)
!14940 = !DILocation(line: 5869, column: 30, scope: !14936)
!14941 = !DILocation(line: 5870, column: 4, scope: !14936)
!14942 = !DILocation(line: 5870, column: 26, scope: !14936)
!14943 = !DILocation(line: 5870, column: 37, scope: !14936)
!14944 = !DILocation(line: 5870, column: 33, scope: !14936)
!14945 = !DILocation(line: 5870, column: 40, scope: !14936)
!14946 = !DILocation(line: 5871, column: 16, scope: !14936)
!14947 = !DILocation(line: 5871, column: 12, scope: !14936)
!14948 = !DILocation(line: 5871, column: 19, scope: !14936)
!14949 = !DILocation(line: 5870, column: 7, scope: !14936)
!14950 = !DILocation(line: 5868, column: 9, scope: !14929)
!14951 = !DILocation(line: 5872, column: 7, scope: !14936)
!14952 = !DILocation(line: 5873, column: 7, scope: !14929)
!14953 = distinct !{!14953, !14925, !14954}
!14954 = !DILocation(line: 5874, column: 3, scope: !14900)
!14955 = !DILocation(line: 5875, column: 12, scope: !14956)
!14956 = distinct !DILexicalBlock(scope: !14900, file: !3, line: 5875, column: 12)
!14957 = !DILocation(line: 5875, column: 15, scope: !14956)
!14958 = !DILocation(line: 5875, column: 12, scope: !14900)
!14959 = !DILocation(line: 5876, column: 3, scope: !14956)
!14960 = !DILocation(line: 5877, column: 6, scope: !14900)
!14961 = !DILocation(line: 5878, column: 2, scope: !14835)
!14962 = !DILocation(line: 5819, column: 46, scope: !14830)
!14963 = !DILocation(line: 5819, column: 7, scope: !14830)
!14964 = distinct !{!14964, !14833, !14965}
!14965 = !DILocation(line: 5878, column: 2, scope: !14827)
!14966 = !DILocation(line: 5881, column: 11, scope: !14967)
!14967 = distinct !DILexicalBlock(scope: !14824, file: !3, line: 5881, column: 11)
!14968 = !DILocation(line: 5881, column: 19, scope: !14967)
!14969 = !DILocation(line: 5881, column: 17, scope: !14967)
!14970 = !DILocation(line: 5881, column: 11, scope: !14824)
!14971 = !DILocation(line: 5882, column: 2, scope: !14967)
!14972 = !DILocation(line: 5883, column: 5, scope: !14824)
!14973 = !DILocation(line: 5810, column: 32, scope: !14820)
!14974 = !DILocation(line: 5810, column: 3, scope: !14820)
!14975 = distinct !{!14975, !14822, !14976}
!14976 = !DILocation(line: 5883, column: 5, scope: !14817)
!14977 = !DILocation(line: 5886, column: 7, scope: !14978)
!14978 = distinct !DILexicalBlock(scope: !14791, file: !3, line: 5886, column: 7)
!14979 = !DILocation(line: 5886, column: 16, scope: !14978)
!14980 = !DILocation(line: 5886, column: 13, scope: !14978)
!14981 = !DILocation(line: 5886, column: 7, scope: !14791)
!14982 = !DILocation(line: 5887, column: 5, scope: !14978)
!14983 = !DILocation(line: 5892, column: 26, scope: !14791)
!14984 = !DILocation(line: 5892, column: 29, scope: !14791)
!14985 = !DILocation(line: 5892, column: 10, scope: !14791)
!14986 = !DILocation(line: 5892, column: 3, scope: !14791)
!14987 = !DILocation(line: 5893, column: 1, scope: !14791)
!14988 = distinct !DISubprogram(name: "set_reload_reg", scope: !3, file: !3, line: 5723, type: !11155, scopeLine: 5724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!14989 = !DILocalVariable(name: "i", arg: 1, scope: !14988, file: !3, line: 5723, type: !2396)
!14990 = !DILocation(line: 5723, column: 21, scope: !14988)
!14991 = !DILocalVariable(name: "r", arg: 2, scope: !14988, file: !3, line: 5723, type: !2396)
!14992 = !DILocation(line: 5723, column: 28, scope: !14988)
!14993 = !DILocalVariable(name: "regno", scope: !14988, file: !3, line: 5725, type: !2396)
!14994 = !DILocation(line: 5725, column: 7, scope: !14988)
!14995 = !DILocalVariable(name: "reg", scope: !14988, file: !3, line: 5726, type: !2372)
!14996 = !DILocation(line: 5726, column: 7, scope: !14988)
!14997 = !DILocation(line: 5726, column: 27, scope: !14988)
!14998 = !DILocation(line: 5726, column: 13, scope: !14988)
!14999 = !DILocation(line: 5728, column: 7, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14988, file: !3, line: 5728, column: 7)
!15001 = !DILocation(line: 5728, column: 11, scope: !15000)
!15002 = !DILocation(line: 5728, column: 16, scope: !15000)
!15003 = !DILocation(line: 5728, column: 19, scope: !15000)
!15004 = !DILocation(line: 5728, column: 41, scope: !15000)
!15005 = !DILocation(line: 5728, column: 37, scope: !15000)
!15006 = !DILocation(line: 5728, column: 44, scope: !15000)
!15007 = !DILocation(line: 5728, column: 34, scope: !15000)
!15008 = !DILocation(line: 5728, column: 7, scope: !14988)
!15009 = !DILocation(line: 5730, column: 26, scope: !15000)
!15010 = !DILocation(line: 5730, column: 22, scope: !15000)
!15011 = !DILocation(line: 5730, column: 29, scope: !15000)
!15012 = !DILocation(line: 5730, column: 46, scope: !15000)
!15013 = !DILocation(line: 5730, column: 35, scope: !15000)
!15014 = !DILocation(line: 5730, column: 9, scope: !15000)
!15015 = !DILocation(line: 5730, column: 7, scope: !15000)
!15016 = !DILocation(line: 5729, column: 19, scope: !15000)
!15017 = !DILocation(line: 5729, column: 5, scope: !15000)
!15018 = !DILocation(line: 5729, column: 22, scope: !15000)
!15019 = !DILocation(line: 5732, column: 24, scope: !14988)
!15020 = !DILocation(line: 5732, column: 11, scope: !14988)
!15021 = !DILocation(line: 5732, column: 9, scope: !14988)
!15022 = !DILocation(line: 5736, column: 7, scope: !15023)
!15023 = distinct !DILexicalBlock(scope: !14988, file: !3, line: 5736, column: 7)
!15024 = !DILocation(line: 5736, column: 7, scope: !14988)
!15025 = !DILocalVariable(name: "test_mode", scope: !15026, file: !3, line: 5738, type: !5)
!15026 = distinct !DILexicalBlock(scope: !15023, file: !3, line: 5737, column: 5)
!15027 = !DILocation(line: 5738, column: 25, scope: !15026)
!15028 = !DILocation(line: 5739, column: 15, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 5739, column: 11)
!15030 = !DILocation(line: 5739, column: 11, scope: !15029)
!15031 = !DILocation(line: 5739, column: 18, scope: !15029)
!15032 = !DILocation(line: 5739, column: 11, scope: !15026)
!15033 = !DILocation(line: 5740, column: 14, scope: !15029)
!15034 = !DILocation(line: 5740, column: 12, scope: !15029)
!15035 = !DILocation(line: 5740, column: 2, scope: !15029)
!15036 = !DILocation(line: 5747, column: 18, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 5747, column: 11)
!15038 = !DILocation(line: 5747, column: 14, scope: !15037)
!15039 = !DILocation(line: 5747, column: 21, scope: !15037)
!15040 = !DILocation(line: 5747, column: 24, scope: !15037)
!15041 = !DILocation(line: 5747, column: 29, scope: !15037)
!15042 = !DILocation(line: 5747, column: 32, scope: !15037)
!15043 = !DILocation(line: 5747, column: 42, scope: !15037)
!15044 = !DILocation(line: 5748, column: 7, scope: !15037)
!15045 = !DILocation(line: 5748, column: 12, scope: !15037)
!15046 = !DILocation(line: 5747, column: 11, scope: !15026)
!15047 = !DILocation(line: 5749, column: 13, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !15037, file: !3, line: 5749, column: 6)
!15049 = !DILocation(line: 5749, column: 9, scope: !15048)
!15050 = !DILocation(line: 5749, column: 16, scope: !15048)
!15051 = !DILocation(line: 5749, column: 20, scope: !15048)
!15052 = !DILocation(line: 5750, column: 9, scope: !15048)
!15053 = !DILocation(line: 5750, column: 14, scope: !15048)
!15054 = !DILocation(line: 5749, column: 6, scope: !15037)
!15055 = !DILocation(line: 5753, column: 23, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !15048, file: !3, line: 5751, column: 4)
!15057 = !DILocation(line: 5753, column: 21, scope: !15056)
!15058 = !DILocation(line: 5757, column: 41, scope: !15056)
!15059 = !DILocation(line: 5757, column: 30, scope: !15056)
!15060 = !DILocation(line: 5757, column: 49, scope: !15056)
!15061 = !DILocation(line: 5757, column: 45, scope: !15056)
!15062 = !DILocation(line: 5757, column: 52, scope: !15056)
!15063 = !DILocation(line: 5758, column: 13, scope: !15056)
!15064 = !DILocation(line: 5758, column: 9, scope: !15056)
!15065 = !DILocation(line: 5758, column: 16, scope: !15056)
!15066 = !DILocation(line: 5758, column: 33, scope: !15056)
!15067 = !DILocation(line: 5758, column: 29, scope: !15056)
!15068 = !DILocation(line: 5758, column: 36, scope: !15056)
!15069 = !DILocation(line: 5757, column: 6, scope: !15056)
!15070 = !DILocation(line: 5760, column: 23, scope: !15056)
!15071 = !DILocation(line: 5760, column: 10, scope: !15056)
!15072 = !DILocation(line: 5760, column: 6, scope: !15056)
!15073 = !DILocation(line: 5760, column: 13, scope: !15056)
!15074 = !DILocation(line: 5760, column: 21, scope: !15056)
!15075 = !DILocation(line: 5761, column: 41, scope: !15056)
!15076 = !DILocation(line: 5761, column: 30, scope: !15056)
!15077 = !DILocation(line: 5761, column: 25, scope: !15056)
!15078 = !DILocation(line: 5761, column: 6, scope: !15056)
!15079 = !DILocation(line: 5761, column: 28, scope: !15056)
!15080 = !DILocation(line: 5762, column: 6, scope: !15056)
!15081 = !DILocation(line: 5750, column: 63, scope: !15048)
!15082 = !DILocation(line: 5764, column: 5, scope: !15026)
!15083 = !DILocation(line: 5765, column: 3, scope: !14988)
!15084 = !DILocation(line: 5766, column: 1, scope: !14988)
!15085 = distinct !DISubprogram(name: "failed_reload", scope: !3, file: !3, line: 5702, type: !15086, scopeLine: 5703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!15086 = !DISubroutineType(types: !15087)
!15087 = !{null, !2372, !2396}
!15088 = !DILocalVariable(name: "insn", arg: 1, scope: !15085, file: !3, line: 5702, type: !2372)
!15089 = !DILocation(line: 5702, column: 20, scope: !15085)
!15090 = !DILocalVariable(name: "r", arg: 2, scope: !15085, file: !3, line: 5702, type: !2396)
!15091 = !DILocation(line: 5702, column: 30, scope: !15085)
!15092 = !DILocation(line: 5704, column: 22, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15085, file: !3, line: 5704, column: 7)
!15094 = !DILocation(line: 5704, column: 7, scope: !15093)
!15095 = !DILocation(line: 5704, column: 38, scope: !15093)
!15096 = !DILocation(line: 5704, column: 7, scope: !15085)
!15097 = !DILocation(line: 5706, column: 5, scope: !15093)
!15098 = !DILocation(line: 5710, column: 18, scope: !15085)
!15099 = !DILocation(line: 5710, column: 3, scope: !15085)
!15100 = !DILocation(line: 5712, column: 7, scope: !15085)
!15101 = !DILocation(line: 5712, column: 3, scope: !15085)
!15102 = !DILocation(line: 5712, column: 10, scope: !15085)
!15103 = !DILocation(line: 5712, column: 13, scope: !15085)
!15104 = !DILocation(line: 5713, column: 7, scope: !15085)
!15105 = !DILocation(line: 5713, column: 3, scope: !15085)
!15106 = !DILocation(line: 5713, column: 10, scope: !15085)
!15107 = !DILocation(line: 5713, column: 14, scope: !15085)
!15108 = !DILocation(line: 5714, column: 7, scope: !15085)
!15109 = !DILocation(line: 5714, column: 3, scope: !15085)
!15110 = !DILocation(line: 5714, column: 10, scope: !15085)
!15111 = !DILocation(line: 5714, column: 18, scope: !15085)
!15112 = !DILocation(line: 5715, column: 7, scope: !15085)
!15113 = !DILocation(line: 5715, column: 3, scope: !15085)
!15114 = !DILocation(line: 5715, column: 10, scope: !15085)
!15115 = !DILocation(line: 5715, column: 19, scope: !15085)
!15116 = !DILocation(line: 5716, column: 7, scope: !15085)
!15117 = !DILocation(line: 5716, column: 3, scope: !15085)
!15118 = !DILocation(line: 5716, column: 10, scope: !15085)
!15119 = !DILocation(line: 5716, column: 22, scope: !15085)
!15120 = !DILocation(line: 5717, column: 1, scope: !15085)
!15121 = distinct !DISubprogram(name: "reload_reg_free_for_value_p", scope: !3, file: !3, line: 5412, type: !15122, scopeLine: 5415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!15122 = !DISubroutineType(types: !15123)
!15123 = !{!2396, !2396, !2396, !2396, !2049, !2372, !2372, !2396, !2396}
!15124 = !DILocalVariable(name: "start_regno", arg: 1, scope: !15121, file: !3, line: 5412, type: !2396)
!15125 = !DILocation(line: 5412, column: 34, scope: !15121)
!15126 = !DILocalVariable(name: "regno", arg: 2, scope: !15121, file: !3, line: 5412, type: !2396)
!15127 = !DILocation(line: 5412, column: 51, scope: !15121)
!15128 = !DILocalVariable(name: "opnum", arg: 3, scope: !15121, file: !3, line: 5412, type: !2396)
!15129 = !DILocation(line: 5412, column: 62, scope: !15121)
!15130 = !DILocalVariable(name: "type", arg: 4, scope: !15121, file: !3, line: 5413, type: !2049)
!15131 = !DILocation(line: 5413, column: 26, scope: !15121)
!15132 = !DILocalVariable(name: "value", arg: 5, scope: !15121, file: !3, line: 5413, type: !2372)
!15133 = !DILocation(line: 5413, column: 36, scope: !15121)
!15134 = !DILocalVariable(name: "out", arg: 6, scope: !15121, file: !3, line: 5413, type: !2372)
!15135 = !DILocation(line: 5413, column: 47, scope: !15121)
!15136 = !DILocalVariable(name: "reloadnum", arg: 7, scope: !15121, file: !3, line: 5414, type: !2396)
!15137 = !DILocation(line: 5414, column: 13, scope: !15121)
!15138 = !DILocalVariable(name: "ignore_address_reloads", arg: 8, scope: !15121, file: !3, line: 5414, type: !2396)
!15139 = !DILocation(line: 5414, column: 28, scope: !15121)
!15140 = !DILocalVariable(name: "time1", scope: !15121, file: !3, line: 5416, type: !2396)
!15141 = !DILocation(line: 5416, column: 7, scope: !15121)
!15142 = !DILocalVariable(name: "check_earlyclobber", scope: !15121, file: !3, line: 5420, type: !2396)
!15143 = !DILocation(line: 5420, column: 7, scope: !15121)
!15144 = !DILocalVariable(name: "i", scope: !15121, file: !3, line: 5421, type: !2396)
!15145 = !DILocation(line: 5421, column: 7, scope: !15121)
!15146 = !DILocalVariable(name: "copy", scope: !15121, file: !3, line: 5422, type: !2396)
!15147 = !DILocation(line: 5422, column: 7, scope: !15121)
!15148 = !DILocation(line: 5424, column: 7, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15121, file: !3, line: 5424, column: 7)
!15150 = !DILocation(line: 5424, column: 7, scope: !15121)
!15151 = !DILocation(line: 5425, column: 5, scope: !15149)
!15152 = !DILocation(line: 5427, column: 7, scope: !15153)
!15153 = distinct !DILexicalBlock(scope: !15121, file: !3, line: 5427, column: 7)
!15154 = !DILocation(line: 5427, column: 14, scope: !15153)
!15155 = !DILocation(line: 5427, column: 11, scope: !15153)
!15156 = !DILocation(line: 5427, column: 7, scope: !15121)
!15157 = !DILocation(line: 5429, column: 12, scope: !15158)
!15158 = distinct !DILexicalBlock(scope: !15153, file: !3, line: 5428, column: 5)
!15159 = !DILocation(line: 5430, column: 11, scope: !15158)
!15160 = !DILocation(line: 5431, column: 5, scope: !15158)
!15161 = !DILocation(line: 5448, column: 11, scope: !15121)
!15162 = !DILocation(line: 5448, column: 3, scope: !15121)
!15163 = !DILocation(line: 5452, column: 15, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15121, file: !3, line: 5449, column: 5)
!15165 = !DILocation(line: 5452, column: 13, scope: !15164)
!15166 = !DILocation(line: 5453, column: 7, scope: !15164)
!15167 = !DILocation(line: 5455, column: 15, scope: !15164)
!15168 = !DILocation(line: 5455, column: 13, scope: !15164)
!15169 = !DILocation(line: 5456, column: 7, scope: !15164)
!15170 = !DILocation(line: 5464, column: 15, scope: !15164)
!15171 = !DILocation(line: 5464, column: 21, scope: !15164)
!15172 = !DILocation(line: 5464, column: 25, scope: !15164)
!15173 = !DILocation(line: 5464, column: 13, scope: !15164)
!15174 = !DILocation(line: 5465, column: 7, scope: !15164)
!15175 = !DILocation(line: 5467, column: 15, scope: !15164)
!15176 = !DILocation(line: 5467, column: 21, scope: !15164)
!15177 = !DILocation(line: 5467, column: 25, scope: !15164)
!15178 = !DILocation(line: 5467, column: 13, scope: !15164)
!15179 = !DILocation(line: 5468, column: 7, scope: !15164)
!15180 = !DILocation(line: 5472, column: 15, scope: !15164)
!15181 = !DILocation(line: 5472, column: 22, scope: !15164)
!15182 = !DILocation(line: 5472, column: 28, scope: !15164)
!15183 = !DILocation(line: 5472, column: 32, scope: !15164)
!15184 = !DILocation(line: 5472, column: 13, scope: !15164)
!15185 = !DILocation(line: 5473, column: 7, scope: !15164)
!15186 = !DILocation(line: 5477, column: 13, scope: !15164)
!15187 = !DILocation(line: 5478, column: 7, scope: !15164)
!15188 = !DILocation(line: 5482, column: 15, scope: !15164)
!15189 = !DILocation(line: 5482, column: 13, scope: !15164)
!15190 = !DILocation(line: 5483, column: 7, scope: !15164)
!15191 = !DILocation(line: 5485, column: 44, scope: !15164)
!15192 = !DILocation(line: 5485, column: 42, scope: !15164)
!15193 = !DILocation(line: 5485, column: 13, scope: !15164)
!15194 = !DILocation(line: 5486, column: 7, scope: !15164)
!15195 = !DILocation(line: 5488, column: 44, scope: !15164)
!15196 = !DILocation(line: 5488, column: 42, scope: !15164)
!15197 = !DILocation(line: 5488, column: 13, scope: !15164)
!15198 = !DILocation(line: 5489, column: 7, scope: !15164)
!15199 = !DILocation(line: 5491, column: 13, scope: !15164)
!15200 = !DILocation(line: 5492, column: 5, scope: !15164)
!15201 = !DILocation(line: 5494, column: 10, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15121, file: !3, line: 5494, column: 3)
!15203 = !DILocation(line: 5494, column: 8, scope: !15202)
!15204 = !DILocation(line: 5494, column: 15, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15202, file: !3, line: 5494, column: 3)
!15206 = !DILocation(line: 5494, column: 19, scope: !15205)
!15207 = !DILocation(line: 5494, column: 17, scope: !15205)
!15208 = !DILocation(line: 5494, column: 3, scope: !15202)
!15209 = !DILocalVariable(name: "reg", scope: !15210, file: !3, line: 5496, type: !2372)
!15210 = distinct !DILexicalBlock(scope: !15205, file: !3, line: 5495, column: 5)
!15211 = !DILocation(line: 5496, column: 11, scope: !15210)
!15212 = !DILocation(line: 5496, column: 21, scope: !15210)
!15213 = !DILocation(line: 5496, column: 17, scope: !15210)
!15214 = !DILocation(line: 5496, column: 24, scope: !15210)
!15215 = !DILocation(line: 5497, column: 11, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15210, file: !3, line: 5497, column: 11)
!15217 = !DILocation(line: 5497, column: 15, scope: !15216)
!15218 = !DILocation(line: 5497, column: 18, scope: !15216)
!15219 = !DILocation(line: 5498, column: 4, scope: !15216)
!15220 = !DILocation(line: 5498, column: 19, scope: !15216)
!15221 = !DILocation(line: 5498, column: 40, scope: !15216)
!15222 = !DILocation(line: 5498, column: 27, scope: !15216)
!15223 = !DILocation(line: 5498, column: 25, scope: !15216)
!15224 = !DILocation(line: 5499, column: 28, scope: !15216)
!15225 = !DILocation(line: 5499, column: 11, scope: !15216)
!15226 = !DILocation(line: 5499, column: 41, scope: !15216)
!15227 = !DILocation(line: 5499, column: 57, scope: !15216)
!15228 = !DILocation(line: 5499, column: 8, scope: !15216)
!15229 = !DILocation(line: 5500, column: 4, scope: !15216)
!15230 = !DILocation(line: 5500, column: 7, scope: !15216)
!15231 = !DILocation(line: 5500, column: 12, scope: !15216)
!15232 = !DILocation(line: 5500, column: 9, scope: !15216)
!15233 = !DILocation(line: 5497, column: 11, scope: !15210)
!15234 = !DILocalVariable(name: "other_input", scope: !15235, file: !3, line: 5502, type: !2372)
!15235 = distinct !DILexicalBlock(scope: !15216, file: !3, line: 5501, column: 2)
!15236 = !DILocation(line: 5502, column: 8, scope: !15235)
!15237 = !DILocation(line: 5502, column: 26, scope: !15235)
!15238 = !DILocation(line: 5502, column: 22, scope: !15235)
!15239 = !DILocation(line: 5502, column: 29, scope: !15235)
!15240 = !DILocation(line: 5507, column: 21, scope: !15241)
!15241 = distinct !DILexicalBlock(scope: !15235, file: !3, line: 5507, column: 8)
!15242 = !DILocation(line: 5507, column: 8, scope: !15241)
!15243 = !DILocation(line: 5507, column: 29, scope: !15241)
!15244 = !DILocation(line: 5507, column: 26, scope: !15241)
!15245 = !DILocation(line: 5507, column: 8, scope: !15235)
!15246 = !DILocation(line: 5508, column: 18, scope: !15241)
!15247 = !DILocation(line: 5508, column: 6, scope: !15241)
!15248 = !DILocation(line: 5509, column: 10, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !15235, file: !3, line: 5509, column: 8)
!15250 = !DILocation(line: 5509, column: 22, scope: !15249)
!15251 = !DILocation(line: 5509, column: 40, scope: !15249)
!15252 = !DILocation(line: 5509, column: 53, scope: !15249)
!15253 = !DILocation(line: 5509, column: 27, scope: !15249)
!15254 = !DILocation(line: 5510, column: 8, scope: !15249)
!15255 = !DILocation(line: 5510, column: 15, scope: !15249)
!15256 = !DILocation(line: 5510, column: 11, scope: !15249)
!15257 = !DILocation(line: 5510, column: 18, scope: !15249)
!15258 = !DILocation(line: 5510, column: 22, scope: !15249)
!15259 = !DILocation(line: 5510, column: 25, scope: !15249)
!15260 = !DILocation(line: 5509, column: 8, scope: !15235)
!15261 = !DILocalVariable(name: "time2", scope: !15262, file: !3, line: 5512, type: !2396)
!15262 = distinct !DILexicalBlock(scope: !15249, file: !3, line: 5511, column: 6)
!15263 = !DILocation(line: 5512, column: 12, scope: !15262)
!15264 = !DILocation(line: 5513, column: 20, scope: !15262)
!15265 = !DILocation(line: 5513, column: 16, scope: !15262)
!15266 = !DILocation(line: 5513, column: 23, scope: !15262)
!15267 = !DILocation(line: 5513, column: 8, scope: !15262)
!15268 = !DILocation(line: 5516, column: 11, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15262, file: !3, line: 5514, column: 3)
!15270 = !DILocation(line: 5517, column: 5, scope: !15269)
!15271 = !DILocation(line: 5525, column: 9, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15269, file: !3, line: 5525, column: 9)
!15273 = !DILocation(line: 5525, column: 14, scope: !15272)
!15274 = !DILocation(line: 5525, column: 42, scope: !15272)
!15275 = !DILocation(line: 5525, column: 45, scope: !15272)
!15276 = !DILocation(line: 5525, column: 58, scope: !15272)
!15277 = !DILocation(line: 5525, column: 60, scope: !15272)
!15278 = !DILocation(line: 5525, column: 55, scope: !15272)
!15279 = !DILocation(line: 5526, column: 9, scope: !15272)
!15280 = !DILocation(line: 5526, column: 12, scope: !15272)
!15281 = !DILocation(line: 5530, column: 9, scope: !15272)
!15282 = !DILocation(line: 5530, column: 18, scope: !15272)
!15283 = !DILocation(line: 5530, column: 14, scope: !15272)
!15284 = !DILocation(line: 5530, column: 29, scope: !15272)
!15285 = !DILocation(line: 5525, column: 9, scope: !15269)
!15286 = !DILocation(line: 5531, column: 7, scope: !15272)
!15287 = !DILocation(line: 5535, column: 9, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15269, file: !3, line: 5535, column: 9)
!15289 = !DILocation(line: 5535, column: 14, scope: !15288)
!15290 = !DILocation(line: 5535, column: 34, scope: !15288)
!15291 = !DILocation(line: 5535, column: 37, scope: !15288)
!15292 = !DILocation(line: 5535, column: 50, scope: !15288)
!15293 = !DILocation(line: 5535, column: 46, scope: !15288)
!15294 = !DILocation(line: 5535, column: 53, scope: !15288)
!15295 = !DILocation(line: 5535, column: 43, scope: !15288)
!15296 = !DILocation(line: 5536, column: 9, scope: !15288)
!15297 = !DILocation(line: 5536, column: 12, scope: !15288)
!15298 = !DILocation(line: 5538, column: 9, scope: !15288)
!15299 = !DILocation(line: 5538, column: 18, scope: !15288)
!15300 = !DILocation(line: 5538, column: 14, scope: !15288)
!15301 = !DILocation(line: 5538, column: 29, scope: !15288)
!15302 = !DILocation(line: 5535, column: 9, scope: !15269)
!15303 = !DILocation(line: 5539, column: 7, scope: !15288)
!15304 = !DILocation(line: 5540, column: 17, scope: !15269)
!15305 = !DILocation(line: 5540, column: 13, scope: !15269)
!15306 = !DILocation(line: 5540, column: 20, scope: !15269)
!15307 = !DILocation(line: 5540, column: 26, scope: !15269)
!15308 = !DILocation(line: 5540, column: 30, scope: !15269)
!15309 = !DILocation(line: 5540, column: 11, scope: !15269)
!15310 = !DILocation(line: 5541, column: 5, scope: !15269)
!15311 = !DILocation(line: 5543, column: 9, scope: !15312)
!15312 = distinct !DILexicalBlock(scope: !15269, file: !3, line: 5543, column: 9)
!15313 = !DILocation(line: 5543, column: 14, scope: !15312)
!15314 = !DILocation(line: 5543, column: 34, scope: !15312)
!15315 = !DILocation(line: 5543, column: 37, scope: !15312)
!15316 = !DILocation(line: 5543, column: 50, scope: !15312)
!15317 = !DILocation(line: 5543, column: 46, scope: !15312)
!15318 = !DILocation(line: 5543, column: 53, scope: !15312)
!15319 = !DILocation(line: 5543, column: 43, scope: !15312)
!15320 = !DILocation(line: 5544, column: 9, scope: !15312)
!15321 = !DILocation(line: 5544, column: 12, scope: !15312)
!15322 = !DILocation(line: 5545, column: 9, scope: !15312)
!15323 = !DILocation(line: 5545, column: 18, scope: !15312)
!15324 = !DILocation(line: 5545, column: 14, scope: !15312)
!15325 = !DILocation(line: 5545, column: 29, scope: !15312)
!15326 = !DILocation(line: 5543, column: 9, scope: !15269)
!15327 = !DILocation(line: 5546, column: 7, scope: !15312)
!15328 = !DILocation(line: 5547, column: 17, scope: !15269)
!15329 = !DILocation(line: 5547, column: 13, scope: !15269)
!15330 = !DILocation(line: 5547, column: 20, scope: !15269)
!15331 = !DILocation(line: 5547, column: 26, scope: !15269)
!15332 = !DILocation(line: 5547, column: 30, scope: !15269)
!15333 = !DILocation(line: 5547, column: 11, scope: !15269)
!15334 = !DILocation(line: 5548, column: 5, scope: !15269)
!15335 = !DILocation(line: 5550, column: 17, scope: !15269)
!15336 = !DILocation(line: 5550, column: 13, scope: !15269)
!15337 = !DILocation(line: 5550, column: 20, scope: !15269)
!15338 = !DILocation(line: 5550, column: 26, scope: !15269)
!15339 = !DILocation(line: 5550, column: 30, scope: !15269)
!15340 = !DILocation(line: 5550, column: 11, scope: !15269)
!15341 = !DILocation(line: 5551, column: 24, scope: !15269)
!15342 = !DILocation(line: 5552, column: 5, scope: !15269)
!15343 = !DILocation(line: 5556, column: 9, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15269, file: !3, line: 5556, column: 9)
!15345 = !DILocation(line: 5556, column: 14, scope: !15344)
!15346 = !DILocation(line: 5556, column: 44, scope: !15344)
!15347 = !DILocation(line: 5556, column: 47, scope: !15344)
!15348 = !DILocation(line: 5556, column: 60, scope: !15344)
!15349 = !DILocation(line: 5556, column: 62, scope: !15344)
!15350 = !DILocation(line: 5556, column: 57, scope: !15344)
!15351 = !DILocation(line: 5557, column: 9, scope: !15344)
!15352 = !DILocation(line: 5557, column: 12, scope: !15344)
!15353 = !DILocation(line: 5558, column: 9, scope: !15344)
!15354 = !DILocation(line: 5558, column: 18, scope: !15344)
!15355 = !DILocation(line: 5558, column: 14, scope: !15344)
!15356 = !DILocation(line: 5558, column: 29, scope: !15344)
!15357 = !DILocation(line: 5556, column: 9, scope: !15269)
!15358 = !DILocation(line: 5559, column: 7, scope: !15344)
!15359 = !DILocation(line: 5560, column: 11, scope: !15269)
!15360 = !DILocation(line: 5561, column: 5, scope: !15269)
!15361 = !DILocation(line: 5563, column: 11, scope: !15269)
!15362 = !DILocation(line: 5564, column: 24, scope: !15269)
!15363 = !DILocation(line: 5565, column: 5, scope: !15269)
!15364 = !DILocation(line: 5567, column: 11, scope: !15269)
!15365 = !DILocation(line: 5568, column: 5, scope: !15269)
!15366 = !DILocation(line: 5572, column: 11, scope: !15269)
!15367 = !DILocation(line: 5573, column: 5, scope: !15269)
!15368 = !DILocation(line: 5578, column: 9, scope: !15369)
!15369 = distinct !DILexicalBlock(scope: !15269, file: !3, line: 5578, column: 9)
!15370 = !DILocation(line: 5578, column: 14, scope: !15369)
!15371 = !DILocation(line: 5578, column: 43, scope: !15369)
!15372 = !DILocation(line: 5578, column: 46, scope: !15369)
!15373 = !DILocation(line: 5578, column: 59, scope: !15369)
!15374 = !DILocation(line: 5578, column: 61, scope: !15369)
!15375 = !DILocation(line: 5578, column: 56, scope: !15369)
!15376 = !DILocation(line: 5579, column: 9, scope: !15369)
!15377 = !DILocation(line: 5579, column: 12, scope: !15369)
!15378 = !DILocation(line: 5580, column: 9, scope: !15369)
!15379 = !DILocation(line: 5580, column: 18, scope: !15369)
!15380 = !DILocation(line: 5580, column: 14, scope: !15369)
!15381 = !DILocation(line: 5580, column: 29, scope: !15369)
!15382 = !DILocation(line: 5578, column: 9, scope: !15269)
!15383 = !DILocation(line: 5581, column: 7, scope: !15369)
!15384 = !DILocation(line: 5582, column: 46, scope: !15269)
!15385 = !DILocation(line: 5582, column: 42, scope: !15269)
!15386 = !DILocation(line: 5582, column: 49, scope: !15269)
!15387 = !DILocation(line: 5582, column: 40, scope: !15269)
!15388 = !DILocation(line: 5582, column: 11, scope: !15269)
!15389 = !DILocation(line: 5583, column: 5, scope: !15269)
!15390 = !DILocation(line: 5585, column: 46, scope: !15269)
!15391 = !DILocation(line: 5585, column: 42, scope: !15269)
!15392 = !DILocation(line: 5585, column: 49, scope: !15269)
!15393 = !DILocation(line: 5585, column: 40, scope: !15269)
!15394 = !DILocation(line: 5585, column: 11, scope: !15269)
!15395 = !DILocation(line: 5586, column: 5, scope: !15269)
!15396 = !DILocation(line: 5590, column: 15, scope: !15397)
!15397 = distinct !DILexicalBlock(scope: !15269, file: !3, line: 5590, column: 9)
!15398 = !DILocation(line: 5590, column: 11, scope: !15397)
!15399 = !DILocation(line: 5590, column: 18, scope: !15397)
!15400 = !DILocation(line: 5590, column: 21, scope: !15397)
!15401 = !DILocation(line: 5590, column: 37, scope: !15397)
!15402 = !DILocation(line: 5590, column: 50, scope: !15397)
!15403 = !DILocation(line: 5590, column: 24, scope: !15397)
!15404 = !DILocation(line: 5590, column: 9, scope: !15269)
!15405 = !DILocation(line: 5592, column: 15, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15397, file: !3, line: 5591, column: 7)
!15407 = !DILocation(line: 5594, column: 41, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !15406, file: !3, line: 5594, column: 13)
!15409 = !DILocation(line: 5594, column: 37, scope: !15408)
!15410 = !DILocation(line: 5594, column: 44, scope: !15408)
!15411 = !DILocation(line: 5594, column: 13, scope: !15408)
!15412 = !DILocation(line: 5594, column: 13, scope: !15406)
!15413 = !DILocation(line: 5595, column: 10, scope: !15408)
!15414 = !DILocation(line: 5595, column: 4, scope: !15408)
!15415 = !DILocation(line: 5597, column: 9, scope: !15406)
!15416 = !DILocation(line: 5599, column: 11, scope: !15269)
!15417 = !DILocation(line: 5604, column: 9, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15269, file: !3, line: 5604, column: 9)
!15419 = !DILocation(line: 5604, column: 9, scope: !15269)
!15420 = !DILocation(line: 5605, column: 7, scope: !15418)
!15421 = !DILocation(line: 5606, column: 5, scope: !15269)
!15422 = !DILocation(line: 5608, column: 5, scope: !15269)
!15423 = !DILocation(line: 5610, column: 13, scope: !15424)
!15424 = distinct !DILexicalBlock(scope: !15262, file: !3, line: 5610, column: 12)
!15425 = !DILocation(line: 5610, column: 22, scope: !15424)
!15426 = !DILocation(line: 5610, column: 19, scope: !15424)
!15427 = !DILocation(line: 5611, column: 6, scope: !15424)
!15428 = !DILocation(line: 5611, column: 16, scope: !15424)
!15429 = !DILocation(line: 5611, column: 12, scope: !15424)
!15430 = !DILocation(line: 5611, column: 19, scope: !15424)
!15431 = !DILocation(line: 5611, column: 22, scope: !15424)
!15432 = !DILocation(line: 5611, column: 29, scope: !15424)
!15433 = !DILocation(line: 5611, column: 25, scope: !15424)
!15434 = !DILocation(line: 5611, column: 32, scope: !15424)
!15435 = !DILocation(line: 5612, column: 10, scope: !15424)
!15436 = !DILocation(line: 5612, column: 28, scope: !15424)
!15437 = !DILocation(line: 5612, column: 41, scope: !15424)
!15438 = !DILocation(line: 5612, column: 15, scope: !15424)
!15439 = !DILocation(line: 5613, column: 5, scope: !15424)
!15440 = !DILocation(line: 5613, column: 9, scope: !15424)
!15441 = !DILocation(line: 5613, column: 13, scope: !15424)
!15442 = !DILocation(line: 5613, column: 20, scope: !15424)
!15443 = !DILocation(line: 5613, column: 16, scope: !15424)
!15444 = !DILocation(line: 5613, column: 31, scope: !15424)
!15445 = !DILocation(line: 5614, column: 9, scope: !15424)
!15446 = !DILocation(line: 5614, column: 12, scope: !15424)
!15447 = !DILocation(line: 5614, column: 18, scope: !15424)
!15448 = !DILocation(line: 5610, column: 12, scope: !15262)
!15449 = !DILocation(line: 5615, column: 3, scope: !15424)
!15450 = !DILocation(line: 5616, column: 6, scope: !15262)
!15451 = !DILocation(line: 5617, column: 2, scope: !15235)
!15452 = !DILocation(line: 5618, column: 5, scope: !15210)
!15453 = !DILocation(line: 5494, column: 31, scope: !15205)
!15454 = !DILocation(line: 5494, column: 3, scope: !15205)
!15455 = distinct !{!15455, !15208, !15456}
!15456 = !DILocation(line: 5618, column: 5, scope: !15202)
!15457 = !DILocation(line: 5621, column: 7, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15121, file: !3, line: 5621, column: 7)
!15459 = !DILocation(line: 5621, column: 26, scope: !15458)
!15460 = !DILocation(line: 5621, column: 29, scope: !15458)
!15461 = !DILocation(line: 5621, column: 33, scope: !15458)
!15462 = !DILocation(line: 5621, column: 60, scope: !15458)
!15463 = !DILocation(line: 5621, column: 36, scope: !15458)
!15464 = !DILocation(line: 5621, column: 7, scope: !15121)
!15465 = !DILocation(line: 5622, column: 5, scope: !15458)
!15466 = !DILocation(line: 5624, column: 3, scope: !15121)
!15467 = !DILocation(line: 5625, column: 1, scope: !15121)
!15468 = distinct !DISubprogram(name: "reload_reg_free_p", scope: !3, file: !3, line: 4819, type: !15469, scopeLine: 4820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!15469 = !DISubroutineType(types: !15470)
!15470 = !{!2396, !7, !2396, !2049}
!15471 = !DILocalVariable(name: "regno", arg: 1, scope: !15468, file: !3, line: 4819, type: !7)
!15472 = !DILocation(line: 4819, column: 33, scope: !15468)
!15473 = !DILocalVariable(name: "opnum", arg: 2, scope: !15468, file: !3, line: 4819, type: !2396)
!15474 = !DILocation(line: 4819, column: 44, scope: !15468)
!15475 = !DILocalVariable(name: "type", arg: 3, scope: !15468, file: !3, line: 4819, type: !2049)
!15476 = !DILocation(line: 4819, column: 68, scope: !15468)
!15477 = !DILocalVariable(name: "i", scope: !15468, file: !3, line: 4821, type: !2396)
!15478 = !DILocation(line: 4821, column: 7, scope: !15468)
!15479 = !DILocation(line: 4824, column: 7, scope: !15480)
!15480 = distinct !DILexicalBlock(scope: !15468, file: !3, line: 4824, column: 7)
!15481 = !DILocation(line: 4825, column: 7, scope: !15480)
!15482 = !DILocation(line: 4825, column: 10, scope: !15480)
!15483 = !DILocation(line: 4824, column: 7, scope: !15468)
!15484 = !DILocation(line: 4826, column: 5, scope: !15480)
!15485 = !DILocation(line: 4828, column: 11, scope: !15468)
!15486 = !DILocation(line: 4828, column: 3, scope: !15468)
!15487 = !DILocation(line: 4832, column: 11, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4832, column: 11)
!15489 = distinct !DILexicalBlock(scope: !15468, file: !3, line: 4829, column: 5)
!15490 = !DILocation(line: 4833, column: 4, scope: !15488)
!15491 = !DILocation(line: 4833, column: 7, scope: !15488)
!15492 = !DILocation(line: 4834, column: 4, scope: !15488)
!15493 = !DILocation(line: 4834, column: 7, scope: !15488)
!15494 = !DILocation(line: 4835, column: 4, scope: !15488)
!15495 = !DILocation(line: 4835, column: 7, scope: !15488)
!15496 = !DILocation(line: 4832, column: 11, scope: !15489)
!15497 = !DILocation(line: 4836, column: 2, scope: !15488)
!15498 = !DILocation(line: 4838, column: 14, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4838, column: 7)
!15500 = !DILocation(line: 4838, column: 12, scope: !15499)
!15501 = !DILocation(line: 4838, column: 19, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15499, file: !3, line: 4838, column: 7)
!15503 = !DILocation(line: 4838, column: 23, scope: !15502)
!15504 = !DILocation(line: 4838, column: 21, scope: !15502)
!15505 = !DILocation(line: 4838, column: 7, scope: !15499)
!15506 = !DILocation(line: 4839, column: 6, scope: !15507)
!15507 = distinct !DILexicalBlock(scope: !15502, file: !3, line: 4839, column: 6)
!15508 = !DILocation(line: 4840, column: 6, scope: !15507)
!15509 = !DILocation(line: 4840, column: 9, scope: !15507)
!15510 = !DILocation(line: 4841, column: 6, scope: !15507)
!15511 = !DILocation(line: 4841, column: 9, scope: !15507)
!15512 = !DILocation(line: 4842, column: 6, scope: !15507)
!15513 = !DILocation(line: 4842, column: 9, scope: !15507)
!15514 = !DILocation(line: 4843, column: 6, scope: !15507)
!15515 = !DILocation(line: 4843, column: 9, scope: !15507)
!15516 = !DILocation(line: 4844, column: 6, scope: !15507)
!15517 = !DILocation(line: 4844, column: 9, scope: !15507)
!15518 = !DILocation(line: 4839, column: 6, scope: !15502)
!15519 = !DILocation(line: 4845, column: 4, scope: !15507)
!15520 = !DILocation(line: 4838, column: 43, scope: !15502)
!15521 = !DILocation(line: 4838, column: 7, scope: !15502)
!15522 = distinct !{!15522, !15505, !15523}
!15523 = !DILocation(line: 4845, column: 11, scope: !15499)
!15524 = !DILocation(line: 4847, column: 7, scope: !15489)
!15525 = !DILocation(line: 4850, column: 11, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4850, column: 11)
!15527 = !DILocation(line: 4851, column: 4, scope: !15526)
!15528 = !DILocation(line: 4851, column: 7, scope: !15526)
!15529 = !DILocation(line: 4850, column: 11, scope: !15489)
!15530 = !DILocation(line: 4852, column: 2, scope: !15526)
!15531 = !DILocation(line: 4854, column: 11, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4854, column: 11)
!15533 = !DILocation(line: 4854, column: 11, scope: !15489)
!15534 = !DILocation(line: 4855, column: 2, scope: !15532)
!15535 = !DILocation(line: 4858, column: 14, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4858, column: 7)
!15537 = !DILocation(line: 4858, column: 12, scope: !15536)
!15538 = !DILocation(line: 4858, column: 19, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15536, file: !3, line: 4858, column: 7)
!15540 = !DILocation(line: 4858, column: 23, scope: !15539)
!15541 = !DILocation(line: 4858, column: 21, scope: !15539)
!15542 = !DILocation(line: 4858, column: 7, scope: !15536)
!15543 = !DILocation(line: 4859, column: 6, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15539, file: !3, line: 4859, column: 6)
!15545 = !DILocation(line: 4859, column: 6, scope: !15539)
!15546 = !DILocation(line: 4860, column: 4, scope: !15544)
!15547 = !DILocation(line: 4858, column: 43, scope: !15539)
!15548 = !DILocation(line: 4858, column: 7, scope: !15539)
!15549 = distinct !{!15549, !15542, !15550}
!15550 = !DILocation(line: 4860, column: 11, scope: !15536)
!15551 = !DILocation(line: 4863, column: 16, scope: !15552)
!15552 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4863, column: 7)
!15553 = !DILocation(line: 4863, column: 22, scope: !15552)
!15554 = !DILocation(line: 4863, column: 14, scope: !15552)
!15555 = !DILocation(line: 4863, column: 12, scope: !15552)
!15556 = !DILocation(line: 4863, column: 27, scope: !15557)
!15557 = distinct !DILexicalBlock(scope: !15552, file: !3, line: 4863, column: 7)
!15558 = !DILocation(line: 4863, column: 31, scope: !15557)
!15559 = !DILocation(line: 4863, column: 29, scope: !15557)
!15560 = !DILocation(line: 4863, column: 7, scope: !15552)
!15561 = !DILocation(line: 4864, column: 6, scope: !15562)
!15562 = distinct !DILexicalBlock(scope: !15557, file: !3, line: 4864, column: 6)
!15563 = !DILocation(line: 4865, column: 6, scope: !15562)
!15564 = !DILocation(line: 4865, column: 9, scope: !15562)
!15565 = !DILocation(line: 4864, column: 6, scope: !15557)
!15566 = !DILocation(line: 4866, column: 4, scope: !15562)
!15567 = !DILocation(line: 4863, column: 51, scope: !15557)
!15568 = !DILocation(line: 4863, column: 7, scope: !15557)
!15569 = distinct !{!15569, !15560, !15570}
!15570 = !DILocation(line: 4866, column: 11, scope: !15552)
!15571 = !DILocation(line: 4868, column: 7, scope: !15489)
!15572 = !DILocation(line: 4873, column: 11, scope: !15573)
!15573 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4873, column: 11)
!15574 = !DILocation(line: 4874, column: 4, scope: !15573)
!15575 = !DILocation(line: 4874, column: 7, scope: !15573)
!15576 = !DILocation(line: 4873, column: 11, scope: !15489)
!15577 = !DILocation(line: 4875, column: 2, scope: !15573)
!15578 = !DILocation(line: 4877, column: 14, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4877, column: 7)
!15580 = !DILocation(line: 4877, column: 12, scope: !15579)
!15581 = !DILocation(line: 4877, column: 19, scope: !15582)
!15582 = distinct !DILexicalBlock(scope: !15579, file: !3, line: 4877, column: 7)
!15583 = !DILocation(line: 4877, column: 23, scope: !15582)
!15584 = !DILocation(line: 4877, column: 21, scope: !15582)
!15585 = !DILocation(line: 4877, column: 7, scope: !15579)
!15586 = !DILocation(line: 4878, column: 6, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 4878, column: 6)
!15588 = !DILocation(line: 4878, column: 6, scope: !15582)
!15589 = !DILocation(line: 4879, column: 4, scope: !15587)
!15590 = !DILocation(line: 4877, column: 31, scope: !15582)
!15591 = !DILocation(line: 4877, column: 7, scope: !15582)
!15592 = distinct !{!15592, !15585, !15593}
!15593 = !DILocation(line: 4879, column: 11, scope: !15579)
!15594 = !DILocation(line: 4881, column: 7, scope: !15489)
!15595 = !DILocation(line: 4887, column: 11, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4887, column: 11)
!15597 = !DILocation(line: 4887, column: 11, scope: !15489)
!15598 = !DILocation(line: 4888, column: 2, scope: !15596)
!15599 = !DILocation(line: 4890, column: 14, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4890, column: 7)
!15601 = !DILocation(line: 4890, column: 12, scope: !15600)
!15602 = !DILocation(line: 4890, column: 19, scope: !15603)
!15603 = distinct !DILexicalBlock(scope: !15600, file: !3, line: 4890, column: 7)
!15604 = !DILocation(line: 4890, column: 23, scope: !15603)
!15605 = !DILocation(line: 4890, column: 21, scope: !15603)
!15606 = !DILocation(line: 4890, column: 7, scope: !15600)
!15607 = !DILocation(line: 4891, column: 6, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15603, file: !3, line: 4891, column: 6)
!15609 = !DILocation(line: 4891, column: 6, scope: !15603)
!15610 = !DILocation(line: 4892, column: 4, scope: !15608)
!15611 = !DILocation(line: 4890, column: 31, scope: !15603)
!15612 = !DILocation(line: 4890, column: 7, scope: !15603)
!15613 = distinct !{!15613, !15606, !15614}
!15614 = !DILocation(line: 4892, column: 11, scope: !15600)
!15615 = !DILocation(line: 4894, column: 7, scope: !15489)
!15616 = !DILocation(line: 4901, column: 11, scope: !15617)
!15617 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4901, column: 11)
!15618 = !DILocation(line: 4901, column: 11, scope: !15489)
!15619 = !DILocation(line: 4902, column: 2, scope: !15617)
!15620 = !DILocation(line: 4904, column: 14, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4904, column: 7)
!15622 = !DILocation(line: 4904, column: 12, scope: !15621)
!15623 = !DILocation(line: 4904, column: 19, scope: !15624)
!15624 = distinct !DILexicalBlock(scope: !15621, file: !3, line: 4904, column: 7)
!15625 = !DILocation(line: 4904, column: 24, scope: !15624)
!15626 = !DILocation(line: 4904, column: 21, scope: !15624)
!15627 = !DILocation(line: 4904, column: 7, scope: !15621)
!15628 = !DILocation(line: 4905, column: 6, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 4905, column: 6)
!15630 = !DILocation(line: 4905, column: 6, scope: !15624)
!15631 = !DILocation(line: 4906, column: 4, scope: !15629)
!15632 = !DILocation(line: 4904, column: 32, scope: !15624)
!15633 = !DILocation(line: 4904, column: 7, scope: !15624)
!15634 = distinct !{!15634, !15627, !15635}
!15635 = !DILocation(line: 4906, column: 11, scope: !15621)
!15636 = !DILocation(line: 4908, column: 7, scope: !15489)
!15637 = !DILocation(line: 4916, column: 11, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4916, column: 11)
!15639 = !DILocation(line: 4916, column: 11, scope: !15489)
!15640 = !DILocation(line: 4917, column: 2, scope: !15638)
!15641 = !DILocation(line: 4919, column: 14, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4919, column: 7)
!15643 = !DILocation(line: 4919, column: 12, scope: !15642)
!15644 = !DILocation(line: 4919, column: 19, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15642, file: !3, line: 4919, column: 7)
!15646 = !DILocation(line: 4919, column: 24, scope: !15645)
!15647 = !DILocation(line: 4919, column: 21, scope: !15645)
!15648 = !DILocation(line: 4919, column: 7, scope: !15642)
!15649 = !DILocation(line: 4920, column: 6, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15645, file: !3, line: 4920, column: 6)
!15651 = !DILocation(line: 4920, column: 6, scope: !15645)
!15652 = !DILocation(line: 4921, column: 4, scope: !15650)
!15653 = !DILocation(line: 4919, column: 32, scope: !15645)
!15654 = !DILocation(line: 4919, column: 7, scope: !15645)
!15655 = distinct !{!15655, !15648, !15656}
!15656 = !DILocation(line: 4921, column: 11, scope: !15642)
!15657 = !DILocation(line: 4923, column: 7, scope: !15489)
!15658 = !DILocation(line: 4926, column: 14, scope: !15659)
!15659 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4926, column: 7)
!15660 = !DILocation(line: 4926, column: 12, scope: !15659)
!15661 = !DILocation(line: 4926, column: 19, scope: !15662)
!15662 = distinct !DILexicalBlock(scope: !15659, file: !3, line: 4926, column: 7)
!15663 = !DILocation(line: 4926, column: 23, scope: !15662)
!15664 = !DILocation(line: 4926, column: 21, scope: !15662)
!15665 = !DILocation(line: 4926, column: 7, scope: !15659)
!15666 = !DILocation(line: 4927, column: 6, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15662, file: !3, line: 4927, column: 6)
!15668 = !DILocation(line: 4927, column: 6, scope: !15662)
!15669 = !DILocation(line: 4928, column: 4, scope: !15667)
!15670 = !DILocation(line: 4926, column: 43, scope: !15662)
!15671 = !DILocation(line: 4926, column: 7, scope: !15662)
!15672 = distinct !{!15672, !15665, !15673}
!15673 = !DILocation(line: 4928, column: 11, scope: !15659)
!15674 = !DILocation(line: 4930, column: 17, scope: !15489)
!15675 = !DILocation(line: 4931, column: 8, scope: !15489)
!15676 = !DILocation(line: 4931, column: 13, scope: !15489)
!15677 = !DILocation(line: 4931, column: 11, scope: !15489)
!15678 = !DILocation(line: 0, scope: !15489)
!15679 = !DILocation(line: 4930, column: 7, scope: !15489)
!15680 = !DILocation(line: 4934, column: 14, scope: !15681)
!15681 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4934, column: 7)
!15682 = !DILocation(line: 4934, column: 12, scope: !15681)
!15683 = !DILocation(line: 4934, column: 19, scope: !15684)
!15684 = distinct !DILexicalBlock(scope: !15681, file: !3, line: 4934, column: 7)
!15685 = !DILocation(line: 4934, column: 23, scope: !15684)
!15686 = !DILocation(line: 4934, column: 21, scope: !15684)
!15687 = !DILocation(line: 4934, column: 7, scope: !15681)
!15688 = !DILocation(line: 4935, column: 6, scope: !15689)
!15689 = distinct !DILexicalBlock(scope: !15684, file: !3, line: 4935, column: 6)
!15690 = !DILocation(line: 4935, column: 6, scope: !15684)
!15691 = !DILocation(line: 4936, column: 4, scope: !15689)
!15692 = !DILocation(line: 4934, column: 43, scope: !15684)
!15693 = !DILocation(line: 4934, column: 7, scope: !15684)
!15694 = distinct !{!15694, !15687, !15695}
!15695 = !DILocation(line: 4936, column: 11, scope: !15681)
!15696 = !DILocation(line: 4938, column: 16, scope: !15489)
!15697 = !DILocation(line: 4938, column: 15, scope: !15489)
!15698 = !DILocation(line: 4938, column: 7, scope: !15489)
!15699 = !DILocation(line: 4945, column: 11, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4945, column: 11)
!15701 = !DILocation(line: 4945, column: 11, scope: !15489)
!15702 = !DILocation(line: 4946, column: 2, scope: !15700)
!15703 = !DILocation(line: 4948, column: 14, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4948, column: 7)
!15705 = !DILocation(line: 4948, column: 12, scope: !15704)
!15706 = !DILocation(line: 4948, column: 19, scope: !15707)
!15707 = distinct !DILexicalBlock(scope: !15704, file: !3, line: 4948, column: 7)
!15708 = !DILocation(line: 4948, column: 23, scope: !15707)
!15709 = !DILocation(line: 4948, column: 21, scope: !15707)
!15710 = !DILocation(line: 4948, column: 7, scope: !15704)
!15711 = !DILocation(line: 4949, column: 6, scope: !15712)
!15712 = distinct !DILexicalBlock(scope: !15707, file: !3, line: 4949, column: 6)
!15713 = !DILocation(line: 4949, column: 6, scope: !15707)
!15714 = !DILocation(line: 4950, column: 4, scope: !15712)
!15715 = !DILocation(line: 4948, column: 43, scope: !15707)
!15716 = !DILocation(line: 4948, column: 7, scope: !15707)
!15717 = distinct !{!15717, !15710, !15718}
!15718 = !DILocation(line: 4950, column: 11, scope: !15704)
!15719 = !DILocation(line: 4952, column: 16, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4952, column: 7)
!15721 = !DILocation(line: 4952, column: 14, scope: !15720)
!15722 = !DILocation(line: 4952, column: 12, scope: !15720)
!15723 = !DILocation(line: 4952, column: 23, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15720, file: !3, line: 4952, column: 7)
!15725 = !DILocation(line: 4952, column: 27, scope: !15724)
!15726 = !DILocation(line: 4952, column: 25, scope: !15724)
!15727 = !DILocation(line: 4952, column: 7, scope: !15720)
!15728 = !DILocation(line: 4953, column: 6, scope: !15729)
!15729 = distinct !DILexicalBlock(scope: !15724, file: !3, line: 4953, column: 6)
!15730 = !DILocation(line: 4954, column: 6, scope: !15729)
!15731 = !DILocation(line: 4954, column: 9, scope: !15729)
!15732 = !DILocation(line: 4953, column: 6, scope: !15724)
!15733 = !DILocation(line: 4955, column: 4, scope: !15729)
!15734 = !DILocation(line: 4952, column: 47, scope: !15724)
!15735 = !DILocation(line: 4952, column: 7, scope: !15724)
!15736 = distinct !{!15736, !15727, !15737}
!15737 = !DILocation(line: 4955, column: 11, scope: !15720)
!15738 = !DILocation(line: 4957, column: 7, scope: !15489)
!15739 = !DILocation(line: 4960, column: 14, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 4960, column: 7)
!15741 = !DILocation(line: 4960, column: 12, scope: !15740)
!15742 = !DILocation(line: 4960, column: 19, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15740, file: !3, line: 4960, column: 7)
!15744 = !DILocation(line: 4960, column: 23, scope: !15743)
!15745 = !DILocation(line: 4960, column: 21, scope: !15743)
!15746 = !DILocation(line: 4960, column: 7, scope: !15740)
!15747 = !DILocation(line: 4961, column: 6, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15743, file: !3, line: 4961, column: 6)
!15749 = !DILocation(line: 4962, column: 6, scope: !15748)
!15750 = !DILocation(line: 4962, column: 9, scope: !15748)
!15751 = !DILocation(line: 4961, column: 6, scope: !15743)
!15752 = !DILocation(line: 4963, column: 4, scope: !15748)
!15753 = !DILocation(line: 4960, column: 43, scope: !15743)
!15754 = !DILocation(line: 4960, column: 7, scope: !15743)
!15755 = distinct !{!15755, !15746, !15756}
!15756 = !DILocation(line: 4963, column: 11, scope: !15740)
!15757 = !DILocation(line: 4965, column: 17, scope: !15489)
!15758 = !DILocation(line: 4966, column: 8, scope: !15489)
!15759 = !DILocation(line: 4966, column: 13, scope: !15489)
!15760 = !DILocation(line: 4966, column: 11, scope: !15489)
!15761 = !DILocation(line: 4965, column: 7, scope: !15489)
!15762 = !DILocation(line: 4969, column: 16, scope: !15489)
!15763 = !DILocation(line: 4969, column: 14, scope: !15489)
!15764 = !DILocation(line: 4969, column: 7, scope: !15489)
!15765 = !DILocation(line: 4972, column: 7, scope: !15489)
!15766 = !DILocation(line: 4973, column: 5, scope: !15489)
!15767 = !DILocation(line: 4975, column: 5, scope: !15468)
!15768 = !DILocation(line: 4977, column: 1, scope: !15468)
!15769 = distinct !DISubprogram(name: "do_input_reload", scope: !3, file: !3, line: 7572, type: !15770, scopeLine: 7573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!15770 = !DISubroutineType(types: !15771)
!15771 = !{null, !2365, !3550, !2396}
!15772 = !DILocalVariable(name: "chain", arg: 1, scope: !15769, file: !3, line: 7572, type: !2365)
!15773 = !DILocation(line: 7572, column: 37, scope: !15769)
!15774 = !DILocalVariable(name: "rl", arg: 2, scope: !15769, file: !3, line: 7572, type: !3550)
!15775 = !DILocation(line: 7572, column: 59, scope: !15769)
!15776 = !DILocalVariable(name: "j", arg: 3, scope: !15769, file: !3, line: 7572, type: !2396)
!15777 = !DILocation(line: 7572, column: 67, scope: !15769)
!15778 = !DILocalVariable(name: "insn", scope: !15769, file: !3, line: 7574, type: !2372)
!15779 = !DILocation(line: 7574, column: 7, scope: !15769)
!15780 = !DILocation(line: 7574, column: 14, scope: !15769)
!15781 = !DILocation(line: 7574, column: 21, scope: !15769)
!15782 = !DILocalVariable(name: "old", scope: !15769, file: !3, line: 7575, type: !2372)
!15783 = !DILocation(line: 7575, column: 7, scope: !15769)
!15784 = !DILocation(line: 7575, column: 14, scope: !15769)
!15785 = !DILocation(line: 7575, column: 18, scope: !15769)
!15786 = !DILocation(line: 7575, column: 21, scope: !15769)
!15787 = !DILocation(line: 7575, column: 24, scope: !15769)
!15788 = !DILocation(line: 7576, column: 9, scope: !15769)
!15789 = !DILocation(line: 7576, column: 13, scope: !15769)
!15790 = !DILocation(line: 7576, column: 22, scope: !15769)
!15791 = !DILocation(line: 7576, column: 26, scope: !15769)
!15792 = !DILocalVariable(name: "reg_rtx", scope: !15769, file: !3, line: 7577, type: !2372)
!15793 = !DILocation(line: 7577, column: 7, scope: !15769)
!15794 = !DILocation(line: 7577, column: 17, scope: !15769)
!15795 = !DILocation(line: 7577, column: 21, scope: !15769)
!15796 = !DILocation(line: 7579, column: 7, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15769, file: !3, line: 7579, column: 7)
!15798 = !DILocation(line: 7579, column: 11, scope: !15797)
!15799 = !DILocation(line: 7579, column: 14, scope: !15797)
!15800 = !DILocation(line: 7579, column: 7, scope: !15769)
!15801 = !DILocalVariable(name: "mode", scope: !15802, file: !3, line: 7581, type: !5)
!15802 = distinct !DILexicalBlock(scope: !15797, file: !3, line: 7580, column: 5)
!15803 = !DILocation(line: 7581, column: 25, scope: !15802)
!15804 = !DILocation(line: 7615, column: 14, scope: !15802)
!15805 = !DILocation(line: 7615, column: 12, scope: !15802)
!15806 = !DILocation(line: 7616, column: 11, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15802, file: !3, line: 7616, column: 11)
!15808 = !DILocation(line: 7616, column: 16, scope: !15807)
!15809 = !DILocation(line: 7616, column: 11, scope: !15802)
!15810 = !DILocation(line: 7617, column: 9, scope: !15807)
!15811 = !DILocation(line: 7617, column: 13, scope: !15807)
!15812 = !DILocation(line: 7617, column: 7, scope: !15807)
!15813 = !DILocation(line: 7617, column: 2, scope: !15807)
!15814 = !DILocation(line: 7622, column: 11, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15802, file: !3, line: 7622, column: 11)
!15816 = !DILocation(line: 7622, column: 33, scope: !15815)
!15817 = !DILocation(line: 7622, column: 30, scope: !15815)
!15818 = !DILocation(line: 7622, column: 11, scope: !15802)
!15819 = !DILocation(line: 7623, column: 40, scope: !15815)
!15820 = !DILocation(line: 7623, column: 49, scope: !15815)
!15821 = !DILocation(line: 7623, column: 12, scope: !15815)
!15822 = !DILocation(line: 7623, column: 10, scope: !15815)
!15823 = !DILocation(line: 7623, column: 2, scope: !15815)
!15824 = !DILocation(line: 7624, column: 5, scope: !15802)
!15825 = !DILocation(line: 7625, column: 33, scope: !15769)
!15826 = !DILocation(line: 7625, column: 28, scope: !15769)
!15827 = !DILocation(line: 7625, column: 3, scope: !15769)
!15828 = !DILocation(line: 7625, column: 31, scope: !15769)
!15829 = !DILocation(line: 7627, column: 7, scope: !15830)
!15830 = distinct !DILexicalBlock(scope: !15769, file: !3, line: 7627, column: 7)
!15831 = !DILocation(line: 7627, column: 11, scope: !15830)
!15832 = !DILocation(line: 7630, column: 7, scope: !15830)
!15833 = !DILocation(line: 7630, column: 30, scope: !15830)
!15834 = !DILocation(line: 7630, column: 13, scope: !15830)
!15835 = !DILocation(line: 7630, column: 33, scope: !15830)
!15836 = !DILocation(line: 7630, column: 37, scope: !15830)
!15837 = !DILocation(line: 7630, column: 41, scope: !15830)
!15838 = !DILocation(line: 7630, column: 45, scope: !15830)
!15839 = !DILocation(line: 7630, column: 50, scope: !15830)
!15840 = !DILocation(line: 7630, column: 54, scope: !15830)
!15841 = !DILocation(line: 7631, column: 7, scope: !15830)
!15842 = !DILocation(line: 7631, column: 25, scope: !15830)
!15843 = !DILocation(line: 7631, column: 34, scope: !15830)
!15844 = !DILocation(line: 7631, column: 12, scope: !15830)
!15845 = !DILocation(line: 7632, column: 7, scope: !15830)
!15846 = !DILocation(line: 7632, column: 10, scope: !15830)
!15847 = !DILocation(line: 7632, column: 18, scope: !15830)
!15848 = !DILocation(line: 7627, column: 7, scope: !15769)
!15849 = !DILocation(line: 7633, column: 30, scope: !15830)
!15850 = !DILocation(line: 7633, column: 43, scope: !15830)
!15851 = !DILocation(line: 7633, column: 41, scope: !15830)
!15852 = !DILocation(line: 7633, column: 46, scope: !15830)
!15853 = !DILocation(line: 7633, column: 51, scope: !15830)
!15854 = !DILocation(line: 7633, column: 5, scope: !15830)
!15855 = !DILocation(line: 7638, column: 7, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15769, file: !3, line: 7638, column: 7)
!15857 = !DILocation(line: 7638, column: 16, scope: !15856)
!15858 = !DILocation(line: 7638, column: 36, scope: !15856)
!15859 = !DILocation(line: 7638, column: 19, scope: !15856)
!15860 = !DILocation(line: 7638, column: 39, scope: !15856)
!15861 = !DILocation(line: 7638, column: 42, scope: !15856)
!15862 = !DILocation(line: 7638, column: 46, scope: !15856)
!15863 = !DILocation(line: 7639, column: 7, scope: !15856)
!15864 = !DILocation(line: 7639, column: 10, scope: !15856)
!15865 = !DILocation(line: 7640, column: 7, scope: !15856)
!15866 = !DILocation(line: 7640, column: 10, scope: !15856)
!15867 = !DILocation(line: 7641, column: 7, scope: !15856)
!15868 = !DILocation(line: 7641, column: 29, scope: !15856)
!15869 = !DILocation(line: 7641, column: 10, scope: !15856)
!15870 = !DILocation(line: 7641, column: 32, scope: !15856)
!15871 = !DILocation(line: 7642, column: 7, scope: !15856)
!15872 = !DILocation(line: 7642, column: 10, scope: !15856)
!15873 = !DILocation(line: 7638, column: 7, scope: !15769)
!15874 = !DILocation(line: 7643, column: 14, scope: !15856)
!15875 = !DILocation(line: 7643, column: 69, scope: !15856)
!15876 = !DILocation(line: 7643, column: 50, scope: !15856)
!15877 = !DILocation(line: 7643, column: 28, scope: !15856)
!15878 = !DILocation(line: 7643, column: 5, scope: !15856)
!15879 = !DILocation(line: 7643, column: 9, scope: !15856)
!15880 = !DILocation(line: 7643, column: 12, scope: !15856)
!15881 = !DILocation(line: 7649, column: 7, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15769, file: !3, line: 7649, column: 7)
!15883 = !DILocation(line: 7650, column: 7, scope: !15882)
!15884 = !DILocation(line: 7650, column: 28, scope: !15882)
!15885 = !DILocation(line: 7650, column: 11, scope: !15882)
!15886 = !DILocation(line: 7650, column: 31, scope: !15882)
!15887 = !DILocation(line: 7650, column: 53, scope: !15882)
!15888 = !DILocation(line: 7650, column: 34, scope: !15882)
!15889 = !DILocation(line: 7651, column: 7, scope: !15882)
!15890 = !DILocation(line: 7651, column: 10, scope: !15882)
!15891 = !DILocation(line: 7652, column: 7, scope: !15882)
!15892 = !DILocation(line: 7652, column: 10, scope: !15882)
!15893 = !DILocation(line: 7653, column: 7, scope: !15882)
!15894 = !DILocation(line: 7653, column: 26, scope: !15882)
!15895 = !DILocation(line: 7653, column: 10, scope: !15882)
!15896 = !DILocation(line: 7653, column: 43, scope: !15882)
!15897 = !DILocation(line: 7663, column: 7, scope: !15882)
!15898 = !DILocation(line: 7663, column: 26, scope: !15882)
!15899 = !DILocation(line: 7663, column: 52, scope: !15882)
!15900 = !DILocation(line: 7663, column: 32, scope: !15882)
!15901 = !DILocation(line: 7663, column: 11, scope: !15882)
!15902 = !DILocation(line: 7664, column: 4, scope: !15882)
!15903 = !DILocation(line: 7664, column: 40, scope: !15882)
!15904 = !DILocation(line: 7664, column: 20, scope: !15882)
!15905 = !DILocation(line: 7664, column: 58, scope: !15882)
!15906 = !DILocation(line: 7664, column: 62, scope: !15882)
!15907 = !DILocation(line: 7664, column: 7, scope: !15882)
!15908 = !DILocation(line: 7649, column: 7, scope: !15769)
!15909 = !DILocation(line: 7665, column: 27, scope: !15882)
!15910 = !DILocation(line: 7665, column: 33, scope: !15882)
!15911 = !DILocation(line: 7665, column: 36, scope: !15882)
!15912 = !DILocation(line: 7665, column: 53, scope: !15882)
!15913 = !DILocation(line: 7665, column: 5, scope: !15882)
!15914 = !DILocation(line: 7666, column: 1, scope: !15769)
!15915 = distinct !DISubprogram(name: "do_output_reload", scope: !3, file: !3, line: 7673, type: !15770, scopeLine: 7674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!15916 = !DILocalVariable(name: "chain", arg: 1, scope: !15915, file: !3, line: 7673, type: !2365)
!15917 = !DILocation(line: 7673, column: 38, scope: !15915)
!15918 = !DILocalVariable(name: "rl", arg: 2, scope: !15915, file: !3, line: 7673, type: !3550)
!15919 = !DILocation(line: 7673, column: 60, scope: !15915)
!15920 = !DILocalVariable(name: "j", arg: 3, scope: !15915, file: !3, line: 7673, type: !2396)
!15921 = !DILocation(line: 7673, column: 68, scope: !15915)
!15922 = !DILocalVariable(name: "note", scope: !15915, file: !3, line: 7675, type: !2372)
!15923 = !DILocation(line: 7675, column: 7, scope: !15915)
!15924 = !DILocalVariable(name: "old", scope: !15915, file: !3, line: 7675, type: !2372)
!15925 = !DILocation(line: 7675, column: 13, scope: !15915)
!15926 = !DILocalVariable(name: "insn", scope: !15915, file: !3, line: 7676, type: !2372)
!15927 = !DILocation(line: 7676, column: 7, scope: !15915)
!15928 = !DILocation(line: 7676, column: 14, scope: !15915)
!15929 = !DILocation(line: 7676, column: 21, scope: !15915)
!15930 = !DILocalVariable(name: "pseudo", scope: !15915, file: !3, line: 7680, type: !2372)
!15931 = !DILocation(line: 7680, column: 7, scope: !15915)
!15932 = !DILocation(line: 7680, column: 16, scope: !15915)
!15933 = !DILocation(line: 7680, column: 20, scope: !15915)
!15934 = !DILocalVariable(name: "reg_rtx", scope: !15915, file: !3, line: 7681, type: !2372)
!15935 = !DILocation(line: 7681, column: 7, scope: !15915)
!15936 = !DILocation(line: 7681, column: 17, scope: !15915)
!15937 = !DILocation(line: 7681, column: 21, scope: !15915)
!15938 = !DILocation(line: 7683, column: 7, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15915, file: !3, line: 7683, column: 7)
!15940 = !DILocation(line: 7683, column: 11, scope: !15939)
!15941 = !DILocation(line: 7683, column: 15, scope: !15939)
!15942 = !DILocation(line: 7683, column: 18, scope: !15939)
!15943 = !DILocation(line: 7683, column: 7, scope: !15915)
!15944 = !DILocalVariable(name: "mode", scope: !15945, file: !3, line: 7685, type: !5)
!15945 = distinct !DILexicalBlock(scope: !15939, file: !3, line: 7684, column: 5)
!15946 = !DILocation(line: 7685, column: 25, scope: !15945)
!15947 = !DILocation(line: 7689, column: 14, scope: !15945)
!15948 = !DILocation(line: 7689, column: 12, scope: !15945)
!15949 = !DILocation(line: 7690, column: 11, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15945, file: !3, line: 7690, column: 11)
!15951 = !DILocation(line: 7690, column: 16, scope: !15950)
!15952 = !DILocation(line: 7690, column: 11, scope: !15945)
!15953 = !DILocation(line: 7693, column: 23, scope: !15954)
!15954 = distinct !DILexicalBlock(scope: !15955, file: !3, line: 7693, column: 8)
!15955 = distinct !DILexicalBlock(scope: !15950, file: !3, line: 7691, column: 2)
!15956 = !DILocation(line: 7693, column: 8, scope: !15954)
!15957 = !DILocation(line: 7693, column: 39, scope: !15954)
!15958 = !DILocation(line: 7693, column: 8, scope: !15955)
!15959 = !DILocation(line: 7695, column: 6, scope: !15954)
!15960 = !DILocation(line: 7696, column: 19, scope: !15955)
!15961 = !DILocation(line: 7696, column: 4, scope: !15955)
!15962 = !DILocation(line: 7698, column: 11, scope: !15955)
!15963 = !DILocation(line: 7698, column: 9, scope: !15955)
!15964 = !DILocation(line: 7699, column: 27, scope: !15955)
!15965 = !DILocation(line: 7699, column: 33, scope: !15955)
!15966 = !DILocation(line: 7699, column: 14, scope: !15955)
!15967 = !DILocation(line: 7699, column: 4, scope: !15955)
!15968 = !DILocation(line: 7699, column: 8, scope: !15955)
!15969 = !DILocation(line: 7699, column: 12, scope: !15955)
!15970 = !DILocation(line: 7700, column: 2, scope: !15955)
!15971 = !DILocation(line: 7701, column: 11, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15945, file: !3, line: 7701, column: 11)
!15973 = !DILocation(line: 7701, column: 33, scope: !15972)
!15974 = !DILocation(line: 7701, column: 30, scope: !15972)
!15975 = !DILocation(line: 7701, column: 11, scope: !15945)
!15976 = !DILocation(line: 7702, column: 40, scope: !15972)
!15977 = !DILocation(line: 7702, column: 49, scope: !15972)
!15978 = !DILocation(line: 7702, column: 12, scope: !15972)
!15979 = !DILocation(line: 7702, column: 10, scope: !15972)
!15980 = !DILocation(line: 7702, column: 2, scope: !15972)
!15981 = !DILocation(line: 7703, column: 5, scope: !15945)
!15982 = !DILocation(line: 7704, column: 34, scope: !15915)
!15983 = !DILocation(line: 7704, column: 29, scope: !15915)
!15984 = !DILocation(line: 7704, column: 3, scope: !15915)
!15985 = !DILocation(line: 7704, column: 32, scope: !15915)
!15986 = !DILocation(line: 7706, column: 7, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15915, file: !3, line: 7706, column: 7)
!15988 = !DILocation(line: 7707, column: 7, scope: !15987)
!15989 = !DILocation(line: 7707, column: 10, scope: !15987)
!15990 = !DILocation(line: 7708, column: 7, scope: !15987)
!15991 = !DILocation(line: 7708, column: 10, scope: !15987)
!15992 = !DILocation(line: 7709, column: 7, scope: !15987)
!15993 = !DILocation(line: 7709, column: 25, scope: !15987)
!15994 = !DILocation(line: 7709, column: 29, scope: !15987)
!15995 = !DILocation(line: 7709, column: 37, scope: !15987)
!15996 = !DILocation(line: 7709, column: 12, scope: !15987)
!15997 = !DILocation(line: 7710, column: 7, scope: !15987)
!15998 = !DILocation(line: 7710, column: 10, scope: !15987)
!15999 = !DILocation(line: 7710, column: 25, scope: !15987)
!16000 = !DILocation(line: 7711, column: 7, scope: !15987)
!16001 = !DILocation(line: 7711, column: 10, scope: !15987)
!16002 = !DILocation(line: 7711, column: 30, scope: !15987)
!16003 = !DILocation(line: 7706, column: 7, scope: !15915)
!16004 = !DILocalVariable(name: "pseudo_no", scope: !16005, file: !3, line: 7713, type: !2396)
!16005 = distinct !DILexicalBlock(scope: !15987, file: !3, line: 7712, column: 5)
!16006 = !DILocation(line: 7713, column: 11, scope: !16005)
!16007 = !DILocation(line: 7713, column: 23, scope: !16005)
!16008 = !DILocalVariable(name: "last_regno", scope: !16005, file: !3, line: 7714, type: !2396)
!16009 = !DILocation(line: 7714, column: 11, scope: !16005)
!16010 = !DILocation(line: 7714, column: 24, scope: !16005)
!16011 = !DILocation(line: 7719, column: 11, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !16005, file: !3, line: 7719, column: 11)
!16013 = !DILocation(line: 7720, column: 4, scope: !16012)
!16014 = !DILocation(line: 7720, column: 29, scope: !16012)
!16015 = !DILocation(line: 7720, column: 7, scope: !16012)
!16016 = !DILocation(line: 7720, column: 44, scope: !16012)
!16017 = !DILocation(line: 7720, column: 41, scope: !16012)
!16018 = !DILocation(line: 7721, column: 4, scope: !16012)
!16019 = !DILocation(line: 7721, column: 23, scope: !16012)
!16020 = !DILocation(line: 7721, column: 7, scope: !16012)
!16021 = !DILocation(line: 7722, column: 4, scope: !16012)
!16022 = !DILocation(line: 7722, column: 20, scope: !16012)
!16023 = !DILocation(line: 7722, column: 48, scope: !16012)
!16024 = !DILocation(line: 7722, column: 28, scope: !16012)
!16025 = !DILocation(line: 7722, column: 7, scope: !16012)
!16026 = !DILocation(line: 7719, column: 11, scope: !16005)
!16027 = !DILocation(line: 7723, column: 24, scope: !16012)
!16028 = !DILocation(line: 7723, column: 30, scope: !16012)
!16029 = !DILocation(line: 7723, column: 33, scope: !16012)
!16030 = !DILocation(line: 7723, column: 45, scope: !16012)
!16031 = !DILocation(line: 7723, column: 2, scope: !16012)
!16032 = !DILocation(line: 7724, column: 5, scope: !16005)
!16033 = !DILocation(line: 7726, column: 9, scope: !15915)
!16034 = !DILocation(line: 7726, column: 13, scope: !15915)
!16035 = !DILocation(line: 7726, column: 7, scope: !15915)
!16036 = !DILocation(line: 7727, column: 7, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !15915, file: !3, line: 7727, column: 7)
!16038 = !DILocation(line: 7727, column: 11, scope: !16037)
!16039 = !DILocation(line: 7728, column: 7, scope: !16037)
!16040 = !DILocation(line: 7728, column: 10, scope: !16037)
!16041 = !DILocation(line: 7728, column: 18, scope: !16037)
!16042 = !DILocation(line: 7729, column: 7, scope: !16037)
!16043 = !DILocation(line: 7729, column: 23, scope: !16037)
!16044 = !DILocation(line: 7729, column: 28, scope: !16037)
!16045 = !DILocation(line: 7729, column: 10, scope: !16037)
!16046 = !DILocation(line: 7727, column: 7, scope: !15915)
!16047 = !DILocation(line: 7730, column: 5, scope: !16037)
!16048 = !DILocation(line: 7735, column: 8, scope: !16049)
!16049 = distinct !DILexicalBlock(scope: !15915, file: !3, line: 7735, column: 7)
!16050 = !DILocation(line: 7735, column: 20, scope: !16049)
!16051 = !DILocation(line: 7735, column: 23, scope: !16049)
!16052 = !DILocation(line: 7735, column: 38, scope: !16049)
!16053 = !DILocation(line: 7736, column: 7, scope: !16049)
!16054 = !DILocation(line: 7736, column: 33, scope: !16049)
!16055 = !DILocation(line: 7736, column: 51, scope: !16049)
!16056 = !DILocation(line: 7736, column: 18, scope: !16049)
!16057 = !DILocation(line: 7736, column: 16, scope: !16049)
!16058 = !DILocation(line: 7736, column: 57, scope: !16049)
!16059 = !DILocation(line: 7735, column: 7, scope: !15915)
!16060 = !DILocation(line: 7738, column: 24, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16049, file: !3, line: 7737, column: 5)
!16062 = !DILocation(line: 7738, column: 7, scope: !16061)
!16063 = !DILocation(line: 7738, column: 22, scope: !16061)
!16064 = !DILocation(line: 7739, column: 7, scope: !16061)
!16065 = !DILocation(line: 7742, column: 12, scope: !16066)
!16066 = distinct !DILexicalBlock(scope: !16049, file: !3, line: 7742, column: 12)
!16067 = !DILocation(line: 7742, column: 27, scope: !16066)
!16068 = !DILocation(line: 7743, column: 5, scope: !16066)
!16069 = !DILocation(line: 7743, column: 8, scope: !16066)
!16070 = !DILocation(line: 7744, column: 5, scope: !16066)
!16071 = !DILocation(line: 7744, column: 36, scope: !16066)
!16072 = !DILocation(line: 7745, column: 8, scope: !16066)
!16073 = !DILocation(line: 7744, column: 21, scope: !16066)
!16074 = !DILocation(line: 7744, column: 19, scope: !16066)
!16075 = !DILocation(line: 7744, column: 10, scope: !16066)
!16076 = !DILocation(line: 7742, column: 12, scope: !16049)
!16077 = !DILocation(line: 7747, column: 44, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16066, file: !3, line: 7746, column: 5)
!16079 = !DILocation(line: 7747, column: 60, scope: !16078)
!16080 = !DILocation(line: 7747, column: 24, scope: !16078)
!16081 = !DILocation(line: 7747, column: 7, scope: !16078)
!16082 = !DILocation(line: 7747, column: 22, scope: !16078)
!16083 = !DILocation(line: 7748, column: 7, scope: !16078)
!16084 = !DILocation(line: 7750, column: 12, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16066, file: !3, line: 7750, column: 12)
!16086 = !DILocation(line: 7750, column: 27, scope: !16085)
!16087 = !DILocation(line: 7750, column: 12, scope: !16066)
!16088 = !DILocation(line: 7753, column: 5, scope: !16085)
!16089 = !DILocation(line: 7756, column: 3, scope: !15915)
!16090 = !DILocation(line: 7758, column: 29, scope: !15915)
!16091 = !DILocation(line: 7758, column: 42, scope: !15915)
!16092 = !DILocation(line: 7758, column: 40, scope: !15915)
!16093 = !DILocation(line: 7758, column: 45, scope: !15915)
!16094 = !DILocation(line: 7758, column: 3, scope: !15915)
!16095 = !DILocation(line: 7759, column: 1, scope: !15915)
!16096 = distinct !DISubprogram(name: "reload_reg_reaches_end_p", scope: !3, file: !3, line: 4988, type: !15469, scopeLine: 4989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!16097 = !DILocalVariable(name: "regno", arg: 1, scope: !16096, file: !3, line: 4988, type: !7)
!16098 = !DILocation(line: 4988, column: 40, scope: !16096)
!16099 = !DILocalVariable(name: "opnum", arg: 2, scope: !16096, file: !3, line: 4988, type: !2396)
!16100 = !DILocation(line: 4988, column: 51, scope: !16096)
!16101 = !DILocalVariable(name: "type", arg: 3, scope: !16096, file: !3, line: 4988, type: !2049)
!16102 = !DILocation(line: 4988, column: 75, scope: !16096)
!16103 = !DILocalVariable(name: "i", scope: !16096, file: !3, line: 4990, type: !2396)
!16104 = !DILocation(line: 4990, column: 7, scope: !16096)
!16105 = !DILocation(line: 4992, column: 11, scope: !16096)
!16106 = !DILocation(line: 4992, column: 3, scope: !16096)
!16107 = !DILocation(line: 4997, column: 7, scope: !16108)
!16108 = distinct !DILexicalBlock(scope: !16096, file: !3, line: 4993, column: 5)
!16109 = !DILocation(line: 5008, column: 14, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16108, file: !3, line: 5008, column: 7)
!16111 = !DILocation(line: 5008, column: 12, scope: !16110)
!16112 = !DILocation(line: 5008, column: 19, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !16110, file: !3, line: 5008, column: 7)
!16114 = !DILocation(line: 5008, column: 23, scope: !16113)
!16115 = !DILocation(line: 5008, column: 21, scope: !16113)
!16116 = !DILocation(line: 5008, column: 7, scope: !16110)
!16117 = !DILocation(line: 5009, column: 6, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !16113, file: !3, line: 5009, column: 6)
!16119 = !DILocation(line: 5010, column: 6, scope: !16118)
!16120 = !DILocation(line: 5010, column: 9, scope: !16118)
!16121 = !DILocation(line: 5011, column: 6, scope: !16118)
!16122 = !DILocation(line: 5011, column: 9, scope: !16118)
!16123 = !DILocation(line: 5012, column: 6, scope: !16118)
!16124 = !DILocation(line: 5012, column: 9, scope: !16118)
!16125 = !DILocation(line: 5013, column: 6, scope: !16118)
!16126 = !DILocation(line: 5013, column: 9, scope: !16118)
!16127 = !DILocation(line: 5014, column: 6, scope: !16118)
!16128 = !DILocation(line: 5014, column: 9, scope: !16118)
!16129 = !DILocation(line: 5009, column: 6, scope: !16113)
!16130 = !DILocation(line: 5015, column: 4, scope: !16118)
!16131 = !DILocation(line: 5008, column: 43, scope: !16113)
!16132 = !DILocation(line: 5008, column: 7, scope: !16113)
!16133 = distinct !{!16133, !16116, !16134}
!16134 = !DILocation(line: 5015, column: 11, scope: !16110)
!16135 = !DILocation(line: 5017, column: 17, scope: !16108)
!16136 = !DILocation(line: 5018, column: 8, scope: !16108)
!16137 = !DILocation(line: 5018, column: 13, scope: !16108)
!16138 = !DILocation(line: 5019, column: 8, scope: !16108)
!16139 = !DILocation(line: 5019, column: 13, scope: !16108)
!16140 = !DILocation(line: 5020, column: 8, scope: !16108)
!16141 = !DILocation(line: 5020, column: 13, scope: !16108)
!16142 = !DILocation(line: 5020, column: 11, scope: !16108)
!16143 = !DILocation(line: 0, scope: !16108)
!16144 = !DILocation(line: 5017, column: 7, scope: !16108)
!16145 = !DILocation(line: 5029, column: 16, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16108, file: !3, line: 5029, column: 7)
!16147 = !DILocation(line: 5029, column: 14, scope: !16146)
!16148 = !DILocation(line: 5029, column: 12, scope: !16146)
!16149 = !DILocation(line: 5029, column: 23, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16146, file: !3, line: 5029, column: 7)
!16151 = !DILocation(line: 5029, column: 27, scope: !16150)
!16152 = !DILocation(line: 5029, column: 25, scope: !16150)
!16153 = !DILocation(line: 5029, column: 7, scope: !16146)
!16154 = !DILocation(line: 5030, column: 6, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16150, file: !3, line: 5030, column: 6)
!16156 = !DILocation(line: 5030, column: 6, scope: !16150)
!16157 = !DILocation(line: 5031, column: 4, scope: !16155)
!16158 = !DILocation(line: 5029, column: 47, scope: !16150)
!16159 = !DILocation(line: 5029, column: 7, scope: !16150)
!16160 = distinct !{!16160, !16153, !16161}
!16161 = !DILocation(line: 5031, column: 11, scope: !16146)
!16162 = !DILocation(line: 5033, column: 16, scope: !16163)
!16163 = distinct !DILexicalBlock(scope: !16108, file: !3, line: 5033, column: 7)
!16164 = !DILocation(line: 5033, column: 22, scope: !16163)
!16165 = !DILocation(line: 5033, column: 14, scope: !16163)
!16166 = !DILocation(line: 5033, column: 12, scope: !16163)
!16167 = !DILocation(line: 5033, column: 27, scope: !16168)
!16168 = distinct !DILexicalBlock(scope: !16163, file: !3, line: 5033, column: 7)
!16169 = !DILocation(line: 5033, column: 31, scope: !16168)
!16170 = !DILocation(line: 5033, column: 29, scope: !16168)
!16171 = !DILocation(line: 5033, column: 7, scope: !16163)
!16172 = !DILocation(line: 5034, column: 6, scope: !16173)
!16173 = distinct !DILexicalBlock(scope: !16168, file: !3, line: 5034, column: 6)
!16174 = !DILocation(line: 5035, column: 6, scope: !16173)
!16175 = !DILocation(line: 5035, column: 9, scope: !16173)
!16176 = !DILocation(line: 5034, column: 6, scope: !16168)
!16177 = !DILocation(line: 5036, column: 4, scope: !16173)
!16178 = !DILocation(line: 5033, column: 51, scope: !16168)
!16179 = !DILocation(line: 5033, column: 7, scope: !16168)
!16180 = distinct !{!16180, !16171, !16181}
!16181 = !DILocation(line: 5036, column: 11, scope: !16163)
!16182 = !DILocation(line: 5038, column: 14, scope: !16183)
!16183 = distinct !DILexicalBlock(scope: !16108, file: !3, line: 5038, column: 7)
!16184 = !DILocation(line: 5038, column: 12, scope: !16183)
!16185 = !DILocation(line: 5038, column: 19, scope: !16186)
!16186 = distinct !DILexicalBlock(scope: !16183, file: !3, line: 5038, column: 7)
!16187 = !DILocation(line: 5038, column: 23, scope: !16186)
!16188 = !DILocation(line: 5038, column: 21, scope: !16186)
!16189 = !DILocation(line: 5038, column: 7, scope: !16183)
!16190 = !DILocation(line: 5039, column: 6, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16186, file: !3, line: 5039, column: 6)
!16192 = !DILocation(line: 5040, column: 6, scope: !16191)
!16193 = !DILocation(line: 5040, column: 9, scope: !16191)
!16194 = !DILocation(line: 5041, column: 6, scope: !16191)
!16195 = !DILocation(line: 5041, column: 9, scope: !16191)
!16196 = !DILocation(line: 5039, column: 6, scope: !16186)
!16197 = !DILocation(line: 5042, column: 4, scope: !16191)
!16198 = !DILocation(line: 5038, column: 43, scope: !16186)
!16199 = !DILocation(line: 5038, column: 7, scope: !16186)
!16200 = distinct !{!16200, !16189, !16201}
!16201 = !DILocation(line: 5042, column: 11, scope: !16183)
!16202 = !DILocation(line: 5044, column: 11, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !16108, file: !3, line: 5044, column: 11)
!16204 = !DILocation(line: 5044, column: 11, scope: !16108)
!16205 = !DILocation(line: 5045, column: 2, scope: !16203)
!16206 = !DILocation(line: 5047, column: 16, scope: !16108)
!16207 = !DILocation(line: 5048, column: 8, scope: !16108)
!16208 = !DILocation(line: 5048, column: 12, scope: !16108)
!16209 = !DILocation(line: 5049, column: 8, scope: !16108)
!16210 = !DILocation(line: 5049, column: 12, scope: !16108)
!16211 = !DILocation(line: 5049, column: 11, scope: !16108)
!16212 = !DILocation(line: 5047, column: 7, scope: !16108)
!16213 = !DILocation(line: 5057, column: 16, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !16108, file: !3, line: 5057, column: 7)
!16215 = !DILocation(line: 5057, column: 22, scope: !16214)
!16216 = !DILocation(line: 5057, column: 14, scope: !16214)
!16217 = !DILocation(line: 5057, column: 12, scope: !16214)
!16218 = !DILocation(line: 5057, column: 27, scope: !16219)
!16219 = distinct !DILexicalBlock(scope: !16214, file: !3, line: 5057, column: 7)
!16220 = !DILocation(line: 5057, column: 31, scope: !16219)
!16221 = !DILocation(line: 5057, column: 29, scope: !16219)
!16222 = !DILocation(line: 5057, column: 7, scope: !16214)
!16223 = !DILocation(line: 5058, column: 6, scope: !16224)
!16224 = distinct !DILexicalBlock(scope: !16219, file: !3, line: 5058, column: 6)
!16225 = !DILocation(line: 5059, column: 6, scope: !16224)
!16226 = !DILocation(line: 5059, column: 9, scope: !16224)
!16227 = !DILocation(line: 5060, column: 6, scope: !16224)
!16228 = !DILocation(line: 5060, column: 9, scope: !16224)
!16229 = !DILocation(line: 5058, column: 6, scope: !16219)
!16230 = !DILocation(line: 5061, column: 4, scope: !16224)
!16231 = !DILocation(line: 5057, column: 51, scope: !16219)
!16232 = !DILocation(line: 5057, column: 7, scope: !16219)
!16233 = distinct !{!16233, !16222, !16234}
!16234 = !DILocation(line: 5061, column: 11, scope: !16214)
!16235 = !DILocation(line: 5068, column: 14, scope: !16236)
!16236 = distinct !DILexicalBlock(scope: !16108, file: !3, line: 5068, column: 7)
!16237 = !DILocation(line: 5068, column: 12, scope: !16236)
!16238 = !DILocation(line: 5068, column: 19, scope: !16239)
!16239 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 5068, column: 7)
!16240 = !DILocation(line: 5068, column: 23, scope: !16239)
!16241 = !DILocation(line: 5068, column: 21, scope: !16239)
!16242 = !DILocation(line: 5068, column: 7, scope: !16236)
!16243 = !DILocation(line: 5069, column: 6, scope: !16244)
!16244 = distinct !DILexicalBlock(scope: !16239, file: !3, line: 5069, column: 6)
!16245 = !DILocation(line: 5070, column: 6, scope: !16244)
!16246 = !DILocation(line: 5070, column: 9, scope: !16244)
!16247 = !DILocation(line: 5071, column: 6, scope: !16244)
!16248 = !DILocation(line: 5071, column: 9, scope: !16244)
!16249 = !DILocation(line: 5069, column: 6, scope: !16239)
!16250 = !DILocation(line: 5072, column: 4, scope: !16244)
!16251 = !DILocation(line: 5068, column: 43, scope: !16239)
!16252 = !DILocation(line: 5068, column: 7, scope: !16239)
!16253 = distinct !{!16253, !16242, !16254}
!16254 = !DILocation(line: 5072, column: 11, scope: !16236)
!16255 = !DILocation(line: 5074, column: 16, scope: !16108)
!16256 = !DILocation(line: 5074, column: 15, scope: !16108)
!16257 = !DILocation(line: 5074, column: 7, scope: !16108)
!16258 = !DILocation(line: 5077, column: 14, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16108, file: !3, line: 5077, column: 7)
!16260 = !DILocation(line: 5077, column: 12, scope: !16259)
!16261 = !DILocation(line: 5077, column: 19, scope: !16262)
!16262 = distinct !DILexicalBlock(scope: !16259, file: !3, line: 5077, column: 7)
!16263 = !DILocation(line: 5077, column: 23, scope: !16262)
!16264 = !DILocation(line: 5077, column: 21, scope: !16262)
!16265 = !DILocation(line: 5077, column: 7, scope: !16259)
!16266 = !DILocation(line: 5078, column: 6, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16262, file: !3, line: 5078, column: 6)
!16268 = !DILocation(line: 5079, column: 6, scope: !16267)
!16269 = !DILocation(line: 5079, column: 9, scope: !16267)
!16270 = !DILocation(line: 5080, column: 6, scope: !16267)
!16271 = !DILocation(line: 5080, column: 9, scope: !16267)
!16272 = !DILocation(line: 5078, column: 6, scope: !16262)
!16273 = !DILocation(line: 5081, column: 4, scope: !16267)
!16274 = !DILocation(line: 5077, column: 43, scope: !16262)
!16275 = !DILocation(line: 5077, column: 7, scope: !16262)
!16276 = distinct !{!16276, !16265, !16277}
!16277 = !DILocation(line: 5081, column: 11, scope: !16259)
!16278 = !DILocation(line: 5083, column: 16, scope: !16108)
!16279 = !DILocation(line: 5084, column: 8, scope: !16108)
!16280 = !DILocation(line: 5084, column: 12, scope: !16108)
!16281 = !DILocation(line: 5085, column: 8, scope: !16108)
!16282 = !DILocation(line: 5085, column: 12, scope: !16108)
!16283 = !DILocation(line: 5085, column: 11, scope: !16108)
!16284 = !DILocation(line: 5083, column: 7, scope: !16108)
!16285 = !DILocation(line: 5091, column: 15, scope: !16108)
!16286 = !DILocation(line: 5091, column: 13, scope: !16108)
!16287 = !DILocation(line: 5091, column: 7, scope: !16108)
!16288 = !DILocation(line: 5102, column: 14, scope: !16289)
!16289 = distinct !DILexicalBlock(scope: !16108, file: !3, line: 5102, column: 7)
!16290 = !DILocation(line: 5102, column: 12, scope: !16289)
!16291 = !DILocation(line: 5102, column: 19, scope: !16292)
!16292 = distinct !DILexicalBlock(scope: !16289, file: !3, line: 5102, column: 7)
!16293 = !DILocation(line: 5102, column: 23, scope: !16292)
!16294 = !DILocation(line: 5102, column: 21, scope: !16292)
!16295 = !DILocation(line: 5102, column: 7, scope: !16289)
!16296 = !DILocation(line: 5103, column: 6, scope: !16297)
!16297 = distinct !DILexicalBlock(scope: !16292, file: !3, line: 5103, column: 6)
!16298 = !DILocation(line: 5104, column: 6, scope: !16297)
!16299 = !DILocation(line: 5104, column: 9, scope: !16297)
!16300 = !DILocation(line: 5103, column: 6, scope: !16292)
!16301 = !DILocation(line: 5105, column: 4, scope: !16297)
!16302 = !DILocation(line: 5102, column: 31, scope: !16292)
!16303 = !DILocation(line: 5102, column: 7, scope: !16292)
!16304 = distinct !{!16304, !16295, !16305}
!16305 = !DILocation(line: 5105, column: 11, scope: !16289)
!16306 = !DILocation(line: 5107, column: 7, scope: !16108)
!16307 = !DILocation(line: 5110, column: 7, scope: !16108)
!16308 = !DILocation(line: 5111, column: 5, scope: !16108)
!16309 = !DILocation(line: 5113, column: 5, scope: !16096)
!16310 = !DILocation(line: 5115, column: 1, scope: !16096)
!16311 = distinct !DISubprogram(name: "reload_regs_reach_end_p", scope: !3, file: !3, line: 5121, type: !16312, scopeLine: 5123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!16312 = !DISubroutineType(types: !16313)
!16313 = !{!2603, !7, !2396, !2396, !2049}
!16314 = !DILocalVariable(name: "regno", arg: 1, scope: !16311, file: !3, line: 5121, type: !7)
!16315 = !DILocation(line: 5121, column: 39, scope: !16311)
!16316 = !DILocalVariable(name: "nregs", arg: 2, scope: !16311, file: !3, line: 5121, type: !2396)
!16317 = !DILocation(line: 5121, column: 50, scope: !16311)
!16318 = !DILocalVariable(name: "opnum", arg: 3, scope: !16311, file: !3, line: 5122, type: !2396)
!16319 = !DILocation(line: 5122, column: 9, scope: !16311)
!16320 = !DILocalVariable(name: "type", arg: 4, scope: !16311, file: !3, line: 5122, type: !2049)
!16321 = !DILocation(line: 5122, column: 33, scope: !16311)
!16322 = !DILocalVariable(name: "i", scope: !16311, file: !3, line: 5124, type: !2396)
!16323 = !DILocation(line: 5124, column: 7, scope: !16311)
!16324 = !DILocation(line: 5126, column: 10, scope: !16325)
!16325 = distinct !DILexicalBlock(scope: !16311, file: !3, line: 5126, column: 3)
!16326 = !DILocation(line: 5126, column: 8, scope: !16325)
!16327 = !DILocation(line: 5126, column: 15, scope: !16328)
!16328 = distinct !DILexicalBlock(scope: !16325, file: !3, line: 5126, column: 3)
!16329 = !DILocation(line: 5126, column: 19, scope: !16328)
!16330 = !DILocation(line: 5126, column: 17, scope: !16328)
!16331 = !DILocation(line: 5126, column: 3, scope: !16325)
!16332 = !DILocation(line: 5127, column: 36, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16328, file: !3, line: 5127, column: 9)
!16334 = !DILocation(line: 5127, column: 44, scope: !16333)
!16335 = !DILocation(line: 5127, column: 42, scope: !16333)
!16336 = !DILocation(line: 5127, column: 47, scope: !16333)
!16337 = !DILocation(line: 5127, column: 54, scope: !16333)
!16338 = !DILocation(line: 5127, column: 10, scope: !16333)
!16339 = !DILocation(line: 5127, column: 9, scope: !16328)
!16340 = !DILocation(line: 5128, column: 7, scope: !16333)
!16341 = !DILocation(line: 5127, column: 58, scope: !16333)
!16342 = !DILocation(line: 5126, column: 27, scope: !16328)
!16343 = !DILocation(line: 5126, column: 3, scope: !16328)
!16344 = distinct !{!16344, !16331, !16345}
!16345 = !DILocation(line: 5128, column: 14, scope: !16325)
!16346 = !DILocation(line: 5129, column: 3, scope: !16311)
!16347 = !DILocation(line: 5130, column: 1, scope: !16311)
!16348 = distinct !DISubprogram(name: "inherit_piecemeal_p", scope: !3, file: !3, line: 7768, type: !16349, scopeLine: 7771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!16349 = !DISubroutineType(types: !16350)
!16350 = !{!2603, !2396, !2396, !5}
!16351 = !DILocalVariable(name: "dest", arg: 1, scope: !16348, file: !3, line: 7768, type: !2396)
!16352 = !DILocation(line: 7768, column: 26, scope: !16348)
!16353 = !DILocalVariable(name: "src", arg: 2, scope: !16348, file: !3, line: 7769, type: !2396)
!16354 = !DILocation(line: 7769, column: 12, scope: !16348)
!16355 = !DILocalVariable(name: "mode", arg: 3, scope: !16348, file: !3, line: 7770, type: !5)
!16356 = !DILocation(line: 7770, column: 26, scope: !16348)
!16357 = !DILocation(line: 7773, column: 12, scope: !16348)
!16358 = !DILocation(line: 7774, column: 4, scope: !16348)
!16359 = !DILocation(line: 7774, column: 8, scope: !16348)
!16360 = !DILocation(line: 7774, column: 7, scope: !16348)
!16361 = !DILocation(line: 0, scope: !16348)
!16362 = !DILocation(line: 7773, column: 10, scope: !16348)
!16363 = !DILocation(line: 7773, column: 3, scope: !16348)
!16364 = distinct !DISubprogram(name: "emit_input_reload_insns", scope: !3, file: !3, line: 6900, type: !16365, scopeLine: 6902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!16365 = !DISubroutineType(types: !16366)
!16366 = !{null, !2365, !3550, !2372, !2396}
!16367 = !DILocalVariable(name: "chain", arg: 1, scope: !16364, file: !3, line: 6900, type: !2365)
!16368 = !DILocation(line: 6900, column: 45, scope: !16364)
!16369 = !DILocalVariable(name: "rl", arg: 2, scope: !16364, file: !3, line: 6900, type: !3550)
!16370 = !DILocation(line: 6900, column: 67, scope: !16364)
!16371 = !DILocalVariable(name: "old", arg: 3, scope: !16364, file: !3, line: 6901, type: !2372)
!16372 = !DILocation(line: 6901, column: 9, scope: !16364)
!16373 = !DILocalVariable(name: "j", arg: 4, scope: !16364, file: !3, line: 6901, type: !2396)
!16374 = !DILocation(line: 6901, column: 18, scope: !16364)
!16375 = !DILocalVariable(name: "insn", scope: !16364, file: !3, line: 6903, type: !2372)
!16376 = !DILocation(line: 6903, column: 7, scope: !16364)
!16377 = !DILocation(line: 6903, column: 14, scope: !16364)
!16378 = !DILocation(line: 6903, column: 21, scope: !16364)
!16379 = !DILocalVariable(name: "reloadreg", scope: !16364, file: !3, line: 6904, type: !2372)
!16380 = !DILocation(line: 6904, column: 7, scope: !16364)
!16381 = !DILocalVariable(name: "oldequiv_reg", scope: !16364, file: !3, line: 6905, type: !2372)
!16382 = !DILocation(line: 6905, column: 7, scope: !16364)
!16383 = !DILocalVariable(name: "oldequiv", scope: !16364, file: !3, line: 6906, type: !2372)
!16384 = !DILocation(line: 6906, column: 7, scope: !16364)
!16385 = !DILocalVariable(name: "special", scope: !16364, file: !3, line: 6907, type: !2396)
!16386 = !DILocation(line: 6907, column: 7, scope: !16364)
!16387 = !DILocalVariable(name: "mode", scope: !16364, file: !3, line: 6908, type: !5)
!16388 = !DILocation(line: 6908, column: 21, scope: !16364)
!16389 = !DILocalVariable(name: "where", scope: !16364, file: !3, line: 6909, type: !3579)
!16390 = !DILocation(line: 6909, column: 8, scope: !16364)
!16391 = !DILocation(line: 6915, column: 26, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 6915, column: 7)
!16393 = !DILocation(line: 6915, column: 7, scope: !16392)
!16394 = !DILocation(line: 6916, column: 7, scope: !16392)
!16395 = !DILocation(line: 6916, column: 10, scope: !16392)
!16396 = !DILocation(line: 6915, column: 7, scope: !16364)
!16397 = !DILocation(line: 6918, column: 18, scope: !16398)
!16398 = distinct !DILexicalBlock(scope: !16392, file: !3, line: 6917, column: 5)
!16399 = !DILocation(line: 6918, column: 16, scope: !16398)
!16400 = !DILocation(line: 6919, column: 13, scope: !16398)
!16401 = !DILocation(line: 6919, column: 17, scope: !16398)
!16402 = !DILocation(line: 6919, column: 11, scope: !16398)
!16403 = !DILocation(line: 6920, column: 5, scope: !16398)
!16404 = !DILocation(line: 6921, column: 7, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 6921, column: 7)
!16406 = !DILocation(line: 6921, column: 16, scope: !16405)
!16407 = !DILocation(line: 6921, column: 7, scope: !16364)
!16408 = !DILocation(line: 6922, column: 16, scope: !16405)
!16409 = !DILocation(line: 6922, column: 14, scope: !16405)
!16410 = !DILocation(line: 6922, column: 5, scope: !16405)
!16411 = !DILocation(line: 6923, column: 12, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16405, file: !3, line: 6923, column: 12)
!16413 = !DILocation(line: 6923, column: 12, scope: !16405)
!16414 = !DILocation(line: 6924, column: 20, scope: !16412)
!16415 = !DILocation(line: 6924, column: 18, scope: !16412)
!16416 = !DILocation(line: 6924, column: 5, scope: !16412)
!16417 = !DILocation(line: 6925, column: 12, scope: !16418)
!16418 = distinct !DILexicalBlock(scope: !16412, file: !3, line: 6925, column: 12)
!16419 = !DILocation(line: 6925, column: 32, scope: !16418)
!16420 = !DILocation(line: 6925, column: 12, scope: !16412)
!16421 = !DILocation(line: 6926, column: 20, scope: !16418)
!16422 = !DILocation(line: 6926, column: 18, scope: !16418)
!16423 = !DILocation(line: 6926, column: 5, scope: !16418)
!16424 = !DILocation(line: 6928, column: 40, scope: !16364)
!16425 = !DILocation(line: 6928, column: 15, scope: !16364)
!16426 = !DILocation(line: 6928, column: 13, scope: !16364)
!16427 = !DILocation(line: 6929, column: 10, scope: !16364)
!16428 = !DILocation(line: 6929, column: 8, scope: !16364)
!16429 = !DILocation(line: 6935, column: 7, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 6935, column: 7)
!16431 = !DILocation(line: 6935, column: 16, scope: !16430)
!16432 = !DILocation(line: 6935, column: 19, scope: !16430)
!16433 = !DILocation(line: 6936, column: 7, scope: !16430)
!16434 = !DILocation(line: 6936, column: 10, scope: !16430)
!16435 = !DILocation(line: 6936, column: 27, scope: !16430)
!16436 = !DILocation(line: 6937, column: 7, scope: !16430)
!16437 = !DILocation(line: 6937, column: 26, scope: !16430)
!16438 = !DILocation(line: 6937, column: 10, scope: !16430)
!16439 = !DILocation(line: 6938, column: 7, scope: !16430)
!16440 = !DILocation(line: 6938, column: 10, scope: !16430)
!16441 = !DILocation(line: 6939, column: 7, scope: !16430)
!16442 = !DILocation(line: 6939, column: 26, scope: !16430)
!16443 = !DILocation(line: 6939, column: 52, scope: !16430)
!16444 = !DILocation(line: 6939, column: 32, scope: !16430)
!16445 = !DILocation(line: 6939, column: 11, scope: !16430)
!16446 = !DILocation(line: 6940, column: 4, scope: !16430)
!16447 = !DILocation(line: 6940, column: 40, scope: !16430)
!16448 = !DILocation(line: 6940, column: 20, scope: !16430)
!16449 = !DILocation(line: 6941, column: 6, scope: !16430)
!16450 = !DILocation(line: 6941, column: 10, scope: !16430)
!16451 = !DILocation(line: 6940, column: 7, scope: !16430)
!16452 = !DILocation(line: 6935, column: 7, scope: !16364)
!16453 = !DILocation(line: 6942, column: 27, scope: !16430)
!16454 = !DILocation(line: 6942, column: 33, scope: !16430)
!16455 = !DILocation(line: 6942, column: 36, scope: !16430)
!16456 = !DILocation(line: 6942, column: 54, scope: !16430)
!16457 = !DILocation(line: 6942, column: 5, scope: !16430)
!16458 = !DILocation(line: 6947, column: 3, scope: !16364)
!16459 = !DILocation(line: 6947, column: 10, scope: !16364)
!16460 = !DILocation(line: 6947, column: 30, scope: !16364)
!16461 = !DILocation(line: 6947, column: 40, scope: !16364)
!16462 = !DILocation(line: 6947, column: 43, scope: !16364)
!16463 = !DILocation(line: 6947, column: 66, scope: !16364)
!16464 = !DILocation(line: 6947, column: 63, scope: !16364)
!16465 = !DILocation(line: 0, scope: !16364)
!16466 = !DILocation(line: 6948, column: 16, scope: !16364)
!16467 = !DILocation(line: 6948, column: 14, scope: !16364)
!16468 = distinct !{!16468, !16458, !16466}
!16469 = !DILocation(line: 6949, column: 7, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 6949, column: 7)
!16471 = !DILocation(line: 6949, column: 27, scope: !16470)
!16472 = !DILocation(line: 6950, column: 7, scope: !16470)
!16473 = !DILocation(line: 6950, column: 10, scope: !16470)
!16474 = !DILocation(line: 6950, column: 18, scope: !16470)
!16475 = !DILocation(line: 6950, column: 15, scope: !16470)
!16476 = !DILocation(line: 6949, column: 7, scope: !16364)
!16477 = !DILocation(line: 6951, column: 36, scope: !16470)
!16478 = !DILocation(line: 6951, column: 42, scope: !16470)
!16479 = !DILocation(line: 6951, column: 16, scope: !16470)
!16480 = !DILocation(line: 6951, column: 14, scope: !16470)
!16481 = !DILocation(line: 6951, column: 5, scope: !16470)
!16482 = !DILocation(line: 6954, column: 11, scope: !16364)
!16483 = !DILocation(line: 6954, column: 15, scope: !16364)
!16484 = !DILocation(line: 6954, column: 3, scope: !16364)
!16485 = !DILocation(line: 6957, column: 13, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 6955, column: 5)
!16487 = !DILocation(line: 6958, column: 7, scope: !16486)
!16488 = !DILocation(line: 6960, column: 35, scope: !16486)
!16489 = !DILocation(line: 6960, column: 39, scope: !16486)
!16490 = !DILocation(line: 6960, column: 16, scope: !16486)
!16491 = !DILocation(line: 6960, column: 13, scope: !16486)
!16492 = !DILocation(line: 6961, column: 7, scope: !16486)
!16493 = !DILocation(line: 6963, column: 43, scope: !16486)
!16494 = !DILocation(line: 6963, column: 47, scope: !16486)
!16495 = !DILocation(line: 6963, column: 16, scope: !16486)
!16496 = !DILocation(line: 6963, column: 13, scope: !16486)
!16497 = !DILocation(line: 6964, column: 7, scope: !16486)
!16498 = !DILocation(line: 6966, column: 45, scope: !16486)
!16499 = !DILocation(line: 6966, column: 49, scope: !16486)
!16500 = !DILocation(line: 6966, column: 16, scope: !16486)
!16501 = !DILocation(line: 6966, column: 13, scope: !16486)
!16502 = !DILocation(line: 6967, column: 7, scope: !16486)
!16503 = !DILocation(line: 6969, column: 44, scope: !16486)
!16504 = !DILocation(line: 6969, column: 48, scope: !16486)
!16505 = !DILocation(line: 6969, column: 16, scope: !16486)
!16506 = !DILocation(line: 6969, column: 13, scope: !16486)
!16507 = !DILocation(line: 6970, column: 7, scope: !16486)
!16508 = !DILocation(line: 6972, column: 45, scope: !16486)
!16509 = !DILocation(line: 6972, column: 49, scope: !16486)
!16510 = !DILocation(line: 6972, column: 16, scope: !16486)
!16511 = !DILocation(line: 6972, column: 13, scope: !16486)
!16512 = !DILocation(line: 6973, column: 7, scope: !16486)
!16513 = !DILocation(line: 6975, column: 13, scope: !16486)
!16514 = !DILocation(line: 6976, column: 7, scope: !16486)
!16515 = !DILocation(line: 6978, column: 13, scope: !16486)
!16516 = !DILocation(line: 6979, column: 7, scope: !16486)
!16517 = !DILocation(line: 6981, column: 13, scope: !16486)
!16518 = !DILocation(line: 6982, column: 7, scope: !16486)
!16519 = !DILocation(line: 6984, column: 7, scope: !16486)
!16520 = !DILocation(line: 6985, column: 5, scope: !16486)
!16521 = !DILocation(line: 6987, column: 22, scope: !16364)
!16522 = !DILocation(line: 6987, column: 21, scope: !16364)
!16523 = !DILocation(line: 6987, column: 3, scope: !16364)
!16524 = !DILocation(line: 6990, column: 7, scope: !16525)
!16525 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 6990, column: 7)
!16526 = !DILocation(line: 6990, column: 11, scope: !16525)
!16527 = !DILocation(line: 6990, column: 15, scope: !16525)
!16528 = !DILocation(line: 6990, column: 20, scope: !16525)
!16529 = !DILocation(line: 6990, column: 24, scope: !16525)
!16530 = !DILocation(line: 6990, column: 7, scope: !16364)
!16531 = !DILocation(line: 6995, column: 7, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16525, file: !3, line: 6991, column: 5)
!16533 = !DILocation(line: 6997, column: 28, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 6997, column: 11)
!16535 = !DILocation(line: 6997, column: 11, scope: !16534)
!16536 = !DILocation(line: 6997, column: 11, scope: !16532)
!16537 = !DILocation(line: 6998, column: 13, scope: !16534)
!16538 = !DILocation(line: 6998, column: 11, scope: !16534)
!16539 = !DILocation(line: 6998, column: 2, scope: !16534)
!16540 = !DILocation(line: 7000, column: 13, scope: !16532)
!16541 = !DILocation(line: 7000, column: 11, scope: !16532)
!16542 = !DILocation(line: 7002, column: 11, scope: !16543)
!16543 = distinct !DILexicalBlock(scope: !16532, file: !3, line: 7002, column: 11)
!16544 = !DILocation(line: 7002, column: 20, scope: !16543)
!16545 = !DILocation(line: 7002, column: 23, scope: !16543)
!16546 = !DILocation(line: 7003, column: 4, scope: !16543)
!16547 = !DILocation(line: 7003, column: 7, scope: !16543)
!16548 = !DILocation(line: 7003, column: 24, scope: !16543)
!16549 = !DILocation(line: 7004, column: 4, scope: !16543)
!16550 = !DILocation(line: 7004, column: 23, scope: !16543)
!16551 = !DILocation(line: 7004, column: 7, scope: !16543)
!16552 = !DILocation(line: 7005, column: 4, scope: !16543)
!16553 = !DILocation(line: 7005, column: 7, scope: !16543)
!16554 = !DILocation(line: 7006, column: 4, scope: !16543)
!16555 = !DILocation(line: 7006, column: 23, scope: !16543)
!16556 = !DILocation(line: 7007, column: 29, scope: !16543)
!16557 = !DILocation(line: 7007, column: 9, scope: !16543)
!16558 = !DILocation(line: 7006, column: 8, scope: !16543)
!16559 = !DILocation(line: 7008, column: 8, scope: !16543)
!16560 = !DILocation(line: 7008, column: 44, scope: !16543)
!16561 = !DILocation(line: 7008, column: 24, scope: !16543)
!16562 = !DILocation(line: 7009, column: 10, scope: !16543)
!16563 = !DILocation(line: 7008, column: 11, scope: !16543)
!16564 = !DILocation(line: 7002, column: 11, scope: !16532)
!16565 = !DILocation(line: 7010, column: 24, scope: !16543)
!16566 = !DILocation(line: 7010, column: 30, scope: !16543)
!16567 = !DILocation(line: 7010, column: 33, scope: !16543)
!16568 = !DILocation(line: 7010, column: 51, scope: !16543)
!16569 = !DILocation(line: 7010, column: 2, scope: !16543)
!16570 = !DILocation(line: 7013, column: 15, scope: !16532)
!16571 = !DILocation(line: 7016, column: 20, scope: !16532)
!16572 = !DILocation(line: 7016, column: 31, scope: !16532)
!16573 = !DILocation(line: 7016, column: 41, scope: !16532)
!16574 = !DILocation(line: 7016, column: 45, scope: !16532)
!16575 = !DILocation(line: 7017, column: 6, scope: !16532)
!16576 = !DILocation(line: 7017, column: 10, scope: !16532)
!16577 = !DILocation(line: 7016, column: 4, scope: !16532)
!16578 = !DILocation(line: 7015, column: 27, scope: !16532)
!16579 = !DILocation(line: 7015, column: 7, scope: !16532)
!16580 = !DILocation(line: 7016, column: 2, scope: !16532)
!16581 = !DILocation(line: 7018, column: 5, scope: !16532)
!16582 = !DILocation(line: 7024, column: 12, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16525, file: !3, line: 7024, column: 12)
!16584 = !DILocation(line: 7024, column: 21, scope: !16583)
!16585 = !DILocation(line: 7024, column: 24, scope: !16583)
!16586 = !DILocation(line: 7025, column: 5, scope: !16583)
!16587 = !DILocation(line: 7025, column: 8, scope: !16583)
!16588 = !DILocation(line: 7025, column: 20, scope: !16583)
!16589 = !DILocation(line: 7026, column: 5, scope: !16583)
!16590 = !DILocation(line: 7026, column: 23, scope: !16583)
!16591 = !DILocation(line: 7026, column: 29, scope: !16583)
!16592 = !DILocation(line: 7026, column: 8, scope: !16583)
!16593 = !DILocation(line: 7029, column: 5, scope: !16583)
!16594 = !DILocation(line: 7029, column: 35, scope: !16583)
!16595 = !DILocation(line: 7029, column: 10, scope: !16583)
!16596 = !DILocation(line: 7030, column: 5, scope: !16583)
!16597 = !DILocation(line: 7030, column: 26, scope: !16583)
!16598 = !DILocation(line: 7030, column: 45, scope: !16583)
!16599 = !DILocation(line: 7030, column: 49, scope: !16583)
!16600 = !DILocation(line: 7030, column: 55, scope: !16583)
!16601 = !DILocation(line: 7030, column: 59, scope: !16583)
!16602 = !DILocation(line: 7031, column: 5, scope: !16583)
!16603 = !DILocation(line: 7031, column: 9, scope: !16583)
!16604 = !DILocation(line: 7031, column: 22, scope: !16583)
!16605 = !DILocation(line: 7031, column: 27, scope: !16583)
!16606 = !DILocation(line: 7031, column: 31, scope: !16583)
!16607 = !DILocation(line: 7031, column: 36, scope: !16583)
!16608 = !DILocation(line: 7030, column: 8, scope: !16583)
!16609 = !DILocation(line: 7024, column: 12, scope: !16525)
!16610 = !DILocalVariable(name: "temp", scope: !16611, file: !3, line: 7033, type: !2372)
!16611 = distinct !DILexicalBlock(scope: !16583, file: !3, line: 7032, column: 5)
!16612 = !DILocation(line: 7033, column: 11, scope: !16611)
!16613 = !DILocation(line: 7033, column: 18, scope: !16611)
!16614 = !DILocation(line: 7034, column: 7, scope: !16611)
!16615 = !DILocation(line: 7034, column: 14, scope: !16611)
!16616 = !DILocation(line: 7034, column: 19, scope: !16611)
!16617 = !DILocation(line: 7034, column: 23, scope: !16611)
!16618 = !DILocation(line: 7034, column: 37, scope: !16611)
!16619 = !DILocation(line: 7034, column: 40, scope: !16611)
!16620 = !DILocation(line: 0, scope: !16611)
!16621 = !DILocation(line: 7035, column: 9, scope: !16611)
!16622 = !DILocation(line: 7035, column: 7, scope: !16611)
!16623 = distinct !{!16623, !16614, !16621}
!16624 = !DILocation(line: 7036, column: 11, scope: !16625)
!16625 = distinct !DILexicalBlock(scope: !16611, file: !3, line: 7036, column: 11)
!16626 = !DILocation(line: 7037, column: 4, scope: !16625)
!16627 = !DILocation(line: 7037, column: 7, scope: !16625)
!16628 = !DILocation(line: 7038, column: 4, scope: !16625)
!16629 = !DILocation(line: 7038, column: 7, scope: !16625)
!16630 = !DILocation(line: 7038, column: 33, scope: !16625)
!16631 = !DILocation(line: 7039, column: 4, scope: !16625)
!16632 = !DILocation(line: 7039, column: 7, scope: !16625)
!16633 = !DILocation(line: 7039, column: 36, scope: !16625)
!16634 = !DILocation(line: 7039, column: 33, scope: !16625)
!16635 = !DILocation(line: 7041, column: 4, scope: !16625)
!16636 = !DILocation(line: 7041, column: 22, scope: !16625)
!16637 = !DILocation(line: 7041, column: 7, scope: !16625)
!16638 = !DILocation(line: 7041, column: 38, scope: !16625)
!16639 = !DILocation(line: 7044, column: 4, scope: !16625)
!16640 = !DILocation(line: 7044, column: 26, scope: !16625)
!16641 = !DILocation(line: 7044, column: 42, scope: !16625)
!16642 = !DILocation(line: 7044, column: 7, scope: !16625)
!16643 = !DILocation(line: 7044, column: 50, scope: !16625)
!16644 = !DILocation(line: 7036, column: 11, scope: !16611)
!16645 = !DILocalVariable(name: "old", scope: !16646, file: !3, line: 7046, type: !2372)
!16646 = distinct !DILexicalBlock(scope: !16625, file: !3, line: 7045, column: 2)
!16647 = !DILocation(line: 7046, column: 8, scope: !16646)
!16648 = !DILocation(line: 7046, column: 14, scope: !16646)
!16649 = !DILocation(line: 7048, column: 32, scope: !16646)
!16650 = !DILocation(line: 7048, column: 4, scope: !16646)
!16651 = !DILocation(line: 7048, column: 30, scope: !16646)
!16652 = !DILocation(line: 7051, column: 18, scope: !16646)
!16653 = !DILocation(line: 7051, column: 4, scope: !16646)
!16654 = !DILocation(line: 7052, column: 8, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16646, file: !3, line: 7052, column: 8)
!16656 = !DILocation(line: 7052, column: 8, scope: !16646)
!16657 = !DILocation(line: 7058, column: 12, scope: !16658)
!16658 = distinct !DILexicalBlock(scope: !16659, file: !3, line: 7058, column: 12)
!16659 = distinct !DILexicalBlock(scope: !16655, file: !3, line: 7053, column: 6)
!16660 = !DILocation(line: 7059, column: 5, scope: !16658)
!16661 = !DILocation(line: 7059, column: 8, scope: !16658)
!16662 = !DILocation(line: 7059, column: 41, scope: !16658)
!16663 = !DILocation(line: 7058, column: 12, scope: !16659)
!16664 = !DILocation(line: 7061, column: 21, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 7060, column: 3)
!16666 = !DILocation(line: 7061, column: 5, scope: !16665)
!16667 = !DILocation(line: 7061, column: 55, scope: !16665)
!16668 = !DILocation(line: 7062, column: 25, scope: !16665)
!16669 = !DILocation(line: 7062, column: 5, scope: !16665)
!16670 = !DILocation(line: 7062, column: 59, scope: !16665)
!16671 = !DILocation(line: 7063, column: 3, scope: !16665)
!16672 = !DILocation(line: 7067, column: 12, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16659, file: !3, line: 7067, column: 12)
!16674 = !DILocation(line: 7067, column: 39, scope: !16673)
!16675 = !DILocation(line: 7068, column: 5, scope: !16673)
!16676 = !DILocation(line: 7068, column: 20, scope: !16673)
!16677 = !DILocation(line: 7068, column: 8, scope: !16673)
!16678 = !DILocation(line: 7068, column: 33, scope: !16673)
!16679 = !DILocation(line: 7067, column: 12, scope: !16659)
!16680 = !DILocation(line: 7070, column: 33, scope: !16681)
!16681 = distinct !DILexicalBlock(scope: !16673, file: !3, line: 7069, column: 3)
!16682 = !DILocation(line: 7070, column: 5, scope: !16681)
!16683 = !DILocation(line: 7070, column: 18, scope: !16681)
!16684 = !DILocation(line: 7070, column: 31, scope: !16681)
!16685 = !DILocation(line: 7071, column: 9, scope: !16686)
!16686 = distinct !DILexicalBlock(scope: !16681, file: !3, line: 7071, column: 9)
!16687 = !DILocation(line: 7071, column: 9, scope: !16681)
!16688 = !DILocation(line: 7073, column: 35, scope: !16686)
!16689 = !DILocation(line: 7073, column: 7, scope: !16686)
!16690 = !DILocation(line: 7074, column: 16, scope: !16681)
!16691 = !DILocation(line: 7074, column: 5, scope: !16681)
!16692 = !DILocation(line: 7075, column: 3, scope: !16681)
!16693 = !DILocation(line: 7076, column: 16, scope: !16659)
!16694 = !DILocation(line: 7079, column: 8, scope: !16659)
!16695 = !DILocation(line: 7079, column: 23, scope: !16659)
!16696 = !DILocation(line: 7079, column: 21, scope: !16659)
!16697 = !DILocation(line: 7079, column: 44, scope: !16659)
!16698 = !DILocation(line: 7079, column: 41, scope: !16659)
!16699 = !DILocation(line: 7080, column: 7, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16659, file: !3, line: 7080, column: 7)
!16701 = !DILocation(line: 7080, column: 7, scope: !16659)
!16702 = !DILocation(line: 7081, column: 18, scope: !16700)
!16703 = !DILocation(line: 7081, column: 34, scope: !16700)
!16704 = !DILocation(line: 7081, column: 39, scope: !16700)
!16705 = !DILocation(line: 7081, column: 5, scope: !16700)
!16706 = !DILocation(line: 7083, column: 5, scope: !16700)
!16707 = distinct !{!16707, !16694, !16708}
!16708 = !DILocation(line: 7083, column: 5, scope: !16659)
!16709 = !DILocation(line: 7084, column: 6, scope: !16659)
!16710 = !DILocation(line: 7087, column: 36, scope: !16711)
!16711 = distinct !DILexicalBlock(scope: !16655, file: !3, line: 7086, column: 6)
!16712 = !DILocation(line: 7087, column: 8, scope: !16711)
!16713 = !DILocation(line: 7087, column: 34, scope: !16711)
!16714 = !DILocation(line: 7089, column: 2, scope: !16646)
!16715 = !DILocation(line: 7090, column: 5, scope: !16611)
!16716 = !DILocation(line: 7105, column: 9, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 7105, column: 7)
!16718 = !DILocation(line: 7105, column: 17, scope: !16717)
!16719 = !DILocation(line: 7105, column: 20, scope: !16717)
!16720 = !DILocation(line: 7105, column: 24, scope: !16717)
!16721 = !DILocation(line: 7105, column: 44, scope: !16717)
!16722 = !DILocation(line: 7105, column: 7, scope: !16364)
!16723 = !DILocalVariable(name: "second_reload_reg", scope: !16724, file: !3, line: 7107, type: !2372)
!16724 = distinct !DILexicalBlock(scope: !16717, file: !3, line: 7106, column: 5)
!16725 = !DILocation(line: 7107, column: 11, scope: !16724)
!16726 = !DILocalVariable(name: "third_reload_reg", scope: !16724, file: !3, line: 7108, type: !2372)
!16727 = !DILocation(line: 7108, column: 11, scope: !16724)
!16728 = !DILocalVariable(name: "secondary_reload", scope: !16724, file: !3, line: 7109, type: !2396)
!16729 = !DILocation(line: 7109, column: 11, scope: !16724)
!16730 = !DILocation(line: 7109, column: 30, scope: !16724)
!16731 = !DILocation(line: 7109, column: 34, scope: !16724)
!16732 = !DILocalVariable(name: "real_oldequiv", scope: !16724, file: !3, line: 7110, type: !2372)
!16733 = !DILocation(line: 7110, column: 11, scope: !16724)
!16734 = !DILocation(line: 7110, column: 27, scope: !16724)
!16735 = !DILocalVariable(name: "real_old", scope: !16724, file: !3, line: 7111, type: !2372)
!16736 = !DILocation(line: 7111, column: 11, scope: !16724)
!16737 = !DILocation(line: 7111, column: 22, scope: !16724)
!16738 = !DILocalVariable(name: "tmp", scope: !16724, file: !3, line: 7112, type: !2372)
!16739 = !DILocation(line: 7112, column: 11, scope: !16724)
!16740 = !DILocalVariable(name: "icode", scope: !16724, file: !3, line: 7113, type: !557)
!16741 = !DILocation(line: 7113, column: 22, scope: !16724)
!16742 = !DILocalVariable(name: "tertiary_icode", scope: !16724, file: !3, line: 7114, type: !557)
!16743 = !DILocation(line: 7114, column: 22, scope: !16724)
!16744 = !DILocation(line: 7129, column: 13, scope: !16724)
!16745 = !DILocation(line: 7129, column: 11, scope: !16724)
!16746 = !DILocation(line: 7130, column: 11, scope: !16747)
!16747 = distinct !DILexicalBlock(scope: !16724, file: !3, line: 7130, column: 11)
!16748 = !DILocation(line: 7130, column: 26, scope: !16747)
!16749 = !DILocation(line: 7130, column: 11, scope: !16724)
!16750 = !DILocation(line: 7131, column: 8, scope: !16747)
!16751 = !DILocation(line: 7131, column: 6, scope: !16747)
!16752 = !DILocation(line: 7131, column: 2, scope: !16747)
!16753 = !DILocation(line: 7132, column: 11, scope: !16754)
!16754 = distinct !DILexicalBlock(scope: !16724, file: !3, line: 7132, column: 11)
!16755 = !DILocation(line: 7133, column: 4, scope: !16754)
!16756 = !DILocation(line: 7133, column: 7, scope: !16754)
!16757 = !DILocation(line: 7133, column: 19, scope: !16754)
!16758 = !DILocation(line: 7134, column: 4, scope: !16754)
!16759 = !DILocation(line: 7134, column: 8, scope: !16754)
!16760 = !DILocation(line: 7134, column: 29, scope: !16754)
!16761 = !DILocation(line: 7134, column: 42, scope: !16754)
!16762 = !DILocation(line: 7135, column: 8, scope: !16754)
!16763 = !DILocation(line: 7135, column: 11, scope: !16754)
!16764 = !DILocation(line: 7135, column: 30, scope: !16754)
!16765 = !DILocation(line: 7135, column: 43, scope: !16754)
!16766 = !DILocation(line: 7132, column: 11, scope: !16724)
!16767 = !DILocation(line: 7137, column: 10, scope: !16768)
!16768 = distinct !DILexicalBlock(scope: !16769, file: !3, line: 7137, column: 8)
!16769 = distinct !DILexicalBlock(scope: !16754, file: !3, line: 7136, column: 2)
!16770 = !DILocation(line: 7137, column: 24, scope: !16768)
!16771 = !DILocation(line: 7138, column: 8, scope: !16768)
!16772 = !DILocation(line: 7138, column: 11, scope: !16768)
!16773 = !DILocation(line: 7139, column: 8, scope: !16768)
!16774 = !DILocation(line: 7139, column: 11, scope: !16768)
!16775 = !DILocation(line: 7139, column: 31, scope: !16768)
!16776 = !DILocation(line: 7137, column: 8, scope: !16769)
!16777 = !DILocation(line: 7140, column: 22, scope: !16768)
!16778 = !DILocation(line: 7140, column: 26, scope: !16768)
!16779 = !DILocation(line: 7140, column: 20, scope: !16768)
!16780 = !DILocation(line: 7140, column: 6, scope: !16768)
!16781 = !DILocation(line: 7142, column: 22, scope: !16768)
!16782 = !DILocation(line: 7142, column: 36, scope: !16768)
!16783 = !DILocation(line: 7142, column: 20, scope: !16768)
!16784 = !DILocation(line: 7143, column: 2, scope: !16769)
!16785 = !DILocation(line: 7145, column: 13, scope: !16724)
!16786 = !DILocation(line: 7145, column: 11, scope: !16724)
!16787 = !DILocation(line: 7146, column: 11, scope: !16788)
!16788 = distinct !DILexicalBlock(scope: !16724, file: !3, line: 7146, column: 11)
!16789 = !DILocation(line: 7146, column: 26, scope: !16788)
!16790 = !DILocation(line: 7146, column: 11, scope: !16724)
!16791 = !DILocation(line: 7147, column: 8, scope: !16788)
!16792 = !DILocation(line: 7147, column: 6, scope: !16788)
!16793 = !DILocation(line: 7147, column: 2, scope: !16788)
!16794 = !DILocation(line: 7148, column: 11, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16724, file: !3, line: 7148, column: 11)
!16796 = !DILocation(line: 7149, column: 4, scope: !16795)
!16797 = !DILocation(line: 7149, column: 7, scope: !16795)
!16798 = !DILocation(line: 7149, column: 19, scope: !16795)
!16799 = !DILocation(line: 7150, column: 4, scope: !16795)
!16800 = !DILocation(line: 7150, column: 8, scope: !16795)
!16801 = !DILocation(line: 7150, column: 29, scope: !16795)
!16802 = !DILocation(line: 7150, column: 42, scope: !16795)
!16803 = !DILocation(line: 7151, column: 8, scope: !16795)
!16804 = !DILocation(line: 7151, column: 11, scope: !16795)
!16805 = !DILocation(line: 7151, column: 30, scope: !16795)
!16806 = !DILocation(line: 7151, column: 43, scope: !16795)
!16807 = !DILocation(line: 7148, column: 11, scope: !16724)
!16808 = !DILocation(line: 7153, column: 10, scope: !16809)
!16809 = distinct !DILexicalBlock(scope: !16810, file: !3, line: 7153, column: 8)
!16810 = distinct !DILexicalBlock(scope: !16795, file: !3, line: 7152, column: 2)
!16811 = !DILocation(line: 7153, column: 24, scope: !16809)
!16812 = !DILocation(line: 7154, column: 8, scope: !16809)
!16813 = !DILocation(line: 7154, column: 11, scope: !16809)
!16814 = !DILocation(line: 7155, column: 8, scope: !16809)
!16815 = !DILocation(line: 7155, column: 11, scope: !16809)
!16816 = !DILocation(line: 7155, column: 26, scope: !16809)
!16817 = !DILocation(line: 7153, column: 8, scope: !16810)
!16818 = !DILocation(line: 7156, column: 17, scope: !16809)
!16819 = !DILocation(line: 7156, column: 21, scope: !16809)
!16820 = !DILocation(line: 7156, column: 15, scope: !16809)
!16821 = !DILocation(line: 7156, column: 6, scope: !16809)
!16822 = !DILocation(line: 7158, column: 17, scope: !16809)
!16823 = !DILocation(line: 7158, column: 31, scope: !16809)
!16824 = !DILocation(line: 7158, column: 15, scope: !16809)
!16825 = !DILocation(line: 7159, column: 2, scope: !16810)
!16826 = !DILocation(line: 7161, column: 31, scope: !16724)
!16827 = !DILocation(line: 7161, column: 27, scope: !16724)
!16828 = !DILocation(line: 7161, column: 49, scope: !16724)
!16829 = !DILocation(line: 7161, column: 25, scope: !16724)
!16830 = !DILocation(line: 7162, column: 15, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16724, file: !3, line: 7162, column: 11)
!16832 = !DILocation(line: 7162, column: 11, scope: !16831)
!16833 = !DILocation(line: 7162, column: 33, scope: !16831)
!16834 = !DILocation(line: 7162, column: 53, scope: !16831)
!16835 = !DILocation(line: 7162, column: 11, scope: !16724)
!16836 = !DILocalVariable(name: "tertiary_reload", scope: !16837, file: !3, line: 7164, type: !2396)
!16837 = distinct !DILexicalBlock(scope: !16831, file: !3, line: 7163, column: 2)
!16838 = !DILocation(line: 7164, column: 8, scope: !16837)
!16839 = !DILocation(line: 7164, column: 30, scope: !16837)
!16840 = !DILocation(line: 7164, column: 26, scope: !16837)
!16841 = !DILocation(line: 7164, column: 48, scope: !16837)
!16842 = !DILocation(line: 7166, column: 27, scope: !16837)
!16843 = !DILocation(line: 7166, column: 23, scope: !16837)
!16844 = !DILocation(line: 7166, column: 44, scope: !16837)
!16845 = !DILocation(line: 7166, column: 21, scope: !16837)
!16846 = !DILocation(line: 7167, column: 25, scope: !16837)
!16847 = !DILocation(line: 7167, column: 21, scope: !16837)
!16848 = !DILocation(line: 7167, column: 43, scope: !16837)
!16849 = !DILocation(line: 7167, column: 19, scope: !16837)
!16850 = !DILocation(line: 7169, column: 4, scope: !16837)
!16851 = !DILocation(line: 7170, column: 2, scope: !16837)
!16852 = !DILocation(line: 7171, column: 15, scope: !16724)
!16853 = !DILocation(line: 7171, column: 19, scope: !16724)
!16854 = !DILocation(line: 7171, column: 13, scope: !16724)
!16855 = !DILocation(line: 7173, column: 12, scope: !16856)
!16856 = distinct !DILexicalBlock(scope: !16724, file: !3, line: 7173, column: 11)
!16857 = !DILocation(line: 7173, column: 19, scope: !16856)
!16858 = !DILocation(line: 7173, column: 16, scope: !16856)
!16859 = !DILocation(line: 7173, column: 28, scope: !16856)
!16860 = !DILocation(line: 7173, column: 46, scope: !16856)
!16861 = !DILocation(line: 7173, column: 51, scope: !16856)
!16862 = !DILocation(line: 7173, column: 33, scope: !16856)
!16863 = !DILocation(line: 7174, column: 4, scope: !16856)
!16864 = !DILocation(line: 7174, column: 8, scope: !16856)
!16865 = !DILocation(line: 7174, column: 12, scope: !16856)
!16866 = !DILocation(line: 7174, column: 15, scope: !16856)
!16867 = !DILocation(line: 7174, column: 20, scope: !16856)
!16868 = !DILocation(line: 7174, column: 23, scope: !16856)
!16869 = !DILocation(line: 7174, column: 27, scope: !16856)
!16870 = !DILocation(line: 7174, column: 31, scope: !16856)
!16871 = !DILocation(line: 7173, column: 11, scope: !16724)
!16872 = !DILocalVariable(name: "sri", scope: !16873, file: !3, line: 7176, type: !16874)
!16873 = distinct !DILexicalBlock(scope: !16856, file: !3, line: 7175, column: 2)
!16874 = !DIDerivedType(tag: DW_TAG_typedef, name: "secondary_reload_info", file: !16875, line: 92, baseType: !16876)
!16875 = !DIFile(filename: "./target.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!16876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "secondary_reload_info", file: !16875, line: 81, size: 192, elements: !16877)
!16877 = !{!16878, !16879, !16880, !16882}
!16878 = !DIDerivedType(tag: DW_TAG_member, name: "icode", scope: !16876, file: !16875, line: 85, baseType: !2396, size: 32)
!16879 = !DIDerivedType(tag: DW_TAG_member, name: "extra_cost", scope: !16876, file: !16875, line: 86, baseType: !2396, size: 32, offset: 32)
!16880 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sri", scope: !16876, file: !16875, line: 90, baseType: !16881, size: 64, offset: 64)
!16881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16876, size: 64)
!16882 = !DIDerivedType(tag: DW_TAG_member, name: "t_icode", scope: !16876, file: !16875, line: 91, baseType: !2396, size: 32, offset: 128)
!16883 = !DILocation(line: 7176, column: 26, scope: !16873)
!16884 = !DILocalVariable(name: "sri2", scope: !16873, file: !3, line: 7176, type: !16874)
!16885 = !DILocation(line: 7176, column: 31, scope: !16873)
!16886 = !DILocalVariable(name: "new_class", scope: !16873, file: !3, line: 7177, type: !527)
!16887 = !DILocation(line: 7177, column: 19, scope: !16873)
!16888 = !DILocalVariable(name: "new_t_class", scope: !16873, file: !3, line: 7177, type: !527)
!16889 = !DILocation(line: 7177, column: 30, scope: !16873)
!16890 = !DILocation(line: 7179, column: 8, scope: !16873)
!16891 = !DILocation(line: 7179, column: 14, scope: !16873)
!16892 = !DILocation(line: 7180, column: 8, scope: !16873)
!16893 = !DILocation(line: 7180, column: 17, scope: !16873)
!16894 = !DILocation(line: 7181, column: 24, scope: !16873)
!16895 = !DILocation(line: 7181, column: 45, scope: !16873)
!16896 = !DILocation(line: 7181, column: 60, scope: !16873)
!16897 = !DILocation(line: 7181, column: 64, scope: !16873)
!16898 = !DILocation(line: 7182, column: 7, scope: !16873)
!16899 = !DILocation(line: 7181, column: 16, scope: !16873)
!16900 = !DILocation(line: 7181, column: 14, scope: !16873)
!16901 = !DILocation(line: 7184, column: 8, scope: !16902)
!16902 = distinct !DILexicalBlock(scope: !16873, file: !3, line: 7184, column: 8)
!16903 = !DILocation(line: 7184, column: 18, scope: !16902)
!16904 = !DILocation(line: 7184, column: 29, scope: !16902)
!16905 = !DILocation(line: 7184, column: 36, scope: !16902)
!16906 = !DILocation(line: 7184, column: 42, scope: !16902)
!16907 = !DILocation(line: 7184, column: 8, scope: !16873)
!16908 = !DILocation(line: 7185, column: 24, scope: !16902)
!16909 = !DILocation(line: 7185, column: 6, scope: !16902)
!16910 = !DILocation(line: 7186, column: 13, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16902, file: !3, line: 7186, column: 13)
!16912 = !DILocation(line: 7186, column: 23, scope: !16911)
!16913 = !DILocation(line: 7186, column: 13, scope: !16902)
!16914 = !DILocation(line: 7189, column: 13, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16916, file: !3, line: 7188, column: 12)
!16916 = distinct !DILexicalBlock(scope: !16911, file: !3, line: 7187, column: 6)
!16917 = !DILocation(line: 7190, column: 34, scope: !16915)
!16918 = !DILocation(line: 7188, column: 12, scope: !16915)
!16919 = !DILocation(line: 7188, column: 12, scope: !16916)
!16920 = !DILocation(line: 7192, column: 34, scope: !16921)
!16921 = distinct !DILexicalBlock(scope: !16915, file: !3, line: 7191, column: 3)
!16922 = !DILocation(line: 7192, column: 11, scope: !16921)
!16923 = !DILocation(line: 7193, column: 22, scope: !16921)
!16924 = !DILocation(line: 7194, column: 3, scope: !16921)
!16925 = !DILocation(line: 7197, column: 16, scope: !16926)
!16926 = distinct !DILexicalBlock(scope: !16915, file: !3, line: 7196, column: 3)
!16927 = !DILocation(line: 7197, column: 14, scope: !16926)
!16928 = !DILocation(line: 7198, column: 21, scope: !16926)
!16929 = !DILocation(line: 7198, column: 19, scope: !16926)
!16930 = !DILocation(line: 7200, column: 6, scope: !16916)
!16931 = !DILocation(line: 7201, column: 17, scope: !16932)
!16932 = distinct !DILexicalBlock(scope: !16911, file: !3, line: 7201, column: 13)
!16933 = !DILocation(line: 7201, column: 23, scope: !16932)
!16934 = !DILocation(line: 7201, column: 13, scope: !16911)
!16935 = !DILocation(line: 7203, column: 6, scope: !16932)
!16936 = !DILocation(line: 7206, column: 13, scope: !16937)
!16937 = distinct !DILexicalBlock(scope: !16932, file: !3, line: 7205, column: 6)
!16938 = !DILocation(line: 7206, column: 19, scope: !16937)
!16939 = !DILocation(line: 7207, column: 13, scope: !16937)
!16940 = !DILocation(line: 7207, column: 22, scope: !16937)
!16941 = !DILocation(line: 7208, column: 30, scope: !16937)
!16942 = !DILocation(line: 7208, column: 51, scope: !16937)
!16943 = !DILocation(line: 7209, column: 13, scope: !16937)
!16944 = !DILocation(line: 7209, column: 24, scope: !16937)
!16945 = !DILocation(line: 7208, column: 22, scope: !16937)
!16946 = !DILocation(line: 7208, column: 20, scope: !16937)
!16947 = !DILocation(line: 7210, column: 12, scope: !16948)
!16948 = distinct !DILexicalBlock(scope: !16937, file: !3, line: 7210, column: 12)
!16949 = !DILocation(line: 7210, column: 24, scope: !16948)
!16950 = !DILocation(line: 7210, column: 35, scope: !16948)
!16951 = !DILocation(line: 7210, column: 43, scope: !16948)
!16952 = !DILocation(line: 7210, column: 49, scope: !16948)
!16953 = !DILocation(line: 7210, column: 12, scope: !16937)
!16954 = !DILocation(line: 7213, column: 9, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16956, file: !3, line: 7212, column: 9)
!16956 = distinct !DILexicalBlock(scope: !16948, file: !3, line: 7211, column: 3)
!16957 = !DILocation(line: 7214, column: 9, scope: !16955)
!16958 = !DILocation(line: 7214, column: 20, scope: !16955)
!16959 = !DILocation(line: 7212, column: 9, scope: !16955)
!16960 = !DILocation(line: 7212, column: 9, scope: !16956)
!16961 = !DILocation(line: 7216, column: 26, scope: !16962)
!16962 = distinct !DILexicalBlock(scope: !16955, file: !3, line: 7215, column: 7)
!16963 = !DILocation(line: 7217, column: 48, scope: !16962)
!16964 = !DILocation(line: 7217, column: 24, scope: !16962)
!16965 = !DILocation(line: 7218, column: 7, scope: !16962)
!16966 = !DILocation(line: 7221, column: 20, scope: !16967)
!16967 = distinct !DILexicalBlock(scope: !16955, file: !3, line: 7220, column: 7)
!16968 = !DILocation(line: 7221, column: 18, scope: !16967)
!16969 = !DILocation(line: 7222, column: 25, scope: !16967)
!16970 = !DILocation(line: 7222, column: 23, scope: !16967)
!16971 = !DILocation(line: 7224, column: 3, scope: !16956)
!16972 = !DILocation(line: 7225, column: 17, scope: !16973)
!16973 = distinct !DILexicalBlock(scope: !16948, file: !3, line: 7225, column: 17)
!16974 = !DILocation(line: 7225, column: 29, scope: !16973)
!16975 = !DILocation(line: 7225, column: 40, scope: !16973)
!16976 = !DILocation(line: 7225, column: 48, scope: !16973)
!16977 = !DILocation(line: 7225, column: 54, scope: !16973)
!16978 = !DILocation(line: 7225, column: 17, scope: !16948)
!16979 = !DILocalVariable(name: "intermediate", scope: !16980, file: !3, line: 7227, type: !2372)
!16980 = distinct !DILexicalBlock(scope: !16973, file: !3, line: 7226, column: 3)
!16981 = !DILocation(line: 7227, column: 9, scope: !16980)
!16982 = !DILocation(line: 7227, column: 24, scope: !16980)
!16983 = !DILocation(line: 7230, column: 9, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16980, file: !3, line: 7229, column: 9)
!16985 = !DILocation(line: 7230, column: 20, scope: !16984)
!16986 = !DILocation(line: 7229, column: 9, scope: !16984)
!16987 = !DILocation(line: 7231, column: 9, scope: !16984)
!16988 = !DILocation(line: 7233, column: 19, scope: !16984)
!16989 = !DILocation(line: 7231, column: 12, scope: !16984)
!16990 = !DILocation(line: 7229, column: 9, scope: !16980)
!16991 = !DILocation(line: 7235, column: 29, scope: !16992)
!16992 = distinct !DILexicalBlock(scope: !16984, file: !3, line: 7234, column: 7)
!16993 = !DILocation(line: 7235, column: 27, scope: !16992)
!16994 = !DILocation(line: 7236, column: 48, scope: !16992)
!16995 = !DILocation(line: 7236, column: 24, scope: !16992)
!16996 = !DILocation(line: 7237, column: 7, scope: !16992)
!16997 = !DILocation(line: 7240, column: 20, scope: !16998)
!16998 = distinct !DILexicalBlock(scope: !16984, file: !3, line: 7239, column: 7)
!16999 = !DILocation(line: 7240, column: 18, scope: !16998)
!17000 = !DILocation(line: 7241, column: 25, scope: !16998)
!17001 = !DILocation(line: 7241, column: 23, scope: !16998)
!17002 = !DILocation(line: 7243, column: 3, scope: !16980)
!17003 = !DILocation(line: 7244, column: 17, scope: !17004)
!17004 = distinct !DILexicalBlock(scope: !16973, file: !3, line: 7244, column: 17)
!17005 = !DILocation(line: 7244, column: 29, scope: !17004)
!17006 = !DILocation(line: 7244, column: 40, scope: !17004)
!17007 = !DILocation(line: 7244, column: 48, scope: !17004)
!17008 = !DILocation(line: 7244, column: 54, scope: !17004)
!17009 = !DILocation(line: 7244, column: 17, scope: !16973)
!17010 = !DILocalVariable(name: "intermediate", scope: !17011, file: !3, line: 7246, type: !2372)
!17011 = distinct !DILexicalBlock(scope: !17004, file: !3, line: 7245, column: 3)
!17012 = !DILocation(line: 7246, column: 9, scope: !17011)
!17013 = !DILocation(line: 7246, column: 24, scope: !17011)
!17014 = !DILocation(line: 7249, column: 9, scope: !17015)
!17015 = distinct !DILexicalBlock(scope: !17011, file: !3, line: 7248, column: 9)
!17016 = !DILocation(line: 7249, column: 20, scope: !17015)
!17017 = !DILocation(line: 7248, column: 9, scope: !17015)
!17018 = !DILocation(line: 7250, column: 9, scope: !17015)
!17019 = !DILocation(line: 7251, column: 13, scope: !17015)
!17020 = !DILocation(line: 7251, column: 26, scope: !17015)
!17021 = !DILocation(line: 7250, column: 12, scope: !17015)
!17022 = !DILocation(line: 7248, column: 9, scope: !17011)
!17023 = !DILocation(line: 7253, column: 29, scope: !17024)
!17024 = distinct !DILexicalBlock(scope: !17015, file: !3, line: 7252, column: 7)
!17025 = !DILocation(line: 7253, column: 27, scope: !17024)
!17026 = !DILocation(line: 7254, column: 48, scope: !17024)
!17027 = !DILocation(line: 7254, column: 24, scope: !17024)
!17028 = !DILocation(line: 7255, column: 7, scope: !17024)
!17029 = !DILocation(line: 7258, column: 20, scope: !17030)
!17030 = distinct !DILexicalBlock(scope: !17015, file: !3, line: 7257, column: 7)
!17031 = !DILocation(line: 7258, column: 18, scope: !17030)
!17032 = !DILocation(line: 7259, column: 25, scope: !17030)
!17033 = !DILocation(line: 7259, column: 23, scope: !17030)
!17034 = !DILocation(line: 7261, column: 3, scope: !17011)
!17035 = !DILocation(line: 7265, column: 16, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17004, file: !3, line: 7263, column: 3)
!17037 = !DILocation(line: 7265, column: 14, scope: !17036)
!17038 = !DILocation(line: 7266, column: 21, scope: !17036)
!17039 = !DILocation(line: 7266, column: 19, scope: !17036)
!17040 = !DILocation(line: 7269, column: 2, scope: !16873)
!17041 = !DILocation(line: 7278, column: 11, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !16724, file: !3, line: 7278, column: 11)
!17043 = !DILocation(line: 7278, column: 11, scope: !16724)
!17044 = !DILocation(line: 7280, column: 8, scope: !17045)
!17045 = distinct !DILexicalBlock(scope: !17046, file: !3, line: 7280, column: 8)
!17046 = distinct !DILexicalBlock(scope: !17042, file: !3, line: 7279, column: 2)
!17047 = !DILocation(line: 7280, column: 14, scope: !17045)
!17048 = !DILocation(line: 7280, column: 8, scope: !17046)
!17049 = !DILocation(line: 7283, column: 8, scope: !17050)
!17050 = distinct !DILexicalBlock(scope: !17045, file: !3, line: 7281, column: 6)
!17051 = !DILocation(line: 7285, column: 19, scope: !17050)
!17052 = !DILocation(line: 7285, column: 36, scope: !17050)
!17053 = !DILocation(line: 7285, column: 47, scope: !17050)
!17054 = !DILocation(line: 7286, column: 8, scope: !17050)
!17055 = !DILocation(line: 7285, column: 8, scope: !17050)
!17056 = !DILocation(line: 7287, column: 16, scope: !17050)
!17057 = !DILocation(line: 7288, column: 6, scope: !17050)
!17058 = !DILocation(line: 7293, column: 12, scope: !17059)
!17059 = distinct !DILexicalBlock(scope: !17060, file: !3, line: 7293, column: 12)
!17060 = distinct !DILexicalBlock(scope: !17045, file: !3, line: 7290, column: 6)
!17061 = !DILocation(line: 7293, column: 27, scope: !17059)
!17062 = !DILocation(line: 7293, column: 12, scope: !17060)
!17063 = !DILocation(line: 7295, column: 17, scope: !17064)
!17064 = distinct !DILexicalBlock(scope: !17059, file: !3, line: 7294, column: 3)
!17065 = !DILocation(line: 7296, column: 11, scope: !17064)
!17066 = !DILocation(line: 7296, column: 30, scope: !17064)
!17067 = !DILocation(line: 7297, column: 11, scope: !17064)
!17068 = !DILocation(line: 7295, column: 5, scope: !17064)
!17069 = !DILocation(line: 7298, column: 3, scope: !17064)
!17070 = !DILocation(line: 7299, column: 17, scope: !17071)
!17071 = distinct !DILexicalBlock(scope: !17059, file: !3, line: 7299, column: 17)
!17072 = !DILocation(line: 7299, column: 17, scope: !17059)
!17073 = !DILocation(line: 7301, column: 17, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !17071, file: !3, line: 7300, column: 3)
!17075 = !DILocation(line: 7301, column: 35, scope: !17074)
!17076 = !DILocation(line: 7302, column: 10, scope: !17074)
!17077 = !DILocation(line: 7302, column: 14, scope: !17074)
!17078 = !DILocation(line: 7303, column: 10, scope: !17074)
!17079 = !DILocation(line: 7303, column: 14, scope: !17074)
!17080 = !DILocation(line: 7301, column: 5, scope: !17074)
!17081 = !DILocation(line: 7304, column: 17, scope: !17074)
!17082 = !DILocation(line: 7304, column: 36, scope: !17074)
!17083 = !DILocation(line: 7305, column: 10, scope: !17074)
!17084 = !DILocation(line: 7305, column: 14, scope: !17074)
!17085 = !DILocation(line: 7306, column: 10, scope: !17074)
!17086 = !DILocation(line: 7306, column: 14, scope: !17074)
!17087 = !DILocation(line: 7304, column: 5, scope: !17074)
!17088 = !DILocation(line: 7307, column: 3, scope: !17074)
!17089 = !DILocation(line: 7309, column: 15, scope: !17071)
!17090 = !DILocation(line: 7309, column: 34, scope: !17071)
!17091 = !DILocation(line: 7310, column: 8, scope: !17071)
!17092 = !DILocation(line: 7310, column: 12, scope: !17071)
!17093 = !DILocation(line: 7311, column: 8, scope: !17071)
!17094 = !DILocation(line: 7311, column: 12, scope: !17071)
!17095 = !DILocation(line: 7309, column: 3, scope: !17071)
!17096 = !DILocation(line: 7313, column: 19, scope: !17060)
!17097 = !DILocation(line: 7313, column: 17, scope: !17060)
!17098 = !DILocation(line: 7315, column: 2, scope: !17046)
!17099 = !DILocation(line: 7316, column: 5, scope: !16724)
!17100 = !DILocation(line: 7318, column: 9, scope: !17101)
!17101 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 7318, column: 7)
!17102 = !DILocation(line: 7318, column: 17, scope: !17101)
!17103 = !DILocation(line: 7318, column: 35, scope: !17101)
!17104 = !DILocation(line: 7318, column: 46, scope: !17101)
!17105 = !DILocation(line: 7318, column: 22, scope: !17101)
!17106 = !DILocation(line: 7318, column: 7, scope: !16364)
!17107 = !DILocalVariable(name: "real_oldequiv", scope: !17108, file: !3, line: 7320, type: !2372)
!17108 = distinct !DILexicalBlock(scope: !17101, file: !3, line: 7319, column: 5)
!17109 = !DILocation(line: 7320, column: 11, scope: !17108)
!17110 = !DILocation(line: 7320, column: 27, scope: !17108)
!17111 = !DILocation(line: 7322, column: 12, scope: !17112)
!17112 = distinct !DILexicalBlock(scope: !17108, file: !3, line: 7322, column: 11)
!17113 = !DILocation(line: 7323, column: 5, scope: !17112)
!17114 = !DILocation(line: 7323, column: 8, scope: !17112)
!17115 = !DILocation(line: 7323, column: 25, scope: !17112)
!17116 = !DILocation(line: 7324, column: 5, scope: !17112)
!17117 = !DILocation(line: 7324, column: 9, scope: !17112)
!17118 = !DILocation(line: 7324, column: 30, scope: !17112)
!17119 = !DILocation(line: 7324, column: 48, scope: !17112)
!17120 = !DILocation(line: 7325, column: 9, scope: !17112)
!17121 = !DILocation(line: 7325, column: 12, scope: !17112)
!17122 = !DILocation(line: 7325, column: 31, scope: !17112)
!17123 = !DILocation(line: 7325, column: 49, scope: !17112)
!17124 = !DILocation(line: 7326, column: 4, scope: !17112)
!17125 = !DILocation(line: 7326, column: 8, scope: !17112)
!17126 = !DILocation(line: 7326, column: 28, scope: !17112)
!17127 = !DILocation(line: 7327, column: 8, scope: !17112)
!17128 = !DILocation(line: 7327, column: 11, scope: !17112)
!17129 = !DILocation(line: 7328, column: 8, scope: !17112)
!17130 = !DILocation(line: 7328, column: 12, scope: !17112)
!17131 = !DILocation(line: 7329, column: 5, scope: !17112)
!17132 = !DILocation(line: 7330, column: 8, scope: !17112)
!17133 = !DILocation(line: 7330, column: 13, scope: !17112)
!17134 = !DILocation(line: 7331, column: 7, scope: !17112)
!17135 = !DILocation(line: 7331, column: 38, scope: !17112)
!17136 = !DILocation(line: 7332, column: 5, scope: !17112)
!17137 = !DILocation(line: 7332, column: 9, scope: !17112)
!17138 = !DILocation(line: 7333, column: 10, scope: !17112)
!17139 = !DILocation(line: 7333, column: 41, scope: !17112)
!17140 = !DILocation(line: 7334, column: 4, scope: !17112)
!17141 = !DILocation(line: 7334, column: 8, scope: !17112)
!17142 = !DILocation(line: 7335, column: 8, scope: !17112)
!17143 = !DILocation(line: 7335, column: 12, scope: !17112)
!17144 = !DILocation(line: 7337, column: 5, scope: !17112)
!17145 = !DILocation(line: 7322, column: 11, scope: !17108)
!17146 = !DILocation(line: 7338, column: 18, scope: !17112)
!17147 = !DILocation(line: 7338, column: 22, scope: !17112)
!17148 = !DILocation(line: 7338, column: 16, scope: !17112)
!17149 = !DILocation(line: 7338, column: 2, scope: !17112)
!17150 = !DILocation(line: 7339, column: 19, scope: !17108)
!17151 = !DILocation(line: 7339, column: 30, scope: !17108)
!17152 = !DILocation(line: 7339, column: 45, scope: !17108)
!17153 = !DILocation(line: 7339, column: 49, scope: !17108)
!17154 = !DILocation(line: 7340, column: 5, scope: !17108)
!17155 = !DILocation(line: 7340, column: 9, scope: !17108)
!17156 = !DILocation(line: 7339, column: 7, scope: !17108)
!17157 = !DILocation(line: 7341, column: 5, scope: !17108)
!17158 = !DILocation(line: 7343, column: 7, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 7343, column: 7)
!17160 = !DILocation(line: 7343, column: 7, scope: !16364)
!17161 = !DILocation(line: 7344, column: 38, scope: !17159)
!17162 = !DILocation(line: 7344, column: 44, scope: !17159)
!17163 = !DILocation(line: 7344, column: 5, scope: !17159)
!17164 = !DILocation(line: 7347, column: 12, scope: !16364)
!17165 = !DILocation(line: 7347, column: 4, scope: !16364)
!17166 = !DILocation(line: 7347, column: 10, scope: !16364)
!17167 = !DILocation(line: 7348, column: 3, scope: !16364)
!17168 = !DILocation(line: 7352, column: 7, scope: !17169)
!17169 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 7352, column: 7)
!17170 = !DILocation(line: 7352, column: 7, scope: !16364)
!17171 = !DILocation(line: 7353, column: 29, scope: !17169)
!17172 = !DILocation(line: 7353, column: 24, scope: !17169)
!17173 = !DILocation(line: 7353, column: 5, scope: !17169)
!17174 = !DILocation(line: 7353, column: 27, scope: !17169)
!17175 = !DILocation(line: 7354, column: 1, scope: !16364)
!17176 = distinct !DISubprogram(name: "delete_output_reload", scope: !3, file: !3, line: 8489, type: !17177, scopeLine: 8490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!17177 = !DISubroutineType(types: !17178)
!17178 = !{null, !2372, !2396, !2396, !2372}
!17179 = !DILocalVariable(name: "insn", arg: 1, scope: !17176, file: !3, line: 8489, type: !2372)
!17180 = !DILocation(line: 8489, column: 27, scope: !17176)
!17181 = !DILocalVariable(name: "j", arg: 2, scope: !17176, file: !3, line: 8489, type: !2396)
!17182 = !DILocation(line: 8489, column: 37, scope: !17176)
!17183 = !DILocalVariable(name: "last_reload_reg", arg: 3, scope: !17176, file: !3, line: 8489, type: !2396)
!17184 = !DILocation(line: 8489, column: 44, scope: !17176)
!17185 = !DILocalVariable(name: "new_reload_reg", arg: 4, scope: !17176, file: !3, line: 8489, type: !2372)
!17186 = !DILocation(line: 8489, column: 65, scope: !17176)
!17187 = !DILocalVariable(name: "output_reload_insn", scope: !17176, file: !3, line: 8491, type: !2372)
!17188 = !DILocation(line: 8491, column: 7, scope: !17176)
!17189 = !DILocation(line: 8491, column: 44, scope: !17176)
!17190 = !DILocation(line: 8491, column: 28, scope: !17176)
!17191 = !DILocalVariable(name: "reg", scope: !17176, file: !3, line: 8492, type: !2372)
!17192 = !DILocation(line: 8492, column: 7, scope: !17176)
!17193 = !DILocation(line: 8492, column: 33, scope: !17176)
!17194 = !DILocation(line: 8492, column: 13, scope: !17176)
!17195 = !DILocalVariable(name: "k", scope: !17176, file: !3, line: 8493, type: !2396)
!17196 = !DILocation(line: 8493, column: 7, scope: !17176)
!17197 = !DILocalVariable(name: "n_occurrences", scope: !17176, file: !3, line: 8494, type: !2396)
!17198 = !DILocation(line: 8494, column: 7, scope: !17176)
!17199 = !DILocalVariable(name: "n_inherited", scope: !17176, file: !3, line: 8495, type: !2396)
!17200 = !DILocation(line: 8495, column: 7, scope: !17176)
!17201 = !DILocalVariable(name: "i1", scope: !17176, file: !3, line: 8496, type: !2372)
!17202 = !DILocation(line: 8496, column: 7, scope: !17176)
!17203 = !DILocalVariable(name: "substed", scope: !17176, file: !3, line: 8497, type: !2372)
!17204 = !DILocation(line: 8497, column: 7, scope: !17176)
!17205 = !DILocation(line: 8501, column: 7, scope: !17206)
!17206 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 8501, column: 7)
!17207 = !DILocation(line: 8501, column: 7, scope: !17176)
!17208 = !DILocation(line: 8502, column: 5, scope: !17206)
!17209 = !DILocation(line: 8506, column: 3, scope: !17176)
!17210 = !DILocation(line: 8506, column: 10, scope: !17176)
!17211 = !DILocation(line: 8506, column: 25, scope: !17176)
!17212 = !DILocation(line: 8507, column: 11, scope: !17176)
!17213 = !DILocation(line: 8507, column: 9, scope: !17176)
!17214 = distinct !{!17214, !17209, !17212}
!17215 = !DILocation(line: 8508, column: 13, scope: !17176)
!17216 = !DILocation(line: 8508, column: 34, scope: !17176)
!17217 = !DILocation(line: 8508, column: 11, scope: !17176)
!17218 = !DILocation(line: 8512, column: 12, scope: !17219)
!17219 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 8512, column: 3)
!17220 = !DILocation(line: 8512, column: 22, scope: !17219)
!17221 = !DILocation(line: 8512, column: 10, scope: !17219)
!17222 = !DILocation(line: 8512, column: 8, scope: !17219)
!17223 = !DILocation(line: 8512, column: 27, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !17219, file: !3, line: 8512, column: 3)
!17225 = !DILocation(line: 8512, column: 29, scope: !17224)
!17226 = !DILocation(line: 8512, column: 3, scope: !17219)
!17227 = !DILocalVariable(name: "reg2", scope: !17228, file: !3, line: 8514, type: !2372)
!17228 = distinct !DILexicalBlock(scope: !17224, file: !3, line: 8513, column: 5)
!17229 = !DILocation(line: 8514, column: 11, scope: !17228)
!17230 = !DILocation(line: 8514, column: 22, scope: !17228)
!17231 = !DILocation(line: 8514, column: 18, scope: !17228)
!17232 = !DILocation(line: 8514, column: 25, scope: !17228)
!17233 = !DILocation(line: 8515, column: 13, scope: !17234)
!17234 = distinct !DILexicalBlock(scope: !17228, file: !3, line: 8515, column: 11)
!17235 = !DILocation(line: 8515, column: 11, scope: !17228)
!17236 = !DILocation(line: 8516, column: 2, scope: !17234)
!17237 = !DILocation(line: 8517, column: 11, scope: !17238)
!17238 = distinct !DILexicalBlock(scope: !17228, file: !3, line: 8517, column: 11)
!17239 = !DILocation(line: 8517, column: 24, scope: !17238)
!17240 = !DILocation(line: 8517, column: 46, scope: !17238)
!17241 = !DILocation(line: 8517, column: 27, scope: !17238)
!17242 = !DILocation(line: 8517, column: 11, scope: !17228)
!17243 = !DILocation(line: 8518, column: 13, scope: !17238)
!17244 = !DILocation(line: 8518, column: 9, scope: !17238)
!17245 = !DILocation(line: 8518, column: 16, scope: !17238)
!17246 = !DILocation(line: 8518, column: 7, scope: !17238)
!17247 = !DILocation(line: 8518, column: 2, scope: !17238)
!17248 = !DILocation(line: 8523, column: 7, scope: !17228)
!17249 = !DILocation(line: 8523, column: 14, scope: !17228)
!17250 = !DILocation(line: 8523, column: 30, scope: !17228)
!17251 = !DILocation(line: 8524, column: 9, scope: !17228)
!17252 = !DILocation(line: 8524, column: 7, scope: !17228)
!17253 = distinct !{!17253, !17248, !17251}
!17254 = !DILocation(line: 8525, column: 24, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17228, file: !3, line: 8525, column: 11)
!17256 = !DILocation(line: 8525, column: 30, scope: !17255)
!17257 = !DILocation(line: 8525, column: 11, scope: !17255)
!17258 = !DILocation(line: 8525, column: 11, scope: !17228)
!17259 = !DILocation(line: 8527, column: 25, scope: !17260)
!17260 = distinct !DILexicalBlock(scope: !17261, file: !3, line: 8527, column: 8)
!17261 = distinct !DILexicalBlock(scope: !17255, file: !3, line: 8526, column: 2)
!17262 = !DILocation(line: 8527, column: 8, scope: !17260)
!17263 = !DILocation(line: 8527, column: 28, scope: !17260)
!17264 = !DILocation(line: 8527, column: 50, scope: !17260)
!17265 = !DILocation(line: 8527, column: 31, scope: !17260)
!17266 = !DILocation(line: 8527, column: 53, scope: !17260)
!17267 = !DILocation(line: 8527, column: 56, scope: !17260)
!17268 = !DILocation(line: 8527, column: 61, scope: !17260)
!17269 = !DILocation(line: 8527, column: 58, scope: !17260)
!17270 = !DILocation(line: 8527, column: 8, scope: !17261)
!17271 = !DILocation(line: 8528, column: 17, scope: !17260)
!17272 = !DILocation(line: 8528, column: 6, scope: !17260)
!17273 = !DILocation(line: 8530, column: 6, scope: !17260)
!17274 = !DILocation(line: 8531, column: 2, scope: !17261)
!17275 = !DILocation(line: 8532, column: 5, scope: !17228)
!17276 = !DILocation(line: 8512, column: 36, scope: !17224)
!17277 = !DILocation(line: 8512, column: 3, scope: !17224)
!17278 = distinct !{!17278, !17226, !17279}
!17279 = !DILocation(line: 8532, column: 5, scope: !17219)
!17280 = !DILocation(line: 8533, column: 38, scope: !17176)
!17281 = !DILocation(line: 8533, column: 54, scope: !17176)
!17282 = !DILocation(line: 8533, column: 19, scope: !17176)
!17283 = !DILocation(line: 8533, column: 17, scope: !17176)
!17284 = !DILocation(line: 8534, column: 7, scope: !17285)
!17285 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 8534, column: 7)
!17286 = !DILocation(line: 8534, column: 21, scope: !17285)
!17287 = !DILocation(line: 8534, column: 24, scope: !17285)
!17288 = !DILocation(line: 8534, column: 7, scope: !17176)
!17289 = !DILocation(line: 8535, column: 41, scope: !17285)
!17290 = !DILocation(line: 8536, column: 6, scope: !17285)
!17291 = !DILocation(line: 8535, column: 22, scope: !17285)
!17292 = !DILocation(line: 8535, column: 19, scope: !17285)
!17293 = !DILocation(line: 8535, column: 5, scope: !17285)
!17294 = !DILocation(line: 8537, column: 7, scope: !17295)
!17295 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 8537, column: 7)
!17296 = !DILocation(line: 8537, column: 7, scope: !17176)
!17297 = !DILocation(line: 8538, column: 41, scope: !17295)
!17298 = !DILocation(line: 8539, column: 22, scope: !17295)
!17299 = !DILocation(line: 8539, column: 6, scope: !17295)
!17300 = !DILocation(line: 8538, column: 22, scope: !17295)
!17301 = !DILocation(line: 8538, column: 19, scope: !17295)
!17302 = !DILocation(line: 8538, column: 5, scope: !17295)
!17303 = !DILocation(line: 8541, column: 13, scope: !17304)
!17304 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 8541, column: 3)
!17305 = !DILocation(line: 8541, column: 36, scope: !17304)
!17306 = !DILocation(line: 8541, column: 11, scope: !17304)
!17307 = !DILocation(line: 8541, column: 8, scope: !17304)
!17308 = !DILocation(line: 8541, column: 50, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17304, file: !3, line: 8541, column: 3)
!17310 = !DILocation(line: 8541, column: 3, scope: !17304)
!17311 = !DILocation(line: 8543, column: 7, scope: !17312)
!17312 = distinct !DILexicalBlock(scope: !17309, file: !3, line: 8542, column: 5)
!17313 = !DILocation(line: 8544, column: 43, scope: !17312)
!17314 = !DILocation(line: 8544, column: 59, scope: !17312)
!17315 = !DILocation(line: 8544, column: 24, scope: !17312)
!17316 = !DILocation(line: 8544, column: 21, scope: !17312)
!17317 = !DILocation(line: 8545, column: 5, scope: !17312)
!17318 = !DILocation(line: 8541, column: 59, scope: !17309)
!17319 = !DILocation(line: 8541, column: 57, scope: !17309)
!17320 = !DILocation(line: 8541, column: 3, scope: !17309)
!17321 = distinct !{!17321, !17310, !17322}
!17322 = !DILocation(line: 8545, column: 5, scope: !17304)
!17323 = !DILocation(line: 8546, column: 7, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 8546, column: 7)
!17325 = !DILocation(line: 8546, column: 23, scope: !17324)
!17326 = !DILocation(line: 8546, column: 21, scope: !17324)
!17327 = !DILocation(line: 8546, column: 7, scope: !17176)
!17328 = !DILocation(line: 8547, column: 5, scope: !17324)
!17329 = !DILocation(line: 8554, column: 13, scope: !17330)
!17330 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 8554, column: 3)
!17331 = !DILocation(line: 8554, column: 11, scope: !17330)
!17332 = !DILocation(line: 8554, column: 8, scope: !17330)
!17333 = !DILocation(line: 8555, column: 8, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17330, file: !3, line: 8554, column: 3)
!17335 = !DILocation(line: 8555, column: 14, scope: !17334)
!17336 = !DILocation(line: 8555, column: 11, scope: !17334)
!17337 = !DILocation(line: 8554, column: 3, scope: !17330)
!17338 = !DILocation(line: 8557, column: 11, scope: !17339)
!17339 = distinct !DILexicalBlock(scope: !17340, file: !3, line: 8557, column: 11)
!17340 = distinct !DILexicalBlock(scope: !17334, file: !3, line: 8556, column: 5)
!17341 = !DILocation(line: 8557, column: 11, scope: !17340)
!17342 = !DILocation(line: 8558, column: 2, scope: !17339)
!17343 = !DILocation(line: 8559, column: 12, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17340, file: !3, line: 8559, column: 11)
!17345 = !DILocation(line: 8559, column: 32, scope: !17344)
!17346 = !DILocation(line: 8559, column: 35, scope: !17344)
!17347 = !DILocation(line: 8560, column: 4, scope: !17344)
!17348 = !DILocation(line: 8560, column: 24, scope: !17344)
!17349 = !DILocation(line: 8560, column: 29, scope: !17344)
!17350 = !DILocation(line: 8560, column: 7, scope: !17344)
!17351 = !DILocation(line: 8559, column: 11, scope: !17340)
!17352 = !DILocation(line: 8564, column: 4, scope: !17353)
!17353 = distinct !DILexicalBlock(scope: !17344, file: !3, line: 8561, column: 2)
!17354 = !DILocation(line: 8564, column: 11, scope: !17353)
!17355 = !DILocation(line: 8564, column: 31, scope: !17353)
!17356 = !DILocation(line: 8564, column: 34, scope: !17353)
!17357 = !DILocation(line: 8564, column: 58, scope: !17353)
!17358 = !DILocation(line: 0, scope: !17353)
!17359 = !DILocation(line: 8566, column: 38, scope: !17360)
!17360 = distinct !DILexicalBlock(scope: !17353, file: !3, line: 8565, column: 6)
!17361 = !DILocation(line: 8566, column: 43, scope: !17360)
!17362 = !DILocation(line: 8566, column: 25, scope: !17360)
!17363 = !DILocation(line: 8566, column: 67, scope: !17360)
!17364 = !DILocation(line: 8566, column: 22, scope: !17360)
!17365 = !DILocation(line: 8567, column: 13, scope: !17360)
!17366 = !DILocation(line: 8567, column: 11, scope: !17360)
!17367 = distinct !{!17367, !17352, !17368}
!17368 = !DILocation(line: 8568, column: 6, scope: !17353)
!17369 = !DILocation(line: 8569, column: 8, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17353, file: !3, line: 8569, column: 8)
!17371 = !DILocation(line: 8569, column: 25, scope: !17370)
!17372 = !DILocation(line: 8569, column: 22, scope: !17370)
!17373 = !DILocation(line: 8569, column: 37, scope: !17370)
!17374 = !DILocation(line: 8569, column: 40, scope: !17370)
!17375 = !DILocation(line: 8569, column: 46, scope: !17370)
!17376 = !DILocation(line: 8569, column: 43, scope: !17370)
!17377 = !DILocation(line: 8569, column: 8, scope: !17353)
!17378 = !DILocation(line: 8570, column: 6, scope: !17370)
!17379 = !DILocation(line: 8571, column: 4, scope: !17353)
!17380 = !DILocation(line: 8573, column: 5, scope: !17340)
!17381 = !DILocation(line: 8555, column: 25, scope: !17334)
!17382 = !DILocation(line: 8555, column: 23, scope: !17334)
!17383 = !DILocation(line: 8554, column: 3, scope: !17334)
!17384 = distinct !{!17384, !17337, !17385}
!17385 = !DILocation(line: 8573, column: 5, scope: !17330)
!17386 = !DILocation(line: 8576, column: 29, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 8576, column: 3)
!17388 = !DILocation(line: 8576, column: 12, scope: !17387)
!17389 = !DILocation(line: 8576, column: 46, scope: !17387)
!17390 = !DILocation(line: 8576, column: 10, scope: !17387)
!17391 = !DILocation(line: 8576, column: 8, scope: !17387)
!17392 = !DILocation(line: 8576, column: 64, scope: !17393)
!17393 = distinct !DILexicalBlock(scope: !17387, file: !3, line: 8576, column: 3)
!17394 = !DILocation(line: 8576, column: 67, scope: !17393)
!17395 = !DILocation(line: 8576, column: 3, scope: !17387)
!17396 = !DILocation(line: 8578, column: 23, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17393, file: !3, line: 8577, column: 5)
!17398 = !DILocation(line: 8578, column: 41, scope: !17397)
!17399 = !DILocation(line: 8578, column: 39, scope: !17397)
!17400 = !DILocation(line: 8578, column: 7, scope: !17397)
!17401 = !DILocation(line: 8578, column: 44, scope: !17397)
!17402 = !DILocation(line: 8579, column: 27, scope: !17397)
!17403 = !DILocation(line: 8579, column: 45, scope: !17397)
!17404 = !DILocation(line: 8579, column: 43, scope: !17397)
!17405 = !DILocation(line: 8579, column: 7, scope: !17397)
!17406 = !DILocation(line: 8579, column: 48, scope: !17397)
!17407 = !DILocation(line: 8576, column: 3, scope: !17393)
!17408 = distinct !{!17408, !17395, !17409}
!17409 = !DILocation(line: 8580, column: 5, scope: !17387)
!17410 = !DILocation(line: 8590, column: 11, scope: !17411)
!17411 = distinct !DILexicalBlock(scope: !17176, file: !3, line: 8590, column: 7)
!17412 = !DILocation(line: 8590, column: 7, scope: !17411)
!17413 = !DILocation(line: 8590, column: 14, scope: !17411)
!17414 = !DILocation(line: 8590, column: 25, scope: !17411)
!17415 = !DILocation(line: 8590, column: 21, scope: !17411)
!17416 = !DILocation(line: 8590, column: 28, scope: !17411)
!17417 = !DILocation(line: 8590, column: 18, scope: !17411)
!17418 = !DILocation(line: 8591, column: 7, scope: !17411)
!17419 = !DILocation(line: 8591, column: 10, scope: !17411)
!17420 = !DILocation(line: 8591, column: 37, scope: !17411)
!17421 = !DILocation(line: 8592, column: 7, scope: !17411)
!17422 = !DILocation(line: 8592, column: 22, scope: !17411)
!17423 = !DILocation(line: 8592, column: 10, scope: !17411)
!17424 = !DILocation(line: 8592, column: 35, scope: !17411)
!17425 = !DILocation(line: 8593, column: 7, scope: !17411)
!17426 = !DILocation(line: 8593, column: 10, scope: !17411)
!17427 = !DILocation(line: 8593, column: 40, scope: !17411)
!17428 = !DILocation(line: 8594, column: 7, scope: !17411)
!17429 = !DILocation(line: 8594, column: 27, scope: !17411)
!17430 = !DILocation(line: 8594, column: 43, scope: !17411)
!17431 = !DILocation(line: 8594, column: 10, scope: !17411)
!17432 = !DILocation(line: 8590, column: 7, scope: !17176)
!17433 = !DILocalVariable(name: "i2", scope: !17434, file: !3, line: 8596, type: !2372)
!17434 = distinct !DILexicalBlock(scope: !17411, file: !3, line: 8595, column: 5)
!17435 = !DILocation(line: 8596, column: 11, scope: !17434)
!17436 = !DILocation(line: 8602, column: 17, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17434, file: !3, line: 8602, column: 7)
!17438 = !DILocation(line: 8602, column: 15, scope: !17437)
!17439 = !DILocation(line: 8602, column: 12, scope: !17437)
!17440 = !DILocation(line: 8602, column: 35, scope: !17441)
!17441 = distinct !DILexicalBlock(scope: !17437, file: !3, line: 8602, column: 7)
!17442 = !DILocation(line: 8602, column: 7, scope: !17437)
!17443 = !DILocalVariable(name: "set", scope: !17444, file: !3, line: 8604, type: !2372)
!17444 = distinct !DILexicalBlock(scope: !17441, file: !3, line: 8603, column: 2)
!17445 = !DILocation(line: 8604, column: 8, scope: !17444)
!17446 = !DILocation(line: 8604, column: 14, scope: !17444)
!17447 = !DILocation(line: 8608, column: 8, scope: !17448)
!17448 = distinct !DILexicalBlock(scope: !17444, file: !3, line: 8608, column: 8)
!17449 = !DILocation(line: 8608, column: 12, scope: !17448)
!17450 = !DILocation(line: 8608, column: 17, scope: !17448)
!17451 = !DILocation(line: 8608, column: 20, scope: !17448)
!17452 = !DILocation(line: 8608, column: 38, scope: !17448)
!17453 = !DILocation(line: 8608, column: 35, scope: !17448)
!17454 = !DILocation(line: 8608, column: 8, scope: !17444)
!17455 = !DILocation(line: 8609, column: 6, scope: !17448)
!17456 = !DILocation(line: 8610, column: 8, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17444, file: !3, line: 8610, column: 8)
!17458 = !DILocation(line: 8611, column: 8, scope: !17457)
!17459 = !DILocation(line: 8611, column: 11, scope: !17457)
!17460 = !DILocation(line: 8610, column: 8, scope: !17444)
!17461 = !DILocation(line: 8612, column: 6, scope: !17457)
!17462 = !DILocation(line: 8613, column: 9, scope: !17463)
!17463 = distinct !DILexicalBlock(scope: !17444, file: !3, line: 8613, column: 8)
!17464 = !DILocation(line: 8613, column: 29, scope: !17463)
!17465 = !DILocation(line: 8613, column: 32, scope: !17463)
!17466 = !DILocation(line: 8614, column: 8, scope: !17463)
!17467 = !DILocation(line: 8614, column: 28, scope: !17463)
!17468 = !DILocation(line: 8614, column: 33, scope: !17463)
!17469 = !DILocation(line: 8614, column: 11, scope: !17463)
!17470 = !DILocation(line: 8613, column: 8, scope: !17444)
!17471 = !DILocation(line: 8618, column: 32, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17463, file: !3, line: 8615, column: 6)
!17473 = !DILocation(line: 8618, column: 52, scope: !17472)
!17474 = !DILocation(line: 8618, column: 8, scope: !17472)
!17475 = !DILocation(line: 8619, column: 21, scope: !17472)
!17476 = !DILocation(line: 8619, column: 8, scope: !17472)
!17477 = !DILocation(line: 8620, column: 8, scope: !17472)
!17478 = !DILocation(line: 8622, column: 2, scope: !17444)
!17479 = !DILocation(line: 8602, column: 44, scope: !17441)
!17480 = !DILocation(line: 8602, column: 42, scope: !17441)
!17481 = !DILocation(line: 8602, column: 7, scope: !17441)
!17482 = distinct !{!17482, !17442, !17483}
!17483 = !DILocation(line: 8622, column: 2, scope: !17437)
!17484 = !DILocation(line: 8626, column: 17, scope: !17485)
!17485 = distinct !DILexicalBlock(scope: !17434, file: !3, line: 8626, column: 7)
!17486 = !DILocation(line: 8626, column: 15, scope: !17485)
!17487 = !DILocation(line: 8626, column: 12, scope: !17485)
!17488 = !DILocation(line: 8626, column: 35, scope: !17489)
!17489 = distinct !DILexicalBlock(scope: !17485, file: !3, line: 8626, column: 7)
!17490 = !DILocation(line: 8626, column: 7, scope: !17485)
!17491 = !DILocalVariable(name: "set", scope: !17492, file: !3, line: 8628, type: !2372)
!17492 = distinct !DILexicalBlock(scope: !17489, file: !3, line: 8627, column: 2)
!17493 = !DILocation(line: 8628, column: 8, scope: !17492)
!17494 = !DILocation(line: 8628, column: 14, scope: !17492)
!17495 = !DILocation(line: 8630, column: 8, scope: !17496)
!17496 = distinct !DILexicalBlock(scope: !17492, file: !3, line: 8630, column: 8)
!17497 = !DILocation(line: 8630, column: 12, scope: !17496)
!17498 = !DILocation(line: 8630, column: 17, scope: !17496)
!17499 = !DILocation(line: 8630, column: 20, scope: !17496)
!17500 = !DILocation(line: 8630, column: 38, scope: !17496)
!17501 = !DILocation(line: 8630, column: 35, scope: !17496)
!17502 = !DILocation(line: 8630, column: 8, scope: !17492)
!17503 = !DILocation(line: 8632, column: 32, scope: !17504)
!17504 = distinct !DILexicalBlock(scope: !17496, file: !3, line: 8631, column: 6)
!17505 = !DILocation(line: 8632, column: 36, scope: !17504)
!17506 = !DILocation(line: 8632, column: 8, scope: !17504)
!17507 = !DILocation(line: 8633, column: 21, scope: !17504)
!17508 = !DILocation(line: 8633, column: 8, scope: !17504)
!17509 = !DILocation(line: 8634, column: 6, scope: !17504)
!17510 = !DILocation(line: 8635, column: 8, scope: !17511)
!17511 = distinct !DILexicalBlock(scope: !17492, file: !3, line: 8635, column: 8)
!17512 = !DILocation(line: 8636, column: 8, scope: !17511)
!17513 = !DILocation(line: 8636, column: 11, scope: !17511)
!17514 = !DILocation(line: 8635, column: 8, scope: !17492)
!17515 = !DILocation(line: 8637, column: 6, scope: !17511)
!17516 = !DILocation(line: 8638, column: 2, scope: !17492)
!17517 = !DILocation(line: 8626, column: 44, scope: !17489)
!17518 = !DILocation(line: 8626, column: 42, scope: !17489)
!17519 = !DILocation(line: 8626, column: 7, scope: !17489)
!17520 = distinct !{!17520, !17490, !17521}
!17521 = !DILocation(line: 8638, column: 2, scope: !17485)
!17522 = !DILocation(line: 8641, column: 35, scope: !17434)
!17523 = !DILocation(line: 8641, column: 7, scope: !17434)
!17524 = !DILocation(line: 8641, column: 20, scope: !17434)
!17525 = !DILocation(line: 8641, column: 33, scope: !17434)
!17526 = !DILocation(line: 8642, column: 11, scope: !17527)
!17527 = distinct !DILexicalBlock(scope: !17434, file: !3, line: 8642, column: 11)
!17528 = !DILocation(line: 8642, column: 11, scope: !17434)
!17529 = !DILocation(line: 8644, column: 30, scope: !17527)
!17530 = !DILocation(line: 8644, column: 2, scope: !17527)
!17531 = !DILocation(line: 8645, column: 18, scope: !17434)
!17532 = !DILocation(line: 8645, column: 7, scope: !17434)
!17533 = !DILocation(line: 8646, column: 5, scope: !17434)
!17534 = !DILocation(line: 8649, column: 31, scope: !17535)
!17535 = distinct !DILexicalBlock(scope: !17411, file: !3, line: 8648, column: 5)
!17536 = !DILocation(line: 8649, column: 51, scope: !17535)
!17537 = !DILocation(line: 8649, column: 7, scope: !17535)
!17538 = !DILocation(line: 8650, column: 20, scope: !17535)
!17539 = !DILocation(line: 8650, column: 7, scope: !17535)
!17540 = !DILocation(line: 8652, column: 1, scope: !17176)
!17541 = distinct !DISubprogram(name: "inc_for_reload", scope: !3, file: !3, line: 8812, type: !17542, scopeLine: 8813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!17542 = !DISubroutineType(types: !17543)
!17543 = !{!2372, !2372, !2372, !2372, !2396}
!17544 = !DILocalVariable(name: "reloadreg", arg: 1, scope: !17541, file: !3, line: 8812, type: !2372)
!17545 = !DILocation(line: 8812, column: 21, scope: !17541)
!17546 = !DILocalVariable(name: "in", arg: 2, scope: !17541, file: !3, line: 8812, type: !2372)
!17547 = !DILocation(line: 8812, column: 36, scope: !17541)
!17548 = !DILocalVariable(name: "value", arg: 3, scope: !17541, file: !3, line: 8812, type: !2372)
!17549 = !DILocation(line: 8812, column: 44, scope: !17541)
!17550 = !DILocalVariable(name: "inc_amount", arg: 4, scope: !17541, file: !3, line: 8812, type: !2396)
!17551 = !DILocation(line: 8812, column: 55, scope: !17541)
!17552 = !DILocalVariable(name: "incloc", scope: !17541, file: !3, line: 8815, type: !2372)
!17553 = !DILocation(line: 8815, column: 7, scope: !17541)
!17554 = !DILocation(line: 8815, column: 35, scope: !17541)
!17555 = !DILocation(line: 8815, column: 16, scope: !17541)
!17556 = !DILocalVariable(name: "post", scope: !17541, file: !3, line: 8817, type: !2396)
!17557 = !DILocation(line: 8817, column: 7, scope: !17541)
!17558 = !DILocation(line: 8817, column: 15, scope: !17541)
!17559 = !DILocation(line: 8817, column: 32, scope: !17541)
!17560 = !DILocation(line: 8817, column: 44, scope: !17541)
!17561 = !DILocation(line: 8817, column: 47, scope: !17541)
!17562 = !DILocation(line: 8817, column: 64, scope: !17541)
!17563 = !DILocation(line: 8818, column: 8, scope: !17541)
!17564 = !DILocation(line: 8818, column: 11, scope: !17541)
!17565 = !DILocation(line: 8818, column: 28, scope: !17541)
!17566 = !DILocalVariable(name: "last", scope: !17541, file: !3, line: 8819, type: !2372)
!17567 = !DILocation(line: 8819, column: 7, scope: !17541)
!17568 = !DILocalVariable(name: "inc", scope: !17541, file: !3, line: 8820, type: !2372)
!17569 = !DILocation(line: 8820, column: 7, scope: !17541)
!17570 = !DILocalVariable(name: "add_insn", scope: !17541, file: !3, line: 8821, type: !2372)
!17571 = !DILocation(line: 8821, column: 7, scope: !17541)
!17572 = !DILocalVariable(name: "code", scope: !17541, file: !3, line: 8822, type: !2396)
!17573 = !DILocation(line: 8822, column: 7, scope: !17541)
!17574 = !DILocalVariable(name: "store", scope: !17541, file: !3, line: 8823, type: !2372)
!17575 = !DILocation(line: 8823, column: 7, scope: !17541)
!17576 = !DILocalVariable(name: "real_in", scope: !17541, file: !3, line: 8824, type: !2372)
!17577 = !DILocation(line: 8824, column: 7, scope: !17541)
!17578 = !DILocation(line: 8824, column: 17, scope: !17541)
!17579 = !DILocation(line: 8824, column: 23, scope: !17541)
!17580 = !DILocation(line: 8824, column: 20, scope: !17541)
!17581 = !DILocation(line: 8824, column: 31, scope: !17541)
!17582 = !DILocation(line: 8824, column: 40, scope: !17541)
!17583 = !DILocation(line: 8830, column: 7, scope: !17584)
!17584 = distinct !DILexicalBlock(scope: !17541, file: !3, line: 8830, column: 7)
!17585 = !DILocation(line: 8830, column: 7, scope: !17541)
!17586 = !DILocation(line: 8831, column: 5, scope: !17584)
!17587 = !DILocation(line: 8831, column: 25, scope: !17584)
!17588 = !DILocation(line: 8831, column: 41, scope: !17584)
!17589 = !DILocation(line: 8833, column: 7, scope: !17590)
!17590 = distinct !DILexicalBlock(scope: !17541, file: !3, line: 8833, column: 7)
!17591 = !DILocation(line: 8833, column: 24, scope: !17590)
!17592 = !DILocation(line: 8833, column: 38, scope: !17590)
!17593 = !DILocation(line: 8833, column: 41, scope: !17590)
!17594 = !DILocation(line: 8833, column: 58, scope: !17590)
!17595 = !DILocation(line: 8833, column: 7, scope: !17541)
!17596 = !DILocation(line: 8835, column: 7, scope: !17597)
!17597 = distinct !DILexicalBlock(scope: !17590, file: !3, line: 8834, column: 5)
!17598 = !DILocation(line: 8836, column: 32, scope: !17597)
!17599 = !DILocation(line: 8836, column: 13, scope: !17597)
!17600 = !DILocation(line: 8836, column: 11, scope: !17597)
!17601 = !DILocation(line: 8837, column: 5, scope: !17597)
!17602 = !DILocation(line: 8840, column: 11, scope: !17603)
!17603 = distinct !DILexicalBlock(scope: !17604, file: !3, line: 8840, column: 11)
!17604 = distinct !DILexicalBlock(scope: !17590, file: !3, line: 8839, column: 5)
!17605 = !DILocation(line: 8840, column: 28, scope: !17603)
!17606 = !DILocation(line: 8840, column: 39, scope: !17603)
!17607 = !DILocation(line: 8840, column: 42, scope: !17603)
!17608 = !DILocation(line: 8840, column: 59, scope: !17603)
!17609 = !DILocation(line: 8840, column: 11, scope: !17604)
!17610 = !DILocation(line: 8841, column: 16, scope: !17603)
!17611 = !DILocation(line: 8841, column: 15, scope: !17603)
!17612 = !DILocation(line: 8841, column: 13, scope: !17603)
!17613 = !DILocation(line: 8841, column: 2, scope: !17603)
!17614 = !DILocation(line: 8843, column: 13, scope: !17604)
!17615 = !DILocation(line: 8843, column: 11, scope: !17604)
!17616 = !DILocation(line: 8847, column: 7, scope: !17617)
!17617 = distinct !DILexicalBlock(scope: !17541, file: !3, line: 8847, column: 7)
!17618 = !DILocation(line: 8847, column: 12, scope: !17617)
!17619 = !DILocation(line: 8847, column: 15, scope: !17617)
!17620 = !DILocation(line: 8847, column: 26, scope: !17617)
!17621 = !DILocation(line: 8847, column: 23, scope: !17617)
!17622 = !DILocation(line: 8847, column: 7, scope: !17541)
!17623 = !DILocation(line: 8848, column: 31, scope: !17617)
!17624 = !DILocation(line: 8848, column: 42, scope: !17617)
!17625 = !DILocation(line: 8848, column: 16, scope: !17617)
!17626 = !DILocation(line: 8848, column: 5, scope: !17617)
!17627 = !DILocation(line: 8850, column: 7, scope: !17628)
!17628 = distinct !DILexicalBlock(scope: !17541, file: !3, line: 8850, column: 7)
!17629 = !DILocation(line: 8850, column: 13, scope: !17628)
!17630 = !DILocation(line: 8850, column: 10, scope: !17628)
!17631 = !DILocation(line: 8850, column: 7, scope: !17541)
!17632 = !DILocation(line: 8855, column: 14, scope: !17633)
!17633 = distinct !DILexicalBlock(scope: !17628, file: !3, line: 8851, column: 5)
!17634 = !DILocation(line: 8855, column: 12, scope: !17633)
!17635 = !DILocation(line: 8856, column: 29, scope: !17633)
!17636 = !DILocation(line: 8856, column: 18, scope: !17633)
!17637 = !DILocation(line: 8856, column: 16, scope: !17633)
!17638 = !DILocation(line: 8860, column: 30, scope: !17633)
!17639 = !DILocation(line: 8860, column: 14, scope: !17633)
!17640 = !DILocation(line: 8860, column: 12, scope: !17633)
!17641 = !DILocation(line: 8861, column: 11, scope: !17642)
!17642 = distinct !DILexicalBlock(scope: !17633, file: !3, line: 8861, column: 11)
!17643 = !DILocation(line: 8861, column: 16, scope: !17642)
!17644 = !DILocation(line: 8861, column: 11, scope: !17633)
!17645 = !DILocation(line: 8863, column: 18, scope: !17646)
!17646 = distinct !DILexicalBlock(scope: !17642, file: !3, line: 8862, column: 2)
!17647 = !DILocation(line: 8863, column: 4, scope: !17646)
!17648 = !DILocation(line: 8864, column: 8, scope: !17649)
!17649 = distinct !DILexicalBlock(scope: !17646, file: !3, line: 8864, column: 8)
!17650 = !DILocation(line: 8864, column: 8, scope: !17646)
!17651 = !DILocation(line: 8870, column: 14, scope: !17652)
!17652 = distinct !DILexicalBlock(scope: !17653, file: !3, line: 8870, column: 12)
!17653 = distinct !DILexicalBlock(scope: !17649, file: !3, line: 8865, column: 6)
!17654 = !DILocation(line: 8870, column: 12, scope: !17653)
!17655 = !DILocation(line: 8871, column: 29, scope: !17652)
!17656 = !DILocation(line: 8871, column: 40, scope: !17652)
!17657 = !DILocation(line: 8871, column: 14, scope: !17652)
!17658 = !DILocation(line: 8871, column: 3, scope: !17652)
!17659 = !DILocation(line: 8873, column: 15, scope: !17653)
!17660 = !DILocation(line: 8873, column: 8, scope: !17653)
!17661 = !DILocation(line: 8875, column: 2, scope: !17646)
!17662 = !DILocation(line: 8876, column: 27, scope: !17633)
!17663 = !DILocation(line: 8876, column: 7, scope: !17633)
!17664 = !DILocation(line: 8877, column: 5, scope: !17633)
!17665 = !DILocation(line: 8884, column: 9, scope: !17666)
!17666 = distinct !DILexicalBlock(scope: !17541, file: !3, line: 8884, column: 7)
!17667 = !DILocation(line: 8884, column: 7, scope: !17541)
!17668 = !DILocation(line: 8886, column: 11, scope: !17669)
!17669 = distinct !DILexicalBlock(scope: !17670, file: !3, line: 8886, column: 11)
!17670 = distinct !DILexicalBlock(scope: !17666, file: !3, line: 8885, column: 5)
!17671 = !DILocation(line: 8886, column: 17, scope: !17669)
!17672 = !DILocation(line: 8886, column: 14, scope: !17669)
!17673 = !DILocation(line: 8886, column: 11, scope: !17670)
!17674 = !DILocation(line: 8887, column: 28, scope: !17669)
!17675 = !DILocation(line: 8887, column: 39, scope: !17669)
!17676 = !DILocation(line: 8887, column: 13, scope: !17669)
!17677 = !DILocation(line: 8887, column: 2, scope: !17669)
!17678 = !DILocation(line: 8888, column: 33, scope: !17670)
!17679 = !DILocation(line: 8888, column: 44, scope: !17670)
!17680 = !DILocation(line: 8888, column: 18, scope: !17670)
!17681 = !DILocation(line: 8888, column: 7, scope: !17670)
!17682 = !DILocation(line: 8889, column: 41, scope: !17670)
!17683 = !DILocation(line: 8889, column: 49, scope: !17670)
!17684 = !DILocation(line: 8889, column: 26, scope: !17670)
!17685 = !DILocation(line: 8889, column: 15, scope: !17670)
!17686 = !DILocation(line: 8889, column: 13, scope: !17670)
!17687 = !DILocation(line: 8890, column: 5, scope: !17670)
!17688 = !DILocation(line: 8902, column: 33, scope: !17689)
!17689 = distinct !DILexicalBlock(scope: !17666, file: !3, line: 8892, column: 5)
!17690 = !DILocation(line: 8902, column: 44, scope: !17689)
!17691 = !DILocation(line: 8902, column: 18, scope: !17689)
!17692 = !DILocation(line: 8902, column: 7, scope: !17689)
!17693 = !DILocation(line: 8903, column: 41, scope: !17689)
!17694 = !DILocation(line: 8903, column: 49, scope: !17689)
!17695 = !DILocation(line: 8903, column: 26, scope: !17689)
!17696 = !DILocation(line: 8903, column: 15, scope: !17689)
!17697 = !DILocation(line: 8903, column: 13, scope: !17689)
!17698 = !DILocation(line: 8904, column: 11, scope: !17699)
!17699 = distinct !DILexicalBlock(scope: !17689, file: !3, line: 8904, column: 11)
!17700 = !DILocation(line: 8904, column: 11, scope: !17689)
!17701 = !DILocation(line: 8905, column: 28, scope: !17699)
!17702 = !DILocation(line: 8905, column: 39, scope: !17699)
!17703 = !DILocation(line: 8905, column: 13, scope: !17699)
!17704 = !DILocation(line: 8905, column: 2, scope: !17699)
!17705 = !DILocation(line: 8907, column: 28, scope: !17699)
!17706 = !DILocation(line: 8907, column: 39, scope: !17699)
!17707 = !DILocation(line: 8907, column: 13, scope: !17699)
!17708 = !DILocation(line: 8907, column: 2, scope: !17699)
!17709 = !DILocation(line: 8910, column: 10, scope: !17541)
!17710 = !DILocation(line: 8910, column: 3, scope: !17541)
!17711 = !DILocation(line: 8911, column: 1, scope: !17541)
!17712 = distinct !DISubprogram(name: "conflicts_with_override", scope: !3, file: !3, line: 5689, type: !9953, scopeLine: 5690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!17713 = !DILocalVariable(name: "x", arg: 1, scope: !17712, file: !3, line: 5689, type: !2372)
!17714 = !DILocation(line: 5689, column: 30, scope: !17712)
!17715 = !DILocalVariable(name: "i", scope: !17712, file: !3, line: 5691, type: !2396)
!17716 = !DILocation(line: 5691, column: 7, scope: !17712)
!17717 = !DILocation(line: 5692, column: 10, scope: !17718)
!17718 = distinct !DILexicalBlock(scope: !17712, file: !3, line: 5692, column: 3)
!17719 = !DILocation(line: 5692, column: 8, scope: !17718)
!17720 = !DILocation(line: 5692, column: 15, scope: !17721)
!17721 = distinct !DILexicalBlock(scope: !17718, file: !3, line: 5692, column: 3)
!17722 = !DILocation(line: 5692, column: 19, scope: !17721)
!17723 = !DILocation(line: 5692, column: 17, scope: !17721)
!17724 = !DILocation(line: 5692, column: 3, scope: !17718)
!17725 = !DILocation(line: 5693, column: 28, scope: !17726)
!17726 = distinct !DILexicalBlock(scope: !17721, file: !3, line: 5693, column: 9)
!17727 = !DILocation(line: 5693, column: 9, scope: !17726)
!17728 = !DILocation(line: 5694, column: 2, scope: !17726)
!17729 = !DILocation(line: 5694, column: 30, scope: !17726)
!17730 = !DILocation(line: 5694, column: 52, scope: !17726)
!17731 = !DILocation(line: 5694, column: 33, scope: !17726)
!17732 = !DILocation(line: 5694, column: 5, scope: !17726)
!17733 = !DILocation(line: 5693, column: 9, scope: !17721)
!17734 = !DILocation(line: 5695, column: 7, scope: !17726)
!17735 = !DILocation(line: 5694, column: 54, scope: !17726)
!17736 = !DILocation(line: 5692, column: 31, scope: !17721)
!17737 = !DILocation(line: 5692, column: 3, scope: !17721)
!17738 = distinct !{!17738, !17724, !17739}
!17739 = !DILocation(line: 5695, column: 14, scope: !17718)
!17740 = !DILocation(line: 5696, column: 3, scope: !17712)
!17741 = !DILocation(line: 5697, column: 1, scope: !17712)
!17742 = distinct !DISubprogram(name: "REG_N_SETS", scope: !4204, file: !4204, line: 90, type: !6339, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!17743 = !DILocalVariable(name: "regno", arg: 1, scope: !17742, file: !4204, line: 90, type: !2396)
!17744 = !DILocation(line: 90, column: 17, scope: !17742)
!17745 = !DILocation(line: 92, column: 10, scope: !17742)
!17746 = !DILocation(line: 92, column: 34, scope: !17742)
!17747 = !DILocation(line: 92, column: 41, scope: !17742)
!17748 = !DILocation(line: 92, column: 3, scope: !17742)
!17749 = distinct !DISubprogram(name: "reload_adjust_reg_for_icode", scope: !3, file: !3, line: 6885, type: !17750, scopeLine: 6888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!17750 = !DISubroutineType(types: !17751)
!17751 = !{!2603, !3579, !2372, !557}
!17752 = !DILocalVariable(name: "reload_reg", arg: 1, scope: !17749, file: !3, line: 6885, type: !3579)
!17753 = !DILocation(line: 6885, column: 35, scope: !17749)
!17754 = !DILocalVariable(name: "alt_reload_reg", arg: 2, scope: !17749, file: !3, line: 6885, type: !2372)
!17755 = !DILocation(line: 6885, column: 51, scope: !17749)
!17756 = !DILocalVariable(name: "icode", arg: 3, scope: !17749, file: !3, line: 6886, type: !557)
!17757 = !DILocation(line: 6886, column: 24, scope: !17749)
!17758 = !DILocalVariable(name: "new_class", scope: !17749, file: !3, line: 6889, type: !527)
!17759 = !DILocation(line: 6889, column: 18, scope: !17749)
!17760 = !DILocation(line: 6889, column: 52, scope: !17749)
!17761 = !DILocation(line: 6889, column: 30, scope: !17749)
!17762 = !DILocalVariable(name: "new_mode", scope: !17749, file: !3, line: 6890, type: !5)
!17763 = !DILocation(line: 6890, column: 21, scope: !17749)
!17764 = !DILocation(line: 6890, column: 48, scope: !17749)
!17765 = !DILocation(line: 6890, column: 32, scope: !17749)
!17766 = !DILocation(line: 6890, column: 55, scope: !17749)
!17767 = !DILocation(line: 6890, column: 66, scope: !17749)
!17768 = !DILocation(line: 6892, column: 38, scope: !17749)
!17769 = !DILocation(line: 6892, column: 50, scope: !17749)
!17770 = !DILocation(line: 6893, column: 10, scope: !17749)
!17771 = !DILocation(line: 6893, column: 21, scope: !17749)
!17772 = !DILocation(line: 6892, column: 10, scope: !17749)
!17773 = !DILocation(line: 6892, column: 3, scope: !17749)
!17774 = distinct !DISubprogram(name: "reload_adjust_reg_for_temp", scope: !3, file: !3, line: 6852, type: !17775, scopeLine: 6856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!17775 = !DISubroutineType(types: !17776)
!17776 = !{!2603, !3579, !2372, !527, !5}
!17777 = !DILocalVariable(name: "reload_reg", arg: 1, scope: !17774, file: !3, line: 6852, type: !3579)
!17778 = !DILocation(line: 6852, column: 34, scope: !17774)
!17779 = !DILocalVariable(name: "alt_reload_reg", arg: 2, scope: !17774, file: !3, line: 6852, type: !2372)
!17780 = !DILocation(line: 6852, column: 50, scope: !17774)
!17781 = !DILocalVariable(name: "new_class", arg: 3, scope: !17774, file: !3, line: 6853, type: !527)
!17782 = !DILocation(line: 6853, column: 23, scope: !17774)
!17783 = !DILocalVariable(name: "new_mode", arg: 4, scope: !17774, file: !3, line: 6854, type: !5)
!17784 = !DILocation(line: 6854, column: 26, scope: !17774)
!17785 = !DILocalVariable(name: "reg", scope: !17774, file: !3, line: 6857, type: !2372)
!17786 = !DILocation(line: 6857, column: 7, scope: !17774)
!17787 = !DILocation(line: 6859, column: 15, scope: !17788)
!17788 = distinct !DILexicalBlock(scope: !17774, file: !3, line: 6859, column: 3)
!17789 = !DILocation(line: 6859, column: 14, scope: !17788)
!17790 = !DILocation(line: 6859, column: 12, scope: !17788)
!17791 = !DILocation(line: 6859, column: 8, scope: !17788)
!17792 = !DILocation(line: 6859, column: 27, scope: !17793)
!17793 = distinct !DILexicalBlock(scope: !17788, file: !3, line: 6859, column: 3)
!17794 = !DILocation(line: 6859, column: 3, scope: !17788)
!17795 = !DILocalVariable(name: "regno", scope: !17796, file: !3, line: 6861, type: !7)
!17796 = distinct !DILexicalBlock(scope: !17793, file: !3, line: 6860, column: 5)
!17797 = !DILocation(line: 6861, column: 16, scope: !17796)
!17798 = !DILocation(line: 6861, column: 24, scope: !17796)
!17799 = !DILocation(line: 6863, column: 12, scope: !17800)
!17800 = distinct !DILexicalBlock(scope: !17796, file: !3, line: 6863, column: 11)
!17801 = !DILocation(line: 6863, column: 11, scope: !17796)
!17802 = !DILocation(line: 6864, column: 2, scope: !17800)
!17803 = !DILocation(line: 6865, column: 11, scope: !17804)
!17804 = distinct !DILexicalBlock(scope: !17796, file: !3, line: 6865, column: 11)
!17805 = !DILocation(line: 6865, column: 29, scope: !17804)
!17806 = !DILocation(line: 6865, column: 26, scope: !17804)
!17807 = !DILocation(line: 6865, column: 11, scope: !17796)
!17808 = !DILocation(line: 6867, column: 9, scope: !17809)
!17809 = distinct !DILexicalBlock(scope: !17810, file: !3, line: 6867, column: 8)
!17810 = distinct !DILexicalBlock(scope: !17804, file: !3, line: 6866, column: 2)
!17811 = !DILocation(line: 6867, column: 8, scope: !17810)
!17812 = !DILocation(line: 6868, column: 6, scope: !17809)
!17813 = !DILocation(line: 6869, column: 25, scope: !17814)
!17814 = distinct !DILexicalBlock(scope: !17810, file: !3, line: 6869, column: 8)
!17815 = !DILocation(line: 6869, column: 8, scope: !17814)
!17816 = !DILocation(line: 6869, column: 32, scope: !17814)
!17817 = !DILocation(line: 6870, column: 27, scope: !17814)
!17818 = !DILocation(line: 6870, column: 10, scope: !17814)
!17819 = !DILocation(line: 6870, column: 34, scope: !17814)
!17820 = !DILocation(line: 6870, column: 8, scope: !17814)
!17821 = !DILocation(line: 6869, column: 8, scope: !17810)
!17822 = !DILocation(line: 6871, column: 6, scope: !17814)
!17823 = !DILocation(line: 6872, column: 38, scope: !17810)
!17824 = !DILocation(line: 6872, column: 43, scope: !17810)
!17825 = !DILocation(line: 6872, column: 10, scope: !17810)
!17826 = !DILocation(line: 6872, column: 8, scope: !17810)
!17827 = !DILocation(line: 6873, column: 2, scope: !17810)
!17828 = !DILocation(line: 6874, column: 21, scope: !17796)
!17829 = !DILocation(line: 6874, column: 8, scope: !17796)
!17830 = !DILocation(line: 6874, column: 19, scope: !17796)
!17831 = !DILocation(line: 6875, column: 7, scope: !17796)
!17832 = !DILocation(line: 6859, column: 38, scope: !17793)
!17833 = !DILocation(line: 6859, column: 36, scope: !17793)
!17834 = !DILocation(line: 6859, column: 69, scope: !17793)
!17835 = !DILocation(line: 6859, column: 3, scope: !17793)
!17836 = distinct !{!17836, !17794, !17837}
!17837 = !DILocation(line: 6876, column: 5, scope: !17788)
!17838 = !DILocation(line: 6877, column: 3, scope: !17774)
!17839 = !DILocation(line: 6878, column: 1, scope: !17774)
!17840 = distinct !DISubprogram(name: "gen_reload", scope: !3, file: !3, line: 8240, type: !17841, scopeLine: 8241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!17841 = !DISubroutineType(types: !17842)
!17842 = !{!2372, !2372, !2372, !2396, !2049}
!17843 = !DILocalVariable(name: "out", arg: 1, scope: !17840, file: !3, line: 8240, type: !2372)
!17844 = !DILocation(line: 8240, column: 17, scope: !17840)
!17845 = !DILocalVariable(name: "in", arg: 2, scope: !17840, file: !3, line: 8240, type: !2372)
!17846 = !DILocation(line: 8240, column: 26, scope: !17840)
!17847 = !DILocalVariable(name: "opnum", arg: 3, scope: !17840, file: !3, line: 8240, type: !2396)
!17848 = !DILocation(line: 8240, column: 34, scope: !17840)
!17849 = !DILocalVariable(name: "type", arg: 4, scope: !17840, file: !3, line: 8240, type: !2049)
!17850 = !DILocation(line: 8240, column: 58, scope: !17840)
!17851 = !DILocalVariable(name: "last", scope: !17840, file: !3, line: 8242, type: !2372)
!17852 = !DILocation(line: 8242, column: 7, scope: !17840)
!17853 = !DILocation(line: 8242, column: 14, scope: !17840)
!17854 = !DILocalVariable(name: "tem", scope: !17840, file: !3, line: 8243, type: !2372)
!17855 = !DILocation(line: 8243, column: 7, scope: !17840)
!17856 = !DILocation(line: 8247, column: 7, scope: !17857)
!17857 = distinct !DILexicalBlock(scope: !17840, file: !3, line: 8247, column: 7)
!17858 = !DILocation(line: 8247, column: 21, scope: !17857)
!17859 = !DILocation(line: 8248, column: 7, scope: !17857)
!17860 = !DILocation(line: 8248, column: 11, scope: !17857)
!17861 = !DILocation(line: 8249, column: 6, scope: !17857)
!17862 = !DILocation(line: 8249, column: 4, scope: !17857)
!17863 = !DILocation(line: 8250, column: 7, scope: !17857)
!17864 = !DILocation(line: 8250, column: 37, scope: !17857)
!17865 = !DILocation(line: 8250, column: 65, scope: !17857)
!17866 = !DILocation(line: 8250, column: 17, scope: !17857)
!17867 = !DILocation(line: 8250, column: 15, scope: !17857)
!17868 = !DILocation(line: 8250, column: 71, scope: !17857)
!17869 = !DILocation(line: 8247, column: 7, scope: !17840)
!17870 = !DILocation(line: 8251, column: 10, scope: !17857)
!17871 = !DILocation(line: 8251, column: 8, scope: !17857)
!17872 = !DILocation(line: 8251, column: 33, scope: !17857)
!17873 = !DILocation(line: 8251, column: 31, scope: !17857)
!17874 = !DILocation(line: 8251, column: 5, scope: !17857)
!17875 = !DILocation(line: 8252, column: 12, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17857, file: !3, line: 8252, column: 12)
!17877 = !DILocation(line: 8252, column: 27, scope: !17876)
!17878 = !DILocation(line: 8253, column: 5, scope: !17876)
!17879 = !DILocation(line: 8253, column: 9, scope: !17876)
!17880 = !DILocation(line: 8254, column: 11, scope: !17876)
!17881 = !DILocation(line: 8254, column: 9, scope: !17876)
!17882 = !DILocation(line: 8255, column: 5, scope: !17876)
!17883 = !DILocation(line: 8255, column: 35, scope: !17876)
!17884 = !DILocation(line: 8255, column: 64, scope: !17876)
!17885 = !DILocation(line: 8255, column: 15, scope: !17876)
!17886 = !DILocation(line: 8255, column: 13, scope: !17876)
!17887 = !DILocation(line: 8255, column: 69, scope: !17876)
!17888 = !DILocation(line: 8252, column: 12, scope: !17857)
!17889 = !DILocation(line: 8256, column: 11, scope: !17876)
!17890 = !DILocation(line: 8256, column: 9, scope: !17876)
!17891 = !DILocation(line: 8256, column: 34, scope: !17876)
!17892 = !DILocation(line: 8256, column: 32, scope: !17876)
!17893 = !DILocation(line: 8256, column: 5, scope: !17876)
!17894 = !DILocation(line: 8290, column: 7, scope: !17895)
!17895 = distinct !DILexicalBlock(scope: !17840, file: !3, line: 8290, column: 7)
!17896 = !DILocation(line: 8290, column: 21, scope: !17895)
!17897 = !DILocation(line: 8291, column: 7, scope: !17895)
!17898 = !DILocation(line: 8291, column: 11, scope: !17895)
!17899 = !DILocation(line: 8292, column: 4, scope: !17895)
!17900 = !DILocation(line: 8292, column: 7, scope: !17895)
!17901 = !DILocation(line: 8292, column: 31, scope: !17895)
!17902 = !DILocation(line: 8293, column: 4, scope: !17895)
!17903 = !DILocation(line: 8293, column: 7, scope: !17895)
!17904 = !DILocation(line: 8294, column: 7, scope: !17895)
!17905 = !DILocation(line: 8294, column: 11, scope: !17895)
!17906 = !DILocation(line: 8295, column: 4, scope: !17895)
!17907 = !DILocation(line: 8295, column: 7, scope: !17895)
!17908 = !DILocation(line: 8295, column: 31, scope: !17895)
!17909 = !DILocation(line: 8296, column: 4, scope: !17895)
!17910 = !DILocation(line: 8296, column: 7, scope: !17895)
!17911 = !DILocation(line: 8297, column: 4, scope: !17895)
!17912 = !DILocation(line: 8297, column: 7, scope: !17895)
!17913 = !DILocation(line: 8290, column: 7, scope: !17840)
!17914 = !DILocalVariable(name: "op0", scope: !17915, file: !3, line: 8312, type: !2372)
!17915 = distinct !DILexicalBlock(scope: !17895, file: !3, line: 8298, column: 5)
!17916 = !DILocation(line: 8312, column: 11, scope: !17915)
!17917 = !DILocalVariable(name: "op1", scope: !17915, file: !3, line: 8312, type: !2372)
!17918 = !DILocation(line: 8312, column: 16, scope: !17915)
!17919 = !DILocalVariable(name: "tem", scope: !17915, file: !3, line: 8312, type: !2372)
!17920 = !DILocation(line: 8312, column: 21, scope: !17915)
!17921 = !DILocalVariable(name: "insn", scope: !17915, file: !3, line: 8312, type: !2372)
!17922 = !DILocation(line: 8312, column: 26, scope: !17915)
!17923 = !DILocalVariable(name: "code", scope: !17915, file: !3, line: 8313, type: !2396)
!17924 = !DILocation(line: 8313, column: 11, scope: !17915)
!17925 = !DILocation(line: 8315, column: 32, scope: !17915)
!17926 = !DILocation(line: 8315, column: 13, scope: !17915)
!17927 = !DILocation(line: 8315, column: 11, scope: !17915)
!17928 = !DILocation(line: 8316, column: 32, scope: !17915)
!17929 = !DILocation(line: 8316, column: 13, scope: !17915)
!17930 = !DILocation(line: 8316, column: 11, scope: !17915)
!17931 = !DILocation(line: 8325, column: 11, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17915, file: !3, line: 8325, column: 11)
!17933 = !DILocation(line: 8326, column: 4, scope: !17932)
!17934 = !DILocation(line: 8326, column: 7, scope: !17932)
!17935 = !DILocation(line: 8326, column: 22, scope: !17932)
!17936 = !DILocation(line: 8326, column: 19, scope: !17932)
!17937 = !DILocation(line: 8325, column: 11, scope: !17915)
!17938 = !DILocation(line: 8327, column: 8, scope: !17932)
!17939 = !DILocation(line: 8327, column: 6, scope: !17932)
!17940 = !DILocation(line: 8327, column: 19, scope: !17932)
!17941 = !DILocation(line: 8327, column: 17, scope: !17932)
!17942 = !DILocation(line: 8327, column: 30, scope: !17932)
!17943 = !DILocation(line: 8327, column: 28, scope: !17932)
!17944 = !DILocation(line: 8327, column: 2, scope: !17932)
!17945 = !DILocation(line: 8329, column: 11, scope: !17946)
!17946 = distinct !DILexicalBlock(scope: !17915, file: !3, line: 8329, column: 11)
!17947 = !DILocation(line: 8329, column: 18, scope: !17946)
!17948 = !DILocation(line: 8329, column: 15, scope: !17946)
!17949 = !DILocation(line: 8329, column: 31, scope: !17946)
!17950 = !DILocation(line: 8329, column: 34, scope: !17946)
!17951 = !DILocation(line: 8329, column: 41, scope: !17946)
!17952 = !DILocation(line: 8329, column: 38, scope: !17946)
!17953 = !DILocation(line: 8329, column: 11, scope: !17915)
!17954 = !DILocation(line: 8330, column: 7, scope: !17946)
!17955 = !DILocation(line: 8330, column: 5, scope: !17946)
!17956 = !DILocation(line: 8330, column: 2, scope: !17946)
!17957 = !DILocation(line: 8332, column: 45, scope: !17915)
!17958 = !DILocation(line: 8332, column: 14, scope: !17915)
!17959 = !DILocation(line: 8332, column: 12, scope: !17915)
!17960 = !DILocation(line: 8333, column: 11, scope: !17961)
!17961 = distinct !DILexicalBlock(scope: !17915, file: !3, line: 8333, column: 11)
!17962 = !DILocation(line: 8333, column: 11, scope: !17915)
!17963 = !DILocation(line: 8334, column: 9, scope: !17961)
!17964 = !DILocation(line: 8334, column: 2, scope: !17961)
!17965 = !DILocation(line: 8351, column: 20, scope: !17915)
!17966 = !DILocation(line: 8351, column: 63, scope: !17915)
!17967 = !DILocation(line: 8351, column: 12, scope: !17915)
!17968 = !DILocation(line: 8353, column: 11, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17915, file: !3, line: 8353, column: 11)
!17970 = !DILocation(line: 8353, column: 28, scope: !17969)
!17971 = !DILocation(line: 8353, column: 31, scope: !17969)
!17972 = !DILocation(line: 8353, column: 43, scope: !17969)
!17973 = !DILocation(line: 8353, column: 46, scope: !17969)
!17974 = !DILocation(line: 8353, column: 61, scope: !17969)
!17975 = !DILocation(line: 8354, column: 4, scope: !17969)
!17976 = !DILocation(line: 8354, column: 8, scope: !17969)
!17977 = !DILocation(line: 8355, column: 8, scope: !17969)
!17978 = !DILocation(line: 8355, column: 11, scope: !17969)
!17979 = !DILocation(line: 8355, column: 23, scope: !17969)
!17980 = !DILocation(line: 8356, column: 4, scope: !17969)
!17981 = !DILocation(line: 8356, column: 8, scope: !17969)
!17982 = !DILocation(line: 8356, column: 13, scope: !17969)
!17983 = !DILocation(line: 8357, column: 8, scope: !17969)
!17984 = !DILocation(line: 8357, column: 26, scope: !17969)
!17985 = !DILocation(line: 8357, column: 16, scope: !17969)
!17986 = !DILocation(line: 8357, column: 32, scope: !17969)
!17987 = !DILocation(line: 8357, column: 43, scope: !17969)
!17988 = !DILocation(line: 8358, column: 8, scope: !17969)
!17989 = !DILocation(line: 8358, column: 23, scope: !17969)
!17990 = !DILocation(line: 8358, column: 13, scope: !17969)
!17991 = !DILocation(line: 8358, column: 29, scope: !17969)
!17992 = !DILocation(line: 8358, column: 40, scope: !17969)
!17993 = !DILocation(line: 8357, column: 14, scope: !17969)
!17994 = !DILocation(line: 8353, column: 11, scope: !17915)
!17995 = !DILocation(line: 8359, column: 8, scope: !17969)
!17996 = !DILocation(line: 8359, column: 6, scope: !17969)
!17997 = !DILocation(line: 8359, column: 19, scope: !17969)
!17998 = !DILocation(line: 8359, column: 17, scope: !17969)
!17999 = !DILocation(line: 8359, column: 30, scope: !17969)
!18000 = !DILocation(line: 8359, column: 28, scope: !17969)
!18001 = !DILocation(line: 8359, column: 2, scope: !17969)
!18002 = !DILocation(line: 8361, column: 19, scope: !17915)
!18003 = !DILocation(line: 8361, column: 24, scope: !17915)
!18004 = !DILocation(line: 8361, column: 29, scope: !17915)
!18005 = !DILocation(line: 8361, column: 36, scope: !17915)
!18006 = !DILocation(line: 8361, column: 7, scope: !17915)
!18007 = !DILocation(line: 8367, column: 24, scope: !18008)
!18008 = distinct !DILexicalBlock(scope: !17915, file: !3, line: 8367, column: 11)
!18009 = !DILocation(line: 8367, column: 29, scope: !18008)
!18010 = !DILocation(line: 8367, column: 11, scope: !18008)
!18011 = !DILocation(line: 8367, column: 11, scope: !17915)
!18012 = !DILocation(line: 8368, column: 8, scope: !18008)
!18013 = !DILocation(line: 8368, column: 6, scope: !18008)
!18014 = !DILocation(line: 8368, column: 2, scope: !18008)
!18015 = !DILocation(line: 8370, column: 60, scope: !17915)
!18016 = !DILocation(line: 8370, column: 65, scope: !17915)
!18017 = !DILocation(line: 8370, column: 45, scope: !17915)
!18018 = !DILocation(line: 8370, column: 14, scope: !17915)
!18019 = !DILocation(line: 8370, column: 12, scope: !17915)
!18020 = !DILocation(line: 8371, column: 11, scope: !18021)
!18021 = distinct !DILexicalBlock(scope: !17915, file: !3, line: 8371, column: 11)
!18022 = !DILocation(line: 8371, column: 11, scope: !17915)
!18023 = !DILocation(line: 8374, column: 25, scope: !18024)
!18024 = distinct !DILexicalBlock(scope: !18021, file: !3, line: 8372, column: 2)
!18025 = !DILocation(line: 8374, column: 42, scope: !18024)
!18026 = !DILocation(line: 8374, column: 4, scope: !18024)
!18027 = !DILocation(line: 8375, column: 11, scope: !18024)
!18028 = !DILocation(line: 8375, column: 4, scope: !18024)
!18029 = !DILocation(line: 8381, column: 7, scope: !17915)
!18030 = !DILocation(line: 8382, column: 19, scope: !17915)
!18031 = !DILocation(line: 8382, column: 24, scope: !17915)
!18032 = !DILocation(line: 8382, column: 29, scope: !17915)
!18033 = !DILocation(line: 8382, column: 36, scope: !17915)
!18034 = !DILocation(line: 8382, column: 7, scope: !17915)
!18035 = !DILocation(line: 8383, column: 40, scope: !17915)
!18036 = !DILocation(line: 8383, column: 45, scope: !17915)
!18037 = !DILocation(line: 8383, column: 25, scope: !17915)
!18038 = !DILocation(line: 8383, column: 14, scope: !17915)
!18039 = !DILocation(line: 8383, column: 12, scope: !17915)
!18040 = !DILocation(line: 8384, column: 28, scope: !17915)
!18041 = !DILocation(line: 8384, column: 45, scope: !17915)
!18042 = !DILocation(line: 8384, column: 7, scope: !17915)
!18043 = !DILocation(line: 8385, column: 5, scope: !17915)
!18044 = !DILocation(line: 8389, column: 13, scope: !18045)
!18045 = distinct !DILexicalBlock(scope: !17895, file: !3, line: 8389, column: 12)
!18046 = !DILocation(line: 8390, column: 13, scope: !18045)
!18047 = !DILocation(line: 8390, column: 17, scope: !18045)
!18048 = !DILocation(line: 8390, column: 31, scope: !18045)
!18049 = !DILocation(line: 8390, column: 41, scope: !18045)
!18050 = !DILocation(line: 8390, column: 44, scope: !18045)
!18051 = !DILocation(line: 8391, column: 5, scope: !18045)
!18052 = !DILocation(line: 8391, column: 25, scope: !18045)
!18053 = !DILocation(line: 8391, column: 8, scope: !18045)
!18054 = !DILocation(line: 8391, column: 29, scope: !18045)
!18055 = !DILocation(line: 8392, column: 5, scope: !18045)
!18056 = !DILocation(line: 8392, column: 9, scope: !18045)
!18057 = !DILocation(line: 8393, column: 9, scope: !18045)
!18058 = !DILocation(line: 8393, column: 13, scope: !18045)
!18059 = !DILocation(line: 8393, column: 28, scope: !18045)
!18060 = !DILocation(line: 8393, column: 38, scope: !18045)
!18061 = !DILocation(line: 8393, column: 41, scope: !18045)
!18062 = !DILocation(line: 8394, column: 5, scope: !18045)
!18063 = !DILocation(line: 8394, column: 25, scope: !18045)
!18064 = !DILocation(line: 8394, column: 8, scope: !18045)
!18065 = !DILocation(line: 8394, column: 30, scope: !18045)
!18066 = !DILocation(line: 8395, column: 5, scope: !18045)
!18067 = !DILocation(line: 8395, column: 8, scope: !18045)
!18068 = !DILocation(line: 8389, column: 12, scope: !17895)
!18069 = !DILocalVariable(name: "loc", scope: !18070, file: !3, line: 8400, type: !2372)
!18070 = distinct !DILexicalBlock(scope: !18045, file: !3, line: 8398, column: 5)
!18071 = !DILocation(line: 8400, column: 11, scope: !18070)
!18072 = !DILocation(line: 8400, column: 36, scope: !18070)
!18073 = !DILocation(line: 8400, column: 40, scope: !18070)
!18074 = !DILocation(line: 8400, column: 56, scope: !18070)
!18075 = !DILocation(line: 8400, column: 63, scope: !18070)
!18076 = !DILocation(line: 8400, column: 17, scope: !18070)
!18077 = !DILocation(line: 8402, column: 11, scope: !18078)
!18078 = distinct !DILexicalBlock(scope: !18070, file: !3, line: 8402, column: 11)
!18079 = !DILocation(line: 8402, column: 29, scope: !18078)
!18080 = !DILocation(line: 8402, column: 26, scope: !18078)
!18081 = !DILocation(line: 8402, column: 11, scope: !18070)
!18082 = !DILocation(line: 8403, column: 21, scope: !18078)
!18083 = !DILocation(line: 8403, column: 37, scope: !18078)
!18084 = !DILocation(line: 8403, column: 8, scope: !18078)
!18085 = !DILocation(line: 8403, column: 6, scope: !18078)
!18086 = !DILocation(line: 8403, column: 2, scope: !18078)
!18087 = !DILocation(line: 8405, column: 11, scope: !18088)
!18088 = distinct !DILexicalBlock(scope: !18070, file: !3, line: 8405, column: 11)
!18089 = !DILocation(line: 8405, column: 29, scope: !18088)
!18090 = !DILocation(line: 8405, column: 26, scope: !18088)
!18091 = !DILocation(line: 8405, column: 11, scope: !18070)
!18092 = !DILocation(line: 8406, column: 20, scope: !18088)
!18093 = !DILocation(line: 8406, column: 36, scope: !18088)
!18094 = !DILocation(line: 8406, column: 7, scope: !18088)
!18095 = !DILocation(line: 8406, column: 5, scope: !18088)
!18096 = !DILocation(line: 8406, column: 2, scope: !18088)
!18097 = !DILocation(line: 8408, column: 19, scope: !18070)
!18098 = !DILocation(line: 8408, column: 24, scope: !18070)
!18099 = !DILocation(line: 8408, column: 28, scope: !18070)
!18100 = !DILocation(line: 8408, column: 35, scope: !18070)
!18101 = !DILocation(line: 8408, column: 7, scope: !18070)
!18102 = !DILocation(line: 8409, column: 19, scope: !18070)
!18103 = !DILocation(line: 8409, column: 24, scope: !18070)
!18104 = !DILocation(line: 8409, column: 29, scope: !18070)
!18105 = !DILocation(line: 8409, column: 36, scope: !18070)
!18106 = !DILocation(line: 8409, column: 7, scope: !18070)
!18107 = !DILocation(line: 8410, column: 5, scope: !18070)
!18108 = !DILocation(line: 8412, column: 12, scope: !18109)
!18109 = distinct !DILexicalBlock(scope: !18045, file: !3, line: 8412, column: 12)
!18110 = !DILocation(line: 8412, column: 24, scope: !18109)
!18111 = !DILocation(line: 8412, column: 27, scope: !18109)
!18112 = !DILocation(line: 8412, column: 12, scope: !18045)
!18113 = !DILocalVariable(name: "insn", scope: !18114, file: !3, line: 8414, type: !2372)
!18114 = distinct !DILexicalBlock(scope: !18109, file: !3, line: 8413, column: 5)
!18115 = !DILocation(line: 8414, column: 11, scope: !18114)
!18116 = !DILocalVariable(name: "op1", scope: !18114, file: !3, line: 8415, type: !2372)
!18117 = !DILocation(line: 8415, column: 11, scope: !18114)
!18118 = !DILocalVariable(name: "out_moded", scope: !18114, file: !3, line: 8416, type: !2372)
!18119 = !DILocation(line: 8416, column: 11, scope: !18114)
!18120 = !DILocalVariable(name: "set", scope: !18114, file: !3, line: 8417, type: !2372)
!18121 = !DILocation(line: 8417, column: 11, scope: !18114)
!18122 = !DILocation(line: 8419, column: 32, scope: !18114)
!18123 = !DILocation(line: 8419, column: 13, scope: !18114)
!18124 = !DILocation(line: 8419, column: 11, scope: !18114)
!18125 = !DILocation(line: 8420, column: 11, scope: !18126)
!18126 = distinct !DILexicalBlock(scope: !18114, file: !3, line: 8420, column: 11)
!18127 = !DILocation(line: 8420, column: 18, scope: !18126)
!18128 = !DILocation(line: 8420, column: 15, scope: !18126)
!18129 = !DILocation(line: 8420, column: 11, scope: !18114)
!18130 = !DILocation(line: 8421, column: 7, scope: !18126)
!18131 = !DILocation(line: 8421, column: 5, scope: !18126)
!18132 = !DILocation(line: 8421, column: 2, scope: !18126)
!18133 = !DILocation(line: 8424, column: 44, scope: !18114)
!18134 = !DILocation(line: 8424, column: 13, scope: !18114)
!18135 = !DILocation(line: 8424, column: 11, scope: !18114)
!18136 = !DILocation(line: 8425, column: 11, scope: !18137)
!18137 = distinct !DILexicalBlock(scope: !18114, file: !3, line: 8425, column: 11)
!18138 = !DILocation(line: 8425, column: 11, scope: !18114)
!18139 = !DILocation(line: 8426, column: 9, scope: !18137)
!18140 = !DILocation(line: 8426, column: 2, scope: !18137)
!18141 = !DILocation(line: 8432, column: 11, scope: !18142)
!18142 = distinct !DILexicalBlock(scope: !18114, file: !3, line: 8432, column: 11)
!18143 = !DILocation(line: 8432, column: 29, scope: !18142)
!18144 = !DILocation(line: 8432, column: 26, scope: !18142)
!18145 = !DILocation(line: 8432, column: 11, scope: !18114)
!18146 = !DILocation(line: 8433, column: 27, scope: !18142)
!18147 = !DILocation(line: 8433, column: 43, scope: !18142)
!18148 = !DILocation(line: 8433, column: 14, scope: !18142)
!18149 = !DILocation(line: 8433, column: 12, scope: !18142)
!18150 = !DILocation(line: 8433, column: 2, scope: !18142)
!18151 = !DILocation(line: 8435, column: 14, scope: !18142)
!18152 = !DILocation(line: 8435, column: 12, scope: !18142)
!18153 = !DILocation(line: 8437, column: 19, scope: !18114)
!18154 = !DILocation(line: 8437, column: 30, scope: !18114)
!18155 = !DILocation(line: 8437, column: 35, scope: !18114)
!18156 = !DILocation(line: 8437, column: 42, scope: !18114)
!18157 = !DILocation(line: 8437, column: 7, scope: !18114)
!18158 = !DILocation(line: 8440, column: 4, scope: !18114)
!18159 = !DILocation(line: 8440, column: 2, scope: !18114)
!18160 = !DILocation(line: 8443, column: 45, scope: !18114)
!18161 = !DILocation(line: 8443, column: 14, scope: !18114)
!18162 = !DILocation(line: 8443, column: 12, scope: !18114)
!18163 = !DILocation(line: 8444, column: 11, scope: !18164)
!18164 = distinct !DILexicalBlock(scope: !18114, file: !3, line: 8444, column: 11)
!18165 = !DILocation(line: 8444, column: 11, scope: !18114)
!18166 = !DILocation(line: 8446, column: 25, scope: !18167)
!18167 = distinct !DILexicalBlock(scope: !18164, file: !3, line: 8445, column: 2)
!18168 = !DILocation(line: 8446, column: 42, scope: !18167)
!18169 = !DILocation(line: 8446, column: 4, scope: !18167)
!18170 = !DILocation(line: 8447, column: 11, scope: !18167)
!18171 = !DILocation(line: 8447, column: 4, scope: !18167)
!18172 = !DILocation(line: 8450, column: 7, scope: !18114)
!18173 = !DILocation(line: 8451, column: 5, scope: !18114)
!18174 = !DILocation(line: 8453, column: 12, scope: !18175)
!18175 = distinct !DILexicalBlock(scope: !18109, file: !3, line: 8453, column: 12)
!18176 = !DILocation(line: 8453, column: 26, scope: !18175)
!18177 = !DILocation(line: 8453, column: 29, scope: !18175)
!18178 = !DILocation(line: 8453, column: 43, scope: !18175)
!18179 = !DILocation(line: 8453, column: 12, scope: !18109)
!18180 = !DILocation(line: 8455, column: 39, scope: !18181)
!18181 = distinct !DILexicalBlock(scope: !18175, file: !3, line: 8454, column: 5)
!18182 = !DILocation(line: 8455, column: 44, scope: !18181)
!18183 = !DILocation(line: 8455, column: 24, scope: !18181)
!18184 = !DILocation(line: 8455, column: 13, scope: !18181)
!18185 = !DILocation(line: 8455, column: 11, scope: !18181)
!18186 = !DILocation(line: 8457, column: 24, scope: !18181)
!18187 = !DILocation(line: 8457, column: 28, scope: !18181)
!18188 = !DILocation(line: 8457, column: 7, scope: !18181)
!18189 = !DILocation(line: 8458, column: 5, scope: !18181)
!18190 = !DILocation(line: 8467, column: 16, scope: !18175)
!18191 = !DILocation(line: 8467, column: 5, scope: !18175)
!18192 = !DILocation(line: 8475, column: 10, scope: !17840)
!18193 = !DILocation(line: 8475, column: 17, scope: !17840)
!18194 = !DILocation(line: 8475, column: 36, scope: !17840)
!18195 = !DILocation(line: 8475, column: 3, scope: !17840)
!18196 = !DILocation(line: 8476, column: 1, scope: !17840)
!18197 = distinct !DISubprogram(name: "emit_insn_if_valid_for_reload", scope: !3, file: !3, line: 8211, type: !18198, scopeLine: 8212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!18198 = !DISubroutineType(types: !18199)
!18199 = !{!2372, !2372}
!18200 = !DILocalVariable(name: "insn", arg: 1, scope: !18197, file: !3, line: 8211, type: !2372)
!18201 = !DILocation(line: 8211, column: 36, scope: !18197)
!18202 = !DILocalVariable(name: "last", scope: !18197, file: !3, line: 8213, type: !2372)
!18203 = !DILocation(line: 8213, column: 7, scope: !18197)
!18204 = !DILocation(line: 8213, column: 14, scope: !18197)
!18205 = !DILocalVariable(name: "code", scope: !18197, file: !3, line: 8214, type: !2396)
!18206 = !DILocation(line: 8214, column: 7, scope: !18197)
!18207 = !DILocation(line: 8216, column: 21, scope: !18197)
!18208 = !DILocation(line: 8216, column: 10, scope: !18197)
!18209 = !DILocation(line: 8216, column: 8, scope: !18197)
!18210 = !DILocation(line: 8217, column: 26, scope: !18197)
!18211 = !DILocation(line: 8217, column: 10, scope: !18197)
!18212 = !DILocation(line: 8217, column: 8, scope: !18197)
!18213 = !DILocation(line: 8219, column: 7, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !18197, file: !3, line: 8219, column: 7)
!18215 = !DILocation(line: 8219, column: 12, scope: !18214)
!18216 = !DILocation(line: 8219, column: 7, scope: !18197)
!18217 = !DILocation(line: 8221, column: 21, scope: !18218)
!18218 = distinct !DILexicalBlock(scope: !18214, file: !3, line: 8220, column: 5)
!18219 = !DILocation(line: 8221, column: 7, scope: !18218)
!18220 = !DILocation(line: 8225, column: 11, scope: !18221)
!18221 = distinct !DILexicalBlock(scope: !18218, file: !3, line: 8225, column: 11)
!18222 = !DILocation(line: 8225, column: 11, scope: !18218)
!18223 = !DILocation(line: 8226, column: 9, scope: !18221)
!18224 = !DILocation(line: 8226, column: 2, scope: !18221)
!18225 = !DILocation(line: 8227, column: 5, scope: !18218)
!18226 = !DILocation(line: 8229, column: 23, scope: !18197)
!18227 = !DILocation(line: 8229, column: 3, scope: !18197)
!18228 = !DILocation(line: 8230, column: 3, scope: !18197)
!18229 = !DILocation(line: 8231, column: 1, scope: !18197)
!18230 = distinct !DISubprogram(name: "delete_address_reloads", scope: !3, file: !3, line: 8658, type: !18231, scopeLine: 8659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!18231 = !DISubroutineType(types: !18232)
!18232 = !{null, !2372, !2372}
!18233 = !DILocalVariable(name: "dead_insn", arg: 1, scope: !18230, file: !3, line: 8658, type: !2372)
!18234 = !DILocation(line: 8658, column: 29, scope: !18230)
!18235 = !DILocalVariable(name: "current_insn", arg: 2, scope: !18230, file: !3, line: 8658, type: !2372)
!18236 = !DILocation(line: 8658, column: 44, scope: !18230)
!18237 = !DILocalVariable(name: "set", scope: !18230, file: !3, line: 8660, type: !2372)
!18238 = !DILocation(line: 8660, column: 7, scope: !18230)
!18239 = !DILocation(line: 8660, column: 13, scope: !18230)
!18240 = !DILocalVariable(name: "set2", scope: !18230, file: !3, line: 8661, type: !2372)
!18241 = !DILocation(line: 8661, column: 7, scope: !18230)
!18242 = !DILocalVariable(name: "dst", scope: !18230, file: !3, line: 8661, type: !2372)
!18243 = !DILocation(line: 8661, column: 13, scope: !18230)
!18244 = !DILocalVariable(name: "prev", scope: !18230, file: !3, line: 8661, type: !2372)
!18245 = !DILocation(line: 8661, column: 18, scope: !18230)
!18246 = !DILocalVariable(name: "next", scope: !18230, file: !3, line: 8661, type: !2372)
!18247 = !DILocation(line: 8661, column: 24, scope: !18230)
!18248 = !DILocation(line: 8662, column: 7, scope: !18249)
!18249 = distinct !DILexicalBlock(scope: !18230, file: !3, line: 8662, column: 7)
!18250 = !DILocation(line: 8662, column: 7, scope: !18230)
!18251 = !DILocalVariable(name: "dst", scope: !18252, file: !3, line: 8664, type: !2372)
!18252 = distinct !DILexicalBlock(scope: !18249, file: !3, line: 8663, column: 5)
!18253 = !DILocation(line: 8664, column: 11, scope: !18252)
!18254 = !DILocation(line: 8664, column: 17, scope: !18252)
!18255 = !DILocation(line: 8665, column: 11, scope: !18256)
!18256 = distinct !DILexicalBlock(scope: !18252, file: !3, line: 8665, column: 11)
!18257 = !DILocation(line: 8665, column: 11, scope: !18252)
!18258 = !DILocation(line: 8666, column: 28, scope: !18256)
!18259 = !DILocation(line: 8666, column: 39, scope: !18256)
!18260 = !DILocation(line: 8666, column: 54, scope: !18256)
!18261 = !DILocation(line: 8666, column: 2, scope: !18256)
!18262 = !DILocation(line: 8667, column: 5, scope: !18252)
!18263 = !DILocation(line: 8670, column: 10, scope: !18230)
!18264 = !DILocation(line: 8670, column: 8, scope: !18230)
!18265 = !DILocation(line: 8671, column: 10, scope: !18230)
!18266 = !DILocation(line: 8671, column: 8, scope: !18230)
!18267 = !DILocation(line: 8672, column: 9, scope: !18268)
!18268 = distinct !DILexicalBlock(scope: !18230, file: !3, line: 8672, column: 7)
!18269 = !DILocation(line: 8672, column: 14, scope: !18268)
!18270 = !DILocation(line: 8672, column: 19, scope: !18268)
!18271 = !DILocation(line: 8672, column: 7, scope: !18230)
!18272 = !DILocation(line: 8673, column: 5, scope: !18268)
!18273 = !DILocation(line: 8674, column: 9, scope: !18230)
!18274 = !DILocation(line: 8674, column: 7, scope: !18230)
!18275 = !DILocation(line: 8675, column: 10, scope: !18230)
!18276 = !DILocation(line: 8675, column: 8, scope: !18230)
!18277 = !DILocation(line: 8676, column: 9, scope: !18278)
!18278 = distinct !DILexicalBlock(scope: !18230, file: !3, line: 8676, column: 7)
!18279 = !DILocation(line: 8676, column: 13, scope: !18278)
!18280 = !DILocation(line: 8676, column: 18, scope: !18278)
!18281 = !DILocation(line: 8677, column: 7, scope: !18278)
!18282 = !DILocation(line: 8677, column: 10, scope: !18278)
!18283 = !DILocation(line: 8677, column: 35, scope: !18278)
!18284 = !DILocation(line: 8677, column: 43, scope: !18278)
!18285 = !DILocation(line: 8677, column: 46, scope: !18278)
!18286 = !DILocation(line: 8677, column: 72, scope: !18278)
!18287 = !DILocation(line: 8678, column: 7, scope: !18278)
!18288 = !DILocation(line: 8678, column: 11, scope: !18278)
!18289 = !DILocation(line: 8679, column: 7, scope: !18278)
!18290 = !DILocation(line: 8679, column: 11, scope: !18278)
!18291 = !DILocation(line: 8676, column: 7, scope: !18230)
!18292 = !DILocation(line: 8680, column: 5, scope: !18278)
!18293 = !DILocation(line: 8681, column: 9, scope: !18230)
!18294 = !DILocation(line: 8681, column: 7, scope: !18230)
!18295 = !DILocation(line: 8682, column: 22, scope: !18296)
!18296 = distinct !DILexicalBlock(scope: !18230, file: !3, line: 8682, column: 7)
!18297 = !DILocation(line: 8682, column: 27, scope: !18296)
!18298 = !DILocation(line: 8682, column: 9, scope: !18296)
!18299 = !DILocation(line: 8683, column: 7, scope: !18296)
!18300 = !DILocation(line: 8683, column: 25, scope: !18296)
!18301 = !DILocation(line: 8683, column: 30, scope: !18296)
!18302 = !DILocation(line: 8683, column: 12, scope: !18296)
!18303 = !DILocation(line: 8684, column: 7, scope: !18296)
!18304 = !DILocation(line: 8684, column: 25, scope: !18296)
!18305 = !DILocation(line: 8684, column: 30, scope: !18296)
!18306 = !DILocation(line: 8684, column: 12, scope: !18296)
!18307 = !DILocation(line: 8685, column: 7, scope: !18296)
!18308 = !DILocation(line: 8685, column: 11, scope: !18296)
!18309 = !DILocation(line: 8686, column: 8, scope: !18296)
!18310 = !DILocation(line: 8686, column: 7, scope: !18296)
!18311 = !DILocation(line: 8686, column: 4, scope: !18296)
!18312 = !DILocation(line: 8682, column: 7, scope: !18230)
!18313 = !DILocation(line: 8687, column: 5, scope: !18296)
!18314 = !DILocation(line: 8688, column: 25, scope: !18230)
!18315 = !DILocation(line: 8688, column: 3, scope: !18230)
!18316 = !DILocation(line: 8689, column: 25, scope: !18230)
!18317 = !DILocation(line: 8689, column: 3, scope: !18230)
!18318 = !DILocation(line: 8690, column: 1, scope: !18230)
!18319 = distinct !DISubprogram(name: "delete_address_reloads_1", scope: !3, file: !3, line: 8694, type: !14510, scopeLine: 8695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!18320 = !DILocalVariable(name: "dead_insn", arg: 1, scope: !18319, file: !3, line: 8694, type: !2372)
!18321 = !DILocation(line: 8694, column: 31, scope: !18319)
!18322 = !DILocalVariable(name: "x", arg: 2, scope: !18319, file: !3, line: 8694, type: !2372)
!18323 = !DILocation(line: 8694, column: 46, scope: !18319)
!18324 = !DILocalVariable(name: "current_insn", arg: 3, scope: !18319, file: !3, line: 8694, type: !2372)
!18325 = !DILocation(line: 8694, column: 53, scope: !18319)
!18326 = !DILocalVariable(name: "prev", scope: !18319, file: !3, line: 8696, type: !2372)
!18327 = !DILocation(line: 8696, column: 7, scope: !18319)
!18328 = !DILocalVariable(name: "set", scope: !18319, file: !3, line: 8696, type: !2372)
!18329 = !DILocation(line: 8696, column: 13, scope: !18319)
!18330 = !DILocalVariable(name: "dst", scope: !18319, file: !3, line: 8696, type: !2372)
!18331 = !DILocation(line: 8696, column: 18, scope: !18319)
!18332 = !DILocalVariable(name: "i2", scope: !18319, file: !3, line: 8696, type: !2372)
!18333 = !DILocation(line: 8696, column: 23, scope: !18319)
!18334 = !DILocalVariable(name: "i", scope: !18319, file: !3, line: 8697, type: !2396)
!18335 = !DILocation(line: 8697, column: 7, scope: !18319)
!18336 = !DILocalVariable(name: "j", scope: !18319, file: !3, line: 8697, type: !2396)
!18337 = !DILocation(line: 8697, column: 10, scope: !18319)
!18338 = !DILocalVariable(name: "code", scope: !18319, file: !3, line: 8698, type: !384)
!18339 = !DILocation(line: 8698, column: 17, scope: !18319)
!18340 = !DILocation(line: 8698, column: 24, scope: !18319)
!18341 = !DILocation(line: 8700, column: 7, scope: !18342)
!18342 = distinct !DILexicalBlock(scope: !18319, file: !3, line: 8700, column: 7)
!18343 = !DILocation(line: 8700, column: 12, scope: !18342)
!18344 = !DILocation(line: 8700, column: 7, scope: !18319)
!18345 = !DILocalVariable(name: "fmt", scope: !18346, file: !3, line: 8702, type: !2399)
!18346 = distinct !DILexicalBlock(scope: !18342, file: !3, line: 8701, column: 5)
!18347 = !DILocation(line: 8702, column: 19, scope: !18346)
!18348 = !DILocation(line: 8702, column: 25, scope: !18346)
!18349 = !DILocation(line: 8703, column: 16, scope: !18350)
!18350 = distinct !DILexicalBlock(scope: !18346, file: !3, line: 8703, column: 7)
!18351 = !DILocation(line: 8703, column: 38, scope: !18350)
!18352 = !DILocation(line: 8703, column: 14, scope: !18350)
!18353 = !DILocation(line: 8703, column: 12, scope: !18350)
!18354 = !DILocation(line: 8703, column: 43, scope: !18355)
!18355 = distinct !DILexicalBlock(scope: !18350, file: !3, line: 8703, column: 7)
!18356 = !DILocation(line: 8703, column: 45, scope: !18355)
!18357 = !DILocation(line: 8703, column: 7, scope: !18350)
!18358 = !DILocation(line: 8705, column: 8, scope: !18359)
!18359 = distinct !DILexicalBlock(scope: !18360, file: !3, line: 8705, column: 8)
!18360 = distinct !DILexicalBlock(scope: !18355, file: !3, line: 8704, column: 2)
!18361 = !DILocation(line: 8705, column: 12, scope: !18359)
!18362 = !DILocation(line: 8705, column: 15, scope: !18359)
!18363 = !DILocation(line: 8705, column: 8, scope: !18360)
!18364 = !DILocation(line: 8706, column: 32, scope: !18359)
!18365 = !DILocation(line: 8706, column: 43, scope: !18359)
!18366 = !DILocation(line: 8706, column: 56, scope: !18359)
!18367 = !DILocation(line: 8706, column: 6, scope: !18359)
!18368 = !DILocation(line: 8707, column: 13, scope: !18369)
!18369 = distinct !DILexicalBlock(scope: !18359, file: !3, line: 8707, column: 13)
!18370 = !DILocation(line: 8707, column: 17, scope: !18369)
!18371 = !DILocation(line: 8707, column: 20, scope: !18369)
!18372 = !DILocation(line: 8707, column: 13, scope: !18359)
!18373 = !DILocation(line: 8709, column: 17, scope: !18374)
!18374 = distinct !DILexicalBlock(scope: !18375, file: !3, line: 8709, column: 8)
!18375 = distinct !DILexicalBlock(scope: !18369, file: !3, line: 8708, column: 6)
!18376 = !DILocation(line: 8709, column: 32, scope: !18374)
!18377 = !DILocation(line: 8709, column: 15, scope: !18374)
!18378 = !DILocation(line: 8709, column: 13, scope: !18374)
!18379 = !DILocation(line: 8709, column: 37, scope: !18380)
!18380 = distinct !DILexicalBlock(scope: !18374, file: !3, line: 8709, column: 8)
!18381 = !DILocation(line: 8709, column: 39, scope: !18380)
!18382 = !DILocation(line: 8709, column: 8, scope: !18374)
!18383 = !DILocation(line: 8710, column: 29, scope: !18380)
!18384 = !DILocation(line: 8710, column: 40, scope: !18380)
!18385 = !DILocation(line: 8711, column: 8, scope: !18380)
!18386 = !DILocation(line: 8710, column: 3, scope: !18380)
!18387 = !DILocation(line: 8709, column: 46, scope: !18380)
!18388 = !DILocation(line: 8709, column: 8, scope: !18380)
!18389 = distinct !{!18389, !18382, !18390}
!18390 = !DILocation(line: 8711, column: 20, scope: !18374)
!18391 = !DILocation(line: 8712, column: 6, scope: !18375)
!18392 = !DILocation(line: 8713, column: 2, scope: !18360)
!18393 = !DILocation(line: 8703, column: 52, scope: !18355)
!18394 = !DILocation(line: 8703, column: 7, scope: !18355)
!18395 = distinct !{!18395, !18357, !18396}
!18396 = !DILocation(line: 8713, column: 2, scope: !18350)
!18397 = !DILocation(line: 8714, column: 7, scope: !18346)
!18398 = !DILocation(line: 8717, column: 23, scope: !18399)
!18399 = distinct !DILexicalBlock(scope: !18319, file: !3, line: 8717, column: 7)
!18400 = !DILocation(line: 8717, column: 7, scope: !18399)
!18401 = !DILocation(line: 8717, column: 34, scope: !18399)
!18402 = !DILocation(line: 8717, column: 7, scope: !18319)
!18403 = !DILocation(line: 8718, column: 5, scope: !18399)
!18404 = !DILocation(line: 8722, column: 15, scope: !18405)
!18405 = distinct !DILexicalBlock(scope: !18319, file: !3, line: 8722, column: 3)
!18406 = !DILocation(line: 8722, column: 13, scope: !18405)
!18407 = !DILocation(line: 8722, column: 8, scope: !18405)
!18408 = !DILocation(line: 8722, column: 38, scope: !18409)
!18409 = distinct !DILexicalBlock(scope: !18405, file: !3, line: 8722, column: 3)
!18410 = !DILocation(line: 8722, column: 3, scope: !18405)
!18411 = !DILocation(line: 8724, column: 14, scope: !18412)
!18412 = distinct !DILexicalBlock(scope: !18409, file: !3, line: 8723, column: 5)
!18413 = !DILocation(line: 8724, column: 12, scope: !18412)
!18414 = !DILocation(line: 8725, column: 11, scope: !18415)
!18415 = distinct !DILexicalBlock(scope: !18412, file: !3, line: 8725, column: 11)
!18416 = !DILocation(line: 8725, column: 16, scope: !18415)
!18417 = !DILocation(line: 8725, column: 30, scope: !18415)
!18418 = !DILocation(line: 8725, column: 33, scope: !18415)
!18419 = !DILocation(line: 8725, column: 38, scope: !18415)
!18420 = !DILocation(line: 8725, column: 11, scope: !18412)
!18421 = !DILocation(line: 8726, column: 2, scope: !18415)
!18422 = !DILocation(line: 8727, column: 12, scope: !18423)
!18423 = distinct !DILexicalBlock(scope: !18412, file: !3, line: 8727, column: 11)
!18424 = !DILocation(line: 8727, column: 11, scope: !18412)
!18425 = !DILocation(line: 8728, column: 2, scope: !18423)
!18426 = !DILocation(line: 8729, column: 22, scope: !18427)
!18427 = distinct !DILexicalBlock(scope: !18412, file: !3, line: 8729, column: 11)
!18428 = !DILocation(line: 8729, column: 25, scope: !18427)
!18429 = !DILocation(line: 8729, column: 11, scope: !18427)
!18430 = !DILocation(line: 8729, column: 11, scope: !18412)
!18431 = !DILocation(line: 8730, column: 2, scope: !18427)
!18432 = !DILocation(line: 8731, column: 29, scope: !18433)
!18433 = distinct !DILexicalBlock(scope: !18412, file: !3, line: 8731, column: 11)
!18434 = !DILocation(line: 8731, column: 32, scope: !18433)
!18435 = !DILocation(line: 8731, column: 11, scope: !18433)
!18436 = !DILocation(line: 8731, column: 11, scope: !18412)
!18437 = !DILocation(line: 8732, column: 2, scope: !18433)
!18438 = !DILocation(line: 8733, column: 5, scope: !18412)
!18439 = !DILocation(line: 8722, column: 51, scope: !18409)
!18440 = !DILocation(line: 8722, column: 49, scope: !18409)
!18441 = !DILocation(line: 8722, column: 3, scope: !18409)
!18442 = distinct !{!18442, !18410, !18443}
!18443 = !DILocation(line: 8733, column: 5, scope: !18405)
!18444 = !DILocation(line: 8734, column: 9, scope: !18445)
!18445 = distinct !DILexicalBlock(scope: !18319, file: !3, line: 8734, column: 7)
!18446 = !DILocation(line: 8734, column: 14, scope: !18445)
!18447 = !DILocation(line: 8734, column: 17, scope: !18445)
!18448 = !DILocation(line: 8734, column: 35, scope: !18445)
!18449 = !DILocation(line: 8734, column: 33, scope: !18445)
!18450 = !DILocation(line: 8734, column: 7, scope: !18319)
!18451 = !DILocation(line: 8735, column: 5, scope: !18445)
!18452 = !DILocation(line: 8737, column: 9, scope: !18319)
!18453 = !DILocation(line: 8737, column: 7, scope: !18319)
!18454 = !DILocation(line: 8738, column: 9, scope: !18455)
!18455 = distinct !DILexicalBlock(scope: !18319, file: !3, line: 8738, column: 7)
!18456 = !DILocation(line: 8738, column: 7, scope: !18319)
!18457 = !DILocation(line: 8739, column: 5, scope: !18455)
!18458 = !DILocation(line: 8740, column: 9, scope: !18319)
!18459 = !DILocation(line: 8740, column: 7, scope: !18319)
!18460 = !DILocation(line: 8741, column: 8, scope: !18461)
!18461 = distinct !DILexicalBlock(scope: !18319, file: !3, line: 8741, column: 7)
!18462 = !DILocation(line: 8742, column: 7, scope: !18461)
!18463 = !DILocation(line: 8742, column: 25, scope: !18461)
!18464 = !DILocation(line: 8742, column: 30, scope: !18461)
!18465 = !DILocation(line: 8742, column: 12, scope: !18461)
!18466 = !DILocation(line: 8741, column: 7, scope: !18319)
!18467 = !DILocation(line: 8743, column: 5, scope: !18461)
!18468 = !DILocation(line: 8744, column: 20, scope: !18469)
!18469 = distinct !DILexicalBlock(scope: !18319, file: !3, line: 8744, column: 7)
!18470 = !DILocation(line: 8744, column: 25, scope: !18469)
!18471 = !DILocation(line: 8744, column: 9, scope: !18469)
!18472 = !DILocation(line: 8744, column: 7, scope: !18319)
!18473 = !DILocation(line: 8748, column: 17, scope: !18474)
!18474 = distinct !DILexicalBlock(scope: !18475, file: !3, line: 8748, column: 7)
!18475 = distinct !DILexicalBlock(scope: !18469, file: !3, line: 8745, column: 5)
!18476 = !DILocation(line: 8748, column: 15, scope: !18474)
!18477 = !DILocation(line: 8748, column: 12, scope: !18474)
!18478 = !DILocation(line: 8748, column: 40, scope: !18479)
!18479 = distinct !DILexicalBlock(scope: !18474, file: !3, line: 8748, column: 7)
!18480 = !DILocation(line: 8748, column: 7, scope: !18474)
!18481 = !DILocation(line: 8750, column: 8, scope: !18482)
!18482 = distinct !DILexicalBlock(scope: !18483, file: !3, line: 8750, column: 8)
!18483 = distinct !DILexicalBlock(scope: !18479, file: !3, line: 8749, column: 2)
!18484 = !DILocation(line: 8750, column: 8, scope: !18483)
!18485 = !DILocation(line: 8751, column: 6, scope: !18482)
!18486 = !DILocation(line: 8752, column: 10, scope: !18487)
!18487 = distinct !DILexicalBlock(scope: !18483, file: !3, line: 8752, column: 8)
!18488 = !DILocation(line: 8752, column: 8, scope: !18483)
!18489 = !DILocation(line: 8753, column: 6, scope: !18487)
!18490 = !DILocation(line: 8754, column: 26, scope: !18491)
!18491 = distinct !DILexicalBlock(scope: !18483, file: !3, line: 8754, column: 8)
!18492 = !DILocation(line: 8754, column: 31, scope: !18491)
!18493 = !DILocation(line: 8754, column: 8, scope: !18491)
!18494 = !DILocation(line: 8754, column: 8, scope: !18483)
!18495 = !DILocation(line: 8760, column: 12, scope: !18496)
!18496 = distinct !DILexicalBlock(scope: !18497, file: !3, line: 8760, column: 12)
!18497 = distinct !DILexicalBlock(scope: !18491, file: !3, line: 8755, column: 6)
!18498 = !DILocation(line: 8760, column: 18, scope: !18496)
!18499 = !DILocation(line: 8760, column: 15, scope: !18496)
!18500 = !DILocation(line: 8760, column: 12, scope: !18497)
!18501 = !DILocation(line: 8762, column: 14, scope: !18502)
!18502 = distinct !DILexicalBlock(scope: !18503, file: !3, line: 8762, column: 5)
!18503 = distinct !DILexicalBlock(scope: !18496, file: !3, line: 8761, column: 3)
!18504 = !DILocation(line: 8762, column: 24, scope: !18502)
!18505 = !DILocation(line: 8762, column: 12, scope: !18502)
!18506 = !DILocation(line: 8762, column: 10, scope: !18502)
!18507 = !DILocation(line: 8762, column: 29, scope: !18508)
!18508 = distinct !DILexicalBlock(scope: !18502, file: !3, line: 8762, column: 5)
!18509 = !DILocation(line: 8762, column: 31, scope: !18508)
!18510 = !DILocation(line: 8762, column: 5, scope: !18502)
!18511 = !DILocation(line: 8763, column: 16, scope: !18512)
!18512 = distinct !DILexicalBlock(scope: !18508, file: !3, line: 8763, column: 11)
!18513 = !DILocation(line: 8763, column: 12, scope: !18512)
!18514 = !DILocation(line: 8763, column: 19, scope: !18512)
!18515 = !DILocation(line: 8763, column: 30, scope: !18512)
!18516 = !DILocation(line: 8763, column: 27, scope: !18512)
!18517 = !DILocation(line: 8763, column: 34, scope: !18512)
!18518 = !DILocation(line: 8763, column: 54, scope: !18512)
!18519 = !DILocation(line: 8763, column: 37, scope: !18512)
!18520 = !DILocation(line: 8764, column: 4, scope: !18512)
!18521 = !DILocation(line: 8764, column: 26, scope: !18512)
!18522 = !DILocation(line: 8764, column: 7, scope: !18512)
!18523 = !DILocation(line: 8764, column: 32, scope: !18512)
!18524 = !DILocation(line: 8764, column: 29, scope: !18512)
!18525 = !DILocation(line: 8763, column: 11, scope: !18508)
!18526 = !DILocation(line: 8765, column: 9, scope: !18512)
!18527 = !DILocation(line: 8762, column: 38, scope: !18508)
!18528 = !DILocation(line: 8762, column: 5, scope: !18508)
!18529 = distinct !{!18529, !18510, !18530}
!18530 = !DILocation(line: 8765, column: 9, scope: !18502)
!18531 = !DILocation(line: 8766, column: 14, scope: !18532)
!18532 = distinct !DILexicalBlock(scope: !18503, file: !3, line: 8766, column: 5)
!18533 = !DILocation(line: 8766, column: 24, scope: !18532)
!18534 = !DILocation(line: 8766, column: 12, scope: !18532)
!18535 = !DILocation(line: 8766, column: 10, scope: !18532)
!18536 = !DILocation(line: 8766, column: 29, scope: !18537)
!18537 = distinct !DILexicalBlock(scope: !18532, file: !3, line: 8766, column: 5)
!18538 = !DILocation(line: 8766, column: 31, scope: !18537)
!18539 = !DILocation(line: 8766, column: 5, scope: !18532)
!18540 = !DILocation(line: 8767, column: 15, scope: !18541)
!18541 = distinct !DILexicalBlock(scope: !18537, file: !3, line: 8767, column: 11)
!18542 = !DILocation(line: 8767, column: 11, scope: !18541)
!18543 = !DILocation(line: 8767, column: 18, scope: !18541)
!18544 = !DILocation(line: 8767, column: 21, scope: !18541)
!18545 = !DILocation(line: 8767, column: 28, scope: !18541)
!18546 = !DILocation(line: 8767, column: 24, scope: !18541)
!18547 = !DILocation(line: 8767, column: 31, scope: !18541)
!18548 = !DILocation(line: 8767, column: 42, scope: !18541)
!18549 = !DILocation(line: 8767, column: 39, scope: !18541)
!18550 = !DILocation(line: 8767, column: 11, scope: !18537)
!18551 = !DILocation(line: 8768, column: 9, scope: !18541)
!18552 = !DILocation(line: 8766, column: 38, scope: !18537)
!18553 = !DILocation(line: 8766, column: 5, scope: !18537)
!18554 = distinct !{!18554, !18539, !18555}
!18555 = !DILocation(line: 8768, column: 9, scope: !18532)
!18556 = !DILocation(line: 8769, column: 9, scope: !18557)
!18557 = distinct !DILexicalBlock(scope: !18503, file: !3, line: 8769, column: 9)
!18558 = !DILocation(line: 8769, column: 11, scope: !18557)
!18559 = !DILocation(line: 8769, column: 9, scope: !18503)
!18560 = !DILocation(line: 8770, column: 7, scope: !18557)
!18561 = !DILocation(line: 8771, column: 3, scope: !18503)
!18562 = !DILocation(line: 8772, column: 8, scope: !18497)
!18563 = !DILocation(line: 8774, column: 8, scope: !18564)
!18564 = distinct !DILexicalBlock(scope: !18483, file: !3, line: 8774, column: 8)
!18565 = !DILocation(line: 8774, column: 8, scope: !18483)
!18566 = !DILocation(line: 8775, column: 6, scope: !18564)
!18567 = !DILocation(line: 8779, column: 8, scope: !18568)
!18568 = distinct !DILexicalBlock(scope: !18483, file: !3, line: 8779, column: 8)
!18569 = !DILocation(line: 8779, column: 14, scope: !18568)
!18570 = !DILocation(line: 8779, column: 11, scope: !18568)
!18571 = !DILocation(line: 8779, column: 8, scope: !18483)
!18572 = !DILocation(line: 8781, column: 17, scope: !18573)
!18573 = distinct !DILexicalBlock(scope: !18574, file: !3, line: 8781, column: 8)
!18574 = distinct !DILexicalBlock(scope: !18568, file: !3, line: 8780, column: 6)
!18575 = !DILocation(line: 8781, column: 27, scope: !18573)
!18576 = !DILocation(line: 8781, column: 15, scope: !18573)
!18577 = !DILocation(line: 8781, column: 13, scope: !18573)
!18578 = !DILocation(line: 8781, column: 32, scope: !18579)
!18579 = distinct !DILexicalBlock(scope: !18573, file: !3, line: 8781, column: 8)
!18580 = !DILocation(line: 8781, column: 34, scope: !18579)
!18581 = !DILocation(line: 8781, column: 8, scope: !18573)
!18582 = !DILocation(line: 8782, column: 12, scope: !18583)
!18583 = distinct !DILexicalBlock(scope: !18579, file: !3, line: 8782, column: 7)
!18584 = !DILocation(line: 8782, column: 8, scope: !18583)
!18585 = !DILocation(line: 8782, column: 15, scope: !18583)
!18586 = !DILocation(line: 8782, column: 26, scope: !18583)
!18587 = !DILocation(line: 8782, column: 23, scope: !18583)
!18588 = !DILocation(line: 8782, column: 30, scope: !18583)
!18589 = !DILocation(line: 8782, column: 50, scope: !18583)
!18590 = !DILocation(line: 8782, column: 33, scope: !18583)
!18591 = !DILocation(line: 8783, column: 7, scope: !18583)
!18592 = !DILocation(line: 8783, column: 29, scope: !18583)
!18593 = !DILocation(line: 8783, column: 10, scope: !18583)
!18594 = !DILocation(line: 8783, column: 35, scope: !18583)
!18595 = !DILocation(line: 8783, column: 32, scope: !18583)
!18596 = !DILocation(line: 8782, column: 7, scope: !18579)
!18597 = !DILocation(line: 8784, column: 5, scope: !18583)
!18598 = !DILocation(line: 8781, column: 41, scope: !18579)
!18599 = !DILocation(line: 8781, column: 8, scope: !18579)
!18600 = distinct !{!18600, !18581, !18601}
!18601 = !DILocation(line: 8784, column: 5, scope: !18573)
!18602 = !DILocation(line: 8790, column: 6, scope: !18574)
!18603 = !DILocation(line: 8791, column: 19, scope: !18604)
!18604 = distinct !DILexicalBlock(scope: !18483, file: !3, line: 8791, column: 8)
!18605 = !DILocation(line: 8791, column: 24, scope: !18604)
!18606 = !DILocation(line: 8791, column: 8, scope: !18604)
!18607 = !DILocation(line: 8791, column: 8, scope: !18483)
!18608 = !DILocation(line: 8792, column: 6, scope: !18604)
!18609 = !DILocation(line: 8793, column: 2, scope: !18483)
!18610 = !DILocation(line: 8748, column: 49, scope: !18479)
!18611 = !DILocation(line: 8748, column: 47, scope: !18479)
!18612 = !DILocation(line: 8748, column: 7, scope: !18479)
!18613 = distinct !{!18613, !18480, !18614}
!18614 = !DILocation(line: 8793, column: 2, scope: !18474)
!18615 = !DILocation(line: 8794, column: 5, scope: !18475)
!18616 = !DILocation(line: 8795, column: 29, scope: !18319)
!18617 = !DILocation(line: 8795, column: 35, scope: !18319)
!18618 = !DILocation(line: 8795, column: 50, scope: !18319)
!18619 = !DILocation(line: 8795, column: 3, scope: !18319)
!18620 = !DILocation(line: 8796, column: 25, scope: !18319)
!18621 = !DILocation(line: 8796, column: 3, scope: !18319)
!18622 = !DILocation(line: 8796, column: 38, scope: !18319)
!18623 = !DILocation(line: 8797, column: 16, scope: !18319)
!18624 = !DILocation(line: 8797, column: 3, scope: !18319)
!18625 = !DILocation(line: 8798, column: 1, scope: !18319)
!18626 = distinct !DISubprogram(name: "emit_output_reload_insns", scope: !3, file: !3, line: 7359, type: !15770, scopeLine: 7361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!18627 = !DILocalVariable(name: "chain", arg: 1, scope: !18626, file: !3, line: 7359, type: !2365)
!18628 = !DILocation(line: 7359, column: 46, scope: !18626)
!18629 = !DILocalVariable(name: "rl", arg: 2, scope: !18626, file: !3, line: 7359, type: !3550)
!18630 = !DILocation(line: 7359, column: 68, scope: !18626)
!18631 = !DILocalVariable(name: "j", arg: 3, scope: !18626, file: !3, line: 7360, type: !2396)
!18632 = !DILocation(line: 7360, column: 10, scope: !18626)
!18633 = !DILocalVariable(name: "reloadreg", scope: !18626, file: !3, line: 7362, type: !2372)
!18634 = !DILocation(line: 7362, column: 7, scope: !18626)
!18635 = !DILocalVariable(name: "insn", scope: !18626, file: !3, line: 7363, type: !2372)
!18636 = !DILocation(line: 7363, column: 7, scope: !18626)
!18637 = !DILocation(line: 7363, column: 14, scope: !18626)
!18638 = !DILocation(line: 7363, column: 21, scope: !18626)
!18639 = !DILocalVariable(name: "special", scope: !18626, file: !3, line: 7364, type: !2396)
!18640 = !DILocation(line: 7364, column: 7, scope: !18626)
!18641 = !DILocalVariable(name: "old", scope: !18626, file: !3, line: 7365, type: !2372)
!18642 = !DILocation(line: 7365, column: 7, scope: !18626)
!18643 = !DILocation(line: 7365, column: 13, scope: !18626)
!18644 = !DILocation(line: 7365, column: 17, scope: !18626)
!18645 = !DILocalVariable(name: "mode", scope: !18626, file: !3, line: 7366, type: !5)
!18646 = !DILocation(line: 7366, column: 21, scope: !18626)
!18647 = !DILocalVariable(name: "p", scope: !18626, file: !3, line: 7367, type: !2372)
!18648 = !DILocation(line: 7367, column: 7, scope: !18626)
!18649 = !DILocalVariable(name: "rl_reg_rtx", scope: !18626, file: !3, line: 7368, type: !2372)
!18650 = !DILocation(line: 7368, column: 7, scope: !18626)
!18651 = !DILocation(line: 7370, column: 7, scope: !18652)
!18652 = distinct !DILexicalBlock(scope: !18626, file: !3, line: 7370, column: 7)
!18653 = !DILocation(line: 7370, column: 11, scope: !18652)
!18654 = !DILocation(line: 7370, column: 23, scope: !18652)
!18655 = !DILocation(line: 7370, column: 7, scope: !18626)
!18656 = !DILocation(line: 7371, column: 5, scope: !18652)
!18657 = !DILocation(line: 7373, column: 43, scope: !18652)
!18658 = !DILocation(line: 7373, column: 47, scope: !18652)
!18659 = !DILocation(line: 7373, column: 23, scope: !18652)
!18660 = !DILocation(line: 7373, column: 5, scope: !18652)
!18661 = !DILocation(line: 7375, column: 42, scope: !18626)
!18662 = !DILocation(line: 7375, column: 16, scope: !18626)
!18663 = !DILocation(line: 7375, column: 14, scope: !18626)
!18664 = !DILocation(line: 7376, column: 10, scope: !18626)
!18665 = !DILocation(line: 7376, column: 8, scope: !18626)
!18666 = !DILocation(line: 7378, column: 15, scope: !18626)
!18667 = !DILocation(line: 7378, column: 13, scope: !18626)
!18668 = !DILocation(line: 7384, column: 7, scope: !18669)
!18669 = distinct !DILexicalBlock(scope: !18626, file: !3, line: 7384, column: 7)
!18670 = !DILocation(line: 7384, column: 11, scope: !18669)
!18671 = !DILocation(line: 7384, column: 32, scope: !18669)
!18672 = !DILocation(line: 7384, column: 7, scope: !18626)
!18673 = !DILocalVariable(name: "real_old", scope: !18674, file: !3, line: 7386, type: !2372)
!18674 = distinct !DILexicalBlock(scope: !18669, file: !3, line: 7385, column: 5)
!18675 = !DILocation(line: 7386, column: 11, scope: !18674)
!18676 = !DILocation(line: 7386, column: 22, scope: !18674)
!18677 = !DILocalVariable(name: "secondary_reload", scope: !18674, file: !3, line: 7387, type: !2396)
!18678 = !DILocation(line: 7387, column: 11, scope: !18674)
!18679 = !DILocation(line: 7387, column: 30, scope: !18674)
!18680 = !DILocation(line: 7387, column: 34, scope: !18674)
!18681 = !DILocalVariable(name: "tertiary_reload", scope: !18674, file: !3, line: 7388, type: !2396)
!18682 = !DILocation(line: 7388, column: 11, scope: !18674)
!18683 = !DILocation(line: 7388, column: 33, scope: !18674)
!18684 = !DILocation(line: 7388, column: 29, scope: !18674)
!18685 = !DILocation(line: 7388, column: 51, scope: !18674)
!18686 = !DILocation(line: 7390, column: 11, scope: !18687)
!18687 = distinct !DILexicalBlock(scope: !18674, file: !3, line: 7390, column: 11)
!18688 = !DILocation(line: 7390, column: 23, scope: !18687)
!18689 = !DILocation(line: 7390, column: 26, scope: !18687)
!18690 = !DILocation(line: 7390, column: 38, scope: !18687)
!18691 = !DILocation(line: 7391, column: 4, scope: !18687)
!18692 = !DILocation(line: 7391, column: 7, scope: !18687)
!18693 = !DILocation(line: 7391, column: 21, scope: !18687)
!18694 = !DILocation(line: 7391, column: 34, scope: !18687)
!18695 = !DILocation(line: 7390, column: 11, scope: !18674)
!18696 = !DILocation(line: 7392, column: 13, scope: !18687)
!18697 = !DILocation(line: 7392, column: 27, scope: !18687)
!18698 = !DILocation(line: 7392, column: 11, scope: !18687)
!18699 = !DILocation(line: 7392, column: 2, scope: !18687)
!18700 = !DILocation(line: 7394, column: 38, scope: !18701)
!18701 = distinct !DILexicalBlock(scope: !18674, file: !3, line: 7394, column: 11)
!18702 = !DILocation(line: 7394, column: 42, scope: !18701)
!18703 = !DILocation(line: 7394, column: 50, scope: !18701)
!18704 = !DILocation(line: 7394, column: 56, scope: !18701)
!18705 = !DILocation(line: 7394, column: 11, scope: !18701)
!18706 = !DILocation(line: 7394, column: 66, scope: !18701)
!18707 = !DILocation(line: 7394, column: 11, scope: !18674)
!18708 = !DILocalVariable(name: "second_reloadreg", scope: !18709, file: !3, line: 7396, type: !2372)
!18709 = distinct !DILexicalBlock(scope: !18701, file: !3, line: 7395, column: 2)
!18710 = !DILocation(line: 7396, column: 8, scope: !18709)
!18711 = !DILocation(line: 7396, column: 27, scope: !18709)
!18712 = !DILocation(line: 7397, column: 20, scope: !18709)
!18713 = !DILocation(line: 7397, column: 16, scope: !18709)
!18714 = !DILocation(line: 7397, column: 38, scope: !18709)
!18715 = !DILocation(line: 7397, column: 14, scope: !18709)
!18716 = !DILocation(line: 7401, column: 8, scope: !18717)
!18717 = distinct !DILexicalBlock(scope: !18709, file: !3, line: 7401, column: 8)
!18718 = !DILocation(line: 7401, column: 12, scope: !18717)
!18719 = !DILocation(line: 7401, column: 32, scope: !18717)
!18720 = !DILocation(line: 7401, column: 8, scope: !18709)
!18721 = !DILocation(line: 7404, column: 8, scope: !18722)
!18722 = distinct !DILexicalBlock(scope: !18717, file: !3, line: 7402, column: 6)
!18723 = !DILocation(line: 7406, column: 20, scope: !18722)
!18724 = !DILocation(line: 7407, column: 7, scope: !18722)
!18725 = !DILocation(line: 7407, column: 17, scope: !18722)
!18726 = !DILocation(line: 7407, column: 35, scope: !18722)
!18727 = !DILocation(line: 7406, column: 8, scope: !18722)
!18728 = !DILocation(line: 7408, column: 16, scope: !18722)
!18729 = !DILocation(line: 7409, column: 6, scope: !18722)
!18730 = !DILocalVariable(name: "tertiary_icode", scope: !18731, file: !3, line: 7415, type: !557)
!18731 = distinct !DILexicalBlock(scope: !18717, file: !3, line: 7411, column: 6)
!18732 = !DILocation(line: 7415, column: 23, scope: !18731)
!18733 = !DILocation(line: 7416, column: 9, scope: !18731)
!18734 = !DILocation(line: 7416, column: 5, scope: !18731)
!18735 = !DILocation(line: 7416, column: 27, scope: !18731)
!18736 = !DILocation(line: 7419, column: 8, scope: !18731)
!18737 = !DILocation(line: 7422, column: 12, scope: !18738)
!18738 = distinct !DILexicalBlock(scope: !18731, file: !3, line: 7422, column: 12)
!18739 = !DILocation(line: 7422, column: 36, scope: !18738)
!18740 = !DILocation(line: 7422, column: 33, scope: !18738)
!18741 = !DILocation(line: 7422, column: 12, scope: !18731)
!18742 = !DILocation(line: 7423, column: 43, scope: !18738)
!18743 = !DILocation(line: 7423, column: 54, scope: !18738)
!18744 = !DILocation(line: 7423, column: 15, scope: !18738)
!18745 = !DILocation(line: 7423, column: 13, scope: !18738)
!18746 = !DILocation(line: 7423, column: 3, scope: !18738)
!18747 = !DILocation(line: 7425, column: 12, scope: !18748)
!18748 = distinct !DILexicalBlock(scope: !18731, file: !3, line: 7425, column: 12)
!18749 = !DILocation(line: 7425, column: 27, scope: !18748)
!18750 = !DILocation(line: 7425, column: 12, scope: !18731)
!18751 = !DILocalVariable(name: "third_reloadreg", scope: !18752, file: !3, line: 7427, type: !2372)
!18752 = distinct !DILexicalBlock(scope: !18748, file: !3, line: 7426, column: 3)
!18753 = !DILocation(line: 7427, column: 9, scope: !18752)
!18754 = !DILocation(line: 7427, column: 31, scope: !18752)
!18755 = !DILocation(line: 7427, column: 27, scope: !18752)
!18756 = !DILocation(line: 7427, column: 48, scope: !18752)
!18757 = !DILocalVariable(name: "tem", scope: !18752, file: !3, line: 7428, type: !2372)
!18758 = !DILocation(line: 7428, column: 9, scope: !18752)
!18759 = !DILocation(line: 7437, column: 9, scope: !18760)
!18760 = distinct !DILexicalBlock(scope: !18752, file: !3, line: 7437, column: 9)
!18761 = !DILocation(line: 7437, column: 29, scope: !18760)
!18762 = !DILocation(line: 7438, column: 9, scope: !18760)
!18763 = !DILocation(line: 7438, column: 13, scope: !18760)
!18764 = !DILocation(line: 7439, column: 8, scope: !18760)
!18765 = !DILocation(line: 7439, column: 6, scope: !18760)
!18766 = !DILocation(line: 7440, column: 9, scope: !18760)
!18767 = !DILocation(line: 7441, column: 12, scope: !18760)
!18768 = !DILocation(line: 7442, column: 5, scope: !18760)
!18769 = !DILocation(line: 7440, column: 24, scope: !18760)
!18770 = !DILocation(line: 7440, column: 22, scope: !18760)
!18771 = !DILocation(line: 7440, column: 14, scope: !18760)
!18772 = !DILocation(line: 7437, column: 9, scope: !18752)
!18773 = !DILocation(line: 7443, column: 18, scope: !18760)
!18774 = !DILocation(line: 7443, column: 16, scope: !18760)
!18775 = !DILocation(line: 7443, column: 53, scope: !18760)
!18776 = !DILocation(line: 7443, column: 51, scope: !18760)
!18777 = !DILocation(line: 7443, column: 7, scope: !18760)
!18778 = !DILocation(line: 7445, column: 17, scope: !18752)
!18779 = !DILocation(line: 7445, column: 28, scope: !18752)
!18780 = !DILocation(line: 7446, column: 10, scope: !18752)
!18781 = !DILocation(line: 7446, column: 14, scope: !18752)
!18782 = !DILocation(line: 7446, column: 21, scope: !18752)
!18783 = !DILocation(line: 7446, column: 25, scope: !18752)
!18784 = !DILocation(line: 7445, column: 5, scope: !18752)
!18785 = !DILocation(line: 7447, column: 17, scope: !18752)
!18786 = !DILocation(line: 7448, column: 11, scope: !18752)
!18787 = !DILocation(line: 7448, column: 21, scope: !18752)
!18788 = !DILocation(line: 7448, column: 32, scope: !18752)
!18789 = !DILocation(line: 7447, column: 5, scope: !18752)
!18790 = !DILocation(line: 7449, column: 13, scope: !18752)
!18791 = !DILocation(line: 7450, column: 3, scope: !18752)
!18792 = !DILocation(line: 7457, column: 17, scope: !18793)
!18793 = distinct !DILexicalBlock(scope: !18748, file: !3, line: 7453, column: 3)
!18794 = !DILocation(line: 7457, column: 28, scope: !18793)
!18795 = !DILocation(line: 7458, column: 10, scope: !18793)
!18796 = !DILocation(line: 7458, column: 14, scope: !18793)
!18797 = !DILocation(line: 7458, column: 21, scope: !18793)
!18798 = !DILocation(line: 7458, column: 25, scope: !18793)
!18799 = !DILocation(line: 7457, column: 5, scope: !18793)
!18800 = !DILocation(line: 7459, column: 9, scope: !18801)
!18801 = distinct !DILexicalBlock(scope: !18793, file: !3, line: 7459, column: 9)
!18802 = !DILocation(line: 7459, column: 25, scope: !18801)
!18803 = !DILocation(line: 7459, column: 9, scope: !18793)
!18804 = !DILocalVariable(name: "third_reloadreg", scope: !18805, file: !3, line: 7461, type: !2372)
!18805 = distinct !DILexicalBlock(scope: !18801, file: !3, line: 7460, column: 7)
!18806 = !DILocation(line: 7461, column: 13, scope: !18805)
!18807 = !DILocation(line: 7461, column: 35, scope: !18805)
!18808 = !DILocation(line: 7461, column: 31, scope: !18805)
!18809 = !DILocation(line: 7461, column: 52, scope: !18805)
!18810 = !DILocation(line: 7463, column: 21, scope: !18805)
!18811 = !DILocation(line: 7463, column: 38, scope: !18805)
!18812 = !DILocation(line: 7464, column: 7, scope: !18805)
!18813 = !DILocation(line: 7464, column: 11, scope: !18805)
!18814 = !DILocation(line: 7464, column: 18, scope: !18805)
!18815 = !DILocation(line: 7464, column: 22, scope: !18805)
!18816 = !DILocation(line: 7463, column: 9, scope: !18805)
!18817 = !DILocation(line: 7465, column: 21, scope: !18805)
!18818 = !DILocation(line: 7465, column: 19, scope: !18805)
!18819 = !DILocation(line: 7466, column: 7, scope: !18805)
!18820 = !DILocation(line: 7469, column: 2, scope: !18709)
!18821 = !DILocation(line: 7470, column: 5, scope: !18674)
!18822 = !DILocation(line: 7473, column: 9, scope: !18823)
!18823 = distinct !DILexicalBlock(scope: !18626, file: !3, line: 7473, column: 7)
!18824 = !DILocation(line: 7473, column: 7, scope: !18626)
!18825 = !DILocalVariable(name: "set", scope: !18826, file: !3, line: 7475, type: !2372)
!18826 = distinct !DILexicalBlock(scope: !18823, file: !3, line: 7474, column: 5)
!18827 = !DILocation(line: 7475, column: 11, scope: !18826)
!18828 = !DILocation(line: 7479, column: 13, scope: !18829)
!18829 = distinct !DILexicalBlock(scope: !18826, file: !3, line: 7479, column: 11)
!18830 = !DILocation(line: 7480, column: 4, scope: !18829)
!18831 = !DILocation(line: 7480, column: 8, scope: !18829)
!18832 = !DILocation(line: 7481, column: 4, scope: !18829)
!18833 = !DILocation(line: 7481, column: 15, scope: !18829)
!18834 = !DILocation(line: 7481, column: 13, scope: !18829)
!18835 = !DILocation(line: 7482, column: 4, scope: !18829)
!18836 = !DILocation(line: 7482, column: 20, scope: !18829)
!18837 = !DILocation(line: 7482, column: 25, scope: !18829)
!18838 = !DILocation(line: 7482, column: 7, scope: !18829)
!18839 = !DILocation(line: 7483, column: 4, scope: !18829)
!18840 = !DILocation(line: 7483, column: 25, scope: !18829)
!18841 = !DILocation(line: 7483, column: 30, scope: !18829)
!18842 = !DILocation(line: 7483, column: 8, scope: !18829)
!18843 = !DILocation(line: 7484, column: 4, scope: !18829)
!18844 = !DILocation(line: 7484, column: 10, scope: !18829)
!18845 = !DILocation(line: 7484, column: 22, scope: !18829)
!18846 = !DILocation(line: 7485, column: 9, scope: !18829)
!18847 = !DILocation(line: 7485, column: 31, scope: !18829)
!18848 = !DILocation(line: 7485, column: 44, scope: !18829)
!18849 = !DILocation(line: 7485, column: 50, scope: !18829)
!18850 = !DILocation(line: 7485, column: 54, scope: !18829)
!18851 = !DILocation(line: 7485, column: 12, scope: !18829)
!18852 = !DILocation(line: 7479, column: 11, scope: !18826)
!18853 = !DILocation(line: 7486, column: 14, scope: !18829)
!18854 = !DILocation(line: 7486, column: 19, scope: !18829)
!18855 = !DILocation(line: 7486, column: 30, scope: !18829)
!18856 = !DILocation(line: 7486, column: 34, scope: !18829)
!18857 = !DILocation(line: 7487, column: 7, scope: !18829)
!18858 = !DILocation(line: 7487, column: 11, scope: !18829)
!18859 = !DILocation(line: 7486, column: 2, scope: !18829)
!18860 = !DILocation(line: 7488, column: 5, scope: !18826)
!18861 = !DILocation(line: 7491, column: 12, scope: !18862)
!18862 = distinct !DILexicalBlock(scope: !18626, file: !3, line: 7491, column: 3)
!18863 = !DILocation(line: 7491, column: 10, scope: !18862)
!18864 = !DILocation(line: 7491, column: 8, scope: !18862)
!18865 = !DILocation(line: 7491, column: 26, scope: !18866)
!18866 = distinct !DILexicalBlock(scope: !18862, file: !3, line: 7491, column: 3)
!18867 = !DILocation(line: 7491, column: 3, scope: !18862)
!18868 = !DILocation(line: 7492, column: 9, scope: !18869)
!18869 = distinct !DILexicalBlock(scope: !18866, file: !3, line: 7492, column: 9)
!18870 = !DILocation(line: 7492, column: 9, scope: !18866)
!18871 = !DILocalVariable(name: "pat", scope: !18872, file: !3, line: 7494, type: !2372)
!18872 = distinct !DILexicalBlock(scope: !18869, file: !3, line: 7493, column: 7)
!18873 = !DILocation(line: 7494, column: 6, scope: !18872)
!18874 = !DILocation(line: 7494, column: 12, scope: !18872)
!18875 = !DILocation(line: 7500, column: 15, scope: !18872)
!18876 = !DILocation(line: 7500, column: 2, scope: !18872)
!18877 = !DILocation(line: 7502, column: 23, scope: !18878)
!18878 = distinct !DILexicalBlock(scope: !18872, file: !3, line: 7502, column: 6)
!18879 = !DILocation(line: 7502, column: 35, scope: !18878)
!18880 = !DILocation(line: 7502, column: 6, scope: !18878)
!18881 = !DILocation(line: 7502, column: 6, scope: !18872)
!18882 = !DILocalVariable(name: "set", scope: !18883, file: !3, line: 7504, type: !2372)
!18883 = distinct !DILexicalBlock(scope: !18878, file: !3, line: 7503, column: 4)
!18884 = !DILocation(line: 7504, column: 10, scope: !18883)
!18885 = !DILocation(line: 7504, column: 16, scope: !18883)
!18886 = !DILocation(line: 7505, column: 29, scope: !18887)
!18887 = distinct !DILexicalBlock(scope: !18883, file: !3, line: 7505, column: 10)
!18888 = !DILocation(line: 7505, column: 10, scope: !18887)
!18889 = !DILocation(line: 7505, column: 32, scope: !18887)
!18890 = !DILocation(line: 7506, column: 3, scope: !18887)
!18891 = !DILocation(line: 7506, column: 6, scope: !18887)
!18892 = !DILocation(line: 7507, column: 3, scope: !18887)
!18893 = !DILocation(line: 7507, column: 6, scope: !18887)
!18894 = !DILocation(line: 7507, column: 23, scope: !18887)
!18895 = !DILocation(line: 7507, column: 20, scope: !18887)
!18896 = !DILocation(line: 7505, column: 10, scope: !18883)
!18897 = !DILocalVariable(name: "src", scope: !18898, file: !3, line: 7509, type: !2396)
!18898 = distinct !DILexicalBlock(scope: !18887, file: !3, line: 7508, column: 8)
!18899 = !DILocation(line: 7509, column: 7, scope: !18898)
!18900 = !DILocation(line: 7509, column: 13, scope: !18898)
!18901 = !DILocation(line: 7511, column: 27, scope: !18898)
!18902 = !DILocation(line: 7511, column: 22, scope: !18898)
!18903 = !DILocation(line: 7511, column: 3, scope: !18898)
!18904 = !DILocation(line: 7511, column: 25, scope: !18898)
!18905 = !DILocation(line: 7512, column: 3, scope: !18898)
!18906 = !DILocation(line: 7513, column: 24, scope: !18907)
!18907 = distinct !DILexicalBlock(scope: !18898, file: !3, line: 7513, column: 7)
!18908 = !DILocation(line: 7513, column: 40, scope: !18907)
!18909 = !DILocation(line: 7513, column: 7, scope: !18907)
!18910 = !DILocation(line: 7513, column: 7, scope: !18898)
!18911 = !DILocation(line: 7514, column: 5, scope: !18907)
!18912 = !DILocation(line: 7515, column: 8, scope: !18898)
!18913 = !DILocation(line: 7516, column: 10, scope: !18914)
!18914 = distinct !DILexicalBlock(scope: !18883, file: !3, line: 7516, column: 10)
!18915 = !DILocation(line: 7516, column: 10, scope: !18883)
!18916 = !DILocalVariable(name: "s", scope: !18917, file: !3, line: 7518, type: !2396)
!18917 = distinct !DILexicalBlock(scope: !18914, file: !3, line: 7517, column: 8)
!18918 = !DILocation(line: 7518, column: 7, scope: !18917)
!18919 = !DILocation(line: 7518, column: 11, scope: !18917)
!18920 = !DILocation(line: 7518, column: 15, scope: !18917)
!18921 = !DILocation(line: 7519, column: 9, scope: !18917)
!18922 = !DILocation(line: 7519, column: 7, scope: !18917)
!18923 = !DILocation(line: 7523, column: 7, scope: !18924)
!18924 = distinct !DILexicalBlock(scope: !18917, file: !3, line: 7523, column: 7)
!18925 = !DILocation(line: 7523, column: 9, scope: !18924)
!18926 = !DILocation(line: 7523, column: 14, scope: !18924)
!18927 = !DILocation(line: 7523, column: 17, scope: !18924)
!18928 = !DILocation(line: 7523, column: 21, scope: !18924)
!18929 = !DILocation(line: 7523, column: 7, scope: !18917)
!18930 = !DILocation(line: 7528, column: 12, scope: !18931)
!18931 = distinct !DILexicalBlock(scope: !18924, file: !3, line: 7528, column: 12)
!18932 = !DILocation(line: 7528, column: 14, scope: !18931)
!18933 = !DILocation(line: 7529, column: 5, scope: !18931)
!18934 = !DILocation(line: 7529, column: 8, scope: !18931)
!18935 = !DILocation(line: 7529, column: 25, scope: !18931)
!18936 = !DILocation(line: 7529, column: 22, scope: !18931)
!18937 = !DILocation(line: 7530, column: 5, scope: !18931)
!18938 = !DILocation(line: 7530, column: 8, scope: !18931)
!18939 = !DILocation(line: 7530, column: 30, scope: !18931)
!18940 = !DILocation(line: 7530, column: 26, scope: !18931)
!18941 = !DILocation(line: 7530, column: 33, scope: !18931)
!18942 = !DILocation(line: 7530, column: 23, scope: !18931)
!18943 = !DILocation(line: 7528, column: 12, scope: !18924)
!18944 = !DILocalVariable(name: "s_reg", scope: !18945, file: !3, line: 7536, type: !2372)
!18945 = distinct !DILexicalBlock(scope: !18931, file: !3, line: 7531, column: 5)
!18946 = !DILocation(line: 7536, column: 11, scope: !18945)
!18947 = !DILocation(line: 7536, column: 23, scope: !18945)
!18948 = !DILocation(line: 7536, column: 19, scope: !18945)
!18949 = !DILocation(line: 7536, column: 26, scope: !18945)
!18950 = !DILocalVariable(name: "next", scope: !18945, file: !3, line: 7537, type: !2372)
!18951 = !DILocation(line: 7537, column: 11, scope: !18945)
!18952 = !DILocation(line: 7537, column: 18, scope: !18945)
!18953 = !DILocation(line: 7538, column: 20, scope: !18945)
!18954 = !DILocation(line: 7538, column: 24, scope: !18945)
!18955 = !DILocation(line: 7538, column: 11, scope: !18945)
!18956 = !DILocation(line: 7538, column: 7, scope: !18945)
!18957 = !DILocation(line: 7538, column: 14, scope: !18945)
!18958 = !DILocation(line: 7538, column: 18, scope: !18945)
!18959 = !DILocation(line: 7539, column: 24, scope: !18945)
!18960 = !DILocation(line: 7539, column: 28, scope: !18945)
!18961 = !DILocation(line: 7539, column: 11, scope: !18945)
!18962 = !DILocation(line: 7539, column: 7, scope: !18945)
!18963 = !DILocation(line: 7539, column: 14, scope: !18945)
!18964 = !DILocation(line: 7539, column: 22, scope: !18945)
!18965 = !DILocation(line: 7540, column: 13, scope: !18945)
!18966 = !DILocation(line: 7540, column: 11, scope: !18945)
!18967 = !DILocation(line: 7541, column: 11, scope: !18968)
!18968 = distinct !DILexicalBlock(scope: !18945, file: !3, line: 7541, column: 11)
!18969 = !DILocation(line: 7541, column: 15, scope: !18968)
!18970 = !DILocation(line: 7541, column: 18, scope: !18968)
!18971 = !DILocation(line: 7541, column: 35, scope: !18968)
!18972 = !DILocation(line: 7541, column: 32, scope: !18968)
!18973 = !DILocation(line: 7542, column: 4, scope: !18968)
!18974 = !DILocation(line: 7542, column: 29, scope: !18968)
!18975 = !DILocation(line: 7542, column: 9, scope: !18968)
!18976 = !DILocation(line: 7541, column: 11, scope: !18945)
!18977 = !DILocation(line: 7544, column: 4, scope: !18978)
!18978 = distinct !DILexicalBlock(scope: !18968, file: !3, line: 7543, column: 9)
!18979 = !DILocation(line: 7546, column: 41, scope: !18978)
!18980 = !DILocation(line: 7546, column: 24, scope: !18978)
!18981 = !DILocation(line: 7546, column: 4, scope: !18978)
!18982 = !DILocation(line: 7546, column: 39, scope: !18978)
!18983 = !DILocation(line: 7547, column: 9, scope: !18978)
!18984 = !DILocation(line: 7548, column: 5, scope: !18945)
!18985 = !DILocation(line: 7550, column: 47, scope: !18931)
!18986 = !DILocation(line: 7550, column: 25, scope: !18931)
!18987 = !DILocation(line: 7550, column: 5, scope: !18931)
!18988 = !DILocation(line: 7550, column: 45, scope: !18931)
!18989 = !DILocation(line: 7551, column: 8, scope: !18917)
!18990 = !DILocation(line: 7552, column: 4, scope: !18883)
!18991 = !DILocation(line: 7553, column: 7, scope: !18872)
!18992 = !DILocation(line: 7491, column: 33, scope: !18866)
!18993 = !DILocation(line: 7491, column: 31, scope: !18866)
!18994 = !DILocation(line: 7491, column: 3, scope: !18866)
!18995 = distinct !{!18995, !18867, !18996}
!18996 = !DILocation(line: 7553, column: 7, scope: !18862)
!18997 = !DILocation(line: 7555, column: 7, scope: !18998)
!18998 = distinct !DILexicalBlock(scope: !18626, file: !3, line: 7555, column: 7)
!18999 = !DILocation(line: 7555, column: 11, scope: !18998)
!19000 = !DILocation(line: 7555, column: 23, scope: !18998)
!19001 = !DILocation(line: 7555, column: 7, scope: !18626)
!19002 = !DILocation(line: 7557, column: 44, scope: !19003)
!19003 = distinct !DILexicalBlock(scope: !18998, file: !3, line: 7556, column: 5)
!19004 = !DILocation(line: 7557, column: 48, scope: !19003)
!19005 = !DILocation(line: 7557, column: 18, scope: !19003)
!19006 = !DILocation(line: 7557, column: 7, scope: !19003)
!19007 = !DILocation(line: 7558, column: 46, scope: !19003)
!19008 = !DILocation(line: 7558, column: 33, scope: !19003)
!19009 = !DILocation(line: 7558, column: 37, scope: !19003)
!19010 = !DILocation(line: 7558, column: 7, scope: !19003)
!19011 = !DILocation(line: 7558, column: 44, scope: !19003)
!19012 = !DILocation(line: 7559, column: 5, scope: !19003)
!19013 = !DILocation(line: 7561, column: 38, scope: !18998)
!19014 = !DILocation(line: 7561, column: 25, scope: !18998)
!19015 = !DILocation(line: 7561, column: 29, scope: !18998)
!19016 = !DILocation(line: 7561, column: 5, scope: !18998)
!19017 = !DILocation(line: 7561, column: 36, scope: !18998)
!19018 = !DILocation(line: 7563, column: 7, scope: !19019)
!19019 = distinct !DILexicalBlock(scope: !18626, file: !3, line: 7563, column: 7)
!19020 = !DILocation(line: 7563, column: 7, scope: !18626)
!19021 = !DILocation(line: 7564, column: 38, scope: !19019)
!19022 = !DILocation(line: 7564, column: 44, scope: !19019)
!19023 = !DILocation(line: 7564, column: 5, scope: !19019)
!19024 = !DILocation(line: 7566, column: 3, scope: !18626)
!19025 = !DILocation(line: 7567, column: 1, scope: !18626)
!19026 = distinct !DISubprogram(name: "ei_end_p", scope: !142, file: !142, line: 721, type: !19027, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!19027 = !DISubroutineType(types: !19028)
!19028 = !{!2603, !5490}
!19029 = !DILocalVariable(name: "i", arg: 1, scope: !19026, file: !142, line: 721, type: !5490)
!19030 = !DILocation(line: 721, column: 25, scope: !19026)
!19031 = !DILocation(line: 723, column: 13, scope: !19026)
!19032 = !DILocation(line: 723, column: 22, scope: !19026)
!19033 = !DILocation(line: 723, column: 19, scope: !19026)
!19034 = !DILocation(line: 723, column: 10, scope: !19026)
!19035 = !DILocation(line: 723, column: 3, scope: !19026)
!19036 = distinct !DISubprogram(name: "ei_edge", scope: !142, file: !142, line: 752, type: !19037, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!19037 = !DISubroutineType(types: !19038)
!19038 = !{!2923, !5490}
!19039 = !DILocalVariable(name: "i", arg: 1, scope: !19036, file: !142, line: 752, type: !5490)
!19040 = !DILocation(line: 752, column: 24, scope: !19036)
!19041 = !DILocation(line: 754, column: 10, scope: !19036)
!19042 = !DILocation(line: 754, column: 3, scope: !19036)
!19043 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !142, file: !142, line: 150, type: !19044, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!19044 = !DISubroutineType(types: !19045)
!19045 = !{!7, !19046}
!19046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19047, size: 64)
!19047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2916)
!19048 = !DILocalVariable(name: "vec_", arg: 1, scope: !19043, file: !142, line: 150, type: !19046)
!19049 = !DILocation(line: 150, column: 1, scope: !19043)
!19050 = distinct !DISubprogram(name: "ei_container", scope: !142, file: !142, line: 685, type: !19051, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!19051 = !DISubroutineType(types: !19052)
!19052 = !{!2911, !5490}
!19053 = !DILocalVariable(name: "i", arg: 1, scope: !19050, file: !142, line: 685, type: !5490)
!19054 = !DILocation(line: 685, column: 29, scope: !19050)
!19055 = !DILocation(line: 687, column: 3, scope: !19050)
!19056 = !DILocation(line: 688, column: 13, scope: !19050)
!19057 = !DILocation(line: 688, column: 10, scope: !19050)
!19058 = !DILocation(line: 688, column: 3, scope: !19050)
!19059 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !142, file: !142, line: 150, type: !19060, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3626)
!19060 = !DISubroutineType(types: !19061)
!19061 = !{!2923, !19046, !7}
!19062 = !DILocalVariable(name: "vec_", arg: 1, scope: !19059, file: !142, line: 150, type: !19046)
!19063 = !DILocation(line: 150, column: 1, scope: !19059)
!19064 = !DILocalVariable(name: "ix_", arg: 2, scope: !19059, file: !142, line: 150, type: !7)
!19065 = !DILocation(line: 0, scope: !19059)
