; ModuleID = 'blender/source/blender/blenkernel/intern/anim_sys.c'
source_filename = "blender/source/blender/blenkernel/intern/anim_sys.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.StructRNA = type opaque
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.IdAdtTemplate = type { %struct.ID, %struct.AnimData* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type opaque
%struct.NlaTrack = type { %struct.NlaTrack*, %struct.NlaTrack*, %struct.ListBase, i32, i32, [64 x i8] }
%struct.FCurve = type { %struct.FCurve*, %struct.FCurve*, %struct.bActionGroup*, %struct.ChannelDriver*, %struct.ListBase, %struct.BezTriple*, %struct.FPoint*, i32, float, i16, i16, i32, i8*, i32, [3 x float], float, float }
%struct.bActionGroup = type { %struct.bActionGroup*, %struct.bActionGroup*, %struct.ListBase, i32, i32, [64 x i8], %struct.ThemeWireColor }
%struct.ThemeWireColor = type { [4 x i8], [4 x i8], [4 x i8], i16, i16 }
%struct.ChannelDriver = type { %struct.ListBase, [256 x i8], i8*, float, float, i32, i32 }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.FPoint = type { [2 x float], i32, i32 }
%struct.DriverVar = type { %struct.DriverVar*, %struct.DriverVar*, [64 x i8], [8 x %struct.DriverTarget], i16, i16, float }
%struct.DriverTarget = type { %struct.ID*, i8*, [32 x i8], i16, i16, i32 }
%struct.LinkData = type { %struct.LinkData*, %struct.LinkData*, i8* }
%struct.bContext = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.PropertyRNA = type opaque
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.SpaceType = type opaque
%struct.Lamp = type { %struct.ID, %struct.AnimData*, i16, i16, i32, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.CurveMapping*, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, [2 x i8], %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [4 x i8], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.KS_Path = type { %struct.KS_Path*, %struct.KS_Path*, %struct.ID*, [64 x i8], i32, i16, i16, i8*, i32, i16, i16 }
%struct.KeyingSet = type { %struct.KeyingSet*, %struct.KeyingSet*, %struct.ListBase, [64 x i8], [64 x i8], [240 x i8], [64 x i8], i16, i16, i32 }
%struct.NlaEvalStrip = type { %struct.NlaEvalStrip*, %struct.NlaEvalStrip*, %struct.NlaTrack*, %struct.NlaStrip*, i16, i16, float }
%struct.NlaEvalChannel = type { %struct.NlaEvalChannel*, %struct.NlaEvalChannel*, %struct.PointerRNA, %struct.PropertyRNA*, i32, float }
%struct.AnimOverride = type { %struct.AnimOverride*, %struct.AnimOverride*, i8*, i32, float }
%struct.DynStr = type opaque
%struct.FModifier = type { %struct.FModifier*, %struct.FModifier*, i8*, [64 x i8], i16, i16, float, float, float, float, float }

@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [9 x i8] c"AnimData\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"No AnimData to set action on\00", align 1
@.str.2 = private unnamed_addr constant [57 x i8] c"Cannot change action, as it is still being edited in NLA\00", align 1
@.str.3 = private unnamed_addr constant [99 x i8] c"Could not set action '%s' onto ID '%s', as it does not have suitably rooted paths for this purpose\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@G = external dso_local global %struct.Global, align 8
@.str.4 = private unnamed_addr constant [92 x i8] c"ERROR: action_partition_fcurves_by_basepath(%p, %p, %p) has insufficient info to work with\0A\00", align 1
@.str.5 = private unnamed_addr constant [62 x i8] c"ERROR: no source or destination ID to separate AnimData with\0A\00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"ERROR: no AnimData for this pair of ID's\0A\00", align 1
@.str.7 = private unnamed_addr constant [101 x i8] c"Argh! Source and Destination share animation! ('%s' and '%s' both use '%s') Making new empty action\0A\00", align 1
@.str.8 = private unnamed_addr constant [61 x i8] c"material_slots[\22%s\22].material.texture_slots[\22%s\22].texture.%s\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"[\22%s\22]\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"KeyingSet\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"Keying Set\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"ERROR: no Keying Set and/or RNA Path to add path with\0A\00", align 1
@.str.14 = private unnamed_addr constant [43 x i8] c"ERROR: No ID provided for Keying Set Path\0A\00", align 1
@.str.15 = private unnamed_addr constant [49 x i8] c"ERROR: destination already exists in Keying Set\0A\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"KeyingSet Path\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"NlaEvalStrip\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"Evaluate all animation - %f\0A\00", align 1
@.str.19 = private unnamed_addr constant [55 x i8] c"\09No Actions, so no animation needs to be evaluated...\0A\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"bones\00", align 1
@.str.21 = private unnamed_addr constant [105 x i8] c"AnimSys Safety Check Failed: Action '%s' is not meant to be used from ID-Blocks of type %d such as '%s'\0A\00", align 1
@.str.22 = private unnamed_addr constant [72 x i8] c"Animato: Invalid array index. ID = '%s',  '%s[%d]', array length is %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"<No ID>\00", align 1
@.str.24 = private unnamed_addr constant [45 x i8] c"Animato: Invalid path. ID = '%s',  '%s[%d]'\0A\00", align 1
@RNA_NlaStrip = external dso_local global %struct.StructRNA, align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"NLA-Strip Eval Error: Strip '%s' has no Action\0A\00", align 1
@.str.26 = private unnamed_addr constant [37 x i8] c"NLA Strip Eval: Cannot resolve path\0A\00", align 1
@.str.27 = private unnamed_addr constant [41 x i8] c"NLA Strip Eval: Property not animatable\0A\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"NlaEvalChannel\00", align 1
@.str.29 = private unnamed_addr constant [67 x i8] c"NLA Eval: Stopgap for active action on NLA Stack - no strips case\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @id_type_can_have_animdata(%struct.ID* %id) #0 !dbg !2331 {
entry:
  %retval = alloca i8, align 1
  %id.addr = alloca %struct.ID*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !2335, metadata !DIExpression()), !dbg !2336
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2337
  %cmp = icmp eq %struct.ID* %0, null, !dbg !2339
  br i1 %cmp, label %if.then, label %if.end, !dbg !2340

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !2341
  br label %return, !dbg !2341

if.end:                                           ; preds = %entry
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2342
  %name = getelementptr inbounds %struct.ID, %struct.ID* %1, i32 0, i32 4, !dbg !2342
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !2342
  %2 = bitcast i8* %arraydecay to i16*, !dbg !2342
  %3 = load i16, i16* %2, align 8, !dbg !2342
  %conv = sext i16 %3 to i32, !dbg !2342
  switch i32 %conv, label %sw.default [
    i32 16975, label %sw.bb
    i32 17741, label %sw.bb
    i32 16973, label %sw.bb
    i32 21827, label %sw.bb
    i32 21057, label %sw.bb
    i32 21580, label %sw.bb
    i32 17739, label %sw.bb
    i32 16720, label %sw.bb
    i32 16717, label %sw.bb
    i32 17748, label %sw.bb
    i32 21582, label %sw.bb
    i32 16716, label %sw.bb
    i32 16707, label %sw.bb
    i32 20311, label %sw.bb
    i32 21324, label %sw.bb
    i32 19283, label %sw.bb
    i32 17235, label %sw.bb
    i32 17229, label %sw.bb
    i32 21325, label %sw.bb
  ], !dbg !2343

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  store i8 1, i8* %retval, align 1, !dbg !2344
  br label %return, !dbg !2344

sw.default:                                       ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !2347
  br label %return, !dbg !2347

return:                                           ; preds = %sw.default, %sw.bb, %if.then
  %4 = load i8, i8* %retval, align 1, !dbg !2348
  ret i8 %4, !dbg !2348
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %id) #0 !dbg !2349 {
entry:
  %retval = alloca %struct.AnimData*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %iat = alloca %struct.IdAdtTemplate*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !2352, metadata !DIExpression()), !dbg !2353
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2354
  %call = call zeroext i8 @id_type_can_have_animdata(%struct.ID* %0), !dbg !2356
  %tobool = icmp ne i8 %call, 0, !dbg !2356
  br i1 %tobool, label %if.then, label %if.else, !dbg !2357

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IdAdtTemplate** %iat, metadata !2358, metadata !DIExpression()), !dbg !2360
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2361
  %2 = bitcast %struct.ID* %1 to %struct.IdAdtTemplate*, !dbg !2362
  store %struct.IdAdtTemplate* %2, %struct.IdAdtTemplate** %iat, align 8, !dbg !2360
  %3 = load %struct.IdAdtTemplate*, %struct.IdAdtTemplate** %iat, align 8, !dbg !2363
  %adt = getelementptr inbounds %struct.IdAdtTemplate, %struct.IdAdtTemplate* %3, i32 0, i32 1, !dbg !2364
  %4 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2364
  store %struct.AnimData* %4, %struct.AnimData** %retval, align 8, !dbg !2365
  br label %return, !dbg !2365

if.else:                                          ; preds = %entry
  store %struct.AnimData* null, %struct.AnimData** %retval, align 8, !dbg !2366
  br label %return, !dbg !2366

return:                                           ; preds = %if.else, %if.then
  %5 = load %struct.AnimData*, %struct.AnimData** %retval, align 8, !dbg !2367
  ret %struct.AnimData* %5, !dbg !2367
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.AnimData* @BKE_id_add_animdata(%struct.ID* %id) #0 !dbg !2368 {
entry:
  %retval = alloca %struct.AnimData*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %iat = alloca %struct.IdAdtTemplate*, align 8
  %adt2 = alloca %struct.AnimData*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !2369, metadata !DIExpression()), !dbg !2370
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2371
  %call = call zeroext i8 @id_type_can_have_animdata(%struct.ID* %0), !dbg !2373
  %tobool = icmp ne i8 %call, 0, !dbg !2373
  br i1 %tobool, label %if.then, label %if.else, !dbg !2374

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IdAdtTemplate** %iat, metadata !2375, metadata !DIExpression()), !dbg !2377
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2378
  %2 = bitcast %struct.ID* %1 to %struct.IdAdtTemplate*, !dbg !2379
  store %struct.IdAdtTemplate* %2, %struct.IdAdtTemplate** %iat, align 8, !dbg !2377
  %3 = load %struct.IdAdtTemplate*, %struct.IdAdtTemplate** %iat, align 8, !dbg !2380
  %adt = getelementptr inbounds %struct.IdAdtTemplate, %struct.IdAdtTemplate* %3, i32 0, i32 1, !dbg !2382
  %4 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2382
  %cmp = icmp eq %struct.AnimData* %4, null, !dbg !2383
  br i1 %cmp, label %if.then1, label %if.end, !dbg !2384

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt2, metadata !2385, metadata !DIExpression()), !dbg !2387
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2388
  %call3 = call i8* %5(i64 96, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !2388
  %6 = bitcast i8* %call3 to %struct.AnimData*, !dbg !2388
  %7 = load %struct.IdAdtTemplate*, %struct.IdAdtTemplate** %iat, align 8, !dbg !2389
  %adt4 = getelementptr inbounds %struct.IdAdtTemplate, %struct.IdAdtTemplate* %7, i32 0, i32 1, !dbg !2390
  store %struct.AnimData* %6, %struct.AnimData** %adt4, align 8, !dbg !2391
  store %struct.AnimData* %6, %struct.AnimData** %adt2, align 8, !dbg !2392
  %8 = load %struct.AnimData*, %struct.AnimData** %adt2, align 8, !dbg !2393
  %act_influence = getelementptr inbounds %struct.AnimData, %struct.AnimData* %8, i32 0, i32 11, !dbg !2394
  store float 1.000000e+00, float* %act_influence, align 4, !dbg !2395
  br label %if.end, !dbg !2396

if.end:                                           ; preds = %if.then1, %if.then
  %9 = load %struct.IdAdtTemplate*, %struct.IdAdtTemplate** %iat, align 8, !dbg !2397
  %adt5 = getelementptr inbounds %struct.IdAdtTemplate, %struct.IdAdtTemplate* %9, i32 0, i32 1, !dbg !2398
  %10 = load %struct.AnimData*, %struct.AnimData** %adt5, align 8, !dbg !2398
  store %struct.AnimData* %10, %struct.AnimData** %retval, align 8, !dbg !2399
  br label %return, !dbg !2399

if.else:                                          ; preds = %entry
  store %struct.AnimData* null, %struct.AnimData** %retval, align 8, !dbg !2400
  br label %return, !dbg !2400

return:                                           ; preds = %if.else, %if.end
  %11 = load %struct.AnimData*, %struct.AnimData** %retval, align 8, !dbg !2401
  ret %struct.AnimData* %11, !dbg !2401
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_animdata_set_action(%struct.ReportList* %reports, %struct.ID* %id, %struct.bAction* %act) #0 !dbg !2402 {
entry:
  %retval = alloca i8, align 1
  %reports.addr = alloca %struct.ReportList*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %act.addr = alloca %struct.bAction*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %ok = alloca i8, align 1
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !2418, metadata !DIExpression()), !dbg !2419
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !2420, metadata !DIExpression()), !dbg !2421
  store %struct.bAction* %act, %struct.bAction** %act.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAction** %act.addr, metadata !2422, metadata !DIExpression()), !dbg !2423
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !2424, metadata !DIExpression()), !dbg !2425
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2426
  %call = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %0), !dbg !2427
  store %struct.AnimData* %call, %struct.AnimData** %adt, align 8, !dbg !2425
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !2428, metadata !DIExpression()), !dbg !2429
  store i8 0, i8* %ok, align 1, !dbg !2429
  %1 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2430
  %cmp = icmp eq %struct.AnimData* %1, null, !dbg !2432
  br i1 %cmp, label %if.then, label %if.end, !dbg !2433

if.then:                                          ; preds = %entry
  %2 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !2434
  call void @BKE_report(%struct.ReportList* %2, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)), !dbg !2436
  %3 = load i8, i8* %ok, align 1, !dbg !2437
  store i8 %3, i8* %retval, align 1, !dbg !2438
  br label %return, !dbg !2438

if.end:                                           ; preds = %entry
  %4 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2439
  %flag = getelementptr inbounds %struct.AnimData, %struct.AnimData* %4, i32 0, i32 7, !dbg !2441
  %5 = load i32, i32* %flag, align 8, !dbg !2441
  %and = and i32 %5, 4, !dbg !2442
  %tobool = icmp ne i32 %and, 0, !dbg !2442
  br i1 %tobool, label %if.then4, label %lor.lhs.false, !dbg !2443

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2444
  %actstrip = getelementptr inbounds %struct.AnimData, %struct.AnimData* %6, i32 0, i32 4, !dbg !2445
  %7 = load %struct.NlaStrip*, %struct.NlaStrip** %actstrip, align 8, !dbg !2445
  %tobool1 = icmp ne %struct.NlaStrip* %7, null, !dbg !2446
  br i1 %tobool1, label %if.then4, label %lor.lhs.false2, !dbg !2447

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %8 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2448
  %tmpact = getelementptr inbounds %struct.AnimData, %struct.AnimData* %8, i32 0, i32 1, !dbg !2449
  %9 = load %struct.bAction*, %struct.bAction** %tmpact, align 8, !dbg !2449
  %tobool3 = icmp ne %struct.bAction* %9, null, !dbg !2450
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !2451

if.then4:                                         ; preds = %lor.lhs.false2, %lor.lhs.false, %if.end
  %10 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !2452
  call void @BKE_report(%struct.ReportList* %10, i32 32, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2, i64 0, i64 0)), !dbg !2454
  %11 = load i8, i8* %ok, align 1, !dbg !2455
  store i8 %11, i8* %retval, align 1, !dbg !2456
  br label %return, !dbg !2456

if.end5:                                          ; preds = %lor.lhs.false2
  %12 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2457
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %12, i32 0, i32 0, !dbg !2459
  %13 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !2459
  %tobool6 = icmp ne %struct.bAction* %13, null, !dbg !2457
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !2460

if.then7:                                         ; preds = %if.end5
  %14 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2461
  %action8 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %14, i32 0, i32 0, !dbg !2462
  %15 = load %struct.bAction*, %struct.bAction** %action8, align 8, !dbg !2462
  %16 = bitcast %struct.bAction* %15 to %struct.ID*, !dbg !2463
  call void @id_us_min(%struct.ID* %16), !dbg !2464
  br label %if.end9, !dbg !2464

if.end9:                                          ; preds = %if.then7, %if.end5
  %17 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !2465
  %tobool10 = icmp ne %struct.bAction* %17, null, !dbg !2465
  br i1 %tobool10, label %if.then11, label %if.else26, !dbg !2467

if.then11:                                        ; preds = %if.end9
  %18 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !2468
  %idroot = getelementptr inbounds %struct.bAction, %struct.bAction* %18, i32 0, i32 7, !dbg !2468
  %19 = load i32, i32* %idroot, align 8, !dbg !2468
  %cmp12 = icmp eq i32 %19, 0, !dbg !2468
  br i1 %cmp12, label %if.then17, label %lor.lhs.false13, !dbg !2468

lor.lhs.false13:                                  ; preds = %if.then11
  %20 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !2468
  %idroot14 = getelementptr inbounds %struct.bAction, %struct.bAction* %20, i32 0, i32 7, !dbg !2468
  %21 = load i32, i32* %idroot14, align 8, !dbg !2468
  %22 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2468
  %name = getelementptr inbounds %struct.ID, %struct.ID* %22, i32 0, i32 4, !dbg !2468
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !2468
  %23 = bitcast i8* %arraydecay to i16*, !dbg !2468
  %24 = load i16, i16* %23, align 8, !dbg !2468
  %conv = sext i16 %24 to i32, !dbg !2468
  %cmp15 = icmp eq i32 %21, %conv, !dbg !2468
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !2471

if.then17:                                        ; preds = %lor.lhs.false13, %if.then11
  %25 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !2472
  %26 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2474
  %action18 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %26, i32 0, i32 0, !dbg !2475
  store %struct.bAction* %25, %struct.bAction** %action18, align 8, !dbg !2476
  %27 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2477
  %action19 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %27, i32 0, i32 0, !dbg !2478
  %28 = load %struct.bAction*, %struct.bAction** %action19, align 8, !dbg !2478
  %29 = bitcast %struct.bAction* %28 to %struct.ID*, !dbg !2479
  call void @id_us_plus(%struct.ID* %29), !dbg !2480
  store i8 1, i8* %ok, align 1, !dbg !2481
  br label %if.end25, !dbg !2482

if.else:                                          ; preds = %lor.lhs.false13
  %30 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !2483
  %31 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !2485
  %id20 = getelementptr inbounds %struct.bAction, %struct.bAction* %31, i32 0, i32 0, !dbg !2486
  %name21 = getelementptr inbounds %struct.ID, %struct.ID* %id20, i32 0, i32 4, !dbg !2487
  %arraydecay22 = getelementptr inbounds [66 x i8], [66 x i8]* %name21, i64 0, i64 0, !dbg !2485
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay22, i64 2, !dbg !2488
  %32 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2489
  %name23 = getelementptr inbounds %struct.ID, %struct.ID* %32, i32 0, i32 4, !dbg !2490
  %arraydecay24 = getelementptr inbounds [66 x i8], [66 x i8]* %name23, i64 0, i64 0, !dbg !2489
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %30, i32 32, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.3, i64 0, i64 0), i8* %add.ptr, i8* %arraydecay24), !dbg !2491
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  br label %if.end28, !dbg !2492

if.else26:                                        ; preds = %if.end9
  %33 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2493
  %action27 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %33, i32 0, i32 0, !dbg !2495
  store %struct.bAction* null, %struct.bAction** %action27, align 8, !dbg !2496
  store i8 1, i8* %ok, align 1, !dbg !2497
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.end25
  %34 = load i8, i8* %ok, align 1, !dbg !2498
  store i8 %34, i8* %retval, align 1, !dbg !2499
  br label %return, !dbg !2499

return:                                           ; preds = %if.end28, %if.then4, %if.then
  %35 = load i8, i8* %retval, align 1, !dbg !2500
  ret i8 %35, !dbg !2500
}

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

declare dso_local void @id_us_min(%struct.ID*) #2

declare dso_local void @id_us_plus(%struct.ID*) #2

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_free_animdata(%struct.ID* %id) #0 !dbg !2501 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %iat = alloca %struct.IdAdtTemplate*, align 8
  %adt = alloca %struct.AnimData*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !2504, metadata !DIExpression()), !dbg !2505
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2506
  %call = call zeroext i8 @id_type_can_have_animdata(%struct.ID* %0), !dbg !2508
  %tobool = icmp ne i8 %call, 0, !dbg !2508
  br i1 %tobool, label %if.then, label %if.end17, !dbg !2509

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IdAdtTemplate** %iat, metadata !2510, metadata !DIExpression()), !dbg !2512
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2513
  %2 = bitcast %struct.ID* %1 to %struct.IdAdtTemplate*, !dbg !2514
  store %struct.IdAdtTemplate* %2, %struct.IdAdtTemplate** %iat, align 8, !dbg !2512
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !2515, metadata !DIExpression()), !dbg !2516
  %3 = load %struct.IdAdtTemplate*, %struct.IdAdtTemplate** %iat, align 8, !dbg !2517
  %adt1 = getelementptr inbounds %struct.IdAdtTemplate, %struct.IdAdtTemplate* %3, i32 0, i32 1, !dbg !2518
  %4 = load %struct.AnimData*, %struct.AnimData** %adt1, align 8, !dbg !2518
  store %struct.AnimData* %4, %struct.AnimData** %adt, align 8, !dbg !2516
  %5 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2519
  %tobool2 = icmp ne %struct.AnimData* %5, null, !dbg !2519
  br i1 %tobool2, label %if.then3, label %if.end16, !dbg !2521

if.then3:                                         ; preds = %if.then
  %6 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2522
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %6, i32 0, i32 0, !dbg !2525
  %7 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !2525
  %tobool4 = icmp ne %struct.bAction* %7, null, !dbg !2522
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !2526

if.then5:                                         ; preds = %if.then3
  %8 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2527
  %action6 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %8, i32 0, i32 0, !dbg !2528
  %9 = load %struct.bAction*, %struct.bAction** %action6, align 8, !dbg !2528
  %id7 = getelementptr inbounds %struct.bAction, %struct.bAction* %9, i32 0, i32 0, !dbg !2529
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id7, i32 0, i32 6, !dbg !2530
  %10 = load i32, i32* %us, align 4, !dbg !2531
  %dec = add nsw i32 %10, -1, !dbg !2531
  store i32 %dec, i32* %us, align 4, !dbg !2531
  br label %if.end, !dbg !2527

if.end:                                           ; preds = %if.then5, %if.then3
  %11 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2532
  %tmpact = getelementptr inbounds %struct.AnimData, %struct.AnimData* %11, i32 0, i32 1, !dbg !2534
  %12 = load %struct.bAction*, %struct.bAction** %tmpact, align 8, !dbg !2534
  %tobool8 = icmp ne %struct.bAction* %12, null, !dbg !2532
  br i1 %tobool8, label %if.then9, label %if.end14, !dbg !2535

if.then9:                                         ; preds = %if.end
  %13 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2536
  %tmpact10 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %13, i32 0, i32 1, !dbg !2537
  %14 = load %struct.bAction*, %struct.bAction** %tmpact10, align 8, !dbg !2537
  %id11 = getelementptr inbounds %struct.bAction, %struct.bAction* %14, i32 0, i32 0, !dbg !2538
  %us12 = getelementptr inbounds %struct.ID, %struct.ID* %id11, i32 0, i32 6, !dbg !2539
  %15 = load i32, i32* %us12, align 4, !dbg !2540
  %dec13 = add nsw i32 %15, -1, !dbg !2540
  store i32 %dec13, i32* %us12, align 4, !dbg !2540
  br label %if.end14, !dbg !2536

if.end14:                                         ; preds = %if.then9, %if.end
  %16 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2541
  %nla_tracks = getelementptr inbounds %struct.AnimData, %struct.AnimData* %16, i32 0, i32 3, !dbg !2542
  call void @free_nladata(%struct.ListBase* %nla_tracks), !dbg !2543
  %17 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2544
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %17, i32 0, i32 5, !dbg !2545
  call void @free_fcurves(%struct.ListBase* %drivers), !dbg !2546
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2547
  %19 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2548
  %20 = bitcast %struct.AnimData* %19 to i8*, !dbg !2548
  call void %18(i8* %20), !dbg !2547
  %21 = load %struct.IdAdtTemplate*, %struct.IdAdtTemplate** %iat, align 8, !dbg !2549
  %adt15 = getelementptr inbounds %struct.IdAdtTemplate, %struct.IdAdtTemplate* %21, i32 0, i32 1, !dbg !2550
  store %struct.AnimData* null, %struct.AnimData** %adt15, align 8, !dbg !2551
  br label %if.end16, !dbg !2552

if.end16:                                         ; preds = %if.end14, %if.then
  br label %if.end17, !dbg !2553

if.end17:                                         ; preds = %if.end16, %entry
  ret void, !dbg !2554
}

declare dso_local void @free_nladata(%struct.ListBase*) #2

declare dso_local void @free_fcurves(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.AnimData* @BKE_copy_animdata(%struct.AnimData* %adt, i8 zeroext %do_action) #0 !dbg !2555 {
entry:
  %retval = alloca %struct.AnimData*, align 8
  %adt.addr = alloca %struct.AnimData*, align 8
  %do_action.addr = alloca i8, align 1
  %dadt = alloca %struct.AnimData*, align 8
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !2559, metadata !DIExpression()), !dbg !2560
  store i8 %do_action, i8* %do_action.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_action.addr, metadata !2561, metadata !DIExpression()), !dbg !2562
  call void @llvm.dbg.declare(metadata %struct.AnimData** %dadt, metadata !2563, metadata !DIExpression()), !dbg !2564
  %0 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2565
  %cmp = icmp eq %struct.AnimData* %0, null, !dbg !2567
  br i1 %cmp, label %if.then, label %if.end, !dbg !2568

if.then:                                          ; preds = %entry
  store %struct.AnimData* null, %struct.AnimData** %retval, align 8, !dbg !2569
  br label %return, !dbg !2569

if.end:                                           ; preds = %entry
  %1 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !2570
  %2 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2571
  %3 = bitcast %struct.AnimData* %2 to i8*, !dbg !2571
  %call = call i8* %1(i8* %3), !dbg !2570
  %4 = bitcast i8* %call to %struct.AnimData*, !dbg !2570
  store %struct.AnimData* %4, %struct.AnimData** %dadt, align 8, !dbg !2572
  %5 = load i8, i8* %do_action.addr, align 1, !dbg !2573
  %tobool = icmp ne i8 %5, 0, !dbg !2573
  br i1 %tobool, label %if.then1, label %if.else, !dbg !2575

if.then1:                                         ; preds = %if.end
  %6 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2576
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %6, i32 0, i32 0, !dbg !2578
  %7 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !2578
  %call2 = call %struct.bAction* @BKE_action_copy(%struct.bAction* %7), !dbg !2579
  %8 = load %struct.AnimData*, %struct.AnimData** %dadt, align 8, !dbg !2580
  %action3 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %8, i32 0, i32 0, !dbg !2581
  store %struct.bAction* %call2, %struct.bAction** %action3, align 8, !dbg !2582
  %9 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2583
  %tmpact = getelementptr inbounds %struct.AnimData, %struct.AnimData* %9, i32 0, i32 1, !dbg !2584
  %10 = load %struct.bAction*, %struct.bAction** %tmpact, align 8, !dbg !2584
  %call4 = call %struct.bAction* @BKE_action_copy(%struct.bAction* %10), !dbg !2585
  %11 = load %struct.AnimData*, %struct.AnimData** %dadt, align 8, !dbg !2586
  %tmpact5 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %11, i32 0, i32 1, !dbg !2587
  store %struct.bAction* %call4, %struct.bAction** %tmpact5, align 8, !dbg !2588
  br label %if.end8, !dbg !2589

if.else:                                          ; preds = %if.end
  %12 = load %struct.AnimData*, %struct.AnimData** %dadt, align 8, !dbg !2590
  %action6 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %12, i32 0, i32 0, !dbg !2592
  %13 = load %struct.bAction*, %struct.bAction** %action6, align 8, !dbg !2592
  %14 = bitcast %struct.bAction* %13 to %struct.ID*, !dbg !2593
  call void @id_us_plus(%struct.ID* %14), !dbg !2594
  %15 = load %struct.AnimData*, %struct.AnimData** %dadt, align 8, !dbg !2595
  %tmpact7 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %15, i32 0, i32 1, !dbg !2596
  %16 = load %struct.bAction*, %struct.bAction** %tmpact7, align 8, !dbg !2596
  %17 = bitcast %struct.bAction* %16 to %struct.ID*, !dbg !2597
  call void @id_us_plus(%struct.ID* %17), !dbg !2598
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then1
  %18 = load %struct.AnimData*, %struct.AnimData** %dadt, align 8, !dbg !2599
  %nla_tracks = getelementptr inbounds %struct.AnimData, %struct.AnimData* %18, i32 0, i32 3, !dbg !2600
  %19 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2601
  %nla_tracks9 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %19, i32 0, i32 3, !dbg !2602
  call void @copy_nladata(%struct.ListBase* %nla_tracks, %struct.ListBase* %nla_tracks9), !dbg !2603
  %20 = load %struct.AnimData*, %struct.AnimData** %dadt, align 8, !dbg !2604
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %20, i32 0, i32 5, !dbg !2605
  %21 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2606
  %drivers10 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %21, i32 0, i32 5, !dbg !2607
  call void @copy_fcurves(%struct.ListBase* %drivers, %struct.ListBase* %drivers10), !dbg !2608
  %22 = load %struct.AnimData*, %struct.AnimData** %dadt, align 8, !dbg !2609
  %overrides = getelementptr inbounds %struct.AnimData, %struct.AnimData* %22, i32 0, i32 6, !dbg !2610
  call void @BLI_listbase_clear(%struct.ListBase* %overrides), !dbg !2611
  %23 = load %struct.AnimData*, %struct.AnimData** %dadt, align 8, !dbg !2612
  store %struct.AnimData* %23, %struct.AnimData** %retval, align 8, !dbg !2613
  br label %return, !dbg !2613

return:                                           ; preds = %if.end8, %if.then
  %24 = load %struct.AnimData*, %struct.AnimData** %retval, align 8, !dbg !2614
  ret %struct.AnimData* %24, !dbg !2614
}

declare dso_local %struct.bAction* @BKE_action_copy(%struct.bAction*) #2

declare dso_local void @copy_nladata(%struct.ListBase*, %struct.ListBase*) #2

declare dso_local void @copy_fcurves(%struct.ListBase*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !2615 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !2620, metadata !DIExpression()), !dbg !2621
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2622
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !2623
  store i8* null, i8** %last, align 8, !dbg !2624
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2625
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !2626
  store i8* null, i8** %first, align 8, !dbg !2627
  ret void, !dbg !2628
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_copy_animdata_id(%struct.ID* %id_to, %struct.ID* %id_from, i8 zeroext %do_action) #0 !dbg !2629 {
entry:
  %retval = alloca i8, align 1
  %id_to.addr = alloca %struct.ID*, align 8
  %id_from.addr = alloca %struct.ID*, align 8
  %do_action.addr = alloca i8, align 1
  %adt = alloca %struct.AnimData*, align 8
  %iat = alloca %struct.IdAdtTemplate*, align 8
  store %struct.ID* %id_to, %struct.ID** %id_to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id_to.addr, metadata !2632, metadata !DIExpression()), !dbg !2633
  store %struct.ID* %id_from, %struct.ID** %id_from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id_from.addr, metadata !2634, metadata !DIExpression()), !dbg !2635
  store i8 %do_action, i8* %do_action.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_action.addr, metadata !2636, metadata !DIExpression()), !dbg !2637
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !2638, metadata !DIExpression()), !dbg !2639
  %0 = load %struct.ID*, %struct.ID** %id_to.addr, align 8, !dbg !2640
  %tobool = icmp ne %struct.ID* %0, null, !dbg !2640
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2642

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ID*, %struct.ID** %id_from.addr, align 8, !dbg !2643
  %tobool1 = icmp ne %struct.ID* %1, null, !dbg !2643
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !2644

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load %struct.ID*, %struct.ID** %id_to.addr, align 8, !dbg !2645
  %name = getelementptr inbounds %struct.ID, %struct.ID* %2, i32 0, i32 4, !dbg !2645
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !2645
  %3 = bitcast i8* %arraydecay to i16*, !dbg !2645
  %4 = load i16, i16* %3, align 8, !dbg !2645
  %conv = sext i16 %4 to i32, !dbg !2645
  %5 = load %struct.ID*, %struct.ID** %id_from.addr, align 8, !dbg !2646
  %name3 = getelementptr inbounds %struct.ID, %struct.ID* %5, i32 0, i32 4, !dbg !2646
  %arraydecay4 = getelementptr inbounds [66 x i8], [66 x i8]* %name3, i64 0, i64 0, !dbg !2646
  %6 = bitcast i8* %arraydecay4 to i16*, !dbg !2646
  %7 = load i16, i16* %6, align 8, !dbg !2646
  %conv5 = sext i16 %7 to i32, !dbg !2646
  %cmp = icmp ne i32 %conv, %conv5, !dbg !2647
  br i1 %cmp, label %if.then, label %if.end, !dbg !2648

if.then:                                          ; preds = %land.lhs.true2
  store i8 0, i8* %retval, align 1, !dbg !2649
  br label %return, !dbg !2649

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %8 = load %struct.ID*, %struct.ID** %id_to.addr, align 8, !dbg !2650
  call void @BKE_free_animdata(%struct.ID* %8), !dbg !2651
  %9 = load %struct.ID*, %struct.ID** %id_from.addr, align 8, !dbg !2652
  %call = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %9), !dbg !2653
  store %struct.AnimData* %call, %struct.AnimData** %adt, align 8, !dbg !2654
  %10 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2655
  %tobool7 = icmp ne %struct.AnimData* %10, null, !dbg !2655
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !2657

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.IdAdtTemplate** %iat, metadata !2658, metadata !DIExpression()), !dbg !2660
  %11 = load %struct.ID*, %struct.ID** %id_to.addr, align 8, !dbg !2661
  %12 = bitcast %struct.ID* %11 to %struct.IdAdtTemplate*, !dbg !2662
  store %struct.IdAdtTemplate* %12, %struct.IdAdtTemplate** %iat, align 8, !dbg !2660
  %13 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2663
  %14 = load i8, i8* %do_action.addr, align 1, !dbg !2664
  %call9 = call %struct.AnimData* @BKE_copy_animdata(%struct.AnimData* %13, i8 zeroext %14), !dbg !2665
  %15 = load %struct.IdAdtTemplate*, %struct.IdAdtTemplate** %iat, align 8, !dbg !2666
  %adt10 = getelementptr inbounds %struct.IdAdtTemplate, %struct.IdAdtTemplate* %15, i32 0, i32 1, !dbg !2667
  store %struct.AnimData* %call9, %struct.AnimData** %adt10, align 8, !dbg !2668
  br label %if.end11, !dbg !2669

if.end11:                                         ; preds = %if.then8, %if.end
  store i8 1, i8* %retval, align 1, !dbg !2670
  br label %return, !dbg !2670

return:                                           ; preds = %if.end11, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !2671
  ret i8 %16, !dbg !2671
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_copy_animdata_id_action(%struct.ID* %id) #0 !dbg !2672 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %adt = alloca %struct.AnimData*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !2673, metadata !DIExpression()), !dbg !2674
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !2675, metadata !DIExpression()), !dbg !2676
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2677
  %call = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %0), !dbg !2678
  store %struct.AnimData* %call, %struct.AnimData** %adt, align 8, !dbg !2676
  %1 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2679
  %tobool = icmp ne %struct.AnimData* %1, null, !dbg !2679
  br i1 %tobool, label %if.then, label %if.end14, !dbg !2681

if.then:                                          ; preds = %entry
  %2 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2682
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %2, i32 0, i32 0, !dbg !2685
  %3 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !2685
  %tobool1 = icmp ne %struct.bAction* %3, null, !dbg !2682
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2686

if.then2:                                         ; preds = %if.then
  %4 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2687
  %action3 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %4, i32 0, i32 0, !dbg !2689
  %5 = load %struct.bAction*, %struct.bAction** %action3, align 8, !dbg !2689
  %6 = bitcast %struct.bAction* %5 to %struct.ID*, !dbg !2690
  call void @id_us_min(%struct.ID* %6), !dbg !2691
  %7 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2692
  %action4 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %7, i32 0, i32 0, !dbg !2693
  %8 = load %struct.bAction*, %struct.bAction** %action4, align 8, !dbg !2693
  %call5 = call %struct.bAction* @BKE_action_copy(%struct.bAction* %8), !dbg !2694
  %9 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2695
  %action6 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %9, i32 0, i32 0, !dbg !2696
  store %struct.bAction* %call5, %struct.bAction** %action6, align 8, !dbg !2697
  br label %if.end, !dbg !2698

if.end:                                           ; preds = %if.then2, %if.then
  %10 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2699
  %tmpact = getelementptr inbounds %struct.AnimData, %struct.AnimData* %10, i32 0, i32 1, !dbg !2701
  %11 = load %struct.bAction*, %struct.bAction** %tmpact, align 8, !dbg !2701
  %tobool7 = icmp ne %struct.bAction* %11, null, !dbg !2699
  br i1 %tobool7, label %if.then8, label %if.end13, !dbg !2702

if.then8:                                         ; preds = %if.end
  %12 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2703
  %tmpact9 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %12, i32 0, i32 1, !dbg !2705
  %13 = load %struct.bAction*, %struct.bAction** %tmpact9, align 8, !dbg !2705
  %14 = bitcast %struct.bAction* %13 to %struct.ID*, !dbg !2706
  call void @id_us_min(%struct.ID* %14), !dbg !2707
  %15 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2708
  %tmpact10 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %15, i32 0, i32 1, !dbg !2709
  %16 = load %struct.bAction*, %struct.bAction** %tmpact10, align 8, !dbg !2709
  %call11 = call %struct.bAction* @BKE_action_copy(%struct.bAction* %16), !dbg !2710
  %17 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2711
  %tmpact12 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %17, i32 0, i32 1, !dbg !2712
  store %struct.bAction* %call11, %struct.bAction** %tmpact12, align 8, !dbg !2713
  br label %if.end13, !dbg !2714

if.end13:                                         ; preds = %if.then8, %if.end
  br label %if.end14, !dbg !2715

if.end14:                                         ; preds = %if.end13, %entry
  ret void, !dbg !2716
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_animdata_make_local(%struct.AnimData* %adt) #0 !dbg !2717 {
entry:
  %adt.addr = alloca %struct.AnimData*, align 8
  %nlt = alloca %struct.NlaTrack*, align 8
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !2720, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.declare(metadata %struct.NlaTrack** %nlt, metadata !2722, metadata !DIExpression()), !dbg !2734
  %0 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2735
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %0, i32 0, i32 0, !dbg !2737
  %1 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !2737
  %tobool = icmp ne %struct.bAction* %1, null, !dbg !2735
  br i1 %tobool, label %if.then, label %if.end, !dbg !2738

if.then:                                          ; preds = %entry
  %2 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2739
  %action1 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %2, i32 0, i32 0, !dbg !2740
  %3 = load %struct.bAction*, %struct.bAction** %action1, align 8, !dbg !2740
  call void @BKE_action_make_local(%struct.bAction* %3), !dbg !2741
  br label %if.end, !dbg !2741

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2742
  %tmpact = getelementptr inbounds %struct.AnimData, %struct.AnimData* %4, i32 0, i32 1, !dbg !2744
  %5 = load %struct.bAction*, %struct.bAction** %tmpact, align 8, !dbg !2744
  %tobool2 = icmp ne %struct.bAction* %5, null, !dbg !2742
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !2745

if.then3:                                         ; preds = %if.end
  %6 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2746
  %tmpact4 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %6, i32 0, i32 1, !dbg !2747
  %7 = load %struct.bAction*, %struct.bAction** %tmpact4, align 8, !dbg !2747
  call void @BKE_action_make_local(%struct.bAction* %7), !dbg !2748
  br label %if.end5, !dbg !2748

if.end5:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2749
  %remap = getelementptr inbounds %struct.AnimData, %struct.AnimData* %8, i32 0, i32 2, !dbg !2751
  %9 = load %struct.AnimMapper*, %struct.AnimMapper** %remap, align 8, !dbg !2751
  %tobool6 = icmp ne %struct.AnimMapper* %9, null, !dbg !2749
  br i1 %tobool6, label %land.lhs.true, label %if.end12, !dbg !2752

land.lhs.true:                                    ; preds = %if.end5
  %10 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2753
  %remap7 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %10, i32 0, i32 2, !dbg !2754
  %11 = load %struct.AnimMapper*, %struct.AnimMapper** %remap7, align 8, !dbg !2754
  %target = getelementptr inbounds %struct.AnimMapper, %struct.AnimMapper* %11, i32 0, i32 2, !dbg !2755
  %12 = load %struct.bAction*, %struct.bAction** %target, align 8, !dbg !2755
  %tobool8 = icmp ne %struct.bAction* %12, null, !dbg !2753
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !2756

if.then9:                                         ; preds = %land.lhs.true
  %13 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2757
  %remap10 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %13, i32 0, i32 2, !dbg !2758
  %14 = load %struct.AnimMapper*, %struct.AnimMapper** %remap10, align 8, !dbg !2758
  %target11 = getelementptr inbounds %struct.AnimMapper, %struct.AnimMapper* %14, i32 0, i32 2, !dbg !2759
  %15 = load %struct.bAction*, %struct.bAction** %target11, align 8, !dbg !2759
  call void @BKE_action_make_local(%struct.bAction* %15), !dbg !2760
  br label %if.end12, !dbg !2760

if.end12:                                         ; preds = %if.then9, %land.lhs.true, %if.end5
  %16 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2761
  %nla_tracks = getelementptr inbounds %struct.AnimData, %struct.AnimData* %16, i32 0, i32 3, !dbg !2763
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nla_tracks, i32 0, i32 0, !dbg !2764
  %17 = load i8*, i8** %first, align 8, !dbg !2764
  %18 = bitcast i8* %17 to %struct.NlaTrack*, !dbg !2761
  store %struct.NlaTrack* %18, %struct.NlaTrack** %nlt, align 8, !dbg !2765
  br label %for.cond, !dbg !2766

for.cond:                                         ; preds = %for.inc, %if.end12
  %19 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !2767
  %tobool13 = icmp ne %struct.NlaTrack* %19, null, !dbg !2769
  br i1 %tobool13, label %for.body, label %for.end, !dbg !2769

for.body:                                         ; preds = %for.cond
  %20 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !2770
  %strips = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %20, i32 0, i32 2, !dbg !2771
  call void @make_local_strips(%struct.ListBase* %strips), !dbg !2772
  br label %for.inc, !dbg !2772

for.inc:                                          ; preds = %for.body
  %21 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !2773
  %next = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %21, i32 0, i32 0, !dbg !2774
  %22 = load %struct.NlaTrack*, %struct.NlaTrack** %next, align 8, !dbg !2774
  store %struct.NlaTrack* %22, %struct.NlaTrack** %nlt, align 8, !dbg !2775
  br label %for.cond, !dbg !2776, !llvm.loop !2777

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2779
}

declare dso_local void @BKE_action_make_local(%struct.bAction*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @make_local_strips(%struct.ListBase* %strips) #0 !dbg !2780 {
entry:
  %strips.addr = alloca %struct.ListBase*, align 8
  %strip = alloca %struct.NlaStrip*, align 8
  store %struct.ListBase* %strips, %struct.ListBase** %strips.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %strips.addr, metadata !2783, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %strip, metadata !2785, metadata !DIExpression()), !dbg !2786
  %0 = load %struct.ListBase*, %struct.ListBase** %strips.addr, align 8, !dbg !2787
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !2789
  %1 = load i8*, i8** %first, align 8, !dbg !2789
  %2 = bitcast i8* %1 to %struct.NlaStrip*, !dbg !2787
  store %struct.NlaStrip* %2, %struct.NlaStrip** %strip, align 8, !dbg !2790
  br label %for.cond, !dbg !2791

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !2792
  %tobool = icmp ne %struct.NlaStrip* %3, null, !dbg !2794
  br i1 %tobool, label %for.body, label %for.end, !dbg !2794

for.body:                                         ; preds = %for.cond
  %4 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !2795
  %act = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %4, i32 0, i32 3, !dbg !2798
  %5 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !2798
  %tobool1 = icmp ne %struct.bAction* %5, null, !dbg !2795
  br i1 %tobool1, label %if.then, label %if.end, !dbg !2799

if.then:                                          ; preds = %for.body
  %6 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !2800
  %act2 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %6, i32 0, i32 3, !dbg !2801
  %7 = load %struct.bAction*, %struct.bAction** %act2, align 8, !dbg !2801
  call void @BKE_action_make_local(%struct.bAction* %7), !dbg !2802
  br label %if.end, !dbg !2802

if.end:                                           ; preds = %if.then, %for.body
  %8 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !2803
  %remap = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %8, i32 0, i32 4, !dbg !2805
  %9 = load %struct.AnimMapper*, %struct.AnimMapper** %remap, align 8, !dbg !2805
  %tobool3 = icmp ne %struct.AnimMapper* %9, null, !dbg !2803
  br i1 %tobool3, label %land.lhs.true, label %if.end9, !dbg !2806

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !2807
  %remap4 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %10, i32 0, i32 4, !dbg !2808
  %11 = load %struct.AnimMapper*, %struct.AnimMapper** %remap4, align 8, !dbg !2808
  %target = getelementptr inbounds %struct.AnimMapper, %struct.AnimMapper* %11, i32 0, i32 2, !dbg !2809
  %12 = load %struct.bAction*, %struct.bAction** %target, align 8, !dbg !2809
  %tobool5 = icmp ne %struct.bAction* %12, null, !dbg !2807
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !2810

if.then6:                                         ; preds = %land.lhs.true
  %13 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !2811
  %remap7 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %13, i32 0, i32 4, !dbg !2812
  %14 = load %struct.AnimMapper*, %struct.AnimMapper** %remap7, align 8, !dbg !2812
  %target8 = getelementptr inbounds %struct.AnimMapper, %struct.AnimMapper* %14, i32 0, i32 2, !dbg !2813
  %15 = load %struct.bAction*, %struct.bAction** %target8, align 8, !dbg !2813
  call void @BKE_action_make_local(%struct.bAction* %15), !dbg !2814
  br label %if.end9, !dbg !2814

if.end9:                                          ; preds = %if.then6, %land.lhs.true, %if.end
  %16 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !2815
  %strips10 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %16, i32 0, i32 2, !dbg !2816
  call void @make_local_strips(%struct.ListBase* %strips10), !dbg !2817
  br label %for.inc, !dbg !2818

for.inc:                                          ; preds = %if.end9
  %17 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !2819
  %next = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %17, i32 0, i32 0, !dbg !2820
  %18 = load %struct.NlaStrip*, %struct.NlaStrip** %next, align 8, !dbg !2820
  store %struct.NlaStrip* %18, %struct.NlaStrip** %strip, align 8, !dbg !2821
  br label %for.cond, !dbg !2822, !llvm.loop !2823

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2825
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_relink_animdata(%struct.AnimData* %adt) #0 !dbg !2826 {
entry:
  %adt.addr = alloca %struct.AnimData*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %driver = alloca %struct.ChannelDriver*, align 8
  %dvar = alloca %struct.DriverVar*, align 8
  %dtar = alloca %struct.DriverTarget*, align 8
  %tarIndex = alloca i32, align 4
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !2827, metadata !DIExpression()), !dbg !2828
  %0 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2829
  %cmp = icmp eq %struct.AnimData* %0, null, !dbg !2831
  br i1 %cmp, label %if.then, label %if.end, !dbg !2832

if.then:                                          ; preds = %entry
  br label %if.end27, !dbg !2833

if.end:                                           ; preds = %entry
  %1 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2834
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %1, i32 0, i32 5, !dbg !2836
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers, i32 0, i32 0, !dbg !2837
  %2 = load i8*, i8** %first, align 8, !dbg !2837
  %tobool = icmp ne i8* %2, null, !dbg !2834
  br i1 %tobool, label %if.then1, label %if.end27, !dbg !2838

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !2839, metadata !DIExpression()), !dbg !2923
  %3 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !2924
  %drivers2 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %3, i32 0, i32 5, !dbg !2926
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers2, i32 0, i32 0, !dbg !2927
  %4 = load i8*, i8** %first3, align 8, !dbg !2927
  %5 = bitcast i8* %4 to %struct.FCurve*, !dbg !2924
  store %struct.FCurve* %5, %struct.FCurve** %fcu, align 8, !dbg !2928
  br label %for.cond, !dbg !2929

for.cond:                                         ; preds = %for.inc24, %if.then1
  %6 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !2930
  %tobool4 = icmp ne %struct.FCurve* %6, null, !dbg !2932
  br i1 %tobool4, label %for.body, label %for.end26, !dbg !2932

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ChannelDriver** %driver, metadata !2933, metadata !DIExpression()), !dbg !2935
  %7 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !2936
  %driver5 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %7, i32 0, i32 3, !dbg !2937
  %8 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver5, align 8, !dbg !2937
  store %struct.ChannelDriver* %8, %struct.ChannelDriver** %driver, align 8, !dbg !2935
  call void @llvm.dbg.declare(metadata %struct.DriverVar** %dvar, metadata !2938, metadata !DIExpression()), !dbg !2961
  %9 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver, align 8, !dbg !2962
  %variables = getelementptr inbounds %struct.ChannelDriver, %struct.ChannelDriver* %9, i32 0, i32 0, !dbg !2964
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %variables, i32 0, i32 0, !dbg !2965
  %10 = load i8*, i8** %first6, align 8, !dbg !2965
  %11 = bitcast i8* %10 to %struct.DriverVar*, !dbg !2962
  store %struct.DriverVar* %11, %struct.DriverVar** %dvar, align 8, !dbg !2966
  br label %for.cond7, !dbg !2967

for.cond7:                                        ; preds = %for.inc22, %for.body
  %12 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !2968
  %tobool8 = icmp ne %struct.DriverVar* %12, null, !dbg !2970
  br i1 %tobool8, label %for.body9, label %for.end23, !dbg !2970

for.body9:                                        ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata %struct.DriverTarget** %dtar, metadata !2971, metadata !DIExpression()), !dbg !2975
  %13 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !2975
  %targets = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %13, i32 0, i32 3, !dbg !2975
  %arrayidx = getelementptr inbounds [8 x %struct.DriverTarget], [8 x %struct.DriverTarget]* %targets, i64 0, i64 0, !dbg !2975
  store %struct.DriverTarget* %arrayidx, %struct.DriverTarget** %dtar, align 8, !dbg !2975
  call void @llvm.dbg.declare(metadata i32* %tarIndex, metadata !2976, metadata !DIExpression()), !dbg !2975
  store i32 0, i32* %tarIndex, align 4, !dbg !2975
  br label %for.cond10, !dbg !2975

for.cond10:                                       ; preds = %for.inc, %for.body9
  %14 = load i32, i32* %tarIndex, align 4, !dbg !2977
  %15 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !2977
  %num_targets = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %15, i32 0, i32 4, !dbg !2977
  %16 = load i16, i16* %num_targets, align 8, !dbg !2977
  %conv = sext i16 %16 to i32, !dbg !2977
  %cmp11 = icmp slt i32 %14, %conv, !dbg !2977
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !2980

for.body13:                                       ; preds = %for.cond10
  %17 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !2981
  %id = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %17, i32 0, i32 0, !dbg !2984
  %18 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !2984
  %tobool14 = icmp ne %struct.ID* %18, null, !dbg !2981
  br i1 %tobool14, label %land.lhs.true, label %if.end21, !dbg !2985

land.lhs.true:                                    ; preds = %for.body13
  %19 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !2986
  %id15 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %19, i32 0, i32 0, !dbg !2987
  %20 = load %struct.ID*, %struct.ID** %id15, align 8, !dbg !2987
  %newid = getelementptr inbounds %struct.ID, %struct.ID* %20, i32 0, i32 2, !dbg !2988
  %21 = load %struct.ID*, %struct.ID** %newid, align 8, !dbg !2988
  %tobool16 = icmp ne %struct.ID* %21, null, !dbg !2986
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !2989

if.then17:                                        ; preds = %land.lhs.true
  %22 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !2990
  %id18 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %22, i32 0, i32 0, !dbg !2992
  %23 = load %struct.ID*, %struct.ID** %id18, align 8, !dbg !2992
  %newid19 = getelementptr inbounds %struct.ID, %struct.ID* %23, i32 0, i32 2, !dbg !2993
  %24 = load %struct.ID*, %struct.ID** %newid19, align 8, !dbg !2993
  %25 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !2994
  %id20 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %25, i32 0, i32 0, !dbg !2995
  store %struct.ID* %24, %struct.ID** %id20, align 8, !dbg !2996
  br label %if.end21, !dbg !2997

if.end21:                                         ; preds = %if.then17, %land.lhs.true, %for.body13
  br label %for.inc, !dbg !2998

for.inc:                                          ; preds = %if.end21
  %26 = load i32, i32* %tarIndex, align 4, !dbg !2977
  %inc = add nsw i32 %26, 1, !dbg !2977
  store i32 %inc, i32* %tarIndex, align 4, !dbg !2977
  %27 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !2977
  %incdec.ptr = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %27, i32 1, !dbg !2977
  store %struct.DriverTarget* %incdec.ptr, %struct.DriverTarget** %dtar, align 8, !dbg !2977
  br label %for.cond10, !dbg !2977, !llvm.loop !2999

for.end:                                          ; preds = %for.cond10
  br label %for.inc22, !dbg !3001

for.inc22:                                        ; preds = %for.end
  %28 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !3002
  %next = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %28, i32 0, i32 0, !dbg !3003
  %29 = load %struct.DriverVar*, %struct.DriverVar** %next, align 8, !dbg !3003
  store %struct.DriverVar* %29, %struct.DriverVar** %dvar, align 8, !dbg !3004
  br label %for.cond7, !dbg !3005, !llvm.loop !3006

for.end23:                                        ; preds = %for.cond7
  br label %for.inc24, !dbg !3008

for.inc24:                                        ; preds = %for.end23
  %30 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3009
  %next25 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %30, i32 0, i32 0, !dbg !3010
  %31 = load %struct.FCurve*, %struct.FCurve** %next25, align 8, !dbg !3010
  store %struct.FCurve* %31, %struct.FCurve** %fcu, align 8, !dbg !3011
  br label %for.cond, !dbg !3012, !llvm.loop !3013

for.end26:                                        ; preds = %for.cond
  br label %if.end27, !dbg !3015

if.end27:                                         ; preds = %if.then, %for.end26, %if.end
  ret void, !dbg !3016
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @action_move_fcurves_by_basepath(%struct.bAction* %srcAct, %struct.bAction* %dstAct, i8* %basepath) #0 !dbg !3017 {
entry:
  %srcAct.addr = alloca %struct.bAction*, align 8
  %dstAct.addr = alloca %struct.bAction*, align 8
  %basepath.addr = alloca i8*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %fcn = alloca %struct.FCurve*, align 8
  %agrp = alloca %struct.bActionGroup*, align 8
  %agrp31 = alloca %struct.bActionGroup*, align 8
  %grp32 = alloca %struct.bActionGroup*, align 8
  store %struct.bAction* %srcAct, %struct.bAction** %srcAct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAction** %srcAct.addr, metadata !3020, metadata !DIExpression()), !dbg !3021
  store %struct.bAction* %dstAct, %struct.bAction** %dstAct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAction** %dstAct.addr, metadata !3022, metadata !DIExpression()), !dbg !3023
  store i8* %basepath, i8** %basepath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %basepath.addr, metadata !3024, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !3026, metadata !DIExpression()), !dbg !3027
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcn, metadata !3028, metadata !DIExpression()), !dbg !3029
  store %struct.FCurve* null, %struct.FCurve** %fcn, align 8, !dbg !3029
  %0 = load %struct.bAction*, %struct.bAction** %srcAct.addr, align 8, !dbg !3030
  %cmp = icmp eq %struct.bAction* null, %0, !dbg !3030
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3030

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bAction*, %struct.bAction** %dstAct.addr, align 8, !dbg !3030
  %cmp1 = icmp eq %struct.bAction* null, %1, !dbg !3030
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !3030

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %basepath.addr, align 8, !dbg !3030
  %cmp3 = icmp eq i8* null, %2, !dbg !3030
  br i1 %cmp3, label %if.then, label %if.end5, !dbg !3032

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  %3 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !3033
  %and = and i32 %3, 1, !dbg !3036
  %tobool = icmp ne i32 %and, 0, !dbg !3036
  br i1 %tobool, label %if.then4, label %if.end, !dbg !3037

if.then4:                                         ; preds = %if.then
  %4 = load %struct.bAction*, %struct.bAction** %srcAct.addr, align 8, !dbg !3038
  %5 = bitcast %struct.bAction* %4 to i8*, !dbg !3040
  %6 = load %struct.bAction*, %struct.bAction** %dstAct.addr, align 8, !dbg !3041
  %7 = bitcast %struct.bAction* %6 to i8*, !dbg !3042
  %8 = load i8*, i8** %basepath.addr, align 8, !dbg !3043
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.4, i64 0, i64 0), i8* %5, i8* %7, i8* %8), !dbg !3044
  br label %if.end, !dbg !3045

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end54, !dbg !3046

if.end5:                                          ; preds = %lor.lhs.false2
  %9 = load %struct.bAction*, %struct.bAction** %srcAct.addr, align 8, !dbg !3047
  call void @action_groups_clear_tempflags(%struct.bAction* %9), !dbg !3048
  %10 = load %struct.bAction*, %struct.bAction** %srcAct.addr, align 8, !dbg !3049
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %10, i32 0, i32 1, !dbg !3051
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curves, i32 0, i32 0, !dbg !3052
  %11 = load i8*, i8** %first, align 8, !dbg !3052
  %12 = bitcast i8* %11 to %struct.FCurve*, !dbg !3049
  store %struct.FCurve* %12, %struct.FCurve** %fcu, align 8, !dbg !3053
  br label %for.cond, !dbg !3054

for.cond:                                         ; preds = %for.inc, %if.end5
  %13 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3055
  %tobool6 = icmp ne %struct.FCurve* %13, null, !dbg !3057
  br i1 %tobool6, label %for.body, label %for.end, !dbg !3057

for.body:                                         ; preds = %for.cond
  %14 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3058
  %next = getelementptr inbounds %struct.FCurve, %struct.FCurve* %14, i32 0, i32 0, !dbg !3060
  %15 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !3060
  store %struct.FCurve* %15, %struct.FCurve** %fcn, align 8, !dbg !3061
  %16 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3062
  %rna_path = getelementptr inbounds %struct.FCurve, %struct.FCurve* %16, i32 0, i32 12, !dbg !3064
  %17 = load i8*, i8** %rna_path, align 8, !dbg !3064
  %18 = load i8*, i8** %basepath.addr, align 8, !dbg !3065
  %call7 = call zeroext i8 @animpath_matches_basepath(i8* %17, i8* %18), !dbg !3066
  %tobool8 = icmp ne i8 %call7, 0, !dbg !3066
  br i1 %tobool8, label %if.then9, label %if.end27, !dbg !3067

if.then9:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !3068, metadata !DIExpression()), !dbg !3070
  store %struct.bActionGroup* null, %struct.bActionGroup** %agrp, align 8, !dbg !3070
  %19 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3071
  %grp = getelementptr inbounds %struct.FCurve, %struct.FCurve* %19, i32 0, i32 2, !dbg !3073
  %20 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !3073
  %tobool10 = icmp ne %struct.bActionGroup* %20, null, !dbg !3071
  br i1 %tobool10, label %if.then11, label %if.end22, !dbg !3074

if.then11:                                        ; preds = %if.then9
  %21 = load %struct.bAction*, %struct.bAction** %dstAct.addr, align 8, !dbg !3075
  %22 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3077
  %grp12 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %22, i32 0, i32 2, !dbg !3078
  %23 = load %struct.bActionGroup*, %struct.bActionGroup** %grp12, align 8, !dbg !3078
  %name = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %23, i32 0, i32 5, !dbg !3079
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3077
  %call13 = call %struct.bActionGroup* @BKE_action_group_find_name(%struct.bAction* %21, i8* %arraydecay), !dbg !3080
  store %struct.bActionGroup* %call13, %struct.bActionGroup** %agrp, align 8, !dbg !3081
  %24 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !3082
  %cmp14 = icmp eq %struct.bActionGroup* %24, null, !dbg !3084
  br i1 %cmp14, label %if.then15, label %if.end20, !dbg !3085

if.then15:                                        ; preds = %if.then11
  %25 = load %struct.bAction*, %struct.bAction** %dstAct.addr, align 8, !dbg !3086
  %26 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3088
  %grp16 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %26, i32 0, i32 2, !dbg !3089
  %27 = load %struct.bActionGroup*, %struct.bActionGroup** %grp16, align 8, !dbg !3089
  %name17 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %27, i32 0, i32 5, !dbg !3090
  %arraydecay18 = getelementptr inbounds [64 x i8], [64 x i8]* %name17, i64 0, i64 0, !dbg !3088
  %call19 = call %struct.bActionGroup* @action_groups_add_new(%struct.bAction* %25, i8* %arraydecay18), !dbg !3091
  store %struct.bActionGroup* %call19, %struct.bActionGroup** %agrp, align 8, !dbg !3092
  br label %if.end20, !dbg !3093

if.end20:                                         ; preds = %if.then15, %if.then11
  %28 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3094
  %grp21 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %28, i32 0, i32 2, !dbg !3095
  %29 = load %struct.bActionGroup*, %struct.bActionGroup** %grp21, align 8, !dbg !3095
  %flag = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %29, i32 0, i32 3, !dbg !3096
  %30 = load i32, i32* %flag, align 8, !dbg !3097
  %or = or i32 %30, 1073741824, !dbg !3097
  store i32 %or, i32* %flag, align 8, !dbg !3097
  br label %if.end22, !dbg !3098

if.end22:                                         ; preds = %if.end20, %if.then9
  %31 = load %struct.bAction*, %struct.bAction** %srcAct.addr, align 8, !dbg !3099
  %32 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3100
  call void @action_groups_remove_channel(%struct.bAction* %31, %struct.FCurve* %32), !dbg !3101
  %33 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !3102
  %tobool23 = icmp ne %struct.bActionGroup* %33, null, !dbg !3102
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !3104

if.then24:                                        ; preds = %if.end22
  %34 = load %struct.bAction*, %struct.bAction** %dstAct.addr, align 8, !dbg !3105
  %35 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !3106
  %36 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3107
  call void @action_groups_add_channel(%struct.bAction* %34, %struct.bActionGroup* %35, %struct.FCurve* %36), !dbg !3108
  br label %if.end26, !dbg !3108

if.else:                                          ; preds = %if.end22
  %37 = load %struct.bAction*, %struct.bAction** %dstAct.addr, align 8, !dbg !3109
  %curves25 = getelementptr inbounds %struct.bAction, %struct.bAction* %37, i32 0, i32 1, !dbg !3110
  %38 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3111
  %39 = bitcast %struct.FCurve* %38 to i8*, !dbg !3111
  call void @BLI_addtail(%struct.ListBase* %curves25, i8* %39), !dbg !3112
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then24
  br label %if.end27, !dbg !3113

if.end27:                                         ; preds = %if.end26, %for.body
  br label %for.inc, !dbg !3114

for.inc:                                          ; preds = %if.end27
  %40 = load %struct.FCurve*, %struct.FCurve** %fcn, align 8, !dbg !3115
  store %struct.FCurve* %40, %struct.FCurve** %fcu, align 8, !dbg !3116
  br label %for.cond, !dbg !3117, !llvm.loop !3118

for.end:                                          ; preds = %for.cond
  %41 = load %struct.bAction*, %struct.bAction** %srcAct.addr, align 8, !dbg !3120
  %groups = getelementptr inbounds %struct.bAction, %struct.bAction* %41, i32 0, i32 3, !dbg !3122
  %first28 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %groups, i32 0, i32 0, !dbg !3123
  %42 = load i8*, i8** %first28, align 8, !dbg !3123
  %tobool29 = icmp ne i8* %42, null, !dbg !3120
  br i1 %tobool29, label %if.then30, label %if.end54, !dbg !3124

if.then30:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp31, metadata !3125, metadata !DIExpression()), !dbg !3127
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %grp32, metadata !3128, metadata !DIExpression()), !dbg !3129
  store %struct.bActionGroup* null, %struct.bActionGroup** %grp32, align 8, !dbg !3129
  %43 = load %struct.bAction*, %struct.bAction** %srcAct.addr, align 8, !dbg !3130
  %groups33 = getelementptr inbounds %struct.bAction, %struct.bAction* %43, i32 0, i32 3, !dbg !3132
  %first34 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %groups33, i32 0, i32 0, !dbg !3133
  %44 = load i8*, i8** %first34, align 8, !dbg !3133
  %45 = bitcast i8* %44 to %struct.bActionGroup*, !dbg !3130
  store %struct.bActionGroup* %45, %struct.bActionGroup** %agrp31, align 8, !dbg !3134
  br label %for.cond35, !dbg !3135

for.cond35:                                       ; preds = %for.inc52, %if.then30
  %46 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp31, align 8, !dbg !3136
  %tobool36 = icmp ne %struct.bActionGroup* %46, null, !dbg !3138
  br i1 %tobool36, label %for.body37, label %for.end53, !dbg !3138

for.body37:                                       ; preds = %for.cond35
  %47 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp31, align 8, !dbg !3139
  %next38 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %47, i32 0, i32 0, !dbg !3141
  %48 = load %struct.bActionGroup*, %struct.bActionGroup** %next38, align 8, !dbg !3141
  store %struct.bActionGroup* %48, %struct.bActionGroup** %grp32, align 8, !dbg !3142
  %49 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp31, align 8, !dbg !3143
  %flag39 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %49, i32 0, i32 3, !dbg !3145
  %50 = load i32, i32* %flag39, align 8, !dbg !3145
  %and40 = and i32 %50, 1073741824, !dbg !3146
  %tobool41 = icmp ne i32 %and40, 0, !dbg !3146
  br i1 %tobool41, label %if.then42, label %if.end51, !dbg !3147

if.then42:                                        ; preds = %for.body37
  %51 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp31, align 8, !dbg !3148
  %channels = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %51, i32 0, i32 2, !dbg !3151
  %call43 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %channels), !dbg !3152
  %tobool44 = icmp ne i8 %call43, 0, !dbg !3152
  br i1 %tobool44, label %if.then45, label %if.else47, !dbg !3153

if.then45:                                        ; preds = %if.then42
  %52 = load %struct.bAction*, %struct.bAction** %srcAct.addr, align 8, !dbg !3154
  %groups46 = getelementptr inbounds %struct.bAction, %struct.bAction* %52, i32 0, i32 3, !dbg !3155
  %53 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp31, align 8, !dbg !3156
  %54 = bitcast %struct.bActionGroup* %53 to i8*, !dbg !3156
  call void @BLI_freelinkN(%struct.ListBase* %groups46, i8* %54), !dbg !3157
  br label %if.end50, !dbg !3157

if.else47:                                        ; preds = %if.then42
  %55 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp31, align 8, !dbg !3158
  %flag48 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %55, i32 0, i32 3, !dbg !3159
  %56 = load i32, i32* %flag48, align 8, !dbg !3160
  %and49 = and i32 %56, -1073741825, !dbg !3160
  store i32 %and49, i32* %flag48, align 8, !dbg !3160
  br label %if.end50

if.end50:                                         ; preds = %if.else47, %if.then45
  br label %if.end51, !dbg !3161

if.end51:                                         ; preds = %if.end50, %for.body37
  br label %for.inc52, !dbg !3162

for.inc52:                                        ; preds = %if.end51
  %57 = load %struct.bActionGroup*, %struct.bActionGroup** %grp32, align 8, !dbg !3163
  store %struct.bActionGroup* %57, %struct.bActionGroup** %agrp31, align 8, !dbg !3164
  br label %for.cond35, !dbg !3165, !llvm.loop !3166

for.end53:                                        ; preds = %for.cond35
  br label %if.end54, !dbg !3168

if.end54:                                         ; preds = %if.end, %for.end53, %for.end
  ret void, !dbg !3169
}

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local void @action_groups_clear_tempflags(%struct.bAction*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @animpath_matches_basepath(i8* %path, i8* %basepath) #0 !dbg !3170 {
entry:
  %path.addr = alloca i8*, align 8
  %basepath.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3173, metadata !DIExpression()), !dbg !3174
  store i8* %basepath, i8** %basepath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %basepath.addr, metadata !3175, metadata !DIExpression()), !dbg !3176
  %0 = load i8*, i8** %path.addr, align 8, !dbg !3177
  %tobool = icmp ne i8* %0, null, !dbg !3177
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !3178

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %basepath.addr, align 8, !dbg !3179
  %tobool1 = icmp ne i8* %1, null, !dbg !3179
  br i1 %tobool1, label %land.rhs, label %land.end, !dbg !3180

land.rhs:                                         ; preds = %land.lhs.true
  %2 = load i8*, i8** %path.addr, align 8, !dbg !3181
  %3 = load i8*, i8** %basepath.addr, align 8, !dbg !3181
  %4 = load i8*, i8** %basepath.addr, align 8, !dbg !3181
  %call = call i64 @strlen(i8* %4) #6, !dbg !3181
  %call2 = call i32 @strncmp(i8* %2, i8* %3, i64 %call) #6, !dbg !3181
  %cmp = icmp eq i32 %call2, 0, !dbg !3181
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %5 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp, %land.rhs ], !dbg !3182
  %land.ext = zext i1 %5 to i32, !dbg !3180
  %conv = trunc i32 %land.ext to i8, !dbg !3183
  ret i8 %conv, !dbg !3184
}

declare dso_local %struct.bActionGroup* @BKE_action_group_find_name(%struct.bAction*, i8*) #2

declare dso_local %struct.bActionGroup* @action_groups_add_new(%struct.bAction*, i8*) #2

declare dso_local void @action_groups_remove_channel(%struct.bAction*, %struct.FCurve*) #2

declare dso_local void @action_groups_add_channel(%struct.bAction*, %struct.bActionGroup*, %struct.FCurve*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !3185 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !3190, metadata !DIExpression()), !dbg !3191
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !3192
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !3193
  %1 = load i8*, i8** %first, align 8, !dbg !3193
  %cmp = icmp eq i8* %1, null, !dbg !3194
  %conv = zext i1 %cmp to i32, !dbg !3194
  %conv1 = trunc i32 %conv to i8, !dbg !3195
  ret i8 %conv1, !dbg !3196
}

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_animdata_separate_by_basepath(%struct.ID* %srcID, %struct.ID* %dstID, %struct.ListBase* %basepaths) #0 !dbg !3197 {
entry:
  %srcID.addr = alloca %struct.ID*, align 8
  %dstID.addr = alloca %struct.ID*, align 8
  %basepaths.addr = alloca %struct.ListBase*, align 8
  %srcAdt = alloca %struct.AnimData*, align 8
  %dstAdt = alloca %struct.AnimData*, align 8
  %ld = alloca %struct.LinkData*, align 8
  %basepath = alloca i8*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %fcn = alloca %struct.FCurve*, align 8
  %basepath65 = alloca i8*, align 8
  store %struct.ID* %srcID, %struct.ID** %srcID.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %srcID.addr, metadata !3200, metadata !DIExpression()), !dbg !3201
  store %struct.ID* %dstID, %struct.ID** %dstID.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %dstID.addr, metadata !3202, metadata !DIExpression()), !dbg !3203
  store %struct.ListBase* %basepaths, %struct.ListBase** %basepaths.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %basepaths.addr, metadata !3204, metadata !DIExpression()), !dbg !3205
  call void @llvm.dbg.declare(metadata %struct.AnimData** %srcAdt, metadata !3206, metadata !DIExpression()), !dbg !3207
  store %struct.AnimData* null, %struct.AnimData** %srcAdt, align 8, !dbg !3207
  call void @llvm.dbg.declare(metadata %struct.AnimData** %dstAdt, metadata !3208, metadata !DIExpression()), !dbg !3209
  store %struct.AnimData* null, %struct.AnimData** %dstAdt, align 8, !dbg !3209
  call void @llvm.dbg.declare(metadata %struct.LinkData** %ld, metadata !3210, metadata !DIExpression()), !dbg !3219
  %0 = load %struct.ID*, %struct.ID** %srcID.addr, align 8, !dbg !3220
  %cmp = icmp eq %struct.ID* null, %0, !dbg !3220
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3220

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.ID*, %struct.ID** %dstID.addr, align 8, !dbg !3220
  %cmp1 = icmp eq %struct.ID* null, %1, !dbg !3220
  br i1 %cmp1, label %if.then, label %if.end3, !dbg !3222

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !3223
  %and = and i32 %2, 1, !dbg !3226
  %tobool = icmp ne i32 %and, 0, !dbg !3226
  br i1 %tobool, label %if.then2, label %if.end, !dbg !3227

if.then2:                                         ; preds = %if.then
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.5, i64 0, i64 0)), !dbg !3228
  br label %if.end, !dbg !3228

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end78, !dbg !3229

if.end3:                                          ; preds = %lor.lhs.false
  %3 = load %struct.ID*, %struct.ID** %srcID.addr, align 8, !dbg !3230
  %call4 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %3), !dbg !3231
  store %struct.AnimData* %call4, %struct.AnimData** %srcAdt, align 8, !dbg !3232
  %4 = load %struct.ID*, %struct.ID** %dstID.addr, align 8, !dbg !3233
  %call5 = call %struct.AnimData* @BKE_id_add_animdata(%struct.ID* %4), !dbg !3234
  store %struct.AnimData* %call5, %struct.AnimData** %dstAdt, align 8, !dbg !3235
  %5 = load %struct.AnimData*, %struct.AnimData** %srcAdt, align 8, !dbg !3236
  %cmp6 = icmp eq %struct.AnimData* null, %5, !dbg !3236
  br i1 %cmp6, label %if.then9, label %lor.lhs.false7, !dbg !3236

lor.lhs.false7:                                   ; preds = %if.end3
  %6 = load %struct.AnimData*, %struct.AnimData** %dstAdt, align 8, !dbg !3236
  %cmp8 = icmp eq %struct.AnimData* null, %6, !dbg !3236
  br i1 %cmp8, label %if.then9, label %if.end15, !dbg !3238

if.then9:                                         ; preds = %lor.lhs.false7, %if.end3
  %7 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !3239
  %and10 = and i32 %7, 1, !dbg !3242
  %tobool11 = icmp ne i32 %and10, 0, !dbg !3242
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !3243

if.then12:                                        ; preds = %if.then9
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0)), !dbg !3244
  br label %if.end14, !dbg !3244

if.end14:                                         ; preds = %if.then12, %if.then9
  br label %if.end78, !dbg !3245

if.end15:                                         ; preds = %lor.lhs.false7
  %8 = load %struct.AnimData*, %struct.AnimData** %srcAdt, align 8, !dbg !3246
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %8, i32 0, i32 0, !dbg !3248
  %9 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !3248
  %tobool16 = icmp ne %struct.bAction* %9, null, !dbg !3246
  br i1 %tobool16, label %if.then17, label %if.end51, !dbg !3249

if.then17:                                        ; preds = %if.end15
  %10 = load %struct.AnimData*, %struct.AnimData** %dstAdt, align 8, !dbg !3250
  %action18 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %10, i32 0, i32 0, !dbg !3253
  %11 = load %struct.bAction*, %struct.bAction** %action18, align 8, !dbg !3253
  %cmp19 = icmp eq %struct.bAction* %11, null, !dbg !3254
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !3255

if.then20:                                        ; preds = %if.then17
  %12 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !3256
  %13 = load %struct.AnimData*, %struct.AnimData** %srcAdt, align 8, !dbg !3258
  %action21 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %13, i32 0, i32 0, !dbg !3259
  %14 = load %struct.bAction*, %struct.bAction** %action21, align 8, !dbg !3259
  %id = getelementptr inbounds %struct.bAction, %struct.bAction* %14, i32 0, i32 0, !dbg !3260
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !3261
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !3258
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !3262
  %call22 = call %struct.bAction* @add_empty_action(%struct.Main* %12, i8* %add.ptr), !dbg !3263
  %15 = load %struct.AnimData*, %struct.AnimData** %dstAdt, align 8, !dbg !3264
  %action23 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %15, i32 0, i32 0, !dbg !3265
  store %struct.bAction* %call22, %struct.bAction** %action23, align 8, !dbg !3266
  br label %if.end47, !dbg !3267

if.else:                                          ; preds = %if.then17
  %16 = load %struct.AnimData*, %struct.AnimData** %dstAdt, align 8, !dbg !3268
  %action24 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %16, i32 0, i32 0, !dbg !3270
  %17 = load %struct.bAction*, %struct.bAction** %action24, align 8, !dbg !3270
  %18 = load %struct.AnimData*, %struct.AnimData** %srcAdt, align 8, !dbg !3271
  %action25 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %18, i32 0, i32 0, !dbg !3272
  %19 = load %struct.bAction*, %struct.bAction** %action25, align 8, !dbg !3272
  %cmp26 = icmp eq %struct.bAction* %17, %19, !dbg !3273
  br i1 %cmp26, label %if.then27, label %if.end46, !dbg !3274

if.then27:                                        ; preds = %if.else
  %20 = load %struct.ID*, %struct.ID** %srcID.addr, align 8, !dbg !3275
  %name28 = getelementptr inbounds %struct.ID, %struct.ID* %20, i32 0, i32 4, !dbg !3277
  %arraydecay29 = getelementptr inbounds [66 x i8], [66 x i8]* %name28, i64 0, i64 0, !dbg !3275
  %21 = load %struct.ID*, %struct.ID** %dstID.addr, align 8, !dbg !3278
  %name30 = getelementptr inbounds %struct.ID, %struct.ID* %21, i32 0, i32 4, !dbg !3279
  %arraydecay31 = getelementptr inbounds [66 x i8], [66 x i8]* %name30, i64 0, i64 0, !dbg !3278
  %22 = load %struct.AnimData*, %struct.AnimData** %srcAdt, align 8, !dbg !3280
  %action32 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %22, i32 0, i32 0, !dbg !3281
  %23 = load %struct.bAction*, %struct.bAction** %action32, align 8, !dbg !3281
  %id33 = getelementptr inbounds %struct.bAction, %struct.bAction* %23, i32 0, i32 0, !dbg !3282
  %name34 = getelementptr inbounds %struct.ID, %struct.ID* %id33, i32 0, i32 4, !dbg !3283
  %arraydecay35 = getelementptr inbounds [66 x i8], [66 x i8]* %name34, i64 0, i64 0, !dbg !3280
  %call36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.7, i64 0, i64 0), i8* %arraydecay29, i8* %arraydecay31, i8* %arraydecay35), !dbg !3284
  %24 = load %struct.AnimData*, %struct.AnimData** %dstAdt, align 8, !dbg !3285
  %action37 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %24, i32 0, i32 0, !dbg !3286
  %25 = load %struct.bAction*, %struct.bAction** %action37, align 8, !dbg !3286
  %id38 = getelementptr inbounds %struct.bAction, %struct.bAction* %25, i32 0, i32 0, !dbg !3287
  call void @id_us_min(%struct.ID* %id38), !dbg !3288
  %26 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !3289
  %27 = load %struct.AnimData*, %struct.AnimData** %dstAdt, align 8, !dbg !3290
  %action39 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %27, i32 0, i32 0, !dbg !3291
  %28 = load %struct.bAction*, %struct.bAction** %action39, align 8, !dbg !3291
  %id40 = getelementptr inbounds %struct.bAction, %struct.bAction* %28, i32 0, i32 0, !dbg !3292
  %name41 = getelementptr inbounds %struct.ID, %struct.ID* %id40, i32 0, i32 4, !dbg !3293
  %arraydecay42 = getelementptr inbounds [66 x i8], [66 x i8]* %name41, i64 0, i64 0, !dbg !3290
  %add.ptr43 = getelementptr inbounds i8, i8* %arraydecay42, i64 2, !dbg !3294
  %call44 = call %struct.bAction* @add_empty_action(%struct.Main* %26, i8* %add.ptr43), !dbg !3295
  %29 = load %struct.AnimData*, %struct.AnimData** %dstAdt, align 8, !dbg !3296
  %action45 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %29, i32 0, i32 0, !dbg !3297
  store %struct.bAction* %call44, %struct.bAction** %action45, align 8, !dbg !3298
  br label %if.end46, !dbg !3299

if.end46:                                         ; preds = %if.then27, %if.else
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then20
  %30 = load %struct.ListBase*, %struct.ListBase** %basepaths.addr, align 8, !dbg !3300
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %30, i32 0, i32 0, !dbg !3302
  %31 = load i8*, i8** %first, align 8, !dbg !3302
  %32 = bitcast i8* %31 to %struct.LinkData*, !dbg !3300
  store %struct.LinkData* %32, %struct.LinkData** %ld, align 8, !dbg !3303
  br label %for.cond, !dbg !3304

for.cond:                                         ; preds = %for.inc, %if.end47
  %33 = load %struct.LinkData*, %struct.LinkData** %ld, align 8, !dbg !3305
  %tobool48 = icmp ne %struct.LinkData* %33, null, !dbg !3307
  br i1 %tobool48, label %for.body, label %for.end, !dbg !3307

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %basepath, metadata !3308, metadata !DIExpression()), !dbg !3310
  %34 = load %struct.LinkData*, %struct.LinkData** %ld, align 8, !dbg !3311
  %data = getelementptr inbounds %struct.LinkData, %struct.LinkData* %34, i32 0, i32 2, !dbg !3312
  %35 = load i8*, i8** %data, align 8, !dbg !3312
  store i8* %35, i8** %basepath, align 8, !dbg !3310
  %36 = load %struct.AnimData*, %struct.AnimData** %srcAdt, align 8, !dbg !3313
  %action49 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %36, i32 0, i32 0, !dbg !3314
  %37 = load %struct.bAction*, %struct.bAction** %action49, align 8, !dbg !3314
  %38 = load %struct.AnimData*, %struct.AnimData** %dstAdt, align 8, !dbg !3315
  %action50 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %38, i32 0, i32 0, !dbg !3316
  %39 = load %struct.bAction*, %struct.bAction** %action50, align 8, !dbg !3316
  %40 = load i8*, i8** %basepath, align 8, !dbg !3317
  call void @action_move_fcurves_by_basepath(%struct.bAction* %37, %struct.bAction* %39, i8* %40), !dbg !3318
  br label %for.inc, !dbg !3319

for.inc:                                          ; preds = %for.body
  %41 = load %struct.LinkData*, %struct.LinkData** %ld, align 8, !dbg !3320
  %next = getelementptr inbounds %struct.LinkData, %struct.LinkData* %41, i32 0, i32 0, !dbg !3321
  %42 = load %struct.LinkData*, %struct.LinkData** %next, align 8, !dbg !3321
  store %struct.LinkData* %42, %struct.LinkData** %ld, align 8, !dbg !3322
  br label %for.cond, !dbg !3323, !llvm.loop !3324

for.end:                                          ; preds = %for.cond
  br label %if.end51, !dbg !3326

if.end51:                                         ; preds = %for.end, %if.end15
  %43 = load %struct.AnimData*, %struct.AnimData** %srcAdt, align 8, !dbg !3327
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %43, i32 0, i32 5, !dbg !3329
  %first52 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers, i32 0, i32 0, !dbg !3330
  %44 = load i8*, i8** %first52, align 8, !dbg !3330
  %tobool53 = icmp ne i8* %44, null, !dbg !3327
  br i1 %tobool53, label %if.then54, label %if.end78, !dbg !3331

if.then54:                                        ; preds = %if.end51
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !3332, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcn, metadata !3335, metadata !DIExpression()), !dbg !3336
  store %struct.FCurve* null, %struct.FCurve** %fcn, align 8, !dbg !3336
  %45 = load %struct.AnimData*, %struct.AnimData** %srcAdt, align 8, !dbg !3337
  %drivers55 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %45, i32 0, i32 5, !dbg !3339
  %first56 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers55, i32 0, i32 0, !dbg !3340
  %46 = load i8*, i8** %first56, align 8, !dbg !3340
  %47 = bitcast i8* %46 to %struct.FCurve*, !dbg !3337
  store %struct.FCurve* %47, %struct.FCurve** %fcu, align 8, !dbg !3341
  br label %for.cond57, !dbg !3342

for.cond57:                                       ; preds = %for.inc76, %if.then54
  %48 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3343
  %tobool58 = icmp ne %struct.FCurve* %48, null, !dbg !3345
  br i1 %tobool58, label %for.body59, label %for.end77, !dbg !3345

for.body59:                                       ; preds = %for.cond57
  %49 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3346
  %next60 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %49, i32 0, i32 0, !dbg !3348
  %50 = load %struct.FCurve*, %struct.FCurve** %next60, align 8, !dbg !3348
  store %struct.FCurve* %50, %struct.FCurve** %fcn, align 8, !dbg !3349
  %51 = load %struct.ListBase*, %struct.ListBase** %basepaths.addr, align 8, !dbg !3350
  %first61 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %51, i32 0, i32 0, !dbg !3352
  %52 = load i8*, i8** %first61, align 8, !dbg !3352
  %53 = bitcast i8* %52 to %struct.LinkData*, !dbg !3350
  store %struct.LinkData* %53, %struct.LinkData** %ld, align 8, !dbg !3353
  br label %for.cond62, !dbg !3354

for.cond62:                                       ; preds = %for.inc73, %for.body59
  %54 = load %struct.LinkData*, %struct.LinkData** %ld, align 8, !dbg !3355
  %tobool63 = icmp ne %struct.LinkData* %54, null, !dbg !3357
  br i1 %tobool63, label %for.body64, label %for.end75, !dbg !3357

for.body64:                                       ; preds = %for.cond62
  call void @llvm.dbg.declare(metadata i8** %basepath65, metadata !3358, metadata !DIExpression()), !dbg !3360
  %55 = load %struct.LinkData*, %struct.LinkData** %ld, align 8, !dbg !3361
  %data66 = getelementptr inbounds %struct.LinkData, %struct.LinkData* %55, i32 0, i32 2, !dbg !3362
  %56 = load i8*, i8** %data66, align 8, !dbg !3362
  store i8* %56, i8** %basepath65, align 8, !dbg !3360
  %57 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3363
  %rna_path = getelementptr inbounds %struct.FCurve, %struct.FCurve* %57, i32 0, i32 12, !dbg !3365
  %58 = load i8*, i8** %rna_path, align 8, !dbg !3365
  %59 = load i8*, i8** %basepath65, align 8, !dbg !3366
  %call67 = call zeroext i8 @animpath_matches_basepath(i8* %58, i8* %59), !dbg !3367
  %tobool68 = icmp ne i8 %call67, 0, !dbg !3367
  br i1 %tobool68, label %if.then69, label %if.end72, !dbg !3368

if.then69:                                        ; preds = %for.body64
  %60 = load %struct.AnimData*, %struct.AnimData** %srcAdt, align 8, !dbg !3369
  %drivers70 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %60, i32 0, i32 5, !dbg !3371
  %61 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3372
  %62 = bitcast %struct.FCurve* %61 to i8*, !dbg !3372
  call void @BLI_remlink(%struct.ListBase* %drivers70, i8* %62), !dbg !3373
  %63 = load %struct.AnimData*, %struct.AnimData** %dstAdt, align 8, !dbg !3374
  %drivers71 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %63, i32 0, i32 5, !dbg !3375
  %64 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3376
  %65 = bitcast %struct.FCurve* %64 to i8*, !dbg !3376
  call void @BLI_addtail(%struct.ListBase* %drivers71, i8* %65), !dbg !3377
  br label %for.end75, !dbg !3378

if.end72:                                         ; preds = %for.body64
  br label %for.inc73, !dbg !3379

for.inc73:                                        ; preds = %if.end72
  %66 = load %struct.LinkData*, %struct.LinkData** %ld, align 8, !dbg !3380
  %next74 = getelementptr inbounds %struct.LinkData, %struct.LinkData* %66, i32 0, i32 0, !dbg !3381
  %67 = load %struct.LinkData*, %struct.LinkData** %next74, align 8, !dbg !3381
  store %struct.LinkData* %67, %struct.LinkData** %ld, align 8, !dbg !3382
  br label %for.cond62, !dbg !3383, !llvm.loop !3384

for.end75:                                        ; preds = %if.then69, %for.cond62
  br label %for.inc76, !dbg !3386

for.inc76:                                        ; preds = %for.end75
  %68 = load %struct.FCurve*, %struct.FCurve** %fcn, align 8, !dbg !3387
  store %struct.FCurve* %68, %struct.FCurve** %fcu, align 8, !dbg !3388
  br label %for.cond57, !dbg !3389, !llvm.loop !3390

for.end77:                                        ; preds = %for.cond57
  br label %if.end78, !dbg !3392

if.end78:                                         ; preds = %if.end, %if.end14, %for.end77, %if.end51
  ret void, !dbg !3393
}

declare dso_local %struct.bAction* @add_empty_action(%struct.Main*, i8*) #2

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BKE_animdata_driver_path_hack(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %base_path) #0 !dbg !3394 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %base_path.addr = alloca i8*, align 8
  %id = alloca %struct.ID*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %basepath = alloca i8*, align 8
  %path = alloca i8*, align 8
  %ob = alloca %struct.Object*, align 8
  %ma = alloca %struct.Material*, align 8
  %tex = alloca %struct.Tex*, align 8
  %name_esc_ma = alloca [128 x i8], align 16
  %name_esc_tex = alloca [128 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3416, metadata !DIExpression()), !dbg !3417
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3418, metadata !DIExpression()), !dbg !3419
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !3420, metadata !DIExpression()), !dbg !3421
  store i8* %base_path, i8** %base_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base_path.addr, metadata !3422, metadata !DIExpression()), !dbg !3423
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !3424, metadata !DIExpression()), !dbg !3425
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3426
  %id1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !3427
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id1, i32 0, i32 0, !dbg !3428
  %1 = load i8*, i8** %data, align 8, !dbg !3428
  %2 = bitcast i8* %1 to %struct.ID*, !dbg !3429
  store %struct.ID* %2, %struct.ID** %id, align 8, !dbg !3425
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !3430, metadata !DIExpression()), !dbg !3505
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3506
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %3), !dbg !3507
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !3505
  call void @llvm.dbg.declare(metadata i8** %basepath, metadata !3508, metadata !DIExpression()), !dbg !3509
  %4 = load i8*, i8** %base_path.addr, align 8, !dbg !3510
  %tobool = icmp ne i8* %4, null, !dbg !3510
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3510

cond.true:                                        ; preds = %entry
  %5 = load i8*, i8** %base_path.addr, align 8, !dbg !3511
  br label %cond.end, !dbg !3510

cond.false:                                       ; preds = %entry
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3512
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3513
  %call2 = call i8* @RNA_path_from_ID_to_property(%struct.PointerRNA* %6, %struct.PropertyRNA* %7), !dbg !3514
  br label %cond.end, !dbg !3510

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %5, %cond.true ], [ %call2, %cond.false ], !dbg !3510
  store i8* %cond, i8** %basepath, align 8, !dbg !3509
  call void @llvm.dbg.declare(metadata i8** %path, metadata !3515, metadata !DIExpression()), !dbg !3516
  %8 = load i8*, i8** %basepath, align 8, !dbg !3517
  store i8* %8, i8** %path, align 8, !dbg !3516
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3518
  %tobool3 = icmp ne %struct.ScrArea* %9, null, !dbg !3520
  br i1 %tobool3, label %land.lhs.true, label %if.end42, !dbg !3521

land.lhs.true:                                    ; preds = %cond.end
  %10 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3522
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %10, i32 0, i32 8, !dbg !3523
  %11 = load i8, i8* %spacetype, align 8, !dbg !3523
  %conv = zext i8 %11 to i32, !dbg !3522
  %cmp = icmp eq i32 %conv, 4, !dbg !3524
  br i1 %cmp, label %if.then, label %if.end42, !dbg !3525

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !3526, metadata !DIExpression()), !dbg !3528
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3529
  %call5 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %12), !dbg !3530
  store %struct.Object* %call5, %struct.Object** %ob, align 8, !dbg !3528
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3531
  %tobool6 = icmp ne %struct.Object* %13, null, !dbg !3531
  br i1 %tobool6, label %land.lhs.true7, label %if.end41, !dbg !3533

land.lhs.true7:                                   ; preds = %if.then
  %14 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !3534
  %tobool8 = icmp ne %struct.ID* %14, null, !dbg !3534
  br i1 %tobool8, label %if.then9, label %if.end41, !dbg !3535

if.then9:                                         ; preds = %land.lhs.true7
  %15 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !3536
  %name = getelementptr inbounds %struct.ID, %struct.ID* %15, i32 0, i32 4, !dbg !3536
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !3536
  %16 = bitcast i8* %arraydecay to i16*, !dbg !3536
  %17 = load i16, i16* %16, align 8, !dbg !3536
  %conv10 = sext i16 %17 to i32, !dbg !3536
  switch i32 %conv10, label %sw.epilog [
    i32 17748, label %sw.bb
  ], !dbg !3538

sw.bb:                                            ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !3539, metadata !DIExpression()), !dbg !3542
  %18 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3543
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3544
  %actcol = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 32, !dbg !3545
  %20 = load i32, i32* %actcol, align 4, !dbg !3545
  %conv11 = trunc i32 %20 to i16, !dbg !3544
  %call12 = call %struct.Material* @give_current_material(%struct.Object* %18, i16 signext %conv11), !dbg !3546
  store %struct.Material* %call12, %struct.Material** %ma, align 8, !dbg !3542
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !3547, metadata !DIExpression()), !dbg !3548
  %21 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3549
  %call13 = call %struct.Tex* @give_current_material_texture(%struct.Material* %21), !dbg !3550
  store %struct.Tex* %call13, %struct.Tex** %tex, align 8, !dbg !3548
  %22 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3551
  %23 = bitcast %struct.Tex* %22 to %struct.ID*, !dbg !3553
  %24 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !3554
  %cmp14 = icmp eq %struct.ID* %23, %24, !dbg !3555
  br i1 %cmp14, label %if.then16, label %if.end34, !dbg !3556

if.then16:                                        ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata [128 x i8]* %name_esc_ma, metadata !3557, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.declare(metadata [128 x i8]* %name_esc_tex, metadata !3560, metadata !DIExpression()), !dbg !3561
  %arraydecay17 = getelementptr inbounds [128 x i8], [128 x i8]* %name_esc_ma, i64 0, i64 0, !dbg !3562
  %25 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3563
  %id18 = getelementptr inbounds %struct.Material, %struct.Material* %25, i32 0, i32 0, !dbg !3564
  %name19 = getelementptr inbounds %struct.ID, %struct.ID* %id18, i32 0, i32 4, !dbg !3565
  %arraydecay20 = getelementptr inbounds [66 x i8], [66 x i8]* %name19, i64 0, i64 0, !dbg !3563
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay20, i64 2, !dbg !3566
  %call21 = call i64 @BLI_strescape(i8* %arraydecay17, i8* %add.ptr, i64 128), !dbg !3567
  %arraydecay22 = getelementptr inbounds [128 x i8], [128 x i8]* %name_esc_tex, i64 0, i64 0, !dbg !3568
  %26 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !3569
  %id23 = getelementptr inbounds %struct.Tex, %struct.Tex* %26, i32 0, i32 0, !dbg !3570
  %name24 = getelementptr inbounds %struct.ID, %struct.ID* %id23, i32 0, i32 4, !dbg !3571
  %arraydecay25 = getelementptr inbounds [66 x i8], [66 x i8]* %name24, i64 0, i64 0, !dbg !3569
  %add.ptr26 = getelementptr inbounds i8, i8* %arraydecay25, i64 2, !dbg !3572
  %call27 = call i64 @BLI_strescape(i8* %arraydecay22, i8* %add.ptr26, i64 128), !dbg !3573
  %arraydecay28 = getelementptr inbounds [128 x i8], [128 x i8]* %name_esc_ma, i64 0, i64 0, !dbg !3574
  %arraydecay29 = getelementptr inbounds [128 x i8], [128 x i8]* %name_esc_tex, i64 0, i64 0, !dbg !3575
  %27 = load i8*, i8** %basepath, align 8, !dbg !3576
  %call30 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay28, i8* %arraydecay29, i8* %27), !dbg !3577
  store i8* %call30, i8** %path, align 8, !dbg !3578
  %28 = load i8*, i8** %basepath, align 8, !dbg !3579
  %29 = load i8*, i8** %base_path.addr, align 8, !dbg !3581
  %cmp31 = icmp ne i8* %28, %29, !dbg !3582
  br i1 %cmp31, label %if.then33, label %if.end, !dbg !3583

if.then33:                                        ; preds = %if.then16
  %30 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3584
  %31 = load i8*, i8** %basepath, align 8, !dbg !3585
  call void %30(i8* %31), !dbg !3584
  br label %if.end, !dbg !3584

if.end:                                           ; preds = %if.then33, %if.then16
  br label %if.end34, !dbg !3586

if.end34:                                         ; preds = %if.end, %sw.bb
  br label %sw.epilog, !dbg !3587

sw.epilog:                                        ; preds = %if.then9, %if.end34
  %32 = load i8*, i8** %basepath, align 8, !dbg !3588
  %33 = load i8*, i8** %path, align 8, !dbg !3590
  %cmp35 = icmp ne i8* %32, %33, !dbg !3591
  br i1 %cmp35, label %if.then37, label %if.end40, !dbg !3592

if.then37:                                        ; preds = %sw.epilog
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3593
  %id38 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 0, !dbg !3595
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3596
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %35, i32 0, i32 1, !dbg !3597
  %36 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3597
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3598
  %data39 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %37, i32 0, i32 2, !dbg !3599
  %38 = load i8*, i8** %data39, align 8, !dbg !3599
  %39 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3600
  call void @RNA_pointer_create(%struct.ID* %id38, %struct.StructRNA* %36, i8* %38, %struct.PointerRNA* %39), !dbg !3601
  br label %if.end40, !dbg !3602

if.end40:                                         ; preds = %if.then37, %sw.epilog
  br label %if.end41, !dbg !3603

if.end41:                                         ; preds = %if.end40, %land.lhs.true7, %if.then
  br label %if.end42, !dbg !3604

if.end42:                                         ; preds = %if.end41, %land.lhs.true, %cond.end
  %40 = load i8*, i8** %path, align 8, !dbg !3605
  ret i8* %40, !dbg !3606
}

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

declare dso_local i8* @RNA_path_from_ID_to_property(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local %struct.Object* @CTX_data_active_object(%struct.bContext*) #2

declare dso_local %struct.Material* @give_current_material(%struct.Object*, i16 signext) #2

declare dso_local %struct.Tex* @give_current_material_texture(%struct.Material*) #2

declare dso_local i64 @BLI_strescape(i8*, i8*, i64) #2

declare dso_local i8* @BLI_sprintfN(i8*, ...) #2

declare dso_local void @RNA_pointer_create(%struct.ID*, %struct.StructRNA*, i8*, %struct.PointerRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_action_fix_paths_rename(%struct.ID* %owner_id, %struct.bAction* %act, i8* %prefix, i8* %oldName, i8* %newName, i32 %oldSubscript, i32 %newSubscript, i8 zeroext %verify_paths) #0 !dbg !3607 {
entry:
  %owner_id.addr = alloca %struct.ID*, align 8
  %act.addr = alloca %struct.bAction*, align 8
  %prefix.addr = alloca i8*, align 8
  %oldName.addr = alloca i8*, align 8
  %newName.addr = alloca i8*, align 8
  %oldSubscript.addr = alloca i32, align 4
  %newSubscript.addr = alloca i32, align 4
  %verify_paths.addr = alloca i8, align 1
  %oldN = alloca i8*, align 8
  %newN = alloca i8*, align 8
  %name_old_len = alloca i64, align 8
  %name_new_len = alloca i64, align 8
  %name_old_esc = alloca i8*, align 8
  %name_new_esc = alloca i8*, align 8
  store %struct.ID* %owner_id, %struct.ID** %owner_id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %owner_id.addr, metadata !3610, metadata !DIExpression()), !dbg !3611
  store %struct.bAction* %act, %struct.bAction** %act.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAction** %act.addr, metadata !3612, metadata !DIExpression()), !dbg !3613
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !3614, metadata !DIExpression()), !dbg !3615
  store i8* %oldName, i8** %oldName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldName.addr, metadata !3616, metadata !DIExpression()), !dbg !3617
  store i8* %newName, i8** %newName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newName.addr, metadata !3618, metadata !DIExpression()), !dbg !3619
  store i32 %oldSubscript, i32* %oldSubscript.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldSubscript.addr, metadata !3620, metadata !DIExpression()), !dbg !3621
  store i32 %newSubscript, i32* %newSubscript.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %newSubscript.addr, metadata !3622, metadata !DIExpression()), !dbg !3623
  store i8 %verify_paths, i8* %verify_paths.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %verify_paths.addr, metadata !3624, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.declare(metadata i8** %oldN, metadata !3626, metadata !DIExpression()), !dbg !3627
  call void @llvm.dbg.declare(metadata i8** %newN, metadata !3628, metadata !DIExpression()), !dbg !3629
  %0 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !3630
  %cmp = icmp eq %struct.ID* null, %0, !dbg !3630
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3630

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !3630
  %cmp1 = icmp eq %struct.bAction* null, %1, !dbg !3630
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3632

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !3633

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i8*, i8** %oldName.addr, align 8, !dbg !3634
  %cmp2 = icmp ne i8* %2, null, !dbg !3636
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !3637

land.lhs.true:                                    ; preds = %if.end
  %3 = load i8*, i8** %newName.addr, align 8, !dbg !3638
  %cmp3 = icmp ne i8* %3, null, !dbg !3639
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !3640

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %name_old_len, metadata !3641, metadata !DIExpression()), !dbg !3646
  %4 = load i8*, i8** %oldName.addr, align 8, !dbg !3647
  %call = call i64 @strlen(i8* %4) #6, !dbg !3648
  store i64 %call, i64* %name_old_len, align 8, !dbg !3646
  call void @llvm.dbg.declare(metadata i64* %name_new_len, metadata !3649, metadata !DIExpression()), !dbg !3650
  %5 = load i8*, i8** %newName.addr, align 8, !dbg !3651
  %call5 = call i64 @strlen(i8* %5) #6, !dbg !3652
  store i64 %call5, i64* %name_new_len, align 8, !dbg !3650
  call void @llvm.dbg.declare(metadata i8** %name_old_esc, metadata !3653, metadata !DIExpression()), !dbg !3654
  %6 = load i64, i64* %name_old_len, align 8, !dbg !3655
  %mul = mul i64 %6, 2, !dbg !3655
  %add = add i64 %mul, 1, !dbg !3655
  %mul6 = mul i64 1, %add, !dbg !3655
  %7 = alloca i8, i64 %mul6, align 16, !dbg !3655
  store i8* %7, i8** %name_old_esc, align 8, !dbg !3654
  call void @llvm.dbg.declare(metadata i8** %name_new_esc, metadata !3656, metadata !DIExpression()), !dbg !3657
  %8 = load i64, i64* %name_new_len, align 8, !dbg !3658
  %mul7 = mul i64 %8, 2, !dbg !3658
  %add8 = add i64 %mul7, 1, !dbg !3658
  %mul9 = mul i64 1, %add8, !dbg !3658
  %9 = alloca i8, i64 %mul9, align 16, !dbg !3658
  store i8* %9, i8** %name_new_esc, align 8, !dbg !3657
  %10 = load i8*, i8** %name_old_esc, align 8, !dbg !3659
  %11 = load i8*, i8** %oldName.addr, align 8, !dbg !3660
  %12 = load i64, i64* %name_old_len, align 8, !dbg !3661
  %mul10 = mul i64 %12, 2, !dbg !3662
  %add11 = add i64 %mul10, 1, !dbg !3663
  %call12 = call i64 @BLI_strescape(i8* %10, i8* %11, i64 %add11), !dbg !3664
  %13 = load i8*, i8** %name_new_esc, align 8, !dbg !3665
  %14 = load i8*, i8** %newName.addr, align 8, !dbg !3666
  %15 = load i64, i64* %name_new_len, align 8, !dbg !3667
  %mul13 = mul i64 %15, 2, !dbg !3668
  %add14 = add i64 %mul13, 1, !dbg !3669
  %call15 = call i64 @BLI_strescape(i8* %13, i8* %14, i64 %add14), !dbg !3670
  %16 = load i8*, i8** %name_old_esc, align 8, !dbg !3671
  %call16 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8* %16), !dbg !3672
  store i8* %call16, i8** %oldN, align 8, !dbg !3673
  %17 = load i8*, i8** %name_new_esc, align 8, !dbg !3674
  %call17 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8* %17), !dbg !3675
  store i8* %call17, i8** %newN, align 8, !dbg !3676
  br label %if.end20, !dbg !3677

if.else:                                          ; preds = %land.lhs.true, %if.end
  %18 = load i32, i32* %oldSubscript.addr, align 4, !dbg !3678
  %call18 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i32 %18), !dbg !3680
  store i8* %call18, i8** %oldN, align 8, !dbg !3681
  %19 = load i32, i32* %newSubscript.addr, align 4, !dbg !3682
  %call19 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i32 %19), !dbg !3683
  store i8* %call19, i8** %newN, align 8, !dbg !3684
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then4
  %20 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !3685
  %21 = load i8*, i8** %prefix.addr, align 8, !dbg !3686
  %22 = load i8*, i8** %oldName.addr, align 8, !dbg !3687
  %23 = load i8*, i8** %newName.addr, align 8, !dbg !3688
  %24 = load i8*, i8** %oldN, align 8, !dbg !3689
  %25 = load i8*, i8** %newN, align 8, !dbg !3690
  %26 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !3691
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %26, i32 0, i32 1, !dbg !3692
  %27 = load i8, i8* %verify_paths.addr, align 1, !dbg !3693
  call void @fcurves_path_rename_fix(%struct.ID* %20, i8* %21, i8* %22, i8* %23, i8* %24, i8* %25, %struct.ListBase* %curves, i8 zeroext %27), !dbg !3694
  %28 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3695
  %29 = load i8*, i8** %oldN, align 8, !dbg !3696
  call void %28(i8* %29), !dbg !3695
  %30 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3697
  %31 = load i8*, i8** %newN, align 8, !dbg !3698
  call void %30(i8* %31), !dbg !3697
  br label %return, !dbg !3699

return:                                           ; preds = %if.end20, %if.then
  ret void, !dbg !3699
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @fcurves_path_rename_fix(%struct.ID* %owner_id, i8* %prefix, i8* %oldName, i8* %newName, i8* %oldKey, i8* %newKey, %struct.ListBase* %curves, i8 zeroext %verify_paths) #0 !dbg !3700 {
entry:
  %owner_id.addr = alloca %struct.ID*, align 8
  %prefix.addr = alloca i8*, align 8
  %oldName.addr = alloca i8*, align 8
  %newName.addr = alloca i8*, align 8
  %oldKey.addr = alloca i8*, align 8
  %newKey.addr = alloca i8*, align 8
  %curves.addr = alloca %struct.ListBase*, align 8
  %verify_paths.addr = alloca i8, align 1
  %fcu = alloca %struct.FCurve*, align 8
  %old_path = alloca i8*, align 8
  %agrp = alloca %struct.bActionGroup*, align 8
  store %struct.ID* %owner_id, %struct.ID** %owner_id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %owner_id.addr, metadata !3703, metadata !DIExpression()), !dbg !3704
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !3705, metadata !DIExpression()), !dbg !3706
  store i8* %oldName, i8** %oldName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldName.addr, metadata !3707, metadata !DIExpression()), !dbg !3708
  store i8* %newName, i8** %newName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newName.addr, metadata !3709, metadata !DIExpression()), !dbg !3710
  store i8* %oldKey, i8** %oldKey.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldKey.addr, metadata !3711, metadata !DIExpression()), !dbg !3712
  store i8* %newKey, i8** %newKey.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newKey.addr, metadata !3713, metadata !DIExpression()), !dbg !3714
  store %struct.ListBase* %curves, %struct.ListBase** %curves.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %curves.addr, metadata !3715, metadata !DIExpression()), !dbg !3716
  store i8 %verify_paths, i8* %verify_paths.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %verify_paths.addr, metadata !3717, metadata !DIExpression()), !dbg !3718
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !3719, metadata !DIExpression()), !dbg !3720
  %0 = load %struct.ListBase*, %struct.ListBase** %curves.addr, align 8, !dbg !3721
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !3723
  %1 = load i8*, i8** %first, align 8, !dbg !3723
  %2 = bitcast i8* %1 to %struct.FCurve*, !dbg !3721
  store %struct.FCurve* %2, %struct.FCurve** %fcu, align 8, !dbg !3724
  br label %for.cond, !dbg !3725

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3726
  %tobool = icmp ne %struct.FCurve* %3, null, !dbg !3728
  br i1 %tobool, label %for.body, label %for.end, !dbg !3728

for.body:                                         ; preds = %for.cond
  %4 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3729
  %rna_path = getelementptr inbounds %struct.FCurve, %struct.FCurve* %4, i32 0, i32 12, !dbg !3732
  %5 = load i8*, i8** %rna_path, align 8, !dbg !3732
  %tobool1 = icmp ne i8* %5, null, !dbg !3729
  br i1 %tobool1, label %if.then, label %if.end15, !dbg !3733

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %old_path, metadata !3734, metadata !DIExpression()), !dbg !3736
  %6 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3737
  %rna_path2 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %6, i32 0, i32 12, !dbg !3738
  %7 = load i8*, i8** %rna_path2, align 8, !dbg !3738
  store i8* %7, i8** %old_path, align 8, !dbg !3736
  %8 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !3739
  %9 = load i8*, i8** %prefix.addr, align 8, !dbg !3740
  %10 = load i8*, i8** %oldKey.addr, align 8, !dbg !3741
  %11 = load i8*, i8** %newKey.addr, align 8, !dbg !3742
  %12 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3743
  %rna_path3 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %12, i32 0, i32 12, !dbg !3744
  %13 = load i8*, i8** %rna_path3, align 8, !dbg !3744
  %14 = load i8, i8* %verify_paths.addr, align 1, !dbg !3745
  %call = call i8* @rna_path_rename_fix(%struct.ID* %8, i8* %9, i8* %10, i8* %11, i8* %13, i8 zeroext %14), !dbg !3746
  %15 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3747
  %rna_path4 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %15, i32 0, i32 12, !dbg !3748
  store i8* %call, i8** %rna_path4, align 8, !dbg !3749
  %16 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3750
  %rna_path5 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %16, i32 0, i32 12, !dbg !3752
  %17 = load i8*, i8** %rna_path5, align 8, !dbg !3752
  %18 = load i8*, i8** %old_path, align 8, !dbg !3753
  %cmp = icmp ne i8* %17, %18, !dbg !3754
  br i1 %cmp, label %if.then6, label %if.end14, !dbg !3755

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp, metadata !3756, metadata !DIExpression()), !dbg !3758
  %19 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3759
  %grp = getelementptr inbounds %struct.FCurve, %struct.FCurve* %19, i32 0, i32 2, !dbg !3760
  %20 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !3760
  store %struct.bActionGroup* %20, %struct.bActionGroup** %agrp, align 8, !dbg !3758
  %21 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !3761
  %tobool7 = icmp ne %struct.bActionGroup* %21, null, !dbg !3763
  br i1 %tobool7, label %land.lhs.true, label %if.end, !dbg !3764

land.lhs.true:                                    ; preds = %if.then6
  %22 = load i8*, i8** %oldName.addr, align 8, !dbg !3765
  %23 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !3766
  %name = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %23, i32 0, i32 5, !dbg !3767
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3766
  %call8 = call i32 @strcmp(i8* %22, i8* %arraydecay) #6, !dbg !3768
  %cmp9 = icmp eq i32 %call8, 0, !dbg !3769
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !3770

if.then10:                                        ; preds = %land.lhs.true
  %24 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp, align 8, !dbg !3771
  %name11 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %24, i32 0, i32 5, !dbg !3773
  %arraydecay12 = getelementptr inbounds [64 x i8], [64 x i8]* %name11, i64 0, i64 0, !dbg !3771
  %25 = load i8*, i8** %newName.addr, align 8, !dbg !3774
  %call13 = call i8* @BLI_strncpy(i8* %arraydecay12, i8* %25, i64 64), !dbg !3775
  br label %if.end, !dbg !3776

if.end:                                           ; preds = %if.then10, %land.lhs.true, %if.then6
  br label %if.end14, !dbg !3777

if.end14:                                         ; preds = %if.end, %if.then
  br label %if.end15, !dbg !3778

if.end15:                                         ; preds = %if.end14, %for.body
  br label %for.inc, !dbg !3779

for.inc:                                          ; preds = %if.end15
  %26 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3780
  %next = getelementptr inbounds %struct.FCurve, %struct.FCurve* %26, i32 0, i32 0, !dbg !3781
  %27 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !3781
  store %struct.FCurve* %27, %struct.FCurve** %fcu, align 8, !dbg !3782
  br label %for.cond, !dbg !3783, !llvm.loop !3784

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3786
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_animdata_fix_paths_rename(%struct.ID* %owner_id, %struct.AnimData* %adt, %struct.ID* %ref_id, i8* %prefix, i8* %oldName, i8* %newName, i32 %oldSubscript, i32 %newSubscript, i8 zeroext %verify_paths) #0 !dbg !3787 {
entry:
  %owner_id.addr = alloca %struct.ID*, align 8
  %adt.addr = alloca %struct.AnimData*, align 8
  %ref_id.addr = alloca %struct.ID*, align 8
  %prefix.addr = alloca i8*, align 8
  %oldName.addr = alloca i8*, align 8
  %newName.addr = alloca i8*, align 8
  %oldSubscript.addr = alloca i32, align 4
  %newSubscript.addr = alloca i32, align 4
  %verify_paths.addr = alloca i8, align 1
  %nlt = alloca %struct.NlaTrack*, align 8
  %oldN = alloca i8*, align 8
  %newN = alloca i8*, align 8
  %name_old_len = alloca i64, align 8
  %name_new_len = alloca i64, align 8
  %name_old_esc = alloca i8*, align 8
  %name_new_esc = alloca i8*, align 8
  store %struct.ID* %owner_id, %struct.ID** %owner_id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %owner_id.addr, metadata !3790, metadata !DIExpression()), !dbg !3791
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !3792, metadata !DIExpression()), !dbg !3793
  store %struct.ID* %ref_id, %struct.ID** %ref_id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %ref_id.addr, metadata !3794, metadata !DIExpression()), !dbg !3795
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !3796, metadata !DIExpression()), !dbg !3797
  store i8* %oldName, i8** %oldName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldName.addr, metadata !3798, metadata !DIExpression()), !dbg !3799
  store i8* %newName, i8** %newName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newName.addr, metadata !3800, metadata !DIExpression()), !dbg !3801
  store i32 %oldSubscript, i32* %oldSubscript.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldSubscript.addr, metadata !3802, metadata !DIExpression()), !dbg !3803
  store i32 %newSubscript, i32* %newSubscript.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %newSubscript.addr, metadata !3804, metadata !DIExpression()), !dbg !3805
  store i8 %verify_paths, i8* %verify_paths.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %verify_paths.addr, metadata !3806, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.declare(metadata %struct.NlaTrack** %nlt, metadata !3808, metadata !DIExpression()), !dbg !3809
  call void @llvm.dbg.declare(metadata i8** %oldN, metadata !3810, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.declare(metadata i8** %newN, metadata !3812, metadata !DIExpression()), !dbg !3813
  %0 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !3814
  %cmp = icmp eq %struct.ID* null, %0, !dbg !3814
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3814

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3814
  %cmp1 = icmp eq %struct.AnimData* null, %1, !dbg !3814
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3816

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !3817

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i8*, i8** %oldName.addr, align 8, !dbg !3818
  %cmp2 = icmp ne i8* %2, null, !dbg !3820
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !3821

land.lhs.true:                                    ; preds = %if.end
  %3 = load i8*, i8** %newName.addr, align 8, !dbg !3822
  %cmp3 = icmp ne i8* %3, null, !dbg !3823
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !3824

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %name_old_len, metadata !3825, metadata !DIExpression()), !dbg !3827
  %4 = load i8*, i8** %oldName.addr, align 8, !dbg !3828
  %call = call i64 @strlen(i8* %4) #6, !dbg !3829
  store i64 %call, i64* %name_old_len, align 8, !dbg !3827
  call void @llvm.dbg.declare(metadata i64* %name_new_len, metadata !3830, metadata !DIExpression()), !dbg !3831
  %5 = load i8*, i8** %newName.addr, align 8, !dbg !3832
  %call5 = call i64 @strlen(i8* %5) #6, !dbg !3833
  store i64 %call5, i64* %name_new_len, align 8, !dbg !3831
  call void @llvm.dbg.declare(metadata i8** %name_old_esc, metadata !3834, metadata !DIExpression()), !dbg !3835
  %6 = load i64, i64* %name_old_len, align 8, !dbg !3836
  %mul = mul i64 %6, 2, !dbg !3836
  %add = add i64 %mul, 1, !dbg !3836
  %mul6 = mul i64 1, %add, !dbg !3836
  %7 = alloca i8, i64 %mul6, align 16, !dbg !3836
  store i8* %7, i8** %name_old_esc, align 8, !dbg !3835
  call void @llvm.dbg.declare(metadata i8** %name_new_esc, metadata !3837, metadata !DIExpression()), !dbg !3838
  %8 = load i64, i64* %name_new_len, align 8, !dbg !3839
  %mul7 = mul i64 %8, 2, !dbg !3839
  %add8 = add i64 %mul7, 1, !dbg !3839
  %mul9 = mul i64 1, %add8, !dbg !3839
  %9 = alloca i8, i64 %mul9, align 16, !dbg !3839
  store i8* %9, i8** %name_new_esc, align 8, !dbg !3838
  %10 = load i8*, i8** %name_old_esc, align 8, !dbg !3840
  %11 = load i8*, i8** %oldName.addr, align 8, !dbg !3841
  %12 = load i64, i64* %name_old_len, align 8, !dbg !3842
  %mul10 = mul i64 %12, 2, !dbg !3843
  %add11 = add i64 %mul10, 1, !dbg !3844
  %call12 = call i64 @BLI_strescape(i8* %10, i8* %11, i64 %add11), !dbg !3845
  %13 = load i8*, i8** %name_new_esc, align 8, !dbg !3846
  %14 = load i8*, i8** %newName.addr, align 8, !dbg !3847
  %15 = load i64, i64* %name_new_len, align 8, !dbg !3848
  %mul13 = mul i64 %15, 2, !dbg !3849
  %add14 = add i64 %mul13, 1, !dbg !3850
  %call15 = call i64 @BLI_strescape(i8* %13, i8* %14, i64 %add14), !dbg !3851
  %16 = load i8*, i8** %name_old_esc, align 8, !dbg !3852
  %call16 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8* %16), !dbg !3853
  store i8* %call16, i8** %oldN, align 8, !dbg !3854
  %17 = load i8*, i8** %name_new_esc, align 8, !dbg !3855
  %call17 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8* %17), !dbg !3856
  store i8* %call17, i8** %newN, align 8, !dbg !3857
  br label %if.end20, !dbg !3858

if.else:                                          ; preds = %land.lhs.true, %if.end
  %18 = load i32, i32* %oldSubscript.addr, align 4, !dbg !3859
  %call18 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i32 %18), !dbg !3861
  store i8* %call18, i8** %oldN, align 8, !dbg !3862
  %19 = load i32, i32* %newSubscript.addr, align 4, !dbg !3863
  %call19 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i32 %19), !dbg !3864
  store i8* %call19, i8** %newN, align 8, !dbg !3865
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then4
  %20 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3866
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %20, i32 0, i32 0, !dbg !3868
  %21 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !3868
  %tobool = icmp ne %struct.bAction* %21, null, !dbg !3866
  br i1 %tobool, label %if.then21, label %if.end23, !dbg !3869

if.then21:                                        ; preds = %if.end20
  %22 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !3870
  %23 = load i8*, i8** %prefix.addr, align 8, !dbg !3871
  %24 = load i8*, i8** %oldName.addr, align 8, !dbg !3872
  %25 = load i8*, i8** %newName.addr, align 8, !dbg !3873
  %26 = load i8*, i8** %oldN, align 8, !dbg !3874
  %27 = load i8*, i8** %newN, align 8, !dbg !3875
  %28 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3876
  %action22 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %28, i32 0, i32 0, !dbg !3877
  %29 = load %struct.bAction*, %struct.bAction** %action22, align 8, !dbg !3877
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %29, i32 0, i32 1, !dbg !3878
  %30 = load i8, i8* %verify_paths.addr, align 1, !dbg !3879
  call void @fcurves_path_rename_fix(%struct.ID* %22, i8* %23, i8* %24, i8* %25, i8* %26, i8* %27, %struct.ListBase* %curves, i8 zeroext %30), !dbg !3880
  br label %if.end23, !dbg !3880

if.end23:                                         ; preds = %if.then21, %if.end20
  %31 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3881
  %tmpact = getelementptr inbounds %struct.AnimData, %struct.AnimData* %31, i32 0, i32 1, !dbg !3883
  %32 = load %struct.bAction*, %struct.bAction** %tmpact, align 8, !dbg !3883
  %tobool24 = icmp ne %struct.bAction* %32, null, !dbg !3881
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !3884

if.then25:                                        ; preds = %if.end23
  %33 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !3885
  %34 = load i8*, i8** %prefix.addr, align 8, !dbg !3886
  %35 = load i8*, i8** %oldName.addr, align 8, !dbg !3887
  %36 = load i8*, i8** %newName.addr, align 8, !dbg !3888
  %37 = load i8*, i8** %oldN, align 8, !dbg !3889
  %38 = load i8*, i8** %newN, align 8, !dbg !3890
  %39 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3891
  %tmpact26 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %39, i32 0, i32 1, !dbg !3892
  %40 = load %struct.bAction*, %struct.bAction** %tmpact26, align 8, !dbg !3892
  %curves27 = getelementptr inbounds %struct.bAction, %struct.bAction* %40, i32 0, i32 1, !dbg !3893
  %41 = load i8, i8* %verify_paths.addr, align 1, !dbg !3894
  call void @fcurves_path_rename_fix(%struct.ID* %33, i8* %34, i8* %35, i8* %36, i8* %37, i8* %38, %struct.ListBase* %curves27, i8 zeroext %41), !dbg !3895
  br label %if.end28, !dbg !3895

if.end28:                                         ; preds = %if.then25, %if.end23
  %42 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !3896
  %43 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !3897
  %44 = load i8*, i8** %prefix.addr, align 8, !dbg !3898
  %45 = load i8*, i8** %oldName.addr, align 8, !dbg !3899
  %46 = load i8*, i8** %newName.addr, align 8, !dbg !3900
  %47 = load i8*, i8** %oldN, align 8, !dbg !3901
  %48 = load i8*, i8** %newN, align 8, !dbg !3902
  %49 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3903
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %49, i32 0, i32 5, !dbg !3904
  %50 = load i8, i8* %verify_paths.addr, align 1, !dbg !3905
  call void @drivers_path_rename_fix(%struct.ID* %42, %struct.ID* %43, i8* %44, i8* %45, i8* %46, i8* %47, i8* %48, %struct.ListBase* %drivers, i8 zeroext %50), !dbg !3906
  %51 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !3907
  %nla_tracks = getelementptr inbounds %struct.AnimData, %struct.AnimData* %51, i32 0, i32 3, !dbg !3909
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nla_tracks, i32 0, i32 0, !dbg !3910
  %52 = load i8*, i8** %first, align 8, !dbg !3910
  %53 = bitcast i8* %52 to %struct.NlaTrack*, !dbg !3907
  store %struct.NlaTrack* %53, %struct.NlaTrack** %nlt, align 8, !dbg !3911
  br label %for.cond, !dbg !3912

for.cond:                                         ; preds = %for.inc, %if.end28
  %54 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !3913
  %tobool29 = icmp ne %struct.NlaTrack* %54, null, !dbg !3915
  br i1 %tobool29, label %for.body, label %for.end, !dbg !3915

for.body:                                         ; preds = %for.cond
  %55 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !3916
  %56 = load i8*, i8** %prefix.addr, align 8, !dbg !3917
  %57 = load i8*, i8** %oldName.addr, align 8, !dbg !3918
  %58 = load i8*, i8** %newName.addr, align 8, !dbg !3919
  %59 = load i8*, i8** %oldN, align 8, !dbg !3920
  %60 = load i8*, i8** %newN, align 8, !dbg !3921
  %61 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !3922
  %strips = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %61, i32 0, i32 2, !dbg !3923
  %62 = load i8, i8* %verify_paths.addr, align 1, !dbg !3924
  call void @nlastrips_path_rename_fix(%struct.ID* %55, i8* %56, i8* %57, i8* %58, i8* %59, i8* %60, %struct.ListBase* %strips, i8 zeroext %62), !dbg !3925
  br label %for.inc, !dbg !3925

for.inc:                                          ; preds = %for.body
  %63 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !3926
  %next = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %63, i32 0, i32 0, !dbg !3927
  %64 = load %struct.NlaTrack*, %struct.NlaTrack** %next, align 8, !dbg !3927
  store %struct.NlaTrack* %64, %struct.NlaTrack** %nlt, align 8, !dbg !3928
  br label %for.cond, !dbg !3929, !llvm.loop !3930

for.end:                                          ; preds = %for.cond
  %65 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3932
  %66 = load i8*, i8** %oldN, align 8, !dbg !3933
  call void %65(i8* %66), !dbg !3932
  %67 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3934
  %68 = load i8*, i8** %newN, align 8, !dbg !3935
  call void %67(i8* %68), !dbg !3934
  br label %return, !dbg !3936

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !3936
}

; Function Attrs: noinline nounwind uwtable
define internal void @drivers_path_rename_fix(%struct.ID* %owner_id, %struct.ID* %ref_id, i8* %prefix, i8* %oldName, i8* %newName, i8* %oldKey, i8* %newKey, %struct.ListBase* %curves, i8 zeroext %verify_paths) #0 !dbg !3937 {
entry:
  %owner_id.addr = alloca %struct.ID*, align 8
  %ref_id.addr = alloca %struct.ID*, align 8
  %prefix.addr = alloca i8*, align 8
  %oldName.addr = alloca i8*, align 8
  %newName.addr = alloca i8*, align 8
  %oldKey.addr = alloca i8*, align 8
  %newKey.addr = alloca i8*, align 8
  %curves.addr = alloca %struct.ListBase*, align 8
  %verify_paths.addr = alloca i8, align 1
  %fcu = alloca %struct.FCurve*, align 8
  %driver6 = alloca %struct.ChannelDriver*, align 8
  %dvar = alloca %struct.DriverVar*, align 8
  %dtar = alloca %struct.DriverTarget*, align 8
  %tarIndex = alloca i32, align 4
  store %struct.ID* %owner_id, %struct.ID** %owner_id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %owner_id.addr, metadata !3940, metadata !DIExpression()), !dbg !3941
  store %struct.ID* %ref_id, %struct.ID** %ref_id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %ref_id.addr, metadata !3942, metadata !DIExpression()), !dbg !3943
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !3944, metadata !DIExpression()), !dbg !3945
  store i8* %oldName, i8** %oldName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldName.addr, metadata !3946, metadata !DIExpression()), !dbg !3947
  store i8* %newName, i8** %newName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newName.addr, metadata !3948, metadata !DIExpression()), !dbg !3949
  store i8* %oldKey, i8** %oldKey.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldKey.addr, metadata !3950, metadata !DIExpression()), !dbg !3951
  store i8* %newKey, i8** %newKey.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newKey.addr, metadata !3952, metadata !DIExpression()), !dbg !3953
  store %struct.ListBase* %curves, %struct.ListBase** %curves.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %curves.addr, metadata !3954, metadata !DIExpression()), !dbg !3955
  store i8 %verify_paths, i8* %verify_paths.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %verify_paths.addr, metadata !3956, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !3958, metadata !DIExpression()), !dbg !3959
  %0 = load %struct.ListBase*, %struct.ListBase** %curves.addr, align 8, !dbg !3960
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !3962
  %1 = load i8*, i8** %first, align 8, !dbg !3962
  %2 = bitcast i8* %1 to %struct.FCurve*, !dbg !3960
  store %struct.FCurve* %2, %struct.FCurve** %fcu, align 8, !dbg !3963
  br label %for.cond, !dbg !3964

for.cond:                                         ; preds = %for.inc58, %entry
  %3 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3965
  %tobool = icmp ne %struct.FCurve* %3, null, !dbg !3967
  br i1 %tobool, label %for.body, label %for.end60, !dbg !3967

for.body:                                         ; preds = %for.cond
  %4 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3968
  %rna_path = getelementptr inbounds %struct.FCurve, %struct.FCurve* %4, i32 0, i32 12, !dbg !3971
  %5 = load i8*, i8** %rna_path, align 8, !dbg !3971
  %tobool1 = icmp ne i8* %5, null, !dbg !3968
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3972

if.then:                                          ; preds = %for.body
  %6 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !3973
  %7 = load i8*, i8** %prefix.addr, align 8, !dbg !3974
  %8 = load i8*, i8** %oldKey.addr, align 8, !dbg !3975
  %9 = load i8*, i8** %newKey.addr, align 8, !dbg !3976
  %10 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3977
  %rna_path2 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %10, i32 0, i32 12, !dbg !3978
  %11 = load i8*, i8** %rna_path2, align 8, !dbg !3978
  %12 = load i8, i8* %verify_paths.addr, align 1, !dbg !3979
  %call = call i8* @rna_path_rename_fix(%struct.ID* %6, i8* %7, i8* %8, i8* %9, i8* %11, i8 zeroext %12), !dbg !3980
  %13 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3981
  %rna_path3 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %13, i32 0, i32 12, !dbg !3982
  store i8* %call, i8** %rna_path3, align 8, !dbg !3983
  br label %if.end, !dbg !3981

if.end:                                           ; preds = %if.then, %for.body
  %14 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3984
  %driver = getelementptr inbounds %struct.FCurve, %struct.FCurve* %14, i32 0, i32 3, !dbg !3986
  %15 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver, align 8, !dbg !3986
  %tobool4 = icmp ne %struct.ChannelDriver* %15, null, !dbg !3984
  br i1 %tobool4, label %if.then5, label %if.end57, !dbg !3987

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.ChannelDriver** %driver6, metadata !3988, metadata !DIExpression()), !dbg !3990
  %16 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !3991
  %driver7 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %16, i32 0, i32 3, !dbg !3992
  %17 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver7, align 8, !dbg !3992
  store %struct.ChannelDriver* %17, %struct.ChannelDriver** %driver6, align 8, !dbg !3990
  call void @llvm.dbg.declare(metadata %struct.DriverVar** %dvar, metadata !3993, metadata !DIExpression()), !dbg !3994
  %18 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver6, align 8, !dbg !3995
  %variables = getelementptr inbounds %struct.ChannelDriver, %struct.ChannelDriver* %18, i32 0, i32 0, !dbg !3997
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %variables, i32 0, i32 0, !dbg !3998
  %19 = load i8*, i8** %first8, align 8, !dbg !3998
  %20 = bitcast i8* %19 to %struct.DriverVar*, !dbg !3995
  store %struct.DriverVar* %20, %struct.DriverVar** %dvar, align 8, !dbg !3999
  br label %for.cond9, !dbg !4000

for.cond9:                                        ; preds = %for.inc55, %if.then5
  %21 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !4001
  %tobool10 = icmp ne %struct.DriverVar* %21, null, !dbg !4003
  br i1 %tobool10, label %for.body11, label %for.end56, !dbg !4003

for.body11:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata %struct.DriverTarget** %dtar, metadata !4004, metadata !DIExpression()), !dbg !4007
  %22 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !4007
  %targets = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %22, i32 0, i32 3, !dbg !4007
  %arrayidx = getelementptr inbounds [8 x %struct.DriverTarget], [8 x %struct.DriverTarget]* %targets, i64 0, i64 0, !dbg !4007
  store %struct.DriverTarget* %arrayidx, %struct.DriverTarget** %dtar, align 8, !dbg !4007
  call void @llvm.dbg.declare(metadata i32* %tarIndex, metadata !4008, metadata !DIExpression()), !dbg !4007
  store i32 0, i32* %tarIndex, align 4, !dbg !4007
  br label %for.cond12, !dbg !4007

for.cond12:                                       ; preds = %for.inc, %for.body11
  %23 = load i32, i32* %tarIndex, align 4, !dbg !4009
  %24 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !4009
  %num_targets = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %24, i32 0, i32 4, !dbg !4009
  %25 = load i16, i16* %num_targets, align 8, !dbg !4009
  %conv = sext i16 %25 to i32, !dbg !4009
  %cmp = icmp slt i32 %23, %conv, !dbg !4009
  br i1 %cmp, label %for.body14, label %for.end, !dbg !4012

for.body14:                                       ; preds = %for.cond12
  %26 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !4013
  %rna_path15 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %26, i32 0, i32 1, !dbg !4016
  %27 = load i8*, i8** %rna_path15, align 8, !dbg !4016
  %tobool16 = icmp ne i8* %27, null, !dbg !4013
  br i1 %tobool16, label %land.lhs.true, label %if.end23, !dbg !4017

land.lhs.true:                                    ; preds = %for.body14
  %28 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !4018
  %id = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %28, i32 0, i32 0, !dbg !4019
  %29 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4019
  %tobool17 = icmp ne %struct.ID* %29, null, !dbg !4018
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !4020

if.then18:                                        ; preds = %land.lhs.true
  %30 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !4021
  %id19 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %30, i32 0, i32 0, !dbg !4022
  %31 = load %struct.ID*, %struct.ID** %id19, align 8, !dbg !4022
  %32 = load i8*, i8** %prefix.addr, align 8, !dbg !4023
  %33 = load i8*, i8** %oldKey.addr, align 8, !dbg !4024
  %34 = load i8*, i8** %newKey.addr, align 8, !dbg !4025
  %35 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !4026
  %rna_path20 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %35, i32 0, i32 1, !dbg !4027
  %36 = load i8*, i8** %rna_path20, align 8, !dbg !4027
  %37 = load i8, i8* %verify_paths.addr, align 1, !dbg !4028
  %call21 = call i8* @rna_path_rename_fix(%struct.ID* %31, i8* %32, i8* %33, i8* %34, i8* %36, i8 zeroext %37), !dbg !4029
  %38 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !4030
  %rna_path22 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %38, i32 0, i32 1, !dbg !4031
  store i8* %call21, i8** %rna_path22, align 8, !dbg !4032
  br label %if.end23, !dbg !4030

if.end23:                                         ; preds = %if.then18, %land.lhs.true, %for.body14
  %39 = load i8*, i8** %prefix.addr, align 8, !dbg !4033
  %call24 = call i8* @strstr(i8* %39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !4035
  %tobool25 = icmp ne i8* %call24, null, !dbg !4035
  br i1 %tobool25, label %if.then26, label %if.end54, !dbg !4036

if.then26:                                        ; preds = %if.end23
  %40 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !4037
  %id27 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %40, i32 0, i32 0, !dbg !4040
  %41 = load %struct.ID*, %struct.ID** %id27, align 8, !dbg !4040
  %tobool28 = icmp ne %struct.ID* %41, null, !dbg !4041
  br i1 %tobool28, label %land.lhs.true29, label %if.end53, !dbg !4042

land.lhs.true29:                                  ; preds = %if.then26
  %42 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !4043
  %id30 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %42, i32 0, i32 0, !dbg !4043
  %43 = load %struct.ID*, %struct.ID** %id30, align 8, !dbg !4043
  %name = getelementptr inbounds %struct.ID, %struct.ID* %43, i32 0, i32 4, !dbg !4043
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4043
  %44 = bitcast i8* %arraydecay to i16*, !dbg !4043
  %45 = load i16, i16* %44, align 8, !dbg !4043
  %conv31 = sext i16 %45 to i32, !dbg !4043
  %cmp32 = icmp eq i32 %conv31, 16975, !dbg !4044
  br i1 %cmp32, label %land.lhs.true34, label %if.end53, !dbg !4045

land.lhs.true34:                                  ; preds = %land.lhs.true29
  %46 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4046
  %tobool35 = icmp ne %struct.ID* %46, null, !dbg !4046
  br i1 %tobool35, label %lor.lhs.false, label %land.lhs.true39, !dbg !4047

lor.lhs.false:                                    ; preds = %land.lhs.true34
  %47 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !4048
  %id36 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %47, i32 0, i32 0, !dbg !4049
  %48 = load %struct.ID*, %struct.ID** %id36, align 8, !dbg !4049
  %49 = bitcast %struct.ID* %48 to %struct.Object*, !dbg !4050
  %data = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 19, !dbg !4050
  %50 = load i8*, i8** %data, align 8, !dbg !4050
  %51 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4051
  %52 = bitcast %struct.ID* %51 to i8*, !dbg !4051
  %cmp37 = icmp eq i8* %50, %52, !dbg !4052
  br i1 %cmp37, label %land.lhs.true39, label %if.end53, !dbg !4053

land.lhs.true39:                                  ; preds = %lor.lhs.false, %land.lhs.true34
  %53 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !4054
  %pchan_name = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %53, i32 0, i32 2, !dbg !4055
  %arrayidx40 = getelementptr inbounds [32 x i8], [32 x i8]* %pchan_name, i64 0, i64 0, !dbg !4054
  %54 = load i8, i8* %arrayidx40, align 8, !dbg !4054
  %conv41 = zext i8 %54 to i32, !dbg !4056
  %tobool42 = icmp ne i32 %conv41, 0, !dbg !4056
  br i1 %tobool42, label %land.lhs.true43, label %if.end53, !dbg !4057

land.lhs.true43:                                  ; preds = %land.lhs.true39
  %55 = load i8*, i8** %oldName.addr, align 8, !dbg !4058
  %56 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !4059
  %pchan_name44 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %56, i32 0, i32 2, !dbg !4060
  %arraydecay45 = getelementptr inbounds [32 x i8], [32 x i8]* %pchan_name44, i64 0, i64 0, !dbg !4059
  %call46 = call i32 @strcmp(i8* %55, i8* %arraydecay45) #6, !dbg !4061
  %cmp47 = icmp eq i32 %call46, 0, !dbg !4062
  br i1 %cmp47, label %if.then49, label %if.end53, !dbg !4063

if.then49:                                        ; preds = %land.lhs.true43
  %57 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !4064
  %pchan_name50 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %57, i32 0, i32 2, !dbg !4066
  %arraydecay51 = getelementptr inbounds [32 x i8], [32 x i8]* %pchan_name50, i64 0, i64 0, !dbg !4064
  %58 = load i8*, i8** %newName.addr, align 8, !dbg !4067
  %call52 = call i8* @BLI_strncpy(i8* %arraydecay51, i8* %58, i64 32), !dbg !4068
  br label %if.end53, !dbg !4069

if.end53:                                         ; preds = %if.then49, %land.lhs.true43, %land.lhs.true39, %lor.lhs.false, %land.lhs.true29, %if.then26
  br label %if.end54, !dbg !4070

if.end54:                                         ; preds = %if.end53, %if.end23
  br label %for.inc, !dbg !4071

for.inc:                                          ; preds = %if.end54
  %59 = load i32, i32* %tarIndex, align 4, !dbg !4009
  %inc = add nsw i32 %59, 1, !dbg !4009
  store i32 %inc, i32* %tarIndex, align 4, !dbg !4009
  %60 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !4009
  %incdec.ptr = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %60, i32 1, !dbg !4009
  store %struct.DriverTarget* %incdec.ptr, %struct.DriverTarget** %dtar, align 8, !dbg !4009
  br label %for.cond12, !dbg !4009, !llvm.loop !4072

for.end:                                          ; preds = %for.cond12
  br label %for.inc55, !dbg !4074

for.inc55:                                        ; preds = %for.end
  %61 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !4075
  %next = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %61, i32 0, i32 0, !dbg !4076
  %62 = load %struct.DriverVar*, %struct.DriverVar** %next, align 8, !dbg !4076
  store %struct.DriverVar* %62, %struct.DriverVar** %dvar, align 8, !dbg !4077
  br label %for.cond9, !dbg !4078, !llvm.loop !4079

for.end56:                                        ; preds = %for.cond9
  br label %if.end57, !dbg !4081

if.end57:                                         ; preds = %for.end56, %if.end
  br label %for.inc58, !dbg !4082

for.inc58:                                        ; preds = %if.end57
  %63 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !4083
  %next59 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %63, i32 0, i32 0, !dbg !4084
  %64 = load %struct.FCurve*, %struct.FCurve** %next59, align 8, !dbg !4084
  store %struct.FCurve* %64, %struct.FCurve** %fcu, align 8, !dbg !4085
  br label %for.cond, !dbg !4086, !llvm.loop !4087

for.end60:                                        ; preds = %for.cond
  ret void, !dbg !4089
}

; Function Attrs: noinline nounwind uwtable
define internal void @nlastrips_path_rename_fix(%struct.ID* %owner_id, i8* %prefix, i8* %oldName, i8* %newName, i8* %oldKey, i8* %newKey, %struct.ListBase* %strips, i8 zeroext %verify_paths) #0 !dbg !4090 {
entry:
  %owner_id.addr = alloca %struct.ID*, align 8
  %prefix.addr = alloca i8*, align 8
  %oldName.addr = alloca i8*, align 8
  %newName.addr = alloca i8*, align 8
  %oldKey.addr = alloca i8*, align 8
  %newKey.addr = alloca i8*, align 8
  %strips.addr = alloca %struct.ListBase*, align 8
  %verify_paths.addr = alloca i8, align 1
  %strip = alloca %struct.NlaStrip*, align 8
  store %struct.ID* %owner_id, %struct.ID** %owner_id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %owner_id.addr, metadata !4091, metadata !DIExpression()), !dbg !4092
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !4093, metadata !DIExpression()), !dbg !4094
  store i8* %oldName, i8** %oldName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldName.addr, metadata !4095, metadata !DIExpression()), !dbg !4096
  store i8* %newName, i8** %newName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newName.addr, metadata !4097, metadata !DIExpression()), !dbg !4098
  store i8* %oldKey, i8** %oldKey.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldKey.addr, metadata !4099, metadata !DIExpression()), !dbg !4100
  store i8* %newKey, i8** %newKey.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newKey.addr, metadata !4101, metadata !DIExpression()), !dbg !4102
  store %struct.ListBase* %strips, %struct.ListBase** %strips.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %strips.addr, metadata !4103, metadata !DIExpression()), !dbg !4104
  store i8 %verify_paths, i8* %verify_paths.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %verify_paths.addr, metadata !4105, metadata !DIExpression()), !dbg !4106
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %strip, metadata !4107, metadata !DIExpression()), !dbg !4108
  %0 = load %struct.ListBase*, %struct.ListBase** %strips.addr, align 8, !dbg !4109
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !4111
  %1 = load i8*, i8** %first, align 8, !dbg !4111
  %2 = bitcast i8* %1 to %struct.NlaStrip*, !dbg !4109
  store %struct.NlaStrip* %2, %struct.NlaStrip** %strip, align 8, !dbg !4112
  br label %for.cond, !dbg !4113

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !4114
  %tobool = icmp ne %struct.NlaStrip* %3, null, !dbg !4116
  br i1 %tobool, label %for.body, label %for.end, !dbg !4116

for.body:                                         ; preds = %for.cond
  %4 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !4117
  %act = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %4, i32 0, i32 3, !dbg !4120
  %5 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !4120
  %tobool1 = icmp ne %struct.bAction* %5, null, !dbg !4117
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4121

if.then:                                          ; preds = %for.body
  %6 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !4122
  %7 = load i8*, i8** %prefix.addr, align 8, !dbg !4123
  %8 = load i8*, i8** %oldName.addr, align 8, !dbg !4124
  %9 = load i8*, i8** %newName.addr, align 8, !dbg !4125
  %10 = load i8*, i8** %oldKey.addr, align 8, !dbg !4126
  %11 = load i8*, i8** %newKey.addr, align 8, !dbg !4127
  %12 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !4128
  %act2 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %12, i32 0, i32 3, !dbg !4129
  %13 = load %struct.bAction*, %struct.bAction** %act2, align 8, !dbg !4129
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %13, i32 0, i32 1, !dbg !4130
  %14 = load i8, i8* %verify_paths.addr, align 1, !dbg !4131
  call void @fcurves_path_rename_fix(%struct.ID* %6, i8* %7, i8* %8, i8* %9, i8* %10, i8* %11, %struct.ListBase* %curves, i8 zeroext %14), !dbg !4132
  br label %if.end, !dbg !4132

if.end:                                           ; preds = %if.then, %for.body
  %15 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !4133
  %16 = load i8*, i8** %prefix.addr, align 8, !dbg !4134
  %17 = load i8*, i8** %oldName.addr, align 8, !dbg !4135
  %18 = load i8*, i8** %newName.addr, align 8, !dbg !4136
  %19 = load i8*, i8** %oldKey.addr, align 8, !dbg !4137
  %20 = load i8*, i8** %newKey.addr, align 8, !dbg !4138
  %21 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !4139
  %strips3 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %21, i32 0, i32 2, !dbg !4140
  %22 = load i8, i8* %verify_paths.addr, align 1, !dbg !4141
  call void @nlastrips_path_rename_fix(%struct.ID* %15, i8* %16, i8* %17, i8* %18, i8* %19, i8* %20, %struct.ListBase* %strips3, i8 zeroext %22), !dbg !4142
  br label %for.inc, !dbg !4143

for.inc:                                          ; preds = %if.end
  %23 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !4144
  %next = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %23, i32 0, i32 0, !dbg !4145
  %24 = load %struct.NlaStrip*, %struct.NlaStrip** %next, align 8, !dbg !4145
  store %struct.NlaStrip* %24, %struct.NlaStrip** %strip, align 8, !dbg !4146
  br label %for.cond, !dbg !4147, !llvm.loop !4148

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4150
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_animdata_fix_paths_remove(%struct.ID* %id, i8* %prefix) #0 !dbg !4151 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %prefix.addr = alloca i8*, align 8
  %nlt = alloca %struct.NlaTrack*, align 8
  %iat = alloca %struct.IdAdtTemplate*, align 8
  %adt = alloca %struct.AnimData*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4154, metadata !DIExpression()), !dbg !4155
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !4156, metadata !DIExpression()), !dbg !4157
  call void @llvm.dbg.declare(metadata %struct.NlaTrack** %nlt, metadata !4158, metadata !DIExpression()), !dbg !4159
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4160
  %call = call zeroext i8 @id_type_can_have_animdata(%struct.ID* %0), !dbg !4162
  %tobool = icmp ne i8 %call, 0, !dbg !4162
  br i1 %tobool, label %if.then, label %if.end14, !dbg !4163

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IdAdtTemplate** %iat, metadata !4164, metadata !DIExpression()), !dbg !4166
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4167
  %2 = bitcast %struct.ID* %1 to %struct.IdAdtTemplate*, !dbg !4168
  store %struct.IdAdtTemplate* %2, %struct.IdAdtTemplate** %iat, align 8, !dbg !4166
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !4169, metadata !DIExpression()), !dbg !4170
  %3 = load %struct.IdAdtTemplate*, %struct.IdAdtTemplate** %iat, align 8, !dbg !4171
  %adt1 = getelementptr inbounds %struct.IdAdtTemplate, %struct.IdAdtTemplate* %3, i32 0, i32 1, !dbg !4172
  %4 = load %struct.AnimData*, %struct.AnimData** %adt1, align 8, !dbg !4172
  store %struct.AnimData* %4, %struct.AnimData** %adt, align 8, !dbg !4170
  %5 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4173
  %tobool2 = icmp ne %struct.AnimData* %5, null, !dbg !4173
  br i1 %tobool2, label %if.then3, label %if.end13, !dbg !4175

if.then3:                                         ; preds = %if.then
  %6 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4176
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %6, i32 0, i32 0, !dbg !4179
  %7 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !4179
  %tobool4 = icmp ne %struct.bAction* %7, null, !dbg !4176
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !4180

if.then5:                                         ; preds = %if.then3
  %8 = load i8*, i8** %prefix.addr, align 8, !dbg !4181
  %9 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4182
  %action6 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %9, i32 0, i32 0, !dbg !4183
  %10 = load %struct.bAction*, %struct.bAction** %action6, align 8, !dbg !4183
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %10, i32 0, i32 1, !dbg !4184
  call void @fcurves_path_remove_fix(i8* %8, %struct.ListBase* %curves), !dbg !4185
  br label %if.end, !dbg !4185

if.end:                                           ; preds = %if.then5, %if.then3
  %11 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4186
  %tmpact = getelementptr inbounds %struct.AnimData, %struct.AnimData* %11, i32 0, i32 1, !dbg !4188
  %12 = load %struct.bAction*, %struct.bAction** %tmpact, align 8, !dbg !4188
  %tobool7 = icmp ne %struct.bAction* %12, null, !dbg !4186
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !4189

if.then8:                                         ; preds = %if.end
  %13 = load i8*, i8** %prefix.addr, align 8, !dbg !4190
  %14 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4191
  %tmpact9 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %14, i32 0, i32 1, !dbg !4192
  %15 = load %struct.bAction*, %struct.bAction** %tmpact9, align 8, !dbg !4192
  %curves10 = getelementptr inbounds %struct.bAction, %struct.bAction* %15, i32 0, i32 1, !dbg !4193
  call void @fcurves_path_remove_fix(i8* %13, %struct.ListBase* %curves10), !dbg !4194
  br label %if.end11, !dbg !4194

if.end11:                                         ; preds = %if.then8, %if.end
  %16 = load i8*, i8** %prefix.addr, align 8, !dbg !4195
  %17 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4196
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %17, i32 0, i32 5, !dbg !4197
  call void @fcurves_path_remove_fix(i8* %16, %struct.ListBase* %drivers), !dbg !4198
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4199
  %nla_tracks = getelementptr inbounds %struct.AnimData, %struct.AnimData* %18, i32 0, i32 3, !dbg !4201
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nla_tracks, i32 0, i32 0, !dbg !4202
  %19 = load i8*, i8** %first, align 8, !dbg !4202
  %20 = bitcast i8* %19 to %struct.NlaTrack*, !dbg !4199
  store %struct.NlaTrack* %20, %struct.NlaTrack** %nlt, align 8, !dbg !4203
  br label %for.cond, !dbg !4204

for.cond:                                         ; preds = %for.inc, %if.end11
  %21 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !4205
  %tobool12 = icmp ne %struct.NlaTrack* %21, null, !dbg !4207
  br i1 %tobool12, label %for.body, label %for.end, !dbg !4207

for.body:                                         ; preds = %for.cond
  %22 = load i8*, i8** %prefix.addr, align 8, !dbg !4208
  %23 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !4209
  %strips = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %23, i32 0, i32 2, !dbg !4210
  call void @nlastrips_path_remove_fix(i8* %22, %struct.ListBase* %strips), !dbg !4211
  br label %for.inc, !dbg !4211

for.inc:                                          ; preds = %for.body
  %24 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !4212
  %next = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %24, i32 0, i32 0, !dbg !4213
  %25 = load %struct.NlaTrack*, %struct.NlaTrack** %next, align 8, !dbg !4213
  store %struct.NlaTrack* %25, %struct.NlaTrack** %nlt, align 8, !dbg !4214
  br label %for.cond, !dbg !4215, !llvm.loop !4216

for.end:                                          ; preds = %for.cond
  br label %if.end13, !dbg !4218

if.end13:                                         ; preds = %for.end, %if.then
  br label %if.end14, !dbg !4219

if.end14:                                         ; preds = %if.end13, %entry
  ret void, !dbg !4220
}

; Function Attrs: noinline nounwind uwtable
define internal void @fcurves_path_remove_fix(i8* %prefix, %struct.ListBase* %curves) #0 !dbg !4221 {
entry:
  %prefix.addr = alloca i8*, align 8
  %curves.addr = alloca %struct.ListBase*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %fcn = alloca %struct.FCurve*, align 8
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !4224, metadata !DIExpression()), !dbg !4225
  store %struct.ListBase* %curves, %struct.ListBase** %curves.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %curves.addr, metadata !4226, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !4228, metadata !DIExpression()), !dbg !4229
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcn, metadata !4230, metadata !DIExpression()), !dbg !4231
  %0 = load i8*, i8** %prefix.addr, align 8, !dbg !4232
  %tobool = icmp ne i8* %0, null, !dbg !4232
  br i1 %tobool, label %if.end, label %if.then, !dbg !4234

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !4235

if.end:                                           ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %curves.addr, align 8, !dbg !4236
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !4238
  %2 = load i8*, i8** %first, align 8, !dbg !4238
  %3 = bitcast i8* %2 to %struct.FCurve*, !dbg !4236
  store %struct.FCurve* %3, %struct.FCurve** %fcu, align 8, !dbg !4239
  br label %for.cond, !dbg !4240

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !4241
  %tobool1 = icmp ne %struct.FCurve* %4, null, !dbg !4243
  br i1 %tobool1, label %for.body, label %for.end, !dbg !4243

for.body:                                         ; preds = %for.cond
  %5 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !4244
  %next = getelementptr inbounds %struct.FCurve, %struct.FCurve* %5, i32 0, i32 0, !dbg !4246
  %6 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !4246
  store %struct.FCurve* %6, %struct.FCurve** %fcn, align 8, !dbg !4247
  %7 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !4248
  %rna_path = getelementptr inbounds %struct.FCurve, %struct.FCurve* %7, i32 0, i32 12, !dbg !4250
  %8 = load i8*, i8** %rna_path, align 8, !dbg !4250
  %tobool2 = icmp ne i8* %8, null, !dbg !4248
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !4251

if.then3:                                         ; preds = %for.body
  %9 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !4252
  %rna_path4 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %9, i32 0, i32 12, !dbg !4252
  %10 = load i8*, i8** %rna_path4, align 8, !dbg !4252
  %11 = load i8*, i8** %prefix.addr, align 8, !dbg !4252
  %12 = load i8*, i8** %prefix.addr, align 8, !dbg !4252
  %call = call i64 @strlen(i8* %12) #6, !dbg !4252
  %call5 = call i32 @strncmp(i8* %10, i8* %11, i64 %call) #6, !dbg !4252
  %cmp = icmp eq i32 %call5, 0, !dbg !4252
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !4255

if.then6:                                         ; preds = %if.then3
  %13 = load %struct.ListBase*, %struct.ListBase** %curves.addr, align 8, !dbg !4256
  %14 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !4258
  %15 = bitcast %struct.FCurve* %14 to i8*, !dbg !4258
  call void @BLI_remlink(%struct.ListBase* %13, i8* %15), !dbg !4259
  %16 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !4260
  call void @free_fcurve(%struct.FCurve* %16), !dbg !4261
  br label %if.end7, !dbg !4262

if.end7:                                          ; preds = %if.then6, %if.then3
  br label %if.end8, !dbg !4263

if.end8:                                          ; preds = %if.end7, %for.body
  br label %for.inc, !dbg !4264

for.inc:                                          ; preds = %if.end8
  %17 = load %struct.FCurve*, %struct.FCurve** %fcn, align 8, !dbg !4265
  store %struct.FCurve* %17, %struct.FCurve** %fcu, align 8, !dbg !4266
  br label %for.cond, !dbg !4267, !llvm.loop !4268

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !4270
}

; Function Attrs: noinline nounwind uwtable
define internal void @nlastrips_path_remove_fix(i8* %prefix, %struct.ListBase* %strips) #0 !dbg !4271 {
entry:
  %prefix.addr = alloca i8*, align 8
  %strips.addr = alloca %struct.ListBase*, align 8
  %strip = alloca %struct.NlaStrip*, align 8
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !4272, metadata !DIExpression()), !dbg !4273
  store %struct.ListBase* %strips, %struct.ListBase** %strips.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %strips.addr, metadata !4274, metadata !DIExpression()), !dbg !4275
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %strip, metadata !4276, metadata !DIExpression()), !dbg !4277
  %0 = load %struct.ListBase*, %struct.ListBase** %strips.addr, align 8, !dbg !4278
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !4280
  %1 = load i8*, i8** %first, align 8, !dbg !4280
  %2 = bitcast i8* %1 to %struct.NlaStrip*, !dbg !4278
  store %struct.NlaStrip* %2, %struct.NlaStrip** %strip, align 8, !dbg !4281
  br label %for.cond, !dbg !4282

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !4283
  %tobool = icmp ne %struct.NlaStrip* %3, null, !dbg !4285
  br i1 %tobool, label %for.body, label %for.end, !dbg !4285

for.body:                                         ; preds = %for.cond
  %4 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !4286
  %act = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %4, i32 0, i32 3, !dbg !4289
  %5 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !4289
  %tobool1 = icmp ne %struct.bAction* %5, null, !dbg !4286
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4290

if.then:                                          ; preds = %for.body
  %6 = load i8*, i8** %prefix.addr, align 8, !dbg !4291
  %7 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !4292
  %act2 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %7, i32 0, i32 3, !dbg !4293
  %8 = load %struct.bAction*, %struct.bAction** %act2, align 8, !dbg !4293
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %8, i32 0, i32 1, !dbg !4294
  call void @fcurves_path_remove_fix(i8* %6, %struct.ListBase* %curves), !dbg !4295
  br label %if.end, !dbg !4295

if.end:                                           ; preds = %if.then, %for.body
  %9 = load i8*, i8** %prefix.addr, align 8, !dbg !4296
  %10 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !4297
  %strips3 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %10, i32 0, i32 2, !dbg !4298
  call void @nlastrips_path_remove_fix(i8* %9, %struct.ListBase* %strips3), !dbg !4299
  br label %for.inc, !dbg !4300

for.inc:                                          ; preds = %if.end
  %11 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !4301
  %next = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %11, i32 0, i32 0, !dbg !4302
  %12 = load %struct.NlaStrip*, %struct.NlaStrip** %next, align 8, !dbg !4302
  store %struct.NlaStrip* %12, %struct.NlaStrip** %strip, align 8, !dbg !4303
  br label %for.cond, !dbg !4304, !llvm.loop !4305

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4307
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_animdata_main_cb(%struct.Main* %mainptr, void (%struct.ID*, %struct.AnimData*, i8*)* %func, i8* %user_data) #0 !dbg !4308 {
entry:
  %mainptr.addr = alloca %struct.Main*, align 8
  %func.addr = alloca void (%struct.ID*, %struct.AnimData*, i8*)*, align 8
  %user_data.addr = alloca i8*, align 8
  %id = alloca %struct.ID*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %adt6 = alloca %struct.AnimData*, align 8
  %ntp = alloca %struct.Tex*, align 8
  %adt2 = alloca %struct.AnimData*, align 8
  %adt27 = alloca %struct.AnimData*, align 8
  %ntp29 = alloca %struct.Lamp*, align 8
  %adt233 = alloca %struct.AnimData*, align 8
  %adt50 = alloca %struct.AnimData*, align 8
  %ntp52 = alloca %struct.Material*, align 8
  %adt256 = alloca %struct.AnimData*, align 8
  %adt73 = alloca %struct.AnimData*, align 8
  %adt85 = alloca %struct.AnimData*, align 8
  %adt97 = alloca %struct.AnimData*, align 8
  %adt109 = alloca %struct.AnimData*, align 8
  %adt121 = alloca %struct.AnimData*, align 8
  %adt133 = alloca %struct.AnimData*, align 8
  %adt145 = alloca %struct.AnimData*, align 8
  %adt157 = alloca %struct.AnimData*, align 8
  %adt169 = alloca %struct.AnimData*, align 8
  %adt181 = alloca %struct.AnimData*, align 8
  %adt193 = alloca %struct.AnimData*, align 8
  %adt205 = alloca %struct.AnimData*, align 8
  %adt217 = alloca %struct.AnimData*, align 8
  %ntp219 = alloca %struct.World*, align 8
  %adt2223 = alloca %struct.AnimData*, align 8
  %adt240 = alloca %struct.AnimData*, align 8
  %ntp242 = alloca %struct.Scene*, align 8
  %adt2246 = alloca %struct.AnimData*, align 8
  %adt263 = alloca %struct.AnimData*, align 8
  store %struct.Main* %mainptr, %struct.Main** %mainptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %mainptr.addr, metadata !4379, metadata !DIExpression()), !dbg !4380
  store void (%struct.ID*, %struct.AnimData*, i8*)* %func, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, metadata !4381, metadata !DIExpression()), !dbg !4382
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !4383, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !4385, metadata !DIExpression()), !dbg !4386
  %0 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4387
  %nodetree = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 35, !dbg !4387
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodetree, i32 0, i32 0, !dbg !4387
  %1 = load i8*, i8** %first, align 8, !dbg !4387
  %2 = bitcast i8* %1 to %struct.ID*, !dbg !4387
  store %struct.ID* %2, %struct.ID** %id, align 8, !dbg !4387
  br label %for.cond, !dbg !4387

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4389
  %tobool = icmp ne %struct.ID* %3, null, !dbg !4387
  br i1 %tobool, label %for.body, label %for.end, !dbg !4387

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !4391, metadata !DIExpression()), !dbg !4393
  %4 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4393
  %call = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %4), !dbg !4393
  store %struct.AnimData* %call, %struct.AnimData** %adt, align 8, !dbg !4393
  %5 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4394
  %tobool1 = icmp ne %struct.AnimData* %5, null, !dbg !4394
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4393

if.then:                                          ; preds = %for.body
  %6 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4394
  %7 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4394
  %8 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4394
  %9 = load i8*, i8** %user_data.addr, align 8, !dbg !4394
  call void %6(%struct.ID* %7, %struct.AnimData* %8, i8* %9), !dbg !4394
  br label %if.end, !dbg !4394

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4393

for.inc:                                          ; preds = %if.end
  %10 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4389
  %next = getelementptr inbounds %struct.ID, %struct.ID* %10, i32 0, i32 0, !dbg !4389
  %11 = load i8*, i8** %next, align 8, !dbg !4389
  %12 = bitcast i8* %11 to %struct.ID*, !dbg !4389
  store %struct.ID* %12, %struct.ID** %id, align 8, !dbg !4389
  br label %for.cond, !dbg !4389, !llvm.loop !4396

for.end:                                          ; preds = %for.cond
  %13 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4397
  %tex = getelementptr inbounds %struct.Main, %struct.Main* %13, i32 0, i32 18, !dbg !4397
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %tex, i32 0, i32 0, !dbg !4397
  %14 = load i8*, i8** %first2, align 8, !dbg !4397
  %15 = bitcast i8* %14 to %struct.ID*, !dbg !4397
  store %struct.ID* %15, %struct.ID** %id, align 8, !dbg !4397
  br label %for.cond3, !dbg !4397

for.cond3:                                        ; preds = %for.inc20, %for.end
  %16 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4399
  %tobool4 = icmp ne %struct.ID* %16, null, !dbg !4397
  br i1 %tobool4, label %for.body5, label %for.end22, !dbg !4397

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt6, metadata !4401, metadata !DIExpression()), !dbg !4403
  %17 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4403
  %call7 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %17), !dbg !4403
  store %struct.AnimData* %call7, %struct.AnimData** %adt6, align 8, !dbg !4403
  call void @llvm.dbg.declare(metadata %struct.Tex** %ntp, metadata !4404, metadata !DIExpression()), !dbg !4403
  %18 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4403
  %19 = bitcast %struct.ID* %18 to %struct.Tex*, !dbg !4403
  store %struct.Tex* %19, %struct.Tex** %ntp, align 8, !dbg !4403
  %20 = load %struct.Tex*, %struct.Tex** %ntp, align 8, !dbg !4405
  %nodetree8 = getelementptr inbounds %struct.Tex, %struct.Tex* %20, i32 0, i32 52, !dbg !4405
  %21 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree8, align 8, !dbg !4405
  %tobool9 = icmp ne %struct.bNodeTree* %21, null, !dbg !4405
  br i1 %tobool9, label %if.then10, label %if.end16, !dbg !4403

if.then10:                                        ; preds = %for.body5
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt2, metadata !4407, metadata !DIExpression()), !dbg !4409
  %22 = load %struct.Tex*, %struct.Tex** %ntp, align 8, !dbg !4409
  %nodetree11 = getelementptr inbounds %struct.Tex, %struct.Tex* %22, i32 0, i32 52, !dbg !4409
  %23 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree11, align 8, !dbg !4409
  %24 = bitcast %struct.bNodeTree* %23 to %struct.ID*, !dbg !4409
  %call12 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %24), !dbg !4409
  store %struct.AnimData* %call12, %struct.AnimData** %adt2, align 8, !dbg !4409
  %25 = load %struct.AnimData*, %struct.AnimData** %adt2, align 8, !dbg !4410
  %tobool13 = icmp ne %struct.AnimData* %25, null, !dbg !4410
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !4409

if.then14:                                        ; preds = %if.then10
  %26 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4410
  %27 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4410
  %28 = load %struct.AnimData*, %struct.AnimData** %adt2, align 8, !dbg !4410
  %29 = load i8*, i8** %user_data.addr, align 8, !dbg !4410
  call void %26(%struct.ID* %27, %struct.AnimData* %28, i8* %29), !dbg !4410
  br label %if.end15, !dbg !4410

if.end15:                                         ; preds = %if.then14, %if.then10
  br label %if.end16, !dbg !4409

if.end16:                                         ; preds = %if.end15, %for.body5
  %30 = load %struct.AnimData*, %struct.AnimData** %adt6, align 8, !dbg !4412
  %tobool17 = icmp ne %struct.AnimData* %30, null, !dbg !4412
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !4403

if.then18:                                        ; preds = %if.end16
  %31 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4412
  %32 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4412
  %33 = load %struct.AnimData*, %struct.AnimData** %adt6, align 8, !dbg !4412
  %34 = load i8*, i8** %user_data.addr, align 8, !dbg !4412
  call void %31(%struct.ID* %32, %struct.AnimData* %33, i8* %34), !dbg !4412
  br label %if.end19, !dbg !4412

if.end19:                                         ; preds = %if.then18, %if.end16
  br label %for.inc20, !dbg !4403

for.inc20:                                        ; preds = %if.end19
  %35 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4399
  %next21 = getelementptr inbounds %struct.ID, %struct.ID* %35, i32 0, i32 0, !dbg !4399
  %36 = load i8*, i8** %next21, align 8, !dbg !4399
  %37 = bitcast i8* %36 to %struct.ID*, !dbg !4399
  store %struct.ID* %37, %struct.ID** %id, align 8, !dbg !4399
  br label %for.cond3, !dbg !4399, !llvm.loop !4414

for.end22:                                        ; preds = %for.cond3
  %38 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4415
  %lamp = getelementptr inbounds %struct.Main, %struct.Main* %38, i32 0, i32 21, !dbg !4415
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lamp, i32 0, i32 0, !dbg !4415
  %39 = load i8*, i8** %first23, align 8, !dbg !4415
  %40 = bitcast i8* %39 to %struct.ID*, !dbg !4415
  store %struct.ID* %40, %struct.ID** %id, align 8, !dbg !4415
  br label %for.cond24, !dbg !4415

for.cond24:                                       ; preds = %for.inc43, %for.end22
  %41 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4417
  %tobool25 = icmp ne %struct.ID* %41, null, !dbg !4415
  br i1 %tobool25, label %for.body26, label %for.end45, !dbg !4415

for.body26:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt27, metadata !4419, metadata !DIExpression()), !dbg !4421
  %42 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4421
  %call28 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %42), !dbg !4421
  store %struct.AnimData* %call28, %struct.AnimData** %adt27, align 8, !dbg !4421
  call void @llvm.dbg.declare(metadata %struct.Lamp** %ntp29, metadata !4422, metadata !DIExpression()), !dbg !4421
  %43 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4421
  %44 = bitcast %struct.ID* %43 to %struct.Lamp*, !dbg !4421
  store %struct.Lamp* %44, %struct.Lamp** %ntp29, align 8, !dbg !4421
  %45 = load %struct.Lamp*, %struct.Lamp** %ntp29, align 8, !dbg !4423
  %nodetree30 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %45, i32 0, i32 74, !dbg !4423
  %46 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree30, align 8, !dbg !4423
  %tobool31 = icmp ne %struct.bNodeTree* %46, null, !dbg !4423
  br i1 %tobool31, label %if.then32, label %if.end39, !dbg !4421

if.then32:                                        ; preds = %for.body26
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt233, metadata !4425, metadata !DIExpression()), !dbg !4427
  %47 = load %struct.Lamp*, %struct.Lamp** %ntp29, align 8, !dbg !4427
  %nodetree34 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %47, i32 0, i32 74, !dbg !4427
  %48 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree34, align 8, !dbg !4427
  %49 = bitcast %struct.bNodeTree* %48 to %struct.ID*, !dbg !4427
  %call35 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %49), !dbg !4427
  store %struct.AnimData* %call35, %struct.AnimData** %adt233, align 8, !dbg !4427
  %50 = load %struct.AnimData*, %struct.AnimData** %adt233, align 8, !dbg !4428
  %tobool36 = icmp ne %struct.AnimData* %50, null, !dbg !4428
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !4427

if.then37:                                        ; preds = %if.then32
  %51 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4428
  %52 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4428
  %53 = load %struct.AnimData*, %struct.AnimData** %adt233, align 8, !dbg !4428
  %54 = load i8*, i8** %user_data.addr, align 8, !dbg !4428
  call void %51(%struct.ID* %52, %struct.AnimData* %53, i8* %54), !dbg !4428
  br label %if.end38, !dbg !4428

if.end38:                                         ; preds = %if.then37, %if.then32
  br label %if.end39, !dbg !4427

if.end39:                                         ; preds = %if.end38, %for.body26
  %55 = load %struct.AnimData*, %struct.AnimData** %adt27, align 8, !dbg !4430
  %tobool40 = icmp ne %struct.AnimData* %55, null, !dbg !4430
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !4421

if.then41:                                        ; preds = %if.end39
  %56 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4430
  %57 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4430
  %58 = load %struct.AnimData*, %struct.AnimData** %adt27, align 8, !dbg !4430
  %59 = load i8*, i8** %user_data.addr, align 8, !dbg !4430
  call void %56(%struct.ID* %57, %struct.AnimData* %58, i8* %59), !dbg !4430
  br label %if.end42, !dbg !4430

if.end42:                                         ; preds = %if.then41, %if.end39
  br label %for.inc43, !dbg !4421

for.inc43:                                        ; preds = %if.end42
  %60 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4417
  %next44 = getelementptr inbounds %struct.ID, %struct.ID* %60, i32 0, i32 0, !dbg !4417
  %61 = load i8*, i8** %next44, align 8, !dbg !4417
  %62 = bitcast i8* %61 to %struct.ID*, !dbg !4417
  store %struct.ID* %62, %struct.ID** %id, align 8, !dbg !4417
  br label %for.cond24, !dbg !4417, !llvm.loop !4432

for.end45:                                        ; preds = %for.cond24
  %63 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4433
  %mat = getelementptr inbounds %struct.Main, %struct.Main* %63, i32 0, i32 17, !dbg !4433
  %first46 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mat, i32 0, i32 0, !dbg !4433
  %64 = load i8*, i8** %first46, align 8, !dbg !4433
  %65 = bitcast i8* %64 to %struct.ID*, !dbg !4433
  store %struct.ID* %65, %struct.ID** %id, align 8, !dbg !4433
  br label %for.cond47, !dbg !4433

for.cond47:                                       ; preds = %for.inc66, %for.end45
  %66 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4435
  %tobool48 = icmp ne %struct.ID* %66, null, !dbg !4433
  br i1 %tobool48, label %for.body49, label %for.end68, !dbg !4433

for.body49:                                       ; preds = %for.cond47
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt50, metadata !4437, metadata !DIExpression()), !dbg !4439
  %67 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4439
  %call51 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %67), !dbg !4439
  store %struct.AnimData* %call51, %struct.AnimData** %adt50, align 8, !dbg !4439
  call void @llvm.dbg.declare(metadata %struct.Material** %ntp52, metadata !4440, metadata !DIExpression()), !dbg !4439
  %68 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4439
  %69 = bitcast %struct.ID* %68 to %struct.Material*, !dbg !4439
  store %struct.Material* %69, %struct.Material** %ntp52, align 8, !dbg !4439
  %70 = load %struct.Material*, %struct.Material** %ntp52, align 8, !dbg !4441
  %nodetree53 = getelementptr inbounds %struct.Material, %struct.Material* %70, i32 0, i32 103, !dbg !4441
  %71 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree53, align 8, !dbg !4441
  %tobool54 = icmp ne %struct.bNodeTree* %71, null, !dbg !4441
  br i1 %tobool54, label %if.then55, label %if.end62, !dbg !4439

if.then55:                                        ; preds = %for.body49
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt256, metadata !4443, metadata !DIExpression()), !dbg !4445
  %72 = load %struct.Material*, %struct.Material** %ntp52, align 8, !dbg !4445
  %nodetree57 = getelementptr inbounds %struct.Material, %struct.Material* %72, i32 0, i32 103, !dbg !4445
  %73 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree57, align 8, !dbg !4445
  %74 = bitcast %struct.bNodeTree* %73 to %struct.ID*, !dbg !4445
  %call58 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %74), !dbg !4445
  store %struct.AnimData* %call58, %struct.AnimData** %adt256, align 8, !dbg !4445
  %75 = load %struct.AnimData*, %struct.AnimData** %adt256, align 8, !dbg !4446
  %tobool59 = icmp ne %struct.AnimData* %75, null, !dbg !4446
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !4445

if.then60:                                        ; preds = %if.then55
  %76 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4446
  %77 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4446
  %78 = load %struct.AnimData*, %struct.AnimData** %adt256, align 8, !dbg !4446
  %79 = load i8*, i8** %user_data.addr, align 8, !dbg !4446
  call void %76(%struct.ID* %77, %struct.AnimData* %78, i8* %79), !dbg !4446
  br label %if.end61, !dbg !4446

if.end61:                                         ; preds = %if.then60, %if.then55
  br label %if.end62, !dbg !4445

if.end62:                                         ; preds = %if.end61, %for.body49
  %80 = load %struct.AnimData*, %struct.AnimData** %adt50, align 8, !dbg !4448
  %tobool63 = icmp ne %struct.AnimData* %80, null, !dbg !4448
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !4439

if.then64:                                        ; preds = %if.end62
  %81 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4448
  %82 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4448
  %83 = load %struct.AnimData*, %struct.AnimData** %adt50, align 8, !dbg !4448
  %84 = load i8*, i8** %user_data.addr, align 8, !dbg !4448
  call void %81(%struct.ID* %82, %struct.AnimData* %83, i8* %84), !dbg !4448
  br label %if.end65, !dbg !4448

if.end65:                                         ; preds = %if.then64, %if.end62
  br label %for.inc66, !dbg !4439

for.inc66:                                        ; preds = %if.end65
  %85 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4435
  %next67 = getelementptr inbounds %struct.ID, %struct.ID* %85, i32 0, i32 0, !dbg !4435
  %86 = load i8*, i8** %next67, align 8, !dbg !4435
  %87 = bitcast i8* %86 to %struct.ID*, !dbg !4435
  store %struct.ID* %87, %struct.ID** %id, align 8, !dbg !4435
  br label %for.cond47, !dbg !4435, !llvm.loop !4450

for.end68:                                        ; preds = %for.cond47
  %88 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4451
  %camera = getelementptr inbounds %struct.Main, %struct.Main* %88, i32 0, i32 22, !dbg !4451
  %first69 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %camera, i32 0, i32 0, !dbg !4451
  %89 = load i8*, i8** %first69, align 8, !dbg !4451
  %90 = bitcast i8* %89 to %struct.ID*, !dbg !4451
  store %struct.ID* %90, %struct.ID** %id, align 8, !dbg !4451
  br label %for.cond70, !dbg !4451

for.cond70:                                       ; preds = %for.inc78, %for.end68
  %91 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4453
  %tobool71 = icmp ne %struct.ID* %91, null, !dbg !4451
  br i1 %tobool71, label %for.body72, label %for.end80, !dbg !4451

for.body72:                                       ; preds = %for.cond70
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt73, metadata !4455, metadata !DIExpression()), !dbg !4457
  %92 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4457
  %call74 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %92), !dbg !4457
  store %struct.AnimData* %call74, %struct.AnimData** %adt73, align 8, !dbg !4457
  %93 = load %struct.AnimData*, %struct.AnimData** %adt73, align 8, !dbg !4458
  %tobool75 = icmp ne %struct.AnimData* %93, null, !dbg !4458
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !4457

if.then76:                                        ; preds = %for.body72
  %94 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4458
  %95 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4458
  %96 = load %struct.AnimData*, %struct.AnimData** %adt73, align 8, !dbg !4458
  %97 = load i8*, i8** %user_data.addr, align 8, !dbg !4458
  call void %94(%struct.ID* %95, %struct.AnimData* %96, i8* %97), !dbg !4458
  br label %if.end77, !dbg !4458

if.end77:                                         ; preds = %if.then76, %for.body72
  br label %for.inc78, !dbg !4457

for.inc78:                                        ; preds = %if.end77
  %98 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4453
  %next79 = getelementptr inbounds %struct.ID, %struct.ID* %98, i32 0, i32 0, !dbg !4453
  %99 = load i8*, i8** %next79, align 8, !dbg !4453
  %100 = bitcast i8* %99 to %struct.ID*, !dbg !4453
  store %struct.ID* %100, %struct.ID** %id, align 8, !dbg !4453
  br label %for.cond70, !dbg !4453, !llvm.loop !4460

for.end80:                                        ; preds = %for.cond70
  %101 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4461
  %key = getelementptr inbounds %struct.Main, %struct.Main* %101, i32 0, i32 24, !dbg !4461
  %first81 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %key, i32 0, i32 0, !dbg !4461
  %102 = load i8*, i8** %first81, align 8, !dbg !4461
  %103 = bitcast i8* %102 to %struct.ID*, !dbg !4461
  store %struct.ID* %103, %struct.ID** %id, align 8, !dbg !4461
  br label %for.cond82, !dbg !4461

for.cond82:                                       ; preds = %for.inc90, %for.end80
  %104 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4463
  %tobool83 = icmp ne %struct.ID* %104, null, !dbg !4461
  br i1 %tobool83, label %for.body84, label %for.end92, !dbg !4461

for.body84:                                       ; preds = %for.cond82
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt85, metadata !4465, metadata !DIExpression()), !dbg !4467
  %105 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4467
  %call86 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %105), !dbg !4467
  store %struct.AnimData* %call86, %struct.AnimData** %adt85, align 8, !dbg !4467
  %106 = load %struct.AnimData*, %struct.AnimData** %adt85, align 8, !dbg !4468
  %tobool87 = icmp ne %struct.AnimData* %106, null, !dbg !4468
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !4467

if.then88:                                        ; preds = %for.body84
  %107 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4468
  %108 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4468
  %109 = load %struct.AnimData*, %struct.AnimData** %adt85, align 8, !dbg !4468
  %110 = load i8*, i8** %user_data.addr, align 8, !dbg !4468
  call void %107(%struct.ID* %108, %struct.AnimData* %109, i8* %110), !dbg !4468
  br label %if.end89, !dbg !4468

if.end89:                                         ; preds = %if.then88, %for.body84
  br label %for.inc90, !dbg !4467

for.inc90:                                        ; preds = %if.end89
  %111 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4463
  %next91 = getelementptr inbounds %struct.ID, %struct.ID* %111, i32 0, i32 0, !dbg !4463
  %112 = load i8*, i8** %next91, align 8, !dbg !4463
  %113 = bitcast i8* %112 to %struct.ID*, !dbg !4463
  store %struct.ID* %113, %struct.ID** %id, align 8, !dbg !4463
  br label %for.cond82, !dbg !4463, !llvm.loop !4470

for.end92:                                        ; preds = %for.cond82
  %114 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4471
  %mball = getelementptr inbounds %struct.Main, %struct.Main* %114, i32 0, i32 16, !dbg !4471
  %first93 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mball, i32 0, i32 0, !dbg !4471
  %115 = load i8*, i8** %first93, align 8, !dbg !4471
  %116 = bitcast i8* %115 to %struct.ID*, !dbg !4471
  store %struct.ID* %116, %struct.ID** %id, align 8, !dbg !4471
  br label %for.cond94, !dbg !4471

for.cond94:                                       ; preds = %for.inc102, %for.end92
  %117 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4473
  %tobool95 = icmp ne %struct.ID* %117, null, !dbg !4471
  br i1 %tobool95, label %for.body96, label %for.end104, !dbg !4471

for.body96:                                       ; preds = %for.cond94
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt97, metadata !4475, metadata !DIExpression()), !dbg !4477
  %118 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4477
  %call98 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %118), !dbg !4477
  store %struct.AnimData* %call98, %struct.AnimData** %adt97, align 8, !dbg !4477
  %119 = load %struct.AnimData*, %struct.AnimData** %adt97, align 8, !dbg !4478
  %tobool99 = icmp ne %struct.AnimData* %119, null, !dbg !4478
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !4477

if.then100:                                       ; preds = %for.body96
  %120 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4478
  %121 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4478
  %122 = load %struct.AnimData*, %struct.AnimData** %adt97, align 8, !dbg !4478
  %123 = load i8*, i8** %user_data.addr, align 8, !dbg !4478
  call void %120(%struct.ID* %121, %struct.AnimData* %122, i8* %123), !dbg !4478
  br label %if.end101, !dbg !4478

if.end101:                                        ; preds = %if.then100, %for.body96
  br label %for.inc102, !dbg !4477

for.inc102:                                       ; preds = %if.end101
  %124 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4473
  %next103 = getelementptr inbounds %struct.ID, %struct.ID* %124, i32 0, i32 0, !dbg !4473
  %125 = load i8*, i8** %next103, align 8, !dbg !4473
  %126 = bitcast i8* %125 to %struct.ID*, !dbg !4473
  store %struct.ID* %126, %struct.ID** %id, align 8, !dbg !4473
  br label %for.cond94, !dbg !4473, !llvm.loop !4480

for.end104:                                       ; preds = %for.cond94
  %127 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4481
  %curve = getelementptr inbounds %struct.Main, %struct.Main* %127, i32 0, i32 15, !dbg !4481
  %first105 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curve, i32 0, i32 0, !dbg !4481
  %128 = load i8*, i8** %first105, align 8, !dbg !4481
  %129 = bitcast i8* %128 to %struct.ID*, !dbg !4481
  store %struct.ID* %129, %struct.ID** %id, align 8, !dbg !4481
  br label %for.cond106, !dbg !4481

for.cond106:                                      ; preds = %for.inc114, %for.end104
  %130 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4483
  %tobool107 = icmp ne %struct.ID* %130, null, !dbg !4481
  br i1 %tobool107, label %for.body108, label %for.end116, !dbg !4481

for.body108:                                      ; preds = %for.cond106
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt109, metadata !4485, metadata !DIExpression()), !dbg !4487
  %131 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4487
  %call110 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %131), !dbg !4487
  store %struct.AnimData* %call110, %struct.AnimData** %adt109, align 8, !dbg !4487
  %132 = load %struct.AnimData*, %struct.AnimData** %adt109, align 8, !dbg !4488
  %tobool111 = icmp ne %struct.AnimData* %132, null, !dbg !4488
  br i1 %tobool111, label %if.then112, label %if.end113, !dbg !4487

if.then112:                                       ; preds = %for.body108
  %133 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4488
  %134 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4488
  %135 = load %struct.AnimData*, %struct.AnimData** %adt109, align 8, !dbg !4488
  %136 = load i8*, i8** %user_data.addr, align 8, !dbg !4488
  call void %133(%struct.ID* %134, %struct.AnimData* %135, i8* %136), !dbg !4488
  br label %if.end113, !dbg !4488

if.end113:                                        ; preds = %if.then112, %for.body108
  br label %for.inc114, !dbg !4487

for.inc114:                                       ; preds = %if.end113
  %137 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4483
  %next115 = getelementptr inbounds %struct.ID, %struct.ID* %137, i32 0, i32 0, !dbg !4483
  %138 = load i8*, i8** %next115, align 8, !dbg !4483
  %139 = bitcast i8* %138 to %struct.ID*, !dbg !4483
  store %struct.ID* %139, %struct.ID** %id, align 8, !dbg !4483
  br label %for.cond106, !dbg !4483, !llvm.loop !4490

for.end116:                                       ; preds = %for.cond106
  %140 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4491
  %armature = getelementptr inbounds %struct.Main, %struct.Main* %140, i32 0, i32 33, !dbg !4491
  %first117 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %armature, i32 0, i32 0, !dbg !4491
  %141 = load i8*, i8** %first117, align 8, !dbg !4491
  %142 = bitcast i8* %141 to %struct.ID*, !dbg !4491
  store %struct.ID* %142, %struct.ID** %id, align 8, !dbg !4491
  br label %for.cond118, !dbg !4491

for.cond118:                                      ; preds = %for.inc126, %for.end116
  %143 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4493
  %tobool119 = icmp ne %struct.ID* %143, null, !dbg !4491
  br i1 %tobool119, label %for.body120, label %for.end128, !dbg !4491

for.body120:                                      ; preds = %for.cond118
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt121, metadata !4495, metadata !DIExpression()), !dbg !4497
  %144 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4497
  %call122 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %144), !dbg !4497
  store %struct.AnimData* %call122, %struct.AnimData** %adt121, align 8, !dbg !4497
  %145 = load %struct.AnimData*, %struct.AnimData** %adt121, align 8, !dbg !4498
  %tobool123 = icmp ne %struct.AnimData* %145, null, !dbg !4498
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !4497

if.then124:                                       ; preds = %for.body120
  %146 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4498
  %147 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4498
  %148 = load %struct.AnimData*, %struct.AnimData** %adt121, align 8, !dbg !4498
  %149 = load i8*, i8** %user_data.addr, align 8, !dbg !4498
  call void %146(%struct.ID* %147, %struct.AnimData* %148, i8* %149), !dbg !4498
  br label %if.end125, !dbg !4498

if.end125:                                        ; preds = %if.then124, %for.body120
  br label %for.inc126, !dbg !4497

for.inc126:                                       ; preds = %if.end125
  %150 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4493
  %next127 = getelementptr inbounds %struct.ID, %struct.ID* %150, i32 0, i32 0, !dbg !4493
  %151 = load i8*, i8** %next127, align 8, !dbg !4493
  %152 = bitcast i8* %151 to %struct.ID*, !dbg !4493
  store %struct.ID* %152, %struct.ID** %id, align 8, !dbg !4493
  br label %for.cond118, !dbg !4493, !llvm.loop !4500

for.end128:                                       ; preds = %for.cond118
  %153 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4501
  %latt = getelementptr inbounds %struct.Main, %struct.Main* %153, i32 0, i32 20, !dbg !4501
  %first129 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %latt, i32 0, i32 0, !dbg !4501
  %154 = load i8*, i8** %first129, align 8, !dbg !4501
  %155 = bitcast i8* %154 to %struct.ID*, !dbg !4501
  store %struct.ID* %155, %struct.ID** %id, align 8, !dbg !4501
  br label %for.cond130, !dbg !4501

for.cond130:                                      ; preds = %for.inc138, %for.end128
  %156 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4503
  %tobool131 = icmp ne %struct.ID* %156, null, !dbg !4501
  br i1 %tobool131, label %for.body132, label %for.end140, !dbg !4501

for.body132:                                      ; preds = %for.cond130
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt133, metadata !4505, metadata !DIExpression()), !dbg !4507
  %157 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4507
  %call134 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %157), !dbg !4507
  store %struct.AnimData* %call134, %struct.AnimData** %adt133, align 8, !dbg !4507
  %158 = load %struct.AnimData*, %struct.AnimData** %adt133, align 8, !dbg !4508
  %tobool135 = icmp ne %struct.AnimData* %158, null, !dbg !4508
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !4507

if.then136:                                       ; preds = %for.body132
  %159 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4508
  %160 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4508
  %161 = load %struct.AnimData*, %struct.AnimData** %adt133, align 8, !dbg !4508
  %162 = load i8*, i8** %user_data.addr, align 8, !dbg !4508
  call void %159(%struct.ID* %160, %struct.AnimData* %161, i8* %162), !dbg !4508
  br label %if.end137, !dbg !4508

if.end137:                                        ; preds = %if.then136, %for.body132
  br label %for.inc138, !dbg !4507

for.inc138:                                       ; preds = %if.end137
  %163 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4503
  %next139 = getelementptr inbounds %struct.ID, %struct.ID* %163, i32 0, i32 0, !dbg !4503
  %164 = load i8*, i8** %next139, align 8, !dbg !4503
  %165 = bitcast i8* %164 to %struct.ID*, !dbg !4503
  store %struct.ID* %165, %struct.ID** %id, align 8, !dbg !4503
  br label %for.cond130, !dbg !4503, !llvm.loop !4510

for.end140:                                       ; preds = %for.cond130
  %166 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4511
  %mesh = getelementptr inbounds %struct.Main, %struct.Main* %166, i32 0, i32 14, !dbg !4511
  %first141 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mesh, i32 0, i32 0, !dbg !4511
  %167 = load i8*, i8** %first141, align 8, !dbg !4511
  %168 = bitcast i8* %167 to %struct.ID*, !dbg !4511
  store %struct.ID* %168, %struct.ID** %id, align 8, !dbg !4511
  br label %for.cond142, !dbg !4511

for.cond142:                                      ; preds = %for.inc150, %for.end140
  %169 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4513
  %tobool143 = icmp ne %struct.ID* %169, null, !dbg !4511
  br i1 %tobool143, label %for.body144, label %for.end152, !dbg !4511

for.body144:                                      ; preds = %for.cond142
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt145, metadata !4515, metadata !DIExpression()), !dbg !4517
  %170 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4517
  %call146 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %170), !dbg !4517
  store %struct.AnimData* %call146, %struct.AnimData** %adt145, align 8, !dbg !4517
  %171 = load %struct.AnimData*, %struct.AnimData** %adt145, align 8, !dbg !4518
  %tobool147 = icmp ne %struct.AnimData* %171, null, !dbg !4518
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !4517

if.then148:                                       ; preds = %for.body144
  %172 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4518
  %173 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4518
  %174 = load %struct.AnimData*, %struct.AnimData** %adt145, align 8, !dbg !4518
  %175 = load i8*, i8** %user_data.addr, align 8, !dbg !4518
  call void %172(%struct.ID* %173, %struct.AnimData* %174, i8* %175), !dbg !4518
  br label %if.end149, !dbg !4518

if.end149:                                        ; preds = %if.then148, %for.body144
  br label %for.inc150, !dbg !4517

for.inc150:                                       ; preds = %if.end149
  %176 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4513
  %next151 = getelementptr inbounds %struct.ID, %struct.ID* %176, i32 0, i32 0, !dbg !4513
  %177 = load i8*, i8** %next151, align 8, !dbg !4513
  %178 = bitcast i8* %177 to %struct.ID*, !dbg !4513
  store %struct.ID* %178, %struct.ID** %id, align 8, !dbg !4513
  br label %for.cond142, !dbg !4513, !llvm.loop !4520

for.end152:                                       ; preds = %for.cond142
  %179 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4521
  %particle = getelementptr inbounds %struct.Main, %struct.Main* %179, i32 0, i32 37, !dbg !4521
  %first153 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particle, i32 0, i32 0, !dbg !4521
  %180 = load i8*, i8** %first153, align 8, !dbg !4521
  %181 = bitcast i8* %180 to %struct.ID*, !dbg !4521
  store %struct.ID* %181, %struct.ID** %id, align 8, !dbg !4521
  br label %for.cond154, !dbg !4521

for.cond154:                                      ; preds = %for.inc162, %for.end152
  %182 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4523
  %tobool155 = icmp ne %struct.ID* %182, null, !dbg !4521
  br i1 %tobool155, label %for.body156, label %for.end164, !dbg !4521

for.body156:                                      ; preds = %for.cond154
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt157, metadata !4525, metadata !DIExpression()), !dbg !4527
  %183 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4527
  %call158 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %183), !dbg !4527
  store %struct.AnimData* %call158, %struct.AnimData** %adt157, align 8, !dbg !4527
  %184 = load %struct.AnimData*, %struct.AnimData** %adt157, align 8, !dbg !4528
  %tobool159 = icmp ne %struct.AnimData* %184, null, !dbg !4528
  br i1 %tobool159, label %if.then160, label %if.end161, !dbg !4527

if.then160:                                       ; preds = %for.body156
  %185 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4528
  %186 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4528
  %187 = load %struct.AnimData*, %struct.AnimData** %adt157, align 8, !dbg !4528
  %188 = load i8*, i8** %user_data.addr, align 8, !dbg !4528
  call void %185(%struct.ID* %186, %struct.AnimData* %187, i8* %188), !dbg !4528
  br label %if.end161, !dbg !4528

if.end161:                                        ; preds = %if.then160, %for.body156
  br label %for.inc162, !dbg !4527

for.inc162:                                       ; preds = %if.end161
  %189 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4523
  %next163 = getelementptr inbounds %struct.ID, %struct.ID* %189, i32 0, i32 0, !dbg !4523
  %190 = load i8*, i8** %next163, align 8, !dbg !4523
  %191 = bitcast i8* %190 to %struct.ID*, !dbg !4523
  store %struct.ID* %191, %struct.ID** %id, align 8, !dbg !4523
  br label %for.cond154, !dbg !4523, !llvm.loop !4530

for.end164:                                       ; preds = %for.cond154
  %192 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4531
  %speaker = getelementptr inbounds %struct.Main, %struct.Main* %192, i32 0, i32 30, !dbg !4531
  %first165 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %speaker, i32 0, i32 0, !dbg !4531
  %193 = load i8*, i8** %first165, align 8, !dbg !4531
  %194 = bitcast i8* %193 to %struct.ID*, !dbg !4531
  store %struct.ID* %194, %struct.ID** %id, align 8, !dbg !4531
  br label %for.cond166, !dbg !4531

for.cond166:                                      ; preds = %for.inc174, %for.end164
  %195 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4533
  %tobool167 = icmp ne %struct.ID* %195, null, !dbg !4531
  br i1 %tobool167, label %for.body168, label %for.end176, !dbg !4531

for.body168:                                      ; preds = %for.cond166
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt169, metadata !4535, metadata !DIExpression()), !dbg !4537
  %196 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4537
  %call170 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %196), !dbg !4537
  store %struct.AnimData* %call170, %struct.AnimData** %adt169, align 8, !dbg !4537
  %197 = load %struct.AnimData*, %struct.AnimData** %adt169, align 8, !dbg !4538
  %tobool171 = icmp ne %struct.AnimData* %197, null, !dbg !4538
  br i1 %tobool171, label %if.then172, label %if.end173, !dbg !4537

if.then172:                                       ; preds = %for.body168
  %198 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4538
  %199 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4538
  %200 = load %struct.AnimData*, %struct.AnimData** %adt169, align 8, !dbg !4538
  %201 = load i8*, i8** %user_data.addr, align 8, !dbg !4538
  call void %198(%struct.ID* %199, %struct.AnimData* %200, i8* %201), !dbg !4538
  br label %if.end173, !dbg !4538

if.end173:                                        ; preds = %if.then172, %for.body168
  br label %for.inc174, !dbg !4537

for.inc174:                                       ; preds = %if.end173
  %202 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4533
  %next175 = getelementptr inbounds %struct.ID, %struct.ID* %202, i32 0, i32 0, !dbg !4533
  %203 = load i8*, i8** %next175, align 8, !dbg !4533
  %204 = bitcast i8* %203 to %struct.ID*, !dbg !4533
  store %struct.ID* %204, %struct.ID** %id, align 8, !dbg !4533
  br label %for.cond166, !dbg !4533, !llvm.loop !4540

for.end176:                                       ; preds = %for.cond166
  %205 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4541
  %movieclip = getelementptr inbounds %struct.Main, %struct.Main* %205, i32 0, i32 42, !dbg !4541
  %first177 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %movieclip, i32 0, i32 0, !dbg !4541
  %206 = load i8*, i8** %first177, align 8, !dbg !4541
  %207 = bitcast i8* %206 to %struct.ID*, !dbg !4541
  store %struct.ID* %207, %struct.ID** %id, align 8, !dbg !4541
  br label %for.cond178, !dbg !4541

for.cond178:                                      ; preds = %for.inc186, %for.end176
  %208 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4543
  %tobool179 = icmp ne %struct.ID* %208, null, !dbg !4541
  br i1 %tobool179, label %for.body180, label %for.end188, !dbg !4541

for.body180:                                      ; preds = %for.cond178
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt181, metadata !4545, metadata !DIExpression()), !dbg !4547
  %209 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4547
  %call182 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %209), !dbg !4547
  store %struct.AnimData* %call182, %struct.AnimData** %adt181, align 8, !dbg !4547
  %210 = load %struct.AnimData*, %struct.AnimData** %adt181, align 8, !dbg !4548
  %tobool183 = icmp ne %struct.AnimData* %210, null, !dbg !4548
  br i1 %tobool183, label %if.then184, label %if.end185, !dbg !4547

if.then184:                                       ; preds = %for.body180
  %211 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4548
  %212 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4548
  %213 = load %struct.AnimData*, %struct.AnimData** %adt181, align 8, !dbg !4548
  %214 = load i8*, i8** %user_data.addr, align 8, !dbg !4548
  call void %211(%struct.ID* %212, %struct.AnimData* %213, i8* %214), !dbg !4548
  br label %if.end185, !dbg !4548

if.end185:                                        ; preds = %if.then184, %for.body180
  br label %for.inc186, !dbg !4547

for.inc186:                                       ; preds = %if.end185
  %215 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4543
  %next187 = getelementptr inbounds %struct.ID, %struct.ID* %215, i32 0, i32 0, !dbg !4543
  %216 = load i8*, i8** %next187, align 8, !dbg !4543
  %217 = bitcast i8* %216 to %struct.ID*, !dbg !4543
  store %struct.ID* %217, %struct.ID** %id, align 8, !dbg !4543
  br label %for.cond178, !dbg !4543, !llvm.loop !4550

for.end188:                                       ; preds = %for.cond178
  %218 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4551
  %object = getelementptr inbounds %struct.Main, %struct.Main* %218, i32 0, i32 13, !dbg !4551
  %first189 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !4551
  %219 = load i8*, i8** %first189, align 8, !dbg !4551
  %220 = bitcast i8* %219 to %struct.ID*, !dbg !4551
  store %struct.ID* %220, %struct.ID** %id, align 8, !dbg !4551
  br label %for.cond190, !dbg !4551

for.cond190:                                      ; preds = %for.inc198, %for.end188
  %221 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4553
  %tobool191 = icmp ne %struct.ID* %221, null, !dbg !4551
  br i1 %tobool191, label %for.body192, label %for.end200, !dbg !4551

for.body192:                                      ; preds = %for.cond190
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt193, metadata !4555, metadata !DIExpression()), !dbg !4557
  %222 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4557
  %call194 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %222), !dbg !4557
  store %struct.AnimData* %call194, %struct.AnimData** %adt193, align 8, !dbg !4557
  %223 = load %struct.AnimData*, %struct.AnimData** %adt193, align 8, !dbg !4558
  %tobool195 = icmp ne %struct.AnimData* %223, null, !dbg !4558
  br i1 %tobool195, label %if.then196, label %if.end197, !dbg !4557

if.then196:                                       ; preds = %for.body192
  %224 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4558
  %225 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4558
  %226 = load %struct.AnimData*, %struct.AnimData** %adt193, align 8, !dbg !4558
  %227 = load i8*, i8** %user_data.addr, align 8, !dbg !4558
  call void %224(%struct.ID* %225, %struct.AnimData* %226, i8* %227), !dbg !4558
  br label %if.end197, !dbg !4558

if.end197:                                        ; preds = %if.then196, %for.body192
  br label %for.inc198, !dbg !4557

for.inc198:                                       ; preds = %if.end197
  %228 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4553
  %next199 = getelementptr inbounds %struct.ID, %struct.ID* %228, i32 0, i32 0, !dbg !4553
  %229 = load i8*, i8** %next199, align 8, !dbg !4553
  %230 = bitcast i8* %229 to %struct.ID*, !dbg !4553
  store %struct.ID* %230, %struct.ID** %id, align 8, !dbg !4553
  br label %for.cond190, !dbg !4553, !llvm.loop !4560

for.end200:                                       ; preds = %for.cond190
  %231 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4561
  %mask = getelementptr inbounds %struct.Main, %struct.Main* %231, i32 0, i32 43, !dbg !4561
  %first201 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mask, i32 0, i32 0, !dbg !4561
  %232 = load i8*, i8** %first201, align 8, !dbg !4561
  %233 = bitcast i8* %232 to %struct.ID*, !dbg !4561
  store %struct.ID* %233, %struct.ID** %id, align 8, !dbg !4561
  br label %for.cond202, !dbg !4561

for.cond202:                                      ; preds = %for.inc210, %for.end200
  %234 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4563
  %tobool203 = icmp ne %struct.ID* %234, null, !dbg !4561
  br i1 %tobool203, label %for.body204, label %for.end212, !dbg !4561

for.body204:                                      ; preds = %for.cond202
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt205, metadata !4565, metadata !DIExpression()), !dbg !4567
  %235 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4567
  %call206 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %235), !dbg !4567
  store %struct.AnimData* %call206, %struct.AnimData** %adt205, align 8, !dbg !4567
  %236 = load %struct.AnimData*, %struct.AnimData** %adt205, align 8, !dbg !4568
  %tobool207 = icmp ne %struct.AnimData* %236, null, !dbg !4568
  br i1 %tobool207, label %if.then208, label %if.end209, !dbg !4567

if.then208:                                       ; preds = %for.body204
  %237 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4568
  %238 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4568
  %239 = load %struct.AnimData*, %struct.AnimData** %adt205, align 8, !dbg !4568
  %240 = load i8*, i8** %user_data.addr, align 8, !dbg !4568
  call void %237(%struct.ID* %238, %struct.AnimData* %239, i8* %240), !dbg !4568
  br label %if.end209, !dbg !4568

if.end209:                                        ; preds = %if.then208, %for.body204
  br label %for.inc210, !dbg !4567

for.inc210:                                       ; preds = %if.end209
  %241 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4563
  %next211 = getelementptr inbounds %struct.ID, %struct.ID* %241, i32 0, i32 0, !dbg !4563
  %242 = load i8*, i8** %next211, align 8, !dbg !4563
  %243 = bitcast i8* %242 to %struct.ID*, !dbg !4563
  store %struct.ID* %243, %struct.ID** %id, align 8, !dbg !4563
  br label %for.cond202, !dbg !4563, !llvm.loop !4570

for.end212:                                       ; preds = %for.cond202
  %244 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4571
  %world = getelementptr inbounds %struct.Main, %struct.Main* %244, i32 0, i32 25, !dbg !4571
  %first213 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %world, i32 0, i32 0, !dbg !4571
  %245 = load i8*, i8** %first213, align 8, !dbg !4571
  %246 = bitcast i8* %245 to %struct.ID*, !dbg !4571
  store %struct.ID* %246, %struct.ID** %id, align 8, !dbg !4571
  br label %for.cond214, !dbg !4571

for.cond214:                                      ; preds = %for.inc233, %for.end212
  %247 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4573
  %tobool215 = icmp ne %struct.ID* %247, null, !dbg !4571
  br i1 %tobool215, label %for.body216, label %for.end235, !dbg !4571

for.body216:                                      ; preds = %for.cond214
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt217, metadata !4575, metadata !DIExpression()), !dbg !4577
  %248 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4577
  %call218 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %248), !dbg !4577
  store %struct.AnimData* %call218, %struct.AnimData** %adt217, align 8, !dbg !4577
  call void @llvm.dbg.declare(metadata %struct.World** %ntp219, metadata !4578, metadata !DIExpression()), !dbg !4577
  %249 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4577
  %250 = bitcast %struct.ID* %249 to %struct.World*, !dbg !4577
  store %struct.World* %250, %struct.World** %ntp219, align 8, !dbg !4577
  %251 = load %struct.World*, %struct.World** %ntp219, align 8, !dbg !4579
  %nodetree220 = getelementptr inbounds %struct.World, %struct.World* %251, i32 0, i32 75, !dbg !4579
  %252 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree220, align 8, !dbg !4579
  %tobool221 = icmp ne %struct.bNodeTree* %252, null, !dbg !4579
  br i1 %tobool221, label %if.then222, label %if.end229, !dbg !4577

if.then222:                                       ; preds = %for.body216
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt2223, metadata !4581, metadata !DIExpression()), !dbg !4583
  %253 = load %struct.World*, %struct.World** %ntp219, align 8, !dbg !4583
  %nodetree224 = getelementptr inbounds %struct.World, %struct.World* %253, i32 0, i32 75, !dbg !4583
  %254 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree224, align 8, !dbg !4583
  %255 = bitcast %struct.bNodeTree* %254 to %struct.ID*, !dbg !4583
  %call225 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %255), !dbg !4583
  store %struct.AnimData* %call225, %struct.AnimData** %adt2223, align 8, !dbg !4583
  %256 = load %struct.AnimData*, %struct.AnimData** %adt2223, align 8, !dbg !4584
  %tobool226 = icmp ne %struct.AnimData* %256, null, !dbg !4584
  br i1 %tobool226, label %if.then227, label %if.end228, !dbg !4583

if.then227:                                       ; preds = %if.then222
  %257 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4584
  %258 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4584
  %259 = load %struct.AnimData*, %struct.AnimData** %adt2223, align 8, !dbg !4584
  %260 = load i8*, i8** %user_data.addr, align 8, !dbg !4584
  call void %257(%struct.ID* %258, %struct.AnimData* %259, i8* %260), !dbg !4584
  br label %if.end228, !dbg !4584

if.end228:                                        ; preds = %if.then227, %if.then222
  br label %if.end229, !dbg !4583

if.end229:                                        ; preds = %if.end228, %for.body216
  %261 = load %struct.AnimData*, %struct.AnimData** %adt217, align 8, !dbg !4586
  %tobool230 = icmp ne %struct.AnimData* %261, null, !dbg !4586
  br i1 %tobool230, label %if.then231, label %if.end232, !dbg !4577

if.then231:                                       ; preds = %if.end229
  %262 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4586
  %263 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4586
  %264 = load %struct.AnimData*, %struct.AnimData** %adt217, align 8, !dbg !4586
  %265 = load i8*, i8** %user_data.addr, align 8, !dbg !4586
  call void %262(%struct.ID* %263, %struct.AnimData* %264, i8* %265), !dbg !4586
  br label %if.end232, !dbg !4586

if.end232:                                        ; preds = %if.then231, %if.end229
  br label %for.inc233, !dbg !4577

for.inc233:                                       ; preds = %if.end232
  %266 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4573
  %next234 = getelementptr inbounds %struct.ID, %struct.ID* %266, i32 0, i32 0, !dbg !4573
  %267 = load i8*, i8** %next234, align 8, !dbg !4573
  %268 = bitcast i8* %267 to %struct.ID*, !dbg !4573
  store %struct.ID* %268, %struct.ID** %id, align 8, !dbg !4573
  br label %for.cond214, !dbg !4573, !llvm.loop !4588

for.end235:                                       ; preds = %for.cond214
  %269 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4589
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %269, i32 0, i32 11, !dbg !4589
  %first236 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene, i32 0, i32 0, !dbg !4589
  %270 = load i8*, i8** %first236, align 8, !dbg !4589
  %271 = bitcast i8* %270 to %struct.ID*, !dbg !4589
  store %struct.ID* %271, %struct.ID** %id, align 8, !dbg !4589
  br label %for.cond237, !dbg !4589

for.cond237:                                      ; preds = %for.inc256, %for.end235
  %272 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4591
  %tobool238 = icmp ne %struct.ID* %272, null, !dbg !4589
  br i1 %tobool238, label %for.body239, label %for.end258, !dbg !4589

for.body239:                                      ; preds = %for.cond237
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt240, metadata !4593, metadata !DIExpression()), !dbg !4595
  %273 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4595
  %call241 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %273), !dbg !4595
  store %struct.AnimData* %call241, %struct.AnimData** %adt240, align 8, !dbg !4595
  call void @llvm.dbg.declare(metadata %struct.Scene** %ntp242, metadata !4596, metadata !DIExpression()), !dbg !4595
  %274 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4595
  %275 = bitcast %struct.ID* %274 to %struct.Scene*, !dbg !4595
  store %struct.Scene* %275, %struct.Scene** %ntp242, align 8, !dbg !4595
  %276 = load %struct.Scene*, %struct.Scene** %ntp242, align 8, !dbg !4597
  %nodetree243 = getelementptr inbounds %struct.Scene, %struct.Scene* %276, i32 0, i32 18, !dbg !4597
  %277 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree243, align 8, !dbg !4597
  %tobool244 = icmp ne %struct.bNodeTree* %277, null, !dbg !4597
  br i1 %tobool244, label %if.then245, label %if.end252, !dbg !4595

if.then245:                                       ; preds = %for.body239
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt2246, metadata !4599, metadata !DIExpression()), !dbg !4601
  %278 = load %struct.Scene*, %struct.Scene** %ntp242, align 8, !dbg !4601
  %nodetree247 = getelementptr inbounds %struct.Scene, %struct.Scene* %278, i32 0, i32 18, !dbg !4601
  %279 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree247, align 8, !dbg !4601
  %280 = bitcast %struct.bNodeTree* %279 to %struct.ID*, !dbg !4601
  %call248 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %280), !dbg !4601
  store %struct.AnimData* %call248, %struct.AnimData** %adt2246, align 8, !dbg !4601
  %281 = load %struct.AnimData*, %struct.AnimData** %adt2246, align 8, !dbg !4602
  %tobool249 = icmp ne %struct.AnimData* %281, null, !dbg !4602
  br i1 %tobool249, label %if.then250, label %if.end251, !dbg !4601

if.then250:                                       ; preds = %if.then245
  %282 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4602
  %283 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4602
  %284 = load %struct.AnimData*, %struct.AnimData** %adt2246, align 8, !dbg !4602
  %285 = load i8*, i8** %user_data.addr, align 8, !dbg !4602
  call void %282(%struct.ID* %283, %struct.AnimData* %284, i8* %285), !dbg !4602
  br label %if.end251, !dbg !4602

if.end251:                                        ; preds = %if.then250, %if.then245
  br label %if.end252, !dbg !4601

if.end252:                                        ; preds = %if.end251, %for.body239
  %286 = load %struct.AnimData*, %struct.AnimData** %adt240, align 8, !dbg !4604
  %tobool253 = icmp ne %struct.AnimData* %286, null, !dbg !4604
  br i1 %tobool253, label %if.then254, label %if.end255, !dbg !4595

if.then254:                                       ; preds = %if.end252
  %287 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4604
  %288 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4604
  %289 = load %struct.AnimData*, %struct.AnimData** %adt240, align 8, !dbg !4604
  %290 = load i8*, i8** %user_data.addr, align 8, !dbg !4604
  call void %287(%struct.ID* %288, %struct.AnimData* %289, i8* %290), !dbg !4604
  br label %if.end255, !dbg !4604

if.end255:                                        ; preds = %if.then254, %if.end252
  br label %for.inc256, !dbg !4595

for.inc256:                                       ; preds = %if.end255
  %291 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4591
  %next257 = getelementptr inbounds %struct.ID, %struct.ID* %291, i32 0, i32 0, !dbg !4591
  %292 = load i8*, i8** %next257, align 8, !dbg !4591
  %293 = bitcast i8* %292 to %struct.ID*, !dbg !4591
  store %struct.ID* %293, %struct.ID** %id, align 8, !dbg !4591
  br label %for.cond237, !dbg !4591, !llvm.loop !4606

for.end258:                                       ; preds = %for.cond237
  %294 = load %struct.Main*, %struct.Main** %mainptr.addr, align 8, !dbg !4607
  %linestyle = getelementptr inbounds %struct.Main, %struct.Main* %294, i32 0, i32 44, !dbg !4607
  %first259 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %linestyle, i32 0, i32 0, !dbg !4607
  %295 = load i8*, i8** %first259, align 8, !dbg !4607
  %296 = bitcast i8* %295 to %struct.ID*, !dbg !4607
  store %struct.ID* %296, %struct.ID** %id, align 8, !dbg !4607
  br label %for.cond260, !dbg !4607

for.cond260:                                      ; preds = %for.inc268, %for.end258
  %297 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4609
  %tobool261 = icmp ne %struct.ID* %297, null, !dbg !4607
  br i1 %tobool261, label %for.body262, label %for.end270, !dbg !4607

for.body262:                                      ; preds = %for.cond260
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt263, metadata !4611, metadata !DIExpression()), !dbg !4613
  %298 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4613
  %call264 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %298), !dbg !4613
  store %struct.AnimData* %call264, %struct.AnimData** %adt263, align 8, !dbg !4613
  %299 = load %struct.AnimData*, %struct.AnimData** %adt263, align 8, !dbg !4614
  %tobool265 = icmp ne %struct.AnimData* %299, null, !dbg !4614
  br i1 %tobool265, label %if.then266, label %if.end267, !dbg !4613

if.then266:                                       ; preds = %for.body262
  %300 = load void (%struct.ID*, %struct.AnimData*, i8*)*, void (%struct.ID*, %struct.AnimData*, i8*)** %func.addr, align 8, !dbg !4614
  %301 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4614
  %302 = load %struct.AnimData*, %struct.AnimData** %adt263, align 8, !dbg !4614
  %303 = load i8*, i8** %user_data.addr, align 8, !dbg !4614
  call void %300(%struct.ID* %301, %struct.AnimData* %302, i8* %303), !dbg !4614
  br label %if.end267, !dbg !4614

if.end267:                                        ; preds = %if.then266, %for.body262
  br label %for.inc268, !dbg !4613

for.inc268:                                       ; preds = %if.end267
  %304 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4609
  %next269 = getelementptr inbounds %struct.ID, %struct.ID* %304, i32 0, i32 0, !dbg !4609
  %305 = load i8*, i8** %next269, align 8, !dbg !4609
  %306 = bitcast i8* %305 to %struct.ID*, !dbg !4609
  store %struct.ID* %306, %struct.ID** %id, align 8, !dbg !4609
  br label %for.cond260, !dbg !4609, !llvm.loop !4616

for.end270:                                       ; preds = %for.cond260
  ret void, !dbg !4617
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_all_animdata_fix_paths_rename(%struct.ID* %ref_id, i8* %prefix, i8* %oldName, i8* %newName) #0 !dbg !4618 {
entry:
  %ref_id.addr = alloca %struct.ID*, align 8
  %prefix.addr = alloca i8*, align 8
  %oldName.addr = alloca i8*, align 8
  %newName.addr = alloca i8*, align 8
  %mainptr = alloca %struct.Main*, align 8
  %id = alloca %struct.ID*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %adt5 = alloca %struct.AnimData*, align 8
  %ntp = alloca %struct.Tex*, align 8
  %adt2 = alloca %struct.AnimData*, align 8
  %adt19 = alloca %struct.AnimData*, align 8
  %ntp21 = alloca %struct.Lamp*, align 8
  %adt225 = alloca %struct.AnimData*, align 8
  %adt37 = alloca %struct.AnimData*, align 8
  %ntp39 = alloca %struct.Material*, align 8
  %adt243 = alloca %struct.AnimData*, align 8
  %adt55 = alloca %struct.AnimData*, align 8
  %adt64 = alloca %struct.AnimData*, align 8
  %adt73 = alloca %struct.AnimData*, align 8
  %adt82 = alloca %struct.AnimData*, align 8
  %adt91 = alloca %struct.AnimData*, align 8
  %adt100 = alloca %struct.AnimData*, align 8
  %adt109 = alloca %struct.AnimData*, align 8
  %adt118 = alloca %struct.AnimData*, align 8
  %adt127 = alloca %struct.AnimData*, align 8
  %adt136 = alloca %struct.AnimData*, align 8
  %adt145 = alloca %struct.AnimData*, align 8
  %adt154 = alloca %struct.AnimData*, align 8
  %adt163 = alloca %struct.AnimData*, align 8
  %ntp165 = alloca %struct.World*, align 8
  %adt2169 = alloca %struct.AnimData*, align 8
  %adt181 = alloca %struct.AnimData*, align 8
  %adt190 = alloca %struct.AnimData*, align 8
  %ntp192 = alloca %struct.Scene*, align 8
  %adt2196 = alloca %struct.AnimData*, align 8
  store %struct.ID* %ref_id, %struct.ID** %ref_id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %ref_id.addr, metadata !4621, metadata !DIExpression()), !dbg !4622
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !4623, metadata !DIExpression()), !dbg !4624
  store i8* %oldName, i8** %oldName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldName.addr, metadata !4625, metadata !DIExpression()), !dbg !4626
  store i8* %newName, i8** %newName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newName.addr, metadata !4627, metadata !DIExpression()), !dbg !4628
  call void @llvm.dbg.declare(metadata %struct.Main** %mainptr, metadata !4629, metadata !DIExpression()), !dbg !4630
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4631
  store %struct.Main* %0, %struct.Main** %mainptr, align 8, !dbg !4630
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !4632, metadata !DIExpression()), !dbg !4633
  %1 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4634
  %nodetree = getelementptr inbounds %struct.Main, %struct.Main* %1, i32 0, i32 35, !dbg !4634
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodetree, i32 0, i32 0, !dbg !4634
  %2 = load i8*, i8** %first, align 8, !dbg !4634
  %3 = bitcast i8* %2 to %struct.ID*, !dbg !4634
  store %struct.ID* %3, %struct.ID** %id, align 8, !dbg !4634
  br label %for.cond, !dbg !4634

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4636
  %tobool = icmp ne %struct.ID* %4, null, !dbg !4634
  br i1 %tobool, label %for.body, label %for.end, !dbg !4634

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !4638, metadata !DIExpression()), !dbg !4640
  %5 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4640
  %call = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %5), !dbg !4640
  store %struct.AnimData* %call, %struct.AnimData** %adt, align 8, !dbg !4640
  %6 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4640
  %7 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4640
  %8 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4640
  %9 = load i8*, i8** %prefix.addr, align 8, !dbg !4640
  %10 = load i8*, i8** %oldName.addr, align 8, !dbg !4640
  %11 = load i8*, i8** %newName.addr, align 8, !dbg !4640
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %6, %struct.AnimData* %7, %struct.ID* %8, i8* %9, i8* %10, i8* %11, i32 0, i32 0, i8 zeroext 1), !dbg !4640
  br label %for.inc, !dbg !4640

for.inc:                                          ; preds = %for.body
  %12 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4636
  %next = getelementptr inbounds %struct.ID, %struct.ID* %12, i32 0, i32 0, !dbg !4636
  %13 = load i8*, i8** %next, align 8, !dbg !4636
  %14 = bitcast i8* %13 to %struct.ID*, !dbg !4636
  store %struct.ID* %14, %struct.ID** %id, align 8, !dbg !4636
  br label %for.cond, !dbg !4636, !llvm.loop !4641

for.end:                                          ; preds = %for.cond
  %15 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4642
  %tex = getelementptr inbounds %struct.Main, %struct.Main* %15, i32 0, i32 18, !dbg !4642
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %tex, i32 0, i32 0, !dbg !4642
  %16 = load i8*, i8** %first1, align 8, !dbg !4642
  %17 = bitcast i8* %16 to %struct.ID*, !dbg !4642
  store %struct.ID* %17, %struct.ID** %id, align 8, !dbg !4642
  br label %for.cond2, !dbg !4642

for.cond2:                                        ; preds = %for.inc12, %for.end
  %18 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4644
  %tobool3 = icmp ne %struct.ID* %18, null, !dbg !4642
  br i1 %tobool3, label %for.body4, label %for.end14, !dbg !4642

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt5, metadata !4646, metadata !DIExpression()), !dbg !4648
  %19 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4648
  %call6 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %19), !dbg !4648
  store %struct.AnimData* %call6, %struct.AnimData** %adt5, align 8, !dbg !4648
  call void @llvm.dbg.declare(metadata %struct.Tex** %ntp, metadata !4649, metadata !DIExpression()), !dbg !4648
  %20 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4648
  %21 = bitcast %struct.ID* %20 to %struct.Tex*, !dbg !4648
  store %struct.Tex* %21, %struct.Tex** %ntp, align 8, !dbg !4648
  %22 = load %struct.Tex*, %struct.Tex** %ntp, align 8, !dbg !4650
  %nodetree7 = getelementptr inbounds %struct.Tex, %struct.Tex* %22, i32 0, i32 52, !dbg !4650
  %23 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree7, align 8, !dbg !4650
  %tobool8 = icmp ne %struct.bNodeTree* %23, null, !dbg !4650
  br i1 %tobool8, label %if.then, label %if.end, !dbg !4648

if.then:                                          ; preds = %for.body4
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt2, metadata !4652, metadata !DIExpression()), !dbg !4654
  %24 = load %struct.Tex*, %struct.Tex** %ntp, align 8, !dbg !4654
  %nodetree9 = getelementptr inbounds %struct.Tex, %struct.Tex* %24, i32 0, i32 52, !dbg !4654
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree9, align 8, !dbg !4654
  %26 = bitcast %struct.bNodeTree* %25 to %struct.ID*, !dbg !4654
  %call10 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %26), !dbg !4654
  store %struct.AnimData* %call10, %struct.AnimData** %adt2, align 8, !dbg !4654
  %27 = load %struct.Tex*, %struct.Tex** %ntp, align 8, !dbg !4654
  %nodetree11 = getelementptr inbounds %struct.Tex, %struct.Tex* %27, i32 0, i32 52, !dbg !4654
  %28 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree11, align 8, !dbg !4654
  %29 = bitcast %struct.bNodeTree* %28 to %struct.ID*, !dbg !4654
  %30 = load %struct.AnimData*, %struct.AnimData** %adt2, align 8, !dbg !4654
  %31 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4654
  %32 = load i8*, i8** %prefix.addr, align 8, !dbg !4654
  %33 = load i8*, i8** %oldName.addr, align 8, !dbg !4654
  %34 = load i8*, i8** %newName.addr, align 8, !dbg !4654
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %29, %struct.AnimData* %30, %struct.ID* %31, i8* %32, i8* %33, i8* %34, i32 0, i32 0, i8 zeroext 1), !dbg !4654
  br label %if.end, !dbg !4654

if.end:                                           ; preds = %if.then, %for.body4
  %35 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4648
  %36 = load %struct.AnimData*, %struct.AnimData** %adt5, align 8, !dbg !4648
  %37 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4648
  %38 = load i8*, i8** %prefix.addr, align 8, !dbg !4648
  %39 = load i8*, i8** %oldName.addr, align 8, !dbg !4648
  %40 = load i8*, i8** %newName.addr, align 8, !dbg !4648
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %35, %struct.AnimData* %36, %struct.ID* %37, i8* %38, i8* %39, i8* %40, i32 0, i32 0, i8 zeroext 1), !dbg !4648
  br label %for.inc12, !dbg !4648

for.inc12:                                        ; preds = %if.end
  %41 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4644
  %next13 = getelementptr inbounds %struct.ID, %struct.ID* %41, i32 0, i32 0, !dbg !4644
  %42 = load i8*, i8** %next13, align 8, !dbg !4644
  %43 = bitcast i8* %42 to %struct.ID*, !dbg !4644
  store %struct.ID* %43, %struct.ID** %id, align 8, !dbg !4644
  br label %for.cond2, !dbg !4644, !llvm.loop !4655

for.end14:                                        ; preds = %for.cond2
  %44 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4656
  %lamp = getelementptr inbounds %struct.Main, %struct.Main* %44, i32 0, i32 21, !dbg !4656
  %first15 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lamp, i32 0, i32 0, !dbg !4656
  %45 = load i8*, i8** %first15, align 8, !dbg !4656
  %46 = bitcast i8* %45 to %struct.ID*, !dbg !4656
  store %struct.ID* %46, %struct.ID** %id, align 8, !dbg !4656
  br label %for.cond16, !dbg !4656

for.cond16:                                       ; preds = %for.inc30, %for.end14
  %47 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4658
  %tobool17 = icmp ne %struct.ID* %47, null, !dbg !4656
  br i1 %tobool17, label %for.body18, label %for.end32, !dbg !4656

for.body18:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt19, metadata !4660, metadata !DIExpression()), !dbg !4662
  %48 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4662
  %call20 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %48), !dbg !4662
  store %struct.AnimData* %call20, %struct.AnimData** %adt19, align 8, !dbg !4662
  call void @llvm.dbg.declare(metadata %struct.Lamp** %ntp21, metadata !4663, metadata !DIExpression()), !dbg !4662
  %49 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4662
  %50 = bitcast %struct.ID* %49 to %struct.Lamp*, !dbg !4662
  store %struct.Lamp* %50, %struct.Lamp** %ntp21, align 8, !dbg !4662
  %51 = load %struct.Lamp*, %struct.Lamp** %ntp21, align 8, !dbg !4664
  %nodetree22 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %51, i32 0, i32 74, !dbg !4664
  %52 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree22, align 8, !dbg !4664
  %tobool23 = icmp ne %struct.bNodeTree* %52, null, !dbg !4664
  br i1 %tobool23, label %if.then24, label %if.end29, !dbg !4662

if.then24:                                        ; preds = %for.body18
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt225, metadata !4666, metadata !DIExpression()), !dbg !4668
  %53 = load %struct.Lamp*, %struct.Lamp** %ntp21, align 8, !dbg !4668
  %nodetree26 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %53, i32 0, i32 74, !dbg !4668
  %54 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree26, align 8, !dbg !4668
  %55 = bitcast %struct.bNodeTree* %54 to %struct.ID*, !dbg !4668
  %call27 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %55), !dbg !4668
  store %struct.AnimData* %call27, %struct.AnimData** %adt225, align 8, !dbg !4668
  %56 = load %struct.Lamp*, %struct.Lamp** %ntp21, align 8, !dbg !4668
  %nodetree28 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %56, i32 0, i32 74, !dbg !4668
  %57 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree28, align 8, !dbg !4668
  %58 = bitcast %struct.bNodeTree* %57 to %struct.ID*, !dbg !4668
  %59 = load %struct.AnimData*, %struct.AnimData** %adt225, align 8, !dbg !4668
  %60 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4668
  %61 = load i8*, i8** %prefix.addr, align 8, !dbg !4668
  %62 = load i8*, i8** %oldName.addr, align 8, !dbg !4668
  %63 = load i8*, i8** %newName.addr, align 8, !dbg !4668
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %58, %struct.AnimData* %59, %struct.ID* %60, i8* %61, i8* %62, i8* %63, i32 0, i32 0, i8 zeroext 1), !dbg !4668
  br label %if.end29, !dbg !4668

if.end29:                                         ; preds = %if.then24, %for.body18
  %64 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4662
  %65 = load %struct.AnimData*, %struct.AnimData** %adt19, align 8, !dbg !4662
  %66 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4662
  %67 = load i8*, i8** %prefix.addr, align 8, !dbg !4662
  %68 = load i8*, i8** %oldName.addr, align 8, !dbg !4662
  %69 = load i8*, i8** %newName.addr, align 8, !dbg !4662
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %64, %struct.AnimData* %65, %struct.ID* %66, i8* %67, i8* %68, i8* %69, i32 0, i32 0, i8 zeroext 1), !dbg !4662
  br label %for.inc30, !dbg !4662

for.inc30:                                        ; preds = %if.end29
  %70 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4658
  %next31 = getelementptr inbounds %struct.ID, %struct.ID* %70, i32 0, i32 0, !dbg !4658
  %71 = load i8*, i8** %next31, align 8, !dbg !4658
  %72 = bitcast i8* %71 to %struct.ID*, !dbg !4658
  store %struct.ID* %72, %struct.ID** %id, align 8, !dbg !4658
  br label %for.cond16, !dbg !4658, !llvm.loop !4669

for.end32:                                        ; preds = %for.cond16
  %73 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4670
  %mat = getelementptr inbounds %struct.Main, %struct.Main* %73, i32 0, i32 17, !dbg !4670
  %first33 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mat, i32 0, i32 0, !dbg !4670
  %74 = load i8*, i8** %first33, align 8, !dbg !4670
  %75 = bitcast i8* %74 to %struct.ID*, !dbg !4670
  store %struct.ID* %75, %struct.ID** %id, align 8, !dbg !4670
  br label %for.cond34, !dbg !4670

for.cond34:                                       ; preds = %for.inc48, %for.end32
  %76 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4672
  %tobool35 = icmp ne %struct.ID* %76, null, !dbg !4670
  br i1 %tobool35, label %for.body36, label %for.end50, !dbg !4670

for.body36:                                       ; preds = %for.cond34
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt37, metadata !4674, metadata !DIExpression()), !dbg !4676
  %77 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4676
  %call38 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %77), !dbg !4676
  store %struct.AnimData* %call38, %struct.AnimData** %adt37, align 8, !dbg !4676
  call void @llvm.dbg.declare(metadata %struct.Material** %ntp39, metadata !4677, metadata !DIExpression()), !dbg !4676
  %78 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4676
  %79 = bitcast %struct.ID* %78 to %struct.Material*, !dbg !4676
  store %struct.Material* %79, %struct.Material** %ntp39, align 8, !dbg !4676
  %80 = load %struct.Material*, %struct.Material** %ntp39, align 8, !dbg !4678
  %nodetree40 = getelementptr inbounds %struct.Material, %struct.Material* %80, i32 0, i32 103, !dbg !4678
  %81 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree40, align 8, !dbg !4678
  %tobool41 = icmp ne %struct.bNodeTree* %81, null, !dbg !4678
  br i1 %tobool41, label %if.then42, label %if.end47, !dbg !4676

if.then42:                                        ; preds = %for.body36
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt243, metadata !4680, metadata !DIExpression()), !dbg !4682
  %82 = load %struct.Material*, %struct.Material** %ntp39, align 8, !dbg !4682
  %nodetree44 = getelementptr inbounds %struct.Material, %struct.Material* %82, i32 0, i32 103, !dbg !4682
  %83 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree44, align 8, !dbg !4682
  %84 = bitcast %struct.bNodeTree* %83 to %struct.ID*, !dbg !4682
  %call45 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %84), !dbg !4682
  store %struct.AnimData* %call45, %struct.AnimData** %adt243, align 8, !dbg !4682
  %85 = load %struct.Material*, %struct.Material** %ntp39, align 8, !dbg !4682
  %nodetree46 = getelementptr inbounds %struct.Material, %struct.Material* %85, i32 0, i32 103, !dbg !4682
  %86 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree46, align 8, !dbg !4682
  %87 = bitcast %struct.bNodeTree* %86 to %struct.ID*, !dbg !4682
  %88 = load %struct.AnimData*, %struct.AnimData** %adt243, align 8, !dbg !4682
  %89 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4682
  %90 = load i8*, i8** %prefix.addr, align 8, !dbg !4682
  %91 = load i8*, i8** %oldName.addr, align 8, !dbg !4682
  %92 = load i8*, i8** %newName.addr, align 8, !dbg !4682
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %87, %struct.AnimData* %88, %struct.ID* %89, i8* %90, i8* %91, i8* %92, i32 0, i32 0, i8 zeroext 1), !dbg !4682
  br label %if.end47, !dbg !4682

if.end47:                                         ; preds = %if.then42, %for.body36
  %93 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4676
  %94 = load %struct.AnimData*, %struct.AnimData** %adt37, align 8, !dbg !4676
  %95 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4676
  %96 = load i8*, i8** %prefix.addr, align 8, !dbg !4676
  %97 = load i8*, i8** %oldName.addr, align 8, !dbg !4676
  %98 = load i8*, i8** %newName.addr, align 8, !dbg !4676
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %93, %struct.AnimData* %94, %struct.ID* %95, i8* %96, i8* %97, i8* %98, i32 0, i32 0, i8 zeroext 1), !dbg !4676
  br label %for.inc48, !dbg !4676

for.inc48:                                        ; preds = %if.end47
  %99 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4672
  %next49 = getelementptr inbounds %struct.ID, %struct.ID* %99, i32 0, i32 0, !dbg !4672
  %100 = load i8*, i8** %next49, align 8, !dbg !4672
  %101 = bitcast i8* %100 to %struct.ID*, !dbg !4672
  store %struct.ID* %101, %struct.ID** %id, align 8, !dbg !4672
  br label %for.cond34, !dbg !4672, !llvm.loop !4683

for.end50:                                        ; preds = %for.cond34
  %102 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4684
  %camera = getelementptr inbounds %struct.Main, %struct.Main* %102, i32 0, i32 22, !dbg !4684
  %first51 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %camera, i32 0, i32 0, !dbg !4684
  %103 = load i8*, i8** %first51, align 8, !dbg !4684
  %104 = bitcast i8* %103 to %struct.ID*, !dbg !4684
  store %struct.ID* %104, %struct.ID** %id, align 8, !dbg !4684
  br label %for.cond52, !dbg !4684

for.cond52:                                       ; preds = %for.inc57, %for.end50
  %105 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4686
  %tobool53 = icmp ne %struct.ID* %105, null, !dbg !4684
  br i1 %tobool53, label %for.body54, label %for.end59, !dbg !4684

for.body54:                                       ; preds = %for.cond52
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt55, metadata !4688, metadata !DIExpression()), !dbg !4690
  %106 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4690
  %call56 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %106), !dbg !4690
  store %struct.AnimData* %call56, %struct.AnimData** %adt55, align 8, !dbg !4690
  %107 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4690
  %108 = load %struct.AnimData*, %struct.AnimData** %adt55, align 8, !dbg !4690
  %109 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4690
  %110 = load i8*, i8** %prefix.addr, align 8, !dbg !4690
  %111 = load i8*, i8** %oldName.addr, align 8, !dbg !4690
  %112 = load i8*, i8** %newName.addr, align 8, !dbg !4690
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %107, %struct.AnimData* %108, %struct.ID* %109, i8* %110, i8* %111, i8* %112, i32 0, i32 0, i8 zeroext 1), !dbg !4690
  br label %for.inc57, !dbg !4690

for.inc57:                                        ; preds = %for.body54
  %113 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4686
  %next58 = getelementptr inbounds %struct.ID, %struct.ID* %113, i32 0, i32 0, !dbg !4686
  %114 = load i8*, i8** %next58, align 8, !dbg !4686
  %115 = bitcast i8* %114 to %struct.ID*, !dbg !4686
  store %struct.ID* %115, %struct.ID** %id, align 8, !dbg !4686
  br label %for.cond52, !dbg !4686, !llvm.loop !4691

for.end59:                                        ; preds = %for.cond52
  %116 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4692
  %key = getelementptr inbounds %struct.Main, %struct.Main* %116, i32 0, i32 24, !dbg !4692
  %first60 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %key, i32 0, i32 0, !dbg !4692
  %117 = load i8*, i8** %first60, align 8, !dbg !4692
  %118 = bitcast i8* %117 to %struct.ID*, !dbg !4692
  store %struct.ID* %118, %struct.ID** %id, align 8, !dbg !4692
  br label %for.cond61, !dbg !4692

for.cond61:                                       ; preds = %for.inc66, %for.end59
  %119 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4694
  %tobool62 = icmp ne %struct.ID* %119, null, !dbg !4692
  br i1 %tobool62, label %for.body63, label %for.end68, !dbg !4692

for.body63:                                       ; preds = %for.cond61
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt64, metadata !4696, metadata !DIExpression()), !dbg !4698
  %120 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4698
  %call65 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %120), !dbg !4698
  store %struct.AnimData* %call65, %struct.AnimData** %adt64, align 8, !dbg !4698
  %121 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4698
  %122 = load %struct.AnimData*, %struct.AnimData** %adt64, align 8, !dbg !4698
  %123 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4698
  %124 = load i8*, i8** %prefix.addr, align 8, !dbg !4698
  %125 = load i8*, i8** %oldName.addr, align 8, !dbg !4698
  %126 = load i8*, i8** %newName.addr, align 8, !dbg !4698
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %121, %struct.AnimData* %122, %struct.ID* %123, i8* %124, i8* %125, i8* %126, i32 0, i32 0, i8 zeroext 1), !dbg !4698
  br label %for.inc66, !dbg !4698

for.inc66:                                        ; preds = %for.body63
  %127 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4694
  %next67 = getelementptr inbounds %struct.ID, %struct.ID* %127, i32 0, i32 0, !dbg !4694
  %128 = load i8*, i8** %next67, align 8, !dbg !4694
  %129 = bitcast i8* %128 to %struct.ID*, !dbg !4694
  store %struct.ID* %129, %struct.ID** %id, align 8, !dbg !4694
  br label %for.cond61, !dbg !4694, !llvm.loop !4699

for.end68:                                        ; preds = %for.cond61
  %130 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4700
  %mball = getelementptr inbounds %struct.Main, %struct.Main* %130, i32 0, i32 16, !dbg !4700
  %first69 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mball, i32 0, i32 0, !dbg !4700
  %131 = load i8*, i8** %first69, align 8, !dbg !4700
  %132 = bitcast i8* %131 to %struct.ID*, !dbg !4700
  store %struct.ID* %132, %struct.ID** %id, align 8, !dbg !4700
  br label %for.cond70, !dbg !4700

for.cond70:                                       ; preds = %for.inc75, %for.end68
  %133 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4702
  %tobool71 = icmp ne %struct.ID* %133, null, !dbg !4700
  br i1 %tobool71, label %for.body72, label %for.end77, !dbg !4700

for.body72:                                       ; preds = %for.cond70
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt73, metadata !4704, metadata !DIExpression()), !dbg !4706
  %134 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4706
  %call74 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %134), !dbg !4706
  store %struct.AnimData* %call74, %struct.AnimData** %adt73, align 8, !dbg !4706
  %135 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4706
  %136 = load %struct.AnimData*, %struct.AnimData** %adt73, align 8, !dbg !4706
  %137 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4706
  %138 = load i8*, i8** %prefix.addr, align 8, !dbg !4706
  %139 = load i8*, i8** %oldName.addr, align 8, !dbg !4706
  %140 = load i8*, i8** %newName.addr, align 8, !dbg !4706
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %135, %struct.AnimData* %136, %struct.ID* %137, i8* %138, i8* %139, i8* %140, i32 0, i32 0, i8 zeroext 1), !dbg !4706
  br label %for.inc75, !dbg !4706

for.inc75:                                        ; preds = %for.body72
  %141 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4702
  %next76 = getelementptr inbounds %struct.ID, %struct.ID* %141, i32 0, i32 0, !dbg !4702
  %142 = load i8*, i8** %next76, align 8, !dbg !4702
  %143 = bitcast i8* %142 to %struct.ID*, !dbg !4702
  store %struct.ID* %143, %struct.ID** %id, align 8, !dbg !4702
  br label %for.cond70, !dbg !4702, !llvm.loop !4707

for.end77:                                        ; preds = %for.cond70
  %144 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4708
  %curve = getelementptr inbounds %struct.Main, %struct.Main* %144, i32 0, i32 15, !dbg !4708
  %first78 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curve, i32 0, i32 0, !dbg !4708
  %145 = load i8*, i8** %first78, align 8, !dbg !4708
  %146 = bitcast i8* %145 to %struct.ID*, !dbg !4708
  store %struct.ID* %146, %struct.ID** %id, align 8, !dbg !4708
  br label %for.cond79, !dbg !4708

for.cond79:                                       ; preds = %for.inc84, %for.end77
  %147 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4710
  %tobool80 = icmp ne %struct.ID* %147, null, !dbg !4708
  br i1 %tobool80, label %for.body81, label %for.end86, !dbg !4708

for.body81:                                       ; preds = %for.cond79
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt82, metadata !4712, metadata !DIExpression()), !dbg !4714
  %148 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4714
  %call83 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %148), !dbg !4714
  store %struct.AnimData* %call83, %struct.AnimData** %adt82, align 8, !dbg !4714
  %149 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4714
  %150 = load %struct.AnimData*, %struct.AnimData** %adt82, align 8, !dbg !4714
  %151 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4714
  %152 = load i8*, i8** %prefix.addr, align 8, !dbg !4714
  %153 = load i8*, i8** %oldName.addr, align 8, !dbg !4714
  %154 = load i8*, i8** %newName.addr, align 8, !dbg !4714
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %149, %struct.AnimData* %150, %struct.ID* %151, i8* %152, i8* %153, i8* %154, i32 0, i32 0, i8 zeroext 1), !dbg !4714
  br label %for.inc84, !dbg !4714

for.inc84:                                        ; preds = %for.body81
  %155 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4710
  %next85 = getelementptr inbounds %struct.ID, %struct.ID* %155, i32 0, i32 0, !dbg !4710
  %156 = load i8*, i8** %next85, align 8, !dbg !4710
  %157 = bitcast i8* %156 to %struct.ID*, !dbg !4710
  store %struct.ID* %157, %struct.ID** %id, align 8, !dbg !4710
  br label %for.cond79, !dbg !4710, !llvm.loop !4715

for.end86:                                        ; preds = %for.cond79
  %158 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4716
  %armature = getelementptr inbounds %struct.Main, %struct.Main* %158, i32 0, i32 33, !dbg !4716
  %first87 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %armature, i32 0, i32 0, !dbg !4716
  %159 = load i8*, i8** %first87, align 8, !dbg !4716
  %160 = bitcast i8* %159 to %struct.ID*, !dbg !4716
  store %struct.ID* %160, %struct.ID** %id, align 8, !dbg !4716
  br label %for.cond88, !dbg !4716

for.cond88:                                       ; preds = %for.inc93, %for.end86
  %161 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4718
  %tobool89 = icmp ne %struct.ID* %161, null, !dbg !4716
  br i1 %tobool89, label %for.body90, label %for.end95, !dbg !4716

for.body90:                                       ; preds = %for.cond88
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt91, metadata !4720, metadata !DIExpression()), !dbg !4722
  %162 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4722
  %call92 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %162), !dbg !4722
  store %struct.AnimData* %call92, %struct.AnimData** %adt91, align 8, !dbg !4722
  %163 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4722
  %164 = load %struct.AnimData*, %struct.AnimData** %adt91, align 8, !dbg !4722
  %165 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4722
  %166 = load i8*, i8** %prefix.addr, align 8, !dbg !4722
  %167 = load i8*, i8** %oldName.addr, align 8, !dbg !4722
  %168 = load i8*, i8** %newName.addr, align 8, !dbg !4722
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %163, %struct.AnimData* %164, %struct.ID* %165, i8* %166, i8* %167, i8* %168, i32 0, i32 0, i8 zeroext 1), !dbg !4722
  br label %for.inc93, !dbg !4722

for.inc93:                                        ; preds = %for.body90
  %169 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4718
  %next94 = getelementptr inbounds %struct.ID, %struct.ID* %169, i32 0, i32 0, !dbg !4718
  %170 = load i8*, i8** %next94, align 8, !dbg !4718
  %171 = bitcast i8* %170 to %struct.ID*, !dbg !4718
  store %struct.ID* %171, %struct.ID** %id, align 8, !dbg !4718
  br label %for.cond88, !dbg !4718, !llvm.loop !4723

for.end95:                                        ; preds = %for.cond88
  %172 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4724
  %latt = getelementptr inbounds %struct.Main, %struct.Main* %172, i32 0, i32 20, !dbg !4724
  %first96 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %latt, i32 0, i32 0, !dbg !4724
  %173 = load i8*, i8** %first96, align 8, !dbg !4724
  %174 = bitcast i8* %173 to %struct.ID*, !dbg !4724
  store %struct.ID* %174, %struct.ID** %id, align 8, !dbg !4724
  br label %for.cond97, !dbg !4724

for.cond97:                                       ; preds = %for.inc102, %for.end95
  %175 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4726
  %tobool98 = icmp ne %struct.ID* %175, null, !dbg !4724
  br i1 %tobool98, label %for.body99, label %for.end104, !dbg !4724

for.body99:                                       ; preds = %for.cond97
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt100, metadata !4728, metadata !DIExpression()), !dbg !4730
  %176 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4730
  %call101 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %176), !dbg !4730
  store %struct.AnimData* %call101, %struct.AnimData** %adt100, align 8, !dbg !4730
  %177 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4730
  %178 = load %struct.AnimData*, %struct.AnimData** %adt100, align 8, !dbg !4730
  %179 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4730
  %180 = load i8*, i8** %prefix.addr, align 8, !dbg !4730
  %181 = load i8*, i8** %oldName.addr, align 8, !dbg !4730
  %182 = load i8*, i8** %newName.addr, align 8, !dbg !4730
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %177, %struct.AnimData* %178, %struct.ID* %179, i8* %180, i8* %181, i8* %182, i32 0, i32 0, i8 zeroext 1), !dbg !4730
  br label %for.inc102, !dbg !4730

for.inc102:                                       ; preds = %for.body99
  %183 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4726
  %next103 = getelementptr inbounds %struct.ID, %struct.ID* %183, i32 0, i32 0, !dbg !4726
  %184 = load i8*, i8** %next103, align 8, !dbg !4726
  %185 = bitcast i8* %184 to %struct.ID*, !dbg !4726
  store %struct.ID* %185, %struct.ID** %id, align 8, !dbg !4726
  br label %for.cond97, !dbg !4726, !llvm.loop !4731

for.end104:                                       ; preds = %for.cond97
  %186 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4732
  %mesh = getelementptr inbounds %struct.Main, %struct.Main* %186, i32 0, i32 14, !dbg !4732
  %first105 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mesh, i32 0, i32 0, !dbg !4732
  %187 = load i8*, i8** %first105, align 8, !dbg !4732
  %188 = bitcast i8* %187 to %struct.ID*, !dbg !4732
  store %struct.ID* %188, %struct.ID** %id, align 8, !dbg !4732
  br label %for.cond106, !dbg !4732

for.cond106:                                      ; preds = %for.inc111, %for.end104
  %189 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4734
  %tobool107 = icmp ne %struct.ID* %189, null, !dbg !4732
  br i1 %tobool107, label %for.body108, label %for.end113, !dbg !4732

for.body108:                                      ; preds = %for.cond106
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt109, metadata !4736, metadata !DIExpression()), !dbg !4738
  %190 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4738
  %call110 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %190), !dbg !4738
  store %struct.AnimData* %call110, %struct.AnimData** %adt109, align 8, !dbg !4738
  %191 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4738
  %192 = load %struct.AnimData*, %struct.AnimData** %adt109, align 8, !dbg !4738
  %193 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4738
  %194 = load i8*, i8** %prefix.addr, align 8, !dbg !4738
  %195 = load i8*, i8** %oldName.addr, align 8, !dbg !4738
  %196 = load i8*, i8** %newName.addr, align 8, !dbg !4738
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %191, %struct.AnimData* %192, %struct.ID* %193, i8* %194, i8* %195, i8* %196, i32 0, i32 0, i8 zeroext 1), !dbg !4738
  br label %for.inc111, !dbg !4738

for.inc111:                                       ; preds = %for.body108
  %197 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4734
  %next112 = getelementptr inbounds %struct.ID, %struct.ID* %197, i32 0, i32 0, !dbg !4734
  %198 = load i8*, i8** %next112, align 8, !dbg !4734
  %199 = bitcast i8* %198 to %struct.ID*, !dbg !4734
  store %struct.ID* %199, %struct.ID** %id, align 8, !dbg !4734
  br label %for.cond106, !dbg !4734, !llvm.loop !4739

for.end113:                                       ; preds = %for.cond106
  %200 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4740
  %particle = getelementptr inbounds %struct.Main, %struct.Main* %200, i32 0, i32 37, !dbg !4740
  %first114 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particle, i32 0, i32 0, !dbg !4740
  %201 = load i8*, i8** %first114, align 8, !dbg !4740
  %202 = bitcast i8* %201 to %struct.ID*, !dbg !4740
  store %struct.ID* %202, %struct.ID** %id, align 8, !dbg !4740
  br label %for.cond115, !dbg !4740

for.cond115:                                      ; preds = %for.inc120, %for.end113
  %203 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4742
  %tobool116 = icmp ne %struct.ID* %203, null, !dbg !4740
  br i1 %tobool116, label %for.body117, label %for.end122, !dbg !4740

for.body117:                                      ; preds = %for.cond115
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt118, metadata !4744, metadata !DIExpression()), !dbg !4746
  %204 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4746
  %call119 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %204), !dbg !4746
  store %struct.AnimData* %call119, %struct.AnimData** %adt118, align 8, !dbg !4746
  %205 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4746
  %206 = load %struct.AnimData*, %struct.AnimData** %adt118, align 8, !dbg !4746
  %207 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4746
  %208 = load i8*, i8** %prefix.addr, align 8, !dbg !4746
  %209 = load i8*, i8** %oldName.addr, align 8, !dbg !4746
  %210 = load i8*, i8** %newName.addr, align 8, !dbg !4746
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %205, %struct.AnimData* %206, %struct.ID* %207, i8* %208, i8* %209, i8* %210, i32 0, i32 0, i8 zeroext 1), !dbg !4746
  br label %for.inc120, !dbg !4746

for.inc120:                                       ; preds = %for.body117
  %211 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4742
  %next121 = getelementptr inbounds %struct.ID, %struct.ID* %211, i32 0, i32 0, !dbg !4742
  %212 = load i8*, i8** %next121, align 8, !dbg !4742
  %213 = bitcast i8* %212 to %struct.ID*, !dbg !4742
  store %struct.ID* %213, %struct.ID** %id, align 8, !dbg !4742
  br label %for.cond115, !dbg !4742, !llvm.loop !4747

for.end122:                                       ; preds = %for.cond115
  %214 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4748
  %speaker = getelementptr inbounds %struct.Main, %struct.Main* %214, i32 0, i32 30, !dbg !4748
  %first123 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %speaker, i32 0, i32 0, !dbg !4748
  %215 = load i8*, i8** %first123, align 8, !dbg !4748
  %216 = bitcast i8* %215 to %struct.ID*, !dbg !4748
  store %struct.ID* %216, %struct.ID** %id, align 8, !dbg !4748
  br label %for.cond124, !dbg !4748

for.cond124:                                      ; preds = %for.inc129, %for.end122
  %217 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4750
  %tobool125 = icmp ne %struct.ID* %217, null, !dbg !4748
  br i1 %tobool125, label %for.body126, label %for.end131, !dbg !4748

for.body126:                                      ; preds = %for.cond124
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt127, metadata !4752, metadata !DIExpression()), !dbg !4754
  %218 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4754
  %call128 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %218), !dbg !4754
  store %struct.AnimData* %call128, %struct.AnimData** %adt127, align 8, !dbg !4754
  %219 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4754
  %220 = load %struct.AnimData*, %struct.AnimData** %adt127, align 8, !dbg !4754
  %221 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4754
  %222 = load i8*, i8** %prefix.addr, align 8, !dbg !4754
  %223 = load i8*, i8** %oldName.addr, align 8, !dbg !4754
  %224 = load i8*, i8** %newName.addr, align 8, !dbg !4754
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %219, %struct.AnimData* %220, %struct.ID* %221, i8* %222, i8* %223, i8* %224, i32 0, i32 0, i8 zeroext 1), !dbg !4754
  br label %for.inc129, !dbg !4754

for.inc129:                                       ; preds = %for.body126
  %225 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4750
  %next130 = getelementptr inbounds %struct.ID, %struct.ID* %225, i32 0, i32 0, !dbg !4750
  %226 = load i8*, i8** %next130, align 8, !dbg !4750
  %227 = bitcast i8* %226 to %struct.ID*, !dbg !4750
  store %struct.ID* %227, %struct.ID** %id, align 8, !dbg !4750
  br label %for.cond124, !dbg !4750, !llvm.loop !4755

for.end131:                                       ; preds = %for.cond124
  %228 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4756
  %movieclip = getelementptr inbounds %struct.Main, %struct.Main* %228, i32 0, i32 42, !dbg !4756
  %first132 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %movieclip, i32 0, i32 0, !dbg !4756
  %229 = load i8*, i8** %first132, align 8, !dbg !4756
  %230 = bitcast i8* %229 to %struct.ID*, !dbg !4756
  store %struct.ID* %230, %struct.ID** %id, align 8, !dbg !4756
  br label %for.cond133, !dbg !4756

for.cond133:                                      ; preds = %for.inc138, %for.end131
  %231 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4758
  %tobool134 = icmp ne %struct.ID* %231, null, !dbg !4756
  br i1 %tobool134, label %for.body135, label %for.end140, !dbg !4756

for.body135:                                      ; preds = %for.cond133
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt136, metadata !4760, metadata !DIExpression()), !dbg !4762
  %232 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4762
  %call137 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %232), !dbg !4762
  store %struct.AnimData* %call137, %struct.AnimData** %adt136, align 8, !dbg !4762
  %233 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4762
  %234 = load %struct.AnimData*, %struct.AnimData** %adt136, align 8, !dbg !4762
  %235 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4762
  %236 = load i8*, i8** %prefix.addr, align 8, !dbg !4762
  %237 = load i8*, i8** %oldName.addr, align 8, !dbg !4762
  %238 = load i8*, i8** %newName.addr, align 8, !dbg !4762
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %233, %struct.AnimData* %234, %struct.ID* %235, i8* %236, i8* %237, i8* %238, i32 0, i32 0, i8 zeroext 1), !dbg !4762
  br label %for.inc138, !dbg !4762

for.inc138:                                       ; preds = %for.body135
  %239 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4758
  %next139 = getelementptr inbounds %struct.ID, %struct.ID* %239, i32 0, i32 0, !dbg !4758
  %240 = load i8*, i8** %next139, align 8, !dbg !4758
  %241 = bitcast i8* %240 to %struct.ID*, !dbg !4758
  store %struct.ID* %241, %struct.ID** %id, align 8, !dbg !4758
  br label %for.cond133, !dbg !4758, !llvm.loop !4763

for.end140:                                       ; preds = %for.cond133
  %242 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4764
  %object = getelementptr inbounds %struct.Main, %struct.Main* %242, i32 0, i32 13, !dbg !4764
  %first141 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !4764
  %243 = load i8*, i8** %first141, align 8, !dbg !4764
  %244 = bitcast i8* %243 to %struct.ID*, !dbg !4764
  store %struct.ID* %244, %struct.ID** %id, align 8, !dbg !4764
  br label %for.cond142, !dbg !4764

for.cond142:                                      ; preds = %for.inc147, %for.end140
  %245 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4766
  %tobool143 = icmp ne %struct.ID* %245, null, !dbg !4764
  br i1 %tobool143, label %for.body144, label %for.end149, !dbg !4764

for.body144:                                      ; preds = %for.cond142
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt145, metadata !4768, metadata !DIExpression()), !dbg !4770
  %246 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4770
  %call146 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %246), !dbg !4770
  store %struct.AnimData* %call146, %struct.AnimData** %adt145, align 8, !dbg !4770
  %247 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4770
  %248 = load %struct.AnimData*, %struct.AnimData** %adt145, align 8, !dbg !4770
  %249 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4770
  %250 = load i8*, i8** %prefix.addr, align 8, !dbg !4770
  %251 = load i8*, i8** %oldName.addr, align 8, !dbg !4770
  %252 = load i8*, i8** %newName.addr, align 8, !dbg !4770
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %247, %struct.AnimData* %248, %struct.ID* %249, i8* %250, i8* %251, i8* %252, i32 0, i32 0, i8 zeroext 1), !dbg !4770
  br label %for.inc147, !dbg !4770

for.inc147:                                       ; preds = %for.body144
  %253 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4766
  %next148 = getelementptr inbounds %struct.ID, %struct.ID* %253, i32 0, i32 0, !dbg !4766
  %254 = load i8*, i8** %next148, align 8, !dbg !4766
  %255 = bitcast i8* %254 to %struct.ID*, !dbg !4766
  store %struct.ID* %255, %struct.ID** %id, align 8, !dbg !4766
  br label %for.cond142, !dbg !4766, !llvm.loop !4771

for.end149:                                       ; preds = %for.cond142
  %256 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4772
  %mask = getelementptr inbounds %struct.Main, %struct.Main* %256, i32 0, i32 43, !dbg !4772
  %first150 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mask, i32 0, i32 0, !dbg !4772
  %257 = load i8*, i8** %first150, align 8, !dbg !4772
  %258 = bitcast i8* %257 to %struct.ID*, !dbg !4772
  store %struct.ID* %258, %struct.ID** %id, align 8, !dbg !4772
  br label %for.cond151, !dbg !4772

for.cond151:                                      ; preds = %for.inc156, %for.end149
  %259 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4774
  %tobool152 = icmp ne %struct.ID* %259, null, !dbg !4772
  br i1 %tobool152, label %for.body153, label %for.end158, !dbg !4772

for.body153:                                      ; preds = %for.cond151
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt154, metadata !4776, metadata !DIExpression()), !dbg !4778
  %260 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4778
  %call155 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %260), !dbg !4778
  store %struct.AnimData* %call155, %struct.AnimData** %adt154, align 8, !dbg !4778
  %261 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4778
  %262 = load %struct.AnimData*, %struct.AnimData** %adt154, align 8, !dbg !4778
  %263 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4778
  %264 = load i8*, i8** %prefix.addr, align 8, !dbg !4778
  %265 = load i8*, i8** %oldName.addr, align 8, !dbg !4778
  %266 = load i8*, i8** %newName.addr, align 8, !dbg !4778
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %261, %struct.AnimData* %262, %struct.ID* %263, i8* %264, i8* %265, i8* %266, i32 0, i32 0, i8 zeroext 1), !dbg !4778
  br label %for.inc156, !dbg !4778

for.inc156:                                       ; preds = %for.body153
  %267 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4774
  %next157 = getelementptr inbounds %struct.ID, %struct.ID* %267, i32 0, i32 0, !dbg !4774
  %268 = load i8*, i8** %next157, align 8, !dbg !4774
  %269 = bitcast i8* %268 to %struct.ID*, !dbg !4774
  store %struct.ID* %269, %struct.ID** %id, align 8, !dbg !4774
  br label %for.cond151, !dbg !4774, !llvm.loop !4779

for.end158:                                       ; preds = %for.cond151
  %270 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4780
  %world = getelementptr inbounds %struct.Main, %struct.Main* %270, i32 0, i32 25, !dbg !4780
  %first159 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %world, i32 0, i32 0, !dbg !4780
  %271 = load i8*, i8** %first159, align 8, !dbg !4780
  %272 = bitcast i8* %271 to %struct.ID*, !dbg !4780
  store %struct.ID* %272, %struct.ID** %id, align 8, !dbg !4780
  br label %for.cond160, !dbg !4780

for.cond160:                                      ; preds = %for.inc174, %for.end158
  %273 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4782
  %tobool161 = icmp ne %struct.ID* %273, null, !dbg !4780
  br i1 %tobool161, label %for.body162, label %for.end176, !dbg !4780

for.body162:                                      ; preds = %for.cond160
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt163, metadata !4784, metadata !DIExpression()), !dbg !4786
  %274 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4786
  %call164 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %274), !dbg !4786
  store %struct.AnimData* %call164, %struct.AnimData** %adt163, align 8, !dbg !4786
  call void @llvm.dbg.declare(metadata %struct.World** %ntp165, metadata !4787, metadata !DIExpression()), !dbg !4786
  %275 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4786
  %276 = bitcast %struct.ID* %275 to %struct.World*, !dbg !4786
  store %struct.World* %276, %struct.World** %ntp165, align 8, !dbg !4786
  %277 = load %struct.World*, %struct.World** %ntp165, align 8, !dbg !4788
  %nodetree166 = getelementptr inbounds %struct.World, %struct.World* %277, i32 0, i32 75, !dbg !4788
  %278 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree166, align 8, !dbg !4788
  %tobool167 = icmp ne %struct.bNodeTree* %278, null, !dbg !4788
  br i1 %tobool167, label %if.then168, label %if.end173, !dbg !4786

if.then168:                                       ; preds = %for.body162
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt2169, metadata !4790, metadata !DIExpression()), !dbg !4792
  %279 = load %struct.World*, %struct.World** %ntp165, align 8, !dbg !4792
  %nodetree170 = getelementptr inbounds %struct.World, %struct.World* %279, i32 0, i32 75, !dbg !4792
  %280 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree170, align 8, !dbg !4792
  %281 = bitcast %struct.bNodeTree* %280 to %struct.ID*, !dbg !4792
  %call171 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %281), !dbg !4792
  store %struct.AnimData* %call171, %struct.AnimData** %adt2169, align 8, !dbg !4792
  %282 = load %struct.World*, %struct.World** %ntp165, align 8, !dbg !4792
  %nodetree172 = getelementptr inbounds %struct.World, %struct.World* %282, i32 0, i32 75, !dbg !4792
  %283 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree172, align 8, !dbg !4792
  %284 = bitcast %struct.bNodeTree* %283 to %struct.ID*, !dbg !4792
  %285 = load %struct.AnimData*, %struct.AnimData** %adt2169, align 8, !dbg !4792
  %286 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4792
  %287 = load i8*, i8** %prefix.addr, align 8, !dbg !4792
  %288 = load i8*, i8** %oldName.addr, align 8, !dbg !4792
  %289 = load i8*, i8** %newName.addr, align 8, !dbg !4792
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %284, %struct.AnimData* %285, %struct.ID* %286, i8* %287, i8* %288, i8* %289, i32 0, i32 0, i8 zeroext 1), !dbg !4792
  br label %if.end173, !dbg !4792

if.end173:                                        ; preds = %if.then168, %for.body162
  %290 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4786
  %291 = load %struct.AnimData*, %struct.AnimData** %adt163, align 8, !dbg !4786
  %292 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4786
  %293 = load i8*, i8** %prefix.addr, align 8, !dbg !4786
  %294 = load i8*, i8** %oldName.addr, align 8, !dbg !4786
  %295 = load i8*, i8** %newName.addr, align 8, !dbg !4786
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %290, %struct.AnimData* %291, %struct.ID* %292, i8* %293, i8* %294, i8* %295, i32 0, i32 0, i8 zeroext 1), !dbg !4786
  br label %for.inc174, !dbg !4786

for.inc174:                                       ; preds = %if.end173
  %296 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4782
  %next175 = getelementptr inbounds %struct.ID, %struct.ID* %296, i32 0, i32 0, !dbg !4782
  %297 = load i8*, i8** %next175, align 8, !dbg !4782
  %298 = bitcast i8* %297 to %struct.ID*, !dbg !4782
  store %struct.ID* %298, %struct.ID** %id, align 8, !dbg !4782
  br label %for.cond160, !dbg !4782, !llvm.loop !4793

for.end176:                                       ; preds = %for.cond160
  %299 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4794
  %linestyle = getelementptr inbounds %struct.Main, %struct.Main* %299, i32 0, i32 44, !dbg !4794
  %first177 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %linestyle, i32 0, i32 0, !dbg !4794
  %300 = load i8*, i8** %first177, align 8, !dbg !4794
  %301 = bitcast i8* %300 to %struct.ID*, !dbg !4794
  store %struct.ID* %301, %struct.ID** %id, align 8, !dbg !4794
  br label %for.cond178, !dbg !4794

for.cond178:                                      ; preds = %for.inc183, %for.end176
  %302 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4796
  %tobool179 = icmp ne %struct.ID* %302, null, !dbg !4794
  br i1 %tobool179, label %for.body180, label %for.end185, !dbg !4794

for.body180:                                      ; preds = %for.cond178
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt181, metadata !4798, metadata !DIExpression()), !dbg !4800
  %303 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4800
  %call182 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %303), !dbg !4800
  store %struct.AnimData* %call182, %struct.AnimData** %adt181, align 8, !dbg !4800
  %304 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4800
  %305 = load %struct.AnimData*, %struct.AnimData** %adt181, align 8, !dbg !4800
  %306 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4800
  %307 = load i8*, i8** %prefix.addr, align 8, !dbg !4800
  %308 = load i8*, i8** %oldName.addr, align 8, !dbg !4800
  %309 = load i8*, i8** %newName.addr, align 8, !dbg !4800
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %304, %struct.AnimData* %305, %struct.ID* %306, i8* %307, i8* %308, i8* %309, i32 0, i32 0, i8 zeroext 1), !dbg !4800
  br label %for.inc183, !dbg !4800

for.inc183:                                       ; preds = %for.body180
  %310 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4796
  %next184 = getelementptr inbounds %struct.ID, %struct.ID* %310, i32 0, i32 0, !dbg !4796
  %311 = load i8*, i8** %next184, align 8, !dbg !4796
  %312 = bitcast i8* %311 to %struct.ID*, !dbg !4796
  store %struct.ID* %312, %struct.ID** %id, align 8, !dbg !4796
  br label %for.cond178, !dbg !4796, !llvm.loop !4801

for.end185:                                       ; preds = %for.cond178
  %313 = load %struct.Main*, %struct.Main** %mainptr, align 8, !dbg !4802
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %313, i32 0, i32 11, !dbg !4802
  %first186 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene, i32 0, i32 0, !dbg !4802
  %314 = load i8*, i8** %first186, align 8, !dbg !4802
  %315 = bitcast i8* %314 to %struct.ID*, !dbg !4802
  store %struct.ID* %315, %struct.ID** %id, align 8, !dbg !4802
  br label %for.cond187, !dbg !4802

for.cond187:                                      ; preds = %for.inc201, %for.end185
  %316 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4804
  %tobool188 = icmp ne %struct.ID* %316, null, !dbg !4802
  br i1 %tobool188, label %for.body189, label %for.end203, !dbg !4802

for.body189:                                      ; preds = %for.cond187
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt190, metadata !4806, metadata !DIExpression()), !dbg !4808
  %317 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4808
  %call191 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %317), !dbg !4808
  store %struct.AnimData* %call191, %struct.AnimData** %adt190, align 8, !dbg !4808
  call void @llvm.dbg.declare(metadata %struct.Scene** %ntp192, metadata !4809, metadata !DIExpression()), !dbg !4808
  %318 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4808
  %319 = bitcast %struct.ID* %318 to %struct.Scene*, !dbg !4808
  store %struct.Scene* %319, %struct.Scene** %ntp192, align 8, !dbg !4808
  %320 = load %struct.Scene*, %struct.Scene** %ntp192, align 8, !dbg !4810
  %nodetree193 = getelementptr inbounds %struct.Scene, %struct.Scene* %320, i32 0, i32 18, !dbg !4810
  %321 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree193, align 8, !dbg !4810
  %tobool194 = icmp ne %struct.bNodeTree* %321, null, !dbg !4810
  br i1 %tobool194, label %if.then195, label %if.end200, !dbg !4808

if.then195:                                       ; preds = %for.body189
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt2196, metadata !4812, metadata !DIExpression()), !dbg !4814
  %322 = load %struct.Scene*, %struct.Scene** %ntp192, align 8, !dbg !4814
  %nodetree197 = getelementptr inbounds %struct.Scene, %struct.Scene* %322, i32 0, i32 18, !dbg !4814
  %323 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree197, align 8, !dbg !4814
  %324 = bitcast %struct.bNodeTree* %323 to %struct.ID*, !dbg !4814
  %call198 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %324), !dbg !4814
  store %struct.AnimData* %call198, %struct.AnimData** %adt2196, align 8, !dbg !4814
  %325 = load %struct.Scene*, %struct.Scene** %ntp192, align 8, !dbg !4814
  %nodetree199 = getelementptr inbounds %struct.Scene, %struct.Scene* %325, i32 0, i32 18, !dbg !4814
  %326 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree199, align 8, !dbg !4814
  %327 = bitcast %struct.bNodeTree* %326 to %struct.ID*, !dbg !4814
  %328 = load %struct.AnimData*, %struct.AnimData** %adt2196, align 8, !dbg !4814
  %329 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4814
  %330 = load i8*, i8** %prefix.addr, align 8, !dbg !4814
  %331 = load i8*, i8** %oldName.addr, align 8, !dbg !4814
  %332 = load i8*, i8** %newName.addr, align 8, !dbg !4814
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %327, %struct.AnimData* %328, %struct.ID* %329, i8* %330, i8* %331, i8* %332, i32 0, i32 0, i8 zeroext 1), !dbg !4814
  br label %if.end200, !dbg !4814

if.end200:                                        ; preds = %if.then195, %for.body189
  %333 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4808
  %334 = load %struct.AnimData*, %struct.AnimData** %adt190, align 8, !dbg !4808
  %335 = load %struct.ID*, %struct.ID** %ref_id.addr, align 8, !dbg !4808
  %336 = load i8*, i8** %prefix.addr, align 8, !dbg !4808
  %337 = load i8*, i8** %oldName.addr, align 8, !dbg !4808
  %338 = load i8*, i8** %newName.addr, align 8, !dbg !4808
  call void @BKE_animdata_fix_paths_rename(%struct.ID* %333, %struct.AnimData* %334, %struct.ID* %335, i8* %336, i8* %337, i8* %338, i32 0, i32 0, i8 zeroext 1), !dbg !4808
  br label %for.inc201, !dbg !4808

for.inc201:                                       ; preds = %if.end200
  %339 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4804
  %next202 = getelementptr inbounds %struct.ID, %struct.ID* %339, i32 0, i32 0, !dbg !4804
  %340 = load i8*, i8** %next202, align 8, !dbg !4804
  %341 = bitcast i8* %340 to %struct.ID*, !dbg !4804
  store %struct.ID* %341, %struct.ID** %id, align 8, !dbg !4804
  br label %for.cond187, !dbg !4804, !llvm.loop !4815

for.end203:                                       ; preds = %for.cond187
  ret void, !dbg !4816
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KS_Path* @BKE_keyingset_find_path(%struct.KeyingSet* %ks, %struct.ID* %id, i8* %group_name, i8* %rna_path, i32 %array_index, i32 %UNUSED_group_mode) #0 !dbg !4817 {
entry:
  %retval = alloca %struct.KS_Path*, align 8
  %ks.addr = alloca %struct.KeyingSet*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %group_name.addr = alloca i8*, align 8
  %rna_path.addr = alloca i8*, align 8
  %array_index.addr = alloca i32, align 4
  %UNUSED_group_mode.addr = alloca i32, align 4
  %ksp = alloca %struct.KS_Path*, align 8
  %eq_id = alloca i16, align 2
  %eq_path = alloca i16, align 2
  %eq_index = alloca i16, align 2
  %eq_group = alloca i16, align 2
  store %struct.KeyingSet* %ks, %struct.KeyingSet** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyingSet** %ks.addr, metadata !4852, metadata !DIExpression()), !dbg !4853
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !4854, metadata !DIExpression()), !dbg !4855
  store i8* %group_name, i8** %group_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %group_name.addr, metadata !4856, metadata !DIExpression()), !dbg !4857
  store i8* %rna_path, i8** %rna_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rna_path.addr, metadata !4858, metadata !DIExpression()), !dbg !4859
  store i32 %array_index, i32* %array_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_index.addr, metadata !4860, metadata !DIExpression()), !dbg !4861
  store i32 %UNUSED_group_mode, i32* %UNUSED_group_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_group_mode.addr, metadata !4862, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.declare(metadata %struct.KS_Path** %ksp, metadata !4864, metadata !DIExpression()), !dbg !4867
  %0 = load %struct.KeyingSet*, %struct.KeyingSet** %ks.addr, align 8, !dbg !4868
  %cmp = icmp eq %struct.KeyingSet* null, %0, !dbg !4868
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4868

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %rna_path.addr, align 8, !dbg !4868
  %cmp1 = icmp eq i8* null, %1, !dbg !4868
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !4868

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4868
  %cmp3 = icmp eq %struct.ID* null, %2, !dbg !4868
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4870

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store %struct.KS_Path* null, %struct.KS_Path** %retval, align 8, !dbg !4871
  br label %return, !dbg !4871

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load %struct.KeyingSet*, %struct.KeyingSet** %ks.addr, align 8, !dbg !4872
  %paths = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %3, i32 0, i32 2, !dbg !4874
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %paths, i32 0, i32 0, !dbg !4875
  %4 = load i8*, i8** %first, align 8, !dbg !4875
  %5 = bitcast i8* %4 to %struct.KS_Path*, !dbg !4872
  store %struct.KS_Path* %5, %struct.KS_Path** %ksp, align 8, !dbg !4876
  br label %for.cond, !dbg !4877

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !4878
  %tobool = icmp ne %struct.KS_Path* %6, null, !dbg !4880
  br i1 %tobool, label %for.body, label %for.end, !dbg !4880

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %eq_id, metadata !4881, metadata !DIExpression()), !dbg !4883
  store i16 1, i16* %eq_id, align 2, !dbg !4883
  call void @llvm.dbg.declare(metadata i16* %eq_path, metadata !4884, metadata !DIExpression()), !dbg !4885
  store i16 1, i16* %eq_path, align 2, !dbg !4885
  call void @llvm.dbg.declare(metadata i16* %eq_index, metadata !4886, metadata !DIExpression()), !dbg !4887
  store i16 1, i16* %eq_index, align 2, !dbg !4887
  call void @llvm.dbg.declare(metadata i16* %eq_group, metadata !4888, metadata !DIExpression()), !dbg !4889
  store i16 1, i16* %eq_group, align 2, !dbg !4889
  %7 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !4890
  %8 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !4892
  %id4 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %8, i32 0, i32 2, !dbg !4893
  %9 = load %struct.ID*, %struct.ID** %id4, align 8, !dbg !4893
  %cmp5 = icmp ne %struct.ID* %7, %9, !dbg !4894
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4895

if.then6:                                         ; preds = %for.body
  store i16 0, i16* %eq_id, align 2, !dbg !4896
  br label %if.end7, !dbg !4897

if.end7:                                          ; preds = %if.then6, %for.body
  %10 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !4898
  %rna_path8 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %10, i32 0, i32 7, !dbg !4900
  %11 = load i8*, i8** %rna_path8, align 8, !dbg !4900
  %cmp9 = icmp eq i8* %11, null, !dbg !4901
  br i1 %cmp9, label %if.then13, label %lor.lhs.false10, !dbg !4902

lor.lhs.false10:                                  ; preds = %if.end7
  %12 = load i8*, i8** %rna_path.addr, align 8, !dbg !4903
  %13 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !4904
  %rna_path11 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %13, i32 0, i32 7, !dbg !4905
  %14 = load i8*, i8** %rna_path11, align 8, !dbg !4905
  %call = call i32 @strcmp(i8* %12, i8* %14) #6, !dbg !4906
  %tobool12 = icmp ne i32 %call, 0, !dbg !4906
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !4907

if.then13:                                        ; preds = %lor.lhs.false10, %if.end7
  store i16 0, i16* %eq_path, align 2, !dbg !4908
  br label %if.end14, !dbg !4909

if.end14:                                         ; preds = %if.then13, %lor.lhs.false10
  %15 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !4910
  %array_index15 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %15, i32 0, i32 8, !dbg !4912
  %16 = load i32, i32* %array_index15, align 8, !dbg !4912
  %17 = load i32, i32* %array_index.addr, align 4, !dbg !4913
  %cmp16 = icmp ne i32 %16, %17, !dbg !4914
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !4915

if.then17:                                        ; preds = %if.end14
  store i16 0, i16* %eq_index, align 2, !dbg !4916
  br label %if.end18, !dbg !4917

if.end18:                                         ; preds = %if.then17, %if.end14
  %18 = load i8*, i8** %group_name.addr, align 8, !dbg !4918
  %tobool19 = icmp ne i8* %18, null, !dbg !4918
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !4920

if.then20:                                        ; preds = %if.end18
  br label %if.end21, !dbg !4921

if.end21:                                         ; preds = %if.then20, %if.end18
  %19 = load i16, i16* %eq_id, align 2, !dbg !4923
  %conv = sext i16 %19 to i32, !dbg !4923
  %tobool22 = icmp ne i32 %conv, 0, !dbg !4923
  br i1 %tobool22, label %land.lhs.true, label %if.end32, !dbg !4925

land.lhs.true:                                    ; preds = %if.end21
  %20 = load i16, i16* %eq_path, align 2, !dbg !4926
  %conv23 = sext i16 %20 to i32, !dbg !4926
  %tobool24 = icmp ne i32 %conv23, 0, !dbg !4926
  br i1 %tobool24, label %land.lhs.true25, label %if.end32, !dbg !4927

land.lhs.true25:                                  ; preds = %land.lhs.true
  %21 = load i16, i16* %eq_index, align 2, !dbg !4928
  %conv26 = sext i16 %21 to i32, !dbg !4928
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !4928
  br i1 %tobool27, label %land.lhs.true28, label %if.end32, !dbg !4929

land.lhs.true28:                                  ; preds = %land.lhs.true25
  %22 = load i16, i16* %eq_group, align 2, !dbg !4930
  %conv29 = sext i16 %22 to i32, !dbg !4930
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !4930
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !4931

if.then31:                                        ; preds = %land.lhs.true28
  %23 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !4932
  store %struct.KS_Path* %23, %struct.KS_Path** %retval, align 8, !dbg !4933
  br label %return, !dbg !4933

if.end32:                                         ; preds = %land.lhs.true28, %land.lhs.true25, %land.lhs.true, %if.end21
  br label %for.inc, !dbg !4934

for.inc:                                          ; preds = %if.end32
  %24 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !4935
  %next = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %24, i32 0, i32 0, !dbg !4936
  %25 = load %struct.KS_Path*, %struct.KS_Path** %next, align 8, !dbg !4936
  store %struct.KS_Path* %25, %struct.KS_Path** %ksp, align 8, !dbg !4937
  br label %for.cond, !dbg !4938, !llvm.loop !4939

for.end:                                          ; preds = %for.cond
  store %struct.KS_Path* null, %struct.KS_Path** %retval, align 8, !dbg !4941
  br label %return, !dbg !4941

return:                                           ; preds = %for.end, %if.then31, %if.then
  %26 = load %struct.KS_Path*, %struct.KS_Path** %retval, align 8, !dbg !4942
  ret %struct.KS_Path* %26, !dbg !4942
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KeyingSet* @BKE_keyingset_add(%struct.ListBase* %list, i8* %idname, i8* %name, i16 signext %flag, i16 signext %keyingflag) #0 !dbg !4943 {
entry:
  %list.addr = alloca %struct.ListBase*, align 8
  %idname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %flag.addr = alloca i16, align 2
  %keyingflag.addr = alloca i16, align 2
  %ks = alloca %struct.KeyingSet*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !4946, metadata !DIExpression()), !dbg !4947
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !4948, metadata !DIExpression()), !dbg !4949
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4950, metadata !DIExpression()), !dbg !4951
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !4952, metadata !DIExpression()), !dbg !4953
  store i16 %keyingflag, i16* %keyingflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %keyingflag.addr, metadata !4954, metadata !DIExpression()), !dbg !4955
  call void @llvm.dbg.declare(metadata %struct.KeyingSet** %ks, metadata !4956, metadata !DIExpression()), !dbg !4957
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4958
  %call = call i8* %0(i64 472, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)), !dbg !4958
  %1 = bitcast i8* %call to %struct.KeyingSet*, !dbg !4958
  store %struct.KeyingSet* %1, %struct.KeyingSet** %ks, align 8, !dbg !4959
  %2 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !4960
  %idname1 = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %2, i32 0, i32 3, !dbg !4961
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !4960
  %3 = load i8*, i8** %idname.addr, align 8, !dbg !4962
  %tobool = icmp ne i8* %3, null, !dbg !4963
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4963

cond.true:                                        ; preds = %entry
  %4 = load i8*, i8** %idname.addr, align 8, !dbg !4964
  br label %cond.end5, !dbg !4963

cond.false:                                       ; preds = %entry
  %5 = load i8*, i8** %name.addr, align 8, !dbg !4965
  %tobool2 = icmp ne i8* %5, null, !dbg !4966
  br i1 %tobool2, label %cond.true3, label %cond.false4, !dbg !4966

cond.true3:                                       ; preds = %cond.false
  %6 = load i8*, i8** %name.addr, align 8, !dbg !4967
  br label %cond.end, !dbg !4966

cond.false4:                                      ; preds = %cond.false
  br label %cond.end, !dbg !4966

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %6, %cond.true3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), %cond.false4 ], !dbg !4966
  br label %cond.end5, !dbg !4963

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ %4, %cond.true ], [ %cond, %cond.end ], !dbg !4963
  %call7 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %cond6, i64 64), !dbg !4968
  %7 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !4969
  %name8 = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %7, i32 0, i32 4, !dbg !4970
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %name8, i64 0, i64 0, !dbg !4969
  %8 = load i8*, i8** %name.addr, align 8, !dbg !4971
  %tobool10 = icmp ne i8* %8, null, !dbg !4972
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !4972

cond.true11:                                      ; preds = %cond.end5
  %9 = load i8*, i8** %name.addr, align 8, !dbg !4973
  br label %cond.end18, !dbg !4972

cond.false12:                                     ; preds = %cond.end5
  %10 = load i8*, i8** %idname.addr, align 8, !dbg !4974
  %tobool13 = icmp ne i8* %10, null, !dbg !4975
  br i1 %tobool13, label %cond.true14, label %cond.false15, !dbg !4975

cond.true14:                                      ; preds = %cond.false12
  %11 = load i8*, i8** %idname.addr, align 8, !dbg !4976
  br label %cond.end16, !dbg !4975

cond.false15:                                     ; preds = %cond.false12
  br label %cond.end16, !dbg !4975

cond.end16:                                       ; preds = %cond.false15, %cond.true14
  %cond17 = phi i8* [ %11, %cond.true14 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), %cond.false15 ], !dbg !4975
  br label %cond.end18, !dbg !4972

cond.end18:                                       ; preds = %cond.end16, %cond.true11
  %cond19 = phi i8* [ %9, %cond.true11 ], [ %cond17, %cond.end16 ], !dbg !4972
  %call20 = call i8* @BLI_strncpy(i8* %arraydecay9, i8* %cond19, i64 64), !dbg !4977
  %12 = load i16, i16* %flag.addr, align 2, !dbg !4978
  %13 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !4979
  %flag21 = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %13, i32 0, i32 7, !dbg !4980
  store i16 %12, i16* %flag21, align 8, !dbg !4981
  %14 = load i16, i16* %keyingflag.addr, align 2, !dbg !4982
  %15 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !4983
  %keyingflag22 = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %15, i32 0, i32 8, !dbg !4984
  store i16 %14, i16* %keyingflag22, align 2, !dbg !4985
  %16 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !4986
  %17 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !4987
  %18 = bitcast %struct.KeyingSet* %17 to i8*, !dbg !4987
  call void @BLI_addtail(%struct.ListBase* %16, i8* %18), !dbg !4988
  %19 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !4989
  %20 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !4990
  %21 = bitcast %struct.KeyingSet* %20 to i8*, !dbg !4990
  call void @BLI_uniquename(%struct.ListBase* %19, i8* %21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8 zeroext 46, i32 32, i32 64), !dbg !4991
  %22 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !4992
  %23 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !4993
  %24 = bitcast %struct.KeyingSet* %23 to i8*, !dbg !4993
  call void @BLI_uniquename(%struct.ListBase* %22, i8* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8 zeroext 46, i32 96, i32 64), !dbg !4994
  %25 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !4995
  ret %struct.KeyingSet* %25, !dbg !4996
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

declare dso_local void @BLI_uniquename(%struct.ListBase*, i8*, i8*, i8 zeroext, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KS_Path* @BKE_keyingset_add_path(%struct.KeyingSet* %ks, %struct.ID* %id, i8* %group_name, i8* %rna_path, i32 %array_index, i16 signext %flag, i16 signext %groupmode) #0 !dbg !4997 {
entry:
  %retval = alloca %struct.KS_Path*, align 8
  %ks.addr = alloca %struct.KeyingSet*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %group_name.addr = alloca i8*, align 8
  %rna_path.addr = alloca i8*, align 8
  %array_index.addr = alloca i32, align 4
  %flag.addr = alloca i16, align 2
  %groupmode.addr = alloca i16, align 2
  %ksp = alloca %struct.KS_Path*, align 8
  store %struct.KeyingSet* %ks, %struct.KeyingSet** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyingSet** %ks.addr, metadata !5000, metadata !DIExpression()), !dbg !5001
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !5002, metadata !DIExpression()), !dbg !5003
  store i8* %group_name, i8** %group_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %group_name.addr, metadata !5004, metadata !DIExpression()), !dbg !5005
  store i8* %rna_path, i8** %rna_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rna_path.addr, metadata !5006, metadata !DIExpression()), !dbg !5007
  store i32 %array_index, i32* %array_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_index.addr, metadata !5008, metadata !DIExpression()), !dbg !5009
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !5010, metadata !DIExpression()), !dbg !5011
  store i16 %groupmode, i16* %groupmode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %groupmode.addr, metadata !5012, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.declare(metadata %struct.KS_Path** %ksp, metadata !5014, metadata !DIExpression()), !dbg !5015
  %0 = load %struct.KeyingSet*, %struct.KeyingSet** %ks.addr, align 8, !dbg !5016
  %cmp = icmp eq %struct.KeyingSet* null, %0, !dbg !5016
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5016

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %rna_path.addr, align 8, !dbg !5016
  %cmp1 = icmp eq i8* null, %1, !dbg !5016
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5018

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0)), !dbg !5019
  store %struct.KS_Path* null, %struct.KS_Path** %retval, align 8, !dbg !5021
  br label %return, !dbg !5021

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5022
  %cmp2 = icmp eq %struct.ID* %2, null, !dbg !5024
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !5025

if.then3:                                         ; preds = %if.end
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.14, i64 0, i64 0)), !dbg !5026
  store %struct.KS_Path* null, %struct.KS_Path** %retval, align 8, !dbg !5028
  br label %return, !dbg !5028

if.end5:                                          ; preds = %if.end
  %3 = load %struct.KeyingSet*, %struct.KeyingSet** %ks.addr, align 8, !dbg !5029
  %4 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5031
  %5 = load i8*, i8** %group_name.addr, align 8, !dbg !5032
  %6 = load i8*, i8** %rna_path.addr, align 8, !dbg !5033
  %7 = load i32, i32* %array_index.addr, align 4, !dbg !5034
  %8 = load i16, i16* %groupmode.addr, align 2, !dbg !5035
  %conv = sext i16 %8 to i32, !dbg !5035
  %call6 = call %struct.KS_Path* @BKE_keyingset_find_path(%struct.KeyingSet* %3, %struct.ID* %4, i8* %5, i8* %6, i32 %7, i32 %conv), !dbg !5036
  %tobool = icmp ne %struct.KS_Path* %call6, null, !dbg !5036
  br i1 %tobool, label %if.then7, label %if.end12, !dbg !5037

if.then7:                                         ; preds = %if.end5
  %9 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !5038
  %and = and i32 %9, 1, !dbg !5041
  %tobool8 = icmp ne i32 %and, 0, !dbg !5041
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !5042

if.then9:                                         ; preds = %if.then7
  %call10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15, i64 0, i64 0)), !dbg !5043
  br label %if.end11, !dbg !5043

if.end11:                                         ; preds = %if.then9, %if.then7
  store %struct.KS_Path* null, %struct.KS_Path** %retval, align 8, !dbg !5044
  br label %return, !dbg !5044

if.end12:                                         ; preds = %if.end5
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5045
  %call13 = call i8* %10(i64 112, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0)), !dbg !5045
  %11 = bitcast i8* %call13 to %struct.KS_Path*, !dbg !5045
  store %struct.KS_Path* %11, %struct.KS_Path** %ksp, align 8, !dbg !5046
  %12 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5047
  %13 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5048
  %id14 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %13, i32 0, i32 2, !dbg !5049
  store %struct.ID* %12, %struct.ID** %id14, align 8, !dbg !5050
  %14 = load i8*, i8** %group_name.addr, align 8, !dbg !5051
  %tobool15 = icmp ne i8* %14, null, !dbg !5051
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !5053

if.then16:                                        ; preds = %if.end12
  %15 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5054
  %group = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %15, i32 0, i32 3, !dbg !5055
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %group, i64 0, i64 0, !dbg !5054
  %16 = load i8*, i8** %group_name.addr, align 8, !dbg !5056
  %call17 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %16, i64 64), !dbg !5057
  br label %if.end19, !dbg !5057

if.else:                                          ; preds = %if.end12
  %17 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5058
  %group18 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %17, i32 0, i32 3, !dbg !5059
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %group18, i64 0, i64 0, !dbg !5058
  store i8 0, i8* %arrayidx, align 8, !dbg !5060
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then16
  %18 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5061
  %tobool20 = icmp ne %struct.ID* %18, null, !dbg !5061
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !5063

if.then21:                                        ; preds = %if.end19
  %19 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5064
  %name = getelementptr inbounds %struct.ID, %struct.ID* %19, i32 0, i32 4, !dbg !5064
  %arraydecay22 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !5064
  %20 = bitcast i8* %arraydecay22 to i16*, !dbg !5064
  %21 = load i16, i16* %20, align 8, !dbg !5064
  %conv23 = sext i16 %21 to i32, !dbg !5064
  %22 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5065
  %idtype = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %22, i32 0, i32 4, !dbg !5066
  store i32 %conv23, i32* %idtype, align 8, !dbg !5067
  br label %if.end24, !dbg !5065

if.end24:                                         ; preds = %if.then21, %if.end19
  %23 = load i8*, i8** %rna_path.addr, align 8, !dbg !5068
  %call25 = call i8* @BLI_strdup(i8* %23), !dbg !5069
  %24 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5070
  %rna_path26 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %24, i32 0, i32 7, !dbg !5071
  store i8* %call25, i8** %rna_path26, align 8, !dbg !5072
  %25 = load i32, i32* %array_index.addr, align 4, !dbg !5073
  %26 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5074
  %array_index27 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %26, i32 0, i32 8, !dbg !5075
  store i32 %25, i32* %array_index27, align 8, !dbg !5076
  %27 = load i16, i16* %flag.addr, align 2, !dbg !5077
  %28 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5078
  %flag28 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %28, i32 0, i32 9, !dbg !5079
  store i16 %27, i16* %flag28, align 4, !dbg !5080
  %29 = load i16, i16* %groupmode.addr, align 2, !dbg !5081
  %30 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5082
  %groupmode29 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %30, i32 0, i32 5, !dbg !5083
  store i16 %29, i16* %groupmode29, align 4, !dbg !5084
  %31 = load %struct.KeyingSet*, %struct.KeyingSet** %ks.addr, align 8, !dbg !5085
  %paths = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %31, i32 0, i32 2, !dbg !5086
  %32 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5087
  %33 = bitcast %struct.KS_Path* %32 to i8*, !dbg !5087
  call void @BLI_addtail(%struct.ListBase* %paths, i8* %33), !dbg !5088
  %34 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5089
  store %struct.KS_Path* %34, %struct.KS_Path** %retval, align 8, !dbg !5090
  br label %return, !dbg !5090

return:                                           ; preds = %if.end24, %if.end11, %if.then3, %if.then
  %35 = load %struct.KS_Path*, %struct.KS_Path** %retval, align 8, !dbg !5091
  ret %struct.KS_Path* %35, !dbg !5091
}

declare dso_local i8* @BLI_strdup(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_keyingset_free_path(%struct.KeyingSet* %ks, %struct.KS_Path* %ksp) #0 !dbg !5092 {
entry:
  %ks.addr = alloca %struct.KeyingSet*, align 8
  %ksp.addr = alloca %struct.KS_Path*, align 8
  store %struct.KeyingSet* %ks, %struct.KeyingSet** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyingSet** %ks.addr, metadata !5095, metadata !DIExpression()), !dbg !5096
  store %struct.KS_Path* %ksp, %struct.KS_Path** %ksp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KS_Path** %ksp.addr, metadata !5097, metadata !DIExpression()), !dbg !5098
  %0 = load %struct.KeyingSet*, %struct.KeyingSet** %ks.addr, align 8, !dbg !5099
  %cmp = icmp eq %struct.KeyingSet* null, %0, !dbg !5099
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5099

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.KS_Path*, %struct.KS_Path** %ksp.addr, align 8, !dbg !5099
  %cmp1 = icmp eq %struct.KS_Path* null, %1, !dbg !5099
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5101

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !5102

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.KS_Path*, %struct.KS_Path** %ksp.addr, align 8, !dbg !5103
  %rna_path = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %2, i32 0, i32 7, !dbg !5105
  %3 = load i8*, i8** %rna_path, align 8, !dbg !5105
  %tobool = icmp ne i8* %3, null, !dbg !5103
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !5106

if.then2:                                         ; preds = %if.end
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5107
  %5 = load %struct.KS_Path*, %struct.KS_Path** %ksp.addr, align 8, !dbg !5108
  %rna_path3 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %5, i32 0, i32 7, !dbg !5109
  %6 = load i8*, i8** %rna_path3, align 8, !dbg !5109
  call void %4(i8* %6), !dbg !5107
  br label %if.end4, !dbg !5107

if.end4:                                          ; preds = %if.then2, %if.end
  %7 = load %struct.KeyingSet*, %struct.KeyingSet** %ks.addr, align 8, !dbg !5110
  %paths = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %7, i32 0, i32 2, !dbg !5111
  %8 = load %struct.KS_Path*, %struct.KS_Path** %ksp.addr, align 8, !dbg !5112
  %9 = bitcast %struct.KS_Path* %8 to i8*, !dbg !5112
  call void @BLI_freelinkN(%struct.ListBase* %paths, i8* %9), !dbg !5113
  br label %return, !dbg !5114

return:                                           ; preds = %if.end4, %if.then
  ret void, !dbg !5114
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_keyingsets_copy(%struct.ListBase* %newlist, %struct.ListBase* %list) #0 !dbg !5115 {
entry:
  %newlist.addr = alloca %struct.ListBase*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %ksn = alloca %struct.KeyingSet*, align 8
  %kspn = alloca %struct.KS_Path*, align 8
  store %struct.ListBase* %newlist, %struct.ListBase** %newlist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %newlist.addr, metadata !5118, metadata !DIExpression()), !dbg !5119
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !5120, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.declare(metadata %struct.KeyingSet** %ksn, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.declare(metadata %struct.KS_Path** %kspn, metadata !5124, metadata !DIExpression()), !dbg !5125
  %0 = load %struct.ListBase*, %struct.ListBase** %newlist.addr, align 8, !dbg !5126
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5127
  call void @BLI_duplicatelist(%struct.ListBase* %0, %struct.ListBase* %1), !dbg !5128
  %2 = load %struct.ListBase*, %struct.ListBase** %newlist.addr, align 8, !dbg !5129
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !5131
  %3 = load i8*, i8** %first, align 8, !dbg !5131
  %4 = bitcast i8* %3 to %struct.KeyingSet*, !dbg !5129
  store %struct.KeyingSet* %4, %struct.KeyingSet** %ksn, align 8, !dbg !5132
  br label %for.cond, !dbg !5133

for.cond:                                         ; preds = %for.inc8, %entry
  %5 = load %struct.KeyingSet*, %struct.KeyingSet** %ksn, align 8, !dbg !5134
  %tobool = icmp ne %struct.KeyingSet* %5, null, !dbg !5136
  br i1 %tobool, label %for.body, label %for.end10, !dbg !5136

for.body:                                         ; preds = %for.cond
  %6 = load %struct.KeyingSet*, %struct.KeyingSet** %ksn, align 8, !dbg !5137
  %paths = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %6, i32 0, i32 2, !dbg !5139
  %7 = load %struct.KeyingSet*, %struct.KeyingSet** %ksn, align 8, !dbg !5140
  %paths1 = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %7, i32 0, i32 2, !dbg !5141
  call void @BLI_duplicatelist(%struct.ListBase* %paths, %struct.ListBase* %paths1), !dbg !5142
  %8 = load %struct.KeyingSet*, %struct.KeyingSet** %ksn, align 8, !dbg !5143
  %paths2 = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %8, i32 0, i32 2, !dbg !5145
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %paths2, i32 0, i32 0, !dbg !5146
  %9 = load i8*, i8** %first3, align 8, !dbg !5146
  %10 = bitcast i8* %9 to %struct.KS_Path*, !dbg !5143
  store %struct.KS_Path* %10, %struct.KS_Path** %kspn, align 8, !dbg !5147
  br label %for.cond4, !dbg !5148

for.cond4:                                        ; preds = %for.inc, %for.body
  %11 = load %struct.KS_Path*, %struct.KS_Path** %kspn, align 8, !dbg !5149
  %tobool5 = icmp ne %struct.KS_Path* %11, null, !dbg !5151
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !5151

for.body6:                                        ; preds = %for.cond4
  %12 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !5152
  %13 = load %struct.KS_Path*, %struct.KS_Path** %kspn, align 8, !dbg !5153
  %rna_path = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %13, i32 0, i32 7, !dbg !5154
  %14 = load i8*, i8** %rna_path, align 8, !dbg !5154
  %call = call i8* %12(i8* %14), !dbg !5152
  %15 = load %struct.KS_Path*, %struct.KS_Path** %kspn, align 8, !dbg !5155
  %rna_path7 = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %15, i32 0, i32 7, !dbg !5156
  store i8* %call, i8** %rna_path7, align 8, !dbg !5157
  br label %for.inc, !dbg !5155

for.inc:                                          ; preds = %for.body6
  %16 = load %struct.KS_Path*, %struct.KS_Path** %kspn, align 8, !dbg !5158
  %next = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %16, i32 0, i32 0, !dbg !5159
  %17 = load %struct.KS_Path*, %struct.KS_Path** %next, align 8, !dbg !5159
  store %struct.KS_Path* %17, %struct.KS_Path** %kspn, align 8, !dbg !5160
  br label %for.cond4, !dbg !5161, !llvm.loop !5162

for.end:                                          ; preds = %for.cond4
  br label %for.inc8, !dbg !5164

for.inc8:                                         ; preds = %for.end
  %18 = load %struct.KeyingSet*, %struct.KeyingSet** %ksn, align 8, !dbg !5165
  %next9 = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %18, i32 0, i32 0, !dbg !5166
  %19 = load %struct.KeyingSet*, %struct.KeyingSet** %next9, align 8, !dbg !5166
  store %struct.KeyingSet* %19, %struct.KeyingSet** %ksn, align 8, !dbg !5167
  br label %for.cond, !dbg !5168, !llvm.loop !5169

for.end10:                                        ; preds = %for.cond
  ret void, !dbg !5171
}

declare dso_local void @BLI_duplicatelist(%struct.ListBase*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_keyingset_free(%struct.KeyingSet* %ks) #0 !dbg !5172 {
entry:
  %ks.addr = alloca %struct.KeyingSet*, align 8
  %ksp = alloca %struct.KS_Path*, align 8
  %kspn = alloca %struct.KS_Path*, align 8
  store %struct.KeyingSet* %ks, %struct.KeyingSet** %ks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.KeyingSet** %ks.addr, metadata !5175, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.declare(metadata %struct.KS_Path** %ksp, metadata !5177, metadata !DIExpression()), !dbg !5178
  call void @llvm.dbg.declare(metadata %struct.KS_Path** %kspn, metadata !5179, metadata !DIExpression()), !dbg !5180
  %0 = load %struct.KeyingSet*, %struct.KeyingSet** %ks.addr, align 8, !dbg !5181
  %cmp = icmp eq %struct.KeyingSet* %0, null, !dbg !5183
  br i1 %cmp, label %if.then, label %if.end, !dbg !5184

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !5185

if.end:                                           ; preds = %entry
  %1 = load %struct.KeyingSet*, %struct.KeyingSet** %ks.addr, align 8, !dbg !5186
  %paths = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %1, i32 0, i32 2, !dbg !5188
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %paths, i32 0, i32 0, !dbg !5189
  %2 = load i8*, i8** %first, align 8, !dbg !5189
  %3 = bitcast i8* %2 to %struct.KS_Path*, !dbg !5186
  store %struct.KS_Path* %3, %struct.KS_Path** %ksp, align 8, !dbg !5190
  br label %for.cond, !dbg !5191

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5192
  %tobool = icmp ne %struct.KS_Path* %4, null, !dbg !5194
  br i1 %tobool, label %for.body, label %for.end, !dbg !5194

for.body:                                         ; preds = %for.cond
  %5 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5195
  %next = getelementptr inbounds %struct.KS_Path, %struct.KS_Path* %5, i32 0, i32 0, !dbg !5197
  %6 = load %struct.KS_Path*, %struct.KS_Path** %next, align 8, !dbg !5197
  store %struct.KS_Path* %6, %struct.KS_Path** %kspn, align 8, !dbg !5198
  %7 = load %struct.KeyingSet*, %struct.KeyingSet** %ks.addr, align 8, !dbg !5199
  %8 = load %struct.KS_Path*, %struct.KS_Path** %ksp, align 8, !dbg !5200
  call void @BKE_keyingset_free_path(%struct.KeyingSet* %7, %struct.KS_Path* %8), !dbg !5201
  br label %for.inc, !dbg !5202

for.inc:                                          ; preds = %for.body
  %9 = load %struct.KS_Path*, %struct.KS_Path** %kspn, align 8, !dbg !5203
  store %struct.KS_Path* %9, %struct.KS_Path** %ksp, align 8, !dbg !5204
  br label %for.cond, !dbg !5205, !llvm.loop !5206

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !5208
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_keyingsets_free(%struct.ListBase* %list) #0 !dbg !5209 {
entry:
  %list.addr = alloca %struct.ListBase*, align 8
  %ks = alloca %struct.KeyingSet*, align 8
  %ksn = alloca %struct.KeyingSet*, align 8
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !5210, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.declare(metadata %struct.KeyingSet** %ks, metadata !5212, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.declare(metadata %struct.KeyingSet** %ksn, metadata !5214, metadata !DIExpression()), !dbg !5215
  %0 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5216
  %cmp = icmp eq %struct.ListBase* %0, null, !dbg !5218
  br i1 %cmp, label %if.then, label %if.end, !dbg !5219

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !5220

if.end:                                           ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5221
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !5223
  %2 = load i8*, i8** %first, align 8, !dbg !5223
  %3 = bitcast i8* %2 to %struct.KeyingSet*, !dbg !5221
  store %struct.KeyingSet* %3, %struct.KeyingSet** %ks, align 8, !dbg !5224
  br label %for.cond, !dbg !5225

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !5226
  %tobool = icmp ne %struct.KeyingSet* %4, null, !dbg !5228
  br i1 %tobool, label %for.body, label %for.end, !dbg !5228

for.body:                                         ; preds = %for.cond
  %5 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !5229
  %next = getelementptr inbounds %struct.KeyingSet, %struct.KeyingSet* %5, i32 0, i32 0, !dbg !5231
  %6 = load %struct.KeyingSet*, %struct.KeyingSet** %next, align 8, !dbg !5231
  store %struct.KeyingSet* %6, %struct.KeyingSet** %ksn, align 8, !dbg !5232
  %7 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !5233
  call void @BKE_keyingset_free(%struct.KeyingSet* %7), !dbg !5234
  %8 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5235
  %9 = load %struct.KeyingSet*, %struct.KeyingSet** %ks, align 8, !dbg !5236
  %10 = bitcast %struct.KeyingSet* %9 to i8*, !dbg !5236
  call void @BLI_freelinkN(%struct.ListBase* %8, i8* %10), !dbg !5237
  br label %for.inc, !dbg !5238

for.inc:                                          ; preds = %for.body
  %11 = load %struct.KeyingSet*, %struct.KeyingSet** %ksn, align 8, !dbg !5239
  store %struct.KeyingSet* %11, %struct.KeyingSet** %ks, align 8, !dbg !5240
  br label %for.cond, !dbg !5241, !llvm.loop !5242

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !5244
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @animsys_evaluate_action_group(%struct.PointerRNA* %ptr, %struct.bAction* %act, %struct.bActionGroup* %agrp, %struct.AnimMapper* %remap, float %ctime) #0 !dbg !5245 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %act.addr = alloca %struct.bAction*, align 8
  %agrp.addr = alloca %struct.bActionGroup*, align 8
  %remap.addr = alloca %struct.AnimMapper*, align 8
  %ctime.addr = alloca float, align 4
  %fcu = alloca %struct.FCurve*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5248, metadata !DIExpression()), !dbg !5249
  store %struct.bAction* %act, %struct.bAction** %act.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAction** %act.addr, metadata !5250, metadata !DIExpression()), !dbg !5251
  store %struct.bActionGroup* %agrp, %struct.bActionGroup** %agrp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bActionGroup** %agrp.addr, metadata !5252, metadata !DIExpression()), !dbg !5253
  store %struct.AnimMapper* %remap, %struct.AnimMapper** %remap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimMapper** %remap.addr, metadata !5254, metadata !DIExpression()), !dbg !5255
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !5258, metadata !DIExpression()), !dbg !5259
  %0 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !5260
  %cmp = icmp eq %struct.bAction* null, %0, !dbg !5260
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5260

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp.addr, align 8, !dbg !5260
  %cmp1 = icmp eq %struct.bActionGroup* null, %1, !dbg !5260
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5262

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end, !dbg !5263

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.AnimMapper*, %struct.AnimMapper** %remap.addr, align 8, !dbg !5264
  %tobool = icmp ne %struct.AnimMapper* %2, null, !dbg !5266
  br i1 %tobool, label %land.lhs.true, label %if.end4, !dbg !5267

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.AnimMapper*, %struct.AnimMapper** %remap.addr, align 8, !dbg !5268
  %target = getelementptr inbounds %struct.AnimMapper, %struct.AnimMapper* %3, i32 0, i32 2, !dbg !5269
  %4 = load %struct.bAction*, %struct.bAction** %target, align 8, !dbg !5269
  %5 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !5270
  %cmp2 = icmp ne %struct.bAction* %4, %5, !dbg !5271
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5272

if.then3:                                         ; preds = %land.lhs.true
  store %struct.AnimMapper* null, %struct.AnimMapper** %remap.addr, align 8, !dbg !5273
  br label %if.end4, !dbg !5274

if.end4:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5275
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %6, i32 0, i32 0, !dbg !5276
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !5277
  %7 = load i8*, i8** %data, align 8, !dbg !5277
  %8 = bitcast i8* %7 to %struct.ID*, !dbg !5275
  %9 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !5278
  call void @action_idcode_patch_check(%struct.ID* %8, %struct.bAction* %9), !dbg !5279
  %10 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp.addr, align 8, !dbg !5280
  %flag = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %10, i32 0, i32 3, !dbg !5282
  %11 = load i32, i32* %flag, align 8, !dbg !5282
  %and = and i32 %11, 16, !dbg !5283
  %tobool5 = icmp ne i32 %and, 0, !dbg !5283
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5284

if.then6:                                         ; preds = %if.end4
  br label %for.end, !dbg !5285

if.end7:                                          ; preds = %if.end4
  %12 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp.addr, align 8, !dbg !5286
  %channels = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %12, i32 0, i32 2, !dbg !5288
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %channels, i32 0, i32 0, !dbg !5289
  %13 = load i8*, i8** %first, align 8, !dbg !5289
  %14 = bitcast i8* %13 to %struct.FCurve*, !dbg !5286
  store %struct.FCurve* %14, %struct.FCurve** %fcu, align 8, !dbg !5290
  br label %for.cond, !dbg !5291

for.cond:                                         ; preds = %for.inc, %if.end7
  %15 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5292
  %tobool8 = icmp ne %struct.FCurve* %15, null, !dbg !5294
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !5295

land.rhs:                                         ; preds = %for.cond
  %16 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5296
  %grp = getelementptr inbounds %struct.FCurve, %struct.FCurve* %16, i32 0, i32 2, !dbg !5297
  %17 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !5297
  %18 = load %struct.bActionGroup*, %struct.bActionGroup** %agrp.addr, align 8, !dbg !5298
  %cmp9 = icmp eq %struct.bActionGroup* %17, %18, !dbg !5299
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %19 = phi i1 [ false, %for.cond ], [ %cmp9, %land.rhs ], !dbg !5300
  br i1 %19, label %for.body, label %for.end, !dbg !5301

for.body:                                         ; preds = %land.end
  %20 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5302
  %flag10 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %20, i32 0, i32 9, !dbg !5305
  %21 = load i16, i16* %flag10, align 8, !dbg !5305
  %conv = sext i16 %21 to i32, !dbg !5302
  %and11 = and i32 %conv, 1040, !dbg !5306
  %cmp12 = icmp eq i32 %and11, 0, !dbg !5307
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !5308

if.then14:                                        ; preds = %for.body
  %22 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5309
  %23 = load float, float* %ctime.addr, align 4, !dbg !5311
  call void @calculate_fcurve(%struct.FCurve* %22, float %23), !dbg !5312
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5313
  %25 = load %struct.AnimMapper*, %struct.AnimMapper** %remap.addr, align 8, !dbg !5314
  %26 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5315
  %call = call zeroext i8 @animsys_execute_fcurve(%struct.PointerRNA* %24, %struct.AnimMapper* %25, %struct.FCurve* %26), !dbg !5316
  br label %if.end15, !dbg !5317

if.end15:                                         ; preds = %if.then14, %for.body
  br label %for.inc, !dbg !5318

for.inc:                                          ; preds = %if.end15
  %27 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5319
  %next = getelementptr inbounds %struct.FCurve, %struct.FCurve* %27, i32 0, i32 0, !dbg !5320
  %28 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !5320
  store %struct.FCurve* %28, %struct.FCurve** %fcu, align 8, !dbg !5321
  br label %for.cond, !dbg !5322, !llvm.loop !5323

for.end:                                          ; preds = %if.then, %if.then6, %land.end
  ret void, !dbg !5325
}

; Function Attrs: noinline nounwind uwtable
define internal void @action_idcode_patch_check(%struct.ID* %id, %struct.bAction* %act) #0 !dbg !5326 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %act.addr = alloca %struct.bAction*, align 8
  %idcode = alloca i32, align 4
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !5329, metadata !DIExpression()), !dbg !5330
  store %struct.bAction* %act, %struct.bAction** %act.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAction** %act.addr, metadata !5331, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.declare(metadata i32* %idcode, metadata !5333, metadata !DIExpression()), !dbg !5334
  store i32 0, i32* %idcode, align 4, !dbg !5334
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5335
  %cmp = icmp eq %struct.ID* null, %0, !dbg !5335
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5335

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !5335
  %cmp1 = icmp eq %struct.bAction* null, %1, !dbg !5335
  br i1 %cmp1, label %if.then, label %if.else, !dbg !5337

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end19, !dbg !5338

if.else:                                          ; preds = %lor.lhs.false
  %2 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5339
  %name = getelementptr inbounds %struct.ID, %struct.ID* %2, i32 0, i32 4, !dbg !5339
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !5339
  %3 = bitcast i8* %arraydecay to i16*, !dbg !5339
  %4 = load i16, i16* %3, align 8, !dbg !5339
  %conv = sext i16 %4 to i32, !dbg !5339
  store i32 %conv, i32* %idcode, align 4, !dbg !5340
  br label %if.end

if.end:                                           ; preds = %if.else
  %5 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !5341
  %idroot = getelementptr inbounds %struct.bAction, %struct.bAction* %5, i32 0, i32 7, !dbg !5343
  %6 = load i32, i32* %idroot, align 8, !dbg !5343
  %cmp2 = icmp eq i32 %6, 0, !dbg !5344
  br i1 %cmp2, label %if.then4, label %if.else6, !dbg !5345

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* %idcode, align 4, !dbg !5346
  %8 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !5348
  %idroot5 = getelementptr inbounds %struct.bAction, %struct.bAction* %8, i32 0, i32 7, !dbg !5349
  store i32 %7, i32* %idroot5, align 8, !dbg !5350
  br label %if.end19, !dbg !5351

if.else6:                                         ; preds = %if.end
  %9 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !5352
  %idroot7 = getelementptr inbounds %struct.bAction, %struct.bAction* %9, i32 0, i32 7, !dbg !5354
  %10 = load i32, i32* %idroot7, align 8, !dbg !5354
  %11 = load i32, i32* %idcode, align 4, !dbg !5355
  %cmp8 = icmp ne i32 %10, %11, !dbg !5356
  br i1 %cmp8, label %if.then10, label %if.end18, !dbg !5357

if.then10:                                        ; preds = %if.else6
  %12 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !5358
  %and = and i32 %12, 1, !dbg !5361
  %tobool = icmp ne i32 %and, 0, !dbg !5361
  br i1 %tobool, label %if.then11, label %if.end17, !dbg !5362

if.then11:                                        ; preds = %if.then10
  %13 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !5363
  %id12 = getelementptr inbounds %struct.bAction, %struct.bAction* %13, i32 0, i32 0, !dbg !5365
  %name13 = getelementptr inbounds %struct.ID, %struct.ID* %id12, i32 0, i32 4, !dbg !5366
  %arraydecay14 = getelementptr inbounds [66 x i8], [66 x i8]* %name13, i64 0, i64 0, !dbg !5363
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay14, i64 2, !dbg !5367
  %14 = load i32, i32* %idcode, align 4, !dbg !5368
  %15 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5369
  %name15 = getelementptr inbounds %struct.ID, %struct.ID* %15, i32 0, i32 4, !dbg !5370
  %arraydecay16 = getelementptr inbounds [66 x i8], [66 x i8]* %name15, i64 0, i64 0, !dbg !5369
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.21, i64 0, i64 0), i8* %add.ptr, i32 %14, i8* %arraydecay16), !dbg !5371
  br label %if.end17, !dbg !5372

if.end17:                                         ; preds = %if.then11, %if.then10
  br label %if.end18, !dbg !5373

if.end18:                                         ; preds = %if.end17, %if.else6
  br label %if.end19

if.end19:                                         ; preds = %if.then, %if.end18, %if.then4
  ret void, !dbg !5374
}

declare dso_local void @calculate_fcurve(%struct.FCurve*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @animsys_execute_fcurve(%struct.PointerRNA* %ptr, %struct.AnimMapper* %remap, %struct.FCurve* %fcu) #0 !dbg !5375 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %remap.addr = alloca %struct.AnimMapper*, align 8
  %fcu.addr = alloca %struct.FCurve*, align 8
  %path = alloca i8*, align 8
  %free_path = alloca i8, align 1
  %ok = alloca i8, align 1
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5378, metadata !DIExpression()), !dbg !5379
  store %struct.AnimMapper* %remap, %struct.AnimMapper** %remap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimMapper** %remap.addr, metadata !5380, metadata !DIExpression()), !dbg !5381
  store %struct.FCurve* %fcu, %struct.FCurve** %fcu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu.addr, metadata !5382, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.declare(metadata i8** %path, metadata !5384, metadata !DIExpression()), !dbg !5385
  store i8* null, i8** %path, align 8, !dbg !5385
  call void @llvm.dbg.declare(metadata i8* %free_path, metadata !5386, metadata !DIExpression()), !dbg !5387
  store i8 0, i8* %free_path, align 1, !dbg !5387
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !5388, metadata !DIExpression()), !dbg !5389
  store i8 0, i8* %ok, align 1, !dbg !5389
  %0 = load %struct.AnimMapper*, %struct.AnimMapper** %remap.addr, align 8, !dbg !5390
  %1 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !5391
  %rna_path = getelementptr inbounds %struct.FCurve, %struct.FCurve* %1, i32 0, i32 12, !dbg !5392
  %2 = load i8*, i8** %rna_path, align 8, !dbg !5392
  %call = call zeroext i8 @animsys_remap_path(%struct.AnimMapper* %0, i8* %2, i8** %path), !dbg !5393
  store i8 %call, i8* %free_path, align 1, !dbg !5394
  %3 = load i8*, i8** %path, align 8, !dbg !5395
  %tobool = icmp ne i8* %3, null, !dbg !5395
  br i1 %tobool, label %if.then, label %if.end, !dbg !5397

if.then:                                          ; preds = %entry
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5398
  %5 = load i8*, i8** %path, align 8, !dbg !5399
  %6 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !5400
  %array_index = getelementptr inbounds %struct.FCurve, %struct.FCurve* %6, i32 0, i32 11, !dbg !5401
  %7 = load i32, i32* %array_index, align 4, !dbg !5401
  %8 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !5402
  %curval = getelementptr inbounds %struct.FCurve, %struct.FCurve* %8, i32 0, i32 8, !dbg !5403
  %9 = load float, float* %curval, align 4, !dbg !5403
  %call1 = call zeroext i8 @animsys_write_rna_setting(%struct.PointerRNA* %4, i8* %5, i32 %7, float %9), !dbg !5404
  store i8 %call1, i8* %ok, align 1, !dbg !5405
  br label %if.end, !dbg !5406

if.end:                                           ; preds = %if.then, %entry
  %10 = load i8, i8* %free_path, align 1, !dbg !5407
  %tobool2 = icmp ne i8 %10, 0, !dbg !5407
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5409

if.then3:                                         ; preds = %if.end
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5410
  %12 = load i8*, i8** %path, align 8, !dbg !5411
  call void %11(i8* %12), !dbg !5410
  br label %if.end4, !dbg !5410

if.end4:                                          ; preds = %if.then3, %if.end
  %13 = load i8, i8* %ok, align 1, !dbg !5412
  ret i8 %13, !dbg !5413
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @animsys_evaluate_action(%struct.PointerRNA* %ptr, %struct.bAction* %act, %struct.AnimMapper* %remap, float %ctime) #0 !dbg !5414 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %act.addr = alloca %struct.bAction*, align 8
  %remap.addr = alloca %struct.AnimMapper*, align 8
  %ctime.addr = alloca float, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5417, metadata !DIExpression()), !dbg !5418
  store %struct.bAction* %act, %struct.bAction** %act.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bAction** %act.addr, metadata !5419, metadata !DIExpression()), !dbg !5420
  store %struct.AnimMapper* %remap, %struct.AnimMapper** %remap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimMapper** %remap.addr, metadata !5421, metadata !DIExpression()), !dbg !5422
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !5423, metadata !DIExpression()), !dbg !5424
  %0 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !5425
  %cmp = icmp eq %struct.bAction* %0, null, !dbg !5427
  br i1 %cmp, label %if.then, label %if.end, !dbg !5428

if.then:                                          ; preds = %entry
  br label %return, !dbg !5429

if.end:                                           ; preds = %entry
  %1 = load %struct.AnimMapper*, %struct.AnimMapper** %remap.addr, align 8, !dbg !5430
  %tobool = icmp ne %struct.AnimMapper* %1, null, !dbg !5432
  br i1 %tobool, label %land.lhs.true, label %if.end3, !dbg !5433

land.lhs.true:                                    ; preds = %if.end
  %2 = load %struct.AnimMapper*, %struct.AnimMapper** %remap.addr, align 8, !dbg !5434
  %target = getelementptr inbounds %struct.AnimMapper, %struct.AnimMapper* %2, i32 0, i32 2, !dbg !5435
  %3 = load %struct.bAction*, %struct.bAction** %target, align 8, !dbg !5435
  %4 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !5436
  %cmp1 = icmp ne %struct.bAction* %3, %4, !dbg !5437
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5438

if.then2:                                         ; preds = %land.lhs.true
  store %struct.AnimMapper* null, %struct.AnimMapper** %remap.addr, align 8, !dbg !5439
  br label %if.end3, !dbg !5440

if.end3:                                          ; preds = %if.then2, %land.lhs.true, %if.end
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5441
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %5, i32 0, i32 0, !dbg !5442
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !5443
  %6 = load i8*, i8** %data, align 8, !dbg !5443
  %7 = bitcast i8* %6 to %struct.ID*, !dbg !5441
  %8 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !5444
  call void @action_idcode_patch_check(%struct.ID* %7, %struct.bAction* %8), !dbg !5445
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5446
  %10 = load %struct.bAction*, %struct.bAction** %act.addr, align 8, !dbg !5447
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %10, i32 0, i32 1, !dbg !5448
  %11 = load %struct.AnimMapper*, %struct.AnimMapper** %remap.addr, align 8, !dbg !5449
  %12 = load float, float* %ctime.addr, align 4, !dbg !5450
  call void @animsys_evaluate_fcurves(%struct.PointerRNA* %9, %struct.ListBase* %curves, %struct.AnimMapper* %11, float %12), !dbg !5451
  br label %return, !dbg !5452

return:                                           ; preds = %if.end3, %if.then
  ret void, !dbg !5452
}

; Function Attrs: noinline nounwind uwtable
define internal void @animsys_evaluate_fcurves(%struct.PointerRNA* %ptr, %struct.ListBase* %list, %struct.AnimMapper* %remap, float %ctime) #0 !dbg !5453 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %remap.addr = alloca %struct.AnimMapper*, align 8
  %ctime.addr = alloca float, align 4
  %fcu = alloca %struct.FCurve*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5456, metadata !DIExpression()), !dbg !5457
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !5458, metadata !DIExpression()), !dbg !5459
  store %struct.AnimMapper* %remap, %struct.AnimMapper** %remap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimMapper** %remap.addr, metadata !5460, metadata !DIExpression()), !dbg !5461
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !5462, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !5464, metadata !DIExpression()), !dbg !5465
  %0 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5466
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5468
  %1 = load i8*, i8** %first, align 8, !dbg !5468
  %2 = bitcast i8* %1 to %struct.FCurve*, !dbg !5466
  store %struct.FCurve* %2, %struct.FCurve** %fcu, align 8, !dbg !5469
  br label %for.cond, !dbg !5470

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5471
  %tobool = icmp ne %struct.FCurve* %3, null, !dbg !5473
  br i1 %tobool, label %for.body, label %for.end, !dbg !5473

for.body:                                         ; preds = %for.cond
  %4 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5474
  %grp = getelementptr inbounds %struct.FCurve, %struct.FCurve* %4, i32 0, i32 2, !dbg !5477
  %5 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !5477
  %cmp = icmp eq %struct.bActionGroup* %5, null, !dbg !5478
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5479

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5480
  %grp1 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %6, i32 0, i32 2, !dbg !5481
  %7 = load %struct.bActionGroup*, %struct.bActionGroup** %grp1, align 8, !dbg !5481
  %flag = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %7, i32 0, i32 3, !dbg !5482
  %8 = load i32, i32* %flag, align 8, !dbg !5482
  %and = and i32 %8, 16, !dbg !5483
  %cmp2 = icmp eq i32 %and, 0, !dbg !5484
  br i1 %cmp2, label %if.then, label %if.end8, !dbg !5485

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %9 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5486
  %flag3 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %9, i32 0, i32 9, !dbg !5489
  %10 = load i16, i16* %flag3, align 8, !dbg !5489
  %conv = sext i16 %10 to i32, !dbg !5486
  %and4 = and i32 %conv, 1040, !dbg !5490
  %cmp5 = icmp eq i32 %and4, 0, !dbg !5491
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !5492

if.then7:                                         ; preds = %if.then
  %11 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5493
  %12 = load float, float* %ctime.addr, align 4, !dbg !5495
  call void @calculate_fcurve(%struct.FCurve* %11, float %12), !dbg !5496
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5497
  %14 = load %struct.AnimMapper*, %struct.AnimMapper** %remap.addr, align 8, !dbg !5498
  %15 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5499
  %call = call zeroext i8 @animsys_execute_fcurve(%struct.PointerRNA* %13, %struct.AnimMapper* %14, %struct.FCurve* %15), !dbg !5500
  br label %if.end, !dbg !5501

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end8, !dbg !5502

if.end8:                                          ; preds = %if.end, %lor.lhs.false
  br label %for.inc, !dbg !5503

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5504
  %next = getelementptr inbounds %struct.FCurve, %struct.FCurve* %16, i32 0, i32 0, !dbg !5505
  %17 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !5505
  store %struct.FCurve* %17, %struct.FCurve** %fcu, align 8, !dbg !5506
  br label %for.cond, !dbg !5507, !llvm.loop !5508

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5510
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.NlaEvalStrip* @nlastrips_ctime_get_strip(%struct.ListBase* %list, %struct.ListBase* %strips, i16 signext %index, float %ctime) #0 !dbg !5511 {
entry:
  %retval = alloca %struct.NlaEvalStrip*, align 8
  %list.addr = alloca %struct.ListBase*, align 8
  %strips.addr = alloca %struct.ListBase*, align 8
  %index.addr = alloca i16, align 2
  %ctime.addr = alloca float, align 4
  %strip = alloca %struct.NlaStrip*, align 8
  %estrip = alloca %struct.NlaStrip*, align 8
  %nes = alloca %struct.NlaEvalStrip*, align 8
  %side = alloca i16, align 2
  store %struct.ListBase* %list, %struct.ListBase** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list.addr, metadata !5526, metadata !DIExpression()), !dbg !5527
  store %struct.ListBase* %strips, %struct.ListBase** %strips.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %strips.addr, metadata !5528, metadata !DIExpression()), !dbg !5529
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !5530, metadata !DIExpression()), !dbg !5531
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !5532, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %strip, metadata !5534, metadata !DIExpression()), !dbg !5535
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %estrip, metadata !5536, metadata !DIExpression()), !dbg !5537
  store %struct.NlaStrip* null, %struct.NlaStrip** %estrip, align 8, !dbg !5537
  call void @llvm.dbg.declare(metadata %struct.NlaEvalStrip** %nes, metadata !5538, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.declare(metadata i16* %side, metadata !5540, metadata !DIExpression()), !dbg !5541
  store i16 0, i16* %side, align 2, !dbg !5541
  %0 = load %struct.ListBase*, %struct.ListBase** %strips.addr, align 8, !dbg !5542
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5544
  %1 = load i8*, i8** %first, align 8, !dbg !5544
  %2 = bitcast i8* %1 to %struct.NlaStrip*, !dbg !5542
  store %struct.NlaStrip* %2, %struct.NlaStrip** %strip, align 8, !dbg !5545
  br label %for.cond, !dbg !5546

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5547
  %tobool = icmp ne %struct.NlaStrip* %3, null, !dbg !5549
  br i1 %tobool, label %for.body, label %for.end, !dbg !5549

for.body:                                         ; preds = %for.cond
  %4 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5550
  %start = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %4, i32 0, i32 10, !dbg !5550
  %5 = load float, float* %start, align 8, !dbg !5550
  %6 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5550
  %end = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %6, i32 0, i32 11, !dbg !5550
  %7 = load float, float* %end, align 4, !dbg !5550
  %cmp = fcmp olt float %5, %7, !dbg !5550
  br i1 %cmp, label %cond.true, label %cond.false6, !dbg !5553

cond.true:                                        ; preds = %for.body
  %8 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5550
  %start1 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %8, i32 0, i32 10, !dbg !5550
  %9 = load float, float* %start1, align 8, !dbg !5550
  %10 = load float, float* %ctime.addr, align 4, !dbg !5550
  %cmp2 = fcmp ole float %9, %10, !dbg !5550
  br i1 %cmp2, label %land.lhs.true, label %cond.false, !dbg !5550

land.lhs.true:                                    ; preds = %cond.true
  %11 = load float, float* %ctime.addr, align 4, !dbg !5550
  %12 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5550
  %end3 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %12, i32 0, i32 11, !dbg !5550
  %13 = load float, float* %end3, align 4, !dbg !5550
  %cmp4 = fcmp ole float %11, %13, !dbg !5550
  br i1 %cmp4, label %cond.true5, label %cond.false, !dbg !5550

cond.true5:                                       ; preds = %land.lhs.true
  br i1 true, label %if.then, label %if.end, !dbg !5550

cond.false:                                       ; preds = %land.lhs.true, %cond.true
  br i1 false, label %if.then, label %if.end, !dbg !5550

cond.false6:                                      ; preds = %for.body
  %14 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5550
  %end7 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %14, i32 0, i32 11, !dbg !5550
  %15 = load float, float* %end7, align 4, !dbg !5550
  %16 = load float, float* %ctime.addr, align 4, !dbg !5550
  %cmp8 = fcmp ole float %15, %16, !dbg !5550
  br i1 %cmp8, label %land.lhs.true9, label %cond.false13, !dbg !5550

land.lhs.true9:                                   ; preds = %cond.false6
  %17 = load float, float* %ctime.addr, align 4, !dbg !5550
  %18 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5550
  %start10 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %18, i32 0, i32 10, !dbg !5550
  %19 = load float, float* %start10, align 8, !dbg !5550
  %cmp11 = fcmp ole float %17, %19, !dbg !5550
  br i1 %cmp11, label %cond.true12, label %cond.false13, !dbg !5553

cond.true12:                                      ; preds = %land.lhs.true9
  br i1 true, label %if.then, label %if.end, !dbg !5550

cond.false13:                                     ; preds = %land.lhs.true9, %cond.false6
  br i1 false, label %if.then, label %if.end, !dbg !5553

if.then:                                          ; preds = %cond.false13, %cond.true12, %cond.false, %cond.true5
  %20 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5554
  store %struct.NlaStrip* %20, %struct.NlaStrip** %estrip, align 8, !dbg !5556
  store i16 0, i16* %side, align 2, !dbg !5557
  br label %for.end, !dbg !5558

if.end:                                           ; preds = %cond.false13, %cond.true12, %cond.false, %cond.true5
  %21 = load float, float* %ctime.addr, align 4, !dbg !5559
  %22 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5561
  %start14 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %22, i32 0, i32 10, !dbg !5562
  %23 = load float, float* %start14, align 8, !dbg !5562
  %cmp15 = fcmp olt float %21, %23, !dbg !5563
  br i1 %cmp15, label %if.then16, label %if.end31, !dbg !5564

if.then16:                                        ; preds = %if.end
  %24 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5565
  %25 = load %struct.ListBase*, %struct.ListBase** %strips.addr, align 8, !dbg !5568
  %first17 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %25, i32 0, i32 0, !dbg !5569
  %26 = load i8*, i8** %first17, align 8, !dbg !5569
  %27 = bitcast i8* %26 to %struct.NlaStrip*, !dbg !5568
  %cmp18 = icmp eq %struct.NlaStrip* %24, %27, !dbg !5570
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !5571

if.then19:                                        ; preds = %if.then16
  %28 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5572
  %extendmode = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %28, i32 0, i32 19, !dbg !5575
  %29 = load i16, i16* %extendmode, align 2, !dbg !5575
  %conv = sext i16 %29 to i32, !dbg !5572
  %cmp20 = icmp eq i32 %conv, 0, !dbg !5576
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !5577

if.then22:                                        ; preds = %if.then19
  %30 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5578
  store %struct.NlaStrip* %30, %struct.NlaStrip** %estrip, align 8, !dbg !5579
  br label %if.end23, !dbg !5580

if.end23:                                         ; preds = %if.then22, %if.then19
  store i16 -1, i16* %side, align 2, !dbg !5581
  br label %if.end30, !dbg !5582

if.else:                                          ; preds = %if.then16
  %31 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5583
  %prev = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %31, i32 0, i32 1, !dbg !5585
  %32 = load %struct.NlaStrip*, %struct.NlaStrip** %prev, align 8, !dbg !5585
  store %struct.NlaStrip* %32, %struct.NlaStrip** %strip, align 8, !dbg !5586
  %33 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5587
  %extendmode24 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %33, i32 0, i32 19, !dbg !5589
  %34 = load i16, i16* %extendmode24, align 2, !dbg !5589
  %conv25 = sext i16 %34 to i32, !dbg !5587
  %cmp26 = icmp ne i32 %conv25, 2, !dbg !5590
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !5591

if.then28:                                        ; preds = %if.else
  %35 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5592
  store %struct.NlaStrip* %35, %struct.NlaStrip** %estrip, align 8, !dbg !5593
  br label %if.end29, !dbg !5594

if.end29:                                         ; preds = %if.then28, %if.else
  store i16 1, i16* %side, align 2, !dbg !5595
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end23
  br label %for.end, !dbg !5596

if.end31:                                         ; preds = %if.end
  %36 = load float, float* %ctime.addr, align 4, !dbg !5597
  %37 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5599
  %end32 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %37, i32 0, i32 11, !dbg !5600
  %38 = load float, float* %end32, align 4, !dbg !5600
  %cmp33 = fcmp ogt float %36, %38, !dbg !5601
  br i1 %cmp33, label %if.then35, label %if.end46, !dbg !5602

if.then35:                                        ; preds = %if.end31
  %39 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5603
  %40 = load %struct.ListBase*, %struct.ListBase** %strips.addr, align 8, !dbg !5606
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %40, i32 0, i32 1, !dbg !5607
  %41 = load i8*, i8** %last, align 8, !dbg !5607
  %42 = bitcast i8* %41 to %struct.NlaStrip*, !dbg !5606
  %cmp36 = icmp eq %struct.NlaStrip* %39, %42, !dbg !5608
  br i1 %cmp36, label %if.then38, label %if.end45, !dbg !5609

if.then38:                                        ; preds = %if.then35
  %43 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5610
  %extendmode39 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %43, i32 0, i32 19, !dbg !5613
  %44 = load i16, i16* %extendmode39, align 2, !dbg !5613
  %conv40 = sext i16 %44 to i32, !dbg !5610
  %cmp41 = icmp ne i32 %conv40, 2, !dbg !5614
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !5615

if.then43:                                        ; preds = %if.then38
  %45 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5616
  store %struct.NlaStrip* %45, %struct.NlaStrip** %estrip, align 8, !dbg !5617
  br label %if.end44, !dbg !5618

if.end44:                                         ; preds = %if.then43, %if.then38
  store i16 1, i16* %side, align 2, !dbg !5619
  br label %for.end, !dbg !5620

if.end45:                                         ; preds = %if.then35
  br label %if.end46, !dbg !5621

if.end46:                                         ; preds = %if.end45, %if.end31
  br label %for.inc, !dbg !5622

for.inc:                                          ; preds = %if.end46
  %46 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5623
  %next = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %46, i32 0, i32 0, !dbg !5624
  %47 = load %struct.NlaStrip*, %struct.NlaStrip** %next, align 8, !dbg !5624
  store %struct.NlaStrip* %47, %struct.NlaStrip** %strip, align 8, !dbg !5625
  br label %for.cond, !dbg !5626, !llvm.loop !5627

for.end:                                          ; preds = %if.end44, %if.end30, %if.then, %for.cond
  %48 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5629
  %cmp47 = icmp eq %struct.NlaStrip* %48, null, !dbg !5631
  br i1 %cmp47, label %if.then50, label %lor.lhs.false, !dbg !5632

lor.lhs.false:                                    ; preds = %for.end
  %49 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5633
  %flag = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %49, i32 0, i32 23, !dbg !5634
  %50 = load i32, i32* %flag, align 8, !dbg !5634
  %and = and i32 %50, 4096, !dbg !5635
  %tobool49 = icmp ne i32 %and, 0, !dbg !5635
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !5636

if.then50:                                        ; preds = %lor.lhs.false, %for.end
  store %struct.NlaEvalStrip* null, %struct.NlaEvalStrip** %retval, align 8, !dbg !5637
  br label %return, !dbg !5637

if.end51:                                         ; preds = %lor.lhs.false
  %51 = load i16, i16* %side, align 2, !dbg !5638
  %conv52 = sext i16 %51 to i32, !dbg !5638
  switch i32 %conv52, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 1, label %sw.bb54
  ], !dbg !5639

sw.bb:                                            ; preds = %if.end51
  %52 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5640
  %start53 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %52, i32 0, i32 10, !dbg !5642
  %53 = load float, float* %start53, align 8, !dbg !5642
  store float %53, float* %ctime.addr, align 4, !dbg !5643
  br label %sw.epilog, !dbg !5644

sw.bb54:                                          ; preds = %if.end51
  %54 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5645
  %end55 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %54, i32 0, i32 11, !dbg !5646
  %55 = load float, float* %end55, align 4, !dbg !5646
  store float %55, float* %ctime.addr, align 4, !dbg !5647
  br label %sw.epilog, !dbg !5648

sw.epilog:                                        ; preds = %if.end51, %sw.bb54, %sw.bb
  %56 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5649
  %57 = load float, float* %ctime.addr, align 4, !dbg !5650
  call void @nlastrip_evaluate_controls(%struct.NlaStrip* %56, float %57), !dbg !5651
  %58 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5652
  %influence = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %58, i32 0, i32 8, !dbg !5654
  %59 = load float, float* %influence, align 8, !dbg !5654
  %cmp56 = fcmp ole float %59, 0.000000e+00, !dbg !5655
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !5656

if.then58:                                        ; preds = %sw.epilog
  store %struct.NlaEvalStrip* null, %struct.NlaEvalStrip** %retval, align 8, !dbg !5657
  br label %return, !dbg !5657

if.end59:                                         ; preds = %sw.epilog
  %60 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5658
  %type = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %60, i32 0, i32 21, !dbg !5659
  %61 = load i16, i16* %type, align 2, !dbg !5659
  %conv60 = sext i16 %61 to i32, !dbg !5658
  switch i32 %conv60, label %sw.epilog80 [
    i32 0, label %sw.bb61
    i32 1, label %sw.bb66
  ], !dbg !5660

sw.bb61:                                          ; preds = %if.end59
  %62 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5661
  %act = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %62, i32 0, i32 3, !dbg !5664
  %63 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !5664
  %cmp62 = icmp eq %struct.bAction* %63, null, !dbg !5665
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !5666

if.then64:                                        ; preds = %sw.bb61
  store %struct.NlaEvalStrip* null, %struct.NlaEvalStrip** %retval, align 8, !dbg !5667
  br label %return, !dbg !5667

if.end65:                                         ; preds = %sw.bb61
  br label %sw.epilog80, !dbg !5668

sw.bb66:                                          ; preds = %if.end59
  %64 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5669
  %prev67 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %64, i32 0, i32 1, !dbg !5669
  %65 = load %struct.NlaStrip*, %struct.NlaStrip** %prev67, align 8, !dbg !5669
  %cmp68 = icmp eq %struct.NlaStrip* null, %65, !dbg !5669
  br i1 %cmp68, label %if.then74, label %lor.lhs.false70, !dbg !5669

lor.lhs.false70:                                  ; preds = %sw.bb66
  %66 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5669
  %next71 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %66, i32 0, i32 0, !dbg !5669
  %67 = load %struct.NlaStrip*, %struct.NlaStrip** %next71, align 8, !dbg !5669
  %cmp72 = icmp eq %struct.NlaStrip* null, %67, !dbg !5669
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !5671

if.then74:                                        ; preds = %lor.lhs.false70, %sw.bb66
  store %struct.NlaEvalStrip* null, %struct.NlaEvalStrip** %retval, align 8, !dbg !5672
  br label %return, !dbg !5672

if.end75:                                         ; preds = %lor.lhs.false70
  %68 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5673
  %prev76 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %68, i32 0, i32 1, !dbg !5674
  %69 = load %struct.NlaStrip*, %struct.NlaStrip** %prev76, align 8, !dbg !5674
  %70 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5675
  %start77 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %70, i32 0, i32 10, !dbg !5676
  %71 = load float, float* %start77, align 8, !dbg !5676
  call void @nlastrip_evaluate_controls(%struct.NlaStrip* %69, float %71), !dbg !5677
  %72 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5678
  %next78 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %72, i32 0, i32 0, !dbg !5679
  %73 = load %struct.NlaStrip*, %struct.NlaStrip** %next78, align 8, !dbg !5679
  %74 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5680
  %end79 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %74, i32 0, i32 11, !dbg !5681
  %75 = load float, float* %end79, align 4, !dbg !5681
  call void @nlastrip_evaluate_controls(%struct.NlaStrip* %73, float %75), !dbg !5682
  br label %sw.epilog80, !dbg !5683

sw.epilog80:                                      ; preds = %if.end59, %if.end75, %if.end65
  %76 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5684
  %call = call i8* %76(i64 40, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0)), !dbg !5684
  %77 = bitcast i8* %call to %struct.NlaEvalStrip*, !dbg !5684
  store %struct.NlaEvalStrip* %77, %struct.NlaEvalStrip** %nes, align 8, !dbg !5685
  %78 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5686
  %79 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes, align 8, !dbg !5687
  %strip81 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %79, i32 0, i32 3, !dbg !5688
  store %struct.NlaStrip* %78, %struct.NlaStrip** %strip81, align 8, !dbg !5689
  %80 = load i16, i16* %side, align 2, !dbg !5690
  %81 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes, align 8, !dbg !5691
  %strip_mode = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %81, i32 0, i32 5, !dbg !5692
  store i16 %80, i16* %strip_mode, align 2, !dbg !5693
  %82 = load i16, i16* %index.addr, align 2, !dbg !5694
  %83 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes, align 8, !dbg !5695
  %track_index = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %83, i32 0, i32 4, !dbg !5696
  store i16 %82, i16* %track_index, align 8, !dbg !5697
  %84 = load %struct.NlaStrip*, %struct.NlaStrip** %estrip, align 8, !dbg !5698
  %strip_time = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %84, i32 0, i32 9, !dbg !5699
  %85 = load float, float* %strip_time, align 4, !dbg !5699
  %86 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes, align 8, !dbg !5700
  %strip_time82 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %86, i32 0, i32 6, !dbg !5701
  store float %85, float* %strip_time82, align 4, !dbg !5702
  %87 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5703
  %tobool83 = icmp ne %struct.ListBase* %87, null, !dbg !5703
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !5705

if.then84:                                        ; preds = %sw.epilog80
  %88 = load %struct.ListBase*, %struct.ListBase** %list.addr, align 8, !dbg !5706
  %89 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes, align 8, !dbg !5707
  %90 = bitcast %struct.NlaEvalStrip* %89 to i8*, !dbg !5707
  call void @BLI_addtail(%struct.ListBase* %88, i8* %90), !dbg !5708
  br label %if.end85, !dbg !5708

if.end85:                                         ; preds = %if.then84, %sw.epilog80
  %91 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes, align 8, !dbg !5709
  store %struct.NlaEvalStrip* %91, %struct.NlaEvalStrip** %retval, align 8, !dbg !5710
  br label %return, !dbg !5710

return:                                           ; preds = %if.end85, %if.then74, %if.then64, %if.then58, %if.then50
  %92 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %retval, align 8, !dbg !5711
  ret %struct.NlaEvalStrip* %92, !dbg !5711
}

; Function Attrs: noinline nounwind uwtable
define internal void @nlastrip_evaluate_controls(%struct.NlaStrip* %strip, float %ctime) #0 !dbg !5712 {
entry:
  %strip.addr = alloca %struct.NlaStrip*, align 8
  %ctime.addr = alloca float, align 4
  %strip_ptr = alloca %struct.PointerRNA, align 8
  store %struct.NlaStrip* %strip, %struct.NlaStrip** %strip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %strip.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !5717, metadata !DIExpression()), !dbg !5718
  %0 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5719
  %flag = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %0, i32 0, i32 23, !dbg !5721
  %1 = load i32, i32* %flag, align 8, !dbg !5721
  %and = and i32 %1, 64, !dbg !5722
  %cmp = icmp eq i32 %and, 0, !dbg !5723
  br i1 %cmp, label %if.then, label %if.end, !dbg !5724

if.then:                                          ; preds = %entry
  %2 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5725
  %3 = load float, float* %ctime.addr, align 4, !dbg !5726
  %call = call float @nlastrip_get_frame(%struct.NlaStrip* %2, float %3, i16 signext 0), !dbg !5727
  %4 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5728
  %strip_time = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %4, i32 0, i32 9, !dbg !5729
  store float %call, float* %strip_time, align 4, !dbg !5730
  br label %if.end, !dbg !5728

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5731
  %flag1 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %5, i32 0, i32 23, !dbg !5733
  %6 = load i32, i32* %flag1, align 8, !dbg !5733
  %and2 = and i32 %6, 32, !dbg !5734
  %cmp3 = icmp eq i32 %and2, 0, !dbg !5735
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !5736

if.then4:                                         ; preds = %if.end
  %7 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5737
  %8 = load float, float* %ctime.addr, align 4, !dbg !5738
  %call5 = call float @nlastrip_get_influence(%struct.NlaStrip* %7, float %8), !dbg !5739
  %9 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5740
  %influence = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %9, i32 0, i32 8, !dbg !5741
  store float %call5, float* %influence, align 8, !dbg !5742
  br label %if.end6, !dbg !5740

if.end6:                                          ; preds = %if.then4, %if.end
  %10 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5743
  %fcurves = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %10, i32 0, i32 5, !dbg !5745
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %fcurves, i32 0, i32 0, !dbg !5746
  %11 = load i8*, i8** %first, align 8, !dbg !5746
  %tobool = icmp ne i8* %11, null, !dbg !5743
  br i1 %tobool, label %if.then7, label %if.end9, !dbg !5747

if.then7:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %strip_ptr, metadata !5748, metadata !DIExpression()), !dbg !5750
  %12 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5751
  %13 = bitcast %struct.NlaStrip* %12 to i8*, !dbg !5751
  call void @RNA_pointer_create(%struct.ID* null, %struct.StructRNA* @RNA_NlaStrip, i8* %13, %struct.PointerRNA* %strip_ptr), !dbg !5752
  %14 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5753
  %fcurves8 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %14, i32 0, i32 5, !dbg !5754
  %15 = load float, float* %ctime.addr, align 4, !dbg !5755
  call void @animsys_evaluate_fcurves(%struct.PointerRNA* %strip_ptr, %struct.ListBase* %fcurves8, %struct.AnimMapper* null, float %15), !dbg !5756
  br label %if.end9, !dbg !5757

if.end9:                                          ; preds = %if.then7, %if.end6
  %16 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5758
  %flag10 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %16, i32 0, i32 23, !dbg !5760
  %17 = load i32, i32* %flag10, align 8, !dbg !5760
  %and11 = and i32 %17, 64, !dbg !5761
  %tobool12 = icmp ne i32 %and11, 0, !dbg !5761
  br i1 %tobool12, label %land.lhs.true, label %if.end24, !dbg !5762

land.lhs.true:                                    ; preds = %if.end9
  %18 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5763
  %flag13 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %18, i32 0, i32 23, !dbg !5764
  %19 = load i32, i32* %flag13, align 8, !dbg !5764
  %and14 = and i32 %19, 128, !dbg !5765
  %tobool15 = icmp ne i32 %and14, 0, !dbg !5765
  br i1 %tobool15, label %if.then16, label %if.end24, !dbg !5766

if.then16:                                        ; preds = %land.lhs.true
  %20 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5767
  %strip_time17 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %20, i32 0, i32 9, !dbg !5768
  %21 = load float, float* %strip_time17, align 4, !dbg !5768
  %22 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5769
  %actstart = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %22, i32 0, i32 12, !dbg !5770
  %23 = load float, float* %actstart, align 8, !dbg !5770
  %sub = fsub float %21, %23, !dbg !5771
  %conv = fpext float %sub to double, !dbg !5767
  %24 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5772
  %actend = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %24, i32 0, i32 13, !dbg !5773
  %25 = load float, float* %actend, align 4, !dbg !5773
  %26 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5774
  %actstart18 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %26, i32 0, i32 12, !dbg !5775
  %27 = load float, float* %actstart18, align 8, !dbg !5775
  %sub19 = fsub float %25, %27, !dbg !5776
  %conv20 = fpext float %sub19 to double, !dbg !5772
  %call21 = call double @fmod(double %conv, double %conv20) #7, !dbg !5777
  %conv22 = fptrunc double %call21 to float, !dbg !5777
  %28 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !5778
  %strip_time23 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %28, i32 0, i32 9, !dbg !5779
  store float %conv22, float* %strip_time23, align 4, !dbg !5780
  br label %if.end24, !dbg !5778

if.end24:                                         ; preds = %if.then16, %land.lhs.true, %if.end9
  ret void, !dbg !5781
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nlastrip_evaluate(%struct.PointerRNA* %ptr, %struct.ListBase* %channels, %struct.ListBase* %modifiers, %struct.NlaEvalStrip* %nes) #0 !dbg !5782 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %channels.addr = alloca %struct.ListBase*, align 8
  %modifiers.addr = alloca %struct.ListBase*, align 8
  %nes.addr = alloca %struct.NlaEvalStrip*, align 8
  %strip = alloca %struct.NlaStrip*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5785, metadata !DIExpression()), !dbg !5786
  store %struct.ListBase* %channels, %struct.ListBase** %channels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %channels.addr, metadata !5787, metadata !DIExpression()), !dbg !5788
  store %struct.ListBase* %modifiers, %struct.ListBase** %modifiers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %modifiers.addr, metadata !5789, metadata !DIExpression()), !dbg !5790
  store %struct.NlaEvalStrip* %nes, %struct.NlaEvalStrip** %nes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NlaEvalStrip** %nes.addr, metadata !5791, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %strip, metadata !5793, metadata !DIExpression()), !dbg !5794
  %0 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !5795
  %strip1 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %0, i32 0, i32 3, !dbg !5796
  %1 = load %struct.NlaStrip*, %struct.NlaStrip** %strip1, align 8, !dbg !5796
  store %struct.NlaStrip* %1, %struct.NlaStrip** %strip, align 8, !dbg !5794
  %2 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5797
  %flag = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %2, i32 0, i32 23, !dbg !5799
  %3 = load i32, i32* %flag, align 8, !dbg !5799
  %and = and i32 %3, -2147483648, !dbg !5800
  %tobool = icmp ne i32 %and, 0, !dbg !5800
  br i1 %tobool, label %if.then, label %if.end, !dbg !5801

if.then:                                          ; preds = %entry
  br label %return, !dbg !5802

if.end:                                           ; preds = %entry
  %4 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5803
  %flag2 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %4, i32 0, i32 23, !dbg !5804
  %5 = load i32, i32* %flag2, align 8, !dbg !5805
  %or = or i32 %5, -2147483648, !dbg !5805
  store i32 %or, i32* %flag2, align 8, !dbg !5805
  %6 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5806
  %type = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %6, i32 0, i32 21, !dbg !5807
  %7 = load i16, i16* %type, align 2, !dbg !5807
  %conv = sext i16 %7 to i32, !dbg !5806
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 2, label %sw.bb4
  ], !dbg !5808

sw.bb:                                            ; preds = %if.end
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5809
  %9 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !5811
  %10 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !5812
  %11 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !5813
  call void @nlastrip_evaluate_actionclip(%struct.PointerRNA* %8, %struct.ListBase* %9, %struct.ListBase* %10, %struct.NlaEvalStrip* %11), !dbg !5814
  br label %sw.epilog, !dbg !5815

sw.bb3:                                           ; preds = %if.end
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5816
  %13 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !5817
  %14 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !5818
  %15 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !5819
  call void @nlastrip_evaluate_transition(%struct.PointerRNA* %12, %struct.ListBase* %13, %struct.ListBase* %14, %struct.NlaEvalStrip* %15), !dbg !5820
  br label %sw.epilog, !dbg !5821

sw.bb4:                                           ; preds = %if.end
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5822
  %17 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !5823
  %18 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !5824
  %19 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !5825
  call void @nlastrip_evaluate_meta(%struct.PointerRNA* %16, %struct.ListBase* %17, %struct.ListBase* %18, %struct.NlaEvalStrip* %19), !dbg !5826
  br label %sw.epilog, !dbg !5827

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !5828

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb3, %sw.bb
  %20 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5829
  %flag5 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %20, i32 0, i32 23, !dbg !5830
  %21 = load i32, i32* %flag5, align 8, !dbg !5831
  %and6 = and i32 %21, 2147483647, !dbg !5831
  store i32 %and6, i32* %flag5, align 8, !dbg !5831
  br label %return, !dbg !5832

return:                                           ; preds = %sw.epilog, %if.then
  ret void, !dbg !5832
}

; Function Attrs: noinline nounwind uwtable
define internal void @nlastrip_evaluate_actionclip(%struct.PointerRNA* %ptr, %struct.ListBase* %channels, %struct.ListBase* %modifiers, %struct.NlaEvalStrip* %nes) #0 !dbg !5833 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %channels.addr = alloca %struct.ListBase*, align 8
  %modifiers.addr = alloca %struct.ListBase*, align 8
  %nes.addr = alloca %struct.NlaEvalStrip*, align 8
  %storage = alloca %struct.GHash*, align 8
  %tmp_modifiers = alloca %struct.ListBase, align 8
  %strip = alloca %struct.NlaStrip*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %evaltime = alloca float, align 4
  %nec = alloca %struct.NlaEvalChannel*, align 8
  %value = alloca float, align 4
  %newChan = alloca i8, align 1
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5834, metadata !DIExpression()), !dbg !5835
  store %struct.ListBase* %channels, %struct.ListBase** %channels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %channels.addr, metadata !5836, metadata !DIExpression()), !dbg !5837
  store %struct.ListBase* %modifiers, %struct.ListBase** %modifiers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %modifiers.addr, metadata !5838, metadata !DIExpression()), !dbg !5839
  store %struct.NlaEvalStrip* %nes, %struct.NlaEvalStrip** %nes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NlaEvalStrip** %nes.addr, metadata !5840, metadata !DIExpression()), !dbg !5841
  call void @llvm.dbg.declare(metadata %struct.GHash** %storage, metadata !5842, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.declare(metadata %struct.ListBase* %tmp_modifiers, metadata !5847, metadata !DIExpression()), !dbg !5848
  %0 = bitcast %struct.ListBase* %tmp_modifiers to i8*, !dbg !5848
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !5848
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %strip, metadata !5849, metadata !DIExpression()), !dbg !5850
  %1 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !5851
  %strip1 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %1, i32 0, i32 3, !dbg !5852
  %2 = load %struct.NlaStrip*, %struct.NlaStrip** %strip1, align 8, !dbg !5852
  store %struct.NlaStrip* %2, %struct.NlaStrip** %strip, align 8, !dbg !5850
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !5853, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.declare(metadata float* %evaltime, metadata !5855, metadata !DIExpression()), !dbg !5856
  %3 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5857
  %cmp = icmp eq %struct.NlaStrip* %3, null, !dbg !5859
  br i1 %cmp, label %if.then, label %if.end, !dbg !5860

if.then:                                          ; preds = %entry
  br label %return, !dbg !5861

if.end:                                           ; preds = %entry
  %4 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5862
  %act = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %4, i32 0, i32 3, !dbg !5864
  %5 = load %struct.bAction*, %struct.bAction** %act, align 8, !dbg !5864
  %cmp2 = icmp eq %struct.bAction* %5, null, !dbg !5865
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5866

if.then3:                                         ; preds = %if.end
  %6 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5867
  %name = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %6, i32 0, i32 7, !dbg !5869
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !5867
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i64 0, i64 0), i8* %arraydecay), !dbg !5870
  br label %return, !dbg !5871

if.end4:                                          ; preds = %if.end
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5872
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %7, i32 0, i32 0, !dbg !5873
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !5874
  %8 = load i8*, i8** %data, align 8, !dbg !5874
  %9 = bitcast i8* %8 to %struct.ID*, !dbg !5872
  %10 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5875
  %act5 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %10, i32 0, i32 3, !dbg !5876
  %11 = load %struct.bAction*, %struct.bAction** %act5, align 8, !dbg !5876
  call void @action_idcode_patch_check(%struct.ID* %9, %struct.bAction* %11), !dbg !5877
  %12 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5878
  %modifiers6 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %12, i32 0, i32 6, !dbg !5879
  %13 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !5880
  call void @nlaeval_fmodifiers_join_stacks(%struct.ListBase* %tmp_modifiers, %struct.ListBase* %modifiers6, %struct.ListBase* %13), !dbg !5881
  %call7 = call %struct.GHash* @evaluate_fmodifiers_storage_new(%struct.ListBase* %tmp_modifiers), !dbg !5882
  store %struct.GHash* %call7, %struct.GHash** %storage, align 8, !dbg !5883
  %14 = load %struct.GHash*, %struct.GHash** %storage, align 8, !dbg !5884
  %15 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5885
  %strip_time = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %15, i32 0, i32 9, !dbg !5886
  %16 = load float, float* %strip_time, align 4, !dbg !5886
  %call8 = call float @evaluate_time_fmodifiers(%struct.GHash* %14, %struct.ListBase* %tmp_modifiers, %struct.FCurve* null, float 0.000000e+00, float %16), !dbg !5887
  store float %call8, float* %evaltime, align 4, !dbg !5888
  %17 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5889
  %act9 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %17, i32 0, i32 3, !dbg !5891
  %18 = load %struct.bAction*, %struct.bAction** %act9, align 8, !dbg !5891
  %curves = getelementptr inbounds %struct.bAction, %struct.bAction* %18, i32 0, i32 1, !dbg !5892
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curves, i32 0, i32 0, !dbg !5893
  %19 = load i8*, i8** %first, align 8, !dbg !5893
  %20 = bitcast i8* %19 to %struct.FCurve*, !dbg !5889
  store %struct.FCurve* %20, %struct.FCurve** %fcu, align 8, !dbg !5894
  br label %for.cond, !dbg !5895

for.cond:                                         ; preds = %for.inc, %if.end4
  %21 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5896
  %tobool = icmp ne %struct.FCurve* %21, null, !dbg !5898
  br i1 %tobool, label %for.body, label %for.end, !dbg !5898

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.NlaEvalChannel** %nec, metadata !5899, metadata !DIExpression()), !dbg !5912
  call void @llvm.dbg.declare(metadata float* %value, metadata !5913, metadata !DIExpression()), !dbg !5914
  store float 0.000000e+00, float* %value, align 4, !dbg !5914
  call void @llvm.dbg.declare(metadata i8* %newChan, metadata !5915, metadata !DIExpression()), !dbg !5916
  %22 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5917
  %flag = getelementptr inbounds %struct.FCurve, %struct.FCurve* %22, i32 0, i32 9, !dbg !5919
  %23 = load i16, i16* %flag, align 8, !dbg !5919
  %conv = sext i16 %23 to i32, !dbg !5917
  %and = and i32 %conv, 1040, !dbg !5920
  %tobool10 = icmp ne i32 %and, 0, !dbg !5920
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5921

if.then11:                                        ; preds = %for.body
  br label %for.inc, !dbg !5922

if.end12:                                         ; preds = %for.body
  %24 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5923
  %grp = getelementptr inbounds %struct.FCurve, %struct.FCurve* %24, i32 0, i32 2, !dbg !5925
  %25 = load %struct.bActionGroup*, %struct.bActionGroup** %grp, align 8, !dbg !5925
  %tobool13 = icmp ne %struct.bActionGroup* %25, null, !dbg !5926
  br i1 %tobool13, label %land.lhs.true, label %if.end19, !dbg !5927

land.lhs.true:                                    ; preds = %if.end12
  %26 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5928
  %grp14 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %26, i32 0, i32 2, !dbg !5929
  %27 = load %struct.bActionGroup*, %struct.bActionGroup** %grp14, align 8, !dbg !5929
  %flag15 = getelementptr inbounds %struct.bActionGroup, %struct.bActionGroup* %27, i32 0, i32 3, !dbg !5930
  %28 = load i32, i32* %flag15, align 8, !dbg !5930
  %and16 = and i32 %28, 16, !dbg !5931
  %tobool17 = icmp ne i32 %and16, 0, !dbg !5931
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !5932

if.then18:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !5933

if.end19:                                         ; preds = %land.lhs.true, %if.end12
  %29 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5934
  %30 = load float, float* %evaltime, align 4, !dbg !5935
  %call20 = call float @evaluate_fcurve(%struct.FCurve* %29, float %30), !dbg !5936
  store float %call20, float* %value, align 4, !dbg !5937
  %31 = load %struct.GHash*, %struct.GHash** %storage, align 8, !dbg !5938
  %32 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5939
  %33 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5940
  %strip_time21 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %33, i32 0, i32 9, !dbg !5941
  %34 = load float, float* %strip_time21, align 4, !dbg !5941
  call void @evaluate_value_fmodifiers(%struct.GHash* %31, %struct.ListBase* %tmp_modifiers, %struct.FCurve* %32, float* %value, float %34), !dbg !5942
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5943
  %36 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !5944
  %37 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !5945
  %38 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5946
  %call22 = call %struct.NlaEvalChannel* @nlaevalchan_verify(%struct.PointerRNA* %35, %struct.ListBase* %36, %struct.NlaEvalStrip* %37, %struct.FCurve* %38, i8* %newChan), !dbg !5947
  store %struct.NlaEvalChannel* %call22, %struct.NlaEvalChannel** %nec, align 8, !dbg !5948
  %39 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !5949
  %tobool23 = icmp ne %struct.NlaEvalChannel* %39, null, !dbg !5949
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !5951

if.then24:                                        ; preds = %if.end19
  %40 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !5952
  %41 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !5953
  %42 = load float, float* %value, align 4, !dbg !5954
  %43 = load i8, i8* %newChan, align 1, !dbg !5955
  call void @nlaevalchan_accumulate(%struct.NlaEvalChannel* %40, %struct.NlaEvalStrip* %41, float %42, i8 zeroext %43), !dbg !5956
  br label %if.end25, !dbg !5956

if.end25:                                         ; preds = %if.then24, %if.end19
  br label %for.inc, !dbg !5957

for.inc:                                          ; preds = %if.end25, %if.then18, %if.then11
  %44 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !5958
  %next = getelementptr inbounds %struct.FCurve, %struct.FCurve* %44, i32 0, i32 0, !dbg !5959
  %45 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !5959
  store %struct.FCurve* %45, %struct.FCurve** %fcu, align 8, !dbg !5960
  br label %for.cond, !dbg !5961, !llvm.loop !5962

for.end:                                          ; preds = %for.cond
  %46 = load %struct.GHash*, %struct.GHash** %storage, align 8, !dbg !5964
  call void @evaluate_fmodifiers_storage_free(%struct.GHash* %46), !dbg !5965
  %47 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5966
  %modifiers26 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %47, i32 0, i32 6, !dbg !5967
  %48 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !5968
  call void @nlaeval_fmodifiers_split_stacks(%struct.ListBase* %modifiers26, %struct.ListBase* %48), !dbg !5969
  br label %return, !dbg !5970

return:                                           ; preds = %for.end, %if.then3, %if.then
  ret void, !dbg !5970
}

; Function Attrs: noinline nounwind uwtable
define internal void @nlastrip_evaluate_transition(%struct.PointerRNA* %ptr, %struct.ListBase* %channels, %struct.ListBase* %modifiers, %struct.NlaEvalStrip* %nes) #0 !dbg !5971 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %channels.addr = alloca %struct.ListBase*, align 8
  %modifiers.addr = alloca %struct.ListBase*, align 8
  %nes.addr = alloca %struct.NlaEvalStrip*, align 8
  %tmp_channels = alloca %struct.ListBase, align 8
  %tmp_modifiers = alloca %struct.ListBase, align 8
  %tmp_nes = alloca %struct.NlaEvalStrip, align 8
  %s1 = alloca %struct.NlaStrip*, align 8
  %s2 = alloca %struct.NlaStrip*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5972, metadata !DIExpression()), !dbg !5973
  store %struct.ListBase* %channels, %struct.ListBase** %channels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %channels.addr, metadata !5974, metadata !DIExpression()), !dbg !5975
  store %struct.ListBase* %modifiers, %struct.ListBase** %modifiers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %modifiers.addr, metadata !5976, metadata !DIExpression()), !dbg !5977
  store %struct.NlaEvalStrip* %nes, %struct.NlaEvalStrip** %nes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NlaEvalStrip** %nes.addr, metadata !5978, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.declare(metadata %struct.ListBase* %tmp_channels, metadata !5980, metadata !DIExpression()), !dbg !5981
  %0 = bitcast %struct.ListBase* %tmp_channels to i8*, !dbg !5981
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !5981
  call void @llvm.dbg.declare(metadata %struct.ListBase* %tmp_modifiers, metadata !5982, metadata !DIExpression()), !dbg !5983
  %1 = bitcast %struct.ListBase* %tmp_modifiers to i8*, !dbg !5983
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false), !dbg !5983
  call void @llvm.dbg.declare(metadata %struct.NlaEvalStrip* %tmp_nes, metadata !5984, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %s1, metadata !5986, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %s2, metadata !5988, metadata !DIExpression()), !dbg !5989
  %2 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !5990
  %strip = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %2, i32 0, i32 3, !dbg !5991
  %3 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !5991
  %modifiers1 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %3, i32 0, i32 6, !dbg !5992
  %4 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !5993
  call void @nlaeval_fmodifiers_join_stacks(%struct.ListBase* %tmp_modifiers, %struct.ListBase* %modifiers1, %struct.ListBase* %4), !dbg !5994
  %5 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !5995
  %strip2 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %5, i32 0, i32 3, !dbg !5997
  %6 = load %struct.NlaStrip*, %struct.NlaStrip** %strip2, align 8, !dbg !5997
  %flag = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %6, i32 0, i32 23, !dbg !5998
  %7 = load i32, i32* %flag, align 8, !dbg !5998
  %and = and i32 %7, 2048, !dbg !5999
  %tobool = icmp ne i32 %and, 0, !dbg !5999
  br i1 %tobool, label %if.then, label %if.else, !dbg !6000

if.then:                                          ; preds = %entry
  %8 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !6001
  %strip3 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %8, i32 0, i32 3, !dbg !6003
  %9 = load %struct.NlaStrip*, %struct.NlaStrip** %strip3, align 8, !dbg !6003
  %next = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %9, i32 0, i32 0, !dbg !6004
  %10 = load %struct.NlaStrip*, %struct.NlaStrip** %next, align 8, !dbg !6004
  store %struct.NlaStrip* %10, %struct.NlaStrip** %s1, align 8, !dbg !6005
  %11 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !6006
  %strip4 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %11, i32 0, i32 3, !dbg !6007
  %12 = load %struct.NlaStrip*, %struct.NlaStrip** %strip4, align 8, !dbg !6007
  %prev = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %12, i32 0, i32 1, !dbg !6008
  %13 = load %struct.NlaStrip*, %struct.NlaStrip** %prev, align 8, !dbg !6008
  store %struct.NlaStrip* %13, %struct.NlaStrip** %s2, align 8, !dbg !6009
  br label %if.end, !dbg !6010

if.else:                                          ; preds = %entry
  %14 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !6011
  %strip5 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %14, i32 0, i32 3, !dbg !6013
  %15 = load %struct.NlaStrip*, %struct.NlaStrip** %strip5, align 8, !dbg !6013
  %prev6 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %15, i32 0, i32 1, !dbg !6014
  %16 = load %struct.NlaStrip*, %struct.NlaStrip** %prev6, align 8, !dbg !6014
  store %struct.NlaStrip* %16, %struct.NlaStrip** %s1, align 8, !dbg !6015
  %17 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !6016
  %strip7 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %17, i32 0, i32 3, !dbg !6017
  %18 = load %struct.NlaStrip*, %struct.NlaStrip** %strip7, align 8, !dbg !6017
  %next8 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %18, i32 0, i32 0, !dbg !6018
  %19 = load %struct.NlaStrip*, %struct.NlaStrip** %next8, align 8, !dbg !6018
  store %struct.NlaStrip* %19, %struct.NlaStrip** %s2, align 8, !dbg !6019
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !6020
  %21 = bitcast %struct.NlaEvalStrip* %tmp_nes to i8*, !dbg !6021
  %22 = bitcast %struct.NlaEvalStrip* %20 to i8*, !dbg !6021
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 40, i1 false), !dbg !6021
  %strip_mode = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %tmp_nes, i32 0, i32 5, !dbg !6022
  store i16 2, i16* %strip_mode, align 2, !dbg !6023
  %23 = load %struct.NlaStrip*, %struct.NlaStrip** %s1, align 8, !dbg !6024
  %strip9 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %tmp_nes, i32 0, i32 3, !dbg !6025
  store %struct.NlaStrip* %23, %struct.NlaStrip** %strip9, align 8, !dbg !6026
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6027
  call void @nlastrip_evaluate(%struct.PointerRNA* %24, %struct.ListBase* %tmp_channels, %struct.ListBase* %tmp_modifiers, %struct.NlaEvalStrip* %tmp_nes), !dbg !6028
  %strip_mode10 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %tmp_nes, i32 0, i32 5, !dbg !6029
  store i16 3, i16* %strip_mode10, align 2, !dbg !6030
  %25 = load %struct.NlaStrip*, %struct.NlaStrip** %s2, align 8, !dbg !6031
  %strip11 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %tmp_nes, i32 0, i32 3, !dbg !6032
  store %struct.NlaStrip* %25, %struct.NlaStrip** %strip11, align 8, !dbg !6033
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6034
  call void @nlastrip_evaluate(%struct.PointerRNA* %26, %struct.ListBase* %tmp_channels, %struct.ListBase* %tmp_modifiers, %struct.NlaEvalStrip* %tmp_nes), !dbg !6035
  %27 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !6036
  %28 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !6037
  call void @nlaevalchan_buffers_accumulate(%struct.ListBase* %27, %struct.ListBase* %tmp_channels, %struct.NlaEvalStrip* %28), !dbg !6038
  %29 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !6039
  %strip12 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %29, i32 0, i32 3, !dbg !6040
  %30 = load %struct.NlaStrip*, %struct.NlaStrip** %strip12, align 8, !dbg !6040
  %modifiers13 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %30, i32 0, i32 6, !dbg !6041
  %31 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !6042
  call void @nlaeval_fmodifiers_split_stacks(%struct.ListBase* %modifiers13, %struct.ListBase* %31), !dbg !6043
  ret void, !dbg !6044
}

; Function Attrs: noinline nounwind uwtable
define internal void @nlastrip_evaluate_meta(%struct.PointerRNA* %ptr, %struct.ListBase* %channels, %struct.ListBase* %modifiers, %struct.NlaEvalStrip* %nes) #0 !dbg !6045 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %channels.addr = alloca %struct.ListBase*, align 8
  %modifiers.addr = alloca %struct.ListBase*, align 8
  %nes.addr = alloca %struct.NlaEvalStrip*, align 8
  %tmp_modifiers = alloca %struct.ListBase, align 8
  %strip = alloca %struct.NlaStrip*, align 8
  %tmp_nes = alloca %struct.NlaEvalStrip*, align 8
  %evaltime = alloca float, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6046, metadata !DIExpression()), !dbg !6047
  store %struct.ListBase* %channels, %struct.ListBase** %channels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %channels.addr, metadata !6048, metadata !DIExpression()), !dbg !6049
  store %struct.ListBase* %modifiers, %struct.ListBase** %modifiers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %modifiers.addr, metadata !6050, metadata !DIExpression()), !dbg !6051
  store %struct.NlaEvalStrip* %nes, %struct.NlaEvalStrip** %nes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NlaEvalStrip** %nes.addr, metadata !6052, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.declare(metadata %struct.ListBase* %tmp_modifiers, metadata !6054, metadata !DIExpression()), !dbg !6055
  %0 = bitcast %struct.ListBase* %tmp_modifiers to i8*, !dbg !6055
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !6055
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %strip, metadata !6056, metadata !DIExpression()), !dbg !6057
  %1 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !6058
  %strip1 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %1, i32 0, i32 3, !dbg !6059
  %2 = load %struct.NlaStrip*, %struct.NlaStrip** %strip1, align 8, !dbg !6059
  store %struct.NlaStrip* %2, %struct.NlaStrip** %strip, align 8, !dbg !6057
  call void @llvm.dbg.declare(metadata %struct.NlaEvalStrip** %tmp_nes, metadata !6060, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.declare(metadata float* %evaltime, metadata !6062, metadata !DIExpression()), !dbg !6063
  %3 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !6064
  %modifiers2 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %3, i32 0, i32 6, !dbg !6065
  %4 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !6066
  call void @nlaeval_fmodifiers_join_stacks(%struct.ListBase* %tmp_modifiers, %struct.ListBase* %modifiers2, %struct.ListBase* %4), !dbg !6067
  %5 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !6068
  %strip_time = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %5, i32 0, i32 6, !dbg !6069
  %6 = load float, float* %strip_time, align 4, !dbg !6069
  %7 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !6070
  %end = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %7, i32 0, i32 11, !dbg !6071
  %8 = load float, float* %end, align 4, !dbg !6071
  %9 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !6072
  %start = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %9, i32 0, i32 10, !dbg !6073
  %10 = load float, float* %start, align 8, !dbg !6073
  %sub = fsub float %8, %10, !dbg !6074
  %mul = fmul float %6, %sub, !dbg !6075
  %11 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !6076
  %start3 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %11, i32 0, i32 10, !dbg !6077
  %12 = load float, float* %start3, align 8, !dbg !6077
  %add = fadd float %mul, %12, !dbg !6078
  store float %add, float* %evaltime, align 4, !dbg !6079
  %13 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !6080
  %strips = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %13, i32 0, i32 2, !dbg !6081
  %14 = load float, float* %evaltime, align 4, !dbg !6082
  %call = call %struct.NlaEvalStrip* @nlastrips_ctime_get_strip(%struct.ListBase* null, %struct.ListBase* %strips, i16 signext -1, float %14), !dbg !6083
  store %struct.NlaEvalStrip* %call, %struct.NlaEvalStrip** %tmp_nes, align 8, !dbg !6084
  %15 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %tmp_nes, align 8, !dbg !6085
  %tobool = icmp ne %struct.NlaEvalStrip* %15, null, !dbg !6085
  br i1 %tobool, label %if.then, label %if.end, !dbg !6087

if.then:                                          ; preds = %entry
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6088
  %17 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !6090
  %18 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %tmp_nes, align 8, !dbg !6091
  call void @nlastrip_evaluate(%struct.PointerRNA* %16, %struct.ListBase* %17, %struct.ListBase* %tmp_modifiers, %struct.NlaEvalStrip* %18), !dbg !6092
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6093
  %20 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %tmp_nes, align 8, !dbg !6094
  %21 = bitcast %struct.NlaEvalStrip* %20 to i8*, !dbg !6094
  call void %19(i8* %21), !dbg !6093
  br label %if.end, !dbg !6095

if.end:                                           ; preds = %if.then, %entry
  %22 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !6096
  %modifiers4 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %22, i32 0, i32 6, !dbg !6097
  %23 = load %struct.ListBase*, %struct.ListBase** %modifiers.addr, align 8, !dbg !6098
  call void @nlaeval_fmodifiers_split_stacks(%struct.ListBase* %modifiers4, %struct.ListBase* %23), !dbg !6099
  ret void, !dbg !6100
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nladata_flush_channels(%struct.ListBase* %channels) #0 !dbg !6101 {
entry:
  %channels.addr = alloca %struct.ListBase*, align 8
  %nec = alloca %struct.NlaEvalChannel*, align 8
  %ptr = alloca %struct.PointerRNA*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %array_index = alloca i32, align 4
  %value = alloca float, align 4
  store %struct.ListBase* %channels, %struct.ListBase** %channels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %channels.addr, metadata !6102, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.declare(metadata %struct.NlaEvalChannel** %nec, metadata !6104, metadata !DIExpression()), !dbg !6105
  %0 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !6106
  %cmp = icmp eq %struct.ListBase* %0, null, !dbg !6108
  br i1 %cmp, label %if.then, label %if.end, !dbg !6109

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !6110

if.end:                                           ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !6111
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !6113
  %2 = load i8*, i8** %first, align 8, !dbg !6113
  %3 = bitcast i8* %2 to %struct.NlaEvalChannel*, !dbg !6111
  store %struct.NlaEvalChannel* %3, %struct.NlaEvalChannel** %nec, align 8, !dbg !6114
  br label %for.cond, !dbg !6115

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !6116
  %tobool = icmp ne %struct.NlaEvalChannel* %4, null, !dbg !6118
  br i1 %tobool, label %for.body, label %for.end, !dbg !6118

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr, metadata !6119, metadata !DIExpression()), !dbg !6121
  %5 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !6122
  %ptr1 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %5, i32 0, i32 2, !dbg !6123
  store %struct.PointerRNA* %ptr1, %struct.PointerRNA** %ptr, align 8, !dbg !6121
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6124, metadata !DIExpression()), !dbg !6125
  %6 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !6126
  %prop2 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %6, i32 0, i32 3, !dbg !6127
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop2, align 8, !dbg !6127
  store %struct.PropertyRNA* %7, %struct.PropertyRNA** %prop, align 8, !dbg !6125
  call void @llvm.dbg.declare(metadata i32* %array_index, metadata !6128, metadata !DIExpression()), !dbg !6129
  %8 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !6130
  %index = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %8, i32 0, i32 4, !dbg !6131
  %9 = load i32, i32* %index, align 8, !dbg !6131
  store i32 %9, i32* %array_index, align 4, !dbg !6129
  call void @llvm.dbg.declare(metadata float* %value, metadata !6132, metadata !DIExpression()), !dbg !6133
  %10 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !6134
  %value3 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %10, i32 0, i32 5, !dbg !6135
  %11 = load float, float* %value3, align 4, !dbg !6135
  store float %11, float* %value, align 4, !dbg !6133
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6136
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %12), !dbg !6137
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb11
    i32 2, label %sw.bb19
    i32 4, label %sw.bb25
  ], !dbg !6138

sw.bb:                                            ; preds = %for.body
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6139
  %call4 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %13), !dbg !6142
  %tobool5 = icmp ne i8 %call4, 0, !dbg !6142
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !6143

if.then6:                                         ; preds = %sw.bb
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6144
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6145
  %16 = load i32, i32* %array_index, align 4, !dbg !6146
  %17 = load float, float* %value, align 4, !dbg !6147
  %cmp7 = fcmp ogt float %17, 0x3FEFFFFFC0000000, !dbg !6147
  %conv = zext i1 %cmp7 to i32, !dbg !6147
  call void @RNA_property_boolean_set_index(%struct.PointerRNA* %14, %struct.PropertyRNA* %15, i32 %16, i32 %conv), !dbg !6148
  br label %if.end10, !dbg !6148

if.else:                                          ; preds = %sw.bb
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6149
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6150
  %20 = load float, float* %value, align 4, !dbg !6151
  %cmp8 = fcmp ogt float %20, 0x3FEFFFFFC0000000, !dbg !6151
  %conv9 = zext i1 %cmp8 to i32, !dbg !6151
  call void @RNA_property_boolean_set(%struct.PointerRNA* %18, %struct.PropertyRNA* %19, i32 %conv9), !dbg !6152
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then6
  br label %sw.epilog, !dbg !6153

sw.bb11:                                          ; preds = %for.body
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6154
  %call12 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %21), !dbg !6156
  %tobool13 = icmp ne i8 %call12, 0, !dbg !6156
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !6157

if.then14:                                        ; preds = %sw.bb11
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6158
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6159
  %24 = load i32, i32* %array_index, align 4, !dbg !6160
  %25 = load float, float* %value, align 4, !dbg !6161
  %conv15 = fptosi float %25 to i32, !dbg !6162
  call void @RNA_property_int_set_index(%struct.PointerRNA* %22, %struct.PropertyRNA* %23, i32 %24, i32 %conv15), !dbg !6163
  br label %if.end18, !dbg !6163

if.else16:                                        ; preds = %sw.bb11
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6164
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6165
  %28 = load float, float* %value, align 4, !dbg !6166
  %conv17 = fptosi float %28 to i32, !dbg !6167
  call void @RNA_property_int_set(%struct.PointerRNA* %26, %struct.PropertyRNA* %27, i32 %conv17), !dbg !6168
  br label %if.end18

if.end18:                                         ; preds = %if.else16, %if.then14
  br label %sw.epilog, !dbg !6169

sw.bb19:                                          ; preds = %for.body
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6170
  %call20 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %29), !dbg !6172
  %tobool21 = icmp ne i8 %call20, 0, !dbg !6172
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !6173

if.then22:                                        ; preds = %sw.bb19
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6174
  %31 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6175
  %32 = load i32, i32* %array_index, align 4, !dbg !6176
  %33 = load float, float* %value, align 4, !dbg !6177
  call void @RNA_property_float_set_index(%struct.PointerRNA* %30, %struct.PropertyRNA* %31, i32 %32, float %33), !dbg !6178
  br label %if.end24, !dbg !6178

if.else23:                                        ; preds = %sw.bb19
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6179
  %35 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6180
  %36 = load float, float* %value, align 4, !dbg !6181
  call void @RNA_property_float_set(%struct.PointerRNA* %34, %struct.PropertyRNA* %35, float %36), !dbg !6182
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then22
  br label %sw.epilog, !dbg !6183

sw.bb25:                                          ; preds = %for.body
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6184
  %38 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6185
  %39 = load float, float* %value, align 4, !dbg !6186
  %conv26 = fptosi float %39 to i32, !dbg !6187
  call void @RNA_property_enum_set(%struct.PointerRNA* %37, %struct.PropertyRNA* %38, i32 %conv26), !dbg !6188
  br label %sw.epilog, !dbg !6189

sw.default:                                       ; preds = %for.body
  br label %sw.epilog, !dbg !6190

sw.epilog:                                        ; preds = %sw.default, %sw.bb25, %if.end24, %if.end18, %if.end10
  br label %for.inc, !dbg !6191

for.inc:                                          ; preds = %sw.epilog
  %40 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !6192
  %next = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %40, i32 0, i32 0, !dbg !6193
  %41 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %next, align 8, !dbg !6193
  store %struct.NlaEvalChannel* %41, %struct.NlaEvalChannel** %nec, align 8, !dbg !6194
  br label %for.cond, !dbg !6195, !llvm.loop !6196

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !6198
}

declare dso_local i32 @RNA_property_type(%struct.PropertyRNA*) #2

declare dso_local zeroext i8 @RNA_property_array_check(%struct.PropertyRNA*) #2

declare dso_local void @RNA_property_boolean_set_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32, i32) #2

declare dso_local void @RNA_property_boolean_set(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local void @RNA_property_int_set_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32, i32) #2

declare dso_local void @RNA_property_int_set(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local void @RNA_property_float_set_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32, float) #2

declare dso_local void @RNA_property_float_set(%struct.PointerRNA*, %struct.PropertyRNA*, float) #2

declare dso_local void @RNA_property_enum_set(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_animsys_evaluate_animdata(%struct.Scene* %scene, %struct.ID* %id, %struct.AnimData* %adt, float %ctime, i16 signext %recalc) #0 !dbg !6199 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %adt.addr = alloca %struct.AnimData*, align 8
  %ctime.addr = alloca float, align 4
  %recalc.addr = alloca i16, align 2
  %id_ptr = alloca %struct.PointerRNA, align 8
  %bmain = alloca %struct.Main*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6202, metadata !DIExpression()), !dbg !6203
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !6204, metadata !DIExpression()), !dbg !6205
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !6206, metadata !DIExpression()), !dbg !6207
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !6208, metadata !DIExpression()), !dbg !6209
  store i16 %recalc, i16* %recalc.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %recalc.addr, metadata !6210, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %id_ptr, metadata !6212, metadata !DIExpression()), !dbg !6213
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !6214
  %cmp = icmp eq %struct.ID* null, %0, !dbg !6214
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6214

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6214
  %cmp1 = icmp eq %struct.AnimData* null, %1, !dbg !6214
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6216

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !6217

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !6218
  call void @RNA_id_pointer_create(%struct.ID* %2, %struct.PointerRNA* %id_ptr), !dbg !6219
  %3 = load i16, i16* %recalc.addr, align 2, !dbg !6220
  %conv = sext i16 %3 to i32, !dbg !6220
  %and = and i32 %conv, 2, !dbg !6222
  %tobool = icmp ne i32 %and, 0, !dbg !6222
  br i1 %tobool, label %if.then6, label %lor.lhs.false2, !dbg !6223

lor.lhs.false2:                                   ; preds = %if.end
  %4 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6224
  %recalc3 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %4, i32 0, i32 8, !dbg !6225
  %5 = load i32, i32* %recalc3, align 4, !dbg !6225
  %and4 = and i32 %5, 2, !dbg !6226
  %tobool5 = icmp ne i32 %and4, 0, !dbg !6226
  br i1 %tobool5, label %if.then6, label %if.end18, !dbg !6227

if.then6:                                         ; preds = %lor.lhs.false2, %if.end
  %6 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6228
  %nla_tracks = getelementptr inbounds %struct.AnimData, %struct.AnimData* %6, i32 0, i32 3, !dbg !6231
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nla_tracks, i32 0, i32 0, !dbg !6232
  %7 = load i8*, i8** %first, align 8, !dbg !6232
  %tobool7 = icmp ne i8* %7, null, !dbg !6233
  br i1 %tobool7, label %land.lhs.true, label %if.else, !dbg !6234

land.lhs.true:                                    ; preds = %if.then6
  %8 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6235
  %flag = getelementptr inbounds %struct.AnimData, %struct.AnimData* %8, i32 0, i32 7, !dbg !6236
  %9 = load i32, i32* %flag, align 8, !dbg !6236
  %and8 = and i32 %9, 2, !dbg !6237
  %tobool9 = icmp ne i32 %and8, 0, !dbg !6237
  br i1 %tobool9, label %if.else, label %if.then10, !dbg !6238

if.then10:                                        ; preds = %land.lhs.true
  %10 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6239
  %11 = load float, float* %ctime.addr, align 4, !dbg !6241
  call void @animsys_calculate_nla(%struct.PointerRNA* %id_ptr, %struct.AnimData* %10, float %11), !dbg !6242
  br label %if.end15, !dbg !6243

if.else:                                          ; preds = %land.lhs.true, %if.then6
  %12 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6244
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %12, i32 0, i32 0, !dbg !6246
  %13 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !6246
  %tobool11 = icmp ne %struct.bAction* %13, null, !dbg !6244
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !6247

if.then12:                                        ; preds = %if.else
  %14 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6248
  %action13 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %14, i32 0, i32 0, !dbg !6249
  %15 = load %struct.bAction*, %struct.bAction** %action13, align 8, !dbg !6249
  %16 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6250
  %remap = getelementptr inbounds %struct.AnimData, %struct.AnimData* %16, i32 0, i32 2, !dbg !6251
  %17 = load %struct.AnimMapper*, %struct.AnimMapper** %remap, align 8, !dbg !6251
  %18 = load float, float* %ctime.addr, align 4, !dbg !6252
  call void @animsys_evaluate_action(%struct.PointerRNA* %id_ptr, %struct.bAction* %15, %struct.AnimMapper* %17, float %18), !dbg !6253
  br label %if.end14, !dbg !6253

if.end14:                                         ; preds = %if.then12, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then10
  %19 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6254
  %recalc16 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %19, i32 0, i32 8, !dbg !6255
  %20 = load i32, i32* %recalc16, align 4, !dbg !6256
  %and17 = and i32 %20, -3, !dbg !6256
  store i32 %and17, i32* %recalc16, align 4, !dbg !6256
  br label %if.end18, !dbg !6257

if.end18:                                         ; preds = %if.end15, %lor.lhs.false2
  %21 = load i16, i16* %recalc.addr, align 2, !dbg !6258
  %conv19 = sext i16 %21 to i32, !dbg !6258
  %and20 = and i32 %conv19, 1, !dbg !6260
  %tobool21 = icmp ne i32 %and20, 0, !dbg !6260
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !6261

if.then22:                                        ; preds = %if.end18
  %22 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6262
  %23 = load float, float* %ctime.addr, align 4, !dbg !6264
  call void @animsys_evaluate_drivers(%struct.PointerRNA* %id_ptr, %struct.AnimData* %22, float %23), !dbg !6265
  br label %if.end23, !dbg !6266

if.end23:                                         ; preds = %if.then22, %if.end18
  %24 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6267
  call void @animsys_evaluate_overrides(%struct.PointerRNA* %id_ptr, %struct.AnimData* %24), !dbg !6268
  %25 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6269
  %tobool24 = icmp ne %struct.Scene* %25, null, !dbg !6269
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !6271

if.then25:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !6272, metadata !DIExpression()), !dbg !6274
  %26 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !6275
  store %struct.Main* %26, %struct.Main** %bmain, align 8, !dbg !6274
  %27 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !6276
  %28 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6277
  call void @RNA_property_update_cache_flush(%struct.Main* %27, %struct.Scene* %28), !dbg !6278
  call void @RNA_property_update_cache_free(), !dbg !6279
  br label %if.end26, !dbg !6280

if.end26:                                         ; preds = %if.then25, %if.end23
  %29 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6281
  %recalc27 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %29, i32 0, i32 8, !dbg !6282
  store i32 0, i32* %recalc27, align 4, !dbg !6283
  br label %return, !dbg !6284

return:                                           ; preds = %if.end26, %if.then
  ret void, !dbg !6284
}

declare dso_local void @RNA_id_pointer_create(%struct.ID*, %struct.PointerRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @animsys_calculate_nla(%struct.PointerRNA* %ptr, %struct.AnimData* %adt, float %ctime) #0 !dbg !6285 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %adt.addr = alloca %struct.AnimData*, align 8
  %ctime.addr = alloca float, align 4
  %echannels = alloca %struct.ListBase, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6288, metadata !DIExpression()), !dbg !6289
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !6290, metadata !DIExpression()), !dbg !6291
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !6292, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.declare(metadata %struct.ListBase* %echannels, metadata !6294, metadata !DIExpression()), !dbg !6295
  %0 = bitcast %struct.ListBase* %echannels to i8*, !dbg !6295
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !6295
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6296
  %2 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6297
  %3 = load float, float* %ctime.addr, align 4, !dbg !6298
  call void @animsys_evaluate_nla(%struct.ListBase* %echannels, %struct.PointerRNA* %1, %struct.AnimData* %2, float %3), !dbg !6299
  call void @nladata_flush_channels(%struct.ListBase* %echannels), !dbg !6300
  call void @BLI_freelistN(%struct.ListBase* %echannels), !dbg !6301
  ret void, !dbg !6302
}

; Function Attrs: noinline nounwind uwtable
define internal void @animsys_evaluate_drivers(%struct.PointerRNA* %ptr, %struct.AnimData* %adt, float %ctime) #0 !dbg !6303 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %adt.addr = alloca %struct.AnimData*, align 8
  %ctime.addr = alloca float, align 4
  %fcu = alloca %struct.FCurve*, align 8
  %driver = alloca %struct.ChannelDriver*, align 8
  %ok = alloca i8, align 1
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6304, metadata !DIExpression()), !dbg !6305
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !6306, metadata !DIExpression()), !dbg !6307
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !6308, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !6310, metadata !DIExpression()), !dbg !6311
  %0 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6312
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %0, i32 0, i32 5, !dbg !6314
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers, i32 0, i32 0, !dbg !6315
  %1 = load i8*, i8** %first, align 8, !dbg !6315
  %2 = bitcast i8* %1 to %struct.FCurve*, !dbg !6312
  store %struct.FCurve* %2, %struct.FCurve** %fcu, align 8, !dbg !6316
  br label %for.cond, !dbg !6317

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6318
  %tobool = icmp ne %struct.FCurve* %3, null, !dbg !6320
  br i1 %tobool, label %for.body, label %for.end, !dbg !6320

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ChannelDriver** %driver, metadata !6321, metadata !DIExpression()), !dbg !6323
  %4 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6324
  %driver1 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %4, i32 0, i32 3, !dbg !6325
  %5 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver1, align 8, !dbg !6325
  store %struct.ChannelDriver* %5, %struct.ChannelDriver** %driver, align 8, !dbg !6323
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !6326, metadata !DIExpression()), !dbg !6327
  store i8 0, i8* %ok, align 1, !dbg !6327
  %6 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6328
  %flag = getelementptr inbounds %struct.FCurve, %struct.FCurve* %6, i32 0, i32 9, !dbg !6330
  %7 = load i16, i16* %flag, align 8, !dbg !6330
  %conv = sext i16 %7 to i32, !dbg !6328
  %and = and i32 %conv, 1040, !dbg !6331
  %cmp = icmp eq i32 %and, 0, !dbg !6332
  br i1 %cmp, label %if.then, label %if.end16, !dbg !6333

if.then:                                          ; preds = %for.body
  %8 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver, align 8, !dbg !6334
  %tobool3 = icmp ne %struct.ChannelDriver* %8, null, !dbg !6337
  br i1 %tobool3, label %land.lhs.true, label %if.end15, !dbg !6338

land.lhs.true:                                    ; preds = %if.then
  %9 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver, align 8, !dbg !6339
  %flag4 = getelementptr inbounds %struct.ChannelDriver, %struct.ChannelDriver* %9, i32 0, i32 6, !dbg !6340
  %10 = load i32, i32* %flag4, align 4, !dbg !6340
  %and5 = and i32 %10, 1, !dbg !6341
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6341
  br i1 %tobool6, label %if.end15, label %if.then7, !dbg !6342

if.then7:                                         ; preds = %land.lhs.true
  %11 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6343
  %12 = load float, float* %ctime.addr, align 4, !dbg !6345
  call void @calculate_fcurve(%struct.FCurve* %11, float %12), !dbg !6346
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6347
  %14 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6348
  %call = call zeroext i8 @animsys_execute_fcurve(%struct.PointerRNA* %13, %struct.AnimMapper* null, %struct.FCurve* %14), !dbg !6349
  store i8 %call, i8* %ok, align 1, !dbg !6350
  %15 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver, align 8, !dbg !6351
  %flag8 = getelementptr inbounds %struct.ChannelDriver, %struct.ChannelDriver* %15, i32 0, i32 6, !dbg !6352
  %16 = load i32, i32* %flag8, align 4, !dbg !6353
  %and9 = and i32 %16, -3, !dbg !6353
  store i32 %and9, i32* %flag8, align 4, !dbg !6353
  %17 = load i8, i8* %ok, align 1, !dbg !6354
  %conv10 = zext i8 %17 to i32, !dbg !6354
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !6356
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !6357

if.then13:                                        ; preds = %if.then7
  %18 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver, align 8, !dbg !6358
  %flag14 = getelementptr inbounds %struct.ChannelDriver, %struct.ChannelDriver* %18, i32 0, i32 6, !dbg !6359
  %19 = load i32, i32* %flag14, align 4, !dbg !6360
  %or = or i32 %19, 1, !dbg !6360
  store i32 %or, i32* %flag14, align 4, !dbg !6360
  br label %if.end, !dbg !6358

if.end:                                           ; preds = %if.then13, %if.then7
  br label %if.end15, !dbg !6361

if.end15:                                         ; preds = %if.end, %land.lhs.true, %if.then
  br label %if.end16, !dbg !6362

if.end16:                                         ; preds = %if.end15, %for.body
  br label %for.inc, !dbg !6363

for.inc:                                          ; preds = %if.end16
  %20 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !6364
  %next = getelementptr inbounds %struct.FCurve, %struct.FCurve* %20, i32 0, i32 0, !dbg !6365
  %21 = load %struct.FCurve*, %struct.FCurve** %next, align 8, !dbg !6365
  store %struct.FCurve* %21, %struct.FCurve** %fcu, align 8, !dbg !6366
  br label %for.cond, !dbg !6367, !llvm.loop !6368

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6370
}

; Function Attrs: noinline nounwind uwtable
define internal void @animsys_evaluate_overrides(%struct.PointerRNA* %ptr, %struct.AnimData* %adt) #0 !dbg !6371 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %adt.addr = alloca %struct.AnimData*, align 8
  %aor = alloca %struct.AnimOverride*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6374, metadata !DIExpression()), !dbg !6375
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !6376, metadata !DIExpression()), !dbg !6377
  call void @llvm.dbg.declare(metadata %struct.AnimOverride** %aor, metadata !6378, metadata !DIExpression()), !dbg !6389
  %0 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !6390
  %overrides = getelementptr inbounds %struct.AnimData, %struct.AnimData* %0, i32 0, i32 6, !dbg !6392
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %overrides, i32 0, i32 0, !dbg !6393
  %1 = load i8*, i8** %first, align 8, !dbg !6393
  %2 = bitcast i8* %1 to %struct.AnimOverride*, !dbg !6390
  store %struct.AnimOverride* %2, %struct.AnimOverride** %aor, align 8, !dbg !6394
  br label %for.cond, !dbg !6395

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.AnimOverride*, %struct.AnimOverride** %aor, align 8, !dbg !6396
  %tobool = icmp ne %struct.AnimOverride* %3, null, !dbg !6398
  br i1 %tobool, label %for.body, label %for.end, !dbg !6398

for.body:                                         ; preds = %for.cond
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6399
  %5 = load %struct.AnimOverride*, %struct.AnimOverride** %aor, align 8, !dbg !6400
  %rna_path = getelementptr inbounds %struct.AnimOverride, %struct.AnimOverride* %5, i32 0, i32 2, !dbg !6401
  %6 = load i8*, i8** %rna_path, align 8, !dbg !6401
  %7 = load %struct.AnimOverride*, %struct.AnimOverride** %aor, align 8, !dbg !6402
  %array_index = getelementptr inbounds %struct.AnimOverride, %struct.AnimOverride* %7, i32 0, i32 3, !dbg !6403
  %8 = load i32, i32* %array_index, align 8, !dbg !6403
  %9 = load %struct.AnimOverride*, %struct.AnimOverride** %aor, align 8, !dbg !6404
  %value = getelementptr inbounds %struct.AnimOverride, %struct.AnimOverride* %9, i32 0, i32 4, !dbg !6405
  %10 = load float, float* %value, align 4, !dbg !6405
  %call = call zeroext i8 @animsys_write_rna_setting(%struct.PointerRNA* %4, i8* %6, i32 %8, float %10), !dbg !6406
  br label %for.inc, !dbg !6406

for.inc:                                          ; preds = %for.body
  %11 = load %struct.AnimOverride*, %struct.AnimOverride** %aor, align 8, !dbg !6407
  %next = getelementptr inbounds %struct.AnimOverride, %struct.AnimOverride* %11, i32 0, i32 0, !dbg !6408
  %12 = load %struct.AnimOverride*, %struct.AnimOverride** %next, align 8, !dbg !6408
  store %struct.AnimOverride* %12, %struct.AnimOverride** %aor, align 8, !dbg !6409
  br label %for.cond, !dbg !6410, !llvm.loop !6411

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6413
}

declare dso_local void @RNA_property_update_cache_flush(%struct.Main*, %struct.Scene*) #2

declare dso_local void @RNA_property_update_cache_free() #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_animsys_evaluate_all_animation(%struct.Main* %main, %struct.Scene* %scene, float %ctime) #0 !dbg !6414 {
entry:
  %main.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ctime.addr = alloca float, align 4
  %id = alloca %struct.ID*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %adt36 = alloca %struct.AnimData*, align 8
  %ntp = alloca %struct.Tex*, align 8
  %adt2 = alloca %struct.AnimData*, align 8
  %adt63 = alloca %struct.AnimData*, align 8
  %ntp65 = alloca %struct.Lamp*, align 8
  %adt269 = alloca %struct.AnimData*, align 8
  %adt92 = alloca %struct.AnimData*, align 8
  %ntp94 = alloca %struct.Material*, align 8
  %adt298 = alloca %struct.AnimData*, align 8
  %adt121 = alloca %struct.AnimData*, align 8
  %adt141 = alloca %struct.AnimData*, align 8
  %adt161 = alloca %struct.AnimData*, align 8
  %adt182 = alloca %struct.AnimData*, align 8
  %adt202 = alloca %struct.AnimData*, align 8
  %adt222 = alloca %struct.AnimData*, align 8
  %adt242 = alloca %struct.AnimData*, align 8
  %adt262 = alloca %struct.AnimData*, align 8
  %adt282 = alloca %struct.AnimData*, align 8
  %adt302 = alloca %struct.AnimData*, align 8
  %adt322 = alloca %struct.AnimData*, align 8
  %adt342 = alloca %struct.AnimData*, align 8
  %adt362 = alloca %struct.AnimData*, align 8
  %adt382 = alloca %struct.AnimData*, align 8
  %ntp384 = alloca %struct.World*, align 8
  %adt2388 = alloca %struct.AnimData*, align 8
  %adt412 = alloca %struct.AnimData*, align 8
  %ntp414 = alloca %struct.Scene*, align 8
  %adt2418 = alloca %struct.AnimData*, align 8
  store %struct.Main* %main, %struct.Main** %main.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %main.addr, metadata !6417, metadata !DIExpression()), !dbg !6418
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6419, metadata !DIExpression()), !dbg !6420
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !6421, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !6423, metadata !DIExpression()), !dbg !6424
  %0 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !6425
  %and = and i32 %0, 1, !dbg !6427
  %tobool = icmp ne i32 %and, 0, !dbg !6427
  br i1 %tobool, label %if.then, label %if.end, !dbg !6428

if.then:                                          ; preds = %entry
  %1 = load float, float* %ctime.addr, align 4, !dbg !6429
  %conv = fpext float %1 to double, !dbg !6429
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i64 0, i64 0), double %conv), !dbg !6430
  br label %if.end, !dbg !6430

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6431
  %action = getelementptr inbounds %struct.Main, %struct.Main* %2, i32 0, i32 34, !dbg !6433
  %call1 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %action), !dbg !6434
  %conv2 = zext i8 %call1 to i32, !dbg !6434
  %tobool3 = icmp ne i32 %conv2, 0, !dbg !6434
  br i1 %tobool3, label %land.lhs.true, label %if.end13, !dbg !6435

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6436
  %curve = getelementptr inbounds %struct.Main, %struct.Main* %3, i32 0, i32 15, !dbg !6437
  %call4 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %curve), !dbg !6438
  %conv5 = zext i8 %call4 to i32, !dbg !6438
  %tobool6 = icmp ne i32 %conv5, 0, !dbg !6438
  br i1 %tobool6, label %if.then7, label %if.end13, !dbg !6439

if.then7:                                         ; preds = %land.lhs.true
  %4 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !6440
  %and8 = and i32 %4, 1, !dbg !6443
  %tobool9 = icmp ne i32 %and8, 0, !dbg !6443
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !6444

if.then10:                                        ; preds = %if.then7
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0)), !dbg !6445
  br label %if.end12, !dbg !6445

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %for.end426, !dbg !6446

if.end13:                                         ; preds = %land.lhs.true, %if.end
  %5 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6447
  %nodetree = getelementptr inbounds %struct.Main, %struct.Main* %5, i32 0, i32 35, !dbg !6447
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodetree, i32 0, i32 0, !dbg !6447
  %6 = load i8*, i8** %first, align 8, !dbg !6447
  %7 = bitcast i8* %6 to %struct.ID*, !dbg !6447
  store %struct.ID* %7, %struct.ID** %id, align 8, !dbg !6447
  br label %for.cond, !dbg !6447

for.cond:                                         ; preds = %for.inc, %if.end13
  %8 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6449
  %tobool14 = icmp ne %struct.ID* %8, null, !dbg !6447
  br i1 %tobool14, label %for.body, label %for.end, !dbg !6447

for.body:                                         ; preds = %for.cond
  %9 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6451
  %us = getelementptr inbounds %struct.ID, %struct.ID* %9, i32 0, i32 6, !dbg !6451
  %10 = load i32, i32* %us, align 4, !dbg !6451
  %11 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6451
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %11, i32 0, i32 5, !dbg !6451
  %12 = load i16, i16* %flag, align 2, !dbg !6451
  %conv15 = sext i16 %12 to i32, !dbg !6451
  %and16 = and i32 %conv15, 512, !dbg !6451
  %tobool17 = icmp ne i32 %and16, 0, !dbg !6451
  %13 = zext i1 %tobool17 to i64, !dbg !6451
  %cond = select i1 %tobool17, i32 1, i32 0, !dbg !6451
  %sub = sub nsw i32 %10, %cond, !dbg !6451
  %cmp = icmp sgt i32 %sub, 0, !dbg !6451
  br i1 %cmp, label %if.then19, label %if.end21, !dbg !6454

if.then19:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !6455, metadata !DIExpression()), !dbg !6457
  %14 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6457
  %call20 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %14), !dbg !6457
  store %struct.AnimData* %call20, %struct.AnimData** %adt, align 8, !dbg !6457
  %15 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6457
  %16 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6457
  %17 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !6457
  %18 = load float, float* %ctime.addr, align 4, !dbg !6457
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %15, %struct.ID* %16, %struct.AnimData* %17, float %18, i16 signext 2), !dbg !6457
  br label %if.end21, !dbg !6457

if.end21:                                         ; preds = %if.then19, %for.body
  br label %for.inc, !dbg !6454

for.inc:                                          ; preds = %if.end21
  %19 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6449
  %next = getelementptr inbounds %struct.ID, %struct.ID* %19, i32 0, i32 0, !dbg !6449
  %20 = load i8*, i8** %next, align 8, !dbg !6449
  %21 = bitcast i8* %20 to %struct.ID*, !dbg !6449
  store %struct.ID* %21, %struct.ID** %id, align 8, !dbg !6449
  br label %for.cond, !dbg !6449, !llvm.loop !6458

for.end:                                          ; preds = %for.cond
  %22 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6459
  %tex = getelementptr inbounds %struct.Main, %struct.Main* %22, i32 0, i32 18, !dbg !6459
  %first22 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %tex, i32 0, i32 0, !dbg !6459
  %23 = load i8*, i8** %first22, align 8, !dbg !6459
  %24 = bitcast i8* %23 to %struct.ID*, !dbg !6459
  store %struct.ID* %24, %struct.ID** %id, align 8, !dbg !6459
  br label %for.cond23, !dbg !6459

for.cond23:                                       ; preds = %for.inc46, %for.end
  %25 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6461
  %tobool24 = icmp ne %struct.ID* %25, null, !dbg !6459
  br i1 %tobool24, label %for.body25, label %for.end48, !dbg !6459

for.body25:                                       ; preds = %for.cond23
  %26 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6463
  %us26 = getelementptr inbounds %struct.ID, %struct.ID* %26, i32 0, i32 6, !dbg !6463
  %27 = load i32, i32* %us26, align 4, !dbg !6463
  %28 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6463
  %flag27 = getelementptr inbounds %struct.ID, %struct.ID* %28, i32 0, i32 5, !dbg !6463
  %29 = load i16, i16* %flag27, align 2, !dbg !6463
  %conv28 = sext i16 %29 to i32, !dbg !6463
  %and29 = and i32 %conv28, 512, !dbg !6463
  %tobool30 = icmp ne i32 %and29, 0, !dbg !6463
  %30 = zext i1 %tobool30 to i64, !dbg !6463
  %cond31 = select i1 %tobool30, i32 1, i32 0, !dbg !6463
  %sub32 = sub nsw i32 %27, %cond31, !dbg !6463
  %cmp33 = icmp sgt i32 %sub32, 0, !dbg !6463
  br i1 %cmp33, label %if.then35, label %if.end45, !dbg !6466

if.then35:                                        ; preds = %for.body25
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt36, metadata !6467, metadata !DIExpression()), !dbg !6469
  %31 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6469
  %call37 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %31), !dbg !6469
  store %struct.AnimData* %call37, %struct.AnimData** %adt36, align 8, !dbg !6469
  call void @llvm.dbg.declare(metadata %struct.Tex** %ntp, metadata !6470, metadata !DIExpression()), !dbg !6469
  %32 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6469
  %33 = bitcast %struct.ID* %32 to %struct.Tex*, !dbg !6469
  store %struct.Tex* %33, %struct.Tex** %ntp, align 8, !dbg !6469
  %34 = load %struct.Tex*, %struct.Tex** %ntp, align 8, !dbg !6471
  %nodetree38 = getelementptr inbounds %struct.Tex, %struct.Tex* %34, i32 0, i32 52, !dbg !6471
  %35 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree38, align 8, !dbg !6471
  %tobool39 = icmp ne %struct.bNodeTree* %35, null, !dbg !6471
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !6469

if.then40:                                        ; preds = %if.then35
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt2, metadata !6473, metadata !DIExpression()), !dbg !6475
  %36 = load %struct.Tex*, %struct.Tex** %ntp, align 8, !dbg !6475
  %nodetree41 = getelementptr inbounds %struct.Tex, %struct.Tex* %36, i32 0, i32 52, !dbg !6475
  %37 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree41, align 8, !dbg !6475
  %38 = bitcast %struct.bNodeTree* %37 to %struct.ID*, !dbg !6475
  %call42 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %38), !dbg !6475
  store %struct.AnimData* %call42, %struct.AnimData** %adt2, align 8, !dbg !6475
  %39 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6475
  %40 = load %struct.Tex*, %struct.Tex** %ntp, align 8, !dbg !6475
  %nodetree43 = getelementptr inbounds %struct.Tex, %struct.Tex* %40, i32 0, i32 52, !dbg !6475
  %41 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree43, align 8, !dbg !6475
  %42 = bitcast %struct.bNodeTree* %41 to %struct.ID*, !dbg !6475
  %43 = load %struct.AnimData*, %struct.AnimData** %adt2, align 8, !dbg !6475
  %44 = load float, float* %ctime.addr, align 4, !dbg !6475
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %39, %struct.ID* %42, %struct.AnimData* %43, float %44, i16 signext 2), !dbg !6475
  br label %if.end44, !dbg !6475

if.end44:                                         ; preds = %if.then40, %if.then35
  %45 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6469
  %46 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6469
  %47 = load %struct.AnimData*, %struct.AnimData** %adt36, align 8, !dbg !6469
  %48 = load float, float* %ctime.addr, align 4, !dbg !6469
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %45, %struct.ID* %46, %struct.AnimData* %47, float %48, i16 signext 2), !dbg !6469
  br label %if.end45, !dbg !6469

if.end45:                                         ; preds = %if.end44, %for.body25
  br label %for.inc46, !dbg !6466

for.inc46:                                        ; preds = %if.end45
  %49 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6461
  %next47 = getelementptr inbounds %struct.ID, %struct.ID* %49, i32 0, i32 0, !dbg !6461
  %50 = load i8*, i8** %next47, align 8, !dbg !6461
  %51 = bitcast i8* %50 to %struct.ID*, !dbg !6461
  store %struct.ID* %51, %struct.ID** %id, align 8, !dbg !6461
  br label %for.cond23, !dbg !6461, !llvm.loop !6476

for.end48:                                        ; preds = %for.cond23
  %52 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6477
  %lamp = getelementptr inbounds %struct.Main, %struct.Main* %52, i32 0, i32 21, !dbg !6477
  %first49 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lamp, i32 0, i32 0, !dbg !6477
  %53 = load i8*, i8** %first49, align 8, !dbg !6477
  %54 = bitcast i8* %53 to %struct.ID*, !dbg !6477
  store %struct.ID* %54, %struct.ID** %id, align 8, !dbg !6477
  br label %for.cond50, !dbg !6477

for.cond50:                                       ; preds = %for.inc75, %for.end48
  %55 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6479
  %tobool51 = icmp ne %struct.ID* %55, null, !dbg !6477
  br i1 %tobool51, label %for.body52, label %for.end77, !dbg !6477

for.body52:                                       ; preds = %for.cond50
  %56 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6481
  %us53 = getelementptr inbounds %struct.ID, %struct.ID* %56, i32 0, i32 6, !dbg !6481
  %57 = load i32, i32* %us53, align 4, !dbg !6481
  %58 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6481
  %flag54 = getelementptr inbounds %struct.ID, %struct.ID* %58, i32 0, i32 5, !dbg !6481
  %59 = load i16, i16* %flag54, align 2, !dbg !6481
  %conv55 = sext i16 %59 to i32, !dbg !6481
  %and56 = and i32 %conv55, 512, !dbg !6481
  %tobool57 = icmp ne i32 %and56, 0, !dbg !6481
  %60 = zext i1 %tobool57 to i64, !dbg !6481
  %cond58 = select i1 %tobool57, i32 1, i32 0, !dbg !6481
  %sub59 = sub nsw i32 %57, %cond58, !dbg !6481
  %cmp60 = icmp sgt i32 %sub59, 0, !dbg !6481
  br i1 %cmp60, label %if.then62, label %if.end74, !dbg !6484

if.then62:                                        ; preds = %for.body52
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt63, metadata !6485, metadata !DIExpression()), !dbg !6487
  %61 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6487
  %call64 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %61), !dbg !6487
  store %struct.AnimData* %call64, %struct.AnimData** %adt63, align 8, !dbg !6487
  call void @llvm.dbg.declare(metadata %struct.Lamp** %ntp65, metadata !6488, metadata !DIExpression()), !dbg !6487
  %62 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6487
  %63 = bitcast %struct.ID* %62 to %struct.Lamp*, !dbg !6487
  store %struct.Lamp* %63, %struct.Lamp** %ntp65, align 8, !dbg !6487
  %64 = load %struct.Lamp*, %struct.Lamp** %ntp65, align 8, !dbg !6489
  %nodetree66 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %64, i32 0, i32 74, !dbg !6489
  %65 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree66, align 8, !dbg !6489
  %tobool67 = icmp ne %struct.bNodeTree* %65, null, !dbg !6489
  br i1 %tobool67, label %if.then68, label %if.end73, !dbg !6487

if.then68:                                        ; preds = %if.then62
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt269, metadata !6491, metadata !DIExpression()), !dbg !6493
  %66 = load %struct.Lamp*, %struct.Lamp** %ntp65, align 8, !dbg !6493
  %nodetree70 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %66, i32 0, i32 74, !dbg !6493
  %67 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree70, align 8, !dbg !6493
  %68 = bitcast %struct.bNodeTree* %67 to %struct.ID*, !dbg !6493
  %call71 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %68), !dbg !6493
  store %struct.AnimData* %call71, %struct.AnimData** %adt269, align 8, !dbg !6493
  %69 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6493
  %70 = load %struct.Lamp*, %struct.Lamp** %ntp65, align 8, !dbg !6493
  %nodetree72 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %70, i32 0, i32 74, !dbg !6493
  %71 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree72, align 8, !dbg !6493
  %72 = bitcast %struct.bNodeTree* %71 to %struct.ID*, !dbg !6493
  %73 = load %struct.AnimData*, %struct.AnimData** %adt269, align 8, !dbg !6493
  %74 = load float, float* %ctime.addr, align 4, !dbg !6493
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %69, %struct.ID* %72, %struct.AnimData* %73, float %74, i16 signext 2), !dbg !6493
  br label %if.end73, !dbg !6493

if.end73:                                         ; preds = %if.then68, %if.then62
  %75 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6487
  %76 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6487
  %77 = load %struct.AnimData*, %struct.AnimData** %adt63, align 8, !dbg !6487
  %78 = load float, float* %ctime.addr, align 4, !dbg !6487
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %75, %struct.ID* %76, %struct.AnimData* %77, float %78, i16 signext 2), !dbg !6487
  br label %if.end74, !dbg !6487

if.end74:                                         ; preds = %if.end73, %for.body52
  br label %for.inc75, !dbg !6484

for.inc75:                                        ; preds = %if.end74
  %79 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6479
  %next76 = getelementptr inbounds %struct.ID, %struct.ID* %79, i32 0, i32 0, !dbg !6479
  %80 = load i8*, i8** %next76, align 8, !dbg !6479
  %81 = bitcast i8* %80 to %struct.ID*, !dbg !6479
  store %struct.ID* %81, %struct.ID** %id, align 8, !dbg !6479
  br label %for.cond50, !dbg !6479, !llvm.loop !6494

for.end77:                                        ; preds = %for.cond50
  %82 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6495
  %mat = getelementptr inbounds %struct.Main, %struct.Main* %82, i32 0, i32 17, !dbg !6495
  %first78 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mat, i32 0, i32 0, !dbg !6495
  %83 = load i8*, i8** %first78, align 8, !dbg !6495
  %84 = bitcast i8* %83 to %struct.ID*, !dbg !6495
  store %struct.ID* %84, %struct.ID** %id, align 8, !dbg !6495
  br label %for.cond79, !dbg !6495

for.cond79:                                       ; preds = %for.inc104, %for.end77
  %85 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6497
  %tobool80 = icmp ne %struct.ID* %85, null, !dbg !6495
  br i1 %tobool80, label %for.body81, label %for.end106, !dbg !6495

for.body81:                                       ; preds = %for.cond79
  %86 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6499
  %us82 = getelementptr inbounds %struct.ID, %struct.ID* %86, i32 0, i32 6, !dbg !6499
  %87 = load i32, i32* %us82, align 4, !dbg !6499
  %88 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6499
  %flag83 = getelementptr inbounds %struct.ID, %struct.ID* %88, i32 0, i32 5, !dbg !6499
  %89 = load i16, i16* %flag83, align 2, !dbg !6499
  %conv84 = sext i16 %89 to i32, !dbg !6499
  %and85 = and i32 %conv84, 512, !dbg !6499
  %tobool86 = icmp ne i32 %and85, 0, !dbg !6499
  %90 = zext i1 %tobool86 to i64, !dbg !6499
  %cond87 = select i1 %tobool86, i32 1, i32 0, !dbg !6499
  %sub88 = sub nsw i32 %87, %cond87, !dbg !6499
  %cmp89 = icmp sgt i32 %sub88, 0, !dbg !6499
  br i1 %cmp89, label %if.then91, label %if.end103, !dbg !6502

if.then91:                                        ; preds = %for.body81
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt92, metadata !6503, metadata !DIExpression()), !dbg !6505
  %91 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6505
  %call93 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %91), !dbg !6505
  store %struct.AnimData* %call93, %struct.AnimData** %adt92, align 8, !dbg !6505
  call void @llvm.dbg.declare(metadata %struct.Material** %ntp94, metadata !6506, metadata !DIExpression()), !dbg !6505
  %92 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6505
  %93 = bitcast %struct.ID* %92 to %struct.Material*, !dbg !6505
  store %struct.Material* %93, %struct.Material** %ntp94, align 8, !dbg !6505
  %94 = load %struct.Material*, %struct.Material** %ntp94, align 8, !dbg !6507
  %nodetree95 = getelementptr inbounds %struct.Material, %struct.Material* %94, i32 0, i32 103, !dbg !6507
  %95 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree95, align 8, !dbg !6507
  %tobool96 = icmp ne %struct.bNodeTree* %95, null, !dbg !6507
  br i1 %tobool96, label %if.then97, label %if.end102, !dbg !6505

if.then97:                                        ; preds = %if.then91
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt298, metadata !6509, metadata !DIExpression()), !dbg !6511
  %96 = load %struct.Material*, %struct.Material** %ntp94, align 8, !dbg !6511
  %nodetree99 = getelementptr inbounds %struct.Material, %struct.Material* %96, i32 0, i32 103, !dbg !6511
  %97 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree99, align 8, !dbg !6511
  %98 = bitcast %struct.bNodeTree* %97 to %struct.ID*, !dbg !6511
  %call100 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %98), !dbg !6511
  store %struct.AnimData* %call100, %struct.AnimData** %adt298, align 8, !dbg !6511
  %99 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6511
  %100 = load %struct.Material*, %struct.Material** %ntp94, align 8, !dbg !6511
  %nodetree101 = getelementptr inbounds %struct.Material, %struct.Material* %100, i32 0, i32 103, !dbg !6511
  %101 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree101, align 8, !dbg !6511
  %102 = bitcast %struct.bNodeTree* %101 to %struct.ID*, !dbg !6511
  %103 = load %struct.AnimData*, %struct.AnimData** %adt298, align 8, !dbg !6511
  %104 = load float, float* %ctime.addr, align 4, !dbg !6511
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %99, %struct.ID* %102, %struct.AnimData* %103, float %104, i16 signext 2), !dbg !6511
  br label %if.end102, !dbg !6511

if.end102:                                        ; preds = %if.then97, %if.then91
  %105 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6505
  %106 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6505
  %107 = load %struct.AnimData*, %struct.AnimData** %adt92, align 8, !dbg !6505
  %108 = load float, float* %ctime.addr, align 4, !dbg !6505
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %105, %struct.ID* %106, %struct.AnimData* %107, float %108, i16 signext 2), !dbg !6505
  br label %if.end103, !dbg !6505

if.end103:                                        ; preds = %if.end102, %for.body81
  br label %for.inc104, !dbg !6502

for.inc104:                                       ; preds = %if.end103
  %109 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6497
  %next105 = getelementptr inbounds %struct.ID, %struct.ID* %109, i32 0, i32 0, !dbg !6497
  %110 = load i8*, i8** %next105, align 8, !dbg !6497
  %111 = bitcast i8* %110 to %struct.ID*, !dbg !6497
  store %struct.ID* %111, %struct.ID** %id, align 8, !dbg !6497
  br label %for.cond79, !dbg !6497, !llvm.loop !6512

for.end106:                                       ; preds = %for.cond79
  %112 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6513
  %camera = getelementptr inbounds %struct.Main, %struct.Main* %112, i32 0, i32 22, !dbg !6513
  %first107 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %camera, i32 0, i32 0, !dbg !6513
  %113 = load i8*, i8** %first107, align 8, !dbg !6513
  %114 = bitcast i8* %113 to %struct.ID*, !dbg !6513
  store %struct.ID* %114, %struct.ID** %id, align 8, !dbg !6513
  br label %for.cond108, !dbg !6513

for.cond108:                                      ; preds = %for.inc124, %for.end106
  %115 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6515
  %tobool109 = icmp ne %struct.ID* %115, null, !dbg !6513
  br i1 %tobool109, label %for.body110, label %for.end126, !dbg !6513

for.body110:                                      ; preds = %for.cond108
  %116 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6517
  %us111 = getelementptr inbounds %struct.ID, %struct.ID* %116, i32 0, i32 6, !dbg !6517
  %117 = load i32, i32* %us111, align 4, !dbg !6517
  %118 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6517
  %flag112 = getelementptr inbounds %struct.ID, %struct.ID* %118, i32 0, i32 5, !dbg !6517
  %119 = load i16, i16* %flag112, align 2, !dbg !6517
  %conv113 = sext i16 %119 to i32, !dbg !6517
  %and114 = and i32 %conv113, 512, !dbg !6517
  %tobool115 = icmp ne i32 %and114, 0, !dbg !6517
  %120 = zext i1 %tobool115 to i64, !dbg !6517
  %cond116 = select i1 %tobool115, i32 1, i32 0, !dbg !6517
  %sub117 = sub nsw i32 %117, %cond116, !dbg !6517
  %cmp118 = icmp sgt i32 %sub117, 0, !dbg !6517
  br i1 %cmp118, label %if.then120, label %if.end123, !dbg !6520

if.then120:                                       ; preds = %for.body110
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt121, metadata !6521, metadata !DIExpression()), !dbg !6523
  %121 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6523
  %call122 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %121), !dbg !6523
  store %struct.AnimData* %call122, %struct.AnimData** %adt121, align 8, !dbg !6523
  %122 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6523
  %123 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6523
  %124 = load %struct.AnimData*, %struct.AnimData** %adt121, align 8, !dbg !6523
  %125 = load float, float* %ctime.addr, align 4, !dbg !6523
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %122, %struct.ID* %123, %struct.AnimData* %124, float %125, i16 signext 2), !dbg !6523
  br label %if.end123, !dbg !6523

if.end123:                                        ; preds = %if.then120, %for.body110
  br label %for.inc124, !dbg !6520

for.inc124:                                       ; preds = %if.end123
  %126 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6515
  %next125 = getelementptr inbounds %struct.ID, %struct.ID* %126, i32 0, i32 0, !dbg !6515
  %127 = load i8*, i8** %next125, align 8, !dbg !6515
  %128 = bitcast i8* %127 to %struct.ID*, !dbg !6515
  store %struct.ID* %128, %struct.ID** %id, align 8, !dbg !6515
  br label %for.cond108, !dbg !6515, !llvm.loop !6524

for.end126:                                       ; preds = %for.cond108
  %129 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6525
  %key = getelementptr inbounds %struct.Main, %struct.Main* %129, i32 0, i32 24, !dbg !6525
  %first127 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %key, i32 0, i32 0, !dbg !6525
  %130 = load i8*, i8** %first127, align 8, !dbg !6525
  %131 = bitcast i8* %130 to %struct.ID*, !dbg !6525
  store %struct.ID* %131, %struct.ID** %id, align 8, !dbg !6525
  br label %for.cond128, !dbg !6525

for.cond128:                                      ; preds = %for.inc144, %for.end126
  %132 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6527
  %tobool129 = icmp ne %struct.ID* %132, null, !dbg !6525
  br i1 %tobool129, label %for.body130, label %for.end146, !dbg !6525

for.body130:                                      ; preds = %for.cond128
  %133 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6529
  %us131 = getelementptr inbounds %struct.ID, %struct.ID* %133, i32 0, i32 6, !dbg !6529
  %134 = load i32, i32* %us131, align 4, !dbg !6529
  %135 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6529
  %flag132 = getelementptr inbounds %struct.ID, %struct.ID* %135, i32 0, i32 5, !dbg !6529
  %136 = load i16, i16* %flag132, align 2, !dbg !6529
  %conv133 = sext i16 %136 to i32, !dbg !6529
  %and134 = and i32 %conv133, 512, !dbg !6529
  %tobool135 = icmp ne i32 %and134, 0, !dbg !6529
  %137 = zext i1 %tobool135 to i64, !dbg !6529
  %cond136 = select i1 %tobool135, i32 1, i32 0, !dbg !6529
  %sub137 = sub nsw i32 %134, %cond136, !dbg !6529
  %cmp138 = icmp sgt i32 %sub137, 0, !dbg !6529
  br i1 %cmp138, label %if.then140, label %if.end143, !dbg !6532

if.then140:                                       ; preds = %for.body130
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt141, metadata !6533, metadata !DIExpression()), !dbg !6535
  %138 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6535
  %call142 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %138), !dbg !6535
  store %struct.AnimData* %call142, %struct.AnimData** %adt141, align 8, !dbg !6535
  %139 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6535
  %140 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6535
  %141 = load %struct.AnimData*, %struct.AnimData** %adt141, align 8, !dbg !6535
  %142 = load float, float* %ctime.addr, align 4, !dbg !6535
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %139, %struct.ID* %140, %struct.AnimData* %141, float %142, i16 signext 2), !dbg !6535
  br label %if.end143, !dbg !6535

if.end143:                                        ; preds = %if.then140, %for.body130
  br label %for.inc144, !dbg !6532

for.inc144:                                       ; preds = %if.end143
  %143 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6527
  %next145 = getelementptr inbounds %struct.ID, %struct.ID* %143, i32 0, i32 0, !dbg !6527
  %144 = load i8*, i8** %next145, align 8, !dbg !6527
  %145 = bitcast i8* %144 to %struct.ID*, !dbg !6527
  store %struct.ID* %145, %struct.ID** %id, align 8, !dbg !6527
  br label %for.cond128, !dbg !6527, !llvm.loop !6536

for.end146:                                       ; preds = %for.cond128
  %146 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6537
  %mball = getelementptr inbounds %struct.Main, %struct.Main* %146, i32 0, i32 16, !dbg !6537
  %first147 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mball, i32 0, i32 0, !dbg !6537
  %147 = load i8*, i8** %first147, align 8, !dbg !6537
  %148 = bitcast i8* %147 to %struct.ID*, !dbg !6537
  store %struct.ID* %148, %struct.ID** %id, align 8, !dbg !6537
  br label %for.cond148, !dbg !6537

for.cond148:                                      ; preds = %for.inc164, %for.end146
  %149 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6539
  %tobool149 = icmp ne %struct.ID* %149, null, !dbg !6537
  br i1 %tobool149, label %for.body150, label %for.end166, !dbg !6537

for.body150:                                      ; preds = %for.cond148
  %150 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6541
  %us151 = getelementptr inbounds %struct.ID, %struct.ID* %150, i32 0, i32 6, !dbg !6541
  %151 = load i32, i32* %us151, align 4, !dbg !6541
  %152 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6541
  %flag152 = getelementptr inbounds %struct.ID, %struct.ID* %152, i32 0, i32 5, !dbg !6541
  %153 = load i16, i16* %flag152, align 2, !dbg !6541
  %conv153 = sext i16 %153 to i32, !dbg !6541
  %and154 = and i32 %conv153, 512, !dbg !6541
  %tobool155 = icmp ne i32 %and154, 0, !dbg !6541
  %154 = zext i1 %tobool155 to i64, !dbg !6541
  %cond156 = select i1 %tobool155, i32 1, i32 0, !dbg !6541
  %sub157 = sub nsw i32 %151, %cond156, !dbg !6541
  %cmp158 = icmp sgt i32 %sub157, 0, !dbg !6541
  br i1 %cmp158, label %if.then160, label %if.end163, !dbg !6544

if.then160:                                       ; preds = %for.body150
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt161, metadata !6545, metadata !DIExpression()), !dbg !6547
  %155 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6547
  %call162 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %155), !dbg !6547
  store %struct.AnimData* %call162, %struct.AnimData** %adt161, align 8, !dbg !6547
  %156 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6547
  %157 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6547
  %158 = load %struct.AnimData*, %struct.AnimData** %adt161, align 8, !dbg !6547
  %159 = load float, float* %ctime.addr, align 4, !dbg !6547
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %156, %struct.ID* %157, %struct.AnimData* %158, float %159, i16 signext 2), !dbg !6547
  br label %if.end163, !dbg !6547

if.end163:                                        ; preds = %if.then160, %for.body150
  br label %for.inc164, !dbg !6544

for.inc164:                                       ; preds = %if.end163
  %160 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6539
  %next165 = getelementptr inbounds %struct.ID, %struct.ID* %160, i32 0, i32 0, !dbg !6539
  %161 = load i8*, i8** %next165, align 8, !dbg !6539
  %162 = bitcast i8* %161 to %struct.ID*, !dbg !6539
  store %struct.ID* %162, %struct.ID** %id, align 8, !dbg !6539
  br label %for.cond148, !dbg !6539, !llvm.loop !6548

for.end166:                                       ; preds = %for.cond148
  %163 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6549
  %curve167 = getelementptr inbounds %struct.Main, %struct.Main* %163, i32 0, i32 15, !dbg !6549
  %first168 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %curve167, i32 0, i32 0, !dbg !6549
  %164 = load i8*, i8** %first168, align 8, !dbg !6549
  %165 = bitcast i8* %164 to %struct.ID*, !dbg !6549
  store %struct.ID* %165, %struct.ID** %id, align 8, !dbg !6549
  br label %for.cond169, !dbg !6549

for.cond169:                                      ; preds = %for.inc185, %for.end166
  %166 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6551
  %tobool170 = icmp ne %struct.ID* %166, null, !dbg !6549
  br i1 %tobool170, label %for.body171, label %for.end187, !dbg !6549

for.body171:                                      ; preds = %for.cond169
  %167 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6553
  %us172 = getelementptr inbounds %struct.ID, %struct.ID* %167, i32 0, i32 6, !dbg !6553
  %168 = load i32, i32* %us172, align 4, !dbg !6553
  %169 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6553
  %flag173 = getelementptr inbounds %struct.ID, %struct.ID* %169, i32 0, i32 5, !dbg !6553
  %170 = load i16, i16* %flag173, align 2, !dbg !6553
  %conv174 = sext i16 %170 to i32, !dbg !6553
  %and175 = and i32 %conv174, 512, !dbg !6553
  %tobool176 = icmp ne i32 %and175, 0, !dbg !6553
  %171 = zext i1 %tobool176 to i64, !dbg !6553
  %cond177 = select i1 %tobool176, i32 1, i32 0, !dbg !6553
  %sub178 = sub nsw i32 %168, %cond177, !dbg !6553
  %cmp179 = icmp sgt i32 %sub178, 0, !dbg !6553
  br i1 %cmp179, label %if.then181, label %if.end184, !dbg !6556

if.then181:                                       ; preds = %for.body171
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt182, metadata !6557, metadata !DIExpression()), !dbg !6559
  %172 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6559
  %call183 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %172), !dbg !6559
  store %struct.AnimData* %call183, %struct.AnimData** %adt182, align 8, !dbg !6559
  %173 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6559
  %174 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6559
  %175 = load %struct.AnimData*, %struct.AnimData** %adt182, align 8, !dbg !6559
  %176 = load float, float* %ctime.addr, align 4, !dbg !6559
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %173, %struct.ID* %174, %struct.AnimData* %175, float %176, i16 signext 2), !dbg !6559
  br label %if.end184, !dbg !6559

if.end184:                                        ; preds = %if.then181, %for.body171
  br label %for.inc185, !dbg !6556

for.inc185:                                       ; preds = %if.end184
  %177 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6551
  %next186 = getelementptr inbounds %struct.ID, %struct.ID* %177, i32 0, i32 0, !dbg !6551
  %178 = load i8*, i8** %next186, align 8, !dbg !6551
  %179 = bitcast i8* %178 to %struct.ID*, !dbg !6551
  store %struct.ID* %179, %struct.ID** %id, align 8, !dbg !6551
  br label %for.cond169, !dbg !6551, !llvm.loop !6560

for.end187:                                       ; preds = %for.cond169
  %180 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6561
  %armature = getelementptr inbounds %struct.Main, %struct.Main* %180, i32 0, i32 33, !dbg !6561
  %first188 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %armature, i32 0, i32 0, !dbg !6561
  %181 = load i8*, i8** %first188, align 8, !dbg !6561
  %182 = bitcast i8* %181 to %struct.ID*, !dbg !6561
  store %struct.ID* %182, %struct.ID** %id, align 8, !dbg !6561
  br label %for.cond189, !dbg !6561

for.cond189:                                      ; preds = %for.inc205, %for.end187
  %183 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6563
  %tobool190 = icmp ne %struct.ID* %183, null, !dbg !6561
  br i1 %tobool190, label %for.body191, label %for.end207, !dbg !6561

for.body191:                                      ; preds = %for.cond189
  %184 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6565
  %us192 = getelementptr inbounds %struct.ID, %struct.ID* %184, i32 0, i32 6, !dbg !6565
  %185 = load i32, i32* %us192, align 4, !dbg !6565
  %186 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6565
  %flag193 = getelementptr inbounds %struct.ID, %struct.ID* %186, i32 0, i32 5, !dbg !6565
  %187 = load i16, i16* %flag193, align 2, !dbg !6565
  %conv194 = sext i16 %187 to i32, !dbg !6565
  %and195 = and i32 %conv194, 512, !dbg !6565
  %tobool196 = icmp ne i32 %and195, 0, !dbg !6565
  %188 = zext i1 %tobool196 to i64, !dbg !6565
  %cond197 = select i1 %tobool196, i32 1, i32 0, !dbg !6565
  %sub198 = sub nsw i32 %185, %cond197, !dbg !6565
  %cmp199 = icmp sgt i32 %sub198, 0, !dbg !6565
  br i1 %cmp199, label %if.then201, label %if.end204, !dbg !6568

if.then201:                                       ; preds = %for.body191
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt202, metadata !6569, metadata !DIExpression()), !dbg !6571
  %189 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6571
  %call203 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %189), !dbg !6571
  store %struct.AnimData* %call203, %struct.AnimData** %adt202, align 8, !dbg !6571
  %190 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6571
  %191 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6571
  %192 = load %struct.AnimData*, %struct.AnimData** %adt202, align 8, !dbg !6571
  %193 = load float, float* %ctime.addr, align 4, !dbg !6571
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %190, %struct.ID* %191, %struct.AnimData* %192, float %193, i16 signext 2), !dbg !6571
  br label %if.end204, !dbg !6571

if.end204:                                        ; preds = %if.then201, %for.body191
  br label %for.inc205, !dbg !6568

for.inc205:                                       ; preds = %if.end204
  %194 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6563
  %next206 = getelementptr inbounds %struct.ID, %struct.ID* %194, i32 0, i32 0, !dbg !6563
  %195 = load i8*, i8** %next206, align 8, !dbg !6563
  %196 = bitcast i8* %195 to %struct.ID*, !dbg !6563
  store %struct.ID* %196, %struct.ID** %id, align 8, !dbg !6563
  br label %for.cond189, !dbg !6563, !llvm.loop !6572

for.end207:                                       ; preds = %for.cond189
  %197 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6573
  %latt = getelementptr inbounds %struct.Main, %struct.Main* %197, i32 0, i32 20, !dbg !6573
  %first208 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %latt, i32 0, i32 0, !dbg !6573
  %198 = load i8*, i8** %first208, align 8, !dbg !6573
  %199 = bitcast i8* %198 to %struct.ID*, !dbg !6573
  store %struct.ID* %199, %struct.ID** %id, align 8, !dbg !6573
  br label %for.cond209, !dbg !6573

for.cond209:                                      ; preds = %for.inc225, %for.end207
  %200 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6575
  %tobool210 = icmp ne %struct.ID* %200, null, !dbg !6573
  br i1 %tobool210, label %for.body211, label %for.end227, !dbg !6573

for.body211:                                      ; preds = %for.cond209
  %201 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6577
  %us212 = getelementptr inbounds %struct.ID, %struct.ID* %201, i32 0, i32 6, !dbg !6577
  %202 = load i32, i32* %us212, align 4, !dbg !6577
  %203 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6577
  %flag213 = getelementptr inbounds %struct.ID, %struct.ID* %203, i32 0, i32 5, !dbg !6577
  %204 = load i16, i16* %flag213, align 2, !dbg !6577
  %conv214 = sext i16 %204 to i32, !dbg !6577
  %and215 = and i32 %conv214, 512, !dbg !6577
  %tobool216 = icmp ne i32 %and215, 0, !dbg !6577
  %205 = zext i1 %tobool216 to i64, !dbg !6577
  %cond217 = select i1 %tobool216, i32 1, i32 0, !dbg !6577
  %sub218 = sub nsw i32 %202, %cond217, !dbg !6577
  %cmp219 = icmp sgt i32 %sub218, 0, !dbg !6577
  br i1 %cmp219, label %if.then221, label %if.end224, !dbg !6580

if.then221:                                       ; preds = %for.body211
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt222, metadata !6581, metadata !DIExpression()), !dbg !6583
  %206 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6583
  %call223 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %206), !dbg !6583
  store %struct.AnimData* %call223, %struct.AnimData** %adt222, align 8, !dbg !6583
  %207 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6583
  %208 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6583
  %209 = load %struct.AnimData*, %struct.AnimData** %adt222, align 8, !dbg !6583
  %210 = load float, float* %ctime.addr, align 4, !dbg !6583
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %207, %struct.ID* %208, %struct.AnimData* %209, float %210, i16 signext 2), !dbg !6583
  br label %if.end224, !dbg !6583

if.end224:                                        ; preds = %if.then221, %for.body211
  br label %for.inc225, !dbg !6580

for.inc225:                                       ; preds = %if.end224
  %211 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6575
  %next226 = getelementptr inbounds %struct.ID, %struct.ID* %211, i32 0, i32 0, !dbg !6575
  %212 = load i8*, i8** %next226, align 8, !dbg !6575
  %213 = bitcast i8* %212 to %struct.ID*, !dbg !6575
  store %struct.ID* %213, %struct.ID** %id, align 8, !dbg !6575
  br label %for.cond209, !dbg !6575, !llvm.loop !6584

for.end227:                                       ; preds = %for.cond209
  %214 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6585
  %mesh = getelementptr inbounds %struct.Main, %struct.Main* %214, i32 0, i32 14, !dbg !6585
  %first228 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mesh, i32 0, i32 0, !dbg !6585
  %215 = load i8*, i8** %first228, align 8, !dbg !6585
  %216 = bitcast i8* %215 to %struct.ID*, !dbg !6585
  store %struct.ID* %216, %struct.ID** %id, align 8, !dbg !6585
  br label %for.cond229, !dbg !6585

for.cond229:                                      ; preds = %for.inc245, %for.end227
  %217 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6587
  %tobool230 = icmp ne %struct.ID* %217, null, !dbg !6585
  br i1 %tobool230, label %for.body231, label %for.end247, !dbg !6585

for.body231:                                      ; preds = %for.cond229
  %218 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6589
  %us232 = getelementptr inbounds %struct.ID, %struct.ID* %218, i32 0, i32 6, !dbg !6589
  %219 = load i32, i32* %us232, align 4, !dbg !6589
  %220 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6589
  %flag233 = getelementptr inbounds %struct.ID, %struct.ID* %220, i32 0, i32 5, !dbg !6589
  %221 = load i16, i16* %flag233, align 2, !dbg !6589
  %conv234 = sext i16 %221 to i32, !dbg !6589
  %and235 = and i32 %conv234, 512, !dbg !6589
  %tobool236 = icmp ne i32 %and235, 0, !dbg !6589
  %222 = zext i1 %tobool236 to i64, !dbg !6589
  %cond237 = select i1 %tobool236, i32 1, i32 0, !dbg !6589
  %sub238 = sub nsw i32 %219, %cond237, !dbg !6589
  %cmp239 = icmp sgt i32 %sub238, 0, !dbg !6589
  br i1 %cmp239, label %if.then241, label %if.end244, !dbg !6592

if.then241:                                       ; preds = %for.body231
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt242, metadata !6593, metadata !DIExpression()), !dbg !6595
  %223 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6595
  %call243 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %223), !dbg !6595
  store %struct.AnimData* %call243, %struct.AnimData** %adt242, align 8, !dbg !6595
  %224 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6595
  %225 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6595
  %226 = load %struct.AnimData*, %struct.AnimData** %adt242, align 8, !dbg !6595
  %227 = load float, float* %ctime.addr, align 4, !dbg !6595
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %224, %struct.ID* %225, %struct.AnimData* %226, float %227, i16 signext 2), !dbg !6595
  br label %if.end244, !dbg !6595

if.end244:                                        ; preds = %if.then241, %for.body231
  br label %for.inc245, !dbg !6592

for.inc245:                                       ; preds = %if.end244
  %228 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6587
  %next246 = getelementptr inbounds %struct.ID, %struct.ID* %228, i32 0, i32 0, !dbg !6587
  %229 = load i8*, i8** %next246, align 8, !dbg !6587
  %230 = bitcast i8* %229 to %struct.ID*, !dbg !6587
  store %struct.ID* %230, %struct.ID** %id, align 8, !dbg !6587
  br label %for.cond229, !dbg !6587, !llvm.loop !6596

for.end247:                                       ; preds = %for.cond229
  %231 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6597
  %particle = getelementptr inbounds %struct.Main, %struct.Main* %231, i32 0, i32 37, !dbg !6597
  %first248 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particle, i32 0, i32 0, !dbg !6597
  %232 = load i8*, i8** %first248, align 8, !dbg !6597
  %233 = bitcast i8* %232 to %struct.ID*, !dbg !6597
  store %struct.ID* %233, %struct.ID** %id, align 8, !dbg !6597
  br label %for.cond249, !dbg !6597

for.cond249:                                      ; preds = %for.inc265, %for.end247
  %234 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6599
  %tobool250 = icmp ne %struct.ID* %234, null, !dbg !6597
  br i1 %tobool250, label %for.body251, label %for.end267, !dbg !6597

for.body251:                                      ; preds = %for.cond249
  %235 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6601
  %us252 = getelementptr inbounds %struct.ID, %struct.ID* %235, i32 0, i32 6, !dbg !6601
  %236 = load i32, i32* %us252, align 4, !dbg !6601
  %237 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6601
  %flag253 = getelementptr inbounds %struct.ID, %struct.ID* %237, i32 0, i32 5, !dbg !6601
  %238 = load i16, i16* %flag253, align 2, !dbg !6601
  %conv254 = sext i16 %238 to i32, !dbg !6601
  %and255 = and i32 %conv254, 512, !dbg !6601
  %tobool256 = icmp ne i32 %and255, 0, !dbg !6601
  %239 = zext i1 %tobool256 to i64, !dbg !6601
  %cond257 = select i1 %tobool256, i32 1, i32 0, !dbg !6601
  %sub258 = sub nsw i32 %236, %cond257, !dbg !6601
  %cmp259 = icmp sgt i32 %sub258, 0, !dbg !6601
  br i1 %cmp259, label %if.then261, label %if.end264, !dbg !6604

if.then261:                                       ; preds = %for.body251
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt262, metadata !6605, metadata !DIExpression()), !dbg !6607
  %240 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6607
  %call263 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %240), !dbg !6607
  store %struct.AnimData* %call263, %struct.AnimData** %adt262, align 8, !dbg !6607
  %241 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6607
  %242 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6607
  %243 = load %struct.AnimData*, %struct.AnimData** %adt262, align 8, !dbg !6607
  %244 = load float, float* %ctime.addr, align 4, !dbg !6607
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %241, %struct.ID* %242, %struct.AnimData* %243, float %244, i16 signext 2), !dbg !6607
  br label %if.end264, !dbg !6607

if.end264:                                        ; preds = %if.then261, %for.body251
  br label %for.inc265, !dbg !6604

for.inc265:                                       ; preds = %if.end264
  %245 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6599
  %next266 = getelementptr inbounds %struct.ID, %struct.ID* %245, i32 0, i32 0, !dbg !6599
  %246 = load i8*, i8** %next266, align 8, !dbg !6599
  %247 = bitcast i8* %246 to %struct.ID*, !dbg !6599
  store %struct.ID* %247, %struct.ID** %id, align 8, !dbg !6599
  br label %for.cond249, !dbg !6599, !llvm.loop !6608

for.end267:                                       ; preds = %for.cond249
  %248 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6609
  %speaker = getelementptr inbounds %struct.Main, %struct.Main* %248, i32 0, i32 30, !dbg !6609
  %first268 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %speaker, i32 0, i32 0, !dbg !6609
  %249 = load i8*, i8** %first268, align 8, !dbg !6609
  %250 = bitcast i8* %249 to %struct.ID*, !dbg !6609
  store %struct.ID* %250, %struct.ID** %id, align 8, !dbg !6609
  br label %for.cond269, !dbg !6609

for.cond269:                                      ; preds = %for.inc285, %for.end267
  %251 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6611
  %tobool270 = icmp ne %struct.ID* %251, null, !dbg !6609
  br i1 %tobool270, label %for.body271, label %for.end287, !dbg !6609

for.body271:                                      ; preds = %for.cond269
  %252 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6613
  %us272 = getelementptr inbounds %struct.ID, %struct.ID* %252, i32 0, i32 6, !dbg !6613
  %253 = load i32, i32* %us272, align 4, !dbg !6613
  %254 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6613
  %flag273 = getelementptr inbounds %struct.ID, %struct.ID* %254, i32 0, i32 5, !dbg !6613
  %255 = load i16, i16* %flag273, align 2, !dbg !6613
  %conv274 = sext i16 %255 to i32, !dbg !6613
  %and275 = and i32 %conv274, 512, !dbg !6613
  %tobool276 = icmp ne i32 %and275, 0, !dbg !6613
  %256 = zext i1 %tobool276 to i64, !dbg !6613
  %cond277 = select i1 %tobool276, i32 1, i32 0, !dbg !6613
  %sub278 = sub nsw i32 %253, %cond277, !dbg !6613
  %cmp279 = icmp sgt i32 %sub278, 0, !dbg !6613
  br i1 %cmp279, label %if.then281, label %if.end284, !dbg !6616

if.then281:                                       ; preds = %for.body271
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt282, metadata !6617, metadata !DIExpression()), !dbg !6619
  %257 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6619
  %call283 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %257), !dbg !6619
  store %struct.AnimData* %call283, %struct.AnimData** %adt282, align 8, !dbg !6619
  %258 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6619
  %259 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6619
  %260 = load %struct.AnimData*, %struct.AnimData** %adt282, align 8, !dbg !6619
  %261 = load float, float* %ctime.addr, align 4, !dbg !6619
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %258, %struct.ID* %259, %struct.AnimData* %260, float %261, i16 signext 2), !dbg !6619
  br label %if.end284, !dbg !6619

if.end284:                                        ; preds = %if.then281, %for.body271
  br label %for.inc285, !dbg !6616

for.inc285:                                       ; preds = %if.end284
  %262 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6611
  %next286 = getelementptr inbounds %struct.ID, %struct.ID* %262, i32 0, i32 0, !dbg !6611
  %263 = load i8*, i8** %next286, align 8, !dbg !6611
  %264 = bitcast i8* %263 to %struct.ID*, !dbg !6611
  store %struct.ID* %264, %struct.ID** %id, align 8, !dbg !6611
  br label %for.cond269, !dbg !6611, !llvm.loop !6620

for.end287:                                       ; preds = %for.cond269
  %265 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6621
  %movieclip = getelementptr inbounds %struct.Main, %struct.Main* %265, i32 0, i32 42, !dbg !6621
  %first288 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %movieclip, i32 0, i32 0, !dbg !6621
  %266 = load i8*, i8** %first288, align 8, !dbg !6621
  %267 = bitcast i8* %266 to %struct.ID*, !dbg !6621
  store %struct.ID* %267, %struct.ID** %id, align 8, !dbg !6621
  br label %for.cond289, !dbg !6621

for.cond289:                                      ; preds = %for.inc305, %for.end287
  %268 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6623
  %tobool290 = icmp ne %struct.ID* %268, null, !dbg !6621
  br i1 %tobool290, label %for.body291, label %for.end307, !dbg !6621

for.body291:                                      ; preds = %for.cond289
  %269 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6625
  %us292 = getelementptr inbounds %struct.ID, %struct.ID* %269, i32 0, i32 6, !dbg !6625
  %270 = load i32, i32* %us292, align 4, !dbg !6625
  %271 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6625
  %flag293 = getelementptr inbounds %struct.ID, %struct.ID* %271, i32 0, i32 5, !dbg !6625
  %272 = load i16, i16* %flag293, align 2, !dbg !6625
  %conv294 = sext i16 %272 to i32, !dbg !6625
  %and295 = and i32 %conv294, 512, !dbg !6625
  %tobool296 = icmp ne i32 %and295, 0, !dbg !6625
  %273 = zext i1 %tobool296 to i64, !dbg !6625
  %cond297 = select i1 %tobool296, i32 1, i32 0, !dbg !6625
  %sub298 = sub nsw i32 %270, %cond297, !dbg !6625
  %cmp299 = icmp sgt i32 %sub298, 0, !dbg !6625
  br i1 %cmp299, label %if.then301, label %if.end304, !dbg !6628

if.then301:                                       ; preds = %for.body291
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt302, metadata !6629, metadata !DIExpression()), !dbg !6631
  %274 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6631
  %call303 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %274), !dbg !6631
  store %struct.AnimData* %call303, %struct.AnimData** %adt302, align 8, !dbg !6631
  %275 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6631
  %276 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6631
  %277 = load %struct.AnimData*, %struct.AnimData** %adt302, align 8, !dbg !6631
  %278 = load float, float* %ctime.addr, align 4, !dbg !6631
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %275, %struct.ID* %276, %struct.AnimData* %277, float %278, i16 signext 2), !dbg !6631
  br label %if.end304, !dbg !6631

if.end304:                                        ; preds = %if.then301, %for.body291
  br label %for.inc305, !dbg !6628

for.inc305:                                       ; preds = %if.end304
  %279 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6623
  %next306 = getelementptr inbounds %struct.ID, %struct.ID* %279, i32 0, i32 0, !dbg !6623
  %280 = load i8*, i8** %next306, align 8, !dbg !6623
  %281 = bitcast i8* %280 to %struct.ID*, !dbg !6623
  store %struct.ID* %281, %struct.ID** %id, align 8, !dbg !6623
  br label %for.cond289, !dbg !6623, !llvm.loop !6632

for.end307:                                       ; preds = %for.cond289
  %282 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6633
  %linestyle = getelementptr inbounds %struct.Main, %struct.Main* %282, i32 0, i32 44, !dbg !6633
  %first308 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %linestyle, i32 0, i32 0, !dbg !6633
  %283 = load i8*, i8** %first308, align 8, !dbg !6633
  %284 = bitcast i8* %283 to %struct.ID*, !dbg !6633
  store %struct.ID* %284, %struct.ID** %id, align 8, !dbg !6633
  br label %for.cond309, !dbg !6633

for.cond309:                                      ; preds = %for.inc325, %for.end307
  %285 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6635
  %tobool310 = icmp ne %struct.ID* %285, null, !dbg !6633
  br i1 %tobool310, label %for.body311, label %for.end327, !dbg !6633

for.body311:                                      ; preds = %for.cond309
  %286 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6637
  %us312 = getelementptr inbounds %struct.ID, %struct.ID* %286, i32 0, i32 6, !dbg !6637
  %287 = load i32, i32* %us312, align 4, !dbg !6637
  %288 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6637
  %flag313 = getelementptr inbounds %struct.ID, %struct.ID* %288, i32 0, i32 5, !dbg !6637
  %289 = load i16, i16* %flag313, align 2, !dbg !6637
  %conv314 = sext i16 %289 to i32, !dbg !6637
  %and315 = and i32 %conv314, 512, !dbg !6637
  %tobool316 = icmp ne i32 %and315, 0, !dbg !6637
  %290 = zext i1 %tobool316 to i64, !dbg !6637
  %cond317 = select i1 %tobool316, i32 1, i32 0, !dbg !6637
  %sub318 = sub nsw i32 %287, %cond317, !dbg !6637
  %cmp319 = icmp sgt i32 %sub318, 0, !dbg !6637
  br i1 %cmp319, label %if.then321, label %if.end324, !dbg !6640

if.then321:                                       ; preds = %for.body311
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt322, metadata !6641, metadata !DIExpression()), !dbg !6643
  %291 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6643
  %call323 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %291), !dbg !6643
  store %struct.AnimData* %call323, %struct.AnimData** %adt322, align 8, !dbg !6643
  %292 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6643
  %293 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6643
  %294 = load %struct.AnimData*, %struct.AnimData** %adt322, align 8, !dbg !6643
  %295 = load float, float* %ctime.addr, align 4, !dbg !6643
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %292, %struct.ID* %293, %struct.AnimData* %294, float %295, i16 signext 2), !dbg !6643
  br label %if.end324, !dbg !6643

if.end324:                                        ; preds = %if.then321, %for.body311
  br label %for.inc325, !dbg !6640

for.inc325:                                       ; preds = %if.end324
  %296 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6635
  %next326 = getelementptr inbounds %struct.ID, %struct.ID* %296, i32 0, i32 0, !dbg !6635
  %297 = load i8*, i8** %next326, align 8, !dbg !6635
  %298 = bitcast i8* %297 to %struct.ID*, !dbg !6635
  store %struct.ID* %298, %struct.ID** %id, align 8, !dbg !6635
  br label %for.cond309, !dbg !6635, !llvm.loop !6644

for.end327:                                       ; preds = %for.cond309
  %299 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6645
  %object = getelementptr inbounds %struct.Main, %struct.Main* %299, i32 0, i32 13, !dbg !6645
  %first328 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !6645
  %300 = load i8*, i8** %first328, align 8, !dbg !6645
  %301 = bitcast i8* %300 to %struct.ID*, !dbg !6645
  store %struct.ID* %301, %struct.ID** %id, align 8, !dbg !6645
  br label %for.cond329, !dbg !6645

for.cond329:                                      ; preds = %for.inc345, %for.end327
  %302 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6647
  %tobool330 = icmp ne %struct.ID* %302, null, !dbg !6645
  br i1 %tobool330, label %for.body331, label %for.end347, !dbg !6645

for.body331:                                      ; preds = %for.cond329
  %303 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6649
  %us332 = getelementptr inbounds %struct.ID, %struct.ID* %303, i32 0, i32 6, !dbg !6649
  %304 = load i32, i32* %us332, align 4, !dbg !6649
  %305 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6649
  %flag333 = getelementptr inbounds %struct.ID, %struct.ID* %305, i32 0, i32 5, !dbg !6649
  %306 = load i16, i16* %flag333, align 2, !dbg !6649
  %conv334 = sext i16 %306 to i32, !dbg !6649
  %and335 = and i32 %conv334, 512, !dbg !6649
  %tobool336 = icmp ne i32 %and335, 0, !dbg !6649
  %307 = zext i1 %tobool336 to i64, !dbg !6649
  %cond337 = select i1 %tobool336, i32 1, i32 0, !dbg !6649
  %sub338 = sub nsw i32 %304, %cond337, !dbg !6649
  %cmp339 = icmp sgt i32 %sub338, 0, !dbg !6649
  br i1 %cmp339, label %if.then341, label %if.end344, !dbg !6652

if.then341:                                       ; preds = %for.body331
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt342, metadata !6653, metadata !DIExpression()), !dbg !6655
  %308 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6655
  %call343 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %308), !dbg !6655
  store %struct.AnimData* %call343, %struct.AnimData** %adt342, align 8, !dbg !6655
  %309 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6655
  %310 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6655
  %311 = load %struct.AnimData*, %struct.AnimData** %adt342, align 8, !dbg !6655
  %312 = load float, float* %ctime.addr, align 4, !dbg !6655
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %309, %struct.ID* %310, %struct.AnimData* %311, float %312, i16 signext 0), !dbg !6655
  br label %if.end344, !dbg !6655

if.end344:                                        ; preds = %if.then341, %for.body331
  br label %for.inc345, !dbg !6652

for.inc345:                                       ; preds = %if.end344
  %313 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6647
  %next346 = getelementptr inbounds %struct.ID, %struct.ID* %313, i32 0, i32 0, !dbg !6647
  %314 = load i8*, i8** %next346, align 8, !dbg !6647
  %315 = bitcast i8* %314 to %struct.ID*, !dbg !6647
  store %struct.ID* %315, %struct.ID** %id, align 8, !dbg !6647
  br label %for.cond329, !dbg !6647, !llvm.loop !6656

for.end347:                                       ; preds = %for.cond329
  %316 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6657
  %mask = getelementptr inbounds %struct.Main, %struct.Main* %316, i32 0, i32 43, !dbg !6657
  %first348 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mask, i32 0, i32 0, !dbg !6657
  %317 = load i8*, i8** %first348, align 8, !dbg !6657
  %318 = bitcast i8* %317 to %struct.ID*, !dbg !6657
  store %struct.ID* %318, %struct.ID** %id, align 8, !dbg !6657
  br label %for.cond349, !dbg !6657

for.cond349:                                      ; preds = %for.inc365, %for.end347
  %319 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6659
  %tobool350 = icmp ne %struct.ID* %319, null, !dbg !6657
  br i1 %tobool350, label %for.body351, label %for.end367, !dbg !6657

for.body351:                                      ; preds = %for.cond349
  %320 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6661
  %us352 = getelementptr inbounds %struct.ID, %struct.ID* %320, i32 0, i32 6, !dbg !6661
  %321 = load i32, i32* %us352, align 4, !dbg !6661
  %322 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6661
  %flag353 = getelementptr inbounds %struct.ID, %struct.ID* %322, i32 0, i32 5, !dbg !6661
  %323 = load i16, i16* %flag353, align 2, !dbg !6661
  %conv354 = sext i16 %323 to i32, !dbg !6661
  %and355 = and i32 %conv354, 512, !dbg !6661
  %tobool356 = icmp ne i32 %and355, 0, !dbg !6661
  %324 = zext i1 %tobool356 to i64, !dbg !6661
  %cond357 = select i1 %tobool356, i32 1, i32 0, !dbg !6661
  %sub358 = sub nsw i32 %321, %cond357, !dbg !6661
  %cmp359 = icmp sgt i32 %sub358, 0, !dbg !6661
  br i1 %cmp359, label %if.then361, label %if.end364, !dbg !6664

if.then361:                                       ; preds = %for.body351
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt362, metadata !6665, metadata !DIExpression()), !dbg !6667
  %325 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6667
  %call363 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %325), !dbg !6667
  store %struct.AnimData* %call363, %struct.AnimData** %adt362, align 8, !dbg !6667
  %326 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6667
  %327 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6667
  %328 = load %struct.AnimData*, %struct.AnimData** %adt362, align 8, !dbg !6667
  %329 = load float, float* %ctime.addr, align 4, !dbg !6667
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %326, %struct.ID* %327, %struct.AnimData* %328, float %329, i16 signext 2), !dbg !6667
  br label %if.end364, !dbg !6667

if.end364:                                        ; preds = %if.then361, %for.body351
  br label %for.inc365, !dbg !6664

for.inc365:                                       ; preds = %if.end364
  %330 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6659
  %next366 = getelementptr inbounds %struct.ID, %struct.ID* %330, i32 0, i32 0, !dbg !6659
  %331 = load i8*, i8** %next366, align 8, !dbg !6659
  %332 = bitcast i8* %331 to %struct.ID*, !dbg !6659
  store %struct.ID* %332, %struct.ID** %id, align 8, !dbg !6659
  br label %for.cond349, !dbg !6659, !llvm.loop !6668

for.end367:                                       ; preds = %for.cond349
  %333 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6669
  %world = getelementptr inbounds %struct.Main, %struct.Main* %333, i32 0, i32 25, !dbg !6669
  %first368 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %world, i32 0, i32 0, !dbg !6669
  %334 = load i8*, i8** %first368, align 8, !dbg !6669
  %335 = bitcast i8* %334 to %struct.ID*, !dbg !6669
  store %struct.ID* %335, %struct.ID** %id, align 8, !dbg !6669
  br label %for.cond369, !dbg !6669

for.cond369:                                      ; preds = %for.inc394, %for.end367
  %336 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6671
  %tobool370 = icmp ne %struct.ID* %336, null, !dbg !6669
  br i1 %tobool370, label %for.body371, label %for.end396, !dbg !6669

for.body371:                                      ; preds = %for.cond369
  %337 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6673
  %us372 = getelementptr inbounds %struct.ID, %struct.ID* %337, i32 0, i32 6, !dbg !6673
  %338 = load i32, i32* %us372, align 4, !dbg !6673
  %339 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6673
  %flag373 = getelementptr inbounds %struct.ID, %struct.ID* %339, i32 0, i32 5, !dbg !6673
  %340 = load i16, i16* %flag373, align 2, !dbg !6673
  %conv374 = sext i16 %340 to i32, !dbg !6673
  %and375 = and i32 %conv374, 512, !dbg !6673
  %tobool376 = icmp ne i32 %and375, 0, !dbg !6673
  %341 = zext i1 %tobool376 to i64, !dbg !6673
  %cond377 = select i1 %tobool376, i32 1, i32 0, !dbg !6673
  %sub378 = sub nsw i32 %338, %cond377, !dbg !6673
  %cmp379 = icmp sgt i32 %sub378, 0, !dbg !6673
  br i1 %cmp379, label %if.then381, label %if.end393, !dbg !6676

if.then381:                                       ; preds = %for.body371
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt382, metadata !6677, metadata !DIExpression()), !dbg !6679
  %342 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6679
  %call383 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %342), !dbg !6679
  store %struct.AnimData* %call383, %struct.AnimData** %adt382, align 8, !dbg !6679
  call void @llvm.dbg.declare(metadata %struct.World** %ntp384, metadata !6680, metadata !DIExpression()), !dbg !6679
  %343 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6679
  %344 = bitcast %struct.ID* %343 to %struct.World*, !dbg !6679
  store %struct.World* %344, %struct.World** %ntp384, align 8, !dbg !6679
  %345 = load %struct.World*, %struct.World** %ntp384, align 8, !dbg !6681
  %nodetree385 = getelementptr inbounds %struct.World, %struct.World* %345, i32 0, i32 75, !dbg !6681
  %346 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree385, align 8, !dbg !6681
  %tobool386 = icmp ne %struct.bNodeTree* %346, null, !dbg !6681
  br i1 %tobool386, label %if.then387, label %if.end392, !dbg !6679

if.then387:                                       ; preds = %if.then381
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt2388, metadata !6683, metadata !DIExpression()), !dbg !6685
  %347 = load %struct.World*, %struct.World** %ntp384, align 8, !dbg !6685
  %nodetree389 = getelementptr inbounds %struct.World, %struct.World* %347, i32 0, i32 75, !dbg !6685
  %348 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree389, align 8, !dbg !6685
  %349 = bitcast %struct.bNodeTree* %348 to %struct.ID*, !dbg !6685
  %call390 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %349), !dbg !6685
  store %struct.AnimData* %call390, %struct.AnimData** %adt2388, align 8, !dbg !6685
  %350 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6685
  %351 = load %struct.World*, %struct.World** %ntp384, align 8, !dbg !6685
  %nodetree391 = getelementptr inbounds %struct.World, %struct.World* %351, i32 0, i32 75, !dbg !6685
  %352 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree391, align 8, !dbg !6685
  %353 = bitcast %struct.bNodeTree* %352 to %struct.ID*, !dbg !6685
  %354 = load %struct.AnimData*, %struct.AnimData** %adt2388, align 8, !dbg !6685
  %355 = load float, float* %ctime.addr, align 4, !dbg !6685
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %350, %struct.ID* %353, %struct.AnimData* %354, float %355, i16 signext 2), !dbg !6685
  br label %if.end392, !dbg !6685

if.end392:                                        ; preds = %if.then387, %if.then381
  %356 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6679
  %357 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6679
  %358 = load %struct.AnimData*, %struct.AnimData** %adt382, align 8, !dbg !6679
  %359 = load float, float* %ctime.addr, align 4, !dbg !6679
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %356, %struct.ID* %357, %struct.AnimData* %358, float %359, i16 signext 2), !dbg !6679
  br label %if.end393, !dbg !6679

if.end393:                                        ; preds = %if.end392, %for.body371
  br label %for.inc394, !dbg !6676

for.inc394:                                       ; preds = %if.end393
  %360 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6671
  %next395 = getelementptr inbounds %struct.ID, %struct.ID* %360, i32 0, i32 0, !dbg !6671
  %361 = load i8*, i8** %next395, align 8, !dbg !6671
  %362 = bitcast i8* %361 to %struct.ID*, !dbg !6671
  store %struct.ID* %362, %struct.ID** %id, align 8, !dbg !6671
  br label %for.cond369, !dbg !6671, !llvm.loop !6686

for.end396:                                       ; preds = %for.cond369
  %363 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !6687
  %scene397 = getelementptr inbounds %struct.Main, %struct.Main* %363, i32 0, i32 11, !dbg !6687
  %first398 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene397, i32 0, i32 0, !dbg !6687
  %364 = load i8*, i8** %first398, align 8, !dbg !6687
  %365 = bitcast i8* %364 to %struct.ID*, !dbg !6687
  store %struct.ID* %365, %struct.ID** %id, align 8, !dbg !6687
  br label %for.cond399, !dbg !6687

for.cond399:                                      ; preds = %for.inc424, %for.end396
  %366 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6689
  %tobool400 = icmp ne %struct.ID* %366, null, !dbg !6687
  br i1 %tobool400, label %for.body401, label %for.end426, !dbg !6687

for.body401:                                      ; preds = %for.cond399
  %367 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6691
  %us402 = getelementptr inbounds %struct.ID, %struct.ID* %367, i32 0, i32 6, !dbg !6691
  %368 = load i32, i32* %us402, align 4, !dbg !6691
  %369 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6691
  %flag403 = getelementptr inbounds %struct.ID, %struct.ID* %369, i32 0, i32 5, !dbg !6691
  %370 = load i16, i16* %flag403, align 2, !dbg !6691
  %conv404 = sext i16 %370 to i32, !dbg !6691
  %and405 = and i32 %conv404, 512, !dbg !6691
  %tobool406 = icmp ne i32 %and405, 0, !dbg !6691
  %371 = zext i1 %tobool406 to i64, !dbg !6691
  %cond407 = select i1 %tobool406, i32 1, i32 0, !dbg !6691
  %sub408 = sub nsw i32 %368, %cond407, !dbg !6691
  %cmp409 = icmp sgt i32 %sub408, 0, !dbg !6691
  br i1 %cmp409, label %if.then411, label %if.end423, !dbg !6694

if.then411:                                       ; preds = %for.body401
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt412, metadata !6695, metadata !DIExpression()), !dbg !6697
  %372 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6697
  %call413 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %372), !dbg !6697
  store %struct.AnimData* %call413, %struct.AnimData** %adt412, align 8, !dbg !6697
  call void @llvm.dbg.declare(metadata %struct.Scene** %ntp414, metadata !6698, metadata !DIExpression()), !dbg !6697
  %373 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6697
  %374 = bitcast %struct.ID* %373 to %struct.Scene*, !dbg !6697
  store %struct.Scene* %374, %struct.Scene** %ntp414, align 8, !dbg !6697
  %375 = load %struct.Scene*, %struct.Scene** %ntp414, align 8, !dbg !6699
  %nodetree415 = getelementptr inbounds %struct.Scene, %struct.Scene* %375, i32 0, i32 18, !dbg !6699
  %376 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree415, align 8, !dbg !6699
  %tobool416 = icmp ne %struct.bNodeTree* %376, null, !dbg !6699
  br i1 %tobool416, label %if.then417, label %if.end422, !dbg !6697

if.then417:                                       ; preds = %if.then411
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt2418, metadata !6701, metadata !DIExpression()), !dbg !6703
  %377 = load %struct.Scene*, %struct.Scene** %ntp414, align 8, !dbg !6703
  %nodetree419 = getelementptr inbounds %struct.Scene, %struct.Scene* %377, i32 0, i32 18, !dbg !6703
  %378 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree419, align 8, !dbg !6703
  %379 = bitcast %struct.bNodeTree* %378 to %struct.ID*, !dbg !6703
  %call420 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %379), !dbg !6703
  store %struct.AnimData* %call420, %struct.AnimData** %adt2418, align 8, !dbg !6703
  %380 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6703
  %381 = load %struct.Scene*, %struct.Scene** %ntp414, align 8, !dbg !6703
  %nodetree421 = getelementptr inbounds %struct.Scene, %struct.Scene* %381, i32 0, i32 18, !dbg !6703
  %382 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree421, align 8, !dbg !6703
  %383 = bitcast %struct.bNodeTree* %382 to %struct.ID*, !dbg !6703
  %384 = load %struct.AnimData*, %struct.AnimData** %adt2418, align 8, !dbg !6703
  %385 = load float, float* %ctime.addr, align 4, !dbg !6703
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %380, %struct.ID* %383, %struct.AnimData* %384, float %385, i16 signext 2), !dbg !6703
  br label %if.end422, !dbg !6703

if.end422:                                        ; preds = %if.then417, %if.then411
  %386 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6697
  %387 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6697
  %388 = load %struct.AnimData*, %struct.AnimData** %adt412, align 8, !dbg !6697
  %389 = load float, float* %ctime.addr, align 4, !dbg !6697
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %386, %struct.ID* %387, %struct.AnimData* %388, float %389, i16 signext 2), !dbg !6697
  br label %if.end423, !dbg !6697

if.end423:                                        ; preds = %if.end422, %for.body401
  br label %for.inc424, !dbg !6694

for.inc424:                                       ; preds = %if.end423
  %390 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6689
  %next425 = getelementptr inbounds %struct.ID, %struct.ID* %390, i32 0, i32 0, !dbg !6689
  %391 = load i8*, i8** %next425, align 8, !dbg !6689
  %392 = bitcast i8* %391 to %struct.ID*, !dbg !6689
  store %struct.ID* %392, %struct.ID** %id, align 8, !dbg !6689
  br label %for.cond399, !dbg !6689, !llvm.loop !6704

for.end426:                                       ; preds = %if.end12, %for.cond399
  ret void, !dbg !6705
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define internal i8* @rna_path_rename_fix(%struct.ID* %owner_id, i8* %prefix, i8* %oldName, i8* %newName, i8* %oldpath, i8 zeroext %verify_paths) #0 !dbg !6706 {
entry:
  %retval = alloca i8*, align 8
  %owner_id.addr = alloca %struct.ID*, align 8
  %prefix.addr = alloca i8*, align 8
  %oldName.addr = alloca i8*, align 8
  %newName.addr = alloca i8*, align 8
  %oldpath.addr = alloca i8*, align 8
  %verify_paths.addr = alloca i8, align 1
  %prefixPtr = alloca i8*, align 8
  %oldNamePtr = alloca i8*, align 8
  %prefixLen = alloca i32, align 4
  %oldNameLen = alloca i32, align 4
  %ds = alloca %struct.DynStr*, align 8
  %postfixPtr = alloca i8*, align 8
  %newPath = alloca i8*, align 8
  %oldChar = alloca i8, align 1
  store %struct.ID* %owner_id, %struct.ID** %owner_id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %owner_id.addr, metadata !6709, metadata !DIExpression()), !dbg !6710
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !6711, metadata !DIExpression()), !dbg !6712
  store i8* %oldName, i8** %oldName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldName.addr, metadata !6713, metadata !DIExpression()), !dbg !6714
  store i8* %newName, i8** %newName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newName.addr, metadata !6715, metadata !DIExpression()), !dbg !6716
  store i8* %oldpath, i8** %oldpath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldpath.addr, metadata !6717, metadata !DIExpression()), !dbg !6718
  store i8 %verify_paths, i8* %verify_paths.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %verify_paths.addr, metadata !6719, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.declare(metadata i8** %prefixPtr, metadata !6721, metadata !DIExpression()), !dbg !6722
  %0 = load i8*, i8** %oldpath.addr, align 8, !dbg !6723
  %1 = load i8*, i8** %prefix.addr, align 8, !dbg !6724
  %call = call i8* @strstr(i8* %0, i8* %1) #6, !dbg !6725
  store i8* %call, i8** %prefixPtr, align 8, !dbg !6722
  call void @llvm.dbg.declare(metadata i8** %oldNamePtr, metadata !6726, metadata !DIExpression()), !dbg !6727
  %2 = load i8*, i8** %oldpath.addr, align 8, !dbg !6728
  %3 = load i8*, i8** %oldName.addr, align 8, !dbg !6729
  %call1 = call i8* @strstr(i8* %2, i8* %3) #6, !dbg !6730
  store i8* %call1, i8** %oldNamePtr, align 8, !dbg !6727
  call void @llvm.dbg.declare(metadata i32* %prefixLen, metadata !6731, metadata !DIExpression()), !dbg !6732
  %4 = load i8*, i8** %prefix.addr, align 8, !dbg !6733
  %call2 = call i64 @strlen(i8* %4) #6, !dbg !6734
  %conv = trunc i64 %call2 to i32, !dbg !6734
  store i32 %conv, i32* %prefixLen, align 4, !dbg !6732
  call void @llvm.dbg.declare(metadata i32* %oldNameLen, metadata !6735, metadata !DIExpression()), !dbg !6736
  %5 = load i8*, i8** %oldName.addr, align 8, !dbg !6737
  %call3 = call i64 @strlen(i8* %5) #6, !dbg !6738
  %conv4 = trunc i64 %call3 to i32, !dbg !6738
  store i32 %conv4, i32* %oldNameLen, align 4, !dbg !6736
  %6 = load i8*, i8** %prefixPtr, align 8, !dbg !6739
  %tobool = icmp ne i8* %6, null, !dbg !6739
  br i1 %tobool, label %land.lhs.true, label %if.end31, !dbg !6741

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %oldNamePtr, align 8, !dbg !6742
  %tobool5 = icmp ne i8* %7, null, !dbg !6742
  br i1 %tobool5, label %land.lhs.true6, label %if.end31, !dbg !6743

land.lhs.true6:                                   ; preds = %land.lhs.true
  %8 = load i8*, i8** %prefixPtr, align 8, !dbg !6744
  %9 = load i32, i32* %prefixLen, align 4, !dbg !6745
  %idx.ext = sext i32 %9 to i64, !dbg !6746
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !6746
  %10 = load i8*, i8** %oldNamePtr, align 8, !dbg !6747
  %cmp = icmp eq i8* %add.ptr, %10, !dbg !6748
  br i1 %cmp, label %if.then, label %if.end31, !dbg !6749

if.then:                                          ; preds = %land.lhs.true6
  %11 = load i8, i8* %verify_paths.addr, align 1, !dbg !6750
  %tobool8 = icmp ne i8 %11, 0, !dbg !6750
  br i1 %tobool8, label %lor.lhs.false, label %if.then13, !dbg !6753

lor.lhs.false:                                    ; preds = %if.then
  %12 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !6754
  %13 = load i8*, i8** %oldpath.addr, align 8, !dbg !6755
  %call9 = call zeroext i8 @check_rna_path_is_valid(%struct.ID* %12, i8* %13), !dbg !6756
  %conv10 = zext i8 %call9 to i32, !dbg !6756
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !6757
  br i1 %cmp11, label %if.then13, label %if.end30, !dbg !6758

if.then13:                                        ; preds = %lor.lhs.false, %if.then
  call void @llvm.dbg.declare(metadata %struct.DynStr** %ds, metadata !6759, metadata !DIExpression()), !dbg !6765
  %call14 = call %struct.DynStr* @BLI_dynstr_new(), !dbg !6766
  store %struct.DynStr* %call14, %struct.DynStr** %ds, align 8, !dbg !6765
  call void @llvm.dbg.declare(metadata i8** %postfixPtr, metadata !6767, metadata !DIExpression()), !dbg !6768
  %14 = load i8*, i8** %oldNamePtr, align 8, !dbg !6769
  %15 = load i32, i32* %oldNameLen, align 4, !dbg !6770
  %idx.ext15 = sext i32 %15 to i64, !dbg !6771
  %add.ptr16 = getelementptr inbounds i8, i8* %14, i64 %idx.ext15, !dbg !6771
  store i8* %add.ptr16, i8** %postfixPtr, align 8, !dbg !6768
  call void @llvm.dbg.declare(metadata i8** %newPath, metadata !6772, metadata !DIExpression()), !dbg !6773
  store i8* null, i8** %newPath, align 8, !dbg !6773
  call void @llvm.dbg.declare(metadata i8* %oldChar, metadata !6774, metadata !DIExpression()), !dbg !6775
  %16 = load i8*, i8** %prefixPtr, align 8, !dbg !6776
  %17 = load i8*, i8** %oldpath.addr, align 8, !dbg !6778
  %cmp17 = icmp ugt i8* %16, %17, !dbg !6779
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !6780

if.then19:                                        ; preds = %if.then13
  %18 = load i8*, i8** %prefixPtr, align 8, !dbg !6781
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 0, !dbg !6781
  %19 = load i8, i8* %arrayidx, align 1, !dbg !6781
  store i8 %19, i8* %oldChar, align 1, !dbg !6783
  %20 = load i8*, i8** %prefixPtr, align 8, !dbg !6784
  %arrayidx20 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !6784
  store i8 0, i8* %arrayidx20, align 1, !dbg !6785
  %21 = load %struct.DynStr*, %struct.DynStr** %ds, align 8, !dbg !6786
  %22 = load i8*, i8** %oldpath.addr, align 8, !dbg !6787
  call void @BLI_dynstr_append(%struct.DynStr* %21, i8* %22), !dbg !6788
  %23 = load i8, i8* %oldChar, align 1, !dbg !6789
  %24 = load i8*, i8** %prefixPtr, align 8, !dbg !6790
  %arrayidx21 = getelementptr inbounds i8, i8* %24, i64 0, !dbg !6790
  store i8 %23, i8* %arrayidx21, align 1, !dbg !6791
  br label %if.end, !dbg !6792

if.end:                                           ; preds = %if.then19, %if.then13
  %25 = load %struct.DynStr*, %struct.DynStr** %ds, align 8, !dbg !6793
  %26 = load i8*, i8** %prefix.addr, align 8, !dbg !6794
  call void @BLI_dynstr_append(%struct.DynStr* %25, i8* %26), !dbg !6795
  %27 = load %struct.DynStr*, %struct.DynStr** %ds, align 8, !dbg !6796
  %28 = load i8*, i8** %newName.addr, align 8, !dbg !6797
  call void @BLI_dynstr_append(%struct.DynStr* %27, i8* %28), !dbg !6798
  %29 = load %struct.DynStr*, %struct.DynStr** %ds, align 8, !dbg !6799
  %30 = load i8*, i8** %postfixPtr, align 8, !dbg !6800
  call void @BLI_dynstr_append(%struct.DynStr* %29, i8* %30), !dbg !6801
  %31 = load %struct.DynStr*, %struct.DynStr** %ds, align 8, !dbg !6802
  %call22 = call i8* @BLI_dynstr_get_cstring(%struct.DynStr* %31), !dbg !6803
  store i8* %call22, i8** %newPath, align 8, !dbg !6804
  %32 = load %struct.DynStr*, %struct.DynStr** %ds, align 8, !dbg !6805
  call void @BLI_dynstr_free(%struct.DynStr* %32), !dbg !6806
  %33 = load i8, i8* %verify_paths.addr, align 1, !dbg !6807
  %tobool23 = icmp ne i8 %33, 0, !dbg !6807
  br i1 %tobool23, label %lor.lhs.false24, label %if.then28, !dbg !6809

lor.lhs.false24:                                  ; preds = %if.end
  %34 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !6810
  %35 = load i8*, i8** %newPath, align 8, !dbg !6811
  %call25 = call zeroext i8 @check_rna_path_is_valid(%struct.ID* %34, i8* %35), !dbg !6812
  %conv26 = zext i8 %call25 to i32, !dbg !6812
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !6812
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !6813

if.then28:                                        ; preds = %lor.lhs.false24, %if.end
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6814
  %37 = load i8*, i8** %oldpath.addr, align 8, !dbg !6816
  call void %36(i8* %37), !dbg !6814
  %38 = load i8*, i8** %newPath, align 8, !dbg !6817
  store i8* %38, i8** %retval, align 8, !dbg !6818
  br label %return, !dbg !6818

if.else:                                          ; preds = %lor.lhs.false24
  %39 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6819
  %40 = load i8*, i8** %newPath, align 8, !dbg !6821
  call void %39(i8* %40), !dbg !6819
  br label %if.end29

if.end29:                                         ; preds = %if.else
  br label %if.end30, !dbg !6822

if.end30:                                         ; preds = %if.end29, %lor.lhs.false
  br label %if.end31, !dbg !6823

if.end31:                                         ; preds = %if.end30, %land.lhs.true6, %land.lhs.true, %entry
  %41 = load i8*, i8** %oldpath.addr, align 8, !dbg !6824
  store i8* %41, i8** %retval, align 8, !dbg !6825
  br label %return, !dbg !6825

return:                                           ; preds = %if.end31, %if.then28
  %42 = load i8*, i8** %retval, align 8, !dbg !6826
  ret i8* %42, !dbg !6826
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @check_rna_path_is_valid(%struct.ID* %owner_id, i8* %path) #0 !dbg !6827 {
entry:
  %owner_id.addr = alloca %struct.ID*, align 8
  %path.addr = alloca i8*, align 8
  %id_ptr = alloca %struct.PointerRNA, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.ID* %owner_id, %struct.ID** %owner_id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %owner_id.addr, metadata !6830, metadata !DIExpression()), !dbg !6831
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !6832, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %id_ptr, metadata !6834, metadata !DIExpression()), !dbg !6835
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !6836, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6838, metadata !DIExpression()), !dbg !6839
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %prop, align 8, !dbg !6839
  %0 = load %struct.ID*, %struct.ID** %owner_id.addr, align 8, !dbg !6840
  call void @RNA_id_pointer_create(%struct.ID* %0, %struct.PointerRNA* %id_ptr), !dbg !6841
  %1 = load i8*, i8** %path.addr, align 8, !dbg !6842
  %call = call zeroext i8 @RNA_path_resolve_property(%struct.PointerRNA* %id_ptr, i8* %1, %struct.PointerRNA* %ptr, %struct.PropertyRNA** %prop), !dbg !6843
  ret i8 %call, !dbg !6844
}

declare dso_local %struct.DynStr* @BLI_dynstr_new() #2

declare dso_local void @BLI_dynstr_append(%struct.DynStr*, i8*) #2

declare dso_local i8* @BLI_dynstr_get_cstring(%struct.DynStr*) #2

declare dso_local void @BLI_dynstr_free(%struct.DynStr*) #2

declare dso_local zeroext i8 @RNA_path_resolve_property(%struct.PointerRNA*, i8*, %struct.PointerRNA*, %struct.PropertyRNA**) #2

declare dso_local void @free_fcurve(%struct.FCurve*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @animsys_remap_path(%struct.AnimMapper* %UNUSED_remap, i8* %path, i8** %dst) #0 !dbg !6845 {
entry:
  %UNUSED_remap.addr = alloca %struct.AnimMapper*, align 8
  %path.addr = alloca i8*, align 8
  %dst.addr = alloca i8**, align 8
  store %struct.AnimMapper* %UNUSED_remap, %struct.AnimMapper** %UNUSED_remap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimMapper** %UNUSED_remap.addr, metadata !6849, metadata !DIExpression()), !dbg !6850
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !6851, metadata !DIExpression()), !dbg !6852
  store i8** %dst, i8*** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %dst.addr, metadata !6853, metadata !DIExpression()), !dbg !6854
  %0 = load i8*, i8** %path.addr, align 8, !dbg !6855
  %1 = load i8**, i8*** %dst.addr, align 8, !dbg !6856
  store i8* %0, i8** %1, align 8, !dbg !6857
  ret i8 0, !dbg !6858
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @animsys_write_rna_setting(%struct.PointerRNA* %ptr, i8* %path, i32 %array_index, float %value) #0 !dbg !6859 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %path.addr = alloca i8*, align 8
  %array_index.addr = alloca i32, align 4
  %value.addr = alloca float, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  %new_ptr = alloca %struct.PointerRNA, align 8
  %array_len = alloca i32, align 4
  %written = alloca i8, align 1
  %id86 = alloca %struct.ID*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6862, metadata !DIExpression()), !dbg !6863
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !6864, metadata !DIExpression()), !dbg !6865
  store i32 %array_index, i32* %array_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_index.addr, metadata !6866, metadata !DIExpression()), !dbg !6867
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !6868, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6870, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %new_ptr, metadata !6872, metadata !DIExpression()), !dbg !6873
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6874
  %1 = load i8*, i8** %path.addr, align 8, !dbg !6876
  %call = call zeroext i8 @RNA_path_resolve_property(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %new_ptr, %struct.PropertyRNA** %prop), !dbg !6877
  %tobool = icmp ne i8 %call, 0, !dbg !6877
  br i1 %tobool, label %if.then, label %if.else101, !dbg !6878

if.then:                                          ; preds = %entry
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6879
  %call1 = call zeroext i8 @RNA_property_animateable(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %2), !dbg !6882
  %tobool2 = icmp ne i8 %call1, 0, !dbg !6882
  br i1 %tobool2, label %if.then3, label %if.end100, !dbg !6883

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %array_len, metadata !6884, metadata !DIExpression()), !dbg !6886
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6887
  %call4 = call i32 @RNA_property_array_length(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %3), !dbg !6888
  store i32 %call4, i32* %array_len, align 4, !dbg !6886
  call void @llvm.dbg.declare(metadata i8* %written, metadata !6889, metadata !DIExpression()), !dbg !6890
  store i8 0, i8* %written, align 1, !dbg !6890
  %4 = load i32, i32* %array_len, align 4, !dbg !6891
  %tobool5 = icmp ne i32 %4, 0, !dbg !6891
  br i1 %tobool5, label %land.lhs.true, label %if.end15, !dbg !6893

land.lhs.true:                                    ; preds = %if.then3
  %5 = load i32, i32* %array_index.addr, align 4, !dbg !6894
  %6 = load i32, i32* %array_len, align 4, !dbg !6895
  %cmp = icmp sge i32 %5, %6, !dbg !6896
  br i1 %cmp, label %if.then6, label %if.end15, !dbg !6897

if.then6:                                         ; preds = %land.lhs.true
  %7 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !6898
  %and = and i32 %7, 1, !dbg !6901
  %tobool7 = icmp ne i32 %and, 0, !dbg !6901
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !6902

if.then8:                                         ; preds = %if.then6
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6903
  %tobool9 = icmp ne %struct.PointerRNA* %8, null, !dbg !6903
  br i1 %tobool9, label %land.lhs.true10, label %cond.false, !dbg !6905

land.lhs.true10:                                  ; preds = %if.then8
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6906
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %9, i32 0, i32 0, !dbg !6907
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6908
  %10 = load i8*, i8** %data, align 8, !dbg !6908
  %tobool11 = icmp ne i8* %10, null, !dbg !6906
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !6909

cond.true:                                        ; preds = %land.lhs.true10
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6910
  %id12 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %11, i32 0, i32 0, !dbg !6911
  %data13 = getelementptr inbounds %struct.anon, %struct.anon* %id12, i32 0, i32 0, !dbg !6912
  %12 = load i8*, i8** %data13, align 8, !dbg !6912
  %13 = bitcast i8* %12 to %struct.ID*, !dbg !6913
  %name = getelementptr inbounds %struct.ID, %struct.ID* %13, i32 0, i32 4, !dbg !6914
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !6915
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !6916
  br label %cond.end, !dbg !6909

cond.false:                                       ; preds = %land.lhs.true10, %if.then8
  br label %cond.end, !dbg !6909

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), %cond.false ], !dbg !6909
  %14 = load i8*, i8** %path.addr, align 8, !dbg !6917
  %15 = load i32, i32* %array_index.addr, align 4, !dbg !6918
  %16 = load i32, i32* %array_len, align 4, !dbg !6919
  %sub = sub nsw i32 %16, 1, !dbg !6920
  %call14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.22, i64 0, i64 0), i8* %cond, i8* %14, i32 %15, i32 %sub), !dbg !6921
  br label %if.end, !dbg !6922

if.end:                                           ; preds = %cond.end, %if.then6
  store i8 0, i8* %retval, align 1, !dbg !6923
  br label %return, !dbg !6923

if.end15:                                         ; preds = %land.lhs.true, %if.then3
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6924
  %call16 = call i32 @RNA_property_type(%struct.PropertyRNA* %17), !dbg !6925
  switch i32 %call16, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb37
    i32 2, label %sw.bb56
    i32 4, label %sw.bb71
  ], !dbg !6926

sw.bb:                                            ; preds = %if.end15
  %18 = load i32, i32* %array_len, align 4, !dbg !6927
  %tobool17 = icmp ne i32 %18, 0, !dbg !6927
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !6930

if.then18:                                        ; preds = %sw.bb
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6931
  %20 = load i32, i32* %array_index.addr, align 4, !dbg !6934
  %call19 = call i32 @RNA_property_boolean_get_index(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %19, i32 %20), !dbg !6935
  %21 = load float, float* %value.addr, align 4, !dbg !6936
  %cmp20 = fcmp ogt float %21, 0x3FEFFFFFC0000000, !dbg !6936
  %conv = zext i1 %cmp20 to i32, !dbg !6936
  %cmp21 = icmp ne i32 %call19, %conv, !dbg !6937
  br i1 %cmp21, label %if.then23, label %if.end26, !dbg !6938

if.then23:                                        ; preds = %if.then18
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6939
  %23 = load i32, i32* %array_index.addr, align 4, !dbg !6941
  %24 = load float, float* %value.addr, align 4, !dbg !6942
  %cmp24 = fcmp ogt float %24, 0x3FEFFFFFC0000000, !dbg !6942
  %conv25 = zext i1 %cmp24 to i32, !dbg !6942
  call void @RNA_property_boolean_set_index(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %22, i32 %23, i32 %conv25), !dbg !6943
  store i8 1, i8* %written, align 1, !dbg !6944
  br label %if.end26, !dbg !6945

if.end26:                                         ; preds = %if.then23, %if.then18
  br label %if.end36, !dbg !6946

if.else:                                          ; preds = %sw.bb
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6947
  %call27 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %25), !dbg !6950
  %26 = load float, float* %value.addr, align 4, !dbg !6951
  %cmp28 = fcmp ogt float %26, 0x3FEFFFFFC0000000, !dbg !6951
  %conv29 = zext i1 %cmp28 to i32, !dbg !6951
  %cmp30 = icmp ne i32 %call27, %conv29, !dbg !6952
  br i1 %cmp30, label %if.then32, label %if.end35, !dbg !6953

if.then32:                                        ; preds = %if.else
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6954
  %28 = load float, float* %value.addr, align 4, !dbg !6956
  %cmp33 = fcmp ogt float %28, 0x3FEFFFFFC0000000, !dbg !6956
  %conv34 = zext i1 %cmp33 to i32, !dbg !6956
  call void @RNA_property_boolean_set(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %27, i32 %conv34), !dbg !6957
  store i8 1, i8* %written, align 1, !dbg !6958
  br label %if.end35, !dbg !6959

if.end35:                                         ; preds = %if.then32, %if.else
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end26
  br label %sw.epilog, !dbg !6960

sw.bb37:                                          ; preds = %if.end15
  %29 = load i32, i32* %array_len, align 4, !dbg !6961
  %tobool38 = icmp ne i32 %29, 0, !dbg !6961
  br i1 %tobool38, label %if.then39, label %if.else47, !dbg !6963

if.then39:                                        ; preds = %sw.bb37
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6964
  %31 = load i32, i32* %array_index.addr, align 4, !dbg !6967
  %call40 = call i32 @RNA_property_int_get_index(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %30, i32 %31), !dbg !6968
  %32 = load float, float* %value.addr, align 4, !dbg !6969
  %conv41 = fptosi float %32 to i32, !dbg !6970
  %cmp42 = icmp ne i32 %call40, %conv41, !dbg !6971
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !6972

if.then44:                                        ; preds = %if.then39
  %33 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6973
  %34 = load i32, i32* %array_index.addr, align 4, !dbg !6975
  %35 = load float, float* %value.addr, align 4, !dbg !6976
  %conv45 = fptosi float %35 to i32, !dbg !6977
  call void @RNA_property_int_set_index(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %33, i32 %34, i32 %conv45), !dbg !6978
  store i8 1, i8* %written, align 1, !dbg !6979
  br label %if.end46, !dbg !6980

if.end46:                                         ; preds = %if.then44, %if.then39
  br label %if.end55, !dbg !6981

if.else47:                                        ; preds = %sw.bb37
  %36 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6982
  %call48 = call i32 @RNA_property_int_get(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %36), !dbg !6985
  %37 = load float, float* %value.addr, align 4, !dbg !6986
  %conv49 = fptosi float %37 to i32, !dbg !6987
  %cmp50 = icmp ne i32 %call48, %conv49, !dbg !6988
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !6989

if.then52:                                        ; preds = %if.else47
  %38 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6990
  %39 = load float, float* %value.addr, align 4, !dbg !6992
  %conv53 = fptosi float %39 to i32, !dbg !6993
  call void @RNA_property_int_set(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %38, i32 %conv53), !dbg !6994
  store i8 1, i8* %written, align 1, !dbg !6995
  br label %if.end54, !dbg !6996

if.end54:                                         ; preds = %if.then52, %if.else47
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end46
  br label %sw.epilog, !dbg !6997

sw.bb56:                                          ; preds = %if.end15
  %40 = load i32, i32* %array_len, align 4, !dbg !6998
  %tobool57 = icmp ne i32 %40, 0, !dbg !6998
  br i1 %tobool57, label %if.then58, label %if.else64, !dbg !7000

if.then58:                                        ; preds = %sw.bb56
  %41 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7001
  %42 = load i32, i32* %array_index.addr, align 4, !dbg !7004
  %call59 = call float @RNA_property_float_get_index(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %41, i32 %42), !dbg !7005
  %43 = load float, float* %value.addr, align 4, !dbg !7006
  %cmp60 = fcmp une float %call59, %43, !dbg !7007
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !7008

if.then62:                                        ; preds = %if.then58
  %44 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7009
  %45 = load i32, i32* %array_index.addr, align 4, !dbg !7011
  %46 = load float, float* %value.addr, align 4, !dbg !7012
  call void @RNA_property_float_set_index(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %44, i32 %45, float %46), !dbg !7013
  store i8 1, i8* %written, align 1, !dbg !7014
  br label %if.end63, !dbg !7015

if.end63:                                         ; preds = %if.then62, %if.then58
  br label %if.end70, !dbg !7016

if.else64:                                        ; preds = %sw.bb56
  %47 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7017
  %call65 = call float @RNA_property_float_get(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %47), !dbg !7020
  %48 = load float, float* %value.addr, align 4, !dbg !7021
  %cmp66 = fcmp une float %call65, %48, !dbg !7022
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !7023

if.then68:                                        ; preds = %if.else64
  %49 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7024
  %50 = load float, float* %value.addr, align 4, !dbg !7026
  call void @RNA_property_float_set(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %49, float %50), !dbg !7027
  store i8 1, i8* %written, align 1, !dbg !7028
  br label %if.end69, !dbg !7029

if.end69:                                         ; preds = %if.then68, %if.else64
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end63
  br label %sw.epilog, !dbg !7030

sw.bb71:                                          ; preds = %if.end15
  %51 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7031
  %call72 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %51), !dbg !7033
  %52 = load float, float* %value.addr, align 4, !dbg !7034
  %conv73 = fptosi float %52 to i32, !dbg !7035
  %cmp74 = icmp ne i32 %call72, %conv73, !dbg !7036
  br i1 %cmp74, label %if.then76, label %if.end78, !dbg !7037

if.then76:                                        ; preds = %sw.bb71
  %53 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7038
  %54 = load float, float* %value.addr, align 4, !dbg !7040
  %conv77 = fptosi float %54 to i32, !dbg !7041
  call void @RNA_property_enum_set(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %53, i32 %conv77), !dbg !7042
  store i8 1, i8* %written, align 1, !dbg !7043
  br label %if.end78, !dbg !7044

if.end78:                                         ; preds = %if.then76, %sw.bb71
  br label %sw.epilog, !dbg !7045

sw.default:                                       ; preds = %if.end15
  store i8 0, i8* %retval, align 1, !dbg !7046
  br label %return, !dbg !7046

sw.epilog:                                        ; preds = %if.end78, %if.end70, %if.end55, %if.end36
  %55 = load i8, i8* %written, align 1, !dbg !7047
  %conv79 = zext i8 %55 to i32, !dbg !7047
  %tobool80 = icmp ne i32 %conv79, 0, !dbg !7047
  br i1 %tobool80, label %land.lhs.true81, label %if.end99, !dbg !7049

land.lhs.true81:                                  ; preds = %sw.epilog
  %id82 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %new_ptr, i32 0, i32 0, !dbg !7050
  %data83 = getelementptr inbounds %struct.anon, %struct.anon* %id82, i32 0, i32 0, !dbg !7051
  %56 = load i8*, i8** %data83, align 8, !dbg !7051
  %tobool84 = icmp ne i8* %56, null, !dbg !7052
  br i1 %tobool84, label %if.then85, label %if.end99, !dbg !7053

if.then85:                                        ; preds = %land.lhs.true81
  call void @llvm.dbg.declare(metadata %struct.ID** %id86, metadata !7054, metadata !DIExpression()), !dbg !7056
  %id87 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %new_ptr, i32 0, i32 0, !dbg !7057
  %data88 = getelementptr inbounds %struct.anon, %struct.anon* %id87, i32 0, i32 0, !dbg !7058
  %57 = load i8*, i8** %data88, align 8, !dbg !7058
  %58 = bitcast i8* %57 to %struct.ID*, !dbg !7059
  store %struct.ID* %58, %struct.ID** %id86, align 8, !dbg !7056
  %59 = load %struct.ID*, %struct.ID** %id86, align 8, !dbg !7060
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %59, i32 0, i32 5, !dbg !7062
  %60 = load i16, i16* %flag, align 2, !dbg !7062
  %conv89 = sext i16 %60 to i32, !dbg !7060
  %and90 = and i32 %conv89, 16384, !dbg !7063
  %tobool91 = icmp ne i32 %and90, 0, !dbg !7063
  br i1 %tobool91, label %if.end98, label %if.then92, !dbg !7064

if.then92:                                        ; preds = %if.then85
  %61 = load %struct.ID*, %struct.ID** %id86, align 8, !dbg !7065
  %flag93 = getelementptr inbounds %struct.ID, %struct.ID* %61, i32 0, i32 5, !dbg !7067
  %62 = load i16, i16* %flag93, align 2, !dbg !7068
  %conv94 = sext i16 %62 to i32, !dbg !7068
  %or = or i32 %conv94, 4096, !dbg !7068
  %conv95 = trunc i32 %or to i16, !dbg !7068
  store i16 %conv95, i16* %flag93, align 2, !dbg !7068
  %63 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7069
  %64 = load %struct.ID*, %struct.ID** %id86, align 8, !dbg !7070
  %name96 = getelementptr inbounds %struct.ID, %struct.ID* %64, i32 0, i32 4, !dbg !7070
  %arraydecay97 = getelementptr inbounds [66 x i8], [66 x i8]* %name96, i64 0, i64 0, !dbg !7070
  %65 = bitcast i8* %arraydecay97 to i16*, !dbg !7070
  %66 = load i16, i16* %65, align 8, !dbg !7070
  call void @DAG_id_type_tag(%struct.Main* %63, i16 signext %66), !dbg !7071
  br label %if.end98, !dbg !7072

if.end98:                                         ; preds = %if.then92, %if.then85
  br label %if.end99, !dbg !7073

if.end99:                                         ; preds = %if.end98, %land.lhs.true81, %sw.epilog
  br label %if.end100, !dbg !7074

if.end100:                                        ; preds = %if.end99, %if.then
  store i8 1, i8* %retval, align 1, !dbg !7075
  br label %return, !dbg !7075

if.else101:                                       ; preds = %entry
  %67 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !7076
  %and102 = and i32 %67, 1, !dbg !7079
  %tobool103 = icmp ne i32 %and102, 0, !dbg !7079
  br i1 %tobool103, label %if.then104, label %if.end118, !dbg !7080

if.then104:                                       ; preds = %if.else101
  %68 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7081
  %id105 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %68, i32 0, i32 0, !dbg !7083
  %data106 = getelementptr inbounds %struct.anon, %struct.anon* %id105, i32 0, i32 0, !dbg !7084
  %69 = load i8*, i8** %data106, align 8, !dbg !7084
  %tobool107 = icmp ne i8* %69, null, !dbg !7085
  br i1 %tobool107, label %cond.true108, label %cond.false114, !dbg !7085

cond.true108:                                     ; preds = %if.then104
  %70 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7086
  %id109 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %70, i32 0, i32 0, !dbg !7087
  %data110 = getelementptr inbounds %struct.anon, %struct.anon* %id109, i32 0, i32 0, !dbg !7088
  %71 = load i8*, i8** %data110, align 8, !dbg !7088
  %72 = bitcast i8* %71 to %struct.ID*, !dbg !7089
  %name111 = getelementptr inbounds %struct.ID, %struct.ID* %72, i32 0, i32 4, !dbg !7090
  %arraydecay112 = getelementptr inbounds [66 x i8], [66 x i8]* %name111, i64 0, i64 0, !dbg !7091
  %add.ptr113 = getelementptr inbounds i8, i8* %arraydecay112, i64 2, !dbg !7092
  br label %cond.end115, !dbg !7085

cond.false114:                                    ; preds = %if.then104
  br label %cond.end115, !dbg !7085

cond.end115:                                      ; preds = %cond.false114, %cond.true108
  %cond116 = phi i8* [ %add.ptr113, %cond.true108 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), %cond.false114 ], !dbg !7085
  %73 = load i8*, i8** %path.addr, align 8, !dbg !7093
  %74 = load i32, i32* %array_index.addr, align 4, !dbg !7094
  %call117 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i64 0, i64 0), i8* %cond116, i8* %73, i32 %74), !dbg !7095
  br label %if.end118, !dbg !7096

if.end118:                                        ; preds = %cond.end115, %if.else101
  store i8 0, i8* %retval, align 1, !dbg !7097
  br label %return, !dbg !7097

return:                                           ; preds = %if.end118, %if.end100, %sw.default, %if.end
  %75 = load i8, i8* %retval, align 1, !dbg !7098
  ret i8 %75, !dbg !7098
}

declare dso_local zeroext i8 @RNA_property_animateable(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local i32 @RNA_property_array_length(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local i32 @RNA_property_boolean_get_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local i32 @RNA_property_boolean_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local i32 @RNA_property_int_get_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local i32 @RNA_property_int_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local float @RNA_property_float_get_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local float @RNA_property_float_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local i32 @RNA_property_enum_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local void @DAG_id_type_tag(%struct.Main*, i16 signext) #2

declare dso_local float @nlastrip_get_frame(%struct.NlaStrip*, float, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal float @nlastrip_get_influence(%struct.NlaStrip* %strip, float %cframe) #0 !dbg !7099 {
entry:
  %retval = alloca float, align 4
  %strip.addr = alloca %struct.NlaStrip*, align 8
  %cframe.addr = alloca float, align 4
  store %struct.NlaStrip* %strip, %struct.NlaStrip** %strip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %strip.addr, metadata !7102, metadata !DIExpression()), !dbg !7103
  store float %cframe, float* %cframe.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cframe.addr, metadata !7104, metadata !DIExpression()), !dbg !7105
  %0 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7106
  %blendin = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %0, i32 0, i32 16, !dbg !7107
  %1 = load float, float* %blendin, align 8, !dbg !7107
  %2 = call float @llvm.fabs.f32(float %1), !dbg !7108
  %3 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7109
  %blendin1 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %3, i32 0, i32 16, !dbg !7110
  store float %2, float* %blendin1, align 8, !dbg !7111
  %4 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7112
  %blendout = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %4, i32 0, i32 17, !dbg !7113
  %5 = load float, float* %blendout, align 4, !dbg !7113
  %6 = call float @llvm.fabs.f32(float %5), !dbg !7114
  %7 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7115
  %blendout2 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %7, i32 0, i32 17, !dbg !7116
  store float %6, float* %blendout2, align 4, !dbg !7117
  %8 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7118
  %blendin3 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %8, i32 0, i32 16, !dbg !7118
  %9 = load float, float* %blendin3, align 8, !dbg !7118
  %sub = fsub float %9, 0.000000e+00, !dbg !7118
  %10 = call float @llvm.fabs.f32(float %sub), !dbg !7118
  %cmp = fcmp oge float %10, 0x3E80000000000000, !dbg !7118
  %11 = zext i1 %cmp to i64, !dbg !7118
  %cond = select i1 %cmp, i32 0, i32 1, !dbg !7118
  %cmp4 = icmp eq i32 %cond, 0, !dbg !7120
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !7121

land.lhs.true:                                    ; preds = %entry
  %12 = load float, float* %cframe.addr, align 4, !dbg !7122
  %13 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7123
  %start = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %13, i32 0, i32 10, !dbg !7124
  %14 = load float, float* %start, align 8, !dbg !7124
  %15 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7125
  %blendin5 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %15, i32 0, i32 16, !dbg !7126
  %16 = load float, float* %blendin5, align 8, !dbg !7126
  %add = fadd float %14, %16, !dbg !7127
  %cmp6 = fcmp ole float %12, %add, !dbg !7128
  br i1 %cmp6, label %if.then, label %if.else, !dbg !7129

if.then:                                          ; preds = %land.lhs.true
  %17 = load float, float* %cframe.addr, align 4, !dbg !7130
  %18 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7132
  %start7 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %18, i32 0, i32 10, !dbg !7133
  %19 = load float, float* %start7, align 8, !dbg !7133
  %sub8 = fsub float %17, %19, !dbg !7134
  %20 = call float @llvm.fabs.f32(float %sub8), !dbg !7135
  %21 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7136
  %blendin9 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %21, i32 0, i32 16, !dbg !7137
  %22 = load float, float* %blendin9, align 8, !dbg !7137
  %div = fdiv float %20, %22, !dbg !7138
  store float %div, float* %retval, align 4, !dbg !7139
  br label %return, !dbg !7139

if.else:                                          ; preds = %land.lhs.true, %entry
  %23 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7140
  %blendout10 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %23, i32 0, i32 17, !dbg !7140
  %24 = load float, float* %blendout10, align 4, !dbg !7140
  %sub11 = fsub float %24, 0.000000e+00, !dbg !7140
  %25 = call float @llvm.fabs.f32(float %sub11), !dbg !7140
  %cmp12 = fcmp oge float %25, 0x3E80000000000000, !dbg !7140
  %26 = zext i1 %cmp12 to i64, !dbg !7140
  %cond13 = select i1 %cmp12, i32 0, i32 1, !dbg !7140
  %cmp14 = icmp eq i32 %cond13, 0, !dbg !7142
  br i1 %cmp14, label %land.lhs.true15, label %if.else24, !dbg !7143

land.lhs.true15:                                  ; preds = %if.else
  %27 = load float, float* %cframe.addr, align 4, !dbg !7144
  %28 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7145
  %end = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %28, i32 0, i32 11, !dbg !7146
  %29 = load float, float* %end, align 4, !dbg !7146
  %30 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7147
  %blendout16 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %30, i32 0, i32 17, !dbg !7148
  %31 = load float, float* %blendout16, align 4, !dbg !7148
  %sub17 = fsub float %29, %31, !dbg !7149
  %cmp18 = fcmp oge float %27, %sub17, !dbg !7150
  br i1 %cmp18, label %if.then19, label %if.else24, !dbg !7151

if.then19:                                        ; preds = %land.lhs.true15
  %32 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7152
  %end20 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %32, i32 0, i32 11, !dbg !7154
  %33 = load float, float* %end20, align 4, !dbg !7154
  %34 = load float, float* %cframe.addr, align 4, !dbg !7155
  %sub21 = fsub float %33, %34, !dbg !7156
  %35 = call float @llvm.fabs.f32(float %sub21), !dbg !7157
  %36 = load %struct.NlaStrip*, %struct.NlaStrip** %strip.addr, align 8, !dbg !7158
  %blendout22 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %36, i32 0, i32 17, !dbg !7159
  %37 = load float, float* %blendout22, align 4, !dbg !7159
  %div23 = fdiv float %35, %37, !dbg !7160
  store float %div23, float* %retval, align 4, !dbg !7161
  br label %return, !dbg !7161

if.else24:                                        ; preds = %land.lhs.true15, %if.else
  store float 1.000000e+00, float* %retval, align 4, !dbg !7162
  br label %return, !dbg !7162

return:                                           ; preds = %if.else24, %if.then19, %if.then
  %38 = load float, float* %retval, align 4, !dbg !7164
  ret float %38, !dbg !7164
}

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline nounwind uwtable
define internal void @nlaeval_fmodifiers_join_stacks(%struct.ListBase* %result, %struct.ListBase* %list1, %struct.ListBase* %list2) #0 !dbg !7165 {
entry:
  %result.addr = alloca %struct.ListBase*, align 8
  %list1.addr = alloca %struct.ListBase*, align 8
  %list2.addr = alloca %struct.ListBase*, align 8
  %fcm1 = alloca %struct.FModifier*, align 8
  %fcm2 = alloca %struct.FModifier*, align 8
  store %struct.ListBase* %result, %struct.ListBase** %result.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %result.addr, metadata !7168, metadata !DIExpression()), !dbg !7169
  store %struct.ListBase* %list1, %struct.ListBase** %list1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list1.addr, metadata !7170, metadata !DIExpression()), !dbg !7171
  store %struct.ListBase* %list2, %struct.ListBase** %list2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list2.addr, metadata !7172, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.declare(metadata %struct.FModifier** %fcm1, metadata !7174, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.declare(metadata %struct.FModifier** %fcm2, metadata !7192, metadata !DIExpression()), !dbg !7193
  %0 = load %struct.ListBase*, %struct.ListBase** %list1.addr, align 8, !dbg !7194
  %cmp = icmp eq %struct.ListBase* null, %0, !dbg !7194
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7194

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list1.addr, align 8, !dbg !7194
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !7194
  %2 = load i8*, i8** %first, align 8, !dbg !7194
  %cmp1 = icmp eq i8* null, %2, !dbg !7194
  br i1 %cmp1, label %if.then, label %if.else, !dbg !7196

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.ListBase*, %struct.ListBase** %list2.addr, align 8, !dbg !7197
  %tobool = icmp ne %struct.ListBase* %3, null, !dbg !7197
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7200

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.ListBase*, %struct.ListBase** %list2.addr, align 8, !dbg !7201
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 0, !dbg !7202
  %5 = load i8*, i8** %first2, align 8, !dbg !7202
  %tobool3 = icmp ne i8* %5, null, !dbg !7201
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !7203

if.then4:                                         ; preds = %land.lhs.true
  %6 = load %struct.ListBase*, %struct.ListBase** %list2.addr, align 8, !dbg !7204
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %6, i32 0, i32 0, !dbg !7206
  %7 = load i8*, i8** %first5, align 8, !dbg !7206
  %8 = load %struct.ListBase*, %struct.ListBase** %result.addr, align 8, !dbg !7207
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %8, i32 0, i32 0, !dbg !7208
  store i8* %7, i8** %first6, align 8, !dbg !7209
  %9 = load %struct.ListBase*, %struct.ListBase** %list2.addr, align 8, !dbg !7210
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %9, i32 0, i32 1, !dbg !7211
  %10 = load i8*, i8** %last, align 8, !dbg !7211
  %11 = load %struct.ListBase*, %struct.ListBase** %result.addr, align 8, !dbg !7212
  %last7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %11, i32 0, i32 1, !dbg !7213
  store i8* %10, i8** %last7, align 8, !dbg !7214
  br label %if.end, !dbg !7215

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  br label %if.end25, !dbg !7216

if.else:                                          ; preds = %lor.lhs.false
  %12 = load %struct.ListBase*, %struct.ListBase** %list2.addr, align 8, !dbg !7217
  %cmp8 = icmp eq %struct.ListBase* null, %12, !dbg !7217
  br i1 %cmp8, label %if.then12, label %lor.lhs.false9, !dbg !7217

lor.lhs.false9:                                   ; preds = %if.else
  %13 = load %struct.ListBase*, %struct.ListBase** %list2.addr, align 8, !dbg !7217
  %first10 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %13, i32 0, i32 0, !dbg !7217
  %14 = load i8*, i8** %first10, align 8, !dbg !7217
  %cmp11 = icmp eq i8* null, %14, !dbg !7217
  br i1 %cmp11, label %if.then12, label %if.else17, !dbg !7219

if.then12:                                        ; preds = %lor.lhs.false9, %if.else
  %15 = load %struct.ListBase*, %struct.ListBase** %list1.addr, align 8, !dbg !7220
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %15, i32 0, i32 0, !dbg !7222
  %16 = load i8*, i8** %first13, align 8, !dbg !7222
  %17 = load %struct.ListBase*, %struct.ListBase** %result.addr, align 8, !dbg !7223
  %first14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %17, i32 0, i32 0, !dbg !7224
  store i8* %16, i8** %first14, align 8, !dbg !7225
  %18 = load %struct.ListBase*, %struct.ListBase** %list1.addr, align 8, !dbg !7226
  %last15 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %18, i32 0, i32 1, !dbg !7227
  %19 = load i8*, i8** %last15, align 8, !dbg !7227
  %20 = load %struct.ListBase*, %struct.ListBase** %result.addr, align 8, !dbg !7228
  %last16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %20, i32 0, i32 1, !dbg !7229
  store i8* %19, i8** %last16, align 8, !dbg !7230
  br label %if.end24, !dbg !7231

if.else17:                                        ; preds = %lor.lhs.false9
  %21 = load %struct.ListBase*, %struct.ListBase** %list1.addr, align 8, !dbg !7232
  %first18 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %21, i32 0, i32 0, !dbg !7234
  %22 = load i8*, i8** %first18, align 8, !dbg !7234
  %23 = load %struct.ListBase*, %struct.ListBase** %result.addr, align 8, !dbg !7235
  %first19 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %23, i32 0, i32 0, !dbg !7236
  store i8* %22, i8** %first19, align 8, !dbg !7237
  %24 = load %struct.ListBase*, %struct.ListBase** %list2.addr, align 8, !dbg !7238
  %last20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %24, i32 0, i32 1, !dbg !7239
  %25 = load i8*, i8** %last20, align 8, !dbg !7239
  %26 = load %struct.ListBase*, %struct.ListBase** %result.addr, align 8, !dbg !7240
  %last21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %26, i32 0, i32 1, !dbg !7241
  store i8* %25, i8** %last21, align 8, !dbg !7242
  %27 = load %struct.ListBase*, %struct.ListBase** %list1.addr, align 8, !dbg !7243
  %last22 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %27, i32 0, i32 1, !dbg !7244
  %28 = load i8*, i8** %last22, align 8, !dbg !7244
  %29 = bitcast i8* %28 to %struct.FModifier*, !dbg !7243
  store %struct.FModifier* %29, %struct.FModifier** %fcm1, align 8, !dbg !7245
  %30 = load %struct.ListBase*, %struct.ListBase** %list2.addr, align 8, !dbg !7246
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %30, i32 0, i32 0, !dbg !7247
  %31 = load i8*, i8** %first23, align 8, !dbg !7247
  %32 = bitcast i8* %31 to %struct.FModifier*, !dbg !7246
  store %struct.FModifier* %32, %struct.FModifier** %fcm2, align 8, !dbg !7248
  %33 = load %struct.FModifier*, %struct.FModifier** %fcm2, align 8, !dbg !7249
  %34 = load %struct.FModifier*, %struct.FModifier** %fcm1, align 8, !dbg !7250
  %next = getelementptr inbounds %struct.FModifier, %struct.FModifier* %34, i32 0, i32 0, !dbg !7251
  store %struct.FModifier* %33, %struct.FModifier** %next, align 8, !dbg !7252
  %35 = load %struct.FModifier*, %struct.FModifier** %fcm1, align 8, !dbg !7253
  %36 = load %struct.FModifier*, %struct.FModifier** %fcm2, align 8, !dbg !7254
  %prev = getelementptr inbounds %struct.FModifier, %struct.FModifier* %36, i32 0, i32 1, !dbg !7255
  store %struct.FModifier* %35, %struct.FModifier** %prev, align 8, !dbg !7256
  br label %if.end24

if.end24:                                         ; preds = %if.else17, %if.then12
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end
  ret void, !dbg !7257
}

declare dso_local %struct.GHash* @evaluate_fmodifiers_storage_new(%struct.ListBase*) #2

declare dso_local float @evaluate_time_fmodifiers(%struct.GHash*, %struct.ListBase*, %struct.FCurve*, float, float) #2

declare dso_local float @evaluate_fcurve(%struct.FCurve*, float) #2

declare dso_local void @evaluate_value_fmodifiers(%struct.GHash*, %struct.ListBase*, %struct.FCurve*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.NlaEvalChannel* @nlaevalchan_verify(%struct.PointerRNA* %ptr, %struct.ListBase* %channels, %struct.NlaEvalStrip* %nes, %struct.FCurve* %fcu, i8* %newChan) #0 !dbg !7258 {
entry:
  %retval = alloca %struct.NlaEvalChannel*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %channels.addr = alloca %struct.ListBase*, align 8
  %nes.addr = alloca %struct.NlaEvalStrip*, align 8
  %fcu.addr = alloca %struct.FCurve*, align 8
  %newChan.addr = alloca i8*, align 8
  %nec = alloca %struct.NlaEvalChannel*, align 8
  %strip = alloca %struct.NlaStrip*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %new_ptr = alloca %struct.PointerRNA, align 8
  %path = alloca i8*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7262, metadata !DIExpression()), !dbg !7263
  store %struct.ListBase* %channels, %struct.ListBase** %channels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %channels.addr, metadata !7264, metadata !DIExpression()), !dbg !7265
  store %struct.NlaEvalStrip* %nes, %struct.NlaEvalStrip** %nes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NlaEvalStrip** %nes.addr, metadata !7266, metadata !DIExpression()), !dbg !7267
  store %struct.FCurve* %fcu, %struct.FCurve** %fcu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu.addr, metadata !7268, metadata !DIExpression()), !dbg !7269
  store i8* %newChan, i8** %newChan.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %newChan.addr, metadata !7270, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.declare(metadata %struct.NlaEvalChannel** %nec, metadata !7272, metadata !DIExpression()), !dbg !7273
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %strip, metadata !7274, metadata !DIExpression()), !dbg !7275
  %0 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !7276
  %strip1 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %0, i32 0, i32 3, !dbg !7277
  %1 = load %struct.NlaStrip*, %struct.NlaStrip** %strip1, align 8, !dbg !7277
  store %struct.NlaStrip* %1, %struct.NlaStrip** %strip, align 8, !dbg !7275
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7278, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %new_ptr, metadata !7280, metadata !DIExpression()), !dbg !7281
  call void @llvm.dbg.declare(metadata i8** %path, metadata !7282, metadata !DIExpression()), !dbg !7283
  store i8* null, i8** %path, align 8, !dbg !7283
  %2 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !7284
  %cmp = icmp eq %struct.ListBase* %2, null, !dbg !7286
  br i1 %cmp, label %if.then, label %if.end, !dbg !7287

if.then:                                          ; preds = %entry
  store %struct.NlaEvalChannel* null, %struct.NlaEvalChannel** %retval, align 8, !dbg !7288
  br label %return, !dbg !7288

if.end:                                           ; preds = %entry
  %3 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !7289
  %remap = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %3, i32 0, i32 4, !dbg !7290
  %4 = load %struct.AnimMapper*, %struct.AnimMapper** %remap, align 8, !dbg !7290
  %5 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !7291
  %rna_path = getelementptr inbounds %struct.FCurve, %struct.FCurve* %5, i32 0, i32 12, !dbg !7292
  %6 = load i8*, i8** %rna_path, align 8, !dbg !7292
  %call = call zeroext i8 @animsys_remap_path(%struct.AnimMapper* %4, i8* %6, i8** %path), !dbg !7293
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7294
  %8 = load i8*, i8** %path, align 8, !dbg !7296
  %call2 = call zeroext i8 @RNA_path_resolve_property(%struct.PointerRNA* %7, i8* %8, %struct.PointerRNA* %new_ptr, %struct.PropertyRNA** %prop), !dbg !7297
  %conv = zext i8 %call2 to i32, !dbg !7297
  %cmp3 = icmp eq i32 %conv, 0, !dbg !7298
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !7299

if.then5:                                         ; preds = %if.end
  %9 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !7300
  %and = and i32 %9, 1, !dbg !7303
  %tobool = icmp ne i32 %and, 0, !dbg !7303
  br i1 %tobool, label %if.then6, label %if.end8, !dbg !7304

if.then6:                                         ; preds = %if.then5
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.26, i64 0, i64 0)), !dbg !7305
  br label %if.end8, !dbg !7305

if.end8:                                          ; preds = %if.then6, %if.then5
  store %struct.NlaEvalChannel* null, %struct.NlaEvalChannel** %retval, align 8, !dbg !7306
  br label %return, !dbg !7306

if.else:                                          ; preds = %if.end
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7307
  %call9 = call zeroext i8 @RNA_property_animateable(%struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %10), !dbg !7309
  %conv10 = zext i8 %call9 to i32, !dbg !7309
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !7310
  br i1 %cmp11, label %if.then13, label %if.end19, !dbg !7311

if.then13:                                        ; preds = %if.else
  %11 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !7312
  %and14 = and i32 %11, 1, !dbg !7315
  %tobool15 = icmp ne i32 %and14, 0, !dbg !7315
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !7316

if.then16:                                        ; preds = %if.then13
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.27, i64 0, i64 0)), !dbg !7317
  br label %if.end18, !dbg !7317

if.end18:                                         ; preds = %if.then16, %if.then13
  store %struct.NlaEvalChannel* null, %struct.NlaEvalChannel** %retval, align 8, !dbg !7318
  br label %return, !dbg !7318

if.end19:                                         ; preds = %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19
  %12 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !7319
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7320
  %14 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !7321
  %array_index = getelementptr inbounds %struct.FCurve, %struct.FCurve* %14, i32 0, i32 11, !dbg !7322
  %15 = load i32, i32* %array_index, align 4, !dbg !7322
  %call21 = call %struct.NlaEvalChannel* @nlaevalchan_find_match(%struct.ListBase* %12, %struct.PointerRNA* %new_ptr, %struct.PropertyRNA* %13, i32 %15), !dbg !7323
  store %struct.NlaEvalChannel* %call21, %struct.NlaEvalChannel** %nec, align 8, !dbg !7324
  %16 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7325
  %cmp22 = icmp eq %struct.NlaEvalChannel* %16, null, !dbg !7327
  br i1 %cmp22, label %if.then24, label %if.else29, !dbg !7328

if.then24:                                        ; preds = %if.end20
  %17 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7329
  %call25 = call i8* %17(i64 56, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0)), !dbg !7329
  %18 = bitcast i8* %call25 to %struct.NlaEvalChannel*, !dbg !7329
  store %struct.NlaEvalChannel* %18, %struct.NlaEvalChannel** %nec, align 8, !dbg !7331
  %19 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !7332
  %20 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7333
  %21 = bitcast %struct.NlaEvalChannel* %20 to i8*, !dbg !7333
  call void @BLI_addtail(%struct.ListBase* %19, i8* %21), !dbg !7334
  %22 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7335
  %ptr26 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %22, i32 0, i32 2, !dbg !7336
  %23 = bitcast %struct.PointerRNA* %ptr26 to i8*, !dbg !7337
  %24 = bitcast %struct.PointerRNA* %new_ptr to i8*, !dbg !7337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false), !dbg !7337
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7338
  %26 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7339
  %prop27 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %26, i32 0, i32 3, !dbg !7340
  store %struct.PropertyRNA* %25, %struct.PropertyRNA** %prop27, align 8, !dbg !7341
  %27 = load %struct.FCurve*, %struct.FCurve** %fcu.addr, align 8, !dbg !7342
  %array_index28 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %27, i32 0, i32 11, !dbg !7343
  %28 = load i32, i32* %array_index28, align 4, !dbg !7343
  %29 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7344
  %index = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %29, i32 0, i32 4, !dbg !7345
  store i32 %28, i32* %index, align 8, !dbg !7346
  %30 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7347
  call void @nlaevalchan_value_init(%struct.NlaEvalChannel* %30), !dbg !7348
  %31 = load i8*, i8** %newChan.addr, align 8, !dbg !7349
  store i8 1, i8* %31, align 1, !dbg !7350
  br label %if.end30, !dbg !7351

if.else29:                                        ; preds = %if.end20
  %32 = load i8*, i8** %newChan.addr, align 8, !dbg !7352
  store i8 0, i8* %32, align 1, !dbg !7353
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.then24
  %33 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7354
  store %struct.NlaEvalChannel* %33, %struct.NlaEvalChannel** %retval, align 8, !dbg !7355
  br label %return, !dbg !7355

return:                                           ; preds = %if.end30, %if.end18, %if.end8, %if.then
  %34 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %retval, align 8, !dbg !7356
  ret %struct.NlaEvalChannel* %34, !dbg !7356
}

; Function Attrs: noinline nounwind uwtable
define internal void @nlaevalchan_accumulate(%struct.NlaEvalChannel* %nec, %struct.NlaEvalStrip* %nes, float %value, i8 zeroext %newChan) #0 !dbg !7357 {
entry:
  %nec.addr = alloca %struct.NlaEvalChannel*, align 8
  %nes.addr = alloca %struct.NlaEvalStrip*, align 8
  %value.addr = alloca float, align 4
  %newChan.addr = alloca i8, align 1
  %strip = alloca %struct.NlaStrip*, align 8
  %blendmode = alloca i16, align 2
  %inf = alloca float, align 4
  store %struct.NlaEvalChannel* %nec, %struct.NlaEvalChannel** %nec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NlaEvalChannel** %nec.addr, metadata !7360, metadata !DIExpression()), !dbg !7361
  store %struct.NlaEvalStrip* %nes, %struct.NlaEvalStrip** %nes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NlaEvalStrip** %nes.addr, metadata !7362, metadata !DIExpression()), !dbg !7363
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !7364, metadata !DIExpression()), !dbg !7365
  store i8 %newChan, i8* %newChan.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %newChan.addr, metadata !7366, metadata !DIExpression()), !dbg !7367
  call void @llvm.dbg.declare(metadata %struct.NlaStrip** %strip, metadata !7368, metadata !DIExpression()), !dbg !7369
  %0 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !7370
  %strip1 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %0, i32 0, i32 3, !dbg !7371
  %1 = load %struct.NlaStrip*, %struct.NlaStrip** %strip1, align 8, !dbg !7371
  store %struct.NlaStrip* %1, %struct.NlaStrip** %strip, align 8, !dbg !7369
  call void @llvm.dbg.declare(metadata i16* %blendmode, metadata !7372, metadata !DIExpression()), !dbg !7373
  %2 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !7374
  %blendmode2 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %2, i32 0, i32 18, !dbg !7375
  %3 = load i16, i16* %blendmode2, align 8, !dbg !7375
  store i16 %3, i16* %blendmode, align 2, !dbg !7373
  call void @llvm.dbg.declare(metadata float* %inf, metadata !7376, metadata !DIExpression()), !dbg !7377
  %4 = load %struct.NlaStrip*, %struct.NlaStrip** %strip, align 8, !dbg !7378
  %influence = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %4, i32 0, i32 8, !dbg !7379
  %5 = load float, float* %influence, align 8, !dbg !7379
  store float %5, float* %inf, align 4, !dbg !7377
  %6 = load i8, i8* %newChan.addr, align 1, !dbg !7380
  %conv = zext i8 %6 to i32, !dbg !7380
  %tobool = icmp ne i32 %conv, 0, !dbg !7380
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7382

land.lhs.true:                                    ; preds = %entry
  %7 = load i16, i16* %blendmode, align 2, !dbg !7383
  %conv3 = sext i16 %7 to i32, !dbg !7383
  %cmp = icmp eq i32 %conv3, 0, !dbg !7384
  br i1 %cmp, label %if.then, label %if.end, !dbg !7385

if.then:                                          ; preds = %land.lhs.true
  %8 = load float, float* %value.addr, align 4, !dbg !7386
  %9 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7388
  %value5 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %9, i32 0, i32 5, !dbg !7389
  store float %8, float* %value5, align 4, !dbg !7390
  br label %sw.epilog, !dbg !7391

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !7392
  %strip_mode = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %10, i32 0, i32 5, !dbg !7394
  %11 = load i16, i16* %strip_mode, align 2, !dbg !7394
  %conv6 = sext i16 %11 to i32, !dbg !7392
  %cmp7 = icmp eq i32 %conv6, 3, !dbg !7395
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !7396

if.then9:                                         ; preds = %if.end
  %12 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !7397
  %strip_time = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %12, i32 0, i32 6, !dbg !7398
  %13 = load float, float* %strip_time, align 4, !dbg !7398
  %14 = load float, float* %inf, align 4, !dbg !7399
  %mul = fmul float %14, %13, !dbg !7399
  store float %mul, float* %inf, align 4, !dbg !7399
  br label %if.end10, !dbg !7400

if.end10:                                         ; preds = %if.then9, %if.end
  %15 = load float, float* %inf, align 4, !dbg !7401
  %sub = fsub float %15, 0.000000e+00, !dbg !7401
  %16 = call float @llvm.fabs.f32(float %sub), !dbg !7401
  %cmp11 = fcmp oge float %16, 0x3E80000000000000, !dbg !7401
  %17 = zext i1 %cmp11 to i64, !dbg !7401
  %cond = select i1 %cmp11, i32 0, i32 1, !dbg !7401
  %tobool13 = icmp ne i32 %cond, 0, !dbg !7401
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7403

if.then14:                                        ; preds = %if.end10
  br label %sw.epilog, !dbg !7404

if.end15:                                         ; preds = %if.end10
  %18 = load i16, i16* %blendmode, align 2, !dbg !7405
  %conv16 = sext i16 %18 to i32, !dbg !7405
  switch i32 %conv16, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb19
    i32 3, label %sw.bb23
    i32 0, label %sw.bb32
  ], !dbg !7406

sw.bb:                                            ; preds = %if.end15
  %19 = load float, float* %value.addr, align 4, !dbg !7407
  %20 = load float, float* %inf, align 4, !dbg !7409
  %mul17 = fmul float %19, %20, !dbg !7410
  %21 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7411
  %value18 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %21, i32 0, i32 5, !dbg !7412
  %22 = load float, float* %value18, align 4, !dbg !7413
  %add = fadd float %22, %mul17, !dbg !7413
  store float %add, float* %value18, align 4, !dbg !7413
  br label %sw.epilog, !dbg !7414

sw.bb19:                                          ; preds = %if.end15
  %23 = load float, float* %value.addr, align 4, !dbg !7415
  %24 = load float, float* %inf, align 4, !dbg !7416
  %mul20 = fmul float %23, %24, !dbg !7417
  %25 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7418
  %value21 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %25, i32 0, i32 5, !dbg !7419
  %26 = load float, float* %value21, align 4, !dbg !7420
  %sub22 = fsub float %26, %mul20, !dbg !7420
  store float %sub22, float* %value21, align 4, !dbg !7420
  br label %sw.epilog, !dbg !7421

sw.bb23:                                          ; preds = %if.end15
  %27 = load float, float* %inf, align 4, !dbg !7422
  %28 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7423
  %value24 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %28, i32 0, i32 5, !dbg !7424
  %29 = load float, float* %value24, align 4, !dbg !7424
  %30 = load float, float* %value.addr, align 4, !dbg !7425
  %mul25 = fmul float %29, %30, !dbg !7426
  %mul26 = fmul float %27, %mul25, !dbg !7427
  %31 = load float, float* %inf, align 4, !dbg !7428
  %sub27 = fsub float 1.000000e+00, %31, !dbg !7429
  %32 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7430
  %value28 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %32, i32 0, i32 5, !dbg !7431
  %33 = load float, float* %value28, align 4, !dbg !7431
  %mul29 = fmul float %sub27, %33, !dbg !7432
  %add30 = fadd float %mul26, %mul29, !dbg !7433
  %34 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7434
  %value31 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %34, i32 0, i32 5, !dbg !7435
  store float %add30, float* %value31, align 4, !dbg !7436
  br label %sw.epilog, !dbg !7437

sw.bb32:                                          ; preds = %if.end15
  br label %sw.default, !dbg !7437

sw.default:                                       ; preds = %if.end15, %sw.bb32
  %35 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7438
  %value33 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %35, i32 0, i32 5, !dbg !7439
  %36 = load float, float* %value33, align 4, !dbg !7439
  %37 = load float, float* %inf, align 4, !dbg !7440
  %sub34 = fsub float 1.000000e+00, %37, !dbg !7441
  %mul35 = fmul float %36, %sub34, !dbg !7442
  %38 = load float, float* %value.addr, align 4, !dbg !7443
  %39 = load float, float* %inf, align 4, !dbg !7444
  %mul36 = fmul float %38, %39, !dbg !7445
  %add37 = fadd float %mul35, %mul36, !dbg !7446
  %40 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7447
  %value38 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %40, i32 0, i32 5, !dbg !7448
  store float %add37, float* %value38, align 4, !dbg !7449
  br label %sw.epilog, !dbg !7450

sw.epilog:                                        ; preds = %if.then, %if.then14, %sw.default, %sw.bb23, %sw.bb19, %sw.bb
  ret void, !dbg !7451
}

declare dso_local void @evaluate_fmodifiers_storage_free(%struct.GHash*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @nlaeval_fmodifiers_split_stacks(%struct.ListBase* %list1, %struct.ListBase* %list2) #0 !dbg !7452 {
entry:
  %list1.addr = alloca %struct.ListBase*, align 8
  %list2.addr = alloca %struct.ListBase*, align 8
  %fcm1 = alloca %struct.FModifier*, align 8
  %fcm2 = alloca %struct.FModifier*, align 8
  store %struct.ListBase* %list1, %struct.ListBase** %list1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list1.addr, metadata !7453, metadata !DIExpression()), !dbg !7454
  store %struct.ListBase* %list2, %struct.ListBase** %list2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %list2.addr, metadata !7455, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.declare(metadata %struct.FModifier** %fcm1, metadata !7457, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.declare(metadata %struct.FModifier** %fcm2, metadata !7459, metadata !DIExpression()), !dbg !7460
  %0 = load %struct.ListBase*, %struct.ListBase** %list1.addr, align 8, !dbg !7461
  %cmp = icmp eq %struct.ListBase* null, %0, !dbg !7461
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7461

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %list2.addr, align 8, !dbg !7461
  %cmp1 = icmp eq %struct.ListBase* null, %1, !dbg !7461
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7463

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !7464

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.ListBase*, %struct.ListBase** %list1.addr, align 8, !dbg !7465
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !7465
  %3 = load i8*, i8** %first, align 8, !dbg !7465
  %cmp2 = icmp eq i8* null, %3, !dbg !7465
  br i1 %cmp2, label %if.then6, label %lor.lhs.false3, !dbg !7465

lor.lhs.false3:                                   ; preds = %if.end
  %4 = load %struct.ListBase*, %struct.ListBase** %list2.addr, align 8, !dbg !7465
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i32 0, i32 0, !dbg !7465
  %5 = load i8*, i8** %first4, align 8, !dbg !7465
  %cmp5 = icmp eq i8* null, %5, !dbg !7465
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !7467

if.then6:                                         ; preds = %lor.lhs.false3, %if.end
  br label %return, !dbg !7468

if.end7:                                          ; preds = %lor.lhs.false3
  %6 = load %struct.ListBase*, %struct.ListBase** %list1.addr, align 8, !dbg !7469
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %6, i32 0, i32 1, !dbg !7470
  %7 = load i8*, i8** %last, align 8, !dbg !7470
  %8 = bitcast i8* %7 to %struct.FModifier*, !dbg !7469
  store %struct.FModifier* %8, %struct.FModifier** %fcm1, align 8, !dbg !7471
  %9 = load %struct.ListBase*, %struct.ListBase** %list2.addr, align 8, !dbg !7472
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %9, i32 0, i32 0, !dbg !7473
  %10 = load i8*, i8** %first8, align 8, !dbg !7473
  %11 = bitcast i8* %10 to %struct.FModifier*, !dbg !7472
  store %struct.FModifier* %11, %struct.FModifier** %fcm2, align 8, !dbg !7474
  %12 = load %struct.FModifier*, %struct.FModifier** %fcm1, align 8, !dbg !7475
  %next = getelementptr inbounds %struct.FModifier, %struct.FModifier* %12, i32 0, i32 0, !dbg !7476
  store %struct.FModifier* null, %struct.FModifier** %next, align 8, !dbg !7477
  %13 = load %struct.FModifier*, %struct.FModifier** %fcm2, align 8, !dbg !7478
  %prev = getelementptr inbounds %struct.FModifier, %struct.FModifier* %13, i32 0, i32 1, !dbg !7479
  store %struct.FModifier* null, %struct.FModifier** %prev, align 8, !dbg !7480
  br label %return, !dbg !7481

return:                                           ; preds = %if.end7, %if.then6, %if.then
  ret void, !dbg !7481
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.NlaEvalChannel* @nlaevalchan_find_match(%struct.ListBase* %channels, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %array_index) #0 !dbg !7482 {
entry:
  %retval = alloca %struct.NlaEvalChannel*, align 8
  %channels.addr = alloca %struct.ListBase*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %array_index.addr = alloca i32, align 4
  %nec = alloca %struct.NlaEvalChannel*, align 8
  store %struct.ListBase* %channels, %struct.ListBase** %channels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %channels.addr, metadata !7485, metadata !DIExpression()), !dbg !7486
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7487, metadata !DIExpression()), !dbg !7488
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7489, metadata !DIExpression()), !dbg !7490
  store i32 %array_index, i32* %array_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_index.addr, metadata !7491, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.declare(metadata %struct.NlaEvalChannel** %nec, metadata !7493, metadata !DIExpression()), !dbg !7494
  %0 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !7495
  %cmp = icmp eq %struct.ListBase* %0, null, !dbg !7497
  br i1 %cmp, label %if.then, label %if.end, !dbg !7498

if.then:                                          ; preds = %entry
  store %struct.NlaEvalChannel* null, %struct.NlaEvalChannel** %retval, align 8, !dbg !7499
  br label %return, !dbg !7499

if.end:                                           ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !7500
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !7502
  %2 = load i8*, i8** %first, align 8, !dbg !7502
  %3 = bitcast i8* %2 to %struct.NlaEvalChannel*, !dbg !7500
  store %struct.NlaEvalChannel* %3, %struct.NlaEvalChannel** %nec, align 8, !dbg !7503
  br label %for.cond, !dbg !7504

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7505
  %tobool = icmp ne %struct.NlaEvalChannel* %4, null, !dbg !7507
  br i1 %tobool, label %for.body, label %for.end, !dbg !7507

for.body:                                         ; preds = %for.cond
  %5 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7508
  %ptr1 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %5, i32 0, i32 2, !dbg !7511
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr1, i32 0, i32 2, !dbg !7512
  %6 = load i8*, i8** %data, align 8, !dbg !7512
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7513
  %data2 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %7, i32 0, i32 2, !dbg !7514
  %8 = load i8*, i8** %data2, align 8, !dbg !7514
  %cmp3 = icmp eq i8* %6, %8, !dbg !7515
  br i1 %cmp3, label %land.lhs.true, label %if.end9, !dbg !7516

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7517
  %prop4 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %9, i32 0, i32 3, !dbg !7518
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop4, align 8, !dbg !7518
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7519
  %cmp5 = icmp eq %struct.PropertyRNA* %10, %11, !dbg !7520
  br i1 %cmp5, label %land.lhs.true6, label %if.end9, !dbg !7521

land.lhs.true6:                                   ; preds = %land.lhs.true
  %12 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7522
  %index = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %12, i32 0, i32 4, !dbg !7523
  %13 = load i32, i32* %index, align 8, !dbg !7523
  %14 = load i32, i32* %array_index.addr, align 4, !dbg !7524
  %cmp7 = icmp eq i32 %13, %14, !dbg !7525
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !7526

if.then8:                                         ; preds = %land.lhs.true6
  %15 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7527
  store %struct.NlaEvalChannel* %15, %struct.NlaEvalChannel** %retval, align 8, !dbg !7528
  br label %return, !dbg !7528

if.end9:                                          ; preds = %land.lhs.true6, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7529

for.inc:                                          ; preds = %if.end9
  %16 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7530
  %next = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %16, i32 0, i32 0, !dbg !7531
  %17 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %next, align 8, !dbg !7531
  store %struct.NlaEvalChannel* %17, %struct.NlaEvalChannel** %nec, align 8, !dbg !7532
  br label %for.cond, !dbg !7533, !llvm.loop !7534

for.end:                                          ; preds = %for.cond
  store %struct.NlaEvalChannel* null, %struct.NlaEvalChannel** %retval, align 8, !dbg !7536
  br label %return, !dbg !7536

return:                                           ; preds = %for.end, %if.then8, %if.then
  %18 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %retval, align 8, !dbg !7537
  ret %struct.NlaEvalChannel* %18, !dbg !7537
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline nounwind uwtable
define internal void @nlaevalchan_value_init(%struct.NlaEvalChannel* %nec) #0 !dbg !7538 {
entry:
  %nec.addr = alloca %struct.NlaEvalChannel*, align 8
  %ptr = alloca %struct.PointerRNA*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %index = alloca i32, align 4
  store %struct.NlaEvalChannel* %nec, %struct.NlaEvalChannel** %nec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NlaEvalChannel** %nec.addr, metadata !7541, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr, metadata !7543, metadata !DIExpression()), !dbg !7544
  %0 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7545
  %ptr1 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %0, i32 0, i32 2, !dbg !7546
  store %struct.PointerRNA* %ptr1, %struct.PointerRNA** %ptr, align 8, !dbg !7544
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7547, metadata !DIExpression()), !dbg !7548
  %1 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7549
  %prop2 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %1, i32 0, i32 3, !dbg !7550
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop2, align 8, !dbg !7550
  store %struct.PropertyRNA* %2, %struct.PropertyRNA** %prop, align 8, !dbg !7548
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7551, metadata !DIExpression()), !dbg !7552
  %3 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7553
  %index3 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %3, i32 0, i32 4, !dbg !7554
  %4 = load i32, i32* %index3, align 8, !dbg !7554
  store i32 %4, i32* %index, align 4, !dbg !7552
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7555
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %5), !dbg !7556
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb21
    i32 4, label %sw.bb31
  ], !dbg !7557

sw.bb:                                            ; preds = %entry
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7558
  %call4 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %6), !dbg !7561
  %tobool = icmp ne i8 %call4, 0, !dbg !7561
  br i1 %tobool, label %if.then, label %if.else, !dbg !7562

if.then:                                          ; preds = %sw.bb
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7563
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7564
  %9 = load i32, i32* %index, align 4, !dbg !7565
  %call5 = call i32 @RNA_property_boolean_get_default_index(%struct.PointerRNA* %7, %struct.PropertyRNA* %8, i32 %9), !dbg !7566
  %conv = sitofp i32 %call5 to float, !dbg !7567
  %10 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7568
  %value = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %10, i32 0, i32 5, !dbg !7569
  store float %conv, float* %value, align 4, !dbg !7570
  br label %if.end, !dbg !7568

if.else:                                          ; preds = %sw.bb
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7571
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7572
  %call6 = call i32 @RNA_property_boolean_get_default(%struct.PointerRNA* %11, %struct.PropertyRNA* %12), !dbg !7573
  %conv7 = sitofp i32 %call6 to float, !dbg !7574
  %13 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7575
  %value8 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %13, i32 0, i32 5, !dbg !7576
  store float %conv7, float* %value8, align 4, !dbg !7577
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !7578

sw.bb9:                                           ; preds = %entry
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7579
  %call10 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %14), !dbg !7581
  %tobool11 = icmp ne i8 %call10, 0, !dbg !7581
  br i1 %tobool11, label %if.then12, label %if.else16, !dbg !7582

if.then12:                                        ; preds = %sw.bb9
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7583
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7584
  %17 = load i32, i32* %index, align 4, !dbg !7585
  %call13 = call i32 @RNA_property_int_get_default_index(%struct.PointerRNA* %15, %struct.PropertyRNA* %16, i32 %17), !dbg !7586
  %conv14 = sitofp i32 %call13 to float, !dbg !7587
  %18 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7588
  %value15 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %18, i32 0, i32 5, !dbg !7589
  store float %conv14, float* %value15, align 4, !dbg !7590
  br label %if.end20, !dbg !7588

if.else16:                                        ; preds = %sw.bb9
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7591
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7592
  %call17 = call i32 @RNA_property_int_get_default(%struct.PointerRNA* %19, %struct.PropertyRNA* %20), !dbg !7593
  %conv18 = sitofp i32 %call17 to float, !dbg !7594
  %21 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7595
  %value19 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %21, i32 0, i32 5, !dbg !7596
  store float %conv18, float* %value19, align 4, !dbg !7597
  br label %if.end20

if.end20:                                         ; preds = %if.else16, %if.then12
  br label %sw.epilog, !dbg !7598

sw.bb21:                                          ; preds = %entry
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7599
  %call22 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %22), !dbg !7601
  %tobool23 = icmp ne i8 %call22, 0, !dbg !7601
  br i1 %tobool23, label %if.then24, label %if.else27, !dbg !7602

if.then24:                                        ; preds = %sw.bb21
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7603
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7604
  %25 = load i32, i32* %index, align 4, !dbg !7605
  %call25 = call float @RNA_property_float_get_default_index(%struct.PointerRNA* %23, %struct.PropertyRNA* %24, i32 %25), !dbg !7606
  %26 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7607
  %value26 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %26, i32 0, i32 5, !dbg !7608
  store float %call25, float* %value26, align 4, !dbg !7609
  br label %if.end30, !dbg !7607

if.else27:                                        ; preds = %sw.bb21
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7610
  %28 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7611
  %call28 = call float @RNA_property_float_get_default(%struct.PointerRNA* %27, %struct.PropertyRNA* %28), !dbg !7612
  %29 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7613
  %value29 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %29, i32 0, i32 5, !dbg !7614
  store float %call28, float* %value29, align 4, !dbg !7615
  br label %if.end30

if.end30:                                         ; preds = %if.else27, %if.then24
  br label %sw.epilog, !dbg !7616

sw.bb31:                                          ; preds = %entry
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7617
  %31 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7618
  %call32 = call i32 @RNA_property_enum_get_default(%struct.PointerRNA* %30, %struct.PropertyRNA* %31), !dbg !7619
  %conv33 = sitofp i32 %call32 to float, !dbg !7620
  %32 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec.addr, align 8, !dbg !7621
  %value34 = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %32, i32 0, i32 5, !dbg !7622
  store float %conv33, float* %value34, align 4, !dbg !7623
  br label %sw.epilog, !dbg !7624

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !7625

sw.epilog:                                        ; preds = %sw.default, %sw.bb31, %if.end30, %if.end20, %if.end
  ret void, !dbg !7626
}

declare dso_local i32 @RNA_property_boolean_get_default_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local i32 @RNA_property_boolean_get_default(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local i32 @RNA_property_int_get_default_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local i32 @RNA_property_int_get_default(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local float @RNA_property_float_get_default_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local float @RNA_property_float_get_default(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local i32 @RNA_property_enum_get_default(%struct.PointerRNA*, %struct.PropertyRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @nlaevalchan_buffers_accumulate(%struct.ListBase* %channels, %struct.ListBase* %tmp_buffer, %struct.NlaEvalStrip* %nes) #0 !dbg !7627 {
entry:
  %channels.addr = alloca %struct.ListBase*, align 8
  %tmp_buffer.addr = alloca %struct.ListBase*, align 8
  %nes.addr = alloca %struct.NlaEvalStrip*, align 8
  %nec = alloca %struct.NlaEvalChannel*, align 8
  %necn = alloca %struct.NlaEvalChannel*, align 8
  %necd = alloca %struct.NlaEvalChannel*, align 8
  store %struct.ListBase* %channels, %struct.ListBase** %channels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %channels.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  store %struct.ListBase* %tmp_buffer, %struct.ListBase** %tmp_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %tmp_buffer.addr, metadata !7632, metadata !DIExpression()), !dbg !7633
  store %struct.NlaEvalStrip* %nes, %struct.NlaEvalStrip** %nes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NlaEvalStrip** %nes.addr, metadata !7634, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.declare(metadata %struct.NlaEvalChannel** %nec, metadata !7636, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.declare(metadata %struct.NlaEvalChannel** %necn, metadata !7638, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.declare(metadata %struct.NlaEvalChannel** %necd, metadata !7640, metadata !DIExpression()), !dbg !7641
  %0 = load %struct.ListBase*, %struct.ListBase** %tmp_buffer.addr, align 8, !dbg !7642
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %0), !dbg !7644
  %tobool = icmp ne i8 %call, 0, !dbg !7644
  br i1 %tobool, label %if.then, label %if.end, !dbg !7645

if.then:                                          ; preds = %entry
  br label %return, !dbg !7646

if.end:                                           ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %tmp_buffer.addr, align 8, !dbg !7647
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !7649
  %2 = load i8*, i8** %first, align 8, !dbg !7649
  %3 = bitcast i8* %2 to %struct.NlaEvalChannel*, !dbg !7647
  store %struct.NlaEvalChannel* %3, %struct.NlaEvalChannel** %nec, align 8, !dbg !7650
  br label %for.cond, !dbg !7651

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7652
  %tobool1 = icmp ne %struct.NlaEvalChannel* %4, null, !dbg !7654
  br i1 %tobool1, label %for.body, label %for.end, !dbg !7654

for.body:                                         ; preds = %for.cond
  %5 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7655
  %next = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %5, i32 0, i32 0, !dbg !7657
  %6 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %next, align 8, !dbg !7657
  store %struct.NlaEvalChannel* %6, %struct.NlaEvalChannel** %necn, align 8, !dbg !7658
  %7 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !7659
  %8 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7660
  %ptr = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %8, i32 0, i32 2, !dbg !7661
  %9 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7662
  %prop = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %9, i32 0, i32 3, !dbg !7663
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7663
  %11 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7664
  %index = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %11, i32 0, i32 4, !dbg !7665
  %12 = load i32, i32* %index, align 8, !dbg !7665
  %call2 = call %struct.NlaEvalChannel* @nlaevalchan_find_match(%struct.ListBase* %7, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %10, i32 %12), !dbg !7666
  store %struct.NlaEvalChannel* %call2, %struct.NlaEvalChannel** %necd, align 8, !dbg !7667
  %13 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %necd, align 8, !dbg !7668
  %tobool3 = icmp ne %struct.NlaEvalChannel* %13, null, !dbg !7668
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !7670

if.then4:                                         ; preds = %for.body
  %14 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %necd, align 8, !dbg !7671
  %15 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes.addr, align 8, !dbg !7672
  %16 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7673
  %value = getelementptr inbounds %struct.NlaEvalChannel, %struct.NlaEvalChannel* %16, i32 0, i32 5, !dbg !7674
  %17 = load float, float* %value, align 4, !dbg !7674
  %conv = fptoui float %17 to i8, !dbg !7673
  call void @nlaevalchan_accumulate(%struct.NlaEvalChannel* %14, %struct.NlaEvalStrip* %15, float 0.000000e+00, i8 zeroext %conv), !dbg !7675
  br label %if.end5, !dbg !7675

if.else:                                          ; preds = %for.body
  %18 = load %struct.ListBase*, %struct.ListBase** %tmp_buffer.addr, align 8, !dbg !7676
  %19 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7678
  %20 = bitcast %struct.NlaEvalChannel* %19 to i8*, !dbg !7678
  call void @BLI_remlink(%struct.ListBase* %18, i8* %20), !dbg !7679
  %21 = load %struct.ListBase*, %struct.ListBase** %channels.addr, align 8, !dbg !7680
  %22 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %nec, align 8, !dbg !7681
  %23 = bitcast %struct.NlaEvalChannel* %22 to i8*, !dbg !7681
  call void @BLI_addtail(%struct.ListBase* %21, i8* %23), !dbg !7682
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  br label %for.inc, !dbg !7683

for.inc:                                          ; preds = %if.end5
  %24 = load %struct.NlaEvalChannel*, %struct.NlaEvalChannel** %necn, align 8, !dbg !7684
  store %struct.NlaEvalChannel* %24, %struct.NlaEvalChannel** %nec, align 8, !dbg !7685
  br label %for.cond, !dbg !7686, !llvm.loop !7687

for.end:                                          ; preds = %for.cond
  %25 = load %struct.ListBase*, %struct.ListBase** %tmp_buffer.addr, align 8, !dbg !7689
  call void @BLI_freelistN(%struct.ListBase* %25), !dbg !7690
  br label %return, !dbg !7691

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !7691
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @animsys_evaluate_nla(%struct.ListBase* %echannels, %struct.PointerRNA* %ptr, %struct.AnimData* %adt, float %ctime) #0 !dbg !7692 {
entry:
  %echannels.addr = alloca %struct.ListBase*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %adt.addr = alloca %struct.AnimData*, align 8
  %ctime.addr = alloca float, align 4
  %nlt = alloca %struct.NlaTrack*, align 8
  %track_index = alloca i16, align 2
  %has_strips = alloca i8, align 1
  %estrips = alloca %struct.ListBase, align 8
  %nes = alloca %struct.NlaEvalStrip*, align 8
  %dummy_strip = alloca %struct.NlaStrip, align 8
  %dummy_trackslist = alloca %struct.ListBase, align 8
  %id87 = alloca %struct.ID*, align 8
  store %struct.ListBase* %echannels, %struct.ListBase** %echannels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %echannels.addr, metadata !7695, metadata !DIExpression()), !dbg !7696
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7697, metadata !DIExpression()), !dbg !7698
  store %struct.AnimData* %adt, %struct.AnimData** %adt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt.addr, metadata !7699, metadata !DIExpression()), !dbg !7700
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !7701, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.declare(metadata %struct.NlaTrack** %nlt, metadata !7703, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.declare(metadata i16* %track_index, metadata !7705, metadata !DIExpression()), !dbg !7706
  store i16 0, i16* %track_index, align 2, !dbg !7706
  call void @llvm.dbg.declare(metadata i8* %has_strips, metadata !7707, metadata !DIExpression()), !dbg !7708
  store i8 0, i8* %has_strips, align 1, !dbg !7708
  call void @llvm.dbg.declare(metadata %struct.ListBase* %estrips, metadata !7709, metadata !DIExpression()), !dbg !7710
  %0 = bitcast %struct.ListBase* %estrips to i8*, !dbg !7710
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !7710
  call void @llvm.dbg.declare(metadata %struct.NlaEvalStrip** %nes, metadata !7711, metadata !DIExpression()), !dbg !7712
  call void @llvm.dbg.declare(metadata %struct.NlaStrip* %dummy_strip, metadata !7713, metadata !DIExpression()), !dbg !7714
  %1 = bitcast %struct.NlaStrip* %dummy_strip to i8*, !dbg !7714
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 208, i1 false), !dbg !7714
  %2 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7715
  %nla_tracks = getelementptr inbounds %struct.AnimData, %struct.AnimData* %2, i32 0, i32 3, !dbg !7717
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nla_tracks, i32 0, i32 0, !dbg !7718
  %3 = load i8*, i8** %first, align 8, !dbg !7718
  %4 = bitcast i8* %3 to %struct.NlaTrack*, !dbg !7715
  store %struct.NlaTrack* %4, %struct.NlaTrack** %nlt, align 8, !dbg !7719
  br label %for.cond, !dbg !7720

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7721
  %tobool = icmp ne %struct.NlaTrack* %5, null, !dbg !7723
  br i1 %tobool, label %for.body, label %for.end, !dbg !7723

for.body:                                         ; preds = %for.cond
  %6 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7724
  %flag = getelementptr inbounds %struct.AnimData, %struct.AnimData* %6, i32 0, i32 7, !dbg !7727
  %7 = load i32, i32* %flag, align 8, !dbg !7727
  %and = and i32 %7, 4, !dbg !7728
  %tobool1 = icmp ne i32 %and, 0, !dbg !7728
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !7729

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7730
  %flag2 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %8, i32 0, i32 3, !dbg !7731
  %9 = load i32, i32* %flag2, align 8, !dbg !7731
  %and3 = and i32 %9, 1024, !dbg !7732
  %tobool4 = icmp ne i32 %and3, 0, !dbg !7732
  br i1 %tobool4, label %if.then, label %if.end, !dbg !7733

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !7734

if.end:                                           ; preds = %land.lhs.true, %for.body
  %10 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7735
  %flag5 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %10, i32 0, i32 7, !dbg !7737
  %11 = load i32, i32* %flag5, align 8, !dbg !7737
  %and6 = and i32 %11, 1, !dbg !7738
  %tobool7 = icmp ne i32 %and6, 0, !dbg !7738
  br i1 %tobool7, label %land.lhs.true8, label %if.end12, !dbg !7739

land.lhs.true8:                                   ; preds = %if.end
  %12 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7740
  %flag9 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %12, i32 0, i32 3, !dbg !7741
  %13 = load i32, i32* %flag9, align 8, !dbg !7741
  %and10 = and i32 %13, 8, !dbg !7742
  %cmp = icmp eq i32 %and10, 0, !dbg !7743
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !7744

if.then11:                                        ; preds = %land.lhs.true8
  br label %for.inc, !dbg !7745

if.end12:                                         ; preds = %land.lhs.true8, %if.end
  %14 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7746
  %flag13 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %14, i32 0, i32 3, !dbg !7748
  %15 = load i32, i32* %flag13, align 8, !dbg !7748
  %and14 = and i32 %15, 4, !dbg !7749
  %tobool15 = icmp ne i32 %and14, 0, !dbg !7749
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !7750

if.then16:                                        ; preds = %if.end12
  br label %for.inc, !dbg !7751

if.end17:                                         ; preds = %if.end12
  %16 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7752
  %strips = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %16, i32 0, i32 2, !dbg !7754
  %first18 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strips, i32 0, i32 0, !dbg !7755
  %17 = load i8*, i8** %first18, align 8, !dbg !7755
  %tobool19 = icmp ne i8* %17, null, !dbg !7752
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !7756

if.then20:                                        ; preds = %if.end17
  store i8 1, i8* %has_strips, align 1, !dbg !7757
  br label %if.end21, !dbg !7758

if.end21:                                         ; preds = %if.then20, %if.end17
  %18 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7759
  %strips22 = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %18, i32 0, i32 2, !dbg !7760
  %19 = load i16, i16* %track_index, align 2, !dbg !7761
  %20 = load float, float* %ctime.addr, align 4, !dbg !7762
  %call = call %struct.NlaEvalStrip* @nlastrips_ctime_get_strip(%struct.ListBase* %estrips, %struct.ListBase* %strips22, i16 signext %19, float %20), !dbg !7763
  store %struct.NlaEvalStrip* %call, %struct.NlaEvalStrip** %nes, align 8, !dbg !7764
  %21 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes, align 8, !dbg !7765
  %tobool23 = icmp ne %struct.NlaEvalStrip* %21, null, !dbg !7765
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !7767

if.then24:                                        ; preds = %if.end21
  %22 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7768
  %23 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes, align 8, !dbg !7769
  %track = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %23, i32 0, i32 2, !dbg !7770
  store %struct.NlaTrack* %22, %struct.NlaTrack** %track, align 8, !dbg !7771
  br label %if.end25, !dbg !7769

if.end25:                                         ; preds = %if.then24, %if.end21
  br label %for.inc, !dbg !7772

for.inc:                                          ; preds = %if.end25, %if.then16, %if.then11
  %24 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7773
  %next = getelementptr inbounds %struct.NlaTrack, %struct.NlaTrack* %24, i32 0, i32 0, !dbg !7774
  %25 = load %struct.NlaTrack*, %struct.NlaTrack** %next, align 8, !dbg !7774
  store %struct.NlaTrack* %25, %struct.NlaTrack** %nlt, align 8, !dbg !7775
  %26 = load i16, i16* %track_index, align 2, !dbg !7776
  %inc = add i16 %26, 1, !dbg !7776
  store i16 %inc, i16* %track_index, align 2, !dbg !7776
  br label %for.cond, !dbg !7777, !llvm.loop !7778

for.end:                                          ; preds = %if.then, %for.cond
  %27 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7780
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %27, i32 0, i32 0, !dbg !7782
  %28 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !7782
  %tobool26 = icmp ne %struct.bAction* %28, null, !dbg !7783
  br i1 %tobool26, label %land.lhs.true27, label %if.end72, !dbg !7784

land.lhs.true27:                                  ; preds = %for.end
  %29 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7785
  %flag28 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %29, i32 0, i32 7, !dbg !7786
  %30 = load i32, i32* %flag28, align 8, !dbg !7786
  %and29 = and i32 %30, 1, !dbg !7787
  %cmp30 = icmp eq i32 %and29, 0, !dbg !7788
  br i1 %cmp30, label %if.then34, label %lor.lhs.false, !dbg !7789

lor.lhs.false:                                    ; preds = %land.lhs.true27
  %31 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7790
  %flag31 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %31, i32 0, i32 7, !dbg !7791
  %32 = load i32, i32* %flag31, align 8, !dbg !7791
  %and32 = and i32 %32, 4, !dbg !7792
  %tobool33 = icmp ne i32 %and32, 0, !dbg !7792
  br i1 %tobool33, label %if.then34, label %if.end72, !dbg !7793

if.then34:                                        ; preds = %lor.lhs.false, %land.lhs.true27
  %33 = load i8, i8* %has_strips, align 1, !dbg !7794
  %conv = zext i8 %33 to i32, !dbg !7797
  %tobool35 = icmp ne i32 %conv, 0, !dbg !7797
  br i1 %tobool35, label %if.then38, label %lor.lhs.false36, !dbg !7798

lor.lhs.false36:                                  ; preds = %if.then34
  %34 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7799
  %actstrip = getelementptr inbounds %struct.AnimData, %struct.AnimData* %34, i32 0, i32 4, !dbg !7800
  %35 = load %struct.NlaStrip*, %struct.NlaStrip** %actstrip, align 8, !dbg !7800
  %tobool37 = icmp ne %struct.NlaStrip* %35, null, !dbg !7801
  br i1 %tobool37, label %if.then38, label %if.else63, !dbg !7802

if.then38:                                        ; preds = %lor.lhs.false36, %if.then34
  call void @llvm.dbg.declare(metadata %struct.ListBase* %dummy_trackslist, metadata !7803, metadata !DIExpression()), !dbg !7805
  %36 = bitcast %struct.NlaStrip* %dummy_strip to i8*, !dbg !7806
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %dummy_trackslist, i32 0, i32 1, !dbg !7807
  store i8* %36, i8** %last, align 8, !dbg !7808
  %first39 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %dummy_trackslist, i32 0, i32 0, !dbg !7809
  store i8* %36, i8** %first39, align 8, !dbg !7810
  %37 = load %struct.NlaTrack*, %struct.NlaTrack** %nlt, align 8, !dbg !7811
  %tobool40 = icmp ne %struct.NlaTrack* %37, null, !dbg !7813
  br i1 %tobool40, label %land.lhs.true41, label %if.else, !dbg !7814

land.lhs.true41:                                  ; preds = %if.then38
  %38 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7815
  %flag42 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %38, i32 0, i32 7, !dbg !7816
  %39 = load i32, i32* %flag42, align 8, !dbg !7816
  %and43 = and i32 %39, 8, !dbg !7817
  %tobool44 = icmp ne i32 %and43, 0, !dbg !7817
  br i1 %tobool44, label %if.else, label %if.then45, !dbg !7818

if.then45:                                        ; preds = %land.lhs.true41
  %40 = bitcast %struct.NlaStrip* %dummy_strip to i8*, !dbg !7819
  %41 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7821
  %actstrip46 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %41, i32 0, i32 4, !dbg !7822
  %42 = load %struct.NlaStrip*, %struct.NlaStrip** %actstrip46, align 8, !dbg !7822
  %43 = bitcast %struct.NlaStrip* %42 to i8*, !dbg !7819
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %43, i64 208, i1 false), !dbg !7819
  %prev = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 1, !dbg !7823
  store %struct.NlaStrip* null, %struct.NlaStrip** %prev, align 8, !dbg !7824
  %next47 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 0, !dbg !7825
  store %struct.NlaStrip* null, %struct.NlaStrip** %next47, align 8, !dbg !7826
  br label %if.end61, !dbg !7827

if.else:                                          ; preds = %land.lhs.true41, %if.then38
  %44 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7828
  %action48 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %44, i32 0, i32 0, !dbg !7830
  %45 = load %struct.bAction*, %struct.bAction** %action48, align 8, !dbg !7830
  %act = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 3, !dbg !7831
  store %struct.bAction* %45, %struct.bAction** %act, align 8, !dbg !7832
  %46 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7833
  %remap = getelementptr inbounds %struct.AnimData, %struct.AnimData* %46, i32 0, i32 2, !dbg !7834
  %47 = load %struct.AnimMapper*, %struct.AnimMapper** %remap, align 8, !dbg !7834
  %remap49 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 4, !dbg !7835
  store %struct.AnimMapper* %47, %struct.AnimMapper** %remap49, align 8, !dbg !7836
  %act50 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 3, !dbg !7837
  %48 = load %struct.bAction*, %struct.bAction** %act50, align 8, !dbg !7837
  %actstart = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 12, !dbg !7838
  %actend = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 13, !dbg !7839
  call void @calc_action_range(%struct.bAction* %48, float* %actstart, float* %actend, i16 signext 1), !dbg !7840
  %actstart51 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 12, !dbg !7841
  %49 = load float, float* %actstart51, align 8, !dbg !7841
  %start = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 10, !dbg !7842
  store float %49, float* %start, align 8, !dbg !7843
  %actstart52 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 12, !dbg !7844
  %50 = load float, float* %actstart52, align 8, !dbg !7844
  %actend53 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 13, !dbg !7844
  %51 = load float, float* %actend53, align 4, !dbg !7844
  %sub = fsub float %50, %51, !dbg !7844
  %52 = call float @llvm.fabs.f32(float %sub), !dbg !7844
  %cmp54 = fcmp oge float %52, 0x3E80000000000000, !dbg !7844
  %53 = zext i1 %cmp54 to i64, !dbg !7844
  %cond = select i1 %cmp54, i32 0, i32 1, !dbg !7844
  %tobool56 = icmp ne i32 %cond, 0, !dbg !7844
  br i1 %tobool56, label %cond.true, label %cond.false, !dbg !7845

cond.true:                                        ; preds = %if.else
  %actstart57 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 12, !dbg !7846
  %54 = load float, float* %actstart57, align 8, !dbg !7846
  %add = fadd float %54, 1.000000e+00, !dbg !7847
  br label %cond.end, !dbg !7845

cond.false:                                       ; preds = %if.else
  %actend58 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 13, !dbg !7848
  %55 = load float, float* %actend58, align 4, !dbg !7848
  br label %cond.end, !dbg !7845

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond59 = phi float [ %add, %cond.true ], [ %55, %cond.false ], !dbg !7845
  %end = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 11, !dbg !7849
  store float %cond59, float* %end, align 4, !dbg !7850
  %56 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7851
  %act_blendmode = getelementptr inbounds %struct.AnimData, %struct.AnimData* %56, i32 0, i32 9, !dbg !7852
  %57 = load i16, i16* %act_blendmode, align 8, !dbg !7852
  %blendmode = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 18, !dbg !7853
  store i16 %57, i16* %blendmode, align 8, !dbg !7854
  %58 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7855
  %act_extendmode = getelementptr inbounds %struct.AnimData, %struct.AnimData* %58, i32 0, i32 10, !dbg !7856
  %59 = load i16, i16* %act_extendmode, align 2, !dbg !7856
  %extendmode = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 19, !dbg !7857
  store i16 %59, i16* %extendmode, align 2, !dbg !7858
  %60 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7859
  %act_influence = getelementptr inbounds %struct.AnimData, %struct.AnimData* %60, i32 0, i32 11, !dbg !7860
  %61 = load float, float* %act_influence, align 4, !dbg !7860
  %influence = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 8, !dbg !7861
  store float %61, float* %influence, align 8, !dbg !7862
  %flag60 = getelementptr inbounds %struct.NlaStrip, %struct.NlaStrip* %dummy_strip, i32 0, i32 23, !dbg !7863
  %62 = load i32, i32* %flag60, align 8, !dbg !7864
  %or = or i32 %62, 32, !dbg !7864
  store i32 %or, i32* %flag60, align 8, !dbg !7864
  br label %if.end61

if.end61:                                         ; preds = %cond.end, %if.then45
  %63 = load float, float* %ctime.addr, align 4, !dbg !7865
  %call62 = call %struct.NlaEvalStrip* @nlastrips_ctime_get_strip(%struct.ListBase* %estrips, %struct.ListBase* %dummy_trackslist, i16 signext -1, float %63), !dbg !7866
  br label %if.end71, !dbg !7867

if.else63:                                        ; preds = %lor.lhs.false36
  %64 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !7868
  %and64 = and i32 %64, 1, !dbg !7871
  %tobool65 = icmp ne i32 %and64, 0, !dbg !7871
  br i1 %tobool65, label %if.then66, label %if.end68, !dbg !7872

if.then66:                                        ; preds = %if.else63
  %call67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.29, i64 0, i64 0)), !dbg !7873
  br label %if.end68, !dbg !7873

if.end68:                                         ; preds = %if.then66, %if.else63
  %65 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7874
  %66 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7875
  %action69 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %66, i32 0, i32 0, !dbg !7876
  %67 = load %struct.bAction*, %struct.bAction** %action69, align 8, !dbg !7876
  %68 = load %struct.AnimData*, %struct.AnimData** %adt.addr, align 8, !dbg !7877
  %remap70 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %68, i32 0, i32 2, !dbg !7878
  %69 = load %struct.AnimMapper*, %struct.AnimMapper** %remap70, align 8, !dbg !7878
  %70 = load float, float* %ctime.addr, align 4, !dbg !7879
  call void @animsys_evaluate_action(%struct.PointerRNA* %65, %struct.bAction* %67, %struct.AnimMapper* %69, float %70), !dbg !7880
  call void @BLI_freelistN(%struct.ListBase* %estrips), !dbg !7881
  br label %if.end100, !dbg !7882

if.end71:                                         ; preds = %if.end61
  br label %if.end72, !dbg !7883

if.end72:                                         ; preds = %if.end71, %lor.lhs.false, %for.end
  %call73 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %estrips), !dbg !7884
  %tobool74 = icmp ne i8 %call73, 0, !dbg !7884
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !7886

if.then75:                                        ; preds = %if.end72
  br label %if.end100, !dbg !7887

if.end76:                                         ; preds = %if.end72
  %first77 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %estrips, i32 0, i32 0, !dbg !7888
  %71 = load i8*, i8** %first77, align 8, !dbg !7888
  %72 = bitcast i8* %71 to %struct.NlaEvalStrip*, !dbg !7890
  store %struct.NlaEvalStrip* %72, %struct.NlaEvalStrip** %nes, align 8, !dbg !7891
  br label %for.cond78, !dbg !7892

for.cond78:                                       ; preds = %for.inc81, %if.end76
  %73 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes, align 8, !dbg !7893
  %tobool79 = icmp ne %struct.NlaEvalStrip* %73, null, !dbg !7895
  br i1 %tobool79, label %for.body80, label %for.end83, !dbg !7895

for.body80:                                       ; preds = %for.cond78
  %74 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7896
  %75 = load %struct.ListBase*, %struct.ListBase** %echannels.addr, align 8, !dbg !7897
  %76 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes, align 8, !dbg !7898
  call void @nlastrip_evaluate(%struct.PointerRNA* %74, %struct.ListBase* %75, %struct.ListBase* null, %struct.NlaEvalStrip* %76), !dbg !7899
  br label %for.inc81, !dbg !7899

for.inc81:                                        ; preds = %for.body80
  %77 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %nes, align 8, !dbg !7900
  %next82 = getelementptr inbounds %struct.NlaEvalStrip, %struct.NlaEvalStrip* %77, i32 0, i32 0, !dbg !7901
  %78 = load %struct.NlaEvalStrip*, %struct.NlaEvalStrip** %next82, align 8, !dbg !7901
  store %struct.NlaEvalStrip* %78, %struct.NlaEvalStrip** %nes, align 8, !dbg !7902
  br label %for.cond78, !dbg !7903, !llvm.loop !7904

for.end83:                                        ; preds = %for.cond78
  call void @BLI_freelistN(%struct.ListBase* %estrips), !dbg !7906
  %79 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7907
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %79, i32 0, i32 0, !dbg !7909
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !7910
  %80 = load i8*, i8** %data, align 8, !dbg !7910
  %cmp84 = icmp ne i8* %80, null, !dbg !7911
  br i1 %cmp84, label %if.then86, label %if.end100, !dbg !7912

if.then86:                                        ; preds = %for.end83
  call void @llvm.dbg.declare(metadata %struct.ID** %id87, metadata !7913, metadata !DIExpression()), !dbg !7915
  %81 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7916
  %id88 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %81, i32 0, i32 0, !dbg !7917
  %data89 = getelementptr inbounds %struct.anon, %struct.anon* %id88, i32 0, i32 0, !dbg !7918
  %82 = load i8*, i8** %data89, align 8, !dbg !7918
  %83 = bitcast i8* %82 to %struct.ID*, !dbg !7916
  store %struct.ID* %83, %struct.ID** %id87, align 8, !dbg !7915
  %84 = load %struct.ID*, %struct.ID** %id87, align 8, !dbg !7919
  %flag90 = getelementptr inbounds %struct.ID, %struct.ID* %84, i32 0, i32 5, !dbg !7921
  %85 = load i16, i16* %flag90, align 2, !dbg !7921
  %conv91 = sext i16 %85 to i32, !dbg !7919
  %and92 = and i32 %conv91, 16384, !dbg !7922
  %tobool93 = icmp ne i32 %and92, 0, !dbg !7922
  br i1 %tobool93, label %if.end99, label %if.then94, !dbg !7923

if.then94:                                        ; preds = %if.then86
  %86 = load %struct.ID*, %struct.ID** %id87, align 8, !dbg !7924
  %flag95 = getelementptr inbounds %struct.ID, %struct.ID* %86, i32 0, i32 5, !dbg !7926
  %87 = load i16, i16* %flag95, align 2, !dbg !7927
  %conv96 = sext i16 %87 to i32, !dbg !7927
  %or97 = or i32 %conv96, 4096, !dbg !7927
  %conv98 = trunc i32 %or97 to i16, !dbg !7927
  store i16 %conv98, i16* %flag95, align 2, !dbg !7927
  %88 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7928
  %89 = load %struct.ID*, %struct.ID** %id87, align 8, !dbg !7929
  %name = getelementptr inbounds %struct.ID, %struct.ID* %89, i32 0, i32 4, !dbg !7929
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !7929
  %90 = bitcast i8* %arraydecay to i16*, !dbg !7929
  %91 = load i16, i16* %90, align 8, !dbg !7929
  call void @DAG_id_type_tag(%struct.Main* %88, i16 signext %91), !dbg !7930
  br label %if.end99, !dbg !7931

if.end99:                                         ; preds = %if.then94, %if.then86
  br label %if.end100, !dbg !7932

if.end100:                                        ; preds = %if.end68, %if.then75, %if.end99, %for.end83
  ret void, !dbg !7933
}

declare dso_local void @calc_action_range(%struct.bAction*, float*, float*, i16 signext) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2327, !2328, !2329}
!llvm.ident = !{!2330}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !151, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/blenkernel/intern/anim_sys.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !16, !29, !41, !54, !79, !91, !99, !104, !119, !124, !130, !136, !144}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !4, line: 67, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15}
!7 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!8 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!9 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!10 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!11 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!12 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!13 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!14 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!15 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!16 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimData_Flag", file: !17, line: 872, baseType: !5, size: 32, elements: !18)
!17 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!18 = !{!19, !20, !21, !22, !23, !24, !25, !26, !27, !28}
!19 = !DIEnumerator(name: "ADT_NLA_SOLO_TRACK", value: 1, isUnsigned: true)
!20 = !DIEnumerator(name: "ADT_NLA_EVAL_OFF", value: 2, isUnsigned: true)
!21 = !DIEnumerator(name: "ADT_NLA_EDIT_ON", value: 4, isUnsigned: true)
!22 = !DIEnumerator(name: "ADT_NLA_EDIT_NOMAP", value: 8, isUnsigned: true)
!23 = !DIEnumerator(name: "ADT_NLA_SKEYS_COLLAPSED", value: 16, isUnsigned: true)
!24 = !DIEnumerator(name: "ADT_DRIVERS_COLLAPSED", value: 1024, isUnsigned: true)
!25 = !DIEnumerator(name: "ADT_DRIVERS_DISABLED", value: 2048, isUnsigned: true)
!26 = !DIEnumerator(name: "ADT_UI_SELECTED", value: 16384, isUnsigned: true)
!27 = !DIEnumerator(name: "ADT_UI_ACTIVE", value: 32768, isUnsigned: true)
!28 = !DIEnumerator(name: "ADT_CURVES_NOT_VISIBLE", value: 65536, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !30, line: 123, baseType: !5, size: 32, elements: !31)
!30 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!31 = !{!32, !33, !34, !35, !36, !37, !38, !39, !40}
!32 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!33 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!34 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!35 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!36 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!37 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!38 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!39 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!40 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!41 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eActionGroup_Flag", file: !42, line: 453, baseType: !43, size: 32, elements: !44)
!42 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!43 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!44 = !{!45, !46, !47, !48, !49, !50, !51, !52, !53}
!45 = !DIEnumerator(name: "AGRP_SELECTED", value: 1)
!46 = !DIEnumerator(name: "AGRP_ACTIVE", value: 2)
!47 = !DIEnumerator(name: "AGRP_PROTECTED", value: 4)
!48 = !DIEnumerator(name: "AGRP_EXPANDED", value: 8)
!49 = !DIEnumerator(name: "AGRP_MUTED", value: 16)
!50 = !DIEnumerator(name: "AGRP_NOTVISIBLE", value: 32)
!51 = !DIEnumerator(name: "AGRP_EXPANDED_G", value: 64)
!52 = !DIEnumerator(name: "AGRP_TEMP", value: 1073741824)
!53 = !DIEnumerator(name: "AGRP_MOVED", value: -2147483648)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !55, line: 1163, baseType: !5, size: 32, elements: !56)
!55 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!56 = !{!57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78}
!57 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!59 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!60 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!61 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!62 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!63 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!64 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!65 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!66 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!67 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!68 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!69 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!70 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!71 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!72 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!73 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!74 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!75 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!76 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!77 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!78 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFCurve_Flags", file: !17, line: 467, baseType: !5, size: 32, elements: !80)
!80 = !{!81, !82, !83, !84, !85, !86, !87, !88, !89, !90}
!81 = !DIEnumerator(name: "FCURVE_VISIBLE", value: 1, isUnsigned: true)
!82 = !DIEnumerator(name: "FCURVE_SELECTED", value: 2, isUnsigned: true)
!83 = !DIEnumerator(name: "FCURVE_ACTIVE", value: 4, isUnsigned: true)
!84 = !DIEnumerator(name: "FCURVE_PROTECTED", value: 8, isUnsigned: true)
!85 = !DIEnumerator(name: "FCURVE_MUTED", value: 16, isUnsigned: true)
!86 = !DIEnumerator(name: "FCURVE_AUTO_HANDLES", value: 32, isUnsigned: true)
!87 = !DIEnumerator(name: "FCURVE_DISABLED", value: 1024, isUnsigned: true)
!88 = !DIEnumerator(name: "FCURVE_INT_VALUES", value: 2048, isUnsigned: true)
!89 = !DIEnumerator(name: "FCURVE_DISCRETE_VALUES", value: 4096, isUnsigned: true)
!90 = !DIEnumerator(name: "FCURVE_TAGGED", value: 32768, isUnsigned: true)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNlaEvalStrip_StripMode", file: !92, line: 52, baseType: !43, size: 32, elements: !93)
!92 = !DIFile(filename: "blender/source/blender/blenkernel/nla_private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!93 = !{!94, !95, !96, !97, !98}
!94 = !DIEnumerator(name: "NES_TIME_BEFORE", value: -1)
!95 = !DIEnumerator(name: "NES_TIME_WITHIN", value: 0)
!96 = !DIEnumerator(name: "NES_TIME_AFTER", value: 1)
!97 = !DIEnumerator(name: "NES_TIME_TRANSITION_START", value: 2)
!98 = !DIEnumerator(name: "NES_TIME_TRANSITION_END", value: 3)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNlaStrip_Extrapolate_Mode", file: !17, line: 605, baseType: !5, size: 32, elements: !100)
!100 = !{!101, !102, !103}
!101 = !DIEnumerator(name: "NLASTRIP_EXTEND_HOLD", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "NLASTRIP_EXTEND_HOLD_FORWARD", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "NLASTRIP_EXTEND_NOTHING", value: 2, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNlaStrip_Flag", file: !17, line: 615, baseType: !43, size: 32, elements: !105)
!105 = !{!106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118}
!106 = !DIEnumerator(name: "NLASTRIP_FLAG_ACTIVE", value: 1)
!107 = !DIEnumerator(name: "NLASTRIP_FLAG_SELECT", value: 2)
!108 = !DIEnumerator(name: "NLASTRIP_FLAG_TWEAKUSER", value: 16)
!109 = !DIEnumerator(name: "NLASTRIP_FLAG_USR_INFLUENCE", value: 32)
!110 = !DIEnumerator(name: "NLASTRIP_FLAG_USR_TIME", value: 64)
!111 = !DIEnumerator(name: "NLASTRIP_FLAG_USR_TIME_CYCLIC", value: 128)
!112 = !DIEnumerator(name: "NLASTRIP_FLAG_SYNC_LENGTH", value: 512)
!113 = !DIEnumerator(name: "NLASTRIP_FLAG_AUTO_BLENDS", value: 1024)
!114 = !DIEnumerator(name: "NLASTRIP_FLAG_REVERSE", value: 2048)
!115 = !DIEnumerator(name: "NLASTRIP_FLAG_MUTED", value: 4096)
!116 = !DIEnumerator(name: "NLASTRIP_FLAG_MIRROR", value: 8192)
!117 = !DIEnumerator(name: "NLASTRIP_FLAG_TEMP_META", value: 1073741824)
!118 = !DIEnumerator(name: "NLASTRIP_FLAG_EDIT_TOUCHED", value: -2147483648)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimData_Recalc", file: !17, line: 899, baseType: !5, size: 32, elements: !120)
!120 = !{!121, !122, !123}
!121 = !DIEnumerator(name: "ADT_RECALC_DRIVERS", value: 1, isUnsigned: true)
!122 = !DIEnumerator(name: "ADT_RECALC_ANIM", value: 2, isUnsigned: true)
!123 = !DIEnumerator(name: "ADT_RECALC_ALL", value: 3, isUnsigned: true)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNlaTime_ConvertModes", file: !125, line: 117, baseType: !5, size: 32, elements: !126)
!125 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_nla.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!126 = !{!127, !128, !129}
!127 = !DIEnumerator(name: "NLATIME_CONVERT_EVAL", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "NLATIME_CONVERT_UNMAP", value: 1, isUnsigned: true)
!129 = !DIEnumerator(name: "NLATIME_CONVERT_MAP", value: 2, isUnsigned: true)
!130 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNlaStrip_Blend_Mode", file: !17, line: 597, baseType: !5, size: 32, elements: !131)
!131 = !{!132, !133, !134, !135}
!132 = !DIEnumerator(name: "NLASTRIP_MODE_REPLACE", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "NLASTRIP_MODE_ADD", value: 1, isUnsigned: true)
!134 = !DIEnumerator(name: "NLASTRIP_MODE_SUBTRACT", value: 2, isUnsigned: true)
!135 = !DIEnumerator(name: "NLASTRIP_MODE_MULTIPLY", value: 3, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNlaTrack_Flag", file: !17, line: 685, baseType: !5, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143}
!138 = !DIEnumerator(name: "NLATRACK_ACTIVE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "NLATRACK_SELECTED", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "NLATRACK_MUTED", value: 4, isUnsigned: true)
!141 = !DIEnumerator(name: "NLATRACK_SOLO", value: 8, isUnsigned: true)
!142 = !DIEnumerator(name: "NLATRACK_PROTECTED", value: 16, isUnsigned: true)
!143 = !DIEnumerator(name: "NLATRACK_DISABLED", value: 1024, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eDriver_Flags", file: !17, line: 403, baseType: !5, size: 32, elements: !145)
!145 = !{!146, !147, !148, !149, !150}
!146 = !DIEnumerator(name: "DRIVER_FLAG_INVALID", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "DRIVER_FLAG_RECALC", value: 2, isUnsigned: true)
!148 = !DIEnumerator(name: "DRIVER_FLAG_RECOMPILE", value: 8, isUnsigned: true)
!149 = !DIEnumerator(name: "DRIVER_FLAG_RENAMEVAR", value: 16, isUnsigned: true)
!150 = !DIEnumerator(name: "DRIVER_FLAG_SHOWDEBUG", value: 32, isUnsigned: true)
!151 = !{!152, !153, !155, !157, !176, !299, !301, !2238, !2319, !2321, !2323, !43, !2325, !275}
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!156 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "IdAdtTemplate", file: !17, line: 914, baseType: !159)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IdAdtTemplate", file: !17, line: 911, size: 1024, elements: !160)
!160 = !{!161, !229}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !159, file: !17, line: 912, baseType: !162, size: 960)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !163, line: 130, baseType: !164)
!163 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !163, line: 117, size: 960, elements: !165)
!165 = !{!166, !167, !168, !170, !189, !193, !194, !195, !196, !197}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !164, file: !163, line: 118, baseType: !152, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !164, file: !163, line: 118, baseType: !152, size: 64, offset: 64)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !164, file: !163, line: 119, baseType: !169, size: 64, offset: 128)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !164, file: !163, line: 120, baseType: !171, size: 64, offset: 192)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !163, line: 136, size: 17600, elements: !173)
!173 = !{!174, !175, !177, !180, !184, !185, !186}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !172, file: !163, line: 137, baseType: !162, size: 960)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !172, file: !163, line: 138, baseType: !176, size: 64, offset: 960)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !172, file: !163, line: 139, baseType: !178, size: 64, offset: 1024)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!179 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !163, line: 43, flags: DIFlagFwdDecl)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !172, file: !163, line: 140, baseType: !181, size: 8192, offset: 1088)
!181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 8192, elements: !182)
!182 = !{!183}
!183 = !DISubrange(count: 1024)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !172, file: !163, line: 141, baseType: !181, size: 8192, offset: 9280)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !172, file: !163, line: 148, baseType: !171, size: 64, offset: 17472)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !172, file: !163, line: 150, baseType: !187, size: 64, offset: 17536)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!188 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !163, line: 45, flags: DIFlagFwdDecl)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !164, file: !163, line: 121, baseType: !190, size: 528, offset: 256)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 528, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 66)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !164, file: !163, line: 126, baseType: !156, size: 16, offset: 784)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !164, file: !163, line: 127, baseType: !43, size: 32, offset: 800)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !164, file: !163, line: 128, baseType: !43, size: 32, offset: 832)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !164, file: !163, line: 128, baseType: !43, size: 32, offset: 864)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !164, file: !163, line: 129, baseType: !198, size: 64, offset: 896)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !163, line: 75, baseType: !200)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !163, line: 62, size: 1024, elements: !201)
!201 = !{!202, !204, !205, !206, !207, !208, !212, !213, !227, !228}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !200, file: !163, line: 63, baseType: !203, size: 64)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !200, file: !163, line: 63, baseType: !203, size: 64, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !200, file: !163, line: 64, baseType: !154, size: 8, offset: 128)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !200, file: !163, line: 64, baseType: !154, size: 8, offset: 136)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !200, file: !163, line: 65, baseType: !156, size: 16, offset: 144)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !200, file: !163, line: 66, baseType: !209, size: 512, offset: 160)
!209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 512, elements: !210)
!210 = !{!211}
!211 = !DISubrange(count: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !200, file: !163, line: 67, baseType: !43, size: 32, offset: 672)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !200, file: !163, line: 69, baseType: !214, size: 256, offset: 704)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !163, line: 60, baseType: !215)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !163, line: 48, size: 256, elements: !216)
!216 = !{!217, !218, !225, !226}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !215, file: !163, line: 49, baseType: !152, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !215, file: !163, line: 58, baseType: !219, size: 128, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !220, line: 71, baseType: !221)
!220 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !220, line: 69, size: 128, elements: !222)
!222 = !{!223, !224}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !221, file: !220, line: 70, baseType: !152, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !221, file: !220, line: 70, baseType: !152, size: 64, offset: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !215, file: !163, line: 59, baseType: !43, size: 32, offset: 192)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !215, file: !163, line: 59, baseType: !43, size: 32, offset: 224)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !200, file: !163, line: 70, baseType: !43, size: 32, offset: 960)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !200, file: !163, line: 74, baseType: !43, size: 32, offset: 992)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !159, file: !17, line: 913, baseType: !230, size: 64, offset: 960)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimData", file: !17, line: 869, baseType: !232)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !17, line: 838, size: 768, elements: !233)
!233 = !{!234, !248, !249, !259, !260, !292, !293, !294, !295, !296, !297, !298}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !232, file: !17, line: 840, baseType: !235, size: 64)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !42, line: 499, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !42, line: 486, size: 1600, elements: !238)
!238 = !{!239, !240, !241, !242, !243, !244, !245, !246, !247}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !237, file: !42, line: 487, baseType: !162, size: 960)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !237, file: !42, line: 489, baseType: !219, size: 128, offset: 960)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !237, file: !42, line: 490, baseType: !219, size: 128, offset: 1088)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !237, file: !42, line: 491, baseType: !219, size: 128, offset: 1216)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !237, file: !42, line: 492, baseType: !219, size: 128, offset: 1344)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !237, file: !42, line: 494, baseType: !43, size: 32, offset: 1472)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !237, file: !42, line: 495, baseType: !43, size: 32, offset: 1504)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !237, file: !42, line: 497, baseType: !43, size: 32, offset: 1536)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !237, file: !42, line: 498, baseType: !43, size: 32, offset: 1568)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !232, file: !17, line: 844, baseType: !235, size: 64, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !232, file: !17, line: 848, baseType: !250, size: 64, offset: 128)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !17, line: 549, baseType: !252)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !17, line: 544, size: 320, elements: !253)
!253 = !{!254, !256, !257, !258}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !252, file: !17, line: 545, baseType: !255, size: 64)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !252, file: !17, line: 545, baseType: !255, size: 64, offset: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !252, file: !17, line: 547, baseType: !235, size: 64, offset: 128)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !252, file: !17, line: 548, baseType: !219, size: 128, offset: 192)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !232, file: !17, line: 851, baseType: !219, size: 128, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !232, file: !17, line: 853, baseType: !261, size: 64, offset: 320)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !17, line: 594, baseType: !263)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !17, line: 561, size: 1664, elements: !264)
!264 = !{!265, !267, !268, !269, !270, !271, !272, !273, !274, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !263, file: !17, line: 562, baseType: !266, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !263, file: !17, line: 562, baseType: !266, size: 64, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !263, file: !17, line: 564, baseType: !219, size: 128, offset: 128)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !263, file: !17, line: 565, baseType: !235, size: 64, offset: 256)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !263, file: !17, line: 566, baseType: !250, size: 64, offset: 320)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !263, file: !17, line: 568, baseType: !219, size: 128, offset: 384)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !263, file: !17, line: 569, baseType: !219, size: 128, offset: 512)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !263, file: !17, line: 571, baseType: !209, size: 512, offset: 640)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !263, file: !17, line: 573, baseType: !275, size: 32, offset: 1152)
!275 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !263, file: !17, line: 574, baseType: !275, size: 32, offset: 1184)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !263, file: !17, line: 576, baseType: !275, size: 32, offset: 1216)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !263, file: !17, line: 576, baseType: !275, size: 32, offset: 1248)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !263, file: !17, line: 577, baseType: !275, size: 32, offset: 1280)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !263, file: !17, line: 577, baseType: !275, size: 32, offset: 1312)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !263, file: !17, line: 579, baseType: !275, size: 32, offset: 1344)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !263, file: !17, line: 580, baseType: !275, size: 32, offset: 1376)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !263, file: !17, line: 582, baseType: !275, size: 32, offset: 1408)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !263, file: !17, line: 582, baseType: !275, size: 32, offset: 1440)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !263, file: !17, line: 583, baseType: !156, size: 16, offset: 1472)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !263, file: !17, line: 585, baseType: !156, size: 16, offset: 1488)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !263, file: !17, line: 586, baseType: !156, size: 16, offset: 1504)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !263, file: !17, line: 588, baseType: !156, size: 16, offset: 1520)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !263, file: !17, line: 590, baseType: !152, size: 64, offset: 1536)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !263, file: !17, line: 592, baseType: !43, size: 32, offset: 1600)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !263, file: !17, line: 593, baseType: !43, size: 32, offset: 1632)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !232, file: !17, line: 858, baseType: !219, size: 128, offset: 384)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !232, file: !17, line: 859, baseType: !219, size: 128, offset: 512)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !232, file: !17, line: 862, baseType: !43, size: 32, offset: 640)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !232, file: !17, line: 863, baseType: !43, size: 32, offset: 672)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !232, file: !17, line: 866, baseType: !156, size: 16, offset: 704)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !232, file: !17, line: 867, baseType: !156, size: 16, offset: 720)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !232, file: !17, line: 868, baseType: !275, size: 32, offset: 736)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !303, line: 261, baseType: !304)
!303 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !303, line: 202, size: 3328, elements: !305)
!305 = !{!306, !307, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !2148, !2149, !2150, !2151, !2152, !2178, !2179, !2208, !2228, !2236, !2237}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !304, file: !303, line: 203, baseType: !162, size: 960)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !304, file: !303, line: 204, baseType: !308, size: 64, offset: 960)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !304, file: !303, line: 206, baseType: !275, size: 32, offset: 1024)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !304, file: !303, line: 206, baseType: !275, size: 32, offset: 1056)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !304, file: !303, line: 207, baseType: !275, size: 32, offset: 1088)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !304, file: !303, line: 207, baseType: !275, size: 32, offset: 1120)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !304, file: !303, line: 207, baseType: !275, size: 32, offset: 1152)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !304, file: !303, line: 207, baseType: !275, size: 32, offset: 1184)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !304, file: !303, line: 207, baseType: !275, size: 32, offset: 1216)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !304, file: !303, line: 207, baseType: !275, size: 32, offset: 1248)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !304, file: !303, line: 208, baseType: !275, size: 32, offset: 1280)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !304, file: !303, line: 208, baseType: !275, size: 32, offset: 1312)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !304, file: !303, line: 211, baseType: !275, size: 32, offset: 1344)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !304, file: !303, line: 211, baseType: !275, size: 32, offset: 1376)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !304, file: !303, line: 211, baseType: !275, size: 32, offset: 1408)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !304, file: !303, line: 211, baseType: !275, size: 32, offset: 1440)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !304, file: !303, line: 211, baseType: !275, size: 32, offset: 1472)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !304, file: !303, line: 214, baseType: !275, size: 32, offset: 1504)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !304, file: !303, line: 214, baseType: !275, size: 32, offset: 1536)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !304, file: !303, line: 217, baseType: !275, size: 32, offset: 1568)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !304, file: !303, line: 218, baseType: !275, size: 32, offset: 1600)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !304, file: !303, line: 219, baseType: !275, size: 32, offset: 1632)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !304, file: !303, line: 220, baseType: !275, size: 32, offset: 1664)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !304, file: !303, line: 221, baseType: !275, size: 32, offset: 1696)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !304, file: !303, line: 222, baseType: !156, size: 16, offset: 1728)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !304, file: !303, line: 222, baseType: !156, size: 16, offset: 1744)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !304, file: !303, line: 224, baseType: !156, size: 16, offset: 1760)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !304, file: !303, line: 224, baseType: !156, size: 16, offset: 1776)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !304, file: !303, line: 227, baseType: !156, size: 16, offset: 1792)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !304, file: !303, line: 227, baseType: !156, size: 16, offset: 1808)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !304, file: !303, line: 229, baseType: !156, size: 16, offset: 1824)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !304, file: !303, line: 229, baseType: !156, size: 16, offset: 1840)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !304, file: !303, line: 230, baseType: !156, size: 16, offset: 1856)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !304, file: !303, line: 230, baseType: !156, size: 16, offset: 1872)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !304, file: !303, line: 232, baseType: !275, size: 32, offset: 1888)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !304, file: !303, line: 232, baseType: !275, size: 32, offset: 1920)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !304, file: !303, line: 232, baseType: !275, size: 32, offset: 1952)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !304, file: !303, line: 232, baseType: !275, size: 32, offset: 1984)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !304, file: !303, line: 233, baseType: !43, size: 32, offset: 2016)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !304, file: !303, line: 234, baseType: !43, size: 32, offset: 2048)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !304, file: !303, line: 235, baseType: !156, size: 16, offset: 2080)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !304, file: !303, line: 235, baseType: !156, size: 16, offset: 2096)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !304, file: !303, line: 236, baseType: !156, size: 16, offset: 2112)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !304, file: !303, line: 239, baseType: !156, size: 16, offset: 2128)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !304, file: !303, line: 240, baseType: !43, size: 32, offset: 2144)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !304, file: !303, line: 241, baseType: !43, size: 32, offset: 2176)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !304, file: !303, line: 241, baseType: !43, size: 32, offset: 2208)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !304, file: !303, line: 241, baseType: !43, size: 32, offset: 2240)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !304, file: !303, line: 243, baseType: !275, size: 32, offset: 2272)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !304, file: !303, line: 243, baseType: !275, size: 32, offset: 2304)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !304, file: !303, line: 244, baseType: !275, size: 32, offset: 2336)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !304, file: !303, line: 246, baseType: !359, size: 320, offset: 2368)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !360, line: 50, size: 320, elements: !361)
!360 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!361 = !{!362, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !359, file: !360, line: 51, baseType: !363, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !365, line: 1216, size: 39680, elements: !366)
!365 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!366 = !{!367, !368, !369, !1052, !1134, !1135, !1136, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1507, !1722, !1725, !2011, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2033, !2034, !2035, !2036, !2037, !2045, !2111, !2118, !2119, !2126, !2127, !2128, !2129, !2130, !2131, !2132}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !364, file: !365, line: 1217, baseType: !162, size: 960)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !364, file: !365, line: 1218, baseType: !308, size: 64, offset: 960)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !364, file: !365, line: 1220, baseType: !370, size: 64, offset: 1024)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !372, line: 115, size: 11392, elements: !373)
!372 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!373 = !{!374, !375, !376, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !393, !404, !406, !407, !450, !451, !454, !455, !471, !472, !473, !474, !475, !476, !477, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !988, !989, !990, !991, !992, !993, !994, !995, !996, !999, !1002, !1003, !1004, !1005, !1006, !1007, !1010, !1013, !1016, !1017, !1023, !1024, !1025, !1026, !1027, !1028, !1030, !1033, !1036, !1037, !1040, !1041}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !371, file: !372, line: 116, baseType: !162, size: 960)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !371, file: !372, line: 117, baseType: !308, size: 64, offset: 960)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !371, file: !372, line: 119, baseType: !377, size: 64, offset: 1024)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !372, line: 57, flags: DIFlagFwdDecl)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !371, file: !372, line: 121, baseType: !156, size: 16, offset: 1088)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !371, file: !372, line: 121, baseType: !156, size: 16, offset: 1104)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !371, file: !372, line: 122, baseType: !43, size: 32, offset: 1120)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !371, file: !372, line: 122, baseType: !43, size: 32, offset: 1152)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !371, file: !372, line: 122, baseType: !43, size: 32, offset: 1184)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !371, file: !372, line: 123, baseType: !209, size: 512, offset: 1216)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !371, file: !372, line: 124, baseType: !370, size: 64, offset: 1728)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !371, file: !372, line: 124, baseType: !370, size: 64, offset: 1792)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !371, file: !372, line: 127, baseType: !370, size: 64, offset: 1856)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !371, file: !372, line: 127, baseType: !370, size: 64, offset: 1920)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !371, file: !372, line: 127, baseType: !370, size: 64, offset: 1984)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !371, file: !372, line: 128, baseType: !391, size: 64, offset: 2048)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !303, line: 46, flags: DIFlagFwdDecl)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !371, file: !372, line: 130, baseType: !394, size: 64, offset: 2112)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !372, line: 97, size: 832, elements: !396)
!396 = !{!397, !402, !403}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !395, file: !372, line: 98, baseType: !398, size: 768)
!398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 768, elements: !399)
!399 = !{!400, !401}
!400 = !DISubrange(count: 8)
!401 = !DISubrange(count: 3)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !395, file: !372, line: 99, baseType: !43, size: 32, offset: 768)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !395, file: !372, line: 99, baseType: !43, size: 32, offset: 800)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !371, file: !372, line: 131, baseType: !405, size: 64, offset: 2176)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !371, file: !372, line: 132, baseType: !405, size: 64, offset: 2240)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !371, file: !372, line: 133, baseType: !408, size: 64, offset: 2304)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !42, line: 334, size: 1728, elements: !410)
!410 = !{!411, !412, !415, !416, !417, !418, !419, !420, !423, !424, !425, !426, !427, !428, !429, !449}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !409, file: !42, line: 335, baseType: !219, size: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !409, file: !42, line: 336, baseType: !413, size: 64, offset: 128)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !42, line: 47, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !409, file: !42, line: 338, baseType: !156, size: 16, offset: 192)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !409, file: !42, line: 338, baseType: !156, size: 16, offset: 208)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !409, file: !42, line: 339, baseType: !5, size: 32, offset: 224)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !409, file: !42, line: 340, baseType: !43, size: 32, offset: 256)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !409, file: !42, line: 342, baseType: !275, size: 32, offset: 288)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !409, file: !42, line: 343, baseType: !421, size: 96, offset: 320)
!421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 96, elements: !422)
!422 = !{!401}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !409, file: !42, line: 344, baseType: !421, size: 96, offset: 416)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !409, file: !42, line: 347, baseType: !219, size: 128, offset: 512)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !409, file: !42, line: 349, baseType: !43, size: 32, offset: 640)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !409, file: !42, line: 350, baseType: !43, size: 32, offset: 672)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !409, file: !42, line: 351, baseType: !152, size: 64, offset: 704)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !409, file: !42, line: 352, baseType: !152, size: 64, offset: 768)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !409, file: !42, line: 354, baseType: !430, size: 384, offset: 832)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !42, line: 116, baseType: !431)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !42, line: 94, size: 384, elements: !432)
!432 = !{!433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !431, file: !42, line: 96, baseType: !43, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !431, file: !42, line: 96, baseType: !43, size: 32, offset: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !431, file: !42, line: 97, baseType: !43, size: 32, offset: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !431, file: !42, line: 97, baseType: !43, size: 32, offset: 96)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !431, file: !42, line: 99, baseType: !156, size: 16, offset: 128)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !431, file: !42, line: 100, baseType: !156, size: 16, offset: 144)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !431, file: !42, line: 102, baseType: !156, size: 16, offset: 160)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !431, file: !42, line: 105, baseType: !156, size: 16, offset: 176)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !431, file: !42, line: 108, baseType: !156, size: 16, offset: 192)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !431, file: !42, line: 109, baseType: !156, size: 16, offset: 208)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !431, file: !42, line: 111, baseType: !156, size: 16, offset: 224)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !431, file: !42, line: 112, baseType: !156, size: 16, offset: 240)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !431, file: !42, line: 114, baseType: !43, size: 32, offset: 256)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !431, file: !42, line: 114, baseType: !43, size: 32, offset: 288)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !431, file: !42, line: 115, baseType: !43, size: 32, offset: 320)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !431, file: !42, line: 115, baseType: !43, size: 32, offset: 352)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !409, file: !42, line: 355, baseType: !209, size: 512, offset: 1216)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !371, file: !372, line: 134, baseType: !152, size: 64, offset: 2368)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !371, file: !372, line: 136, baseType: !452, size: 64, offset: 2432)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !372, line: 58, flags: DIFlagFwdDecl)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !371, file: !372, line: 138, baseType: !430, size: 384, offset: 2496)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !371, file: !372, line: 139, baseType: !456, size: 64, offset: 2880)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !42, line: 80, baseType: !458)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !42, line: 72, size: 192, elements: !459)
!459 = !{!460, !467, !468, !469, !470}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !458, file: !42, line: 73, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !42, line: 59, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !42, line: 56, size: 128, elements: !464)
!464 = !{!465, !466}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !463, file: !42, line: 57, baseType: !421, size: 96)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !463, file: !42, line: 58, baseType: !43, size: 32, offset: 96)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !458, file: !42, line: 74, baseType: !43, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !458, file: !42, line: 76, baseType: !43, size: 32, offset: 96)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !458, file: !42, line: 77, baseType: !43, size: 32, offset: 128)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !458, file: !42, line: 79, baseType: !43, size: 32, offset: 160)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !371, file: !372, line: 141, baseType: !219, size: 128, offset: 2944)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !371, file: !372, line: 142, baseType: !219, size: 128, offset: 3072)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !371, file: !372, line: 143, baseType: !219, size: 128, offset: 3200)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !371, file: !372, line: 144, baseType: !219, size: 128, offset: 3328)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !371, file: !372, line: 146, baseType: !43, size: 32, offset: 3456)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !371, file: !372, line: 147, baseType: !43, size: 32, offset: 3488)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !371, file: !372, line: 150, baseType: !478, size: 64, offset: 3520)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !481, line: 93, size: 7552, elements: !482)
!481 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!482 = !{!483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !531, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !600, !601, !602, !603, !604, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !715, !791, !792, !795, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !841, !910}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !480, file: !481, line: 94, baseType: !162, size: 960)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !480, file: !481, line: 95, baseType: !308, size: 64, offset: 960)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !480, file: !481, line: 97, baseType: !156, size: 16, offset: 1024)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !480, file: !481, line: 97, baseType: !156, size: 16, offset: 1040)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !480, file: !481, line: 99, baseType: !275, size: 32, offset: 1056)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !480, file: !481, line: 99, baseType: !275, size: 32, offset: 1088)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !480, file: !481, line: 99, baseType: !275, size: 32, offset: 1120)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !480, file: !481, line: 100, baseType: !275, size: 32, offset: 1152)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !480, file: !481, line: 100, baseType: !275, size: 32, offset: 1184)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !480, file: !481, line: 100, baseType: !275, size: 32, offset: 1216)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !480, file: !481, line: 101, baseType: !275, size: 32, offset: 1248)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !480, file: !481, line: 101, baseType: !275, size: 32, offset: 1280)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !480, file: !481, line: 101, baseType: !275, size: 32, offset: 1312)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !480, file: !481, line: 102, baseType: !275, size: 32, offset: 1344)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !480, file: !481, line: 102, baseType: !275, size: 32, offset: 1376)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !480, file: !481, line: 102, baseType: !275, size: 32, offset: 1408)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !480, file: !481, line: 103, baseType: !275, size: 32, offset: 1440)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !480, file: !481, line: 103, baseType: !275, size: 32, offset: 1472)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !480, file: !481, line: 103, baseType: !275, size: 32, offset: 1504)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !480, file: !481, line: 103, baseType: !275, size: 32, offset: 1536)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !480, file: !481, line: 103, baseType: !275, size: 32, offset: 1568)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !480, file: !481, line: 104, baseType: !275, size: 32, offset: 1600)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !480, file: !481, line: 104, baseType: !275, size: 32, offset: 1632)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !480, file: !481, line: 104, baseType: !275, size: 32, offset: 1664)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !480, file: !481, line: 104, baseType: !275, size: 32, offset: 1696)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !480, file: !481, line: 104, baseType: !275, size: 32, offset: 1728)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !480, file: !481, line: 105, baseType: !275, size: 32, offset: 1760)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !480, file: !481, line: 108, baseType: !511, size: 704, offset: 1792)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !481, line: 53, size: 704, elements: !512)
!512 = !{!513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !511, file: !481, line: 54, baseType: !275, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !511, file: !481, line: 55, baseType: !275, size: 32, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !511, file: !481, line: 56, baseType: !275, size: 32, offset: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !511, file: !481, line: 57, baseType: !275, size: 32, offset: 96)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !511, file: !481, line: 59, baseType: !421, size: 96, offset: 128)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !511, file: !481, line: 60, baseType: !421, size: 96, offset: 224)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !511, file: !481, line: 61, baseType: !421, size: 96, offset: 320)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !511, file: !481, line: 63, baseType: !275, size: 32, offset: 416)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !511, file: !481, line: 64, baseType: !275, size: 32, offset: 448)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !511, file: !481, line: 65, baseType: !275, size: 32, offset: 480)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !511, file: !481, line: 67, baseType: !156, size: 16, offset: 512)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !511, file: !481, line: 68, baseType: !156, size: 16, offset: 528)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !511, file: !481, line: 69, baseType: !156, size: 16, offset: 544)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !511, file: !481, line: 70, baseType: !156, size: 16, offset: 560)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !511, file: !481, line: 72, baseType: !275, size: 32, offset: 576)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !511, file: !481, line: 73, baseType: !275, size: 32, offset: 608)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !511, file: !481, line: 74, baseType: !275, size: 32, offset: 640)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !511, file: !481, line: 75, baseType: !275, size: 32, offset: 672)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !480, file: !481, line: 109, baseType: !532, size: 128, offset: 2496)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !481, line: 79, size: 128, elements: !533)
!533 = !{!534, !535, !536, !537}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !532, file: !481, line: 80, baseType: !43, size: 32)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !532, file: !481, line: 81, baseType: !43, size: 32, offset: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !532, file: !481, line: 82, baseType: !43, size: 32, offset: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !532, file: !481, line: 83, baseType: !43, size: 32, offset: 96)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !480, file: !481, line: 111, baseType: !275, size: 32, offset: 2624)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !480, file: !481, line: 111, baseType: !275, size: 32, offset: 2656)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !480, file: !481, line: 112, baseType: !275, size: 32, offset: 2688)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !480, file: !481, line: 112, baseType: !275, size: 32, offset: 2720)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !480, file: !481, line: 113, baseType: !275, size: 32, offset: 2752)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !480, file: !481, line: 114, baseType: !275, size: 32, offset: 2784)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !480, file: !481, line: 114, baseType: !275, size: 32, offset: 2816)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !480, file: !481, line: 115, baseType: !156, size: 16, offset: 2848)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !480, file: !481, line: 115, baseType: !156, size: 16, offset: 2864)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !480, file: !481, line: 116, baseType: !156, size: 16, offset: 2880)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !480, file: !481, line: 117, baseType: !154, size: 8, offset: 2896)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !480, file: !481, line: 117, baseType: !154, size: 8, offset: 2904)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !480, file: !481, line: 119, baseType: !275, size: 32, offset: 2912)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !480, file: !481, line: 119, baseType: !275, size: 32, offset: 2944)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !480, file: !481, line: 120, baseType: !156, size: 16, offset: 2976)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !480, file: !481, line: 120, baseType: !156, size: 16, offset: 2992)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !480, file: !481, line: 121, baseType: !275, size: 32, offset: 3008)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !480, file: !481, line: 121, baseType: !275, size: 32, offset: 3040)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !480, file: !481, line: 122, baseType: !275, size: 32, offset: 3072)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !480, file: !481, line: 123, baseType: !275, size: 32, offset: 3104)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !480, file: !481, line: 124, baseType: !156, size: 16, offset: 3136)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !480, file: !481, line: 125, baseType: !156, size: 16, offset: 3152)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !480, file: !481, line: 127, baseType: !43, size: 32, offset: 3168)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !480, file: !481, line: 127, baseType: !43, size: 32, offset: 3200)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !480, file: !481, line: 128, baseType: !43, size: 32, offset: 3232)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !480, file: !481, line: 128, baseType: !43, size: 32, offset: 3264)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !480, file: !481, line: 129, baseType: !156, size: 16, offset: 3296)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !480, file: !481, line: 129, baseType: !156, size: 16, offset: 3312)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !480, file: !481, line: 129, baseType: !156, size: 16, offset: 3328)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !480, file: !481, line: 129, baseType: !156, size: 16, offset: 3344)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !480, file: !481, line: 130, baseType: !275, size: 32, offset: 3360)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !480, file: !481, line: 130, baseType: !275, size: 32, offset: 3392)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !480, file: !481, line: 130, baseType: !275, size: 32, offset: 3424)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !480, file: !481, line: 130, baseType: !275, size: 32, offset: 3456)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !480, file: !481, line: 131, baseType: !275, size: 32, offset: 3488)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !480, file: !481, line: 131, baseType: !275, size: 32, offset: 3520)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !480, file: !481, line: 131, baseType: !275, size: 32, offset: 3552)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !480, file: !481, line: 131, baseType: !275, size: 32, offset: 3584)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !480, file: !481, line: 132, baseType: !275, size: 32, offset: 3616)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !480, file: !481, line: 132, baseType: !275, size: 32, offset: 3648)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !480, file: !481, line: 133, baseType: !209, size: 512, offset: 3680)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !480, file: !481, line: 135, baseType: !275, size: 32, offset: 4192)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !480, file: !481, line: 136, baseType: !275, size: 32, offset: 4224)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !480, file: !481, line: 137, baseType: !275, size: 32, offset: 4256)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !480, file: !481, line: 138, baseType: !43, size: 32, offset: 4288)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !480, file: !481, line: 141, baseType: !154, size: 8, offset: 4320)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !480, file: !481, line: 141, baseType: !154, size: 8, offset: 4328)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !480, file: !481, line: 141, baseType: !154, size: 8, offset: 4336)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !480, file: !481, line: 141, baseType: !154, size: 8, offset: 4344)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !480, file: !481, line: 142, baseType: !156, size: 16, offset: 4352)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !480, file: !481, line: 142, baseType: !156, size: 16, offset: 4368)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !480, file: !481, line: 142, baseType: !156, size: 16, offset: 4384)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !480, file: !481, line: 145, baseType: !154, size: 8, offset: 4400)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !480, file: !481, line: 145, baseType: !154, size: 8, offset: 4408)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !480, file: !481, line: 148, baseType: !156, size: 16, offset: 4416)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !480, file: !481, line: 148, baseType: !156, size: 16, offset: 4432)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !480, file: !481, line: 149, baseType: !275, size: 32, offset: 4448)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !480, file: !481, line: 149, baseType: !275, size: 32, offset: 4480)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !480, file: !481, line: 152, baseType: !597, size: 128, offset: 4512)
!597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 128, elements: !598)
!598 = !{!599}
!599 = !DISubrange(count: 4)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !480, file: !481, line: 153, baseType: !275, size: 32, offset: 4640)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !480, file: !481, line: 154, baseType: !275, size: 32, offset: 4672)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !480, file: !481, line: 157, baseType: !156, size: 16, offset: 4704)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !480, file: !481, line: 157, baseType: !156, size: 16, offset: 4720)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !480, file: !481, line: 160, baseType: !605, size: 64, offset: 4736)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !303, line: 113, size: 6208, elements: !607)
!607 = !{!608, !609, !610, !611, !612, !613, !617}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !606, file: !303, line: 114, baseType: !156, size: 16)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !606, file: !303, line: 114, baseType: !156, size: 16, offset: 16)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !606, file: !303, line: 115, baseType: !154, size: 8, offset: 32)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !606, file: !303, line: 115, baseType: !154, size: 8, offset: 40)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !606, file: !303, line: 116, baseType: !154, size: 8, offset: 48)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !606, file: !303, line: 117, baseType: !614, size: 8, offset: 56)
!614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 8, elements: !615)
!615 = !{!616}
!616 = !DISubrange(count: 1)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !606, file: !303, line: 119, baseType: !618, size: 6144, offset: 64)
!618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 6144, elements: !628)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !303, line: 109, baseType: !620)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !303, line: 106, size: 192, elements: !621)
!621 = !{!622, !623, !624, !625, !626, !627}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !620, file: !303, line: 107, baseType: !275, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !620, file: !303, line: 107, baseType: !275, size: 32, offset: 32)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !620, file: !303, line: 107, baseType: !275, size: 32, offset: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !620, file: !303, line: 107, baseType: !275, size: 32, offset: 96)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !620, file: !303, line: 107, baseType: !275, size: 32, offset: 128)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !620, file: !303, line: 108, baseType: !43, size: 32, offset: 160)
!628 = !{!629}
!629 = !DISubrange(count: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !480, file: !481, line: 161, baseType: !605, size: 64, offset: 4800)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !480, file: !481, line: 162, baseType: !154, size: 8, offset: 4864)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !480, file: !481, line: 162, baseType: !154, size: 8, offset: 4872)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !480, file: !481, line: 163, baseType: !154, size: 8, offset: 4880)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !480, file: !481, line: 163, baseType: !154, size: 8, offset: 4888)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !480, file: !481, line: 164, baseType: !156, size: 16, offset: 4896)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !480, file: !481, line: 164, baseType: !156, size: 16, offset: 4912)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !480, file: !481, line: 165, baseType: !275, size: 32, offset: 4928)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !480, file: !481, line: 165, baseType: !275, size: 32, offset: 4960)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !480, file: !481, line: 167, baseType: !640, size: 1152, offset: 4992)
!640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, size: 1152, elements: !713)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !303, line: 57, size: 2496, elements: !643)
!643 = !{!644, !645, !646, !647, !648, !649, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !642, file: !303, line: 59, baseType: !156, size: 16)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !642, file: !303, line: 59, baseType: !156, size: 16, offset: 16)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !642, file: !303, line: 59, baseType: !156, size: 16, offset: 32)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !642, file: !303, line: 59, baseType: !156, size: 16, offset: 48)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !642, file: !303, line: 60, baseType: !370, size: 64, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !642, file: !303, line: 61, baseType: !650, size: 64, offset: 128)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !642, file: !303, line: 62, baseType: !209, size: 512, offset: 192)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !642, file: !303, line: 64, baseType: !154, size: 8, offset: 704)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !642, file: !303, line: 64, baseType: !154, size: 8, offset: 712)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !642, file: !303, line: 64, baseType: !154, size: 8, offset: 720)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !642, file: !303, line: 64, baseType: !154, size: 8, offset: 728)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !642, file: !303, line: 65, baseType: !421, size: 96, offset: 736)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !642, file: !303, line: 65, baseType: !421, size: 96, offset: 832)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !642, file: !303, line: 65, baseType: !275, size: 32, offset: 928)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !642, file: !303, line: 67, baseType: !156, size: 16, offset: 960)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !642, file: !303, line: 67, baseType: !156, size: 16, offset: 976)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !642, file: !303, line: 67, baseType: !156, size: 16, offset: 992)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !642, file: !303, line: 67, baseType: !156, size: 16, offset: 1008)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !642, file: !303, line: 68, baseType: !156, size: 16, offset: 1024)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !642, file: !303, line: 68, baseType: !156, size: 16, offset: 1040)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !642, file: !303, line: 69, baseType: !154, size: 8, offset: 1056)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !642, file: !303, line: 69, baseType: !667, size: 56, offset: 1064)
!667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 56, elements: !668)
!668 = !{!669}
!669 = !DISubrange(count: 7)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !642, file: !303, line: 70, baseType: !275, size: 32, offset: 1120)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !642, file: !303, line: 70, baseType: !275, size: 32, offset: 1152)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !642, file: !303, line: 70, baseType: !275, size: 32, offset: 1184)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !642, file: !303, line: 70, baseType: !275, size: 32, offset: 1216)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !642, file: !303, line: 71, baseType: !275, size: 32, offset: 1248)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !642, file: !303, line: 71, baseType: !275, size: 32, offset: 1280)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !642, file: !303, line: 74, baseType: !275, size: 32, offset: 1312)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !642, file: !303, line: 74, baseType: !275, size: 32, offset: 1344)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !642, file: !303, line: 77, baseType: !275, size: 32, offset: 1376)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !642, file: !303, line: 77, baseType: !275, size: 32, offset: 1408)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !642, file: !303, line: 77, baseType: !275, size: 32, offset: 1440)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !642, file: !303, line: 78, baseType: !275, size: 32, offset: 1472)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !642, file: !303, line: 78, baseType: !275, size: 32, offset: 1504)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !642, file: !303, line: 78, baseType: !275, size: 32, offset: 1536)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !642, file: !303, line: 79, baseType: !275, size: 32, offset: 1568)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !642, file: !303, line: 79, baseType: !275, size: 32, offset: 1600)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !642, file: !303, line: 79, baseType: !275, size: 32, offset: 1632)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !642, file: !303, line: 79, baseType: !275, size: 32, offset: 1664)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !642, file: !303, line: 80, baseType: !275, size: 32, offset: 1696)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !642, file: !303, line: 80, baseType: !275, size: 32, offset: 1728)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !642, file: !303, line: 80, baseType: !275, size: 32, offset: 1760)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !642, file: !303, line: 81, baseType: !275, size: 32, offset: 1792)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !642, file: !303, line: 81, baseType: !275, size: 32, offset: 1824)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !642, file: !303, line: 81, baseType: !275, size: 32, offset: 1856)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !642, file: !303, line: 82, baseType: !275, size: 32, offset: 1888)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !642, file: !303, line: 82, baseType: !275, size: 32, offset: 1920)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !642, file: !303, line: 82, baseType: !275, size: 32, offset: 1952)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !642, file: !303, line: 85, baseType: !275, size: 32, offset: 1984)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !642, file: !303, line: 85, baseType: !275, size: 32, offset: 2016)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !642, file: !303, line: 85, baseType: !275, size: 32, offset: 2048)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !642, file: !303, line: 85, baseType: !275, size: 32, offset: 2080)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !642, file: !303, line: 86, baseType: !275, size: 32, offset: 2112)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !642, file: !303, line: 86, baseType: !275, size: 32, offset: 2144)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !642, file: !303, line: 86, baseType: !275, size: 32, offset: 2176)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !642, file: !303, line: 86, baseType: !275, size: 32, offset: 2208)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !642, file: !303, line: 87, baseType: !275, size: 32, offset: 2240)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !642, file: !303, line: 87, baseType: !275, size: 32, offset: 2272)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !642, file: !303, line: 87, baseType: !275, size: 32, offset: 2304)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !642, file: !303, line: 87, baseType: !275, size: 32, offset: 2336)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !642, file: !303, line: 90, baseType: !275, size: 32, offset: 2368)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !642, file: !303, line: 93, baseType: !275, size: 32, offset: 2400)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !642, file: !303, line: 93, baseType: !275, size: 32, offset: 2432)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !642, file: !303, line: 93, baseType: !275, size: 32, offset: 2464)
!713 = !{!714}
!714 = !DISubrange(count: 18)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !480, file: !481, line: 168, baseType: !716, size: 64, offset: 6144)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !718, line: 328, size: 3456, elements: !719)
!718 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!719 = !{!720, !721, !722, !725, !726, !729, !730, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !757, !758, !759, !762, !767, !768, !771, !775, !779, !783, !787, !788, !789, !790}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !717, file: !718, line: 329, baseType: !162, size: 960)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !717, file: !718, line: 330, baseType: !308, size: 64, offset: 960)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !717, file: !718, line: 332, baseType: !723, size: 64, offset: 1024)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !718, line: 332, flags: DIFlagFwdDecl)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !717, file: !718, line: 333, baseType: !209, size: 512, offset: 1088)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !717, file: !718, line: 335, baseType: !727, size: 64, offset: 1600)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !718, line: 335, flags: DIFlagFwdDecl)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !717, file: !718, line: 337, baseType: !452, size: 64, offset: 1664)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !717, file: !718, line: 338, baseType: !731, size: 64, offset: 1728)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 64, elements: !732)
!732 = !{!733}
!733 = !DISubrange(count: 2)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !717, file: !718, line: 340, baseType: !219, size: 128, offset: 1792)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !717, file: !718, line: 340, baseType: !219, size: 128, offset: 1920)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !717, file: !718, line: 342, baseType: !43, size: 32, offset: 2048)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !717, file: !718, line: 342, baseType: !43, size: 32, offset: 2080)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !717, file: !718, line: 343, baseType: !43, size: 32, offset: 2112)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !717, file: !718, line: 345, baseType: !43, size: 32, offset: 2144)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !717, file: !718, line: 346, baseType: !43, size: 32, offset: 2176)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !717, file: !718, line: 347, baseType: !156, size: 16, offset: 2208)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !717, file: !718, line: 348, baseType: !156, size: 16, offset: 2224)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !717, file: !718, line: 349, baseType: !43, size: 32, offset: 2240)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !717, file: !718, line: 351, baseType: !43, size: 32, offset: 2272)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !717, file: !718, line: 353, baseType: !156, size: 16, offset: 2304)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !717, file: !718, line: 354, baseType: !156, size: 16, offset: 2320)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !717, file: !718, line: 355, baseType: !43, size: 32, offset: 2336)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !717, file: !718, line: 357, baseType: !749, size: 128, offset: 2368)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !750, line: 95, baseType: !751)
!750 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !750, line: 92, size: 128, elements: !752)
!752 = !{!753, !754, !755, !756}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !751, file: !750, line: 93, baseType: !275, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !751, file: !750, line: 93, baseType: !275, size: 32, offset: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !751, file: !750, line: 94, baseType: !275, size: 32, offset: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !751, file: !750, line: 94, baseType: !275, size: 32, offset: 96)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !717, file: !718, line: 363, baseType: !219, size: 128, offset: 2496)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !717, file: !718, line: 363, baseType: !219, size: 128, offset: 2624)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !717, file: !718, line: 368, baseType: !760, size: 64, offset: 2752)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !718, line: 48, flags: DIFlagFwdDecl)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !717, file: !718, line: 372, baseType: !763, size: 32, offset: 2816)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !718, line: 274, baseType: !764)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !718, line: 271, size: 32, elements: !765)
!765 = !{!766}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !764, file: !718, line: 273, baseType: !5, size: 32)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !717, file: !718, line: 373, baseType: !43, size: 32, offset: 2848)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !717, file: !718, line: 382, baseType: !769, size: 64, offset: 2880)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !718, line: 46, flags: DIFlagFwdDecl)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !717, file: !718, line: 385, baseType: !772, size: 64, offset: 2944)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DISubroutineType(types: !774)
!774 = !{null, !152, !275}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !717, file: !718, line: 386, baseType: !776, size: 64, offset: 3008)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{null, !152, !153}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !717, file: !718, line: 387, baseType: !780, size: 64, offset: 3072)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!43, !152}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !717, file: !718, line: 388, baseType: !784, size: 64, offset: 3136)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DISubroutineType(types: !786)
!786 = !{null, !152}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !717, file: !718, line: 389, baseType: !152, size: 64, offset: 3200)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !717, file: !718, line: 389, baseType: !152, size: 64, offset: 3264)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !717, file: !718, line: 389, baseType: !152, size: 64, offset: 3328)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !717, file: !718, line: 389, baseType: !152, size: 64, offset: 3392)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !480, file: !481, line: 169, baseType: !391, size: 64, offset: 6208)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !480, file: !481, line: 170, baseType: !793, size: 64, offset: 6272)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !42, line: 46, flags: DIFlagFwdDecl)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !480, file: !481, line: 171, baseType: !796, size: 64, offset: 6336)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !163, line: 159, size: 448, elements: !798)
!798 = !{!799, !801, !802, !804, !805, !808}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !797, file: !163, line: 161, baseType: !800, size: 64)
!800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !732)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !797, file: !163, line: 162, baseType: !800, size: 64, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !797, file: !163, line: 163, baseType: !803, size: 32, offset: 128)
!803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 32, elements: !732)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !797, file: !163, line: 164, baseType: !803, size: 32, offset: 160)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !797, file: !163, line: 165, baseType: !806, size: 128, offset: 192)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 128, elements: !732)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !797, file: !163, line: 166, baseType: !809, size: 128, offset: 320)
!809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !810, size: 128, elements: !732)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !163, line: 46, flags: DIFlagFwdDecl)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !480, file: !481, line: 174, baseType: !275, size: 32, offset: 6400)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !480, file: !481, line: 174, baseType: !275, size: 32, offset: 6432)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !480, file: !481, line: 174, baseType: !275, size: 32, offset: 6464)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !480, file: !481, line: 175, baseType: !275, size: 32, offset: 6496)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !480, file: !481, line: 175, baseType: !275, size: 32, offset: 6528)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !480, file: !481, line: 176, baseType: !156, size: 16, offset: 6560)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !480, file: !481, line: 176, baseType: !156, size: 16, offset: 6576)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !480, file: !481, line: 179, baseType: !421, size: 96, offset: 6592)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !480, file: !481, line: 179, baseType: !421, size: 96, offset: 6688)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !480, file: !481, line: 180, baseType: !275, size: 32, offset: 6784)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !480, file: !481, line: 180, baseType: !275, size: 32, offset: 6816)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !480, file: !481, line: 180, baseType: !275, size: 32, offset: 6848)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !480, file: !481, line: 181, baseType: !275, size: 32, offset: 6880)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !480, file: !481, line: 181, baseType: !275, size: 32, offset: 6912)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !480, file: !481, line: 182, baseType: !275, size: 32, offset: 6944)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !480, file: !481, line: 182, baseType: !275, size: 32, offset: 6976)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !480, file: !481, line: 183, baseType: !156, size: 16, offset: 7008)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !480, file: !481, line: 183, baseType: !156, size: 16, offset: 7024)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !480, file: !481, line: 185, baseType: !43, size: 32, offset: 7040)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !480, file: !481, line: 186, baseType: !156, size: 16, offset: 7072)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !480, file: !481, line: 187, baseType: !156, size: 16, offset: 7088)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !480, file: !481, line: 190, baseType: !597, size: 128, offset: 7104)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !480, file: !481, line: 191, baseType: !156, size: 16, offset: 7232)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !480, file: !481, line: 192, baseType: !156, size: 16, offset: 7248)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !480, file: !481, line: 195, baseType: !156, size: 16, offset: 7264)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !480, file: !481, line: 196, baseType: !156, size: 16, offset: 7280)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !480, file: !481, line: 197, baseType: !156, size: 16, offset: 7296)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !480, file: !481, line: 198, baseType: !840, size: 48, offset: 7312)
!840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 48, elements: !422)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !480, file: !481, line: 200, baseType: !842, size: 64, offset: 7360)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !481, line: 86, size: 192, elements: !844)
!844 = !{!845, !907, !908, !909}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !843, file: !481, line: 87, baseType: !846, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !360, line: 77, size: 15424, elements: !848)
!848 = !{!849, !850, !851, !854, !855, !858, !861, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !899, !900, !901}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !847, file: !360, line: 78, baseType: !162, size: 960)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !847, file: !360, line: 80, baseType: !181, size: 8192, offset: 960)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !847, file: !360, line: 82, baseType: !852, size: 64, offset: 9152)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !360, line: 43, flags: DIFlagFwdDecl)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !847, file: !360, line: 83, baseType: !810, size: 64, offset: 9216)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !847, file: !360, line: 86, baseType: !856, size: 64, offset: 9280)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !360, line: 41, flags: DIFlagFwdDecl)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !847, file: !360, line: 87, baseType: !859, size: 64, offset: 9344)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !360, line: 44, flags: DIFlagFwdDecl)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !847, file: !360, line: 89, baseType: !862, size: 512, offset: 9408)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !859, size: 512, elements: !863)
!863 = !{!400}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !847, file: !360, line: 90, baseType: !156, size: 16, offset: 9920)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !847, file: !360, line: 90, baseType: !156, size: 16, offset: 9936)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !847, file: !360, line: 92, baseType: !156, size: 16, offset: 9952)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !847, file: !360, line: 92, baseType: !156, size: 16, offset: 9968)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !847, file: !360, line: 93, baseType: !156, size: 16, offset: 9984)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !847, file: !360, line: 93, baseType: !156, size: 16, offset: 10000)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !847, file: !360, line: 94, baseType: !43, size: 32, offset: 10016)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !847, file: !360, line: 97, baseType: !156, size: 16, offset: 10048)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !847, file: !360, line: 97, baseType: !156, size: 16, offset: 10064)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !847, file: !360, line: 98, baseType: !156, size: 16, offset: 10080)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !847, file: !360, line: 98, baseType: !156, size: 16, offset: 10096)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !847, file: !360, line: 99, baseType: !156, size: 16, offset: 10112)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !847, file: !360, line: 99, baseType: !156, size: 16, offset: 10128)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !847, file: !360, line: 100, baseType: !5, size: 32, offset: 10144)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !847, file: !360, line: 101, baseType: !807, size: 64, offset: 10176)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !847, file: !360, line: 103, baseType: !187, size: 64, offset: 10240)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !847, file: !360, line: 104, baseType: !796, size: 64, offset: 10304)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !847, file: !360, line: 107, baseType: !275, size: 32, offset: 10368)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !847, file: !360, line: 108, baseType: !43, size: 32, offset: 10400)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !847, file: !360, line: 109, baseType: !156, size: 16, offset: 10432)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !847, file: !360, line: 110, baseType: !156, size: 16, offset: 10448)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !847, file: !360, line: 113, baseType: !43, size: 32, offset: 10464)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !847, file: !360, line: 113, baseType: !43, size: 32, offset: 10496)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !847, file: !360, line: 114, baseType: !154, size: 8, offset: 10528)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !847, file: !360, line: 114, baseType: !154, size: 8, offset: 10536)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !847, file: !360, line: 115, baseType: !156, size: 16, offset: 10544)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !847, file: !360, line: 116, baseType: !597, size: 128, offset: 10560)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !847, file: !360, line: 119, baseType: !275, size: 32, offset: 10688)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !847, file: !360, line: 119, baseType: !275, size: 32, offset: 10720)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !847, file: !360, line: 122, baseType: !894, size: 512, offset: 10752)
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !895, line: 182, baseType: !896)
!895 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !895, line: 180, size: 512, elements: !897)
!897 = !{!898}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !896, file: !895, line: 181, baseType: !209, size: 512)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !847, file: !360, line: 123, baseType: !154, size: 8, offset: 11264)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !847, file: !360, line: 125, baseType: !667, size: 56, offset: 11272)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !847, file: !360, line: 126, baseType: !902, size: 4096, offset: 11328)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !903, size: 4096, elements: !863)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !360, line: 69, baseType: !904)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !360, line: 67, size: 512, elements: !905)
!905 = !{!906}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !904, file: !360, line: 68, baseType: !209, size: 512)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !843, file: !481, line: 88, baseType: !153, size: 64, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !843, file: !481, line: 89, baseType: !43, size: 32, offset: 128)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !843, file: !481, line: 90, baseType: !43, size: 32, offset: 160)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !480, file: !481, line: 202, baseType: !219, size: 128, offset: 7424)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !371, file: !372, line: 151, baseType: !153, size: 64, offset: 3584)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !371, file: !372, line: 152, baseType: !43, size: 32, offset: 3648)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !371, file: !372, line: 153, baseType: !43, size: 32, offset: 3680)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !371, file: !372, line: 156, baseType: !421, size: 96, offset: 3712)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !371, file: !372, line: 156, baseType: !421, size: 96, offset: 3808)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !371, file: !372, line: 156, baseType: !421, size: 96, offset: 3904)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !371, file: !372, line: 157, baseType: !421, size: 96, offset: 4000)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !371, file: !372, line: 158, baseType: !421, size: 96, offset: 4096)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !371, file: !372, line: 159, baseType: !421, size: 96, offset: 4192)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !371, file: !372, line: 160, baseType: !421, size: 96, offset: 4288)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !371, file: !372, line: 160, baseType: !421, size: 96, offset: 4384)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !371, file: !372, line: 161, baseType: !597, size: 128, offset: 4480)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !371, file: !372, line: 161, baseType: !597, size: 128, offset: 4608)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !371, file: !372, line: 162, baseType: !421, size: 96, offset: 4736)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !371, file: !372, line: 162, baseType: !421, size: 96, offset: 4832)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !371, file: !372, line: 163, baseType: !275, size: 32, offset: 4928)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !371, file: !372, line: 163, baseType: !275, size: 32, offset: 4960)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !371, file: !372, line: 164, baseType: !929, size: 512, offset: 4992)
!929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 512, elements: !930)
!930 = !{!599, !599}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !371, file: !372, line: 165, baseType: !929, size: 512, offset: 5504)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !371, file: !372, line: 166, baseType: !929, size: 512, offset: 6016)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !371, file: !372, line: 167, baseType: !929, size: 512, offset: 6528)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !371, file: !372, line: 176, baseType: !929, size: 512, offset: 7040)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !371, file: !372, line: 178, baseType: !5, size: 32, offset: 7552)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !371, file: !372, line: 180, baseType: !156, size: 16, offset: 7584)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !371, file: !372, line: 181, baseType: !156, size: 16, offset: 7600)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !371, file: !372, line: 183, baseType: !156, size: 16, offset: 7616)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !371, file: !372, line: 183, baseType: !156, size: 16, offset: 7632)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !371, file: !372, line: 184, baseType: !156, size: 16, offset: 7648)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !371, file: !372, line: 184, baseType: !156, size: 16, offset: 7664)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !371, file: !372, line: 185, baseType: !156, size: 16, offset: 7680)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !371, file: !372, line: 186, baseType: !156, size: 16, offset: 7696)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !371, file: !372, line: 187, baseType: !156, size: 16, offset: 7712)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !371, file: !372, line: 188, baseType: !154, size: 8, offset: 7728)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !371, file: !372, line: 189, baseType: !154, size: 8, offset: 7736)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !371, file: !372, line: 192, baseType: !43, size: 32, offset: 7744)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !371, file: !372, line: 192, baseType: !43, size: 32, offset: 7776)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !371, file: !372, line: 192, baseType: !43, size: 32, offset: 7808)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !371, file: !372, line: 192, baseType: !43, size: 32, offset: 7840)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !371, file: !372, line: 194, baseType: !43, size: 32, offset: 7872)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !371, file: !372, line: 202, baseType: !275, size: 32, offset: 7904)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !371, file: !372, line: 202, baseType: !275, size: 32, offset: 7936)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !371, file: !372, line: 202, baseType: !275, size: 32, offset: 7968)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !371, file: !372, line: 211, baseType: !275, size: 32, offset: 8000)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !371, file: !372, line: 212, baseType: !275, size: 32, offset: 8032)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !371, file: !372, line: 213, baseType: !275, size: 32, offset: 8064)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !371, file: !372, line: 214, baseType: !275, size: 32, offset: 8096)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !371, file: !372, line: 215, baseType: !275, size: 32, offset: 8128)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !371, file: !372, line: 216, baseType: !275, size: 32, offset: 8160)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !371, file: !372, line: 219, baseType: !275, size: 32, offset: 8192)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !371, file: !372, line: 220, baseType: !275, size: 32, offset: 8224)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !371, file: !372, line: 221, baseType: !275, size: 32, offset: 8256)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !371, file: !372, line: 224, baseType: !965, size: 16, offset: 8288)
!965 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !371, file: !372, line: 224, baseType: !965, size: 16, offset: 8304)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !371, file: !372, line: 226, baseType: !156, size: 16, offset: 8320)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !371, file: !372, line: 228, baseType: !154, size: 8, offset: 8336)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !371, file: !372, line: 229, baseType: !154, size: 8, offset: 8344)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !371, file: !372, line: 231, baseType: !156, size: 16, offset: 8352)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !371, file: !372, line: 232, baseType: !154, size: 8, offset: 8368)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !371, file: !372, line: 233, baseType: !154, size: 8, offset: 8376)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !371, file: !372, line: 234, baseType: !275, size: 32, offset: 8384)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !371, file: !372, line: 235, baseType: !275, size: 32, offset: 8416)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !371, file: !372, line: 237, baseType: !219, size: 128, offset: 8448)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !371, file: !372, line: 238, baseType: !219, size: 128, offset: 8576)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !371, file: !372, line: 239, baseType: !219, size: 128, offset: 8704)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !371, file: !372, line: 240, baseType: !219, size: 128, offset: 8832)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !371, file: !372, line: 242, baseType: !275, size: 32, offset: 8960)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !371, file: !372, line: 244, baseType: !156, size: 16, offset: 8992)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !371, file: !372, line: 245, baseType: !965, size: 16, offset: 9008)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !371, file: !372, line: 246, baseType: !597, size: 128, offset: 9024)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !371, file: !372, line: 248, baseType: !43, size: 32, offset: 9152)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !371, file: !372, line: 249, baseType: !43, size: 32, offset: 9184)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !371, file: !372, line: 251, baseType: !986, size: 64, offset: 9216)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !372, line: 251, flags: DIFlagFwdDecl)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !371, file: !372, line: 253, baseType: !154, size: 8, offset: 9280)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !371, file: !372, line: 254, baseType: !154, size: 8, offset: 9288)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !371, file: !372, line: 255, baseType: !156, size: 16, offset: 9296)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !371, file: !372, line: 256, baseType: !421, size: 96, offset: 9312)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !371, file: !372, line: 258, baseType: !219, size: 128, offset: 9408)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !371, file: !372, line: 259, baseType: !219, size: 128, offset: 9536)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !371, file: !372, line: 260, baseType: !219, size: 128, offset: 9664)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !371, file: !372, line: 261, baseType: !219, size: 128, offset: 9792)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !371, file: !372, line: 263, baseType: !997, size: 64, offset: 9920)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !372, line: 52, flags: DIFlagFwdDecl)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !371, file: !372, line: 264, baseType: !1000, size: 64, offset: 9984)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !372, line: 53, flags: DIFlagFwdDecl)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !371, file: !372, line: 265, baseType: !793, size: 64, offset: 10048)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !371, file: !372, line: 267, baseType: !154, size: 8, offset: 10112)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !371, file: !372, line: 268, baseType: !154, size: 8, offset: 10120)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !371, file: !372, line: 269, baseType: !156, size: 16, offset: 10128)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !371, file: !372, line: 270, baseType: !275, size: 32, offset: 10144)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !371, file: !372, line: 272, baseType: !1008, size: 64, offset: 10176)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !372, line: 54, flags: DIFlagFwdDecl)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !371, file: !372, line: 275, baseType: !1011, size: 64, offset: 10240)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !372, line: 275, flags: DIFlagFwdDecl)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !371, file: !372, line: 277, baseType: !1014, size: 64, offset: 10304)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !372, line: 56, flags: DIFlagFwdDecl)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !371, file: !372, line: 277, baseType: !1014, size: 64, offset: 10368)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !371, file: !372, line: 278, baseType: !1018, size: 64, offset: 10432)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1019, line: 27, baseType: !1020)
!1019 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1021, line: 45, baseType: !1022)
!1021 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1022 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !371, file: !372, line: 279, baseType: !1018, size: 64, offset: 10496)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !371, file: !372, line: 280, baseType: !5, size: 32, offset: 10560)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !371, file: !372, line: 281, baseType: !5, size: 32, offset: 10592)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !371, file: !372, line: 283, baseType: !219, size: 128, offset: 10624)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !371, file: !372, line: 284, baseType: !219, size: 128, offset: 10752)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !371, file: !372, line: 285, baseType: !1029, size: 64, offset: 10880)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !371, file: !372, line: 287, baseType: !1031, size: 64, offset: 10944)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !372, line: 59, flags: DIFlagFwdDecl)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !371, file: !372, line: 288, baseType: !1034, size: 64, offset: 11008)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !372, line: 288, flags: DIFlagFwdDecl)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !371, file: !372, line: 290, baseType: !731, size: 64, offset: 11072)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !371, file: !372, line: 291, baseType: !1038, size: 64, offset: 11136)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !360, line: 65, baseType: !359)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !371, file: !372, line: 293, baseType: !219, size: 128, offset: 11200)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !371, file: !372, line: 294, baseType: !1042, size: 64, offset: 11328)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !372, line: 113, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !372, line: 108, size: 256, elements: !1045)
!1045 = !{!1046, !1048, !1049, !1050, !1051}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1044, file: !372, line: 109, baseType: !1047, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1044, file: !372, line: 109, baseType: !1047, size: 64, offset: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1044, file: !372, line: 110, baseType: !370, size: 64, offset: 128)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1044, file: !372, line: 111, baseType: !43, size: 32, offset: 192)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1044, file: !372, line: 112, baseType: !275, size: 32, offset: 224)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !364, file: !365, line: 1221, baseType: !1053, size: 64, offset: 1088)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1055, line: 52, size: 4224, elements: !1056)
!1055 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1056 = !{!1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1054, file: !1055, line: 53, baseType: !162, size: 960)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1054, file: !1055, line: 54, baseType: !308, size: 64, offset: 960)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1054, file: !1055, line: 56, baseType: !156, size: 16, offset: 1024)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !1054, file: !1055, line: 56, baseType: !156, size: 16, offset: 1040)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !1054, file: !1055, line: 57, baseType: !156, size: 16, offset: 1056)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !1054, file: !1055, line: 57, baseType: !156, size: 16, offset: 1072)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !1054, file: !1055, line: 59, baseType: !275, size: 32, offset: 1088)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !1054, file: !1055, line: 59, baseType: !275, size: 32, offset: 1120)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !1054, file: !1055, line: 59, baseType: !275, size: 32, offset: 1152)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !1054, file: !1055, line: 60, baseType: !275, size: 32, offset: 1184)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !1054, file: !1055, line: 60, baseType: !275, size: 32, offset: 1216)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !1054, file: !1055, line: 60, baseType: !275, size: 32, offset: 1248)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !1054, file: !1055, line: 61, baseType: !275, size: 32, offset: 1280)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !1054, file: !1055, line: 61, baseType: !275, size: 32, offset: 1312)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !1054, file: !1055, line: 61, baseType: !275, size: 32, offset: 1344)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1054, file: !1055, line: 68, baseType: !275, size: 32, offset: 1376)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1054, file: !1055, line: 68, baseType: !275, size: 32, offset: 1408)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1054, file: !1055, line: 68, baseType: !275, size: 32, offset: 1440)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !1054, file: !1055, line: 69, baseType: !275, size: 32, offset: 1472)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !1054, file: !1055, line: 69, baseType: !275, size: 32, offset: 1504)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1054, file: !1055, line: 74, baseType: !275, size: 32, offset: 1536)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1054, file: !1055, line: 79, baseType: !275, size: 32, offset: 1568)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !1054, file: !1055, line: 81, baseType: !156, size: 16, offset: 1600)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1054, file: !1055, line: 91, baseType: !156, size: 16, offset: 1616)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1054, file: !1055, line: 92, baseType: !156, size: 16, offset: 1632)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1054, file: !1055, line: 93, baseType: !156, size: 16, offset: 1648)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1054, file: !1055, line: 94, baseType: !156, size: 16, offset: 1664)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1054, file: !1055, line: 94, baseType: !156, size: 16, offset: 1680)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1054, file: !1055, line: 94, baseType: !156, size: 16, offset: 1696)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1054, file: !1055, line: 94, baseType: !156, size: 16, offset: 1712)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !1054, file: !1055, line: 96, baseType: !275, size: 32, offset: 1728)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !1054, file: !1055, line: 96, baseType: !275, size: 32, offset: 1760)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !1054, file: !1055, line: 96, baseType: !275, size: 32, offset: 1792)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !1054, file: !1055, line: 96, baseType: !275, size: 32, offset: 1824)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !1054, file: !1055, line: 98, baseType: !275, size: 32, offset: 1856)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !1054, file: !1055, line: 98, baseType: !275, size: 32, offset: 1888)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !1054, file: !1055, line: 98, baseType: !275, size: 32, offset: 1920)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !1054, file: !1055, line: 98, baseType: !275, size: 32, offset: 1952)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !1054, file: !1055, line: 99, baseType: !275, size: 32, offset: 1984)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !1054, file: !1055, line: 99, baseType: !275, size: 32, offset: 2016)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !1054, file: !1055, line: 100, baseType: !275, size: 32, offset: 2048)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !1054, file: !1055, line: 100, baseType: !275, size: 32, offset: 2080)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !1054, file: !1055, line: 103, baseType: !156, size: 16, offset: 2112)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !1054, file: !1055, line: 103, baseType: !156, size: 16, offset: 2128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !1054, file: !1055, line: 103, baseType: !156, size: 16, offset: 2144)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !1054, file: !1055, line: 103, baseType: !156, size: 16, offset: 2160)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !1054, file: !1055, line: 106, baseType: !275, size: 32, offset: 2176)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !1054, file: !1055, line: 106, baseType: !275, size: 32, offset: 2208)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !1054, file: !1055, line: 106, baseType: !275, size: 32, offset: 2240)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !1054, file: !1055, line: 106, baseType: !275, size: 32, offset: 2272)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !1054, file: !1055, line: 107, baseType: !156, size: 16, offset: 2304)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !1054, file: !1055, line: 107, baseType: !156, size: 16, offset: 2320)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !1054, file: !1055, line: 107, baseType: !156, size: 16, offset: 2336)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !1054, file: !1055, line: 107, baseType: !156, size: 16, offset: 2352)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !1054, file: !1055, line: 108, baseType: !275, size: 32, offset: 2368)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !1054, file: !1055, line: 108, baseType: !275, size: 32, offset: 2400)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !1054, file: !1055, line: 109, baseType: !275, size: 32, offset: 2432)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !1054, file: !1055, line: 109, baseType: !275, size: 32, offset: 2464)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !1054, file: !1055, line: 110, baseType: !275, size: 32, offset: 2496)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !1054, file: !1055, line: 110, baseType: !275, size: 32, offset: 2528)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !1054, file: !1055, line: 110, baseType: !275, size: 32, offset: 2560)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !1054, file: !1055, line: 111, baseType: !156, size: 16, offset: 2592)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !1054, file: !1055, line: 111, baseType: !156, size: 16, offset: 2608)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !1054, file: !1055, line: 112, baseType: !156, size: 16, offset: 2624)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !1054, file: !1055, line: 112, baseType: !156, size: 16, offset: 2640)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !1054, file: !1055, line: 112, baseType: !156, size: 16, offset: 2656)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1054, file: !1055, line: 115, baseType: !156, size: 16, offset: 2672)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !1054, file: !1055, line: 118, baseType: !1125, size: 64, offset: 2688)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !1054, file: !1055, line: 118, baseType: !1125, size: 64, offset: 2752)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1054, file: !1055, line: 121, baseType: !391, size: 64, offset: 2816)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1054, file: !1055, line: 122, baseType: !640, size: 1152, offset: 2880)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !1054, file: !1055, line: 123, baseType: !156, size: 16, offset: 4032)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1054, file: !1055, line: 123, baseType: !156, size: 16, offset: 4048)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1054, file: !1055, line: 123, baseType: !803, size: 32, offset: 4064)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1054, file: !1055, line: 126, baseType: !796, size: 64, offset: 4096)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1054, file: !1055, line: 129, baseType: !716, size: 64, offset: 4160)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !364, file: !365, line: 1223, baseType: !363, size: 64, offset: 1152)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !364, file: !365, line: 1225, baseType: !219, size: 128, offset: 1216)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !364, file: !365, line: 1226, baseType: !1137, size: 64, offset: 1344)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !365, line: 69, size: 320, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1138, file: !365, line: 70, baseType: !1137, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1138, file: !365, line: 70, baseType: !1137, size: 64, offset: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1138, file: !365, line: 71, baseType: !5, size: 32, offset: 128)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1138, file: !365, line: 71, baseType: !5, size: 32, offset: 160)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1138, file: !365, line: 72, baseType: !43, size: 32, offset: 192)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1138, file: !365, line: 73, baseType: !156, size: 16, offset: 224)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1138, file: !365, line: 73, baseType: !156, size: 16, offset: 240)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1138, file: !365, line: 74, baseType: !370, size: 64, offset: 256)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !364, file: !365, line: 1227, baseType: !370, size: 64, offset: 1408)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !364, file: !365, line: 1229, baseType: !421, size: 96, offset: 1472)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !364, file: !365, line: 1230, baseType: !421, size: 96, offset: 1568)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !364, file: !365, line: 1231, baseType: !421, size: 96, offset: 1664)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !364, file: !365, line: 1231, baseType: !421, size: 96, offset: 1760)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !364, file: !365, line: 1233, baseType: !5, size: 32, offset: 1856)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !364, file: !365, line: 1234, baseType: !43, size: 32, offset: 1888)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !364, file: !365, line: 1235, baseType: !5, size: 32, offset: 1920)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !364, file: !365, line: 1237, baseType: !156, size: 16, offset: 1952)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !364, file: !365, line: 1239, baseType: !154, size: 8, offset: 1968)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !364, file: !365, line: 1240, baseType: !614, size: 8, offset: 1976)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !364, file: !365, line: 1242, baseType: !716, size: 64, offset: 1984)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !364, file: !365, line: 1244, baseType: !1161, size: 64, offset: 2048)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1163, line: 200, size: 17024, elements: !1164)
!1163 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1164 = !{!1165, !1166, !1167, !1168, !1500, !1501, !1502, !1503, !1504, !1505, !1506}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1162, file: !1163, line: 201, baseType: !1029, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1162, file: !1163, line: 202, baseType: !219, size: 128, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1162, file: !1163, line: 203, baseType: !219, size: 128, offset: 192)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1162, file: !1163, line: 206, baseType: !1169, size: 64, offset: 320)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1163, line: 190, baseType: !1171)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1163, line: 126, size: 2816, elements: !1172)
!1172 = !{!1173, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1264, !1265, !1266, !1267, !1472, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1499}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1171, file: !1163, line: 127, baseType: !1174, size: 64)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1171, file: !1163, line: 127, baseType: !1174, size: 64, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1171, file: !1163, line: 128, baseType: !152, size: 64, offset: 128)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1171, file: !1163, line: 129, baseType: !152, size: 64, offset: 192)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1171, file: !1163, line: 130, baseType: !209, size: 512, offset: 256)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1171, file: !1163, line: 132, baseType: !43, size: 32, offset: 768)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1171, file: !1163, line: 132, baseType: !43, size: 32, offset: 800)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1171, file: !1163, line: 133, baseType: !43, size: 32, offset: 832)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1171, file: !1163, line: 134, baseType: !43, size: 32, offset: 864)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1171, file: !1163, line: 134, baseType: !43, size: 32, offset: 896)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1171, file: !1163, line: 134, baseType: !43, size: 32, offset: 928)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1171, file: !1163, line: 135, baseType: !43, size: 32, offset: 960)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1171, file: !1163, line: 135, baseType: !43, size: 32, offset: 992)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1171, file: !1163, line: 136, baseType: !43, size: 32, offset: 1024)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1171, file: !1163, line: 136, baseType: !43, size: 32, offset: 1056)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1171, file: !1163, line: 137, baseType: !43, size: 32, offset: 1088)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1171, file: !1163, line: 137, baseType: !43, size: 32, offset: 1120)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1171, file: !1163, line: 138, baseType: !275, size: 32, offset: 1152)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1171, file: !1163, line: 139, baseType: !275, size: 32, offset: 1184)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1171, file: !1163, line: 139, baseType: !275, size: 32, offset: 1216)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1171, file: !1163, line: 141, baseType: !156, size: 16, offset: 1248)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1171, file: !1163, line: 142, baseType: !156, size: 16, offset: 1264)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1171, file: !1163, line: 143, baseType: !43, size: 32, offset: 1280)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1171, file: !1163, line: 144, baseType: !43, size: 32, offset: 1312)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1171, file: !1163, line: 146, baseType: !1199, size: 64, offset: 1344)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1163, line: 114, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1163, line: 99, size: 7232, elements: !1202)
!1202 = !{!1203, !1205, !1206, !1207, !1208, !1209, !1210, !1221, !1225, !1237, !1246, !1253, !1263}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1201, file: !1163, line: 100, baseType: !1204, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1201, file: !1163, line: 100, baseType: !1204, size: 64, offset: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1201, file: !1163, line: 101, baseType: !43, size: 32, offset: 128)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1201, file: !1163, line: 101, baseType: !43, size: 32, offset: 160)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1201, file: !1163, line: 102, baseType: !43, size: 32, offset: 192)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1201, file: !1163, line: 102, baseType: !43, size: 32, offset: 224)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1201, file: !1163, line: 103, baseType: !1211, size: 64, offset: 256)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1163, line: 59, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1163, line: 56, size: 2112, elements: !1214)
!1214 = !{!1215, !1219, !1220}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1213, file: !1163, line: 57, baseType: !1216, size: 2048)
!1216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 2048, elements: !1217)
!1217 = !{!1218}
!1218 = !DISubrange(count: 256)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1213, file: !1163, line: 58, baseType: !43, size: 32, offset: 2048)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1213, file: !1163, line: 58, baseType: !43, size: 32, offset: 2080)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1201, file: !1163, line: 106, baseType: !1222, size: 6144, offset: 320)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 6144, elements: !1223)
!1223 = !{!1224}
!1224 = !DISubrange(count: 768)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1201, file: !1163, line: 107, baseType: !1226, size: 64, offset: 6464)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1163, line: 97, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1163, line: 83, size: 8320, elements: !1229)
!1229 = !{!1230, !1231, !1232, !1233, !1234, !1235, !1236}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1228, file: !1163, line: 84, baseType: !1222, size: 6144)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1228, file: !1163, line: 87, baseType: !1216, size: 2048, offset: 6144)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1228, file: !1163, line: 88, baseType: !856, size: 64, offset: 8192)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1228, file: !1163, line: 90, baseType: !156, size: 16, offset: 8256)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1228, file: !1163, line: 92, baseType: !156, size: 16, offset: 8272)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1228, file: !1163, line: 93, baseType: !156, size: 16, offset: 8288)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1228, file: !1163, line: 95, baseType: !156, size: 16, offset: 8304)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1201, file: !1163, line: 108, baseType: !1238, size: 64, offset: 6528)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1163, line: 66, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1163, line: 61, size: 128, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1240, file: !1163, line: 62, baseType: !43, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1240, file: !1163, line: 63, baseType: !43, size: 32, offset: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1240, file: !1163, line: 64, baseType: !43, size: 32, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1240, file: !1163, line: 65, baseType: !43, size: 32, offset: 96)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1201, file: !1163, line: 109, baseType: !1247, size: 64, offset: 6592)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1163, line: 71, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1163, line: 68, size: 64, elements: !1250)
!1250 = !{!1251, !1252}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1249, file: !1163, line: 69, baseType: !43, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1249, file: !1163, line: 70, baseType: !43, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1201, file: !1163, line: 110, baseType: !1254, size: 64, offset: 6656)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1163, line: 81, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1163, line: 73, size: 352, elements: !1257)
!1257 = !{!1258, !1259, !1260, !1261, !1262}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1256, file: !1163, line: 74, baseType: !421, size: 96)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1256, file: !1163, line: 75, baseType: !421, size: 96, offset: 96)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1256, file: !1163, line: 76, baseType: !421, size: 96, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1256, file: !1163, line: 77, baseType: !43, size: 32, offset: 288)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1256, file: !1163, line: 78, baseType: !43, size: 32, offset: 320)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1201, file: !1163, line: 113, baseType: !894, size: 512, offset: 6720)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1171, file: !1163, line: 148, baseType: !391, size: 64, offset: 1408)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1171, file: !1163, line: 151, baseType: !363, size: 64, offset: 1472)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1171, file: !1163, line: 152, baseType: !370, size: 64, offset: 1536)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1171, file: !1163, line: 153, baseType: !1268, size: 64, offset: 1600)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1270, line: 64, size: 19136, elements: !1271)
!1270 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1271 = !{!1272, !1273, !1274, !1275, !1276, !1277, !1279, !1280, !1281, !1282, !1285, !1286, !1458, !1459, !1467, !1468, !1469, !1470, !1471}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1269, file: !1270, line: 65, baseType: !162, size: 960)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1269, file: !1270, line: 66, baseType: !308, size: 64, offset: 960)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1269, file: !1270, line: 68, baseType: !181, size: 8192, offset: 1024)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1269, file: !1270, line: 70, baseType: !43, size: 32, offset: 9216)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1269, file: !1270, line: 71, baseType: !43, size: 32, offset: 9248)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1269, file: !1270, line: 72, baseType: !1278, size: 64, offset: 9280)
!1278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 64, elements: !732)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1269, file: !1270, line: 74, baseType: !275, size: 32, offset: 9344)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1269, file: !1270, line: 74, baseType: !275, size: 32, offset: 9376)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1269, file: !1270, line: 76, baseType: !856, size: 64, offset: 9408)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1269, file: !1270, line: 77, baseType: !1283, size: 64, offset: 9472)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1270, line: 77, flags: DIFlagFwdDecl)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1269, file: !1270, line: 78, baseType: !452, size: 64, offset: 9536)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1269, file: !1270, line: 80, baseType: !1287, size: 2624, offset: 9600)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1288, line: 340, size: 2624, elements: !1289)
!1288 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1289 = !{!1290, !1318, !1336, !1337, !1338, !1353, !1411, !1412, !1438, !1439, !1440, !1441, !1447}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1287, file: !1288, line: 341, baseType: !1291, size: 576)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1288, line: 251, baseType: !1292)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1288, line: 207, size: 576, elements: !1293)
!1293 = !{!1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1292, file: !1288, line: 208, baseType: !43, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1292, file: !1288, line: 211, baseType: !156, size: 16, offset: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1292, file: !1288, line: 212, baseType: !156, size: 16, offset: 48)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1292, file: !1288, line: 213, baseType: !275, size: 32, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1292, file: !1288, line: 214, baseType: !156, size: 16, offset: 96)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1292, file: !1288, line: 215, baseType: !156, size: 16, offset: 112)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1292, file: !1288, line: 216, baseType: !156, size: 16, offset: 128)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1292, file: !1288, line: 217, baseType: !156, size: 16, offset: 144)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1292, file: !1288, line: 218, baseType: !156, size: 16, offset: 160)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1292, file: !1288, line: 219, baseType: !156, size: 16, offset: 176)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1292, file: !1288, line: 220, baseType: !275, size: 32, offset: 192)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1292, file: !1288, line: 222, baseType: !156, size: 16, offset: 224)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1292, file: !1288, line: 225, baseType: !156, size: 16, offset: 240)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1292, file: !1288, line: 228, baseType: !43, size: 32, offset: 256)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1292, file: !1288, line: 229, baseType: !43, size: 32, offset: 288)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1292, file: !1288, line: 233, baseType: !43, size: 32, offset: 320)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1292, file: !1288, line: 236, baseType: !156, size: 16, offset: 352)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1292, file: !1288, line: 236, baseType: !156, size: 16, offset: 368)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1292, file: !1288, line: 241, baseType: !275, size: 32, offset: 384)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1292, file: !1288, line: 244, baseType: !43, size: 32, offset: 416)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1292, file: !1288, line: 244, baseType: !43, size: 32, offset: 448)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1292, file: !1288, line: 245, baseType: !275, size: 32, offset: 480)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1292, file: !1288, line: 248, baseType: !275, size: 32, offset: 512)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1292, file: !1288, line: 250, baseType: !43, size: 32, offset: 544)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1287, file: !1288, line: 342, baseType: !1319, size: 448, offset: 576)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1288, line: 79, baseType: !1320)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1288, line: 61, size: 448, elements: !1321)
!1321 = !{!1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1320, file: !1288, line: 62, baseType: !152, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1320, file: !1288, line: 64, baseType: !156, size: 16, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1320, file: !1288, line: 65, baseType: !156, size: 16, offset: 80)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1320, file: !1288, line: 67, baseType: !275, size: 32, offset: 96)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1320, file: !1288, line: 68, baseType: !275, size: 32, offset: 128)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1320, file: !1288, line: 69, baseType: !275, size: 32, offset: 160)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1320, file: !1288, line: 70, baseType: !156, size: 16, offset: 192)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1320, file: !1288, line: 71, baseType: !156, size: 16, offset: 208)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1320, file: !1288, line: 72, baseType: !731, size: 64, offset: 224)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1320, file: !1288, line: 75, baseType: !275, size: 32, offset: 288)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1320, file: !1288, line: 75, baseType: !275, size: 32, offset: 320)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1320, file: !1288, line: 75, baseType: !275, size: 32, offset: 352)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1320, file: !1288, line: 78, baseType: !275, size: 32, offset: 384)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1320, file: !1288, line: 78, baseType: !275, size: 32, offset: 416)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1287, file: !1288, line: 343, baseType: !219, size: 128, offset: 1024)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1287, file: !1288, line: 344, baseType: !219, size: 128, offset: 1152)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1287, file: !1288, line: 345, baseType: !1339, size: 192, offset: 1280)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1288, line: 278, baseType: !1340)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1288, line: 270, size: 192, elements: !1341)
!1341 = !{!1342, !1343, !1344, !1345, !1346}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1340, file: !1288, line: 271, baseType: !43, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1340, file: !1288, line: 273, baseType: !275, size: 32, offset: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1340, file: !1288, line: 275, baseType: !43, size: 32, offset: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1340, file: !1288, line: 276, baseType: !43, size: 32, offset: 96)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1340, file: !1288, line: 277, baseType: !1347, size: 64, offset: 128)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1288, line: 55, size: 576, elements: !1349)
!1349 = !{!1350, !1351, !1352}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1348, file: !1288, line: 56, baseType: !43, size: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1348, file: !1288, line: 57, baseType: !275, size: 32, offset: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1348, file: !1288, line: 58, baseType: !929, size: 512, offset: 64)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1287, file: !1288, line: 346, baseType: !1354, size: 384, offset: 1472)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1288, line: 268, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1288, line: 253, size: 384, elements: !1356)
!1356 = !{!1357, !1358, !1359, !1360, !1361, !1405, !1406, !1407, !1408, !1409, !1410}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1355, file: !1288, line: 254, baseType: !43, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1355, file: !1288, line: 255, baseType: !43, size: 32, offset: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1355, file: !1288, line: 255, baseType: !43, size: 32, offset: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1355, file: !1288, line: 258, baseType: !275, size: 32, offset: 96)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1355, file: !1288, line: 259, baseType: !1362, size: 64, offset: 128)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1288, line: 164, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1288, line: 108, size: 1664, elements: !1365)
!1365 = !{!1366, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1364, file: !1288, line: 109, baseType: !1367, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1364, file: !1288, line: 109, baseType: !1367, size: 64, offset: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1364, file: !1288, line: 111, baseType: !209, size: 512, offset: 128)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1364, file: !1288, line: 119, baseType: !731, size: 64, offset: 640)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1364, file: !1288, line: 119, baseType: !731, size: 64, offset: 704)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1364, file: !1288, line: 125, baseType: !731, size: 64, offset: 768)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1364, file: !1288, line: 125, baseType: !731, size: 64, offset: 832)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1364, file: !1288, line: 127, baseType: !731, size: 64, offset: 896)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1364, file: !1288, line: 130, baseType: !43, size: 32, offset: 960)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1364, file: !1288, line: 131, baseType: !43, size: 32, offset: 992)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1364, file: !1288, line: 132, baseType: !1378, size: 64, offset: 1024)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1288, line: 106, baseType: !1380)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1288, line: 81, size: 512, elements: !1381)
!1381 = !{!1382, !1383, !1386, !1387, !1388, !1389}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1380, file: !1288, line: 82, baseType: !731, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1380, file: !1288, line: 97, baseType: !1384, size: 256, offset: 64)
!1384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 256, elements: !1385)
!1385 = !{!599, !733}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1380, file: !1288, line: 102, baseType: !731, size: 64, offset: 320)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1380, file: !1288, line: 102, baseType: !731, size: 64, offset: 384)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1380, file: !1288, line: 104, baseType: !43, size: 32, offset: 448)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1380, file: !1288, line: 105, baseType: !43, size: 32, offset: 480)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1364, file: !1288, line: 135, baseType: !421, size: 96, offset: 1088)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1364, file: !1288, line: 136, baseType: !275, size: 32, offset: 1184)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1364, file: !1288, line: 139, baseType: !43, size: 32, offset: 1216)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1364, file: !1288, line: 139, baseType: !43, size: 32, offset: 1248)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1364, file: !1288, line: 139, baseType: !43, size: 32, offset: 1280)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1364, file: !1288, line: 140, baseType: !421, size: 96, offset: 1312)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1364, file: !1288, line: 143, baseType: !156, size: 16, offset: 1408)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1364, file: !1288, line: 144, baseType: !156, size: 16, offset: 1424)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1364, file: !1288, line: 145, baseType: !156, size: 16, offset: 1440)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1364, file: !1288, line: 148, baseType: !156, size: 16, offset: 1456)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1364, file: !1288, line: 149, baseType: !43, size: 32, offset: 1472)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1364, file: !1288, line: 150, baseType: !275, size: 32, offset: 1504)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1364, file: !1288, line: 152, baseType: !452, size: 64, offset: 1536)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1364, file: !1288, line: 163, baseType: !275, size: 32, offset: 1600)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1364, file: !1288, line: 163, baseType: !275, size: 32, offset: 1632)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1355, file: !1288, line: 261, baseType: !275, size: 32, offset: 192)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1355, file: !1288, line: 261, baseType: !275, size: 32, offset: 224)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1355, file: !1288, line: 261, baseType: !275, size: 32, offset: 256)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1355, file: !1288, line: 263, baseType: !43, size: 32, offset: 288)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1355, file: !1288, line: 266, baseType: !43, size: 32, offset: 320)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1355, file: !1288, line: 267, baseType: !275, size: 32, offset: 352)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1287, file: !1288, line: 347, baseType: !1362, size: 64, offset: 1856)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1287, file: !1288, line: 348, baseType: !1413, size: 64, offset: 1920)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1288, line: 205, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1288, line: 186, size: 1024, elements: !1416)
!1416 = !{!1417, !1419, !1420, !1421, !1423, !1424, !1425, !1433, !1434, !1435, !1436, !1437}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1415, file: !1288, line: 187, baseType: !1418, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1415, file: !1288, line: 187, baseType: !1418, size: 64, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1415, file: !1288, line: 189, baseType: !209, size: 512, offset: 128)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1415, file: !1288, line: 191, baseType: !1422, size: 64, offset: 640)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1415, file: !1288, line: 193, baseType: !43, size: 32, offset: 704)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1415, file: !1288, line: 193, baseType: !43, size: 32, offset: 736)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1415, file: !1288, line: 195, baseType: !1426, size: 64, offset: 768)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1288, line: 184, baseType: !1428)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1288, line: 166, size: 320, elements: !1429)
!1429 = !{!1430, !1431, !1432}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1428, file: !1288, line: 180, baseType: !1384, size: 256)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1428, file: !1288, line: 182, baseType: !43, size: 32, offset: 256)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1428, file: !1288, line: 183, baseType: !43, size: 32, offset: 288)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1415, file: !1288, line: 196, baseType: !43, size: 32, offset: 832)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1415, file: !1288, line: 198, baseType: !43, size: 32, offset: 864)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1415, file: !1288, line: 200, baseType: !846, size: 64, offset: 896)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1415, file: !1288, line: 201, baseType: !275, size: 32, offset: 960)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1415, file: !1288, line: 204, baseType: !43, size: 32, offset: 992)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1287, file: !1288, line: 350, baseType: !219, size: 128, offset: 1984)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1287, file: !1288, line: 351, baseType: !43, size: 32, offset: 2112)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1287, file: !1288, line: 351, baseType: !43, size: 32, offset: 2144)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1287, file: !1288, line: 353, baseType: !1442, size: 64, offset: 2176)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1288, line: 297, baseType: !1444)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1288, line: 295, size: 2048, elements: !1445)
!1445 = !{!1446}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1444, file: !1288, line: 296, baseType: !1216, size: 2048)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1287, file: !1288, line: 355, baseType: !1448, size: 384, offset: 2240)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1288, line: 338, baseType: !1449)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1288, line: 322, size: 384, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1454, !1455, !1456, !1457}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1449, file: !1288, line: 323, baseType: !43, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1449, file: !1288, line: 325, baseType: !156, size: 16, offset: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1449, file: !1288, line: 326, baseType: !156, size: 16, offset: 48)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1449, file: !1288, line: 331, baseType: !219, size: 128, offset: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1449, file: !1288, line: 334, baseType: !219, size: 128, offset: 192)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1449, file: !1288, line: 335, baseType: !43, size: 32, offset: 320)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1449, file: !1288, line: 337, baseType: !43, size: 32, offset: 352)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1269, file: !1270, line: 81, baseType: !152, size: 64, offset: 12224)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1269, file: !1270, line: 85, baseType: !1460, size: 6208, offset: 12288)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1270, line: 55, size: 6208, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465, !1466}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1460, file: !1270, line: 56, baseType: !1222, size: 6144)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1460, file: !1270, line: 58, baseType: !156, size: 16, offset: 6144)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1460, file: !1270, line: 59, baseType: !156, size: 16, offset: 6160)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1460, file: !1270, line: 60, baseType: !156, size: 16, offset: 6176)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1460, file: !1270, line: 61, baseType: !156, size: 16, offset: 6192)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1269, file: !1270, line: 86, baseType: !43, size: 32, offset: 18496)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1269, file: !1270, line: 88, baseType: !43, size: 32, offset: 18528)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1269, file: !1270, line: 90, baseType: !43, size: 32, offset: 18560)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1269, file: !1270, line: 94, baseType: !43, size: 32, offset: 18592)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1269, file: !1270, line: 100, baseType: !894, size: 512, offset: 18624)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1171, file: !1163, line: 154, baseType: !1473, size: 64, offset: 1664)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1163, line: 154, flags: DIFlagFwdDecl)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1171, file: !1163, line: 156, baseType: !856, size: 64, offset: 1728)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1171, file: !1163, line: 158, baseType: !275, size: 32, offset: 1792)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1171, file: !1163, line: 159, baseType: !275, size: 32, offset: 1824)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1171, file: !1163, line: 162, baseType: !1174, size: 64, offset: 1856)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1171, file: !1163, line: 162, baseType: !1174, size: 64, offset: 1920)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1171, file: !1163, line: 162, baseType: !1174, size: 64, offset: 1984)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1171, file: !1163, line: 164, baseType: !219, size: 128, offset: 2048)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1171, file: !1163, line: 166, baseType: !1483, size: 64, offset: 2176)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1163, line: 51, flags: DIFlagFwdDecl)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1171, file: !1163, line: 167, baseType: !152, size: 64, offset: 2240)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1171, file: !1163, line: 168, baseType: !275, size: 32, offset: 2304)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1171, file: !1163, line: 170, baseType: !275, size: 32, offset: 2336)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1171, file: !1163, line: 170, baseType: !275, size: 32, offset: 2368)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1171, file: !1163, line: 171, baseType: !275, size: 32, offset: 2400)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1171, file: !1163, line: 173, baseType: !152, size: 64, offset: 2432)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1171, file: !1163, line: 175, baseType: !43, size: 32, offset: 2496)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1171, file: !1163, line: 176, baseType: !43, size: 32, offset: 2528)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1171, file: !1163, line: 179, baseType: !43, size: 32, offset: 2560)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1171, file: !1163, line: 180, baseType: !275, size: 32, offset: 2592)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1171, file: !1163, line: 183, baseType: !43, size: 32, offset: 2624)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1171, file: !1163, line: 185, baseType: !154, size: 8, offset: 2656)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1171, file: !1163, line: 186, baseType: !1498, size: 24, offset: 2664)
!1498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 24, elements: !422)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1171, file: !1163, line: 189, baseType: !219, size: 128, offset: 2688)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1162, file: !1163, line: 207, baseType: !181, size: 8192, offset: 384)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1162, file: !1163, line: 208, baseType: !181, size: 8192, offset: 8576)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1162, file: !1163, line: 210, baseType: !43, size: 32, offset: 16768)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1162, file: !1163, line: 210, baseType: !43, size: 32, offset: 16800)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1162, file: !1163, line: 211, baseType: !43, size: 32, offset: 16832)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1162, file: !1163, line: 211, baseType: !43, size: 32, offset: 16864)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1162, file: !1163, line: 212, baseType: !749, size: 128, offset: 16896)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !364, file: !365, line: 1246, baseType: !1508, size: 64, offset: 2112)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !365, line: 1067, size: 5184, elements: !1510)
!1510 = !{!1511, !1541, !1542, !1557, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1579, !1595, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1705}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1509, file: !365, line: 1068, baseType: !1512, size: 64)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !365, line: 934, baseType: !1514)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !365, line: 925, size: 576, elements: !1515)
!1515 = !{!1516, !1533, !1534, !1535, !1536, !1537, !1540}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1514, file: !365, line: 926, baseType: !1517, size: 320)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !365, line: 830, baseType: !1518)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !365, line: 813, size: 320, elements: !1519)
!1519 = !{!1520, !1523, !1526, !1527, !1530, !1531, !1532}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1518, file: !365, line: 814, baseType: !1521, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !365, line: 51, flags: DIFlagFwdDecl)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1518, file: !365, line: 815, baseType: !1524, size: 64, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !365, line: 815, flags: DIFlagFwdDecl)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1518, file: !365, line: 818, baseType: !152, size: 64, offset: 128)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1518, file: !365, line: 819, baseType: !1528, size: 32, offset: 192)
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1529, size: 32, elements: !598)
!1529 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1518, file: !365, line: 822, baseType: !43, size: 32, offset: 224)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1518, file: !365, line: 826, baseType: !43, size: 32, offset: 256)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1518, file: !365, line: 829, baseType: !43, size: 32, offset: 288)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1514, file: !365, line: 928, baseType: !156, size: 16, offset: 320)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1514, file: !365, line: 928, baseType: !156, size: 16, offset: 336)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1514, file: !365, line: 929, baseType: !43, size: 32, offset: 352)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1514, file: !365, line: 930, baseType: !807, size: 64, offset: 384)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1514, file: !365, line: 931, baseType: !1538, size: 64, offset: 448)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !365, line: 931, flags: DIFlagFwdDecl)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1514, file: !365, line: 933, baseType: !152, size: 64, offset: 512)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1509, file: !365, line: 1069, baseType: !1512, size: 64, offset: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1509, file: !365, line: 1070, baseType: !1543, size: 64, offset: 128)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !365, line: 916, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !365, line: 891, size: 704, elements: !1546)
!1546 = !{!1547, !1548, !1549, !1551, !1552, !1553, !1554, !1555, !1556}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1545, file: !365, line: 892, baseType: !1517, size: 320)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1545, file: !365, line: 896, baseType: !43, size: 32, offset: 320)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1545, file: !365, line: 900, baseType: !1550, size: 96, offset: 352)
!1550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 96, elements: !422)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1545, file: !365, line: 903, baseType: !275, size: 32, offset: 448)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1545, file: !365, line: 906, baseType: !43, size: 32, offset: 480)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1545, file: !365, line: 909, baseType: !275, size: 32, offset: 512)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1545, file: !365, line: 912, baseType: !275, size: 32, offset: 544)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1545, file: !365, line: 914, baseType: !370, size: 64, offset: 576)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1545, file: !365, line: 915, baseType: !152, size: 64, offset: 640)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1509, file: !365, line: 1071, baseType: !1558, size: 64, offset: 192)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !365, line: 920, baseType: !1560)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !365, line: 918, size: 320, elements: !1561)
!1561 = !{!1562}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1560, file: !365, line: 919, baseType: !1517, size: 320)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1509, file: !365, line: 1075, baseType: !275, size: 32, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1509, file: !365, line: 1077, baseType: !275, size: 32, offset: 288)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1509, file: !365, line: 1078, baseType: !275, size: 32, offset: 320)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1509, file: !365, line: 1079, baseType: !156, size: 16, offset: 352)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1509, file: !365, line: 1082, baseType: !156, size: 16, offset: 368)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1509, file: !365, line: 1085, baseType: !154, size: 8, offset: 384)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1509, file: !365, line: 1086, baseType: !154, size: 8, offset: 392)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1509, file: !365, line: 1087, baseType: !154, size: 8, offset: 400)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1509, file: !365, line: 1088, baseType: !154, size: 8, offset: 408)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1509, file: !365, line: 1090, baseType: !275, size: 32, offset: 416)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1509, file: !365, line: 1093, baseType: !156, size: 16, offset: 448)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1509, file: !365, line: 1096, baseType: !154, size: 8, offset: 464)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1509, file: !365, line: 1098, baseType: !1576, size: 40, offset: 472)
!1576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 40, elements: !1577)
!1577 = !{!1578}
!1578 = !DISubrange(count: 5)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1509, file: !365, line: 1101, baseType: !1580, size: 832, offset: 512)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !365, line: 836, size: 832, elements: !1581)
!1581 = !{!1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1580, file: !365, line: 837, baseType: !1517, size: 320)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1580, file: !365, line: 839, baseType: !156, size: 16, offset: 320)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1580, file: !365, line: 839, baseType: !156, size: 16, offset: 336)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1580, file: !365, line: 842, baseType: !156, size: 16, offset: 352)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1580, file: !365, line: 842, baseType: !156, size: 16, offset: 368)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1580, file: !365, line: 843, baseType: !803, size: 32, offset: 384)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1580, file: !365, line: 845, baseType: !43, size: 32, offset: 416)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1580, file: !365, line: 847, baseType: !152, size: 64, offset: 448)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1580, file: !365, line: 848, baseType: !846, size: 64, offset: 512)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1580, file: !365, line: 849, baseType: !846, size: 64, offset: 576)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1580, file: !365, line: 850, baseType: !846, size: 64, offset: 640)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1580, file: !365, line: 851, baseType: !421, size: 96, offset: 704)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1580, file: !365, line: 852, baseType: !275, size: 32, offset: 800)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1509, file: !365, line: 1104, baseType: !1596, size: 1344, offset: 1344)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !365, line: 867, size: 1344, elements: !1597)
!1597 = !{!1598, !1599, !1600, !1601, !1602, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1596, file: !365, line: 868, baseType: !156, size: 16)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1596, file: !365, line: 869, baseType: !156, size: 16, offset: 16)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1596, file: !365, line: 870, baseType: !156, size: 16, offset: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1596, file: !365, line: 871, baseType: !156, size: 16, offset: 48)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1596, file: !365, line: 873, baseType: !1603, size: 896, offset: 64)
!1603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1604, size: 896, elements: !668)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !365, line: 864, baseType: !1605)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !365, line: 859, size: 128, elements: !1606)
!1606 = !{!1607, !1608, !1609, !1610, !1611, !1612}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1605, file: !365, line: 860, baseType: !156, size: 16)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1605, file: !365, line: 861, baseType: !156, size: 16, offset: 16)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1605, file: !365, line: 861, baseType: !156, size: 16, offset: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1605, file: !365, line: 861, baseType: !156, size: 16, offset: 48)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1605, file: !365, line: 862, baseType: !43, size: 32, offset: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1605, file: !365, line: 863, baseType: !275, size: 32, offset: 96)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1596, file: !365, line: 874, baseType: !152, size: 64, offset: 960)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1596, file: !365, line: 876, baseType: !275, size: 32, offset: 1024)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1596, file: !365, line: 876, baseType: !275, size: 32, offset: 1056)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1596, file: !365, line: 878, baseType: !43, size: 32, offset: 1088)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1596, file: !365, line: 879, baseType: !43, size: 32, offset: 1120)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1596, file: !365, line: 881, baseType: !43, size: 32, offset: 1152)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1596, file: !365, line: 881, baseType: !43, size: 32, offset: 1184)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1596, file: !365, line: 883, baseType: !363, size: 64, offset: 1216)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1596, file: !365, line: 884, baseType: !370, size: 64, offset: 1280)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1509, file: !365, line: 1107, baseType: !275, size: 32, offset: 2688)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1509, file: !365, line: 1110, baseType: !275, size: 32, offset: 2720)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1509, file: !365, line: 1113, baseType: !156, size: 16, offset: 2752)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1509, file: !365, line: 1113, baseType: !156, size: 16, offset: 2768)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1509, file: !365, line: 1116, baseType: !154, size: 8, offset: 2784)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1509, file: !365, line: 1117, baseType: !614, size: 8, offset: 2792)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1509, file: !365, line: 1120, baseType: !156, size: 16, offset: 2800)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1509, file: !365, line: 1121, baseType: !275, size: 32, offset: 2816)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1509, file: !365, line: 1122, baseType: !275, size: 32, offset: 2848)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1509, file: !365, line: 1123, baseType: !275, size: 32, offset: 2880)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1509, file: !365, line: 1124, baseType: !275, size: 32, offset: 2912)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1509, file: !365, line: 1125, baseType: !275, size: 32, offset: 2944)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1509, file: !365, line: 1126, baseType: !275, size: 32, offset: 2976)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1509, file: !365, line: 1127, baseType: !275, size: 32, offset: 3008)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1509, file: !365, line: 1128, baseType: !275, size: 32, offset: 3040)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1509, file: !365, line: 1129, baseType: !275, size: 32, offset: 3072)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1509, file: !365, line: 1130, baseType: !275, size: 32, offset: 3104)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1509, file: !365, line: 1131, baseType: !156, size: 16, offset: 3136)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1509, file: !365, line: 1132, baseType: !154, size: 8, offset: 3152)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1509, file: !365, line: 1133, baseType: !154, size: 8, offset: 3160)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1509, file: !365, line: 1134, baseType: !1498, size: 24, offset: 3168)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1509, file: !365, line: 1135, baseType: !154, size: 8, offset: 3192)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1509, file: !365, line: 1138, baseType: !370, size: 64, offset: 3200)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1509, file: !365, line: 1139, baseType: !154, size: 8, offset: 3264)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1509, file: !365, line: 1140, baseType: !154, size: 8, offset: 3272)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1509, file: !365, line: 1141, baseType: !154, size: 8, offset: 3280)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1509, file: !365, line: 1142, baseType: !154, size: 8, offset: 3288)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1509, file: !365, line: 1143, baseType: !154, size: 8, offset: 3296)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1509, file: !365, line: 1144, baseType: !1651, size: 64, offset: 3304)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 64, elements: !863)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1509, file: !365, line: 1145, baseType: !1651, size: 64, offset: 3368)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1509, file: !365, line: 1148, baseType: !154, size: 8, offset: 3432)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1509, file: !365, line: 1149, baseType: !154, size: 8, offset: 3440)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1509, file: !365, line: 1152, baseType: !154, size: 8, offset: 3448)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1509, file: !365, line: 1152, baseType: !154, size: 8, offset: 3456)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1509, file: !365, line: 1153, baseType: !154, size: 8, offset: 3464)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1509, file: !365, line: 1154, baseType: !156, size: 16, offset: 3472)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1509, file: !365, line: 1154, baseType: !156, size: 16, offset: 3488)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1509, file: !365, line: 1155, baseType: !156, size: 16, offset: 3504)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1509, file: !365, line: 1155, baseType: !156, size: 16, offset: 3520)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1509, file: !365, line: 1156, baseType: !154, size: 8, offset: 3536)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1509, file: !365, line: 1157, baseType: !154, size: 8, offset: 3544)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1509, file: !365, line: 1159, baseType: !154, size: 8, offset: 3552)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1509, file: !365, line: 1160, baseType: !154, size: 8, offset: 3560)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1509, file: !365, line: 1161, baseType: !154, size: 8, offset: 3568)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1509, file: !365, line: 1162, baseType: !154, size: 8, offset: 3576)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1509, file: !365, line: 1165, baseType: !43, size: 32, offset: 3584)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1509, file: !365, line: 1166, baseType: !43, size: 32, offset: 3616)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1509, file: !365, line: 1167, baseType: !43, size: 32, offset: 3648)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1509, file: !365, line: 1168, baseType: !43, size: 32, offset: 3680)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1509, file: !365, line: 1171, baseType: !156, size: 16, offset: 3712)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1509, file: !365, line: 1171, baseType: !156, size: 16, offset: 3728)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1509, file: !365, line: 1172, baseType: !43, size: 32, offset: 3744)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1509, file: !365, line: 1173, baseType: !275, size: 32, offset: 3776)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1509, file: !365, line: 1174, baseType: !275, size: 32, offset: 3808)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1509, file: !365, line: 1177, baseType: !1678, size: 1024, offset: 3840)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !365, line: 963, size: 1024, elements: !1679)
!1679 = !{!1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1703, !1704}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1678, file: !365, line: 965, baseType: !43, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1678, file: !365, line: 968, baseType: !275, size: 32, offset: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1678, file: !365, line: 971, baseType: !275, size: 32, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1678, file: !365, line: 974, baseType: !275, size: 32, offset: 96)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1678, file: !365, line: 977, baseType: !421, size: 96, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1678, file: !365, line: 979, baseType: !421, size: 96, offset: 224)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1678, file: !365, line: 982, baseType: !43, size: 32, offset: 320)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1678, file: !365, line: 987, baseType: !731, size: 64, offset: 352)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1678, file: !365, line: 989, baseType: !275, size: 32, offset: 416)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1678, file: !365, line: 994, baseType: !43, size: 32, offset: 448)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1678, file: !365, line: 995, baseType: !43, size: 32, offset: 480)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1678, file: !365, line: 997, baseType: !154, size: 8, offset: 512)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1678, file: !365, line: 998, baseType: !667, size: 56, offset: 520)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1678, file: !365, line: 1000, baseType: !275, size: 32, offset: 576)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1678, file: !365, line: 1003, baseType: !731, size: 64, offset: 608)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1678, file: !365, line: 1006, baseType: !43, size: 32, offset: 672)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1678, file: !365, line: 1009, baseType: !275, size: 32, offset: 704)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1678, file: !365, line: 1012, baseType: !731, size: 64, offset: 736)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1678, file: !365, line: 1015, baseType: !731, size: 64, offset: 800)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1678, file: !365, line: 1018, baseType: !43, size: 32, offset: 864)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1678, file: !365, line: 1019, baseType: !1701, size: 64, offset: 896)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1702 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !365, line: 63, flags: DIFlagFwdDecl)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1678, file: !365, line: 1023, baseType: !275, size: 32, offset: 960)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1678, file: !365, line: 1024, baseType: !43, size: 32, offset: 992)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1509, file: !365, line: 1179, baseType: !1706, size: 320, offset: 4864)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !365, line: 1043, size: 320, elements: !1707)
!1707 = !{!1708, !1709, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1706, file: !365, line: 1044, baseType: !154, size: 8)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1706, file: !365, line: 1045, baseType: !1710, size: 16, offset: 8)
!1710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 16, elements: !732)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1706, file: !365, line: 1048, baseType: !154, size: 8, offset: 24)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1706, file: !365, line: 1049, baseType: !275, size: 32, offset: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1706, file: !365, line: 1049, baseType: !275, size: 32, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1706, file: !365, line: 1052, baseType: !275, size: 32, offset: 96)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1706, file: !365, line: 1052, baseType: !275, size: 32, offset: 128)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1706, file: !365, line: 1053, baseType: !154, size: 8, offset: 160)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1706, file: !365, line: 1054, baseType: !1498, size: 24, offset: 168)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1706, file: !365, line: 1057, baseType: !275, size: 32, offset: 192)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1706, file: !365, line: 1057, baseType: !275, size: 32, offset: 224)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1706, file: !365, line: 1060, baseType: !275, size: 32, offset: 256)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1706, file: !365, line: 1060, baseType: !275, size: 32, offset: 288)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !364, file: !365, line: 1247, baseType: !1723, size: 64, offset: 2176)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !365, line: 60, flags: DIFlagFwdDecl)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !364, file: !365, line: 1251, baseType: !1726, size: 31872, offset: 2240)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !365, line: 403, size: 31872, elements: !1727)
!1727 = !{!1728, !1803, !1823, !1832, !1852, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1989, !1990, !1991, !1993, !2009, !2010}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1726, file: !365, line: 404, baseType: !1729, size: 1984)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !365, line: 259, size: 1984, elements: !1730)
!1730 = !{!1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1748, !1798}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1729, file: !365, line: 260, baseType: !154, size: 8)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1729, file: !365, line: 263, baseType: !154, size: 8, offset: 8)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1729, file: !365, line: 266, baseType: !154, size: 8, offset: 16)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1729, file: !365, line: 267, baseType: !154, size: 8, offset: 24)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1729, file: !365, line: 269, baseType: !154, size: 8, offset: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1729, file: !365, line: 270, baseType: !154, size: 8, offset: 40)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1729, file: !365, line: 276, baseType: !154, size: 8, offset: 48)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1729, file: !365, line: 279, baseType: !154, size: 8, offset: 56)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1729, file: !365, line: 280, baseType: !156, size: 16, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1729, file: !365, line: 280, baseType: !156, size: 16, offset: 80)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1729, file: !365, line: 281, baseType: !275, size: 32, offset: 96)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1729, file: !365, line: 284, baseType: !154, size: 8, offset: 128)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1729, file: !365, line: 285, baseType: !154, size: 8, offset: 136)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1729, file: !365, line: 287, baseType: !1745, size: 48, offset: 144)
!1745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 48, elements: !1746)
!1746 = !{!1747}
!1747 = !DISubrange(count: 6)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1729, file: !365, line: 290, baseType: !1749, size: 1280, offset: 192)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !895, line: 174, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !895, line: 166, size: 1280, elements: !1751)
!1751 = !{!1752, !1753, !1754, !1755, !1756, !1757, !1758, !1797}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1750, file: !895, line: 167, baseType: !43, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1750, file: !895, line: 167, baseType: !43, size: 32, offset: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1750, file: !895, line: 168, baseType: !209, size: 512, offset: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1750, file: !895, line: 169, baseType: !209, size: 512, offset: 576)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1750, file: !895, line: 170, baseType: !275, size: 32, offset: 1088)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1750, file: !895, line: 171, baseType: !275, size: 32, offset: 1120)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1750, file: !895, line: 172, baseType: !1759, size: 64, offset: 1152)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !895, line: 72, size: 3072, elements: !1761)
!1761 = !{!1762, !1763, !1764, !1765, !1766, !1767, !1768, !1793, !1794, !1795, !1796}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1760, file: !895, line: 73, baseType: !43, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1760, file: !895, line: 73, baseType: !43, size: 32, offset: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1760, file: !895, line: 74, baseType: !43, size: 32, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1760, file: !895, line: 75, baseType: !43, size: 32, offset: 96)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1760, file: !895, line: 77, baseType: !749, size: 128, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1760, file: !895, line: 77, baseType: !749, size: 128, offset: 256)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1760, file: !895, line: 79, baseType: !1769, size: 2304, offset: 384)
!1769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1770, size: 2304, elements: !598)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !895, line: 67, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !895, line: 55, size: 576, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1789, !1790, !1791, !1792}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1771, file: !895, line: 56, baseType: !156, size: 16)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1771, file: !895, line: 56, baseType: !156, size: 16, offset: 16)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1771, file: !895, line: 58, baseType: !275, size: 32, offset: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1771, file: !895, line: 59, baseType: !275, size: 32, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1771, file: !895, line: 59, baseType: !275, size: 32, offset: 96)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1771, file: !895, line: 60, baseType: !731, size: 64, offset: 128)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1771, file: !895, line: 60, baseType: !731, size: 64, offset: 192)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1771, file: !895, line: 61, baseType: !1781, size: 64, offset: 256)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !895, line: 47, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !895, line: 44, size: 96, elements: !1784)
!1784 = !{!1785, !1786, !1787, !1788}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1783, file: !895, line: 45, baseType: !275, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1783, file: !895, line: 45, baseType: !275, size: 32, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1783, file: !895, line: 46, baseType: !156, size: 16, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1783, file: !895, line: 46, baseType: !156, size: 16, offset: 80)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1771, file: !895, line: 62, baseType: !1781, size: 64, offset: 320)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1771, file: !895, line: 64, baseType: !1781, size: 64, offset: 384)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1771, file: !895, line: 65, baseType: !731, size: 64, offset: 448)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1771, file: !895, line: 66, baseType: !731, size: 64, offset: 512)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1760, file: !895, line: 80, baseType: !421, size: 96, offset: 2688)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1760, file: !895, line: 80, baseType: !421, size: 96, offset: 2784)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1760, file: !895, line: 81, baseType: !421, size: 96, offset: 2880)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1760, file: !895, line: 83, baseType: !421, size: 96, offset: 2976)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1750, file: !895, line: 173, baseType: !152, size: 64, offset: 1216)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1729, file: !365, line: 291, baseType: !1799, size: 512, offset: 1472)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !895, line: 178, baseType: !1800)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !895, line: 176, size: 512, elements: !1801)
!1801 = !{!1802}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1800, file: !895, line: 177, baseType: !209, size: 512)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1726, file: !365, line: 406, baseType: !1804, size: 64, offset: 1984)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !365, line: 80, size: 1472, elements: !1806)
!1806 = !{!1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1805, file: !365, line: 81, baseType: !152, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1805, file: !365, line: 82, baseType: !152, size: 64, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1805, file: !365, line: 83, baseType: !5, size: 32, offset: 128)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1805, file: !365, line: 84, baseType: !5, size: 32, offset: 160)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1805, file: !365, line: 86, baseType: !5, size: 32, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1805, file: !365, line: 87, baseType: !5, size: 32, offset: 224)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1805, file: !365, line: 88, baseType: !5, size: 32, offset: 256)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1805, file: !365, line: 89, baseType: !5, size: 32, offset: 288)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1805, file: !365, line: 90, baseType: !5, size: 32, offset: 320)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1805, file: !365, line: 91, baseType: !5, size: 32, offset: 352)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1805, file: !365, line: 92, baseType: !5, size: 32, offset: 384)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1805, file: !365, line: 93, baseType: !5, size: 32, offset: 416)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1805, file: !365, line: 95, baseType: !1820, size: 1024, offset: 448)
!1820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 1024, elements: !1821)
!1821 = !{!1822}
!1822 = !DISubrange(count: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1726, file: !365, line: 407, baseType: !1824, size: 64, offset: 2048)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !365, line: 98, size: 1216, elements: !1826)
!1826 = !{!1827, !1828, !1829, !1830, !1831}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1825, file: !365, line: 100, baseType: !152, size: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1825, file: !365, line: 101, baseType: !152, size: 64, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1825, file: !365, line: 103, baseType: !5, size: 32, offset: 128)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1825, file: !365, line: 104, baseType: !5, size: 32, offset: 160)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1825, file: !365, line: 106, baseType: !1820, size: 1024, offset: 192)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1726, file: !365, line: 408, baseType: !1833, size: 512, offset: 2112)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !365, line: 109, size: 512, elements: !1834)
!1834 = !{!1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1833, file: !365, line: 111, baseType: !43, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1833, file: !365, line: 112, baseType: !43, size: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1833, file: !365, line: 115, baseType: !43, size: 32, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1833, file: !365, line: 116, baseType: !43, size: 32, offset: 96)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1833, file: !365, line: 117, baseType: !43, size: 32, offset: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1833, file: !365, line: 118, baseType: !43, size: 32, offset: 160)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1833, file: !365, line: 119, baseType: !43, size: 32, offset: 192)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1833, file: !365, line: 120, baseType: !43, size: 32, offset: 224)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1833, file: !365, line: 121, baseType: !43, size: 32, offset: 256)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1833, file: !365, line: 122, baseType: !43, size: 32, offset: 288)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1833, file: !365, line: 125, baseType: !43, size: 32, offset: 320)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1833, file: !365, line: 126, baseType: !43, size: 32, offset: 352)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1833, file: !365, line: 127, baseType: !156, size: 16, offset: 384)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1833, file: !365, line: 128, baseType: !156, size: 16, offset: 400)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1833, file: !365, line: 129, baseType: !43, size: 32, offset: 416)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1833, file: !365, line: 130, baseType: !43, size: 32, offset: 448)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1833, file: !365, line: 131, baseType: !43, size: 32, offset: 480)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1726, file: !365, line: 409, baseType: !1853, size: 576, offset: 2624)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !365, line: 134, size: 576, elements: !1854)
!1854 = !{!1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1853, file: !365, line: 135, baseType: !43, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1853, file: !365, line: 136, baseType: !43, size: 32, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1853, file: !365, line: 137, baseType: !43, size: 32, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1853, file: !365, line: 138, baseType: !43, size: 32, offset: 96)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1853, file: !365, line: 139, baseType: !43, size: 32, offset: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1853, file: !365, line: 140, baseType: !43, size: 32, offset: 160)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1853, file: !365, line: 141, baseType: !43, size: 32, offset: 192)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1853, file: !365, line: 142, baseType: !43, size: 32, offset: 224)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1853, file: !365, line: 143, baseType: !275, size: 32, offset: 256)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1853, file: !365, line: 144, baseType: !43, size: 32, offset: 288)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1853, file: !365, line: 145, baseType: !43, size: 32, offset: 320)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1853, file: !365, line: 147, baseType: !43, size: 32, offset: 352)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1853, file: !365, line: 148, baseType: !43, size: 32, offset: 384)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1853, file: !365, line: 149, baseType: !43, size: 32, offset: 416)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1853, file: !365, line: 150, baseType: !43, size: 32, offset: 448)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1853, file: !365, line: 151, baseType: !43, size: 32, offset: 480)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1853, file: !365, line: 152, baseType: !198, size: 64, offset: 512)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1726, file: !365, line: 411, baseType: !43, size: 32, offset: 3200)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1726, file: !365, line: 411, baseType: !43, size: 32, offset: 3232)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1726, file: !365, line: 411, baseType: !43, size: 32, offset: 3264)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1726, file: !365, line: 412, baseType: !275, size: 32, offset: 3296)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1726, file: !365, line: 413, baseType: !43, size: 32, offset: 3328)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1726, file: !365, line: 413, baseType: !43, size: 32, offset: 3360)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1726, file: !365, line: 415, baseType: !43, size: 32, offset: 3392)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1726, file: !365, line: 415, baseType: !43, size: 32, offset: 3424)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1726, file: !365, line: 416, baseType: !156, size: 16, offset: 3456)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1726, file: !365, line: 416, baseType: !156, size: 16, offset: 3472)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1726, file: !365, line: 418, baseType: !275, size: 32, offset: 3488)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1726, file: !365, line: 418, baseType: !275, size: 32, offset: 3520)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1726, file: !365, line: 421, baseType: !275, size: 32, offset: 3552)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1726, file: !365, line: 421, baseType: !275, size: 32, offset: 3584)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1726, file: !365, line: 421, baseType: !275, size: 32, offset: 3616)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1726, file: !365, line: 425, baseType: !156, size: 16, offset: 3648)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1726, file: !365, line: 425, baseType: !156, size: 16, offset: 3664)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1726, file: !365, line: 425, baseType: !156, size: 16, offset: 3680)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1726, file: !365, line: 426, baseType: !156, size: 16, offset: 3696)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1726, file: !365, line: 428, baseType: !156, size: 16, offset: 3712)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1726, file: !365, line: 428, baseType: !156, size: 16, offset: 3728)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1726, file: !365, line: 431, baseType: !43, size: 32, offset: 3744)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1726, file: !365, line: 433, baseType: !156, size: 16, offset: 3776)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1726, file: !365, line: 435, baseType: !156, size: 16, offset: 3792)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1726, file: !365, line: 437, baseType: !156, size: 16, offset: 3808)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1726, file: !365, line: 439, baseType: !156, size: 16, offset: 3824)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1726, file: !365, line: 441, baseType: !156, size: 16, offset: 3840)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1726, file: !365, line: 443, baseType: !156, size: 16, offset: 3856)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1726, file: !365, line: 449, baseType: !43, size: 32, offset: 3872)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1726, file: !365, line: 453, baseType: !43, size: 32, offset: 3904)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1726, file: !365, line: 458, baseType: !156, size: 16, offset: 3936)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1726, file: !365, line: 462, baseType: !156, size: 16, offset: 3952)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1726, file: !365, line: 467, baseType: !43, size: 32, offset: 3968)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1726, file: !365, line: 467, baseType: !43, size: 32, offset: 4000)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1726, file: !365, line: 469, baseType: !156, size: 16, offset: 4032)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1726, file: !365, line: 469, baseType: !156, size: 16, offset: 4048)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1726, file: !365, line: 469, baseType: !156, size: 16, offset: 4064)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1726, file: !365, line: 469, baseType: !156, size: 16, offset: 4080)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1726, file: !365, line: 474, baseType: !156, size: 16, offset: 4096)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1726, file: !365, line: 475, baseType: !154, size: 8, offset: 4112)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1726, file: !365, line: 476, baseType: !154, size: 8, offset: 4120)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1726, file: !365, line: 481, baseType: !43, size: 32, offset: 4128)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1726, file: !365, line: 486, baseType: !43, size: 32, offset: 4160)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1726, file: !365, line: 491, baseType: !43, size: 32, offset: 4192)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1726, file: !365, line: 496, baseType: !156, size: 16, offset: 4224)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1726, file: !365, line: 498, baseType: !156, size: 16, offset: 4240)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1726, file: !365, line: 501, baseType: !156, size: 16, offset: 4256)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1726, file: !365, line: 502, baseType: !156, size: 16, offset: 4272)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1726, file: !365, line: 508, baseType: !156, size: 16, offset: 4288)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1726, file: !365, line: 513, baseType: !156, size: 16, offset: 4304)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1726, file: !365, line: 515, baseType: !156, size: 16, offset: 4320)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1726, file: !365, line: 515, baseType: !156, size: 16, offset: 4336)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1726, file: !365, line: 519, baseType: !749, size: 128, offset: 4352)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1726, file: !365, line: 519, baseType: !749, size: 128, offset: 4480)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1726, file: !365, line: 520, baseType: !1927, size: 128, offset: 4608)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !750, line: 89, baseType: !1928)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !750, line: 86, size: 128, elements: !1929)
!1929 = !{!1930, !1931, !1932, !1933}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1928, file: !750, line: 87, baseType: !43, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1928, file: !750, line: 87, baseType: !43, size: 32, offset: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1928, file: !750, line: 88, baseType: !43, size: 32, offset: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1928, file: !750, line: 88, baseType: !43, size: 32, offset: 96)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1726, file: !365, line: 523, baseType: !219, size: 128, offset: 4736)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1726, file: !365, line: 524, baseType: !156, size: 16, offset: 4864)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1726, file: !365, line: 527, baseType: !156, size: 16, offset: 4880)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1726, file: !365, line: 532, baseType: !275, size: 32, offset: 4896)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1726, file: !365, line: 532, baseType: !275, size: 32, offset: 4928)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1726, file: !365, line: 534, baseType: !275, size: 32, offset: 4960)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1726, file: !365, line: 538, baseType: !275, size: 32, offset: 4992)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1726, file: !365, line: 542, baseType: !43, size: 32, offset: 5024)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1726, file: !365, line: 545, baseType: !275, size: 32, offset: 5056)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1726, file: !365, line: 545, baseType: !275, size: 32, offset: 5088)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1726, file: !365, line: 545, baseType: !275, size: 32, offset: 5120)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1726, file: !365, line: 548, baseType: !275, size: 32, offset: 5152)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1726, file: !365, line: 551, baseType: !156, size: 16, offset: 5184)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1726, file: !365, line: 551, baseType: !156, size: 16, offset: 5200)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1726, file: !365, line: 551, baseType: !156, size: 16, offset: 5216)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1726, file: !365, line: 551, baseType: !156, size: 16, offset: 5232)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1726, file: !365, line: 552, baseType: !156, size: 16, offset: 5248)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1726, file: !365, line: 552, baseType: !156, size: 16, offset: 5264)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1726, file: !365, line: 553, baseType: !275, size: 32, offset: 5280)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1726, file: !365, line: 553, baseType: !275, size: 32, offset: 5312)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1726, file: !365, line: 554, baseType: !156, size: 16, offset: 5344)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1726, file: !365, line: 554, baseType: !156, size: 16, offset: 5360)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1726, file: !365, line: 555, baseType: !275, size: 32, offset: 5376)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1726, file: !365, line: 555, baseType: !275, size: 32, offset: 5408)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1726, file: !365, line: 558, baseType: !181, size: 8192, offset: 5440)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1726, file: !365, line: 561, baseType: !43, size: 32, offset: 13632)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1726, file: !365, line: 562, baseType: !156, size: 16, offset: 13664)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1726, file: !365, line: 562, baseType: !156, size: 16, offset: 13680)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1726, file: !365, line: 565, baseType: !1222, size: 6144, offset: 13696)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1726, file: !365, line: 568, baseType: !597, size: 128, offset: 19840)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1726, file: !365, line: 569, baseType: !597, size: 128, offset: 19968)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1726, file: !365, line: 572, baseType: !154, size: 8, offset: 20096)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1726, file: !365, line: 573, baseType: !154, size: 8, offset: 20104)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1726, file: !365, line: 574, baseType: !154, size: 8, offset: 20112)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1726, file: !365, line: 575, baseType: !1576, size: 40, offset: 20120)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1726, file: !365, line: 578, baseType: !43, size: 32, offset: 20160)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1726, file: !365, line: 579, baseType: !156, size: 16, offset: 20192)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1726, file: !365, line: 580, baseType: !156, size: 16, offset: 20208)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1726, file: !365, line: 581, baseType: !275, size: 32, offset: 20224)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1726, file: !365, line: 582, baseType: !275, size: 32, offset: 20256)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1726, file: !365, line: 585, baseType: !156, size: 16, offset: 20288)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1726, file: !365, line: 585, baseType: !156, size: 16, offset: 20304)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1726, file: !365, line: 586, baseType: !275, size: 32, offset: 20320)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1726, file: !365, line: 589, baseType: !156, size: 16, offset: 20352)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1726, file: !365, line: 589, baseType: !156, size: 16, offset: 20368)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1726, file: !365, line: 590, baseType: !43, size: 32, offset: 20384)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1726, file: !365, line: 593, baseType: !156, size: 16, offset: 20416)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1726, file: !365, line: 593, baseType: !156, size: 16, offset: 20432)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1726, file: !365, line: 594, baseType: !156, size: 16, offset: 20448)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1726, file: !365, line: 594, baseType: !156, size: 16, offset: 20464)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1726, file: !365, line: 595, baseType: !275, size: 32, offset: 20480)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1726, file: !365, line: 596, baseType: !275, size: 32, offset: 20512)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1726, file: !365, line: 597, baseType: !1987, size: 64, offset: 20544)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !17, line: 205, flags: DIFlagFwdDecl)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1726, file: !365, line: 600, baseType: !43, size: 32, offset: 20608)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1726, file: !365, line: 601, baseType: !275, size: 32, offset: 20640)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1726, file: !365, line: 604, baseType: !1992, size: 256, offset: 20672)
!1992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 256, elements: !628)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1726, file: !365, line: 607, baseType: !1994, size: 10880, offset: 20928)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !365, line: 364, size: 10880, elements: !1995)
!1995 = !{!1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1994, file: !365, line: 365, baseType: !1729, size: 1984)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1994, file: !365, line: 367, baseType: !181, size: 8192, offset: 1984)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1994, file: !365, line: 369, baseType: !156, size: 16, offset: 10176)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1994, file: !365, line: 369, baseType: !156, size: 16, offset: 10192)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1994, file: !365, line: 370, baseType: !156, size: 16, offset: 10208)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1994, file: !365, line: 370, baseType: !156, size: 16, offset: 10224)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1994, file: !365, line: 372, baseType: !275, size: 32, offset: 10240)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1994, file: !365, line: 373, baseType: !275, size: 32, offset: 10272)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1994, file: !365, line: 375, baseType: !1498, size: 24, offset: 10304)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1994, file: !365, line: 376, baseType: !154, size: 8, offset: 10328)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1994, file: !365, line: 378, baseType: !154, size: 8, offset: 10336)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1994, file: !365, line: 379, baseType: !1498, size: 24, offset: 10344)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1994, file: !365, line: 381, baseType: !209, size: 512, offset: 10368)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1726, file: !365, line: 609, baseType: !43, size: 32, offset: 31808)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1726, file: !365, line: 610, baseType: !43, size: 32, offset: 31840)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !364, file: !365, line: 1252, baseType: !2012, size: 256, offset: 34112)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !365, line: 158, size: 256, elements: !2013)
!2013 = !{!2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2012, file: !365, line: 159, baseType: !43, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2012, file: !365, line: 160, baseType: !275, size: 32, offset: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2012, file: !365, line: 161, baseType: !275, size: 32, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2012, file: !365, line: 162, baseType: !275, size: 32, offset: 96)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2012, file: !365, line: 163, baseType: !43, size: 32, offset: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2012, file: !365, line: 164, baseType: !156, size: 16, offset: 160)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2012, file: !365, line: 165, baseType: !156, size: 16, offset: 176)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2012, file: !365, line: 166, baseType: !275, size: 32, offset: 192)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2012, file: !365, line: 167, baseType: !275, size: 32, offset: 224)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !364, file: !365, line: 1254, baseType: !219, size: 128, offset: 34368)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !364, file: !365, line: 1255, baseType: !219, size: 128, offset: 34496)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !364, file: !365, line: 1257, baseType: !152, size: 64, offset: 34624)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !364, file: !365, line: 1258, baseType: !152, size: 64, offset: 34688)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !364, file: !365, line: 1259, baseType: !152, size: 64, offset: 34752)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !364, file: !365, line: 1260, baseType: !152, size: 64, offset: 34816)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !364, file: !365, line: 1262, baseType: !152, size: 64, offset: 34880)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !364, file: !365, line: 1265, baseType: !2031, size: 64, offset: 34944)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !365, line: 1265, flags: DIFlagFwdDecl)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !364, file: !365, line: 1266, baseType: !156, size: 16, offset: 35008)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !364, file: !365, line: 1267, baseType: !156, size: 16, offset: 35024)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !364, file: !365, line: 1270, baseType: !43, size: 32, offset: 35040)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !364, file: !365, line: 1271, baseType: !219, size: 128, offset: 35072)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !364, file: !365, line: 1274, baseType: !2038, size: 128, offset: 35200)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !365, line: 650, size: 128, elements: !2039)
!2039 = !{!2040, !2041, !2042, !2043, !2044}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2038, file: !365, line: 651, baseType: !421, size: 96)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2038, file: !365, line: 652, baseType: !154, size: 8, offset: 96)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2038, file: !365, line: 652, baseType: !154, size: 8, offset: 104)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2038, file: !365, line: 652, baseType: !154, size: 8, offset: 112)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2038, file: !365, line: 652, baseType: !154, size: 8, offset: 120)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !364, file: !365, line: 1275, baseType: !2046, size: 1472, offset: 35328)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !365, line: 676, size: 1472, elements: !2047)
!2047 = !{!2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2069, !2070, !2071, !2072, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2046, file: !365, line: 679, baseType: !2038, size: 128)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2046, file: !365, line: 680, baseType: !156, size: 16, offset: 128)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2046, file: !365, line: 680, baseType: !156, size: 16, offset: 144)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2046, file: !365, line: 680, baseType: !156, size: 16, offset: 160)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2046, file: !365, line: 680, baseType: !156, size: 16, offset: 176)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2046, file: !365, line: 681, baseType: !156, size: 16, offset: 192)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2046, file: !365, line: 681, baseType: !156, size: 16, offset: 208)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2046, file: !365, line: 681, baseType: !156, size: 16, offset: 224)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2046, file: !365, line: 681, baseType: !156, size: 16, offset: 240)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2046, file: !365, line: 682, baseType: !156, size: 16, offset: 256)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2046, file: !365, line: 682, baseType: !840, size: 48, offset: 272)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2046, file: !365, line: 685, baseType: !2060, size: 192, offset: 320)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !365, line: 633, size: 192, elements: !2061)
!2061 = !{!2062, !2063, !2064, !2065, !2066, !2067, !2068}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2060, file: !365, line: 634, baseType: !156, size: 16)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2060, file: !365, line: 634, baseType: !156, size: 16, offset: 16)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2060, file: !365, line: 635, baseType: !156, size: 16, offset: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2060, file: !365, line: 635, baseType: !156, size: 16, offset: 48)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2060, file: !365, line: 636, baseType: !275, size: 32, offset: 64)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2060, file: !365, line: 636, baseType: !275, size: 32, offset: 96)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2060, file: !365, line: 637, baseType: !1987, size: 64, offset: 128)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2046, file: !365, line: 686, baseType: !156, size: 16, offset: 512)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2046, file: !365, line: 686, baseType: !156, size: 16, offset: 528)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2046, file: !365, line: 687, baseType: !275, size: 32, offset: 544)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2046, file: !365, line: 688, baseType: !2073, size: 448, offset: 576)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !365, line: 674, baseType: !2074)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !365, line: 659, size: 448, elements: !2075)
!2075 = !{!2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2074, file: !365, line: 660, baseType: !275, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2074, file: !365, line: 661, baseType: !275, size: 32, offset: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2074, file: !365, line: 662, baseType: !275, size: 32, offset: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2074, file: !365, line: 663, baseType: !275, size: 32, offset: 96)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2074, file: !365, line: 664, baseType: !275, size: 32, offset: 128)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2074, file: !365, line: 665, baseType: !275, size: 32, offset: 160)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2074, file: !365, line: 666, baseType: !275, size: 32, offset: 192)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2074, file: !365, line: 667, baseType: !275, size: 32, offset: 224)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2074, file: !365, line: 668, baseType: !275, size: 32, offset: 256)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2074, file: !365, line: 669, baseType: !275, size: 32, offset: 288)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2074, file: !365, line: 670, baseType: !43, size: 32, offset: 320)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2074, file: !365, line: 671, baseType: !275, size: 32, offset: 352)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2074, file: !365, line: 672, baseType: !275, size: 32, offset: 384)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2074, file: !365, line: 673, baseType: !156, size: 16, offset: 416)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2074, file: !365, line: 673, baseType: !156, size: 16, offset: 432)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2046, file: !365, line: 692, baseType: !275, size: 32, offset: 1024)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2046, file: !365, line: 697, baseType: !275, size: 32, offset: 1056)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2046, file: !365, line: 703, baseType: !43, size: 32, offset: 1088)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2046, file: !365, line: 704, baseType: !156, size: 16, offset: 1120)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2046, file: !365, line: 704, baseType: !156, size: 16, offset: 1136)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2046, file: !365, line: 705, baseType: !156, size: 16, offset: 1152)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2046, file: !365, line: 706, baseType: !156, size: 16, offset: 1168)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2046, file: !365, line: 707, baseType: !156, size: 16, offset: 1184)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2046, file: !365, line: 708, baseType: !156, size: 16, offset: 1200)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2046, file: !365, line: 709, baseType: !156, size: 16, offset: 1216)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2046, file: !365, line: 709, baseType: !156, size: 16, offset: 1232)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2046, file: !365, line: 709, baseType: !156, size: 16, offset: 1248)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2046, file: !365, line: 709, baseType: !156, size: 16, offset: 1264)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2046, file: !365, line: 710, baseType: !156, size: 16, offset: 1280)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2046, file: !365, line: 711, baseType: !156, size: 16, offset: 1296)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2046, file: !365, line: 712, baseType: !275, size: 32, offset: 1312)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2046, file: !365, line: 713, baseType: !275, size: 32, offset: 1344)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2046, file: !365, line: 713, baseType: !275, size: 32, offset: 1376)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2046, file: !365, line: 713, baseType: !275, size: 32, offset: 1408)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2046, file: !365, line: 713, baseType: !275, size: 32, offset: 1440)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !364, file: !365, line: 1278, baseType: !2112, size: 64, offset: 36800)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !365, line: 1197, size: 64, elements: !2113)
!2113 = !{!2114, !2115, !2116, !2117}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2112, file: !365, line: 1199, baseType: !275, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2112, file: !365, line: 1200, baseType: !154, size: 8, offset: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2112, file: !365, line: 1201, baseType: !154, size: 8, offset: 40)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2112, file: !365, line: 1202, baseType: !156, size: 16, offset: 48)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !364, file: !365, line: 1281, baseType: !452, size: 64, offset: 36864)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !364, file: !365, line: 1284, baseType: !2120, size: 192, offset: 36928)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !365, line: 1208, size: 192, elements: !2121)
!2121 = !{!2122, !2123, !2124, !2125}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2120, file: !365, line: 1209, baseType: !421, size: 96)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2120, file: !365, line: 1210, baseType: !43, size: 32, offset: 96)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2120, file: !365, line: 1210, baseType: !43, size: 32, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2120, file: !365, line: 1210, baseType: !43, size: 32, offset: 160)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !364, file: !365, line: 1287, baseType: !1268, size: 64, offset: 37120)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !364, file: !365, line: 1289, baseType: !1018, size: 64, offset: 37184)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !364, file: !365, line: 1290, baseType: !1018, size: 64, offset: 37248)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !364, file: !365, line: 1293, baseType: !1749, size: 1280, offset: 37312)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !364, file: !365, line: 1294, baseType: !1799, size: 512, offset: 38592)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !364, file: !365, line: 1295, baseType: !894, size: 512, offset: 39104)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !364, file: !365, line: 1298, baseType: !2133, size: 64, offset: 39616)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !365, line: 1298, flags: DIFlagFwdDecl)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !359, file: !360, line: 53, baseType: !43, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !359, file: !360, line: 54, baseType: !43, size: 32, offset: 96)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !359, file: !360, line: 55, baseType: !43, size: 32, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !359, file: !360, line: 55, baseType: !43, size: 32, offset: 160)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !359, file: !360, line: 56, baseType: !154, size: 8, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !359, file: !360, line: 56, baseType: !154, size: 8, offset: 200)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !359, file: !360, line: 57, baseType: !154, size: 8, offset: 208)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !359, file: !360, line: 57, baseType: !154, size: 8, offset: 216)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !359, file: !360, line: 59, baseType: !156, size: 16, offset: 224)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !359, file: !360, line: 59, baseType: !156, size: 16, offset: 240)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !359, file: !360, line: 59, baseType: !156, size: 16, offset: 256)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !359, file: !360, line: 61, baseType: !156, size: 16, offset: 272)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !359, file: !360, line: 63, baseType: !43, size: 32, offset: 288)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !304, file: !303, line: 248, baseType: !716, size: 64, offset: 2688)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !304, file: !303, line: 249, baseType: !391, size: 64, offset: 2752)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !304, file: !303, line: 250, baseType: !846, size: 64, offset: 2816)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !304, file: !303, line: 251, baseType: !605, size: 64, offset: 2880)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !304, file: !303, line: 252, baseType: !2153, size: 64, offset: 2944)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !303, line: 122, size: 1600, elements: !2155)
!2155 = !{!2156, !2157, !2158, !2162, !2163, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2154, file: !303, line: 123, baseType: !370, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2154, file: !303, line: 124, baseType: !846, size: 64, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !2154, file: !303, line: 125, baseType: !2159, size: 384, offset: 128)
!2159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2160, size: 384, elements: !1746)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2161 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !895, line: 136, flags: DIFlagFwdDecl)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2154, file: !303, line: 126, baseType: !929, size: 512, offset: 512)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !2154, file: !303, line: 127, baseType: !2164, size: 288, offset: 1024)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 288, elements: !2165)
!2165 = !{!401, !401}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2154, file: !303, line: 128, baseType: !156, size: 16, offset: 1312)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2154, file: !303, line: 128, baseType: !156, size: 16, offset: 1328)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2154, file: !303, line: 129, baseType: !275, size: 32, offset: 1344)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2154, file: !303, line: 129, baseType: !275, size: 32, offset: 1376)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !2154, file: !303, line: 130, baseType: !275, size: 32, offset: 1408)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !2154, file: !303, line: 131, baseType: !5, size: 32, offset: 1440)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !2154, file: !303, line: 132, baseType: !156, size: 16, offset: 1472)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2154, file: !303, line: 132, baseType: !156, size: 16, offset: 1488)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2154, file: !303, line: 133, baseType: !43, size: 32, offset: 1504)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2154, file: !303, line: 133, baseType: !43, size: 32, offset: 1536)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2154, file: !303, line: 134, baseType: !156, size: 16, offset: 1568)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2154, file: !303, line: 134, baseType: !156, size: 16, offset: 1584)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !304, file: !303, line: 253, baseType: !796, size: 64, offset: 3008)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !304, file: !303, line: 254, baseType: !2180, size: 64, offset: 3072)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !303, line: 137, size: 832, elements: !2182)
!2182 = !{!2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2181, file: !303, line: 138, baseType: !156, size: 16)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2181, file: !303, line: 140, baseType: !156, size: 16, offset: 16)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !2181, file: !303, line: 141, baseType: !275, size: 32, offset: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2181, file: !303, line: 142, baseType: !275, size: 32, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2181, file: !303, line: 143, baseType: !156, size: 16, offset: 96)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !2181, file: !303, line: 144, baseType: !156, size: 16, offset: 112)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !2181, file: !303, line: 145, baseType: !43, size: 32, offset: 128)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !2181, file: !303, line: 147, baseType: !43, size: 32, offset: 160)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2181, file: !303, line: 149, baseType: !370, size: 64, offset: 192)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2181, file: !303, line: 150, baseType: !43, size: 32, offset: 256)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !2181, file: !303, line: 151, baseType: !156, size: 16, offset: 288)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !2181, file: !303, line: 152, baseType: !156, size: 16, offset: 304)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !2181, file: !303, line: 154, baseType: !152, size: 64, offset: 320)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !2181, file: !303, line: 155, baseType: !1125, size: 64, offset: 384)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !2181, file: !303, line: 157, baseType: !275, size: 32, offset: 448)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !2181, file: !303, line: 158, baseType: !156, size: 16, offset: 480)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !2181, file: !303, line: 159, baseType: !156, size: 16, offset: 496)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !2181, file: !303, line: 160, baseType: !156, size: 16, offset: 512)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !2181, file: !303, line: 161, baseType: !840, size: 48, offset: 528)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !2181, file: !303, line: 162, baseType: !275, size: 32, offset: 576)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !2181, file: !303, line: 164, baseType: !275, size: 32, offset: 608)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !2181, file: !303, line: 164, baseType: !275, size: 32, offset: 640)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !2181, file: !303, line: 164, baseType: !275, size: 32, offset: 672)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2181, file: !303, line: 165, baseType: !605, size: 64, offset: 704)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !2181, file: !303, line: 167, baseType: !1759, size: 64, offset: 768)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !304, file: !303, line: 255, baseType: !2209, size: 64, offset: 3136)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !303, line: 170, size: 8704, elements: !2211)
!2211 = !{!2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !2210, file: !303, line: 171, baseType: !1550, size: 96)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !2210, file: !303, line: 172, baseType: !43, size: 32, offset: 96)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !2210, file: !303, line: 173, baseType: !156, size: 16, offset: 128)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2210, file: !303, line: 174, baseType: !156, size: 16, offset: 144)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2210, file: !303, line: 175, baseType: !156, size: 16, offset: 160)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !2210, file: !303, line: 176, baseType: !156, size: 16, offset: 176)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !2210, file: !303, line: 177, baseType: !156, size: 16, offset: 192)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2210, file: !303, line: 178, baseType: !156, size: 16, offset: 208)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2210, file: !303, line: 179, baseType: !43, size: 32, offset: 224)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2210, file: !303, line: 181, baseType: !370, size: 64, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !2210, file: !303, line: 182, baseType: !275, size: 32, offset: 320)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !2210, file: !303, line: 183, baseType: !43, size: 32, offset: 352)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !2210, file: !303, line: 184, baseType: !181, size: 8192, offset: 384)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !2210, file: !303, line: 187, baseType: !1125, size: 64, offset: 8576)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !2210, file: !303, line: 188, baseType: !43, size: 32, offset: 8640)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2210, file: !303, line: 189, baseType: !43, size: 32, offset: 8672)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !304, file: !303, line: 256, baseType: !2229, size: 64, offset: 3200)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !303, line: 193, size: 640, elements: !2231)
!2231 = !{!2232, !2233, !2234, !2235}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2230, file: !303, line: 194, baseType: !370, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !2230, file: !303, line: 195, baseType: !209, size: 512, offset: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2230, file: !303, line: 197, baseType: !43, size: 32, offset: 576)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2230, file: !303, line: 198, baseType: !43, size: 32, offset: 608)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !304, file: !303, line: 258, baseType: !154, size: 8, offset: 3264)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !304, file: !303, line: 259, baseType: !667, size: 56, offset: 3272)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lamp", file: !2240, line: 113, baseType: !2241)
!2240 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lamp_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lamp", file: !2240, line: 48, size: 4160, elements: !2242)
!2242 = !{!2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2317, !2318}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2241, file: !2240, line: 49, baseType: !162, size: 960)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2241, file: !2240, line: 50, baseType: !308, size: 64, offset: 960)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2241, file: !2240, line: 52, baseType: !156, size: 16, offset: 1024)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2241, file: !2240, line: 52, baseType: !156, size: 16, offset: 1040)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2241, file: !2240, line: 53, baseType: !43, size: 32, offset: 1056)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !2241, file: !2240, line: 55, baseType: !156, size: 16, offset: 1088)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !2241, file: !2240, line: 55, baseType: !156, size: 16, offset: 1104)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2241, file: !2240, line: 56, baseType: !275, size: 32, offset: 1120)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2241, file: !2240, line: 56, baseType: !275, size: 32, offset: 1152)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2241, file: !2240, line: 56, baseType: !275, size: 32, offset: 1184)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !2241, file: !2240, line: 56, baseType: !275, size: 32, offset: 1216)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !2241, file: !2240, line: 57, baseType: !275, size: 32, offset: 1248)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !2241, file: !2240, line: 57, baseType: !275, size: 32, offset: 1280)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !2241, file: !2240, line: 57, baseType: !275, size: 32, offset: 1312)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "shdwpad", scope: !2241, file: !2240, line: 57, baseType: !275, size: 32, offset: 1344)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !2241, file: !2240, line: 59, baseType: !275, size: 32, offset: 1376)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2241, file: !2240, line: 59, baseType: !275, size: 32, offset: 1408)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "spotsize", scope: !2241, file: !2240, line: 59, baseType: !275, size: 32, offset: 1440)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "spotblend", scope: !2241, file: !2240, line: 59, baseType: !275, size: 32, offset: 1472)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !2241, file: !2240, line: 60, baseType: !275, size: 32, offset: 1504)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "att1", scope: !2241, file: !2240, line: 63, baseType: !275, size: 32, offset: 1536)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "att2", scope: !2241, file: !2240, line: 63, baseType: !275, size: 32, offset: 1568)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !2241, file: !2240, line: 64, baseType: !1759, size: 64, offset: 1600)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2241, file: !2240, line: 65, baseType: !156, size: 16, offset: 1664)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2241, file: !2240, line: 66, baseType: !156, size: 16, offset: 1680)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2241, file: !2240, line: 68, baseType: !275, size: 32, offset: 1696)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2241, file: !2240, line: 68, baseType: !275, size: 32, offset: 1728)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !2241, file: !2240, line: 69, baseType: !275, size: 32, offset: 1760)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2241, file: !2240, line: 69, baseType: !275, size: 32, offset: 1792)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !2241, file: !2240, line: 69, baseType: !275, size: 32, offset: 1824)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "bleedbias", scope: !2241, file: !2240, line: 69, baseType: !275, size: 32, offset: 1856)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2241, file: !2240, line: 69, baseType: !275, size: 32, offset: 1888)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !2241, file: !2240, line: 70, baseType: !156, size: 16, offset: 1920)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !2241, file: !2240, line: 70, baseType: !156, size: 16, offset: 1936)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !2241, file: !2240, line: 70, baseType: !156, size: 16, offset: 1952)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2241, file: !2240, line: 70, baseType: !156, size: 16, offset: 1968)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !2241, file: !2240, line: 71, baseType: !154, size: 8, offset: 1984)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !2241, file: !2240, line: 71, baseType: !154, size: 8, offset: 1992)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !2241, file: !2240, line: 73, baseType: !156, size: 16, offset: 2000)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !2241, file: !2240, line: 73, baseType: !156, size: 16, offset: 2016)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !2241, file: !2240, line: 73, baseType: !156, size: 16, offset: 2032)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !2241, file: !2240, line: 74, baseType: !156, size: 16, offset: 2048)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !2241, file: !2240, line: 75, baseType: !156, size: 16, offset: 2064)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !2241, file: !2240, line: 76, baseType: !275, size: 32, offset: 2080)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !2241, file: !2240, line: 76, baseType: !275, size: 32, offset: 2112)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !2241, file: !2240, line: 76, baseType: !275, size: 32, offset: 2144)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !2241, file: !2240, line: 77, baseType: !275, size: 32, offset: 2176)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !2241, file: !2240, line: 78, baseType: !156, size: 16, offset: 2208)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "shadowmap_type", scope: !2241, file: !2240, line: 79, baseType: !156, size: 16, offset: 2224)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !2241, file: !2240, line: 82, baseType: !156, size: 16, offset: 2240)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !2241, file: !2240, line: 82, baseType: !156, size: 16, offset: 2256)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "sun_effect_type", scope: !2241, file: !2240, line: 85, baseType: !156, size: 16, offset: 2272)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !2241, file: !2240, line: 86, baseType: !156, size: 16, offset: 2288)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !2241, file: !2240, line: 87, baseType: !275, size: 32, offset: 2304)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !2241, file: !2240, line: 88, baseType: !275, size: 32, offset: 2336)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !2241, file: !2240, line: 89, baseType: !275, size: 32, offset: 2368)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !2241, file: !2240, line: 90, baseType: !275, size: 32, offset: 2400)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !2241, file: !2240, line: 91, baseType: !275, size: 32, offset: 2432)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "sun_intensity", scope: !2241, file: !2240, line: 92, baseType: !275, size: 32, offset: 2464)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "atm_turbidity", scope: !2241, file: !2240, line: 93, baseType: !275, size: 32, offset: 2496)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "atm_inscattering_factor", scope: !2241, file: !2240, line: 94, baseType: !275, size: 32, offset: 2528)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "atm_extinction_factor", scope: !2241, file: !2240, line: 95, baseType: !275, size: 32, offset: 2560)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "atm_distance_factor", scope: !2241, file: !2240, line: 96, baseType: !275, size: 32, offset: 2592)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !2241, file: !2240, line: 97, baseType: !275, size: 32, offset: 2624)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !2241, file: !2240, line: 98, baseType: !275, size: 32, offset: 2656)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "shadow_frustum_size", scope: !2241, file: !2240, line: 99, baseType: !275, size: 32, offset: 2688)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !2241, file: !2240, line: 100, baseType: !156, size: 16, offset: 2720)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2241, file: !2240, line: 101, baseType: !1710, size: 16, offset: 2736)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2241, file: !2240, line: 103, baseType: !391, size: 64, offset: 2752)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2241, file: !2240, line: 104, baseType: !640, size: 1152, offset: 2816)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !2241, file: !2240, line: 105, baseType: !156, size: 16, offset: 3968)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2241, file: !2240, line: 105, baseType: !156, size: 16, offset: 3984)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2241, file: !2240, line: 106, baseType: !2316, size: 32, offset: 4000)
!2316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 32, elements: !598)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2241, file: !2240, line: 109, baseType: !796, size: 64, offset: 4032)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2241, file: !2240, line: 112, baseType: !716, size: 64, offset: 4096)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !481, line: 203, baseType: !480)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !1055, line: 131, baseType: !1054)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !365, line: 1299, baseType: !364)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !372, line: 295, baseType: !371)
!2327 = !{i32 7, !"Dwarf Version", i32 4}
!2328 = !{i32 2, !"Debug Info Version", i32 3}
!2329 = !{i32 1, !"wchar_size", i32 4}
!2330 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2331 = distinct !DISubprogram(name: "id_type_can_have_animdata", scope: !1, file: !1, line: 82, type: !2332, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!1529, !176}
!2334 = !{}
!2335 = !DILocalVariable(name: "id", arg: 1, scope: !2331, file: !1, line: 82, type: !176)
!2336 = !DILocation(line: 82, column: 36, scope: !2331)
!2337 = !DILocation(line: 85, column: 6, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2331, file: !1, line: 85, column: 6)
!2339 = !DILocation(line: 85, column: 9, scope: !2338)
!2340 = !DILocation(line: 85, column: 6, scope: !2331)
!2341 = !DILocation(line: 86, column: 3, scope: !2338)
!2342 = !DILocation(line: 90, column: 10, scope: !2331)
!2343 = !DILocation(line: 90, column: 2, scope: !2331)
!2344 = !DILocation(line: 104, column: 4, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2346, file: !1, line: 103, column: 3)
!2346 = distinct !DILexicalBlock(scope: !2331, file: !1, line: 90, column: 24)
!2347 = !DILocation(line: 109, column: 4, scope: !2346)
!2348 = !DILocation(line: 111, column: 1, scope: !2331)
!2349 = distinct !DISubprogram(name: "BKE_animdata_from_id", scope: !1, file: !1, line: 118, type: !2350, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!2350 = !DISubroutineType(types: !2351)
!2351 = !{!308, !176}
!2352 = !DILocalVariable(name: "id", arg: 1, scope: !2349, file: !1, line: 118, type: !176)
!2353 = !DILocation(line: 118, column: 36, scope: !2349)
!2354 = !DILocation(line: 124, column: 32, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2349, file: !1, line: 124, column: 6)
!2356 = !DILocation(line: 124, column: 6, scope: !2355)
!2357 = !DILocation(line: 124, column: 6, scope: !2349)
!2358 = !DILocalVariable(name: "iat", scope: !2359, file: !1, line: 125, type: !157)
!2359 = distinct !DILexicalBlock(scope: !2355, file: !1, line: 124, column: 37)
!2360 = !DILocation(line: 125, column: 18, scope: !2359)
!2361 = !DILocation(line: 125, column: 41, scope: !2359)
!2362 = !DILocation(line: 125, column: 24, scope: !2359)
!2363 = !DILocation(line: 126, column: 10, scope: !2359)
!2364 = !DILocation(line: 126, column: 15, scope: !2359)
!2365 = !DILocation(line: 126, column: 3, scope: !2359)
!2366 = !DILocation(line: 129, column: 3, scope: !2355)
!2367 = !DILocation(line: 130, column: 1, scope: !2349)
!2368 = distinct !DISubprogram(name: "BKE_id_add_animdata", scope: !1, file: !1, line: 136, type: !2350, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!2369 = !DILocalVariable(name: "id", arg: 1, scope: !2368, file: !1, line: 136, type: !176)
!2370 = !DILocation(line: 136, column: 35, scope: !2368)
!2371 = !DILocation(line: 142, column: 32, scope: !2372)
!2372 = distinct !DILexicalBlock(scope: !2368, file: !1, line: 142, column: 6)
!2373 = !DILocation(line: 142, column: 6, scope: !2372)
!2374 = !DILocation(line: 142, column: 6, scope: !2368)
!2375 = !DILocalVariable(name: "iat", scope: !2376, file: !1, line: 143, type: !157)
!2376 = distinct !DILexicalBlock(scope: !2372, file: !1, line: 142, column: 37)
!2377 = !DILocation(line: 143, column: 18, scope: !2376)
!2378 = !DILocation(line: 143, column: 41, scope: !2376)
!2379 = !DILocation(line: 143, column: 24, scope: !2376)
!2380 = !DILocation(line: 146, column: 7, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2376, file: !1, line: 146, column: 7)
!2382 = !DILocation(line: 146, column: 12, scope: !2381)
!2383 = !DILocation(line: 146, column: 16, scope: !2381)
!2384 = !DILocation(line: 146, column: 7, scope: !2376)
!2385 = !DILocalVariable(name: "adt", scope: !2386, file: !1, line: 147, type: !230)
!2386 = distinct !DILexicalBlock(scope: !2381, file: !1, line: 146, column: 25)
!2387 = !DILocation(line: 147, column: 14, scope: !2386)
!2388 = !DILocation(line: 150, column: 21, scope: !2386)
!2389 = !DILocation(line: 150, column: 10, scope: !2386)
!2390 = !DILocation(line: 150, column: 15, scope: !2386)
!2391 = !DILocation(line: 150, column: 19, scope: !2386)
!2392 = !DILocation(line: 150, column: 8, scope: !2386)
!2393 = !DILocation(line: 153, column: 4, scope: !2386)
!2394 = !DILocation(line: 153, column: 9, scope: !2386)
!2395 = !DILocation(line: 153, column: 23, scope: !2386)
!2396 = !DILocation(line: 154, column: 3, scope: !2386)
!2397 = !DILocation(line: 156, column: 10, scope: !2376)
!2398 = !DILocation(line: 156, column: 15, scope: !2376)
!2399 = !DILocation(line: 156, column: 3, scope: !2376)
!2400 = !DILocation(line: 159, column: 3, scope: !2372)
!2401 = !DILocation(line: 160, column: 1, scope: !2368)
!2402 = distinct !DISubprogram(name: "BKE_animdata_set_action", scope: !1, file: !1, line: 165, type: !2403, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{!1529, !2405, !176, !235}
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReportList", file: !4, line: 112, baseType: !2407)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !4, line: 106, size: 320, elements: !2408)
!2408 = !{!2409, !2410, !2411, !2412, !2413, !2414}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2407, file: !4, line: 107, baseType: !219, size: 128)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !2407, file: !4, line: 108, baseType: !43, size: 32, offset: 128)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !2407, file: !4, line: 109, baseType: !43, size: 32, offset: 160)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2407, file: !4, line: 110, baseType: !43, size: 32, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2407, file: !4, line: 110, baseType: !43, size: 32, offset: 224)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !2407, file: !4, line: 111, baseType: !2415, size: 64, offset: 256)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !2417, line: 69, flags: DIFlagFwdDecl)
!2417 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2418 = !DILocalVariable(name: "reports", arg: 1, scope: !2402, file: !1, line: 165, type: !2405)
!2419 = !DILocation(line: 165, column: 42, scope: !2402)
!2420 = !DILocalVariable(name: "id", arg: 2, scope: !2402, file: !1, line: 165, type: !176)
!2421 = !DILocation(line: 165, column: 55, scope: !2402)
!2422 = !DILocalVariable(name: "act", arg: 3, scope: !2402, file: !1, line: 165, type: !235)
!2423 = !DILocation(line: 165, column: 68, scope: !2402)
!2424 = !DILocalVariable(name: "adt", scope: !2402, file: !1, line: 167, type: !230)
!2425 = !DILocation(line: 167, column: 12, scope: !2402)
!2426 = !DILocation(line: 167, column: 39, scope: !2402)
!2427 = !DILocation(line: 167, column: 18, scope: !2402)
!2428 = !DILocalVariable(name: "ok", scope: !2402, file: !1, line: 168, type: !1529)
!2429 = !DILocation(line: 168, column: 7, scope: !2402)
!2430 = !DILocation(line: 171, column: 6, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 171, column: 6)
!2432 = !DILocation(line: 171, column: 10, scope: !2431)
!2433 = !DILocation(line: 171, column: 6, scope: !2402)
!2434 = !DILocation(line: 172, column: 14, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2431, file: !1, line: 171, column: 19)
!2436 = !DILocation(line: 172, column: 3, scope: !2435)
!2437 = !DILocation(line: 173, column: 10, scope: !2435)
!2438 = !DILocation(line: 173, column: 3, scope: !2435)
!2439 = !DILocation(line: 179, column: 7, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 179, column: 6)
!2441 = !DILocation(line: 179, column: 12, scope: !2440)
!2442 = !DILocation(line: 179, column: 17, scope: !2440)
!2443 = !DILocation(line: 179, column: 36, scope: !2440)
!2444 = !DILocation(line: 179, column: 40, scope: !2440)
!2445 = !DILocation(line: 179, column: 45, scope: !2440)
!2446 = !DILocation(line: 179, column: 39, scope: !2440)
!2447 = !DILocation(line: 179, column: 55, scope: !2440)
!2448 = !DILocation(line: 179, column: 59, scope: !2440)
!2449 = !DILocation(line: 179, column: 64, scope: !2440)
!2450 = !DILocation(line: 179, column: 58, scope: !2440)
!2451 = !DILocation(line: 179, column: 6, scope: !2402)
!2452 = !DILocation(line: 181, column: 14, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2440, file: !1, line: 179, column: 73)
!2454 = !DILocation(line: 181, column: 3, scope: !2453)
!2455 = !DILocation(line: 182, column: 10, scope: !2453)
!2456 = !DILocation(line: 182, column: 3, scope: !2453)
!2457 = !DILocation(line: 186, column: 6, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 186, column: 6)
!2459 = !DILocation(line: 186, column: 11, scope: !2458)
!2460 = !DILocation(line: 186, column: 6, scope: !2402)
!2461 = !DILocation(line: 187, column: 19, scope: !2458)
!2462 = !DILocation(line: 187, column: 24, scope: !2458)
!2463 = !DILocation(line: 187, column: 13, scope: !2458)
!2464 = !DILocation(line: 187, column: 3, scope: !2458)
!2465 = !DILocation(line: 190, column: 6, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 190, column: 6)
!2467 = !DILocation(line: 190, column: 6, scope: !2402)
!2468 = !DILocation(line: 192, column: 7, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2470, file: !1, line: 192, column: 7)
!2470 = distinct !DILexicalBlock(scope: !2466, file: !1, line: 190, column: 11)
!2471 = !DILocation(line: 192, column: 7, scope: !2470)
!2472 = !DILocation(line: 194, column: 18, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2469, file: !1, line: 192, column: 43)
!2474 = !DILocation(line: 194, column: 4, scope: !2473)
!2475 = !DILocation(line: 194, column: 9, scope: !2473)
!2476 = !DILocation(line: 194, column: 16, scope: !2473)
!2477 = !DILocation(line: 195, column: 21, scope: !2473)
!2478 = !DILocation(line: 195, column: 26, scope: !2473)
!2479 = !DILocation(line: 195, column: 15, scope: !2473)
!2480 = !DILocation(line: 195, column: 4, scope: !2473)
!2481 = !DILocation(line: 196, column: 7, scope: !2473)
!2482 = !DILocation(line: 197, column: 3, scope: !2473)
!2483 = !DILocation(line: 200, column: 16, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2469, file: !1, line: 198, column: 8)
!2485 = !DILocation(line: 202, column: 36, scope: !2484)
!2486 = !DILocation(line: 202, column: 41, scope: !2484)
!2487 = !DILocation(line: 202, column: 44, scope: !2484)
!2488 = !DILocation(line: 202, column: 49, scope: !2484)
!2489 = !DILocation(line: 202, column: 54, scope: !2484)
!2490 = !DILocation(line: 202, column: 58, scope: !2484)
!2491 = !DILocation(line: 200, column: 4, scope: !2484)
!2492 = !DILocation(line: 205, column: 2, scope: !2470)
!2493 = !DILocation(line: 208, column: 3, scope: !2494)
!2494 = distinct !DILexicalBlock(scope: !2466, file: !1, line: 206, column: 7)
!2495 = !DILocation(line: 208, column: 8, scope: !2494)
!2496 = !DILocation(line: 208, column: 15, scope: !2494)
!2497 = !DILocation(line: 209, column: 6, scope: !2494)
!2498 = !DILocation(line: 212, column: 9, scope: !2402)
!2499 = !DILocation(line: 212, column: 2, scope: !2402)
!2500 = !DILocation(line: 213, column: 1, scope: !2402)
!2501 = distinct !DISubprogram(name: "BKE_free_animdata", scope: !1, file: !1, line: 218, type: !2502, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{null, !176}
!2504 = !DILocalVariable(name: "id", arg: 1, scope: !2501, file: !1, line: 218, type: !176)
!2505 = !DILocation(line: 218, column: 28, scope: !2501)
!2506 = !DILocation(line: 223, column: 32, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2501, file: !1, line: 223, column: 6)
!2508 = !DILocation(line: 223, column: 6, scope: !2507)
!2509 = !DILocation(line: 223, column: 6, scope: !2501)
!2510 = !DILocalVariable(name: "iat", scope: !2511, file: !1, line: 224, type: !157)
!2511 = distinct !DILexicalBlock(scope: !2507, file: !1, line: 223, column: 37)
!2512 = !DILocation(line: 224, column: 18, scope: !2511)
!2513 = !DILocation(line: 224, column: 41, scope: !2511)
!2514 = !DILocation(line: 224, column: 24, scope: !2511)
!2515 = !DILocalVariable(name: "adt", scope: !2511, file: !1, line: 225, type: !230)
!2516 = !DILocation(line: 225, column: 13, scope: !2511)
!2517 = !DILocation(line: 225, column: 19, scope: !2511)
!2518 = !DILocation(line: 225, column: 24, scope: !2511)
!2519 = !DILocation(line: 228, column: 7, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2511, file: !1, line: 228, column: 7)
!2521 = !DILocation(line: 228, column: 7, scope: !2511)
!2522 = !DILocation(line: 230, column: 8, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2524, file: !1, line: 230, column: 8)
!2524 = distinct !DILexicalBlock(scope: !2520, file: !1, line: 228, column: 12)
!2525 = !DILocation(line: 230, column: 13, scope: !2523)
!2526 = !DILocation(line: 230, column: 8, scope: !2524)
!2527 = !DILocation(line: 231, column: 5, scope: !2523)
!2528 = !DILocation(line: 231, column: 10, scope: !2523)
!2529 = !DILocation(line: 231, column: 18, scope: !2523)
!2530 = !DILocation(line: 231, column: 21, scope: !2523)
!2531 = !DILocation(line: 231, column: 23, scope: !2523)
!2532 = !DILocation(line: 233, column: 8, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2524, file: !1, line: 233, column: 8)
!2534 = !DILocation(line: 233, column: 13, scope: !2533)
!2535 = !DILocation(line: 233, column: 8, scope: !2524)
!2536 = !DILocation(line: 234, column: 5, scope: !2533)
!2537 = !DILocation(line: 234, column: 10, scope: !2533)
!2538 = !DILocation(line: 234, column: 18, scope: !2533)
!2539 = !DILocation(line: 234, column: 21, scope: !2533)
!2540 = !DILocation(line: 234, column: 23, scope: !2533)
!2541 = !DILocation(line: 237, column: 18, scope: !2524)
!2542 = !DILocation(line: 237, column: 23, scope: !2524)
!2543 = !DILocation(line: 237, column: 4, scope: !2524)
!2544 = !DILocation(line: 240, column: 18, scope: !2524)
!2545 = !DILocation(line: 240, column: 23, scope: !2524)
!2546 = !DILocation(line: 240, column: 4, scope: !2524)
!2547 = !DILocation(line: 246, column: 4, scope: !2524)
!2548 = !DILocation(line: 246, column: 14, scope: !2524)
!2549 = !DILocation(line: 247, column: 4, scope: !2524)
!2550 = !DILocation(line: 247, column: 9, scope: !2524)
!2551 = !DILocation(line: 247, column: 13, scope: !2524)
!2552 = !DILocation(line: 248, column: 3, scope: !2524)
!2553 = !DILocation(line: 249, column: 2, scope: !2511)
!2554 = !DILocation(line: 250, column: 1, scope: !2501)
!2555 = distinct !DISubprogram(name: "BKE_copy_animdata", scope: !1, file: !1, line: 255, type: !2556, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!2556 = !DISubroutineType(types: !2557)
!2557 = !{!308, !230, !2558}
!2558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1529)
!2559 = !DILocalVariable(name: "adt", arg: 1, scope: !2555, file: !1, line: 255, type: !230)
!2560 = !DILocation(line: 255, column: 39, scope: !2555)
!2561 = !DILocalVariable(name: "do_action", arg: 2, scope: !2555, file: !1, line: 255, type: !2558)
!2562 = !DILocation(line: 255, column: 55, scope: !2555)
!2563 = !DILocalVariable(name: "dadt", scope: !2555, file: !1, line: 257, type: !230)
!2564 = !DILocation(line: 257, column: 12, scope: !2555)
!2565 = !DILocation(line: 260, column: 6, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2555, file: !1, line: 260, column: 6)
!2567 = !DILocation(line: 260, column: 10, scope: !2566)
!2568 = !DILocation(line: 260, column: 6, scope: !2555)
!2569 = !DILocation(line: 261, column: 3, scope: !2566)
!2570 = !DILocation(line: 262, column: 9, scope: !2555)
!2571 = !DILocation(line: 262, column: 23, scope: !2555)
!2572 = !DILocation(line: 262, column: 7, scope: !2555)
!2573 = !DILocation(line: 265, column: 6, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2555, file: !1, line: 265, column: 6)
!2575 = !DILocation(line: 265, column: 6, scope: !2555)
!2576 = !DILocation(line: 266, column: 34, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2574, file: !1, line: 265, column: 17)
!2578 = !DILocation(line: 266, column: 39, scope: !2577)
!2579 = !DILocation(line: 266, column: 18, scope: !2577)
!2580 = !DILocation(line: 266, column: 3, scope: !2577)
!2581 = !DILocation(line: 266, column: 9, scope: !2577)
!2582 = !DILocation(line: 266, column: 16, scope: !2577)
!2583 = !DILocation(line: 267, column: 34, scope: !2577)
!2584 = !DILocation(line: 267, column: 39, scope: !2577)
!2585 = !DILocation(line: 267, column: 18, scope: !2577)
!2586 = !DILocation(line: 267, column: 3, scope: !2577)
!2587 = !DILocation(line: 267, column: 9, scope: !2577)
!2588 = !DILocation(line: 267, column: 16, scope: !2577)
!2589 = !DILocation(line: 268, column: 2, scope: !2577)
!2590 = !DILocation(line: 270, column: 20, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2574, file: !1, line: 269, column: 7)
!2592 = !DILocation(line: 270, column: 26, scope: !2591)
!2593 = !DILocation(line: 270, column: 14, scope: !2591)
!2594 = !DILocation(line: 270, column: 3, scope: !2591)
!2595 = !DILocation(line: 271, column: 20, scope: !2591)
!2596 = !DILocation(line: 271, column: 26, scope: !2591)
!2597 = !DILocation(line: 271, column: 14, scope: !2591)
!2598 = !DILocation(line: 271, column: 3, scope: !2591)
!2599 = !DILocation(line: 275, column: 16, scope: !2555)
!2600 = !DILocation(line: 275, column: 22, scope: !2555)
!2601 = !DILocation(line: 275, column: 35, scope: !2555)
!2602 = !DILocation(line: 275, column: 40, scope: !2555)
!2603 = !DILocation(line: 275, column: 2, scope: !2555)
!2604 = !DILocation(line: 278, column: 16, scope: !2555)
!2605 = !DILocation(line: 278, column: 22, scope: !2555)
!2606 = !DILocation(line: 278, column: 32, scope: !2555)
!2607 = !DILocation(line: 278, column: 37, scope: !2555)
!2608 = !DILocation(line: 278, column: 2, scope: !2555)
!2609 = !DILocation(line: 281, column: 22, scope: !2555)
!2610 = !DILocation(line: 281, column: 28, scope: !2555)
!2611 = !DILocation(line: 281, column: 2, scope: !2555)
!2612 = !DILocation(line: 284, column: 9, scope: !2555)
!2613 = !DILocation(line: 284, column: 2, scope: !2555)
!2614 = !DILocation(line: 285, column: 1, scope: !2555)
!2615 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !2616, file: !2616, line: 89, type: !2617, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!2616 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2617 = !DISubroutineType(types: !2618)
!2618 = !{null, !2619}
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!2620 = !DILocalVariable(name: "lb", arg: 1, scope: !2615, file: !2616, line: 89, type: !2619)
!2621 = !DILocation(line: 89, column: 53, scope: !2615)
!2622 = !DILocation(line: 89, column: 71, scope: !2615)
!2623 = !DILocation(line: 89, column: 75, scope: !2615)
!2624 = !DILocation(line: 89, column: 80, scope: !2615)
!2625 = !DILocation(line: 89, column: 59, scope: !2615)
!2626 = !DILocation(line: 89, column: 63, scope: !2615)
!2627 = !DILocation(line: 89, column: 69, scope: !2615)
!2628 = !DILocation(line: 89, column: 93, scope: !2615)
!2629 = distinct !DISubprogram(name: "BKE_copy_animdata_id", scope: !1, file: !1, line: 287, type: !2630, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!2630 = !DISubroutineType(types: !2631)
!2631 = !{!1529, !176, !176, !2558}
!2632 = !DILocalVariable(name: "id_to", arg: 1, scope: !2629, file: !1, line: 287, type: !176)
!2633 = !DILocation(line: 287, column: 31, scope: !2629)
!2634 = !DILocalVariable(name: "id_from", arg: 2, scope: !2629, file: !1, line: 287, type: !176)
!2635 = !DILocation(line: 287, column: 42, scope: !2629)
!2636 = !DILocalVariable(name: "do_action", arg: 3, scope: !2629, file: !1, line: 287, type: !2558)
!2637 = !DILocation(line: 287, column: 62, scope: !2629)
!2638 = !DILocalVariable(name: "adt", scope: !2629, file: !1, line: 289, type: !230)
!2639 = !DILocation(line: 289, column: 12, scope: !2629)
!2640 = !DILocation(line: 291, column: 7, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2629, file: !1, line: 291, column: 6)
!2642 = !DILocation(line: 291, column: 13, scope: !2641)
!2643 = !DILocation(line: 291, column: 16, scope: !2641)
!2644 = !DILocation(line: 291, column: 25, scope: !2641)
!2645 = !DILocation(line: 291, column: 29, scope: !2641)
!2646 = !DILocation(line: 291, column: 48, scope: !2641)
!2647 = !DILocation(line: 291, column: 45, scope: !2641)
!2648 = !DILocation(line: 291, column: 6, scope: !2629)
!2649 = !DILocation(line: 292, column: 3, scope: !2641)
!2650 = !DILocation(line: 294, column: 20, scope: !2629)
!2651 = !DILocation(line: 294, column: 2, scope: !2629)
!2652 = !DILocation(line: 296, column: 29, scope: !2629)
!2653 = !DILocation(line: 296, column: 8, scope: !2629)
!2654 = !DILocation(line: 296, column: 6, scope: !2629)
!2655 = !DILocation(line: 297, column: 6, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2629, file: !1, line: 297, column: 6)
!2657 = !DILocation(line: 297, column: 6, scope: !2629)
!2658 = !DILocalVariable(name: "iat", scope: !2659, file: !1, line: 298, type: !157)
!2659 = distinct !DILexicalBlock(scope: !2656, file: !1, line: 297, column: 11)
!2660 = !DILocation(line: 298, column: 18, scope: !2659)
!2661 = !DILocation(line: 298, column: 41, scope: !2659)
!2662 = !DILocation(line: 298, column: 24, scope: !2659)
!2663 = !DILocation(line: 299, column: 32, scope: !2659)
!2664 = !DILocation(line: 299, column: 37, scope: !2659)
!2665 = !DILocation(line: 299, column: 14, scope: !2659)
!2666 = !DILocation(line: 299, column: 3, scope: !2659)
!2667 = !DILocation(line: 299, column: 8, scope: !2659)
!2668 = !DILocation(line: 299, column: 12, scope: !2659)
!2669 = !DILocation(line: 300, column: 2, scope: !2659)
!2670 = !DILocation(line: 302, column: 2, scope: !2629)
!2671 = !DILocation(line: 303, column: 1, scope: !2629)
!2672 = distinct !DISubprogram(name: "BKE_copy_animdata_id_action", scope: !1, file: !1, line: 305, type: !2502, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!2673 = !DILocalVariable(name: "id", arg: 1, scope: !2672, file: !1, line: 305, type: !176)
!2674 = !DILocation(line: 305, column: 38, scope: !2672)
!2675 = !DILocalVariable(name: "adt", scope: !2672, file: !1, line: 307, type: !230)
!2676 = !DILocation(line: 307, column: 12, scope: !2672)
!2677 = !DILocation(line: 307, column: 39, scope: !2672)
!2678 = !DILocation(line: 307, column: 18, scope: !2672)
!2679 = !DILocation(line: 308, column: 6, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2672, file: !1, line: 308, column: 6)
!2681 = !DILocation(line: 308, column: 6, scope: !2672)
!2682 = !DILocation(line: 309, column: 7, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2684, file: !1, line: 309, column: 7)
!2684 = distinct !DILexicalBlock(scope: !2680, file: !1, line: 308, column: 11)
!2685 = !DILocation(line: 309, column: 12, scope: !2683)
!2686 = !DILocation(line: 309, column: 7, scope: !2684)
!2687 = !DILocation(line: 310, column: 20, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !2683, file: !1, line: 309, column: 20)
!2689 = !DILocation(line: 310, column: 25, scope: !2688)
!2690 = !DILocation(line: 310, column: 14, scope: !2688)
!2691 = !DILocation(line: 310, column: 4, scope: !2688)
!2692 = !DILocation(line: 311, column: 34, scope: !2688)
!2693 = !DILocation(line: 311, column: 39, scope: !2688)
!2694 = !DILocation(line: 311, column: 18, scope: !2688)
!2695 = !DILocation(line: 311, column: 4, scope: !2688)
!2696 = !DILocation(line: 311, column: 9, scope: !2688)
!2697 = !DILocation(line: 311, column: 16, scope: !2688)
!2698 = !DILocation(line: 312, column: 3, scope: !2688)
!2699 = !DILocation(line: 313, column: 7, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2684, file: !1, line: 313, column: 7)
!2701 = !DILocation(line: 313, column: 12, scope: !2700)
!2702 = !DILocation(line: 313, column: 7, scope: !2684)
!2703 = !DILocation(line: 314, column: 20, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2700, file: !1, line: 313, column: 20)
!2705 = !DILocation(line: 314, column: 25, scope: !2704)
!2706 = !DILocation(line: 314, column: 14, scope: !2704)
!2707 = !DILocation(line: 314, column: 4, scope: !2704)
!2708 = !DILocation(line: 315, column: 34, scope: !2704)
!2709 = !DILocation(line: 315, column: 39, scope: !2704)
!2710 = !DILocation(line: 315, column: 18, scope: !2704)
!2711 = !DILocation(line: 315, column: 4, scope: !2704)
!2712 = !DILocation(line: 315, column: 9, scope: !2704)
!2713 = !DILocation(line: 315, column: 16, scope: !2704)
!2714 = !DILocation(line: 316, column: 3, scope: !2704)
!2715 = !DILocation(line: 317, column: 2, scope: !2684)
!2716 = !DILocation(line: 318, column: 1, scope: !2672)
!2717 = distinct !DISubprogram(name: "BKE_animdata_make_local", scope: !1, file: !1, line: 335, type: !2718, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!2718 = !DISubroutineType(types: !2719)
!2719 = !{null, !230}
!2720 = !DILocalVariable(name: "adt", arg: 1, scope: !2717, file: !1, line: 335, type: !230)
!2721 = !DILocation(line: 335, column: 40, scope: !2717)
!2722 = !DILocalVariable(name: "nlt", scope: !2717, file: !1, line: 337, type: !2723)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaTrack", file: !17, line: 682, baseType: !2725)
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaTrack", file: !17, line: 673, size: 832, elements: !2726)
!2726 = !{!2727, !2729, !2730, !2731, !2732, !2733}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2725, file: !17, line: 674, baseType: !2728, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2725, file: !17, line: 674, baseType: !2728, size: 64, offset: 64)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !2725, file: !17, line: 676, baseType: !219, size: 128, offset: 128)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2725, file: !17, line: 678, baseType: !43, size: 32, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2725, file: !17, line: 679, baseType: !43, size: 32, offset: 288)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2725, file: !17, line: 681, baseType: !209, size: 512, offset: 320)
!2734 = !DILocation(line: 337, column: 12, scope: !2717)
!2735 = !DILocation(line: 340, column: 6, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2717, file: !1, line: 340, column: 6)
!2737 = !DILocation(line: 340, column: 11, scope: !2736)
!2738 = !DILocation(line: 340, column: 6, scope: !2717)
!2739 = !DILocation(line: 340, column: 41, scope: !2736)
!2740 = !DILocation(line: 340, column: 46, scope: !2736)
!2741 = !DILocation(line: 340, column: 19, scope: !2736)
!2742 = !DILocation(line: 341, column: 6, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2717, file: !1, line: 341, column: 6)
!2744 = !DILocation(line: 341, column: 11, scope: !2743)
!2745 = !DILocation(line: 341, column: 6, scope: !2717)
!2746 = !DILocation(line: 341, column: 41, scope: !2743)
!2747 = !DILocation(line: 341, column: 46, scope: !2743)
!2748 = !DILocation(line: 341, column: 19, scope: !2743)
!2749 = !DILocation(line: 343, column: 6, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2717, file: !1, line: 343, column: 6)
!2751 = !DILocation(line: 343, column: 11, scope: !2750)
!2752 = !DILocation(line: 343, column: 17, scope: !2750)
!2753 = !DILocation(line: 343, column: 20, scope: !2750)
!2754 = !DILocation(line: 343, column: 25, scope: !2750)
!2755 = !DILocation(line: 343, column: 32, scope: !2750)
!2756 = !DILocation(line: 343, column: 6, scope: !2717)
!2757 = !DILocation(line: 343, column: 62, scope: !2750)
!2758 = !DILocation(line: 343, column: 67, scope: !2750)
!2759 = !DILocation(line: 343, column: 74, scope: !2750)
!2760 = !DILocation(line: 343, column: 40, scope: !2750)
!2761 = !DILocation(line: 349, column: 13, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2717, file: !1, line: 349, column: 2)
!2763 = !DILocation(line: 349, column: 18, scope: !2762)
!2764 = !DILocation(line: 349, column: 29, scope: !2762)
!2765 = !DILocation(line: 349, column: 11, scope: !2762)
!2766 = !DILocation(line: 349, column: 7, scope: !2762)
!2767 = !DILocation(line: 349, column: 36, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2762, file: !1, line: 349, column: 2)
!2769 = !DILocation(line: 349, column: 2, scope: !2762)
!2770 = !DILocation(line: 350, column: 22, scope: !2768)
!2771 = !DILocation(line: 350, column: 27, scope: !2768)
!2772 = !DILocation(line: 350, column: 3, scope: !2768)
!2773 = !DILocation(line: 349, column: 47, scope: !2768)
!2774 = !DILocation(line: 349, column: 52, scope: !2768)
!2775 = !DILocation(line: 349, column: 45, scope: !2768)
!2776 = !DILocation(line: 349, column: 2, scope: !2768)
!2777 = distinct !{!2777, !2769, !2778}
!2778 = !DILocation(line: 350, column: 33, scope: !2762)
!2779 = !DILocation(line: 351, column: 1, scope: !2717)
!2780 = distinct !DISubprogram(name: "make_local_strips", scope: !1, file: !1, line: 322, type: !2781, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{null, !1029}
!2783 = !DILocalVariable(name: "strips", arg: 1, scope: !2780, file: !1, line: 322, type: !1029)
!2784 = !DILocation(line: 322, column: 41, scope: !2780)
!2785 = !DILocalVariable(name: "strip", scope: !2780, file: !1, line: 324, type: !261)
!2786 = !DILocation(line: 324, column: 12, scope: !2780)
!2787 = !DILocation(line: 326, column: 15, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !2780, file: !1, line: 326, column: 2)
!2789 = !DILocation(line: 326, column: 23, scope: !2788)
!2790 = !DILocation(line: 326, column: 13, scope: !2788)
!2791 = !DILocation(line: 326, column: 7, scope: !2788)
!2792 = !DILocation(line: 326, column: 30, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2788, file: !1, line: 326, column: 2)
!2794 = !DILocation(line: 326, column: 2, scope: !2788)
!2795 = !DILocation(line: 327, column: 7, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2797, file: !1, line: 327, column: 7)
!2797 = distinct !DILexicalBlock(scope: !2793, file: !1, line: 326, column: 58)
!2798 = !DILocation(line: 327, column: 14, scope: !2796)
!2799 = !DILocation(line: 327, column: 7, scope: !2797)
!2800 = !DILocation(line: 327, column: 41, scope: !2796)
!2801 = !DILocation(line: 327, column: 48, scope: !2796)
!2802 = !DILocation(line: 327, column: 19, scope: !2796)
!2803 = !DILocation(line: 328, column: 7, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2797, file: !1, line: 328, column: 7)
!2805 = !DILocation(line: 328, column: 14, scope: !2804)
!2806 = !DILocation(line: 328, column: 20, scope: !2804)
!2807 = !DILocation(line: 328, column: 23, scope: !2804)
!2808 = !DILocation(line: 328, column: 30, scope: !2804)
!2809 = !DILocation(line: 328, column: 37, scope: !2804)
!2810 = !DILocation(line: 328, column: 7, scope: !2797)
!2811 = !DILocation(line: 328, column: 67, scope: !2804)
!2812 = !DILocation(line: 328, column: 74, scope: !2804)
!2813 = !DILocation(line: 328, column: 81, scope: !2804)
!2814 = !DILocation(line: 328, column: 45, scope: !2804)
!2815 = !DILocation(line: 330, column: 22, scope: !2797)
!2816 = !DILocation(line: 330, column: 29, scope: !2797)
!2817 = !DILocation(line: 330, column: 3, scope: !2797)
!2818 = !DILocation(line: 331, column: 2, scope: !2797)
!2819 = !DILocation(line: 326, column: 45, scope: !2793)
!2820 = !DILocation(line: 326, column: 52, scope: !2793)
!2821 = !DILocation(line: 326, column: 43, scope: !2793)
!2822 = !DILocation(line: 326, column: 2, scope: !2793)
!2823 = distinct !{!2823, !2794, !2824}
!2824 = !DILocation(line: 331, column: 2, scope: !2788)
!2825 = !DILocation(line: 332, column: 1, scope: !2780)
!2826 = distinct !DISubprogram(name: "BKE_relink_animdata", scope: !1, file: !1, line: 357, type: !2718, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!2827 = !DILocalVariable(name: "adt", arg: 1, scope: !2826, file: !1, line: 357, type: !230)
!2828 = !DILocation(line: 357, column: 36, scope: !2826)
!2829 = !DILocation(line: 360, column: 6, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2826, file: !1, line: 360, column: 6)
!2831 = !DILocation(line: 360, column: 10, scope: !2830)
!2832 = !DILocation(line: 360, column: 6, scope: !2826)
!2833 = !DILocation(line: 361, column: 3, scope: !2830)
!2834 = !DILocation(line: 364, column: 6, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2826, file: !1, line: 364, column: 6)
!2836 = !DILocation(line: 364, column: 11, scope: !2835)
!2837 = !DILocation(line: 364, column: 19, scope: !2835)
!2838 = !DILocation(line: 364, column: 6, scope: !2826)
!2839 = !DILocalVariable(name: "fcu", scope: !2840, file: !1, line: 365, type: !2841)
!2840 = distinct !DILexicalBlock(scope: !2835, file: !1, line: 364, column: 26)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = !DIDerivedType(tag: DW_TAG_typedef, name: "FCurve", file: !17, line: 463, baseType: !2843)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FCurve", file: !17, line: 433, size: 896, elements: !2844)
!2844 = !{!2845, !2847, !2848, !2870, !2882, !2883, !2905, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2843, file: !17, line: 434, baseType: !2846, size: 64)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2843, file: !17, line: 434, baseType: !2846, size: 64, offset: 64)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "grp", scope: !2843, file: !17, line: 437, baseType: !2849, size: 64, offset: 128)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2850 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActionGroup", file: !42, line: 450, baseType: !2851)
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActionGroup", file: !42, line: 440, size: 960, elements: !2852)
!2852 = !{!2853, !2855, !2856, !2857, !2858, !2859, !2860}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2851, file: !42, line: 441, baseType: !2854, size: 64)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2851, file: !42, line: 441, baseType: !2854, size: 64, offset: 64)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2851, file: !42, line: 443, baseType: !219, size: 128, offset: 128)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2851, file: !42, line: 445, baseType: !43, size: 32, offset: 256)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "customCol", scope: !2851, file: !42, line: 446, baseType: !43, size: 32, offset: 288)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2851, file: !42, line: 447, baseType: !209, size: 512, offset: 320)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2851, file: !42, line: 449, baseType: !2861, size: 128, offset: 832)
!2861 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeWireColor", file: !2862, line: 347, baseType: !2863)
!2862 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeWireColor", file: !2862, line: 340, size: 128, elements: !2864)
!2864 = !{!2865, !2866, !2867, !2868, !2869}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "solid", scope: !2863, file: !2862, line: 341, baseType: !2316, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !2863, file: !2862, line: 342, baseType: !2316, size: 32, offset: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2863, file: !2862, line: 343, baseType: !2316, size: 32, offset: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2863, file: !2862, line: 345, baseType: !156, size: 16, offset: 96)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2863, file: !2862, line: 346, baseType: !156, size: 16, offset: 112)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !2843, file: !17, line: 440, baseType: !2871, size: 64, offset: 192)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelDriver", file: !17, line: 386, baseType: !2873)
!2873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelDriver", file: !17, line: 371, size: 2368, elements: !2874)
!2874 = !{!2875, !2876, !2877, !2878, !2879, !2880, !2881}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "variables", scope: !2873, file: !17, line: 372, baseType: !219, size: 128)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "expression", scope: !2873, file: !17, line: 377, baseType: !1216, size: 2048, offset: 128)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "expr_comp", scope: !2873, file: !17, line: 378, baseType: !152, size: 64, offset: 2176)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !2873, file: !17, line: 380, baseType: !275, size: 32, offset: 2240)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !2873, file: !17, line: 381, baseType: !275, size: 32, offset: 2272)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2873, file: !17, line: 384, baseType: !43, size: 32, offset: 2304)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2873, file: !17, line: 385, baseType: !43, size: 32, offset: 2336)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !2843, file: !17, line: 442, baseType: !219, size: 128, offset: 256)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !2843, file: !17, line: 445, baseType: !2884, size: 64, offset: 384)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !2886, line: 133, baseType: !2887)
!2886 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !2886, line: 117, size: 576, elements: !2888)
!2888 = !{!2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2887, file: !2886, line: 118, baseType: !2164, size: 288)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !2887, file: !2886, line: 119, baseType: !275, size: 32, offset: 288)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2887, file: !2886, line: 119, baseType: !275, size: 32, offset: 320)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2887, file: !2886, line: 119, baseType: !275, size: 32, offset: 352)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2887, file: !2886, line: 121, baseType: !154, size: 8, offset: 384)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !2887, file: !2886, line: 123, baseType: !154, size: 8, offset: 392)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !2887, file: !2886, line: 123, baseType: !154, size: 8, offset: 400)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !2887, file: !2886, line: 124, baseType: !154, size: 8, offset: 408)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !2887, file: !2886, line: 124, baseType: !154, size: 8, offset: 416)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !2887, file: !2886, line: 124, baseType: !154, size: 8, offset: 424)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !2887, file: !2886, line: 126, baseType: !154, size: 8, offset: 432)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !2887, file: !2886, line: 128, baseType: !154, size: 8, offset: 440)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2887, file: !2886, line: 129, baseType: !275, size: 32, offset: 448)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !2887, file: !2886, line: 130, baseType: !275, size: 32, offset: 480)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2887, file: !2886, line: 130, baseType: !275, size: 32, offset: 512)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2887, file: !2886, line: 132, baseType: !2316, size: 32, offset: 544)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "fpt", scope: !2843, file: !17, line: 446, baseType: !2906, size: 64, offset: 448)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = !DIDerivedType(tag: DW_TAG_typedef, name: "FPoint", file: !17, line: 430, baseType: !2908)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPoint", file: !17, line: 426, size: 128, elements: !2909)
!2909 = !{!2910, !2911, !2912}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2908, file: !17, line: 427, baseType: !731, size: 64)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2908, file: !17, line: 428, baseType: !43, size: 32, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2908, file: !17, line: 429, baseType: !43, size: 32, offset: 96)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2843, file: !17, line: 447, baseType: !5, size: 32, offset: 512)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !2843, file: !17, line: 450, baseType: !275, size: 32, offset: 544)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2843, file: !17, line: 451, baseType: !156, size: 16, offset: 576)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2843, file: !17, line: 452, baseType: !156, size: 16, offset: 592)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "array_index", scope: !2843, file: !17, line: 455, baseType: !43, size: 32, offset: 608)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !2843, file: !17, line: 456, baseType: !153, size: 64, offset: 640)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !2843, file: !17, line: 459, baseType: !43, size: 32, offset: 704)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2843, file: !17, line: 460, baseType: !421, size: 96, offset: 736)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "prev_norm_factor", scope: !2843, file: !17, line: 462, baseType: !275, size: 32, offset: 832)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2843, file: !17, line: 462, baseType: !275, size: 32, offset: 864)
!2923 = !DILocation(line: 365, column: 11, scope: !2840)
!2924 = !DILocation(line: 368, column: 14, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2840, file: !1, line: 368, column: 3)
!2926 = !DILocation(line: 368, column: 19, scope: !2925)
!2927 = !DILocation(line: 368, column: 27, scope: !2925)
!2928 = !DILocation(line: 368, column: 12, scope: !2925)
!2929 = !DILocation(line: 368, column: 8, scope: !2925)
!2930 = !DILocation(line: 368, column: 34, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2925, file: !1, line: 368, column: 3)
!2932 = !DILocation(line: 368, column: 3, scope: !2925)
!2933 = !DILocalVariable(name: "driver", scope: !2934, file: !1, line: 369, type: !2871)
!2934 = distinct !DILexicalBlock(scope: !2931, file: !1, line: 368, column: 56)
!2935 = !DILocation(line: 369, column: 19, scope: !2934)
!2936 = !DILocation(line: 369, column: 28, scope: !2934)
!2937 = !DILocation(line: 369, column: 33, scope: !2934)
!2938 = !DILocalVariable(name: "dvar", scope: !2934, file: !1, line: 370, type: !2939)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DIDerivedType(tag: DW_TAG_typedef, name: "DriverVar", file: !17, line: 338, baseType: !2941)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DriverVar", file: !17, line: 328, size: 4288, elements: !2942)
!2942 = !{!2943, !2945, !2946, !2947, !2958, !2959, !2960}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2941, file: !17, line: 329, baseType: !2944, size: 64)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2941, file: !17, line: 329, baseType: !2944, size: 64, offset: 64)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2941, file: !17, line: 331, baseType: !209, size: 512, offset: 128)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !2941, file: !17, line: 333, baseType: !2948, size: 3584, offset: 640)
!2948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2949, size: 3584, elements: !863)
!2949 = !DIDerivedType(tag: DW_TAG_typedef, name: "DriverTarget", file: !17, line: 279, baseType: !2950)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DriverTarget", file: !17, line: 269, size: 448, elements: !2951)
!2951 = !{!2952, !2953, !2954, !2955, !2956, !2957}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2950, file: !17, line: 270, baseType: !176, size: 64)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !2950, file: !17, line: 272, baseType: !153, size: 64, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "pchan_name", scope: !2950, file: !17, line: 274, baseType: !1992, size: 256, offset: 128)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "transChan", scope: !2950, file: !17, line: 275, baseType: !156, size: 16, offset: 384)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2950, file: !17, line: 277, baseType: !156, size: 16, offset: 400)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "idtype", scope: !2950, file: !17, line: 278, baseType: !43, size: 32, offset: 416)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "num_targets", scope: !2941, file: !17, line: 334, baseType: !156, size: 16, offset: 4224)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2941, file: !17, line: 336, baseType: !156, size: 16, offset: 4240)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !2941, file: !17, line: 337, baseType: !275, size: 32, offset: 4256)
!2961 = !DILocation(line: 370, column: 15, scope: !2934)
!2962 = !DILocation(line: 373, column: 16, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2934, file: !1, line: 373, column: 4)
!2964 = !DILocation(line: 373, column: 24, scope: !2963)
!2965 = !DILocation(line: 373, column: 34, scope: !2963)
!2966 = !DILocation(line: 373, column: 14, scope: !2963)
!2967 = !DILocation(line: 373, column: 9, scope: !2963)
!2968 = !DILocation(line: 373, column: 41, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2963, file: !1, line: 373, column: 4)
!2970 = !DILocation(line: 373, column: 4, scope: !2963)
!2971 = !DILocalVariable(name: "dtar", scope: !2972, file: !1, line: 375, type: !2974)
!2972 = distinct !DILexicalBlock(scope: !2973, file: !1, line: 375, column: 5)
!2973 = distinct !DILexicalBlock(scope: !2969, file: !1, line: 373, column: 66)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2975 = !DILocation(line: 375, column: 5, scope: !2972)
!2976 = !DILocalVariable(name: "tarIndex", scope: !2972, file: !1, line: 375, type: !43)
!2977 = !DILocation(line: 375, column: 5, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2979, file: !1, line: 375, column: 5)
!2979 = distinct !DILexicalBlock(scope: !2972, file: !1, line: 375, column: 5)
!2980 = !DILocation(line: 375, column: 5, scope: !2979)
!2981 = !DILocation(line: 377, column: 10, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2983, file: !1, line: 377, column: 10)
!2983 = distinct !DILexicalBlock(scope: !2978, file: !1, line: 376, column: 5)
!2984 = !DILocation(line: 377, column: 16, scope: !2982)
!2985 = !DILocation(line: 377, column: 19, scope: !2982)
!2986 = !DILocation(line: 377, column: 22, scope: !2982)
!2987 = !DILocation(line: 377, column: 28, scope: !2982)
!2988 = !DILocation(line: 377, column: 32, scope: !2982)
!2989 = !DILocation(line: 377, column: 10, scope: !2983)
!2990 = !DILocation(line: 378, column: 18, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2982, file: !1, line: 377, column: 39)
!2992 = !DILocation(line: 378, column: 24, scope: !2991)
!2993 = !DILocation(line: 378, column: 28, scope: !2991)
!2994 = !DILocation(line: 378, column: 7, scope: !2991)
!2995 = !DILocation(line: 378, column: 13, scope: !2991)
!2996 = !DILocation(line: 378, column: 16, scope: !2991)
!2997 = !DILocation(line: 379, column: 6, scope: !2991)
!2998 = !DILocation(line: 380, column: 5, scope: !2983)
!2999 = distinct !{!2999, !2980, !3000}
!3000 = !DILocation(line: 380, column: 5, scope: !2979)
!3001 = !DILocation(line: 382, column: 4, scope: !2973)
!3002 = !DILocation(line: 373, column: 54, scope: !2969)
!3003 = !DILocation(line: 373, column: 60, scope: !2969)
!3004 = !DILocation(line: 373, column: 52, scope: !2969)
!3005 = !DILocation(line: 373, column: 4, scope: !2969)
!3006 = distinct !{!3006, !2970, !3007}
!3007 = !DILocation(line: 382, column: 4, scope: !2963)
!3008 = !DILocation(line: 383, column: 3, scope: !2934)
!3009 = !DILocation(line: 368, column: 45, scope: !2931)
!3010 = !DILocation(line: 368, column: 50, scope: !2931)
!3011 = !DILocation(line: 368, column: 43, scope: !2931)
!3012 = !DILocation(line: 368, column: 3, scope: !2931)
!3013 = distinct !{!3013, !2932, !3014}
!3014 = !DILocation(line: 383, column: 3, scope: !2925)
!3015 = !DILocation(line: 384, column: 2, scope: !2840)
!3016 = !DILocation(line: 385, column: 1, scope: !2826)
!3017 = distinct !DISubprogram(name: "action_move_fcurves_by_basepath", scope: !1, file: !1, line: 408, type: !3018, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!3018 = !DISubroutineType(types: !3019)
!3019 = !{null, !235, !235, !299}
!3020 = !DILocalVariable(name: "srcAct", arg: 1, scope: !3017, file: !1, line: 408, type: !235)
!3021 = !DILocation(line: 408, column: 47, scope: !3017)
!3022 = !DILocalVariable(name: "dstAct", arg: 2, scope: !3017, file: !1, line: 408, type: !235)
!3023 = !DILocation(line: 408, column: 64, scope: !3017)
!3024 = !DILocalVariable(name: "basepath", arg: 3, scope: !3017, file: !1, line: 408, type: !299)
!3025 = !DILocation(line: 408, column: 83, scope: !3017)
!3026 = !DILocalVariable(name: "fcu", scope: !3017, file: !1, line: 410, type: !2841)
!3027 = !DILocation(line: 410, column: 10, scope: !3017)
!3028 = !DILocalVariable(name: "fcn", scope: !3017, file: !1, line: 410, type: !2841)
!3029 = !DILocation(line: 410, column: 16, scope: !3017)
!3030 = !DILocation(line: 413, column: 6, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3017, file: !1, line: 413, column: 6)
!3032 = !DILocation(line: 413, column: 6, scope: !3017)
!3033 = !DILocation(line: 414, column: 9, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3035, file: !1, line: 414, column: 7)
!3035 = distinct !DILexicalBlock(scope: !3031, file: !1, line: 413, column: 44)
!3036 = !DILocation(line: 414, column: 15, scope: !3034)
!3037 = !DILocation(line: 414, column: 7, scope: !3035)
!3038 = !DILocation(line: 416, column: 19, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3034, file: !1, line: 414, column: 26)
!3040 = !DILocation(line: 416, column: 11, scope: !3039)
!3041 = !DILocation(line: 416, column: 35, scope: !3039)
!3042 = !DILocation(line: 416, column: 27, scope: !3039)
!3043 = !DILocation(line: 416, column: 51, scope: !3039)
!3044 = !DILocation(line: 415, column: 4, scope: !3039)
!3045 = !DILocation(line: 417, column: 3, scope: !3039)
!3046 = !DILocation(line: 418, column: 3, scope: !3035)
!3047 = !DILocation(line: 424, column: 32, scope: !3017)
!3048 = !DILocation(line: 424, column: 2, scope: !3017)
!3049 = !DILocation(line: 427, column: 13, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3017, file: !1, line: 427, column: 2)
!3051 = !DILocation(line: 427, column: 21, scope: !3050)
!3052 = !DILocation(line: 427, column: 28, scope: !3050)
!3053 = !DILocation(line: 427, column: 11, scope: !3050)
!3054 = !DILocation(line: 427, column: 7, scope: !3050)
!3055 = !DILocation(line: 427, column: 35, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3050, file: !1, line: 427, column: 2)
!3057 = !DILocation(line: 427, column: 2, scope: !3050)
!3058 = !DILocation(line: 429, column: 9, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3056, file: !1, line: 427, column: 51)
!3060 = !DILocation(line: 429, column: 14, scope: !3059)
!3061 = !DILocation(line: 429, column: 7, scope: !3059)
!3062 = !DILocation(line: 434, column: 33, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3059, file: !1, line: 434, column: 7)
!3064 = !DILocation(line: 434, column: 38, scope: !3063)
!3065 = !DILocation(line: 434, column: 48, scope: !3063)
!3066 = !DILocation(line: 434, column: 7, scope: !3063)
!3067 = !DILocation(line: 434, column: 7, scope: !3059)
!3068 = !DILocalVariable(name: "agrp", scope: !3069, file: !1, line: 435, type: !2849)
!3069 = distinct !DILexicalBlock(scope: !3063, file: !1, line: 434, column: 59)
!3070 = !DILocation(line: 435, column: 18, scope: !3069)
!3071 = !DILocation(line: 438, column: 8, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3069, file: !1, line: 438, column: 8)
!3073 = !DILocation(line: 438, column: 13, scope: !3072)
!3074 = !DILocation(line: 438, column: 8, scope: !3069)
!3075 = !DILocation(line: 440, column: 39, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3072, file: !1, line: 438, column: 18)
!3077 = !DILocation(line: 440, column: 47, scope: !3076)
!3078 = !DILocation(line: 440, column: 52, scope: !3076)
!3079 = !DILocation(line: 440, column: 57, scope: !3076)
!3080 = !DILocation(line: 440, column: 12, scope: !3076)
!3081 = !DILocation(line: 440, column: 10, scope: !3076)
!3082 = !DILocation(line: 442, column: 9, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3076, file: !1, line: 442, column: 9)
!3084 = !DILocation(line: 442, column: 14, scope: !3083)
!3085 = !DILocation(line: 442, column: 9, scope: !3076)
!3086 = !DILocation(line: 444, column: 35, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3083, file: !1, line: 442, column: 23)
!3088 = !DILocation(line: 444, column: 43, scope: !3087)
!3089 = !DILocation(line: 444, column: 48, scope: !3087)
!3090 = !DILocation(line: 444, column: 53, scope: !3087)
!3091 = !DILocation(line: 444, column: 13, scope: !3087)
!3092 = !DILocation(line: 444, column: 11, scope: !3087)
!3093 = !DILocation(line: 445, column: 5, scope: !3087)
!3094 = !DILocation(line: 450, column: 5, scope: !3076)
!3095 = !DILocation(line: 450, column: 10, scope: !3076)
!3096 = !DILocation(line: 450, column: 15, scope: !3076)
!3097 = !DILocation(line: 450, column: 20, scope: !3076)
!3098 = !DILocation(line: 451, column: 4, scope: !3076)
!3099 = !DILocation(line: 454, column: 33, scope: !3069)
!3100 = !DILocation(line: 454, column: 41, scope: !3069)
!3101 = !DILocation(line: 454, column: 4, scope: !3069)
!3102 = !DILocation(line: 456, column: 8, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3069, file: !1, line: 456, column: 8)
!3104 = !DILocation(line: 456, column: 8, scope: !3069)
!3105 = !DILocation(line: 457, column: 31, scope: !3103)
!3106 = !DILocation(line: 457, column: 39, scope: !3103)
!3107 = !DILocation(line: 457, column: 45, scope: !3103)
!3108 = !DILocation(line: 457, column: 5, scope: !3103)
!3109 = !DILocation(line: 459, column: 18, scope: !3103)
!3110 = !DILocation(line: 459, column: 26, scope: !3103)
!3111 = !DILocation(line: 459, column: 34, scope: !3103)
!3112 = !DILocation(line: 459, column: 5, scope: !3103)
!3113 = !DILocation(line: 460, column: 3, scope: !3069)
!3114 = !DILocation(line: 461, column: 2, scope: !3059)
!3115 = !DILocation(line: 427, column: 46, scope: !3056)
!3116 = !DILocation(line: 427, column: 44, scope: !3056)
!3117 = !DILocation(line: 427, column: 2, scope: !3056)
!3118 = distinct !{!3118, !3057, !3119}
!3119 = !DILocation(line: 461, column: 2, scope: !3050)
!3120 = !DILocation(line: 464, column: 6, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3017, file: !1, line: 464, column: 6)
!3122 = !DILocation(line: 464, column: 14, scope: !3121)
!3123 = !DILocation(line: 464, column: 21, scope: !3121)
!3124 = !DILocation(line: 464, column: 6, scope: !3017)
!3125 = !DILocalVariable(name: "agrp", scope: !3126, file: !1, line: 465, type: !2849)
!3126 = distinct !DILexicalBlock(scope: !3121, file: !1, line: 464, column: 28)
!3127 = !DILocation(line: 465, column: 17, scope: !3126)
!3128 = !DILocalVariable(name: "grp", scope: !3126, file: !1, line: 465, type: !2849)
!3129 = !DILocation(line: 465, column: 24, scope: !3126)
!3130 = !DILocation(line: 467, column: 15, scope: !3131)
!3131 = distinct !DILexicalBlock(scope: !3126, file: !1, line: 467, column: 3)
!3132 = !DILocation(line: 467, column: 23, scope: !3131)
!3133 = !DILocation(line: 467, column: 30, scope: !3131)
!3134 = !DILocation(line: 467, column: 13, scope: !3131)
!3135 = !DILocation(line: 467, column: 8, scope: !3131)
!3136 = !DILocation(line: 467, column: 37, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3131, file: !1, line: 467, column: 3)
!3138 = !DILocation(line: 467, column: 3, scope: !3131)
!3139 = !DILocation(line: 468, column: 10, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3137, file: !1, line: 467, column: 55)
!3141 = !DILocation(line: 468, column: 16, scope: !3140)
!3142 = !DILocation(line: 468, column: 8, scope: !3140)
!3143 = !DILocation(line: 471, column: 8, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 471, column: 8)
!3145 = !DILocation(line: 471, column: 14, scope: !3144)
!3146 = !DILocation(line: 471, column: 19, scope: !3144)
!3147 = !DILocation(line: 471, column: 8, scope: !3140)
!3148 = !DILocation(line: 475, column: 32, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3150, file: !1, line: 475, column: 9)
!3150 = distinct !DILexicalBlock(scope: !3144, file: !1, line: 471, column: 32)
!3151 = !DILocation(line: 475, column: 38, scope: !3149)
!3152 = !DILocation(line: 475, column: 9, scope: !3149)
!3153 = !DILocation(line: 475, column: 9, scope: !3150)
!3154 = !DILocation(line: 476, column: 21, scope: !3149)
!3155 = !DILocation(line: 476, column: 29, scope: !3149)
!3156 = !DILocation(line: 476, column: 37, scope: !3149)
!3157 = !DILocation(line: 476, column: 6, scope: !3149)
!3158 = !DILocation(line: 478, column: 6, scope: !3149)
!3159 = !DILocation(line: 478, column: 12, scope: !3149)
!3160 = !DILocation(line: 478, column: 17, scope: !3149)
!3161 = !DILocation(line: 479, column: 4, scope: !3150)
!3162 = !DILocation(line: 480, column: 3, scope: !3140)
!3163 = !DILocation(line: 467, column: 50, scope: !3137)
!3164 = !DILocation(line: 467, column: 48, scope: !3137)
!3165 = !DILocation(line: 467, column: 3, scope: !3137)
!3166 = distinct !{!3166, !3138, !3167}
!3167 = !DILocation(line: 480, column: 3, scope: !3131)
!3168 = !DILocation(line: 481, column: 2, scope: !3126)
!3169 = !DILocation(line: 482, column: 1, scope: !3017)
!3170 = distinct !DISubprogram(name: "animpath_matches_basepath", scope: !1, file: !1, line: 396, type: !3171, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!3171 = !DISubroutineType(types: !3172)
!3172 = !{!1529, !299, !299}
!3173 = !DILocalVariable(name: "path", arg: 1, scope: !3170, file: !1, line: 396, type: !299)
!3174 = !DILocation(line: 396, column: 50, scope: !3170)
!3175 = !DILocalVariable(name: "basepath", arg: 2, scope: !3170, file: !1, line: 396, type: !299)
!3176 = !DILocation(line: 396, column: 69, scope: !3170)
!3177 = !DILocation(line: 399, column: 10, scope: !3170)
!3178 = !DILocation(line: 399, column: 15, scope: !3170)
!3179 = !DILocation(line: 399, column: 18, scope: !3170)
!3180 = !DILocation(line: 399, column: 28, scope: !3170)
!3181 = !DILocation(line: 399, column: 31, scope: !3170)
!3182 = !DILocation(line: 0, scope: !3170)
!3183 = !DILocation(line: 399, column: 9, scope: !3170)
!3184 = !DILocation(line: 399, column: 2, scope: !3170)
!3185 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !2616, file: !2616, line: 88, type: !3186, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!3186 = !DISubroutineType(types: !3187)
!3187 = !{!1529, !3188}
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !221)
!3190 = !DILocalVariable(name: "lb", arg: 1, scope: !3185, file: !2616, line: 88, type: !3188)
!3191 = !DILocation(line: 88, column: 62, scope: !3185)
!3192 = !DILocation(line: 88, column: 76, scope: !3185)
!3193 = !DILocation(line: 88, column: 80, scope: !3185)
!3194 = !DILocation(line: 88, column: 86, scope: !3185)
!3195 = !DILocation(line: 88, column: 75, scope: !3185)
!3196 = !DILocation(line: 88, column: 68, scope: !3185)
!3197 = distinct !DISubprogram(name: "BKE_animdata_separate_by_basepath", scope: !1, file: !1, line: 488, type: !3198, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{null, !176, !176, !1029}
!3200 = !DILocalVariable(name: "srcID", arg: 1, scope: !3197, file: !1, line: 488, type: !176)
!3201 = !DILocation(line: 488, column: 44, scope: !3197)
!3202 = !DILocalVariable(name: "dstID", arg: 2, scope: !3197, file: !1, line: 488, type: !176)
!3203 = !DILocation(line: 488, column: 55, scope: !3197)
!3204 = !DILocalVariable(name: "basepaths", arg: 3, scope: !3197, file: !1, line: 488, type: !1029)
!3205 = !DILocation(line: 488, column: 72, scope: !3197)
!3206 = !DILocalVariable(name: "srcAdt", scope: !3197, file: !1, line: 490, type: !230)
!3207 = !DILocation(line: 490, column: 12, scope: !3197)
!3208 = !DILocalVariable(name: "dstAdt", scope: !3197, file: !1, line: 490, type: !230)
!3209 = !DILocation(line: 490, column: 28, scope: !3197)
!3210 = !DILocalVariable(name: "ld", scope: !3197, file: !1, line: 491, type: !3211)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 64)
!3212 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkData", file: !220, line: 66, baseType: !3213)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkData", file: !220, line: 63, size: 192, elements: !3214)
!3214 = !{!3215, !3217, !3218}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3213, file: !220, line: 64, baseType: !3216, size: 64)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3213, file: !220, line: 64, baseType: !3216, size: 64, offset: 64)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3213, file: !220, line: 65, baseType: !152, size: 64, offset: 128)
!3219 = !DILocation(line: 491, column: 12, scope: !3197)
!3220 = !DILocation(line: 494, column: 6, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3197, file: !1, line: 494, column: 6)
!3222 = !DILocation(line: 494, column: 6, scope: !3197)
!3223 = !DILocation(line: 495, column: 9, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !1, line: 495, column: 7)
!3225 = distinct !DILexicalBlock(scope: !3221, file: !1, line: 494, column: 32)
!3226 = !DILocation(line: 495, column: 15, scope: !3224)
!3227 = !DILocation(line: 495, column: 7, scope: !3225)
!3228 = !DILocation(line: 496, column: 4, scope: !3224)
!3229 = !DILocation(line: 497, column: 3, scope: !3225)
!3230 = !DILocation(line: 501, column: 32, scope: !3197)
!3231 = !DILocation(line: 501, column: 11, scope: !3197)
!3232 = !DILocation(line: 501, column: 9, scope: !3197)
!3233 = !DILocation(line: 502, column: 31, scope: !3197)
!3234 = !DILocation(line: 502, column: 11, scope: !3197)
!3235 = !DILocation(line: 502, column: 9, scope: !3197)
!3236 = !DILocation(line: 504, column: 6, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3197, file: !1, line: 504, column: 6)
!3238 = !DILocation(line: 504, column: 6, scope: !3197)
!3239 = !DILocation(line: 505, column: 9, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3241, file: !1, line: 505, column: 7)
!3241 = distinct !DILexicalBlock(scope: !3237, file: !1, line: 504, column: 34)
!3242 = !DILocation(line: 505, column: 15, scope: !3240)
!3243 = !DILocation(line: 505, column: 7, scope: !3241)
!3244 = !DILocation(line: 506, column: 4, scope: !3240)
!3245 = !DILocation(line: 507, column: 3, scope: !3241)
!3246 = !DILocation(line: 511, column: 6, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3197, file: !1, line: 511, column: 6)
!3248 = !DILocation(line: 511, column: 14, scope: !3247)
!3249 = !DILocation(line: 511, column: 6, scope: !3197)
!3250 = !DILocation(line: 513, column: 7, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3252, file: !1, line: 513, column: 7)
!3252 = distinct !DILexicalBlock(scope: !3247, file: !1, line: 511, column: 22)
!3253 = !DILocation(line: 513, column: 15, scope: !3251)
!3254 = !DILocation(line: 513, column: 22, scope: !3251)
!3255 = !DILocation(line: 513, column: 7, scope: !3252)
!3256 = !DILocation(line: 514, column: 40, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3251, file: !1, line: 513, column: 31)
!3258 = !DILocation(line: 514, column: 46, scope: !3257)
!3259 = !DILocation(line: 514, column: 54, scope: !3257)
!3260 = !DILocation(line: 514, column: 62, scope: !3257)
!3261 = !DILocation(line: 514, column: 65, scope: !3257)
!3262 = !DILocation(line: 514, column: 70, scope: !3257)
!3263 = !DILocation(line: 514, column: 21, scope: !3257)
!3264 = !DILocation(line: 514, column: 4, scope: !3257)
!3265 = !DILocation(line: 514, column: 12, scope: !3257)
!3266 = !DILocation(line: 514, column: 19, scope: !3257)
!3267 = !DILocation(line: 515, column: 3, scope: !3257)
!3268 = !DILocation(line: 516, column: 12, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3251, file: !1, line: 516, column: 12)
!3270 = !DILocation(line: 516, column: 20, scope: !3269)
!3271 = !DILocation(line: 516, column: 30, scope: !3269)
!3272 = !DILocation(line: 516, column: 38, scope: !3269)
!3273 = !DILocation(line: 516, column: 27, scope: !3269)
!3274 = !DILocation(line: 516, column: 12, scope: !3251)
!3275 = !DILocation(line: 518, column: 11, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3269, file: !1, line: 516, column: 46)
!3277 = !DILocation(line: 518, column: 18, scope: !3276)
!3278 = !DILocation(line: 518, column: 24, scope: !3276)
!3279 = !DILocation(line: 518, column: 31, scope: !3276)
!3280 = !DILocation(line: 518, column: 37, scope: !3276)
!3281 = !DILocation(line: 518, column: 45, scope: !3276)
!3282 = !DILocation(line: 518, column: 53, scope: !3276)
!3283 = !DILocation(line: 518, column: 56, scope: !3276)
!3284 = !DILocation(line: 517, column: 4, scope: !3276)
!3285 = !DILocation(line: 521, column: 15, scope: !3276)
!3286 = !DILocation(line: 521, column: 23, scope: !3276)
!3287 = !DILocation(line: 521, column: 31, scope: !3276)
!3288 = !DILocation(line: 521, column: 4, scope: !3276)
!3289 = !DILocation(line: 522, column: 40, scope: !3276)
!3290 = !DILocation(line: 522, column: 46, scope: !3276)
!3291 = !DILocation(line: 522, column: 54, scope: !3276)
!3292 = !DILocation(line: 522, column: 62, scope: !3276)
!3293 = !DILocation(line: 522, column: 65, scope: !3276)
!3294 = !DILocation(line: 522, column: 70, scope: !3276)
!3295 = !DILocation(line: 522, column: 21, scope: !3276)
!3296 = !DILocation(line: 522, column: 4, scope: !3276)
!3297 = !DILocation(line: 522, column: 12, scope: !3276)
!3298 = !DILocation(line: 522, column: 19, scope: !3276)
!3299 = !DILocation(line: 523, column: 3, scope: !3276)
!3300 = !DILocation(line: 526, column: 13, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3252, file: !1, line: 526, column: 3)
!3302 = !DILocation(line: 526, column: 24, scope: !3301)
!3303 = !DILocation(line: 526, column: 11, scope: !3301)
!3304 = !DILocation(line: 526, column: 8, scope: !3301)
!3305 = !DILocation(line: 526, column: 31, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3301, file: !1, line: 526, column: 3)
!3307 = !DILocation(line: 526, column: 3, scope: !3301)
!3308 = !DILocalVariable(name: "basepath", scope: !3309, file: !1, line: 527, type: !299)
!3309 = distinct !DILexicalBlock(scope: !3306, file: !1, line: 526, column: 50)
!3310 = !DILocation(line: 527, column: 16, scope: !3309)
!3311 = !DILocation(line: 527, column: 41, scope: !3309)
!3312 = !DILocation(line: 527, column: 45, scope: !3309)
!3313 = !DILocation(line: 528, column: 36, scope: !3309)
!3314 = !DILocation(line: 528, column: 44, scope: !3309)
!3315 = !DILocation(line: 528, column: 52, scope: !3309)
!3316 = !DILocation(line: 528, column: 60, scope: !3309)
!3317 = !DILocation(line: 528, column: 68, scope: !3309)
!3318 = !DILocation(line: 528, column: 4, scope: !3309)
!3319 = !DILocation(line: 529, column: 3, scope: !3309)
!3320 = !DILocation(line: 526, column: 40, scope: !3306)
!3321 = !DILocation(line: 526, column: 44, scope: !3306)
!3322 = !DILocation(line: 526, column: 38, scope: !3306)
!3323 = !DILocation(line: 526, column: 3, scope: !3306)
!3324 = distinct !{!3324, !3307, !3325}
!3325 = !DILocation(line: 529, column: 3, scope: !3301)
!3326 = !DILocation(line: 530, column: 2, scope: !3252)
!3327 = !DILocation(line: 533, column: 6, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3197, file: !1, line: 533, column: 6)
!3329 = !DILocation(line: 533, column: 14, scope: !3328)
!3330 = !DILocation(line: 533, column: 22, scope: !3328)
!3331 = !DILocation(line: 533, column: 6, scope: !3197)
!3332 = !DILocalVariable(name: "fcu", scope: !3333, file: !1, line: 534, type: !2841)
!3333 = distinct !DILexicalBlock(scope: !3328, file: !1, line: 533, column: 29)
!3334 = !DILocation(line: 534, column: 11, scope: !3333)
!3335 = !DILocalVariable(name: "fcn", scope: !3333, file: !1, line: 534, type: !2841)
!3336 = !DILocation(line: 534, column: 17, scope: !3333)
!3337 = !DILocation(line: 537, column: 14, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3333, file: !1, line: 537, column: 3)
!3339 = !DILocation(line: 537, column: 22, scope: !3338)
!3340 = !DILocation(line: 537, column: 30, scope: !3338)
!3341 = !DILocation(line: 537, column: 12, scope: !3338)
!3342 = !DILocation(line: 537, column: 8, scope: !3338)
!3343 = !DILocation(line: 537, column: 37, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3338, file: !1, line: 537, column: 3)
!3345 = !DILocation(line: 537, column: 3, scope: !3338)
!3346 = !DILocation(line: 538, column: 10, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3344, file: !1, line: 537, column: 53)
!3348 = !DILocation(line: 538, column: 15, scope: !3347)
!3349 = !DILocation(line: 538, column: 8, scope: !3347)
!3350 = !DILocation(line: 541, column: 14, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3347, file: !1, line: 541, column: 4)
!3352 = !DILocation(line: 541, column: 25, scope: !3351)
!3353 = !DILocation(line: 541, column: 12, scope: !3351)
!3354 = !DILocation(line: 541, column: 9, scope: !3351)
!3355 = !DILocation(line: 541, column: 32, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3351, file: !1, line: 541, column: 4)
!3357 = !DILocation(line: 541, column: 4, scope: !3351)
!3358 = !DILocalVariable(name: "basepath", scope: !3359, file: !1, line: 542, type: !299)
!3359 = distinct !DILexicalBlock(scope: !3356, file: !1, line: 541, column: 51)
!3360 = !DILocation(line: 542, column: 17, scope: !3359)
!3361 = !DILocation(line: 542, column: 42, scope: !3359)
!3362 = !DILocation(line: 542, column: 46, scope: !3359)
!3363 = !DILocation(line: 544, column: 35, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3359, file: !1, line: 544, column: 9)
!3365 = !DILocation(line: 544, column: 40, scope: !3364)
!3366 = !DILocation(line: 544, column: 50, scope: !3364)
!3367 = !DILocation(line: 544, column: 9, scope: !3364)
!3368 = !DILocation(line: 544, column: 9, scope: !3359)
!3369 = !DILocation(line: 546, column: 19, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3364, file: !1, line: 544, column: 61)
!3371 = !DILocation(line: 546, column: 27, scope: !3370)
!3372 = !DILocation(line: 546, column: 36, scope: !3370)
!3373 = !DILocation(line: 546, column: 6, scope: !3370)
!3374 = !DILocation(line: 547, column: 19, scope: !3370)
!3375 = !DILocation(line: 547, column: 27, scope: !3370)
!3376 = !DILocation(line: 547, column: 36, scope: !3370)
!3377 = !DILocation(line: 547, column: 6, scope: !3370)
!3378 = !DILocation(line: 552, column: 6, scope: !3370)
!3379 = !DILocation(line: 554, column: 4, scope: !3359)
!3380 = !DILocation(line: 541, column: 41, scope: !3356)
!3381 = !DILocation(line: 541, column: 45, scope: !3356)
!3382 = !DILocation(line: 541, column: 39, scope: !3356)
!3383 = !DILocation(line: 541, column: 4, scope: !3356)
!3384 = distinct !{!3384, !3357, !3385}
!3385 = !DILocation(line: 554, column: 4, scope: !3351)
!3386 = !DILocation(line: 555, column: 3, scope: !3347)
!3387 = !DILocation(line: 537, column: 48, scope: !3344)
!3388 = !DILocation(line: 537, column: 46, scope: !3344)
!3389 = !DILocation(line: 537, column: 3, scope: !3344)
!3390 = distinct !{!3390, !3345, !3391}
!3391 = !DILocation(line: 555, column: 3, scope: !3338)
!3392 = !DILocation(line: 556, column: 2, scope: !3333)
!3393 = !DILocation(line: 557, column: 1, scope: !3197)
!3394 = distinct !DISubprogram(name: "BKE_animdata_driver_path_hack", scope: !1, file: !1, line: 569, type: !3395, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!153, !3397, !3402, !3413, !153}
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !3399, line: 69, baseType: !3400)
!3399 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3400 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !3401, line: 40, flags: DIFlagFwdDecl)
!3401 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_animsys.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !3404, line: 62, baseType: !3405)
!3404 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !3404, line: 55, size: 192, elements: !3406)
!3406 = !{!3407, !3411, !3412}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3405, file: !3404, line: 58, baseType: !3408, size: 64)
!3408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3405, file: !3404, line: 56, size: 64, elements: !3409)
!3409 = !{!3410}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3408, file: !3404, line: 57, baseType: !152, size: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3405, file: !3404, line: 60, baseType: !727, size: 64, offset: 64)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3405, file: !3404, line: 61, baseType: !152, size: 64, offset: 128)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !3404, line: 333, baseType: !3415)
!3415 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !3401, line: 43, flags: DIFlagFwdDecl)
!3416 = !DILocalVariable(name: "C", arg: 1, scope: !3394, file: !1, line: 569, type: !3397)
!3417 = !DILocation(line: 569, column: 47, scope: !3394)
!3418 = !DILocalVariable(name: "ptr", arg: 2, scope: !3394, file: !1, line: 569, type: !3402)
!3419 = !DILocation(line: 569, column: 62, scope: !3394)
!3420 = !DILocalVariable(name: "prop", arg: 3, scope: !3394, file: !1, line: 569, type: !3413)
!3421 = !DILocation(line: 569, column: 80, scope: !3394)
!3422 = !DILocalVariable(name: "base_path", arg: 4, scope: !3394, file: !1, line: 569, type: !153)
!3423 = !DILocation(line: 569, column: 92, scope: !3394)
!3424 = !DILocalVariable(name: "id", scope: !3394, file: !1, line: 571, type: !176)
!3425 = !DILocation(line: 571, column: 6, scope: !3394)
!3426 = !DILocation(line: 571, column: 17, scope: !3394)
!3427 = !DILocation(line: 571, column: 22, scope: !3394)
!3428 = !DILocation(line: 571, column: 25, scope: !3394)
!3429 = !DILocation(line: 571, column: 11, scope: !3394)
!3430 = !DILocalVariable(name: "sa", scope: !3394, file: !1, line: 572, type: !3431)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !3433, line: 228, baseType: !3434)
!3433 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !3433, line: 203, size: 1280, elements: !3435)
!3435 = !{!3436, !3438, !3439, !3456, !3457, !3458, !3459, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3501, !3502, !3503, !3504}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3434, file: !3433, line: 204, baseType: !3437, size: 64)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3434, file: !3433, line: 204, baseType: !3437, size: 64, offset: 64)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3434, file: !3433, line: 206, baseType: !3440, size: 64, offset: 128)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 64)
!3441 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !3433, line: 87, baseType: !3442)
!3442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !3433, line: 82, size: 256, elements: !3443)
!3443 = !{!3444, !3446, !3447, !3448, !3454, !3455}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3442, file: !3433, line: 83, baseType: !3445, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3442, file: !3433, line: 83, baseType: !3445, size: 64, offset: 64)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !3442, file: !3433, line: 83, baseType: !3445, size: 64, offset: 128)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3442, file: !3433, line: 84, baseType: !3449, size: 32, offset: 192)
!3449 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !750, line: 43, baseType: !3450)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !750, line: 41, size: 32, elements: !3451)
!3451 = !{!3452, !3453}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3450, file: !750, line: 42, baseType: !156, size: 16)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3450, file: !750, line: 42, baseType: !156, size: 16, offset: 16)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3442, file: !3433, line: 86, baseType: !156, size: 16, offset: 224)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3442, file: !3433, line: 86, baseType: !156, size: 16, offset: 240)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3434, file: !3433, line: 206, baseType: !3440, size: 64, offset: 192)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3434, file: !3433, line: 206, baseType: !3440, size: 64, offset: 256)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3434, file: !3433, line: 206, baseType: !3440, size: 64, offset: 320)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !3434, file: !3433, line: 207, baseType: !3460, size: 64, offset: 384)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !3433, line: 80, baseType: !3462)
!3462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !3433, line: 49, size: 1984, elements: !3463)
!3463 = !{!3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3462, file: !3433, line: 50, baseType: !162, size: 960)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !3462, file: !3433, line: 52, baseType: !219, size: 128, offset: 960)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !3462, file: !3433, line: 53, baseType: !219, size: 128, offset: 1088)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !3462, file: !3433, line: 54, baseType: !219, size: 128, offset: 1216)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3462, file: !3433, line: 55, baseType: !219, size: 128, offset: 1344)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3462, file: !3433, line: 57, baseType: !363, size: 64, offset: 1472)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !3462, file: !3433, line: 58, baseType: !363, size: 64, offset: 1536)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !3462, file: !3433, line: 60, baseType: !43, size: 32, offset: 1600)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3462, file: !3433, line: 61, baseType: !43, size: 32, offset: 1632)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3462, file: !3433, line: 63, baseType: !156, size: 16, offset: 1664)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3462, file: !3433, line: 64, baseType: !156, size: 16, offset: 1680)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3462, file: !3433, line: 65, baseType: !156, size: 16, offset: 1696)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3462, file: !3433, line: 66, baseType: !156, size: 16, offset: 1712)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3462, file: !3433, line: 67, baseType: !156, size: 16, offset: 1728)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !3462, file: !3433, line: 68, baseType: !156, size: 16, offset: 1744)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !3462, file: !3433, line: 69, baseType: !156, size: 16, offset: 1760)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !3462, file: !3433, line: 70, baseType: !156, size: 16, offset: 1776)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3462, file: !3433, line: 71, baseType: !156, size: 16, offset: 1792)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !3462, file: !3433, line: 73, baseType: !156, size: 16, offset: 1808)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !3462, file: !3433, line: 74, baseType: !156, size: 16, offset: 1824)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3462, file: !3433, line: 76, baseType: !156, size: 16, offset: 1840)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !3462, file: !3433, line: 78, baseType: !2415, size: 64, offset: 1856)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3462, file: !3433, line: 79, baseType: !152, size: 64, offset: 1920)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !3434, file: !3433, line: 209, baseType: !1927, size: 128, offset: 448)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3434, file: !3433, line: 211, baseType: !154, size: 8, offset: 576)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !3434, file: !3433, line: 211, baseType: !154, size: 8, offset: 584)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3434, file: !3433, line: 212, baseType: !156, size: 16, offset: 592)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3434, file: !3433, line: 212, baseType: !156, size: 16, offset: 608)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !3434, file: !3433, line: 214, baseType: !156, size: 16, offset: 624)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3434, file: !3433, line: 215, baseType: !156, size: 16, offset: 640)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3434, file: !3433, line: 216, baseType: !156, size: 16, offset: 656)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !3434, file: !3433, line: 217, baseType: !156, size: 16, offset: 672)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3434, file: !3433, line: 219, baseType: !154, size: 8, offset: 688)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3434, file: !3433, line: 219, baseType: !154, size: 8, offset: 696)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3434, file: !3433, line: 221, baseType: !3499, size: 64, offset: 704)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !3433, line: 39, flags: DIFlagFwdDecl)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !3434, file: !3433, line: 223, baseType: !219, size: 128, offset: 768)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3434, file: !3433, line: 224, baseType: !219, size: 128, offset: 896)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3434, file: !3433, line: 225, baseType: !219, size: 128, offset: 1024)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !3434, file: !3433, line: 227, baseType: !219, size: 128, offset: 1152)
!3505 = !DILocation(line: 572, column: 11, scope: !3394)
!3506 = !DILocation(line: 572, column: 28, scope: !3394)
!3507 = !DILocation(line: 572, column: 16, scope: !3394)
!3508 = !DILocalVariable(name: "basepath", scope: !3394, file: !1, line: 575, type: !153)
!3509 = !DILocation(line: 575, column: 8, scope: !3394)
!3510 = !DILocation(line: 575, column: 19, scope: !3394)
!3511 = !DILocation(line: 575, column: 31, scope: !3394)
!3512 = !DILocation(line: 575, column: 72, scope: !3394)
!3513 = !DILocation(line: 575, column: 77, scope: !3394)
!3514 = !DILocation(line: 575, column: 43, scope: !3394)
!3515 = !DILocalVariable(name: "path", scope: !3394, file: !1, line: 576, type: !153)
!3516 = !DILocation(line: 576, column: 8, scope: !3394)
!3517 = !DILocation(line: 576, column: 15, scope: !3394)
!3518 = !DILocation(line: 582, column: 7, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3394, file: !1, line: 582, column: 6)
!3520 = !DILocation(line: 582, column: 6, scope: !3519)
!3521 = !DILocation(line: 582, column: 11, scope: !3519)
!3522 = !DILocation(line: 582, column: 15, scope: !3519)
!3523 = !DILocation(line: 582, column: 19, scope: !3519)
!3524 = !DILocation(line: 582, column: 29, scope: !3519)
!3525 = !DILocation(line: 582, column: 6, scope: !3394)
!3526 = !DILocalVariable(name: "ob", scope: !3527, file: !1, line: 583, type: !2325)
!3527 = distinct !DILexicalBlock(scope: !3519, file: !1, line: 582, column: 45)
!3528 = !DILocation(line: 583, column: 11, scope: !3527)
!3529 = !DILocation(line: 583, column: 39, scope: !3527)
!3530 = !DILocation(line: 583, column: 16, scope: !3527)
!3531 = !DILocation(line: 585, column: 7, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3527, file: !1, line: 585, column: 7)
!3533 = !DILocation(line: 585, column: 10, scope: !3532)
!3534 = !DILocation(line: 585, column: 13, scope: !3532)
!3535 = !DILocation(line: 585, column: 7, scope: !3527)
!3536 = !DILocation(line: 587, column: 12, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3532, file: !1, line: 585, column: 17)
!3538 = !DILocation(line: 587, column: 4, scope: !3537)
!3539 = !DILocalVariable(name: "ma", scope: !3540, file: !1, line: 590, type: !2319)
!3540 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 589, column: 5)
!3541 = distinct !DILexicalBlock(scope: !3537, file: !1, line: 587, column: 26)
!3542 = !DILocation(line: 590, column: 16, scope: !3540)
!3543 = !DILocation(line: 590, column: 43, scope: !3540)
!3544 = !DILocation(line: 590, column: 47, scope: !3540)
!3545 = !DILocation(line: 590, column: 51, scope: !3540)
!3546 = !DILocation(line: 590, column: 21, scope: !3540)
!3547 = !DILocalVariable(name: "tex", scope: !3540, file: !1, line: 591, type: !301)
!3548 = !DILocation(line: 591, column: 11, scope: !3540)
!3549 = !DILocation(line: 591, column: 47, scope: !3540)
!3550 = !DILocation(line: 591, column: 17, scope: !3540)
!3551 = !DILocation(line: 594, column: 16, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3540, file: !1, line: 594, column: 10)
!3553 = !DILocation(line: 594, column: 10, scope: !3552)
!3554 = !DILocation(line: 594, column: 23, scope: !3552)
!3555 = !DILocation(line: 594, column: 20, scope: !3552)
!3556 = !DILocation(line: 594, column: 10, scope: !3540)
!3557 = !DILocalVariable(name: "name_esc_ma", scope: !3558, file: !1, line: 595, type: !1820)
!3558 = distinct !DILexicalBlock(scope: !3552, file: !1, line: 594, column: 27)
!3559 = !DILocation(line: 595, column: 12, scope: !3558)
!3560 = !DILocalVariable(name: "name_esc_tex", scope: !3558, file: !1, line: 596, type: !1820)
!3561 = !DILocation(line: 596, column: 12, scope: !3558)
!3562 = !DILocation(line: 598, column: 21, scope: !3558)
!3563 = !DILocation(line: 598, column: 34, scope: !3558)
!3564 = !DILocation(line: 598, column: 38, scope: !3558)
!3565 = !DILocation(line: 598, column: 41, scope: !3558)
!3566 = !DILocation(line: 598, column: 46, scope: !3558)
!3567 = !DILocation(line: 598, column: 7, scope: !3558)
!3568 = !DILocation(line: 599, column: 21, scope: !3558)
!3569 = !DILocation(line: 599, column: 35, scope: !3558)
!3570 = !DILocation(line: 599, column: 40, scope: !3558)
!3571 = !DILocation(line: 599, column: 43, scope: !3558)
!3572 = !DILocation(line: 599, column: 48, scope: !3558)
!3573 = !DILocation(line: 599, column: 7, scope: !3558)
!3574 = !DILocation(line: 605, column: 27, scope: !3558)
!3575 = !DILocation(line: 605, column: 40, scope: !3558)
!3576 = !DILocation(line: 605, column: 54, scope: !3558)
!3577 = !DILocation(line: 604, column: 14, scope: !3558)
!3578 = !DILocation(line: 604, column: 12, scope: !3558)
!3579 = !DILocation(line: 608, column: 11, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3558, file: !1, line: 608, column: 11)
!3581 = !DILocation(line: 608, column: 23, scope: !3580)
!3582 = !DILocation(line: 608, column: 20, scope: !3580)
!3583 = !DILocation(line: 608, column: 11, scope: !3558)
!3584 = !DILocation(line: 609, column: 8, scope: !3580)
!3585 = !DILocation(line: 609, column: 18, scope: !3580)
!3586 = !DILocation(line: 610, column: 6, scope: !3558)
!3587 = !DILocation(line: 611, column: 6, scope: !3540)
!3588 = !DILocation(line: 616, column: 8, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3537, file: !1, line: 616, column: 8)
!3590 = !DILocation(line: 616, column: 20, scope: !3589)
!3591 = !DILocation(line: 616, column: 17, scope: !3589)
!3592 = !DILocation(line: 616, column: 8, scope: !3537)
!3593 = !DILocation(line: 618, column: 25, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3589, file: !1, line: 616, column: 26)
!3595 = !DILocation(line: 618, column: 29, scope: !3594)
!3596 = !DILocation(line: 618, column: 33, scope: !3594)
!3597 = !DILocation(line: 618, column: 38, scope: !3594)
!3598 = !DILocation(line: 618, column: 44, scope: !3594)
!3599 = !DILocation(line: 618, column: 49, scope: !3594)
!3600 = !DILocation(line: 618, column: 55, scope: !3594)
!3601 = !DILocation(line: 618, column: 5, scope: !3594)
!3602 = !DILocation(line: 619, column: 4, scope: !3594)
!3603 = !DILocation(line: 620, column: 3, scope: !3537)
!3604 = !DILocation(line: 621, column: 2, scope: !3527)
!3605 = !DILocation(line: 624, column: 9, scope: !3394)
!3606 = !DILocation(line: 624, column: 2, scope: !3394)
!3607 = distinct !DISubprogram(name: "BKE_action_fix_paths_rename", scope: !1, file: !1, line: 797, type: !3608, scopeLine: 799, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!3608 = !DISubroutineType(types: !3609)
!3609 = !{null, !176, !235, !299, !299, !299, !43, !43, !1529}
!3610 = !DILocalVariable(name: "owner_id", arg: 1, scope: !3607, file: !1, line: 797, type: !176)
!3611 = !DILocation(line: 797, column: 38, scope: !3607)
!3612 = !DILocalVariable(name: "act", arg: 2, scope: !3607, file: !1, line: 797, type: !235)
!3613 = !DILocation(line: 797, column: 57, scope: !3607)
!3614 = !DILocalVariable(name: "prefix", arg: 3, scope: !3607, file: !1, line: 797, type: !299)
!3615 = !DILocation(line: 797, column: 74, scope: !3607)
!3616 = !DILocalVariable(name: "oldName", arg: 4, scope: !3607, file: !1, line: 797, type: !299)
!3617 = !DILocation(line: 797, column: 94, scope: !3607)
!3618 = !DILocalVariable(name: "newName", arg: 5, scope: !3607, file: !1, line: 798, type: !299)
!3619 = !DILocation(line: 798, column: 46, scope: !3607)
!3620 = !DILocalVariable(name: "oldSubscript", arg: 6, scope: !3607, file: !1, line: 798, type: !43)
!3621 = !DILocation(line: 798, column: 59, scope: !3607)
!3622 = !DILocalVariable(name: "newSubscript", arg: 7, scope: !3607, file: !1, line: 798, type: !43)
!3623 = !DILocation(line: 798, column: 77, scope: !3607)
!3624 = !DILocalVariable(name: "verify_paths", arg: 8, scope: !3607, file: !1, line: 798, type: !1529)
!3625 = !DILocation(line: 798, column: 96, scope: !3607)
!3626 = !DILocalVariable(name: "oldN", scope: !3607, file: !1, line: 800, type: !153)
!3627 = !DILocation(line: 800, column: 8, scope: !3607)
!3628 = !DILocalVariable(name: "newN", scope: !3607, file: !1, line: 800, type: !153)
!3629 = !DILocation(line: 800, column: 15, scope: !3607)
!3630 = !DILocation(line: 803, column: 6, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3607, file: !1, line: 803, column: 6)
!3632 = !DILocation(line: 803, column: 6, scope: !3607)
!3633 = !DILocation(line: 804, column: 3, scope: !3631)
!3634 = !DILocation(line: 807, column: 7, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3607, file: !1, line: 807, column: 6)
!3636 = !DILocation(line: 807, column: 15, scope: !3635)
!3637 = !DILocation(line: 807, column: 24, scope: !3635)
!3638 = !DILocation(line: 807, column: 28, scope: !3635)
!3639 = !DILocation(line: 807, column: 36, scope: !3635)
!3640 = !DILocation(line: 807, column: 6, scope: !3607)
!3641 = !DILocalVariable(name: "name_old_len", scope: !3642, file: !1, line: 809, type: !3643)
!3642 = distinct !DILexicalBlock(scope: !3635, file: !1, line: 807, column: 46)
!3643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3644)
!3644 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !3645, line: 46, baseType: !1022)
!3645 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!3646 = !DILocation(line: 809, column: 16, scope: !3642)
!3647 = !DILocation(line: 809, column: 38, scope: !3642)
!3648 = !DILocation(line: 809, column: 31, scope: !3642)
!3649 = !DILocalVariable(name: "name_new_len", scope: !3642, file: !1, line: 810, type: !3643)
!3650 = !DILocation(line: 810, column: 16, scope: !3642)
!3651 = !DILocation(line: 810, column: 38, scope: !3642)
!3652 = !DILocation(line: 810, column: 31, scope: !3642)
!3653 = !DILocalVariable(name: "name_old_esc", scope: !3642, file: !1, line: 811, type: !153)
!3654 = !DILocation(line: 811, column: 9, scope: !3642)
!3655 = !DILocation(line: 811, column: 24, scope: !3642)
!3656 = !DILocalVariable(name: "name_new_esc", scope: !3642, file: !1, line: 812, type: !153)
!3657 = !DILocation(line: 812, column: 9, scope: !3642)
!3658 = !DILocation(line: 812, column: 24, scope: !3642)
!3659 = !DILocation(line: 814, column: 17, scope: !3642)
!3660 = !DILocation(line: 814, column: 31, scope: !3642)
!3661 = !DILocation(line: 814, column: 41, scope: !3642)
!3662 = !DILocation(line: 814, column: 54, scope: !3642)
!3663 = !DILocation(line: 814, column: 59, scope: !3642)
!3664 = !DILocation(line: 814, column: 3, scope: !3642)
!3665 = !DILocation(line: 815, column: 17, scope: !3642)
!3666 = !DILocation(line: 815, column: 31, scope: !3642)
!3667 = !DILocation(line: 815, column: 41, scope: !3642)
!3668 = !DILocation(line: 815, column: 54, scope: !3642)
!3669 = !DILocation(line: 815, column: 59, scope: !3642)
!3670 = !DILocation(line: 815, column: 3, scope: !3642)
!3671 = !DILocation(line: 816, column: 35, scope: !3642)
!3672 = !DILocation(line: 816, column: 10, scope: !3642)
!3673 = !DILocation(line: 816, column: 8, scope: !3642)
!3674 = !DILocation(line: 817, column: 35, scope: !3642)
!3675 = !DILocation(line: 817, column: 10, scope: !3642)
!3676 = !DILocation(line: 817, column: 8, scope: !3642)
!3677 = !DILocation(line: 818, column: 2, scope: !3642)
!3678 = !DILocation(line: 820, column: 31, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3635, file: !1, line: 819, column: 7)
!3680 = !DILocation(line: 820, column: 10, scope: !3679)
!3681 = !DILocation(line: 820, column: 8, scope: !3679)
!3682 = !DILocation(line: 821, column: 31, scope: !3679)
!3683 = !DILocation(line: 821, column: 10, scope: !3679)
!3684 = !DILocation(line: 821, column: 8, scope: !3679)
!3685 = !DILocation(line: 825, column: 26, scope: !3607)
!3686 = !DILocation(line: 825, column: 36, scope: !3607)
!3687 = !DILocation(line: 825, column: 44, scope: !3607)
!3688 = !DILocation(line: 825, column: 53, scope: !3607)
!3689 = !DILocation(line: 825, column: 62, scope: !3607)
!3690 = !DILocation(line: 825, column: 68, scope: !3607)
!3691 = !DILocation(line: 825, column: 75, scope: !3607)
!3692 = !DILocation(line: 825, column: 80, scope: !3607)
!3693 = !DILocation(line: 825, column: 88, scope: !3607)
!3694 = !DILocation(line: 825, column: 2, scope: !3607)
!3695 = !DILocation(line: 828, column: 2, scope: !3607)
!3696 = !DILocation(line: 828, column: 12, scope: !3607)
!3697 = !DILocation(line: 829, column: 2, scope: !3607)
!3698 = !DILocation(line: 829, column: 12, scope: !3607)
!3699 = !DILocation(line: 830, column: 1, scope: !3607)
!3700 = distinct !DISubprogram(name: "fcurves_path_rename_fix", scope: !1, file: !1, line: 703, type: !3701, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{null, !176, !299, !299, !299, !299, !299, !1029, !1529}
!3703 = !DILocalVariable(name: "owner_id", arg: 1, scope: !3700, file: !1, line: 703, type: !176)
!3704 = !DILocation(line: 703, column: 41, scope: !3700)
!3705 = !DILocalVariable(name: "prefix", arg: 2, scope: !3700, file: !1, line: 703, type: !299)
!3706 = !DILocation(line: 703, column: 63, scope: !3700)
!3707 = !DILocalVariable(name: "oldName", arg: 3, scope: !3700, file: !1, line: 703, type: !299)
!3708 = !DILocation(line: 703, column: 83, scope: !3700)
!3709 = !DILocalVariable(name: "newName", arg: 4, scope: !3700, file: !1, line: 703, type: !299)
!3710 = !DILocation(line: 703, column: 104, scope: !3700)
!3711 = !DILocalVariable(name: "oldKey", arg: 5, scope: !3700, file: !1, line: 704, type: !299)
!3712 = !DILocation(line: 704, column: 49, scope: !3700)
!3713 = !DILocalVariable(name: "newKey", arg: 6, scope: !3700, file: !1, line: 704, type: !299)
!3714 = !DILocation(line: 704, column: 69, scope: !3700)
!3715 = !DILocalVariable(name: "curves", arg: 7, scope: !3700, file: !1, line: 704, type: !1029)
!3716 = !DILocation(line: 704, column: 87, scope: !3700)
!3717 = !DILocalVariable(name: "verify_paths", arg: 8, scope: !3700, file: !1, line: 704, type: !1529)
!3718 = !DILocation(line: 704, column: 100, scope: !3700)
!3719 = !DILocalVariable(name: "fcu", scope: !3700, file: !1, line: 706, type: !2841)
!3720 = !DILocation(line: 706, column: 10, scope: !3700)
!3721 = !DILocation(line: 709, column: 13, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3700, file: !1, line: 709, column: 2)
!3723 = !DILocation(line: 709, column: 21, scope: !3722)
!3724 = !DILocation(line: 709, column: 11, scope: !3722)
!3725 = !DILocation(line: 709, column: 7, scope: !3722)
!3726 = !DILocation(line: 709, column: 28, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3722, file: !1, line: 709, column: 2)
!3728 = !DILocation(line: 709, column: 2, scope: !3722)
!3729 = !DILocation(line: 710, column: 7, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !1, line: 710, column: 7)
!3731 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 709, column: 50)
!3732 = !DILocation(line: 710, column: 12, scope: !3730)
!3733 = !DILocation(line: 710, column: 7, scope: !3731)
!3734 = !DILocalVariable(name: "old_path", scope: !3735, file: !1, line: 711, type: !299)
!3735 = distinct !DILexicalBlock(scope: !3730, file: !1, line: 710, column: 22)
!3736 = !DILocation(line: 711, column: 16, scope: !3735)
!3737 = !DILocation(line: 711, column: 27, scope: !3735)
!3738 = !DILocation(line: 711, column: 32, scope: !3735)
!3739 = !DILocation(line: 714, column: 40, scope: !3735)
!3740 = !DILocation(line: 714, column: 50, scope: !3735)
!3741 = !DILocation(line: 714, column: 58, scope: !3735)
!3742 = !DILocation(line: 714, column: 66, scope: !3735)
!3743 = !DILocation(line: 714, column: 74, scope: !3735)
!3744 = !DILocation(line: 714, column: 79, scope: !3735)
!3745 = !DILocation(line: 714, column: 89, scope: !3735)
!3746 = !DILocation(line: 714, column: 20, scope: !3735)
!3747 = !DILocation(line: 714, column: 4, scope: !3735)
!3748 = !DILocation(line: 714, column: 9, scope: !3735)
!3749 = !DILocation(line: 714, column: 18, scope: !3735)
!3750 = !DILocation(line: 719, column: 8, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3735, file: !1, line: 719, column: 8)
!3752 = !DILocation(line: 719, column: 13, scope: !3751)
!3753 = !DILocation(line: 719, column: 25, scope: !3751)
!3754 = !DILocation(line: 719, column: 22, scope: !3751)
!3755 = !DILocation(line: 719, column: 8, scope: !3735)
!3756 = !DILocalVariable(name: "agrp", scope: !3757, file: !1, line: 720, type: !2849)
!3757 = distinct !DILexicalBlock(scope: !3751, file: !1, line: 719, column: 35)
!3758 = !DILocation(line: 720, column: 19, scope: !3757)
!3759 = !DILocation(line: 720, column: 26, scope: !3757)
!3760 = !DILocation(line: 720, column: 31, scope: !3757)
!3761 = !DILocation(line: 722, column: 10, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3757, file: !1, line: 722, column: 9)
!3763 = !DILocation(line: 722, column: 9, scope: !3762)
!3764 = !DILocation(line: 722, column: 16, scope: !3762)
!3765 = !DILocation(line: 722, column: 26, scope: !3762)
!3766 = !DILocation(line: 722, column: 35, scope: !3762)
!3767 = !DILocation(line: 722, column: 41, scope: !3762)
!3768 = !DILocation(line: 722, column: 19, scope: !3762)
!3769 = !DILocation(line: 722, column: 47, scope: !3762)
!3770 = !DILocation(line: 722, column: 9, scope: !3757)
!3771 = !DILocation(line: 723, column: 18, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3762, file: !1, line: 722, column: 53)
!3773 = !DILocation(line: 723, column: 24, scope: !3772)
!3774 = !DILocation(line: 723, column: 30, scope: !3772)
!3775 = !DILocation(line: 723, column: 6, scope: !3772)
!3776 = !DILocation(line: 724, column: 5, scope: !3772)
!3777 = !DILocation(line: 725, column: 4, scope: !3757)
!3778 = !DILocation(line: 726, column: 3, scope: !3735)
!3779 = !DILocation(line: 727, column: 2, scope: !3731)
!3780 = !DILocation(line: 709, column: 39, scope: !3727)
!3781 = !DILocation(line: 709, column: 44, scope: !3727)
!3782 = !DILocation(line: 709, column: 37, scope: !3727)
!3783 = !DILocation(line: 709, column: 2, scope: !3727)
!3784 = distinct !{!3784, !3728, !3785}
!3785 = !DILocation(line: 727, column: 2, scope: !3722)
!3786 = !DILocation(line: 728, column: 1, scope: !3700)
!3787 = distinct !DISubprogram(name: "BKE_animdata_fix_paths_rename", scope: !1, file: !1, line: 836, type: !3788, scopeLine: 838, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!3788 = !DISubroutineType(types: !3789)
!3789 = !{null, !176, !230, !176, !299, !299, !299, !43, !43, !1529}
!3790 = !DILocalVariable(name: "owner_id", arg: 1, scope: !3787, file: !1, line: 836, type: !176)
!3791 = !DILocation(line: 836, column: 40, scope: !3787)
!3792 = !DILocalVariable(name: "adt", arg: 2, scope: !3787, file: !1, line: 836, type: !230)
!3793 = !DILocation(line: 836, column: 60, scope: !3787)
!3794 = !DILocalVariable(name: "ref_id", arg: 3, scope: !3787, file: !1, line: 836, type: !176)
!3795 = !DILocation(line: 836, column: 69, scope: !3787)
!3796 = !DILocalVariable(name: "prefix", arg: 4, scope: !3787, file: !1, line: 836, type: !299)
!3797 = !DILocation(line: 836, column: 89, scope: !3787)
!3798 = !DILocalVariable(name: "oldName", arg: 5, scope: !3787, file: !1, line: 836, type: !299)
!3799 = !DILocation(line: 836, column: 109, scope: !3787)
!3800 = !DILocalVariable(name: "newName", arg: 6, scope: !3787, file: !1, line: 837, type: !299)
!3801 = !DILocation(line: 837, column: 48, scope: !3787)
!3802 = !DILocalVariable(name: "oldSubscript", arg: 7, scope: !3787, file: !1, line: 837, type: !43)
!3803 = !DILocation(line: 837, column: 61, scope: !3787)
!3804 = !DILocalVariable(name: "newSubscript", arg: 8, scope: !3787, file: !1, line: 837, type: !43)
!3805 = !DILocation(line: 837, column: 79, scope: !3787)
!3806 = !DILocalVariable(name: "verify_paths", arg: 9, scope: !3787, file: !1, line: 837, type: !1529)
!3807 = !DILocation(line: 837, column: 98, scope: !3787)
!3808 = !DILocalVariable(name: "nlt", scope: !3787, file: !1, line: 839, type: !2723)
!3809 = !DILocation(line: 839, column: 12, scope: !3787)
!3810 = !DILocalVariable(name: "oldN", scope: !3787, file: !1, line: 840, type: !153)
!3811 = !DILocation(line: 840, column: 8, scope: !3787)
!3812 = !DILocalVariable(name: "newN", scope: !3787, file: !1, line: 840, type: !153)
!3813 = !DILocation(line: 840, column: 15, scope: !3787)
!3814 = !DILocation(line: 843, column: 6, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3787, file: !1, line: 843, column: 6)
!3816 = !DILocation(line: 843, column: 6, scope: !3787)
!3817 = !DILocation(line: 844, column: 3, scope: !3815)
!3818 = !DILocation(line: 847, column: 7, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3787, file: !1, line: 847, column: 6)
!3820 = !DILocation(line: 847, column: 15, scope: !3819)
!3821 = !DILocation(line: 847, column: 24, scope: !3819)
!3822 = !DILocation(line: 847, column: 28, scope: !3819)
!3823 = !DILocation(line: 847, column: 36, scope: !3819)
!3824 = !DILocation(line: 847, column: 6, scope: !3787)
!3825 = !DILocalVariable(name: "name_old_len", scope: !3826, file: !1, line: 849, type: !3643)
!3826 = distinct !DILexicalBlock(scope: !3819, file: !1, line: 847, column: 46)
!3827 = !DILocation(line: 849, column: 16, scope: !3826)
!3828 = !DILocation(line: 849, column: 38, scope: !3826)
!3829 = !DILocation(line: 849, column: 31, scope: !3826)
!3830 = !DILocalVariable(name: "name_new_len", scope: !3826, file: !1, line: 850, type: !3643)
!3831 = !DILocation(line: 850, column: 16, scope: !3826)
!3832 = !DILocation(line: 850, column: 38, scope: !3826)
!3833 = !DILocation(line: 850, column: 31, scope: !3826)
!3834 = !DILocalVariable(name: "name_old_esc", scope: !3826, file: !1, line: 851, type: !153)
!3835 = !DILocation(line: 851, column: 9, scope: !3826)
!3836 = !DILocation(line: 851, column: 24, scope: !3826)
!3837 = !DILocalVariable(name: "name_new_esc", scope: !3826, file: !1, line: 852, type: !153)
!3838 = !DILocation(line: 852, column: 9, scope: !3826)
!3839 = !DILocation(line: 852, column: 24, scope: !3826)
!3840 = !DILocation(line: 854, column: 17, scope: !3826)
!3841 = !DILocation(line: 854, column: 31, scope: !3826)
!3842 = !DILocation(line: 854, column: 41, scope: !3826)
!3843 = !DILocation(line: 854, column: 54, scope: !3826)
!3844 = !DILocation(line: 854, column: 59, scope: !3826)
!3845 = !DILocation(line: 854, column: 3, scope: !3826)
!3846 = !DILocation(line: 855, column: 17, scope: !3826)
!3847 = !DILocation(line: 855, column: 31, scope: !3826)
!3848 = !DILocation(line: 855, column: 41, scope: !3826)
!3849 = !DILocation(line: 855, column: 54, scope: !3826)
!3850 = !DILocation(line: 855, column: 59, scope: !3826)
!3851 = !DILocation(line: 855, column: 3, scope: !3826)
!3852 = !DILocation(line: 856, column: 35, scope: !3826)
!3853 = !DILocation(line: 856, column: 10, scope: !3826)
!3854 = !DILocation(line: 856, column: 8, scope: !3826)
!3855 = !DILocation(line: 857, column: 35, scope: !3826)
!3856 = !DILocation(line: 857, column: 10, scope: !3826)
!3857 = !DILocation(line: 857, column: 8, scope: !3826)
!3858 = !DILocation(line: 858, column: 2, scope: !3826)
!3859 = !DILocation(line: 860, column: 31, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3819, file: !1, line: 859, column: 7)
!3861 = !DILocation(line: 860, column: 10, scope: !3860)
!3862 = !DILocation(line: 860, column: 8, scope: !3860)
!3863 = !DILocation(line: 861, column: 31, scope: !3860)
!3864 = !DILocation(line: 861, column: 10, scope: !3860)
!3865 = !DILocation(line: 861, column: 8, scope: !3860)
!3866 = !DILocation(line: 865, column: 6, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3787, file: !1, line: 865, column: 6)
!3868 = !DILocation(line: 865, column: 11, scope: !3867)
!3869 = !DILocation(line: 865, column: 6, scope: !3787)
!3870 = !DILocation(line: 866, column: 27, scope: !3867)
!3871 = !DILocation(line: 866, column: 37, scope: !3867)
!3872 = !DILocation(line: 866, column: 45, scope: !3867)
!3873 = !DILocation(line: 866, column: 54, scope: !3867)
!3874 = !DILocation(line: 866, column: 63, scope: !3867)
!3875 = !DILocation(line: 866, column: 69, scope: !3867)
!3876 = !DILocation(line: 866, column: 76, scope: !3867)
!3877 = !DILocation(line: 866, column: 81, scope: !3867)
!3878 = !DILocation(line: 866, column: 89, scope: !3867)
!3879 = !DILocation(line: 866, column: 97, scope: !3867)
!3880 = !DILocation(line: 866, column: 3, scope: !3867)
!3881 = !DILocation(line: 867, column: 6, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3787, file: !1, line: 867, column: 6)
!3883 = !DILocation(line: 867, column: 11, scope: !3882)
!3884 = !DILocation(line: 867, column: 6, scope: !3787)
!3885 = !DILocation(line: 868, column: 27, scope: !3882)
!3886 = !DILocation(line: 868, column: 37, scope: !3882)
!3887 = !DILocation(line: 868, column: 45, scope: !3882)
!3888 = !DILocation(line: 868, column: 54, scope: !3882)
!3889 = !DILocation(line: 868, column: 63, scope: !3882)
!3890 = !DILocation(line: 868, column: 69, scope: !3882)
!3891 = !DILocation(line: 868, column: 76, scope: !3882)
!3892 = !DILocation(line: 868, column: 81, scope: !3882)
!3893 = !DILocation(line: 868, column: 89, scope: !3882)
!3894 = !DILocation(line: 868, column: 97, scope: !3882)
!3895 = !DILocation(line: 868, column: 3, scope: !3882)
!3896 = !DILocation(line: 871, column: 26, scope: !3787)
!3897 = !DILocation(line: 871, column: 36, scope: !3787)
!3898 = !DILocation(line: 871, column: 44, scope: !3787)
!3899 = !DILocation(line: 871, column: 52, scope: !3787)
!3900 = !DILocation(line: 871, column: 61, scope: !3787)
!3901 = !DILocation(line: 871, column: 70, scope: !3787)
!3902 = !DILocation(line: 871, column: 76, scope: !3787)
!3903 = !DILocation(line: 871, column: 83, scope: !3787)
!3904 = !DILocation(line: 871, column: 88, scope: !3787)
!3905 = !DILocation(line: 871, column: 97, scope: !3787)
!3906 = !DILocation(line: 871, column: 2, scope: !3787)
!3907 = !DILocation(line: 874, column: 13, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3787, file: !1, line: 874, column: 2)
!3909 = !DILocation(line: 874, column: 18, scope: !3908)
!3910 = !DILocation(line: 874, column: 29, scope: !3908)
!3911 = !DILocation(line: 874, column: 11, scope: !3908)
!3912 = !DILocation(line: 874, column: 7, scope: !3908)
!3913 = !DILocation(line: 874, column: 36, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3908, file: !1, line: 874, column: 2)
!3915 = !DILocation(line: 874, column: 2, scope: !3908)
!3916 = !DILocation(line: 875, column: 29, scope: !3914)
!3917 = !DILocation(line: 875, column: 39, scope: !3914)
!3918 = !DILocation(line: 875, column: 47, scope: !3914)
!3919 = !DILocation(line: 875, column: 56, scope: !3914)
!3920 = !DILocation(line: 875, column: 65, scope: !3914)
!3921 = !DILocation(line: 875, column: 71, scope: !3914)
!3922 = !DILocation(line: 875, column: 78, scope: !3914)
!3923 = !DILocation(line: 875, column: 83, scope: !3914)
!3924 = !DILocation(line: 875, column: 91, scope: !3914)
!3925 = !DILocation(line: 875, column: 3, scope: !3914)
!3926 = !DILocation(line: 874, column: 47, scope: !3914)
!3927 = !DILocation(line: 874, column: 52, scope: !3914)
!3928 = !DILocation(line: 874, column: 45, scope: !3914)
!3929 = !DILocation(line: 874, column: 2, scope: !3914)
!3930 = distinct !{!3930, !3915, !3931}
!3931 = !DILocation(line: 875, column: 103, scope: !3908)
!3932 = !DILocation(line: 878, column: 2, scope: !3787)
!3933 = !DILocation(line: 878, column: 12, scope: !3787)
!3934 = !DILocation(line: 879, column: 2, scope: !3787)
!3935 = !DILocation(line: 879, column: 12, scope: !3787)
!3936 = !DILocation(line: 880, column: 1, scope: !3787)
!3937 = distinct !DISubprogram(name: "drivers_path_rename_fix", scope: !1, file: !1, line: 731, type: !3938, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{null, !176, !176, !299, !299, !299, !299, !299, !1029, !1529}
!3940 = !DILocalVariable(name: "owner_id", arg: 1, scope: !3937, file: !1, line: 731, type: !176)
!3941 = !DILocation(line: 731, column: 41, scope: !3937)
!3942 = !DILocalVariable(name: "ref_id", arg: 2, scope: !3937, file: !1, line: 731, type: !176)
!3943 = !DILocation(line: 731, column: 55, scope: !3937)
!3944 = !DILocalVariable(name: "prefix", arg: 3, scope: !3937, file: !1, line: 731, type: !299)
!3945 = !DILocation(line: 731, column: 75, scope: !3937)
!3946 = !DILocalVariable(name: "oldName", arg: 4, scope: !3937, file: !1, line: 731, type: !299)
!3947 = !DILocation(line: 731, column: 95, scope: !3937)
!3948 = !DILocalVariable(name: "newName", arg: 5, scope: !3937, file: !1, line: 731, type: !299)
!3949 = !DILocation(line: 731, column: 116, scope: !3937)
!3950 = !DILocalVariable(name: "oldKey", arg: 6, scope: !3937, file: !1, line: 732, type: !299)
!3951 = !DILocation(line: 732, column: 49, scope: !3937)
!3952 = !DILocalVariable(name: "newKey", arg: 7, scope: !3937, file: !1, line: 732, type: !299)
!3953 = !DILocation(line: 732, column: 69, scope: !3937)
!3954 = !DILocalVariable(name: "curves", arg: 8, scope: !3937, file: !1, line: 732, type: !1029)
!3955 = !DILocation(line: 732, column: 87, scope: !3937)
!3956 = !DILocalVariable(name: "verify_paths", arg: 9, scope: !3937, file: !1, line: 732, type: !1529)
!3957 = !DILocation(line: 732, column: 100, scope: !3937)
!3958 = !DILocalVariable(name: "fcu", scope: !3937, file: !1, line: 734, type: !2841)
!3959 = !DILocation(line: 734, column: 10, scope: !3937)
!3960 = !DILocation(line: 737, column: 13, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3937, file: !1, line: 737, column: 2)
!3962 = !DILocation(line: 737, column: 21, scope: !3961)
!3963 = !DILocation(line: 737, column: 11, scope: !3961)
!3964 = !DILocation(line: 737, column: 7, scope: !3961)
!3965 = !DILocation(line: 737, column: 28, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3961, file: !1, line: 737, column: 2)
!3967 = !DILocation(line: 737, column: 2, scope: !3961)
!3968 = !DILocation(line: 739, column: 7, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !1, line: 739, column: 7)
!3970 = distinct !DILexicalBlock(scope: !3966, file: !1, line: 737, column: 50)
!3971 = !DILocation(line: 739, column: 12, scope: !3969)
!3972 = !DILocation(line: 739, column: 7, scope: !3970)
!3973 = !DILocation(line: 740, column: 40, scope: !3969)
!3974 = !DILocation(line: 740, column: 50, scope: !3969)
!3975 = !DILocation(line: 740, column: 58, scope: !3969)
!3976 = !DILocation(line: 740, column: 66, scope: !3969)
!3977 = !DILocation(line: 740, column: 74, scope: !3969)
!3978 = !DILocation(line: 740, column: 79, scope: !3969)
!3979 = !DILocation(line: 740, column: 89, scope: !3969)
!3980 = !DILocation(line: 740, column: 20, scope: !3969)
!3981 = !DILocation(line: 740, column: 4, scope: !3969)
!3982 = !DILocation(line: 740, column: 9, scope: !3969)
!3983 = !DILocation(line: 740, column: 18, scope: !3969)
!3984 = !DILocation(line: 743, column: 7, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3970, file: !1, line: 743, column: 7)
!3986 = !DILocation(line: 743, column: 12, scope: !3985)
!3987 = !DILocation(line: 743, column: 7, scope: !3970)
!3988 = !DILocalVariable(name: "driver", scope: !3989, file: !1, line: 744, type: !2871)
!3989 = distinct !DILexicalBlock(scope: !3985, file: !1, line: 743, column: 20)
!3990 = !DILocation(line: 744, column: 19, scope: !3989)
!3991 = !DILocation(line: 744, column: 28, scope: !3989)
!3992 = !DILocation(line: 744, column: 33, scope: !3989)
!3993 = !DILocalVariable(name: "dvar", scope: !3989, file: !1, line: 745, type: !2939)
!3994 = !DILocation(line: 745, column: 15, scope: !3989)
!3995 = !DILocation(line: 748, column: 16, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3989, file: !1, line: 748, column: 4)
!3997 = !DILocation(line: 748, column: 24, scope: !3996)
!3998 = !DILocation(line: 748, column: 34, scope: !3996)
!3999 = !DILocation(line: 748, column: 14, scope: !3996)
!4000 = !DILocation(line: 748, column: 9, scope: !3996)
!4001 = !DILocation(line: 748, column: 41, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3996, file: !1, line: 748, column: 4)
!4003 = !DILocation(line: 748, column: 4, scope: !3996)
!4004 = !DILocalVariable(name: "dtar", scope: !4005, file: !1, line: 750, type: !2974)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !1, line: 750, column: 5)
!4006 = distinct !DILexicalBlock(scope: !4002, file: !1, line: 748, column: 66)
!4007 = !DILocation(line: 750, column: 5, scope: !4005)
!4008 = !DILocalVariable(name: "tarIndex", scope: !4005, file: !1, line: 750, type: !43)
!4009 = !DILocation(line: 750, column: 5, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4011, file: !1, line: 750, column: 5)
!4011 = distinct !DILexicalBlock(scope: !4005, file: !1, line: 750, column: 5)
!4012 = !DILocation(line: 750, column: 5, scope: !4011)
!4013 = !DILocation(line: 753, column: 10, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4015, file: !1, line: 753, column: 10)
!4015 = distinct !DILexicalBlock(scope: !4010, file: !1, line: 751, column: 5)
!4016 = !DILocation(line: 753, column: 16, scope: !4014)
!4017 = !DILocation(line: 753, column: 25, scope: !4014)
!4018 = !DILocation(line: 753, column: 28, scope: !4014)
!4019 = !DILocation(line: 753, column: 34, scope: !4014)
!4020 = !DILocation(line: 753, column: 10, scope: !4015)
!4021 = !DILocation(line: 754, column: 44, scope: !4014)
!4022 = !DILocation(line: 754, column: 50, scope: !4014)
!4023 = !DILocation(line: 754, column: 54, scope: !4014)
!4024 = !DILocation(line: 754, column: 62, scope: !4014)
!4025 = !DILocation(line: 754, column: 70, scope: !4014)
!4026 = !DILocation(line: 754, column: 78, scope: !4014)
!4027 = !DILocation(line: 754, column: 84, scope: !4014)
!4028 = !DILocation(line: 754, column: 94, scope: !4014)
!4029 = !DILocation(line: 754, column: 24, scope: !4014)
!4030 = !DILocation(line: 754, column: 7, scope: !4014)
!4031 = !DILocation(line: 754, column: 13, scope: !4014)
!4032 = !DILocation(line: 754, column: 22, scope: !4014)
!4033 = !DILocation(line: 757, column: 17, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4015, file: !1, line: 757, column: 10)
!4035 = !DILocation(line: 757, column: 10, scope: !4034)
!4036 = !DILocation(line: 757, column: 10, scope: !4015)
!4037 = !DILocation(line: 758, column: 14, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !1, line: 758, column: 12)
!4039 = distinct !DILexicalBlock(scope: !4034, file: !1, line: 757, column: 35)
!4040 = !DILocation(line: 758, column: 20, scope: !4038)
!4041 = !DILocation(line: 758, column: 13, scope: !4038)
!4042 = !DILocation(line: 758, column: 24, scope: !4038)
!4043 = !DILocation(line: 758, column: 28, scope: !4038)
!4044 = !DILocation(line: 758, column: 47, scope: !4038)
!4045 = !DILocation(line: 758, column: 57, scope: !4038)
!4046 = !DILocation(line: 758, column: 62, scope: !4038)
!4047 = !DILocation(line: 758, column: 69, scope: !4038)
!4048 = !DILocation(line: 758, column: 84, scope: !4038)
!4049 = !DILocation(line: 758, column: 90, scope: !4038)
!4050 = !DILocation(line: 758, column: 96, scope: !4038)
!4051 = !DILocation(line: 758, column: 104, scope: !4038)
!4052 = !DILocation(line: 758, column: 101, scope: !4038)
!4053 = !DILocation(line: 758, column: 113, scope: !4038)
!4054 = !DILocation(line: 759, column: 13, scope: !4038)
!4055 = !DILocation(line: 759, column: 19, scope: !4038)
!4056 = !DILocation(line: 759, column: 12, scope: !4038)
!4057 = !DILocation(line: 759, column: 34, scope: !4038)
!4058 = !DILocation(line: 759, column: 45, scope: !4038)
!4059 = !DILocation(line: 759, column: 54, scope: !4038)
!4060 = !DILocation(line: 759, column: 60, scope: !4038)
!4061 = !DILocation(line: 759, column: 38, scope: !4038)
!4062 = !DILocation(line: 759, column: 72, scope: !4038)
!4063 = !DILocation(line: 758, column: 12, scope: !4039)
!4064 = !DILocation(line: 761, column: 20, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4038, file: !1, line: 760, column: 7)
!4066 = !DILocation(line: 761, column: 26, scope: !4065)
!4067 = !DILocation(line: 761, column: 38, scope: !4065)
!4068 = !DILocation(line: 761, column: 8, scope: !4065)
!4069 = !DILocation(line: 762, column: 7, scope: !4065)
!4070 = !DILocation(line: 763, column: 6, scope: !4039)
!4071 = !DILocation(line: 764, column: 5, scope: !4015)
!4072 = distinct !{!4072, !4012, !4073}
!4073 = !DILocation(line: 764, column: 5, scope: !4011)
!4074 = !DILocation(line: 766, column: 4, scope: !4006)
!4075 = !DILocation(line: 748, column: 54, scope: !4002)
!4076 = !DILocation(line: 748, column: 60, scope: !4002)
!4077 = !DILocation(line: 748, column: 52, scope: !4002)
!4078 = !DILocation(line: 748, column: 4, scope: !4002)
!4079 = distinct !{!4079, !4003, !4080}
!4080 = !DILocation(line: 766, column: 4, scope: !3996)
!4081 = !DILocation(line: 767, column: 3, scope: !3989)
!4082 = !DILocation(line: 768, column: 2, scope: !3970)
!4083 = !DILocation(line: 737, column: 39, scope: !3966)
!4084 = !DILocation(line: 737, column: 44, scope: !3966)
!4085 = !DILocation(line: 737, column: 37, scope: !3966)
!4086 = !DILocation(line: 737, column: 2, scope: !3966)
!4087 = distinct !{!4087, !3967, !4088}
!4088 = !DILocation(line: 768, column: 2, scope: !3961)
!4089 = !DILocation(line: 769, column: 1, scope: !3937)
!4090 = distinct !DISubprogram(name: "nlastrips_path_rename_fix", scope: !1, file: !1, line: 772, type: !3701, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!4091 = !DILocalVariable(name: "owner_id", arg: 1, scope: !4090, file: !1, line: 772, type: !176)
!4092 = !DILocation(line: 772, column: 43, scope: !4090)
!4093 = !DILocalVariable(name: "prefix", arg: 2, scope: !4090, file: !1, line: 772, type: !299)
!4094 = !DILocation(line: 772, column: 65, scope: !4090)
!4095 = !DILocalVariable(name: "oldName", arg: 3, scope: !4090, file: !1, line: 772, type: !299)
!4096 = !DILocation(line: 772, column: 85, scope: !4090)
!4097 = !DILocalVariable(name: "newName", arg: 4, scope: !4090, file: !1, line: 772, type: !299)
!4098 = !DILocation(line: 772, column: 106, scope: !4090)
!4099 = !DILocalVariable(name: "oldKey", arg: 5, scope: !4090, file: !1, line: 773, type: !299)
!4100 = !DILocation(line: 773, column: 51, scope: !4090)
!4101 = !DILocalVariable(name: "newKey", arg: 6, scope: !4090, file: !1, line: 773, type: !299)
!4102 = !DILocation(line: 773, column: 71, scope: !4090)
!4103 = !DILocalVariable(name: "strips", arg: 7, scope: !4090, file: !1, line: 773, type: !1029)
!4104 = !DILocation(line: 773, column: 89, scope: !4090)
!4105 = !DILocalVariable(name: "verify_paths", arg: 8, scope: !4090, file: !1, line: 773, type: !1529)
!4106 = !DILocation(line: 773, column: 102, scope: !4090)
!4107 = !DILocalVariable(name: "strip", scope: !4090, file: !1, line: 775, type: !261)
!4108 = !DILocation(line: 775, column: 12, scope: !4090)
!4109 = !DILocation(line: 778, column: 15, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4090, file: !1, line: 778, column: 2)
!4111 = !DILocation(line: 778, column: 23, scope: !4110)
!4112 = !DILocation(line: 778, column: 13, scope: !4110)
!4113 = !DILocation(line: 778, column: 7, scope: !4110)
!4114 = !DILocation(line: 778, column: 30, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4110, file: !1, line: 778, column: 2)
!4116 = !DILocation(line: 778, column: 2, scope: !4110)
!4117 = !DILocation(line: 780, column: 7, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 780, column: 7)
!4119 = distinct !DILexicalBlock(scope: !4115, file: !1, line: 778, column: 58)
!4120 = !DILocation(line: 780, column: 14, scope: !4118)
!4121 = !DILocation(line: 780, column: 7, scope: !4119)
!4122 = !DILocation(line: 781, column: 28, scope: !4118)
!4123 = !DILocation(line: 781, column: 38, scope: !4118)
!4124 = !DILocation(line: 781, column: 46, scope: !4118)
!4125 = !DILocation(line: 781, column: 55, scope: !4118)
!4126 = !DILocation(line: 781, column: 64, scope: !4118)
!4127 = !DILocation(line: 781, column: 72, scope: !4118)
!4128 = !DILocation(line: 781, column: 81, scope: !4118)
!4129 = !DILocation(line: 781, column: 88, scope: !4118)
!4130 = !DILocation(line: 781, column: 93, scope: !4118)
!4131 = !DILocation(line: 781, column: 101, scope: !4118)
!4132 = !DILocation(line: 781, column: 4, scope: !4118)
!4133 = !DILocation(line: 785, column: 29, scope: !4119)
!4134 = !DILocation(line: 785, column: 39, scope: !4119)
!4135 = !DILocation(line: 785, column: 47, scope: !4119)
!4136 = !DILocation(line: 785, column: 56, scope: !4119)
!4137 = !DILocation(line: 785, column: 65, scope: !4119)
!4138 = !DILocation(line: 785, column: 73, scope: !4119)
!4139 = !DILocation(line: 785, column: 82, scope: !4119)
!4140 = !DILocation(line: 785, column: 89, scope: !4119)
!4141 = !DILocation(line: 785, column: 97, scope: !4119)
!4142 = !DILocation(line: 785, column: 3, scope: !4119)
!4143 = !DILocation(line: 786, column: 2, scope: !4119)
!4144 = !DILocation(line: 778, column: 45, scope: !4115)
!4145 = !DILocation(line: 778, column: 52, scope: !4115)
!4146 = !DILocation(line: 778, column: 43, scope: !4115)
!4147 = !DILocation(line: 778, column: 2, scope: !4115)
!4148 = distinct !{!4148, !4116, !4149}
!4149 = !DILocation(line: 786, column: 2, scope: !4110)
!4150 = !DILocation(line: 787, column: 1, scope: !4090)
!4151 = distinct !DISubprogram(name: "BKE_animdata_fix_paths_remove", scope: !1, file: !1, line: 921, type: !4152, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{null, !176, !299}
!4154 = !DILocalVariable(name: "id", arg: 1, scope: !4151, file: !1, line: 921, type: !176)
!4155 = !DILocation(line: 921, column: 40, scope: !4151)
!4156 = !DILocalVariable(name: "prefix", arg: 2, scope: !4151, file: !1, line: 921, type: !299)
!4157 = !DILocation(line: 921, column: 56, scope: !4151)
!4158 = !DILocalVariable(name: "nlt", scope: !4151, file: !1, line: 926, type: !2723)
!4159 = !DILocation(line: 926, column: 12, scope: !4151)
!4160 = !DILocation(line: 928, column: 32, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4151, file: !1, line: 928, column: 6)
!4162 = !DILocation(line: 928, column: 6, scope: !4161)
!4163 = !DILocation(line: 928, column: 6, scope: !4151)
!4164 = !DILocalVariable(name: "iat", scope: !4165, file: !1, line: 929, type: !157)
!4165 = distinct !DILexicalBlock(scope: !4161, file: !1, line: 928, column: 37)
!4166 = !DILocation(line: 929, column: 18, scope: !4165)
!4167 = !DILocation(line: 929, column: 41, scope: !4165)
!4168 = !DILocation(line: 929, column: 24, scope: !4165)
!4169 = !DILocalVariable(name: "adt", scope: !4165, file: !1, line: 930, type: !230)
!4170 = !DILocation(line: 930, column: 13, scope: !4165)
!4171 = !DILocation(line: 930, column: 19, scope: !4165)
!4172 = !DILocation(line: 930, column: 24, scope: !4165)
!4173 = !DILocation(line: 933, column: 7, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4165, file: !1, line: 933, column: 7)
!4175 = !DILocation(line: 933, column: 7, scope: !4165)
!4176 = !DILocation(line: 936, column: 8, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !1, line: 936, column: 8)
!4178 = distinct !DILexicalBlock(scope: !4174, file: !1, line: 933, column: 12)
!4179 = !DILocation(line: 936, column: 13, scope: !4177)
!4180 = !DILocation(line: 936, column: 8, scope: !4178)
!4181 = !DILocation(line: 937, column: 29, scope: !4177)
!4182 = !DILocation(line: 937, column: 38, scope: !4177)
!4183 = !DILocation(line: 937, column: 43, scope: !4177)
!4184 = !DILocation(line: 937, column: 51, scope: !4177)
!4185 = !DILocation(line: 937, column: 5, scope: !4177)
!4186 = !DILocation(line: 939, column: 8, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4178, file: !1, line: 939, column: 8)
!4188 = !DILocation(line: 939, column: 13, scope: !4187)
!4189 = !DILocation(line: 939, column: 8, scope: !4178)
!4190 = !DILocation(line: 940, column: 29, scope: !4187)
!4191 = !DILocation(line: 940, column: 38, scope: !4187)
!4192 = !DILocation(line: 940, column: 43, scope: !4187)
!4193 = !DILocation(line: 940, column: 51, scope: !4187)
!4194 = !DILocation(line: 940, column: 5, scope: !4187)
!4195 = !DILocation(line: 943, column: 28, scope: !4178)
!4196 = !DILocation(line: 943, column: 37, scope: !4178)
!4197 = !DILocation(line: 943, column: 42, scope: !4178)
!4198 = !DILocation(line: 943, column: 4, scope: !4178)
!4199 = !DILocation(line: 946, column: 15, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4178, file: !1, line: 946, column: 4)
!4201 = !DILocation(line: 946, column: 20, scope: !4200)
!4202 = !DILocation(line: 946, column: 31, scope: !4200)
!4203 = !DILocation(line: 946, column: 13, scope: !4200)
!4204 = !DILocation(line: 946, column: 9, scope: !4200)
!4205 = !DILocation(line: 946, column: 38, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4200, file: !1, line: 946, column: 4)
!4207 = !DILocation(line: 946, column: 4, scope: !4200)
!4208 = !DILocation(line: 947, column: 31, scope: !4206)
!4209 = !DILocation(line: 947, column: 40, scope: !4206)
!4210 = !DILocation(line: 947, column: 45, scope: !4206)
!4211 = !DILocation(line: 947, column: 5, scope: !4206)
!4212 = !DILocation(line: 946, column: 49, scope: !4206)
!4213 = !DILocation(line: 946, column: 54, scope: !4206)
!4214 = !DILocation(line: 946, column: 47, scope: !4206)
!4215 = !DILocation(line: 946, column: 4, scope: !4206)
!4216 = distinct !{!4216, !4207, !4217}
!4217 = !DILocation(line: 947, column: 51, scope: !4200)
!4218 = !DILocation(line: 948, column: 3, scope: !4178)
!4219 = !DILocation(line: 949, column: 2, scope: !4165)
!4220 = !DILocation(line: 950, column: 1, scope: !4151)
!4221 = distinct !DISubprogram(name: "fcurves_path_remove_fix", scope: !1, file: !1, line: 886, type: !4222, scopeLine: 887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{null, !299, !1029}
!4224 = !DILocalVariable(name: "prefix", arg: 1, scope: !4221, file: !1, line: 886, type: !299)
!4225 = !DILocation(line: 886, column: 49, scope: !4221)
!4226 = !DILocalVariable(name: "curves", arg: 2, scope: !4221, file: !1, line: 886, type: !1029)
!4227 = !DILocation(line: 886, column: 67, scope: !4221)
!4228 = !DILocalVariable(name: "fcu", scope: !4221, file: !1, line: 888, type: !2841)
!4229 = !DILocation(line: 888, column: 10, scope: !4221)
!4230 = !DILocalVariable(name: "fcn", scope: !4221, file: !1, line: 888, type: !2841)
!4231 = !DILocation(line: 888, column: 16, scope: !4221)
!4232 = !DILocation(line: 889, column: 7, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4221, file: !1, line: 889, column: 6)
!4234 = !DILocation(line: 889, column: 6, scope: !4221)
!4235 = !DILocation(line: 889, column: 15, scope: !4233)
!4236 = !DILocation(line: 892, column: 13, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4221, file: !1, line: 892, column: 2)
!4238 = !DILocation(line: 892, column: 21, scope: !4237)
!4239 = !DILocation(line: 892, column: 11, scope: !4237)
!4240 = !DILocation(line: 892, column: 7, scope: !4237)
!4241 = !DILocation(line: 892, column: 28, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4237, file: !1, line: 892, column: 2)
!4243 = !DILocation(line: 892, column: 2, scope: !4237)
!4244 = !DILocation(line: 893, column: 9, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4242, file: !1, line: 892, column: 44)
!4246 = !DILocation(line: 893, column: 14, scope: !4245)
!4247 = !DILocation(line: 893, column: 7, scope: !4245)
!4248 = !DILocation(line: 895, column: 7, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4245, file: !1, line: 895, column: 7)
!4250 = !DILocation(line: 895, column: 12, scope: !4249)
!4251 = !DILocation(line: 895, column: 7, scope: !4245)
!4252 = !DILocation(line: 896, column: 8, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !1, line: 896, column: 8)
!4254 = distinct !DILexicalBlock(scope: !4249, file: !1, line: 895, column: 22)
!4255 = !DILocation(line: 896, column: 8, scope: !4254)
!4256 = !DILocation(line: 897, column: 17, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4253, file: !1, line: 896, column: 42)
!4258 = !DILocation(line: 897, column: 25, scope: !4257)
!4259 = !DILocation(line: 897, column: 5, scope: !4257)
!4260 = !DILocation(line: 898, column: 17, scope: !4257)
!4261 = !DILocation(line: 898, column: 5, scope: !4257)
!4262 = !DILocation(line: 899, column: 4, scope: !4257)
!4263 = !DILocation(line: 900, column: 3, scope: !4254)
!4264 = !DILocation(line: 901, column: 2, scope: !4245)
!4265 = !DILocation(line: 892, column: 39, scope: !4242)
!4266 = !DILocation(line: 892, column: 37, scope: !4242)
!4267 = !DILocation(line: 892, column: 2, scope: !4242)
!4268 = distinct !{!4268, !4243, !4269}
!4269 = !DILocation(line: 901, column: 2, scope: !4237)
!4270 = !DILocation(line: 902, column: 1, scope: !4221)
!4271 = distinct !DISubprogram(name: "nlastrips_path_remove_fix", scope: !1, file: !1, line: 905, type: !4222, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!4272 = !DILocalVariable(name: "prefix", arg: 1, scope: !4271, file: !1, line: 905, type: !299)
!4273 = !DILocation(line: 905, column: 51, scope: !4271)
!4274 = !DILocalVariable(name: "strips", arg: 2, scope: !4271, file: !1, line: 905, type: !1029)
!4275 = !DILocation(line: 905, column: 69, scope: !4271)
!4276 = !DILocalVariable(name: "strip", scope: !4271, file: !1, line: 907, type: !261)
!4277 = !DILocation(line: 907, column: 12, scope: !4271)
!4278 = !DILocation(line: 910, column: 15, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4271, file: !1, line: 910, column: 2)
!4280 = !DILocation(line: 910, column: 23, scope: !4279)
!4281 = !DILocation(line: 910, column: 13, scope: !4279)
!4282 = !DILocation(line: 910, column: 7, scope: !4279)
!4283 = !DILocation(line: 910, column: 30, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4279, file: !1, line: 910, column: 2)
!4285 = !DILocation(line: 910, column: 2, scope: !4279)
!4286 = !DILocation(line: 913, column: 7, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !1, line: 913, column: 7)
!4288 = distinct !DILexicalBlock(scope: !4284, file: !1, line: 910, column: 58)
!4289 = !DILocation(line: 913, column: 14, scope: !4287)
!4290 = !DILocation(line: 913, column: 7, scope: !4288)
!4291 = !DILocation(line: 914, column: 28, scope: !4287)
!4292 = !DILocation(line: 914, column: 37, scope: !4287)
!4293 = !DILocation(line: 914, column: 44, scope: !4287)
!4294 = !DILocation(line: 914, column: 49, scope: !4287)
!4295 = !DILocation(line: 914, column: 4, scope: !4287)
!4296 = !DILocation(line: 917, column: 29, scope: !4288)
!4297 = !DILocation(line: 917, column: 38, scope: !4288)
!4298 = !DILocation(line: 917, column: 45, scope: !4288)
!4299 = !DILocation(line: 917, column: 3, scope: !4288)
!4300 = !DILocation(line: 918, column: 2, scope: !4288)
!4301 = !DILocation(line: 910, column: 45, scope: !4284)
!4302 = !DILocation(line: 910, column: 52, scope: !4284)
!4303 = !DILocation(line: 910, column: 43, scope: !4284)
!4304 = !DILocation(line: 910, column: 2, scope: !4284)
!4305 = distinct !{!4305, !4285, !4306}
!4306 = !DILocation(line: 918, column: 2, scope: !4279)
!4307 = !DILocation(line: 919, column: 1, scope: !4271)
!4308 = distinct !DISubprogram(name: "BKE_animdata_main_cb", scope: !1, file: !1, line: 955, type: !4309, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{null, !4311, !4375, !152}
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !4313, line: 104, baseType: !4314)
!4313 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !4313, line: 53, size: 15232, elements: !4315)
!4315 = !{!4316, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4372}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4314, file: !4313, line: 54, baseType: !4317, size: 64)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4314, size: 64)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4314, file: !4313, line: 54, baseType: !4317, size: 64, offset: 64)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4314, file: !4313, line: 55, baseType: !181, size: 8192, offset: 128)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !4314, file: !4313, line: 56, baseType: !156, size: 16, offset: 8320)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !4314, file: !4313, line: 56, baseType: !156, size: 16, offset: 8336)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !4314, file: !4313, line: 57, baseType: !156, size: 16, offset: 8352)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !4314, file: !4313, line: 57, baseType: !156, size: 16, offset: 8368)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !4314, file: !4313, line: 58, baseType: !1018, size: 64, offset: 8384)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !4314, file: !4313, line: 59, baseType: !4326, size: 128, offset: 8448)
!4326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 128, elements: !4327)
!4327 = !{!4328}
!4328 = !DISubrange(count: 16)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !4314, file: !4313, line: 60, baseType: !156, size: 16, offset: 8576)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !4314, file: !4313, line: 62, baseType: !171, size: 64, offset: 8640)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !4314, file: !4313, line: 63, baseType: !219, size: 128, offset: 8704)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !4314, file: !4313, line: 64, baseType: !219, size: 128, offset: 8832)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !4314, file: !4313, line: 65, baseType: !219, size: 128, offset: 8960)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !4314, file: !4313, line: 66, baseType: !219, size: 128, offset: 9088)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !4314, file: !4313, line: 67, baseType: !219, size: 128, offset: 9216)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !4314, file: !4313, line: 68, baseType: !219, size: 128, offset: 9344)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4314, file: !4313, line: 69, baseType: !219, size: 128, offset: 9472)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !4314, file: !4313, line: 70, baseType: !219, size: 128, offset: 9600)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !4314, file: !4313, line: 71, baseType: !219, size: 128, offset: 9728)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !4314, file: !4313, line: 72, baseType: !219, size: 128, offset: 9856)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !4314, file: !4313, line: 73, baseType: !219, size: 128, offset: 9984)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !4314, file: !4313, line: 74, baseType: !219, size: 128, offset: 10112)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !4314, file: !4313, line: 75, baseType: !219, size: 128, offset: 10240)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4314, file: !4313, line: 76, baseType: !219, size: 128, offset: 10368)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !4314, file: !4313, line: 77, baseType: !219, size: 128, offset: 10496)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !4314, file: !4313, line: 78, baseType: !219, size: 128, offset: 10624)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !4314, file: !4313, line: 79, baseType: !219, size: 128, offset: 10752)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !4314, file: !4313, line: 80, baseType: !219, size: 128, offset: 10880)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !4314, file: !4313, line: 81, baseType: !219, size: 128, offset: 11008)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !4314, file: !4313, line: 82, baseType: !219, size: 128, offset: 11136)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !4314, file: !4313, line: 83, baseType: !219, size: 128, offset: 11264)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !4314, file: !4313, line: 84, baseType: !219, size: 128, offset: 11392)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !4314, file: !4313, line: 85, baseType: !219, size: 128, offset: 11520)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4314, file: !4313, line: 86, baseType: !219, size: 128, offset: 11648)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !4314, file: !4313, line: 87, baseType: !219, size: 128, offset: 11776)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !4314, file: !4313, line: 88, baseType: !219, size: 128, offset: 11904)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !4314, file: !4313, line: 89, baseType: !219, size: 128, offset: 12032)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !4314, file: !4313, line: 90, baseType: !219, size: 128, offset: 12160)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !4314, file: !4313, line: 91, baseType: !219, size: 128, offset: 12288)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !4314, file: !4313, line: 92, baseType: !219, size: 128, offset: 12416)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !4314, file: !4313, line: 93, baseType: !219, size: 128, offset: 12544)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !4314, file: !4313, line: 94, baseType: !219, size: 128, offset: 12672)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4314, file: !4313, line: 95, baseType: !219, size: 128, offset: 12800)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !4314, file: !4313, line: 96, baseType: !219, size: 128, offset: 12928)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !4314, file: !4313, line: 98, baseType: !1216, size: 2048, offset: 13056)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !4314, file: !4313, line: 101, baseType: !4367, size: 64, offset: 15104)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !4369, line: 58, size: 32, elements: !4370)
!4369 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4370 = !{!4371}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4368, file: !4369, line: 59, baseType: !43, size: 32)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4314, file: !4313, line: 103, baseType: !4373, size: 64, offset: 15168)
!4373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4374, size: 64)
!4374 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !4313, line: 51, flags: DIFlagFwdDecl)
!4375 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID_AnimData_Edit_Callback", file: !3401, line: 139, baseType: !4376)
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4377 = !DISubroutineType(types: !4378)
!4378 = !{null, !169, !308, !152}
!4379 = !DILocalVariable(name: "mainptr", arg: 1, scope: !4308, file: !1, line: 955, type: !4311)
!4380 = !DILocation(line: 955, column: 33, scope: !4308)
!4381 = !DILocalVariable(name: "func", arg: 2, scope: !4308, file: !1, line: 955, type: !4375)
!4382 = !DILocation(line: 955, column: 68, scope: !4308)
!4383 = !DILocalVariable(name: "user_data", arg: 3, scope: !4308, file: !1, line: 955, type: !152)
!4384 = !DILocation(line: 955, column: 80, scope: !4308)
!4385 = !DILocalVariable(name: "id", scope: !4308, file: !1, line: 957, type: !176)
!4386 = !DILocation(line: 957, column: 6, scope: !4308)
!4387 = !DILocation(line: 979, column: 2, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 979, column: 2)
!4389 = !DILocation(line: 979, column: 2, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4388, file: !1, line: 979, column: 2)
!4391 = !DILocalVariable(name: "adt", scope: !4392, file: !1, line: 979, type: !230)
!4392 = distinct !DILexicalBlock(scope: !4390, file: !1, line: 979, column: 2)
!4393 = !DILocation(line: 979, column: 2, scope: !4392)
!4394 = !DILocation(line: 979, column: 2, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4392, file: !1, line: 979, column: 2)
!4396 = distinct !{!4396, !4387, !4387}
!4397 = !DILocation(line: 982, column: 2, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 982, column: 2)
!4399 = !DILocation(line: 982, column: 2, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4398, file: !1, line: 982, column: 2)
!4401 = !DILocalVariable(name: "adt", scope: !4402, file: !1, line: 982, type: !230)
!4402 = distinct !DILexicalBlock(scope: !4400, file: !1, line: 982, column: 2)
!4403 = !DILocation(line: 982, column: 2, scope: !4402)
!4404 = !DILocalVariable(name: "ntp", scope: !4402, file: !1, line: 982, type: !301)
!4405 = !DILocation(line: 982, column: 2, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4402, file: !1, line: 982, column: 2)
!4407 = !DILocalVariable(name: "adt2", scope: !4408, file: !1, line: 982, type: !230)
!4408 = distinct !DILexicalBlock(scope: !4406, file: !1, line: 982, column: 2)
!4409 = !DILocation(line: 982, column: 2, scope: !4408)
!4410 = !DILocation(line: 982, column: 2, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4408, file: !1, line: 982, column: 2)
!4412 = !DILocation(line: 982, column: 2, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4402, file: !1, line: 982, column: 2)
!4414 = distinct !{!4414, !4397, !4397}
!4415 = !DILocation(line: 985, column: 2, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 985, column: 2)
!4417 = !DILocation(line: 985, column: 2, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4416, file: !1, line: 985, column: 2)
!4419 = !DILocalVariable(name: "adt", scope: !4420, file: !1, line: 985, type: !230)
!4420 = distinct !DILexicalBlock(scope: !4418, file: !1, line: 985, column: 2)
!4421 = !DILocation(line: 985, column: 2, scope: !4420)
!4422 = !DILocalVariable(name: "ntp", scope: !4420, file: !1, line: 985, type: !2238)
!4423 = !DILocation(line: 985, column: 2, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4420, file: !1, line: 985, column: 2)
!4425 = !DILocalVariable(name: "adt2", scope: !4426, file: !1, line: 985, type: !230)
!4426 = distinct !DILexicalBlock(scope: !4424, file: !1, line: 985, column: 2)
!4427 = !DILocation(line: 985, column: 2, scope: !4426)
!4428 = !DILocation(line: 985, column: 2, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4426, file: !1, line: 985, column: 2)
!4430 = !DILocation(line: 985, column: 2, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4420, file: !1, line: 985, column: 2)
!4432 = distinct !{!4432, !4415, !4415}
!4433 = !DILocation(line: 988, column: 2, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 988, column: 2)
!4435 = !DILocation(line: 988, column: 2, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4434, file: !1, line: 988, column: 2)
!4437 = !DILocalVariable(name: "adt", scope: !4438, file: !1, line: 988, type: !230)
!4438 = distinct !DILexicalBlock(scope: !4436, file: !1, line: 988, column: 2)
!4439 = !DILocation(line: 988, column: 2, scope: !4438)
!4440 = !DILocalVariable(name: "ntp", scope: !4438, file: !1, line: 988, type: !2319)
!4441 = !DILocation(line: 988, column: 2, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 988, column: 2)
!4443 = !DILocalVariable(name: "adt2", scope: !4444, file: !1, line: 988, type: !230)
!4444 = distinct !DILexicalBlock(scope: !4442, file: !1, line: 988, column: 2)
!4445 = !DILocation(line: 988, column: 2, scope: !4444)
!4446 = !DILocation(line: 988, column: 2, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4444, file: !1, line: 988, column: 2)
!4448 = !DILocation(line: 988, column: 2, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4438, file: !1, line: 988, column: 2)
!4450 = distinct !{!4450, !4433, !4433}
!4451 = !DILocation(line: 991, column: 2, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 991, column: 2)
!4453 = !DILocation(line: 991, column: 2, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4452, file: !1, line: 991, column: 2)
!4455 = !DILocalVariable(name: "adt", scope: !4456, file: !1, line: 991, type: !230)
!4456 = distinct !DILexicalBlock(scope: !4454, file: !1, line: 991, column: 2)
!4457 = !DILocation(line: 991, column: 2, scope: !4456)
!4458 = !DILocation(line: 991, column: 2, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4456, file: !1, line: 991, column: 2)
!4460 = distinct !{!4460, !4451, !4451}
!4461 = !DILocation(line: 994, column: 2, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 994, column: 2)
!4463 = !DILocation(line: 994, column: 2, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4462, file: !1, line: 994, column: 2)
!4465 = !DILocalVariable(name: "adt", scope: !4466, file: !1, line: 994, type: !230)
!4466 = distinct !DILexicalBlock(scope: !4464, file: !1, line: 994, column: 2)
!4467 = !DILocation(line: 994, column: 2, scope: !4466)
!4468 = !DILocation(line: 994, column: 2, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4466, file: !1, line: 994, column: 2)
!4470 = distinct !{!4470, !4461, !4461}
!4471 = !DILocation(line: 997, column: 2, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 997, column: 2)
!4473 = !DILocation(line: 997, column: 2, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4472, file: !1, line: 997, column: 2)
!4475 = !DILocalVariable(name: "adt", scope: !4476, file: !1, line: 997, type: !230)
!4476 = distinct !DILexicalBlock(scope: !4474, file: !1, line: 997, column: 2)
!4477 = !DILocation(line: 997, column: 2, scope: !4476)
!4478 = !DILocation(line: 997, column: 2, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4476, file: !1, line: 997, column: 2)
!4480 = distinct !{!4480, !4471, !4471}
!4481 = !DILocation(line: 1000, column: 2, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1000, column: 2)
!4483 = !DILocation(line: 1000, column: 2, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4482, file: !1, line: 1000, column: 2)
!4485 = !DILocalVariable(name: "adt", scope: !4486, file: !1, line: 1000, type: !230)
!4486 = distinct !DILexicalBlock(scope: !4484, file: !1, line: 1000, column: 2)
!4487 = !DILocation(line: 1000, column: 2, scope: !4486)
!4488 = !DILocation(line: 1000, column: 2, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4486, file: !1, line: 1000, column: 2)
!4490 = distinct !{!4490, !4481, !4481}
!4491 = !DILocation(line: 1003, column: 2, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1003, column: 2)
!4493 = !DILocation(line: 1003, column: 2, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4492, file: !1, line: 1003, column: 2)
!4495 = !DILocalVariable(name: "adt", scope: !4496, file: !1, line: 1003, type: !230)
!4496 = distinct !DILexicalBlock(scope: !4494, file: !1, line: 1003, column: 2)
!4497 = !DILocation(line: 1003, column: 2, scope: !4496)
!4498 = !DILocation(line: 1003, column: 2, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4496, file: !1, line: 1003, column: 2)
!4500 = distinct !{!4500, !4491, !4491}
!4501 = !DILocation(line: 1006, column: 2, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1006, column: 2)
!4503 = !DILocation(line: 1006, column: 2, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4502, file: !1, line: 1006, column: 2)
!4505 = !DILocalVariable(name: "adt", scope: !4506, file: !1, line: 1006, type: !230)
!4506 = distinct !DILexicalBlock(scope: !4504, file: !1, line: 1006, column: 2)
!4507 = !DILocation(line: 1006, column: 2, scope: !4506)
!4508 = !DILocation(line: 1006, column: 2, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4506, file: !1, line: 1006, column: 2)
!4510 = distinct !{!4510, !4501, !4501}
!4511 = !DILocation(line: 1009, column: 2, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1009, column: 2)
!4513 = !DILocation(line: 1009, column: 2, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 1009, column: 2)
!4515 = !DILocalVariable(name: "adt", scope: !4516, file: !1, line: 1009, type: !230)
!4516 = distinct !DILexicalBlock(scope: !4514, file: !1, line: 1009, column: 2)
!4517 = !DILocation(line: 1009, column: 2, scope: !4516)
!4518 = !DILocation(line: 1009, column: 2, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4516, file: !1, line: 1009, column: 2)
!4520 = distinct !{!4520, !4511, !4511}
!4521 = !DILocation(line: 1012, column: 2, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1012, column: 2)
!4523 = !DILocation(line: 1012, column: 2, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4522, file: !1, line: 1012, column: 2)
!4525 = !DILocalVariable(name: "adt", scope: !4526, file: !1, line: 1012, type: !230)
!4526 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1012, column: 2)
!4527 = !DILocation(line: 1012, column: 2, scope: !4526)
!4528 = !DILocation(line: 1012, column: 2, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4526, file: !1, line: 1012, column: 2)
!4530 = distinct !{!4530, !4521, !4521}
!4531 = !DILocation(line: 1015, column: 2, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1015, column: 2)
!4533 = !DILocation(line: 1015, column: 2, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4532, file: !1, line: 1015, column: 2)
!4535 = !DILocalVariable(name: "adt", scope: !4536, file: !1, line: 1015, type: !230)
!4536 = distinct !DILexicalBlock(scope: !4534, file: !1, line: 1015, column: 2)
!4537 = !DILocation(line: 1015, column: 2, scope: !4536)
!4538 = !DILocation(line: 1015, column: 2, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4536, file: !1, line: 1015, column: 2)
!4540 = distinct !{!4540, !4531, !4531}
!4541 = !DILocation(line: 1018, column: 2, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1018, column: 2)
!4543 = !DILocation(line: 1018, column: 2, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4542, file: !1, line: 1018, column: 2)
!4545 = !DILocalVariable(name: "adt", scope: !4546, file: !1, line: 1018, type: !230)
!4546 = distinct !DILexicalBlock(scope: !4544, file: !1, line: 1018, column: 2)
!4547 = !DILocation(line: 1018, column: 2, scope: !4546)
!4548 = !DILocation(line: 1018, column: 2, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4546, file: !1, line: 1018, column: 2)
!4550 = distinct !{!4550, !4541, !4541}
!4551 = !DILocation(line: 1021, column: 2, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1021, column: 2)
!4553 = !DILocation(line: 1021, column: 2, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4552, file: !1, line: 1021, column: 2)
!4555 = !DILocalVariable(name: "adt", scope: !4556, file: !1, line: 1021, type: !230)
!4556 = distinct !DILexicalBlock(scope: !4554, file: !1, line: 1021, column: 2)
!4557 = !DILocation(line: 1021, column: 2, scope: !4556)
!4558 = !DILocation(line: 1021, column: 2, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4556, file: !1, line: 1021, column: 2)
!4560 = distinct !{!4560, !4551, !4551}
!4561 = !DILocation(line: 1024, column: 2, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1024, column: 2)
!4563 = !DILocation(line: 1024, column: 2, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4562, file: !1, line: 1024, column: 2)
!4565 = !DILocalVariable(name: "adt", scope: !4566, file: !1, line: 1024, type: !230)
!4566 = distinct !DILexicalBlock(scope: !4564, file: !1, line: 1024, column: 2)
!4567 = !DILocation(line: 1024, column: 2, scope: !4566)
!4568 = !DILocation(line: 1024, column: 2, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4566, file: !1, line: 1024, column: 2)
!4570 = distinct !{!4570, !4561, !4561}
!4571 = !DILocation(line: 1027, column: 2, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1027, column: 2)
!4573 = !DILocation(line: 1027, column: 2, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4572, file: !1, line: 1027, column: 2)
!4575 = !DILocalVariable(name: "adt", scope: !4576, file: !1, line: 1027, type: !230)
!4576 = distinct !DILexicalBlock(scope: !4574, file: !1, line: 1027, column: 2)
!4577 = !DILocation(line: 1027, column: 2, scope: !4576)
!4578 = !DILocalVariable(name: "ntp", scope: !4576, file: !1, line: 1027, type: !2321)
!4579 = !DILocation(line: 1027, column: 2, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4576, file: !1, line: 1027, column: 2)
!4581 = !DILocalVariable(name: "adt2", scope: !4582, file: !1, line: 1027, type: !230)
!4582 = distinct !DILexicalBlock(scope: !4580, file: !1, line: 1027, column: 2)
!4583 = !DILocation(line: 1027, column: 2, scope: !4582)
!4584 = !DILocation(line: 1027, column: 2, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4582, file: !1, line: 1027, column: 2)
!4586 = !DILocation(line: 1027, column: 2, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4576, file: !1, line: 1027, column: 2)
!4588 = distinct !{!4588, !4571, !4571}
!4589 = !DILocation(line: 1030, column: 2, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1030, column: 2)
!4591 = !DILocation(line: 1030, column: 2, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4590, file: !1, line: 1030, column: 2)
!4593 = !DILocalVariable(name: "adt", scope: !4594, file: !1, line: 1030, type: !230)
!4594 = distinct !DILexicalBlock(scope: !4592, file: !1, line: 1030, column: 2)
!4595 = !DILocation(line: 1030, column: 2, scope: !4594)
!4596 = !DILocalVariable(name: "ntp", scope: !4594, file: !1, line: 1030, type: !2323)
!4597 = !DILocation(line: 1030, column: 2, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4594, file: !1, line: 1030, column: 2)
!4599 = !DILocalVariable(name: "adt2", scope: !4600, file: !1, line: 1030, type: !230)
!4600 = distinct !DILexicalBlock(scope: !4598, file: !1, line: 1030, column: 2)
!4601 = !DILocation(line: 1030, column: 2, scope: !4600)
!4602 = !DILocation(line: 1030, column: 2, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4600, file: !1, line: 1030, column: 2)
!4604 = !DILocation(line: 1030, column: 2, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4594, file: !1, line: 1030, column: 2)
!4606 = distinct !{!4606, !4589, !4589}
!4607 = !DILocation(line: 1033, column: 2, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4308, file: !1, line: 1033, column: 2)
!4609 = !DILocation(line: 1033, column: 2, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4608, file: !1, line: 1033, column: 2)
!4611 = !DILocalVariable(name: "adt", scope: !4612, file: !1, line: 1033, type: !230)
!4612 = distinct !DILexicalBlock(scope: !4610, file: !1, line: 1033, column: 2)
!4613 = !DILocation(line: 1033, column: 2, scope: !4612)
!4614 = !DILocation(line: 1033, column: 2, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4612, file: !1, line: 1033, column: 2)
!4616 = distinct !{!4616, !4607, !4607}
!4617 = !DILocation(line: 1034, column: 1, scope: !4308)
!4618 = distinct !DISubprogram(name: "BKE_all_animdata_fix_paths_rename", scope: !1, file: !1, line: 1041, type: !4619, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{null, !176, !299, !299, !299}
!4621 = !DILocalVariable(name: "ref_id", arg: 1, scope: !4618, file: !1, line: 1041, type: !176)
!4622 = !DILocation(line: 1041, column: 44, scope: !4618)
!4623 = !DILocalVariable(name: "prefix", arg: 2, scope: !4618, file: !1, line: 1041, type: !299)
!4624 = !DILocation(line: 1041, column: 64, scope: !4618)
!4625 = !DILocalVariable(name: "oldName", arg: 3, scope: !4618, file: !1, line: 1041, type: !299)
!4626 = !DILocation(line: 1041, column: 84, scope: !4618)
!4627 = !DILocalVariable(name: "newName", arg: 4, scope: !4618, file: !1, line: 1041, type: !299)
!4628 = !DILocation(line: 1041, column: 105, scope: !4618)
!4629 = !DILocalVariable(name: "mainptr", scope: !4618, file: !1, line: 1043, type: !4311)
!4630 = !DILocation(line: 1043, column: 8, scope: !4618)
!4631 = !DILocation(line: 1043, column: 20, scope: !4618)
!4632 = !DILocalVariable(name: "id", scope: !4618, file: !1, line: 1044, type: !176)
!4633 = !DILocation(line: 1044, column: 6, scope: !4618)
!4634 = !DILocation(line: 1069, column: 2, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1069, column: 2)
!4636 = !DILocation(line: 1069, column: 2, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4635, file: !1, line: 1069, column: 2)
!4638 = !DILocalVariable(name: "adt", scope: !4639, file: !1, line: 1069, type: !230)
!4639 = distinct !DILexicalBlock(scope: !4637, file: !1, line: 1069, column: 2)
!4640 = !DILocation(line: 1069, column: 2, scope: !4639)
!4641 = distinct !{!4641, !4634, !4634}
!4642 = !DILocation(line: 1072, column: 2, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1072, column: 2)
!4644 = !DILocation(line: 1072, column: 2, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4643, file: !1, line: 1072, column: 2)
!4646 = !DILocalVariable(name: "adt", scope: !4647, file: !1, line: 1072, type: !230)
!4647 = distinct !DILexicalBlock(scope: !4645, file: !1, line: 1072, column: 2)
!4648 = !DILocation(line: 1072, column: 2, scope: !4647)
!4649 = !DILocalVariable(name: "ntp", scope: !4647, file: !1, line: 1072, type: !301)
!4650 = !DILocation(line: 1072, column: 2, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4647, file: !1, line: 1072, column: 2)
!4652 = !DILocalVariable(name: "adt2", scope: !4653, file: !1, line: 1072, type: !230)
!4653 = distinct !DILexicalBlock(scope: !4651, file: !1, line: 1072, column: 2)
!4654 = !DILocation(line: 1072, column: 2, scope: !4653)
!4655 = distinct !{!4655, !4642, !4642}
!4656 = !DILocation(line: 1075, column: 2, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1075, column: 2)
!4658 = !DILocation(line: 1075, column: 2, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4657, file: !1, line: 1075, column: 2)
!4660 = !DILocalVariable(name: "adt", scope: !4661, file: !1, line: 1075, type: !230)
!4661 = distinct !DILexicalBlock(scope: !4659, file: !1, line: 1075, column: 2)
!4662 = !DILocation(line: 1075, column: 2, scope: !4661)
!4663 = !DILocalVariable(name: "ntp", scope: !4661, file: !1, line: 1075, type: !2238)
!4664 = !DILocation(line: 1075, column: 2, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4661, file: !1, line: 1075, column: 2)
!4666 = !DILocalVariable(name: "adt2", scope: !4667, file: !1, line: 1075, type: !230)
!4667 = distinct !DILexicalBlock(scope: !4665, file: !1, line: 1075, column: 2)
!4668 = !DILocation(line: 1075, column: 2, scope: !4667)
!4669 = distinct !{!4669, !4656, !4656}
!4670 = !DILocation(line: 1078, column: 2, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1078, column: 2)
!4672 = !DILocation(line: 1078, column: 2, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4671, file: !1, line: 1078, column: 2)
!4674 = !DILocalVariable(name: "adt", scope: !4675, file: !1, line: 1078, type: !230)
!4675 = distinct !DILexicalBlock(scope: !4673, file: !1, line: 1078, column: 2)
!4676 = !DILocation(line: 1078, column: 2, scope: !4675)
!4677 = !DILocalVariable(name: "ntp", scope: !4675, file: !1, line: 1078, type: !2319)
!4678 = !DILocation(line: 1078, column: 2, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4675, file: !1, line: 1078, column: 2)
!4680 = !DILocalVariable(name: "adt2", scope: !4681, file: !1, line: 1078, type: !230)
!4681 = distinct !DILexicalBlock(scope: !4679, file: !1, line: 1078, column: 2)
!4682 = !DILocation(line: 1078, column: 2, scope: !4681)
!4683 = distinct !{!4683, !4670, !4670}
!4684 = !DILocation(line: 1081, column: 2, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1081, column: 2)
!4686 = !DILocation(line: 1081, column: 2, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4685, file: !1, line: 1081, column: 2)
!4688 = !DILocalVariable(name: "adt", scope: !4689, file: !1, line: 1081, type: !230)
!4689 = distinct !DILexicalBlock(scope: !4687, file: !1, line: 1081, column: 2)
!4690 = !DILocation(line: 1081, column: 2, scope: !4689)
!4691 = distinct !{!4691, !4684, !4684}
!4692 = !DILocation(line: 1084, column: 2, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1084, column: 2)
!4694 = !DILocation(line: 1084, column: 2, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4693, file: !1, line: 1084, column: 2)
!4696 = !DILocalVariable(name: "adt", scope: !4697, file: !1, line: 1084, type: !230)
!4697 = distinct !DILexicalBlock(scope: !4695, file: !1, line: 1084, column: 2)
!4698 = !DILocation(line: 1084, column: 2, scope: !4697)
!4699 = distinct !{!4699, !4692, !4692}
!4700 = !DILocation(line: 1087, column: 2, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1087, column: 2)
!4702 = !DILocation(line: 1087, column: 2, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4701, file: !1, line: 1087, column: 2)
!4704 = !DILocalVariable(name: "adt", scope: !4705, file: !1, line: 1087, type: !230)
!4705 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 1087, column: 2)
!4706 = !DILocation(line: 1087, column: 2, scope: !4705)
!4707 = distinct !{!4707, !4700, !4700}
!4708 = !DILocation(line: 1090, column: 2, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1090, column: 2)
!4710 = !DILocation(line: 1090, column: 2, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4709, file: !1, line: 1090, column: 2)
!4712 = !DILocalVariable(name: "adt", scope: !4713, file: !1, line: 1090, type: !230)
!4713 = distinct !DILexicalBlock(scope: !4711, file: !1, line: 1090, column: 2)
!4714 = !DILocation(line: 1090, column: 2, scope: !4713)
!4715 = distinct !{!4715, !4708, !4708}
!4716 = !DILocation(line: 1093, column: 2, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1093, column: 2)
!4718 = !DILocation(line: 1093, column: 2, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4717, file: !1, line: 1093, column: 2)
!4720 = !DILocalVariable(name: "adt", scope: !4721, file: !1, line: 1093, type: !230)
!4721 = distinct !DILexicalBlock(scope: !4719, file: !1, line: 1093, column: 2)
!4722 = !DILocation(line: 1093, column: 2, scope: !4721)
!4723 = distinct !{!4723, !4716, !4716}
!4724 = !DILocation(line: 1096, column: 2, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1096, column: 2)
!4726 = !DILocation(line: 1096, column: 2, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4725, file: !1, line: 1096, column: 2)
!4728 = !DILocalVariable(name: "adt", scope: !4729, file: !1, line: 1096, type: !230)
!4729 = distinct !DILexicalBlock(scope: !4727, file: !1, line: 1096, column: 2)
!4730 = !DILocation(line: 1096, column: 2, scope: !4729)
!4731 = distinct !{!4731, !4724, !4724}
!4732 = !DILocation(line: 1099, column: 2, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1099, column: 2)
!4734 = !DILocation(line: 1099, column: 2, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4733, file: !1, line: 1099, column: 2)
!4736 = !DILocalVariable(name: "adt", scope: !4737, file: !1, line: 1099, type: !230)
!4737 = distinct !DILexicalBlock(scope: !4735, file: !1, line: 1099, column: 2)
!4738 = !DILocation(line: 1099, column: 2, scope: !4737)
!4739 = distinct !{!4739, !4732, !4732}
!4740 = !DILocation(line: 1102, column: 2, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1102, column: 2)
!4742 = !DILocation(line: 1102, column: 2, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4741, file: !1, line: 1102, column: 2)
!4744 = !DILocalVariable(name: "adt", scope: !4745, file: !1, line: 1102, type: !230)
!4745 = distinct !DILexicalBlock(scope: !4743, file: !1, line: 1102, column: 2)
!4746 = !DILocation(line: 1102, column: 2, scope: !4745)
!4747 = distinct !{!4747, !4740, !4740}
!4748 = !DILocation(line: 1105, column: 2, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1105, column: 2)
!4750 = !DILocation(line: 1105, column: 2, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4749, file: !1, line: 1105, column: 2)
!4752 = !DILocalVariable(name: "adt", scope: !4753, file: !1, line: 1105, type: !230)
!4753 = distinct !DILexicalBlock(scope: !4751, file: !1, line: 1105, column: 2)
!4754 = !DILocation(line: 1105, column: 2, scope: !4753)
!4755 = distinct !{!4755, !4748, !4748}
!4756 = !DILocation(line: 1108, column: 2, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1108, column: 2)
!4758 = !DILocation(line: 1108, column: 2, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4757, file: !1, line: 1108, column: 2)
!4760 = !DILocalVariable(name: "adt", scope: !4761, file: !1, line: 1108, type: !230)
!4761 = distinct !DILexicalBlock(scope: !4759, file: !1, line: 1108, column: 2)
!4762 = !DILocation(line: 1108, column: 2, scope: !4761)
!4763 = distinct !{!4763, !4756, !4756}
!4764 = !DILocation(line: 1111, column: 2, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1111, column: 2)
!4766 = !DILocation(line: 1111, column: 2, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4765, file: !1, line: 1111, column: 2)
!4768 = !DILocalVariable(name: "adt", scope: !4769, file: !1, line: 1111, type: !230)
!4769 = distinct !DILexicalBlock(scope: !4767, file: !1, line: 1111, column: 2)
!4770 = !DILocation(line: 1111, column: 2, scope: !4769)
!4771 = distinct !{!4771, !4764, !4764}
!4772 = !DILocation(line: 1114, column: 2, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1114, column: 2)
!4774 = !DILocation(line: 1114, column: 2, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4773, file: !1, line: 1114, column: 2)
!4776 = !DILocalVariable(name: "adt", scope: !4777, file: !1, line: 1114, type: !230)
!4777 = distinct !DILexicalBlock(scope: !4775, file: !1, line: 1114, column: 2)
!4778 = !DILocation(line: 1114, column: 2, scope: !4777)
!4779 = distinct !{!4779, !4772, !4772}
!4780 = !DILocation(line: 1117, column: 2, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1117, column: 2)
!4782 = !DILocation(line: 1117, column: 2, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4781, file: !1, line: 1117, column: 2)
!4784 = !DILocalVariable(name: "adt", scope: !4785, file: !1, line: 1117, type: !230)
!4785 = distinct !DILexicalBlock(scope: !4783, file: !1, line: 1117, column: 2)
!4786 = !DILocation(line: 1117, column: 2, scope: !4785)
!4787 = !DILocalVariable(name: "ntp", scope: !4785, file: !1, line: 1117, type: !2321)
!4788 = !DILocation(line: 1117, column: 2, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4785, file: !1, line: 1117, column: 2)
!4790 = !DILocalVariable(name: "adt2", scope: !4791, file: !1, line: 1117, type: !230)
!4791 = distinct !DILexicalBlock(scope: !4789, file: !1, line: 1117, column: 2)
!4792 = !DILocation(line: 1117, column: 2, scope: !4791)
!4793 = distinct !{!4793, !4780, !4780}
!4794 = !DILocation(line: 1120, column: 2, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1120, column: 2)
!4796 = !DILocation(line: 1120, column: 2, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4795, file: !1, line: 1120, column: 2)
!4798 = !DILocalVariable(name: "adt", scope: !4799, file: !1, line: 1120, type: !230)
!4799 = distinct !DILexicalBlock(scope: !4797, file: !1, line: 1120, column: 2)
!4800 = !DILocation(line: 1120, column: 2, scope: !4799)
!4801 = distinct !{!4801, !4794, !4794}
!4802 = !DILocation(line: 1123, column: 2, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 1123, column: 2)
!4804 = !DILocation(line: 1123, column: 2, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4803, file: !1, line: 1123, column: 2)
!4806 = !DILocalVariable(name: "adt", scope: !4807, file: !1, line: 1123, type: !230)
!4807 = distinct !DILexicalBlock(scope: !4805, file: !1, line: 1123, column: 2)
!4808 = !DILocation(line: 1123, column: 2, scope: !4807)
!4809 = !DILocalVariable(name: "ntp", scope: !4807, file: !1, line: 1123, type: !2323)
!4810 = !DILocation(line: 1123, column: 2, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4807, file: !1, line: 1123, column: 2)
!4812 = !DILocalVariable(name: "adt2", scope: !4813, file: !1, line: 1123, type: !230)
!4813 = distinct !DILexicalBlock(scope: !4811, file: !1, line: 1123, column: 2)
!4814 = !DILocation(line: 1123, column: 2, scope: !4813)
!4815 = distinct !{!4815, !4802, !4802}
!4816 = !DILocation(line: 1124, column: 1, scope: !4618)
!4817 = distinct !DISubprogram(name: "BKE_keyingset_find_path", scope: !1, file: !1, line: 1133, type: !4818, scopeLine: 1134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!4818 = !DISubroutineType(types: !4819)
!4819 = !{!4820, !4834, !176, !299, !299, !43, !43}
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KS_Path", file: !17, line: 713, size: 896, elements: !4822)
!4822 = !{!4823, !4824, !4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4833}
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4821, file: !17, line: 714, baseType: !4820, size: 64)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4821, file: !17, line: 714, baseType: !4820, size: 64, offset: 64)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4821, file: !17, line: 716, baseType: !176, size: 64, offset: 128)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !4821, file: !17, line: 717, baseType: !209, size: 512, offset: 192)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "idtype", scope: !4821, file: !17, line: 719, baseType: !43, size: 32, offset: 704)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "groupmode", scope: !4821, file: !17, line: 721, baseType: !156, size: 16, offset: 736)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4821, file: !17, line: 722, baseType: !156, size: 16, offset: 752)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !4821, file: !17, line: 724, baseType: !153, size: 64, offset: 768)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "array_index", scope: !4821, file: !17, line: 725, baseType: !43, size: 32, offset: 832)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4821, file: !17, line: 727, baseType: !156, size: 16, offset: 864)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "keyingflag", scope: !4821, file: !17, line: 728, baseType: !156, size: 16, offset: 880)
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!4835 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyingSet", file: !17, line: 777, baseType: !4836)
!4836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyingSet", file: !17, line: 763, size: 3776, elements: !4837)
!4837 = !{!4838, !4840, !4841, !4842, !4843, !4844, !4848, !4849, !4850, !4851}
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4836, file: !17, line: 764, baseType: !4839, size: 64)
!4839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4836, file: !17, line: 764, baseType: !4839, size: 64, offset: 64)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "paths", scope: !4836, file: !17, line: 766, baseType: !219, size: 128, offset: 128)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !4836, file: !17, line: 768, baseType: !209, size: 512, offset: 256)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4836, file: !17, line: 769, baseType: !209, size: 512, offset: 768)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !4836, file: !17, line: 770, baseType: !4845, size: 1920, offset: 1280)
!4845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 1920, elements: !4846)
!4846 = !{!4847}
!4847 = !DISubrange(count: 240)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !4836, file: !17, line: 771, baseType: !209, size: 512, offset: 3200)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4836, file: !17, line: 773, baseType: !156, size: 16, offset: 3712)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "keyingflag", scope: !4836, file: !17, line: 774, baseType: !156, size: 16, offset: 3728)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "active_path", scope: !4836, file: !17, line: 776, baseType: !43, size: 32, offset: 3744)
!4852 = !DILocalVariable(name: "ks", arg: 1, scope: !4817, file: !1, line: 1133, type: !4834)
!4853 = !DILocation(line: 1133, column: 45, scope: !4817)
!4854 = !DILocalVariable(name: "id", arg: 2, scope: !4817, file: !1, line: 1133, type: !176)
!4855 = !DILocation(line: 1133, column: 53, scope: !4817)
!4856 = !DILocalVariable(name: "group_name", arg: 3, scope: !4817, file: !1, line: 1133, type: !299)
!4857 = !DILocation(line: 1133, column: 68, scope: !4817)
!4858 = !DILocalVariable(name: "rna_path", arg: 4, scope: !4817, file: !1, line: 1133, type: !299)
!4859 = !DILocation(line: 1133, column: 93, scope: !4817)
!4860 = !DILocalVariable(name: "array_index", arg: 5, scope: !4817, file: !1, line: 1133, type: !43)
!4861 = !DILocation(line: 1133, column: 109, scope: !4817)
!4862 = !DILocalVariable(name: "UNUSED_group_mode", arg: 6, scope: !4817, file: !1, line: 1133, type: !43)
!4863 = !DILocation(line: 1133, column: 126, scope: !4817)
!4864 = !DILocalVariable(name: "ksp", scope: !4817, file: !1, line: 1135, type: !4865)
!4865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4866, size: 64)
!4866 = !DIDerivedType(tag: DW_TAG_typedef, name: "KS_Path", file: !17, line: 729, baseType: !4821)
!4867 = !DILocation(line: 1135, column: 11, scope: !4817)
!4868 = !DILocation(line: 1138, column: 6, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4817, file: !1, line: 1138, column: 6)
!4870 = !DILocation(line: 1138, column: 6, scope: !4817)
!4871 = !DILocation(line: 1139, column: 3, scope: !4869)
!4872 = !DILocation(line: 1144, column: 13, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4817, file: !1, line: 1144, column: 2)
!4874 = !DILocation(line: 1144, column: 17, scope: !4873)
!4875 = !DILocation(line: 1144, column: 23, scope: !4873)
!4876 = !DILocation(line: 1144, column: 11, scope: !4873)
!4877 = !DILocation(line: 1144, column: 7, scope: !4873)
!4878 = !DILocation(line: 1144, column: 30, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4873, file: !1, line: 1144, column: 2)
!4880 = !DILocation(line: 1144, column: 2, scope: !4873)
!4881 = !DILocalVariable(name: "eq_id", scope: !4882, file: !1, line: 1145, type: !156)
!4882 = distinct !DILexicalBlock(scope: !4879, file: !1, line: 1144, column: 52)
!4883 = !DILocation(line: 1145, column: 9, scope: !4882)
!4884 = !DILocalVariable(name: "eq_path", scope: !4882, file: !1, line: 1145, type: !156)
!4885 = !DILocation(line: 1145, column: 20, scope: !4882)
!4886 = !DILocalVariable(name: "eq_index", scope: !4882, file: !1, line: 1145, type: !156)
!4887 = !DILocation(line: 1145, column: 33, scope: !4882)
!4888 = !DILocalVariable(name: "eq_group", scope: !4882, file: !1, line: 1145, type: !156)
!4889 = !DILocation(line: 1145, column: 47, scope: !4882)
!4890 = !DILocation(line: 1148, column: 7, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4882, file: !1, line: 1148, column: 7)
!4892 = !DILocation(line: 1148, column: 13, scope: !4891)
!4893 = !DILocation(line: 1148, column: 18, scope: !4891)
!4894 = !DILocation(line: 1148, column: 10, scope: !4891)
!4895 = !DILocation(line: 1148, column: 7, scope: !4882)
!4896 = !DILocation(line: 1149, column: 10, scope: !4891)
!4897 = !DILocation(line: 1149, column: 4, scope: !4891)
!4898 = !DILocation(line: 1152, column: 8, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4882, file: !1, line: 1152, column: 7)
!4900 = !DILocation(line: 1152, column: 13, scope: !4899)
!4901 = !DILocation(line: 1152, column: 22, scope: !4899)
!4902 = !DILocation(line: 1152, column: 31, scope: !4899)
!4903 = !DILocation(line: 1152, column: 41, scope: !4899)
!4904 = !DILocation(line: 1152, column: 51, scope: !4899)
!4905 = !DILocation(line: 1152, column: 56, scope: !4899)
!4906 = !DILocation(line: 1152, column: 34, scope: !4899)
!4907 = !DILocation(line: 1152, column: 7, scope: !4882)
!4908 = !DILocation(line: 1153, column: 12, scope: !4899)
!4909 = !DILocation(line: 1153, column: 4, scope: !4899)
!4910 = !DILocation(line: 1156, column: 7, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4882, file: !1, line: 1156, column: 7)
!4912 = !DILocation(line: 1156, column: 12, scope: !4911)
!4913 = !DILocation(line: 1156, column: 27, scope: !4911)
!4914 = !DILocation(line: 1156, column: 24, scope: !4911)
!4915 = !DILocation(line: 1156, column: 7, scope: !4882)
!4916 = !DILocation(line: 1157, column: 13, scope: !4911)
!4917 = !DILocation(line: 1157, column: 4, scope: !4911)
!4918 = !DILocation(line: 1160, column: 7, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4882, file: !1, line: 1160, column: 7)
!4920 = !DILocation(line: 1160, column: 7, scope: !4882)
!4921 = !DILocation(line: 1162, column: 3, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4919, file: !1, line: 1160, column: 19)
!4923 = !DILocation(line: 1165, column: 7, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4882, file: !1, line: 1165, column: 7)
!4925 = !DILocation(line: 1165, column: 13, scope: !4924)
!4926 = !DILocation(line: 1165, column: 16, scope: !4924)
!4927 = !DILocation(line: 1165, column: 24, scope: !4924)
!4928 = !DILocation(line: 1165, column: 27, scope: !4924)
!4929 = !DILocation(line: 1165, column: 36, scope: !4924)
!4930 = !DILocation(line: 1165, column: 39, scope: !4924)
!4931 = !DILocation(line: 1165, column: 7, scope: !4882)
!4932 = !DILocation(line: 1166, column: 11, scope: !4924)
!4933 = !DILocation(line: 1166, column: 4, scope: !4924)
!4934 = !DILocation(line: 1167, column: 2, scope: !4882)
!4935 = !DILocation(line: 1144, column: 41, scope: !4879)
!4936 = !DILocation(line: 1144, column: 46, scope: !4879)
!4937 = !DILocation(line: 1144, column: 39, scope: !4879)
!4938 = !DILocation(line: 1144, column: 2, scope: !4879)
!4939 = distinct !{!4939, !4880, !4940}
!4940 = !DILocation(line: 1167, column: 2, scope: !4873)
!4941 = !DILocation(line: 1170, column: 2, scope: !4817)
!4942 = !DILocation(line: 1171, column: 1, scope: !4817)
!4943 = distinct !DISubprogram(name: "BKE_keyingset_add", scope: !1, file: !1, line: 1176, type: !4944, scopeLine: 1177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!4944 = !DISubroutineType(types: !4945)
!4945 = !{!4839, !1029, !299, !299, !156, !156}
!4946 = !DILocalVariable(name: "list", arg: 1, scope: !4943, file: !1, line: 1176, type: !1029)
!4947 = !DILocation(line: 1176, column: 40, scope: !4943)
!4948 = !DILocalVariable(name: "idname", arg: 2, scope: !4943, file: !1, line: 1176, type: !299)
!4949 = !DILocation(line: 1176, column: 57, scope: !4943)
!4950 = !DILocalVariable(name: "name", arg: 3, scope: !4943, file: !1, line: 1176, type: !299)
!4951 = !DILocation(line: 1176, column: 78, scope: !4943)
!4952 = !DILocalVariable(name: "flag", arg: 4, scope: !4943, file: !1, line: 1176, type: !156)
!4953 = !DILocation(line: 1176, column: 92, scope: !4943)
!4954 = !DILocalVariable(name: "keyingflag", arg: 5, scope: !4943, file: !1, line: 1176, type: !156)
!4955 = !DILocation(line: 1176, column: 104, scope: !4943)
!4956 = !DILocalVariable(name: "ks", scope: !4943, file: !1, line: 1178, type: !4834)
!4957 = !DILocation(line: 1178, column: 13, scope: !4943)
!4958 = !DILocation(line: 1181, column: 7, scope: !4943)
!4959 = !DILocation(line: 1181, column: 5, scope: !4943)
!4960 = !DILocation(line: 1183, column: 14, scope: !4943)
!4961 = !DILocation(line: 1183, column: 18, scope: !4943)
!4962 = !DILocation(line: 1183, column: 27, scope: !4943)
!4963 = !DILocation(line: 1183, column: 26, scope: !4943)
!4964 = !DILocation(line: 1183, column: 37, scope: !4943)
!4965 = !DILocation(line: 1183, column: 47, scope: !4943)
!4966 = !DILocation(line: 1183, column: 46, scope: !4943)
!4967 = !DILocation(line: 1183, column: 55, scope: !4943)
!4968 = !DILocation(line: 1183, column: 2, scope: !4943)
!4969 = !DILocation(line: 1184, column: 14, scope: !4943)
!4970 = !DILocation(line: 1184, column: 18, scope: !4943)
!4971 = !DILocation(line: 1184, column: 27, scope: !4943)
!4972 = !DILocation(line: 1184, column: 26, scope: !4943)
!4973 = !DILocation(line: 1184, column: 35, scope: !4943)
!4974 = !DILocation(line: 1184, column: 47, scope: !4943)
!4975 = !DILocation(line: 1184, column: 46, scope: !4943)
!4976 = !DILocation(line: 1184, column: 57, scope: !4943)
!4977 = !DILocation(line: 1184, column: 2, scope: !4943)
!4978 = !DILocation(line: 1186, column: 13, scope: !4943)
!4979 = !DILocation(line: 1186, column: 2, scope: !4943)
!4980 = !DILocation(line: 1186, column: 6, scope: !4943)
!4981 = !DILocation(line: 1186, column: 11, scope: !4943)
!4982 = !DILocation(line: 1187, column: 19, scope: !4943)
!4983 = !DILocation(line: 1187, column: 2, scope: !4943)
!4984 = !DILocation(line: 1187, column: 6, scope: !4943)
!4985 = !DILocation(line: 1187, column: 17, scope: !4943)
!4986 = !DILocation(line: 1190, column: 14, scope: !4943)
!4987 = !DILocation(line: 1190, column: 20, scope: !4943)
!4988 = !DILocation(line: 1190, column: 2, scope: !4943)
!4989 = !DILocation(line: 1193, column: 17, scope: !4943)
!4990 = !DILocation(line: 1193, column: 23, scope: !4943)
!4991 = !DILocation(line: 1193, column: 2, scope: !4943)
!4992 = !DILocation(line: 1196, column: 17, scope: !4943)
!4993 = !DILocation(line: 1196, column: 23, scope: !4943)
!4994 = !DILocation(line: 1196, column: 2, scope: !4943)
!4995 = !DILocation(line: 1199, column: 9, scope: !4943)
!4996 = !DILocation(line: 1199, column: 2, scope: !4943)
!4997 = distinct !DISubprogram(name: "BKE_keyingset_add_path", scope: !1, file: !1, line: 1205, type: !4998, scopeLine: 1206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{!4820, !4834, !176, !299, !299, !43, !156, !156}
!5000 = !DILocalVariable(name: "ks", arg: 1, scope: !4997, file: !1, line: 1205, type: !4834)
!5001 = !DILocation(line: 1205, column: 44, scope: !4997)
!5002 = !DILocalVariable(name: "id", arg: 2, scope: !4997, file: !1, line: 1205, type: !176)
!5003 = !DILocation(line: 1205, column: 52, scope: !4997)
!5004 = !DILocalVariable(name: "group_name", arg: 3, scope: !4997, file: !1, line: 1205, type: !299)
!5005 = !DILocation(line: 1205, column: 67, scope: !4997)
!5006 = !DILocalVariable(name: "rna_path", arg: 4, scope: !4997, file: !1, line: 1205, type: !299)
!5007 = !DILocation(line: 1205, column: 92, scope: !4997)
!5008 = !DILocalVariable(name: "array_index", arg: 5, scope: !4997, file: !1, line: 1205, type: !43)
!5009 = !DILocation(line: 1205, column: 108, scope: !4997)
!5010 = !DILocalVariable(name: "flag", arg: 6, scope: !4997, file: !1, line: 1205, type: !156)
!5011 = !DILocation(line: 1205, column: 127, scope: !4997)
!5012 = !DILocalVariable(name: "groupmode", arg: 7, scope: !4997, file: !1, line: 1205, type: !156)
!5013 = !DILocation(line: 1205, column: 139, scope: !4997)
!5014 = !DILocalVariable(name: "ksp", scope: !4997, file: !1, line: 1207, type: !4865)
!5015 = !DILocation(line: 1207, column: 11, scope: !4997)
!5016 = !DILocation(line: 1210, column: 6, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4997, file: !1, line: 1210, column: 6)
!5018 = !DILocation(line: 1210, column: 6, scope: !4997)
!5019 = !DILocation(line: 1211, column: 3, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5017, file: !1, line: 1210, column: 32)
!5021 = !DILocation(line: 1212, column: 3, scope: !5020)
!5022 = !DILocation(line: 1216, column: 6, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4997, file: !1, line: 1216, column: 6)
!5024 = !DILocation(line: 1216, column: 9, scope: !5023)
!5025 = !DILocation(line: 1216, column: 6, scope: !4997)
!5026 = !DILocation(line: 1217, column: 3, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5023, file: !1, line: 1216, column: 18)
!5028 = !DILocation(line: 1218, column: 3, scope: !5027)
!5029 = !DILocation(line: 1222, column: 30, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !4997, file: !1, line: 1222, column: 6)
!5031 = !DILocation(line: 1222, column: 34, scope: !5030)
!5032 = !DILocation(line: 1222, column: 38, scope: !5030)
!5033 = !DILocation(line: 1222, column: 50, scope: !5030)
!5034 = !DILocation(line: 1222, column: 60, scope: !5030)
!5035 = !DILocation(line: 1222, column: 73, scope: !5030)
!5036 = !DILocation(line: 1222, column: 6, scope: !5030)
!5037 = !DILocation(line: 1222, column: 6, scope: !4997)
!5038 = !DILocation(line: 1223, column: 9, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !1, line: 1223, column: 7)
!5040 = distinct !DILexicalBlock(scope: !5030, file: !1, line: 1222, column: 85)
!5041 = !DILocation(line: 1223, column: 15, scope: !5039)
!5042 = !DILocation(line: 1223, column: 7, scope: !5040)
!5043 = !DILocation(line: 1224, column: 4, scope: !5039)
!5044 = !DILocation(line: 1225, column: 3, scope: !5040)
!5045 = !DILocation(line: 1229, column: 8, scope: !4997)
!5046 = !DILocation(line: 1229, column: 6, scope: !4997)
!5047 = !DILocation(line: 1232, column: 12, scope: !4997)
!5048 = !DILocation(line: 1232, column: 2, scope: !4997)
!5049 = !DILocation(line: 1232, column: 7, scope: !4997)
!5050 = !DILocation(line: 1232, column: 10, scope: !4997)
!5051 = !DILocation(line: 1233, column: 6, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !4997, file: !1, line: 1233, column: 6)
!5053 = !DILocation(line: 1233, column: 6, scope: !4997)
!5054 = !DILocation(line: 1234, column: 15, scope: !5052)
!5055 = !DILocation(line: 1234, column: 20, scope: !5052)
!5056 = !DILocation(line: 1234, column: 27, scope: !5052)
!5057 = !DILocation(line: 1234, column: 3, scope: !5052)
!5058 = !DILocation(line: 1236, column: 3, scope: !5052)
!5059 = !DILocation(line: 1236, column: 8, scope: !5052)
!5060 = !DILocation(line: 1236, column: 17, scope: !5052)
!5061 = !DILocation(line: 1239, column: 6, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !4997, file: !1, line: 1239, column: 6)
!5063 = !DILocation(line: 1239, column: 6, scope: !4997)
!5064 = !DILocation(line: 1240, column: 17, scope: !5062)
!5065 = !DILocation(line: 1240, column: 3, scope: !5062)
!5066 = !DILocation(line: 1240, column: 8, scope: !5062)
!5067 = !DILocation(line: 1240, column: 15, scope: !5062)
!5068 = !DILocation(line: 1244, column: 29, scope: !4997)
!5069 = !DILocation(line: 1244, column: 18, scope: !4997)
!5070 = !DILocation(line: 1244, column: 2, scope: !4997)
!5071 = !DILocation(line: 1244, column: 7, scope: !4997)
!5072 = !DILocation(line: 1244, column: 16, scope: !4997)
!5073 = !DILocation(line: 1245, column: 21, scope: !4997)
!5074 = !DILocation(line: 1245, column: 2, scope: !4997)
!5075 = !DILocation(line: 1245, column: 7, scope: !4997)
!5076 = !DILocation(line: 1245, column: 19, scope: !4997)
!5077 = !DILocation(line: 1248, column: 14, scope: !4997)
!5078 = !DILocation(line: 1248, column: 2, scope: !4997)
!5079 = !DILocation(line: 1248, column: 7, scope: !4997)
!5080 = !DILocation(line: 1248, column: 12, scope: !4997)
!5081 = !DILocation(line: 1249, column: 19, scope: !4997)
!5082 = !DILocation(line: 1249, column: 2, scope: !4997)
!5083 = !DILocation(line: 1249, column: 7, scope: !4997)
!5084 = !DILocation(line: 1249, column: 17, scope: !4997)
!5085 = !DILocation(line: 1252, column: 15, scope: !4997)
!5086 = !DILocation(line: 1252, column: 19, scope: !4997)
!5087 = !DILocation(line: 1252, column: 26, scope: !4997)
!5088 = !DILocation(line: 1252, column: 2, scope: !4997)
!5089 = !DILocation(line: 1255, column: 9, scope: !4997)
!5090 = !DILocation(line: 1255, column: 2, scope: !4997)
!5091 = !DILocation(line: 1256, column: 1, scope: !4997)
!5092 = distinct !DISubprogram(name: "BKE_keyingset_free_path", scope: !1, file: !1, line: 1259, type: !5093, scopeLine: 1260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5093 = !DISubroutineType(types: !5094)
!5094 = !{null, !4834, !4865}
!5095 = !DILocalVariable(name: "ks", arg: 1, scope: !5092, file: !1, line: 1259, type: !4834)
!5096 = !DILocation(line: 1259, column: 41, scope: !5092)
!5097 = !DILocalVariable(name: "ksp", arg: 2, scope: !5092, file: !1, line: 1259, type: !4865)
!5098 = !DILocation(line: 1259, column: 54, scope: !5092)
!5099 = !DILocation(line: 1262, column: 6, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5092, file: !1, line: 1262, column: 6)
!5101 = !DILocation(line: 1262, column: 6, scope: !5092)
!5102 = !DILocation(line: 1263, column: 3, scope: !5100)
!5103 = !DILocation(line: 1266, column: 6, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5092, file: !1, line: 1266, column: 6)
!5105 = !DILocation(line: 1266, column: 11, scope: !5104)
!5106 = !DILocation(line: 1266, column: 6, scope: !5092)
!5107 = !DILocation(line: 1267, column: 3, scope: !5104)
!5108 = !DILocation(line: 1267, column: 13, scope: !5104)
!5109 = !DILocation(line: 1267, column: 18, scope: !5104)
!5110 = !DILocation(line: 1270, column: 17, scope: !5092)
!5111 = !DILocation(line: 1270, column: 21, scope: !5092)
!5112 = !DILocation(line: 1270, column: 28, scope: !5092)
!5113 = !DILocation(line: 1270, column: 2, scope: !5092)
!5114 = !DILocation(line: 1271, column: 1, scope: !5092)
!5115 = distinct !DISubprogram(name: "BKE_keyingsets_copy", scope: !1, file: !1, line: 1274, type: !5116, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{null, !1029, !1029}
!5118 = !DILocalVariable(name: "newlist", arg: 1, scope: !5115, file: !1, line: 1274, type: !1029)
!5119 = !DILocation(line: 1274, column: 36, scope: !5115)
!5120 = !DILocalVariable(name: "list", arg: 2, scope: !5115, file: !1, line: 1274, type: !1029)
!5121 = !DILocation(line: 1274, column: 55, scope: !5115)
!5122 = !DILocalVariable(name: "ksn", scope: !5115, file: !1, line: 1276, type: !4834)
!5123 = !DILocation(line: 1276, column: 13, scope: !5115)
!5124 = !DILocalVariable(name: "kspn", scope: !5115, file: !1, line: 1277, type: !4865)
!5125 = !DILocation(line: 1277, column: 11, scope: !5115)
!5126 = !DILocation(line: 1279, column: 20, scope: !5115)
!5127 = !DILocation(line: 1279, column: 29, scope: !5115)
!5128 = !DILocation(line: 1279, column: 2, scope: !5115)
!5129 = !DILocation(line: 1281, column: 13, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5115, file: !1, line: 1281, column: 2)
!5131 = !DILocation(line: 1281, column: 22, scope: !5130)
!5132 = !DILocation(line: 1281, column: 11, scope: !5130)
!5133 = !DILocation(line: 1281, column: 7, scope: !5130)
!5134 = !DILocation(line: 1281, column: 29, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5130, file: !1, line: 1281, column: 2)
!5136 = !DILocation(line: 1281, column: 2, scope: !5130)
!5137 = !DILocation(line: 1282, column: 22, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5135, file: !1, line: 1281, column: 51)
!5139 = !DILocation(line: 1282, column: 27, scope: !5138)
!5140 = !DILocation(line: 1282, column: 35, scope: !5138)
!5141 = !DILocation(line: 1282, column: 40, scope: !5138)
!5142 = !DILocation(line: 1282, column: 3, scope: !5138)
!5143 = !DILocation(line: 1284, column: 15, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5138, file: !1, line: 1284, column: 3)
!5145 = !DILocation(line: 1284, column: 20, scope: !5144)
!5146 = !DILocation(line: 1284, column: 26, scope: !5144)
!5147 = !DILocation(line: 1284, column: 13, scope: !5144)
!5148 = !DILocation(line: 1284, column: 8, scope: !5144)
!5149 = !DILocation(line: 1284, column: 33, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5144, file: !1, line: 1284, column: 3)
!5151 = !DILocation(line: 1284, column: 3, scope: !5144)
!5152 = !DILocation(line: 1285, column: 21, scope: !5150)
!5153 = !DILocation(line: 1285, column: 35, scope: !5150)
!5154 = !DILocation(line: 1285, column: 41, scope: !5150)
!5155 = !DILocation(line: 1285, column: 4, scope: !5150)
!5156 = !DILocation(line: 1285, column: 10, scope: !5150)
!5157 = !DILocation(line: 1285, column: 19, scope: !5150)
!5158 = !DILocation(line: 1284, column: 46, scope: !5150)
!5159 = !DILocation(line: 1284, column: 52, scope: !5150)
!5160 = !DILocation(line: 1284, column: 44, scope: !5150)
!5161 = !DILocation(line: 1284, column: 3, scope: !5150)
!5162 = distinct !{!5162, !5151, !5163}
!5163 = !DILocation(line: 1285, column: 49, scope: !5144)
!5164 = !DILocation(line: 1286, column: 2, scope: !5138)
!5165 = !DILocation(line: 1281, column: 40, scope: !5135)
!5166 = !DILocation(line: 1281, column: 45, scope: !5135)
!5167 = !DILocation(line: 1281, column: 38, scope: !5135)
!5168 = !DILocation(line: 1281, column: 2, scope: !5135)
!5169 = distinct !{!5169, !5136, !5170}
!5170 = !DILocation(line: 1286, column: 2, scope: !5130)
!5171 = !DILocation(line: 1287, column: 1, scope: !5115)
!5172 = distinct !DISubprogram(name: "BKE_keyingset_free", scope: !1, file: !1, line: 1292, type: !5173, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5173 = !DISubroutineType(types: !5174)
!5174 = !{null, !4834}
!5175 = !DILocalVariable(name: "ks", arg: 1, scope: !5172, file: !1, line: 1292, type: !4834)
!5176 = !DILocation(line: 1292, column: 36, scope: !5172)
!5177 = !DILocalVariable(name: "ksp", scope: !5172, file: !1, line: 1294, type: !4865)
!5178 = !DILocation(line: 1294, column: 11, scope: !5172)
!5179 = !DILocalVariable(name: "kspn", scope: !5172, file: !1, line: 1294, type: !4865)
!5180 = !DILocation(line: 1294, column: 17, scope: !5172)
!5181 = !DILocation(line: 1297, column: 6, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5172, file: !1, line: 1297, column: 6)
!5183 = !DILocation(line: 1297, column: 9, scope: !5182)
!5184 = !DILocation(line: 1297, column: 6, scope: !5172)
!5185 = !DILocation(line: 1298, column: 3, scope: !5182)
!5186 = !DILocation(line: 1301, column: 13, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5172, file: !1, line: 1301, column: 2)
!5188 = !DILocation(line: 1301, column: 17, scope: !5187)
!5189 = !DILocation(line: 1301, column: 23, scope: !5187)
!5190 = !DILocation(line: 1301, column: 11, scope: !5187)
!5191 = !DILocation(line: 1301, column: 7, scope: !5187)
!5192 = !DILocation(line: 1301, column: 30, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5187, file: !1, line: 1301, column: 2)
!5194 = !DILocation(line: 1301, column: 2, scope: !5187)
!5195 = !DILocation(line: 1302, column: 10, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5193, file: !1, line: 1301, column: 47)
!5197 = !DILocation(line: 1302, column: 15, scope: !5196)
!5198 = !DILocation(line: 1302, column: 8, scope: !5196)
!5199 = !DILocation(line: 1303, column: 27, scope: !5196)
!5200 = !DILocation(line: 1303, column: 31, scope: !5196)
!5201 = !DILocation(line: 1303, column: 3, scope: !5196)
!5202 = !DILocation(line: 1304, column: 2, scope: !5196)
!5203 = !DILocation(line: 1301, column: 41, scope: !5193)
!5204 = !DILocation(line: 1301, column: 39, scope: !5193)
!5205 = !DILocation(line: 1301, column: 2, scope: !5193)
!5206 = distinct !{!5206, !5194, !5207}
!5207 = !DILocation(line: 1304, column: 2, scope: !5187)
!5208 = !DILocation(line: 1305, column: 1, scope: !5172)
!5209 = distinct !DISubprogram(name: "BKE_keyingsets_free", scope: !1, file: !1, line: 1308, type: !2781, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5210 = !DILocalVariable(name: "list", arg: 1, scope: !5209, file: !1, line: 1308, type: !1029)
!5211 = !DILocation(line: 1308, column: 36, scope: !5209)
!5212 = !DILocalVariable(name: "ks", scope: !5209, file: !1, line: 1310, type: !4834)
!5213 = !DILocation(line: 1310, column: 13, scope: !5209)
!5214 = !DILocalVariable(name: "ksn", scope: !5209, file: !1, line: 1310, type: !4834)
!5215 = !DILocation(line: 1310, column: 18, scope: !5209)
!5216 = !DILocation(line: 1313, column: 6, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5209, file: !1, line: 1313, column: 6)
!5218 = !DILocation(line: 1313, column: 11, scope: !5217)
!5219 = !DILocation(line: 1313, column: 6, scope: !5209)
!5220 = !DILocation(line: 1314, column: 3, scope: !5217)
!5221 = !DILocation(line: 1319, column: 12, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5209, file: !1, line: 1319, column: 2)
!5223 = !DILocation(line: 1319, column: 18, scope: !5222)
!5224 = !DILocation(line: 1319, column: 10, scope: !5222)
!5225 = !DILocation(line: 1319, column: 7, scope: !5222)
!5226 = !DILocation(line: 1319, column: 25, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5222, file: !1, line: 1319, column: 2)
!5228 = !DILocation(line: 1319, column: 2, scope: !5222)
!5229 = !DILocation(line: 1320, column: 9, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5227, file: !1, line: 1319, column: 39)
!5231 = !DILocation(line: 1320, column: 13, scope: !5230)
!5232 = !DILocation(line: 1320, column: 7, scope: !5230)
!5233 = !DILocation(line: 1321, column: 22, scope: !5230)
!5234 = !DILocation(line: 1321, column: 3, scope: !5230)
!5235 = !DILocation(line: 1322, column: 17, scope: !5230)
!5236 = !DILocation(line: 1322, column: 23, scope: !5230)
!5237 = !DILocation(line: 1322, column: 3, scope: !5230)
!5238 = !DILocation(line: 1323, column: 2, scope: !5230)
!5239 = !DILocation(line: 1319, column: 34, scope: !5227)
!5240 = !DILocation(line: 1319, column: 32, scope: !5227)
!5241 = !DILocation(line: 1319, column: 2, scope: !5227)
!5242 = distinct !{!5242, !5228, !5243}
!5243 = !DILocation(line: 1323, column: 2, scope: !5222)
!5244 = !DILocation(line: 1324, column: 1, scope: !5209)
!5245 = distinct !DISubprogram(name: "animsys_evaluate_action_group", scope: !1, file: !1, line: 1602, type: !5246, scopeLine: 1603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5246 = !DISubroutineType(types: !5247)
!5247 = !{null, !3402, !235, !2849, !250, !275}
!5248 = !DILocalVariable(name: "ptr", arg: 1, scope: !5245, file: !1, line: 1602, type: !3402)
!5249 = !DILocation(line: 1602, column: 48, scope: !5245)
!5250 = !DILocalVariable(name: "act", arg: 2, scope: !5245, file: !1, line: 1602, type: !235)
!5251 = !DILocation(line: 1602, column: 62, scope: !5245)
!5252 = !DILocalVariable(name: "agrp", arg: 3, scope: !5245, file: !1, line: 1602, type: !2849)
!5253 = !DILocation(line: 1602, column: 81, scope: !5245)
!5254 = !DILocalVariable(name: "remap", arg: 4, scope: !5245, file: !1, line: 1602, type: !250)
!5255 = !DILocation(line: 1602, column: 99, scope: !5245)
!5256 = !DILocalVariable(name: "ctime", arg: 5, scope: !5245, file: !1, line: 1602, type: !275)
!5257 = !DILocation(line: 1602, column: 112, scope: !5245)
!5258 = !DILocalVariable(name: "fcu", scope: !5245, file: !1, line: 1604, type: !2841)
!5259 = !DILocation(line: 1604, column: 10, scope: !5245)
!5260 = !DILocation(line: 1607, column: 6, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5245, file: !1, line: 1607, column: 6)
!5262 = !DILocation(line: 1607, column: 6, scope: !5245)
!5263 = !DILocation(line: 1607, column: 29, scope: !5261)
!5264 = !DILocation(line: 1608, column: 7, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5245, file: !1, line: 1608, column: 6)
!5266 = !DILocation(line: 1608, column: 6, scope: !5265)
!5267 = !DILocation(line: 1608, column: 14, scope: !5265)
!5268 = !DILocation(line: 1608, column: 18, scope: !5265)
!5269 = !DILocation(line: 1608, column: 25, scope: !5265)
!5270 = !DILocation(line: 1608, column: 35, scope: !5265)
!5271 = !DILocation(line: 1608, column: 32, scope: !5265)
!5272 = !DILocation(line: 1608, column: 6, scope: !5245)
!5273 = !DILocation(line: 1608, column: 47, scope: !5265)
!5274 = !DILocation(line: 1608, column: 41, scope: !5265)
!5275 = !DILocation(line: 1610, column: 28, scope: !5245)
!5276 = !DILocation(line: 1610, column: 33, scope: !5245)
!5277 = !DILocation(line: 1610, column: 36, scope: !5245)
!5278 = !DILocation(line: 1610, column: 42, scope: !5245)
!5279 = !DILocation(line: 1610, column: 2, scope: !5245)
!5280 = !DILocation(line: 1613, column: 6, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5245, file: !1, line: 1613, column: 6)
!5282 = !DILocation(line: 1613, column: 12, scope: !5281)
!5283 = !DILocation(line: 1613, column: 17, scope: !5281)
!5284 = !DILocation(line: 1613, column: 6, scope: !5245)
!5285 = !DILocation(line: 1614, column: 3, scope: !5281)
!5286 = !DILocation(line: 1617, column: 13, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5245, file: !1, line: 1617, column: 2)
!5288 = !DILocation(line: 1617, column: 19, scope: !5287)
!5289 = !DILocation(line: 1617, column: 28, scope: !5287)
!5290 = !DILocation(line: 1617, column: 11, scope: !5287)
!5291 = !DILocation(line: 1617, column: 7, scope: !5287)
!5292 = !DILocation(line: 1617, column: 36, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5287, file: !1, line: 1617, column: 2)
!5294 = !DILocation(line: 1617, column: 35, scope: !5293)
!5295 = !DILocation(line: 1617, column: 41, scope: !5293)
!5296 = !DILocation(line: 1617, column: 45, scope: !5293)
!5297 = !DILocation(line: 1617, column: 50, scope: !5293)
!5298 = !DILocation(line: 1617, column: 57, scope: !5293)
!5299 = !DILocation(line: 1617, column: 54, scope: !5293)
!5300 = !DILocation(line: 0, scope: !5293)
!5301 = !DILocation(line: 1617, column: 2, scope: !5287)
!5302 = !DILocation(line: 1619, column: 8, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5304, file: !1, line: 1619, column: 7)
!5304 = distinct !DILexicalBlock(scope: !5293, file: !1, line: 1617, column: 81)
!5305 = !DILocation(line: 1619, column: 13, scope: !5303)
!5306 = !DILocation(line: 1619, column: 18, scope: !5303)
!5307 = !DILocation(line: 1619, column: 54, scope: !5303)
!5308 = !DILocation(line: 1619, column: 7, scope: !5304)
!5309 = !DILocation(line: 1620, column: 21, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5303, file: !1, line: 1619, column: 60)
!5311 = !DILocation(line: 1620, column: 26, scope: !5310)
!5312 = !DILocation(line: 1620, column: 4, scope: !5310)
!5313 = !DILocation(line: 1621, column: 27, scope: !5310)
!5314 = !DILocation(line: 1621, column: 32, scope: !5310)
!5315 = !DILocation(line: 1621, column: 39, scope: !5310)
!5316 = !DILocation(line: 1621, column: 4, scope: !5310)
!5317 = !DILocation(line: 1622, column: 3, scope: !5310)
!5318 = !DILocation(line: 1623, column: 2, scope: !5304)
!5319 = !DILocation(line: 1617, column: 70, scope: !5293)
!5320 = !DILocation(line: 1617, column: 75, scope: !5293)
!5321 = !DILocation(line: 1617, column: 68, scope: !5293)
!5322 = !DILocation(line: 1617, column: 2, scope: !5293)
!5323 = distinct !{!5323, !5301, !5324}
!5324 = !DILocation(line: 1623, column: 2, scope: !5287)
!5325 = !DILocation(line: 1624, column: 1, scope: !5245)
!5326 = distinct !DISubprogram(name: "action_idcode_patch_check", scope: !1, file: !1, line: 1572, type: !5327, scopeLine: 1573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5327 = !DISubroutineType(types: !5328)
!5328 = !{null, !176, !235}
!5329 = !DILocalVariable(name: "id", arg: 1, scope: !5326, file: !1, line: 1572, type: !176)
!5330 = !DILocation(line: 1572, column: 43, scope: !5326)
!5331 = !DILocalVariable(name: "act", arg: 2, scope: !5326, file: !1, line: 1572, type: !235)
!5332 = !DILocation(line: 1572, column: 56, scope: !5326)
!5333 = !DILocalVariable(name: "idcode", scope: !5326, file: !1, line: 1574, type: !43)
!5334 = !DILocation(line: 1574, column: 6, scope: !5326)
!5335 = !DILocation(line: 1577, column: 6, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5326, file: !1, line: 1577, column: 6)
!5337 = !DILocation(line: 1577, column: 6, scope: !5326)
!5338 = !DILocation(line: 1578, column: 3, scope: !5336)
!5339 = !DILocation(line: 1580, column: 12, scope: !5336)
!5340 = !DILocation(line: 1580, column: 10, scope: !5336)
!5341 = !DILocation(line: 1583, column: 6, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5326, file: !1, line: 1583, column: 6)
!5343 = !DILocation(line: 1583, column: 11, scope: !5342)
!5344 = !DILocation(line: 1583, column: 18, scope: !5342)
!5345 = !DILocation(line: 1583, column: 6, scope: !5326)
!5346 = !DILocation(line: 1588, column: 17, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5342, file: !1, line: 1583, column: 24)
!5348 = !DILocation(line: 1588, column: 3, scope: !5347)
!5349 = !DILocation(line: 1588, column: 8, scope: !5347)
!5350 = !DILocation(line: 1588, column: 15, scope: !5347)
!5351 = !DILocation(line: 1589, column: 2, scope: !5347)
!5352 = !DILocation(line: 1590, column: 11, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5342, file: !1, line: 1590, column: 11)
!5354 = !DILocation(line: 1590, column: 16, scope: !5353)
!5355 = !DILocation(line: 1590, column: 26, scope: !5353)
!5356 = !DILocation(line: 1590, column: 23, scope: !5353)
!5357 = !DILocation(line: 1590, column: 11, scope: !5342)
!5358 = !DILocation(line: 1592, column: 9, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5360, file: !1, line: 1592, column: 7)
!5360 = distinct !DILexicalBlock(scope: !5353, file: !1, line: 1590, column: 34)
!5361 = !DILocation(line: 1592, column: 15, scope: !5359)
!5362 = !DILocation(line: 1592, column: 7, scope: !5360)
!5363 = !DILocation(line: 1594, column: 11, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5359, file: !1, line: 1592, column: 26)
!5365 = !DILocation(line: 1594, column: 16, scope: !5364)
!5366 = !DILocation(line: 1594, column: 19, scope: !5364)
!5367 = !DILocation(line: 1594, column: 24, scope: !5364)
!5368 = !DILocation(line: 1594, column: 29, scope: !5364)
!5369 = !DILocation(line: 1594, column: 37, scope: !5364)
!5370 = !DILocation(line: 1594, column: 41, scope: !5364)
!5371 = !DILocation(line: 1593, column: 4, scope: !5364)
!5372 = !DILocation(line: 1595, column: 3, scope: !5364)
!5373 = !DILocation(line: 1596, column: 2, scope: !5360)
!5374 = !DILocation(line: 1597, column: 1, scope: !5326)
!5375 = distinct !DISubprogram(name: "animsys_execute_fcurve", scope: !1, file: !1, line: 1487, type: !5376, scopeLine: 1488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5376 = !DISubroutineType(types: !5377)
!5377 = !{!1529, !3402, !250, !2841}
!5378 = !DILocalVariable(name: "ptr", arg: 1, scope: !5375, file: !1, line: 1487, type: !3402)
!5379 = !DILocation(line: 1487, column: 48, scope: !5375)
!5380 = !DILocalVariable(name: "remap", arg: 2, scope: !5375, file: !1, line: 1487, type: !250)
!5381 = !DILocation(line: 1487, column: 65, scope: !5375)
!5382 = !DILocalVariable(name: "fcu", arg: 3, scope: !5375, file: !1, line: 1487, type: !2841)
!5383 = !DILocation(line: 1487, column: 80, scope: !5375)
!5384 = !DILocalVariable(name: "path", scope: !5375, file: !1, line: 1489, type: !153)
!5385 = !DILocation(line: 1489, column: 8, scope: !5375)
!5386 = !DILocalVariable(name: "free_path", scope: !5375, file: !1, line: 1490, type: !1529)
!5387 = !DILocation(line: 1490, column: 7, scope: !5375)
!5388 = !DILocalVariable(name: "ok", scope: !5375, file: !1, line: 1491, type: !1529)
!5389 = !DILocation(line: 1491, column: 7, scope: !5375)
!5390 = !DILocation(line: 1494, column: 33, scope: !5375)
!5391 = !DILocation(line: 1494, column: 40, scope: !5375)
!5392 = !DILocation(line: 1494, column: 45, scope: !5375)
!5393 = !DILocation(line: 1494, column: 14, scope: !5375)
!5394 = !DILocation(line: 1494, column: 12, scope: !5375)
!5395 = !DILocation(line: 1497, column: 6, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5375, file: !1, line: 1497, column: 6)
!5397 = !DILocation(line: 1497, column: 6, scope: !5375)
!5398 = !DILocation(line: 1498, column: 34, scope: !5396)
!5399 = !DILocation(line: 1498, column: 39, scope: !5396)
!5400 = !DILocation(line: 1498, column: 45, scope: !5396)
!5401 = !DILocation(line: 1498, column: 50, scope: !5396)
!5402 = !DILocation(line: 1498, column: 63, scope: !5396)
!5403 = !DILocation(line: 1498, column: 68, scope: !5396)
!5404 = !DILocation(line: 1498, column: 8, scope: !5396)
!5405 = !DILocation(line: 1498, column: 6, scope: !5396)
!5406 = !DILocation(line: 1498, column: 3, scope: !5396)
!5407 = !DILocation(line: 1501, column: 6, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5375, file: !1, line: 1501, column: 6)
!5409 = !DILocation(line: 1501, column: 6, scope: !5375)
!5410 = !DILocation(line: 1502, column: 3, scope: !5408)
!5411 = !DILocation(line: 1502, column: 13, scope: !5408)
!5412 = !DILocation(line: 1505, column: 9, scope: !5375)
!5413 = !DILocation(line: 1505, column: 2, scope: !5375)
!5414 = distinct !DISubprogram(name: "animsys_evaluate_action", scope: !1, file: !1, line: 1627, type: !5415, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{null, !3402, !235, !250, !275}
!5417 = !DILocalVariable(name: "ptr", arg: 1, scope: !5414, file: !1, line: 1627, type: !3402)
!5418 = !DILocation(line: 1627, column: 42, scope: !5414)
!5419 = !DILocalVariable(name: "act", arg: 2, scope: !5414, file: !1, line: 1627, type: !235)
!5420 = !DILocation(line: 1627, column: 56, scope: !5414)
!5421 = !DILocalVariable(name: "remap", arg: 3, scope: !5414, file: !1, line: 1627, type: !250)
!5422 = !DILocation(line: 1627, column: 73, scope: !5414)
!5423 = !DILocalVariable(name: "ctime", arg: 4, scope: !5414, file: !1, line: 1627, type: !275)
!5424 = !DILocation(line: 1627, column: 86, scope: !5414)
!5425 = !DILocation(line: 1630, column: 6, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5414, file: !1, line: 1630, column: 6)
!5427 = !DILocation(line: 1630, column: 10, scope: !5426)
!5428 = !DILocation(line: 1630, column: 6, scope: !5414)
!5429 = !DILocation(line: 1630, column: 19, scope: !5426)
!5430 = !DILocation(line: 1631, column: 7, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5414, file: !1, line: 1631, column: 6)
!5432 = !DILocation(line: 1631, column: 6, scope: !5431)
!5433 = !DILocation(line: 1631, column: 14, scope: !5431)
!5434 = !DILocation(line: 1631, column: 18, scope: !5431)
!5435 = !DILocation(line: 1631, column: 25, scope: !5431)
!5436 = !DILocation(line: 1631, column: 35, scope: !5431)
!5437 = !DILocation(line: 1631, column: 32, scope: !5431)
!5438 = !DILocation(line: 1631, column: 6, scope: !5414)
!5439 = !DILocation(line: 1631, column: 47, scope: !5431)
!5440 = !DILocation(line: 1631, column: 41, scope: !5431)
!5441 = !DILocation(line: 1633, column: 28, scope: !5414)
!5442 = !DILocation(line: 1633, column: 33, scope: !5414)
!5443 = !DILocation(line: 1633, column: 36, scope: !5414)
!5444 = !DILocation(line: 1633, column: 42, scope: !5414)
!5445 = !DILocation(line: 1633, column: 2, scope: !5414)
!5446 = !DILocation(line: 1636, column: 27, scope: !5414)
!5447 = !DILocation(line: 1636, column: 33, scope: !5414)
!5448 = !DILocation(line: 1636, column: 38, scope: !5414)
!5449 = !DILocation(line: 1636, column: 46, scope: !5414)
!5450 = !DILocation(line: 1636, column: 53, scope: !5414)
!5451 = !DILocation(line: 1636, column: 2, scope: !5414)
!5452 = !DILocation(line: 1637, column: 1, scope: !5414)
!5453 = distinct !DISubprogram(name: "animsys_evaluate_fcurves", scope: !1, file: !1, line: 1511, type: !5454, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{null, !3402, !1029, !250, !275}
!5456 = !DILocalVariable(name: "ptr", arg: 1, scope: !5453, file: !1, line: 1511, type: !3402)
!5457 = !DILocation(line: 1511, column: 50, scope: !5453)
!5458 = !DILocalVariable(name: "list", arg: 2, scope: !5453, file: !1, line: 1511, type: !1029)
!5459 = !DILocation(line: 1511, column: 65, scope: !5453)
!5460 = !DILocalVariable(name: "remap", arg: 3, scope: !5453, file: !1, line: 1511, type: !250)
!5461 = !DILocation(line: 1511, column: 83, scope: !5453)
!5462 = !DILocalVariable(name: "ctime", arg: 4, scope: !5453, file: !1, line: 1511, type: !275)
!5463 = !DILocation(line: 1511, column: 96, scope: !5453)
!5464 = !DILocalVariable(name: "fcu", scope: !5453, file: !1, line: 1513, type: !2841)
!5465 = !DILocation(line: 1513, column: 10, scope: !5453)
!5466 = !DILocation(line: 1516, column: 13, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5453, file: !1, line: 1516, column: 2)
!5468 = !DILocation(line: 1516, column: 19, scope: !5467)
!5469 = !DILocation(line: 1516, column: 11, scope: !5467)
!5470 = !DILocation(line: 1516, column: 7, scope: !5467)
!5471 = !DILocation(line: 1516, column: 26, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5467, file: !1, line: 1516, column: 2)
!5473 = !DILocation(line: 1516, column: 2, scope: !5467)
!5474 = !DILocation(line: 1518, column: 8, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5476, file: !1, line: 1518, column: 7)
!5476 = distinct !DILexicalBlock(scope: !5472, file: !1, line: 1516, column: 48)
!5477 = !DILocation(line: 1518, column: 13, scope: !5475)
!5478 = !DILocation(line: 1518, column: 17, scope: !5475)
!5479 = !DILocation(line: 1518, column: 26, scope: !5475)
!5480 = !DILocation(line: 1518, column: 30, scope: !5475)
!5481 = !DILocation(line: 1518, column: 35, scope: !5475)
!5482 = !DILocation(line: 1518, column: 40, scope: !5475)
!5483 = !DILocation(line: 1518, column: 45, scope: !5475)
!5484 = !DILocation(line: 1518, column: 59, scope: !5475)
!5485 = !DILocation(line: 1518, column: 7, scope: !5476)
!5486 = !DILocation(line: 1520, column: 9, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !1, line: 1520, column: 8)
!5488 = distinct !DILexicalBlock(scope: !5475, file: !1, line: 1518, column: 65)
!5489 = !DILocation(line: 1520, column: 14, scope: !5487)
!5490 = !DILocation(line: 1520, column: 19, scope: !5487)
!5491 = !DILocation(line: 1520, column: 55, scope: !5487)
!5492 = !DILocation(line: 1520, column: 8, scope: !5488)
!5493 = !DILocation(line: 1521, column: 22, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5487, file: !1, line: 1520, column: 61)
!5495 = !DILocation(line: 1521, column: 27, scope: !5494)
!5496 = !DILocation(line: 1521, column: 5, scope: !5494)
!5497 = !DILocation(line: 1522, column: 28, scope: !5494)
!5498 = !DILocation(line: 1522, column: 33, scope: !5494)
!5499 = !DILocation(line: 1522, column: 40, scope: !5494)
!5500 = !DILocation(line: 1522, column: 5, scope: !5494)
!5501 = !DILocation(line: 1523, column: 4, scope: !5494)
!5502 = !DILocation(line: 1524, column: 3, scope: !5488)
!5503 = !DILocation(line: 1525, column: 2, scope: !5476)
!5504 = !DILocation(line: 1516, column: 37, scope: !5472)
!5505 = !DILocation(line: 1516, column: 42, scope: !5472)
!5506 = !DILocation(line: 1516, column: 35, scope: !5472)
!5507 = !DILocation(line: 1516, column: 2, scope: !5472)
!5508 = distinct !{!5508, !5473, !5509}
!5509 = !DILocation(line: 1525, column: 2, scope: !5467)
!5510 = !DILocation(line: 1526, column: 1, scope: !5453)
!5511 = distinct !DISubprogram(name: "nlastrips_ctime_get_strip", scope: !1, file: !1, line: 1694, type: !5512, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5512 = !DISubroutineType(types: !5513)
!5513 = !{!5514, !1029, !1029, !156, !275}
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 64)
!5515 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaEvalStrip", file: !92, line: 49, baseType: !5516)
!5516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaEvalStrip", file: !92, line: 39, size: 320, elements: !5517)
!5517 = !{!5518, !5520, !5521, !5522, !5523, !5524, !5525}
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5516, file: !92, line: 40, baseType: !5519, size: 64)
!5519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5516, size: 64)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5516, file: !92, line: 40, baseType: !5519, size: 64, offset: 64)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !5516, file: !92, line: 42, baseType: !2723, size: 64, offset: 128)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !5516, file: !92, line: 43, baseType: !261, size: 64, offset: 192)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "track_index", scope: !5516, file: !92, line: 45, baseType: !156, size: 16, offset: 256)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "strip_mode", scope: !5516, file: !92, line: 46, baseType: !156, size: 16, offset: 272)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !5516, file: !92, line: 48, baseType: !275, size: 32, offset: 288)
!5526 = !DILocalVariable(name: "list", arg: 1, scope: !5511, file: !1, line: 1694, type: !1029)
!5527 = !DILocation(line: 1694, column: 51, scope: !5511)
!5528 = !DILocalVariable(name: "strips", arg: 2, scope: !5511, file: !1, line: 1694, type: !1029)
!5529 = !DILocation(line: 1694, column: 67, scope: !5511)
!5530 = !DILocalVariable(name: "index", arg: 3, scope: !5511, file: !1, line: 1694, type: !156)
!5531 = !DILocation(line: 1694, column: 81, scope: !5511)
!5532 = !DILocalVariable(name: "ctime", arg: 4, scope: !5511, file: !1, line: 1694, type: !275)
!5533 = !DILocation(line: 1694, column: 94, scope: !5511)
!5534 = !DILocalVariable(name: "strip", scope: !5511, file: !1, line: 1696, type: !261)
!5535 = !DILocation(line: 1696, column: 12, scope: !5511)
!5536 = !DILocalVariable(name: "estrip", scope: !5511, file: !1, line: 1696, type: !261)
!5537 = !DILocation(line: 1696, column: 20, scope: !5511)
!5538 = !DILocalVariable(name: "nes", scope: !5511, file: !1, line: 1697, type: !5514)
!5539 = !DILocation(line: 1697, column: 16, scope: !5511)
!5540 = !DILocalVariable(name: "side", scope: !5511, file: !1, line: 1698, type: !156)
!5541 = !DILocation(line: 1698, column: 8, scope: !5511)
!5542 = !DILocation(line: 1701, column: 15, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 1701, column: 2)
!5544 = !DILocation(line: 1701, column: 23, scope: !5543)
!5545 = !DILocation(line: 1701, column: 13, scope: !5543)
!5546 = !DILocation(line: 1701, column: 7, scope: !5543)
!5547 = !DILocation(line: 1701, column: 30, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5543, file: !1, line: 1701, column: 2)
!5549 = !DILocation(line: 1701, column: 2, scope: !5543)
!5550 = !DILocation(line: 1703, column: 7, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5552, file: !1, line: 1703, column: 7)
!5552 = distinct !DILexicalBlock(scope: !5548, file: !1, line: 1701, column: 58)
!5553 = !DILocation(line: 1703, column: 7, scope: !5552)
!5554 = !DILocation(line: 1705, column: 13, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5551, file: !1, line: 1703, column: 55)
!5556 = !DILocation(line: 1705, column: 11, scope: !5555)
!5557 = !DILocation(line: 1706, column: 9, scope: !5555)
!5558 = !DILocation(line: 1707, column: 4, scope: !5555)
!5559 = !DILocation(line: 1711, column: 7, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5552, file: !1, line: 1711, column: 7)
!5561 = !DILocation(line: 1711, column: 15, scope: !5560)
!5562 = !DILocation(line: 1711, column: 22, scope: !5560)
!5563 = !DILocation(line: 1711, column: 13, scope: !5560)
!5564 = !DILocation(line: 1711, column: 7, scope: !5552)
!5565 = !DILocation(line: 1712, column: 8, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5567, file: !1, line: 1712, column: 8)
!5567 = distinct !DILexicalBlock(scope: !5560, file: !1, line: 1711, column: 29)
!5568 = !DILocation(line: 1712, column: 17, scope: !5566)
!5569 = !DILocation(line: 1712, column: 25, scope: !5566)
!5570 = !DILocation(line: 1712, column: 14, scope: !5566)
!5571 = !DILocation(line: 1712, column: 8, scope: !5567)
!5572 = !DILocation(line: 1714, column: 9, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5574, file: !1, line: 1714, column: 9)
!5574 = distinct !DILexicalBlock(scope: !5566, file: !1, line: 1712, column: 32)
!5575 = !DILocation(line: 1714, column: 16, scope: !5573)
!5576 = !DILocation(line: 1714, column: 27, scope: !5573)
!5577 = !DILocation(line: 1714, column: 9, scope: !5574)
!5578 = !DILocation(line: 1715, column: 15, scope: !5573)
!5579 = !DILocation(line: 1715, column: 13, scope: !5573)
!5580 = !DILocation(line: 1715, column: 6, scope: !5573)
!5581 = !DILocation(line: 1718, column: 10, scope: !5574)
!5582 = !DILocation(line: 1719, column: 4, scope: !5574)
!5583 = !DILocation(line: 1726, column: 13, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5566, file: !1, line: 1720, column: 9)
!5585 = !DILocation(line: 1726, column: 20, scope: !5584)
!5586 = !DILocation(line: 1726, column: 11, scope: !5584)
!5587 = !DILocation(line: 1728, column: 9, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5584, file: !1, line: 1728, column: 9)
!5589 = !DILocation(line: 1728, column: 16, scope: !5588)
!5590 = !DILocation(line: 1728, column: 27, scope: !5588)
!5591 = !DILocation(line: 1728, column: 9, scope: !5584)
!5592 = !DILocation(line: 1729, column: 15, scope: !5588)
!5593 = !DILocation(line: 1729, column: 13, scope: !5588)
!5594 = !DILocation(line: 1729, column: 6, scope: !5588)
!5595 = !DILocation(line: 1730, column: 10, scope: !5584)
!5596 = !DILocation(line: 1732, column: 4, scope: !5567)
!5597 = !DILocation(line: 1736, column: 7, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5552, file: !1, line: 1736, column: 7)
!5599 = !DILocation(line: 1736, column: 15, scope: !5598)
!5600 = !DILocation(line: 1736, column: 22, scope: !5598)
!5601 = !DILocation(line: 1736, column: 13, scope: !5598)
!5602 = !DILocation(line: 1736, column: 7, scope: !5552)
!5603 = !DILocation(line: 1738, column: 8, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5605, file: !1, line: 1738, column: 8)
!5605 = distinct !DILexicalBlock(scope: !5598, file: !1, line: 1736, column: 27)
!5606 = !DILocation(line: 1738, column: 17, scope: !5604)
!5607 = !DILocation(line: 1738, column: 25, scope: !5604)
!5608 = !DILocation(line: 1738, column: 14, scope: !5604)
!5609 = !DILocation(line: 1738, column: 8, scope: !5605)
!5610 = !DILocation(line: 1739, column: 9, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5612, file: !1, line: 1739, column: 9)
!5612 = distinct !DILexicalBlock(scope: !5604, file: !1, line: 1738, column: 31)
!5613 = !DILocation(line: 1739, column: 16, scope: !5611)
!5614 = !DILocation(line: 1739, column: 27, scope: !5611)
!5615 = !DILocation(line: 1739, column: 9, scope: !5612)
!5616 = !DILocation(line: 1740, column: 15, scope: !5611)
!5617 = !DILocation(line: 1740, column: 13, scope: !5611)
!5618 = !DILocation(line: 1740, column: 6, scope: !5611)
!5619 = !DILocation(line: 1742, column: 10, scope: !5612)
!5620 = !DILocation(line: 1743, column: 5, scope: !5612)
!5621 = !DILocation(line: 1747, column: 3, scope: !5605)
!5622 = !DILocation(line: 1748, column: 2, scope: !5552)
!5623 = !DILocation(line: 1701, column: 45, scope: !5548)
!5624 = !DILocation(line: 1701, column: 52, scope: !5548)
!5625 = !DILocation(line: 1701, column: 43, scope: !5548)
!5626 = !DILocation(line: 1701, column: 2, scope: !5548)
!5627 = distinct !{!5627, !5549, !5628}
!5628 = !DILocation(line: 1748, column: 2, scope: !5543)
!5629 = !DILocation(line: 1753, column: 7, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 1753, column: 6)
!5631 = !DILocation(line: 1753, column: 14, scope: !5630)
!5632 = !DILocation(line: 1753, column: 23, scope: !5630)
!5633 = !DILocation(line: 1753, column: 27, scope: !5630)
!5634 = !DILocation(line: 1753, column: 35, scope: !5630)
!5635 = !DILocation(line: 1753, column: 40, scope: !5630)
!5636 = !DILocation(line: 1753, column: 6, scope: !5511)
!5637 = !DILocation(line: 1754, column: 3, scope: !5630)
!5638 = !DILocation(line: 1757, column: 10, scope: !5511)
!5639 = !DILocation(line: 1757, column: 2, scope: !5511)
!5640 = !DILocation(line: 1759, column: 12, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 1757, column: 16)
!5642 = !DILocation(line: 1759, column: 20, scope: !5641)
!5643 = !DILocation(line: 1759, column: 10, scope: !5641)
!5644 = !DILocation(line: 1760, column: 4, scope: !5641)
!5645 = !DILocation(line: 1762, column: 12, scope: !5641)
!5646 = !DILocation(line: 1762, column: 20, scope: !5641)
!5647 = !DILocation(line: 1762, column: 10, scope: !5641)
!5648 = !DILocation(line: 1763, column: 4, scope: !5641)
!5649 = !DILocation(line: 1771, column: 29, scope: !5511)
!5650 = !DILocation(line: 1771, column: 37, scope: !5511)
!5651 = !DILocation(line: 1771, column: 2, scope: !5511)
!5652 = !DILocation(line: 1772, column: 6, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 1772, column: 6)
!5654 = !DILocation(line: 1772, column: 14, scope: !5653)
!5655 = !DILocation(line: 1772, column: 24, scope: !5653)
!5656 = !DILocation(line: 1772, column: 6, scope: !5511)
!5657 = !DILocation(line: 1773, column: 3, scope: !5653)
!5658 = !DILocation(line: 1778, column: 10, scope: !5511)
!5659 = !DILocation(line: 1778, column: 18, scope: !5511)
!5660 = !DILocation(line: 1778, column: 2, scope: !5511)
!5661 = !DILocation(line: 1781, column: 8, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5663, file: !1, line: 1781, column: 8)
!5663 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 1778, column: 24)
!5664 = !DILocation(line: 1781, column: 16, scope: !5662)
!5665 = !DILocation(line: 1781, column: 20, scope: !5662)
!5666 = !DILocation(line: 1781, column: 8, scope: !5663)
!5667 = !DILocation(line: 1782, column: 5, scope: !5662)
!5668 = !DILocation(line: 1783, column: 4, scope: !5663)
!5669 = !DILocation(line: 1786, column: 8, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5663, file: !1, line: 1786, column: 8)
!5671 = !DILocation(line: 1786, column: 8, scope: !5663)
!5672 = !DILocation(line: 1787, column: 5, scope: !5670)
!5673 = !DILocation(line: 1790, column: 31, scope: !5663)
!5674 = !DILocation(line: 1790, column: 39, scope: !5663)
!5675 = !DILocation(line: 1790, column: 45, scope: !5663)
!5676 = !DILocation(line: 1790, column: 53, scope: !5663)
!5677 = !DILocation(line: 1790, column: 4, scope: !5663)
!5678 = !DILocation(line: 1791, column: 31, scope: !5663)
!5679 = !DILocation(line: 1791, column: 39, scope: !5663)
!5680 = !DILocation(line: 1791, column: 45, scope: !5663)
!5681 = !DILocation(line: 1791, column: 53, scope: !5663)
!5682 = !DILocation(line: 1791, column: 4, scope: !5663)
!5683 = !DILocation(line: 1792, column: 4, scope: !5663)
!5684 = !DILocation(line: 1796, column: 8, scope: !5511)
!5685 = !DILocation(line: 1796, column: 6, scope: !5511)
!5686 = !DILocation(line: 1798, column: 15, scope: !5511)
!5687 = !DILocation(line: 1798, column: 2, scope: !5511)
!5688 = !DILocation(line: 1798, column: 7, scope: !5511)
!5689 = !DILocation(line: 1798, column: 13, scope: !5511)
!5690 = !DILocation(line: 1799, column: 20, scope: !5511)
!5691 = !DILocation(line: 1799, column: 2, scope: !5511)
!5692 = !DILocation(line: 1799, column: 7, scope: !5511)
!5693 = !DILocation(line: 1799, column: 18, scope: !5511)
!5694 = !DILocation(line: 1800, column: 21, scope: !5511)
!5695 = !DILocation(line: 1800, column: 2, scope: !5511)
!5696 = !DILocation(line: 1800, column: 7, scope: !5511)
!5697 = !DILocation(line: 1800, column: 19, scope: !5511)
!5698 = !DILocation(line: 1801, column: 20, scope: !5511)
!5699 = !DILocation(line: 1801, column: 28, scope: !5511)
!5700 = !DILocation(line: 1801, column: 2, scope: !5511)
!5701 = !DILocation(line: 1801, column: 7, scope: !5511)
!5702 = !DILocation(line: 1801, column: 18, scope: !5511)
!5703 = !DILocation(line: 1803, column: 6, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5511, file: !1, line: 1803, column: 6)
!5705 = !DILocation(line: 1803, column: 6, scope: !5511)
!5706 = !DILocation(line: 1804, column: 15, scope: !5704)
!5707 = !DILocation(line: 1804, column: 21, scope: !5704)
!5708 = !DILocation(line: 1804, column: 3, scope: !5704)
!5709 = !DILocation(line: 1806, column: 9, scope: !5511)
!5710 = !DILocation(line: 1806, column: 2, scope: !5511)
!5711 = !DILocation(line: 1807, column: 1, scope: !5511)
!5712 = distinct !DISubprogram(name: "nlastrip_evaluate_controls", scope: !1, file: !1, line: 1665, type: !5713, scopeLine: 1666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{null, !261, !275}
!5715 = !DILocalVariable(name: "strip", arg: 1, scope: !5712, file: !1, line: 1665, type: !261)
!5716 = !DILocation(line: 1665, column: 50, scope: !5712)
!5717 = !DILocalVariable(name: "ctime", arg: 2, scope: !5712, file: !1, line: 1665, type: !275)
!5718 = !DILocation(line: 1665, column: 63, scope: !5712)
!5719 = !DILocation(line: 1668, column: 7, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5712, file: !1, line: 1668, column: 6)
!5721 = !DILocation(line: 1668, column: 14, scope: !5720)
!5722 = !DILocation(line: 1668, column: 19, scope: !5720)
!5723 = !DILocation(line: 1668, column: 45, scope: !5720)
!5724 = !DILocation(line: 1668, column: 6, scope: !5712)
!5725 = !DILocation(line: 1669, column: 42, scope: !5720)
!5726 = !DILocation(line: 1669, column: 49, scope: !5720)
!5727 = !DILocation(line: 1669, column: 23, scope: !5720)
!5728 = !DILocation(line: 1669, column: 3, scope: !5720)
!5729 = !DILocation(line: 1669, column: 10, scope: !5720)
!5730 = !DILocation(line: 1669, column: 21, scope: !5720)
!5731 = !DILocation(line: 1670, column: 7, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5712, file: !1, line: 1670, column: 6)
!5733 = !DILocation(line: 1670, column: 14, scope: !5732)
!5734 = !DILocation(line: 1670, column: 19, scope: !5732)
!5735 = !DILocation(line: 1670, column: 50, scope: !5732)
!5736 = !DILocation(line: 1670, column: 6, scope: !5712)
!5737 = !DILocation(line: 1671, column: 45, scope: !5732)
!5738 = !DILocation(line: 1671, column: 52, scope: !5732)
!5739 = !DILocation(line: 1671, column: 22, scope: !5732)
!5740 = !DILocation(line: 1671, column: 3, scope: !5732)
!5741 = !DILocation(line: 1671, column: 10, scope: !5732)
!5742 = !DILocation(line: 1671, column: 20, scope: !5732)
!5743 = !DILocation(line: 1674, column: 6, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5712, file: !1, line: 1674, column: 6)
!5745 = !DILocation(line: 1674, column: 13, scope: !5744)
!5746 = !DILocation(line: 1674, column: 21, scope: !5744)
!5747 = !DILocation(line: 1674, column: 6, scope: !5712)
!5748 = !DILocalVariable(name: "strip_ptr", scope: !5749, file: !1, line: 1675, type: !3403)
!5749 = distinct !DILexicalBlock(scope: !5744, file: !1, line: 1674, column: 28)
!5750 = !DILocation(line: 1675, column: 14, scope: !5749)
!5751 = !DILocation(line: 1678, column: 43, scope: !5749)
!5752 = !DILocation(line: 1678, column: 3, scope: !5749)
!5753 = !DILocation(line: 1681, column: 41, scope: !5749)
!5754 = !DILocation(line: 1681, column: 48, scope: !5749)
!5755 = !DILocation(line: 1681, column: 63, scope: !5749)
!5756 = !DILocation(line: 1681, column: 3, scope: !5749)
!5757 = !DILocation(line: 1682, column: 2, scope: !5749)
!5758 = !DILocation(line: 1689, column: 7, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5712, file: !1, line: 1689, column: 6)
!5760 = !DILocation(line: 1689, column: 14, scope: !5759)
!5761 = !DILocation(line: 1689, column: 19, scope: !5759)
!5762 = !DILocation(line: 1689, column: 45, scope: !5759)
!5763 = !DILocation(line: 1689, column: 49, scope: !5759)
!5764 = !DILocation(line: 1689, column: 56, scope: !5759)
!5765 = !DILocation(line: 1689, column: 61, scope: !5759)
!5766 = !DILocation(line: 1689, column: 6, scope: !5712)
!5767 = !DILocation(line: 1690, column: 28, scope: !5759)
!5768 = !DILocation(line: 1690, column: 35, scope: !5759)
!5769 = !DILocation(line: 1690, column: 48, scope: !5759)
!5770 = !DILocation(line: 1690, column: 55, scope: !5759)
!5771 = !DILocation(line: 1690, column: 46, scope: !5759)
!5772 = !DILocation(line: 1690, column: 65, scope: !5759)
!5773 = !DILocation(line: 1690, column: 72, scope: !5759)
!5774 = !DILocation(line: 1690, column: 81, scope: !5759)
!5775 = !DILocation(line: 1690, column: 88, scope: !5759)
!5776 = !DILocation(line: 1690, column: 79, scope: !5759)
!5777 = !DILocation(line: 1690, column: 23, scope: !5759)
!5778 = !DILocation(line: 1690, column: 3, scope: !5759)
!5779 = !DILocation(line: 1690, column: 10, scope: !5759)
!5780 = !DILocation(line: 1690, column: 21, scope: !5759)
!5781 = !DILocation(line: 1691, column: 1, scope: !5712)
!5782 = distinct !DISubprogram(name: "nlastrip_evaluate", scope: !1, file: !1, line: 2230, type: !5783, scopeLine: 2231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5783 = !DISubroutineType(types: !5784)
!5784 = !{null, !3402, !1029, !1029, !5514}
!5785 = !DILocalVariable(name: "ptr", arg: 1, scope: !5782, file: !1, line: 2230, type: !3402)
!5786 = !DILocation(line: 2230, column: 36, scope: !5782)
!5787 = !DILocalVariable(name: "channels", arg: 2, scope: !5782, file: !1, line: 2230, type: !1029)
!5788 = !DILocation(line: 2230, column: 51, scope: !5782)
!5789 = !DILocalVariable(name: "modifiers", arg: 3, scope: !5782, file: !1, line: 2230, type: !1029)
!5790 = !DILocation(line: 2230, column: 71, scope: !5782)
!5791 = !DILocalVariable(name: "nes", arg: 4, scope: !5782, file: !1, line: 2230, type: !5514)
!5792 = !DILocation(line: 2230, column: 96, scope: !5782)
!5793 = !DILocalVariable(name: "strip", scope: !5782, file: !1, line: 2232, type: !261)
!5794 = !DILocation(line: 2232, column: 12, scope: !5782)
!5795 = !DILocation(line: 2232, column: 20, scope: !5782)
!5796 = !DILocation(line: 2232, column: 25, scope: !5782)
!5797 = !DILocation(line: 2238, column: 6, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5782, file: !1, line: 2238, column: 6)
!5799 = !DILocation(line: 2238, column: 13, scope: !5798)
!5800 = !DILocation(line: 2238, column: 18, scope: !5798)
!5801 = !DILocation(line: 2238, column: 6, scope: !5782)
!5802 = !DILocation(line: 2239, column: 3, scope: !5798)
!5803 = !DILocation(line: 2240, column: 2, scope: !5782)
!5804 = !DILocation(line: 2240, column: 9, scope: !5782)
!5805 = !DILocation(line: 2240, column: 14, scope: !5782)
!5806 = !DILocation(line: 2243, column: 10, scope: !5782)
!5807 = !DILocation(line: 2243, column: 17, scope: !5782)
!5808 = !DILocation(line: 2243, column: 2, scope: !5782)
!5809 = !DILocation(line: 2245, column: 33, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5782, file: !1, line: 2243, column: 23)
!5811 = !DILocation(line: 2245, column: 38, scope: !5810)
!5812 = !DILocation(line: 2245, column: 48, scope: !5810)
!5813 = !DILocation(line: 2245, column: 59, scope: !5810)
!5814 = !DILocation(line: 2245, column: 4, scope: !5810)
!5815 = !DILocation(line: 2246, column: 4, scope: !5810)
!5816 = !DILocation(line: 2248, column: 33, scope: !5810)
!5817 = !DILocation(line: 2248, column: 38, scope: !5810)
!5818 = !DILocation(line: 2248, column: 48, scope: !5810)
!5819 = !DILocation(line: 2248, column: 59, scope: !5810)
!5820 = !DILocation(line: 2248, column: 4, scope: !5810)
!5821 = !DILocation(line: 2249, column: 4, scope: !5810)
!5822 = !DILocation(line: 2251, column: 27, scope: !5810)
!5823 = !DILocation(line: 2251, column: 32, scope: !5810)
!5824 = !DILocation(line: 2251, column: 42, scope: !5810)
!5825 = !DILocation(line: 2251, column: 53, scope: !5810)
!5826 = !DILocation(line: 2251, column: 4, scope: !5810)
!5827 = !DILocation(line: 2252, column: 4, scope: !5810)
!5828 = !DILocation(line: 2255, column: 4, scope: !5810)
!5829 = !DILocation(line: 2259, column: 2, scope: !5782)
!5830 = !DILocation(line: 2259, column: 9, scope: !5782)
!5831 = !DILocation(line: 2259, column: 14, scope: !5782)
!5832 = !DILocation(line: 2260, column: 1, scope: !5782)
!5833 = distinct !DISubprogram(name: "nlastrip_evaluate_actionclip", scope: !1, file: !1, line: 2072, type: !5783, scopeLine: 2073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5834 = !DILocalVariable(name: "ptr", arg: 1, scope: !5833, file: !1, line: 2072, type: !3402)
!5835 = !DILocation(line: 2072, column: 54, scope: !5833)
!5836 = !DILocalVariable(name: "channels", arg: 2, scope: !5833, file: !1, line: 2072, type: !1029)
!5837 = !DILocation(line: 2072, column: 69, scope: !5833)
!5838 = !DILocalVariable(name: "modifiers", arg: 3, scope: !5833, file: !1, line: 2072, type: !1029)
!5839 = !DILocation(line: 2072, column: 89, scope: !5833)
!5840 = !DILocalVariable(name: "nes", arg: 4, scope: !5833, file: !1, line: 2072, type: !5514)
!5841 = !DILocation(line: 2072, column: 114, scope: !5833)
!5842 = !DILocalVariable(name: "storage", scope: !5833, file: !1, line: 2074, type: !5843)
!5843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5844, size: 64)
!5844 = !DIDerivedType(tag: DW_TAG_typedef, name: "FModifierStackStorage", file: !5845, line: 103, baseType: !414)
!5845 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_fcurve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5846 = !DILocation(line: 2074, column: 25, scope: !5833)
!5847 = !DILocalVariable(name: "tmp_modifiers", scope: !5833, file: !1, line: 2075, type: !219)
!5848 = !DILocation(line: 2075, column: 11, scope: !5833)
!5849 = !DILocalVariable(name: "strip", scope: !5833, file: !1, line: 2076, type: !261)
!5850 = !DILocation(line: 2076, column: 12, scope: !5833)
!5851 = !DILocation(line: 2076, column: 20, scope: !5833)
!5852 = !DILocation(line: 2076, column: 25, scope: !5833)
!5853 = !DILocalVariable(name: "fcu", scope: !5833, file: !1, line: 2077, type: !2841)
!5854 = !DILocation(line: 2077, column: 10, scope: !5833)
!5855 = !DILocalVariable(name: "evaltime", scope: !5833, file: !1, line: 2078, type: !275)
!5856 = !DILocation(line: 2078, column: 8, scope: !5833)
!5857 = !DILocation(line: 2081, column: 6, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5833, file: !1, line: 2081, column: 6)
!5859 = !DILocation(line: 2081, column: 12, scope: !5858)
!5860 = !DILocation(line: 2081, column: 6, scope: !5833)
!5861 = !DILocation(line: 2082, column: 3, scope: !5858)
!5862 = !DILocation(line: 2084, column: 6, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5833, file: !1, line: 2084, column: 6)
!5864 = !DILocation(line: 2084, column: 13, scope: !5863)
!5865 = !DILocation(line: 2084, column: 17, scope: !5863)
!5866 = !DILocation(line: 2084, column: 6, scope: !5833)
!5867 = !DILocation(line: 2085, column: 62, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5863, file: !1, line: 2084, column: 26)
!5869 = !DILocation(line: 2085, column: 69, scope: !5868)
!5870 = !DILocation(line: 2085, column: 3, scope: !5868)
!5871 = !DILocation(line: 2086, column: 3, scope: !5868)
!5872 = !DILocation(line: 2089, column: 28, scope: !5833)
!5873 = !DILocation(line: 2089, column: 33, scope: !5833)
!5874 = !DILocation(line: 2089, column: 36, scope: !5833)
!5875 = !DILocation(line: 2089, column: 42, scope: !5833)
!5876 = !DILocation(line: 2089, column: 49, scope: !5833)
!5877 = !DILocation(line: 2089, column: 2, scope: !5833)
!5878 = !DILocation(line: 2092, column: 50, scope: !5833)
!5879 = !DILocation(line: 2092, column: 57, scope: !5833)
!5880 = !DILocation(line: 2092, column: 68, scope: !5833)
!5881 = !DILocation(line: 2092, column: 2, scope: !5833)
!5882 = !DILocation(line: 2095, column: 12, scope: !5833)
!5883 = !DILocation(line: 2095, column: 10, scope: !5833)
!5884 = !DILocation(line: 2096, column: 38, scope: !5833)
!5885 = !DILocation(line: 2096, column: 75, scope: !5833)
!5886 = !DILocation(line: 2096, column: 82, scope: !5833)
!5887 = !DILocation(line: 2096, column: 13, scope: !5833)
!5888 = !DILocation(line: 2096, column: 11, scope: !5833)
!5889 = !DILocation(line: 2099, column: 13, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5833, file: !1, line: 2099, column: 2)
!5891 = !DILocation(line: 2099, column: 20, scope: !5890)
!5892 = !DILocation(line: 2099, column: 25, scope: !5890)
!5893 = !DILocation(line: 2099, column: 32, scope: !5890)
!5894 = !DILocation(line: 2099, column: 11, scope: !5890)
!5895 = !DILocation(line: 2099, column: 7, scope: !5890)
!5896 = !DILocation(line: 2099, column: 39, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5890, file: !1, line: 2099, column: 2)
!5898 = !DILocation(line: 2099, column: 2, scope: !5890)
!5899 = !DILocalVariable(name: "nec", scope: !5900, file: !1, line: 2100, type: !5901)
!5900 = distinct !DILexicalBlock(scope: !5897, file: !1, line: 2099, column: 61)
!5901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5902, size: 64)
!5902 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaEvalChannel", file: !92, line: 74, baseType: !5903)
!5903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaEvalChannel", file: !92, line: 66, size: 448, elements: !5904)
!5904 = !{!5905, !5907, !5908, !5909, !5910, !5911}
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5903, file: !92, line: 67, baseType: !5906, size: 64)
!5906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5903, size: 64)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5903, file: !92, line: 67, baseType: !5906, size: 64, offset: 64)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5903, file: !92, line: 69, baseType: !3403, size: 192, offset: 128)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !5903, file: !92, line: 70, baseType: !3413, size: 64, offset: 320)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5903, file: !92, line: 71, baseType: !43, size: 32, offset: 384)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5903, file: !92, line: 73, baseType: !275, size: 32, offset: 416)
!5912 = !DILocation(line: 2100, column: 19, scope: !5900)
!5913 = !DILocalVariable(name: "value", scope: !5900, file: !1, line: 2101, type: !275)
!5914 = !DILocation(line: 2101, column: 9, scope: !5900)
!5915 = !DILocalVariable(name: "newChan", scope: !5900, file: !1, line: 2102, type: !1529)
!5916 = !DILocation(line: 2102, column: 8, scope: !5900)
!5917 = !DILocation(line: 2105, column: 7, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5900, file: !1, line: 2105, column: 7)
!5919 = !DILocation(line: 2105, column: 12, scope: !5918)
!5920 = !DILocation(line: 2105, column: 17, scope: !5918)
!5921 = !DILocation(line: 2105, column: 7, scope: !5900)
!5922 = !DILocation(line: 2106, column: 4, scope: !5918)
!5923 = !DILocation(line: 2107, column: 8, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5900, file: !1, line: 2107, column: 7)
!5925 = !DILocation(line: 2107, column: 13, scope: !5924)
!5926 = !DILocation(line: 2107, column: 7, scope: !5924)
!5927 = !DILocation(line: 2107, column: 18, scope: !5924)
!5928 = !DILocation(line: 2107, column: 22, scope: !5924)
!5929 = !DILocation(line: 2107, column: 27, scope: !5924)
!5930 = !DILocation(line: 2107, column: 32, scope: !5924)
!5931 = !DILocation(line: 2107, column: 37, scope: !5924)
!5932 = !DILocation(line: 2107, column: 7, scope: !5900)
!5933 = !DILocation(line: 2108, column: 4, scope: !5924)
!5934 = !DILocation(line: 2113, column: 27, scope: !5900)
!5935 = !DILocation(line: 2113, column: 32, scope: !5900)
!5936 = !DILocation(line: 2113, column: 11, scope: !5900)
!5937 = !DILocation(line: 2113, column: 9, scope: !5900)
!5938 = !DILocation(line: 2118, column: 29, scope: !5900)
!5939 = !DILocation(line: 2118, column: 54, scope: !5900)
!5940 = !DILocation(line: 2118, column: 67, scope: !5900)
!5941 = !DILocation(line: 2118, column: 74, scope: !5900)
!5942 = !DILocation(line: 2118, column: 3, scope: !5900)
!5943 = !DILocation(line: 2124, column: 28, scope: !5900)
!5944 = !DILocation(line: 2124, column: 33, scope: !5900)
!5945 = !DILocation(line: 2124, column: 43, scope: !5900)
!5946 = !DILocation(line: 2124, column: 48, scope: !5900)
!5947 = !DILocation(line: 2124, column: 9, scope: !5900)
!5948 = !DILocation(line: 2124, column: 7, scope: !5900)
!5949 = !DILocation(line: 2125, column: 7, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5900, file: !1, line: 2125, column: 7)
!5951 = !DILocation(line: 2125, column: 7, scope: !5900)
!5952 = !DILocation(line: 2126, column: 27, scope: !5950)
!5953 = !DILocation(line: 2126, column: 32, scope: !5950)
!5954 = !DILocation(line: 2126, column: 37, scope: !5950)
!5955 = !DILocation(line: 2126, column: 44, scope: !5950)
!5956 = !DILocation(line: 2126, column: 4, scope: !5950)
!5957 = !DILocation(line: 2127, column: 2, scope: !5900)
!5958 = !DILocation(line: 2099, column: 50, scope: !5897)
!5959 = !DILocation(line: 2099, column: 55, scope: !5897)
!5960 = !DILocation(line: 2099, column: 48, scope: !5897)
!5961 = !DILocation(line: 2099, column: 2, scope: !5897)
!5962 = distinct !{!5962, !5898, !5963}
!5963 = !DILocation(line: 2127, column: 2, scope: !5890)
!5964 = !DILocation(line: 2130, column: 35, scope: !5833)
!5965 = !DILocation(line: 2130, column: 2, scope: !5833)
!5966 = !DILocation(line: 2133, column: 35, scope: !5833)
!5967 = !DILocation(line: 2133, column: 42, scope: !5833)
!5968 = !DILocation(line: 2133, column: 53, scope: !5833)
!5969 = !DILocation(line: 2133, column: 2, scope: !5833)
!5970 = !DILocation(line: 2134, column: 1, scope: !5833)
!5971 = distinct !DISubprogram(name: "nlastrip_evaluate_transition", scope: !1, file: !1, line: 2137, type: !5783, scopeLine: 2138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!5972 = !DILocalVariable(name: "ptr", arg: 1, scope: !5971, file: !1, line: 2137, type: !3402)
!5973 = !DILocation(line: 2137, column: 54, scope: !5971)
!5974 = !DILocalVariable(name: "channels", arg: 2, scope: !5971, file: !1, line: 2137, type: !1029)
!5975 = !DILocation(line: 2137, column: 69, scope: !5971)
!5976 = !DILocalVariable(name: "modifiers", arg: 3, scope: !5971, file: !1, line: 2137, type: !1029)
!5977 = !DILocation(line: 2137, column: 89, scope: !5971)
!5978 = !DILocalVariable(name: "nes", arg: 4, scope: !5971, file: !1, line: 2137, type: !5514)
!5979 = !DILocation(line: 2137, column: 114, scope: !5971)
!5980 = !DILocalVariable(name: "tmp_channels", scope: !5971, file: !1, line: 2139, type: !219)
!5981 = !DILocation(line: 2139, column: 11, scope: !5971)
!5982 = !DILocalVariable(name: "tmp_modifiers", scope: !5971, file: !1, line: 2140, type: !219)
!5983 = !DILocation(line: 2140, column: 11, scope: !5971)
!5984 = !DILocalVariable(name: "tmp_nes", scope: !5971, file: !1, line: 2141, type: !5515)
!5985 = !DILocation(line: 2141, column: 15, scope: !5971)
!5986 = !DILocalVariable(name: "s1", scope: !5971, file: !1, line: 2142, type: !261)
!5987 = !DILocation(line: 2142, column: 12, scope: !5971)
!5988 = !DILocalVariable(name: "s2", scope: !5971, file: !1, line: 2142, type: !261)
!5989 = !DILocation(line: 2142, column: 17, scope: !5971)
!5990 = !DILocation(line: 2145, column: 50, scope: !5971)
!5991 = !DILocation(line: 2145, column: 55, scope: !5971)
!5992 = !DILocation(line: 2145, column: 62, scope: !5971)
!5993 = !DILocation(line: 2145, column: 73, scope: !5971)
!5994 = !DILocation(line: 2145, column: 2, scope: !5971)
!5995 = !DILocation(line: 2154, column: 6, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5971, file: !1, line: 2154, column: 6)
!5997 = !DILocation(line: 2154, column: 11, scope: !5996)
!5998 = !DILocation(line: 2154, column: 18, scope: !5996)
!5999 = !DILocation(line: 2154, column: 23, scope: !5996)
!6000 = !DILocation(line: 2154, column: 6, scope: !5971)
!6001 = !DILocation(line: 2155, column: 8, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5996, file: !1, line: 2154, column: 48)
!6003 = !DILocation(line: 2155, column: 13, scope: !6002)
!6004 = !DILocation(line: 2155, column: 20, scope: !6002)
!6005 = !DILocation(line: 2155, column: 6, scope: !6002)
!6006 = !DILocation(line: 2156, column: 8, scope: !6002)
!6007 = !DILocation(line: 2156, column: 13, scope: !6002)
!6008 = !DILocation(line: 2156, column: 20, scope: !6002)
!6009 = !DILocation(line: 2156, column: 6, scope: !6002)
!6010 = !DILocation(line: 2157, column: 2, scope: !6002)
!6011 = !DILocation(line: 2159, column: 8, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5996, file: !1, line: 2158, column: 7)
!6013 = !DILocation(line: 2159, column: 13, scope: !6012)
!6014 = !DILocation(line: 2159, column: 20, scope: !6012)
!6015 = !DILocation(line: 2159, column: 6, scope: !6012)
!6016 = !DILocation(line: 2160, column: 8, scope: !6012)
!6017 = !DILocation(line: 2160, column: 13, scope: !6012)
!6018 = !DILocation(line: 2160, column: 20, scope: !6012)
!6019 = !DILocation(line: 2160, column: 6, scope: !6012)
!6020 = !DILocation(line: 2170, column: 13, scope: !5971)
!6021 = !DILocation(line: 2170, column: 12, scope: !5971)
!6022 = !DILocation(line: 2175, column: 10, scope: !5971)
!6023 = !DILocation(line: 2175, column: 21, scope: !5971)
!6024 = !DILocation(line: 2176, column: 18, scope: !5971)
!6025 = !DILocation(line: 2176, column: 10, scope: !5971)
!6026 = !DILocation(line: 2176, column: 16, scope: !5971)
!6027 = !DILocation(line: 2177, column: 20, scope: !5971)
!6028 = !DILocation(line: 2177, column: 2, scope: !5971)
!6029 = !DILocation(line: 2180, column: 10, scope: !5971)
!6030 = !DILocation(line: 2180, column: 21, scope: !5971)
!6031 = !DILocation(line: 2181, column: 18, scope: !5971)
!6032 = !DILocation(line: 2181, column: 10, scope: !5971)
!6033 = !DILocation(line: 2181, column: 16, scope: !5971)
!6034 = !DILocation(line: 2182, column: 20, scope: !5971)
!6035 = !DILocation(line: 2182, column: 2, scope: !5971)
!6036 = !DILocation(line: 2186, column: 33, scope: !5971)
!6037 = !DILocation(line: 2186, column: 58, scope: !5971)
!6038 = !DILocation(line: 2186, column: 2, scope: !5971)
!6039 = !DILocation(line: 2189, column: 35, scope: !5971)
!6040 = !DILocation(line: 2189, column: 40, scope: !5971)
!6041 = !DILocation(line: 2189, column: 47, scope: !5971)
!6042 = !DILocation(line: 2189, column: 58, scope: !5971)
!6043 = !DILocation(line: 2189, column: 2, scope: !5971)
!6044 = !DILocation(line: 2190, column: 1, scope: !5971)
!6045 = distinct !DISubprogram(name: "nlastrip_evaluate_meta", scope: !1, file: !1, line: 2193, type: !5783, scopeLine: 2194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!6046 = !DILocalVariable(name: "ptr", arg: 1, scope: !6045, file: !1, line: 2193, type: !3402)
!6047 = !DILocation(line: 2193, column: 48, scope: !6045)
!6048 = !DILocalVariable(name: "channels", arg: 2, scope: !6045, file: !1, line: 2193, type: !1029)
!6049 = !DILocation(line: 2193, column: 63, scope: !6045)
!6050 = !DILocalVariable(name: "modifiers", arg: 3, scope: !6045, file: !1, line: 2193, type: !1029)
!6051 = !DILocation(line: 2193, column: 83, scope: !6045)
!6052 = !DILocalVariable(name: "nes", arg: 4, scope: !6045, file: !1, line: 2193, type: !5514)
!6053 = !DILocation(line: 2193, column: 108, scope: !6045)
!6054 = !DILocalVariable(name: "tmp_modifiers", scope: !6045, file: !1, line: 2195, type: !219)
!6055 = !DILocation(line: 2195, column: 11, scope: !6045)
!6056 = !DILocalVariable(name: "strip", scope: !6045, file: !1, line: 2196, type: !261)
!6057 = !DILocation(line: 2196, column: 12, scope: !6045)
!6058 = !DILocation(line: 2196, column: 20, scope: !6045)
!6059 = !DILocation(line: 2196, column: 25, scope: !6045)
!6060 = !DILocalVariable(name: "tmp_nes", scope: !6045, file: !1, line: 2197, type: !5514)
!6061 = !DILocation(line: 2197, column: 16, scope: !6045)
!6062 = !DILocalVariable(name: "evaltime", scope: !6045, file: !1, line: 2198, type: !275)
!6063 = !DILocation(line: 2198, column: 8, scope: !6045)
!6064 = !DILocation(line: 2209, column: 50, scope: !6045)
!6065 = !DILocation(line: 2209, column: 57, scope: !6045)
!6066 = !DILocation(line: 2209, column: 68, scope: !6045)
!6067 = !DILocation(line: 2209, column: 2, scope: !6045)
!6068 = !DILocation(line: 2212, column: 14, scope: !6045)
!6069 = !DILocation(line: 2212, column: 19, scope: !6045)
!6070 = !DILocation(line: 2212, column: 33, scope: !6045)
!6071 = !DILocation(line: 2212, column: 40, scope: !6045)
!6072 = !DILocation(line: 2212, column: 46, scope: !6045)
!6073 = !DILocation(line: 2212, column: 53, scope: !6045)
!6074 = !DILocation(line: 2212, column: 44, scope: !6045)
!6075 = !DILocation(line: 2212, column: 30, scope: !6045)
!6076 = !DILocation(line: 2212, column: 63, scope: !6045)
!6077 = !DILocation(line: 2212, column: 70, scope: !6045)
!6078 = !DILocation(line: 2212, column: 61, scope: !6045)
!6079 = !DILocation(line: 2212, column: 11, scope: !6045)
!6080 = !DILocation(line: 2213, column: 45, scope: !6045)
!6081 = !DILocation(line: 2213, column: 52, scope: !6045)
!6082 = !DILocation(line: 2213, column: 64, scope: !6045)
!6083 = !DILocation(line: 2213, column: 12, scope: !6045)
!6084 = !DILocation(line: 2213, column: 10, scope: !6045)
!6085 = !DILocation(line: 2218, column: 6, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6045, file: !1, line: 2218, column: 6)
!6087 = !DILocation(line: 2218, column: 6, scope: !6045)
!6088 = !DILocation(line: 2219, column: 21, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6086, file: !1, line: 2218, column: 15)
!6090 = !DILocation(line: 2219, column: 26, scope: !6089)
!6091 = !DILocation(line: 2219, column: 52, scope: !6089)
!6092 = !DILocation(line: 2219, column: 3, scope: !6089)
!6093 = !DILocation(line: 2222, column: 3, scope: !6089)
!6094 = !DILocation(line: 2222, column: 13, scope: !6089)
!6095 = !DILocation(line: 2223, column: 2, scope: !6089)
!6096 = !DILocation(line: 2226, column: 35, scope: !6045)
!6097 = !DILocation(line: 2226, column: 42, scope: !6045)
!6098 = !DILocation(line: 2226, column: 53, scope: !6045)
!6099 = !DILocation(line: 2226, column: 2, scope: !6045)
!6100 = !DILocation(line: 2227, column: 1, scope: !6045)
!6101 = distinct !DISubprogram(name: "nladata_flush_channels", scope: !1, file: !1, line: 2263, type: !2781, scopeLine: 2264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!6102 = !DILocalVariable(name: "channels", arg: 1, scope: !6101, file: !1, line: 2263, type: !1029)
!6103 = !DILocation(line: 2263, column: 39, scope: !6101)
!6104 = !DILocalVariable(name: "nec", scope: !6101, file: !1, line: 2265, type: !5901)
!6105 = !DILocation(line: 2265, column: 18, scope: !6101)
!6106 = !DILocation(line: 2268, column: 6, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6101, file: !1, line: 2268, column: 6)
!6108 = !DILocation(line: 2268, column: 15, scope: !6107)
!6109 = !DILocation(line: 2268, column: 6, scope: !6101)
!6110 = !DILocation(line: 2269, column: 3, scope: !6107)
!6111 = !DILocation(line: 2272, column: 13, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6101, file: !1, line: 2272, column: 2)
!6113 = !DILocation(line: 2272, column: 23, scope: !6112)
!6114 = !DILocation(line: 2272, column: 11, scope: !6112)
!6115 = !DILocation(line: 2272, column: 7, scope: !6112)
!6116 = !DILocation(line: 2272, column: 30, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6112, file: !1, line: 2272, column: 2)
!6118 = !DILocation(line: 2272, column: 2, scope: !6112)
!6119 = !DILocalVariable(name: "ptr", scope: !6120, file: !1, line: 2273, type: !3402)
!6120 = distinct !DILexicalBlock(scope: !6117, file: !1, line: 2272, column: 52)
!6121 = !DILocation(line: 2273, column: 15, scope: !6120)
!6122 = !DILocation(line: 2273, column: 22, scope: !6120)
!6123 = !DILocation(line: 2273, column: 27, scope: !6120)
!6124 = !DILocalVariable(name: "prop", scope: !6120, file: !1, line: 2274, type: !3413)
!6125 = !DILocation(line: 2274, column: 16, scope: !6120)
!6126 = !DILocation(line: 2274, column: 23, scope: !6120)
!6127 = !DILocation(line: 2274, column: 28, scope: !6120)
!6128 = !DILocalVariable(name: "array_index", scope: !6120, file: !1, line: 2275, type: !43)
!6129 = !DILocation(line: 2275, column: 7, scope: !6120)
!6130 = !DILocation(line: 2275, column: 21, scope: !6120)
!6131 = !DILocation(line: 2275, column: 26, scope: !6120)
!6132 = !DILocalVariable(name: "value", scope: !6120, file: !1, line: 2276, type: !275)
!6133 = !DILocation(line: 2276, column: 9, scope: !6120)
!6134 = !DILocation(line: 2276, column: 17, scope: !6120)
!6135 = !DILocation(line: 2276, column: 22, scope: !6120)
!6136 = !DILocation(line: 2279, column: 29, scope: !6120)
!6137 = !DILocation(line: 2279, column: 11, scope: !6120)
!6138 = !DILocation(line: 2279, column: 3, scope: !6120)
!6139 = !DILocation(line: 2281, column: 34, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6141, file: !1, line: 2281, column: 9)
!6141 = distinct !DILexicalBlock(scope: !6120, file: !1, line: 2279, column: 36)
!6142 = !DILocation(line: 2281, column: 9, scope: !6140)
!6143 = !DILocation(line: 2281, column: 9, scope: !6141)
!6144 = !DILocation(line: 2282, column: 37, scope: !6140)
!6145 = !DILocation(line: 2282, column: 42, scope: !6140)
!6146 = !DILocation(line: 2282, column: 48, scope: !6140)
!6147 = !DILocation(line: 2282, column: 61, scope: !6140)
!6148 = !DILocation(line: 2282, column: 6, scope: !6140)
!6149 = !DILocation(line: 2284, column: 31, scope: !6140)
!6150 = !DILocation(line: 2284, column: 36, scope: !6140)
!6151 = !DILocation(line: 2284, column: 42, scope: !6140)
!6152 = !DILocation(line: 2284, column: 6, scope: !6140)
!6153 = !DILocation(line: 2285, column: 5, scope: !6141)
!6154 = !DILocation(line: 2287, column: 34, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6141, file: !1, line: 2287, column: 9)
!6156 = !DILocation(line: 2287, column: 9, scope: !6155)
!6157 = !DILocation(line: 2287, column: 9, scope: !6141)
!6158 = !DILocation(line: 2288, column: 33, scope: !6155)
!6159 = !DILocation(line: 2288, column: 38, scope: !6155)
!6160 = !DILocation(line: 2288, column: 44, scope: !6155)
!6161 = !DILocation(line: 2288, column: 62, scope: !6155)
!6162 = !DILocation(line: 2288, column: 57, scope: !6155)
!6163 = !DILocation(line: 2288, column: 6, scope: !6155)
!6164 = !DILocation(line: 2290, column: 27, scope: !6155)
!6165 = !DILocation(line: 2290, column: 32, scope: !6155)
!6166 = !DILocation(line: 2290, column: 43, scope: !6155)
!6167 = !DILocation(line: 2290, column: 38, scope: !6155)
!6168 = !DILocation(line: 2290, column: 6, scope: !6155)
!6169 = !DILocation(line: 2291, column: 5, scope: !6141)
!6170 = !DILocation(line: 2293, column: 34, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6141, file: !1, line: 2293, column: 9)
!6172 = !DILocation(line: 2293, column: 9, scope: !6171)
!6173 = !DILocation(line: 2293, column: 9, scope: !6141)
!6174 = !DILocation(line: 2294, column: 35, scope: !6171)
!6175 = !DILocation(line: 2294, column: 40, scope: !6171)
!6176 = !DILocation(line: 2294, column: 46, scope: !6171)
!6177 = !DILocation(line: 2294, column: 59, scope: !6171)
!6178 = !DILocation(line: 2294, column: 6, scope: !6171)
!6179 = !DILocation(line: 2296, column: 29, scope: !6171)
!6180 = !DILocation(line: 2296, column: 34, scope: !6171)
!6181 = !DILocation(line: 2296, column: 40, scope: !6171)
!6182 = !DILocation(line: 2296, column: 6, scope: !6171)
!6183 = !DILocation(line: 2297, column: 5, scope: !6141)
!6184 = !DILocation(line: 2299, column: 27, scope: !6141)
!6185 = !DILocation(line: 2299, column: 32, scope: !6141)
!6186 = !DILocation(line: 2299, column: 43, scope: !6141)
!6187 = !DILocation(line: 2299, column: 38, scope: !6141)
!6188 = !DILocation(line: 2299, column: 5, scope: !6141)
!6189 = !DILocation(line: 2300, column: 5, scope: !6141)
!6190 = !DILocation(line: 2303, column: 5, scope: !6141)
!6191 = !DILocation(line: 2305, column: 2, scope: !6120)
!6192 = !DILocation(line: 2272, column: 41, scope: !6117)
!6193 = !DILocation(line: 2272, column: 46, scope: !6117)
!6194 = !DILocation(line: 2272, column: 39, scope: !6117)
!6195 = !DILocation(line: 2272, column: 2, scope: !6117)
!6196 = distinct !{!6196, !6118, !6197}
!6197 = !DILocation(line: 2305, column: 2, scope: !6112)
!6198 = !DILocation(line: 2306, column: 1, scope: !6101)
!6199 = distinct !DISubprogram(name: "BKE_animsys_evaluate_animdata", scope: !1, file: !1, line: 2514, type: !6200, scopeLine: 2515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!6200 = !DISubroutineType(types: !6201)
!6201 = !{null, !2323, !176, !230, !275, !156}
!6202 = !DILocalVariable(name: "scene", arg: 1, scope: !6199, file: !1, line: 2514, type: !2323)
!6203 = !DILocation(line: 2514, column: 43, scope: !6199)
!6204 = !DILocalVariable(name: "id", arg: 2, scope: !6199, file: !1, line: 2514, type: !176)
!6205 = !DILocation(line: 2514, column: 54, scope: !6199)
!6206 = !DILocalVariable(name: "adt", arg: 3, scope: !6199, file: !1, line: 2514, type: !230)
!6207 = !DILocation(line: 2514, column: 68, scope: !6199)
!6208 = !DILocalVariable(name: "ctime", arg: 4, scope: !6199, file: !1, line: 2514, type: !275)
!6209 = !DILocation(line: 2514, column: 79, scope: !6199)
!6210 = !DILocalVariable(name: "recalc", arg: 5, scope: !6199, file: !1, line: 2514, type: !156)
!6211 = !DILocation(line: 2514, column: 92, scope: !6199)
!6212 = !DILocalVariable(name: "id_ptr", scope: !6199, file: !1, line: 2516, type: !3403)
!6213 = !DILocation(line: 2516, column: 13, scope: !6199)
!6214 = !DILocation(line: 2519, column: 6, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 2519, column: 6)
!6216 = !DILocation(line: 2519, column: 6, scope: !6199)
!6217 = !DILocation(line: 2520, column: 3, scope: !6215)
!6218 = !DILocation(line: 2523, column: 24, scope: !6199)
!6219 = !DILocation(line: 2523, column: 2, scope: !6199)
!6220 = !DILocation(line: 2530, column: 7, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 2530, column: 6)
!6222 = !DILocation(line: 2530, column: 14, scope: !6221)
!6223 = !DILocation(line: 2530, column: 33, scope: !6221)
!6224 = !DILocation(line: 2530, column: 37, scope: !6221)
!6225 = !DILocation(line: 2530, column: 42, scope: !6221)
!6226 = !DILocation(line: 2530, column: 49, scope: !6221)
!6227 = !DILocation(line: 2530, column: 6, scope: !6199)
!6228 = !DILocation(line: 2532, column: 8, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6230, file: !1, line: 2532, column: 7)
!6230 = distinct !DILexicalBlock(scope: !6221, file: !1, line: 2530, column: 69)
!6231 = !DILocation(line: 2532, column: 13, scope: !6229)
!6232 = !DILocation(line: 2532, column: 24, scope: !6229)
!6233 = !DILocation(line: 2532, column: 7, scope: !6229)
!6234 = !DILocation(line: 2532, column: 31, scope: !6229)
!6235 = !DILocation(line: 2532, column: 36, scope: !6229)
!6236 = !DILocation(line: 2532, column: 41, scope: !6229)
!6237 = !DILocation(line: 2532, column: 46, scope: !6229)
!6238 = !DILocation(line: 2532, column: 7, scope: !6230)
!6239 = !DILocation(line: 2536, column: 35, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6229, file: !1, line: 2532, column: 67)
!6241 = !DILocation(line: 2536, column: 40, scope: !6240)
!6242 = !DILocation(line: 2536, column: 4, scope: !6240)
!6243 = !DILocation(line: 2537, column: 3, scope: !6240)
!6244 = !DILocation(line: 2539, column: 12, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6229, file: !1, line: 2539, column: 12)
!6246 = !DILocation(line: 2539, column: 17, scope: !6245)
!6247 = !DILocation(line: 2539, column: 12, scope: !6229)
!6248 = !DILocation(line: 2540, column: 37, scope: !6245)
!6249 = !DILocation(line: 2540, column: 42, scope: !6245)
!6250 = !DILocation(line: 2540, column: 50, scope: !6245)
!6251 = !DILocation(line: 2540, column: 55, scope: !6245)
!6252 = !DILocation(line: 2540, column: 62, scope: !6245)
!6253 = !DILocation(line: 2540, column: 4, scope: !6245)
!6254 = !DILocation(line: 2543, column: 3, scope: !6230)
!6255 = !DILocation(line: 2543, column: 8, scope: !6230)
!6256 = !DILocation(line: 2543, column: 15, scope: !6230)
!6257 = !DILocation(line: 2544, column: 2, scope: !6230)
!6258 = !DILocation(line: 2551, column: 7, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 2551, column: 6)
!6260 = !DILocation(line: 2551, column: 14, scope: !6259)
!6261 = !DILocation(line: 2551, column: 6, scope: !6199)
!6262 = !DILocation(line: 2555, column: 37, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6259, file: !1, line: 2554, column: 2)
!6264 = !DILocation(line: 2555, column: 42, scope: !6263)
!6265 = !DILocation(line: 2555, column: 3, scope: !6263)
!6266 = !DILocation(line: 2556, column: 2, scope: !6263)
!6267 = !DILocation(line: 2564, column: 38, scope: !6199)
!6268 = !DILocation(line: 2564, column: 2, scope: !6199)
!6269 = !DILocation(line: 2567, column: 6, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 2567, column: 6)
!6271 = !DILocation(line: 2567, column: 6, scope: !6199)
!6272 = !DILocalVariable(name: "bmain", scope: !6273, file: !1, line: 2568, type: !4311)
!6273 = distinct !DILexicalBlock(scope: !6270, file: !1, line: 2567, column: 13)
!6274 = !DILocation(line: 2568, column: 9, scope: !6273)
!6275 = !DILocation(line: 2568, column: 19, scope: !6273)
!6276 = !DILocation(line: 2569, column: 35, scope: !6273)
!6277 = !DILocation(line: 2569, column: 42, scope: !6273)
!6278 = !DILocation(line: 2569, column: 3, scope: !6273)
!6279 = !DILocation(line: 2570, column: 3, scope: !6273)
!6280 = !DILocation(line: 2571, column: 2, scope: !6273)
!6281 = !DILocation(line: 2574, column: 2, scope: !6199)
!6282 = !DILocation(line: 2574, column: 7, scope: !6199)
!6283 = !DILocation(line: 2574, column: 14, scope: !6199)
!6284 = !DILocation(line: 2575, column: 1, scope: !6199)
!6285 = distinct !DISubprogram(name: "animsys_calculate_nla", scope: !1, file: !1, line: 2431, type: !6286, scopeLine: 2432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!6286 = !DISubroutineType(types: !6287)
!6287 = !{null, !3402, !230, !275}
!6288 = !DILocalVariable(name: "ptr", arg: 1, scope: !6285, file: !1, line: 2431, type: !3402)
!6289 = !DILocation(line: 2431, column: 47, scope: !6285)
!6290 = !DILocalVariable(name: "adt", arg: 2, scope: !6285, file: !1, line: 2431, type: !230)
!6291 = !DILocation(line: 2431, column: 62, scope: !6285)
!6292 = !DILocalVariable(name: "ctime", arg: 3, scope: !6285, file: !1, line: 2431, type: !275)
!6293 = !DILocation(line: 2431, column: 73, scope: !6285)
!6294 = !DILocalVariable(name: "echannels", scope: !6285, file: !1, line: 2433, type: !219)
!6295 = !DILocation(line: 2433, column: 11, scope: !6285)
!6296 = !DILocation(line: 2439, column: 35, scope: !6285)
!6297 = !DILocation(line: 2439, column: 40, scope: !6285)
!6298 = !DILocation(line: 2439, column: 45, scope: !6285)
!6299 = !DILocation(line: 2439, column: 2, scope: !6285)
!6300 = !DILocation(line: 2442, column: 2, scope: !6285)
!6301 = !DILocation(line: 2445, column: 2, scope: !6285)
!6302 = !DILocation(line: 2446, column: 1, scope: !6285)
!6303 = distinct !DISubprogram(name: "animsys_evaluate_drivers", scope: !1, file: !1, line: 1532, type: !6286, scopeLine: 1533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!6304 = !DILocalVariable(name: "ptr", arg: 1, scope: !6303, file: !1, line: 1532, type: !3402)
!6305 = !DILocation(line: 1532, column: 50, scope: !6303)
!6306 = !DILocalVariable(name: "adt", arg: 2, scope: !6303, file: !1, line: 1532, type: !230)
!6307 = !DILocation(line: 1532, column: 65, scope: !6303)
!6308 = !DILocalVariable(name: "ctime", arg: 3, scope: !6303, file: !1, line: 1532, type: !275)
!6309 = !DILocation(line: 1532, column: 76, scope: !6303)
!6310 = !DILocalVariable(name: "fcu", scope: !6303, file: !1, line: 1534, type: !2841)
!6311 = !DILocation(line: 1534, column: 10, scope: !6303)
!6312 = !DILocation(line: 1539, column: 13, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6303, file: !1, line: 1539, column: 2)
!6314 = !DILocation(line: 1539, column: 18, scope: !6313)
!6315 = !DILocation(line: 1539, column: 26, scope: !6313)
!6316 = !DILocation(line: 1539, column: 11, scope: !6313)
!6317 = !DILocation(line: 1539, column: 7, scope: !6313)
!6318 = !DILocation(line: 1539, column: 33, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6313, file: !1, line: 1539, column: 2)
!6320 = !DILocation(line: 1539, column: 2, scope: !6313)
!6321 = !DILocalVariable(name: "driver", scope: !6322, file: !1, line: 1540, type: !2871)
!6322 = distinct !DILexicalBlock(scope: !6319, file: !1, line: 1539, column: 55)
!6323 = !DILocation(line: 1540, column: 18, scope: !6322)
!6324 = !DILocation(line: 1540, column: 27, scope: !6322)
!6325 = !DILocation(line: 1540, column: 32, scope: !6322)
!6326 = !DILocalVariable(name: "ok", scope: !6322, file: !1, line: 1541, type: !1529)
!6327 = !DILocation(line: 1541, column: 8, scope: !6322)
!6328 = !DILocation(line: 1544, column: 8, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6322, file: !1, line: 1544, column: 7)
!6330 = !DILocation(line: 1544, column: 13, scope: !6329)
!6331 = !DILocation(line: 1544, column: 18, scope: !6329)
!6332 = !DILocation(line: 1544, column: 54, scope: !6329)
!6333 = !DILocation(line: 1544, column: 7, scope: !6322)
!6334 = !DILocation(line: 1547, column: 9, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6336, file: !1, line: 1547, column: 8)
!6336 = distinct !DILexicalBlock(scope: !6329, file: !1, line: 1544, column: 60)
!6337 = !DILocation(line: 1547, column: 8, scope: !6335)
!6338 = !DILocation(line: 1547, column: 17, scope: !6335)
!6339 = !DILocation(line: 1547, column: 22, scope: !6335)
!6340 = !DILocation(line: 1547, column: 30, scope: !6335)
!6341 = !DILocation(line: 1547, column: 35, scope: !6335)
!6342 = !DILocation(line: 1547, column: 8, scope: !6336)
!6343 = !DILocation(line: 1551, column: 22, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6335, file: !1, line: 1547, column: 102)
!6345 = !DILocation(line: 1551, column: 27, scope: !6344)
!6346 = !DILocation(line: 1551, column: 5, scope: !6344)
!6347 = !DILocation(line: 1552, column: 33, scope: !6344)
!6348 = !DILocation(line: 1552, column: 44, scope: !6344)
!6349 = !DILocation(line: 1552, column: 10, scope: !6344)
!6350 = !DILocation(line: 1552, column: 8, scope: !6344)
!6351 = !DILocation(line: 1555, column: 5, scope: !6344)
!6352 = !DILocation(line: 1555, column: 13, scope: !6344)
!6353 = !DILocation(line: 1555, column: 18, scope: !6344)
!6354 = !DILocation(line: 1558, column: 9, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6344, file: !1, line: 1558, column: 9)
!6356 = !DILocation(line: 1558, column: 12, scope: !6355)
!6357 = !DILocation(line: 1558, column: 9, scope: !6344)
!6358 = !DILocation(line: 1559, column: 6, scope: !6355)
!6359 = !DILocation(line: 1559, column: 14, scope: !6355)
!6360 = !DILocation(line: 1559, column: 19, scope: !6355)
!6361 = !DILocation(line: 1560, column: 4, scope: !6344)
!6362 = !DILocation(line: 1561, column: 3, scope: !6336)
!6363 = !DILocation(line: 1562, column: 2, scope: !6322)
!6364 = !DILocation(line: 1539, column: 44, scope: !6319)
!6365 = !DILocation(line: 1539, column: 49, scope: !6319)
!6366 = !DILocation(line: 1539, column: 42, scope: !6319)
!6367 = !DILocation(line: 1539, column: 2, scope: !6319)
!6368 = distinct !{!6368, !6320, !6369}
!6369 = !DILocation(line: 1562, column: 2, scope: !6313)
!6370 = !DILocation(line: 1563, column: 1, scope: !6303)
!6371 = distinct !DISubprogram(name: "animsys_evaluate_overrides", scope: !1, file: !1, line: 2465, type: !6372, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{null, !3402, !230}
!6374 = !DILocalVariable(name: "ptr", arg: 1, scope: !6371, file: !1, line: 2465, type: !3402)
!6375 = !DILocation(line: 2465, column: 52, scope: !6371)
!6376 = !DILocalVariable(name: "adt", arg: 2, scope: !6371, file: !1, line: 2465, type: !230)
!6377 = !DILocation(line: 2465, column: 67, scope: !6371)
!6378 = !DILocalVariable(name: "aor", scope: !6371, file: !1, line: 2467, type: !6379)
!6379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6380, size: 64)
!6380 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimOverride", file: !17, line: 822, baseType: !6381)
!6381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimOverride", file: !17, line: 815, size: 256, elements: !6382)
!6382 = !{!6383, !6385, !6386, !6387, !6388}
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6381, file: !17, line: 816, baseType: !6384, size: 64)
!6384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6381, size: 64)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6381, file: !17, line: 816, baseType: !6384, size: 64, offset: 64)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !6381, file: !17, line: 818, baseType: !153, size: 64, offset: 128)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "array_index", scope: !6381, file: !17, line: 819, baseType: !43, size: 32, offset: 192)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6381, file: !17, line: 821, baseType: !275, size: 32, offset: 224)
!6389 = !DILocation(line: 2467, column: 16, scope: !6371)
!6390 = !DILocation(line: 2470, column: 13, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6371, file: !1, line: 2470, column: 2)
!6392 = !DILocation(line: 2470, column: 18, scope: !6391)
!6393 = !DILocation(line: 2470, column: 28, scope: !6391)
!6394 = !DILocation(line: 2470, column: 11, scope: !6391)
!6395 = !DILocation(line: 2470, column: 7, scope: !6391)
!6396 = !DILocation(line: 2470, column: 35, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6391, file: !1, line: 2470, column: 2)
!6398 = !DILocation(line: 2470, column: 2, scope: !6391)
!6399 = !DILocation(line: 2471, column: 29, scope: !6397)
!6400 = !DILocation(line: 2471, column: 34, scope: !6397)
!6401 = !DILocation(line: 2471, column: 39, scope: !6397)
!6402 = !DILocation(line: 2471, column: 49, scope: !6397)
!6403 = !DILocation(line: 2471, column: 54, scope: !6397)
!6404 = !DILocation(line: 2471, column: 67, scope: !6397)
!6405 = !DILocation(line: 2471, column: 72, scope: !6397)
!6406 = !DILocation(line: 2471, column: 3, scope: !6397)
!6407 = !DILocation(line: 2470, column: 46, scope: !6397)
!6408 = !DILocation(line: 2470, column: 51, scope: !6397)
!6409 = !DILocation(line: 2470, column: 44, scope: !6397)
!6410 = !DILocation(line: 2470, column: 2, scope: !6397)
!6411 = distinct !{!6411, !6398, !6412}
!6412 = !DILocation(line: 2471, column: 77, scope: !6391)
!6413 = !DILocation(line: 2472, column: 1, scope: !6371)
!6414 = distinct !DISubprogram(name: "BKE_animsys_evaluate_all_animation", scope: !1, file: !1, line: 2584, type: !6415, scopeLine: 2585, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!6415 = !DISubroutineType(types: !6416)
!6416 = !{null, !4311, !2323, !275}
!6417 = !DILocalVariable(name: "main", arg: 1, scope: !6414, file: !1, line: 2584, type: !4311)
!6418 = !DILocation(line: 2584, column: 47, scope: !6414)
!6419 = !DILocalVariable(name: "scene", arg: 2, scope: !6414, file: !1, line: 2584, type: !2323)
!6420 = !DILocation(line: 2584, column: 60, scope: !6414)
!6421 = !DILocalVariable(name: "ctime", arg: 3, scope: !6414, file: !1, line: 2584, type: !275)
!6422 = !DILocation(line: 2584, column: 73, scope: !6414)
!6423 = !DILocalVariable(name: "id", scope: !6414, file: !1, line: 2586, type: !176)
!6424 = !DILocation(line: 2586, column: 6, scope: !6414)
!6425 = !DILocation(line: 2588, column: 8, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2588, column: 6)
!6427 = !DILocation(line: 2588, column: 14, scope: !6426)
!6428 = !DILocation(line: 2588, column: 6, scope: !6414)
!6429 = !DILocation(line: 2589, column: 43, scope: !6426)
!6430 = !DILocation(line: 2589, column: 3, scope: !6426)
!6431 = !DILocation(line: 2631, column: 29, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2631, column: 6)
!6433 = !DILocation(line: 2631, column: 35, scope: !6432)
!6434 = !DILocation(line: 2631, column: 6, scope: !6432)
!6435 = !DILocation(line: 2631, column: 43, scope: !6432)
!6436 = !DILocation(line: 2631, column: 69, scope: !6432)
!6437 = !DILocation(line: 2631, column: 75, scope: !6432)
!6438 = !DILocation(line: 2631, column: 46, scope: !6432)
!6439 = !DILocation(line: 2631, column: 6, scope: !6414)
!6440 = !DILocation(line: 2632, column: 9, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6442, file: !1, line: 2632, column: 7)
!6442 = distinct !DILexicalBlock(scope: !6432, file: !1, line: 2631, column: 83)
!6443 = !DILocation(line: 2632, column: 15, scope: !6441)
!6444 = !DILocation(line: 2632, column: 7, scope: !6442)
!6445 = !DILocation(line: 2633, column: 4, scope: !6441)
!6446 = !DILocation(line: 2635, column: 3, scope: !6442)
!6447 = !DILocation(line: 2639, column: 2, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2639, column: 2)
!6449 = !DILocation(line: 2639, column: 2, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6448, file: !1, line: 2639, column: 2)
!6451 = !DILocation(line: 2639, column: 2, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6453, file: !1, line: 2639, column: 2)
!6453 = distinct !DILexicalBlock(scope: !6450, file: !1, line: 2639, column: 2)
!6454 = !DILocation(line: 2639, column: 2, scope: !6453)
!6455 = !DILocalVariable(name: "adt", scope: !6456, file: !1, line: 2639, type: !230)
!6456 = distinct !DILexicalBlock(scope: !6452, file: !1, line: 2639, column: 2)
!6457 = !DILocation(line: 2639, column: 2, scope: !6456)
!6458 = distinct !{!6458, !6447, !6447}
!6459 = !DILocation(line: 2642, column: 2, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2642, column: 2)
!6461 = !DILocation(line: 2642, column: 2, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6460, file: !1, line: 2642, column: 2)
!6463 = !DILocation(line: 2642, column: 2, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !1, line: 2642, column: 2)
!6465 = distinct !DILexicalBlock(scope: !6462, file: !1, line: 2642, column: 2)
!6466 = !DILocation(line: 2642, column: 2, scope: !6465)
!6467 = !DILocalVariable(name: "adt", scope: !6468, file: !1, line: 2642, type: !230)
!6468 = distinct !DILexicalBlock(scope: !6464, file: !1, line: 2642, column: 2)
!6469 = !DILocation(line: 2642, column: 2, scope: !6468)
!6470 = !DILocalVariable(name: "ntp", scope: !6468, file: !1, line: 2642, type: !301)
!6471 = !DILocation(line: 2642, column: 2, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6468, file: !1, line: 2642, column: 2)
!6473 = !DILocalVariable(name: "adt2", scope: !6474, file: !1, line: 2642, type: !230)
!6474 = distinct !DILexicalBlock(scope: !6472, file: !1, line: 2642, column: 2)
!6475 = !DILocation(line: 2642, column: 2, scope: !6474)
!6476 = distinct !{!6476, !6459, !6459}
!6477 = !DILocation(line: 2645, column: 2, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2645, column: 2)
!6479 = !DILocation(line: 2645, column: 2, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 2645, column: 2)
!6481 = !DILocation(line: 2645, column: 2, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6483, file: !1, line: 2645, column: 2)
!6483 = distinct !DILexicalBlock(scope: !6480, file: !1, line: 2645, column: 2)
!6484 = !DILocation(line: 2645, column: 2, scope: !6483)
!6485 = !DILocalVariable(name: "adt", scope: !6486, file: !1, line: 2645, type: !230)
!6486 = distinct !DILexicalBlock(scope: !6482, file: !1, line: 2645, column: 2)
!6487 = !DILocation(line: 2645, column: 2, scope: !6486)
!6488 = !DILocalVariable(name: "ntp", scope: !6486, file: !1, line: 2645, type: !2238)
!6489 = !DILocation(line: 2645, column: 2, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6486, file: !1, line: 2645, column: 2)
!6491 = !DILocalVariable(name: "adt2", scope: !6492, file: !1, line: 2645, type: !230)
!6492 = distinct !DILexicalBlock(scope: !6490, file: !1, line: 2645, column: 2)
!6493 = !DILocation(line: 2645, column: 2, scope: !6492)
!6494 = distinct !{!6494, !6477, !6477}
!6495 = !DILocation(line: 2648, column: 2, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2648, column: 2)
!6497 = !DILocation(line: 2648, column: 2, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6496, file: !1, line: 2648, column: 2)
!6499 = !DILocation(line: 2648, column: 2, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6501, file: !1, line: 2648, column: 2)
!6501 = distinct !DILexicalBlock(scope: !6498, file: !1, line: 2648, column: 2)
!6502 = !DILocation(line: 2648, column: 2, scope: !6501)
!6503 = !DILocalVariable(name: "adt", scope: !6504, file: !1, line: 2648, type: !230)
!6504 = distinct !DILexicalBlock(scope: !6500, file: !1, line: 2648, column: 2)
!6505 = !DILocation(line: 2648, column: 2, scope: !6504)
!6506 = !DILocalVariable(name: "ntp", scope: !6504, file: !1, line: 2648, type: !2319)
!6507 = !DILocation(line: 2648, column: 2, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6504, file: !1, line: 2648, column: 2)
!6509 = !DILocalVariable(name: "adt2", scope: !6510, file: !1, line: 2648, type: !230)
!6510 = distinct !DILexicalBlock(scope: !6508, file: !1, line: 2648, column: 2)
!6511 = !DILocation(line: 2648, column: 2, scope: !6510)
!6512 = distinct !{!6512, !6495, !6495}
!6513 = !DILocation(line: 2651, column: 2, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2651, column: 2)
!6515 = !DILocation(line: 2651, column: 2, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6514, file: !1, line: 2651, column: 2)
!6517 = !DILocation(line: 2651, column: 2, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !1, line: 2651, column: 2)
!6519 = distinct !DILexicalBlock(scope: !6516, file: !1, line: 2651, column: 2)
!6520 = !DILocation(line: 2651, column: 2, scope: !6519)
!6521 = !DILocalVariable(name: "adt", scope: !6522, file: !1, line: 2651, type: !230)
!6522 = distinct !DILexicalBlock(scope: !6518, file: !1, line: 2651, column: 2)
!6523 = !DILocation(line: 2651, column: 2, scope: !6522)
!6524 = distinct !{!6524, !6513, !6513}
!6525 = !DILocation(line: 2654, column: 2, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2654, column: 2)
!6527 = !DILocation(line: 2654, column: 2, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6526, file: !1, line: 2654, column: 2)
!6529 = !DILocation(line: 2654, column: 2, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6531, file: !1, line: 2654, column: 2)
!6531 = distinct !DILexicalBlock(scope: !6528, file: !1, line: 2654, column: 2)
!6532 = !DILocation(line: 2654, column: 2, scope: !6531)
!6533 = !DILocalVariable(name: "adt", scope: !6534, file: !1, line: 2654, type: !230)
!6534 = distinct !DILexicalBlock(scope: !6530, file: !1, line: 2654, column: 2)
!6535 = !DILocation(line: 2654, column: 2, scope: !6534)
!6536 = distinct !{!6536, !6525, !6525}
!6537 = !DILocation(line: 2657, column: 2, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2657, column: 2)
!6539 = !DILocation(line: 2657, column: 2, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6538, file: !1, line: 2657, column: 2)
!6541 = !DILocation(line: 2657, column: 2, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6543, file: !1, line: 2657, column: 2)
!6543 = distinct !DILexicalBlock(scope: !6540, file: !1, line: 2657, column: 2)
!6544 = !DILocation(line: 2657, column: 2, scope: !6543)
!6545 = !DILocalVariable(name: "adt", scope: !6546, file: !1, line: 2657, type: !230)
!6546 = distinct !DILexicalBlock(scope: !6542, file: !1, line: 2657, column: 2)
!6547 = !DILocation(line: 2657, column: 2, scope: !6546)
!6548 = distinct !{!6548, !6537, !6537}
!6549 = !DILocation(line: 2660, column: 2, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2660, column: 2)
!6551 = !DILocation(line: 2660, column: 2, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6550, file: !1, line: 2660, column: 2)
!6553 = !DILocation(line: 2660, column: 2, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6555, file: !1, line: 2660, column: 2)
!6555 = distinct !DILexicalBlock(scope: !6552, file: !1, line: 2660, column: 2)
!6556 = !DILocation(line: 2660, column: 2, scope: !6555)
!6557 = !DILocalVariable(name: "adt", scope: !6558, file: !1, line: 2660, type: !230)
!6558 = distinct !DILexicalBlock(scope: !6554, file: !1, line: 2660, column: 2)
!6559 = !DILocation(line: 2660, column: 2, scope: !6558)
!6560 = distinct !{!6560, !6549, !6549}
!6561 = !DILocation(line: 2663, column: 2, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2663, column: 2)
!6563 = !DILocation(line: 2663, column: 2, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6562, file: !1, line: 2663, column: 2)
!6565 = !DILocation(line: 2663, column: 2, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6567, file: !1, line: 2663, column: 2)
!6567 = distinct !DILexicalBlock(scope: !6564, file: !1, line: 2663, column: 2)
!6568 = !DILocation(line: 2663, column: 2, scope: !6567)
!6569 = !DILocalVariable(name: "adt", scope: !6570, file: !1, line: 2663, type: !230)
!6570 = distinct !DILexicalBlock(scope: !6566, file: !1, line: 2663, column: 2)
!6571 = !DILocation(line: 2663, column: 2, scope: !6570)
!6572 = distinct !{!6572, !6561, !6561}
!6573 = !DILocation(line: 2666, column: 2, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2666, column: 2)
!6575 = !DILocation(line: 2666, column: 2, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6574, file: !1, line: 2666, column: 2)
!6577 = !DILocation(line: 2666, column: 2, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6579, file: !1, line: 2666, column: 2)
!6579 = distinct !DILexicalBlock(scope: !6576, file: !1, line: 2666, column: 2)
!6580 = !DILocation(line: 2666, column: 2, scope: !6579)
!6581 = !DILocalVariable(name: "adt", scope: !6582, file: !1, line: 2666, type: !230)
!6582 = distinct !DILexicalBlock(scope: !6578, file: !1, line: 2666, column: 2)
!6583 = !DILocation(line: 2666, column: 2, scope: !6582)
!6584 = distinct !{!6584, !6573, !6573}
!6585 = !DILocation(line: 2669, column: 2, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2669, column: 2)
!6587 = !DILocation(line: 2669, column: 2, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6586, file: !1, line: 2669, column: 2)
!6589 = !DILocation(line: 2669, column: 2, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !1, line: 2669, column: 2)
!6591 = distinct !DILexicalBlock(scope: !6588, file: !1, line: 2669, column: 2)
!6592 = !DILocation(line: 2669, column: 2, scope: !6591)
!6593 = !DILocalVariable(name: "adt", scope: !6594, file: !1, line: 2669, type: !230)
!6594 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 2669, column: 2)
!6595 = !DILocation(line: 2669, column: 2, scope: !6594)
!6596 = distinct !{!6596, !6585, !6585}
!6597 = !DILocation(line: 2672, column: 2, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2672, column: 2)
!6599 = !DILocation(line: 2672, column: 2, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6598, file: !1, line: 2672, column: 2)
!6601 = !DILocation(line: 2672, column: 2, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6603, file: !1, line: 2672, column: 2)
!6603 = distinct !DILexicalBlock(scope: !6600, file: !1, line: 2672, column: 2)
!6604 = !DILocation(line: 2672, column: 2, scope: !6603)
!6605 = !DILocalVariable(name: "adt", scope: !6606, file: !1, line: 2672, type: !230)
!6606 = distinct !DILexicalBlock(scope: !6602, file: !1, line: 2672, column: 2)
!6607 = !DILocation(line: 2672, column: 2, scope: !6606)
!6608 = distinct !{!6608, !6597, !6597}
!6609 = !DILocation(line: 2675, column: 2, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2675, column: 2)
!6611 = !DILocation(line: 2675, column: 2, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6610, file: !1, line: 2675, column: 2)
!6613 = !DILocation(line: 2675, column: 2, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !1, line: 2675, column: 2)
!6615 = distinct !DILexicalBlock(scope: !6612, file: !1, line: 2675, column: 2)
!6616 = !DILocation(line: 2675, column: 2, scope: !6615)
!6617 = !DILocalVariable(name: "adt", scope: !6618, file: !1, line: 2675, type: !230)
!6618 = distinct !DILexicalBlock(scope: !6614, file: !1, line: 2675, column: 2)
!6619 = !DILocation(line: 2675, column: 2, scope: !6618)
!6620 = distinct !{!6620, !6609, !6609}
!6621 = !DILocation(line: 2678, column: 2, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2678, column: 2)
!6623 = !DILocation(line: 2678, column: 2, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6622, file: !1, line: 2678, column: 2)
!6625 = !DILocation(line: 2678, column: 2, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !1, line: 2678, column: 2)
!6627 = distinct !DILexicalBlock(scope: !6624, file: !1, line: 2678, column: 2)
!6628 = !DILocation(line: 2678, column: 2, scope: !6627)
!6629 = !DILocalVariable(name: "adt", scope: !6630, file: !1, line: 2678, type: !230)
!6630 = distinct !DILexicalBlock(scope: !6626, file: !1, line: 2678, column: 2)
!6631 = !DILocation(line: 2678, column: 2, scope: !6630)
!6632 = distinct !{!6632, !6621, !6621}
!6633 = !DILocation(line: 2681, column: 2, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2681, column: 2)
!6635 = !DILocation(line: 2681, column: 2, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6634, file: !1, line: 2681, column: 2)
!6637 = !DILocation(line: 2681, column: 2, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !1, line: 2681, column: 2)
!6639 = distinct !DILexicalBlock(scope: !6636, file: !1, line: 2681, column: 2)
!6640 = !DILocation(line: 2681, column: 2, scope: !6639)
!6641 = !DILocalVariable(name: "adt", scope: !6642, file: !1, line: 2681, type: !230)
!6642 = distinct !DILexicalBlock(scope: !6638, file: !1, line: 2681, column: 2)
!6643 = !DILocation(line: 2681, column: 2, scope: !6642)
!6644 = distinct !{!6644, !6633, !6633}
!6645 = !DILocation(line: 2688, column: 2, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2688, column: 2)
!6647 = !DILocation(line: 2688, column: 2, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6646, file: !1, line: 2688, column: 2)
!6649 = !DILocation(line: 2688, column: 2, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6651, file: !1, line: 2688, column: 2)
!6651 = distinct !DILexicalBlock(scope: !6648, file: !1, line: 2688, column: 2)
!6652 = !DILocation(line: 2688, column: 2, scope: !6651)
!6653 = !DILocalVariable(name: "adt", scope: !6654, file: !1, line: 2688, type: !230)
!6654 = distinct !DILexicalBlock(scope: !6650, file: !1, line: 2688, column: 2)
!6655 = !DILocation(line: 2688, column: 2, scope: !6654)
!6656 = distinct !{!6656, !6645, !6645}
!6657 = !DILocation(line: 2691, column: 2, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2691, column: 2)
!6659 = !DILocation(line: 2691, column: 2, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6658, file: !1, line: 2691, column: 2)
!6661 = !DILocation(line: 2691, column: 2, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6663, file: !1, line: 2691, column: 2)
!6663 = distinct !DILexicalBlock(scope: !6660, file: !1, line: 2691, column: 2)
!6664 = !DILocation(line: 2691, column: 2, scope: !6663)
!6665 = !DILocalVariable(name: "adt", scope: !6666, file: !1, line: 2691, type: !230)
!6666 = distinct !DILexicalBlock(scope: !6662, file: !1, line: 2691, column: 2)
!6667 = !DILocation(line: 2691, column: 2, scope: !6666)
!6668 = distinct !{!6668, !6657, !6657}
!6669 = !DILocation(line: 2694, column: 2, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2694, column: 2)
!6671 = !DILocation(line: 2694, column: 2, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6670, file: !1, line: 2694, column: 2)
!6673 = !DILocation(line: 2694, column: 2, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6675, file: !1, line: 2694, column: 2)
!6675 = distinct !DILexicalBlock(scope: !6672, file: !1, line: 2694, column: 2)
!6676 = !DILocation(line: 2694, column: 2, scope: !6675)
!6677 = !DILocalVariable(name: "adt", scope: !6678, file: !1, line: 2694, type: !230)
!6678 = distinct !DILexicalBlock(scope: !6674, file: !1, line: 2694, column: 2)
!6679 = !DILocation(line: 2694, column: 2, scope: !6678)
!6680 = !DILocalVariable(name: "ntp", scope: !6678, file: !1, line: 2694, type: !2321)
!6681 = !DILocation(line: 2694, column: 2, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6678, file: !1, line: 2694, column: 2)
!6683 = !DILocalVariable(name: "adt2", scope: !6684, file: !1, line: 2694, type: !230)
!6684 = distinct !DILexicalBlock(scope: !6682, file: !1, line: 2694, column: 2)
!6685 = !DILocation(line: 2694, column: 2, scope: !6684)
!6686 = distinct !{!6686, !6669, !6669}
!6687 = !DILocation(line: 2697, column: 2, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2697, column: 2)
!6689 = !DILocation(line: 2697, column: 2, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6688, file: !1, line: 2697, column: 2)
!6691 = !DILocation(line: 2697, column: 2, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !1, line: 2697, column: 2)
!6693 = distinct !DILexicalBlock(scope: !6690, file: !1, line: 2697, column: 2)
!6694 = !DILocation(line: 2697, column: 2, scope: !6693)
!6695 = !DILocalVariable(name: "adt", scope: !6696, file: !1, line: 2697, type: !230)
!6696 = distinct !DILexicalBlock(scope: !6692, file: !1, line: 2697, column: 2)
!6697 = !DILocation(line: 2697, column: 2, scope: !6696)
!6698 = !DILocalVariable(name: "ntp", scope: !6696, file: !1, line: 2697, type: !2323)
!6699 = !DILocation(line: 2697, column: 2, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6696, file: !1, line: 2697, column: 2)
!6701 = !DILocalVariable(name: "adt2", scope: !6702, file: !1, line: 2697, type: !230)
!6702 = distinct !DILexicalBlock(scope: !6700, file: !1, line: 2697, column: 2)
!6703 = !DILocation(line: 2697, column: 2, scope: !6702)
!6704 = distinct !{!6704, !6687, !6687}
!6705 = !DILocation(line: 2698, column: 1, scope: !6414)
!6706 = distinct !DISubprogram(name: "rna_path_rename_fix", scope: !1, file: !1, line: 645, type: !6707, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!6707 = !DISubroutineType(types: !6708)
!6708 = !{!153, !176, !299, !299, !299, !153, !1529}
!6709 = !DILocalVariable(name: "owner_id", arg: 1, scope: !6706, file: !1, line: 645, type: !176)
!6710 = !DILocation(line: 645, column: 38, scope: !6706)
!6711 = !DILocalVariable(name: "prefix", arg: 2, scope: !6706, file: !1, line: 645, type: !299)
!6712 = !DILocation(line: 645, column: 60, scope: !6706)
!6713 = !DILocalVariable(name: "oldName", arg: 3, scope: !6706, file: !1, line: 645, type: !299)
!6714 = !DILocation(line: 645, column: 80, scope: !6706)
!6715 = !DILocalVariable(name: "newName", arg: 4, scope: !6706, file: !1, line: 645, type: !299)
!6716 = !DILocation(line: 645, column: 101, scope: !6706)
!6717 = !DILocalVariable(name: "oldpath", arg: 5, scope: !6706, file: !1, line: 645, type: !153)
!6718 = !DILocation(line: 645, column: 116, scope: !6706)
!6719 = !DILocalVariable(name: "verify_paths", arg: 6, scope: !6706, file: !1, line: 645, type: !1529)
!6720 = !DILocation(line: 645, column: 130, scope: !6706)
!6721 = !DILocalVariable(name: "prefixPtr", scope: !6706, file: !1, line: 647, type: !153)
!6722 = !DILocation(line: 647, column: 8, scope: !6706)
!6723 = !DILocation(line: 647, column: 27, scope: !6706)
!6724 = !DILocation(line: 647, column: 36, scope: !6706)
!6725 = !DILocation(line: 647, column: 20, scope: !6706)
!6726 = !DILocalVariable(name: "oldNamePtr", scope: !6706, file: !1, line: 648, type: !153)
!6727 = !DILocation(line: 648, column: 8, scope: !6706)
!6728 = !DILocation(line: 648, column: 28, scope: !6706)
!6729 = !DILocation(line: 648, column: 37, scope: !6706)
!6730 = !DILocation(line: 648, column: 21, scope: !6706)
!6731 = !DILocalVariable(name: "prefixLen", scope: !6706, file: !1, line: 649, type: !43)
!6732 = !DILocation(line: 649, column: 6, scope: !6706)
!6733 = !DILocation(line: 649, column: 25, scope: !6706)
!6734 = !DILocation(line: 649, column: 18, scope: !6706)
!6735 = !DILocalVariable(name: "oldNameLen", scope: !6706, file: !1, line: 650, type: !43)
!6736 = !DILocation(line: 650, column: 6, scope: !6706)
!6737 = !DILocation(line: 650, column: 26, scope: !6706)
!6738 = !DILocation(line: 650, column: 19, scope: !6706)
!6739 = !DILocation(line: 655, column: 8, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6706, file: !1, line: 655, column: 7)
!6741 = !DILocation(line: 655, column: 18, scope: !6740)
!6742 = !DILocation(line: 655, column: 21, scope: !6740)
!6743 = !DILocation(line: 655, column: 33, scope: !6740)
!6744 = !DILocation(line: 655, column: 37, scope: !6740)
!6745 = !DILocation(line: 655, column: 49, scope: !6740)
!6746 = !DILocation(line: 655, column: 47, scope: !6740)
!6747 = !DILocation(line: 655, column: 62, scope: !6740)
!6748 = !DILocation(line: 655, column: 59, scope: !6740)
!6749 = !DILocation(line: 655, column: 7, scope: !6706)
!6750 = !DILocation(line: 657, column: 8, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !1, line: 657, column: 7)
!6752 = distinct !DILexicalBlock(scope: !6740, file: !1, line: 655, column: 76)
!6753 = !DILocation(line: 657, column: 21, scope: !6751)
!6754 = !DILocation(line: 657, column: 48, scope: !6751)
!6755 = !DILocation(line: 657, column: 58, scope: !6751)
!6756 = !DILocation(line: 657, column: 24, scope: !6751)
!6757 = !DILocation(line: 657, column: 67, scope: !6751)
!6758 = !DILocation(line: 657, column: 7, scope: !6752)
!6759 = !DILocalVariable(name: "ds", scope: !6760, file: !1, line: 658, type: !6761)
!6760 = distinct !DILexicalBlock(scope: !6751, file: !1, line: 657, column: 73)
!6761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6762, size: 64)
!6762 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynStr", file: !6763, line: 48, baseType: !6764)
!6763 = !DIFile(filename: "blender/source/blender/blenlib/BLI_dynstr.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6764 = !DICompositeType(tag: DW_TAG_structure_type, name: "DynStr", file: !6763, line: 45, flags: DIFlagFwdDecl)
!6765 = !DILocation(line: 658, column: 12, scope: !6760)
!6766 = !DILocation(line: 658, column: 17, scope: !6760)
!6767 = !DILocalVariable(name: "postfixPtr", scope: !6760, file: !1, line: 659, type: !299)
!6768 = !DILocation(line: 659, column: 16, scope: !6760)
!6769 = !DILocation(line: 659, column: 29, scope: !6760)
!6770 = !DILocation(line: 659, column: 42, scope: !6760)
!6771 = !DILocation(line: 659, column: 40, scope: !6760)
!6772 = !DILocalVariable(name: "newPath", scope: !6760, file: !1, line: 660, type: !153)
!6773 = !DILocation(line: 660, column: 10, scope: !6760)
!6774 = !DILocalVariable(name: "oldChar", scope: !6760, file: !1, line: 661, type: !154)
!6775 = !DILocation(line: 661, column: 9, scope: !6760)
!6776 = !DILocation(line: 664, column: 8, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6760, file: !1, line: 664, column: 8)
!6778 = !DILocation(line: 664, column: 20, scope: !6777)
!6779 = !DILocation(line: 664, column: 18, scope: !6777)
!6780 = !DILocation(line: 664, column: 8, scope: !6760)
!6781 = !DILocation(line: 665, column: 15, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6777, file: !1, line: 664, column: 29)
!6783 = !DILocation(line: 665, column: 13, scope: !6782)
!6784 = !DILocation(line: 666, column: 5, scope: !6782)
!6785 = !DILocation(line: 666, column: 18, scope: !6782)
!6786 = !DILocation(line: 667, column: 23, scope: !6782)
!6787 = !DILocation(line: 667, column: 27, scope: !6782)
!6788 = !DILocation(line: 667, column: 5, scope: !6782)
!6789 = !DILocation(line: 668, column: 20, scope: !6782)
!6790 = !DILocation(line: 668, column: 5, scope: !6782)
!6791 = !DILocation(line: 668, column: 18, scope: !6782)
!6792 = !DILocation(line: 669, column: 4, scope: !6782)
!6793 = !DILocation(line: 672, column: 22, scope: !6760)
!6794 = !DILocation(line: 672, column: 26, scope: !6760)
!6795 = !DILocation(line: 672, column: 4, scope: !6760)
!6796 = !DILocation(line: 675, column: 22, scope: !6760)
!6797 = !DILocation(line: 675, column: 26, scope: !6760)
!6798 = !DILocation(line: 675, column: 4, scope: !6760)
!6799 = !DILocation(line: 678, column: 22, scope: !6760)
!6800 = !DILocation(line: 678, column: 26, scope: !6760)
!6801 = !DILocation(line: 678, column: 4, scope: !6760)
!6802 = !DILocation(line: 681, column: 37, scope: !6760)
!6803 = !DILocation(line: 681, column: 14, scope: !6760)
!6804 = !DILocation(line: 681, column: 12, scope: !6760)
!6805 = !DILocation(line: 682, column: 20, scope: !6760)
!6806 = !DILocation(line: 682, column: 4, scope: !6760)
!6807 = !DILocation(line: 686, column: 9, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6760, file: !1, line: 686, column: 8)
!6809 = !DILocation(line: 686, column: 22, scope: !6808)
!6810 = !DILocation(line: 686, column: 49, scope: !6808)
!6811 = !DILocation(line: 686, column: 59, scope: !6808)
!6812 = !DILocation(line: 686, column: 25, scope: !6808)
!6813 = !DILocation(line: 686, column: 8, scope: !6760)
!6814 = !DILocation(line: 688, column: 5, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6808, file: !1, line: 686, column: 69)
!6816 = !DILocation(line: 688, column: 15, scope: !6815)
!6817 = !DILocation(line: 689, column: 12, scope: !6815)
!6818 = !DILocation(line: 689, column: 5, scope: !6815)
!6819 = !DILocation(line: 693, column: 5, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6808, file: !1, line: 691, column: 9)
!6821 = !DILocation(line: 693, column: 15, scope: !6820)
!6822 = !DILocation(line: 695, column: 3, scope: !6760)
!6823 = !DILocation(line: 696, column: 2, scope: !6752)
!6824 = !DILocation(line: 699, column: 9, scope: !6706)
!6825 = !DILocation(line: 699, column: 2, scope: !6706)
!6826 = !DILocation(line: 700, column: 1, scope: !6706)
!6827 = distinct !DISubprogram(name: "check_rna_path_is_valid", scope: !1, file: !1, line: 630, type: !6828, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!6828 = !DISubroutineType(types: !6829)
!6829 = !{!1529, !176, !299}
!6830 = !DILocalVariable(name: "owner_id", arg: 1, scope: !6827, file: !1, line: 630, type: !176)
!6831 = !DILocation(line: 630, column: 41, scope: !6827)
!6832 = !DILocalVariable(name: "path", arg: 2, scope: !6827, file: !1, line: 630, type: !299)
!6833 = !DILocation(line: 630, column: 63, scope: !6827)
!6834 = !DILocalVariable(name: "id_ptr", scope: !6827, file: !1, line: 632, type: !3403)
!6835 = !DILocation(line: 632, column: 13, scope: !6827)
!6836 = !DILocalVariable(name: "ptr", scope: !6827, file: !1, line: 632, type: !3403)
!6837 = !DILocation(line: 632, column: 21, scope: !6827)
!6838 = !DILocalVariable(name: "prop", scope: !6827, file: !1, line: 633, type: !3413)
!6839 = !DILocation(line: 633, column: 15, scope: !6827)
!6840 = !DILocation(line: 636, column: 24, scope: !6827)
!6841 = !DILocation(line: 636, column: 2, scope: !6827)
!6842 = !DILocation(line: 639, column: 44, scope: !6827)
!6843 = !DILocation(line: 639, column: 9, scope: !6827)
!6844 = !DILocation(line: 639, column: 2, scope: !6827)
!6845 = distinct !DISubprogram(name: "animsys_remap_path", scope: !1, file: !1, line: 1337, type: !6846, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!6846 = !DISubroutineType(types: !6847)
!6847 = !{!1529, !250, !153, !6848}
!6848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!6849 = !DILocalVariable(name: "UNUSED_remap", arg: 1, scope: !6845, file: !1, line: 1337, type: !250)
!6850 = !DILocation(line: 1337, column: 44, scope: !6845)
!6851 = !DILocalVariable(name: "path", arg: 2, scope: !6845, file: !1, line: 1337, type: !153)
!6852 = !DILocation(line: 1337, column: 65, scope: !6845)
!6853 = !DILocalVariable(name: "dst", arg: 3, scope: !6845, file: !1, line: 1337, type: !6848)
!6854 = !DILocation(line: 1337, column: 78, scope: !6845)
!6855 = !DILocation(line: 1348, column: 9, scope: !6845)
!6856 = !DILocation(line: 1348, column: 3, scope: !6845)
!6857 = !DILocation(line: 1348, column: 7, scope: !6845)
!6858 = !DILocation(line: 1349, column: 2, scope: !6845)
!6859 = distinct !DISubprogram(name: "animsys_write_rna_setting", scope: !1, file: !1, line: 1357, type: !6860, scopeLine: 1358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!6860 = !DISubroutineType(types: !6861)
!6861 = !{!1529, !3402, !153, !43, !275}
!6862 = !DILocalVariable(name: "ptr", arg: 1, scope: !6859, file: !1, line: 1357, type: !3402)
!6863 = !DILocation(line: 1357, column: 51, scope: !6859)
!6864 = !DILocalVariable(name: "path", arg: 2, scope: !6859, file: !1, line: 1357, type: !153)
!6865 = !DILocation(line: 1357, column: 62, scope: !6859)
!6866 = !DILocalVariable(name: "array_index", arg: 3, scope: !6859, file: !1, line: 1357, type: !43)
!6867 = !DILocation(line: 1357, column: 72, scope: !6859)
!6868 = !DILocalVariable(name: "value", arg: 4, scope: !6859, file: !1, line: 1357, type: !275)
!6869 = !DILocation(line: 1357, column: 91, scope: !6859)
!6870 = !DILocalVariable(name: "prop", scope: !6859, file: !1, line: 1359, type: !3413)
!6871 = !DILocation(line: 1359, column: 15, scope: !6859)
!6872 = !DILocalVariable(name: "new_ptr", scope: !6859, file: !1, line: 1360, type: !3403)
!6873 = !DILocation(line: 1360, column: 13, scope: !6859)
!6874 = !DILocation(line: 1365, column: 32, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6859, file: !1, line: 1365, column: 6)
!6876 = !DILocation(line: 1365, column: 37, scope: !6875)
!6877 = !DILocation(line: 1365, column: 6, scope: !6875)
!6878 = !DILocation(line: 1365, column: 6, scope: !6859)
!6879 = !DILocation(line: 1367, column: 42, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !1, line: 1367, column: 7)
!6881 = distinct !DILexicalBlock(scope: !6875, file: !1, line: 1365, column: 61)
!6882 = !DILocation(line: 1367, column: 7, scope: !6880)
!6883 = !DILocation(line: 1367, column: 7, scope: !6881)
!6884 = !DILocalVariable(name: "array_len", scope: !6885, file: !1, line: 1368, type: !43)
!6885 = distinct !DILexicalBlock(scope: !6880, file: !1, line: 1367, column: 49)
!6886 = !DILocation(line: 1368, column: 8, scope: !6885)
!6887 = !DILocation(line: 1368, column: 56, scope: !6885)
!6888 = !DILocation(line: 1368, column: 20, scope: !6885)
!6889 = !DILocalVariable(name: "written", scope: !6885, file: !1, line: 1369, type: !1529)
!6890 = !DILocation(line: 1369, column: 9, scope: !6885)
!6891 = !DILocation(line: 1371, column: 8, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6885, file: !1, line: 1371, column: 8)
!6893 = !DILocation(line: 1371, column: 18, scope: !6892)
!6894 = !DILocation(line: 1371, column: 21, scope: !6892)
!6895 = !DILocation(line: 1371, column: 36, scope: !6892)
!6896 = !DILocation(line: 1371, column: 33, scope: !6892)
!6897 = !DILocation(line: 1371, column: 8, scope: !6885)
!6898 = !DILocation(line: 1372, column: 11, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6900, file: !1, line: 1372, column: 9)
!6900 = distinct !DILexicalBlock(scope: !6892, file: !1, line: 1371, column: 47)
!6901 = !DILocation(line: 1372, column: 17, scope: !6899)
!6902 = !DILocation(line: 1372, column: 9, scope: !6900)
!6903 = !DILocation(line: 1374, column: 14, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6899, file: !1, line: 1372, column: 28)
!6905 = !DILocation(line: 1374, column: 18, scope: !6904)
!6906 = !DILocation(line: 1374, column: 21, scope: !6904)
!6907 = !DILocation(line: 1374, column: 26, scope: !6904)
!6908 = !DILocation(line: 1374, column: 29, scope: !6904)
!6909 = !DILocation(line: 1374, column: 13, scope: !6904)
!6910 = !DILocation(line: 1374, column: 45, scope: !6904)
!6911 = !DILocation(line: 1374, column: 50, scope: !6904)
!6912 = !DILocation(line: 1374, column: 53, scope: !6904)
!6913 = !DILocation(line: 1374, column: 39, scope: !6904)
!6914 = !DILocation(line: 1374, column: 60, scope: !6904)
!6915 = !DILocation(line: 1374, column: 38, scope: !6904)
!6916 = !DILocation(line: 1374, column: 65, scope: !6904)
!6917 = !DILocation(line: 1375, column: 13, scope: !6904)
!6918 = !DILocation(line: 1375, column: 19, scope: !6904)
!6919 = !DILocation(line: 1375, column: 32, scope: !6904)
!6920 = !DILocation(line: 1375, column: 42, scope: !6904)
!6921 = !DILocation(line: 1373, column: 6, scope: !6904)
!6922 = !DILocation(line: 1376, column: 5, scope: !6904)
!6923 = !DILocation(line: 1378, column: 5, scope: !6900)
!6924 = !DILocation(line: 1381, column: 30, scope: !6885)
!6925 = !DILocation(line: 1381, column: 12, scope: !6885)
!6926 = !DILocation(line: 1381, column: 4, scope: !6885)
!6927 = !DILocation(line: 1383, column: 10, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6929, file: !1, line: 1383, column: 10)
!6929 = distinct !DILexicalBlock(scope: !6885, file: !1, line: 1381, column: 37)
!6930 = !DILocation(line: 1383, column: 10, scope: !6929)
!6931 = !DILocation(line: 1384, column: 52, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !1, line: 1384, column: 11)
!6933 = distinct !DILexicalBlock(scope: !6928, file: !1, line: 1383, column: 21)
!6934 = !DILocation(line: 1384, column: 58, scope: !6932)
!6935 = !DILocation(line: 1384, column: 11, scope: !6932)
!6936 = !DILocation(line: 1384, column: 74, scope: !6932)
!6937 = !DILocation(line: 1384, column: 71, scope: !6932)
!6938 = !DILocation(line: 1384, column: 11, scope: !6933)
!6939 = !DILocation(line: 1385, column: 49, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6932, file: !1, line: 1384, column: 104)
!6941 = !DILocation(line: 1385, column: 55, scope: !6940)
!6942 = !DILocation(line: 1385, column: 68, scope: !6940)
!6943 = !DILocation(line: 1385, column: 8, scope: !6940)
!6944 = !DILocation(line: 1386, column: 16, scope: !6940)
!6945 = !DILocation(line: 1387, column: 7, scope: !6940)
!6946 = !DILocation(line: 1388, column: 6, scope: !6933)
!6947 = !DILocation(line: 1390, column: 46, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !1, line: 1390, column: 11)
!6949 = distinct !DILexicalBlock(scope: !6928, file: !1, line: 1389, column: 11)
!6950 = !DILocation(line: 1390, column: 11, scope: !6948)
!6951 = !DILocation(line: 1390, column: 55, scope: !6948)
!6952 = !DILocation(line: 1390, column: 52, scope: !6948)
!6953 = !DILocation(line: 1390, column: 11, scope: !6949)
!6954 = !DILocation(line: 1391, column: 43, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6948, file: !1, line: 1390, column: 85)
!6956 = !DILocation(line: 1391, column: 49, scope: !6955)
!6957 = !DILocation(line: 1391, column: 8, scope: !6955)
!6958 = !DILocation(line: 1392, column: 16, scope: !6955)
!6959 = !DILocation(line: 1393, column: 7, scope: !6955)
!6960 = !DILocation(line: 1395, column: 6, scope: !6929)
!6961 = !DILocation(line: 1397, column: 10, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6929, file: !1, line: 1397, column: 10)
!6963 = !DILocation(line: 1397, column: 10, scope: !6929)
!6964 = !DILocation(line: 1398, column: 48, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !1, line: 1398, column: 11)
!6966 = distinct !DILexicalBlock(scope: !6962, file: !1, line: 1397, column: 21)
!6967 = !DILocation(line: 1398, column: 54, scope: !6965)
!6968 = !DILocation(line: 1398, column: 11, scope: !6965)
!6969 = !DILocation(line: 1398, column: 75, scope: !6965)
!6970 = !DILocation(line: 1398, column: 70, scope: !6965)
!6971 = !DILocation(line: 1398, column: 67, scope: !6965)
!6972 = !DILocation(line: 1398, column: 11, scope: !6966)
!6973 = !DILocation(line: 1399, column: 45, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6965, file: !1, line: 1398, column: 82)
!6975 = !DILocation(line: 1399, column: 51, scope: !6974)
!6976 = !DILocation(line: 1399, column: 69, scope: !6974)
!6977 = !DILocation(line: 1399, column: 64, scope: !6974)
!6978 = !DILocation(line: 1399, column: 8, scope: !6974)
!6979 = !DILocation(line: 1400, column: 16, scope: !6974)
!6980 = !DILocation(line: 1401, column: 7, scope: !6974)
!6981 = !DILocation(line: 1402, column: 6, scope: !6966)
!6982 = !DILocation(line: 1404, column: 42, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6984, file: !1, line: 1404, column: 11)
!6984 = distinct !DILexicalBlock(scope: !6962, file: !1, line: 1403, column: 11)
!6985 = !DILocation(line: 1404, column: 11, scope: !6983)
!6986 = !DILocation(line: 1404, column: 56, scope: !6983)
!6987 = !DILocation(line: 1404, column: 51, scope: !6983)
!6988 = !DILocation(line: 1404, column: 48, scope: !6983)
!6989 = !DILocation(line: 1404, column: 11, scope: !6984)
!6990 = !DILocation(line: 1405, column: 39, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6983, file: !1, line: 1404, column: 63)
!6992 = !DILocation(line: 1405, column: 50, scope: !6991)
!6993 = !DILocation(line: 1405, column: 45, scope: !6991)
!6994 = !DILocation(line: 1405, column: 8, scope: !6991)
!6995 = !DILocation(line: 1406, column: 16, scope: !6991)
!6996 = !DILocation(line: 1407, column: 7, scope: !6991)
!6997 = !DILocation(line: 1409, column: 6, scope: !6929)
!6998 = !DILocation(line: 1411, column: 10, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6929, file: !1, line: 1411, column: 10)
!7000 = !DILocation(line: 1411, column: 10, scope: !6929)
!7001 = !DILocation(line: 1412, column: 50, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !1, line: 1412, column: 11)
!7003 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 1411, column: 21)
!7004 = !DILocation(line: 1412, column: 56, scope: !7002)
!7005 = !DILocation(line: 1412, column: 11, scope: !7002)
!7006 = !DILocation(line: 1412, column: 72, scope: !7002)
!7007 = !DILocation(line: 1412, column: 69, scope: !7002)
!7008 = !DILocation(line: 1412, column: 11, scope: !7003)
!7009 = !DILocation(line: 1413, column: 47, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7002, file: !1, line: 1412, column: 79)
!7011 = !DILocation(line: 1413, column: 53, scope: !7010)
!7012 = !DILocation(line: 1413, column: 66, scope: !7010)
!7013 = !DILocation(line: 1413, column: 8, scope: !7010)
!7014 = !DILocation(line: 1414, column: 16, scope: !7010)
!7015 = !DILocation(line: 1415, column: 7, scope: !7010)
!7016 = !DILocation(line: 1416, column: 6, scope: !7003)
!7017 = !DILocation(line: 1418, column: 44, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !1, line: 1418, column: 11)
!7019 = distinct !DILexicalBlock(scope: !6999, file: !1, line: 1417, column: 11)
!7020 = !DILocation(line: 1418, column: 11, scope: !7018)
!7021 = !DILocation(line: 1418, column: 53, scope: !7018)
!7022 = !DILocation(line: 1418, column: 50, scope: !7018)
!7023 = !DILocation(line: 1418, column: 11, scope: !7019)
!7024 = !DILocation(line: 1419, column: 41, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7018, file: !1, line: 1418, column: 60)
!7026 = !DILocation(line: 1419, column: 47, scope: !7025)
!7027 = !DILocation(line: 1419, column: 8, scope: !7025)
!7028 = !DILocation(line: 1420, column: 16, scope: !7025)
!7029 = !DILocation(line: 1421, column: 7, scope: !7025)
!7030 = !DILocation(line: 1423, column: 6, scope: !6929)
!7031 = !DILocation(line: 1425, column: 42, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !6929, file: !1, line: 1425, column: 10)
!7033 = !DILocation(line: 1425, column: 10, scope: !7032)
!7034 = !DILocation(line: 1425, column: 56, scope: !7032)
!7035 = !DILocation(line: 1425, column: 51, scope: !7032)
!7036 = !DILocation(line: 1425, column: 48, scope: !7032)
!7037 = !DILocation(line: 1425, column: 10, scope: !6929)
!7038 = !DILocation(line: 1426, column: 39, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7032, file: !1, line: 1425, column: 63)
!7040 = !DILocation(line: 1426, column: 50, scope: !7039)
!7041 = !DILocation(line: 1426, column: 45, scope: !7039)
!7042 = !DILocation(line: 1426, column: 7, scope: !7039)
!7043 = !DILocation(line: 1427, column: 15, scope: !7039)
!7044 = !DILocation(line: 1428, column: 6, scope: !7039)
!7045 = !DILocation(line: 1429, column: 6, scope: !6929)
!7046 = !DILocation(line: 1432, column: 6, scope: !6929)
!7047 = !DILocation(line: 1458, column: 8, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !6885, file: !1, line: 1458, column: 8)
!7049 = !DILocation(line: 1458, column: 16, scope: !7048)
!7050 = !DILocation(line: 1458, column: 27, scope: !7048)
!7051 = !DILocation(line: 1458, column: 30, scope: !7048)
!7052 = !DILocation(line: 1458, column: 19, scope: !7048)
!7053 = !DILocation(line: 1458, column: 8, scope: !6885)
!7054 = !DILocalVariable(name: "id", scope: !7055, file: !1, line: 1459, type: !176)
!7055 = distinct !DILexicalBlock(scope: !7048, file: !1, line: 1458, column: 36)
!7056 = !DILocation(line: 1459, column: 9, scope: !7055)
!7057 = !DILocation(line: 1459, column: 22, scope: !7055)
!7058 = !DILocation(line: 1459, column: 25, scope: !7055)
!7059 = !DILocation(line: 1459, column: 14, scope: !7055)
!7060 = !DILocation(line: 1463, column: 11, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7055, file: !1, line: 1463, column: 9)
!7062 = !DILocation(line: 1463, column: 15, scope: !7061)
!7063 = !DILocation(line: 1463, column: 20, scope: !7061)
!7064 = !DILocation(line: 1463, column: 9, scope: !7055)
!7065 = !DILocation(line: 1464, column: 6, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7061, file: !1, line: 1463, column: 43)
!7067 = !DILocation(line: 1464, column: 10, scope: !7066)
!7068 = !DILocation(line: 1464, column: 15, scope: !7066)
!7069 = !DILocation(line: 1465, column: 24, scope: !7066)
!7070 = !DILocation(line: 1465, column: 30, scope: !7066)
!7071 = !DILocation(line: 1465, column: 6, scope: !7066)
!7072 = !DILocation(line: 1466, column: 5, scope: !7066)
!7073 = !DILocation(line: 1467, column: 4, scope: !7055)
!7074 = !DILocation(line: 1468, column: 3, scope: !6885)
!7075 = !DILocation(line: 1471, column: 3, scope: !6881)
!7076 = !DILocation(line: 1477, column: 9, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 1477, column: 7)
!7078 = distinct !DILexicalBlock(scope: !6875, file: !1, line: 1473, column: 7)
!7079 = !DILocation(line: 1477, column: 15, scope: !7077)
!7080 = !DILocation(line: 1477, column: 7, scope: !7078)
!7081 = !DILocation(line: 1479, column: 12, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7077, file: !1, line: 1477, column: 26)
!7083 = !DILocation(line: 1479, column: 17, scope: !7082)
!7084 = !DILocation(line: 1479, column: 20, scope: !7082)
!7085 = !DILocation(line: 1479, column: 11, scope: !7082)
!7086 = !DILocation(line: 1479, column: 36, scope: !7082)
!7087 = !DILocation(line: 1479, column: 41, scope: !7082)
!7088 = !DILocation(line: 1479, column: 44, scope: !7082)
!7089 = !DILocation(line: 1479, column: 30, scope: !7082)
!7090 = !DILocation(line: 1479, column: 51, scope: !7082)
!7091 = !DILocation(line: 1479, column: 29, scope: !7082)
!7092 = !DILocation(line: 1479, column: 56, scope: !7082)
!7093 = !DILocation(line: 1480, column: 11, scope: !7082)
!7094 = !DILocation(line: 1480, column: 17, scope: !7082)
!7095 = !DILocation(line: 1478, column: 4, scope: !7082)
!7096 = !DILocation(line: 1481, column: 3, scope: !7082)
!7097 = !DILocation(line: 1482, column: 3, scope: !7078)
!7098 = !DILocation(line: 1484, column: 1, scope: !6859)
!7099 = distinct !DISubprogram(name: "nlastrip_get_influence", scope: !1, file: !1, line: 1643, type: !7100, scopeLine: 1644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!7100 = !DISubroutineType(types: !7101)
!7101 = !{!275, !261, !275}
!7102 = !DILocalVariable(name: "strip", arg: 1, scope: !7099, file: !1, line: 1643, type: !261)
!7103 = !DILocation(line: 1643, column: 47, scope: !7099)
!7104 = !DILocalVariable(name: "cframe", arg: 2, scope: !7099, file: !1, line: 1643, type: !275)
!7105 = !DILocation(line: 1643, column: 60, scope: !7099)
!7106 = !DILocation(line: 1646, column: 25, scope: !7099)
!7107 = !DILocation(line: 1646, column: 32, scope: !7099)
!7108 = !DILocation(line: 1646, column: 19, scope: !7099)
!7109 = !DILocation(line: 1646, column: 2, scope: !7099)
!7110 = !DILocation(line: 1646, column: 9, scope: !7099)
!7111 = !DILocation(line: 1646, column: 17, scope: !7099)
!7112 = !DILocation(line: 1647, column: 26, scope: !7099)
!7113 = !DILocation(line: 1647, column: 33, scope: !7099)
!7114 = !DILocation(line: 1647, column: 20, scope: !7099)
!7115 = !DILocation(line: 1647, column: 2, scope: !7099)
!7116 = !DILocation(line: 1647, column: 9, scope: !7099)
!7117 = !DILocation(line: 1647, column: 18, scope: !7099)
!7118 = !DILocation(line: 1650, column: 6, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7099, file: !1, line: 1650, column: 6)
!7120 = !DILocation(line: 1650, column: 35, scope: !7119)
!7121 = !DILocation(line: 1650, column: 44, scope: !7119)
!7122 = !DILocation(line: 1650, column: 48, scope: !7119)
!7123 = !DILocation(line: 1650, column: 59, scope: !7119)
!7124 = !DILocation(line: 1650, column: 66, scope: !7119)
!7125 = !DILocation(line: 1650, column: 74, scope: !7119)
!7126 = !DILocation(line: 1650, column: 81, scope: !7119)
!7127 = !DILocation(line: 1650, column: 72, scope: !7119)
!7128 = !DILocation(line: 1650, column: 55, scope: !7119)
!7129 = !DILocation(line: 1650, column: 6, scope: !7099)
!7130 = !DILocation(line: 1652, column: 16, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7119, file: !1, line: 1650, column: 92)
!7132 = !DILocation(line: 1652, column: 25, scope: !7131)
!7133 = !DILocation(line: 1652, column: 32, scope: !7131)
!7134 = !DILocation(line: 1652, column: 23, scope: !7131)
!7135 = !DILocation(line: 1652, column: 10, scope: !7131)
!7136 = !DILocation(line: 1652, column: 42, scope: !7131)
!7137 = !DILocation(line: 1652, column: 49, scope: !7131)
!7138 = !DILocation(line: 1652, column: 39, scope: !7131)
!7139 = !DILocation(line: 1652, column: 3, scope: !7131)
!7140 = !DILocation(line: 1654, column: 11, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7119, file: !1, line: 1654, column: 11)
!7142 = !DILocation(line: 1654, column: 41, scope: !7141)
!7143 = !DILocation(line: 1654, column: 50, scope: !7141)
!7144 = !DILocation(line: 1654, column: 54, scope: !7141)
!7145 = !DILocation(line: 1654, column: 65, scope: !7141)
!7146 = !DILocation(line: 1654, column: 72, scope: !7141)
!7147 = !DILocation(line: 1654, column: 78, scope: !7141)
!7148 = !DILocation(line: 1654, column: 85, scope: !7141)
!7149 = !DILocation(line: 1654, column: 76, scope: !7141)
!7150 = !DILocation(line: 1654, column: 61, scope: !7141)
!7151 = !DILocation(line: 1654, column: 11, scope: !7119)
!7152 = !DILocation(line: 1656, column: 16, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7141, file: !1, line: 1654, column: 97)
!7154 = !DILocation(line: 1656, column: 23, scope: !7153)
!7155 = !DILocation(line: 1656, column: 29, scope: !7153)
!7156 = !DILocation(line: 1656, column: 27, scope: !7153)
!7157 = !DILocation(line: 1656, column: 10, scope: !7153)
!7158 = !DILocation(line: 1656, column: 40, scope: !7153)
!7159 = !DILocation(line: 1656, column: 47, scope: !7153)
!7160 = !DILocation(line: 1656, column: 37, scope: !7153)
!7161 = !DILocation(line: 1656, column: 3, scope: !7153)
!7162 = !DILocation(line: 1660, column: 3, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7141, file: !1, line: 1658, column: 7)
!7164 = !DILocation(line: 1662, column: 1, scope: !7099)
!7165 = distinct !DISubprogram(name: "nlaeval_fmodifiers_join_stacks", scope: !1, file: !1, line: 2018, type: !7166, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!7166 = !DISubroutineType(types: !7167)
!7167 = !{null, !1029, !1029, !1029}
!7168 = !DILocalVariable(name: "result", arg: 1, scope: !7165, file: !1, line: 2018, type: !1029)
!7169 = !DILocation(line: 2018, column: 54, scope: !7165)
!7170 = !DILocalVariable(name: "list1", arg: 2, scope: !7165, file: !1, line: 2018, type: !1029)
!7171 = !DILocation(line: 2018, column: 72, scope: !7165)
!7172 = !DILocalVariable(name: "list2", arg: 3, scope: !7165, file: !1, line: 2018, type: !1029)
!7173 = !DILocation(line: 2018, column: 89, scope: !7165)
!7174 = !DILocalVariable(name: "fcm1", scope: !7165, file: !1, line: 2020, type: !7175)
!7175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7176, size: 64)
!7176 = !DIDerivedType(tag: DW_TAG_typedef, name: "FModifier", file: !17, line: 67, baseType: !7177)
!7177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FModifier", file: !17, line: 52, size: 896, elements: !7178)
!7178 = !{!7179, !7181, !7182, !7183, !7184, !7185, !7186, !7187, !7188, !7189, !7190}
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7177, file: !17, line: 53, baseType: !7180, size: 64)
!7180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7177, size: 64)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7177, file: !17, line: 53, baseType: !7180, size: 64, offset: 64)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7177, file: !17, line: 55, baseType: !152, size: 64, offset: 128)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7177, file: !17, line: 57, baseType: !209, size: 512, offset: 192)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7177, file: !17, line: 58, baseType: !156, size: 16, offset: 704)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7177, file: !17, line: 59, baseType: !156, size: 16, offset: 720)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !7177, file: !17, line: 61, baseType: !275, size: 32, offset: 736)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !7177, file: !17, line: 63, baseType: !275, size: 32, offset: 768)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !7177, file: !17, line: 64, baseType: !275, size: 32, offset: 800)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !7177, file: !17, line: 65, baseType: !275, size: 32, offset: 832)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !7177, file: !17, line: 66, baseType: !275, size: 32, offset: 864)
!7191 = !DILocation(line: 2020, column: 13, scope: !7165)
!7192 = !DILocalVariable(name: "fcm2", scope: !7165, file: !1, line: 2020, type: !7175)
!7193 = !DILocation(line: 2020, column: 20, scope: !7165)
!7194 = !DILocation(line: 2023, column: 6, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7165, file: !1, line: 2023, column: 6)
!7196 = !DILocation(line: 2023, column: 6, scope: !7165)
!7197 = !DILocation(line: 2024, column: 7, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !1, line: 2024, column: 7)
!7199 = distinct !DILexicalBlock(scope: !7195, file: !1, line: 2023, column: 39)
!7200 = !DILocation(line: 2024, column: 13, scope: !7198)
!7201 = !DILocation(line: 2024, column: 16, scope: !7198)
!7202 = !DILocation(line: 2024, column: 23, scope: !7198)
!7203 = !DILocation(line: 2024, column: 7, scope: !7199)
!7204 = !DILocation(line: 2025, column: 20, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7198, file: !1, line: 2024, column: 30)
!7206 = !DILocation(line: 2025, column: 27, scope: !7205)
!7207 = !DILocation(line: 2025, column: 4, scope: !7205)
!7208 = !DILocation(line: 2025, column: 12, scope: !7205)
!7209 = !DILocation(line: 2025, column: 18, scope: !7205)
!7210 = !DILocation(line: 2026, column: 19, scope: !7205)
!7211 = !DILocation(line: 2026, column: 26, scope: !7205)
!7212 = !DILocation(line: 2026, column: 4, scope: !7205)
!7213 = !DILocation(line: 2026, column: 12, scope: !7205)
!7214 = !DILocation(line: 2026, column: 17, scope: !7205)
!7215 = !DILocation(line: 2027, column: 3, scope: !7205)
!7216 = !DILocation(line: 2028, column: 2, scope: !7199)
!7217 = !DILocation(line: 2030, column: 11, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7195, file: !1, line: 2030, column: 11)
!7219 = !DILocation(line: 2030, column: 11, scope: !7195)
!7220 = !DILocation(line: 2031, column: 19, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7218, file: !1, line: 2030, column: 44)
!7222 = !DILocation(line: 2031, column: 26, scope: !7221)
!7223 = !DILocation(line: 2031, column: 3, scope: !7221)
!7224 = !DILocation(line: 2031, column: 11, scope: !7221)
!7225 = !DILocation(line: 2031, column: 17, scope: !7221)
!7226 = !DILocation(line: 2032, column: 18, scope: !7221)
!7227 = !DILocation(line: 2032, column: 25, scope: !7221)
!7228 = !DILocation(line: 2032, column: 3, scope: !7221)
!7229 = !DILocation(line: 2032, column: 11, scope: !7221)
!7230 = !DILocation(line: 2032, column: 16, scope: !7221)
!7231 = !DILocation(line: 2033, column: 2, scope: !7221)
!7232 = !DILocation(line: 2038, column: 19, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7218, file: !1, line: 2034, column: 7)
!7234 = !DILocation(line: 2038, column: 26, scope: !7233)
!7235 = !DILocation(line: 2038, column: 3, scope: !7233)
!7236 = !DILocation(line: 2038, column: 11, scope: !7233)
!7237 = !DILocation(line: 2038, column: 17, scope: !7233)
!7238 = !DILocation(line: 2039, column: 18, scope: !7233)
!7239 = !DILocation(line: 2039, column: 25, scope: !7233)
!7240 = !DILocation(line: 2039, column: 3, scope: !7233)
!7241 = !DILocation(line: 2039, column: 11, scope: !7233)
!7242 = !DILocation(line: 2039, column: 16, scope: !7233)
!7243 = !DILocation(line: 2041, column: 10, scope: !7233)
!7244 = !DILocation(line: 2041, column: 17, scope: !7233)
!7245 = !DILocation(line: 2041, column: 8, scope: !7233)
!7246 = !DILocation(line: 2042, column: 10, scope: !7233)
!7247 = !DILocation(line: 2042, column: 17, scope: !7233)
!7248 = !DILocation(line: 2042, column: 8, scope: !7233)
!7249 = !DILocation(line: 2044, column: 16, scope: !7233)
!7250 = !DILocation(line: 2044, column: 3, scope: !7233)
!7251 = !DILocation(line: 2044, column: 9, scope: !7233)
!7252 = !DILocation(line: 2044, column: 14, scope: !7233)
!7253 = !DILocation(line: 2045, column: 16, scope: !7233)
!7254 = !DILocation(line: 2045, column: 3, scope: !7233)
!7255 = !DILocation(line: 2045, column: 9, scope: !7233)
!7256 = !DILocation(line: 2045, column: 14, scope: !7233)
!7257 = !DILocation(line: 2047, column: 1, scope: !7165)
!7258 = distinct !DISubprogram(name: "nlaevalchan_verify", scope: !1, file: !1, line: 1876, type: !7259, scopeLine: 1877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!7259 = !DISubroutineType(types: !7260)
!7260 = !{!5901, !3402, !1029, !5514, !2841, !7261}
!7261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!7262 = !DILocalVariable(name: "ptr", arg: 1, scope: !7258, file: !1, line: 1876, type: !3402)
!7263 = !DILocation(line: 1876, column: 55, scope: !7258)
!7264 = !DILocalVariable(name: "channels", arg: 2, scope: !7258, file: !1, line: 1876, type: !1029)
!7265 = !DILocation(line: 1876, column: 70, scope: !7258)
!7266 = !DILocalVariable(name: "nes", arg: 3, scope: !7258, file: !1, line: 1876, type: !5514)
!7267 = !DILocation(line: 1876, column: 94, scope: !7258)
!7268 = !DILocalVariable(name: "fcu", arg: 4, scope: !7258, file: !1, line: 1876, type: !2841)
!7269 = !DILocation(line: 1876, column: 107, scope: !7258)
!7270 = !DILocalVariable(name: "newChan", arg: 5, scope: !7258, file: !1, line: 1876, type: !7261)
!7271 = !DILocation(line: 1876, column: 118, scope: !7258)
!7272 = !DILocalVariable(name: "nec", scope: !7258, file: !1, line: 1878, type: !5901)
!7273 = !DILocation(line: 1878, column: 18, scope: !7258)
!7274 = !DILocalVariable(name: "strip", scope: !7258, file: !1, line: 1879, type: !261)
!7275 = !DILocation(line: 1879, column: 12, scope: !7258)
!7276 = !DILocation(line: 1879, column: 20, scope: !7258)
!7277 = !DILocation(line: 1879, column: 25, scope: !7258)
!7278 = !DILocalVariable(name: "prop", scope: !7258, file: !1, line: 1880, type: !3413)
!7279 = !DILocation(line: 1880, column: 15, scope: !7258)
!7280 = !DILocalVariable(name: "new_ptr", scope: !7258, file: !1, line: 1881, type: !3403)
!7281 = !DILocation(line: 1881, column: 13, scope: !7258)
!7282 = !DILocalVariable(name: "path", scope: !7258, file: !1, line: 1882, type: !153)
!7283 = !DILocation(line: 1882, column: 8, scope: !7258)
!7284 = !DILocation(line: 1886, column: 6, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7258, file: !1, line: 1886, column: 6)
!7286 = !DILocation(line: 1886, column: 15, scope: !7285)
!7287 = !DILocation(line: 1886, column: 6, scope: !7258)
!7288 = !DILocation(line: 1887, column: 3, scope: !7285)
!7289 = !DILocation(line: 1891, column: 52, scope: !7258)
!7290 = !DILocation(line: 1891, column: 59, scope: !7258)
!7291 = !DILocation(line: 1891, column: 66, scope: !7258)
!7292 = !DILocation(line: 1891, column: 71, scope: !7258)
!7293 = !DILocation(line: 1891, column: 33, scope: !7258)
!7294 = !DILocation(line: 1894, column: 32, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7258, file: !1, line: 1894, column: 6)
!7296 = !DILocation(line: 1894, column: 37, scope: !7295)
!7297 = !DILocation(line: 1894, column: 6, scope: !7295)
!7298 = !DILocation(line: 1894, column: 60, scope: !7295)
!7299 = !DILocation(line: 1894, column: 6, scope: !7258)
!7300 = !DILocation(line: 1895, column: 9, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7302, file: !1, line: 1895, column: 7)
!7302 = distinct !DILexicalBlock(scope: !7295, file: !1, line: 1894, column: 70)
!7303 = !DILocation(line: 1895, column: 15, scope: !7301)
!7304 = !DILocation(line: 1895, column: 7, scope: !7302)
!7305 = !DILocation(line: 1895, column: 26, scope: !7301)
!7306 = !DILocation(line: 1896, column: 3, scope: !7302)
!7307 = !DILocation(line: 1899, column: 46, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7295, file: !1, line: 1899, column: 11)
!7309 = !DILocation(line: 1899, column: 11, scope: !7308)
!7310 = !DILocation(line: 1899, column: 52, scope: !7308)
!7311 = !DILocation(line: 1899, column: 11, scope: !7295)
!7312 = !DILocation(line: 1900, column: 9, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7314, file: !1, line: 1900, column: 7)
!7314 = distinct !DILexicalBlock(scope: !7308, file: !1, line: 1899, column: 58)
!7315 = !DILocation(line: 1900, column: 15, scope: !7313)
!7316 = !DILocation(line: 1900, column: 7, scope: !7314)
!7317 = !DILocation(line: 1900, column: 26, scope: !7313)
!7318 = !DILocation(line: 1901, column: 3, scope: !7314)
!7319 = !DILocation(line: 1905, column: 31, scope: !7258)
!7320 = !DILocation(line: 1905, column: 51, scope: !7258)
!7321 = !DILocation(line: 1905, column: 57, scope: !7258)
!7322 = !DILocation(line: 1905, column: 62, scope: !7258)
!7323 = !DILocation(line: 1905, column: 8, scope: !7258)
!7324 = !DILocation(line: 1905, column: 6, scope: !7258)
!7325 = !DILocation(line: 1908, column: 6, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7258, file: !1, line: 1908, column: 6)
!7327 = !DILocation(line: 1908, column: 10, scope: !7326)
!7328 = !DILocation(line: 1908, column: 6, scope: !7258)
!7329 = !DILocation(line: 1909, column: 9, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7326, file: !1, line: 1908, column: 19)
!7331 = !DILocation(line: 1909, column: 7, scope: !7330)
!7332 = !DILocation(line: 1910, column: 15, scope: !7330)
!7333 = !DILocation(line: 1910, column: 25, scope: !7330)
!7334 = !DILocation(line: 1910, column: 3, scope: !7330)
!7335 = !DILocation(line: 1913, column: 3, scope: !7330)
!7336 = !DILocation(line: 1913, column: 8, scope: !7330)
!7337 = !DILocation(line: 1913, column: 14, scope: !7330)
!7338 = !DILocation(line: 1914, column: 15, scope: !7330)
!7339 = !DILocation(line: 1914, column: 3, scope: !7330)
!7340 = !DILocation(line: 1914, column: 8, scope: !7330)
!7341 = !DILocation(line: 1914, column: 13, scope: !7330)
!7342 = !DILocation(line: 1915, column: 16, scope: !7330)
!7343 = !DILocation(line: 1915, column: 21, scope: !7330)
!7344 = !DILocation(line: 1915, column: 3, scope: !7330)
!7345 = !DILocation(line: 1915, column: 8, scope: !7330)
!7346 = !DILocation(line: 1915, column: 14, scope: !7330)
!7347 = !DILocation(line: 1918, column: 26, scope: !7330)
!7348 = !DILocation(line: 1918, column: 3, scope: !7330)
!7349 = !DILocation(line: 1919, column: 4, scope: !7330)
!7350 = !DILocation(line: 1919, column: 12, scope: !7330)
!7351 = !DILocation(line: 1920, column: 2, scope: !7330)
!7352 = !DILocation(line: 1922, column: 4, scope: !7326)
!7353 = !DILocation(line: 1922, column: 12, scope: !7326)
!7354 = !DILocation(line: 1925, column: 9, scope: !7258)
!7355 = !DILocation(line: 1925, column: 2, scope: !7258)
!7356 = !DILocation(line: 1926, column: 1, scope: !7258)
!7357 = distinct !DISubprogram(name: "nlaevalchan_accumulate", scope: !1, file: !1, line: 1929, type: !7358, scopeLine: 1930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!7358 = !DISubroutineType(types: !7359)
!7359 = !{null, !5901, !5514, !275, !1529}
!7360 = !DILocalVariable(name: "nec", arg: 1, scope: !7357, file: !1, line: 1929, type: !5901)
!7361 = !DILocation(line: 1929, column: 52, scope: !7357)
!7362 = !DILocalVariable(name: "nes", arg: 2, scope: !7357, file: !1, line: 1929, type: !5514)
!7363 = !DILocation(line: 1929, column: 71, scope: !7357)
!7364 = !DILocalVariable(name: "value", arg: 3, scope: !7357, file: !1, line: 1929, type: !275)
!7365 = !DILocation(line: 1929, column: 82, scope: !7357)
!7366 = !DILocalVariable(name: "newChan", arg: 4, scope: !7357, file: !1, line: 1929, type: !1529)
!7367 = !DILocation(line: 1929, column: 94, scope: !7357)
!7368 = !DILocalVariable(name: "strip", scope: !7357, file: !1, line: 1931, type: !261)
!7369 = !DILocation(line: 1931, column: 12, scope: !7357)
!7370 = !DILocation(line: 1931, column: 20, scope: !7357)
!7371 = !DILocation(line: 1931, column: 25, scope: !7357)
!7372 = !DILocalVariable(name: "blendmode", scope: !7357, file: !1, line: 1932, type: !156)
!7373 = !DILocation(line: 1932, column: 8, scope: !7357)
!7374 = !DILocation(line: 1932, column: 20, scope: !7357)
!7375 = !DILocation(line: 1932, column: 27, scope: !7357)
!7376 = !DILocalVariable(name: "inf", scope: !7357, file: !1, line: 1933, type: !275)
!7377 = !DILocation(line: 1933, column: 8, scope: !7357)
!7378 = !DILocation(line: 1933, column: 14, scope: !7357)
!7379 = !DILocation(line: 1933, column: 21, scope: !7357)
!7380 = !DILocation(line: 1937, column: 6, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7357, file: !1, line: 1937, column: 6)
!7382 = !DILocation(line: 1937, column: 14, scope: !7381)
!7383 = !DILocation(line: 1937, column: 17, scope: !7381)
!7384 = !DILocation(line: 1937, column: 27, scope: !7381)
!7385 = !DILocation(line: 1937, column: 6, scope: !7357)
!7386 = !DILocation(line: 1938, column: 16, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7381, file: !1, line: 1937, column: 53)
!7388 = !DILocation(line: 1938, column: 3, scope: !7387)
!7389 = !DILocation(line: 1938, column: 8, scope: !7387)
!7390 = !DILocation(line: 1938, column: 14, scope: !7387)
!7391 = !DILocation(line: 1939, column: 3, scope: !7387)
!7392 = !DILocation(line: 1945, column: 6, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7357, file: !1, line: 1945, column: 6)
!7394 = !DILocation(line: 1945, column: 11, scope: !7393)
!7395 = !DILocation(line: 1945, column: 22, scope: !7393)
!7396 = !DILocation(line: 1945, column: 6, scope: !7357)
!7397 = !DILocation(line: 1946, column: 10, scope: !7393)
!7398 = !DILocation(line: 1946, column: 15, scope: !7393)
!7399 = !DILocation(line: 1946, column: 7, scope: !7393)
!7400 = !DILocation(line: 1946, column: 3, scope: !7393)
!7401 = !DILocation(line: 1949, column: 6, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7357, file: !1, line: 1949, column: 6)
!7403 = !DILocation(line: 1949, column: 6, scope: !7357)
!7404 = !DILocation(line: 1949, column: 25, scope: !7402)
!7405 = !DILocation(line: 1952, column: 10, scope: !7357)
!7406 = !DILocation(line: 1952, column: 2, scope: !7357)
!7407 = !DILocation(line: 1955, column: 19, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7357, file: !1, line: 1952, column: 21)
!7409 = !DILocation(line: 1955, column: 27, scope: !7408)
!7410 = !DILocation(line: 1955, column: 25, scope: !7408)
!7411 = !DILocation(line: 1955, column: 4, scope: !7408)
!7412 = !DILocation(line: 1955, column: 9, scope: !7408)
!7413 = !DILocation(line: 1955, column: 15, scope: !7408)
!7414 = !DILocation(line: 1956, column: 4, scope: !7408)
!7415 = !DILocation(line: 1960, column: 19, scope: !7408)
!7416 = !DILocation(line: 1960, column: 27, scope: !7408)
!7417 = !DILocation(line: 1960, column: 25, scope: !7408)
!7418 = !DILocation(line: 1960, column: 4, scope: !7408)
!7419 = !DILocation(line: 1960, column: 9, scope: !7408)
!7420 = !DILocation(line: 1960, column: 15, scope: !7408)
!7421 = !DILocation(line: 1961, column: 4, scope: !7408)
!7422 = !DILocation(line: 1968, column: 17, scope: !7408)
!7423 = !DILocation(line: 1968, column: 24, scope: !7408)
!7424 = !DILocation(line: 1968, column: 29, scope: !7408)
!7425 = !DILocation(line: 1968, column: 37, scope: !7408)
!7426 = !DILocation(line: 1968, column: 35, scope: !7408)
!7427 = !DILocation(line: 1968, column: 21, scope: !7408)
!7428 = !DILocation(line: 1968, column: 54, scope: !7408)
!7429 = !DILocation(line: 1968, column: 52, scope: !7408)
!7430 = !DILocation(line: 1968, column: 61, scope: !7408)
!7431 = !DILocation(line: 1968, column: 66, scope: !7408)
!7432 = !DILocation(line: 1968, column: 59, scope: !7408)
!7433 = !DILocation(line: 1968, column: 45, scope: !7408)
!7434 = !DILocation(line: 1968, column: 4, scope: !7408)
!7435 = !DILocation(line: 1968, column: 9, scope: !7408)
!7436 = !DILocation(line: 1968, column: 15, scope: !7408)
!7437 = !DILocation(line: 1969, column: 4, scope: !7408)
!7438 = !DILocation(line: 1977, column: 17, scope: !7408)
!7439 = !DILocation(line: 1977, column: 22, scope: !7408)
!7440 = !DILocation(line: 1977, column: 38, scope: !7408)
!7441 = !DILocation(line: 1977, column: 36, scope: !7408)
!7442 = !DILocation(line: 1977, column: 28, scope: !7408)
!7443 = !DILocation(line: 1977, column: 50, scope: !7408)
!7444 = !DILocation(line: 1977, column: 58, scope: !7408)
!7445 = !DILocation(line: 1977, column: 56, scope: !7408)
!7446 = !DILocation(line: 1977, column: 45, scope: !7408)
!7447 = !DILocation(line: 1977, column: 4, scope: !7408)
!7448 = !DILocation(line: 1977, column: 9, scope: !7408)
!7449 = !DILocation(line: 1977, column: 15, scope: !7408)
!7450 = !DILocation(line: 1978, column: 4, scope: !7408)
!7451 = !DILocation(line: 1980, column: 1, scope: !7357)
!7452 = distinct !DISubprogram(name: "nlaeval_fmodifiers_split_stacks", scope: !1, file: !1, line: 2050, type: !5116, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!7453 = !DILocalVariable(name: "list1", arg: 1, scope: !7452, file: !1, line: 2050, type: !1029)
!7454 = !DILocation(line: 2050, column: 55, scope: !7452)
!7455 = !DILocalVariable(name: "list2", arg: 2, scope: !7452, file: !1, line: 2050, type: !1029)
!7456 = !DILocation(line: 2050, column: 72, scope: !7452)
!7457 = !DILocalVariable(name: "fcm1", scope: !7452, file: !1, line: 2052, type: !7175)
!7458 = !DILocation(line: 2052, column: 13, scope: !7452)
!7459 = !DILocalVariable(name: "fcm2", scope: !7452, file: !1, line: 2052, type: !7175)
!7460 = !DILocation(line: 2052, column: 20, scope: !7452)
!7461 = !DILocation(line: 2055, column: 6, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7452, file: !1, line: 2055, column: 6)
!7463 = !DILocation(line: 2055, column: 6, scope: !7452)
!7464 = !DILocation(line: 2056, column: 3, scope: !7462)
!7465 = !DILocation(line: 2057, column: 6, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7452, file: !1, line: 2057, column: 6)
!7467 = !DILocation(line: 2057, column: 6, scope: !7452)
!7468 = !DILocation(line: 2058, column: 3, scope: !7466)
!7469 = !DILocation(line: 2061, column: 9, scope: !7452)
!7470 = !DILocation(line: 2061, column: 16, scope: !7452)
!7471 = !DILocation(line: 2061, column: 7, scope: !7452)
!7472 = !DILocation(line: 2062, column: 9, scope: !7452)
!7473 = !DILocation(line: 2062, column: 16, scope: !7452)
!7474 = !DILocation(line: 2062, column: 7, scope: !7452)
!7475 = !DILocation(line: 2065, column: 2, scope: !7452)
!7476 = !DILocation(line: 2065, column: 8, scope: !7452)
!7477 = !DILocation(line: 2065, column: 13, scope: !7452)
!7478 = !DILocation(line: 2066, column: 2, scope: !7452)
!7479 = !DILocation(line: 2066, column: 8, scope: !7452)
!7480 = !DILocation(line: 2066, column: 13, scope: !7452)
!7481 = !DILocation(line: 2067, column: 1, scope: !7452)
!7482 = distinct !DISubprogram(name: "nlaevalchan_find_match", scope: !1, file: !1, line: 1814, type: !7483, scopeLine: 1815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{!5901, !1029, !3402, !3413, !43}
!7485 = !DILocalVariable(name: "channels", arg: 1, scope: !7482, file: !1, line: 1814, type: !1029)
!7486 = !DILocation(line: 1814, column: 57, scope: !7482)
!7487 = !DILocalVariable(name: "ptr", arg: 2, scope: !7482, file: !1, line: 1814, type: !3402)
!7488 = !DILocation(line: 1814, column: 79, scope: !7482)
!7489 = !DILocalVariable(name: "prop", arg: 3, scope: !7482, file: !1, line: 1814, type: !3413)
!7490 = !DILocation(line: 1814, column: 97, scope: !7482)
!7491 = !DILocalVariable(name: "array_index", arg: 4, scope: !7482, file: !1, line: 1814, type: !43)
!7492 = !DILocation(line: 1814, column: 107, scope: !7482)
!7493 = !DILocalVariable(name: "nec", scope: !7482, file: !1, line: 1816, type: !5901)
!7494 = !DILocation(line: 1816, column: 18, scope: !7482)
!7495 = !DILocation(line: 1819, column: 6, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7482, file: !1, line: 1819, column: 6)
!7497 = !DILocation(line: 1819, column: 15, scope: !7496)
!7498 = !DILocation(line: 1819, column: 6, scope: !7482)
!7499 = !DILocation(line: 1820, column: 3, scope: !7496)
!7500 = !DILocation(line: 1823, column: 13, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7482, file: !1, line: 1823, column: 2)
!7502 = !DILocation(line: 1823, column: 23, scope: !7501)
!7503 = !DILocation(line: 1823, column: 11, scope: !7501)
!7504 = !DILocation(line: 1823, column: 7, scope: !7501)
!7505 = !DILocation(line: 1823, column: 30, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 1823, column: 2)
!7507 = !DILocation(line: 1823, column: 2, scope: !7501)
!7508 = !DILocation(line: 1829, column: 8, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7510, file: !1, line: 1829, column: 7)
!7510 = distinct !DILexicalBlock(scope: !7506, file: !1, line: 1823, column: 52)
!7511 = !DILocation(line: 1829, column: 13, scope: !7509)
!7512 = !DILocation(line: 1829, column: 17, scope: !7509)
!7513 = !DILocation(line: 1829, column: 25, scope: !7509)
!7514 = !DILocation(line: 1829, column: 30, scope: !7509)
!7515 = !DILocation(line: 1829, column: 22, scope: !7509)
!7516 = !DILocation(line: 1829, column: 36, scope: !7509)
!7517 = !DILocation(line: 1829, column: 40, scope: !7509)
!7518 = !DILocation(line: 1829, column: 45, scope: !7509)
!7519 = !DILocation(line: 1829, column: 53, scope: !7509)
!7520 = !DILocation(line: 1829, column: 50, scope: !7509)
!7521 = !DILocation(line: 1829, column: 59, scope: !7509)
!7522 = !DILocation(line: 1829, column: 63, scope: !7509)
!7523 = !DILocation(line: 1829, column: 68, scope: !7509)
!7524 = !DILocation(line: 1829, column: 77, scope: !7509)
!7525 = !DILocation(line: 1829, column: 74, scope: !7509)
!7526 = !DILocation(line: 1829, column: 7, scope: !7510)
!7527 = !DILocation(line: 1830, column: 11, scope: !7509)
!7528 = !DILocation(line: 1830, column: 4, scope: !7509)
!7529 = !DILocation(line: 1831, column: 2, scope: !7510)
!7530 = !DILocation(line: 1823, column: 41, scope: !7506)
!7531 = !DILocation(line: 1823, column: 46, scope: !7506)
!7532 = !DILocation(line: 1823, column: 39, scope: !7506)
!7533 = !DILocation(line: 1823, column: 2, scope: !7506)
!7534 = distinct !{!7534, !7507, !7535}
!7535 = !DILocation(line: 1831, column: 2, scope: !7501)
!7536 = !DILocation(line: 1834, column: 2, scope: !7482)
!7537 = !DILocation(line: 1835, column: 1, scope: !7482)
!7538 = distinct !DISubprogram(name: "nlaevalchan_value_init", scope: !1, file: !1, line: 1838, type: !7539, scopeLine: 1839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!7539 = !DISubroutineType(types: !7540)
!7540 = !{null, !5901}
!7541 = !DILocalVariable(name: "nec", arg: 1, scope: !7538, file: !1, line: 1838, type: !5901)
!7542 = !DILocation(line: 1838, column: 52, scope: !7538)
!7543 = !DILocalVariable(name: "ptr", scope: !7538, file: !1, line: 1840, type: !3402)
!7544 = !DILocation(line: 1840, column: 14, scope: !7538)
!7545 = !DILocation(line: 1840, column: 21, scope: !7538)
!7546 = !DILocation(line: 1840, column: 26, scope: !7538)
!7547 = !DILocalVariable(name: "prop", scope: !7538, file: !1, line: 1841, type: !3413)
!7548 = !DILocation(line: 1841, column: 15, scope: !7538)
!7549 = !DILocation(line: 1841, column: 22, scope: !7538)
!7550 = !DILocation(line: 1841, column: 27, scope: !7538)
!7551 = !DILocalVariable(name: "index", scope: !7538, file: !1, line: 1842, type: !43)
!7552 = !DILocation(line: 1842, column: 6, scope: !7538)
!7553 = !DILocation(line: 1842, column: 14, scope: !7538)
!7554 = !DILocation(line: 1842, column: 19, scope: !7538)
!7555 = !DILocation(line: 1848, column: 28, scope: !7538)
!7556 = !DILocation(line: 1848, column: 10, scope: !7538)
!7557 = !DILocation(line: 1848, column: 2, scope: !7538)
!7558 = !DILocation(line: 1850, column: 33, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !1, line: 1850, column: 8)
!7560 = distinct !DILexicalBlock(scope: !7538, file: !1, line: 1848, column: 35)
!7561 = !DILocation(line: 1850, column: 8, scope: !7559)
!7562 = !DILocation(line: 1850, column: 8, scope: !7560)
!7563 = !DILocation(line: 1851, column: 64, scope: !7559)
!7564 = !DILocation(line: 1851, column: 69, scope: !7559)
!7565 = !DILocation(line: 1851, column: 75, scope: !7559)
!7566 = !DILocation(line: 1851, column: 25, scope: !7559)
!7567 = !DILocation(line: 1851, column: 18, scope: !7559)
!7568 = !DILocation(line: 1851, column: 5, scope: !7559)
!7569 = !DILocation(line: 1851, column: 10, scope: !7559)
!7570 = !DILocation(line: 1851, column: 16, scope: !7559)
!7571 = !DILocation(line: 1853, column: 58, scope: !7559)
!7572 = !DILocation(line: 1853, column: 63, scope: !7559)
!7573 = !DILocation(line: 1853, column: 25, scope: !7559)
!7574 = !DILocation(line: 1853, column: 18, scope: !7559)
!7575 = !DILocation(line: 1853, column: 5, scope: !7559)
!7576 = !DILocation(line: 1853, column: 10, scope: !7559)
!7577 = !DILocation(line: 1853, column: 16, scope: !7559)
!7578 = !DILocation(line: 1854, column: 4, scope: !7560)
!7579 = !DILocation(line: 1856, column: 33, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7560, file: !1, line: 1856, column: 8)
!7581 = !DILocation(line: 1856, column: 8, scope: !7580)
!7582 = !DILocation(line: 1856, column: 8, scope: !7560)
!7583 = !DILocation(line: 1857, column: 60, scope: !7580)
!7584 = !DILocation(line: 1857, column: 65, scope: !7580)
!7585 = !DILocation(line: 1857, column: 71, scope: !7580)
!7586 = !DILocation(line: 1857, column: 25, scope: !7580)
!7587 = !DILocation(line: 1857, column: 18, scope: !7580)
!7588 = !DILocation(line: 1857, column: 5, scope: !7580)
!7589 = !DILocation(line: 1857, column: 10, scope: !7580)
!7590 = !DILocation(line: 1857, column: 16, scope: !7580)
!7591 = !DILocation(line: 1859, column: 54, scope: !7580)
!7592 = !DILocation(line: 1859, column: 59, scope: !7580)
!7593 = !DILocation(line: 1859, column: 25, scope: !7580)
!7594 = !DILocation(line: 1859, column: 18, scope: !7580)
!7595 = !DILocation(line: 1859, column: 5, scope: !7580)
!7596 = !DILocation(line: 1859, column: 10, scope: !7580)
!7597 = !DILocation(line: 1859, column: 16, scope: !7580)
!7598 = !DILocation(line: 1860, column: 4, scope: !7560)
!7599 = !DILocation(line: 1862, column: 33, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7560, file: !1, line: 1862, column: 8)
!7601 = !DILocation(line: 1862, column: 8, scope: !7600)
!7602 = !DILocation(line: 1862, column: 8, scope: !7560)
!7603 = !DILocation(line: 1863, column: 55, scope: !7600)
!7604 = !DILocation(line: 1863, column: 60, scope: !7600)
!7605 = !DILocation(line: 1863, column: 66, scope: !7600)
!7606 = !DILocation(line: 1863, column: 18, scope: !7600)
!7607 = !DILocation(line: 1863, column: 5, scope: !7600)
!7608 = !DILocation(line: 1863, column: 10, scope: !7600)
!7609 = !DILocation(line: 1863, column: 16, scope: !7600)
!7610 = !DILocation(line: 1865, column: 49, scope: !7600)
!7611 = !DILocation(line: 1865, column: 54, scope: !7600)
!7612 = !DILocation(line: 1865, column: 18, scope: !7600)
!7613 = !DILocation(line: 1865, column: 5, scope: !7600)
!7614 = !DILocation(line: 1865, column: 10, scope: !7600)
!7615 = !DILocation(line: 1865, column: 16, scope: !7600)
!7616 = !DILocation(line: 1866, column: 4, scope: !7560)
!7617 = !DILocation(line: 1868, column: 54, scope: !7560)
!7618 = !DILocation(line: 1868, column: 59, scope: !7560)
!7619 = !DILocation(line: 1868, column: 24, scope: !7560)
!7620 = !DILocation(line: 1868, column: 17, scope: !7560)
!7621 = !DILocation(line: 1868, column: 4, scope: !7560)
!7622 = !DILocation(line: 1868, column: 9, scope: !7560)
!7623 = !DILocation(line: 1868, column: 15, scope: !7560)
!7624 = !DILocation(line: 1869, column: 4, scope: !7560)
!7625 = !DILocation(line: 1871, column: 4, scope: !7560)
!7626 = !DILocation(line: 1873, column: 1, scope: !7538)
!7627 = distinct !DISubprogram(name: "nlaevalchan_buffers_accumulate", scope: !1, file: !1, line: 1983, type: !7628, scopeLine: 1984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!7628 = !DISubroutineType(types: !7629)
!7629 = !{null, !1029, !1029, !5514}
!7630 = !DILocalVariable(name: "channels", arg: 1, scope: !7627, file: !1, line: 1983, type: !1029)
!7631 = !DILocation(line: 1983, column: 54, scope: !7627)
!7632 = !DILocalVariable(name: "tmp_buffer", arg: 2, scope: !7627, file: !1, line: 1983, type: !1029)
!7633 = !DILocation(line: 1983, column: 74, scope: !7627)
!7634 = !DILocalVariable(name: "nes", arg: 3, scope: !7627, file: !1, line: 1983, type: !5514)
!7635 = !DILocation(line: 1983, column: 100, scope: !7627)
!7636 = !DILocalVariable(name: "nec", scope: !7627, file: !1, line: 1985, type: !5901)
!7637 = !DILocation(line: 1985, column: 18, scope: !7627)
!7638 = !DILocalVariable(name: "necn", scope: !7627, file: !1, line: 1985, type: !5901)
!7639 = !DILocation(line: 1985, column: 24, scope: !7627)
!7640 = !DILocalVariable(name: "necd", scope: !7627, file: !1, line: 1985, type: !5901)
!7641 = !DILocation(line: 1985, column: 31, scope: !7627)
!7642 = !DILocation(line: 1988, column: 28, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7627, file: !1, line: 1988, column: 6)
!7644 = !DILocation(line: 1988, column: 6, scope: !7643)
!7645 = !DILocation(line: 1988, column: 6, scope: !7627)
!7646 = !DILocation(line: 1989, column: 3, scope: !7643)
!7647 = !DILocation(line: 1992, column: 13, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7627, file: !1, line: 1992, column: 2)
!7649 = !DILocation(line: 1992, column: 25, scope: !7648)
!7650 = !DILocation(line: 1992, column: 11, scope: !7648)
!7651 = !DILocation(line: 1992, column: 7, scope: !7648)
!7652 = !DILocation(line: 1992, column: 32, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7648, file: !1, line: 1992, column: 2)
!7654 = !DILocation(line: 1992, column: 2, scope: !7648)
!7655 = !DILocation(line: 1994, column: 10, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7653, file: !1, line: 1992, column: 49)
!7657 = !DILocation(line: 1994, column: 15, scope: !7656)
!7658 = !DILocation(line: 1994, column: 8, scope: !7656)
!7659 = !DILocation(line: 1997, column: 33, scope: !7656)
!7660 = !DILocation(line: 1997, column: 44, scope: !7656)
!7661 = !DILocation(line: 1997, column: 49, scope: !7656)
!7662 = !DILocation(line: 1997, column: 54, scope: !7656)
!7663 = !DILocation(line: 1997, column: 59, scope: !7656)
!7664 = !DILocation(line: 1997, column: 65, scope: !7656)
!7665 = !DILocation(line: 1997, column: 70, scope: !7656)
!7666 = !DILocation(line: 1997, column: 10, scope: !7656)
!7667 = !DILocation(line: 1997, column: 8, scope: !7656)
!7668 = !DILocation(line: 2002, column: 7, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7656, file: !1, line: 2002, column: 7)
!7670 = !DILocation(line: 2002, column: 7, scope: !7656)
!7671 = !DILocation(line: 2003, column: 27, scope: !7669)
!7672 = !DILocation(line: 2003, column: 33, scope: !7669)
!7673 = !DILocation(line: 2003, column: 41, scope: !7669)
!7674 = !DILocation(line: 2003, column: 46, scope: !7669)
!7675 = !DILocation(line: 2003, column: 4, scope: !7669)
!7676 = !DILocation(line: 2005, column: 16, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7669, file: !1, line: 2004, column: 8)
!7678 = !DILocation(line: 2005, column: 28, scope: !7677)
!7679 = !DILocation(line: 2005, column: 4, scope: !7677)
!7680 = !DILocation(line: 2006, column: 16, scope: !7677)
!7681 = !DILocation(line: 2006, column: 26, scope: !7677)
!7682 = !DILocation(line: 2006, column: 4, scope: !7677)
!7683 = !DILocation(line: 2008, column: 2, scope: !7656)
!7684 = !DILocation(line: 1992, column: 43, scope: !7653)
!7685 = !DILocation(line: 1992, column: 41, scope: !7653)
!7686 = !DILocation(line: 1992, column: 2, scope: !7653)
!7687 = distinct !{!7687, !7654, !7688}
!7688 = !DILocation(line: 2008, column: 2, scope: !7648)
!7689 = !DILocation(line: 2011, column: 16, scope: !7627)
!7690 = !DILocation(line: 2011, column: 2, scope: !7627)
!7691 = !DILocation(line: 2012, column: 1, scope: !7627)
!7692 = distinct !DISubprogram(name: "animsys_evaluate_nla", scope: !1, file: !1, line: 2317, type: !7693, scopeLine: 2318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2334)
!7693 = !DISubroutineType(types: !7694)
!7694 = !{null, !1029, !3402, !230, !275}
!7695 = !DILocalVariable(name: "echannels", arg: 1, scope: !7692, file: !1, line: 2317, type: !1029)
!7696 = !DILocation(line: 2317, column: 44, scope: !7692)
!7697 = !DILocalVariable(name: "ptr", arg: 2, scope: !7692, file: !1, line: 2317, type: !3402)
!7698 = !DILocation(line: 2317, column: 67, scope: !7692)
!7699 = !DILocalVariable(name: "adt", arg: 3, scope: !7692, file: !1, line: 2317, type: !230)
!7700 = !DILocation(line: 2317, column: 82, scope: !7692)
!7701 = !DILocalVariable(name: "ctime", arg: 4, scope: !7692, file: !1, line: 2317, type: !275)
!7702 = !DILocation(line: 2317, column: 93, scope: !7692)
!7703 = !DILocalVariable(name: "nlt", scope: !7692, file: !1, line: 2319, type: !2723)
!7704 = !DILocation(line: 2319, column: 12, scope: !7692)
!7705 = !DILocalVariable(name: "track_index", scope: !7692, file: !1, line: 2320, type: !156)
!7706 = !DILocation(line: 2320, column: 8, scope: !7692)
!7707 = !DILocalVariable(name: "has_strips", scope: !7692, file: !1, line: 2321, type: !1529)
!7708 = !DILocation(line: 2321, column: 7, scope: !7692)
!7709 = !DILocalVariable(name: "estrips", scope: !7692, file: !1, line: 2323, type: !219)
!7710 = !DILocation(line: 2323, column: 11, scope: !7692)
!7711 = !DILocalVariable(name: "nes", scope: !7692, file: !1, line: 2324, type: !5514)
!7712 = !DILocation(line: 2324, column: 16, scope: !7692)
!7713 = !DILocalVariable(name: "dummy_strip", scope: !7692, file: !1, line: 2326, type: !262)
!7714 = !DILocation(line: 2326, column: 11, scope: !7692)
!7715 = !DILocation(line: 2330, column: 13, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7692, file: !1, line: 2330, column: 2)
!7717 = !DILocation(line: 2330, column: 18, scope: !7716)
!7718 = !DILocation(line: 2330, column: 29, scope: !7716)
!7719 = !DILocation(line: 2330, column: 11, scope: !7716)
!7720 = !DILocation(line: 2330, column: 7, scope: !7716)
!7721 = !DILocation(line: 2330, column: 36, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7716, file: !1, line: 2330, column: 2)
!7723 = !DILocation(line: 2330, column: 2, scope: !7716)
!7724 = !DILocation(line: 2332, column: 8, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !1, line: 2332, column: 7)
!7726 = distinct !DILexicalBlock(scope: !7722, file: !1, line: 2330, column: 73)
!7727 = !DILocation(line: 2332, column: 13, scope: !7725)
!7728 = !DILocation(line: 2332, column: 18, scope: !7725)
!7729 = !DILocation(line: 2332, column: 37, scope: !7725)
!7730 = !DILocation(line: 2332, column: 41, scope: !7725)
!7731 = !DILocation(line: 2332, column: 46, scope: !7725)
!7732 = !DILocation(line: 2332, column: 51, scope: !7725)
!7733 = !DILocation(line: 2332, column: 7, scope: !7726)
!7734 = !DILocation(line: 2333, column: 4, scope: !7725)
!7735 = !DILocation(line: 2336, column: 8, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7726, file: !1, line: 2336, column: 7)
!7737 = !DILocation(line: 2336, column: 13, scope: !7736)
!7738 = !DILocation(line: 2336, column: 18, scope: !7736)
!7739 = !DILocation(line: 2336, column: 40, scope: !7736)
!7740 = !DILocation(line: 2336, column: 44, scope: !7736)
!7741 = !DILocation(line: 2336, column: 49, scope: !7736)
!7742 = !DILocation(line: 2336, column: 54, scope: !7736)
!7743 = !DILocation(line: 2336, column: 71, scope: !7736)
!7744 = !DILocation(line: 2336, column: 7, scope: !7726)
!7745 = !DILocation(line: 2337, column: 4, scope: !7736)
!7746 = !DILocation(line: 2339, column: 7, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7726, file: !1, line: 2339, column: 7)
!7748 = !DILocation(line: 2339, column: 12, scope: !7747)
!7749 = !DILocation(line: 2339, column: 17, scope: !7747)
!7750 = !DILocation(line: 2339, column: 7, scope: !7726)
!7751 = !DILocation(line: 2340, column: 4, scope: !7747)
!7752 = !DILocation(line: 2345, column: 7, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7726, file: !1, line: 2345, column: 7)
!7754 = !DILocation(line: 2345, column: 12, scope: !7753)
!7755 = !DILocation(line: 2345, column: 19, scope: !7753)
!7756 = !DILocation(line: 2345, column: 7, scope: !7726)
!7757 = !DILocation(line: 2346, column: 15, scope: !7753)
!7758 = !DILocation(line: 2346, column: 4, scope: !7753)
!7759 = !DILocation(line: 2349, column: 46, scope: !7726)
!7760 = !DILocation(line: 2349, column: 51, scope: !7726)
!7761 = !DILocation(line: 2349, column: 59, scope: !7726)
!7762 = !DILocation(line: 2349, column: 72, scope: !7726)
!7763 = !DILocation(line: 2349, column: 9, scope: !7726)
!7764 = !DILocation(line: 2349, column: 7, scope: !7726)
!7765 = !DILocation(line: 2350, column: 7, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7726, file: !1, line: 2350, column: 7)
!7767 = !DILocation(line: 2350, column: 7, scope: !7726)
!7768 = !DILocation(line: 2350, column: 25, scope: !7766)
!7769 = !DILocation(line: 2350, column: 12, scope: !7766)
!7770 = !DILocation(line: 2350, column: 17, scope: !7766)
!7771 = !DILocation(line: 2350, column: 23, scope: !7766)
!7772 = !DILocation(line: 2351, column: 2, scope: !7726)
!7773 = !DILocation(line: 2330, column: 47, scope: !7722)
!7774 = !DILocation(line: 2330, column: 52, scope: !7722)
!7775 = !DILocation(line: 2330, column: 45, scope: !7722)
!7776 = !DILocation(line: 2330, column: 69, scope: !7722)
!7777 = !DILocation(line: 2330, column: 2, scope: !7722)
!7778 = distinct !{!7778, !7723, !7779}
!7779 = !DILocation(line: 2351, column: 2, scope: !7716)
!7780 = !DILocation(line: 2358, column: 7, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7692, file: !1, line: 2358, column: 6)
!7782 = !DILocation(line: 2358, column: 12, scope: !7781)
!7783 = !DILocation(line: 2358, column: 6, scope: !7781)
!7784 = !DILocation(line: 2358, column: 20, scope: !7781)
!7785 = !DILocation(line: 2358, column: 25, scope: !7781)
!7786 = !DILocation(line: 2358, column: 30, scope: !7781)
!7787 = !DILocation(line: 2358, column: 35, scope: !7781)
!7788 = !DILocation(line: 2358, column: 57, scope: !7781)
!7789 = !DILocation(line: 2358, column: 62, scope: !7781)
!7790 = !DILocation(line: 2358, column: 66, scope: !7781)
!7791 = !DILocation(line: 2358, column: 71, scope: !7781)
!7792 = !DILocation(line: 2358, column: 76, scope: !7781)
!7793 = !DILocation(line: 2358, column: 6, scope: !7692)
!7794 = !DILocation(line: 2360, column: 8, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7796, file: !1, line: 2360, column: 7)
!7796 = distinct !DILexicalBlock(scope: !7781, file: !1, line: 2358, column: 97)
!7797 = !DILocation(line: 2360, column: 7, scope: !7795)
!7798 = !DILocation(line: 2360, column: 20, scope: !7795)
!7799 = !DILocation(line: 2360, column: 24, scope: !7795)
!7800 = !DILocation(line: 2360, column: 29, scope: !7795)
!7801 = !DILocation(line: 2360, column: 23, scope: !7795)
!7802 = !DILocation(line: 2360, column: 7, scope: !7796)
!7803 = !DILocalVariable(name: "dummy_trackslist", scope: !7804, file: !1, line: 2362, type: !219)
!7804 = distinct !DILexicalBlock(scope: !7795, file: !1, line: 2360, column: 40)
!7805 = !DILocation(line: 2362, column: 13, scope: !7804)
!7806 = !DILocation(line: 2364, column: 53, scope: !7804)
!7807 = !DILocation(line: 2364, column: 46, scope: !7804)
!7808 = !DILocation(line: 2364, column: 51, scope: !7804)
!7809 = !DILocation(line: 2364, column: 21, scope: !7804)
!7810 = !DILocation(line: 2364, column: 27, scope: !7804)
!7811 = !DILocation(line: 2366, column: 9, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7804, file: !1, line: 2366, column: 8)
!7813 = !DILocation(line: 2366, column: 8, scope: !7812)
!7814 = !DILocation(line: 2366, column: 14, scope: !7812)
!7815 = !DILocation(line: 2366, column: 19, scope: !7812)
!7816 = !DILocation(line: 2366, column: 24, scope: !7812)
!7817 = !DILocation(line: 2366, column: 29, scope: !7812)
!7818 = !DILocation(line: 2366, column: 8, scope: !7804)
!7819 = !DILocation(line: 2368, column: 5, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7812, file: !1, line: 2366, column: 52)
!7821 = !DILocation(line: 2368, column: 26, scope: !7820)
!7822 = !DILocation(line: 2368, column: 31, scope: !7820)
!7823 = !DILocation(line: 2369, column: 36, scope: !7820)
!7824 = !DILocation(line: 2369, column: 41, scope: !7820)
!7825 = !DILocation(line: 2369, column: 17, scope: !7820)
!7826 = !DILocation(line: 2369, column: 22, scope: !7820)
!7827 = !DILocation(line: 2370, column: 4, scope: !7820)
!7828 = !DILocation(line: 2373, column: 23, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7812, file: !1, line: 2371, column: 9)
!7830 = !DILocation(line: 2373, column: 28, scope: !7829)
!7831 = !DILocation(line: 2373, column: 17, scope: !7829)
!7832 = !DILocation(line: 2373, column: 21, scope: !7829)
!7833 = !DILocation(line: 2374, column: 25, scope: !7829)
!7834 = !DILocation(line: 2374, column: 30, scope: !7829)
!7835 = !DILocation(line: 2374, column: 17, scope: !7829)
!7836 = !DILocation(line: 2374, column: 23, scope: !7829)
!7837 = !DILocation(line: 2377, column: 35, scope: !7829)
!7838 = !DILocation(line: 2377, column: 53, scope: !7829)
!7839 = !DILocation(line: 2377, column: 76, scope: !7829)
!7840 = !DILocation(line: 2377, column: 5, scope: !7829)
!7841 = !DILocation(line: 2378, column: 37, scope: !7829)
!7842 = !DILocation(line: 2378, column: 17, scope: !7829)
!7843 = !DILocation(line: 2378, column: 23, scope: !7829)
!7844 = !DILocation(line: 2379, column: 24, scope: !7829)
!7845 = !DILocation(line: 2379, column: 23, scope: !7829)
!7846 = !DILocation(line: 2379, column: 90, scope: !7829)
!7847 = !DILocation(line: 2379, column: 99, scope: !7829)
!7848 = !DILocation(line: 2379, column: 122, scope: !7829)
!7849 = !DILocation(line: 2379, column: 17, scope: !7829)
!7850 = !DILocation(line: 2379, column: 21, scope: !7829)
!7851 = !DILocation(line: 2381, column: 29, scope: !7829)
!7852 = !DILocation(line: 2381, column: 34, scope: !7829)
!7853 = !DILocation(line: 2381, column: 17, scope: !7829)
!7854 = !DILocation(line: 2381, column: 27, scope: !7829)
!7855 = !DILocation(line: 2382, column: 30, scope: !7829)
!7856 = !DILocation(line: 2382, column: 35, scope: !7829)
!7857 = !DILocation(line: 2382, column: 17, scope: !7829)
!7858 = !DILocation(line: 2382, column: 28, scope: !7829)
!7859 = !DILocation(line: 2383, column: 29, scope: !7829)
!7860 = !DILocation(line: 2383, column: 34, scope: !7829)
!7861 = !DILocation(line: 2383, column: 17, scope: !7829)
!7862 = !DILocation(line: 2383, column: 27, scope: !7829)
!7863 = !DILocation(line: 2386, column: 17, scope: !7829)
!7864 = !DILocation(line: 2386, column: 22, scope: !7829)
!7865 = !DILocation(line: 2390, column: 63, scope: !7804)
!7866 = !DILocation(line: 2390, column: 4, scope: !7804)
!7867 = !DILocation(line: 2391, column: 3, scope: !7804)
!7868 = !DILocation(line: 2395, column: 10, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7870, file: !1, line: 2395, column: 8)
!7870 = distinct !DILexicalBlock(scope: !7795, file: !1, line: 2392, column: 8)
!7871 = !DILocation(line: 2395, column: 16, scope: !7869)
!7872 = !DILocation(line: 2395, column: 8, scope: !7870)
!7873 = !DILocation(line: 2395, column: 27, scope: !7869)
!7874 = !DILocation(line: 2397, column: 28, scope: !7870)
!7875 = !DILocation(line: 2397, column: 33, scope: !7870)
!7876 = !DILocation(line: 2397, column: 38, scope: !7870)
!7877 = !DILocation(line: 2397, column: 46, scope: !7870)
!7878 = !DILocation(line: 2397, column: 51, scope: !7870)
!7879 = !DILocation(line: 2397, column: 58, scope: !7870)
!7880 = !DILocation(line: 2397, column: 4, scope: !7870)
!7881 = !DILocation(line: 2398, column: 4, scope: !7870)
!7882 = !DILocation(line: 2399, column: 4, scope: !7870)
!7883 = !DILocation(line: 2401, column: 2, scope: !7796)
!7884 = !DILocation(line: 2404, column: 6, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7692, file: !1, line: 2404, column: 6)
!7886 = !DILocation(line: 2404, column: 6, scope: !7692)
!7887 = !DILocation(line: 2405, column: 3, scope: !7885)
!7888 = !DILocation(line: 2409, column: 21, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7692, file: !1, line: 2409, column: 2)
!7890 = !DILocation(line: 2409, column: 13, scope: !7889)
!7891 = !DILocation(line: 2409, column: 11, scope: !7889)
!7892 = !DILocation(line: 2409, column: 7, scope: !7889)
!7893 = !DILocation(line: 2409, column: 28, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7889, file: !1, line: 2409, column: 2)
!7895 = !DILocation(line: 2409, column: 2, scope: !7889)
!7896 = !DILocation(line: 2410, column: 21, scope: !7894)
!7897 = !DILocation(line: 2410, column: 26, scope: !7894)
!7898 = !DILocation(line: 2410, column: 43, scope: !7894)
!7899 = !DILocation(line: 2410, column: 3, scope: !7894)
!7900 = !DILocation(line: 2409, column: 39, scope: !7894)
!7901 = !DILocation(line: 2409, column: 44, scope: !7894)
!7902 = !DILocation(line: 2409, column: 37, scope: !7894)
!7903 = !DILocation(line: 2409, column: 2, scope: !7894)
!7904 = distinct !{!7904, !7895, !7905}
!7905 = !DILocation(line: 2410, column: 46, scope: !7889)
!7906 = !DILocation(line: 2413, column: 2, scope: !7692)
!7907 = !DILocation(line: 2418, column: 6, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7692, file: !1, line: 2418, column: 6)
!7909 = !DILocation(line: 2418, column: 11, scope: !7908)
!7910 = !DILocation(line: 2418, column: 14, scope: !7908)
!7911 = !DILocation(line: 2418, column: 19, scope: !7908)
!7912 = !DILocation(line: 2418, column: 6, scope: !7692)
!7913 = !DILocalVariable(name: "id", scope: !7914, file: !1, line: 2419, type: !176)
!7914 = distinct !DILexicalBlock(scope: !7908, file: !1, line: 2418, column: 28)
!7915 = !DILocation(line: 2419, column: 7, scope: !7914)
!7916 = !DILocation(line: 2419, column: 12, scope: !7914)
!7917 = !DILocation(line: 2419, column: 17, scope: !7914)
!7918 = !DILocation(line: 2419, column: 20, scope: !7914)
!7919 = !DILocation(line: 2420, column: 9, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7914, file: !1, line: 2420, column: 7)
!7921 = !DILocation(line: 2420, column: 13, scope: !7920)
!7922 = !DILocation(line: 2420, column: 18, scope: !7920)
!7923 = !DILocation(line: 2420, column: 7, scope: !7914)
!7924 = !DILocation(line: 2421, column: 4, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7920, file: !1, line: 2420, column: 41)
!7926 = !DILocation(line: 2421, column: 8, scope: !7925)
!7927 = !DILocation(line: 2421, column: 13, scope: !7925)
!7928 = !DILocation(line: 2422, column: 22, scope: !7925)
!7929 = !DILocation(line: 2422, column: 28, scope: !7925)
!7930 = !DILocation(line: 2422, column: 4, scope: !7925)
!7931 = !DILocation(line: 2423, column: 3, scope: !7925)
!7932 = !DILocation(line: 2424, column: 2, scope: !7914)
!7933 = !DILocation(line: 2425, column: 1, scope: !7692)
